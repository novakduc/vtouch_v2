

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Feb 12 00:52:02 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBIGRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     9                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    17                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    21                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    22                           	psect	dataBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    23                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    24                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    25                           	psect	text0,global,reloc=2,class=CODE,delta=1
    26                           	psect	text1,global,reloc=2,class=CODE,delta=1
    27                           	psect	text2,global,reloc=2,class=CODE,delta=1
    28                           	psect	text3,global,reloc=2,class=CODE,delta=1
    29                           	psect	text4,global,reloc=2,class=CODE,delta=1
    30                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text6,global,reloc=2,class=CODE,delta=1
    32                           	psect	text7,global,reloc=2,class=CODE,delta=1
    33                           	psect	text8,global,reloc=2,class=CODE,delta=1
    34                           	psect	text9,global,reloc=2,class=CODE,delta=1
    35                           	psect	text10,global,reloc=2,class=CODE,delta=1
    36                           	psect	text11,global,reloc=2,class=CODE,delta=1
    37                           	psect	text12,global,reloc=2,class=CODE,delta=1
    38                           	psect	text13,global,reloc=2,class=CODE,delta=1
    39                           	psect	text14,global,reloc=2,class=CODE,delta=1
    40                           	psect	text15,global,reloc=2,class=CODE,delta=1
    41                           	psect	text16,global,reloc=2,class=CODE,delta=1
    42                           	psect	text17,global,reloc=2,class=CODE,delta=1
    43                           	psect	text18,global,reloc=2,class=CODE,delta=1
    44                           	psect	text19,global,reloc=2,class=CODE,delta=1
    45                           	psect	text20,global,reloc=2,class=CODE,delta=1
    46                           	psect	text21,global,reloc=2,class=CODE,delta=1
    47                           	psect	text22,global,reloc=2,class=CODE,delta=1
    48                           	psect	text23,global,reloc=2,class=CODE,delta=1
    49                           	psect	text24,global,reloc=2,class=CODE,delta=1
    50                           	psect	text25,global,reloc=2,class=CODE,delta=1
    51                           	psect	text26,global,reloc=2,class=CODE,delta=1
    52                           	psect	text27,global,reloc=2,class=CODE,delta=1
    53                           	psect	text28,global,reloc=2,class=CODE,delta=1
    54                           	psect	text29,global,reloc=2,class=CODE,delta=1
    55                           	psect	text30,global,reloc=2,class=CODE,delta=1
    56                           	psect	text31,global,reloc=2,class=CODE,delta=1
    57                           	psect	text32,global,reloc=2,class=CODE,delta=1
    58                           	psect	text33,global,reloc=2,class=CODE,delta=1
    59                           	psect	text34,global,reloc=2,class=CODE,delta=1
    60                           	psect	text35,global,reloc=2,class=CODE,delta=1
    61                           	psect	text36,global,reloc=2,class=CODE,delta=1
    62                           	psect	text37,global,reloc=2,class=CODE,delta=1
    63                           	psect	text38,global,reloc=2,class=CODE,delta=1
    64                           	psect	text39,global,reloc=2,class=CODE,delta=1
    65                           	psect	text40,global,reloc=2,class=CODE,delta=1
    66                           	psect	text41,global,reloc=2,class=CODE,delta=1
    67                           	psect	text42,global,reloc=2,class=CODE,delta=1
    68                           	psect	text43,global,reloc=2,class=CODE,delta=1
    69                           	psect	text44,global,reloc=2,class=CODE,delta=1
    70                           	psect	text45,global,reloc=2,class=CODE,delta=1
    71                           	psect	text46,global,reloc=2,class=CODE,delta=1
    72                           	psect	text47,global,reloc=2,class=CODE,delta=1
    73                           	psect	text48,global,reloc=2,class=CODE,delta=1
    74                           	psect	text49,global,reloc=2,class=CODE,delta=1
    75                           	psect	text50,global,reloc=2,class=CODE,delta=1
    76                           	psect	text51,global,reloc=2,class=CODE,delta=1
    77                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=2
    78                           	psect	text53,global,reloc=2,class=CODE,delta=1
    79                           	psect	text54,global,reloc=2,class=CODE,delta=1
    80                           	psect	text55,global,reloc=2,class=CODE,delta=1
    81                           	psect	text56,global,reloc=2,class=CODE,delta=1
    82                           	psect	text57,global,reloc=2,class=CODE,delta=1
    83                           	psect	text58,global,reloc=2,class=CODE,delta=1
    84                           	psect	text59,global,reloc=2,class=CODE,delta=1
    85                           	psect	text60,global,reloc=2,class=CODE,delta=1
    86                           	psect	text61,global,reloc=2,class=CODE,delta=1
    87                           	psect	text62,global,reloc=2,class=CODE,delta=1
    88                           	psect	text63,global,reloc=2,class=CODE,delta=1
    89                           	psect	text64,global,reloc=2,class=CODE,delta=1
    90                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=2
    91                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=2
    92                           	psect	text67,global,reloc=2,class=CODE,delta=1
    93                           	psect	text68,global,reloc=2,class=CODE,delta=1
    94                           	psect	text69,global,reloc=2,class=CODE,delta=1
    95                           	psect	text70,global,reloc=2,class=CODE,delta=1,group=2
    96                           	psect	text71,global,reloc=2,class=CODE,delta=1,group=2
    97                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=2
    98                           	psect	text73,global,reloc=2,class=CODE,delta=1
    99                           	psect	text74,global,reloc=2,class=CODE,delta=1,group=1
   100                           	psect	text75,global,reloc=2,class=CODE,delta=1,group=1
   101                           	psect	text76,global,reloc=2,class=CODE,delta=1,group=2
   102                           	psect	text77,global,reloc=2,class=CODE,delta=1
   103                           	psect	text78,global,reloc=2,class=CODE,delta=1
   104                           	psect	text79,global,reloc=2,class=CODE,delta=1,group=2
   105                           	psect	text80,global,reloc=2,class=CODE,delta=1,group=2
   106                           	psect	text81,global,reloc=2,class=CODE,delta=1,group=2
   107                           	psect	text82,global,reloc=2,class=CODE,delta=1,group=2
   108                           	psect	text83,global,reloc=2,class=CODE,delta=1,group=2
   109                           	psect	text84,global,reloc=2,class=CODE,delta=1,group=1
   110                           	psect	text85,global,reloc=2,class=CODE,delta=1,group=1
   111                           	psect	text86,global,reloc=2,class=CODE,delta=1,group=1
   112                           	psect	text87,global,reloc=2,class=CODE,delta=1,group=1
   113                           	psect	text88,global,reloc=2,class=CODE,delta=1,group=1
   114                           	psect	text89,global,reloc=2,class=CODE,delta=1
   115                           	psect	text90,global,reloc=2,class=CODE,delta=1,group=2
   116                           	psect	text91,global,reloc=2,class=CODE,delta=1,group=1
   117                           	psect	text92,global,reloc=2,class=CODE,delta=1,group=1
   118                           	psect	text93,global,reloc=2,class=CODE,delta=1
   119                           	psect	text94,global,reloc=2,class=CODE,delta=1
   120                           	psect	text95,global,reloc=2,class=CODE,delta=1,group=2
   121                           	psect	text96,global,reloc=2,class=CODE,delta=1,group=2
   122                           	psect	text97,global,reloc=2,class=CODE,delta=1,group=2
   123                           	psect	text98,global,reloc=2,class=CODE,delta=1
   124                           	psect	text99,global,reloc=2,class=CODE,delta=1
   125                           	psect	text100,global,reloc=2,class=CODE,delta=1,group=2
   126                           	psect	text101,global,reloc=2,class=CODE,delta=1,group=2
   127                           	psect	text102,global,reloc=2,class=CODE,delta=1,group=2
   128                           	psect	text103,global,reloc=2,class=CODE,delta=1
   129                           	psect	text104,global,reloc=2,class=CODE,delta=1
   130                           	psect	text105,global,reloc=2,class=CODE,delta=1
   131                           	psect	text106,global,reloc=2,class=CODE,delta=1
   132                           	psect	text107,global,reloc=2,class=CODE,delta=1
   133                           	psect	text108,global,reloc=2,class=CODE,delta=1
   134                           	psect	text109,global,reloc=2,class=CODE,delta=1
   135                           	psect	text110,global,reloc=2,class=CODE,delta=1
   136                           	psect	text111,global,reloc=2,class=CODE,delta=1
   137                           	psect	text112,global,reloc=2,class=CODE,delta=1,inline
   138                           	psect	text113,global,reloc=2,class=CODE,delta=1,inline
   139                           	psect	text114,global,reloc=2,class=CODE,delta=1
   140                           	psect	text115,global,reloc=2,class=CODE,delta=1
   141                           	psect	text116,global,reloc=2,class=CODE,delta=1,group=2
   142                           	psect	text117,global,reloc=2,class=CODE,delta=1
   143                           	psect	text118,global,reloc=2,class=CODE,delta=1,group=2
   144                           	psect	text119,global,reloc=2,class=CODE,delta=1
   145                           	psect	text120,global,reloc=2,class=CODE,delta=1,group=1
   146                           	psect	text121,global,reloc=2,class=CODE,delta=1,group=1
   147                           	psect	text122,global,reloc=2,class=CODE,delta=1,group=1
   148                           	psect	text123,global,reloc=2,class=CODE,delta=1
   149                           	psect	text124,global,reloc=2,class=CODE,delta=1
   150                           	psect	text125,global,reloc=2,class=CODE,delta=1
   151                           	psect	text126,global,reloc=2,class=CODE,delta=1
   152                           	psect	text127,global,reloc=2,class=CODE,delta=1,group=1
   153                           	psect	text128,global,reloc=2,class=CODE,delta=1,group=1
   154                           	psect	text129,global,reloc=2,class=CODE,delta=1,group=1
   155                           	psect	text130,global,reloc=2,class=CODE,delta=1
   156                           	psect	text131,global,reloc=2,class=CODE,delta=1
   157                           	psect	text132,global,reloc=2,class=CODE,delta=1
   158                           	psect	text133,global,reloc=2,class=CODE,delta=1
   159                           	psect	text134,global,reloc=2,class=CODE,delta=1
   160                           	psect	text135,global,reloc=2,class=CODE,delta=1
   161                           	psect	text136,global,reloc=2,class=CODE,delta=1
   162                           	psect	text137,global,reloc=2,class=CODE,delta=1
   163                           	psect	text138,global,reloc=2,class=CODE,delta=1
   164                           	psect	text139,global,reloc=2,class=CODE,delta=1
   165                           	psect	text140,global,reloc=2,class=CODE,delta=1
   166                           	psect	text141,global,reloc=2,class=CODE,delta=1
   167                           	psect	text142,global,reloc=2,class=CODE,delta=1
   168                           	psect	text143,global,reloc=2,class=CODE,delta=1
   169                           	psect	text144,global,reloc=2,class=CODE,delta=1
   170                           	psect	text145,global,reloc=2,class=CODE,delta=1
   171                           	psect	text146,global,reloc=2,class=CODE,delta=1
   172                           	psect	text147,global,reloc=2,class=CODE,delta=1
   173                           	psect	text148,global,reloc=2,class=CODE,delta=1
   174                           	psect	text149,global,reloc=2,class=CODE,delta=1
   175                           	psect	text150,global,reloc=2,class=CODE,delta=1
   176                           	psect	text151,global,reloc=2,class=CODE,delta=1
   177                           	psect	text152,global,reloc=2,class=CODE,delta=1
   178                           	psect	text153,global,reloc=2,class=CODE,delta=1
   179                           	psect	text154,global,reloc=2,class=CODE,delta=1
   180                           	psect	text155,global,reloc=2,class=CODE,delta=1
   181                           	psect	text156,global,reloc=2,class=CODE,delta=1
   182                           	psect	text157,global,reloc=2,class=CODE,delta=1
   183                           	psect	text158,global,reloc=2,class=CODE,delta=1
   184                           	psect	text159,global,reloc=2,class=CODE,delta=1
   185                           	psect	text160,global,reloc=4,class=CODE,delta=1
   186                           	psect	text161,global,reloc=2,class=CODE,delta=1
   187                           	psect	text162,global,reloc=2,class=CODE,delta=1
   188                           	psect	text163,global,reloc=2,class=CODE,delta=1
   189                           	psect	text164,global,reloc=4,class=CODE,delta=1
   190                           	psect	text165,global,reloc=2,class=CODE,delta=1
   191                           	psect	text166,global,reloc=2,class=CODE,delta=1
   192                           	psect	text167,global,reloc=2,class=CODE,delta=1
   193                           	psect	text168,global,reloc=2,class=CODE,delta=1
   194                           	psect	text169,global,reloc=2,class=CODE,delta=1
   195                           	psect	text170,global,reloc=2,class=CODE,delta=1
   196                           	psect	text171,global,reloc=4,class=CODE,delta=1
   197                           	psect	text172,global,reloc=2,class=CODE,delta=1
   198                           	psect	text173,global,reloc=2,class=CODE,delta=1
   199                           	psect	text174,global,reloc=2,class=CODE,delta=1
   200                           	psect	text175,global,reloc=2,class=CODE,delta=1
   201                           	psect	text176,global,reloc=2,class=CODE,delta=1
   202                           	psect	text177,global,reloc=2,class=CODE,delta=1
   203                           	psect	text178,global,reloc=2,class=CODE,delta=1,group=1
   204                           	psect	text179,global,reloc=4,class=CODE,delta=1
   205                           	psect	text180,global,reloc=2,class=CODE,delta=1
   206                           	psect	text181,global,reloc=2,class=CODE,delta=1
   207                           	psect	text182,global,reloc=4,class=CODE,delta=1
   208                           	psect	text183,global,reloc=4,class=CODE,delta=1
   209                           	psect	text184,global,reloc=2,class=CODE,delta=1
   210                           	psect	text185,global,reloc=2,class=CODE,delta=1
   211                           	psect	text186,global,reloc=2,class=CODE,delta=1
   212                           	psect	text187,global,reloc=4,class=CODE,delta=1
   213                           	psect	text188,global,reloc=4,class=CODE,delta=1
   214                           	psect	text189,global,reloc=2,class=CODE,delta=1
   215                           	psect	text190,global,reloc=4,class=CODE,delta=1
   216                           	psect	text191,global,reloc=2,class=CODE,delta=1
   217                           	psect	text192,global,reloc=4,class=CODE,delta=1
   218                           	psect	text193,global,reloc=2,class=CODE,delta=1
   219                           	psect	text194,global,reloc=4,class=CODE,delta=1
   220                           	psect	text195,global,reloc=2,class=CODE,delta=1
   221                           	psect	text196,global,reloc=2,class=CODE,delta=1
   222                           	psect	text197,global,reloc=4,class=CODE,delta=1
   223                           	psect	text198,global,reloc=4,class=CODE,delta=1
   224                           	psect	text199,global,reloc=4,class=CODE,delta=1
   225                           	psect	text200,global,reloc=4,class=CODE,delta=1
   226                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   227                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   228                           	psect	text201,global,reloc=4,class=CODE,delta=1
   229                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   230                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   231  0000                     
   232                           ; Version 2.10
   233                           ; Generated 31/07/2019 GMT
   234                           ; 
   235                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   236                           ; All rights reserved.
   237                           ; 
   238                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   239                           ; 
   240                           ; Redistribution and use in source and binary forms, with or without modification, are
   241                           ; permitted provided that the following conditions are met:
   242                           ; 
   243                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   244                           ;        conditions and the following disclaimer.
   245                           ; 
   246                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   247                           ;        of conditions and the following disclaimer in the documentation and/or other
   248                           ;        materials provided with the distribution.
   249                           ; 
   250                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   251                           ;        software without specific prior written permission.
   252                           ; 
   253                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   254                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   255                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   256                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   257                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   258                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   259                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   260                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   261                           ; 
   262                           ; 
   263                           ; Code-generator required, PIC18F57K42 Definitions
   264                           ; 
   265                           ; SFR Addresses
   266  0000                     
   267 ;;_main$3982	offset	0
   268 ;;_main$3978	offset	2
   269 ;;_esr_temp	offset	4
   270 ;;_i_esr	offset	8
   271 ;;_shape	offset	10
   272 ;;_inp_index	offset	11
   273 ;;_k	offset	12
   274 ;;_j	offset	13
   275 ;;_i	offset	14
   276 ;;_mode	offset	15
   277 ;;_i_ror	offset	16
   278 ;;_mode	offset=-1 (param)
   279 ;;_hist	offset=-3 (param)
   280 ;;_s	offset=-2 (param)
   281 ;;_voltage	offset=-4 (param)
   282 ;;_voltage	offset=-4 (param)
   283 ;;_voltage	offset=-4 (param)
   284 ;;_set	offset=-1 (param)
   285 ;;_x	offset	0
   286 ;;_r_cal_ptr	offset	2
   287 ;;_y	offset	4
   288 ;;_crcVal_save	offset	6
   289 ;;_bAdd	offset=-2 (param)
   290 ;;_data	offset=-1 (param)
   291 ;;_cmd	offset=-1 (param)
   292 ;;_cmd	offset=-1 (param)
   293 ;;_data	offset=-1 (param)
   294 ;;__this	offset=-2 (param)
   295 ;;_soc	offset	0
   296 ;;_slot	offset	2
   297 ;;_cvoltage	offset=-4 (param)
   298 ;;_h	offset=-1 (param)
   299 ;;_h	offset=-1 (param)
   300 ;;_fsm	offset=-1 (param)
   301 ;;_mode	offset=-1 (param)
   302 ;;_mode	offset=-1 (param)
   303 ;;_cmd	offset=-1 (param)
   304 ;;_cp	offset	0
   305 ;;_cb	offset	4
   306 ;;_cpz	offset	8
   307 ;;_cbz	offset	12
   308 ;;_x	offset	16
   309 ;;_x	offset	0
   310 ;;_r_cal_ptr	offset	2
   311 ;;_y	offset	4
   312 ;;_crcVal	offset	6
   313 ;;_GIEBitValue	offset	0
   314 ;;_bAdd	offset=-2 (param)
   315 ;;_bData	offset=-3 (param)
   316 ;;_result	offset	0
   317 ;;_mask	offset	2
   318 ;;_reverse	offset=-1 (param)
   319 ;;_xorValue	offset=-3 (param)
   320 ;;_mask	offset	0
   321 ;;_reverse	offset	2
   322 ;;_crc	offset=-2 (param)
   323 ;;_data	offset=-1 (param)
   324 ;;_channel	offset=-1 (param)
   325 ;;_c	offset	0
   326 ;;_shape	offset=-1 (param)
   327 ;;_reset	offset=-2 (param)
   328 ;;_i	offset=-1 (param)
   329 ;;_i	offset=-1 (param)
   330 ;;_mode	offset=-1 (param)
   331 ;;_cb	offset=-3 (param)
   332 ;;_cp	offset=-5 (param)
   333 ;;_mode	offset=-1 (param)
   334 ;;_cb	offset=-3 (param)
   335 ;;_cp	offset=-5 (param)
   336 ;;_scaleb	offset=-9 (param)
   337 ;;_scalep	offset=-13 (param)
   338 ;;_value	offset=-2 (param)
   339 ;;_window	offset=-4 (param)
   340 ;;_standard	offset=-6 (param)
   341 ;;_i	offset	0
   342 ;;_h	offset=-1 (param)
   343 ;;_flipper	offset=-1 (param)
   344 ;;_f	offset	0
   345 ;;_ap	offset	6
   346 ;;_s	offset=-3 (param)
   347 ;;_fmt	offset=-5 (param)
   348 ;;_line	offset=-1 (param)
   349 ;;_vterm	offset=-2 (param)
   350 ;;_numMilliseconds	offset=-2 (param)
   351 ;;_vterm	offset=-1 (param)
   352 ;;_row	offset	0
   353 ;;_r	offset=-1 (param)
   354 ;;_c	offset=-2 (param)
   355 ;;_strPtr	offset=-4 (param)
   356 ;;_strPtr	offset=-1 (param)
   357 ;;_delay	offset=-4 (param)
   358 ;;_strPtr	offset=-1 (param)
   359 ;;_strPtr	offset=-2 (param)
   360 ;;__this	offset=-2 (param)
   361 ;;_clearBuffer	offset=-3 (param)
   362 ;;_s	offset	0
   363 ;;_k	offset	2
   364 ;;_dest	offset=-2 (param)
   365 ;;_c	offset=-4 (param)
   366 ;;_n	offset=-6 (param)
   367 ;;_ap	offset	0
   368 ;;_fmt	offset=-3 (param)
   369 ;;_cfmt	offset	0
   370 ;;_fp	offset=-2 (param)
   371 ;;_fmt	offset=-4 (param)
   372 ;;_ap	offset=-6 (param)
   373 ;;_vfpfcnvrt$6578	offset	0
   374 ;;_vfpfcnvrt$6589	offset	2
   375 ;;_vfpfcnvrt$6577	offset	4
   376 ;;_llu	offset	6
   377 ;;_ll	offset	14
   378 ;;_f	offset	22
   379 ;;_ct	offset	26
   380 ;;_cp	offset	29
   381 ;;_c	offset	31
   382 ;;_fp	offset=-2 (param)
   383 ;;_fmt	offset=-4 (param)
   384 ;;_ap	offset=-6 (param)
   385 ;;_xtoa$6563	offset	0
   386 ;;_xtoa$6562	offset	2
   387 ;;_n	offset	4
   388 ;;_c	offset	12
   389 ;;_i	offset	14
   390 ;;_w	offset	16
   391 ;;_p	offset	18
   392 ;;_fp	offset=-2 (param)
   393 ;;_d	offset=-10 (param)
   394 ;;_x	offset=-11 (param)
   395 ;;_toupper$7369	offset	0
   396 ;;_c	offset=-2 (param)
   397 ;;_c	offset=-2 (param)
   398 ;;_c	offset=-2 (param)
   399 ;;_n	offset	0
   400 ;;_i	offset	8
   401 ;;_w	offset	10
   402 ;;_p	offset	12
   403 ;;_fp	offset=-2 (param)
   404 ;;_d	offset=-10 (param)
   405 ;;_counter	offset	0
   406 ;;_dividend	offset=-8 (param)
   407 ;;_divisor	offset=-16 (param)
   408 ;;_quotient	offset	0
   409 ;;_counter	offset	8
   410 ;;_dividend	offset=-8 (param)
   411 ;;_divisor	offset=-16 (param)
   412 ;;_r	offset	0
   413 ;;_l	offset	2
   414 ;;__l	offset=-2 (param)
   415 ;;__r	offset=-4 (param)
   416 ;;_n	offset=-6 (param)
   417 ;;_nuls	offset	0
   418 ;;_l	offset	7
   419 ;;_p	offset	9
   420 ;;_cp	offset	11
   421 ;;_w	offset	13
   422 ;;_i	offset	15
   423 ;;_fp	offset=-2 (param)
   424 ;;_s	offset=-4 (param)
   425 ;;_efgtoa$6535	offset	0
   426 ;;_efgtoa$6534	offset	2
   427 ;;_efgtoa$6533	offset	4
   428 ;;_efgtoa$6529	offset	6
   429 ;;_efgtoa$6525	offset	8
   430 ;;_efgtoa$6524	offset	10
   431 ;;_u	offset	12
   432 ;;_g	offset	16
   433 ;;_l	offset	20
   434 ;;_h	offset	24
   435 ;;_ou	offset	28
   436 ;;_n	offset	32
   437 ;;_e	offset	34
   438 ;;_i	offset	36
   439 ;;_w	offset	38
   440 ;;_p	offset	40
   441 ;;_sign	offset	42
   442 ;;_d	offset	44
   443 ;;_ne	offset	46
   444 ;;_m	offset	48
   445 ;;_pp	offset	50
   446 ;;_t	offset	52
   447 ;;_mode	offset	54
   448 ;;_nmode	offset	55
   449 ;;_fp	offset=-2 (param)
   450 ;;_f	offset=-6 (param)
   451 ;;_c	offset=-7 (param)
   452 ;;_tolower$7354	offset	0
   453 ;;_c	offset=-2 (param)
   454 ;;_c	offset=-2 (param)
   455 ;;_d	offset	0
   456 ;;_s	offset	2
   457 ;;_dest	offset=-2 (param)
   458 ;;_src	offset=-4 (param)
   459 ;;_u	offset	0
   460 ;;_m	offset	4
   461 ;;_e	offset	8
   462 ;;_x	offset=-4 (param)
   463 ;;_u	offset	0
   464 ;;_e	offset	4
   465 ;;_x	offset=-4 (param)
   466 ;;_exp1	offset	0
   467 ;;_sign1	offset	1
   468 ;;_f1	offset=-4 (param)
   469 ;;_f1	offset=-4 (param)
   470 ;;_ff1	offset=-4 (param)
   471 ;;_ff2	offset=-8 (param)
   472 ;;_sign	offset	0
   473 ;;_counter	offset	1
   474 ;;_dividend	offset=-2 (param)
   475 ;;_divisor	offset=-4 (param)
   476 ;;_quotient	offset	0
   477 ;;_sign	offset	2
   478 ;;_counter	offset	3
   479 ;;_dividend	offset=-2 (param)
   480 ;;_divisor	offset=-4 (param)
   481 ;;_dtoa$6501	offset	0
   482 ;;_n	offset	2
   483 ;;_i	offset	10
   484 ;;_s	offset	12
   485 ;;_w	offset	14
   486 ;;_p	offset	16
   487 ;;_fp	offset=-2 (param)
   488 ;;_d	offset=-10 (param)
   489 ;;_a	offset=-2 (param)
   490 ;;_sign	offset	0
   491 ;;_counter	offset	1
   492 ;;_dividend	offset=-8 (param)
   493 ;;_divisor	offset=-16 (param)
   494 ;;_quotient	offset	0
   495 ;;_sign	offset	8
   496 ;;_counter	offset	9
   497 ;;_dividend	offset=-8 (param)
   498 ;;_divisor	offset=-16 (param)
   499 ;;_w	offset	0
   500 ;;_fp	offset=-2 (param)
   501 ;;_c	offset=-3 (param)
   502 ;;_w	offset	0
   503 ;;_i	offset	2
   504 ;;_fp	offset=-2 (param)
   505 ;;_buf	offset=-4 (param)
   506 ;;_p	offset=-6 (param)
   507 ;;_a	offset	0
   508 ;;_s	offset=-2 (param)
   509 ;;_i	offset	0
   510 ;;_c	offset	2
   511 ;;_s	offset=-2 (param)
   512 ;;_fp	offset=-4 (param)
   513 ;;_c	offset=-2 (param)
   514 ;;_fp	offset=-4 (param)
   515 ;;_c	offset=-1 (param)
   516 ;;__this	offset=-2 (param)
   517 ;;_c	offset=-3 (param)
   518 ;;_atoi$7085	offset	0
   519 ;;_atoi$7083	offset	2
   520 ;;_atoi$7084	offset	4
   521 ;;_n	offset	5
   522 ;;_neg	offset	7
   523 ;;_s	offset=-2 (param)
   524 ;;_isspace$7134	offset	0
   525 ;;_c	offset=-2 (param)
   526 ;;_c	offset=-2 (param)
   527 ;;_vterm	offset=-1 (param)
   528 ;;_new_response_info	offset=-1 (param)
   529 ;;_new_response_info	offset=-1 (param)
   530 ;;_level	offset=-2 (param)
   531 ;;_dutyValue	offset=-2 (param)
   532 ;;_timer	offset=-1 (param)
   533 ;;_timer	offset=-1 (param)
   534 ;;_count	offset=-3 (param)
   535 ;;_h	offset=-1 (param)
   536 ;;_u	offset	0
   537 ;;_x	offset=-4 (param)
   538 ;;_chan	offset=-1 (param)
   539 ;;_to_what	offset=-2 (param)
   540 ;;_u	offset	0
   541 ;;_s	offset=-2 (param)
   542 ;;_index	offset=-1 (param)
   543 ;;_arg	offset	0
   544 ;;_exp	offset	4
   545 ;;_sign	offset=-1 (param)
   546 ;;_val	offset=-5 (param)
   547 ;;_grs	offset	0
   548 ;;_rem	offset	4
   549 ;;_new_exp	offset	8
   550 ;;_aexp	offset	10
   551 ;;_bexp	offset	11
   552 ;;_sign	offset	12
   553 ;;_b	offset=-4 (param)
   554 ;;_a	offset=-8 (param)
   555 ;;_ff1	offset=-4 (param)
   556 ;;_ff2	offset=-8 (param)
   557 ;;_lp_speed	offset	0
   558 ;;_new	offset=-4 (param)
   559 ;;_bn	offset=-5 (param)
   560 ;;_slow	offset=-6 (param)
   561 ;;_b	offset=-4 (param)
   562 ;;_a	offset=-8 (param)
   563 ;;_grs	offset	0
   564 ;;_bexp	offset	1
   565 ;;_aexp	offset	2
   566 ;;_signs	offset	3
   567 ;;_b	offset=-4 (param)
   568 ;;_a	offset=-8 (param)
   569 ;;_prod	offset	0
   570 ;;_grs	offset	4
   571 ;;_temp	offset	8
   572 ;;_bexp	offset	10
   573 ;;_aexp	offset	11
   574 ;;_sign	offset	12
   575 ;;_b	offset=-4 (param)
   576 ;;_a	offset=-8 (param)
   577 ;;_InterruptHandler	offset=-3 (param)
   578 ;;_InterruptHandler	offset=-3 (param)
   579 ;;_InterruptHandler	offset=-3 (param)
   580 ;;_InterruptHandler	offset=-3 (param)
   581 ;;_InterruptHandler	offset=-3 (param)
   582 ;;_InterruptHandler	offset=-3 (param)
   583 ;;_state	offset	0
   584 ;;_InterruptHandler	offset=-3 (param)
   585 ;;_InterruptHandler	offset=-3 (param)
   586 ;;_seed	offset	0
   587 ;;_poly	offset	2
   588 ;;_InterruptHandler	offset=-3 (param)
   589 ;;_InterruptHandler	offset=-3 (param)
   590 ;;_i	offset	0
   591 ;;_sw_value	offset	1
   592 ;;_timerVal	offset=-2 (param)
   593 ;;_light	offset	0
   594 ;;_mode	offset=-1 (param)
   595 ;;_chan	offset=-1 (param)
   596 ;;_to_what	offset=-2 (param)
   597 ;;_u	offset	0
   598 ;;_s	offset=-2 (param)
   599 ;;_index	offset=-1 (param)
   600 ;;_arg	offset	0
   601 ;;_exp	offset	4
   602 ;;_sign	offset=-1 (param)
   603 ;;_val	offset=-5 (param)
   604 ;;_b	offset=-4 (param)
   605 ;;_a	offset=-8 (param)
   606 ;;_grs	offset	0
   607 ;;_bexp	offset	1
   608 ;;_aexp	offset	2
   609 ;;_signs	offset	3
   610 ;;_b	offset=-4 (param)
   611 ;;_a	offset=-8 (param)
   612 ;;_prod	offset	0
   613 ;;_grs	offset	4
   614 ;;_temp	offset	8
   615 ;;_bexp	offset	10
   616 ;;_aexp	offset	11
   617 ;;_sign	offset	12
   618 ;;_b	offset=-4 (param)
   619 ;;_a	offset=-8 (param)
   620 ;;_grs	offset	0
   621 ;;_rem	offset	4
   622 ;;_new_exp	offset	8
   623 ;;_aexp	offset	10
   624 ;;_bexp	offset	11
   625 ;;_sign	offset	12
   626 ;;_b	offset=-4 (param)
   627 ;;_a	offset=-8 (param)
   628 ;;_ff1	offset=-4 (param)
   629 ;;_ff2	offset=-8 (param)
   630 ;;_timerVal	offset=-2 (param)
   631 ;;_adj	offset	0
   632 ;;_log_ptr	offset	4
   633 ;;_f	offset	0
   634 ;;_ap	offset	6
   635 ;;_s	offset=-3 (param)
   636 ;;_fmt	offset=-5 (param)
   637 ;;_cfmt	offset	0
   638 ;;_fp	offset=-2 (param)
   639 ;;_fmt	offset=-4 (param)
   640 ;;_ap	offset=-6 (param)
   641 ;;_vfpfcnvrt$6578	offset	0
   642 ;;_vfpfcnvrt$6589	offset	2
   643 ;;_vfpfcnvrt$6577	offset	4
   644 ;;_llu	offset	6
   645 ;;_ll	offset	14
   646 ;;_f	offset	22
   647 ;;_ct	offset	26
   648 ;;_cp	offset	29
   649 ;;_c	offset	31
   650 ;;_fp	offset=-2 (param)
   651 ;;_fmt	offset=-4 (param)
   652 ;;_ap	offset=-6 (param)
   653 ;;_xtoa$6563	offset	0
   654 ;;_xtoa$6562	offset	2
   655 ;;_n	offset	4
   656 ;;_c	offset	12
   657 ;;_i	offset	14
   658 ;;_w	offset	16
   659 ;;_p	offset	18
   660 ;;_fp	offset=-2 (param)
   661 ;;_d	offset=-10 (param)
   662 ;;_x	offset=-11 (param)
   663 ;;_toupper$7369	offset	0
   664 ;;_c	offset=-2 (param)
   665 ;;_c	offset=-2 (param)
   666 ;;_c	offset=-2 (param)
   667 ;;_n	offset	0
   668 ;;_i	offset	8
   669 ;;_w	offset	10
   670 ;;_p	offset	12
   671 ;;_fp	offset=-2 (param)
   672 ;;_d	offset=-10 (param)
   673 ;;_counter	offset	0
   674 ;;_dividend	offset=-8 (param)
   675 ;;_divisor	offset=-16 (param)
   676 ;;_quotient	offset	0
   677 ;;_counter	offset	8
   678 ;;_dividend	offset=-8 (param)
   679 ;;_divisor	offset=-16 (param)
   680 ;;_r	offset	0
   681 ;;_l	offset	2
   682 ;;__l	offset=-2 (param)
   683 ;;__r	offset=-4 (param)
   684 ;;_n	offset=-6 (param)
   685 ;;_nuls	offset	0
   686 ;;_l	offset	7
   687 ;;_p	offset	9
   688 ;;_cp	offset	11
   689 ;;_w	offset	13
   690 ;;_i	offset	15
   691 ;;_fp	offset=-2 (param)
   692 ;;_s	offset=-4 (param)
   693 ;;_efgtoa$6535	offset	0
   694 ;;_efgtoa$6534	offset	2
   695 ;;_efgtoa$6533	offset	4
   696 ;;_efgtoa$6529	offset	6
   697 ;;_efgtoa$6525	offset	8
   698 ;;_efgtoa$6524	offset	10
   699 ;;_u	offset	12
   700 ;;_g	offset	16
   701 ;;_l	offset	20
   702 ;;_h	offset	24
   703 ;;_ou	offset	28
   704 ;;_n	offset	32
   705 ;;_e	offset	34
   706 ;;_i	offset	36
   707 ;;_w	offset	38
   708 ;;_p	offset	40
   709 ;;_sign	offset	42
   710 ;;_d	offset	44
   711 ;;_ne	offset	46
   712 ;;_m	offset	48
   713 ;;_pp	offset	50
   714 ;;_t	offset	52
   715 ;;_mode	offset	54
   716 ;;_nmode	offset	55
   717 ;;_fp	offset=-2 (param)
   718 ;;_f	offset=-6 (param)
   719 ;;_c	offset=-7 (param)
   720 ;;_tolower$7354	offset	0
   721 ;;_c	offset=-2 (param)
   722 ;;_c	offset=-2 (param)
   723 ;;_d	offset	0
   724 ;;_s	offset	2
   725 ;;_dest	offset=-2 (param)
   726 ;;_src	offset=-4 (param)
   727 ;;_u	offset	0
   728 ;;_m	offset	4
   729 ;;_e	offset	8
   730 ;;_x	offset=-4 (param)
   731 ;;_u	offset	0
   732 ;;_e	offset	4
   733 ;;_x	offset=-4 (param)
   734 ;;_exp1	offset	0
   735 ;;_sign1	offset	1
   736 ;;_f1	offset=-4 (param)
   737 ;;_f1	offset=-4 (param)
   738 ;;_ff1	offset=-4 (param)
   739 ;;_ff2	offset=-8 (param)
   740 ;;_sign	offset	0
   741 ;;_counter	offset	1
   742 ;;_dividend	offset=-2 (param)
   743 ;;_divisor	offset=-4 (param)
   744 ;;_quotient	offset	0
   745 ;;_sign	offset	2
   746 ;;_counter	offset	3
   747 ;;_dividend	offset=-2 (param)
   748 ;;_divisor	offset=-4 (param)
   749 ;;_dtoa$6501	offset	0
   750 ;;_n	offset	2
   751 ;;_i	offset	10
   752 ;;_s	offset	12
   753 ;;_w	offset	14
   754 ;;_p	offset	16
   755 ;;_fp	offset=-2 (param)
   756 ;;_d	offset=-10 (param)
   757 ;;_a	offset=-2 (param)
   758 ;;_sign	offset	0
   759 ;;_counter	offset	1
   760 ;;_dividend	offset=-8 (param)
   761 ;;_divisor	offset=-16 (param)
   762 ;;_quotient	offset	0
   763 ;;_sign	offset	8
   764 ;;_counter	offset	9
   765 ;;_dividend	offset=-8 (param)
   766 ;;_divisor	offset=-16 (param)
   767 ;;_w	offset	0
   768 ;;_fp	offset=-2 (param)
   769 ;;_c	offset=-3 (param)
   770 ;;_w	offset	0
   771 ;;_i	offset	2
   772 ;;_fp	offset=-2 (param)
   773 ;;_buf	offset=-4 (param)
   774 ;;_p	offset=-6 (param)
   775 ;;_a	offset	0
   776 ;;_s	offset=-2 (param)
   777 ;;_i	offset	0
   778 ;;_c	offset	2
   779 ;;_s	offset=-2 (param)
   780 ;;_fp	offset=-4 (param)
   781 ;;_c	offset=-2 (param)
   782 ;;_fp	offset=-4 (param)
   783 ;;_c	offset=-1 (param)
   784 ;;__this	offset=-2 (param)
   785 ;;_c	offset=-3 (param)
   786 ;;_atoi$7085	offset	0
   787 ;;_atoi$7083	offset	2
   788 ;;_atoi$7084	offset	4
   789 ;;_n	offset	5
   790 ;;_neg	offset	7
   791 ;;_s	offset=-2 (param)
   792 ;;_isspace$7134	offset	0
   793 ;;_c	offset=-2 (param)
   794 ;;_c	offset=-2 (param)
   795 ;;_dsize	offset=-2 (param)
   796 ;;_u	offset	0
   797 ;;_x	offset=-4 (param)
   798 ;;_f1p	offset=-2 (param)
   799 ;;_f2	offset=-6 (param)
   800 ;;_timer	offset=-1 (param)
   801 ;;_count	offset=-3 (param)
   802 ;;_channel	offset=-1 (param)
   803 ;;_i	offset	0
   804                           
   805                           	psect	idataBIGRAM
   806  0177F2                     __pidataBIGRAM:
   807                           	opt callstack 0
   808                           
   809                           ;initializer for _port_data
   810  0177F2  FF                 	db	255
   811  0177F3  00                 	db	0
   812  0177F4  FF                 	db	255
   813  0177F5  00                 	db	0
   814  0177F6  FF                 	db	255
   815  0177F7  00                 	db	0
   816  0177F8  FF                 	db	255
   817  0177F9  00                 	db	0
   818  0177FA  FF                 	db	255
   819  0177FB  00                 	db	0
   820  0177FC  FF                 	db	255
   821  0177FD  00                 	db	0
   822  0177FE  FF                 	db	255
   823  0177FF  00                 	db	0
   824  017800  FF                 	db	255
   825  017801  00                 	db	0
   826  017802  00                 	db	0
   827  017803  00                 	db	0
   828  017804  00                 	db	0
   829  017805  00                 	db	0
   830  017806  00                 	db	0
   831  017807  00                 	db	0
   832  017808  00                 	db	0
   833  017809  00                 	db	0
   834  01780A  00                 	db	0
   835  01780B  00                 	db	0
   836  01780C  00                 	db	0
   837  01780D  00                 	db	0
   838  01780E  00                 	db	0
   839  01780F  00                 	db	0
   840  017810  00                 	db	0
   841  017811  00                 	db	0
   842  017812  00                 	db	0
   843  017813  00                 	db	0
   844  017814  00                 	db	0
   845  017815  00                 	db	0
   846  017816  00                 	db	0
   847  017817  00                 	db	0
   848  017818  00                 	db	0
   849  017819  00                 	db	0
   850  01781A  00                 	db	0
   851  01781B  00                 	db	0
   852  01781C  00                 	db	0
   853  01781D  00                 	db	0
   854  01781E  00                 	db	0
   855  01781F  00                 	db	0
   856  017820  00                 	db	0
   857  017821  00                 	db	0
   858  017822  00                 	db	0
   859  017823  00                 	db	0
   860  017824  00                 	db	0
   861  017825  00                 	db	0
   862  017826  00                 	db	0
   863  017827  00                 	db	0
   864  017828  00                 	db	0
   865  017829  00                 	db	0
   866  01782A  00                 	db	0
   867  01782B  00                 	db	0
   868  01782C  00                 	db	0
   869  01782D  00                 	db	0
   870  01782E  00                 	db	0
   871  01782F  00                 	db	0
   872  017830  00                 	db	0
   873  017831  00                 	db	0
   874  017832  00                 	db	0
   875  017833  00                 	db	0
   876  017834  00                 	db	0
   877  017835  00                 	db	0
   878  017836  00                 	db	0
   879  017837  00                 	db	0
   880  017838  00                 	db	0
   881  017839  00                 	db	0
   882  01783A  00                 	db	0
   883  01783B  00                 	db	0
   884  01783C  00                 	db	0
   885  01783D  00                 	db	0
   886  01783E  00                 	db	0
   887  01783F  00                 	db	0
   888  017840  00                 	db	0
   889  017841  00                 	db	0
   890  017842  00                 	db	0
   891  017843  00                 	db	0
   892  017844  00                 	db	0
   893  017845  00                 	db	0
   894  017846  00                 	db	0
   895  017847  00                 	db	0
   896  017848  00                 	db	0
   897  017849  00                 	db	0
   898  01784A  00                 	db	0
   899  01784B  00                 	db	0
   900  01784C  00                 	db	0
   901  01784D  00                 	db	0
   902  01784E  00                 	db	0
   903  01784F  00                 	db	0
   904  017850  00                 	db	0
   905  017851  00                 	db	0
   906  017852  00                 	db	0
   907  017853  00                 	db	0
   908  017854  00                 	db	0
   909  017855  00                 	db	0
   910  017856  00                 	db	0
   911  017857  00                 	db	0
   912  017858  00                 	db	0
   913  017859  00                 	db	0
   914  01785A  00                 	db	0
   915  01785B  00                 	db	0
   916  01785C  00                 	db	0
   917  01785D  00                 	db	0
   918  01785E  00                 	db	0
   919  01785F  00                 	db	0
   920  017860  00                 	db	0
   921  017861  00                 	db	0
   922  017862  00                 	db	0
   923  017863  00                 	db	0
   924  017864  00                 	db	0
   925  017865  00                 	db	0
   926  017866  00                 	db	0
   927  017867  00                 	db	0
   928  017868  00                 	db	0
   929  017869  00                 	db	0
   930  01786A  00                 	db	0
   931  01786B  00                 	db	0
   932  01786C  00                 	db	0
   933  01786D  00                 	db	0
   934  01786E  00                 	db	0
   935  01786F  00                 	db	0
   936  017870  00                 	db	0
   937  017871  00                 	db	0
   938  017872  00                 	db	0
   939  017873  00                 	db	0
   940  017874  00                 	db	0
   941  017875  00                 	db	0
   942  017876  00                 	db	0
   943  017877  00                 	db	0
   944  017878  00                 	db	0
   945  017879  00                 	db	0
   946  01787A  00                 	db	0
   947  01787B  00                 	db	0
   948  01787C  00                 	db	0
   949  01787D  00                 	db	0
   950  01787E  00                 	db	0
   951  01787F  00                 	db	0
   952  017880  00                 	db	0
   953  017881  00                 	db	0
   954  017882  00                 	db	0
   955  017883  00                 	db	0
   956  017884  00                 	db	0
   957  017885  00                 	db	0
   958  017886  00                 	db	0
   959  017887  00                 	db	0
   960  017888  00                 	db	0
   961  017889  00                 	db	0
   962  01788A  00                 	db	0
   963  01788B  00                 	db	0
   964  01788C  00                 	db	0
   965  01788D  00                 	db	0
   966  01788E  00                 	db	0
   967  01788F  00                 	db	0
   968  017890  00                 	db	0
   969  017891  00                 	db	0
   970  017892  00                 	db	0
   971  017893  00                 	db	0
   972  017894  00                 	db	0
   973  017895  00                 	db	0
   974  017896  00                 	db	0
   975  017897  00                 	db	0
   976  017898  00                 	db	0
   977  017899  00                 	db	0
   978  01789A  00                 	db	0
   979  01789B  00                 	db	0
   980  01789C  00                 	db	0
   981  01789D  00                 	db	0
   982  01789E  00                 	db	0
   983  01789F  00                 	db	0
   984  0178A0  00                 	db	0
   985  0178A1  00                 	db	0
   986  0178A2  00                 	db	0
   987  0178A3  00                 	db	0
   988  0178A4  00                 	db	0
   989  0178A5  00                 	db	0
   990  0178A6  00                 	db	0
   991  0178A7  00                 	db	0
   992  0178A8  00                 	db	0
   993  0178A9  00                 	db	0
   994  0178AA  00                 	db	0
   995  0178AB  00                 	db	0
   996  0178AC  00                 	db	0
   997  0178AD  00                 	db	0
   998  0178AE  00                 	db	0
   999  0178AF  00                 	db	0
  1000  0178B0  00                 	db	0
  1001  0178B1  00                 	db	0
  1002  0178B2  00                 	db	0
  1003  0178B3  00                 	db	0
  1004  0178B4  00                 	db	0
  1005  0178B5  00                 	db	0
  1006  0178B6  00                 	db	0
  1007  0178B7  00                 	db	0
  1008  0178B8  00                 	db	0
  1009  0178B9  00                 	db	0
  1010  0178BA  00                 	db	0
  1011  0178BB  00                 	db	0
  1012  0178BC  00                 	db	0
  1013  0178BD  00                 	db	0
  1014  0178BE  00                 	db	0
  1015  0178BF  00                 	db	0
  1016  0178C0  00                 	db	0
  1017  0178C1  00                 	db	0
  1018  0178C2  00                 	db	0
  1019  0178C3  00                 	db	0
  1020  0178C4  00                 	db	0
  1021  0178C5  00                 	db	0
  1022  0178C6  00                 	db	0
  1023  0178C7  00                 	db	0
  1024  0178C8  00                 	db	0
  1025  0178C9  00                 	db	0
  1026  0178CA  00                 	db	0
  1027  0178CB  00                 	db	0
  1028  0178CC  00                 	db	0
  1029  0178CD  00                 	db	0
  1030  0178CE  00                 	db	0
  1031  0178CF  00                 	db	0
  1032  0178D0  00                 	db	0
  1033  0178D1  00                 	db	0
  1034  0178D2  00                 	db	0
  1035  0178D3  00                 	db	0
  1036  0178D4  00                 	db	0
  1037  0178D5  00                 	db	0
  1038  0178D6  00                 	db	0
  1039  0178D7  00                 	db	0
  1040  0178D8  00                 	db	0
  1041  0178D9  00                 	db	0
  1042  0178DA  00                 	db	0
  1043  0178DB  00                 	db	0
  1044  0178DC  00                 	db	0
  1045  0178DD  00                 	db	0
  1046  0178DE  00                 	db	0
  1047  0178DF  00                 	db	0
  1048  0178E0  00                 	db	0
  1049  0178E1  00                 	db	0
  1050  0178E2  00                 	db	0
  1051  0178E3  00                 	db	0
  1052  0178E4  00                 	db	0
  1053  0178E5  00                 	db	0
  1054  0178E6  00                 	db	0
  1055  0178E7  00                 	db	0
  1056  0178E8  00                 	db	0
  1057  0178E9  00                 	db	0
  1058  0178EA  00                 	db	0
  1059  0178EB  00                 	db	0
  1060  0178EC  00                 	db	0
  1061  0178ED  00                 	db	0
  1062  0178EE  00                 	db	0
  1063  0178EF  00                 	db	0
  1064  0178F0  00                 	db	0
  1065  0178F1  00                 	db	0
  1066  0178F2  00                 	db	0
  1067  0178F3  00                 	db	0
  1068  0178F4  00                 	db	0
  1069  0178F5  00                 	db	0
  1070  0178F6  00                 	db	0
  1071  0178F7  00                 	db	0
  1072  0178F8  00                 	db	0
  1073  0178F9  00                 	db	0
  1074  0178FA  00                 	db	0
  1075  0178FB  00                 	db	0
  1076  0178FC  00                 	db	0
  1077  0178FD  00                 	db	0
  1078  0178FE  00                 	db	0
  1079  0178FF  00                 	db	0
  1080  017900  00                 	db	0
  1081  017901  00                 	db	0
  1082  017902  00                 	db	0
  1083  017903  00                 	db	0
  1084  017904  00                 	db	0
  1085  017905  00                 	db	0
  1086  017906  00                 	db	0
  1087  017907  00                 	db	0
  1088  017908  00                 	db	0
  1089  017909  00                 	db	0
  1090  01790A  00                 	db	0
  1091  01790B  00                 	db	0
  1092  01790C  00                 	db	0
  1093  01790D  00                 	db	0
  1094  01790E  00                 	db	0
  1095  01790F  00                 	db	0
  1096  017910  00                 	db	0
  1097  017911  00                 	db	0
  1098  017912  00                 	db	0
  1099  017913  00                 	db	0
  1100  017914  00                 	db	0
  1101  017915  00                 	db	0
  1102  017916  00                 	db	0
  1103  017917  00                 	db	0
  1104  017918  00                 	db	0
  1105  017919  00                 	db	0
  1106  01791A  00                 	db	0
  1107  01791B  00                 	db	0
  1108  01791C  00                 	db	0
  1109  01791D  00                 	db	0
  1110  01791E  00                 	db	0
  1111  01791F  00                 	db	0
  1112  017920  00                 	db	0
  1113  017921  00                 	db	0
  1114  017922  00                 	db	0
  1115  017923  00                 	db	0
  1116  017924  00                 	db	0
  1117  017925  00                 	db	0
  1118  017926  00                 	db	0
  1119  017927  00                 	db	0
  1120  017928  00                 	db	0
  1121  017929  00                 	db	0
  1122  01792A  00                 	db	0
  1123  01792B  00                 	db	0
  1124  01792C  00                 	db	0
  1125  01792D  00                 	db	0
  1126  01792E  00                 	db	0
  1127  01792F  00                 	db	0
  1128  017930  00                 	db	0
  1129  017931  00                 	db	0
  1130  017932  00                 	db	0
  1131  017933  00                 	db	0
  1132  017934  00                 	db	0
  1133  017935  00                 	db	0
  1134  017936  00                 	db	0
  1135  017937  00                 	db	0
  1136  017938  00                 	db	0
  1137  017939  00                 	db	0
  1138  01793A  00                 	db	0
  1139  01793B  00                 	db	0
  1140  01793C  00                 	db	0
  1141  01793D  00                 	db	0
  1142  01793E  00                 	db	0
  1143  01793F  00                 	db	0
  1144  017940  00                 	db	0
  1145  017941  00                 	db	0
  1146  017942  00                 	db	0
  1147  017943  00                 	db	0
  1148  017944  00                 	db	0
  1149  017945  00                 	db	0
  1150  017946  00                 	db	0
  1151  017947  00                 	db	0
  1152  017948  00                 	db	0
  1153  017949  00                 	db	0
  1154  01794A  00                 	db	0
  1155  01794B  00                 	db	0
  1156  01794C  00                 	db	0
  1157  01794D  00                 	db	0
  1158  01794E  00                 	db	0
  1159  01794F  00                 	db	0
  1160  017950  00                 	db	0
  1161  017951  00                 	db	0
  1162  017952  00                 	db	0
  1163  017953  00                 	db	0
  1164  017954  00                 	db	0
  1165  017955  00                 	db	0
  1166  017956  00                 	db	0
  1167  017957  00                 	db	0
  1168  017958  00                 	db	0
  1169  017959  00                 	db	0
  1170  01795A  00                 	db	0
  1171  01795B  00                 	db	0
  1172  01795C  00                 	db	0
  1173  01795D  00                 	db	0
  1174  01795E  00                 	db	0
  1175  01795F  00                 	db	0
  1176  017960  00                 	db	0
  1177  017961  00                 	db	0
  1178  017962  00                 	db	0
  1179  017963  00                 	db	0
  1180  017964  00                 	db	0
  1181  017965  00                 	db	0
  1182  017966  00                 	db	0
  1183  017967  00                 	db	0
  1184  017968  00                 	db	0
  1185  017969  00                 	db	0
  1186  01796A  00                 	db	0
  1187  01796B  00                 	db	0
  1188  01796C  00                 	db	0
  1189  01796D  00                 	db	0
  1190  01796E  00                 	db	0
  1191  01796F  00                 	db	0
  1192  017970  00                 	db	0
  1193  017971  00                 	db	0
  1194  017972  00                 	db	0
  1195  017973  00                 	db	0
  1196  017974  00                 	db	0
  1197  017975  00                 	db	0
  1198  017976  00                 	db	0
  1199  017977  00                 	db	0
  1200  017978  00                 	db	0
  1201  017979  00                 	db	0
  1202  01797A  00                 	db	0
  1203  01797B  00                 	db	0
  1204  01797C  00                 	db	0
  1205  01797D  00                 	db	0
  1206  01797E  00                 	db	0
  1207  01797F  00                 	db	0
  1208  017980  00                 	db	0
  1209  017981  00                 	db	0
  1210  017982  00                 	db	0
  1211  017983  00                 	db	0
  1212  017984  00                 	db	0
  1213  017985  00                 	db	0
  1214  017986  00                 	db	0
  1215  017987  00                 	db	0
  1216  017988  00                 	db	0
  1217  017989  00                 	db	0
  1218  01798A  00                 	db	0
  1219  01798B  00                 	db	0
  1220  01798C  00                 	db	0
  1221  01798D  00                 	db	0
  1222  01798E  00                 	db	0
  1223  01798F  00                 	db	0
  1224  017990  00                 	db	0
  1225  017991  00                 	db	0
  1226  017992  00                 	db	0
  1227  017993  00                 	db	0
  1228  017994  00                 	db	0
  1229  017995  00                 	db	0
  1230  017996  00                 	db	0
  1231  017997  00                 	db	0
  1232  017998  00                 	db	0
  1233  017999  00                 	db	0
  1234  01799A  00                 	db	0
  1235  01799B  00                 	db	0
  1236  01799C  00                 	db	0
  1237  01799D  00                 	db	0
  1238  01799E  00                 	db	0
  1239  01799F  00                 	db	0
  1240  0179A0  00                 	db	0
  1241  0179A1  00                 	db	0
  1242  0179A2  00                 	db	0
  1243  0179A3  00                 	db	0
  1244  0179A4  00                 	db	0
  1245  0179A5  00                 	db	0
  1246  0179A6  00                 	db	0
  1247  0179A7  00                 	db	0
  1248  0179A8  00                 	db	0
  1249  0179A9  00                 	db	0
  1250  0179AA  00                 	db	0
  1251  0179AB  00                 	db	0
  1252  0179AC  00                 	db	0
  1253  0179AD  00                 	db	0
  1254  0179AE  00                 	db	0
  1255  0179AF  00                 	db	0
  1256  0179B0  00                 	db	0
  1257  0179B1  00                 	db	0
  1258  0179B2  00                 	db	0
  1259  0179B3  00                 	db	0
  1260  0179B4  00                 	db	0
  1261  0179B5  00                 	db	0
  1262  0179B6  00                 	db	0
  1263  0179B7  00                 	db	0
  1264  0179B8  00                 	db	0
  1265  0179B9  00                 	db	0
  1266  0179BA  00                 	db	0
  1267  0179BB  00                 	db	0
  1268  0179BC  00                 	db	0
  1269  0179BD  00                 	db	0
  1270  0179BE  00                 	db	0
  1271  0179BF  00                 	db	0
  1272  0179C0  00                 	db	0
  1273  0179C1  00                 	db	0
  1274  0179C2  00                 	db	0
  1275  0179C3  00                 	db	0
  1276  0179C4  00                 	db	0
  1277  0179C5  00                 	db	0
  1278  0179C6  00                 	db	0
  1279  0179C7  00                 	db	0
  1280  0179C8  00                 	db	0
  1281  0179C9  00                 	db	0
  1282  0179CA  00                 	db	0
  1283  0179CB  00                 	db	0
  1284  0179CC  00                 	db	0
  1285  0179CD  00                 	db	0
  1286  0179CE  00                 	db	0
  1287  0179CF  00                 	db	0
  1288  0179D0  00                 	db	0
  1289  0179D1  00                 	db	0
  1290  0179D2  00                 	db	0
  1291  0179D3  00                 	db	0
  1292  0179D4  00                 	db	0
  1293  0179D5  00                 	db	0
  1294  0179D6  00                 	db	0
  1295  0179D7  00                 	db	0
  1296  0179D8  00                 	db	0
  1297  0179D9  00                 	db	0
  1298  0179DA  00                 	db	0
  1299  0179DB  00                 	db	0
  1300  0179DC  00                 	db	0
  1301  0179DD  00                 	db	0
  1302  0179DE  00                 	db	0
  1303  0179DF  00                 	db	0
  1304  0179E0  00                 	db	0
  1305  0179E1  00                 	db	0
  1306  0179E2  00                 	db	0
  1307  0179E3  00                 	db	0
  1308  0179E4  00                 	db	0
  1309  0179E5  00                 	db	0
  1310  0179E6  00                 	db	0
  1311  0179E7  00                 	db	0
  1312  0179E8  00                 	db	0
  1313  0179E9  00                 	db	0
  1314  0179EA  00                 	db	0
  1315  0179EB  00                 	db	0
  1316  0179EC  00                 	db	0
  1317  0179ED  00                 	db	0
  1318  0179EE  00                 	db	0
  1319  0179EF  00                 	db	0
  1320  0179F0  00                 	db	0
  1321  0179F1  00                 	db	0
  1322                           
  1323                           ;initializer for _C
  1324  0179F2  0000               	dw	0
  1325  0179F4  0000               	dw	0
  1326  0179F6  0000               	dw	0
  1327  0179F8  0000               	dw	0
  1328  0179FA  0000               	dw	0
  1329  0179FC  0000               	dw	0
  1330  0179FE  0000               	dw	0
  1331  017A00  0000               	dw	0
  1332  017A02  0000               	dw	0
  1333  017A04  0000               	dw	0
  1334  017A06  0000               	dw	0
  1335  017A08  0000               	dw	0
  1336  017A0A  0000               	dw	0
  1337  017A0C  0000               	dw	0
  1338  017A0E  0000               	dw	0
  1339  017A10  0000               	dw	0
  1340  017A12  0000               	dw	0
  1341  017A14  0000               	dw	0
  1342  017A16  0000               	dw	0
  1343  017A18  0000               	dw	0
  1344  017A1A  0000               	dw	0
  1345  017A1C  0000               	dw	0
  1346  017A1E  0000               	dw	0
  1347  017A20  0000               	dw	0
  1348  017A22  0000               	dw	0
  1349  017A24  0000               	dw	0
  1350  017A26  0000               	dw	0
  1351  017A28  0000               	dw	0
  1352  017A2A  0000               	dw	0
  1353  017A2C  0000               	dw	0
  1354  017A2E  0000               	dw	0
  1355  017A30  0000               	dw	0
  1356  017A32  0000               	dw	0
  1357  017A34  0000               	dw	0
  1358  017A36  0000               	dw	0
  1359  017A38  0000               	dw	0
  1360  017A3A  0000               	dw	0
  1361  017A3C  0000               	dw	0
  1362  017A3E  0000               	dw	0
  1363  017A40  0000               	dw	0
  1364  017A42  0000               	dw	0
  1365  017A44  0000               	dw	0
  1366  017A46  0000               	dw	0
  1367  017A48  0000               	dw	0
  1368  017A4A  0000               	dw	0
  1369  017A4C  0000               	dw	0
  1370  017A4E  0000               	dw	0
  1371  017A50  0000               	dw	0
  1372  017A52  0000               	dw	0
  1373  017A54  0000               	dw	0
  1374  017A56  0000               	dw	0
  1375  017A58  0000               	dw	0
  1376  017A5A  0000               	dw	0
  1377  017A5C  0000               	dw	0
  1378  017A5E  0000               	dw	0
  1379  017A60  0000               	dw	0
  1380  017A62  0000               	dw	0
  1381  017A64  0000               	dw	0
  1382  017A66  0000               	dw	0
  1383  017A68  0000               	dw	0
  1384  017A6A  0000               	dw	0
  1385  017A6C  0000               	dw	0
  1386  017A6E  0000               	dw	0
  1387  017A70  0000               	dw	0
  1388  017A72  0000               	dw	0
  1389  017A74  0000               	dw	0
  1390  017A76  0000               	dw	0
  1391  017A78  0000               	dw	0
  1392  017A7A  0000               	dw	0
  1393  017A7C  0000               	dw	0
  1394  017A7E  0000               	dw	0
  1395  017A80  42FA               	dw	17146
  1396  017A82  0000               	dw	0
  1397  017A84  0000               	dw	0
  1398  017A86  0000               	dw	0
  1399  017A88  0000               	dw	0
  1400  017A8A  0000               	dw	0
  1401  017A8C  0000               	dw	0
  1402  017A8E  0000               	dw	0
  1403  017A90  0000               	dw	0
  1404  017A92  0000               	dw	0
  1405  017A94  0000               	dw	0
  1406  017A96  0000               	dw	0
  1407  017A98  0000               	dw	0
  1408  017A9A  0000               	dw	0
  1409  017A9C  0000               	dw	0
  1410  017A9E  0000               	dw	0
  1411  017AA0  0000               	dw	0
  1412  017AA2  0000               	dw	0
  1413  017AA4  0000               	dw	0
  1414  017AA6  0000               	dw	0
  1415  017AA8  0000               	dw	0
  1416  017AAA  00                 	db	0
  1417  017AAB  01                 	db	1
  1418  017AAC  0000               	dw	0
  1419  017AAE  3F80               	dw	16256
  1420  017AB0  0000               	dw	0
  1421  017AB2  3F80               	dw	16256
  1422  017AB4  00                 	db	0
  1423  017AB5  00                 	db	0
  1424  017AB6  00                 	db	0
  1425  017AB7  00                 	db	0
  1426  017AB8  00                 	db	0
  1427  017AB9  00                 	db	0
  1428  017ABA  00                 	db	0
  1429  017ABB  00                 	db	0
  1430  017ABC  00                 	db	0
  1431  017ABD  00                 	db	0
  1432  017ABE  00                 	db	0
  1433  017ABF  00                 	db	0
  1434  017AC0  00                 	db	0
  1435  017AC1  00                 	db	0
  1436  017AC2  00                 	db	0
  1437  017AC3  00                 	db	0
  1438  017AC4  00                 	db	0
  1439  017AC5  00                 	db	0
  1440  017AC6  00                 	db	0
  1441  017AC7  00                 	db	0
  1442  017AC8  00                 	db	0
  1443  017AC9  00                 	db	0
  1444  017ACA  00                 	db	0
  1445  017ACB  00                 	db	0
  1446  017ACC  00                 	db	0
  1447  017ACD  00                 	db	0
  1448  017ACE  00                 	db	0
  1449  017ACF  00                 	db	0
  1450  017AD0  00                 	db	0
  1451  017AD1  00                 	db	0
  1452  017AD2  00                 	db	0
  1453  017AD3  00                 	db	0
  1454  017AD4  00                 	db	0
  1455  017AD5  00                 	db	0
  1456  017AD6  00                 	db	0
  1457  017AD7  00                 	db	0
  1458  017AD8  00                 	db	0
  1459  017AD9  00                 	db	0
  1460  017ADA  00                 	db	0
  1461  017ADB  00                 	db	0
  1462  017ADC  00                 	db	0
  1463  017ADD  00                 	db	0
  1464  017ADE  00                 	db	0
  1465  017ADF  00                 	db	0
  1466  017AE0  00                 	db	0
  1467  017AE1  00                 	db	0
  1468  017AE2  00                 	db	0
  1469  017AE3  00                 	db	0
  1470  017AE4  00                 	db	0
  1471  017AE5  00                 	db	0
  1472  017AE6  00                 	db	0
  1473  017AE7  00                 	db	0
  1474  017AE8  00                 	db	0
  1475  017AE9  00                 	db	0
  1476  017AEA  00                 	db	0
  1477  017AEB  00                 	db	0
  1478  017AEC  00                 	db	0
  1479  017AED  00                 	db	0
  1480  017AEE  00                 	db	0
  1481  017AEF  00                 	db	0
  1482  017AF0  00                 	db	0
  1483  017AF1  00                 	db	0
  1484  017AF2  00                 	db	0
  1485  017AF3  00                 	db	0
  1486  017AF4  00                 	db	0
  1487  017AF5  00                 	db	0
  1488  017AF6  00                 	db	0
  1489  017AF7  00                 	db	0
  1490  017AF8  00                 	db	0
  1491  017AF9  00                 	db	0
  1492  017AFA  00                 	db	0
  1493  017AFB  00                 	db	0
  1494  017AFC  00                 	db	0
  1495  017AFD  00                 	db	0
  1496  017AFE  00                 	db	0
  1497  017AFF  00                 	db	0
  1498  017B00  0000               	dw	0
  1499  017B02  0000               	dw	0
  1500  017B04  0000               	dw	0
  1501  017B06  0000               	dw	0
  1502  017B08  0000               	dw	0
  1503  017B0A  0000               	dw	0
  1504  017B0C  0000               	dw	0
  1505  017B0E  0000               	dw	0
  1506  017B10  0000               	dw	0
  1507  017B12  0000               	dw	0
  1508  017B14  01                 	db	1
  1509  017B15  00                 	db	0
  1510  017B16  00                 	db	0
  1511  017B17  00                 	db	0
  1512  017B18  00                 	db	0
  1513  017B19  00                 	db	0
  1514  017B1A  00                 	db	0
  1515  017B1B  00                 	db	0
  1516  017B1C  00                 	db	0
  1517                           
  1518                           	psect	idataBANK0
  1519  01DB3A                     __pidataBANK0:
  1520                           	opt callstack 0
  1521                           
  1522                           ;initializer for _H
  1523  01DB3A  00                 	db	0
  1524  01DB3B  00                 	db	0
  1525  01DB3C  01                 	db	1
  1526  01DB3D  00                 	db	0
  1527  01DB3E  01                 	db	1
  1528  01DB3F  00                 	db	0
  1529  01DB40  01                 	db	1
  1530  01DB41  00                 	db	0
  1531  01DB42  00                 	db	0
  1532                           
  1533                           	psect	idataBANK1
  1534  01BFE4                     __pidataBANK1:
  1535                           	opt callstack 0
  1536                           
  1537                           ;initializer for stoa@F1166
  1538  01BFE4  28                 	db	40
  1539  01BFE5  6E                 	db	110
  1540  01BFE6  75                 	db	117
  1541  01BFE7  6C                 	db	108
  1542  01BFE8  6C                 	db	108
  1543  01BFE9  29                 	db	41
  1544  01BFEA  00                 	db	0
  1545                           
  1546                           ;initializer for _R
  1547  01BFEB  0000               	dw	0
  1548  01BFED  0000               	dw	0
  1549  01BFEF  0000               	dw	0
  1550  01BFF1  0000               	dw	0
  1551  01BFF3  0000               	dw	0
  1552  01BFF5  0000               	dw	0
  1553  01BFF7  0000               	dw	0
  1554  01BFF9  0000               	dw	0
  1555  01BFFB  0000               	dw	0
  1556  01BFFD  0000               	dw	0
  1557  01BFFF  0000               	dw	0
  1558  01C001  0000               	dw	0
  1559  01C003  0000               	dw	0
  1560  01C005  0000               	dw	0
  1561  01C007  0000               	dw	0
  1562  01C009  0000               	dw	0
  1563  01C00B  0000               	dw	0
  1564  01C00D  0000               	dw	0
  1565  01C00F  0000               	dw	0
  1566  01C011  0F62               	dw	3938
  1567  01C013  0FA4               	dw	4004
  1568  01C015  89A0               	dw	35232
  1569  01C017  3DB0               	dw	15792
  1570  01C019  DEA4               	dw	56996
  1571  01C01B  3D13               	dw	15635
  1572  01C01D  00                 	db	0
  1573  01C01E  0000               	dw	0
  1574  01C020  00                 	db	0
  1575  01C021  00                 	db	0
  1576  01C022  0000               	dw	0
  1577  01C024  0000               	dw	0
  1578  01C026  0000               	dw	0
  1579  01C028  0000               	dw	0
  1580  01C02A  0000               	dw	0
  1581  01C02C  0000               	dw	0
  1582  01C02E  0000               	dw	0
  1583  01C030  0000               	dw	0
  1584  01C032  0000               	dw	0
  1585  01C034  0000               	dw	0
  1586  01C036  0000               	dw	0
  1587  01C038  0000               	dw	0
  1588  01C03A  0000               	dw	0
  1589  01C03C  0000               	dw	0
  1590  01C03E  0000               	dw	0
  1591  01C040  0000               	dw	0
  1592  01C042  0000               	dw	0
  1593  01C044  0000               	dw	0
  1594  01C046  0000               	dw	0
  1595  01C048  0000               	dw	0
  1596  01C04A  0000               	dw	0
  1597  01C04C  0000               	dw	0
  1598  01C04E  0000               	dw	0
  1599  01C050  0000               	dw	0
  1600  01C052  0000               	dw	0
  1601  01C054  0000               	dw	0
  1602  01C056  0000               	dw	0
  1603  01C058  0000               	dw	0
  1604  01C05A  0000               	dw	0
  1605  01C05C  0000               	dw	0
  1606  01C05E  0000               	dw	0
  1607  01C060  0000               	dw	0
  1608  01C062  0000               	dw	0
  1609  01C064  0000               	dw	0
  1610  01C066  0000               	dw	0
  1611  01C068  0000               	dw	0
  1612  01C06A  0000               	dw	0
  1613  01C06C  0000               	dw	0
  1614  01C06E  0000               	dw	0
  1615  01C070  0000               	dw	0
  1616  01C072  0000               	dw	0
  1617  01C074  0000               	dw	0
  1618  01C076  00                 	db	0
  1619  01C077  1957               	dw	6487
  1620  01C079  42                 	db	66
  1621                           
  1622                           	psect	idataBANK2
  1623  01B7B2                     __pidataBANK2:
  1624                           	opt callstack 0
  1625                           
  1626                           ;initializer for _V
  1627  01B7B2  00                 	db	0
  1628  01B7B3  00                 	db	0
  1629  01B7B4  00                 	db	0
  1630  01B7B5  00                 	db	0
  1631  01B7B6  00                 	db	0
  1632  01B7B7  00                 	db	0
  1633  01B7B8  00                 	db	0
  1634  01B7B9  00                 	db	0
  1635  01B7BA  00                 	db	0
  1636  01B7BB  00                 	db	0
  1637  01B7BC  00                 	db	0
  1638  01B7BD  00                 	db	0
  1639  01B7BE  00                 	db	0
  1640  01B7BF  00                 	db	0
  1641  01B7C0  00                 	db	0
  1642  01B7C1  00                 	db	0
  1643  01B7C2  00                 	db	0
  1644  01B7C3  00                 	db	0
  1645  01B7C4  00                 	db	0
  1646  01B7C5  00                 	db	0
  1647  01B7C6  00                 	db	0
  1648  01B7C7  00                 	db	0
  1649  01B7C8  00                 	db	0
  1650  01B7C9  00                 	db	0
  1651  01B7CA  00                 	db	0
  1652  01B7CB  00                 	db	0
  1653  01B7CC  00                 	db	0
  1654  01B7CD  00                 	db	0
  1655  01B7CE  00                 	db	0
  1656  01B7CF  00                 	db	0
  1657  01B7D0  00                 	db	0
  1658  01B7D1  00                 	db	0
  1659  01B7D2  00                 	db	0
  1660  01B7D3  00                 	db	0
  1661  01B7D4  00                 	db	0
  1662  01B7D5  00                 	db	0
  1663  01B7D6  00                 	db	0
  1664  01B7D7  00                 	db	0
  1665  01B7D8  00                 	db	0
  1666  01B7D9  00                 	db	0
  1667  01B7DA  00                 	db	0
  1668  01B7DB  00                 	db	0
  1669  01B7DC  00                 	db	0
  1670  01B7DD  00                 	db	0
  1671  01B7DE  00                 	db	0
  1672  01B7DF  00                 	db	0
  1673  01B7E0  00                 	db	0
  1674  01B7E1  00                 	db	0
  1675  01B7E2  00                 	db	0
  1676  01B7E3  00                 	db	0
  1677  01B7E4  00                 	db	0
  1678  01B7E5  00                 	db	0
  1679  01B7E6  00                 	db	0
  1680  01B7E7  00                 	db	0
  1681  01B7E8  00                 	db	0
  1682  01B7E9  00                 	db	0
  1683  01B7EA  00                 	db	0
  1684  01B7EB  00                 	db	0
  1685  01B7EC  00                 	db	0
  1686  01B7ED  00                 	db	0
  1687  01B7EE  00                 	db	0
  1688  01B7EF  00                 	db	0
  1689  01B7F0  00                 	db	0
  1690  01B7F1  00                 	db	0
  1691  01B7F2  00                 	db	0
  1692  01B7F3  00                 	db	0
  1693  01B7F4  00                 	db	0
  1694  01B7F5  00                 	db	0
  1695  01B7F6  00                 	db	0
  1696  01B7F7  00                 	db	0
  1697  01B7F8  00                 	db	0
  1698  01B7F9  00                 	db	0
  1699  01B7FA  00                 	db	0
  1700  01B7FB  00                 	db	0
  1701  01B7FC  00                 	db	0
  1702  01B7FD  00                 	db	0
  1703  01B7FE  00                 	db	0
  1704  01B7FF  00                 	db	0
  1705  01B800  00                 	db	0
  1706  01B801  00                 	db	0
  1707  01B802  00                 	db	0
  1708  01B803  00                 	db	0
  1709  01B804  00                 	db	0
  1710  01B805  00                 	db	0
  1711  01B806  00                 	db	0
  1712  01B807  00                 	db	0
  1713  01B808  00                 	db	0
  1714  01B809  00                 	db	0
  1715  01B80A  00                 	db	0
  1716  01B80B  00                 	db	0
  1717  01B80C  00                 	db	0
  1718  01B80D  00                 	db	0
  1719  01B80E  00                 	db	0
  1720  01B80F  00                 	db	0
  1721  01B810  00                 	db	0
  1722  01B811  00                 	db	0
  1723  01B812  00                 	db	0
  1724  01B813  00                 	db	0
  1725  01B814  00                 	db	0
  1726  01B815  00                 	db	0
  1727  01B816  00                 	db	0
  1728  01B817  00                 	db	0
  1729  01B818  00                 	db	0
  1730  01B819  00                 	db	0
  1731  01B81A  00                 	db	0
  1732  01B81B  00                 	db	0
  1733  01B81C  00                 	db	0
  1734  01B81D  00                 	db	0
  1735  01B81E  00                 	db	0
  1736  01B81F  00                 	db	0
  1737  01B820  00                 	db	0
  1738  01B821  00                 	db	0
  1739  01B822  00                 	db	0
  1740  01B823  00                 	db	0
  1741  01B824  00                 	db	0
  1742  01B825  00                 	db	0
  1743  01B826  00                 	db	0
  1744  01B827  00                 	db	0
  1745  01B828  00                 	db	0
  1746  01B829  00                 	db	0
  1747  01B82A  00                 	db	0
  1748  01B82B  00                 	db	0
  1749  01B82C  00                 	db	0
  1750  01B82D  00                 	db	0
  1751  01B82E  00                 	db	0
  1752  01B82F  00                 	db	0
  1753  01B830  00                 	db	0
  1754  01B831  00                 	db	0
  1755  01B832  00                 	db	0
  1756  01B833  0000               	dw	0
  1757  01B835  0000               	dw	0
  1758  01B837  0000               	dw	0
  1759  01B839  0000               	dw	0
  1760  01B83B  00                 	db	0
  1761  01B83C  00                 	db	0
  1762  01B83D  00                 	db	0
  1763  01B83E  00                 	db	0
  1764  01B83F  00                 	db	0
  1765  01B840  00                 	db	0
  1766  01B841  0000               	dw	0
  1767  01B843  0000               	dw	0
  1768  01B845  0000               	dw	0
  1769  01B847  0000               	dw	0
  1770  01B849  0000               	dw	0
  1771  01B84B  0000               	dw	0
  1772  01B84D  00                 	db	0
  1773  01B84E  00                 	db	0
  1774  01B84F  00                 	db	0
  1775  01B850  00                 	db	0
  1776  01B851  00                 	db	0
  1777  01B852  00                 	db	0
  1778  01B853  00                 	db	0
  1779  01B854  00                 	db	0
  1780  01B855  00                 	db	0
  1781  01B856  00                 	db	0
  1782  01B857  00                 	db	0
  1783  01B858  0000               	dw	0
  1784  01B85A  0000               	dw	0
  1785  01B85C  2D                 	db	45
  1786  01B85D  00                 	db	0
  1787  01B85E  00                 	db	0
  1788  01B85F  00                 	db	0
  1789  01B860  00                 	db	0
  1790  01B861  00                 	db	0
  1791  01B862  0000               	dw	0
  1792  01B864  0000               	dw	0
  1793  01B866  0000               	dw	0
  1794  01B868  0000               	dw	0
  1795  01B86A  0000               	dw	0
  1796  01B86C  0000               	dw	0
  1797  01B86E  0000               	dw	0
  1798  01B870  0000               	dw	0
  1799                           
  1800                           	psect	mediumconst
  1801  00F87C                     __pmediumconst:
  1802                           	opt callstack 0
  1803  00F87C  00                 	db	0
  1804  00F87D                     _BVSOC_TABLE:
  1805                           	opt callstack 0
  1806  00F87D  59D8               	dw	23000
  1807  00F87F  0000               	dw	0
  1808  00F881  0005               	dw	5
  1809  00F883  0000               	dw	0
  1810  00F885  5B68               	dw	23400
  1811  00F887  0000               	dw	0
  1812  00F889  000A               	dw	10
  1813  00F88B  0000               	dw	0
  1814  00F88D  5C30               	dw	23600
  1815  00F88F  0000               	dw	0
  1816  00F891  0014               	dw	20
  1817  00F893  0000               	dw	0
  1818  00F895  5E38               	dw	24120
  1819  00F897  0000               	dw	0
  1820  00F899  0019               	dw	25
  1821  00F89B  0000               	dw	0
  1822  00F89D  5E88               	dw	24200
  1823  00F89F  0000               	dw	0
  1824  00F8A1  001E               	dw	30
  1825  00F8A3  0000               	dw	0
  1826  00F8A5  5F78               	dw	24440
  1827  00F8A7  0000               	dw	0
  1828  00F8A9  0028               	dw	40
  1829  00F8AB  0000               	dw	0
  1830  00F8AD  5FDC               	dw	24540
  1831  00F8AF  0000               	dw	0
  1832  00F8B1  002D               	dw	45
  1833  00F8B3  0000               	dw	0
  1834  00F8B5  6018               	dw	24600
  1835  00F8B7  0000               	dw	0
  1836  00F8B9  0032               	dw	50
  1837  00F8BB  0000               	dw	0
  1838  00F8BD  6046               	dw	24646
  1839  00F8BF  0000               	dw	0
  1840  00F8C1  0035               	dw	53
  1841  00F8C3  0000               	dw	0
  1842  00F8C5  607C               	dw	24700
  1843  00F8C7  0000               	dw	0
  1844  00F8C9  0037               	dw	55
  1845  00F8CB  0000               	dw	0
  1846  00F8CD  60AE               	dw	24750
  1847  00F8CF  0000               	dw	0
  1848  00F8D1  0039               	dw	57
  1849  00F8D3  0000               	dw	0
  1850  00F8D5  60E0               	dw	24800
  1851  00F8D7  0000               	dw	0
  1852  00F8D9  003C               	dw	60
  1853  00F8DB  0000               	dw	0
  1854  00F8DD  6112               	dw	24850
  1855  00F8DF  0000               	dw	0
  1856  00F8E1  003F               	dw	63
  1857  00F8E3  0000               	dw	0
  1858  00F8E5  615D               	dw	24925
  1859  00F8E7  0000               	dw	0
  1860  00F8E9  0043               	dw	67
  1861  00F8EB  0000               	dw	0
  1862  00F8ED  61A8               	dw	25000
  1863  00F8EF  0000               	dw	0
  1864  00F8F1  0046               	dw	70
  1865  00F8F3  0000               	dw	0
  1866  00F8F5  61BC               	dw	25020
  1867  00F8F7  0000               	dw	0
  1868  00F8F9  0048               	dw	72
  1869  00F8FB  0000               	dw	0
  1870  00F8FD  61D0               	dw	25040
  1871  00F8FF  0000               	dw	0
  1872  00F901  004B               	dw	75
  1873  00F903  0000               	dw	0
  1874  00F905  61DA               	dw	25050
  1875  00F907  0000               	dw	0
  1876  00F909  0050               	dw	80
  1877  00F90B  0000               	dw	0
  1878  00F90D  61E4               	dw	25060
  1879  00F90F  0000               	dw	0
  1880  00F911  0055               	dw	85
  1881  00F913  0000               	dw	0
  1882  00F915  61F8               	dw	25080
  1883  00F917  0000               	dw	0
  1884  00F919  005A               	dw	90
  1885  00F91B  0000               	dw	0
  1886  00F91D  6208               	dw	25096
  1887  00F91F  0000               	dw	0
  1888  00F921  005C               	dw	92
  1889  00F923  0000               	dw	0
  1890  00F925  6222               	dw	25122
  1891  00F927  0000               	dw	0
  1892  00F929  005D               	dw	93
  1893  00F92B  0000               	dw	0
  1894  00F92D  6234               	dw	25140
  1895  00F92F  0000               	dw	0
  1896  00F931  005F               	dw	95
  1897  00F933  0000               	dw	0
  1898  00F935  6248               	dw	25160
  1899  00F937  0000               	dw	0
  1900  00F939  0061               	dw	97
  1901  00F93B  0000               	dw	0
  1902  00F93D  625C               	dw	25180
  1903  00F93F  0000               	dw	0
  1904  00F941  0064               	dw	100
  1905  00F943  0000               	dw	0
  1906  00F945  6784               	dw	26500
  1907  00F947  0000               	dw	0
  1908  00F949  0062               	dw	98
  1909  00F94B  0000               	dw	0
  1910  00F94D                     __end_of_BVSOC_TABLE:
  1911                           	opt callstack 0
  1912  00F94D                     _T:
  1913                           	opt callstack 0
  1914  00F94D  63                 	db	99
  1915  00F94E  6F                 	db	111
  1916  00F94F  6D                 	db	109
  1917  00F950  6D                 	db	109
  1918  00F951  61                 	db	97
  1919  00F952  6E                 	db	110
  1920  00F953  64                 	db	100
  1921  00F954  73                 	db	115
  1922  00F955  20                 	db	32
  1923  00F956  31                 	db	49
  1924  00F957  00                 	db	0
  1925  00F958  00                 	db	0
  1926  00F959  00                 	db	0
  1927  00F95A  00                 	db	0
  1928  00F95B  00                 	db	0
  1929  00F95C  00                 	db	0
  1930  00F95D  00                 	db	0
  1931  00F95E  00                 	db	0
  1932  00F95F  64                 	db	100
  1933  00F960  69                 	db	105
  1934  00F961  73                 	db	115
  1935  00F962  70                 	db	112
  1936  00F963  6C                 	db	108
  1937  00F964  61                 	db	97
  1938  00F965  79                 	db	121
  1939  00F966  73                 	db	115
  1940  00F967  20                 	db	32
  1941  00F968  31                 	db	49
  1942  00F969  00                 	db	0
  1943  00F96A  00                 	db	0
  1944  00F96B  00                 	db	0
  1945  00F96C  00                 	db	0
  1946  00F96D  00                 	db	0
  1947  00F96E  00                 	db	0
  1948  00F96F  00                 	db	0
  1949  00F970  00                 	db	0
  1950  00F971  63                 	db	99
  1951  00F972  6F                 	db	111
  1952  00F973  6D                 	db	109
  1953  00F974  6D                 	db	109
  1954  00F975  61                 	db	97
  1955  00F976  6E                 	db	110
  1956  00F977  64                 	db	100
  1957  00F978  73                 	db	115
  1958  00F979  20                 	db	32
  1959  00F97A  32                 	db	50
  1960  00F97B  00                 	db	0
  1961  00F97C  00                 	db	0
  1962  00F97D  00                 	db	0
  1963  00F97E  00                 	db	0
  1964  00F97F  00                 	db	0
  1965  00F980  00                 	db	0
  1966  00F981  00                 	db	0
  1967  00F982  00                 	db	0
  1968  00F983  64                 	db	100
  1969  00F984  69                 	db	105
  1970  00F985  73                 	db	115
  1971  00F986  70                 	db	112
  1972  00F987  6C                 	db	108
  1973  00F988  61                 	db	97
  1974  00F989  79                 	db	121
  1975  00F98A  73                 	db	115
  1976  00F98B  20                 	db	32
  1977  00F98C  32                 	db	50
  1978  00F98D  00                 	db	0
  1979  00F98E  00                 	db	0
  1980  00F98F  00                 	db	0
  1981  00F990  00                 	db	0
  1982  00F991  00                 	db	0
  1983  00F992  00                 	db	0
  1984  00F993  00                 	db	0
  1985  00F994  00                 	db	0
  1986  00F995  63                 	db	99
  1987  00F996  6F                 	db	111
  1988  00F997  6D                 	db	109
  1989  00F998  6D                 	db	109
  1990  00F999  61                 	db	97
  1991  00F99A  6E                 	db	110
  1992  00F99B  64                 	db	100
  1993  00F99C  73                 	db	115
  1994  00F99D  20                 	db	32
  1995  00F99E  33                 	db	51
  1996  00F99F  00                 	db	0
  1997  00F9A0  00                 	db	0
  1998  00F9A1  00                 	db	0
  1999  00F9A2  00                 	db	0
  2000  00F9A3  00                 	db	0
  2001  00F9A4  00                 	db	0
  2002  00F9A5  00                 	db	0
  2003  00F9A6  00                 	db	0
  2004  00F9A7  64                 	db	100
  2005  00F9A8  69                 	db	105
  2006  00F9A9  73                 	db	115
  2007  00F9AA  70                 	db	112
  2008  00F9AB  6C                 	db	108
  2009  00F9AC  61                 	db	97
  2010  00F9AD  79                 	db	121
  2011  00F9AE  73                 	db	115
  2012  00F9AF  20                 	db	32
  2013  00F9B0  33                 	db	51
  2014  00F9B1  00                 	db	0
  2015  00F9B2  00                 	db	0
  2016  00F9B3  00                 	db	0
  2017  00F9B4  00                 	db	0
  2018  00F9B5  00                 	db	0
  2019  00F9B6  00                 	db	0
  2020  00F9B7  00                 	db	0
  2021  00F9B8  00                 	db	0
  2022  00F9B9  63                 	db	99
  2023  00F9BA  6F                 	db	111
  2024  00F9BB  6D                 	db	109
  2025  00F9BC  6D                 	db	109
  2026  00F9BD  61                 	db	97
  2027  00F9BE  6E                 	db	110
  2028  00F9BF  64                 	db	100
  2029  00F9C0  73                 	db	115
  2030  00F9C1  20                 	db	32
  2031  00F9C2  34                 	db	52
  2032  00F9C3  00                 	db	0
  2033  00F9C4  00                 	db	0
  2034  00F9C5  00                 	db	0
  2035  00F9C6  00                 	db	0
  2036  00F9C7  00                 	db	0
  2037  00F9C8  00                 	db	0
  2038  00F9C9  00                 	db	0
  2039  00F9CA  00                 	db	0
  2040  00F9CB  64                 	db	100
  2041  00F9CC  69                 	db	105
  2042  00F9CD  73                 	db	115
  2043  00F9CE  70                 	db	112
  2044  00F9CF  6C                 	db	108
  2045  00F9D0  61                 	db	97
  2046  00F9D1  79                 	db	121
  2047  00F9D2  73                 	db	115
  2048  00F9D3  20                 	db	32
  2049  00F9D4  34                 	db	52
  2050  00F9D5  00                 	db	0
  2051  00F9D6  00                 	db	0
  2052  00F9D7  00                 	db	0
  2053  00F9D8  00                 	db	0
  2054  00F9D9  00                 	db	0
  2055  00F9DA  00                 	db	0
  2056  00F9DB  00                 	db	0
  2057  00F9DC  00                 	db	0
  2058  00F9DD                     __end_of_T:
  2059                           	opt callstack 0
  2060  00F9DD                     _spin:
  2061                           	opt callstack 0
  2062  00F9DD  7C                 	db	124
  2063  00F9DE  7C                 	db	124
  2064  00F9DF  2F                 	db	47
  2065  00F9E0  2F                 	db	47
  2066  00F9E1  2D                 	db	45
  2067  00F9E2  2D                 	db	45
  2068  00F9E3  00                 	db	0
  2069  00F9E4  00                 	db	0
  2070  00F9E5  00                 	db	0
  2071  00F9E6  00                 	db	0
  2072  00F9E7  00                 	db	0
  2073  00F9E8  00                 	db	0
  2074  00F9E9  00                 	db	0
  2075  00F9EA  00                 	db	0
  2076  00F9EB  00                 	db	0
  2077  00F9EC  00                 	db	0
  2078  00F9ED  00                 	db	0
  2079  00F9EE  00                 	db	0
  2080  00F9EF  00                 	db	0
  2081  00F9F0  00                 	db	0
  2082  00F9F1  7C                 	db	124
  2083  00F9F2  7C                 	db	124
  2084  00F9F3  2F                 	db	47
  2085  00F9F4  2F                 	db	47
  2086  00F9F5  2D                 	db	45
  2087  00F9F6  2D                 	db	45
  2088  00F9F7  5C                 	db	92
  2089  00F9F8  5C                 	db	92
  2090  00F9F9  00                 	db	0
  2091  00F9FA  00                 	db	0
  2092  00F9FB  00                 	db	0
  2093  00F9FC  00                 	db	0
  2094  00F9FD  00                 	db	0
  2095  00F9FE  00                 	db	0
  2096  00F9FF  00                 	db	0
  2097  00FA00  00                 	db	0
  2098  00FA01  00                 	db	0
  2099  00FA02  00                 	db	0
  2100  00FA03  00                 	db	0
  2101  00FA04  00                 	db	0
  2102  00FA05  4F                 	db	79
  2103  00FA06  4F                 	db	79
  2104  00FA07  4F                 	db	79
  2105  00FA08  4F                 	db	79
  2106  00FA09  4F                 	db	79
  2107  00FA0A  4F                 	db	79
  2108  00FA0B  2D                 	db	45
  2109  00FA0C  2D                 	db	45
  2110  00FA0D  5F                 	db	95
  2111  00FA0E  5F                 	db	95
  2112  00FA0F  2D                 	db	45
  2113  00FA10  00                 	db	0
  2114  00FA11  00                 	db	0
  2115  00FA12  00                 	db	0
  2116  00FA13  00                 	db	0
  2117  00FA14  00                 	db	0
  2118  00FA15  00                 	db	0
  2119  00FA16  00                 	db	0
  2120  00FA17  00                 	db	0
  2121  00FA18  00                 	db	0
  2122  00FA19  76                 	db	118
  2123  00FA1A  76                 	db	118
  2124  00FA1B  3C                 	db	60
  2125  00FA1C  3C                 	db	60
  2126  00FA1D  5E                 	db	94
  2127  00FA1E  5E                 	db	94
  2128  00FA1F  3E                 	db	62
  2129  00FA20  3E                 	db	62
  2130  00FA21  00                 	db	0
  2131  00FA22  00                 	db	0
  2132  00FA23  00                 	db	0
  2133  00FA24  00                 	db	0
  2134  00FA25  00                 	db	0
  2135  00FA26  00                 	db	0
  2136  00FA27  00                 	db	0
  2137  00FA28  00                 	db	0
  2138  00FA29  00                 	db	0
  2139  00FA2A  00                 	db	0
  2140  00FA2B  00                 	db	0
  2141  00FA2C  00                 	db	0
  2142  00FA2D  2E                 	db	46
  2143  00FA2E  2E                 	db	46
  2144  00FA2F  2A                 	db	42
  2145  00FA30  2A                 	db	42
  2146  00FA31  78                 	db	120
  2147  00FA32  23                 	db	35
  2148  00FA33  78                 	db	120
  2149  00FA34  23                 	db	35
  2150  00FA35  58                 	db	88
  2151  00FA36  58                 	db	88
  2152  00FA37  7C                 	db	124
  2153  00FA38  7C                 	db	124
  2154  00FA39  2D                 	db	45
  2155  00FA3A  2D                 	db	45
  2156  00FA3B  00                 	db	0
  2157  00FA3C  00                 	db	0
  2158  00FA3D  00                 	db	0
  2159  00FA3E  00                 	db	0
  2160  00FA3F  00                 	db	0
  2161  00FA40  00                 	db	0
  2162  00FA41  2E                 	db	46
  2163  00FA42  2E                 	db	46
  2164  00FA43  6F                 	db	111
  2165  00FA44  6F                 	db	111
  2166  00FA45  4F                 	db	79
  2167  00FA46  4F                 	db	79
  2168  00FA47  6F                 	db	111
  2169  00FA48  6F                 	db	111
  2170  00FA49  00                 	db	0
  2171  00FA4A  00                 	db	0
  2172  00FA4B  00                 	db	0
  2173  00FA4C  00                 	db	0
  2174  00FA4D  00                 	db	0
  2175  00FA4E  00                 	db	0
  2176  00FA4F  00                 	db	0
  2177  00FA50  00                 	db	0
  2178  00FA51  00                 	db	0
  2179  00FA52  00                 	db	0
  2180  00FA53  00                 	db	0
  2181  00FA54  00                 	db	0
  2182  00FA55                     __end_of_spin:
  2183                           	opt callstack 0
  2184  00FA55  0000               	dw	0
  2185  00FA57  3F80               	dw	16256
  2186  00FA59  0000               	dw	0
  2187  00FA5B  3FC0               	dw	16320
  2188  00FA5D                     __end_of_bp:
  2189                           	opt callstack 0
  2190  00FA5D  AA00               	dw	43520
  2191  00FA5F  3FB8               	dw	16312
  2192  00FA61                     __end_of_ivln2_h:
  2193                           	opt callstack 0
  2194  00FA61  23C6               	dw	9158
  2195  00FA63  B8F6               	dw	47350
  2196  00FA65                     __end_of_cp_l:
  2197                           	opt callstack 0
  2198  00FA65  4000               	dw	16384
  2199  00FA67  3F76               	dw	16246
  2200  00FA69                     __end_of_cp_h:
  2201                           	opt callstack 0
  2202  0000                     _IVTADL	set	14493
  2203  0000                     _IVTADH	set	14494
  2204  0000                     _IVTADU	set	14495
  2205  0000                     _CRCDATH	set	14689
  2206  0000                     _CRCDATL	set	14688
  2207  0000                     _CRCCON0bits	set	14696
  2208  0000                     _CRCCON1bits	set	14697
  2209  0000                     _CRCXORL	set	14694
  2210  0000                     _CRCXORH	set	14695
  2211  0000                     _SCANTRIG	set	14717
  2212  0000                     _SCANHADRL	set	14713
  2213  0000                     _SCANHADRH	set	14714
  2214  0000                     _SCANHADRU	set	14715
  2215  0000                     _SCANLADRL	set	14710
  2216  0000                     _SCANLADRH	set	14711
  2217  0000                     _SCANLADRU	set	14712
  2218  0000                     _SCANCON0	set	14716
  2219  0000                     _CRCACCH	set	14691
  2220  0000                     _CRCACCL	set	14690
  2221  0000                     _CRCCON1	set	14697
  2222  0000                     _CRCCON0	set	14696
  2223  0000                     _PIR6bits	set	14758
  2224  0000                     _PIR4bits	set	14756
  2225  0000                     _PIE8bits	set	14744
  2226  0000                     _PIR8bits	set	14760
  2227  0000                     _PIR0bits	set	14752
  2228  0000                     _NVMCON2	set	14822
  2229  0000                     _NVMDAT	set	14819
  2230  0000                     _NVMADRL	set	14816
  2231  0000                     _NVMADRH	set	14817
  2232  0000                     _NVMCON1bits	set	14821
  2233  0000                     _SCANPR	set	14839
  2234  0000                     _DMA2PR	set	14836
  2235  0000                     _DMA1PR	set	14835
  2236  0000                     _MAINPR	set	14834
  2237  0000                     _ISRPR	set	14833
  2238  0000                     _PIE2bits	set	14738
  2239  0000                     _PIR2bits	set	14754
  2240  0000                     _PIE9bits	set	14745
  2241  0000                     _PIR9bits	set	14761
  2242  0000                     _PIE6bits	set	14742
  2243  0000                     _PIE3bits	set	14739
  2244  0000                     _PMD7	set	14791
  2245  0000                     _PMD6	set	14790
  2246  0000                     _PMD5	set	14789
  2247  0000                     _PMD4	set	14788
  2248  0000                     _PMD3	set	14787
  2249  0000                     _PMD2	set	14786
  2250  0000                     _PMD1	set	14785
  2251  0000                     _PMD0	set	14784
  2252  0000                     _OSCTUNE	set	14814
  2253  0000                     _OSCFRQ	set	14815
  2254  0000                     _OSCEN	set	14813
  2255  0000                     _OSCCON3	set	14811
  2256  0000                     _OSCCON1	set	14809
  2257  0000                     _IPR8bits	set	14728
  2258  0000                     _IPR9bits	set	14729
  2259  0000                     _IPR5bits	set	14725
  2260  0000                     _IPR1bits	set	14721
  2261  0000                     _IPR3bits	set	14723
  2262  0000                     _IPR6bits	set	14726
  2263  0000                     _IPR2bits	set	14722
  2264  0000                     _PIE5bits	set	14741
  2265  0000                     _PIE1bits	set	14737
  2266  0000                     _PIR5bits	set	14757
  2267  0000                     _PIR1bits	set	14753
  2268  0000                     _PLLR	set	118496
  2269  0000                     _SPI1SDIPPS	set	15071
  2270  0000                     _U1RXPPS	set	15077
  2271  0000                     _RC6PPS	set	14870
  2272  0000                     _RC5PPS	set	14869
  2273  0000                     _INT1PPS	set	15041
  2274  0000                     _RD1PPS	set	14873
  2275  0000                     _INT0PPS	set	15040
  2276  0000                     _RC3PPS	set	14867
  2277  0000                     _RB6PPS	set	14862
  2278  0000                     _SPI1SCKPPS	set	15070
  2279  0000                     _U2RXPPS	set	15080
  2280  0000                     _SLRCONF	set	14995
  2281  0000                     _SLRCONE	set	14979
  2282  0000                     _SLRCOND	set	14963
  2283  0000                     _SLRCONC	set	14947
  2284  0000                     _SLRCONB	set	14931
  2285  0000                     _SLRCONA	set	14915
  2286  0000                     _ODCOND	set	14962
  2287  0000                     _ODCONC	set	14946
  2288  0000                     _ODCONB	set	14930
  2289  0000                     _ODCONA	set	14914
  2290  0000                     _ODCONF	set	14994
  2291  0000                     _ODCONE	set	14978
  2292  0000                     _WPUC	set	14945
  2293  0000                     _WPUA	set	14913
  2294  0000                     _WPUB	set	14929
  2295  0000                     _WPUE	set	14977
  2296  0000                     _WPUF	set	14993
  2297  0000                     _WPUD	set	14961
  2298  0000                     _ANSELA	set	14912
  2299  0000                     _ANSELF	set	14992
  2300  0000                     _ANSELE	set	14976
  2301  0000                     _ANSELB	set	14928
  2302  0000                     _ANSELC	set	14944
  2303  0000                     _ANSELD	set	14960
  2304  0000                     _DMA2SSA	set	15321
  2305  0000                     _DMA1SSA	set	15353
  2306  0000                     _DMA2DSZ	set	15310
  2307  0000                     _DMA2SSZ	set	15319
  2308  0000                     _DMA2DSA	set	15312
  2309  0000                     _DMA1DSZ	set	15342
  2310  0000                     _DMA1SSZ	set	15351
  2311  0000                     _DMA1DSA	set	15344
  2312  0000                     _DMA2CON0bits	set	15324
  2313  0000                     _DMA2CON1bits	set	15325
  2314  0000                     _DMA1CON0bits	set	15356
  2315  0000                     _DMA1CON1bits	set	15357
  2316  0000                     _DMA2CON0	set	15324
  2317  0000                     _DMA2AIRQ	set	15326
  2318  0000                     _DMA2SIRQ	set	15327
  2319  0000                     _DMA2CON1	set	15325
  2320  0000                     _DMA1CON0	set	15356
  2321  0000                     _DMA1AIRQ	set	15358
  2322  0000                     _DMA1SIRQ	set	15359
  2323  0000                     _DMA1CON1	set	15357
  2324  0000                     _CLKRCON	set	15589
  2325  0000                     _CLKRCLK	set	15590
  2326  0000                     _SPI1CON1bits	set	15637
  2327  0000                     _SPI1STATUSbits	set	15639
  2328  0000                     _SPI1INTFbits	set	15642
  2329  0000                     _SPI1CON0bits	set	15636
  2330  0000                     _SPI1RXB	set	15632
  2331  0000                     _SPI1TXB	set	15633
  2332  0000                     _SPI1TCNTL	set	15634
  2333  0000                     _SPI1CON0	set	15636
  2334  0000                     _SPI1CLK	set	15644
  2335  0000                     _SPI1BAUD	set	15641
  2336  0000                     _SPI1CON2	set	15638
  2337  0000                     _SPI1CON1	set	15637
  2338  0000                     _U2RXB	set	15824
  2339  0000                     _U2TXB	set	15826
  2340  0000                     _U2ERRIE	set	15842
  2341  0000                     _U2ERRIR	set	15841
  2342  0000                     _U2UIR	set	15840
  2343  0000                     _U2FIFO	set	15839
  2344  0000                     _U2BRGH	set	15838
  2345  0000                     _U2BRGL	set	15837
  2346  0000                     _U2CON2	set	15836
  2347  0000                     _U2CON1	set	15835
  2348  0000                     _U2CON0	set	15834
  2349  0000                     _U2P3L	set	15832
  2350  0000                     _U2P2L	set	15830
  2351  0000                     _U2P1L	set	15828
  2352  0000                     _U1RXB	set	15848
  2353  0000                     _U1ERRIE	set	15866
  2354  0000                     _U1ERRIR	set	15865
  2355  0000                     _U1UIR	set	15864
  2356  0000                     _U1FIFO	set	15863
  2357  0000                     _U1BRGH	set	15862
  2358  0000                     _U1BRGL	set	15861
  2359  0000                     _U1CON2	set	15860
  2360  0000                     _U1CON1	set	15859
  2361  0000                     _U1CON0	set	15858
  2362  0000                     _U1P3H	set	15857
  2363  0000                     _U1P3L	set	15856
  2364  0000                     _U1P2H	set	15855
  2365  0000                     _U1P2L	set	15854
  2366  0000                     _U1P1H	set	15853
  2367  0000                     _U1P1L	set	15852
  2368  0000                     _FVRCON	set	16065
  2369  0000                     _ADFLTRL	set	16102
  2370  0000                     _ADFLTRH	set	16103
  2371  0000                     _ADCON0bits	set	16120
  2372  0000                     _ADCON0	set	16120
  2373  0000                     _ADCLK	set	16127
  2374  0000                     _ADACT	set	16126
  2375  0000                     _ADREF	set	16125
  2376  0000                     _ADSTAT	set	16124
  2377  0000                     _ADCON3	set	16123
  2378  0000                     _ADCON2	set	16122
  2379  0000                     _ADCON1	set	16121
  2380  0000                     _ADPREH	set	16119
  2381  0000                     _ADPREL	set	16118
  2382  0000                     _ADCAP	set	16117
  2383  0000                     _ADACQH	set	16116
  2384  0000                     _ADACQL	set	16115
  2385  0000                     _ADPCH	set	16113
  2386  0000                     _ADRPT	set	16108
  2387  0000                     _ADACCU	set	16106
  2388  0000                     _ADSTPTH	set	16101
  2389  0000                     _ADSTPTL	set	16100
  2390  0000                     _ADUTHH	set	16097
  2391  0000                     _ADUTHL	set	16096
  2392  0000                     _ADLTHH	set	16095
  2393  0000                     _ADLTHL	set	16094
  2394  0000                     _CCPTMRS1bits	set	16223
  2395  0000                     _PORTDbits	set	16333
  2396  0000                     _PORTFbits	set	16335
  2397  0000                     _LATFbits	set	16319
  2398  0000                     _LATCbits	set	16316
  2399  0000                     _LATDbits	set	16317
  2400  0000                     _PORTBbits	set	16331
  2401  0000                     _T3CONbits	set	16294
  2402  0000                     _T3CON	set	16294
  2403  0000                     _TMR3L	set	16292
  2404  0000                     _TMR3H	set	16293
  2405  0000                     _T3CLK	set	16297
  2406  0000                     _T3GATE	set	16296
  2407  0000                     _T3GCON	set	16295
  2408  0000                     _T2CON	set	16300
  2409  0000                     _T2TMR	set	16298
  2410  0000                     _T2PR	set	16299
  2411  0000                     _T2RST	set	16303
  2412  0000                     _T2HLT	set	16301
  2413  0000                     _T2CLKCON	set	16302
  2414  0000                     _PWM8DCL	set	16224
  2415  0000                     _PWM8DCH	set	16225
  2416  0000                     _PWM8CON	set	16226
  2417  0000                     _LATEbits	set	16318
  2418  0000                     _T5CONbits	set	16282
  2419  0000                     _T5CON	set	16282
  2420  0000                     _TMR5L	set	16280
  2421  0000                     _TMR5H	set	16281
  2422  0000                     _T5CLK	set	16285
  2423  0000                     _T5GATE	set	16284
  2424  0000                     _T5GCON	set	16283
  2425  0000                     _T6CON	set	16276
  2426  0000                     _T6TMR	set	16274
  2427  0000                     _T6PR	set	16275
  2428  0000                     _T6RST	set	16279
  2429  0000                     _T6HLT	set	16277
  2430  0000                     _T6CLKCON	set	16278
  2431  0000                     _TRISD	set	16325
  2432  0000                     _TRISC	set	16324
  2433  0000                     _TRISB	set	16323
  2434  0000                     _TRISA	set	16322
  2435  0000                     _TRISF	set	16327
  2436  0000                     _TRISE	set	16326
  2437  0000                     _LATC	set	16316
  2438  0000                     _LATB	set	16315
  2439  0000                     _LATF	set	16319
  2440  0000                     _LATA	set	16314
  2441  0000                     _LATD	set	16317
  2442  0000                     _LATE	set	16318
  2443  0000                     _IVTLOCKbits	set	16340
  2444  0000                     _IVTLOCK	set	16340
  2445  0000                     _INTCON0bits	set	16338
  2446  0000                     _GIE	set	130711
  2447  00FA69                     STR_93:
  2448                           
  2449                           ; BSR set to: 57
  2450  00FA69  20                 	db	32
  2451  00FA6A  25                 	db	37
  2452  00FA6B  63                 	db	99	;'c'
  2453  00FA6C  20                 	db	32
  2454  00FA6D  2C                 	db	44
  2455  00FA6E  25                 	db	37
  2456  00FA6F  6C                 	db	108	;'l'
  2457  00FA70  75                 	db	117	;'u'
  2458  00FA71  2C                 	db	44
  2459  00FA72  25                 	db	37
  2460  00FA73  34                 	db	52	;'4'
  2461  00FA74  2E                 	db	46
  2462  00FA75  34                 	db	52	;'4'
  2463  00FA76  66                 	db	102	;'f'
  2464  00FA77  2C                 	db	44
  2465  00FA78  25                 	db	37
  2466  00FA79  34                 	db	52	;'4'
  2467  00FA7A  2E                 	db	46
  2468  00FA7B  34                 	db	52	;'4'
  2469  00FA7C  66                 	db	102	;'f'
  2470  00FA7D  2C                 	db	44
  2471  00FA7E  25                 	db	37
  2472  00FA7F  34                 	db	52	;'4'
  2473  00FA80  2E                 	db	46
  2474  00FA81  34                 	db	52	;'4'
  2475  00FA82  66                 	db	102	;'f'
  2476  00FA83  2C                 	db	44
  2477  00FA84  25                 	db	37
  2478  00FA85  34                 	db	52	;'4'
  2479  00FA86  2E                 	db	46
  2480  00FA87  34                 	db	52	;'4'
  2481  00FA88  66                 	db	102	;'f'
  2482  00FA89  2C                 	db	44
  2483  00FA8A  25                 	db	37
  2484  00FA8B  34                 	db	52	;'4'
  2485  00FA8C  2E                 	db	46
  2486  00FA8D  34                 	db	52	;'4'
  2487  00FA8E  66                 	db	102	;'f'
  2488  00FA8F  2C                 	db	44
  2489  00FA90  25                 	db	37
  2490  00FA91  34                 	db	52	;'4'
  2491  00FA92  2E                 	db	46
  2492  00FA93  33                 	db	51	;'3'
  2493  00FA94  66                 	db	102	;'f'
  2494  00FA95  2C                 	db	44
  2495  00FA96  25                 	db	37
  2496  00FA97  34                 	db	52	;'4'
  2497  00FA98  2E                 	db	46
  2498  00FA99  33                 	db	51	;'3'
  2499  00FA9A  66                 	db	102	;'f'
  2500  00FA9B  2C                 	db	44
  2501  00FA9C  25                 	db	37
  2502  00FA9D  34                 	db	52	;'4'
  2503  00FA9E  2E                 	db	46
  2504  00FA9F  33                 	db	51	;'3'
  2505  00FAA0  66                 	db	102	;'f'
  2506  00FAA1  2C                 	db	44
  2507  00FAA2  25                 	db	37
  2508  00FAA3  34                 	db	52	;'4'
  2509  00FAA4  2E                 	db	46
  2510  00FAA5  33                 	db	51	;'3'
  2511  00FAA6  66                 	db	102	;'f'
  2512  00FAA7  2C                 	db	44
  2513  00FAA8  25                 	db	37
  2514  00FAA9  34                 	db	52	;'4'
  2515  00FAAA  2E                 	db	46
  2516  00FAAB  33                 	db	51	;'3'
  2517  00FAAC  66                 	db	102	;'f'
  2518  00FAAD  2C                 	db	44
  2519  00FAAE  25                 	db	37
  2520  00FAAF  34                 	db	52	;'4'
  2521  00FAB0  2E                 	db	46
  2522  00FAB1  33                 	db	51	;'3'
  2523  00FAB2  66                 	db	102	;'f'
  2524  00FAB3  2C                 	db	44
  2525  00FAB4  25                 	db	37
  2526  00FAB5  64                 	db	100	;'d'
  2527  00FAB6  2C                 	db	44
  2528  00FAB7  25                 	db	37
  2529  00FAB8  64                 	db	100	;'d'
  2530  00FAB9  2C                 	db	44
  2531  00FABA  25                 	db	37
  2532  00FABB  32                 	db	50	;'2'
  2533  00FABC  2E                 	db	46
  2534  00FABD  36                 	db	54	;'6'
  2535  00FABE  66                 	db	102	;'f'
  2536  00FABF  2C                 	db	44
  2537  00FAC0  25                 	db	37
  2538  00FAC1  34                 	db	52	;'4'
  2539  00FAC2  2E                 	db	46
  2540  00FAC3  33                 	db	51	;'3'
  2541  00FAC4  66                 	db	102	;'f'
  2542  00FAC5  2C                 	db	44
  2543  00FAC6  25                 	db	37
  2544  00FAC7  64                 	db	100	;'d'
  2545  00FAC8  2C                 	db	44
  2546  00FAC9  25                 	db	37
  2547  00FACA  64                 	db	100	;'d'
  2548  00FACB  2C                 	db	44
  2549  00FACC  25                 	db	37
  2550  00FACD  6C                 	db	108	;'l'
  2551  00FACE  75                 	db	117	;'u'
  2552  00FACF  2C                 	db	44
  2553  00FAD0  25                 	db	37
  2554  00FAD1  6C                 	db	108	;'l'
  2555  00FAD2  75                 	db	117	;'u'
  2556  00FAD3  2C                 	db	44
  2557  00FAD4  25                 	db	37
  2558  00FAD5  34                 	db	52	;'4'
  2559  00FAD6  2E                 	db	46
  2560  00FAD7  33                 	db	51	;'3'
  2561  00FAD8  66                 	db	102	;'f'
  2562  00FAD9  2C                 	db	44
  2563  00FADA  25                 	db	37
  2564  00FADB  34                 	db	52	;'4'
  2565  00FADC  2E                 	db	46
  2566  00FADD  33                 	db	51	;'3'
  2567  00FADE  66                 	db	102	;'f'
  2568  00FADF  2C                 	db	44
  2569  00FAE0  25                 	db	37
  2570  00FAE1  34                 	db	52	;'4'
  2571  00FAE2  2E                 	db	46
  2572  00FAE3  33                 	db	51	;'3'
  2573  00FAE4  66                 	db	102	;'f'
  2574  00FAE5  0D                 	db	13
  2575  00FAE6  0A                 	db	10
  2576  00FAE7  00                 	db	0
  2577  00FAE8                     STR_39:
  2578                           
  2579                           ; BSR set to: 57
  2580  00FAE8  53                 	db	83	;'S'
  2581  00FAE9  25                 	db	37
  2582  00FAEA  63                 	db	99	;'c'
  2583  00FAEB  43                 	db	67	;'C'
  2584  00FAEC  20                 	db	32
  2585  00FAED  25                 	db	37
  2586  00FAEE  64                 	db	100	;'d'
  2587  00FAEF  20                 	db	32
  2588  00FAF0  52                 	db	82	;'R'
  2589  00FAF1  55                 	db	85	;'U'
  2590  00FAF2  4E                 	db	78	;'N'
  2591  00FAF3  20                 	db	32
  2592  00FAF4  25                 	db	37
  2593  00FAF5  64                 	db	100	;'d'
  2594  00FAF6  20                 	db	32
  2595  00FAF7  56                 	db	86	;'V'
  2596  00FAF8  25                 	db	37
  2597  00FAF9  32                 	db	50	;'2'
  2598  00FAFA  2E                 	db	46
  2599  00FAFB  32                 	db	50	;'2'
  2600  00FAFC  66                 	db	102	;'f'
  2601  00FAFD  20                 	db	32
  2602  00FAFE  20                 	db	32
  2603  00FAFF  20                 	db	32
  2604  00FB00  20                 	db	32
  2605  00FB01  20                 	db	32
  2606  00FB02  20                 	db	32
  2607  00FB03  20                 	db	32
  2608  00FB04  00                 	db	0
  2609  00FB05                     STR_20:
  2610                           
  2611                           ; BSR set to: 57
  2612  00FB05  52                 	db	82	;'R'
  2613  00FB06  31                 	db	49	;'1'
  2614  00FB07  20                 	db	32
  2615  00FB08  25                 	db	37
  2616  00FB09  32                 	db	50	;'2'
  2617  00FB0A  2E                 	db	46
  2618  00FB0B  33                 	db	51	;'3'
  2619  00FB0C  66                 	db	102	;'f'
  2620  00FB0D  20                 	db	32
  2621  00FB0E  25                 	db	37
  2622  00FB0F  33                 	db	51	;'3'
  2623  00FB10  2E                 	db	46
  2624  00FB11  34                 	db	52	;'4'
  2625  00FB12  66                 	db	102	;'f'
  2626  00FB13  20                 	db	32
  2627  00FB14  20                 	db	32
  2628  00FB15  20                 	db	32
  2629  00FB16  20                 	db	32
  2630  00FB17  20                 	db	32
  2631  00FB18  20                 	db	32
  2632  00FB19  20                 	db	32
  2633  00FB1A  20                 	db	32
  2634  00FB1B  20                 	db	32
  2635  00FB1C  20                 	db	32
  2636  00FB1D  20                 	db	32
  2637  00FB1E  00                 	db	0
  2638  00FB1F                     STR_21:
  2639                           
  2640                           ; BSR set to: 57
  2641  00FB1F  52                 	db	82	;'R'
  2642  00FB20  32                 	db	50	;'2'
  2643  00FB21  20                 	db	32
  2644  00FB22  25                 	db	37
  2645  00FB23  32                 	db	50	;'2'
  2646  00FB24  2E                 	db	46
  2647  00FB25  33                 	db	51	;'3'
  2648  00FB26  66                 	db	102	;'f'
  2649  00FB27  20                 	db	32
  2650  00FB28  25                 	db	37
  2651  00FB29  33                 	db	51	;'3'
  2652  00FB2A  2E                 	db	46
  2653  00FB2B  34                 	db	52	;'4'
  2654  00FB2C  66                 	db	102	;'f'
  2655  00FB2D  20                 	db	32
  2656  00FB2E  20                 	db	32
  2657  00FB2F  20                 	db	32
  2658  00FB30  20                 	db	32
  2659  00FB31  20                 	db	32
  2660  00FB32  20                 	db	32
  2661  00FB33  20                 	db	32
  2662  00FB34  20                 	db	32
  2663  00FB35  20                 	db	32
  2664  00FB36  20                 	db	32
  2665  00FB37  20                 	db	32
  2666  00FB38  00                 	db	0
  2667  00FB39                     STR_11:
  2668                           
  2669                           ; BSR set to: 57
  2670  00FB39  53                 	db	83	;'S'
  2671  00FB3A  20                 	db	32
  2672  00FB3B  53                 	db	83	;'S'
  2673  00FB3C  25                 	db	37
  2674  00FB3D  63                 	db	99	;'c'
  2675  00FB3E  43                 	db	67	;'C'
  2676  00FB3F  20                 	db	32
  2677  00FB40  25                 	db	37
  2678  00FB41  64                 	db	100	;'d'
  2679  00FB42  20                 	db	32
  2680  00FB43  25                 	db	37
  2681  00FB44  32                 	db	50	;'2'
  2682  00FB45  2E                 	db	46
  2683  00FB46  34                 	db	52	;'4'
  2684  00FB47  66                 	db	102	;'f'
  2685  00FB48  20                 	db	32
  2686  00FB49  20                 	db	32
  2687  00FB4A  20                 	db	32
  2688  00FB4B  20                 	db	32
  2689  00FB4C  20                 	db	32
  2690  00FB4D  20                 	db	32
  2691  00FB4E  20                 	db	32
  2692  00FB4F  20                 	db	32
  2693  00FB50  20                 	db	32
  2694  00FB51  20                 	db	32
  2695  00FB52  00                 	db	0
  2696  00FB53                     
  2697                           ; BSR set to: 57
  2698  00FB53  20                 	db	32
  2699  00FB54  4D                 	db	77	;'M'
  2700  00FB55  65                 	db	101	;'e'
  2701  00FB56  73                 	db	115	;'s'
  2702  00FB57  67                 	db	103	;'g'
  2703  00FB58  20                 	db	32
  2704  00FB59  25                 	db	37
  2705  00FB5A  64                 	db	100	;'d'
  2706  00FB5B  20                 	db	32
  2707  00FB5C  53                 	db	83	;'S'
  2708  00FB5D  74                 	db	116	;'t'
  2709  00FB5E  61                 	db	97	;'a'
  2710  00FB5F  63                 	db	99	;'c'
  2711  00FB60  6B                 	db	107	;'k'
  2712  00FB61  20                 	db	32
  2713  00FB62  25                 	db	37
  2714  00FB63  64                 	db	100	;'d'
  2715  00FB64  20                 	db	32
  2716  00FB65  20                 	db	32
  2717  00FB66  20                 	db	32
  2718  00FB67  20                 	db	32
  2719  00FB68  20                 	db	32
  2720  00FB69  20                 	db	32
  2721  00FB6A  00                 	db	0
  2722  00FB6B                     STR_40:
  2723                           
  2724                           ; BSR set to: 57
  2725  00FB6B  45                 	db	69	;'E'
  2726  00FB6C  53                 	db	83	;'S'
  2727  00FB6D  52                 	db	82	;'R'
  2728  00FB6E  20                 	db	32
  2729  00FB6F  20                 	db	32
  2730  00FB70  25                 	db	37
  2731  00FB71  32                 	db	50	;'2'
  2732  00FB72  2E                 	db	46
  2733  00FB73  36                 	db	54	;'6'
  2734  00FB74  66                 	db	102	;'f'
  2735  00FB75  20                 	db	32
  2736  00FB76  20                 	db	32
  2737  00FB77  20                 	db	32
  2738  00FB78  20                 	db	32
  2739  00FB79  20                 	db	32
  2740  00FB7A  20                 	db	32
  2741  00FB7B  20                 	db	32
  2742  00FB7C  20                 	db	32
  2743  00FB7D  20                 	db	32
  2744  00FB7E  20                 	db	32
  2745  00FB7F  20                 	db	32
  2746  00FB80  20                 	db	32
  2747  00FB81  00                 	db	0
  2748  00FB82                     STR_37:
  2749                           
  2750                           ; BSR set to: 57
  2751  00FB82  42                 	db	66	;'B'
  2752  00FB83  41                 	db	65	;'A'
  2753  00FB84  54                 	db	84	;'T'
  2754  00FB85  54                 	db	84	;'T'
  2755  00FB86  20                 	db	32
  2756  00FB87  50                 	db	80	;'P'
  2757  00FB88  57                 	db	87	;'W'
  2758  00FB89  52                 	db	82	;'R'
  2759  00FB8A  20                 	db	32
  2760  00FB8B  25                 	db	37
  2761  00FB8C  33                 	db	51	;'3'
  2762  00FB8D  2E                 	db	46
  2763  00FB8E  32                 	db	50	;'2'
  2764  00FB8F  66                 	db	102	;'f'
  2765  00FB90  20                 	db	32
  2766  00FB91  20                 	db	32
  2767  00FB92  20                 	db	32
  2768  00FB93  20                 	db	32
  2769  00FB94  20                 	db	32
  2770  00FB95  20                 	db	32
  2771  00FB96  20                 	db	32
  2772  00FB97  20                 	db	32
  2773  00FB98  00                 	db	0
  2774  00FB99                     STR_41:
  2775                           
  2776                           ; BSR set to: 57
  2777  00FB99  52                 	db	82	;'R'
  2778  00FB9A  31                 	db	49	;'1'
  2779  00FB9B  20                 	db	32
  2780  00FB9C  25                 	db	37
  2781  00FB9D  32                 	db	50	;'2'
  2782  00FB9E  2E                 	db	46
  2783  00FB9F  33                 	db	51	;'3'
  2784  00FBA0  66                 	db	102	;'f'
  2785  00FBA1  20                 	db	32
  2786  00FBA2  25                 	db	37
  2787  00FBA3  33                 	db	51	;'3'
  2788  00FBA4  2E                 	db	46
  2789  00FBA5  34                 	db	52	;'4'
  2790  00FBA6  66                 	db	102	;'f'
  2791  00FBA7  20                 	db	32
  2792  00FBA8  20                 	db	32
  2793  00FBA9  20                 	db	32
  2794  00FBAA  20                 	db	32
  2795  00FBAB  20                 	db	32
  2796  00FBAC  20                 	db	32
  2797  00FBAD  20                 	db	32
  2798  00FBAE  20                 	db	32
  2799  00FBAF  00                 	db	0
  2800  00FBB0                     STR_42:
  2801                           
  2802                           ; BSR set to: 57
  2803  00FBB0  52                 	db	82	;'R'
  2804  00FBB1  32                 	db	50	;'2'
  2805  00FBB2  20                 	db	32
  2806  00FBB3  25                 	db	37
  2807  00FBB4  32                 	db	50	;'2'
  2808  00FBB5  2E                 	db	46
  2809  00FBB6  33                 	db	51	;'3'
  2810  00FBB7  66                 	db	102	;'f'
  2811  00FBB8  20                 	db	32
  2812  00FBB9  25                 	db	37
  2813  00FBBA  33                 	db	51	;'3'
  2814  00FBBB  2E                 	db	46
  2815  00FBBC  34                 	db	52	;'4'
  2816  00FBBD  66                 	db	102	;'f'
  2817  00FBBE  20                 	db	32
  2818  00FBBF  20                 	db	32
  2819  00FBC0  20                 	db	32
  2820  00FBC1  20                 	db	32
  2821  00FBC2  20                 	db	32
  2822  00FBC3  20                 	db	32
  2823  00FBC4  20                 	db	32
  2824  00FBC5  20                 	db	32
  2825  00FBC6  00                 	db	0
  2826  00FBC7                     STR_38:
  2827                           
  2828                           ; BSR set to: 57
  2829  00FBC7  42                 	db	66	;'B'
  2830  00FBC8  41                 	db	65	;'A'
  2831  00FBC9  48                 	db	72	;'H'
  2832  00FBCA  20                 	db	32
  2833  00FBCB  25                 	db	37
  2834  00FBCC  33                 	db	51	;'3'
  2835  00FBCD  2E                 	db	46
  2836  00FBCE  32                 	db	50	;'2'
  2837  00FBCF  66                 	db	102	;'f'
  2838  00FBD0  20                 	db	32
  2839  00FBD1  50                 	db	80	;'P'
  2840  00FBD2  25                 	db	37
  2841  00FBD3  33                 	db	51	;'3'
  2842  00FBD4  2E                 	db	46
  2843  00FBD5  32                 	db	50	;'2'
  2844  00FBD6  66                 	db	102	;'f'
  2845  00FBD7  20                 	db	32
  2846  00FBD8  20                 	db	32
  2847  00FBD9  20                 	db	32
  2848  00FBDA  20                 	db	32
  2849  00FBDB  20                 	db	32
  2850  00FBDC  20                 	db	32
  2851  00FBDD  00                 	db	0
  2852  00FBDE                     STR_14:
  2853                           
  2854                           ; BSR set to: 57
  2855  00FBDE  20                 	db	32
  2856  00FBDF  20                 	db	32
  2857  00FBE0  20                 	db	32
  2858  00FBE1  20                 	db	32
  2859  00FBE2  20                 	db	32
  2860  00FBE3  20                 	db	32
  2861  00FBE4  20                 	db	32
  2862  00FBE5  20                 	db	32
  2863  00FBE6  20                 	db	32
  2864  00FBE7  20                 	db	32
  2865  00FBE8  20                 	db	32
  2866  00FBE9  20                 	db	32
  2867  00FBEA  20                 	db	32
  2868  00FBEB  20                 	db	32
  2869  00FBEC  20                 	db	32
  2870  00FBED  20                 	db	32
  2871  00FBEE  20                 	db	32
  2872  00FBEF  20                 	db	32
  2873  00FBF0  20                 	db	32
  2874  00FBF1  20                 	db	32
  2875  00FBF2  20                 	db	32
  2876  00FBF3  00                 	db	0
  2877  00FBF4                     STR_19:
  2878                           
  2879                           ; BSR set to: 57
  2880  00FBF4  45                 	db	69	;'E'
  2881  00FBF5  53                 	db	83	;'S'
  2882  00FBF6  52                 	db	82	;'R'
  2883  00FBF7  20                 	db	32
  2884  00FBF8  20                 	db	32
  2885  00FBF9  25                 	db	37
  2886  00FBFA  32                 	db	50	;'2'
  2887  00FBFB  2E                 	db	46
  2888  00FBFC  36                 	db	54	;'6'
  2889  00FBFD  66                 	db	102	;'f'
  2890  00FBFE  20                 	db	32
  2891  00FBFF  20                 	db	32
  2892  00FC00  20                 	db	32
  2893  00FC01  20                 	db	32
  2894  00FC02  20                 	db	32
  2895  00FC03  20                 	db	32
  2896  00FC04  20                 	db	32
  2897  00FC05  20                 	db	32
  2898  00FC06  20                 	db	32
  2899  00FC07  20                 	db	32
  2900  00FC08  20                 	db	32
  2901  00FC09  00                 	db	0
  2902  00FC0A                     STR_12:
  2903                           
  2904                           ; BSR set to: 57
  2905  00FC0A  53                 	db	83	;'S'
  2906  00FC0B  74                 	db	116	;'t'
  2907  00FC0C  61                 	db	97	;'a'
  2908  00FC0D  74                 	db	116	;'t'
  2909  00FC0E  69                 	db	105	;'i'
  2910  00FC0F  63                 	db	99	;'c'
  2911  00FC10  20                 	db	32
  2912  00FC11  53                 	db	83	;'S'
  2913  00FC12  4F                 	db	79	;'O'
  2914  00FC13  43                 	db	67	;'C'
  2915  00FC14  20                 	db	32
  2916  00FC15  25                 	db	37
  2917  00FC16  64                 	db	100	;'d'
  2918  00FC17  20                 	db	32
  2919  00FC18  20                 	db	32
  2920  00FC19  20                 	db	32
  2921  00FC1A  20                 	db	32
  2922  00FC1B  20                 	db	32
  2923  00FC1C  20                 	db	32
  2924  00FC1D  20                 	db	32
  2925  00FC1E  20                 	db	32
  2926  00FC1F  00                 	db	0
  2927  00FC20                     STR_34:
  2928                           
  2929                           ; BSR set to: 57
  2930  00FC20  42                 	db	66	;'B'
  2931  00FC21  41                 	db	65	;'A'
  2932  00FC22  54                 	db	84	;'T'
  2933  00FC23  20                 	db	32
  2934  00FC24  49                 	db	73	;'I'
  2935  00FC25  57                 	db	87	;'W'
  2936  00FC26  48                 	db	72	;'H'
  2937  00FC27  20                 	db	32
  2938  00FC28  25                 	db	37
  2939  00FC29  34                 	db	52	;'4'
  2940  00FC2A  2E                 	db	46
  2941  00FC2B  31                 	db	49	;'1'
  2942  00FC2C  66                 	db	102	;'f'
  2943  00FC2D  20                 	db	32
  2944  00FC2E  20                 	db	32
  2945  00FC2F  20                 	db	32
  2946  00FC30  20                 	db	32
  2947  00FC31  20                 	db	32
  2948  00FC32  20                 	db	32
  2949  00FC33  20                 	db	32
  2950  00FC34  20                 	db	32
  2951  00FC35  00                 	db	0
  2952  00FC36                     STR_35:
  2953                           
  2954                           ; BSR set to: 57
  2955  00FC36  42                 	db	66	;'B'
  2956  00FC37  41                 	db	65	;'A'
  2957  00FC38  54                 	db	84	;'T'
  2958  00FC39  20                 	db	32
  2959  00FC3A  4F                 	db	79	;'O'
  2960  00FC3B  57                 	db	87	;'W'
  2961  00FC3C  48                 	db	72	;'H'
  2962  00FC3D  20                 	db	32
  2963  00FC3E  25                 	db	37
  2964  00FC3F  34                 	db	52	;'4'
  2965  00FC40  2E                 	db	46
  2966  00FC41  31                 	db	49	;'1'
  2967  00FC42  66                 	db	102	;'f'
  2968  00FC43  20                 	db	32
  2969  00FC44  20                 	db	32
  2970  00FC45  20                 	db	32
  2971  00FC46  20                 	db	32
  2972  00FC47  20                 	db	32
  2973  00FC48  20                 	db	32
  2974  00FC49  20                 	db	32
  2975  00FC4A  20                 	db	32
  2976  00FC4B  00                 	db	0
  2977  00FC4C                     STR_36:
  2978                           
  2979                           ; BSR set to: 57
  2980  00FC4C  42                 	db	66	;'B'
  2981  00FC4D  41                 	db	65	;'A'
  2982  00FC4E  54                 	db	84	;'T'
  2983  00FC4F  20                 	db	32
  2984  00FC50  54                 	db	84	;'T'
  2985  00FC51  57                 	db	87	;'W'
  2986  00FC52  48                 	db	72	;'H'
  2987  00FC53  20                 	db	32
  2988  00FC54  25                 	db	37
  2989  00FC55  34                 	db	52	;'4'
  2990  00FC56  2E                 	db	46
  2991  00FC57  31                 	db	49	;'1'
  2992  00FC58  66                 	db	102	;'f'
  2993  00FC59  20                 	db	32
  2994  00FC5A  20                 	db	32
  2995  00FC5B  20                 	db	32
  2996  00FC5C  20                 	db	32
  2997  00FC5D  20                 	db	32
  2998  00FC5E  20                 	db	32
  2999  00FC5F  20                 	db	32
  3000  00FC60  20                 	db	32
  3001  00FC61  00                 	db	0
  3002  00FC62                     STR_30:
  3003                           
  3004                           ; BSR set to: 57
  3005  00FC62  49                 	db	73	;'I'
  3006  00FC63  4E                 	db	78	;'N'
  3007  00FC64  56                 	db	86	;'V'
  3008  00FC65  20                 	db	32
  3009  00FC66  20                 	db	32
  3010  00FC67  57                 	db	87	;'W'
  3011  00FC68  48                 	db	72	;'H'
  3012  00FC69  20                 	db	32
  3013  00FC6A  25                 	db	37
  3014  00FC6B  33                 	db	51	;'3'
  3015  00FC6C  2E                 	db	46
  3016  00FC6D  32                 	db	50	;'2'
  3017  00FC6E  66                 	db	102	;'f'
  3018  00FC6F  20                 	db	32
  3019  00FC70  20                 	db	32
  3020  00FC71  20                 	db	32
  3021  00FC72  20                 	db	32
  3022  00FC73  20                 	db	32
  3023  00FC74  20                 	db	32
  3024  00FC75  20                 	db	32
  3025  00FC76  20                 	db	32
  3026  00FC77  00                 	db	0
  3027  00FC78                     STR_29:
  3028                           
  3029                           ; BSR set to: 57
  3030  00FC78  4C                 	db	76	;'L'
  3031  00FC79  4F                 	db	79	;'O'
  3032  00FC7A  41                 	db	65	;'A'
  3033  00FC7B  44                 	db	68	;'D'
  3034  00FC7C  20                 	db	32
  3035  00FC7D  57                 	db	87	;'W'
  3036  00FC7E  48                 	db	72	;'H'
  3037  00FC7F  20                 	db	32
  3038  00FC80  25                 	db	37
  3039  00FC81  33                 	db	51	;'3'
  3040  00FC82  2E                 	db	46
  3041  00FC83  32                 	db	50	;'2'
  3042  00FC84  66                 	db	102	;'f'
  3043  00FC85  20                 	db	32
  3044  00FC86  20                 	db	32
  3045  00FC87  20                 	db	32
  3046  00FC88  20                 	db	32
  3047  00FC89  20                 	db	32
  3048  00FC8A  20                 	db	32
  3049  00FC8B  20                 	db	32
  3050  00FC8C  20                 	db	32
  3051  00FC8D  00                 	db	0
  3052  00FC8E                     STR_28:
  3053                           
  3054                           ; BSR set to: 57
  3055  00FC8E  50                 	db	80	;'P'
  3056  00FC8F  56                 	db	86	;'V'
  3057  00FC90  20                 	db	32
  3058  00FC91  25                 	db	37
  3059  00FC92  63                 	db	99	;'c'
  3060  00FC93  20                 	db	32
  3061  00FC94  57                 	db	87	;'W'
  3062  00FC95  48                 	db	72	;'H'
  3063  00FC96  20                 	db	32
  3064  00FC97  25                 	db	37
  3065  00FC98  33                 	db	51	;'3'
  3066  00FC99  2E                 	db	46
  3067  00FC9A  32                 	db	50	;'2'
  3068  00FC9B  66                 	db	102	;'f'
  3069  00FC9C  20                 	db	32
  3070  00FC9D  20                 	db	32
  3071  00FC9E  20                 	db	32
  3072  00FC9F  20                 	db	32
  3073  00FCA0  20                 	db	32
  3074  00FCA1  20                 	db	32
  3075  00FCA2  20                 	db	32
  3076  00FCA3  00                 	db	0
  3077  00FCA4                     STR_27:
  3078                           
  3079                           ; BSR set to: 57
  3080  00FCA4  49                 	db	73	;'I'
  3081  00FCA5  4E                 	db	78	;'N'
  3082  00FCA6  56                 	db	86	;'V'
  3083  00FCA7  20                 	db	32
  3084  00FCA8  20                 	db	32
  3085  00FCA9  50                 	db	80	;'P'
  3086  00FCAA  57                 	db	87	;'W'
  3087  00FCAB  52                 	db	82	;'R'
  3088  00FCAC  20                 	db	32
  3089  00FCAD  25                 	db	37
  3090  00FCAE  33                 	db	51	;'3'
  3091  00FCAF  2E                 	db	46
  3092  00FCB0  32                 	db	50	;'2'
  3093  00FCB1  66                 	db	102	;'f'
  3094  00FCB2  20                 	db	32
  3095  00FCB3  20                 	db	32
  3096  00FCB4  20                 	db	32
  3097  00FCB5  20                 	db	32
  3098  00FCB6  20                 	db	32
  3099  00FCB7  20                 	db	32
  3100  00FCB8  20                 	db	32
  3101  00FCB9  00                 	db	0
  3102  00FCBA                     STR_26:
  3103                           
  3104                           ; BSR set to: 57
  3105  00FCBA  4C                 	db	76	;'L'
  3106  00FCBB  4F                 	db	79	;'O'
  3107  00FCBC  41                 	db	65	;'A'
  3108  00FCBD  44                 	db	68	;'D'
  3109  00FCBE  20                 	db	32
  3110  00FCBF  50                 	db	80	;'P'
  3111  00FCC0  57                 	db	87	;'W'
  3112  00FCC1  52                 	db	82	;'R'
  3113  00FCC2  20                 	db	32
  3114  00FCC3  25                 	db	37
  3115  00FCC4  33                 	db	51	;'3'
  3116  00FCC5  2E                 	db	46
  3117  00FCC6  32                 	db	50	;'2'
  3118  00FCC7  66                 	db	102	;'f'
  3119  00FCC8  20                 	db	32
  3120  00FCC9  20                 	db	32
  3121  00FCCA  20                 	db	32
  3122  00FCCB  20                 	db	32
  3123  00FCCC  20                 	db	32
  3124  00FCCD  20                 	db	32
  3125  00FCCE  20                 	db	32
  3126  00FCCF  00                 	db	0
  3127  00FCD0                     STR_25:
  3128                           
  3129                           ; BSR set to: 57
  3130  00FCD0  50                 	db	80	;'P'
  3131  00FCD1  56                 	db	86	;'V'
  3132  00FCD2  20                 	db	32
  3133  00FCD3  25                 	db	37
  3134  00FCD4  63                 	db	99	;'c'
  3135  00FCD5  20                 	db	32
  3136  00FCD6  50                 	db	80	;'P'
  3137  00FCD7  57                 	db	87	;'W'
  3138  00FCD8  52                 	db	82	;'R'
  3139  00FCD9  20                 	db	32
  3140  00FCDA  25                 	db	37
  3141  00FCDB  33                 	db	51	;'3'
  3142  00FCDC  2E                 	db	46
  3143  00FCDD  32                 	db	50	;'2'
  3144  00FCDE  66                 	db	102	;'f'
  3145  00FCDF  20                 	db	32
  3146  00FCE0  20                 	db	32
  3147  00FCE1  20                 	db	32
  3148  00FCE2  20                 	db	32
  3149  00FCE3  20                 	db	32
  3150  00FCE4  20                 	db	32
  3151  00FCE5  00                 	db	0
  3152  00FCE6                     STR_13:
  3153                           
  3154                           ; BSR set to: 57
  3155  00FCE6  42                 	db	66	;'B'
  3156  00FCE7  61                 	db	97	;'a'
  3157  00FCE8  74                 	db	116	;'t'
  3158  00FCE9  74                 	db	116	;'t'
  3159  00FCEA  65                 	db	101	;'e'
  3160  00FCEB  72                 	db	114	;'r'
  3161  00FCEC  79                 	db	121	;'y'
  3162  00FCED  20                 	db	32
  3163  00FCEE  41                 	db	65	;'A'
  3164  00FCEF  68                 	db	104	;'h'
  3165  00FCF0  20                 	db	32
  3166  00FCF1  25                 	db	37
  3167  00FCF2  33                 	db	51	;'3'
  3168  00FCF3  2E                 	db	46
  3169  00FCF4  32                 	db	50	;'2'
  3170  00FCF5  66                 	db	102	;'f'
  3171  00FCF6  20                 	db	32
  3172  00FCF7  20                 	db	32
  3173  00FCF8  20                 	db	32
  3174  00FCF9  20                 	db	32
  3175  00FCFA  20                 	db	32
  3176  00FCFB  00                 	db	0
  3177  00FCFC                     STR_32:
  3178                           
  3179                           ; BSR set to: 57
  3180  00FCFC  42                 	db	66	;'B'
  3181  00FCFD  56                 	db	86	;'V'
  3182  00FCFE  20                 	db	32
  3183  00FCFF  25                 	db	37
  3184  00FD00  32                 	db	50	;'2'
  3185  00FD01  2E                 	db	46
  3186  00FD02  32                 	db	50	;'2'
  3187  00FD03  66                 	db	102	;'f'
  3188  00FD04  20                 	db	32
  3189  00FD05  42                 	db	66	;'B'
  3190  00FD06  41                 	db	65	;'A'
  3191  00FD07  20                 	db	32
  3192  00FD08  25                 	db	37
  3193  00FD09  32                 	db	50	;'2'
  3194  00FD0A  2E                 	db	46
  3195  00FD0B  32                 	db	50	;'2'
  3196  00FD0C  66                 	db	102	;'f'
  3197  00FD0D  20                 	db	32
  3198  00FD0E  20                 	db	32
  3199  00FD0F  20                 	db	32
  3200  00FD10  20                 	db	32
  3201  00FD11  00                 	db	0
  3202  00FD12                     STR_33:
  3203                           
  3204                           ; BSR set to: 57
  3205  00FD12  43                 	db	67	;'C'
  3206  00FD13  56                 	db	86	;'V'
  3207  00FD14  20                 	db	32
  3208  00FD15  25                 	db	37
  3209  00FD16  32                 	db	50	;'2'
  3210  00FD17  2E                 	db	46
  3211  00FD18  32                 	db	50	;'2'
  3212  00FD19  66                 	db	102	;'f'
  3213  00FD1A  20                 	db	32
  3214  00FD1B  4C                 	db	76	;'L'
  3215  00FD1C  41                 	db	65	;'A'
  3216  00FD1D  20                 	db	32
  3217  00FD1E  25                 	db	37
  3218  00FD1F  32                 	db	50	;'2'
  3219  00FD20  2E                 	db	46
  3220  00FD21  32                 	db	50	;'2'
  3221  00FD22  66                 	db	102	;'f'
  3222  00FD23  20                 	db	32
  3223  00FD24  20                 	db	32
  3224  00FD25  20                 	db	32
  3225  00FD26  20                 	db	32
  3226  00FD27  00                 	db	0
  3227  00FD28                     STR_31:
  3228                           
  3229                           ; BSR set to: 57
  3230  00FD28  50                 	db	80	;'P'
  3231  00FD29  56                 	db	86	;'V'
  3232  00FD2A  20                 	db	32
  3233  00FD2B  25                 	db	37
  3234  00FD2C  32                 	db	50	;'2'
  3235  00FD2D  2E                 	db	46
  3236  00FD2E  32                 	db	50	;'2'
  3237  00FD2F  66                 	db	102	;'f'
  3238  00FD30  20                 	db	32
  3239  00FD31  50                 	db	80	;'P'
  3240  00FD32  41                 	db	65	;'A'
  3241  00FD33  20                 	db	32
  3242  00FD34  25                 	db	37
  3243  00FD35  32                 	db	50	;'2'
  3244  00FD36  2E                 	db	46
  3245  00FD37  32                 	db	50	;'2'
  3246  00FD38  66                 	db	102	;'f'
  3247  00FD39  20                 	db	32
  3248  00FD3A  20                 	db	32
  3249  00FD3B  20                 	db	32
  3250  00FD3C  20                 	db	32
  3251  00FD3D  00                 	db	0
  3252  00FD3E                     STR_43:
  3253                           
  3254                           ; BSR set to: 57
  3255  00FD3E  25                 	db	37
  3256  00FD3F  64                 	db	100	;'d'
  3257  00FD40  20                 	db	32
  3258  00FD41  25                 	db	37
  3259  00FD42  32                 	db	50	;'2'
  3260  00FD43  2E                 	db	46
  3261  00FD44  34                 	db	52	;'4'
  3262  00FD45  66                 	db	102	;'f'
  3263  00FD46  2C                 	db	44
  3264  00FD47  20                 	db	32
  3265  00FD48  25                 	db	37
  3266  00FD49  64                 	db	100	;'d'
  3267  00FD4A  20                 	db	32
  3268  00FD4B  20                 	db	32
  3269  00FD4C  54                 	db	84	;'T'
  3270  00FD4D  52                 	db	82	;'R'
  3271  00FD4E  49                 	db	73	;'I'
  3272  00FD4F  4D                 	db	77	;'M'
  3273  00FD50  20                 	db	32
  3274  00FD51  20                 	db	32
  3275  00FD52  20                 	db	32
  3276  00FD53  00                 	db	0
  3277  00FD54                     STR_51:
  3278                           
  3279                           ; BSR set to: 57
  3280  00FD54  20                 	db	32
  3281  00FD55  25                 	db	37
  3282  00FD56  64                 	db	100	;'d'
  3283  00FD57  20                 	db	32
  3284  00FD58  25                 	db	37
  3285  00FD59  64                 	db	100	;'d'
  3286  00FD5A  20                 	db	32
  3287  00FD5B  20                 	db	32
  3288  00FD5C  20                 	db	32
  3289  00FD5D  20                 	db	32
  3290  00FD5E  20                 	db	32
  3291  00FD5F  20                 	db	32
  3292  00FD60  20                 	db	32
  3293  00FD61  20                 	db	32
  3294  00FD62  20                 	db	32
  3295  00FD63  20                 	db	32
  3296  00FD64  20                 	db	32
  3297  00FD65  20                 	db	32
  3298  00FD66  20                 	db	32
  3299  00FD67  20                 	db	32
  3300  00FD68  00                 	db	0
  3301  00FD69                     STR_67:
  3302                           
  3303                           ; BSR set to: 57
  3304  00FD69  20                 	db	32
  3305  00FD6A  25                 	db	37
  3306  00FD6B  66                 	db	102	;'f'
  3307  00FD6C  20                 	db	32
  3308  00FD6D  25                 	db	37
  3309  00FD6E  66                 	db	102	;'f'
  3310  00FD6F  20                 	db	32
  3311  00FD70  20                 	db	32
  3312  00FD71  20                 	db	32
  3313  00FD72  20                 	db	32
  3314  00FD73  20                 	db	32
  3315  00FD74  20                 	db	32
  3316  00FD75  20                 	db	32
  3317  00FD76  20                 	db	32
  3318  00FD77  20                 	db	32
  3319  00FD78  20                 	db	32
  3320  00FD79  20                 	db	32
  3321  00FD7A  20                 	db	32
  3322  00FD7B  20                 	db	32
  3323  00FD7C  20                 	db	32
  3324  00FD7D  00                 	db	0
  3325  00FD7E                     STR_54:
  3326                           
  3327                           ; BSR set to: 57
  3328  00FD7E  20                 	db	32
  3329  00FD7F  25                 	db	37
  3330  00FD80  6C                 	db	108	;'l'
  3331  00FD81  64                 	db	100	;'d'
  3332  00FD82  20                 	db	32
  3333  00FD83  25                 	db	37
  3334  00FD84  6C                 	db	108	;'l'
  3335  00FD85  64                 	db	100	;'d'
  3336  00FD86  20                 	db	32
  3337  00FD87  20                 	db	32
  3338  00FD88  20                 	db	32
  3339  00FD89  20                 	db	32
  3340  00FD8A  20                 	db	32
  3341  00FD8B  20                 	db	32
  3342  00FD8C  20                 	db	32
  3343  00FD8D  20                 	db	32
  3344  00FD8E  20                 	db	32
  3345  00FD8F  20                 	db	32
  3346  00FD90  20                 	db	32
  3347  00FD91  20                 	db	32
  3348  00FD92  00                 	db	0
  3349  00FD93                     STR_10:
  3350                           
  3351                           ; BSR set to: 57
  3352  00FD93  42                 	db	66	;'B'
  3353  00FD94  56                 	db	86	;'V'
  3354  00FD95  20                 	db	32
  3355  00FD96  25                 	db	37
  3356  00FD97  32                 	db	50	;'2'
  3357  00FD98  2E                 	db	46
  3358  00FD99  34                 	db	52	;'4'
  3359  00FD9A  66                 	db	102	;'f'
  3360  00FD9B  20                 	db	32
  3361  00FD9C  20                 	db	32
  3362  00FD9D  20                 	db	32
  3363  00FD9E  20                 	db	32
  3364  00FD9F  20                 	db	32
  3365  00FDA0  20                 	db	32
  3366  00FDA1  20                 	db	32
  3367  00FDA2  20                 	db	32
  3368  00FDA3  20                 	db	32
  3369  00FDA4  20                 	db	32
  3370  00FDA5  20                 	db	32
  3371  00FDA6  20                 	db	32
  3372  00FDA7  00                 	db	0
  3373  00FDA8                     STR_4:
  3374                           
  3375                           ; BSR set to: 57
  3376  00FDA8  20                 	db	32
  3377  00FDA9  4E                 	db	78	;'N'
  3378  00FDAA  53                 	db	83	;'S'
  3379  00FDAB  41                 	db	65	;'A'
  3380  00FDAC  53                 	db	83	;'S'
  3381  00FDAD  50                 	db	80	;'P'
  3382  00FDAE  4F                 	db	79	;'O'
  3383  00FDAF  4F                 	db	79	;'O'
  3384  00FDB0  4B                 	db	75	;'K'
  3385  00FDB1  20                 	db	32
  3386  00FDB2  20                 	db	32
  3387  00FDB3  20                 	db	32
  3388  00FDB4  20                 	db	32
  3389  00FDB5  20                 	db	32
  3390  00FDB6  20                 	db	32
  3391  00FDB7  20                 	db	32
  3392  00FDB8  20                 	db	32
  3393  00FDB9  20                 	db	32
  3394  00FDBA  20                 	db	32
  3395  00FDBB  20                 	db	32
  3396  00FDBC  00                 	db	0
  3397  00FDBD                     STR_15:
  3398                           
  3399                           ; BSR set to: 57
  3400  00FDBD  42                 	db	66	;'B'
  3401  00FDBE  61                 	db	97	;'a'
  3402  00FDBF  74                 	db	116	;'t'
  3403  00FDC0  74                 	db	116	;'t'
  3404  00FDC1  65                 	db	101	;'e'
  3405  00FDC2  72                 	db	114	;'r'
  3406  00FDC3  79                 	db	121	;'y'
  3407  00FDC4  20                 	db	32
  3408  00FDC5  45                 	db	69	;'E'
  3409  00FDC6  53                 	db	83	;'S'
  3410  00FDC7  52                 	db	82	;'R'
  3411  00FDC8  20                 	db	32
  3412  00FDC9  20                 	db	32
  3413  00FDCA  20                 	db	32
  3414  00FDCB  20                 	db	32
  3415  00FDCC  20                 	db	32
  3416  00FDCD  20                 	db	32
  3417  00FDCE  20                 	db	32
  3418  00FDCF  20                 	db	32
  3419  00FDD0  20                 	db	32
  3420  00FDD1  00                 	db	0
  3421  00FDD2                     STR_16:
  3422                           
  3423                           ; BSR set to: 57
  3424  00FDD2  43                 	db	67	;'C'
  3425  00FDD3  61                 	db	97	;'a'
  3426  00FDD4  6C                 	db	108	;'l'
  3427  00FDD5  63                 	db	99	;'c'
  3428  00FDD6  75                 	db	117	;'u'
  3429  00FDD7  6C                 	db	108	;'l'
  3430  00FDD8  61                 	db	97	;'a'
  3431  00FDD9  74                 	db	116	;'t'
  3432  00FDDA  69                 	db	105	;'i'
  3433  00FDDB  6F                 	db	111	;'o'
  3434  00FDDC  6E                 	db	110	;'n'
  3435  00FDDD  20                 	db	32
  3436  00FDDE  20                 	db	32
  3437  00FDDF  20                 	db	32
  3438  00FDE0  20                 	db	32
  3439  00FDE1  20                 	db	32
  3440  00FDE2  20                 	db	32
  3441  00FDE3  20                 	db	32
  3442  00FDE4  20                 	db	32
  3443  00FDE5  20                 	db	32
  3444  00FDE6  00                 	db	0
  3445  00FDE7                     STR_48:
  3446                           
  3447                           ; BSR set to: 57
  3448  00FDE7  43                 	db	67	;'C'
  3449  00FDE8  61                 	db	97	;'a'
  3450  00FDE9  6C                 	db	108	;'l'
  3451  00FDEA  69                 	db	105	;'i'
  3452  00FDEB  62                 	db	98	;'b'
  3453  00FDEC  72                 	db	114	;'r'
  3454  00FDED  61                 	db	97	;'a'
  3455  00FDEE  74                 	db	116	;'t'
  3456  00FDEF  69                 	db	105	;'i'
  3457  00FDF0  6F                 	db	111	;'o'
  3458  00FDF1  6E                 	db	110	;'n'
  3459  00FDF2  20                 	db	32
  3460  00FDF3  20                 	db	32
  3461  00FDF4  20                 	db	32
  3462  00FDF5  20                 	db	32
  3463  00FDF6  20                 	db	32
  3464  00FDF7  20                 	db	32
  3465  00FDF8  20                 	db	32
  3466  00FDF9  20                 	db	32
  3467  00FDFA  20                 	db	32
  3468  00FDFB  00                 	db	0
  3469  00FDFC                     STR_47:
  3470                           
  3471                           ; BSR set to: 57
  3472  00FDFC  53                 	db	83	;'S'
  3473  00FDFD  65                 	db	101	;'e'
  3474  00FDFE  6E                 	db	110	;'n'
  3475  00FDFF  73                 	db	115	;'s'
  3476  00FE00  6F                 	db	111	;'o'
  3477  00FE01  72                 	db	114	;'r'
  3478  00FE02  20                 	db	32
  3479  00FE03  5A                 	db	90	;'Z'
  3480  00FE04  65                 	db	101	;'e'
  3481  00FE05  72                 	db	114	;'r'
  3482  00FE06  6F                 	db	111	;'o'
  3483  00FE07  20                 	db	32
  3484  00FE08  20                 	db	32
  3485  00FE09  20                 	db	32
  3486  00FE0A  20                 	db	32
  3487  00FE0B  20                 	db	32
  3488  00FE0C  20                 	db	32
  3489  00FE0D  20                 	db	32
  3490  00FE0E  20                 	db	32
  3491  00FE0F  20                 	db	32
  3492  00FE10  00                 	db	0
  3493  00FE11                     STR_2:
  3494                           
  3495                           ; BSR set to: 57
  3496  00FE11  20                 	db	32
  3497  00FE12  56                 	db	86	;'V'
  3498  00FE13  65                 	db	101	;'e'
  3499  00FE14  72                 	db	114	;'r'
  3500  00FE15  73                 	db	115	;'s'
  3501  00FE16  69                 	db	105	;'i'
  3502  00FE17  6F                 	db	111	;'o'
  3503  00FE18  6E                 	db	110	;'n'
  3504  00FE19  20                 	db	32
  3505  00FE1A  25                 	db	37
  3506  00FE1B  73                 	db	115	;'s'
  3507  00FE1C  20                 	db	32
  3508  00FE1D  20                 	db	32
  3509  00FE1E  20                 	db	32
  3510  00FE1F  20                 	db	32
  3511  00FE20  20                 	db	32
  3512  00FE21  20                 	db	32
  3513  00FE22  20                 	db	32
  3514  00FE23  20                 	db	32
  3515  00FE24  20                 	db	32
  3516  00FE25  00                 	db	0
  3517  00FE26                     STR_68:
  3518                           
  3519                           ; BSR set to: 57
  3520  00FE26  31                 	db	49	;'1'
  3521  00FE27  30                 	db	48	;'0'
  3522  00FE28  41                 	db	65	;'A'
  3523  00FE29  20                 	db	32
  3524  00FE2A  43                 	db	67	;'C'
  3525  00FE2B  61                 	db	97	;'a'
  3526  00FE2C  6C                 	db	108	;'l'
  3527  00FE2D  20                 	db	32
  3528  00FE2E  53                 	db	83	;'S'
  3529  00FE2F  65                 	db	101	;'e'
  3530  00FE30  74                 	db	116	;'t'
  3531  00FE31  20                 	db	32
  3532  00FE32  20                 	db	32
  3533  00FE33  20                 	db	32
  3534  00FE34  20                 	db	32
  3535  00FE35  20                 	db	32
  3536  00FE36  20                 	db	32
  3537  00FE37  20                 	db	32
  3538  00FE38  20                 	db	32
  3539  00FE39  20                 	db	32
  3540  00FE3A  00                 	db	0
  3541  00FE3B                     STR_55:
  3542                           
  3543                           ; BSR set to: 57
  3544  00FE3B  5A                 	db	90	;'Z'
  3545  00FE3C  65                 	db	101	;'e'
  3546  00FE3D  72                 	db	114	;'r'
  3547  00FE3E  6F                 	db	111	;'o'
  3548  00FE3F  20                 	db	32
  3549  00FE40  43                 	db	67	;'C'
  3550  00FE41  61                 	db	97	;'a'
  3551  00FE42  6C                 	db	108	;'l'
  3552  00FE43  20                 	db	32
  3553  00FE44  53                 	db	83	;'S'
  3554  00FE45  65                 	db	101	;'e'
  3555  00FE46  74                 	db	116	;'t'
  3556  00FE47  20                 	db	32
  3557  00FE48  20                 	db	32
  3558  00FE49  20                 	db	32
  3559  00FE4A  20                 	db	32
  3560  00FE4B  20                 	db	32
  3561  00FE4C  20                 	db	32
  3562  00FE4D  20                 	db	32
  3563  00FE4E  20                 	db	32
  3564  00FE4F  00                 	db	0
  3565  00FE50                     STR_60:
  3566                           
  3567                           ; BSR set to: 57
  3568  00FE50  31                 	db	49	;'1'
  3569  00FE51  30                 	db	48	;'0'
  3570  00FE52  20                 	db	32
  3571  00FE53  41                 	db	65	;'A'
  3572  00FE54  6D                 	db	109	;'m'
  3573  00FE55  70                 	db	112	;'p'
  3574  00FE56  20                 	db	32
  3575  00FE57  53                 	db	83	;'S'
  3576  00FE58  65                 	db	101	;'e'
  3577  00FE59  6E                 	db	110	;'n'
  3578  00FE5A  73                 	db	115	;'s'
  3579  00FE5B  6F                 	db	111	;'o'
  3580  00FE5C  72                 	db	114	;'r'
  3581  00FE5D  20                 	db	32
  3582  00FE5E  20                 	db	32
  3583  00FE5F  20                 	db	32
  3584  00FE60  20                 	db	32
  3585  00FE61  20                 	db	32
  3586  00FE62  20                 	db	32
  3587  00FE63  20                 	db	32
  3588  00FE64  00                 	db	0
  3589  00FE65                     STR_1:
  3590                           
  3591                           ; BSR set to: 57
  3592  00FE65  20                 	db	32
  3593  00FE66  4D                 	db	77	;'M'
  3594  00FE67  42                 	db	66	;'B'
  3595  00FE68  4D                 	db	77	;'M'
  3596  00FE69  43                 	db	67	;'C'
  3597  00FE6A  20                 	db	32
  3598  00FE6B  53                 	db	83	;'S'
  3599  00FE6C  4F                 	db	79	;'O'
  3600  00FE6D  4C                 	db	76	;'L'
  3601  00FE6E  41                 	db	65	;'A'
  3602  00FE6F  52                 	db	82	;'R'
  3603  00FE70  4D                 	db	77	;'M'
  3604  00FE71  4F                 	db	79	;'O'
  3605  00FE72  4E                 	db	78	;'N'
  3606  00FE73  20                 	db	32
  3607  00FE74  20                 	db	32
  3608  00FE75  20                 	db	32
  3609  00FE76  20                 	db	32
  3610  00FE77  20                 	db	32
  3611  00FE78  20                 	db	32
  3612  00FE79  00                 	db	0
  3613  00FE7A                     STR_46:
  3614                           
  3615                           ; BSR set to: 57
  3616  00FE7A  42                 	db	66	;'B'
  3617  00FE7B  61                 	db	97	;'a'
  3618  00FE7C  74                 	db	116	;'t'
  3619  00FE7D  74                 	db	116	;'t'
  3620  00FE7E  65                 	db	101	;'e'
  3621  00FE7F  72                 	db	114	;'r'
  3622  00FE80  79                 	db	121	;'y'
  3623  00FE81  20                 	db	32
  3624  00FE82  61                 	db	97	;'a'
  3625  00FE83  6E                 	db	110	;'n'
  3626  00FE84  64                 	db	100	;'d'
  3627  00FE85  20                 	db	32
  3628  00FE86  50                 	db	80	;'P'
  3629  00FE87  56                 	db	86	;'V'
  3630  00FE88  20                 	db	32
  3631  00FE89  20                 	db	32
  3632  00FE8A  20                 	db	32
  3633  00FE8B  20                 	db	32
  3634  00FE8C  20                 	db	32
  3635  00FE8D  20                 	db	32
  3636  00FE8E  00                 	db	0
  3637  00FE8F                     STR_18:
  3638                           
  3639                           ; BSR set to: 57
  3640  00FE8F  43                 	db	67	;'C'
  3641  00FE90  68                 	db	104	;'h'
  3642  00FE91  65                 	db	101	;'e'
  3643  00FE92  63                 	db	99	;'c'
  3644  00FE93  6B                 	db	107	;'k'
  3645  00FE94  69                 	db	105	;'i'
  3646  00FE95  6E                 	db	110	;'n'
  3647  00FE96  67                 	db	103	;'g'
  3648  00FE97  20                 	db	32
  3649  00FE98  25                 	db	37
  3650  00FE99  63                 	db	99	;'c'
  3651  00FE9A  20                 	db	32
  3652  00FE9B  25                 	db	37
  3653  00FE9C  63                 	db	99	;'c'
  3654  00FE9D  20                 	db	32
  3655  00FE9E  20                 	db	32
  3656  00FE9F  20                 	db	32
  3657  00FEA0  20                 	db	32
  3658  00FEA1  20                 	db	32
  3659  00FEA2  20                 	db	32
  3660  00FEA3  00                 	db	0
  3661  00FEA4                     STR_50:
  3662                           
  3663                           ; BSR set to: 57
  3664  00FEA4  53                 	db	83	;'S'
  3665  00FEA5  65                 	db	101	;'e'
  3666  00FEA6  6E                 	db	110	;'n'
  3667  00FEA7  73                 	db	115	;'s'
  3668  00FEA8  6F                 	db	111	;'o'
  3669  00FEA9  72                 	db	114	;'r'
  3670  00FEAA  20                 	db	32
  3671  00FEAB  52                 	db	82	;'R'
  3672  00FEAC  65                 	db	101	;'e'
  3673  00FEAD  61                 	db	97	;'a'
  3674  00FEAE  64                 	db	100	;'d'
  3675  00FEAF  69                 	db	105	;'i'
  3676  00FEB0  6E                 	db	110	;'n'
  3677  00FEB1  67                 	db	103	;'g'
  3678  00FEB2  73                 	db	115	;'s'
  3679  00FEB3  20                 	db	32
  3680  00FEB4  20                 	db	32
  3681  00FEB5  20                 	db	32
  3682  00FEB6  20                 	db	32
  3683  00FEB7  20                 	db	32
  3684  00FEB8  00                 	db	0
  3685  00FEB9                     STR_8:
  3686                           
  3687                           ; BSR set to: 57
  3688  00FEB9  52                 	db	82	;'R'
  3689  00FEBA  65                 	db	101	;'e'
  3690  00FEBB  61                 	db	97	;'a'
  3691  00FEBC  64                 	db	100	;'d'
  3692  00FEBD  20                 	db	32
  3693  00FEBE  45                 	db	69	;'E'
  3694  00FEBF  45                 	db	69	;'E'
  3695  00FEC0  50                 	db	80	;'P'
  3696  00FEC1  52                 	db	82	;'R'
  3697  00FEC2  4F                 	db	79	;'O'
  3698  00FEC3  4D                 	db	77	;'M'
  3699  00FEC4  20                 	db	32
  3700  00FEC5  44                 	db	68	;'D'
  3701  00FEC6  41                 	db	65	;'A'
  3702  00FEC7  54                 	db	84	;'T'
  3703  00FEC8  41                 	db	65	;'A'
  3704  00FEC9  20                 	db	32
  3705  00FECA  20                 	db	32
  3706  00FECB  20                 	db	32
  3707  00FECC  20                 	db	32
  3708  00FECD  00                 	db	0
  3709  00FECE                     STR_71:
  3710                           
  3711                           ; BSR set to: 57
  3712  00FECE  31                 	db	49	;'1'
  3713  00FECF  30                 	db	48	;'0'
  3714  00FED0  41                 	db	65	;'A'
  3715  00FED1  20                 	db	32
  3716  00FED2  4F                 	db	79	;'O'
  3717  00FED3  75                 	db	117	;'u'
  3718  00FED4  74                 	db	116	;'t'
  3719  00FED5  20                 	db	32
  3720  00FED6  4F                 	db	79	;'O'
  3721  00FED7  66                 	db	102	;'f'
  3722  00FED8  20                 	db	32
  3723  00FED9  52                 	db	82	;'R'
  3724  00FEDA  61                 	db	97	;'a'
  3725  00FEDB  6E                 	db	110	;'n'
  3726  00FEDC  67                 	db	103	;'g'
  3727  00FEDD  65                 	db	101	;'e'
  3728  00FEDE  20                 	db	32
  3729  00FEDF  20                 	db	32
  3730  00FEE0  20                 	db	32
  3731  00FEE1  20                 	db	32
  3732  00FEE2  00                 	db	0
  3733  00FEE3                     STR_17:
  3734                           
  3735                           ; BSR set to: 57
  3736  00FEE3  43                 	db	67	;'C'
  3737  00FEE4  68                 	db	104	;'h'
  3738  00FEE5  65                 	db	101	;'e'
  3739  00FEE6  63                 	db	99	;'c'
  3740  00FEE7  6B                 	db	107	;'k'
  3741  00FEE8  20                 	db	32
  3742  00FEE9  33                 	db	51	;'3'
  3743  00FEEA  30                 	db	48	;'0'
  3744  00FEEB  20                 	db	32
  3745  00FEEC  73                 	db	115	;'s'
  3746  00FEED  65                 	db	101	;'e'
  3747  00FEEE  63                 	db	99	;'c'
  3748  00FEEF  6F                 	db	111	;'o'
  3749  00FEF0  6E                 	db	110	;'n'
  3750  00FEF1  64                 	db	100	;'d'
  3751  00FEF2  73                 	db	115	;'s'
  3752  00FEF3  20                 	db	32
  3753  00FEF4  20                 	db	32
  3754  00FEF5  20                 	db	32
  3755  00FEF6  20                 	db	32
  3756  00FEF7  00                 	db	0
  3757  00FEF8                     STR_58:
  3758                           
  3759                           ; BSR set to: 57
  3760  00FEF8  5A                 	db	90	;'Z'
  3761  00FEF9  65                 	db	101	;'e'
  3762  00FEFA  72                 	db	114	;'r'
  3763  00FEFB  6F                 	db	111	;'o'
  3764  00FEFC  20                 	db	32
  3765  00FEFD  4F                 	db	79	;'O'
  3766  00FEFE  75                 	db	117	;'u'
  3767  00FEFF  74                 	db	116	;'t'
  3768  00FF00  20                 	db	32
  3769  00FF01  4F                 	db	79	;'O'
  3770  00FF02  66                 	db	102	;'f'
  3771  00FF03  20                 	db	32
  3772  00FF04  52                 	db	82	;'R'
  3773  00FF05  61                 	db	97	;'a'
  3774  00FF06  6E                 	db	110	;'n'
  3775  00FF07  67                 	db	103	;'g'
  3776  00FF08  65                 	db	101	;'e'
  3777  00FF09  20                 	db	32
  3778  00FF0A  20                 	db	32
  3779  00FF0B  20                 	db	32
  3780  00FF0C  00                 	db	0
  3781  00FF0D                     STR_52:
  3782                           
  3783                           ; BSR set to: 57
  3784  00FF0D  53                 	db	83	;'S'
  3785  00FF0E  74                 	db	116	;'t'
  3786  00FF0F  61                 	db	97	;'a'
  3787  00FF10  62                 	db	98	;'b'
  3788  00FF11  69                 	db	105	;'i'
  3789  00FF12  6C                 	db	108	;'l'
  3790  00FF13  69                 	db	105	;'i'
  3791  00FF14  74                 	db	116	;'t'
  3792  00FF15  79                 	db	121	;'y'
  3793  00FF16  20                 	db	32
  3794  00FF17  63                 	db	99	;'c'
  3795  00FF18  6C                 	db	108	;'l'
  3796  00FF19  6F                 	db	111	;'o'
  3797  00FF1A  63                 	db	99	;'c'
  3798  00FF1B  6B                 	db	107	;'k'
  3799  00FF1C  20                 	db	32
  3800  00FF1D  25                 	db	37
  3801  00FF1E  64                 	db	100	;'d'
  3802  00FF1F  20                 	db	32
  3803  00FF20  20                 	db	32
  3804  00FF21  00                 	db	0
  3805  00FF22                     STR_9:
  3806                           
  3807                           ; BSR set to: 57
  3808  00FF22  49                 	db	73	;'I'
  3809  00FF23  6E                 	db	110	;'n'
  3810  00FF24  76                 	db	118	;'v'
  3811  00FF25  61                 	db	97	;'a'
  3812  00FF26  6C                 	db	108	;'l'
  3813  00FF27  69                 	db	105	;'i'
  3814  00FF28  64                 	db	100	;'d'
  3815  00FF29  20                 	db	32
  3816  00FF2A  45                 	db	69	;'E'
  3817  00FF2B  45                 	db	69	;'E'
  3818  00FF2C  50                 	db	80	;'P'
  3819  00FF2D  52                 	db	82	;'R'
  3820  00FF2E  4F                 	db	79	;'O'
  3821  00FF2F  4D                 	db	77	;'M'
  3822  00FF30  20                 	db	32
  3823  00FF31  44                 	db	68	;'D'
  3824  00FF32  41                 	db	65	;'A'
  3825  00FF33  54                 	db	84	;'T'
  3826  00FF34  41                 	db	65	;'A'
  3827  00FF35  20                 	db	32
  3828  00FF36  00                 	db	0
  3829  00FF37                     STR_49:
  3830                           
  3831                           ; BSR set to: 57
  3832  00FF37  52                 	db	82	;'R'
  3833  00FF38  65                 	db	101	;'e'
  3834  00FF39  6C                 	db	108	;'l'
  3835  00FF3A  65                 	db	101	;'e'
  3836  00FF3B  61                 	db	97	;'a'
  3837  00FF3C  73                 	db	115	;'s'
  3838  00FF3D  65                 	db	101	;'e'
  3839  00FF3E  20                 	db	32
  3840  00FF3F  62                 	db	98	;'b'
  3841  00FF40  75                 	db	117	;'u'
  3842  00FF41  74                 	db	116	;'t'
  3843  00FF42  74                 	db	116	;'t'
  3844  00FF43  6F                 	db	111	;'o'
  3845  00FF44  6E                 	db	110	;'n'
  3846  00FF45  20                 	db	32
  3847  00FF46  25                 	db	37
  3848  00FF47  63                 	db	99	;'c'
  3849  00FF48  20                 	db	32
  3850  00FF49  20                 	db	32
  3851  00FF4A  00                 	db	0
  3852  00FF4B                     STR_76:
  3853                           
  3854                           ; BSR set to: 57
  3855  00FF4B  48                 	db	72	;'H'
  3856  00FF4C  45                 	db	69	;'E'
  3857  00FF4D  4C                 	db	76	;'L'
  3858  00FF4E  50                 	db	80	;'P'
  3859  00FF4F  20                 	db	32
  3860  00FF50  25                 	db	37
  3861  00FF51  73                 	db	115	;'s'
  3862  00FF52  20                 	db	32
  3863  00FF53  20                 	db	32
  3864  00FF54  20                 	db	32
  3865  00FF55  20                 	db	32
  3866  00FF56  20                 	db	32
  3867  00FF57  20                 	db	32
  3868  00FF58  20                 	db	32
  3869  00FF59  20                 	db	32
  3870  00FF5A  20                 	db	32
  3871  00FF5B  20                 	db	32
  3872  00FF5C  20                 	db	32
  3873  00FF5D  00                 	db	0
  3874  00FF5E                     
  3875                           ; BSR set to: 57
  3876  00FF5E  44                 	db	68	;'D'
  3877  00FF5F  49                 	db	73	;'I'
  3878  00FF60  53                 	db	83	;'S'
  3879  00FF61  50                 	db	80	;'P'
  3880  00FF62  4C                 	db	76	;'L'
  3881  00FF63  41                 	db	65	;'A'
  3882  00FF64  59                 	db	89	;'Y'
  3883  00FF65  20                 	db	32
  3884  00FF66  25                 	db	37
  3885  00FF67  73                 	db	115	;'s'
  3886  00FF68  20                 	db	32
  3887  00FF69  20                 	db	32
  3888  00FF6A  20                 	db	32
  3889  00FF6B  20                 	db	32
  3890  00FF6C  20                 	db	32
  3891  00FF6D  20                 	db	32
  3892  00FF6E  20                 	db	32
  3893  00FF6F  20                 	db	32
  3894  00FF70  00                 	db	0
  3895  00FF71                     STR_62:
  3896                           
  3897                           ; BSR set to: 57
  3898  00FF71  50                 	db	80	;'P'
  3899  00FF72  72                 	db	114	;'r'
  3900  00FF73  65                 	db	101	;'e'
  3901  00FF74  73                 	db	115	;'s'
  3902  00FF75  73                 	db	115	;'s'
  3903  00FF76  20                 	db	32
  3904  00FF77  62                 	db	98	;'b'
  3905  00FF78  75                 	db	117	;'u'
  3906  00FF79  74                 	db	116	;'t'
  3907  00FF7A  74                 	db	116	;'t'
  3908  00FF7B  6F                 	db	111	;'o'
  3909  00FF7C  6E                 	db	110	;'n'
  3910  00FF7D  20                 	db	32
  3911  00FF7E  25                 	db	37
  3912  00FF7F  63                 	db	99	;'c'
  3913  00FF80  20                 	db	32
  3914  00FF81  20                 	db	32
  3915  00FF82  00                 	db	0
  3916  00FF83                     
  3917                           ; BSR set to: 57
  3918  00FF83  25                 	db	37
  3919  00FF84  64                 	db	100	;'d'
  3920  00FF85  20                 	db	32
  3921  00FF86  25                 	db	37
  3922  00FF87  32                 	db	50	;'2'
  3923  00FF88  2E                 	db	46
  3924  00FF89  34                 	db	52	;'4'
  3925  00FF8A  66                 	db	102	;'f'
  3926  00FF8B  2C                 	db	44
  3927  00FF8C  20                 	db	32
  3928  00FF8D  25                 	db	37
  3929  00FF8E  64                 	db	100	;'d'
  3930  00FF8F  20                 	db	32
  3931  00FF90  20                 	db	32
  3932  00FF91  20                 	db	32
  3933  00FF92  23                 	db	35
  3934  00FF93  00                 	db	0
  3935  00FF94                     STR_22:
  3936                           
  3937                           ; BSR set to: 57
  3938  00FF94  25                 	db	37
  3939  00FF95  64                 	db	100	;'d'
  3940  00FF96  20                 	db	32
  3941  00FF97  25                 	db	37
  3942  00FF98  32                 	db	50	;'2'
  3943  00FF99  2E                 	db	46
  3944  00FF9A  34                 	db	52	;'4'
  3945  00FF9B  66                 	db	102	;'f'
  3946  00FF9C  20                 	db	32
  3947  00FF9D  20                 	db	32
  3948  00FF9E  20                 	db	32
  3949  00FF9F  25                 	db	37
  3950  00FFA0  64                 	db	100	;'d'
  3951  00FFA1  20                 	db	32
  3952  00FFA2  20                 	db	32
  3953  00FFA3  00                 	db	0
  3954  00FFA4                     STR_80:
  3955                           
  3956                           ; BSR set to: 57
  3957  00FFA4  76                 	db	118	;'v'
  3958  00FFA5  74                 	db	116	;'t'
  3959  00FFA6  65                 	db	101	;'e'
  3960  00FFA7  72                 	db	114	;'r'
  3961  00FFA8  6D                 	db	109	;'m'
  3962  00FFA9  20                 	db	32
  3963  00FFAA  25                 	db	37
  3964  00FFAB  78                 	db	120	;'x'
  3965  00FFAC  3A                 	db	58	;':'
  3966  00FFAD  25                 	db	37
  3967  00FFAE  78                 	db	120	;'x'
  3968  00FFAF  20                 	db	32
  3969  00FFB0  20                 	db	32
  3970  00FFB1  20                 	db	32
  3971  00FFB2  00                 	db	0
  3972  00FFB3                     STR_74:
  3973                           
  3974                           ; BSR set to: 57
  3975  00FFB3  46                 	db	70	;'F'
  3976  00FFB4  65                 	db	101	;'e'
  3977  00FFB5  62                 	db	98	;'b'
  3978  00FFB6  20                 	db	32
  3979  00FFB7  31                 	db	49	;'1'
  3980  00FFB8  31                 	db	49	;'1'
  3981  00FFB9  20                 	db	32
  3982  00FFBA  32                 	db	50	;'2'
  3983  00FFBB  30                 	db	48	;'0'
  3984  00FFBC  32                 	db	50	;'2'
  3985  00FFBD  30                 	db	48	;'0'
  3986  00FFBE  00                 	db	0
  3987  00FFBF                     STR_78:
  3988                           
  3989                           ; BSR set to: 57
  3990  00FFBF  25                 	db	37
  3991  00FFC0  73                 	db	115	;'s'
  3992  00FFC1  20                 	db	32
  3993  00FFC2  20                 	db	32
  3994  00FFC3  20                 	db	32
  3995  00FFC4  20                 	db	32
  3996  00FFC5  20                 	db	32
  3997  00FFC6  20                 	db	32
  3998  00FFC7  20                 	db	32
  3999  00FFC8  00                 	db	0
  4000  00FFC9                     STR_75:
  4001                           
  4002                           ; BSR set to: 57
  4003  00FFC9  31                 	db	49	;'1'
  4004  00FFCA  36                 	db	54	;'6'
  4005  00FFCB  3A                 	db	58	;':'
  4006  00FFCC  35                 	db	53	;'5'
  4007  00FFCD  31                 	db	49	;'1'
  4008  00FFCE  3A                 	db	58	;':'
  4009  00FFCF  35                 	db	53	;'5'
  4010  00FFD0  33                 	db	51	;'3'
  4011  00FFD1  00                 	db	0
  4012  00FFD2                     STR_3:
  4013                           
  4014                           ; BSR set to: 57
  4015  00FFD2  31                 	db	49	;'1'
  4016  00FFD3  2E                 	db	46
  4017  00FFD4  32                 	db	50	;'2'
  4018  00FFD5  31                 	db	49	;'1'
  4019  00FFD6  00                 	db	0
  4020  00FFD7                     STR_94:
  4021                           
  4022                           ; BSR set to: 57
  4023  00FFD7  49                 	db	73	;'I'
  4024  00FFD8  4E                 	db	78	;'N'
  4025  00FFD9  46                 	db	70	;'F'
  4026  00FFDA  00                 	db	0
  4027  00FFDB                     STR_98:
  4028                           
  4029                           ; BSR set to: 57
  4030  00FFDB  4E                 	db	78	;'N'
  4031  00FFDC  41                 	db	65	;'A'
  4032  00FFDD  4E                 	db	78	;'N'
  4033  00FFDE  00                 	db	0
  4034  00FFDF                     STR_95:
  4035                           
  4036                           ; BSR set to: 57
  4037  00FFDF  69                 	db	105	;'i'
  4038  00FFE0  6E                 	db	110	;'n'
  4039  00FFE1  66                 	db	102	;'f'
  4040  00FFE2  00                 	db	0
  4041  00FFE3                     STR_99:
  4042                           
  4043                           ; BSR set to: 57
  4044  00FFE3  6E                 	db	110	;'n'
  4045  00FFE4  61                 	db	97	;'a'
  4046  00FFE5  6E                 	db	110	;'n'
  4047  00FFE6  00                 	db	0
  4048  00FFE7                     STR_125:
  4049                           
  4050                           ; BSR set to: 57
  4051  00FFE7  6C                 	db	108	;'l'
  4052  00FFE8  58                 	db	88	;'X'
  4053  00FFE9  00                 	db	0
  4054  00FFEA                     STR_102:
  4055                           
  4056                           ; BSR set to: 57
  4057  00FFEA  6C                 	db	108	;'l'
  4058  00FFEB  64                 	db	100	;'d'
  4059  00FFEC  00                 	db	0
  4060  00FFED                     STR_111:
  4061                           
  4062                           ; BSR set to: 57
  4063  00FFED  6C                 	db	108	;'l'
  4064  00FFEE  66                 	db	102	;'f'
  4065  00FFEF  00                 	db	0
  4066  00FFF0                     STR_106:
  4067                           
  4068                           ; BSR set to: 57
  4069  00FFF0  6C                 	db	108	;'l'
  4070  00FFF1  69                 	db	105	;'i'
  4071  00FFF2  00                 	db	0
  4072  00FFF3                     STR_116:
  4073                           
  4074                           ; BSR set to: 57
  4075  00FFF3  6C                 	db	108	;'l'
  4076  00FFF4  75                 	db	117	;'u'
  4077  00FFF5  00                 	db	0
  4078  00FFF6                     STR_121:
  4079                           
  4080                           ; BSR set to: 57
  4081  00FFF6  6C                 	db	108	;'l'
  4082  00FFF7  78                 	db	120	;'x'
  4083  00FFF8  00                 	db	0
  4084  00FFF9                     STR_73:
  4085                           
  4086                           ; BSR set to: 57
  4087  00FFF9  25                 	db	37
  4088  00FFFA  63                 	db	99	;'c'
  4089  00FFFB  00                 	db	0
  4090  00FFFC                     STR_72:
  4091                           
  4092                           ; BSR set to: 57
  4093  00FFFC  25                 	db	37
  4094  00FFFD  73                 	db	115	;'s'
  4095  00FFFE  00                 	db	0
  4096  0000                     
  4097                           ; #config settings
  4098  00FFFF  00                 	db	0	; dummy byte at the end
  4099  0000                     
  4100                           	psect	cinit
  4101  01AFAA                     __pcinit:
  4102                           	opt callstack 0
  4103  01AFAA                     start_initialization:
  4104                           	opt callstack 0
  4105  01AFAA                     __initialization:
  4106                           	opt callstack 0
  4107                           
  4108                           ; Initialize objects allocated to BIGRAM (811 bytes)
  4109                           ; load TBLPTR registers with __pidataBIGRAM
  4110  01AFAA  0EF2               	movlw	low __pidataBIGRAM
  4111  01AFAC  6EF6               	movwf	tblptrl,c
  4112  01AFAE  0E77               	movlw	high __pidataBIGRAM
  4113  01AFB0  6EF7               	movwf	tblptrh,c
  4114  01AFB2  0E01               	movlw	low (__pidataBIGRAM shr (0+16))
  4115  01AFB4  6EF8               	movwf	tblptru,c
  4116  01AFB6  EE01  F1FF         	lfsr	0,__pdataBIGRAM
  4117  01AFBA  EE20 F32B          	lfsr	2,811
  4118  01AFBE                     copy_data0:
  4119  01AFBE  0009               	tblrd		*+
  4120  01AFC0  006F FFD7 FFEE     	movff	tablat,postinc0
  4121  01AFC6  50DD               	movf	postdec2,w,c
  4122  01AFC8  50D9               	movf	fsr2l,w,c
  4123  01AFCA  E1F9               	bnz	copy_data0
  4124  01AFCC  50DA               	movf	fsr2h,w,c
  4125  01AFCE  E1F7               	bnz	copy_data0
  4126                           
  4127                           ; Initialize objects allocated to BANK2 (192 bytes)
  4128                           ; load TBLPTR registers with __pidataBANK2
  4129  01AFD0  0EB2               	movlw	low __pidataBANK2
  4130  01AFD2  6EF6               	movwf	tblptrl,c
  4131  01AFD4  0EB7               	movlw	high __pidataBANK2
  4132  01AFD6  6EF7               	movwf	tblptrh,c
  4133  01AFD8  0E01               	movlw	low (__pidataBANK2 shr (0+16))
  4134  01AFDA  6EF8               	movwf	tblptru,c
  4135  01AFDC  EE00  F200         	lfsr	0,__pdataBANK2
  4136  01AFE0  EE20 F0C0          	lfsr	2,192
  4137  01AFE4                     copy_data1:
  4138  01AFE4  0009               	tblrd		*+
  4139  01AFE6  006F FFD7 FFEE     	movff	tablat,postinc0
  4140  01AFEC  50DD               	movf	postdec2,w,c
  4141  01AFEE  50D9               	movf	fsr2l,w,c
  4142  01AFF0  E1F9               	bnz	copy_data1
  4143                           
  4144                           ; Initialize objects allocated to BANK1 (150 bytes)
  4145                           ; load TBLPTR registers with __pidataBANK1
  4146  01AFF2  0EE4               	movlw	low __pidataBANK1
  4147  01AFF4  6EF6               	movwf	tblptrl,c
  4148  01AFF6  0EBF               	movlw	high __pidataBANK1
  4149  01AFF8  6EF7               	movwf	tblptrh,c
  4150  01AFFA  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  4151  01AFFC  6EF8               	movwf	tblptru,c
  4152  01AFFE  EE00  F100         	lfsr	0,__pdataBANK1
  4153  01B002  EE20 F096          	lfsr	2,150
  4154  01B006                     copy_data2:
  4155  01B006  0009               	tblrd		*+
  4156  01B008  006F FFD7 FFEE     	movff	tablat,postinc0
  4157  01B00E  50DD               	movf	postdec2,w,c
  4158  01B010  50D9               	movf	fsr2l,w,c
  4159  01B012  E1F9               	bnz	copy_data2
  4160                           
  4161                           ; Initialize objects allocated to BANK0 (9 bytes)
  4162                           ; load TBLPTR registers with __pidataBANK0
  4163  01B014  0E3A               	movlw	low __pidataBANK0
  4164  01B016  6EF6               	movwf	tblptrl,c
  4165  01B018  0EDB               	movlw	high __pidataBANK0
  4166  01B01A  6EF7               	movwf	tblptrh,c
  4167  01B01C  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  4168  01B01E  6EF8               	movwf	tblptru,c
  4169  01B020  EE00  F0F1         	lfsr	0,__pdataBANK0
  4170  01B024  EE20 F009          	lfsr	2,9
  4171  01B028                     copy_data3:
  4172  01B028  0009               	tblrd		*+
  4173  01B02A  006F FFD7 FFEE     	movff	tablat,postinc0
  4174  01B030  50DD               	movf	postdec2,w,c
  4175  01B032  50D9               	movf	fsr2l,w,c
  4176  01B034  E1F9               	bnz	copy_data3
  4177                           
  4178                           ; Clear objects allocated to BIGRAM (482 bytes)
  4179  01B036  EE02  F12A         	lfsr	0,__pbssBIGRAM
  4180  01B03A  EE20 F1E2          	lfsr	2,482
  4181  01B03E                     clear_0:
  4182  01B03E  6AEE               	clrf	postinc0,c
  4183  01B040  50DD               	movf	postdec2,w,c
  4184  01B042  50D9               	movf	fsr2l,w,c
  4185  01B044  E1FC               	bnz	clear_0
  4186  01B046  50DA               	movf	fsr2h,w,c
  4187  01B048  E1FA               	bnz	clear_0
  4188                           
  4189                           ; Clear objects allocated to BANK5 (255 bytes)
  4190  01B04A  EE01  F100         	lfsr	0,__pbssBANK5
  4191  01B04E  EE20 F0FF          	lfsr	2,255
  4192  01B052                     clear_1:
  4193  01B052  6AEE               	clrf	postinc0,c
  4194  01B054  50DD               	movf	postdec2,w,c
  4195  01B056  50D9               	movf	fsr2l,w,c
  4196  01B058  E1FC               	bnz	clear_1
  4197  01B05A  50DA               	movf	fsr2h,w,c
  4198  01B05C  E1FA               	bnz	clear_1
  4199                           
  4200                           ; Clear objects allocated to BANK4 (210 bytes)
  4201  01B05E  EE01  F000         	lfsr	0,__pbssBANK4
  4202  01B062  0ED2               	movlw	210
  4203  01B064                     clear_2:
  4204  01B064  6AEE               	clrf	postinc0,c
  4205  01B066  06E8               	decf	wreg,f,c
  4206  01B068  E1FD               	bnz	clear_2
  4207                           
  4208                           ; Clear objects allocated to BANK3 (231 bytes)
  4209  01B06A  EE00  F300         	lfsr	0,__pbssBANK3
  4210  01B06E  0EE7               	movlw	231
  4211  01B070                     clear_3:
  4212  01B070  6AEE               	clrf	postinc0,c
  4213  01B072  06E8               	decf	wreg,f,c
  4214  01B074  E1FD               	bnz	clear_3
  4215                           
  4216                           ; Clear objects allocated to BANK2 (64 bytes)
  4217  01B076  EE00  F2C0         	lfsr	0,__pbssBANK2
  4218  01B07A  0E40               	movlw	64
  4219  01B07C                     clear_4:
  4220  01B07C  6AEE               	clrf	postinc0,c
  4221  01B07E  06E8               	decf	wreg,f,c
  4222  01B080  E1FD               	bnz	clear_4
  4223                           
  4224                           ; Clear objects allocated to BANK1 (75 bytes)
  4225  01B082  EE00  F196         	lfsr	0,__pbssBANK1
  4226  01B086  0E4B               	movlw	75
  4227  01B088                     clear_5:
  4228  01B088  6AEE               	clrf	postinc0,c
  4229  01B08A  06E8               	decf	wreg,f,c
  4230  01B08C  E1FD               	bnz	clear_5
  4231                           
  4232                           ; Clear objects allocated to BANK0 (120 bytes)
  4233  01B08E  EE00  F060         	lfsr	0,__pbssBANK0
  4234  01B092  0E78               	movlw	120
  4235  01B094                     clear_6:
  4236  01B094  6AEE               	clrf	postinc0,c
  4237  01B096  06E8               	decf	wreg,f,c
  4238  01B098  E1FD               	bnz	clear_6
  4239                           
  4240                           ; Clear objects allocated to COMRAM (14 bytes)
  4241  01B09A  EE00  F03A         	lfsr	0,__pbssCOMRAM
  4242  01B09E  0E0E               	movlw	14
  4243  01B0A0                     clear_7:
  4244  01B0A0  6AEE               	clrf	postinc0,c
  4245  01B0A2  06E8               	decf	wreg,f,c
  4246  01B0A4  E1FD               	bnz	clear_7
  4247                           
  4248                           ;
  4249                           ; Setup IVTBASE
  4250                           ;
  4251  01B0A6  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  4252  01B0A8  6ED5               	movwf	213,c
  4253  01B0AA  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  4254  01B0AC  6ED6               	movwf	214,c
  4255  01B0AE  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  4256  01B0B0  6ED7               	movwf	215,c
  4257  01B0B2                     end_of_initialization:
  4258                           	opt callstack 0
  4259  01B0B2                     __end_of__initialization:
  4260                           	opt callstack 0
  4261  01B0B2  0100               	movlb	0
  4262  01B0B4  EF00  F080         	goto	_main	;jump to C main() function
  4263                           
  4264                           	psect	bssCOMRAM
  4265  00003A                     __pbssCOMRAM:
  4266                           	opt callstack 0
  4267  00003A                     _width:
  4268                           	opt callstack 0
  4269  00003A                     	ds	2
  4270  00003C                     _prec:
  4271                           	opt callstack 0
  4272  00003C                     	ds	2
  4273  00003E                     _flags:
  4274                           	opt callstack 0
  4275  00003E                     	ds	2
  4276  000040                     calc_bsoc@log_update_wait:
  4277                           	opt callstack 0
  4278  000040                     	ds	1
  4279  000041                     check_day_time@day_delay:
  4280                           	opt callstack 0
  4281  000041                     	ds	1
  4282  000042                     dac_spi_control@S0:
  4283                           	opt callstack 0
  4284  000042                     	ds	1
  4285  000043                     dac_spi_control@init:
  4286                           	opt callstack 0
  4287  000043                     	ds	1
  4288  000044                     _uart2RxHead:
  4289                           	opt callstack 0
  4290  000044                     	ds	1
  4291  000045                     _uart2TxBufferRemaining:
  4292                           	opt callstack 0
  4293  000045                     	ds	1
  4294  000046                     _uart2TxTail:
  4295                           	opt callstack 0
  4296  000046                     	ds	1
  4297  000047                     _uart1RxHead:
  4298                           	opt callstack 0
  4299  000047                     	ds	1
  4300                           
  4301                           	psect	bssBANK0
  4302  000060                     __pbssBANK0:
  4303                           	opt callstack 0
  4304  000060                     _spi_link:
  4305                           	opt callstack 0
  4306  000060                     	ds	12
  4307  00006C                     _uart1RxBuffer:
  4308                           	opt callstack 0
  4309  00006C                     	ds	8
  4310  000074                     spinners@s:
  4311                           	opt callstack 0
  4312  000074                     	ds	6
  4313  00007A                     floorf@F524:
  4314                           	opt callstack 0
  4315  00007A                     	ds	4
  4316  00007E                     fabsf@F463:
  4317                           	opt callstack 0
  4318  00007E                     	ds	4
  4319  000082                     ___fpclassifyf@F463:
  4320                           	opt callstack 0
  4321  000082                     	ds	4
  4322  000086                     calc_ror_data@bcror:
  4323                           	opt callstack 0
  4324  000086                     	ds	4
  4325  00008A                     calc_ror_data@bvror:
  4326                           	opt callstack 0
  4327  00008A                     	ds	4
  4328  00008E                     calc_model_data@bcror:
  4329                           	opt callstack 0
  4330  00008E                     	ds	4
  4331  000092                     calc_model_data@bvror:
  4332                           	opt callstack 0
  4333  000092                     	ds	4
  4334  000096                     _utctime:
  4335                           	opt callstack 0
  4336  000096                     	ds	4
  4337  00009A                     wdtdelay@dcount:
  4338                           	opt callstack 0
  4339  00009A                     	ds	4
  4340  00009E                     _P:
  4341                           	opt callstack 0
  4342  00009E                     	ds	4
  4343  0000A2                     _TMR3_InterruptHandler:
  4344                           	opt callstack 0
  4345  0000A2                     	ds	3
  4346  0000A5                     _TMR5_InterruptHandler:
  4347                           	opt callstack 0
  4348  0000A5                     	ds	3
  4349  0000A8                     _TMR6_InterruptHandler:
  4350                           	opt callstack 0
  4351  0000A8                     	ds	3
  4352  0000AB                     _ADCC_ADTI_InterruptHandler:
  4353                           	opt callstack 0
  4354  0000AB                     	ds	3
  4355  0000AE                     _ADCC_ADI_InterruptHandler:
  4356                           	opt callstack 0
  4357  0000AE                     	ds	3
  4358  0000B1                     _UART1_RxInterruptHandler:
  4359                           	opt callstack 0
  4360  0000B1                     	ds	3
  4361  0000B4                     _UART2_TxInterruptHandler:
  4362                           	opt callstack 0
  4363  0000B4                     	ds	3
  4364  0000B7                     _UART2_RxInterruptHandler:
  4365                           	opt callstack 0
  4366  0000B7                     	ds	3
  4367  0000BA                     _INT1_InterruptHandler:
  4368                           	opt callstack 0
  4369  0000BA                     	ds	3
  4370  0000BD                     _INT0_InterruptHandler:
  4371                           	opt callstack 0
  4372  0000BD                     	ds	3
  4373  0000C0                     _nout:
  4374                           	opt callstack 0
  4375  0000C0                     	ds	2
  4376  0000C2                     TMR3_ISR@CountCallBack:
  4377                           	opt callstack 0
  4378  0000C2                     	ds	2
  4379  0000C4                     _timer3ReloadVal:
  4380                           	opt callstack 0
  4381  0000C4                     	ds	2
  4382  0000C6                     TMR5_ISR@CountCallBack:
  4383                           	opt callstack 0
  4384  0000C6                     	ds	2
  4385  0000C8                     _timer5ReloadVal:
  4386                           	opt callstack 0
  4387  0000C8                     	ds	2
  4388  0000CA                     esr_check@esr_state:
  4389                           	opt callstack 0
  4390  0000CA                     	ds	1
  4391  0000CB                     dac_spi_control@SB:
  4392                           	opt callstack 0
  4393  0000CB                     	ds	1
  4394  0000CC                     dac_spi_control@SC:
  4395                           	opt callstack 0
  4396  0000CC                     	ds	1
  4397  0000CD                     dac_spi_control@S2:
  4398                           	opt callstack 0
  4399  0000CD                     	ds	1
  4400  0000CE                     dac_spi_control@S1:
  4401                           	opt callstack 0
  4402  0000CE                     	ds	1
  4403  0000CF                     _mode_sw:
  4404                           	opt callstack 0
  4405  0000CF                     	ds	1
  4406  0000D0                     _uart2RxCount:
  4407                           	opt callstack 0
  4408  0000D0                     	ds	1
  4409  0000D1                     _uart2RxTail:
  4410                           	opt callstack 0
  4411  0000D1                     	ds	1
  4412  0000D2                     _uart2TxHead:
  4413                           	opt callstack 0
  4414  0000D2                     	ds	1
  4415  0000D3                     _uart1RxCount:
  4416                           	opt callstack 0
  4417  0000D3                     	ds	1
  4418  0000D4                     _uart1RxTail:
  4419                           	opt callstack 0
  4420  0000D4                     	ds	1
  4421  0000D5                     _crcObj:
  4422                           	opt callstack 0
  4423  0000D5                     	ds	3
  4424                           
  4425                           	psect	dataBANK0
  4426  0000F1                     __pdataBANK0:
  4427                           	opt callstack 0
  4428  0000F1                     _H:
  4429                           	opt callstack 0
  4430  0000F1                     	ds	9
  4431                           
  4432                           	psect	bssBANK1
  4433  000196                     __pbssBANK1:
  4434                           	opt callstack 0
  4435  000196                     _S:
  4436                           	opt callstack 0
  4437  000196                     	ds	41
  4438  0001BF                     _tickCount:
  4439                           	opt callstack 0
  4440  0001BF                     	ds	26
  4441  0001D9                     _seed:
  4442                           	opt callstack 0
  4443  0001D9                     	ds	8
  4444                           
  4445                           	psect	dataBANK1
  4446  000100                     __pdataBANK1:
  4447                           	opt callstack 0
  4448  000100                     stoa@F1166:
  4449                           	opt callstack 0
  4450  000100                     	ds	7
  4451  000107                     _R:
  4452                           	opt callstack 0
  4453  000107                     	ds	143
  4454                           
  4455                           	psect	bssBANK2
  4456  0002C0                     __pbssBANK2:
  4457                           	opt callstack 0
  4458  0002C0                     _uart2TxBuffer:
  4459                           	opt callstack 0
  4460  0002C0                     	ds	64
  4461                           
  4462                           	psect	dataBANK2
  4463  000200                     __pdataBANK2:
  4464                           	opt callstack 0
  4465  000200                     _V:
  4466                           	opt callstack 0
  4467  000200                     	ds	192
  4468                           
  4469                           	psect	bssBANK3
  4470  000300                     __pbssBANK3:
  4471                           	opt callstack 0
  4472  000300                     lp_filter@smooth:
  4473                           	opt callstack 0
  4474  000300                     	ds	84
  4475  000354                     _dbuf:
  4476                           	opt callstack 0
  4477  000354                     	ds	80
  4478  0003A4                     _ring_buf1:
  4479                           	opt callstack 0
  4480  0003A4                     	ds	67
  4481                           
  4482                           	psect	bssBANK4
  4483  000400                     __pbssBANK4:
  4484                           	opt callstack 0
  4485  000400                     _r_cal:
  4486                           	opt callstack 0
  4487  000400                     	ds	143
  4488  00048F                     _ring_buf2:
  4489                           	opt callstack 0
  4490  00048F                     	ds	67
  4491                           
  4492                           	psect	bssBANK5
  4493  000500                     __pbssBANK5:
  4494                           	opt callstack 0
  4495  000500                     _uart2RxBuffer:
  4496                           	opt callstack 0
  4497  000500                     	ds	255
  4498                           
  4499                           	psect	bssBIGRAM
  4500  00092A                     __pbssBIGRAM:
  4501                           	opt callstack 0
  4502  00092A                     _D:
  4503                           	opt callstack 0
  4504  00092A                     	ds	482
  4505                           
  4506                           	psect	dataBIGRAM
  4507  0005FF                     __pdataBIGRAM:
  4508                           	opt callstack 0
  4509  0005FF                     _port_data:
  4510                           	opt callstack 0
  4511  0005FF                     	ds	512
  4512  0007FF                     _C:
  4513                           	opt callstack 0
  4514  0007FF                     	ds	299
  4515                           
  4516                           	psect	cstackBANK0
  4517  0000D8                     __pcstackBANK0:
  4518                           	opt callstack 0
  4519  0000D8                     ??_TMR3_ISR:
  4520                           
  4521                           ; 1 bytes @ 0x0
  4522  0000D8                     	ds	25
  4523                           
  4524                           	psect	cstackCOMRAM
  4525  000021                     __pcstackCOMRAM:
  4526                           	opt callstack 0
  4527  000021                     ??_ADCC_ThresholdISR:
  4528  000021                     
  4529                           ; 1 bytes @ 0x0
  4530  000021                     	ds	5
  4531  000026                     ??_TMR6_ISR:
  4532                           
  4533                           ; 1 bytes @ 0x5
  4534  000026                     	ds	1
  4535  000027                     ??_INT1_ISR:
  4536  000027                     
  4537                           ; 1 bytes @ 0x6
  4538  000027                     	ds	4
  4539  00002B                     ??_TMR5_ISR:
  4540                           
  4541                           ; 1 bytes @ 0xA
  4542  00002B                     	ds	15
  4543                           
  4544 ;;
  4545 ;;Main: autosize = 17, tempsize = 0, incstack = 0, save=0
  4546 ;;
  4547 ;; *************** function _main *****************
  4548 ;; Defined at:
  4549 ;;		line 189 in file "main.c"
  4550 ;; Parameters:    Size  Location     Type
  4551 ;;		None
  4552 ;; Auto vars:     Size  Location     Type
  4553 ;;  esr_temp        4  [STACK] float 
  4554 ;;  i_esr           2  [STACK] unsigned short 
  4555 ;;  shape           1  [STACK] unsigned char 
  4556 ;;  inp_index       1  [STACK] unsigned char 
  4557 ;;  k               1  [STACK] unsigned char 
  4558 ;;  j               1  [STACK] unsigned char 
  4559 ;;  i               1  [STACK] unsigned char 
  4560 ;;  mode            1  [STACK] enum E17028
  4561 ;;  i_ror           1  [STACK] unsigned char 
  4562 ;; Return value:  Size  Location     Type
  4563 ;;                  1  [STACK] void 
  4564 ;; Registers used:
  4565 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  4566 ;; Tracked objects:
  4567 ;;		On entry : 0/0
  4568 ;;		On exit  : 0/0
  4569 ;;		Unchanged: 0/0
  4570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4571 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4572 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4573 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4574 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4575 ;;Total ram usage:        0 bytes
  4576 ;; Hardware stack levels required when called:   29
  4577 ;; This function calls:
  4578 ;;		_SYSTEM_Initialize
  4579 ;;		_StartTimer
  4580 ;;		_TimerDone
  4581 ;;		_WaitMs
  4582 ;;		___fladd
  4583 ;;		___flge
  4584 ;;		___fltol
  4585 ;;		_calc_model_data
  4586 ;;		_calc_ror_data
  4587 ;;		_check_adc_scan
  4588 ;;		_check_enter_button
  4589 ;;		_check_help
  4590 ;;		_clear_adc_scan
  4591 ;;		_clear_hid_pflags
  4592 ;;		_conv_raw_result
  4593 ;;		_convert_adc_data
  4594 ;;		_current_sensor_cal
  4595 ;;		_eaDogM_WriteCommand
  4596 ;;		_esr_check
  4597 ;;		_fabsf
  4598 ;;		_get_raw_result
  4599 ;;		_get_switch
  4600 ;;		_get_vterm_ptr
  4601 ;;		_hid_display
  4602 ;;		_init_bsoc
  4603 ;;		_init_display
  4604 ;;		_init_port_dma
  4605 ;;		_lp_filter
  4606 ;;		_mode_lamp_dim
  4607 ;;		_read_cal_data
  4608 ;;		_set_dac
  4609 ;;		_set_dac_a
  4610 ;;		_set_dac_b
  4611 ;;		_set_display_info
  4612 ;;		_set_load_relay_one
  4613 ;;		_set_load_relay_two
  4614 ;;		_set_vterm
  4615 ;;		_spinners
  4616 ;;		_sprintf
  4617 ;;		_srand
  4618 ;;		_start_adc_scan
  4619 ;;		_start_switch_handler
  4620 ;;		_static_soc
  4621 ;;		_update_cal_data
  4622 ;;		_update_hist_data
  4623 ;;		_update_lcd
  4624 ;;		_wait_lcd_done
  4625 ;; This function is called by:
  4626 ;;		Startup code after reset
  4627 ;; This function uses a reentrant model
  4628 ;;
  4629                           
  4630                           	psect	text0
  4631  010000                     __ptext0:
  4632                           	opt callstack 0
  4633  010000                     _main:
  4634                           	opt callstack 0
  4635                           
  4636                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  4637  010000  0E11               	movlw	17
  4638  010002  26E1               	addwf	fsr1l,f,c
  4639  010004  0E00               	movlw	0
  4640  010006  22E2               	addwfc	fsr1h,f,c
  4641                           
  4642                           ;main.c: 191:  UI_STATES mode;;main.c: 192:  uint8_t inp_index = 0, i = C_BATT, j = C_PV
      +                          , k = V_CC, i_ror;
  4643                           ;stkvar	_inp_index @ sp[(-17)+11]
  4644                           
  4645                           ;incstack = 0
  4646  010008  0EFA               	movlw	-6
  4647  01000A  6AE3               	clrf	plusw1,c
  4648                           
  4649                           ;stkvar	_i @ sp[(-17)+14]
  4650  01000C  0EFD               	movlw	-3
  4651  01000E  6AE3               	clrf	plusw1,c
  4652                           
  4653                           ;stkvar	_j @ sp[(-17)+13]
  4654  010010  0EFC               	movlw	-4
  4655  010012  6AE3               	clrf	plusw1,c
  4656  010014  2AE3               	incf	plusw1,f,c
  4657                           
  4658                           ;stkvar	_k @ sp[(-17)+12]
  4659  010016  0EFB               	movlw	-5
  4660  010018  6AE3               	clrf	plusw1,c
  4661  01001A  82E3               	bsf	plusw1,1,c
  4662                           
  4663                           ;main.c: 195:  SYSTEM_Initialize();
  4664  01001C  EC47  F0E6         	call	_SYSTEM_Initialize	;wreg free
  4665                           
  4666                           ; BSR set to: 60
  4667                           ;main.c: 198:  (INTCON0bits.GIEH = 1);
  4668  010020  8ED2               	bsf	210,7,c	;volatile
  4669                           
  4670                           ; BSR set to: 60
  4671                           ;main.c: 201:  (INTCON0bits.GIEL = 1);
  4672  010022  8CD2               	bsf	210,6,c	;volatile
  4673                           
  4674                           ; BSR set to: 60
  4675                           ;main.c: 203:  V.ui_state = UI_STATE_INIT;
  4676  010024  0102               	movlb	2	; () banked
  4677  010026  6B00               	clrf	_V& (0+255),b	;volatile
  4678                           
  4679                           ; BSR set to: 2
  4680                           ;main.c: 208:  WaitMs(300);
  4681  010028  0E2C               	movlw	44
  4682  01002A  6EE6               	movwf	postinc1,c
  4683  01002C  0E01               	movlw	1
  4684  01002E  6EE6               	movwf	postinc1,c
  4685  010030  EC08  F0E9         	call	_WaitMs	;wreg free
  4686                           
  4687                           ;main.c: 209:  if (PORTBbits.RB0) {
  4688  010034  A0CB               	btfss	203,0,c	;volatile
  4689  010036  D004               	goto	l14666
  4690                           
  4691                           ;main.c: 210:   mode = UI_STATE_HOST;
  4692                           ;stkvar	_mode @ sp[(-17)+15]
  4693  010038  0EFE               	movlw	-2
  4694  01003A  6AE3               	clrf	plusw1,c
  4695  01003C  2AE3               	incf	plusw1,f,c
  4696                           
  4697                           ;main.c: 211:  } else {
  4698  01003E  D004               	goto	l14668
  4699  010040                     l14666:
  4700                           
  4701                           ;main.c: 212:   mode = UI_STATE_LOG;
  4702                           ;stkvar	_mode @ sp[(-17)+15]
  4703  010040  0EFE               	movlw	-2
  4704  010042  6AE3               	clrf	plusw1,c
  4705  010044  80E3               	bsf	plusw1,0,c
  4706  010046  82E3               	bsf	plusw1,1,c	;indir
  4707  010048                     l14668:
  4708                           
  4709                           ;main.c: 215:  if (mode == UI_STATE_HOST) {
  4710                           ;stkvar	_mode @ sp[(-17)+15]
  4711  010048  0EFE               	movlw	-2
  4712  01004A  04E3               	decf	plusw1,w,c
  4713  01004C  A4D8               	btfss	status,2,c
  4714  01004E  D007               	goto	l1441
  4715                           
  4716                           ;main.c: 216:   do { LATDbits.LATD0 = 1; } while(0);
  4717  010050  80BD               	bsf	189,0,c	;volatile
  4718                           
  4719                           ;main.c: 217:   V.mode_pwm = 70;
  4720  010052  0E00               	movlw	0
  4721  010054  0102               	movlb	2	; () banked
  4722  010056  6F96               	movwf	(_V+150)& (0+255),b	;volatile
  4723  010058  0E46               	movlw	70
  4724  01005A  6F95               	movwf	(_V+149)& (0+255),b	;volatile
  4725                           
  4726                           ;main.c: 218:  } else {
  4727  01005C  D004               	goto	l14672
  4728  01005E                     l1441:
  4729  01005E  90BD               	bcf	189,0,c	;volatile
  4730                           
  4731                           ;main.c: 220:   V.mode_pwm = 0;
  4732  010060  0102               	movlb	2	; () banked
  4733  010062  6B95               	clrf	(_V+149)& (0+255),b	;volatile
  4734  010064  6B96               	clrf	(_V+150)& (0+255),b	;volatile
  4735  010066                     l14672:
  4736                           
  4737                           ; BSR set to: 2
  4738                           ;main.c: 222:  mode_lamp_dim(V.mode_pwm);
  4739  010066  0060  FA57  FFE6   	movff	_V+149,postinc1
  4740  01006C  0060  FA5B  FFE6   	movff	_V+150,postinc1
  4741  010072  ECDF  F0EC         	call	_mode_lamp_dim	;wreg free
  4742  010076  D3A4               	goto	l14822
  4743  010078                     l14674:
  4744                           
  4745                           ; BSR set to: 2
  4746                           ;main.c: 230:    init_port_dma();
  4747  010078  ECBE  F0E9         	call	_init_port_dma	;wreg free
  4748                           
  4749                           ; BSR set to: 59
  4750                           ;main.c: 232:    init_display();
  4751  01007C  ECE1  F0D8         	call	_init_display	;wreg free
  4752                           
  4753                           ; BSR set to: 61
  4754                           ;main.c: 233:    eaDogM_WriteCommand(0b00001100);
  4755  010080  0E0C               	movlw	12
  4756  010082  6EE6               	movwf	postinc1,c
  4757  010084  EC5C  F0ED         	call	_eaDogM_WriteCommand	;wreg free
  4758                           
  4759                           ; BSR set to: 0
  4760                           ;main.c: 234:    set_dac();
  4761  010088  EC51  F0DD         	call	_set_dac	;wreg free
  4762                           
  4763                           ;main.c: 238:    set_load_relay_one(1);
  4764  01008C  0E01               	movlw	1
  4765  01008E  6EE6               	movwf	postinc1,c
  4766  010090  EC3C  F0ED         	call	_set_load_relay_one	;wreg free
  4767                           
  4768                           ;main.c: 239:    set_load_relay_two(1);
  4769  010094  0E01               	movlw	1
  4770  010096  6EE6               	movwf	postinc1,c
  4771  010098  EC34  F0ED         	call	_set_load_relay_two	;wreg free
  4772                           
  4773                           ;main.c: 241:    V.ui_state = mode;
  4774                           ;stkvar	_mode @ sp[(-17)+15]
  4775  01009C  0EFE               	movlw	-2
  4776  01009E  006F FF8C  F200    	movff	plusw1,_V	;volatile
  4777                           
  4778                           ;main.c: 242:    srand(1957);
  4779  0100A4  0EA5               	movlw	165
  4780  0100A6  6EE6               	movwf	postinc1,c
  4781  0100A8  0E07               	movlw	7
  4782  0100AA  6EE6               	movwf	postinc1,c
  4783  0100AC  EC23  F0E9         	call	_srand	;wreg free
  4784                           
  4785                           ; BSR set to: 1
  4786                           ;main.c: 243:    set_vterm(0);
  4787  0100B0  0E00               	movlw	0
  4788  0100B2  6EE6               	movwf	postinc1,c
  4789  0100B4  EC97  F0EC         	call	_set_vterm	;wreg free
  4790                           
  4791                           ;main.c: 244:    sprintf(get_vterm_ptr(0, 0), " MBMC SOLARMON      ");
  4792  0100B8  0E65               	movlw	low STR_1
  4793  0100BA  6EE6               	movwf	postinc1,c
  4794  0100BC  0EFE               	movlw	high STR_1
  4795  0100BE  6EE6               	movwf	postinc1,c
  4796  0100C0  0E00               	movlw	0
  4797  0100C2  6EE6               	movwf	postinc1,c
  4798  0100C4  0E00               	movlw	0
  4799  0100C6  6EE6               	movwf	postinc1,c
  4800  0100C8  EC1E  F0EA         	call	_get_vterm_ptr	;wreg free
  4801  0100CC  0060  F007  FFE6   	movff	btemp,postinc1
  4802  0100D2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4803  0100D8  0E04               	movlw	4
  4804  0100DA  6EE6               	movwf	postinc1,c
  4805  0100DC  EC5C  F0D8         	call	_sprintf	;wreg free
  4806                           
  4807                           ; BSR set to: 0
  4808                           ;main.c: 245:    sprintf(get_vterm_ptr(1, 0), " Version %s         ", "1.21");
  4809  0100E0  0ED2               	movlw	low STR_3
  4810  0100E2  6EE6               	movwf	postinc1,c
  4811  0100E4  0EFF               	movlw	high STR_3
  4812  0100E6  6EE6               	movwf	postinc1,c
  4813  0100E8  0E11               	movlw	low STR_2
  4814  0100EA  6EE6               	movwf	postinc1,c
  4815  0100EC  0EFE               	movlw	high STR_2
  4816  0100EE  6EE6               	movwf	postinc1,c
  4817  0100F0  0E00               	movlw	0
  4818  0100F2  6EE6               	movwf	postinc1,c
  4819  0100F4  0E01               	movlw	1
  4820  0100F6  6EE6               	movwf	postinc1,c
  4821  0100F8  EC1E  F0EA         	call	_get_vterm_ptr	;wreg free
  4822  0100FC  0060  F007  FFE6   	movff	btemp,postinc1
  4823  010102  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4824  010108  0E06               	movlw	6
  4825  01010A  6EE6               	movwf	postinc1,c
  4826  01010C  EC5C  F0D8         	call	_sprintf	;wreg free
  4827                           
  4828                           ; BSR set to: 0
  4829                           ;main.c: 246:    sprintf(get_vterm_ptr(2, 0), " NSASPOOK           ");
  4830  010110  0EA8               	movlw	low STR_4
  4831  010112  6EE6               	movwf	postinc1,c
  4832  010114  0EFD               	movlw	high STR_4
  4833  010116  6EE6               	movwf	postinc1,c
  4834  010118  0E00               	movlw	0
  4835  01011A  6EE6               	movwf	postinc1,c
  4836  01011C  0E02               	movlw	2
  4837  01011E  6EE6               	movwf	postinc1,c
  4838  010120  EC1E  F0EA         	call	_get_vterm_ptr	;wreg free
  4839  010124  0060  F007  FFE6   	movff	btemp,postinc1
  4840  01012A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4841  010130  0E04               	movlw	4
  4842  010132  6EE6               	movwf	postinc1,c
  4843  010134  EC5C  F0D8         	call	_sprintf	;wreg free
  4844                           
  4845                           ; BSR set to: 0
  4846                           ;main.c: 247:    sprintf(get_vterm_ptr(0, 2), "                    ");
  4847  010138  0EDF               	movlw	low (STR_14+1)
  4848  01013A  6EE6               	movwf	postinc1,c
  4849  01013C  0EFB               	movlw	high (STR_14+1)
  4850  01013E  6EE6               	movwf	postinc1,c
  4851  010140  0E02               	movlw	2
  4852  010142  6EE6               	movwf	postinc1,c
  4853  010144  0E00               	movlw	0
  4854  010146  6EE6               	movwf	postinc1,c
  4855  010148  EC1E  F0EA         	call	_get_vterm_ptr	;wreg free
  4856  01014C  0060  F007  FFE6   	movff	btemp,postinc1
  4857  010152  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4858  010158  0E04               	movlw	4
  4859  01015A  6EE6               	movwf	postinc1,c
  4860  01015C  EC5C  F0D8         	call	_sprintf	;wreg free
  4861                           
  4862                           ; BSR set to: 0
  4863                           ;main.c: 248:    sprintf(get_vterm_ptr(1, 2), "                    ");
  4864  010160  0EDF               	movlw	low (STR_14+1)
  4865  010162  6EE6               	movwf	postinc1,c
  4866  010164  0EFB               	movlw	high (STR_14+1)
  4867  010166  6EE6               	movwf	postinc1,c
  4868  010168  0E02               	movlw	2
  4869  01016A  6EE6               	movwf	postinc1,c
  4870  01016C  0E01               	movlw	1
  4871  01016E  6EE6               	movwf	postinc1,c
  4872  010170  EC1E  F0EA         	call	_get_vterm_ptr	;wreg free
  4873  010174  0060  F007  FFE6   	movff	btemp,postinc1
  4874  01017A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4875  010180  0E04               	movlw	4
  4876  010182  6EE6               	movwf	postinc1,c
  4877  010184  EC5C  F0D8         	call	_sprintf	;wreg free
  4878                           
  4879                           ; BSR set to: 0
  4880                           ;main.c: 249:    sprintf(get_vterm_ptr(2, 2), "                    ");
  4881  010188  0EDF               	movlw	low (STR_14+1)
  4882  01018A  6EE6               	movwf	postinc1,c
  4883  01018C  0EFB               	movlw	high (STR_14+1)
  4884  01018E  6EE6               	movwf	postinc1,c
  4885  010190  0E02               	movlw	2
  4886  010192  6EE6               	movwf	postinc1,c
  4887  010194  0E02               	movlw	2
  4888  010196  6EE6               	movwf	postinc1,c
  4889  010198  EC1E  F0EA         	call	_get_vterm_ptr	;wreg free
  4890  01019C  0060  F007  FFE6   	movff	btemp,postinc1
  4891  0101A2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4892  0101A8  0E04               	movlw	4
  4893  0101AA  6EE6               	movwf	postinc1,c
  4894  0101AC  EC5C  F0D8         	call	_sprintf	;wreg free
  4895                           
  4896                           ; BSR set to: 0
  4897                           ;main.c: 250:    update_lcd(0);
  4898  0101B0  0E00               	movlw	0
  4899  0101B2  6EE6               	movwf	postinc1,c
  4900  0101B4  EC4D  F0D7         	call	_update_lcd	;wreg free
  4901                           
  4902                           ;main.c: 251:    WaitMs(1000);
  4903  0101B8  0EE8               	movlw	232
  4904  0101BA  6EE6               	movwf	postinc1,c
  4905  0101BC  0E03               	movlw	3
  4906  0101BE  6EE6               	movwf	postinc1,c
  4907  0101C0  EC08  F0E9         	call	_WaitMs	;wreg free
  4908                           
  4909                           ;main.c: 252:    StartTimer(TMR_DISPLAY, 250);
  4910  0101C4  0EFA               	movlw	250
  4911  0101C6  6EE6               	movwf	postinc1,c
  4912  0101C8  0E00               	movlw	0
  4913  0101CA  6EE6               	movwf	postinc1,c
  4914  0101CC  0E0A               	movlw	10
  4915  0101CE  6EE6               	movwf	postinc1,c
  4916  0101D0  EC13  F0E8         	call	_StartTimer	;wreg free
  4917                           
  4918                           ;main.c: 253:    StartTimer(TMR_ADC, 200);
  4919  0101D4  0EC8               	movlw	200
  4920  0101D6  6EE6               	movwf	postinc1,c
  4921  0101D8  0E00               	movlw	0
  4922  0101DA  6EE6               	movwf	postinc1,c
  4923  0101DC  0E01               	movlw	1
  4924  0101DE  6EE6               	movwf	postinc1,c
  4925  0101E0  EC13  F0E8         	call	_StartTimer	;wreg free
  4926                           
  4927                           ;main.c: 254:    StartTimer(TMR_INFO, 3000);
  4928  0101E4  0EB8               	movlw	184
  4929  0101E6  6EE6               	movwf	postinc1,c
  4930  0101E8  0E0B               	movlw	11
  4931  0101EA  6EE6               	movwf	postinc1,c
  4932  0101EC  0E07               	movlw	7
  4933  0101EE  6EE6               	movwf	postinc1,c
  4934  0101F0  EC13  F0E8         	call	_StartTimer	;wreg free
  4935                           
  4936                           ;main.c: 255:    StartTimer(TMR_FLIPPER, 1500);
  4937  0101F4  0EDC               	movlw	220
  4938  0101F6  6EE6               	movwf	postinc1,c
  4939  0101F8  0E05               	movlw	5
  4940  0101FA  6EE6               	movwf	postinc1,c
  4941  0101FC  0E0B               	movlw	11
  4942  0101FE  6EE6               	movwf	postinc1,c
  4943  010200  EC13  F0E8         	call	_StartTimer	;wreg free
  4944                           
  4945                           ;main.c: 256:    StartTimer(TMR_HELPDIS, 3000);
  4946  010204  0EB8               	movlw	184
  4947  010206  6EE6               	movwf	postinc1,c
  4948  010208  0E0B               	movlw	11
  4949  01020A  6EE6               	movwf	postinc1,c
  4950  01020C  0E09               	movlw	9
  4951  01020E  6EE6               	movwf	postinc1,c
  4952  010210  EC13  F0E8         	call	_StartTimer	;wreg free
  4953                           
  4954                           ;main.c: 258:    start_adc_scan();
  4955  010214  EC2A  F0E4         	call	_start_adc_scan	;wreg free
  4956                           
  4957                           ;main.c: 259:    start_switch_handler();
  4958  010218  EC59  F0EC         	call	_start_switch_handler	;wreg free
  4959                           
  4960                           ; BSR set to: 57
  4961                           ;main.c: 260:    WaitMs(1000);
  4962  01021C  0EE8               	movlw	232
  4963  01021E  6EE6               	movwf	postinc1,c
  4964  010220  0E03               	movlw	3
  4965  010222  6EE6               	movwf	postinc1,c
  4966  010224  EC08  F0E9         	call	_WaitMs	;wreg free
  4967                           
  4968                           ;main.c: 265:    if (read_cal_data()) {
  4969  010228  ECA8  F0C9         	call	_read_cal_data	;wreg free
  4970  01022C  5001               	movf	btemp^0,w,c
  4971  01022E  B4D8               	btfsc	status,2,c
  4972  010230  D01F               	goto	l14732
  4973                           
  4974                           ;main.c: 266:     update_cal_data();
  4975  010232  ECA3  F0E5         	call	_update_cal_data	;wreg free
  4976                           
  4977                           ; BSR set to: 1
  4978                           ;main.c: 267:     update_hist_data(1, &C.hist[0]);
  4979  010236  0EB8               	movlw	low (_C+185)
  4980  010238  6EE6               	movwf	postinc1,c
  4981  01023A  0E08               	movlw	high (_C+185)
  4982  01023C  6EE6               	movwf	postinc1,c
  4983  01023E  0E01               	movlw	1
  4984  010240  6EE6               	movwf	postinc1,c
  4985  010242  ECEE  F0E4         	call	_update_hist_data	;wreg free
  4986                           
  4987                           ; BSR set to: 1
  4988                           ;main.c: 268:     sprintf(get_vterm_ptr(2, 0), "Read EEPROM DATA    ");
  4989  010246  0EB9               	movlw	low STR_8
  4990  010248  6EE6               	movwf	postinc1,c
  4991  01024A  0EFE               	movlw	high STR_8
  4992  01024C  6EE6               	movwf	postinc1,c
  4993  01024E  0E00               	movlw	0
  4994  010250  6EE6               	movwf	postinc1,c
  4995  010252  0E02               	movlw	2
  4996  010254  6EE6               	movwf	postinc1,c
  4997  010256  EC1E  F0EA         	call	_get_vterm_ptr	;wreg free
  4998  01025A  0060  F007  FFE6   	movff	btemp,postinc1
  4999  010260  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5000  010266  0E04               	movlw	4
  5001  010268  6EE6               	movwf	postinc1,c
  5002  01026A  EC5C  F0D8         	call	_sprintf	;wreg free
  5003                           
  5004                           ;main.c: 269:    } else {
  5005  01026E  D014               	goto	l1447
  5006  010270                     l14732:
  5007                           
  5008                           ;main.c: 270:     sprintf(get_vterm_ptr(2, 0), "Invalid EEPROM DATA ");
  5009  010270  0E22               	movlw	low STR_9
  5010  010272  6EE6               	movwf	postinc1,c
  5011  010274  0EFF               	movlw	high STR_9
  5012  010276  6EE6               	movwf	postinc1,c
  5013  010278  0E00               	movlw	0
  5014  01027A  6EE6               	movwf	postinc1,c
  5015  01027C  0E02               	movlw	2
  5016  01027E  6EE6               	movwf	postinc1,c
  5017  010280  EC1E  F0EA         	call	_get_vterm_ptr	;wreg free
  5018  010284  0060  F007  FFE6   	movff	btemp,postinc1
  5019  01028A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5020  010290  0E04               	movlw	4
  5021  010292  6EE6               	movwf	postinc1,c
  5022  010294  EC5C  F0D8         	call	_sprintf	;wreg free
  5023  010298                     l1447:
  5024                           
  5025                           ; BSR set to: 0
  5026                           ;main.c: 272:    update_lcd(0);
  5027  010298  0E00               	movlw	0
  5028  01029A  6EE6               	movwf	postinc1,c
  5029  01029C  EC4D  F0D7         	call	_update_lcd	;wreg free
  5030                           
  5031                           ;main.c: 273:    WaitMs(2000);
  5032  0102A0  0ED0               	movlw	208
  5033  0102A2  6EE6               	movwf	postinc1,c
  5034  0102A4  0E07               	movlw	7
  5035  0102A6  6EE6               	movwf	postinc1,c
  5036  0102A8  EC08  F0E9         	call	_WaitMs	;wreg free
  5037                           
  5038                           ;main.c: 275:    i_ror = 1;
  5039                           ;stkvar	_i_ror @ sp[(-17)+16]
  5040  0102AC  0EFF               	movlw	-1
  5041  0102AE  6AE3               	clrf	plusw1,c
  5042  0102B0  2AE3               	incf	plusw1,f,c
  5043  0102B2                     l14738:
  5044                           
  5045                           ;main.c: 277:     calc_ror_data();
  5046  0102B2  EC06  F0CD         	call	_calc_ror_data	;wreg free
  5047                           
  5048                           ;main.c: 278:     sprintf(get_vterm_ptr(1, 0), "BV %2.4f            ", conv_raw_result(V
      +                          _BAT, CONV));
  5049  0102B6  0E00               	movlw	0
  5050  0102B8  6EE6               	movwf	postinc1,c
  5051  0102BA  0E04               	movlw	4
  5052  0102BC  6EE6               	movwf	postinc1,c
  5053  0102BE  EC02  F0B0         	call	_conv_raw_result	;wreg free
  5054  0102C2  0060  F007  FFE6   	movff	btemp,postinc1
  5055  0102C8  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5056  0102CE  0060  F00F  FFE6   	movff	btemp+2,postinc1
  5057  0102D4  0060  F013  FFE6   	movff	btemp+3,postinc1
  5058  0102DA  0E93               	movlw	low STR_10
  5059  0102DC  6EE6               	movwf	postinc1,c
  5060  0102DE  0EFD               	movlw	high STR_10
  5061  0102E0  6EE6               	movwf	postinc1,c
  5062  0102E2  0E00               	movlw	0
  5063  0102E4  6EE6               	movwf	postinc1,c
  5064  0102E6  0E01               	movlw	1
  5065  0102E8  6EE6               	movwf	postinc1,c
  5066  0102EA  EC1E  F0EA         	call	_get_vterm_ptr	;wreg free
  5067  0102EE  0060  F007  FFE6   	movff	btemp,postinc1
  5068  0102F4  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5069  0102FA  0E08               	movlw	8
  5070  0102FC  6EE6               	movwf	postinc1,c
  5071  0102FE  EC5C  F0D8         	call	_sprintf	;wreg free
  5072                           
  5073                           ; BSR set to: 0
  5074                           ;main.c: 279:     sprintf(get_vterm_ptr(2, 0), "S S%cC %d %2.4f          ", spinners(5, 
      +                          0), i_ror, C.bv_ror);
  5075  010302  EE22  F06B         	lfsr	2,_C+108	;volatile
  5076  010306  006F FF7B FFE6     	movff	postinc2,postinc1
  5077  01030C  006F FF7B FFE6     	movff	postinc2,postinc1
  5078  010312  006F FF7B FFE6     	movff	postinc2,postinc1
  5079  010318  006F FF7B FFE6     	movff	postinc2,postinc1
  5080                           
  5081                           ;stkvar	_i_ror @ sp[(-21)+16]
  5082  01031E  0EFB               	movlw	-5
  5083  010320  50E3               	movf	plusw1,w,c
  5084  010322  6EE6               	movwf	postinc1,c
  5085  010324  0E00               	movlw	0
  5086  010326  6EE6               	movwf	postinc1,c
  5087  010328  0E00               	movlw	0
  5088  01032A  6EE6               	movwf	postinc1,c
  5089  01032C  0E05               	movlw	5
  5090  01032E  6EE6               	movwf	postinc1,c
  5091  010330  EC56  F0D9         	call	_spinners	;wreg free
  5092  010334  5001               	movf	btemp^0,w,c
  5093  010336  6EE6               	movwf	postinc1,c
  5094  010338  0E00               	movlw	0
  5095  01033A  6EE6               	movwf	postinc1,c
  5096  01033C  0E39               	movlw	low STR_11
  5097  01033E  6EE6               	movwf	postinc1,c
  5098  010340  0EFB               	movlw	high STR_11
  5099  010342  6EE6               	movwf	postinc1,c
  5100  010344  0E00               	movlw	0
  5101  010346  6EE6               	movwf	postinc1,c
  5102  010348  0E02               	movlw	2
  5103  01034A  6EE6               	movwf	postinc1,c
  5104  01034C  EC1E  F0EA         	call	_get_vterm_ptr	;wreg free
  5105  010350  0060  F007  FFE6   	movff	btemp,postinc1
  5106  010356  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5107  01035C  0E0C               	movlw	12
  5108  01035E  6EE6               	movwf	postinc1,c
  5109  010360  EC5C  F0D8         	call	_sprintf	;wreg free
  5110                           
  5111                           ; BSR set to: 0
  5112                           ;main.c: 280:     update_lcd(0);
  5113  010364  0E00               	movlw	0
  5114  010366  6EE6               	movwf	postinc1,c
  5115  010368  EC4D  F0D7         	call	_update_lcd	;wreg free
  5116                           
  5117                           ;main.c: 281:     clear_adc_scan();
  5118  01036C  ECB9  F0ED         	call	_clear_adc_scan	;wreg free
  5119                           
  5120                           ; BSR set to: 1
  5121                           ;main.c: 282:     start_adc_scan();
  5122  010370  EC2A  F0E4         	call	_start_adc_scan	;wreg free
  5123                           
  5124                           ;main.c: 283:     WaitMs(2000);
  5125  010374  0ED0               	movlw	208
  5126  010376  6EE6               	movwf	postinc1,c
  5127  010378  0E07               	movlw	7
  5128  01037A  6EE6               	movwf	postinc1,c
  5129  01037C  EC08  F0E9         	call	_WaitMs	;wreg free
  5130                           
  5131                           ;main.c: 286:    } while ((i_ror++ < 30) && (C.bv_ror > 0.0140));
  5132                           ;stkvar	_i_ror @ sp[(-17)+16]
  5133  010380  0EFF               	movlw	-1
  5134  010382  006F FF8C  F00C    	movff	plusw1,btemp+11
  5135  010388  2A0C               	incf	(btemp+11)^0,f,c
  5136  01038A  0060  F033  FFE3   	movff	btemp+11,plusw1
  5137  010390  060C               	decf	(btemp+11)^0,f,c
  5138  010392  0E1E               	movlw	30
  5139  010394  600C               	cpfslt	(btemp+11)^0,c
  5140  010396  D01A               	goto	u14060
  5141  010398  EE22  F06B         	lfsr	2,_C+108	;volatile
  5142  01039C  006F FF7B FFE6     	movff	postinc2,postinc1
  5143  0103A2  006F FF7B FFE6     	movff	postinc2,postinc1
  5144  0103A8  006F FF7B FFE6     	movff	postinc2,postinc1
  5145  0103AE  006F FF7B FFE6     	movff	postinc2,postinc1
  5146  0103B4  0E42               	movlw	66
  5147  0103B6  6EE6               	movwf	postinc1,c
  5148  0103B8  0E60               	movlw	96
  5149  0103BA  6EE6               	movwf	postinc1,c
  5150  0103BC  0E65               	movlw	101
  5151  0103BE  6EE6               	movwf	postinc1,c
  5152  0103C0  0E3C               	movlw	60
  5153  0103C2  6EE6               	movwf	postinc1,c
  5154  0103C4  ECFB  F0CF         	call	___flge	;wreg free
  5155  0103C8  A001               	btfss	btemp& (0+255),0,c
  5156  0103CA  D773               	goto	l14738
  5157  0103CC                     u14060:
  5158                           
  5159                           ;main.c: 288:    static_soc();
  5160  0103CC  EC1C  F0E5         	call	_static_soc	;wreg free
  5161                           
  5162                           ;main.c: 289:    init_bsoc();
  5163  0103D0  EC4A  F0C4         	call	_init_bsoc	;wreg free
  5164                           
  5165                           ;main.c: 290:    set_load_relay_one(0);
  5166  0103D4  0E00               	movlw	0
  5167  0103D6  6EE6               	movwf	postinc1,c
  5168  0103D8  EC3C  F0ED         	call	_set_load_relay_one	;wreg free
  5169                           
  5170                           ;main.c: 291:    set_load_relay_two(0);
  5171  0103DC  0E00               	movlw	0
  5172  0103DE  6EE6               	movwf	postinc1,c
  5173  0103E0  EC34  F0ED         	call	_set_load_relay_two	;wreg free
  5174                           
  5175                           ;main.c: 292:    sprintf(get_vterm_ptr(0, 0), "Static SOC %d        ", C.soc);
  5176  0103E4  EE22  F0B5         	lfsr	2,_C+182	;volatile
  5177  0103E8  006F FF78  F00B    	movff	postinc2,btemp+10
  5178  0103EE  006F FF74  F00C    	movff	postdec2,btemp+11
  5179  0103F4  0060  F02F  FFE6   	movff	btemp+10,postinc1
  5180  0103FA  0060  F033  FFE6   	movff	btemp+11,postinc1
  5181  010400  0E0A               	movlw	low STR_12
  5182  010402  6EE6               	movwf	postinc1,c
  5183  010404  0EFC               	movlw	high STR_12
  5184  010406  6EE6               	movwf	postinc1,c
  5185  010408  0E00               	movlw	0
  5186  01040A  6EE6               	movwf	postinc1,c
  5187  01040C  0E00               	movlw	0
  5188  01040E  6EE6               	movwf	postinc1,c
  5189  010410  EC1E  F0EA         	call	_get_vterm_ptr	;wreg free
  5190  010414  0060  F007  FFE6   	movff	btemp,postinc1
  5191  01041A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5192  010420  0E06               	movlw	6
  5193  010422  6EE6               	movwf	postinc1,c
  5194  010424  EC5C  F0D8         	call	_sprintf	;wreg free
  5195                           
  5196                           ; BSR set to: 0
  5197                           ;main.c: 293:    sprintf(get_vterm_ptr(1, 0), "Battery Ah %3.2f     ", C.dynamic_ah);
  5198  010428  EE22  F08F         	lfsr	2,_C+144	;volatile
  5199  01042C  006F FF7B FFE6     	movff	postinc2,postinc1
  5200  010432  006F FF7B FFE6     	movff	postinc2,postinc1
  5201  010438  006F FF7B FFE6     	movff	postinc2,postinc1
  5202  01043E  006F FF7B FFE6     	movff	postinc2,postinc1
  5203  010444  0EE6               	movlw	low STR_13
  5204  010446  6EE6               	movwf	postinc1,c
  5205  010448  0EFC               	movlw	high STR_13
  5206  01044A  6EE6               	movwf	postinc1,c
  5207  01044C  0E00               	movlw	0
  5208  01044E  6EE6               	movwf	postinc1,c
  5209  010450  0E01               	movlw	1
  5210  010452  6EE6               	movwf	postinc1,c
  5211  010454  EC1E  F0EA         	call	_get_vterm_ptr	;wreg free
  5212  010458  0060  F007  FFE6   	movff	btemp,postinc1
  5213  01045E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5214  010464  0E08               	movlw	8
  5215  010466  6EE6               	movwf	postinc1,c
  5216  010468  EC5C  F0D8         	call	_sprintf	;wreg free
  5217                           
  5218                           ; BSR set to: 0
  5219                           ;main.c: 294:    sprintf(get_vterm_ptr(2, 0), "                     ");
  5220  01046C  0EDE               	movlw	low STR_14
  5221  01046E  6EE6               	movwf	postinc1,c
  5222  010470  0EFB               	movlw	high STR_14
  5223  010472  6EE6               	movwf	postinc1,c
  5224  010474  0E00               	movlw	0
  5225  010476  6EE6               	movwf	postinc1,c
  5226  010478  0E02               	movlw	2
  5227  01047A  6EE6               	movwf	postinc1,c
  5228  01047C  EC1E  F0EA         	call	_get_vterm_ptr	;wreg free
  5229  010480  0060  F007  FFE6   	movff	btemp,postinc1
  5230  010486  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5231  01048C  0E04               	movlw	4
  5232  01048E  6EE6               	movwf	postinc1,c
  5233  010490  EC5C  F0D8         	call	_sprintf	;wreg free
  5234                           
  5235                           ; BSR set to: 0
  5236                           ;main.c: 295:    update_lcd(0);
  5237  010494  0E00               	movlw	0
  5238  010496  6EE6               	movwf	postinc1,c
  5239  010498  EC4D  F0D7         	call	_update_lcd	;wreg free
  5240                           
  5241                           ;main.c: 296:    WaitMs(2000);
  5242  01049C  0ED0               	movlw	208
  5243  01049E  6EE6               	movwf	postinc1,c
  5244  0104A0  0E07               	movlw	7
  5245  0104A2  6EE6               	movwf	postinc1,c
  5246  0104A4  EC08  F0E9         	call	_WaitMs	;wreg free
  5247                           
  5248                           ;main.c: 297:    sprintf(get_vterm_ptr(0, 0), "Battery ESR         ");
  5249  0104A8  0EBD               	movlw	low STR_15
  5250  0104AA  6EE6               	movwf	postinc1,c
  5251  0104AC  0EFD               	movlw	high STR_15
  5252  0104AE  6EE6               	movwf	postinc1,c
  5253  0104B0  0E00               	movlw	0
  5254  0104B2  6EE6               	movwf	postinc1,c
  5255  0104B4  0E00               	movlw	0
  5256  0104B6  6EE6               	movwf	postinc1,c
  5257  0104B8  EC1E  F0EA         	call	_get_vterm_ptr	;wreg free
  5258  0104BC  0060  F007  FFE6   	movff	btemp,postinc1
  5259  0104C2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5260  0104C8  0E04               	movlw	4
  5261  0104CA  6EE6               	movwf	postinc1,c
  5262  0104CC  EC5C  F0D8         	call	_sprintf	;wreg free
  5263                           
  5264                           ; BSR set to: 0
  5265                           ;main.c: 298:    sprintf(get_vterm_ptr(1, 0), "Calculation         ");
  5266  0104D0  0ED2               	movlw	low STR_16
  5267  0104D2  6EE6               	movwf	postinc1,c
  5268  0104D4  0EFD               	movlw	high STR_16
  5269  0104D6  6EE6               	movwf	postinc1,c
  5270  0104D8  0E00               	movlw	0
  5271  0104DA  6EE6               	movwf	postinc1,c
  5272  0104DC  0E01               	movlw	1
  5273  0104DE  6EE6               	movwf	postinc1,c
  5274  0104E0  EC1E  F0EA         	call	_get_vterm_ptr	;wreg free
  5275  0104E4  0060  F007  FFE6   	movff	btemp,postinc1
  5276  0104EA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5277  0104F0  0E04               	movlw	4
  5278  0104F2  6EE6               	movwf	postinc1,c
  5279  0104F4  EC5C  F0D8         	call	_sprintf	;wreg free
  5280                           
  5281                           ; BSR set to: 0
  5282                           ;main.c: 299:    sprintf(get_vterm_ptr(2, 0), "Check 30 seconds    ");
  5283  0104F8  0EE3               	movlw	low STR_17
  5284  0104FA  6EE6               	movwf	postinc1,c
  5285  0104FC  0EFE               	movlw	high STR_17
  5286  0104FE  6EE6               	movwf	postinc1,c
  5287  010500  0E00               	movlw	0
  5288  010502  6EE6               	movwf	postinc1,c
  5289  010504  0E02               	movlw	2
  5290  010506  6EE6               	movwf	postinc1,c
  5291  010508  EC1E  F0EA         	call	_get_vterm_ptr	;wreg free
  5292  01050C  0060  F007  FFE6   	movff	btemp,postinc1
  5293  010512  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5294  010518  0E04               	movlw	4
  5295  01051A  6EE6               	movwf	postinc1,c
  5296  01051C  EC5C  F0D8         	call	_sprintf	;wreg free
  5297                           
  5298                           ; BSR set to: 0
  5299                           ;main.c: 300:    update_lcd(0);
  5300  010520  0E00               	movlw	0
  5301  010522  6EE6               	movwf	postinc1,c
  5302  010524  EC4D  F0D7         	call	_update_lcd	;wreg free
  5303                           
  5304                           ;main.c: 301:    uint16_t i_esr = 1;
  5305  010528  0E01               	movlw	1
  5306  01052A  6E0B               	movwf	(btemp+10)^0,c
  5307  01052C  0E00               	movlw	0
  5308  01052E  6E0C               	movwf	(btemp+11)^0,c
  5309                           
  5310                           ;stkvar	_i_esr @ sp[(-17)+8]
  5311  010530  0EF7               	movlw	-9
  5312  010532  0060  F02F  FFE3   	movff	btemp+10,plusw1
  5313  010538  0EF8               	movlw	-8
  5314  01053A  0060  F033  FFE3   	movff	btemp+11,plusw1
  5315                           
  5316                           ;main.c: 303:    float esr_temp;;main.c: 304:    while ((esr_temp = esr_check(0)) < 0.0)
      +                           {
  5317  010540  D06D               	goto	l14798
  5318  010542                     l14786:
  5319                           
  5320                           ;main.c: 305:     WaitMs(110);
  5321  010542  0E6E               	movlw	110
  5322  010544  6EE6               	movwf	postinc1,c
  5323  010546  0E00               	movlw	0
  5324  010548  6EE6               	movwf	postinc1,c
  5325  01054A  EC08  F0E9         	call	_WaitMs	;wreg free
  5326                           
  5327                           ;main.c: 306:     shape = (uint8_t) fabsf(esr_temp);
  5328                           ;stkvar	_esr_temp @ sp[(-17)+4]
  5329  01054E  0EF3               	movlw	-13
  5330  010550  006F FF8F FFE6     	movff	plusw1,postinc1
  5331  010556  006F FF8F FFE6     	movff	plusw1,postinc1
  5332  01055C  006F FF8F FFE6     	movff	plusw1,postinc1
  5333  010562  006F FF8F FFE6     	movff	plusw1,postinc1
  5334  010568  ECAC  F0DD         	call	_fabsf	;wreg free
  5335  01056C  0060  F007  FFE6   	movff	btemp,postinc1
  5336  010572  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5337  010578  0060  F00F  FFE6   	movff	btemp+2,postinc1
  5338  01057E  0060  F013  FFE6   	movff	btemp+3,postinc1
  5339  010584  EC42  F0CF         	call	___fltol	;wreg free
  5340  010588  0060  F004  F00C   	movff	btemp,btemp+11
  5341                           
  5342                           ;stkvar	_shape @ sp[(-17)+10]
  5343  01058E  0EF9               	movlw	-7
  5344  010590  0060  F033  FFE3   	movff	btemp+11,plusw1
  5345                           
  5346                           ;main.c: 307:     sprintf(get_vterm_ptr(2, 0), "Checking %c %c      ", spinners(0, 0), s
      +                          pinners(shape, 0));
  5347  010596  0E00               	movlw	0
  5348  010598  6EE6               	movwf	postinc1,c
  5349                           
  5350                           ;stkvar	_shape @ sp[(-18)+10]
  5351  01059A  0EF8               	movlw	-8
  5352  01059C  50E3               	movf	plusw1,w,c
  5353  01059E  6EE6               	movwf	postinc1,c
  5354  0105A0  EC56  F0D9         	call	_spinners	;wreg free
  5355  0105A4  5001               	movf	btemp^0,w,c
  5356  0105A6  6EE6               	movwf	postinc1,c
  5357  0105A8  0E00               	movlw	0
  5358  0105AA  6EE6               	movwf	postinc1,c
  5359  0105AC  0E00               	movlw	0
  5360  0105AE  6EE6               	movwf	postinc1,c
  5361  0105B0  0E00               	movlw	0
  5362  0105B2  6EE6               	movwf	postinc1,c
  5363  0105B4  EC56  F0D9         	call	_spinners	;wreg free
  5364  0105B8  5001               	movf	btemp^0,w,c
  5365  0105BA  6EE6               	movwf	postinc1,c
  5366  0105BC  0E00               	movlw	0
  5367  0105BE  6EE6               	movwf	postinc1,c
  5368  0105C0  0E8F               	movlw	low STR_18
  5369  0105C2  6EE6               	movwf	postinc1,c
  5370  0105C4  0EFE               	movlw	high STR_18
  5371  0105C6  6EE6               	movwf	postinc1,c
  5372  0105C8  0E00               	movlw	0
  5373  0105CA  6EE6               	movwf	postinc1,c
  5374  0105CC  0E02               	movlw	2
  5375  0105CE  6EE6               	movwf	postinc1,c
  5376  0105D0  EC1E  F0EA         	call	_get_vterm_ptr	;wreg free
  5377  0105D4  0060  F007  FFE6   	movff	btemp,postinc1
  5378  0105DA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5379  0105E0  0E08               	movlw	8
  5380  0105E2  6EE6               	movwf	postinc1,c
  5381  0105E4  EC5C  F0D8         	call	_sprintf	;wreg free
  5382                           
  5383                           ; BSR set to: 0
  5384                           ;main.c: 308:     update_lcd(0);
  5385  0105E8  0E00               	movlw	0
  5386  0105EA  6EE6               	movwf	postinc1,c
  5387  0105EC  EC4D  F0D7         	call	_update_lcd	;wreg free
  5388                           
  5389                           ;main.c: 310:     if (i_esr++ > 512)
  5390                           ;stkvar	_i_esr @ sp[(-17)+8]
  5391  0105F0  50E1               	movf	fsr1l,w,c
  5392  0105F2  0FF7               	addlw	-9
  5393  0105F4  6ED9               	movwf	fsr2l,c
  5394  0105F6  50E2               	movf	fsr1h,w,c
  5395  0105F8  6EDA               	movwf	fsr2h,c
  5396  0105FA  0EFF               	movlw	255
  5397  0105FC  22DA               	addwfc	fsr2h,f,c
  5398  0105FE  006F FF7C  F00B    	movff	indf2,btemp+10
  5399  010604  0E01               	movlw	1
  5400  010606  26DE               	addwf	postinc2,f,c
  5401  010608  006F FF7C  F00C    	movff	indf2,btemp+11
  5402  01060E  0E00               	movlw	0
  5403  010610  22DD               	addwfc	postdec2,f,c
  5404  010612  040B               	decf	(btemp+10)^0,w,c
  5405  010614  0E02               	movlw	2
  5406  010616  580C               	subwfb	(btemp+11)^0,w,c
  5407  010618  B0D8               	btfsc	status,0,c
  5408  01061A  D017               	goto	u14080
  5409  01061C                     l14798:
  5410                           
  5411                           ;main.c: 304:    while ((esr_temp = esr_check(0)) < 0.0) {
  5412  01061C  0E00               	movlw	0
  5413  01061E  6EE6               	movwf	postinc1,c
  5414  010620  EC05  F0BF         	call	_esr_check	;wreg free
  5415                           
  5416                           ;stkvar	_esr_temp @ sp[(-17)+4]
  5417  010624  0EF3               	movlw	-13
  5418  010626  0060  F007  FFE3   	movff	btemp,plusw1
  5419  01062C  0EF4               	movlw	-12
  5420  01062E  0060  F00B  FFE3   	movff	btemp+1,plusw1
  5421  010634  0EF5               	movlw	-11
  5422  010636  0060  F00F  FFE3   	movff	btemp+2,plusw1
  5423  01063C  0EF6               	movlw	-10
  5424  01063E  0060  F013  FFE3   	movff	btemp+3,plusw1
  5425  010644  0EF6               	movlw	-10
  5426  010646  BEE3               	btfsc	plusw1,7,c
  5427  010648  D77C               	goto	l14786
  5428  01064A                     u14080:
  5429                           
  5430                           ;main.c: 313:    sprintf(get_vterm_ptr(0, 0), "ESR  %2.6f           ", C.esr);
  5431  01064A  EE22  F087         	lfsr	2,_C+136	;volatile
  5432  01064E  006F FF7B FFE6     	movff	postinc2,postinc1
  5433  010654  006F FF7B FFE6     	movff	postinc2,postinc1
  5434  01065A  006F FF7B FFE6     	movff	postinc2,postinc1
  5435  010660  006F FF7B FFE6     	movff	postinc2,postinc1
  5436  010666  0EF4               	movlw	low STR_19
  5437  010668  6EE6               	movwf	postinc1,c
  5438  01066A  0EFB               	movlw	high STR_19
  5439  01066C  6EE6               	movwf	postinc1,c
  5440  01066E  0E00               	movlw	0
  5441  010670  6EE6               	movwf	postinc1,c
  5442  010672  0E00               	movlw	0
  5443  010674  6EE6               	movwf	postinc1,c
  5444  010676  EC1E  F0EA         	call	_get_vterm_ptr	;wreg free
  5445  01067A  0060  F007  FFE6   	movff	btemp,postinc1
  5446  010680  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5447  010686  0E08               	movlw	8
  5448  010688  6EE6               	movwf	postinc1,c
  5449  01068A  EC5C  F0D8         	call	_sprintf	;wreg free
  5450                           
  5451                           ;main.c: 314:    sprintf(get_vterm_ptr(1, 0), "R1 %2.3f %3.4f           ", C.bv_one_load
      +                          , C.load_i1);
  5452  01068E  EE22  F10D         	lfsr	2,_C+270	;volatile
  5453  010692  006F FF7B FFE6     	movff	postinc2,postinc1
  5454  010698  006F FF7B FFE6     	movff	postinc2,postinc1
  5455  01069E  006F FF7B FFE6     	movff	postinc2,postinc1
  5456  0106A4  006F FF7B FFE6     	movff	postinc2,postinc1
  5457  0106AA  EE22  F119         	lfsr	2,_C+282	;volatile
  5458  0106AE  006F FF7B FFE6     	movff	postinc2,postinc1
  5459  0106B4  006F FF7B FFE6     	movff	postinc2,postinc1
  5460  0106BA  006F FF7B FFE6     	movff	postinc2,postinc1
  5461  0106C0  006F FF7B FFE6     	movff	postinc2,postinc1
  5462  0106C6  0E05               	movlw	low STR_20
  5463  0106C8  6EE6               	movwf	postinc1,c
  5464  0106CA  0EFB               	movlw	high STR_20
  5465  0106CC  6EE6               	movwf	postinc1,c
  5466  0106CE  0E00               	movlw	0
  5467  0106D0  6EE6               	movwf	postinc1,c
  5468  0106D2  0E01               	movlw	1
  5469  0106D4  6EE6               	movwf	postinc1,c
  5470  0106D6  EC1E  F0EA         	call	_get_vterm_ptr	;wreg free
  5471  0106DA  0060  F007  FFE6   	movff	btemp,postinc1
  5472  0106E0  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5473  0106E6  0E0C               	movlw	12
  5474  0106E8  6EE6               	movwf	postinc1,c
  5475  0106EA  EC5C  F0D8         	call	_sprintf	;wreg free
  5476                           
  5477                           ;main.c: 315:    sprintf(get_vterm_ptr(2, 0), "R2 %2.3f %3.4f           ", C.bv_full_loa
      +                          d, C.load_i2);
  5478  0106EE  EE22  F111         	lfsr	2,_C+274	;volatile
  5479  0106F2  006F FF7B FFE6     	movff	postinc2,postinc1
  5480  0106F8  006F FF7B FFE6     	movff	postinc2,postinc1
  5481  0106FE  006F FF7B FFE6     	movff	postinc2,postinc1
  5482  010704  006F FF7B FFE6     	movff	postinc2,postinc1
  5483  01070A  EE22  F11D         	lfsr	2,_C+286	;volatile
  5484  01070E  006F FF7B FFE6     	movff	postinc2,postinc1
  5485  010714  006F FF7B FFE6     	movff	postinc2,postinc1
  5486  01071A  006F FF7B FFE6     	movff	postinc2,postinc1
  5487  010720  006F FF7B FFE6     	movff	postinc2,postinc1
  5488  010726  0E1F               	movlw	low STR_21
  5489  010728  6EE6               	movwf	postinc1,c
  5490  01072A  0EFB               	movlw	high STR_21
  5491  01072C  6EE6               	movwf	postinc1,c
  5492  01072E  0E00               	movlw	0
  5493  010730  6EE6               	movwf	postinc1,c
  5494  010732  0E02               	movlw	2
  5495  010734  6EE6               	movwf	postinc1,c
  5496  010736  EC1E  F0EA         	call	_get_vterm_ptr	;wreg free
  5497  01073A  0060  F007  FFE6   	movff	btemp,postinc1
  5498  010740  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5499  010746  0E0C               	movlw	12
  5500  010748  6EE6               	movwf	postinc1,c
  5501  01074A  EC5C  F0D8         	call	_sprintf	;wreg free
  5502                           
  5503                           ;main.c: 316:    update_lcd(0);
  5504  01074E  0E00               	movlw	0
  5505  010750  6EE6               	movwf	postinc1,c
  5506  010752  EC4D  F0D7         	call	_update_lcd	;wreg free
  5507                           
  5508                           ;main.c: 317:    WaitMs(4000);
  5509  010756  0EA0               	movlw	160
  5510  010758  6EE6               	movwf	postinc1,c
  5511  01075A  0E0F               	movlw	15
  5512  01075C  6EE6               	movwf	postinc1,c
  5513  01075E  EC08  F0E9         	call	_WaitMs	;wreg free
  5514                           
  5515                           ;main.c: 318:    V.sensor_set = get_switch(SCALIB);
  5516  010762  0E04               	movlw	4
  5517  010764  6EE6               	movwf	postinc1,c
  5518  010766  EC35  F0EA         	call	_get_switch	;wreg free
  5519  01076A  5001               	movf	btemp^0,w,c
  5520  01076C  B4D8               	btfsc	status,2,c
  5521  01076E  D002               	goto	u14090
  5522  010770  0E01               	movlw	1
  5523  010772  D001               	goto	u14100
  5524  010774                     u14090:
  5525  010774  0E00               	movlw	0
  5526  010776                     u14100:
  5527  010776  0102               	movlb	2	; () banked
  5528  010778  6FAE               	movwf	(_V+174)& (0+255),b	;volatile
  5529                           
  5530                           ; BSR set to: 2
  5531                           ;main.c: 319:    WaitMs(1000);
  5532  01077A  0EE8               	movlw	232
  5533  01077C  6EE6               	movwf	postinc1,c
  5534  01077E  0E03               	movlw	3
  5535  010780  6EE6               	movwf	postinc1,c
  5536  010782  EC08  F0E9         	call	_WaitMs	;wreg free
  5537                           
  5538                           ;main.c: 320:    if (V.sensor_set && get_switch(SCALIB)) {
  5539  010786  0102               	movlb	2	; () banked
  5540  010788  51AE               	movf	(_V+174)& (0+255),w,b	;volatile
  5541  01078A  B4D8               	btfsc	status,2,c
  5542  01078C  D00F               	goto	l14816
  5543                           
  5544                           ; BSR set to: 2
  5545  01078E  0E04               	movlw	4
  5546  010790  6EE6               	movwf	postinc1,c
  5547  010792  EC35  F0EA         	call	_get_switch	;wreg free
  5548  010796  5001               	movf	btemp^0,w,c
  5549  010798  B4D8               	btfsc	status,2,c
  5550  01079A  D008               	goto	l14816
  5551                           
  5552                           ;main.c: 321:     current_sensor_cal();
  5553  01079C  EC41  F09A         	call	_current_sensor_cal	;wreg free
  5554                           
  5555                           ;main.c: 322:     WaitMs(4000);
  5556  0107A0  0EA0               	movlw	160
  5557  0107A2  6EE6               	movwf	postinc1,c
  5558  0107A4  0E0F               	movlw	15
  5559  0107A6  6EE6               	movwf	postinc1,c
  5560  0107A8  EC08  F0E9         	call	_WaitMs	;wreg free
  5561  0107AC                     l14816:
  5562                           
  5563                           ;main.c: 324:    V.sensor_set = 0;
  5564  0107AC  0102               	movlb	2	; () banked
  5565  0107AE  6BAE               	clrf	(_V+174)& (0+255),b	;volatile
  5566                           
  5567                           ; BSR set to: 2
  5568                           ;main.c: 325:    V.system_stable = 1;
  5569  0107B0  0E01               	movlw	1
  5570  0107B2  6FAF               	movwf	(_V+175)& (0+255),b	;volatile
  5571                           
  5572                           ;main.c: 326:    break;
  5573  0107B4  D01C               	goto	l14824
  5574  0107B6                     l1460:
  5575                           
  5576                           ; BSR set to: 2
  5577                           ;main.c: 332:    P.SYSTEM_STABLE = 1;
  5578  0107B6  0100               	movlb	0	; () banked
  5579  0107B8  819F               	bsf	(_P+1)& (0+255),0,b	;volatile
  5580                           
  5581                           ;main.c: 333:    break;
  5582  0107BA  D019               	goto	l14824
  5583  0107BC                     l1462:
  5584                           
  5585                           ; BSR set to: 2
  5586                           ;main.c: 336:    V.ui_state = UI_STATE_INIT;
  5587  0107BC  6B00               	clrf	_V& (0+255),b	;volatile
  5588                           
  5589                           ;main.c: 337:    break;
  5590  0107BE  D017               	goto	l14824
  5591  0107C0                     l14822:
  5592  0107C0  0102               	movlb	2	; () banked
  5593  0107C2  5100               	movf	_V& (0+255),w,b	;volatile
  5594  0107C4  6E0B               	movwf	(btemp+10)^0,c
  5595  0107C6  6A0C               	clrf	(btemp+11)^0,c
  5596                           
  5597                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5598                           ; Switch size 1, requested type "simple"
  5599                           ; Number of cases is 1, Range of values is 0 to 0
  5600                           ; switch strategies available:
  5601                           ; Name         Instructions Cycles
  5602                           ; simple_byte            4     3 (average)
  5603                           ;	Chosen strategy is simple_byte
  5604  0107C8  500C               	movf	(btemp+11)^0,w,c
  5605  0107CA  0A00               	xorlw	0	; case 0
  5606  0107CC  A4D8               	btfss	status,2,c
  5607  0107CE  D7F6               	goto	l1462
  5608                           
  5609                           ; BSR set to: 2
  5610                           ; Switch size 1, requested type "simple"
  5611                           ; Number of cases is 5, Range of values is 0 to 5
  5612                           ; switch strategies available:
  5613                           ; Name         Instructions Cycles
  5614                           ; simple_byte           16     9 (average)
  5615                           ;	Chosen strategy is simple_byte
  5616  0107D0  500B               	movf	(btemp+10)^0,w,c
  5617  0107D2  0A00               	xorlw	0	; case 0
  5618  0107D4  B4D8               	btfsc	status,2,c
  5619  0107D6  D450               	goto	l14674
  5620  0107D8  0A01               	xorlw	1	; case 1
  5621  0107DA  B4D8               	btfsc	status,2,c
  5622  0107DC  D008               	goto	l14824
  5623  0107DE  0A02               	xorlw	2	; case 3
  5624  0107E0  B4D8               	btfsc	status,2,c
  5625  0107E2  D005               	goto	l14824
  5626  0107E4  0A07               	xorlw	7	; case 4
  5627  0107E6  B4D8               	btfsc	status,2,c
  5628  0107E8  D7E6               	goto	l1460
  5629  0107EA  0A01               	xorlw	1	; case 5
  5630  0107EC  D7E7               	goto	l1462
  5631  0107EE                     l14824:
  5632                           
  5633                           ;main.c: 340:   if (TimerDone(TMR_ADC) && check_adc_scan()) {
  5634  0107EE  0E01               	movlw	1
  5635  0107F0  6EE6               	movwf	postinc1,c
  5636  0107F2  ECA1  F0EA         	call	_TimerDone	;wreg free
  5637  0107F6  5001               	movf	btemp^0,w,c
  5638  0107F8  B4D8               	btfsc	status,2,c
  5639  0107FA  D013               	goto	l14836
  5640  0107FC  ECA2  F0ED         	call	_check_adc_scan	;wreg free
  5641  010800  5001               	movf	btemp^0,w,c
  5642  010802  B4D8               	btfsc	status,2,c
  5643  010804  D00E               	goto	l14836
  5644                           
  5645                           ;main.c: 344:    convert_adc_data();
  5646  010806  ECF5  F0DC         	call	_convert_adc_data	;wreg free
  5647                           
  5648                           ;main.c: 348:    clear_adc_scan();
  5649  01080A  ECB9  F0ED         	call	_clear_adc_scan	;wreg free
  5650                           
  5651                           ; BSR set to: 1
  5652                           ;main.c: 349:    start_adc_scan();
  5653  01080E  EC2A  F0E4         	call	_start_adc_scan	;wreg free
  5654                           
  5655                           ;main.c: 350:    StartTimer(TMR_ADC, 200);
  5656  010812  0EC8               	movlw	200
  5657  010814  6EE6               	movwf	postinc1,c
  5658  010816  0E00               	movlw	0
  5659  010818  6EE6               	movwf	postinc1,c
  5660  01081A  0E01               	movlw	1
  5661  01081C  6EE6               	movwf	postinc1,c
  5662  01081E  EC13  F0E8         	call	_StartTimer	;wreg free
  5663  010822                     l14836:
  5664                           
  5665                           ;main.c: 357:   if (TimerDone(TMR_DISPLAY)) {
  5666                           
  5667                           ;main.c: 353:   if (V.ticks) {
  5668  010822  0E0A               	movlw	10
  5669  010824  6EE6               	movwf	postinc1,c
  5670  010826  ECA1  F0EA         	call	_TimerDone	;wreg free
  5671  01082A  5001               	movf	btemp^0,w,c
  5672  01082C  B4D8               	btfsc	status,2,c
  5673  01082E  EFBE  F088         	goto	l14920
  5674                           
  5675                           ;main.c: 358:    if (TimerDone(TMR_HELPDIS)) {
  5676  010832  0E09               	movlw	9
  5677  010834  6EE6               	movwf	postinc1,c
  5678  010836  ECA1  F0EA         	call	_TimerDone	;wreg free
  5679  01083A  5001               	movf	btemp^0,w,c
  5680  01083C  B4D8               	btfsc	status,2,c
  5681  01083E  D004               	goto	l14844
  5682                           
  5683                           ;main.c: 359:     set_display_info(DIS_STR);
  5684  010840  0E00               	movlw	0
  5685  010842  6EE6               	movwf	postinc1,c
  5686  010844  ECA6  F0EC         	call	_set_display_info	;wreg free
  5687  010848                     l14844:
  5688                           
  5689                           ;main.c: 361:    calc_model_data();
  5690  010848  ECA0  F0B4         	call	_calc_model_data	;wreg free
  5691                           
  5692                           ; BSR set to: 57
  5693                           ;main.c: 368:     hid_display(&H);
  5694                           
  5695                           ;main.c: 363:    if (0) {
  5696  01084C  0EF1               	movlw	_H& (0+255)
  5697  01084E  6EE6               	movwf	postinc1,c
  5698  010850  EC1A  F0D5         	call	_hid_display	;wreg free
  5699                           
  5700                           ;main.c: 369:     switch (H.hid_display) {
  5701  010854  EF55  F088         	goto	l14892
  5702  010858                     l1470:
  5703                           
  5704                           ; BSR set to: 0
  5705                           ;main.c: 371:      V.calib = 0;
  5706  010858  0102               	movlb	2	; () banked
  5707  01085A  6BAC               	clrf	(_V+172)& (0+255),b	;volatile
  5708                           
  5709                           ; BSR set to: 2
  5710                           ;main.c: 372:      sprintf(get_vterm_ptr(0, 0), "PV %c PWR %3.2f      ", (C.day) ? 'D' :
      +                           ' ', C.p_pv);
  5711  01085C  EE22  F121         	lfsr	2,_C+290	;volatile
  5712  010860  50DF               	movf	indf2,w,c
  5713  010862  A4D8               	btfss	status,2,c
  5714  010864  D002               	goto	l14854
  5715                           
  5716                           ; BSR set to: 2
  5717  010866  0E20               	movlw	32
  5718  010868  D001               	goto	L1
  5719  01086A                     l14854:
  5720                           
  5721                           ; BSR set to: 2
  5722  01086A  0E44               	movlw	68
  5723  01086C                     L1:
  5724  01086C  6E0B               	movwf	(btemp+10)^0,c
  5725  01086E  0E00               	movlw	0
  5726  010870  6E0C               	movwf	(btemp+11)^0,c
  5727                           
  5728                           ;stkvar	_main$3978 @ sp[(-17)+2]
  5729  010872  0EF1               	movlw	-15
  5730  010874  0060  F02F  FFE3   	movff	btemp+10,plusw1
  5731  01087A  0EF2               	movlw	-14
  5732  01087C  0060  F033  FFE3   	movff	btemp+11,plusw1
  5733                           
  5734                           ; BSR set to: 2
  5735  010882  EE22  F07B         	lfsr	2,_C+124	;volatile
  5736  010886  006F FF7B FFE6     	movff	postinc2,postinc1
  5737  01088C  006F FF7B FFE6     	movff	postinc2,postinc1
  5738  010892  006F FF7B FFE6     	movff	postinc2,postinc1
  5739  010898  006F FF7B FFE6     	movff	postinc2,postinc1
  5740                           
  5741                           ;stkvar	_main$3978 @ sp[(-21)+2]
  5742  01089E  0EED               	movlw	-19
  5743  0108A0  006F FF8F FFE6     	movff	plusw1,postinc1
  5744  0108A6  006F FF8F FFE6     	movff	plusw1,postinc1
  5745  0108AC  0ED0               	movlw	low STR_25
  5746  0108AE  6EE6               	movwf	postinc1,c
  5747  0108B0  0EFC               	movlw	high STR_25
  5748  0108B2  6EE6               	movwf	postinc1,c
  5749  0108B4  0E00               	movlw	0
  5750  0108B6  6EE6               	movwf	postinc1,c
  5751  0108B8  0E00               	movlw	0
  5752  0108BA  6EE6               	movwf	postinc1,c
  5753  0108BC  EC1E  F0EA         	call	_get_vterm_ptr	;wreg free
  5754  0108C0  0060  F007  FFE6   	movff	btemp,postinc1
  5755  0108C6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5756  0108CC  0E0A               	movlw	10
  5757  0108CE  6EE6               	movwf	postinc1,c
  5758  0108D0  EC5C  F0D8         	call	_sprintf	;wreg free
  5759                           
  5760                           ; BSR set to: 0
  5761                           ;main.c: 373:      sprintf(get_vterm_ptr(1, 0), "LOAD PWR %3.2f       ", C.p_load);
  5762  0108D4  EE22  F073         	lfsr	2,_C+116	;volatile
  5763  0108D8  006F FF7B FFE6     	movff	postinc2,postinc1
  5764  0108DE  006F FF7B FFE6     	movff	postinc2,postinc1
  5765  0108E4  006F FF7B FFE6     	movff	postinc2,postinc1
  5766  0108EA  006F FF7B FFE6     	movff	postinc2,postinc1
  5767  0108F0  0EBA               	movlw	low STR_26
  5768  0108F2  6EE6               	movwf	postinc1,c
  5769  0108F4  0EFC               	movlw	high STR_26
  5770  0108F6  6EE6               	movwf	postinc1,c
  5771  0108F8  0E00               	movlw	0
  5772  0108FA  6EE6               	movwf	postinc1,c
  5773  0108FC  0E01               	movlw	1
  5774  0108FE  6EE6               	movwf	postinc1,c
  5775  010900  EC1E  F0EA         	call	_get_vterm_ptr	;wreg free
  5776  010904  0060  F007  FFE6   	movff	btemp,postinc1
  5777  01090A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5778  010910  0E08               	movlw	8
  5779  010912  6EE6               	movwf	postinc1,c
  5780  010914  EC5C  F0D8         	call	_sprintf	;wreg free
  5781                           
  5782                           ; BSR set to: 0
  5783                           ;main.c: 374:      sprintf(get_vterm_ptr(2, 0), "INV  PWR %3.2f       ", C.p_inverter);
  5784  010918  EE22  F077         	lfsr	2,_C+120	;volatile
  5785  01091C  006F FF7B FFE6     	movff	postinc2,postinc1
  5786  010922  006F FF7B FFE6     	movff	postinc2,postinc1
  5787  010928  006F FF7B FFE6     	movff	postinc2,postinc1
  5788  01092E  006F FF7B FFE6     	movff	postinc2,postinc1
  5789  010934  0EA4               	movlw	low STR_27
  5790  010936  6EE6               	movwf	postinc1,c
  5791  010938  0EFC               	movlw	high STR_27
  5792  01093A  6EE6               	movwf	postinc1,c
  5793  01093C  0E00               	movlw	0
  5794  01093E  6EE6               	movwf	postinc1,c
  5795  010940  0E02               	movlw	2
  5796  010942  6EE6               	movwf	postinc1,c
  5797  010944  EC1E  F0EA         	call	_get_vterm_ptr	;wreg free
  5798  010948  0060  F007  FFE6   	movff	btemp,postinc1
  5799  01094E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5800  010954  0E08               	movlw	8
  5801  010956  6EE6               	movwf	postinc1,c
  5802  010958  EC5C  F0D8         	call	_sprintf	;wreg free
  5803                           
  5804                           ; BSR set to: 0
  5805                           ;main.c: 376:      sprintf(get_vterm_ptr(0, 1), "PV %c WH %3.2f       ", (C.day) ? 'D' :
      +                           ' ', C.pvkw);
  5806  01095C  EE22  F121         	lfsr	2,_C+290	;volatile
  5807  010960  50DF               	movf	indf2,w,c
  5808  010962  A4D8               	btfss	status,2,c
  5809  010964  D002               	goto	l14866
  5810                           
  5811                           ; BSR set to: 0
  5812  010966  0E20               	movlw	32
  5813  010968  D001               	goto	L2
  5814  01096A                     l14866:
  5815                           
  5816                           ; BSR set to: 0
  5817  01096A  0E44               	movlw	68
  5818  01096C                     L2:
  5819  01096C  6E0B               	movwf	(btemp+10)^0,c
  5820  01096E  0E00               	movlw	0
  5821  010970  6E0C               	movwf	(btemp+11)^0,c
  5822                           
  5823                           ;stkvar	_main$3982 @ sp[(-17)+0]
  5824  010972  0EEF               	movlw	-17
  5825  010974  0060  F02F  FFE3   	movff	btemp+10,plusw1
  5826  01097A  0EF0               	movlw	-16
  5827  01097C  0060  F033  FFE3   	movff	btemp+11,plusw1
  5828                           
  5829                           ; BSR set to: 0
  5830  010982  EE22  F0A7         	lfsr	2,_C+168	;volatile
  5831  010986  006F FF7B FFE6     	movff	postinc2,postinc1
  5832  01098C  006F FF7B FFE6     	movff	postinc2,postinc1
  5833  010992  006F FF7B FFE6     	movff	postinc2,postinc1
  5834  010998  006F FF7B FFE6     	movff	postinc2,postinc1
  5835                           
  5836                           ;stkvar	_main$3982 @ sp[(-21)+0]
  5837  01099E  0EEB               	movlw	-21
  5838  0109A0  006F FF8F FFE6     	movff	plusw1,postinc1
  5839  0109A6  006F FF8F FFE6     	movff	plusw1,postinc1
  5840  0109AC  0E8E               	movlw	low STR_28
  5841  0109AE  6EE6               	movwf	postinc1,c
  5842  0109B0  0EFC               	movlw	high STR_28
  5843  0109B2  6EE6               	movwf	postinc1,c
  5844  0109B4  0E01               	movlw	1
  5845  0109B6  6EE6               	movwf	postinc1,c
  5846  0109B8  0E00               	movlw	0
  5847  0109BA  6EE6               	movwf	postinc1,c
  5848  0109BC  EC1E  F0EA         	call	_get_vterm_ptr	;wreg free
  5849  0109C0  0060  F007  FFE6   	movff	btemp,postinc1
  5850  0109C6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5851  0109CC  0E0A               	movlw	10
  5852  0109CE  6EE6               	movwf	postinc1,c
  5853  0109D0  EC5C  F0D8         	call	_sprintf	;wreg free
  5854                           
  5855                           ; BSR set to: 0
  5856                           ;main.c: 377:      sprintf(get_vterm_ptr(1, 1), "LOAD WH %3.2f        ", C.loadkw);
  5857  0109D4  EE22  F0AF         	lfsr	2,_C+176	;volatile
  5858  0109D8  006F FF7B FFE6     	movff	postinc2,postinc1
  5859  0109DE  006F FF7B FFE6     	movff	postinc2,postinc1
  5860  0109E4  006F FF7B FFE6     	movff	postinc2,postinc1
  5861  0109EA  006F FF7B FFE6     	movff	postinc2,postinc1
  5862  0109F0  0E78               	movlw	low STR_29
  5863  0109F2  6EE6               	movwf	postinc1,c
  5864  0109F4  0EFC               	movlw	high STR_29
  5865  0109F6  6EE6               	movwf	postinc1,c
  5866  0109F8  0E01               	movlw	1
  5867  0109FA  6EE6               	movwf	postinc1,c
  5868  0109FC  0E01               	movlw	1
  5869  0109FE  6EE6               	movwf	postinc1,c
  5870  010A00  EC1E  F0EA         	call	_get_vterm_ptr	;wreg free
  5871  010A04  0060  F007  FFE6   	movff	btemp,postinc1
  5872  010A0A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5873  010A10  0E08               	movlw	8
  5874  010A12  6EE6               	movwf	postinc1,c
  5875  010A14  EC5C  F0D8         	call	_sprintf	;wreg free
  5876                           
  5877                           ; BSR set to: 0
  5878                           ;main.c: 378:      sprintf(get_vterm_ptr(2, 1), "INV  WH %3.2f        ", C.invkw);
  5879  010A18  EE22  F0AB         	lfsr	2,_C+172	;volatile
  5880  010A1C  006F FF7B FFE6     	movff	postinc2,postinc1
  5881  010A22  006F FF7B FFE6     	movff	postinc2,postinc1
  5882  010A28  006F FF7B FFE6     	movff	postinc2,postinc1
  5883  010A2E  006F FF7B FFE6     	movff	postinc2,postinc1
  5884  010A34  0E62               	movlw	low STR_30
  5885  010A36  6EE6               	movwf	postinc1,c
  5886  010A38  0EFC               	movlw	high STR_30
  5887  010A3A  6EE6               	movwf	postinc1,c
  5888  010A3C  0E01               	movlw	1
  5889  010A3E  6EE6               	movwf	postinc1,c
  5890  010A40  0E02               	movlw	2
  5891  010A42  6EE6               	movwf	postinc1,c
  5892  010A44  EC1E  F0EA         	call	_get_vterm_ptr	;wreg free
  5893  010A48  0060  F007  FFE6   	movff	btemp,postinc1
  5894  010A4E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5895  010A54  0E08               	movlw	8
  5896  010A56  6EE6               	movwf	postinc1,c
  5897  010A58  EC5C  F0D8         	call	_sprintf	;wreg free
  5898                           
  5899                           ;main.c: 379:      break;
  5900  010A5C  D33C               	goto	l14894
  5901  010A5E                     l1480:
  5902                           
  5903                           ; BSR set to: 0
  5904                           ;main.c: 381:      V.calib = 0;
  5905  010A5E  0102               	movlb	2	; () banked
  5906  010A60  6BAC               	clrf	(_V+172)& (0+255),b	;volatile
  5907                           
  5908                           ; BSR set to: 2
  5909                           ;main.c: 382:      sprintf(get_vterm_ptr(0, 0), "PV %2.2f PA %2.2f    ", C.calc[V_PV], C
      +                          .calc[C_PV]);
  5910  010A62  EE22  F003         	lfsr	2,_C+4	;volatile
  5911  010A66  006F FF7B FFE6     	movff	postinc2,postinc1
  5912  010A6C  006F FF7B FFE6     	movff	postinc2,postinc1
  5913  010A72  006F FF7B FFE6     	movff	postinc2,postinc1
  5914  010A78  006F FF7B FFE6     	movff	postinc2,postinc1
  5915  010A7E  EE22  F013         	lfsr	2,_C+20	;volatile
  5916  010A82  006F FF7B FFE6     	movff	postinc2,postinc1
  5917  010A88  006F FF7B FFE6     	movff	postinc2,postinc1
  5918  010A8E  006F FF7B FFE6     	movff	postinc2,postinc1
  5919  010A94  006F FF7B FFE6     	movff	postinc2,postinc1
  5920  010A9A  0E28               	movlw	low STR_31
  5921  010A9C  6EE6               	movwf	postinc1,c
  5922  010A9E  0EFD               	movlw	high STR_31
  5923  010AA0  6EE6               	movwf	postinc1,c
  5924  010AA2  0E00               	movlw	0
  5925  010AA4  6EE6               	movwf	postinc1,c
  5926  010AA6  0E00               	movlw	0
  5927  010AA8  6EE6               	movwf	postinc1,c
  5928  010AAA  EC1E  F0EA         	call	_get_vterm_ptr	;wreg free
  5929  010AAE  0060  F007  FFE6   	movff	btemp,postinc1
  5930  010AB4  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5931  010ABA  0E0C               	movlw	12
  5932  010ABC  6EE6               	movwf	postinc1,c
  5933  010ABE  EC5C  F0D8         	call	_sprintf	;wreg free
  5934                           
  5935                           ;main.c: 383:      sprintf(get_vterm_ptr(1, 0), "BV %2.2f BA %2.2f    ", C.calc[V_BAT], 
      +                          C.calc[C_BATT]);
  5936  010AC2  EE21  F3FF         	lfsr	2,_C
  5937  010AC6  006F FF7B FFE6     	movff	postinc2,postinc1
  5938  010ACC  006F FF7B FFE6     	movff	postinc2,postinc1
  5939  010AD2  006F FF7B FFE6     	movff	postinc2,postinc1
  5940  010AD8  006F FF7B FFE6     	movff	postinc2,postinc1
  5941  010ADE  EE22  F00F         	lfsr	2,_C+16	;volatile
  5942  010AE2  006F FF7B FFE6     	movff	postinc2,postinc1
  5943  010AE8  006F FF7B FFE6     	movff	postinc2,postinc1
  5944  010AEE  006F FF7B FFE6     	movff	postinc2,postinc1
  5945  010AF4  006F FF7B FFE6     	movff	postinc2,postinc1
  5946  010AFA  0EFC               	movlw	low STR_32
  5947  010AFC  6EE6               	movwf	postinc1,c
  5948  010AFE  0EFC               	movlw	high STR_32
  5949  010B00  6EE6               	movwf	postinc1,c
  5950  010B02  0E00               	movlw	0
  5951  010B04  6EE6               	movwf	postinc1,c
  5952  010B06  0E01               	movlw	1
  5953  010B08  6EE6               	movwf	postinc1,c
  5954  010B0A  EC1E  F0EA         	call	_get_vterm_ptr	;wreg free
  5955  010B0E  0060  F007  FFE6   	movff	btemp,postinc1
  5956  010B14  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5957  010B1A  0E0C               	movlw	12
  5958  010B1C  6EE6               	movwf	postinc1,c
  5959  010B1E  EC5C  F0D8         	call	_sprintf	;wreg free
  5960                           
  5961                           ;main.c: 384:      sprintf(get_vterm_ptr(2, 0), "CV %2.2f LA %2.2f    ", C.calc[V_CC], C
      +                          .c_load);
  5962  010B22  EE22  F03F         	lfsr	2,_C+64	;volatile
  5963  010B26  006F FF7B FFE6     	movff	postinc2,postinc1
  5964  010B2C  006F FF7B FFE6     	movff	postinc2,postinc1
  5965  010B32  006F FF7B FFE6     	movff	postinc2,postinc1
  5966  010B38  006F FF7B FFE6     	movff	postinc2,postinc1
  5967  010B3E  EE22  F007         	lfsr	2,_C+8	;volatile
  5968  010B42  006F FF7B FFE6     	movff	postinc2,postinc1
  5969  010B48  006F FF7B FFE6     	movff	postinc2,postinc1
  5970  010B4E  006F FF7B FFE6     	movff	postinc2,postinc1
  5971  010B54  006F FF7B FFE6     	movff	postinc2,postinc1
  5972  010B5A  0E12               	movlw	low STR_33
  5973  010B5C  6EE6               	movwf	postinc1,c
  5974  010B5E  0EFD               	movlw	high STR_33
  5975  010B60  6EE6               	movwf	postinc1,c
  5976  010B62  0E00               	movlw	0
  5977  010B64  6EE6               	movwf	postinc1,c
  5978  010B66  0E02               	movlw	2
  5979  010B68  6EE6               	movwf	postinc1,c
  5980  010B6A  EC1E  F0EA         	call	_get_vterm_ptr	;wreg free
  5981  010B6E  0060  F007  FFE6   	movff	btemp,postinc1
  5982  010B74  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5983  010B7A  0E0C               	movlw	12
  5984  010B7C  6EE6               	movwf	postinc1,c
  5985  010B7E  EC5C  F0D8         	call	_sprintf	;wreg free
  5986                           
  5987                           ;main.c: 386:      sprintf(get_vterm_ptr(0, 1), "BAT IWH %4.1f        ", C.bkwi);
  5988  010B82  EE22  F09F         	lfsr	2,_C+160	;volatile
  5989  010B86  006F FF7B FFE6     	movff	postinc2,postinc1
  5990  010B8C  006F FF7B FFE6     	movff	postinc2,postinc1
  5991  010B92  006F FF7B FFE6     	movff	postinc2,postinc1
  5992  010B98  006F FF7B FFE6     	movff	postinc2,postinc1
  5993  010B9E  0E20               	movlw	low STR_34
  5994  010BA0  6EE6               	movwf	postinc1,c
  5995  010BA2  0EFC               	movlw	high STR_34
  5996  010BA4  6EE6               	movwf	postinc1,c
  5997  010BA6  0E01               	movlw	1
  5998  010BA8  6EE6               	movwf	postinc1,c
  5999  010BAA  0E00               	movlw	0
  6000  010BAC  6EE6               	movwf	postinc1,c
  6001  010BAE  EC1E  F0EA         	call	_get_vterm_ptr	;wreg free
  6002  010BB2  0060  F007  FFE6   	movff	btemp,postinc1
  6003  010BB8  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6004  010BBE  0E08               	movlw	8
  6005  010BC0  6EE6               	movwf	postinc1,c
  6006  010BC2  EC5C  F0D8         	call	_sprintf	;wreg free
  6007                           
  6008                           ;main.c: 387:      sprintf(get_vterm_ptr(1, 1), "BAT OWH %4.1f        ", C.bkwo);
  6009  010BC6  EE22  F0A3         	lfsr	2,_C+164	;volatile
  6010  010BCA  006F FF7B FFE6     	movff	postinc2,postinc1
  6011  010BD0  006F FF7B FFE6     	movff	postinc2,postinc1
  6012  010BD6  006F FF7B FFE6     	movff	postinc2,postinc1
  6013  010BDC  006F FF7B FFE6     	movff	postinc2,postinc1
  6014  010BE2  0E36               	movlw	low STR_35
  6015  010BE4  6EE6               	movwf	postinc1,c
  6016  010BE6  0EFC               	movlw	high STR_35
  6017  010BE8  6EE6               	movwf	postinc1,c
  6018  010BEA  0E01               	movlw	1
  6019  010BEC  6EE6               	movwf	postinc1,c
  6020  010BEE  0E01               	movlw	1
  6021  010BF0  6EE6               	movwf	postinc1,c
  6022  010BF2  EC1E  F0EA         	call	_get_vterm_ptr	;wreg free
  6023  010BF6  0060  F007  FFE6   	movff	btemp,postinc1
  6024  010BFC  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6025  010C02  0E08               	movlw	8
  6026  010C04  6EE6               	movwf	postinc1,c
  6027  010C06  EC5C  F0D8         	call	_sprintf	;wreg free
  6028                           
  6029                           ;main.c: 388:      sprintf(get_vterm_ptr(2, 1), "BAT TWH %4.1f        ", C.bkwi + C.bkwo
      +                          );
  6030  010C0A  EE22  F0A3         	lfsr	2,_C+164	;volatile
  6031  010C0E  006F FF7B FFE6     	movff	postinc2,postinc1
  6032  010C14  006F FF7B FFE6     	movff	postinc2,postinc1
  6033  010C1A  006F FF7B FFE6     	movff	postinc2,postinc1
  6034  010C20  006F FF7B FFE6     	movff	postinc2,postinc1
  6035  010C26  EE22  F09F         	lfsr	2,_C+160	;volatile
  6036  010C2A  006F FF7B FFE6     	movff	postinc2,postinc1
  6037  010C30  006F FF7B FFE6     	movff	postinc2,postinc1
  6038  010C36  006F FF7B FFE6     	movff	postinc2,postinc1
  6039  010C3C  006F FF7B FFE6     	movff	postinc2,postinc1
  6040  010C42  EC67  F0A9         	call	___fladd	;wreg free
  6041  010C46  0060  F007  FFE6   	movff	btemp,postinc1
  6042  010C4C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6043  010C52  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6044  010C58  0060  F013  FFE6   	movff	btemp+3,postinc1
  6045  010C5E  0E4C               	movlw	low STR_36
  6046  010C60  6EE6               	movwf	postinc1,c
  6047  010C62  0EFC               	movlw	high STR_36
  6048  010C64  6EE6               	movwf	postinc1,c
  6049  010C66  0E01               	movlw	1
  6050  010C68  6EE6               	movwf	postinc1,c
  6051  010C6A  0E02               	movlw	2
  6052  010C6C  6EE6               	movwf	postinc1,c
  6053  010C6E  EC1E  F0EA         	call	_get_vterm_ptr	;wreg free
  6054  010C72  0060  F007  FFE6   	movff	btemp,postinc1
  6055  010C78  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6056  010C7E  0E08               	movlw	8
  6057  010C80  6EE6               	movwf	postinc1,c
  6058  010C82  EC5C  F0D8         	call	_sprintf	;wreg free
  6059                           
  6060                           ;main.c: 389:      break;
  6061  010C86  D227               	goto	l14894
  6062  010C88                     l1481:
  6063                           
  6064                           ; BSR set to: 0
  6065                           ;main.c: 391:      V.calib = 0;
  6066  010C88  0102               	movlb	2	; () banked
  6067  010C8A  6BAC               	clrf	(_V+172)& (0+255),b	;volatile
  6068                           
  6069                           ; BSR set to: 2
  6070                           ;main.c: 392:      sprintf(get_vterm_ptr(0, 0), "BATT PWR %3.2f        ", C.p_bat);
  6071  010C8C  EE22  F07F         	lfsr	2,_C+128	;volatile
  6072  010C90  006F FF7B FFE6     	movff	postinc2,postinc1
  6073  010C96  006F FF7B FFE6     	movff	postinc2,postinc1
  6074  010C9C  006F FF7B FFE6     	movff	postinc2,postinc1
  6075  010CA2  006F FF7B FFE6     	movff	postinc2,postinc1
  6076  010CA8  0E82               	movlw	low STR_37
  6077  010CAA  6EE6               	movwf	postinc1,c
  6078  010CAC  0EFB               	movlw	high STR_37
  6079  010CAE  6EE6               	movwf	postinc1,c
  6080  010CB0  0E00               	movlw	0
  6081  010CB2  6EE6               	movwf	postinc1,c
  6082  010CB4  0E00               	movlw	0
  6083  010CB6  6EE6               	movwf	postinc1,c
  6084  010CB8  EC1E  F0EA         	call	_get_vterm_ptr	;wreg free
  6085  010CBC  0060  F007  FFE6   	movff	btemp,postinc1
  6086  010CC2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6087  010CC8  0E08               	movlw	8
  6088  010CCA  6EE6               	movwf	postinc1,c
  6089  010CCC  EC5C  F0D8         	call	_sprintf	;wreg free
  6090                           
  6091                           ;main.c: 393:      sprintf(get_vterm_ptr(1, 0), "BAH %3.2f P%3.2f      ", C.dynamic_ah, 
      +                          C.pv_ah);
  6092  010CD0  EE22  F093         	lfsr	2,_C+148	;volatile
  6093  010CD4  006F FF7B FFE6     	movff	postinc2,postinc1
  6094  010CDA  006F FF7B FFE6     	movff	postinc2,postinc1
  6095  010CE0  006F FF7B FFE6     	movff	postinc2,postinc1
  6096  010CE6  006F FF7B FFE6     	movff	postinc2,postinc1
  6097  010CEC  EE22  F08F         	lfsr	2,_C+144	;volatile
  6098  010CF0  006F FF7B FFE6     	movff	postinc2,postinc1
  6099  010CF6  006F FF7B FFE6     	movff	postinc2,postinc1
  6100  010CFC  006F FF7B FFE6     	movff	postinc2,postinc1
  6101  010D02  006F FF7B FFE6     	movff	postinc2,postinc1
  6102  010D08  0EC7               	movlw	low STR_38
  6103  010D0A  6EE6               	movwf	postinc1,c
  6104  010D0C  0EFB               	movlw	high STR_38
  6105  010D0E  6EE6               	movwf	postinc1,c
  6106  010D10  0E00               	movlw	0
  6107  010D12  6EE6               	movwf	postinc1,c
  6108  010D14  0E01               	movlw	1
  6109  010D16  6EE6               	movwf	postinc1,c
  6110  010D18  EC1E  F0EA         	call	_get_vterm_ptr	;wreg free
  6111  010D1C  0060  F007  FFE6   	movff	btemp,postinc1
  6112  010D22  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6113  010D28  0E0C               	movlw	12
  6114  010D2A  6EE6               	movwf	postinc1,c
  6115  010D2C  EC5C  F0D8         	call	_sprintf	;wreg free
  6116                           
  6117                           ;main.c: 394:      sprintf(get_vterm_ptr(2, 0), "S%cC %d RUN %d V%2.2f       ", spinners
      +                          (5, 0), C.soc, C.runtime, C.calc[V_BAT]);
  6118  010D30  EE22  F00F         	lfsr	2,_C+16	;volatile
  6119  010D34  006F FF7B FFE6     	movff	postinc2,postinc1
  6120  010D3A  006F FF7B FFE6     	movff	postinc2,postinc1
  6121  010D40  006F FF7B FFE6     	movff	postinc2,postinc1
  6122  010D46  006F FF7B FFE6     	movff	postinc2,postinc1
  6123  010D4C  EE22  F0B3         	lfsr	2,_C+180	;volatile
  6124  010D50  006F FF78  F00B    	movff	postinc2,btemp+10
  6125  010D56  006F FF74  F00C    	movff	postdec2,btemp+11
  6126  010D5C  0060  F02F  FFE6   	movff	btemp+10,postinc1
  6127  010D62  0060  F033  FFE6   	movff	btemp+11,postinc1
  6128  010D68  EE22  F0B5         	lfsr	2,_C+182	;volatile
  6129  010D6C  006F FF78  F00B    	movff	postinc2,btemp+10
  6130  010D72  006F FF74  F00C    	movff	postdec2,btemp+11
  6131  010D78  0060  F02F  FFE6   	movff	btemp+10,postinc1
  6132  010D7E  0060  F033  FFE6   	movff	btemp+11,postinc1
  6133  010D84  0E00               	movlw	0
  6134  010D86  6EE6               	movwf	postinc1,c
  6135  010D88  0E05               	movlw	5
  6136  010D8A  6EE6               	movwf	postinc1,c
  6137  010D8C  EC56  F0D9         	call	_spinners	;wreg free
  6138  010D90  5001               	movf	btemp^0,w,c
  6139  010D92  6EE6               	movwf	postinc1,c
  6140  010D94  0E00               	movlw	0
  6141  010D96  6EE6               	movwf	postinc1,c
  6142  010D98  0EE8               	movlw	low STR_39
  6143  010D9A  6EE6               	movwf	postinc1,c
  6144  010D9C  0EFA               	movlw	high STR_39
  6145  010D9E  6EE6               	movwf	postinc1,c
  6146  010DA0  0E00               	movlw	0
  6147  010DA2  6EE6               	movwf	postinc1,c
  6148  010DA4  0E02               	movlw	2
  6149  010DA6  6EE6               	movwf	postinc1,c
  6150  010DA8  EC1E  F0EA         	call	_get_vterm_ptr	;wreg free
  6151  010DAC  0060  F007  FFE6   	movff	btemp,postinc1
  6152  010DB2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6153  010DB8  0E0E               	movlw	14
  6154  010DBA  6EE6               	movwf	postinc1,c
  6155  010DBC  EC5C  F0D8         	call	_sprintf	;wreg free
  6156                           
  6157                           ;main.c: 396:      sprintf(get_vterm_ptr(0, 1), "ESR  %2.6f            ", C.esr);
  6158  010DC0  EE22  F087         	lfsr	2,_C+136	;volatile
  6159  010DC4  006F FF7B FFE6     	movff	postinc2,postinc1
  6160  010DCA  006F FF7B FFE6     	movff	postinc2,postinc1
  6161  010DD0  006F FF7B FFE6     	movff	postinc2,postinc1
  6162  010DD6  006F FF7B FFE6     	movff	postinc2,postinc1
  6163  010DDC  0E6B               	movlw	low STR_40
  6164  010DDE  6EE6               	movwf	postinc1,c
  6165  010DE0  0EFB               	movlw	high STR_40
  6166  010DE2  6EE6               	movwf	postinc1,c
  6167  010DE4  0E01               	movlw	1
  6168  010DE6  6EE6               	movwf	postinc1,c
  6169  010DE8  0E00               	movlw	0
  6170  010DEA  6EE6               	movwf	postinc1,c
  6171  010DEC  EC1E  F0EA         	call	_get_vterm_ptr	;wreg free
  6172  010DF0  0060  F007  FFE6   	movff	btemp,postinc1
  6173  010DF6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6174  010DFC  0E08               	movlw	8
  6175  010DFE  6EE6               	movwf	postinc1,c
  6176  010E00  EC5C  F0D8         	call	_sprintf	;wreg free
  6177                           
  6178                           ;main.c: 397:      sprintf(get_vterm_ptr(1, 1), "R1 %2.3f %3.4f        ", C.bv_one_load,
      +                           C.load_i1);
  6179  010E04  EE22  F10D         	lfsr	2,_C+270	;volatile
  6180  010E08  006F FF7B FFE6     	movff	postinc2,postinc1
  6181  010E0E  006F FF7B FFE6     	movff	postinc2,postinc1
  6182  010E14  006F FF7B FFE6     	movff	postinc2,postinc1
  6183  010E1A  006F FF7B FFE6     	movff	postinc2,postinc1
  6184  010E20  EE22  F119         	lfsr	2,_C+282	;volatile
  6185  010E24  006F FF7B FFE6     	movff	postinc2,postinc1
  6186  010E2A  006F FF7B FFE6     	movff	postinc2,postinc1
  6187  010E30  006F FF7B FFE6     	movff	postinc2,postinc1
  6188  010E36  006F FF7B FFE6     	movff	postinc2,postinc1
  6189  010E3C  0E99               	movlw	low STR_41
  6190  010E3E  6EE6               	movwf	postinc1,c
  6191  010E40  0EFB               	movlw	high STR_41
  6192  010E42  6EE6               	movwf	postinc1,c
  6193  010E44  0E01               	movlw	1
  6194  010E46  6EE6               	movwf	postinc1,c
  6195  010E48  0E01               	movlw	1
  6196  010E4A  6EE6               	movwf	postinc1,c
  6197  010E4C  EC1E  F0EA         	call	_get_vterm_ptr	;wreg free
  6198  010E50  0060  F007  FFE6   	movff	btemp,postinc1
  6199  010E56  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6200  010E5C  0E0C               	movlw	12
  6201  010E5E  6EE6               	movwf	postinc1,c
  6202  010E60  EC5C  F0D8         	call	_sprintf	;wreg free
  6203                           
  6204                           ;main.c: 398:      sprintf(get_vterm_ptr(2, 1), "R2 %2.3f %3.4f        ", C.bv_full_load
      +                          , C.load_i2);
  6205  010E64  EE22  F111         	lfsr	2,_C+274	;volatile
  6206  010E68  006F FF7B FFE6     	movff	postinc2,postinc1
  6207  010E6E  006F FF7B FFE6     	movff	postinc2,postinc1
  6208  010E74  006F FF7B FFE6     	movff	postinc2,postinc1
  6209  010E7A  006F FF7B FFE6     	movff	postinc2,postinc1
  6210  010E80  EE22  F11D         	lfsr	2,_C+286	;volatile
  6211  010E84  006F FF7B FFE6     	movff	postinc2,postinc1
  6212  010E8A  006F FF7B FFE6     	movff	postinc2,postinc1
  6213  010E90  006F FF7B FFE6     	movff	postinc2,postinc1
  6214  010E96  006F FF7B FFE6     	movff	postinc2,postinc1
  6215  010E9C  0EB0               	movlw	low STR_42
  6216  010E9E  6EE6               	movwf	postinc1,c
  6217  010EA0  0EFB               	movlw	high STR_42
  6218  010EA2  6EE6               	movwf	postinc1,c
  6219  010EA4  0E01               	movlw	1
  6220  010EA6  6EE6               	movwf	postinc1,c
  6221  010EA8  0E02               	movlw	2
  6222  010EAA  6EE6               	movwf	postinc1,c
  6223  010EAC  EC1E  F0EA         	call	_get_vterm_ptr	;wreg free
  6224  010EB0  0060  F007  FFE6   	movff	btemp,postinc1
  6225  010EB6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6226  010EBC  0E0C               	movlw	12
  6227  010EBE  6EE6               	movwf	postinc1,c
  6228  010EC0  EC5C  F0D8         	call	_sprintf	;wreg free
  6229                           
  6230                           ;main.c: 399:      break;
  6231  010EC4  D108               	goto	l14894
  6232  010EC6                     l14878:
  6233                           
  6234                           ; BSR set to: 0
  6235                           ;main.c: 401:      if (!V.calib) {
  6236  010EC6  0102               	movlb	2	; () banked
  6237  010EC8  51AC               	movf	(_V+172)& (0+255),w,b	;volatile
  6238  010ECA  A4D8               	btfss	status,2,c
  6239  010ECC  D02D               	goto	l14882
  6240                           
  6241                           ; BSR set to: 2
  6242                           ;main.c: 402:       lp_filter(0.0, i, -1);
  6243  010ECE  0EFF               	movlw	255
  6244  010ED0  6EE6               	movwf	postinc1,c
  6245                           
  6246                           ;stkvar	_i @ sp[(-18)+14]
  6247  010ED2  0EFC               	movlw	-4
  6248  010ED4  50E3               	movf	plusw1,w,c
  6249  010ED6  6EE6               	movwf	postinc1,c
  6250  010ED8  0E00               	movlw	0
  6251  010EDA  6EE6               	movwf	postinc1,c
  6252  010EDC  0E00               	movlw	0
  6253  010EDE  6EE6               	movwf	postinc1,c
  6254  010EE0  0E00               	movlw	0
  6255  010EE2  6EE6               	movwf	postinc1,c
  6256  010EE4  0E00               	movlw	0
  6257  010EE6  6EE6               	movwf	postinc1,c
  6258  010EE8  EC8D  F0CA         	call	_lp_filter	;wreg free
  6259                           
  6260                           ;main.c: 403:       lp_filter(0.0, j, -1);
  6261  010EEC  0EFF               	movlw	255
  6262  010EEE  6EE6               	movwf	postinc1,c
  6263                           
  6264                           ;stkvar	_j @ sp[(-18)+13]
  6265  010EF0  0EFB               	movlw	-5
  6266  010EF2  50E3               	movf	plusw1,w,c
  6267  010EF4  6EE6               	movwf	postinc1,c
  6268  010EF6  0E00               	movlw	0
  6269  010EF8  6EE6               	movwf	postinc1,c
  6270  010EFA  0E00               	movlw	0
  6271  010EFC  6EE6               	movwf	postinc1,c
  6272  010EFE  0E00               	movlw	0
  6273  010F00  6EE6               	movwf	postinc1,c
  6274  010F02  0E00               	movlw	0
  6275  010F04  6EE6               	movwf	postinc1,c
  6276  010F06  EC8D  F0CA         	call	_lp_filter	;wreg free
  6277                           
  6278                           ;main.c: 404:       lp_filter(0.0, k, -1);
  6279  010F0A  0EFF               	movlw	255
  6280  010F0C  6EE6               	movwf	postinc1,c
  6281                           
  6282                           ;stkvar	_k @ sp[(-18)+12]
  6283  010F0E  0EFA               	movlw	-6
  6284  010F10  50E3               	movf	plusw1,w,c
  6285  010F12  6EE6               	movwf	postinc1,c
  6286  010F14  0E00               	movlw	0
  6287  010F16  6EE6               	movwf	postinc1,c
  6288  010F18  0E00               	movlw	0
  6289  010F1A  6EE6               	movwf	postinc1,c
  6290  010F1C  0E00               	movlw	0
  6291  010F1E  6EE6               	movwf	postinc1,c
  6292  010F20  0E00               	movlw	0
  6293  010F22  6EE6               	movwf	postinc1,c
  6294  010F24  EC8D  F0CA         	call	_lp_filter	;wreg free
  6295  010F28                     l14882:
  6296                           
  6297                           ;main.c: 406:      V.calib = 1;
  6298  010F28  0E01               	movlw	1
  6299  010F2A  0102               	movlb	2	; () banked
  6300  010F2C  6FAC               	movwf	(_V+172)& (0+255),b	;volatile
  6301                           
  6302                           ; BSR set to: 2
  6303                           ;main.c: 407:      sprintf(get_vterm_ptr(0, 0), "%d %2.4f, %d  TRIM   ", get_raw_result(
      +                          i), C.calc[i], inp_index);
  6304                           ;stkvar	_inp_index @ sp[(-17)+11]
  6305  010F2E  0EFA               	movlw	-6
  6306  010F30  50E3               	movf	plusw1,w,c
  6307  010F32  6EE6               	movwf	postinc1,c
  6308  010F34  0E00               	movlw	0
  6309  010F36  6EE6               	movwf	postinc1,c
  6310                           
  6311                           ;stkvar	_i @ sp[(-19)+14]
  6312  010F38  0EFB               	movlw	-5
  6313  010F3A  50E3               	movf	plusw1,w,c
  6314  010F3C  0D04               	mullw	4
  6315  010F3E  0EFF               	movlw	low _C
  6316  010F40  24F3               	addwf	243,w,c
  6317  010F42  6ED9               	movwf	fsr2l,c
  6318  010F44  0E07               	movlw	high _C
  6319  010F46  20F4               	addwfc	prodh,w,c
  6320  010F48  6EDA               	movwf	fsr2h,c
  6321  010F4A  006F FF7B FFE6     	movff	postinc2,postinc1
  6322  010F50  006F FF7B FFE6     	movff	postinc2,postinc1
  6323  010F56  006F FF7B FFE6     	movff	postinc2,postinc1
  6324  010F5C  006F FF7B FFE6     	movff	postinc2,postinc1
  6325                           
  6326                           ;stkvar	_i @ sp[(-23)+14]
  6327  010F62  0EF7               	movlw	-9
  6328  010F64  50E3               	movf	plusw1,w,c
  6329  010F66  6EE6               	movwf	postinc1,c
  6330  010F68  EC37  F0EC         	call	_get_raw_result	;wreg free
  6331  010F6C  0060  F007  FFE6   	movff	btemp,postinc1
  6332  010F72  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6333  010F78  0E3E               	movlw	low STR_43
  6334  010F7A  6EE6               	movwf	postinc1,c
  6335  010F7C  0EFD               	movlw	high STR_43
  6336  010F7E  6EE6               	movwf	postinc1,c
  6337  010F80  0E00               	movlw	0
  6338  010F82  6EE6               	movwf	postinc1,c
  6339  010F84  0E00               	movlw	0
  6340  010F86  6EE6               	movwf	postinc1,c
  6341  010F88  EC1E  F0EA         	call	_get_vterm_ptr	;wreg free
  6342  010F8C  0060  F007  FFE6   	movff	btemp,postinc1
  6343  010F92  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6344  010F98  0E0C               	movlw	12
  6345  010F9A  6EE6               	movwf	postinc1,c
  6346  010F9C  EC5C  F0D8         	call	_sprintf	;wreg free
  6347                           
  6348                           ; BSR set to: 0
  6349                           ;main.c: 408:      sprintf(get_vterm_ptr(1, 0), "%d %2.4f, %d  TRIM   ", get_raw_result(
      +                          j), C.calc[j], inp_index + 1);
  6350                           ;stkvar	_inp_index @ sp[(-17)+11]
  6351  010FA0  0EFA               	movlw	-6
  6352  010FA2  50E3               	movf	plusw1,w,c
  6353  010FA4  6E0B               	movwf	(btemp+10)^0,c
  6354  010FA6  6A0C               	clrf	(btemp+11)^0,c
  6355  010FA8  0E01               	movlw	1
  6356  010FAA  260B               	addwf	(btemp+10)^0,f,c
  6357  010FAC  0E00               	movlw	0
  6358  010FAE  220C               	addwfc	(btemp+11)^0,f,c
  6359  010FB0  0060  F02F  FFE6   	movff	btemp+10,postinc1
  6360  010FB6  0060  F033  FFE6   	movff	btemp+11,postinc1
  6361                           
  6362                           ;stkvar	_j @ sp[(-19)+13]
  6363  010FBC  0EFA               	movlw	-6
  6364  010FBE  50E3               	movf	plusw1,w,c
  6365  010FC0  0D04               	mullw	4
  6366  010FC2  0EFF               	movlw	low _C
  6367  010FC4  24F3               	addwf	243,w,c
  6368  010FC6  6ED9               	movwf	fsr2l,c
  6369  010FC8  0E07               	movlw	high _C
  6370  010FCA  20F4               	addwfc	prodh,w,c
  6371  010FCC  6EDA               	movwf	fsr2h,c
  6372  010FCE  006F FF7B FFE6     	movff	postinc2,postinc1
  6373  010FD4  006F FF7B FFE6     	movff	postinc2,postinc1
  6374  010FDA  006F FF7B FFE6     	movff	postinc2,postinc1
  6375  010FE0  006F FF7B FFE6     	movff	postinc2,postinc1
  6376                           
  6377                           ;stkvar	_j @ sp[(-23)+13]
  6378  010FE6  0EF6               	movlw	-10
  6379  010FE8  50E3               	movf	plusw1,w,c
  6380  010FEA  6EE6               	movwf	postinc1,c
  6381  010FEC  EC37  F0EC         	call	_get_raw_result	;wreg free
  6382  010FF0  0060  F007  FFE6   	movff	btemp,postinc1
  6383  010FF6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6384  010FFC  0E3E               	movlw	low STR_43
  6385  010FFE  6EE6               	movwf	postinc1,c
  6386  011000  0EFD               	movlw	high STR_43
  6387  011002  6EE6               	movwf	postinc1,c
  6388  011004  0E00               	movlw	0
  6389  011006  6EE6               	movwf	postinc1,c
  6390  011008  0E01               	movlw	1
  6391  01100A  6EE6               	movwf	postinc1,c
  6392  01100C  EC1E  F0EA         	call	_get_vterm_ptr	;wreg free
  6393  011010  0060  F007  FFE6   	movff	btemp,postinc1
  6394  011016  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6395  01101C  0E0C               	movlw	12
  6396  01101E  6EE6               	movwf	postinc1,c
  6397  011020  EC5C  F0D8         	call	_sprintf	;wreg free
  6398                           
  6399                           ; BSR set to: 0
  6400                           ;main.c: 409:      sprintf(get_vterm_ptr(2, 0), "%d %2.4f, %d  TRIM   ", get_raw_result(
      +                          k), C.calc[k], inp_index + 2);
  6401                           ;stkvar	_inp_index @ sp[(-17)+11]
  6402  011024  0EFA               	movlw	-6
  6403  011026  50E3               	movf	plusw1,w,c
  6404  011028  6E0B               	movwf	(btemp+10)^0,c
  6405  01102A  6A0C               	clrf	(btemp+11)^0,c
  6406  01102C  0E02               	movlw	2
  6407  01102E  260B               	addwf	(btemp+10)^0,f,c
  6408  011030  0E00               	movlw	0
  6409  011032  220C               	addwfc	(btemp+11)^0,f,c
  6410  011034  0060  F02F  FFE6   	movff	btemp+10,postinc1
  6411  01103A  0060  F033  FFE6   	movff	btemp+11,postinc1
  6412                           
  6413                           ;stkvar	_k @ sp[(-19)+12]
  6414  011040  0EF9               	movlw	-7
  6415  011042  50E3               	movf	plusw1,w,c
  6416  011044  0D04               	mullw	4
  6417  011046  0EFF               	movlw	low _C
  6418  011048  24F3               	addwf	243,w,c
  6419  01104A  6ED9               	movwf	fsr2l,c
  6420  01104C  0E07               	movlw	high _C
  6421  01104E  20F4               	addwfc	prodh,w,c
  6422  011050  6EDA               	movwf	fsr2h,c
  6423  011052  006F FF7B FFE6     	movff	postinc2,postinc1
  6424  011058  006F FF7B FFE6     	movff	postinc2,postinc1
  6425  01105E  006F FF7B FFE6     	movff	postinc2,postinc1
  6426  011064  006F FF7B FFE6     	movff	postinc2,postinc1
  6427                           
  6428                           ;stkvar	_k @ sp[(-23)+12]
  6429  01106A  0EF5               	movlw	-11
  6430  01106C  50E3               	movf	plusw1,w,c
  6431  01106E  6EE6               	movwf	postinc1,c
  6432  011070  EC37  F0EC         	call	_get_raw_result	;wreg free
  6433  011074  0060  F007  FFE6   	movff	btemp,postinc1
  6434  01107A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6435  011080  0E3E               	movlw	low STR_43
  6436  011082  6EE6               	movwf	postinc1,c
  6437  011084  0EFD               	movlw	high STR_43
  6438  011086  6EE6               	movwf	postinc1,c
  6439  011088  0E00               	movlw	0
  6440  01108A  6EE6               	movwf	postinc1,c
  6441  01108C  0E02               	movlw	2
  6442  01108E  6EE6               	movwf	postinc1,c
  6443  011090  EC1E  F0EA         	call	_get_vterm_ptr	;wreg free
  6444  011094  0060  F007  FFE6   	movff	btemp,postinc1
  6445  01109A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6446  0110A0  0E0C               	movlw	12
  6447  0110A2  6EE6               	movwf	postinc1,c
  6448  0110A4  EC5C  F0D8         	call	_sprintf	;wreg free
  6449                           
  6450                           ;main.c: 410:      break;
  6451  0110A8  D016               	goto	l14894
  6452  0110AA                     l14892:
  6453  0110AA  0100               	movlb	0	; () banked
  6454  0110AC  51F1               	movf	_H& (0+255),w,b
  6455  0110AE  6E0B               	movwf	(btemp+10)^0,c
  6456  0110B0  6A0C               	clrf	(btemp+11)^0,c
  6457                           
  6458                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6459                           ; Switch size 1, requested type "simple"
  6460                           ; Number of cases is 1, Range of values is 0 to 0
  6461                           ; switch strategies available:
  6462                           ; Name         Instructions Cycles
  6463                           ; simple_byte            4     3 (average)
  6464                           ;	Chosen strategy is simple_byte
  6465  0110B2  500C               	movf	(btemp+11)^0,w,c
  6466  0110B4  0A00               	xorlw	0	; case 0
  6467  0110B6  A4D8               	btfss	status,2,c
  6468  0110B8  D00E               	goto	l14894
  6469                           
  6470                           ; BSR set to: 0
  6471                           ; Switch size 1, requested type "simple"
  6472                           ; Number of cases is 4, Range of values is 0 to 3
  6473                           ; switch strategies available:
  6474                           ; Name         Instructions Cycles
  6475                           ; simple_byte           13     7 (average)
  6476                           ;	Chosen strategy is simple_byte
  6477  0110BA  500B               	movf	(btemp+10)^0,w,c
  6478  0110BC  0A00               	xorlw	0	; case 0
  6479  0110BE  B4D8               	btfsc	status,2,c
  6480  0110C0  D4CE               	goto	l1480
  6481  0110C2  0A01               	xorlw	1	; case 1
  6482  0110C4  B4D8               	btfsc	status,2,c
  6483  0110C6  EF2C  F084         	goto	l1470
  6484  0110CA  0A03               	xorlw	3	; case 2
  6485  0110CC  B4D8               	btfsc	status,2,c
  6486  0110CE  D5DC               	goto	l1481
  6487  0110D0  0A01               	xorlw	1	; case 3
  6488  0110D2  B4D8               	btfsc	status,2,c
  6489  0110D4  D6F8               	goto	l14878
  6490  0110D6                     l14894:
  6491                           
  6492                           ; BSR set to: 0
  6493                           ;main.c: 414:     clear_hid_pflags(&H);
  6494  0110D6  0EF1               	movlw	_H& (0+255)
  6495  0110D8  6EE6               	movwf	postinc1,c
  6496  0110DA  EC71  F0E9         	call	_clear_hid_pflags	;wreg free
  6497                           
  6498                           ;main.c: 416:    StartTimer(TMR_DISPLAY, 250);
  6499  0110DE  0EFA               	movlw	250
  6500  0110E0  6EE6               	movwf	postinc1,c
  6501  0110E2  0E00               	movlw	0
  6502  0110E4  6EE6               	movwf	postinc1,c
  6503  0110E6  0E0A               	movlw	10
  6504  0110E8  6EE6               	movwf	postinc1,c
  6505  0110EA  EC13  F0E8         	call	_StartTimer	;wreg free
  6506                           
  6507                           ;main.c: 417:    V.enter = check_enter_button(&H);
  6508  0110EE  0EF1               	movlw	_H& (0+255)
  6509  0110F0  6EE6               	movwf	postinc1,c
  6510  0110F2  EC33  F0E8         	call	_check_enter_button	;wreg free
  6511  0110F6  5001               	movf	btemp^0,w,c
  6512  0110F8  0102               	movlb	2	; () banked
  6513  0110FA  6FAD               	movwf	(_V+173)& (0+255),b	;volatile
  6514                           
  6515                           ; BSR set to: 2
  6516                           ;main.c: 418:    if (V.enter && (H.hid_display != HID_AUX)) {
  6517  0110FC  51AD               	movf	(_V+173)& (0+255),w,b	;volatile
  6518  0110FE  B4D8               	btfsc	status,2,c
  6519  011100  D013               	goto	l14908
  6520                           
  6521                           ; BSR set to: 2
  6522  011102  0E03               	movlw	3
  6523  011104  0100               	movlb	0	; () banked
  6524  011106  19F1               	xorwf	_H& (0+255),w,b
  6525  011108  B4D8               	btfsc	status,2,c
  6526  01110A  D00E               	goto	l14908
  6527                           
  6528                           ; BSR set to: 0
  6529                           ;main.c: 419:     V.enter = 0;
  6530  01110C  0102               	movlb	2	; () banked
  6531  01110E  6BAD               	clrf	(_V+173)& (0+255),b	;volatile
  6532                           
  6533                           ; BSR set to: 2
  6534                           ;main.c: 420:     V.screen = ~V.screen;
  6535  011110  A19C               	btfss	(_V+156)& (0+255),0,b	;volatile
  6536  011112  D002               	goto	u14220
  6537  011114  0E01               	movlw	1
  6538  011116  D001               	goto	u14226
  6539  011118                     u14220:
  6540  011118  0E00               	movlw	0
  6541  01111A                     u14226:
  6542  01111A  0AFF               	xorlw	255
  6543  01111C  6E0C               	movwf	(btemp+11)^0,c
  6544  01111E  519C               	movf	(_V+156)& (0+255),w,b	;volatile
  6545  011120  180C               	xorwf	(btemp+11)^0,w,c
  6546  011122  0BFE               	andlw	-2
  6547  011124  180C               	xorwf	(btemp+11)^0,w,c
  6548  011126  6F9C               	movwf	(_V+156)& (0+255),b	;volatile
  6549  011128                     l14908:
  6550                           
  6551                           ;main.c: 422:    set_vterm(V.screen);
  6552  011128  0102               	movlb	2	; () banked
  6553  01112A  A19C               	btfss	(_V+156)& (0+255),0,b	;volatile
  6554  01112C  D002               	goto	u14230
  6555  01112E  0E01               	movlw	1
  6556  011130  D001               	goto	u14236
  6557  011132                     u14230:
  6558  011132  0E00               	movlw	0
  6559  011134                     u14236:
  6560  011134  6EE6               	movwf	postinc1,c
  6561  011136  EC97  F0EC         	call	_set_vterm	;wreg free
  6562                           
  6563                           ;main.c: 423:    update_lcd(V.screen);
  6564  01113A  0102               	movlb	2	; () banked
  6565  01113C  A19C               	btfss	(_V+156)& (0+255),0,b	;volatile
  6566  01113E  D002               	goto	u14240
  6567  011140  0E01               	movlw	1
  6568  011142  D001               	goto	u14246
  6569  011144                     u14240:
  6570  011144  0E00               	movlw	0
  6571  011146                     u14246:
  6572  011146  6EE6               	movwf	postinc1,c
  6573  011148  EC4D  F0D7         	call	_update_lcd	;wreg free
  6574                           
  6575                           ;main.c: 425:    wait_lcd_done();
  6576  01114C  EC26  F0EC         	call	_wait_lcd_done	;wreg free
  6577                           
  6578                           ; BSR set to: 0
  6579                           ;main.c: 426:    set_dac_a(3.333);
  6580  011150  0EDF               	movlw	223
  6581  011152  6EE6               	movwf	postinc1,c
  6582  011154  0E4F               	movlw	79
  6583  011156  6EE6               	movwf	postinc1,c
  6584  011158  0E55               	movlw	85
  6585  01115A  6EE6               	movwf	postinc1,c
  6586  01115C  0E40               	movlw	64
  6587  01115E  6EE6               	movwf	postinc1,c
  6588  011160  EC57  F0E9         	call	_set_dac_a	;wreg free
  6589                           
  6590                           ;main.c: 427:    set_dac_b(6.666);
  6591  011164  0EDF               	movlw	223
  6592  011166  6EE6               	movwf	postinc1,c
  6593  011168  0E4F               	movlw	79
  6594  01116A  6EE6               	movwf	postinc1,c
  6595  01116C  0ED5               	movlw	213
  6596  01116E  6EE6               	movwf	postinc1,c
  6597  011170  0E40               	movlw	64
  6598  011172  6EE6               	movwf	postinc1,c
  6599  011174  EC3D  F0E9         	call	_set_dac_b	;wreg free
  6600                           
  6601                           ;main.c: 428:    set_dac();
  6602  011178  EC51  F0DD         	call	_set_dac	;wreg free
  6603  01117C                     l14920:
  6604                           
  6605                           ;main.c: 434:   check_help(V.flipper);
  6606  01117C  0102               	movlb	2	; () banked
  6607  01117E  51AB               	movf	(_V+171)& (0+255),w,b	;volatile
  6608  011180  6EE6               	movwf	postinc1,c
  6609  011182  EC9D  F0C7         	call	_check_help	;wreg free
  6610                           
  6611                           ;main.c: 436:   if (V.enter) {
  6612  011186  0102               	movlb	2	; () banked
  6613  011188  51AD               	movf	(_V+173)& (0+255),w,b	;volatile
  6614  01118A  B4D8               	btfsc	status,2,c
  6615  01118C  D062               	goto	l1486
  6616                           
  6617                           ; BSR set to: 2
  6618                           ;main.c: 437:    V.enter = 0;
  6619  01118E  6BAD               	clrf	(_V+173)& (0+255),b	;volatile
  6620                           
  6621                           ;main.c: 438:    V.calib = 0;
  6622  011190  6BAC               	clrf	(_V+172)& (0+255),b	;volatile
  6623                           
  6624                           ; BSR set to: 2
  6625                           ;main.c: 439:    inp_index += 3;
  6626                           ;stkvar	_inp_index @ sp[(-17)+11]
  6627  011192  0EFA               	movlw	-6
  6628  011194  006F FF8C  F001    	movff	plusw1,btemp
  6629  01119A  0E03               	movlw	3
  6630  01119C  2601               	addwf	btemp^0,f,c
  6631  01119E  0EFA               	movlw	-6
  6632  0111A0  0060  F007  FFE3   	movff	btemp,plusw1
  6633                           
  6634                           ;main.c: 440:    if (inp_index > 9)
  6635                           ;stkvar	_inp_index @ sp[(-17)+11]
  6636  0111A6  0EFA               	movlw	-6
  6637  0111A8  006F FF8C  F001    	movff	plusw1,btemp
  6638  0111AE  0E09               	movlw	9
  6639  0111B0  6401               	cpfsgt	btemp^0,c
  6640  0111B2  D03A               	goto	l14948
  6641                           
  6642                           ; BSR set to: 2
  6643                           ;main.c: 441:     inp_index = 0;
  6644                           ;stkvar	_inp_index @ sp[(-17)+11]
  6645  0111B4  0EFA               	movlw	-6
  6646  0111B6  6AE3               	clrf	plusw1,c
  6647  0111B8  D037               	goto	l14948
  6648  0111BA                     l14930:
  6649                           
  6650                           ; BSR set to: 2
  6651                           ;main.c: 444:     i = C_BATT;
  6652                           ;stkvar	_i @ sp[(-17)+14]
  6653  0111BA  0EFD               	movlw	-3
  6654  0111BC  6AE3               	clrf	plusw1,c
  6655                           
  6656                           ; BSR set to: 2
  6657                           ;main.c: 445:     j = C_PV;
  6658                           ;stkvar	_j @ sp[(-17)+13]
  6659  0111BE  0EFC               	movlw	-4
  6660  0111C0  6AE3               	clrf	plusw1,c
  6661  0111C2  2AE3               	incf	plusw1,f,c
  6662                           
  6663                           ; BSR set to: 2
  6664                           ;main.c: 446:     k = V_CC;
  6665                           ;stkvar	_k @ sp[(-17)+12]
  6666  0111C4  0EFB               	movlw	-5
  6667  0111C6  6AE3               	clrf	plusw1,c
  6668  0111C8  82E3               	bsf	plusw1,1,c
  6669                           
  6670                           ;main.c: 447:     break;
  6671  0111CA  D043               	goto	l1486
  6672  0111CC                     l14936:
  6673                           
  6674                           ; BSR set to: 2
  6675                           ;main.c: 449:     i = V_BAT;
  6676                           ;stkvar	_i @ sp[(-17)+14]
  6677  0111CC  0EFD               	movlw	-3
  6678  0111CE  6AE3               	clrf	plusw1,c
  6679  0111D0  84E3               	bsf	plusw1,2,c
  6680                           
  6681                           ;main.c: 450:     j = V_PV;
  6682                           ;stkvar	_j @ sp[(-17)+13]
  6683  0111D2  0EFC               	movlw	-4
  6684  0111D4  6AE3               	clrf	plusw1,c
  6685  0111D6  80E3               	bsf	plusw1,0,c
  6686  0111D8  84E3               	bsf	plusw1,2,c	;indir
  6687                           
  6688                           ;main.c: 451:     k = V_CBUS;
  6689                           ;stkvar	_k @ sp[(-17)+12]
  6690  0111DA  0EFB               	movlw	-5
  6691  0111DC  6AE3               	clrf	plusw1,c
  6692  0111DE  82E3               	bsf	plusw1,1,c
  6693  0111E0  84E3               	bsf	plusw1,2,c	;indir
  6694                           
  6695                           ;main.c: 452:     break;
  6696  0111E2  D037               	goto	l1486
  6697  0111E4                     l14938:
  6698                           
  6699                           ; BSR set to: 2
  6700                           ;main.c: 454:     i = V_BBAT;
  6701                           ;stkvar	_i @ sp[(-17)+14]
  6702  0111E4  0EFD               	movlw	-3
  6703  0111E6  6AE3               	clrf	plusw1,c
  6704  0111E8  82E3               	bsf	plusw1,1,c
  6705  0111EA  86E3               	bsf	plusw1,3,c	;indir
  6706                           
  6707                           ; BSR set to: 2
  6708                           ;main.c: 455:     j = V_TEMP;
  6709  0111EC  0E0B               	movlw	11
  6710  0111EE  6E0C               	movwf	(btemp+11)^0,c
  6711                           
  6712                           ;stkvar	_j @ sp[(-17)+13]
  6713  0111F0  0EFC               	movlw	-4
  6714  0111F2  0060  F033  FFE3   	movff	btemp+11,plusw1
  6715                           
  6716                           ; BSR set to: 2
  6717                           ;main.c: 456:     k = V_INVERTER;
  6718                           ;stkvar	_k @ sp[(-17)+12]
  6719  0111F8  0EFB               	movlw	-5
  6720  0111FA  6AE3               	clrf	plusw1,c
  6721  0111FC  84E3               	bsf	plusw1,2,c
  6722  0111FE  86E3               	bsf	plusw1,3,c	;indir
  6723                           
  6724                           ;main.c: 457:     break;
  6725  011200  D028               	goto	l1486
  6726  011202                     l14944:
  6727                           
  6728                           ; BSR set to: 2
  6729                           ;main.c: 459:     i = V_LIGHT_SENSOR;
  6730  011202  0E0D               	movlw	13
  6731  011204  6E0C               	movwf	(btemp+11)^0,c
  6732                           
  6733                           ;stkvar	_i @ sp[(-17)+14]
  6734  011206  0EFD               	movlw	-3
  6735  011208  0060  F033  FFE3   	movff	btemp+11,plusw1
  6736                           
  6737                           ;main.c: 460:     j = V_LIGHT_SENSOR;
  6738  01120E  0E0D               	movlw	13
  6739  011210  6E0C               	movwf	(btemp+11)^0,c
  6740                           
  6741                           ;stkvar	_j @ sp[(-17)+13]
  6742  011212  0EFC               	movlw	-4
  6743  011214  0060  F033  FFE3   	movff	btemp+11,plusw1
  6744                           
  6745                           ;main.c: 461:     k = V_LIGHT_SENSOR;
  6746  01121A  0E0D               	movlw	13
  6747  01121C  6E0C               	movwf	(btemp+11)^0,c
  6748                           
  6749                           ;stkvar	_k @ sp[(-17)+12]
  6750  01121E  0EFB               	movlw	-5
  6751  011220  0060  F033  FFE3   	movff	btemp+11,plusw1
  6752                           
  6753                           ;main.c: 462:     break;
  6754  011226  D015               	goto	l1486
  6755  011228                     l14948:
  6756                           
  6757                           ; BSR set to: 2
  6758                           ;stkvar	_inp_index @ sp[(-17)+11]
  6759  011228  0EFA               	movlw	-6
  6760  01122A  50E3               	movf	plusw1,w,c
  6761  01122C  6E0B               	movwf	(btemp+10)^0,c
  6762  01122E  6A0C               	clrf	(btemp+11)^0,c
  6763                           
  6764                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6765                           ; Switch size 1, requested type "simple"
  6766                           ; Number of cases is 1, Range of values is 0 to 0
  6767                           ; switch strategies available:
  6768                           ; Name         Instructions Cycles
  6769                           ; simple_byte            4     3 (average)
  6770                           ;	Chosen strategy is simple_byte
  6771  011230  500C               	movf	(btemp+11)^0,w,c
  6772  011232  0A00               	xorlw	0	; case 0
  6773  011234  A4D8               	btfss	status,2,c
  6774  011236  D00D               	goto	l1486
  6775                           
  6776                           ; BSR set to: 2
  6777                           ; Switch size 1, requested type "simple"
  6778                           ; Number of cases is 4, Range of values is 0 to 9
  6779                           ; switch strategies available:
  6780                           ; Name         Instructions Cycles
  6781                           ; simple_byte           13     7 (average)
  6782                           ;	Chosen strategy is simple_byte
  6783  011238  500B               	movf	(btemp+10)^0,w,c
  6784  01123A  0A00               	xorlw	0	; case 0
  6785  01123C  B4D8               	btfsc	status,2,c
  6786  01123E  D7BD               	goto	l14930
  6787  011240  0A03               	xorlw	3	; case 3
  6788  011242  B4D8               	btfsc	status,2,c
  6789  011244  D7C3               	goto	l14936
  6790  011246  0A05               	xorlw	5	; case 6
  6791  011248  B4D8               	btfsc	status,2,c
  6792  01124A  D7CC               	goto	l14938
  6793  01124C  0A0F               	xorlw	15	; case 9
  6794  01124E  B4D8               	btfsc	status,2,c
  6795  011250  D7D8               	goto	l14944
  6796  011252                     l1486:
  6797                           
  6798                           ; BSR set to: 2
  6799                           ;main.c: 471:   if (V.set_sequ) {
  6800  011252  A19B               	btfss	(_V+155)& (0+255),0,b	;volatile
  6801  011254  EFE0  F083         	goto	l14822
  6802                           
  6803                           ; BSR set to: 2
  6804                           ;main.c: 472:    if (TimerDone(TMR_INFO)) {
  6805  011258  0E07               	movlw	7
  6806  01125A  6EE6               	movwf	postinc1,c
  6807  01125C  ECA1  F0EA         	call	_TimerDone	;wreg free
  6808  011260  5001               	movf	btemp^0,w,c
  6809  011262  B4D8               	btfsc	status,2,c
  6810  011264  D00C               	goto	l14958
  6811                           
  6812                           ;main.c: 473:     V.set_sequ = 0;
  6813  011266  0102               	movlb	2	; () banked
  6814  011268  919B               	bcf	(_V+155)& (0+255),0,b	;volatile
  6815                           
  6816                           ; BSR set to: 2
  6817                           ;main.c: 474:     set_vterm(0);
  6818  01126A  0E00               	movlw	0
  6819  01126C  6EE6               	movwf	postinc1,c
  6820  01126E  EC97  F0EC         	call	_set_vterm	;wreg free
  6821                           
  6822                           ;main.c: 475:     update_lcd(0);
  6823  011272  0E00               	movlw	0
  6824  011274  6EE6               	movwf	postinc1,c
  6825  011276  EC4D  F0D7         	call	_update_lcd	;wreg free
  6826                           
  6827                           ;main.c: 476:    } else {
  6828  01127A  EFE0  F083         	goto	l14822
  6829  01127E                     l14958:
  6830                           
  6831                           ;main.c: 477:     set_vterm(2);
  6832  01127E  0E02               	movlw	2
  6833  011280  6EE6               	movwf	postinc1,c
  6834  011282  EC97  F0EC         	call	_set_vterm	;wreg free
  6835                           
  6836                           ;main.c: 478:     update_lcd(2);
  6837  011286  0E02               	movlw	2
  6838  011288  6EE6               	movwf	postinc1,c
  6839  01128A  EC4D  F0D7         	call	_update_lcd	;wreg free
  6840  01128E  EFE0  F083         	goto	l14822
  6841  011292                     __end_of_main:
  6842                           	opt callstack 0
  6843                           
  6844 ;; *************** function _update_hist_data *****************
  6845 ;; Defined at:
  6846 ;;		line 454 in file "daq.c"
  6847 ;; Parameters:    Size  Location     Type
  6848 ;;  mode            1  [STACK] _Bool 
  6849 ;;  hist            2  [STACK] PTR volatile struct hist
  6850 ;;		 -> C.hist(85), C(299), 
  6851 ;; Auto vars:     Size  Location     Type
  6852 ;;		None
  6853 ;; Return value:  Size  Location     Type
  6854 ;;                  1  [STACK] void 
  6855 ;; Registers used:
  6856 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6857 ;; Tracked objects:
  6858 ;;		On entry : 3F/1
  6859 ;;		On exit  : 3F/1
  6860 ;;		Unchanged: 0/0
  6861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6862 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6863 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6864 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6865 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6866 ;;Total ram usage:        0 bytes
  6867 ;; Hardware stack levels used:    1
  6868 ;; Hardware stack levels required when called:   15
  6869 ;; This function calls:
  6870 ;;		Nothing
  6871 ;; This function is called by:
  6872 ;;		_main
  6873 ;; This function uses a reentrant model
  6874 ;;
  6875                           
  6876                           	psect	text1
  6877  01C9DC                     __ptext1:
  6878                           	opt callstack 0
  6879  01C9DC                     _update_hist_data:
  6880                           	opt callstack 15
  6881                           
  6882                           ;daq.c: 454: void update_hist_data(_Bool mode, volatile hist_type *hist);daq.c: 455: {;d
      +                          aq.c: 456:  if (mode) {
  6883                           ;stkvar	_mode @ sp[(0)+-1]
  6884                           
  6885                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6886                           ;incstack = 0
  6887  01C9DC  0EFF               	movlw	-1
  6888  01C9DE  50E3               	movf	plusw1,w,c
  6889  01C9E0  B4D8               	btfsc	status,2,c
  6890  01C9E2  D014               	goto	l12132
  6891                           
  6892                           ;daq.c: 457:   if (R.hist_save)
  6893  01C9E4  0101               	movlb	1	; () banked
  6894  01C9E6  A192               	btfss	(_R+139)& (0+255),0,b	;volatile
  6895  01C9E8  D023               	goto	l2082
  6896                           
  6897                           ; BSR set to: 1
  6898                           ;daq.c: 458:    R.H = *hist;
  6899                           ;stkvar	_hist @ sp[(0)+-3]
  6900  01C9EA  0EFD               	movlw	-3
  6901  01C9EC  006F FF8F FFD9     	movff	plusw1,fsr2l
  6902  01C9F2  0EFE               	movlw	-2
  6903  01C9F4  006F FF8F FFDA     	movff	plusw1,fsr2h
  6904  01C9FA  EE00  F13D         	lfsr	0,_R+54	;volatile
  6905  01C9FE  0E54               	movlw	84
  6906  01CA00                     u11241:
  6907  01CA00  006F FF6F FFEB     	movff	plusw2,plusw0
  6908  01CA06  06E8               	decf	wreg,f,c
  6909  01CA08  E2FB               	bc	u11241
  6910  01CA0A  D012               	goto	l2082
  6911  01CA0C                     l12132:
  6912                           
  6913                           ;daq.c: 460:   *hist = R.H;
  6914  01CA0C  EE20  F13D         	lfsr	2,_R+54	;volatile
  6915                           
  6916                           ;stkvar	_hist @ sp[(0)+-3]
  6917  01CA10  0EFD               	movlw	-3
  6918  01CA12  006F FF8F FFE9     	movff	plusw1,fsr0l
  6919  01CA18  0EFE               	movlw	-2
  6920  01CA1A  006F FF8F FFEA     	movff	plusw1,fsr0h
  6921  01CA20  0E54               	movlw	84
  6922  01CA22                     u11251:
  6923  01CA22  006F FF6F FFEB     	movff	plusw2,plusw0
  6924  01CA28  06E8               	decf	wreg,f,c
  6925  01CA2A  E2FB               	bc	u11251
  6926                           
  6927                           ;daq.c: 461:   R.hist_save = 1;
  6928  01CA2C  0101               	movlb	1	; () banked
  6929  01CA2E  8192               	bsf	(_R+139)& (0+255),0,b	;volatile
  6930  01CA30                     l2082:
  6931                           
  6932                           ; BSR set to: 1
  6933                           ; _update_hist_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
  6934  01CA30  52E5               	movf	postdec1,f,c
  6935  01CA32  52E5               	movf	postdec1,f,c
  6936  01CA34  52E5               	movf	postdec1,f,c
  6937  01CA36  0012               	return		;funcret
  6938  01CA38                     __end_of_update_hist_data:
  6939                           	opt callstack 0
  6940                           
  6941 ;; *************** function _update_cal_data *****************
  6942 ;; Defined at:
  6943 ;;		line 435 in file "daq.c"
  6944 ;; Parameters:    Size  Location     Type
  6945 ;;		None
  6946 ;; Auto vars:     Size  Location     Type
  6947 ;;		None
  6948 ;; Return value:  Size  Location     Type
  6949 ;;                  1  [STACK] void 
  6950 ;; Registers used:
  6951 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0
  6952 ;; Tracked objects:
  6953 ;;		On entry : 0/39
  6954 ;;		On exit  : 3F/1
  6955 ;;		Unchanged: 0/0
  6956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6957 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6958 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6959 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6960 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6961 ;;Total ram usage:        0 bytes
  6962 ;; Hardware stack levels used:    1
  6963 ;; Hardware stack levels required when called:   15
  6964 ;; This function calls:
  6965 ;;		Nothing
  6966 ;; This function is called by:
  6967 ;;		_main
  6968 ;; This function uses a reentrant model
  6969 ;;
  6970                           
  6971                           	psect	text2
  6972  01CB46                     __ptext2:
  6973                           	opt callstack 0
  6974  01CB46                     _update_cal_data:
  6975                           	opt callstack 15
  6976                           
  6977                           ;daq.c: 437:  R = r_cal;
  6978                           
  6979                           ; BSR set to: 1
  6980                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6981                           ;incstack = 0
  6982  01CB46  EE21  F000         	lfsr	2,_r_cal
  6983  01CB4A  EE00  F107         	lfsr	0,_R	;volatile
  6984  01CB4E  0E8E               	movlw	142
  6985  01CB50                     u11191:
  6986  01CB50  006F FF7B FFEE     	movff	postinc2,postinc0
  6987  01CB56  06E8               	decf	wreg,f,c
  6988  01CB58  E2FB               	bc	u11191
  6989  01CB5A  0E8F               	movlw	143
  6990  01CB5C  5ED9               	subwf	fsr2l,f,c
  6991  01CB5E  5EE9               	subwf	fsr0l,f,c
  6992                           
  6993                           ;daq.c: 438:  if (!R.c_zero_cal) {
  6994  01CB60  0101               	movlb	1	; () banked
  6995  01CB62  B392               	btfsc	(_R+139)& (0+255),1,b	;volatile
  6996  01CB64  D008               	goto	l12122
  6997                           
  6998                           ; BSR set to: 1
  6999                           ;daq.c: 439:   R.n_offset[0] = 3938;
  7000  01CB66  0E0F               	movlw	15
  7001  01CB68  6F2E               	movwf	(_R+39)& (0+255),b	;volatile
  7002  01CB6A  0E62               	movlw	98
  7003  01CB6C  6F2D               	movwf	(_R+38)& (0+255),b	;volatile
  7004                           
  7005                           ;daq.c: 440:   R.n_offset[1] = 4004;
  7006  01CB6E  0E0F               	movlw	15
  7007  01CB70  6F30               	movwf	(_R+41)& (0+255),b	;volatile
  7008  01CB72  0EA4               	movlw	164
  7009  01CB74  6F2F               	movwf	(_R+40)& (0+255),b	;volatile
  7010  01CB76                     l12122:
  7011                           
  7012                           ; BSR set to: 1
  7013                           ;daq.c: 444:  if (!R.c_scale_cal) {
  7014  01CB76  B592               	btfsc	(_R+139)& (0+255),2,b	;volatile
  7015  01CB78  0012               	return	
  7016                           
  7017                           ; BSR set to: 1
  7018                           ;daq.c: 445:   R.n_scalar[0] = 0.0862000;
  7019  01CB7A  0EA0               	movlw	160
  7020  01CB7C  6F31               	movwf	(_R+42)& (0+255),b	;volatile
  7021  01CB7E  0E89               	movlw	137
  7022  01CB80  6F32               	movwf	(_R+43)& (0+255),b	;volatile
  7023  01CB82  0EB0               	movlw	176
  7024  01CB84  6F33               	movwf	(_R+44)& (0+255),b	;volatile
  7025  01CB86  0E3D               	movlw	61
  7026  01CB88  6F34               	movwf	(_R+45)& (0+255),b	;volatile
  7027                           
  7028                           ;daq.c: 446:   R.n_scalar[1] = 0.0361010;
  7029  01CB8A  0EA4               	movlw	164
  7030  01CB8C  6F35               	movwf	(_R+46)& (0+255),b	;volatile
  7031  01CB8E  0EDE               	movlw	222
  7032  01CB90  6F36               	movwf	(_R+47)& (0+255),b	;volatile
  7033  01CB92  0E13               	movlw	19
  7034  01CB94  6F37               	movwf	(_R+48)& (0+255),b	;volatile
  7035  01CB96  0E3D               	movlw	61
  7036  01CB98  6F38               	movwf	(_R+49)& (0+255),b	;volatile
  7037                           
  7038                           ; BSR set to: 1
  7039                           ; _update_cal_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
  7040  01CB9A  0012               	return		;funcret
  7041  01CB9C                     __end_of_update_cal_data:
  7042                           	opt callstack 0
  7043                           
  7044 ;; *************** function _static_soc *****************
  7045 ;; Defined at:
  7046 ;;		line 117 in file "mbmc.c"
  7047 ;; Parameters:    Size  Location     Type
  7048 ;;		None
  7049 ;; Auto vars:     Size  Location     Type
  7050 ;;		None
  7051 ;; Return value:  Size  Location     Type
  7052 ;;                  1  [STACK] void 
  7053 ;; Registers used:
  7054 ;;		wreg, fsr2l, fsr2h
  7055 ;; Tracked objects:
  7056 ;;		On entry : 0/1
  7057 ;;		On exit  : 0/0
  7058 ;;		Unchanged: 0/0
  7059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7060 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7061 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7062 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7063 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7064 ;;Total ram usage:        0 bytes
  7065 ;; Hardware stack levels used:    1
  7066 ;; Hardware stack levels required when called:   15
  7067 ;; This function calls:
  7068 ;;		Nothing
  7069 ;; This function is called by:
  7070 ;;		_main
  7071 ;; This function uses a reentrant model
  7072 ;;
  7073                           
  7074                           	psect	text3
  7075  01CA38                     __ptext3:
  7076                           	opt callstack 0
  7077  01CA38                     _static_soc:
  7078                           	opt callstack 15
  7079                           
  7080                           ;mbmc.c: 119:  C.runtime = 120;
  7081                           
  7082                           ; BSR set to: 1
  7083                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7084                           ;incstack = 0
  7085  01CA38  0E78               	movlw	120
  7086  01CA3A  006F FFA0  F8B3    	movff	wreg,_C+180	;volatile
  7087  01CA40  0E00               	movlw	0
  7088  01CA42  006F FFA0  F8B4    	movff	wreg,_C+181	;volatile
  7089                           
  7090                           ;mbmc.c: 120:  C.soc = 100;
  7091  01CA48  0E64               	movlw	100
  7092  01CA4A  006F FFA0  F8B5    	movff	wreg,_C+182	;volatile
  7093  01CA50  0E00               	movlw	0
  7094  01CA52  006F FFA0  F8B6    	movff	wreg,_C+183	;volatile
  7095                           
  7096                           ;mbmc.c: 121:  C.dynamic_ah = C.bank_ah;
  7097  01CA58  EE22  F08B         	lfsr	2,_C+140	;volatile
  7098  01CA5C  006F FF78  F88F    	movff	postinc2,_C+144	;volatile
  7099  01CA62  006F FF78  F890    	movff	postinc2,_C+145	;volatile
  7100  01CA68  006F FF78  F891    	movff	postinc2,_C+146	;volatile
  7101  01CA6E  006F FF74  F892    	movff	postdec2,_C+147	;volatile
  7102                           
  7103                           ;mbmc.c: 122:  C.dynamic_ah_adj = C.dynamic_ah;
  7104  01CA74  EE22  F08F         	lfsr	2,_C+144	;volatile
  7105  01CA78  006F FF78  F89B    	movff	postinc2,_C+156	;volatile
  7106  01CA7E  006F FF78  F89C    	movff	postinc2,_C+157	;volatile
  7107  01CA84  006F FF78  F89D    	movff	postinc2,_C+158	;volatile
  7108  01CA8A  006F FF74  F89E    	movff	postdec2,_C+159	;volatile
  7109                           
  7110                           ; _static_soc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  7111  01CA90  0012               	return		;funcret
  7112  01CA92                     __end_of_static_soc:
  7113                           	opt callstack 0
  7114                           
  7115 ;; *************** function _start_switch_handler *****************
  7116 ;; Defined at:
  7117 ;;		line 125 in file "dio.c"
  7118 ;; Parameters:    Size  Location     Type
  7119 ;;		None
  7120 ;; Auto vars:     Size  Location     Type
  7121 ;;		None
  7122 ;; Return value:  Size  Location     Type
  7123 ;;                  1  [STACK] void 
  7124 ;; Registers used:
  7125 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
  7126 ;; Tracked objects:
  7127 ;;		On entry : 0/0
  7128 ;;		On exit  : 3F/39
  7129 ;;		Unchanged: 0/0
  7130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7131 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7132 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7133 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7134 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7135 ;;Total ram usage:        0 bytes
  7136 ;; Hardware stack levels used:    1
  7137 ;; Hardware stack levels required when called:   16
  7138 ;; This function calls:
  7139 ;;		_INT1_SetInterruptHandler
  7140 ;; This function is called by:
  7141 ;;		_main
  7142 ;; This function uses a reentrant model
  7143 ;;
  7144                           
  7145                           	psect	text4
  7146  01D8B2                     __ptext4:
  7147                           	opt callstack 0
  7148  01D8B2                     _start_switch_handler:
  7149                           	opt callstack 14
  7150                           
  7151                           ;dio.c: 127:  (PIE5bits.INT1IE = 0);
  7152                           
  7153                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7154                           ;incstack = 0
  7155  01D8B2  0139               	movlb	57	; () banked
  7156  01D8B4  9195               	bcf	149,0,b	;volatile
  7157                           
  7158                           ; BSR set to: 57
  7159                           ;dio.c: 128:  INT1_SetInterruptHandler(switch_handler);
  7160  01D8B6  0E60               	movlw	low _switch_handler
  7161  01D8B8  6EE6               	movwf	postinc1,c
  7162  01D8BA  0EA5               	movlw	high _switch_handler
  7163  01D8BC  6EE6               	movwf	postinc1,c
  7164  01D8BE  0E01               	movlw	low (_switch_handler shr (0+16))
  7165  01D8C0  6EE6               	movwf	postinc1,c
  7166  01D8C2  EC2D  F0EB         	call	_INT1_SetInterruptHandler	;wreg free
  7167                           
  7168                           ;dio.c: 129:  S.button[SNULL].sw = SW_INVALID;
  7169  01D8C6  0E02               	movlw	2
  7170  01D8C8  0101               	movlb	1	; () banked
  7171  01D8CA  6FB9               	movwf	(_S+35)& (0+255),b	;volatile
  7172                           
  7173                           ; BSR set to: 1
  7174                           ;dio.c: 130:  (PIE5bits.INT1IE = 1);
  7175  01D8CC  0139               	movlb	57	; () banked
  7176  01D8CE  8195               	bsf	149,0,b	;volatile
  7177                           
  7178                           ; BSR set to: 57
  7179                           ; _start_switch_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
  7180  01D8D0  0012               	return		;funcret
  7181  01D8D2                     __end_of_start_switch_handler:
  7182                           	opt callstack 0
  7183                           
  7184 ;; *************** function _srand *****************
  7185 ;; Defined at:
  7186 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/rand.c"
  7187 ;; Parameters:    Size  Location     Type
  7188 ;;  s               2  [STACK] unsigned int 
  7189 ;; Auto vars:     Size  Location     Type
  7190 ;;		None
  7191 ;; Return value:  Size  Location     Type
  7192 ;;                  1  [STACK] void 
  7193 ;; Registers used:
  7194 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+10, btemp+11
  7195 ;; Tracked objects:
  7196 ;;		On entry : 0/0
  7197 ;;		On exit  : 3F/1
  7198 ;;		Unchanged: 0/0
  7199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7200 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7201 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7202 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7203 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7204 ;;Total ram usage:        0 bytes
  7205 ;; Hardware stack levels used:    1
  7206 ;; Hardware stack levels required when called:   15
  7207 ;; This function calls:
  7208 ;;		Nothing
  7209 ;; This function is called by:
  7210 ;;		_main
  7211 ;; This function uses a reentrant model
  7212 ;;
  7213                           
  7214                           	psect	text5
  7215  01D246                     __ptext5:
  7216                           	opt callstack 0
  7217  01D246                     _srand:
  7218                           	opt callstack 15
  7219                           
  7220                           ;stkvar	_s @ sp[(0)+-2]
  7221                           
  7222                           ; BSR set to: 57
  7223                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7224                           ;incstack = 0
  7225  01D246  0EFE               	movlw	-2
  7226  01D248  50E3               	movf	plusw1,w,c
  7227  01D24A  0FFF               	addlw	255
  7228  01D24C  6E0B               	movwf	(btemp+10)^0,c
  7229  01D24E  0EFF               	movlw	-1
  7230  01D250  006F FF8C  F00C    	movff	plusw1,btemp+11
  7231  01D256  0EFF               	movlw	255
  7232  01D258  220C               	addwfc	(btemp+11)^0,f,c
  7233  01D25A  0060  F02C  F1D9   	movff	btemp+10,_seed
  7234  01D260  0060  F030  F1DA   	movff	btemp+11,_seed+1
  7235  01D266  0101               	movlb	1	; () banked
  7236  01D268  6BDB               	clrf	(_seed+2)& (0+255),b
  7237  01D26A  6BDC               	clrf	(_seed+3)& (0+255),b
  7238  01D26C  6BDD               	clrf	(_seed+4)& (0+255),b
  7239  01D26E  6BDE               	clrf	(_seed+5)& (0+255),b
  7240  01D270  6BDF               	clrf	(_seed+6)& (0+255),b
  7241  01D272  6BE0               	clrf	(_seed+7)& (0+255),b
  7242                           
  7243                           ; BSR set to: 1
  7244                           ; _srand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize
      +                           = 2, vargsize = 0
  7245  01D274  52E5               	movf	postdec1,f,c
  7246  01D276  52E5               	movf	postdec1,f,c
  7247  01D278  0012               	return		;funcret
  7248  01D27A                     __end_of_srand:
  7249                           	opt callstack 0
  7250                           
  7251 ;; *************** function _set_dac_b *****************
  7252 ;; Defined at:
  7253 ;;		line 306 in file "daq.c"
  7254 ;; Parameters:    Size  Location     Type
  7255 ;;  voltage         4  [STACK] const float 
  7256 ;; Auto vars:     Size  Location     Type
  7257 ;;		None
  7258 ;; Return value:  Size  Location     Type
  7259 ;;                  2  [STACK] unsigned short 
  7260 ;; Registers used:
  7261 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
  7262 ;; Tracked objects:
  7263 ;;		On entry : 0/0
  7264 ;;		On exit  : 0/0
  7265 ;;		Unchanged: 0/0
  7266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7267 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7268 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7270 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7271 ;;Total ram usage:        0 bytes
  7272 ;; Hardware stack levels used:    1
  7273 ;; Hardware stack levels required when called:   17
  7274 ;; This function calls:
  7275 ;;		_convert_dac_raw
  7276 ;; This function is called by:
  7277 ;;		_main
  7278 ;; This function uses a reentrant model
  7279 ;;
  7280                           
  7281                           	psect	text6
  7282  01D27A                     __ptext6:
  7283                           	opt callstack 0
  7284  01D27A                     _set_dac_b:
  7285                           	opt callstack 13
  7286                           
  7287                           ;daq.c: 306: uint16_t set_dac_b(const float voltage);daq.c: 307: {;daq.c: 308:  R.raw_da
      +                          c[1] = convert_dac_raw(voltage);
  7288                           ;stkvar	_voltage @ sp[(0)+-4]
  7289                           
  7290                           ; BSR set to: 1
  7291                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7292                           ;incstack = 0
  7293  01D27A  0EFC               	movlw	-4
  7294  01D27C  006F FF8F FFE6     	movff	plusw1,postinc1
  7295  01D282  006F FF8F FFE6     	movff	plusw1,postinc1
  7296  01D288  006F FF8F FFE6     	movff	plusw1,postinc1
  7297  01D28E  006F FF8F FFE6     	movff	plusw1,postinc1
  7298  01D294  ECAB  F0D5         	call	_convert_dac_raw	;wreg free
  7299  01D298  0060  F004  F129   	movff	btemp,_R+34	;volatile
  7300  01D29E  0060  F008  F12A   	movff	btemp+1,_R+35	;volatile
  7301                           
  7302                           ; _set_dac_b: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, arg
      +                          size = 4, vargsize = 0
  7303                           
  7304                           ;daq.c: 309:  return R.raw_dac[1];;	Return value of _set_dac_b is never used
  7305  01D2A4  52E5               	movf	postdec1,f,c
  7306  01D2A6  52E5               	movf	postdec1,f,c
  7307  01D2A8  52E5               	movf	postdec1,f,c
  7308  01D2AA  52E5               	movf	postdec1,f,c
  7309  01D2AC  0012               	return		;funcret
  7310  01D2AE                     __end_of_set_dac_b:
  7311                           	opt callstack 0
  7312                           
  7313 ;; *************** function _set_dac_a *****************
  7314 ;; Defined at:
  7315 ;;		line 297 in file "daq.c"
  7316 ;; Parameters:    Size  Location     Type
  7317 ;;  voltage         4  [STACK] const float 
  7318 ;; Auto vars:     Size  Location     Type
  7319 ;;		None
  7320 ;; Return value:  Size  Location     Type
  7321 ;;                  2  [STACK] unsigned short 
  7322 ;; Registers used:
  7323 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
  7324 ;; Tracked objects:
  7325 ;;		On entry : 3F/0
  7326 ;;		On exit  : 0/0
  7327 ;;		Unchanged: 0/0
  7328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7329 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7330 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7331 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7332 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7333 ;;Total ram usage:        0 bytes
  7334 ;; Hardware stack levels used:    1
  7335 ;; Hardware stack levels required when called:   17
  7336 ;; This function calls:
  7337 ;;		_convert_dac_raw
  7338 ;; This function is called by:
  7339 ;;		_main
  7340 ;; This function uses a reentrant model
  7341 ;;
  7342                           
  7343                           	psect	text7
  7344  01D2AE                     __ptext7:
  7345                           	opt callstack 0
  7346  01D2AE                     _set_dac_a:
  7347                           	opt callstack 13
  7348                           
  7349                           ;daq.c: 297: uint16_t set_dac_a(const float voltage);daq.c: 298: {;daq.c: 299:  R.raw_da
      +                          c[0] = convert_dac_raw(voltage);
  7350                           ;stkvar	_voltage @ sp[(0)+-4]
  7351                           
  7352                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7353                           ;incstack = 0
  7354  01D2AE  0EFC               	movlw	-4
  7355  01D2B0  006F FF8F FFE6     	movff	plusw1,postinc1
  7356  01D2B6  006F FF8F FFE6     	movff	plusw1,postinc1
  7357  01D2BC  006F FF8F FFE6     	movff	plusw1,postinc1
  7358  01D2C2  006F FF8F FFE6     	movff	plusw1,postinc1
  7359  01D2C8  ECAB  F0D5         	call	_convert_dac_raw	;wreg free
  7360  01D2CC  0060  F004  F127   	movff	btemp,_R+32	;volatile
  7361  01D2D2  0060  F008  F128   	movff	btemp+1,_R+33	;volatile
  7362                           
  7363                           ; _set_dac_a: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, arg
      +                          size = 4, vargsize = 0
  7364                           
  7365                           ;daq.c: 300:  return R.raw_dac[0];;	Return value of _set_dac_a is never used
  7366  01D2D8  52E5               	movf	postdec1,f,c
  7367  01D2DA  52E5               	movf	postdec1,f,c
  7368  01D2DC  52E5               	movf	postdec1,f,c
  7369  01D2DE  52E5               	movf	postdec1,f,c
  7370  01D2E0  0012               	return		;funcret
  7371  01D2E2                     __end_of_set_dac_a:
  7372                           	opt callstack 0
  7373                           
  7374 ;; *************** function _convert_dac_raw *****************
  7375 ;; Defined at:
  7376 ;;		line 279 in file "daq.c"
  7377 ;; Parameters:    Size  Location     Type
  7378 ;;  voltage         4  [STACK] float 
  7379 ;; Auto vars:     Size  Location     Type
  7380 ;;		None
  7381 ;; Return value:  Size  Location     Type
  7382 ;;                  2  [STACK] unsigned short 
  7383 ;; Registers used:
  7384 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
  7385 ;; Tracked objects:
  7386 ;;		On entry : 0/0
  7387 ;;		On exit  : 0/0
  7388 ;;		Unchanged: 0/0
  7389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7390 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7391 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7392 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7393 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7394 ;;Total ram usage:        0 bytes
  7395 ;; Hardware stack levels used:    1
  7396 ;; Hardware stack levels required when called:   16
  7397 ;; This function calls:
  7398 ;;		___fldiv
  7399 ;;		___flge
  7400 ;;		___fltol
  7401 ;; This function is called by:
  7402 ;;		_set_dac_a
  7403 ;;		_set_dac_b
  7404 ;; This function uses a reentrant model
  7405 ;;
  7406                           
  7407                           	psect	text8
  7408  01AB56                     __ptext8:
  7409                           	opt callstack 0
  7410  01AB56                     _convert_dac_raw:
  7411                           	opt callstack 13
  7412                           
  7413                           ;daq.c: 279: static uint16_t convert_dac_raw(float voltage);daq.c: 280: {;daq.c: 284:  i
      +                          f (voltage < 0.001)
  7414                           
  7415                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7416                           ;incstack = 0
  7417  01AB56  0E6F               	movlw	111
  7418  01AB58  6EE6               	movwf	postinc1,c
  7419  01AB5A  0E12               	movlw	18
  7420  01AB5C  6EE6               	movwf	postinc1,c
  7421  01AB5E  0E83               	movlw	131
  7422  01AB60  6EE6               	movwf	postinc1,c
  7423  01AB62  0E3A               	movlw	58
  7424  01AB64  6EE6               	movwf	postinc1,c
  7425                           
  7426                           ;stkvar	_voltage @ sp[(-4)+-4]
  7427  01AB66  0EF8               	movlw	-8
  7428  01AB68  006F FF8F FFE6     	movff	plusw1,postinc1
  7429  01AB6E  006F FF8F FFE6     	movff	plusw1,postinc1
  7430  01AB74  006F FF8F FFE6     	movff	plusw1,postinc1
  7431  01AB7A  006F FF8F FFE6     	movff	plusw1,postinc1
  7432  01AB80  ECFB  F0CF         	call	___flge	;wreg free
  7433  01AB84  B001               	btfsc	btemp& (0+255),0,c
  7434  01AB86  D018               	goto	l11656
  7435                           
  7436                           ;daq.c: 285:   voltage = 0.001;
  7437  01AB88  0E6F               	movlw	111
  7438  01AB8A  6E09               	movwf	(btemp+8)^0,c
  7439  01AB8C  0E12               	movlw	18
  7440  01AB8E  6E0A               	movwf	(btemp+9)^0,c
  7441  01AB90  0E83               	movlw	131
  7442  01AB92  6E0B               	movwf	(btemp+10)^0,c
  7443  01AB94  0E3A               	movlw	58
  7444  01AB96  6E0C               	movwf	(btemp+11)^0,c
  7445                           
  7446                           ;stkvar	_voltage @ sp[(0)+-4]
  7447  01AB98  0EFC               	movlw	-4
  7448  01AB9A  0060  F027  FFE3   	movff	btemp+8,plusw1
  7449  01ABA0  0EFD               	movlw	-3
  7450  01ABA2  0060  F02B  FFE3   	movff	btemp+9,plusw1
  7451  01ABA8  0EFE               	movlw	-2
  7452  01ABAA  0060  F02F  FFE3   	movff	btemp+10,plusw1
  7453  01ABB0  0EFF               	movlw	-1
  7454  01ABB2  0060  F033  FFE3   	movff	btemp+11,plusw1
  7455  01ABB8                     l11656:
  7456                           
  7457                           ;daq.c: 286:  if (voltage > 10.0)
  7458                           ;stkvar	_voltage @ sp[(0)+-4]
  7459  01ABB8  0EFC               	movlw	-4
  7460  01ABBA  006F FF8F FFE6     	movff	plusw1,postinc1
  7461  01ABC0  006F FF8F FFE6     	movff	plusw1,postinc1
  7462  01ABC6  006F FF8F FFE6     	movff	plusw1,postinc1
  7463  01ABCC  006F FF8F FFE6     	movff	plusw1,postinc1
  7464  01ABD2  0E00               	movlw	0
  7465  01ABD4  6EE6               	movwf	postinc1,c
  7466  01ABD6  0E00               	movlw	0
  7467  01ABD8  6EE6               	movwf	postinc1,c
  7468  01ABDA  0E20               	movlw	32
  7469  01ABDC  6EE6               	movwf	postinc1,c
  7470  01ABDE  0E41               	movlw	65
  7471  01ABE0  6EE6               	movwf	postinc1,c
  7472  01ABE2  ECFB  F0CF         	call	___flge	;wreg free
  7473  01ABE6  B001               	btfsc	btemp& (0+255),0,c
  7474  01ABE8  D018               	goto	l11660
  7475                           
  7476                           ;daq.c: 287:   voltage = 10.0;
  7477  01ABEA  0E00               	movlw	0
  7478  01ABEC  6E09               	movwf	(btemp+8)^0,c
  7479  01ABEE  0E00               	movlw	0
  7480  01ABF0  6E0A               	movwf	(btemp+9)^0,c
  7481  01ABF2  0E20               	movlw	32
  7482  01ABF4  6E0B               	movwf	(btemp+10)^0,c
  7483  01ABF6  0E41               	movlw	65
  7484  01ABF8  6E0C               	movwf	(btemp+11)^0,c
  7485                           
  7486                           ;stkvar	_voltage @ sp[(0)+-4]
  7487  01ABFA  0EFC               	movlw	-4
  7488  01ABFC  0060  F027  FFE3   	movff	btemp+8,plusw1
  7489  01AC02  0EFD               	movlw	-3
  7490  01AC04  0060  F02B  FFE3   	movff	btemp+9,plusw1
  7491  01AC0A  0EFE               	movlw	-2
  7492  01AC0C  0060  F02F  FFE3   	movff	btemp+10,plusw1
  7493  01AC12  0EFF               	movlw	-1
  7494  01AC14  0060  F033  FFE3   	movff	btemp+11,plusw1
  7495  01AC1A                     l11660:
  7496                           
  7497                           ;daq.c: 291:  return(uint16_t) (voltage / 0.002442);
  7498  01AC1A  0EF6               	movlw	246
  7499  01AC1C  6EE6               	movwf	postinc1,c
  7500  01AC1E  0E09               	movlw	9
  7501  01AC20  6EE6               	movwf	postinc1,c
  7502  01AC22  0E20               	movlw	32
  7503  01AC24  6EE6               	movwf	postinc1,c
  7504  01AC26  0E3B               	movlw	59
  7505  01AC28  6EE6               	movwf	postinc1,c
  7506                           
  7507                           ;stkvar	_voltage @ sp[(-4)+-4]
  7508  01AC2A  0EF8               	movlw	-8
  7509  01AC2C  006F FF8F FFE6     	movff	plusw1,postinc1
  7510  01AC32  006F FF8F FFE6     	movff	plusw1,postinc1
  7511  01AC38  006F FF8F FFE6     	movff	plusw1,postinc1
  7512  01AC3E  006F FF8F FFE6     	movff	plusw1,postinc1
  7513  01AC44  EC45  F0AD         	call	___fldiv	;wreg free
  7514  01AC48  0060  F007  FFE6   	movff	btemp,postinc1
  7515  01AC4E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7516  01AC54  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7517  01AC5A  0060  F013  FFE6   	movff	btemp+3,postinc1
  7518  01AC60  EC42  F0CF         	call	___fltol	;wreg free
  7519                           
  7520                           ; _convert_dac_raw: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          4, argsize = 4, vargsize = 0
  7521  01AC64  52E5               	movf	postdec1,f,c
  7522  01AC66  52E5               	movf	postdec1,f,c
  7523  01AC68  52E5               	movf	postdec1,f,c
  7524  01AC6A  52E5               	movf	postdec1,f,c
  7525  01AC6C  0012               	return		;funcret
  7526  01AC6E                     __end_of_convert_dac_raw:
  7527                           	opt callstack 0
  7528                           
  7529 ;; *************** function _set_dac *****************
  7530 ;; Defined at:
  7531 ;;		line 255 in file "daq.c"
  7532 ;; Parameters:    Size  Location     Type
  7533 ;;		None
  7534 ;; Auto vars:     Size  Location     Type
  7535 ;;		None
  7536 ;; Return value:  Size  Location     Type
  7537 ;;                  1  [STACK] void 
  7538 ;; Registers used:
  7539 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11
  7540 ;; Tracked objects:
  7541 ;;		On entry : 0/0
  7542 ;;		On exit  : 0/0
  7543 ;;		Unchanged: 0/0
  7544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7545 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7546 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7547 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7548 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7549 ;;Total ram usage:        0 bytes
  7550 ;; Hardware stack levels used:    1
  7551 ;; Hardware stack levels required when called:   16
  7552 ;; This function calls:
  7553 ;;		_SPI1_Exchange8bit
  7554 ;;		_dac_spi_control
  7555 ;; This function is called by:
  7556 ;;		_main
  7557 ;; This function uses a reentrant model
  7558 ;;
  7559                           
  7560                           	psect	text9
  7561  01BAA2                     __ptext9:
  7562                           	opt callstack 0
  7563  01BAA2                     _set_dac:
  7564                           	opt callstack 14
  7565                           
  7566                           ;daq.c: 257:  while (!SPI1STATUSbits.TXBE);
  7567                           
  7568                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7569                           ;incstack = 0
  7570  01BAA2  013D               	movlb	61	; () banked
  7571  01BAA4  AB17               	btfss	23,5,b	;volatile
  7572  01BAA6  D7FD               	goto	_set_dac
  7573                           
  7574                           ; BSR set to: 61
  7575                           
  7576                           ;daq.c: 258:  do { LATCbits.LATC2 = 1; } while(0);
  7577  01BAA8  84BC               	bsf	188,2,c	;volatile
  7578                           
  7579                           ; BSR set to: 61
  7580                           
  7581                           ;daq.c: 259:  do { LATCbits.LATC0 = 1; } while(0);
  7582  01BAAA  80BC               	bsf	188,0,c	;volatile
  7583                           
  7584                           ; BSR set to: 61
  7585                           ;daq.c: 260:  dac_spi_control(1);
  7586  01BAAC  0E01               	movlw	1
  7587  01BAAE  6EE6               	movwf	postinc1,c
  7588  01BAB0  ECAA  F0E2         	call	_dac_spi_control	;wreg free
  7589                           
  7590                           ;daq.c: 261:  R.max5322_cmd.map.dac0 = R.raw_dac[0]&0xff;
  7591  01BAB4  C127  F12B         	movff	_R+32,_R+36	;volatile
  7592                           
  7593                           ;daq.c: 262:  R.max5322_cmd.map.dac1 = (R.raw_dac[0] >> 8) &0xf;
  7594  01BAB8  EE20  F127         	lfsr	2,_R+32	;volatile
  7595  01BABC  006F FF78  F00B    	movff	postinc2,btemp+10
  7596  01BAC2  006F FF74  F00C    	movff	postdec2,btemp+11
  7597  01BAC8  0060  F030  F00B   	movff	btemp+11,btemp+10
  7598  01BACE  6A0C               	clrf	(btemp+11)^0,c
  7599  01BAD0  0E0F               	movlw	15
  7600  01BAD2  160B               	andwf	(btemp+10)^0,f,c
  7601  01BAD4  0101               	movlb	1	; () banked
  7602  01BAD6  512C               	movf	(_R+37)& (0+255),w,b	;volatile
  7603  01BAD8  180B               	xorwf	(btemp+10)^0,w,c
  7604  01BADA  0BF0               	andlw	-16
  7605  01BADC  180B               	xorwf	(btemp+10)^0,w,c
  7606  01BADE  6F2C               	movwf	(_R+37)& (0+255),b	;volatile
  7607                           
  7608                           ; BSR set to: 1
  7609                           ;daq.c: 263:  R.max5322_cmd.map.cont = 0b0100;
  7610  01BAE0  512C               	movf	(_R+37)& (0+255),w,b	;volatile
  7611  01BAE2  0B0F               	andlw	-241
  7612  01BAE4  0940               	iorlw	64
  7613  01BAE6  6F2C               	movwf	(_R+37)& (0+255),b	;volatile
  7614                           
  7615                           ; BSR set to: 1
  7616  01BAE8  90BF               	bcf	191,0,c	;volatile
  7617                           
  7618                           ; BSR set to: 1
  7619                           ;daq.c: 265:  SPI1_Exchange8bit(R.max5322_cmd.bd[1]);
  7620  01BAEA  512C               	movf	(_R+37)& (0+255),w,b	;volatile
  7621  01BAEC  6EE6               	movwf	postinc1,c
  7622  01BAEE  EC79  F0EC         	call	_SPI1_Exchange8bit	;wreg free
  7623                           
  7624                           ; BSR set to: 57
  7625                           ;daq.c: 266:  SPI1_Exchange8bit(R.max5322_cmd.bd[0]);
  7626  01BAF2  0101               	movlb	1	; () banked
  7627  01BAF4  512B               	movf	(_R+36)& (0+255),w,b	;volatile
  7628  01BAF6  6EE6               	movwf	postinc1,c
  7629  01BAF8  EC79  F0EC         	call	_SPI1_Exchange8bit	;wreg free
  7630                           
  7631                           ; BSR set to: 57
  7632  01BAFC  80BF               	bsf	191,0,c	;volatile
  7633                           
  7634                           ; BSR set to: 57
  7635                           ;daq.c: 268:  R.max5322_cmd.map.dac0 = R.raw_dac[1]&0xff;
  7636  01BAFE  C129  F12B         	movff	_R+34,_R+36	;volatile
  7637                           
  7638                           ; BSR set to: 57
  7639                           ;daq.c: 269:  R.max5322_cmd.map.dac1 = (R.raw_dac[1] >> 8) &0xf;
  7640  01BB02  EE20  F129         	lfsr	2,_R+34	;volatile
  7641  01BB06  006F FF78  F00B    	movff	postinc2,btemp+10
  7642  01BB0C  006F FF74  F00C    	movff	postdec2,btemp+11
  7643  01BB12  0060  F030  F00B   	movff	btemp+11,btemp+10
  7644  01BB18  6A0C               	clrf	(btemp+11)^0,c
  7645  01BB1A  0E0F               	movlw	15
  7646  01BB1C  160B               	andwf	(btemp+10)^0,f,c
  7647  01BB1E  0101               	movlb	1	; () banked
  7648  01BB20  512C               	movf	(_R+37)& (0+255),w,b	;volatile
  7649  01BB22  180B               	xorwf	(btemp+10)^0,w,c
  7650  01BB24  0BF0               	andlw	-16
  7651  01BB26  180B               	xorwf	(btemp+10)^0,w,c
  7652  01BB28  6F2C               	movwf	(_R+37)& (0+255),b	;volatile
  7653                           
  7654                           ; BSR set to: 1
  7655                           ;daq.c: 270:  R.max5322_cmd.map.cont = 0b0101;
  7656  01BB2A  512C               	movf	(_R+37)& (0+255),w,b	;volatile
  7657  01BB2C  0B0F               	andlw	-241
  7658  01BB2E  0950               	iorlw	80
  7659  01BB30  6F2C               	movwf	(_R+37)& (0+255),b	;volatile
  7660                           
  7661                           ; BSR set to: 1
  7662  01BB32  90BF               	bcf	191,0,c	;volatile
  7663                           
  7664                           ; BSR set to: 1
  7665                           ;daq.c: 272:  SPI1_Exchange8bit(R.max5322_cmd.bd[1]);
  7666  01BB34  512C               	movf	(_R+37)& (0+255),w,b	;volatile
  7667  01BB36  6EE6               	movwf	postinc1,c
  7668  01BB38  EC79  F0EC         	call	_SPI1_Exchange8bit	;wreg free
  7669                           
  7670                           ; BSR set to: 57
  7671                           ;daq.c: 273:  SPI1_Exchange8bit(R.max5322_cmd.bd[0]);
  7672  01BB3C  0101               	movlb	1	; () banked
  7673  01BB3E  512B               	movf	(_R+36)& (0+255),w,b	;volatile
  7674  01BB40  6EE6               	movwf	postinc1,c
  7675  01BB42  EC79  F0EC         	call	_SPI1_Exchange8bit	;wreg free
  7676  01BB46                     l2017:
  7677  01BB46  013D               	movlb	61	; () banked
  7678  01BB48  AB17               	btfss	23,5,b	;volatile
  7679  01BB4A  D7FD               	goto	l2017
  7680                           
  7681                           ; BSR set to: 61
  7682                           
  7683                           ;daq.c: 275:  do { LATFbits.LATF0 = 1; } while(0);
  7684  01BB4C  80BF               	bsf	191,0,c	;volatile
  7685                           
  7686                           ; BSR set to: 61
  7687                           ;daq.c: 276:  dac_spi_control(0);
  7688  01BB4E  0E00               	movlw	0
  7689  01BB50  6EE6               	movwf	postinc1,c
  7690  01BB52  ECAA  F0E2         	call	_dac_spi_control	;wreg free
  7691                           
  7692                           ; _set_dac: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsi
      +                          ze = 0, vargsize = 0
  7693  01BB56  0012               	return		;funcret
  7694  01BB58                     __end_of_set_dac:
  7695                           	opt callstack 0
  7696                           
  7697 ;; *************** function _dac_spi_control *****************
  7698 ;; Defined at:
  7699 ;;		line 207 in file "daq.c"
  7700 ;; Parameters:    Size  Location     Type
  7701 ;;  set             1  [STACK] _Bool 
  7702 ;; Auto vars:     Size  Location     Type
  7703 ;;		None
  7704 ;; Return value:  Size  Location     Type
  7705 ;;                  1  [STACK] void 
  7706 ;; Registers used:
  7707 ;;		wreg, fsr1l, fsr1h, status,2
  7708 ;; Tracked objects:
  7709 ;;		On entry : 3F/3D
  7710 ;;		On exit  : 0/0
  7711 ;;		Unchanged: 0/0
  7712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7713 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7714 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7715 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7716 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7717 ;;Total ram usage:        0 bytes
  7718 ;; Hardware stack levels used:    1
  7719 ;; Hardware stack levels required when called:   15
  7720 ;; This function calls:
  7721 ;;		Nothing
  7722 ;; This function is called by:
  7723 ;;		_set_dac
  7724 ;; This function uses a reentrant model
  7725 ;;
  7726                           
  7727                           	psect	text10
  7728  01C554                     __ptext10:
  7729                           	opt callstack 0
  7730  01C554                     _dac_spi_control:
  7731                           	opt callstack 14
  7732                           
  7733                           ;daq.c: 207: void dac_spi_control(_Bool set);daq.c: 208: {;daq.c: 209:  static _Bool ini
      +                          t = 0;;daq.c: 210:  static uint8_t S0, S1, S2, SC, SB;;daq.c: 212:  if (set) {
  7734                           ;stkvar	_set @ sp[(0)+-1]
  7735                           
  7736                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7737                           ;incstack = 0
  7738  01C554  0EFF               	movlw	-1
  7739  01C556  50E3               	movf	plusw1,w,c
  7740  01C558  B4D8               	btfsc	status,2,c
  7741  01C55A  D022               	goto	l11648
  7742                           
  7743                           ;daq.c: 213:   SPI1CON0bits.EN = 0;
  7744  01C55C  013D               	movlb	61	; () banked
  7745  01C55E  9F14               	bcf	20,7,b	;volatile
  7746                           
  7747                           ; BSR set to: 61
  7748                           ;daq.c: 214:   if (!init) {
  7749  01C560  5043               	movf	dac_spi_control@init^0,w,c
  7750  01C562  A4D8               	btfss	status,2,c
  7751  01C564  D011               	goto	l11636
  7752                           
  7753                           ; BSR set to: 61
  7754                           ;daq.c: 215:    init = 1;
  7755  01C566  0E01               	movlw	1
  7756  01C568  6E43               	movwf	dac_spi_control@init^0,c
  7757                           
  7758                           ; BSR set to: 61
  7759                           ;daq.c: 216:    S0 = SPI1CON0;
  7760  01C56A  006F F450  F042    	movff	15636,dac_spi_control@S0	;volatile
  7761                           
  7762                           ; BSR set to: 61
  7763                           ;daq.c: 217:    S1 = SPI1CON1;
  7764  01C570  006F F454  F0CE    	movff	15637,dac_spi_control@S1	;volatile
  7765                           
  7766                           ; BSR set to: 61
  7767                           ;daq.c: 218:    S2 = SPI1CON2;
  7768  01C576  006F F458  F0CD    	movff	15638,dac_spi_control@S2	;volatile
  7769                           
  7770                           ; BSR set to: 61
  7771                           ;daq.c: 219:    SC = SPI1CLK;
  7772  01C57C  006F F470  F0CC    	movff	15644,dac_spi_control@SC	;volatile
  7773                           
  7774                           ; BSR set to: 61
  7775                           ;daq.c: 220:    SB = SPI1BAUD;
  7776  01C582  006F F464  F0CB    	movff	15641,dac_spi_control@SB	;volatile
  7777  01C588                     l11636:
  7778                           
  7779                           ; BSR set to: 61
  7780                           ;daq.c: 226:   SPI1CON1 = 0x00;
  7781  01C588  6B15               	clrf	21,b	;volatile
  7782                           
  7783                           ; BSR set to: 61
  7784                           ;daq.c: 227:   SPI1CON1bits.CKE = 1;
  7785  01C58A  8D15               	bsf	21,6,b	;volatile
  7786                           
  7787                           ; BSR set to: 61
  7788                           ;daq.c: 228:   SPI1CON1bits.CKP = 0;
  7789  01C58C  9B15               	bcf	21,5,b	;volatile
  7790                           
  7791                           ; BSR set to: 61
  7792                           ;daq.c: 229:   SPI1CON1bits.SMP = 0;
  7793  01C58E  9F15               	bcf	21,7,b	;volatile
  7794                           
  7795                           ;daq.c: 231:   SPI1CON2 = 0x03;
  7796  01C590  0E03               	movlw	3
  7797  01C592  6F16               	movwf	22,b	;volatile
  7798                           
  7799                           ;daq.c: 233:   SPI1BAUD = 0x0f;
  7800  01C594  0E0F               	movlw	15
  7801  01C596  6F19               	movwf	25,b	;volatile
  7802                           
  7803                           ; BSR set to: 61
  7804                           ;daq.c: 235:   SPI1CLK = 0x00;
  7805  01C598  6B1C               	clrf	28,b	;volatile
  7806                           
  7807                           ;daq.c: 237:   SPI1CON0 = 0x83;
  7808  01C59A  0E83               	movlw	131
  7809  01C59C  6F14               	movwf	20,b	;volatile
  7810  01C59E  D014               	goto	L3
  7811  01C5A0                     l11648:
  7812                           
  7813                           ;daq.c: 240:   if (init) {
  7814  01C5A0  5043               	movf	dac_spi_control@init^0,w,c
  7815  01C5A2  B4D8               	btfsc	status,2,c
  7816  01C5A4  D012               	goto	l2001
  7817                           
  7818                           ;daq.c: 244:    SPI1CON0bits.EN = 0;
  7819  01C5A6  013D               	movlb	61	; () banked
  7820  01C5A8  9F14               	bcf	20,7,b	;volatile
  7821                           
  7822                           ;daq.c: 245:    SPI1CON1 = S1;
  7823  01C5AA  0060  F33B  FD15   	movff	dac_spi_control@S1,15637	;volatile
  7824                           
  7825                           ;daq.c: 246:    SPI1CON2 = S2;
  7826  01C5B0  0060  F337  FD16   	movff	dac_spi_control@S2,15638	;volatile
  7827                           
  7828                           ;daq.c: 247:    SPI1CLK = SC;
  7829  01C5B6  0060  F333  FD1C   	movff	dac_spi_control@SC,15644	;volatile
  7830                           
  7831                           ;daq.c: 248:    SPI1BAUD = SB;
  7832  01C5BC  0060  F32F  FD19   	movff	dac_spi_control@SB,15641	;volatile
  7833                           
  7834                           ;daq.c: 249:    SPI1CON0 = S0;
  7835  01C5C2  0060  F10B  FD14   	movff	dac_spi_control@S0,15636	;volatile
  7836  01C5C8                     L3:
  7837                           
  7838                           ;daq.c: 250:    SPI1CON0bits.EN = 1;
  7839  01C5C8  8F14               	bsf	20,7,b	;volatile
  7840  01C5CA                     l2001:
  7841                           
  7842                           ; _dac_spi_control: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          1, argsize = 1, vargsize = 0
  7843  01C5CA  52E5               	movf	postdec1,f,c
  7844  01C5CC  0012               	return		;funcret
  7845  01C5CE                     __end_of_dac_spi_control:
  7846                           	opt callstack 0
  7847                           
  7848 ;; *************** function _read_cal_data *****************
  7849 ;; Defined at:
  7850 ;;		line 368 in file "daq.c"
  7851 ;; Parameters:    Size  Location     Type
  7852 ;;		None
  7853 ;; Auto vars:     Size  Location     Type
  7854 ;;  x               2  [STACK] unsigned short 
  7855 ;;  r_cal_ptr       2  [STACK] PTR unsigned char 
  7856 ;;		 -> r_cal(143), 
  7857 ;;  y               2  [STACK] unsigned short 
  7858 ;;  crcVal_save     1  [STACK] unsigned char 
  7859 ;; Return value:  Size  Location     Type
  7860 ;;                  1  [STACK] _Bool 
  7861 ;; Registers used:
  7862 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, 
      +btemp+11, prodl
  7863 ;; Tracked objects:
  7864 ;;		On entry : 0/39
  7865 ;;		On exit  : 0/0
  7866 ;;		Unchanged: 0/0
  7867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7868 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7869 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7870 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7871 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7872 ;;Total ram usage:        0 bytes
  7873 ;; Hardware stack levels used:    1
  7874 ;; Hardware stack levels required when called:   17
  7875 ;; This function calls:
  7876 ;;		_CRC_8BitDataWrite
  7877 ;;		_CRC_CalculatedResultGet
  7878 ;;		_CRC_Initialize
  7879 ;;		_CRC_IsBusy
  7880 ;;		_CRC_Start
  7881 ;;		_DATAEE_ReadByte
  7882 ;; This function is called by:
  7883 ;;		_main
  7884 ;; This function uses a reentrant model
  7885 ;;
  7886                           
  7887                           	psect	text11
  7888  019350                     __ptext11:
  7889                           	opt callstack 0
  7890  019350                     _read_cal_data:
  7891                           	opt callstack 0
  7892                           
  7893                           ; autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7894  019350  0E07               	movlw	7
  7895  019352  26E1               	addwf	fsr1l,f,c
  7896  019354  0E00               	movlw	0
  7897  019356  22E2               	addwfc	fsr1h,f,c
  7898                           
  7899                           ;daq.c: 370:  uint16_t x = 0, y;
  7900                           ;stkvar	_x @ sp[(-7)+0]
  7901                           
  7902                           ;incstack = 0
  7903  019358  0EF9               	movlw	-7
  7904  01935A  6AE3               	clrf	plusw1,c
  7905  01935C  0EFA               	movlw	-6
  7906  01935E  6AE3               	clrf	plusw1,c
  7907                           
  7908                           ;daq.c: 371:  uint8_t *r_cal_ptr, crcVal_save;;daq.c: 373:  y = sizeof(r_cal);
  7909  019360  0E8F               	movlw	143
  7910  019362  6E0B               	movwf	(btemp+10)^0,c
  7911  019364  0E00               	movlw	0
  7912  019366  6E0C               	movwf	(btemp+11)^0,c
  7913                           
  7914                           ;stkvar	_y @ sp[(-7)+4]
  7915  019368  0EFD               	movlw	-3
  7916  01936A  0060  F02F  FFE3   	movff	btemp+10,plusw1
  7917  019370  0EFE               	movlw	-2
  7918  019372  0060  F033  FFE3   	movff	btemp+11,plusw1
  7919                           
  7920                           ;daq.c: 374:  r_cal_ptr = (uint8_t*) & r_cal;
  7921                           ;stkvar	_r_cal_ptr @ sp[(-7)+2]
  7922  019378  0E04               	movlw	high _r_cal
  7923  01937A  6E01               	movwf	btemp^0,c
  7924  01937C  0EFC               	movlw	-4
  7925  01937E  0060  F007  FFE3   	movff	btemp,plusw1
  7926  019384  0E00               	movlw	low _r_cal
  7927  019386  6E01               	movwf	btemp^0,c
  7928  019388  0EFB               	movlw	-5
  7929  01938A  0060  F007  FFE3   	movff	btemp,plusw1
  7930                           
  7931                           ;daq.c: 376:  CRC_Initialize();
  7932  019390  EC18  F0E1         	call	_CRC_Initialize	;wreg free
  7933                           
  7934                           ; BSR set to: 0
  7935                           ;daq.c: 379:  CRC_Start();
  7936  019394  ECB6  F0ED         	call	_CRC_Start	;wreg free
  7937  019398                     l12082:
  7938                           
  7939                           ;daq.c: 382:   r_cal_ptr[x] = DATAEE_ReadByte(x);
  7940                           ;stkvar	_x @ sp[(-7)+0]
  7941  019398  0EF9               	movlw	-7
  7942  01939A  006F FF8F FFE6     	movff	plusw1,postinc1
  7943  0193A0  006F FF8F FFE6     	movff	plusw1,postinc1
  7944  0193A6  ECA5  F0E9         	call	_DATAEE_ReadByte	;wreg free
  7945                           
  7946                           ;stkvar	_x @ sp[(-7)+0]
  7947  0193AA  0EF9               	movlw	-7
  7948  0193AC  006F FF8C  F00B    	movff	plusw1,btemp+10
  7949  0193B2  0EFA               	movlw	-6
  7950  0193B4  006F FF8C  F00C    	movff	plusw1,btemp+11
  7951                           
  7952                           ;stkvar	_r_cal_ptr @ sp[(-7)+2]
  7953  0193BA  0EFB               	movlw	-5
  7954  0193BC  006F FF8C  F009    	movff	plusw1,btemp+8
  7955  0193C2  0EFC               	movlw	-4
  7956  0193C4  006F FF8C  F00A    	movff	plusw1,btemp+9
  7957  0193CA  500B               	movf	(btemp+10)^0,w,c
  7958  0193CC  2409               	addwf	(btemp+8)^0,w,c
  7959  0193CE  6ED9               	movwf	fsr2l,c
  7960  0193D0  500C               	movf	(btemp+11)^0,w,c
  7961  0193D2  200A               	addwfc	(btemp+9)^0,w,c
  7962  0193D4  6EDA               	movwf	fsr2h,c
  7963  0193D6  0060  F007  FFDF   	movff	btemp,indf2
  7964                           
  7965                           ;daq.c: 383:  } while (++x < y);
  7966                           ;stkvar	_y @ sp[(-7)+4]
  7967  0193DC  0EFD               	movlw	-3
  7968  0193DE  006F FF8C  F00B    	movff	plusw1,btemp+10
  7969  0193E4  0EFE               	movlw	-2
  7970  0193E6  006F FF8C  F00C    	movff	plusw1,btemp+11
  7971                           
  7972                           ;stkvar	_x @ sp[(-7)+0]
  7973  0193EC  0EF9               	movlw	-7
  7974  0193EE  50E3               	movf	plusw1,w,c
  7975  0193F0  0F01               	addlw	1
  7976  0193F2  6E01               	movwf	btemp^0,c
  7977  0193F4  0EF9               	movlw	-7
  7978  0193F6  0060  F007  FFE3   	movff	btemp,plusw1
  7979  0193FC  6A01               	clrf	btemp^0,c
  7980  0193FE  0EFA               	movlw	-6
  7981  019400  50E3               	movf	plusw1,w,c
  7982  019402  2001               	addwfc	btemp^0,w,c
  7983  019404  6E01               	movwf	btemp^0,c
  7984  019406  0EFA               	movlw	-6
  7985  019408  0060  F007  FFE3   	movff	btemp,plusw1
  7986  01940E  0EF9               	movlw	-7
  7987  019410  006F FF8C  F009    	movff	plusw1,btemp+8
  7988  019416  0EFA               	movlw	-6
  7989  019418  006F FF8C  F00A    	movff	plusw1,btemp+9
  7990  01941E  500B               	movf	(btemp+10)^0,w,c
  7991  019420  5C09               	subwf	(btemp+8)^0,w,c
  7992  019422  500C               	movf	(btemp+11)^0,w,c
  7993  019424  580A               	subwfb	(btemp+9)^0,w,c
  7994  019426  A0D8               	btfss	status,0,c
  7995  019428  D7B7               	goto	l12082
  7996                           
  7997                           ;daq.c: 384:  crcVal_save = r_cal.crc;
  7998                           ;stkvar	_crcVal_save @ sp[(-7)+6]
  7999  01942A  0EFF               	movlw	-1
  8000  01942C  0061  F23B  FFE3   	movff	_r_cal+142,plusw1
  8001                           
  8002                           ;daq.c: 386:  if (r_cal.checkmark == 0x1957) {
  8003  019432  0E57               	movlw	87
  8004  019434  0104               	movlb	4	; () banked
  8005  019436  198C               	xorwf	(_r_cal+140)& (0+255),w,b
  8006  019438  E163               	bnz	l12102
  8007  01943A  0E19               	movlw	25
  8008  01943C  198D               	xorwf	(_r_cal+141)& (0+255),w,b
  8009  01943E  A4D8               	btfss	status,2,c
  8010  019440  D05F               	goto	u11180
  8011                           
  8012                           ; BSR set to: 4
  8013                           ;daq.c: 387:   r_cal.crc = 0x42;
  8014  019442  0E42               	movlw	66
  8015  019444  6F8E               	movwf	(_r_cal+142)& (0+255),b
  8016                           
  8017                           ; BSR set to: 4
  8018                           ;daq.c: 388:   x = 0;
  8019                           ;stkvar	_x @ sp[(-7)+0]
  8020  019446  0EF9               	movlw	-7
  8021  019448  6AE3               	clrf	plusw1,c
  8022  01944A  0EFA               	movlw	-6
  8023  01944C  6AE3               	clrf	plusw1,c
  8024  01944E                     l12094:
  8025                           
  8026                           ;daq.c: 391:    CRC_8BitDataWrite(r_cal_ptr[x]);
  8027                           ;stkvar	_x @ sp[(-7)+0]
  8028  01944E  0EF9               	movlw	-7
  8029  019450  006F FF8C  F00B    	movff	plusw1,btemp+10
  8030  019456  0EFA               	movlw	-6
  8031  019458  006F FF8C  F00C    	movff	plusw1,btemp+11
  8032                           
  8033                           ;stkvar	_r_cal_ptr @ sp[(-7)+2]
  8034  01945E  0EFB               	movlw	-5
  8035  019460  006F FF8C  F009    	movff	plusw1,btemp+8
  8036  019466  0EFC               	movlw	-4
  8037  019468  006F FF8C  F00A    	movff	plusw1,btemp+9
  8038  01946E  500B               	movf	(btemp+10)^0,w,c
  8039  019470  2409               	addwf	(btemp+8)^0,w,c
  8040  019472  6ED9               	movwf	fsr2l,c
  8041  019474  500C               	movf	(btemp+11)^0,w,c
  8042  019476  200A               	addwfc	(btemp+9)^0,w,c
  8043  019478  6EDA               	movwf	fsr2h,c
  8044  01947A  50DF               	movf	indf2,w,c
  8045  01947C  6EE6               	movwf	postinc1,c
  8046  01947E  EC22  F0ED         	call	_CRC_8BitDataWrite	;wreg free
  8047  019482                     l12096:
  8048  019482  EC44  F0ED         	call	_CRC_IsBusy	;wreg free
  8049  019486  5001               	movf	btemp^0,w,c
  8050  019488  A4D8               	btfss	status,2,c
  8051  01948A  D7FB               	goto	l12096
  8052                           
  8053                           ;daq.c: 393:   } while (++x < y);
  8054                           ;stkvar	_y @ sp[(-7)+4]
  8055  01948C  0EFD               	movlw	-3
  8056  01948E  006F FF8C  F00B    	movff	plusw1,btemp+10
  8057  019494  0EFE               	movlw	-2
  8058  019496  006F FF8C  F00C    	movff	plusw1,btemp+11
  8059                           
  8060                           ;stkvar	_x @ sp[(-7)+0]
  8061  01949C  0EF9               	movlw	-7
  8062  01949E  50E3               	movf	plusw1,w,c
  8063  0194A0  0F01               	addlw	1
  8064  0194A2  6E01               	movwf	btemp^0,c
  8065  0194A4  0EF9               	movlw	-7
  8066  0194A6  0060  F007  FFE3   	movff	btemp,plusw1
  8067  0194AC  6A01               	clrf	btemp^0,c
  8068  0194AE  0EFA               	movlw	-6
  8069  0194B0  50E3               	movf	plusw1,w,c
  8070  0194B2  2001               	addwfc	btemp^0,w,c
  8071  0194B4  6E01               	movwf	btemp^0,c
  8072  0194B6  0EFA               	movlw	-6
  8073  0194B8  0060  F007  FFE3   	movff	btemp,plusw1
  8074  0194BE  0EF9               	movlw	-7
  8075  0194C0  006F FF8C  F009    	movff	plusw1,btemp+8
  8076  0194C6  0EFA               	movlw	-6
  8077  0194C8  006F FF8C  F00A    	movff	plusw1,btemp+9
  8078  0194CE  500B               	movf	(btemp+10)^0,w,c
  8079  0194D0  5C09               	subwf	(btemp+8)^0,w,c
  8080  0194D2  500C               	movf	(btemp+11)^0,w,c
  8081  0194D4  580A               	subwfb	(btemp+9)^0,w,c
  8082  0194D6  A0D8               	btfss	status,0,c
  8083  0194D8  D7BA               	goto	l12094
  8084                           
  8085                           ;daq.c: 394:   if (CRC_CalculatedResultGet(0, 0x00) != crcVal_save)
  8086  0194DA  0E00               	movlw	0
  8087  0194DC  6EE6               	movwf	postinc1,c
  8088  0194DE  0E00               	movlw	0
  8089  0194E0  6EE6               	movwf	postinc1,c
  8090  0194E2  0E00               	movlw	0
  8091  0194E4  6EE6               	movwf	postinc1,c
  8092  0194E6  EC89  F0CE         	call	_CRC_CalculatedResultGet	;wreg free
  8093                           
  8094                           ;stkvar	_crcVal_save @ sp[(-7)+6]
  8095  0194EA  0EFF               	movlw	-1
  8096  0194EC  50E3               	movf	plusw1,w,c
  8097  0194EE  6E0B               	movwf	(btemp+10)^0,c
  8098  0194F0  6A0C               	clrf	(btemp+11)^0,c
  8099  0194F2  500B               	movf	(btemp+10)^0,w,c
  8100  0194F4  1801               	xorwf	btemp^0,w,c
  8101  0194F6  E104               	bnz	u11180
  8102  0194F8  500C               	movf	(btemp+11)^0,w,c
  8103  0194FA  1802               	xorwf	(btemp+1)^0,w,c
  8104  0194FC  B4D8               	btfsc	status,2,c
  8105  0194FE  D002               	goto	l12110
  8106  019500                     u11180:
  8107  019500                     l12102:
  8108                           
  8109                           ;daq.c: 395:    return 0;
  8110  019500  0E00               	movlw	0
  8111  019502  D005               	goto	L4
  8112  019504                     l12110:
  8113                           
  8114                           ;daq.c: 399:  r_cal.crc = crcVal_save;
  8115                           ;stkvar	_crcVal_save @ sp[(-7)+6]
  8116  019504  0EFF               	movlw	-1
  8117  019506  006F FF8C  F48E    	movff	plusw1,_r_cal+142
  8118                           
  8119                           ;daq.c: 400:  return 1;
  8120  01950C  0E01               	movlw	1
  8121  01950E                     L4:
  8122  01950E  6E01               	movwf	btemp^0,c
  8123                           
  8124                           ; _read_cal_data: autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  8125  019510  0EF9               	movlw	249
  8126  019512  26E1               	addwf	fsr1l,f,c
  8127  019514  0EFF               	movlw	255
  8128  019516  22E2               	addwfc	fsr1h,f,c
  8129  019518  0012               	return		;funcret
  8130  01951A                     __end_of_read_cal_data:
  8131                           	opt callstack 0
  8132                           
  8133 ;; *************** function _DATAEE_ReadByte *****************
  8134 ;; Defined at:
  8135 ;;		line 194 in file "mcc_generated_files/memory.c"
  8136 ;; Parameters:    Size  Location     Type
  8137 ;;  bAdd            2  [STACK] unsigned short 
  8138 ;; Auto vars:     Size  Location     Type
  8139 ;;		None
  8140 ;; Return value:  Size  Location     Type
  8141 ;;                  1  [STACK] unsigned char 
  8142 ;; Registers used:
  8143 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
  8144 ;; Tracked objects:
  8145 ;;		On entry : 0/39
  8146 ;;		On exit  : 0/0
  8147 ;;		Unchanged: 0/0
  8148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8149 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8150 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8151 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8152 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8153 ;;Total ram usage:        0 bytes
  8154 ;; Hardware stack levels used:    1
  8155 ;; Hardware stack levels required when called:   15
  8156 ;; This function calls:
  8157 ;;		Nothing
  8158 ;; This function is called by:
  8159 ;;		_read_cal_data
  8160 ;; This function uses a reentrant model
  8161 ;;
  8162                           
  8163                           	psect	text12
  8164  01D34A                     __ptext12:
  8165                           	opt callstack 0
  8166  01D34A                     _DATAEE_ReadByte:
  8167                           	opt callstack 14
  8168                           
  8169                           ;mcc_generated_files/memory.c: 194: uint8_t DATAEE_ReadByte(uint16_t bAdd);mcc_generated
      +                          _files/memory.c: 195: {;mcc_generated_files/memory.c: 196:     NVMADRH = (uint8_t)((bAdd
      +                           >> 8) & 0x03);
  8170                           ;stkvar	_bAdd @ sp[(0)+-2]
  8171                           
  8172                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8173                           ;incstack = 0
  8174  01D34A  0EFF               	movlw	255
  8175  01D34C  24E1               	addwf	fsr1l,w,c
  8176  01D34E  6ED9               	movwf	fsr2l,c
  8177  01D350  0EFF               	movlw	255
  8178  01D352  20E2               	addwfc	fsr1h,w,c
  8179  01D354  6EDA               	movwf	fsr2h,c
  8180  01D356  50DF               	movf	indf2,w,c
  8181  01D358  0B03               	andlw	3
  8182  01D35A  0139               	movlb	57	; () banked
  8183  01D35C  6FE1               	movwf	225,b	;volatile
  8184                           
  8185                           ; BSR set to: 57
  8186                           ;mcc_generated_files/memory.c: 197:     NVMADRL = (uint8_t)(bAdd & 0xFF);
  8187                           ;stkvar	_bAdd @ sp[(0)+-2]
  8188  01D35E  0EFE               	movlw	-2
  8189  01D360  006F FF8F F9E0     	movff	plusw1,14816	;volatile
  8190                           
  8191                           ; BSR set to: 57
  8192                           ;mcc_generated_files/memory.c: 198:     NVMCON1bits.NVMREG = 0;
  8193  01D366  0E3F               	movlw	-193
  8194  01D368  17E5               	andwf	229,f,b	;volsfr
  8195                           
  8196                           ; BSR set to: 57
  8197                           ;mcc_generated_files/memory.c: 199:     NVMCON1bits.RD = 1;
  8198  01D36A  81E5               	bsf	229,0,b	;volsfr
  8199                           
  8200                           ; BSR set to: 57
  8201                           ;mcc_generated_files/memory.c: 200:     __nop();
  8202  01D36C  F000               	nop	
  8203                           
  8204                           ;mcc_generated_files/memory.c: 201:     __nop();
  8205  01D36E  F000               	nop	
  8206                           
  8207                           ;mcc_generated_files/memory.c: 203:     return (NVMDAT);
  8208  01D370  006E F78C  F001    	movff	14819,btemp	;volatile
  8209                           
  8210                           ; _DATAEE_ReadByte: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
  8211  01D376  52E5               	movf	postdec1,f,c
  8212  01D378  52E5               	movf	postdec1,f,c
  8213  01D37A  0012               	return		;funcret
  8214  01D37C                     __end_of_DATAEE_ReadByte:
  8215                           	opt callstack 0
  8216                           
  8217 ;; *************** function _init_port_dma *****************
  8218 ;; Defined at:
  8219 ;;		line 104 in file "eadog.c"
  8220 ;; Parameters:    Size  Location     Type
  8221 ;;		None
  8222 ;; Auto vars:     Size  Location     Type
  8223 ;;		None
  8224 ;; Return value:  Size  Location     Type
  8225 ;;                  1  [STACK] void 
  8226 ;; Registers used:
  8227 ;;		wreg, status,2
  8228 ;; Tracked objects:
  8229 ;;		On entry : 0/2
  8230 ;;		On exit  : 3F/3B
  8231 ;;		Unchanged: 0/0
  8232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8233 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8234 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8235 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8236 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8237 ;;Total ram usage:        0 bytes
  8238 ;; Hardware stack levels used:    1
  8239 ;; Hardware stack levels required when called:   15
  8240 ;; This function calls:
  8241 ;;		Nothing
  8242 ;; This function is called by:
  8243 ;;		_main
  8244 ;; This function uses a reentrant model
  8245 ;;
  8246                           
  8247                           	psect	text13
  8248  01D37C                     __ptext13:
  8249                           	opt callstack 0
  8250  01D37C                     _init_port_dma:
  8251                           	opt callstack 15
  8252                           
  8253                           ;eadog.c: 106:  DMA2CON1bits.DMODE = 0;
  8254                           
  8255                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8256                           ;incstack = 0
  8257  01D37C  0E3F               	movlw	-193
  8258  01D37E  013B               	movlb	59	; () banked
  8259  01D380  17DD               	andwf	221,f,b	;volatile
  8260                           
  8261                           ; BSR set to: 59
  8262                           ;eadog.c: 107:  DMA2CON1bits.DSTP = 0;
  8263  01D382  9BDD               	bcf	221,5,b	;volatile
  8264                           
  8265                           ;eadog.c: 108:  DMA2CON1bits.SMODE = 1;
  8266  01D384  51DD               	movf	221,w,b	;volatile
  8267  01D386  0BF9               	andlw	-7
  8268  01D388  0902               	iorlw	2
  8269  01D38A  6FDD               	movwf	221,b	;volatile
  8270                           
  8271                           ;eadog.c: 109:  DMA2CON1bits.SMR = 0;
  8272  01D38C  0EE7               	movlw	-25
  8273  01D38E  17DD               	andwf	221,f,b	;volatile
  8274                           
  8275                           ; BSR set to: 59
  8276                           ;eadog.c: 110:  DMA2CON1bits.SSTP = 1;
  8277  01D390  81DD               	bsf	221,0,b	;volatile
  8278                           
  8279                           ; BSR set to: 59
  8280                           ;eadog.c: 111:  DMA2CON0bits.SIRQEN = 0;
  8281  01D392  9DDC               	bcf	220,6,b	;volatile
  8282                           
  8283                           ;eadog.c: 112:  DMA2DSA = 0x3DEA;
  8284  01D394  0E3D               	movlw	61
  8285  01D396  6FD1               	movwf	209,b	;volatile
  8286  01D398  0EEA               	movlw	234
  8287  01D39A  6FD0               	movwf	208,b	;volatile
  8288                           
  8289                           ;eadog.c: 113:  DMA2SSA = (uint32_t) port_data;
  8290  01D39C  0EFF               	movlw	low _port_data
  8291  01D39E  6FD9               	movwf	217,b	;volatile
  8292  01D3A0  0E05               	movlw	high _port_data
  8293  01D3A2  6FDA               	movwf	218,b	;volatile
  8294  01D3A4  0E00               	movlw	low (_port_data shr (0+16))
  8295  01D3A6  6FDB               	movwf	219,b	;volatile
  8296                           
  8297                           ; BSR set to: 59
  8298                           ;eadog.c: 114:  DMA2CON0bits.DGO = 0;
  8299  01D3A8  9BDC               	bcf	220,5,b	;volatile
  8300                           
  8301                           ; BSR set to: 59
  8302                           ; _init_port_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  8303  01D3AA  0012               	return		;funcret
  8304  01D3AC                     __end_of_init_port_dma:
  8305                           	opt callstack 0
  8306                           
  8307 ;; *************** function _init_display *****************
  8308 ;; Defined at:
  8309 ;;		line 38 in file "eadog.c"
  8310 ;; Parameters:    Size  Location     Type
  8311 ;;		None
  8312 ;; Auto vars:     Size  Location     Type
  8313 ;;		None
  8314 ;; Return value:  Size  Location     Type
  8315 ;;                  1  [STACK] void 
  8316 ;; Registers used:
  8317 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  8318 ;; Tracked objects:
  8319 ;;		On entry : 3F/3B
  8320 ;;		On exit  : 3F/3D
  8321 ;;		Unchanged: 0/0
  8322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8323 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8324 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8325 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8326 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8327 ;;Total ram usage:        0 bytes
  8328 ;; Hardware stack levels used:    1
  8329 ;; Hardware stack levels required when called:   17
  8330 ;; This function calls:
  8331 ;;		_ringBufS_init
  8332 ;;		_send_lcd_cmd
  8333 ;;		_send_lcd_cmd_long
  8334 ;;		_send_lcd_data
  8335 ;;		_wdtdelay
  8336 ;; This function is called by:
  8337 ;;		_main
  8338 ;; This function uses a reentrant model
  8339 ;;
  8340                           
  8341                           	psect	text14
  8342  01B1C2                     __ptext14:
  8343                           	opt callstack 0
  8344  01B1C2                     _init_display:
  8345                           	opt callstack 13
  8346                           
  8347                           ;eadog.c: 40:  spi_link.tx1a = &ring_buf1;
  8348                           
  8349                           ; BSR set to: 59
  8350                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8351                           ;incstack = 0
  8352  01B1C2  0EA4               	movlw	low _ring_buf1
  8353  01B1C4  0100               	movlb	0	; () banked
  8354  01B1C6  6F66               	movwf	(_spi_link+6)& (0+255),b	;volatile
  8355  01B1C8  0E03               	movlw	high _ring_buf1
  8356  01B1CA  6F67               	movwf	(_spi_link+7)& (0+255),b	;volatile
  8357                           
  8358                           ;eadog.c: 41:  spi_link.tx1b = &ring_buf2;
  8359  01B1CC  0E8F               	movlw	low _ring_buf2
  8360  01B1CE  6F64               	movwf	(_spi_link+4)& (0+255),b	;volatile
  8361  01B1D0  0E04               	movlw	high _ring_buf2
  8362  01B1D2  6F65               	movwf	(_spi_link+5)& (0+255),b	;volatile
  8363                           
  8364                           ; BSR set to: 0
  8365                           ;eadog.c: 42:  ringBufS_init(spi_link.tx1a);
  8366  01B1D4  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
  8367  01B1DA  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
  8368  01B1E0  EC8D  F0EA         	call	_ringBufS_init	;wreg free
  8369                           
  8370                           ;eadog.c: 43:  ringBufS_init(spi_link.tx1b);
  8371  01B1E4  0060  F193  FFE6   	movff	_spi_link+4,postinc1
  8372  01B1EA  0060  F197  FFE6   	movff	_spi_link+5,postinc1
  8373  01B1F0  EC8D  F0EA         	call	_ringBufS_init	;wreg free
  8374                           
  8375                           ;eadog.c: 45:  LATEbits.LATE2 = 1;
  8376  01B1F4  84BE               	bsf	190,2,c	;volatile
  8377                           
  8378                           ;eadog.c: 47:  SPI1CON0bits.EN = 0;
  8379  01B1F6  013D               	movlb	61	; () banked
  8380  01B1F8  9F14               	bcf	20,7,b	;volatile
  8381                           
  8382                           ; BSR set to: 61
  8383                           ;eadog.c: 49:  SPI1CON1 = 0x20;
  8384  01B1FA  0E20               	movlw	32
  8385  01B1FC  6F15               	movwf	21,b	;volatile
  8386                           
  8387                           ; BSR set to: 61
  8388                           ;eadog.c: 51:  SPI1CON2 = 0x03;
  8389  01B1FE  0E03               	movlw	3
  8390  01B200  6F16               	movwf	22,b	;volatile
  8391                           
  8392                           ; BSR set to: 61
  8393                           ;eadog.c: 53:  SPI1BAUD = 0x04;
  8394  01B202  0E04               	movlw	4
  8395  01B204  6F19               	movwf	25,b	;volatile
  8396                           
  8397                           ; BSR set to: 61
  8398                           ;eadog.c: 55:  SPI1CLK = 0x02;
  8399  01B206  0E02               	movlw	2
  8400  01B208  6F1C               	movwf	28,b	;volatile
  8401                           
  8402                           ; BSR set to: 61
  8403                           ;eadog.c: 57:  SPI1CON0 = 0x83;
  8404  01B20A  0E83               	movlw	131
  8405  01B20C  6F14               	movwf	20,b	;volatile
  8406                           
  8407                           ; BSR set to: 61
  8408                           ;eadog.c: 58:  SPI1CON0bits.EN = 1;
  8409  01B20E  8F14               	bsf	20,7,b	;volatile
  8410                           
  8411                           ; BSR set to: 61
  8412                           ;eadog.c: 60:  wdtdelay(350000);
  8413  01B210  0E30               	movlw	48
  8414  01B212  6EE6               	movwf	postinc1,c
  8415  01B214  0E57               	movlw	87
  8416  01B216  6EE6               	movwf	postinc1,c
  8417  01B218  0E05               	movlw	5
  8418  01B21A  6EE6               	movwf	postinc1,c
  8419  01B21C  0E00               	movlw	0
  8420  01B21E  6EE6               	movwf	postinc1,c
  8421  01B220  EC49  F0E5         	call	_wdtdelay	;wreg free
  8422                           
  8423                           ; BSR set to: 0
  8424                           ;eadog.c: 61:  send_lcd_cmd_long(0x46);
  8425  01B224  0E46               	movlw	70
  8426  01B226  6EE6               	movwf	postinc1,c
  8427  01B228  ECD3  F0E7         	call	_send_lcd_cmd_long	;wreg free
  8428                           
  8429                           ; BSR set to: 0
  8430                           ;eadog.c: 62:  send_lcd_cmd(0x41);
  8431  01B22C  0E41               	movlw	65
  8432  01B22E  6EE6               	movwf	postinc1,c
  8433  01B230  ECF3  F0E7         	call	_send_lcd_cmd	;wreg free
  8434                           
  8435                           ; BSR set to: 0
  8436                           ;eadog.c: 63:  wdtdelay(80);
  8437  01B234  0E50               	movlw	80
  8438  01B236  6EE6               	movwf	postinc1,c
  8439  01B238  0E00               	movlw	0
  8440  01B23A  6EE6               	movwf	postinc1,c
  8441  01B23C  0E00               	movlw	0
  8442  01B23E  6EE6               	movwf	postinc1,c
  8443  01B240  0E00               	movlw	0
  8444  01B242  6EE6               	movwf	postinc1,c
  8445  01B244  EC49  F0E5         	call	_wdtdelay	;wreg free
  8446                           
  8447                           ; BSR set to: 0
  8448                           ;eadog.c: 64:  send_lcd_cmd(0x53);
  8449  01B248  0E53               	movlw	83
  8450  01B24A  6EE6               	movwf	postinc1,c
  8451  01B24C  ECF3  F0E7         	call	_send_lcd_cmd	;wreg free
  8452                           
  8453                           ; BSR set to: 0
  8454                           ;eadog.c: 65:  send_lcd_data(2);
  8455  01B250  0E02               	movlw	2
  8456  01B252  6EE6               	movwf	postinc1,c
  8457  01B254  ECBA  F0EB         	call	_send_lcd_data	;wreg free
  8458                           
  8459                           ; BSR set to: 0
  8460                           ;eadog.c: 66:  wdtdelay(80);
  8461  01B258  0E50               	movlw	80
  8462  01B25A  6EE6               	movwf	postinc1,c
  8463  01B25C  0E00               	movlw	0
  8464  01B25E  6EE6               	movwf	postinc1,c
  8465  01B260  0E00               	movlw	0
  8466  01B262  6EE6               	movwf	postinc1,c
  8467  01B264  0E00               	movlw	0
  8468  01B266  6EE6               	movwf	postinc1,c
  8469  01B268  EC49  F0E5         	call	_wdtdelay	;wreg free
  8470                           
  8471                           ; BSR set to: 0
  8472                           ;eadog.c: 67:  send_lcd_cmd_long(0x51);
  8473  01B26C  0E51               	movlw	81
  8474  01B26E  6EE6               	movwf	postinc1,c
  8475  01B270  ECD3  F0E7         	call	_send_lcd_cmd_long	;wreg free
  8476                           
  8477                           ; BSR set to: 0
  8478                           ;eadog.c: 68:  SPI1CON0bits.EN = 0;
  8479  01B274  013D               	movlb	61	; () banked
  8480  01B276  9F14               	bcf	20,7,b	;volatile
  8481                           
  8482                           ; BSR set to: 61
  8483                           ;eadog.c: 69:  SPI1CON2 = 0x02;
  8484  01B278  0E02               	movlw	2
  8485  01B27A  6F16               	movwf	22,b	;volatile
  8486                           
  8487                           ; BSR set to: 61
  8488                           ;eadog.c: 70:  SPI1CON0bits.EN = 1;
  8489  01B27C  8F14               	bsf	20,7,b	;volatile
  8490                           
  8491                           ; BSR set to: 61
  8492                           ;eadog.c: 89:  SPI1INTFbits.SPI1TXUIF = 0;
  8493  01B27E  931A               	bcf	26,1,b	;volatile
  8494                           
  8495                           ; BSR set to: 61
  8496                           ;eadog.c: 90:  DMA1CON1bits.DMODE = 0;
  8497  01B280  0E3F               	movlw	-193
  8498  01B282  013B               	movlb	59	; () banked
  8499  01B284  17FD               	andwf	253,f,b	;volatile
  8500                           
  8501                           ; BSR set to: 59
  8502                           ;eadog.c: 91:  DMA1CON1bits.DSTP = 0;
  8503  01B286  9BFD               	bcf	253,5,b	;volatile
  8504                           
  8505                           ; BSR set to: 59
  8506                           ;eadog.c: 92:  DMA1CON1bits.SMODE = 1;
  8507  01B288  51FD               	movf	253,w,b	;volatile
  8508  01B28A  0BF9               	andlw	-7
  8509  01B28C  0902               	iorlw	2
  8510  01B28E  6FFD               	movwf	253,b	;volatile
  8511                           
  8512                           ; BSR set to: 59
  8513                           ;eadog.c: 93:  DMA1CON1bits.SMR = 0;
  8514  01B290  0EE7               	movlw	-25
  8515  01B292  17FD               	andwf	253,f,b	;volatile
  8516                           
  8517                           ; BSR set to: 59
  8518                           ;eadog.c: 94:  DMA1CON1bits.SSTP = 1;
  8519  01B294  81FD               	bsf	253,0,b	;volatile
  8520                           
  8521                           ; BSR set to: 59
  8522                           ;eadog.c: 95:  DMA1SSA = (uint32_t) & ring_buf1;
  8523  01B296  0EA4               	movlw	low _ring_buf1
  8524  01B298  6FF9               	movwf	249,b	;volatile
  8525  01B29A  0E03               	movlw	high _ring_buf1
  8526  01B29C  6FFA               	movwf	250,b	;volatile
  8527  01B29E  0E00               	movlw	low (_ring_buf1 shr (0+16))
  8528  01B2A0  6FFB               	movwf	251,b	;volatile
  8529                           
  8530                           ; BSR set to: 59
  8531                           ;eadog.c: 96:  DMA1CON0bits.DGO = 0;
  8532  01B2A2  9BFC               	bcf	252,5,b	;volatile
  8533                           
  8534                           ; BSR set to: 59
  8535                           ;eadog.c: 97:  SPI1INTFbits.SPI1TXUIF = 1;
  8536  01B2A4  013D               	movlb	61	; () banked
  8537  01B2A6  831A               	bsf	26,1,b	;volatile
  8538                           
  8539                           ; BSR set to: 61
  8540                           ;eadog.c: 98:  LATEbits.LATE2 = 0;
  8541  01B2A8  94BE               	bcf	190,2,c	;volatile
  8542                           
  8543                           ; BSR set to: 61
  8544                           ; _init_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  8545  01B2AA  0012               	return		;funcret
  8546  01B2AC                     __end_of_init_display:
  8547                           	opt callstack 0
  8548                           
  8549 ;; *************** function _send_lcd_data *****************
  8550 ;; Defined at:
  8551 ;;		line 123 in file "eadog.c"
  8552 ;; Parameters:    Size  Location     Type
  8553 ;;  data            1  [STACK] const unsigned char 
  8554 ;; Auto vars:     Size  Location     Type
  8555 ;;		None
  8556 ;; Return value:  Size  Location     Type
  8557 ;;                  1  [STACK] void 
  8558 ;; Registers used:
  8559 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  8560 ;; Tracked objects:
  8561 ;;		On entry : 3F/0
  8562 ;;		On exit  : 3F/0
  8563 ;;		Unchanged: 0/0
  8564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8565 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8566 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8568 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8569 ;;Total ram usage:        0 bytes
  8570 ;; Hardware stack levels used:    1
  8571 ;; Hardware stack levels required when called:   16
  8572 ;; This function calls:
  8573 ;;		_SPI1_Exchange8bit
  8574 ;;		_wdtdelay
  8575 ;; This function is called by:
  8576 ;;		_init_display
  8577 ;; This function uses a reentrant model
  8578 ;;
  8579                           
  8580                           	psect	text15
  8581  01D774                     __ptext15:
  8582                           	opt callstack 0
  8583  01D774                     _send_lcd_data:
  8584                           	opt callstack 13
  8585                           
  8586                           ; BSR set to: 61
  8587                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8588                           ;incstack = 0
  8589                           ;eadog.c: 123: static void send_lcd_data(const uint8_t data);eadog.c: 124: {;eadog.c: 12
      +                          5:  do { LATCbits.LATC2 = 0; } while(0);
  8590  01D774  94BC               	bcf	188,2,c	;volatile
  8591                           
  8592                           ;eadog.c: 126:  SPI1_Exchange8bit(data);
  8593                           ;stkvar	_data @ sp[(0)+-1]
  8594  01D776  0EFF               	movlw	-1
  8595  01D778  50E3               	movf	plusw1,w,c
  8596  01D77A  6EE6               	movwf	postinc1,c
  8597  01D77C  EC79  F0EC         	call	_SPI1_Exchange8bit	;wreg free
  8598                           
  8599                           ; BSR set to: 57
  8600                           ;eadog.c: 127:  wdtdelay(8);
  8601  01D780  0E08               	movlw	8
  8602  01D782  6EE6               	movwf	postinc1,c
  8603  01D784  0E00               	movlw	0
  8604  01D786  6EE6               	movwf	postinc1,c
  8605  01D788  0E00               	movlw	0
  8606  01D78A  6EE6               	movwf	postinc1,c
  8607  01D78C  0E00               	movlw	0
  8608  01D78E  6EE6               	movwf	postinc1,c
  8609  01D790  EC49  F0E5         	call	_wdtdelay	;wreg free
  8610                           
  8611                           ; BSR set to: 0
  8612                           ; _send_lcd_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1,
      +                           argsize = 1, vargsize = 0
  8613  01D794  52E5               	movf	postdec1,f,c
  8614  01D796  0012               	return		;funcret
  8615  01D798                     __end_of_send_lcd_data:
  8616                           	opt callstack 0
  8617                           
  8618 ;; *************** function _send_lcd_cmd_long *****************
  8619 ;; Defined at:
  8620 ;;		line 139 in file "eadog.c"
  8621 ;; Parameters:    Size  Location     Type
  8622 ;;  cmd             1  [STACK] const unsigned char 
  8623 ;; Auto vars:     Size  Location     Type
  8624 ;;		None
  8625 ;; Return value:  Size  Location     Type
  8626 ;;                  1  [STACK] void 
  8627 ;; Registers used:
  8628 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  8629 ;; Tracked objects:
  8630 ;;		On entry : 3F/0
  8631 ;;		On exit  : 3F/0
  8632 ;;		Unchanged: 0/0
  8633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8634 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8635 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8636 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8637 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8638 ;;Total ram usage:        0 bytes
  8639 ;; Hardware stack levels used:    1
  8640 ;; Hardware stack levels required when called:   16
  8641 ;; This function calls:
  8642 ;;		_SPI1_Exchange8bit
  8643 ;;		_wdtdelay
  8644 ;; This function is called by:
  8645 ;;		_init_display
  8646 ;; This function uses a reentrant model
  8647 ;;
  8648                           
  8649                           	psect	text16
  8650  01CFA6                     __ptext16:
  8651                           	opt callstack 0
  8652  01CFA6                     _send_lcd_cmd_long:
  8653                           	opt callstack 13
  8654                           
  8655                           ; BSR set to: 0
  8656                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8657                           ;incstack = 0
  8658                           ;eadog.c: 139: static void send_lcd_cmd_long(const uint8_t cmd);eadog.c: 140: {;eadog.c:
      +                           141:  do { LATCbits.LATC2 = 0; } while(0);
  8659  01CFA6  94BC               	bcf	188,2,c	;volatile
  8660                           
  8661                           ;eadog.c: 142:  SPI1_Exchange8bit(0xFE);
  8662  01CFA8  0EFE               	movlw	254
  8663  01CFAA  6EE6               	movwf	postinc1,c
  8664  01CFAC  EC79  F0EC         	call	_SPI1_Exchange8bit	;wreg free
  8665                           
  8666                           ; BSR set to: 57
  8667                           ;eadog.c: 143:  wdtdelay(8);
  8668  01CFB0  0E08               	movlw	8
  8669  01CFB2  6EE6               	movwf	postinc1,c
  8670  01CFB4  0E00               	movlw	0
  8671  01CFB6  6EE6               	movwf	postinc1,c
  8672  01CFB8  0E00               	movlw	0
  8673  01CFBA  6EE6               	movwf	postinc1,c
  8674  01CFBC  0E00               	movlw	0
  8675  01CFBE  6EE6               	movwf	postinc1,c
  8676  01CFC0  EC49  F0E5         	call	_wdtdelay	;wreg free
  8677                           
  8678                           ; BSR set to: 0
  8679                           ;eadog.c: 144:  SPI1_Exchange8bit(cmd);
  8680                           ;stkvar	_cmd @ sp[(0)+-1]
  8681  01CFC4  0EFF               	movlw	-1
  8682  01CFC6  50E3               	movf	plusw1,w,c
  8683  01CFC8  6EE6               	movwf	postinc1,c
  8684  01CFCA  EC79  F0EC         	call	_SPI1_Exchange8bit	;wreg free
  8685                           
  8686                           ;eadog.c: 145:  wdtdelay(800);
  8687  01CFCE  0E20               	movlw	32
  8688  01CFD0  6EE6               	movwf	postinc1,c
  8689  01CFD2  0E03               	movlw	3
  8690  01CFD4  6EE6               	movwf	postinc1,c
  8691  01CFD6  0E00               	movlw	0
  8692  01CFD8  6EE6               	movwf	postinc1,c
  8693  01CFDA  0E00               	movlw	0
  8694  01CFDC  6EE6               	movwf	postinc1,c
  8695  01CFDE  EC49  F0E5         	call	_wdtdelay	;wreg free
  8696                           
  8697                           ; BSR set to: 0
  8698                           ; _send_lcd_cmd_long: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  8699  01CFE2  52E5               	movf	postdec1,f,c
  8700  01CFE4  0012               	return		;funcret
  8701  01CFE6                     __end_of_send_lcd_cmd_long:
  8702                           	opt callstack 0
  8703                           
  8704 ;; *************** function _send_lcd_cmd *****************
  8705 ;; Defined at:
  8706 ;;		line 130 in file "eadog.c"
  8707 ;; Parameters:    Size  Location     Type
  8708 ;;  cmd             1  [STACK] const unsigned char 
  8709 ;; Auto vars:     Size  Location     Type
  8710 ;;		None
  8711 ;; Return value:  Size  Location     Type
  8712 ;;                  1  [STACK] void 
  8713 ;; Registers used:
  8714 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  8715 ;; Tracked objects:
  8716 ;;		On entry : 3F/0
  8717 ;;		On exit  : 3F/0
  8718 ;;		Unchanged: 0/0
  8719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8720 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8721 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8723 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8724 ;;Total ram usage:        0 bytes
  8725 ;; Hardware stack levels used:    1
  8726 ;; Hardware stack levels required when called:   16
  8727 ;; This function calls:
  8728 ;;		_SPI1_Exchange8bit
  8729 ;;		_wdtdelay
  8730 ;; This function is called by:
  8731 ;;		_init_display
  8732 ;; This function uses a reentrant model
  8733 ;;
  8734                           
  8735                           	psect	text17
  8736  01CFE6                     __ptext17:
  8737                           	opt callstack 0
  8738  01CFE6                     _send_lcd_cmd:
  8739                           	opt callstack 13
  8740                           
  8741                           ; BSR set to: 0
  8742                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8743                           ;incstack = 0
  8744                           ;eadog.c: 130: static void send_lcd_cmd(const uint8_t cmd);eadog.c: 131: {;eadog.c: 132:
      +                            do { LATCbits.LATC2 = 0; } while(0);
  8745  01CFE6  94BC               	bcf	188,2,c	;volatile
  8746                           
  8747                           ;eadog.c: 133:  SPI1_Exchange8bit(0xFE);
  8748  01CFE8  0EFE               	movlw	254
  8749  01CFEA  6EE6               	movwf	postinc1,c
  8750  01CFEC  EC79  F0EC         	call	_SPI1_Exchange8bit	;wreg free
  8751                           
  8752                           ; BSR set to: 57
  8753                           ;eadog.c: 134:  wdtdelay(8);
  8754  01CFF0  0E08               	movlw	8
  8755  01CFF2  6EE6               	movwf	postinc1,c
  8756  01CFF4  0E00               	movlw	0
  8757  01CFF6  6EE6               	movwf	postinc1,c
  8758  01CFF8  0E00               	movlw	0
  8759  01CFFA  6EE6               	movwf	postinc1,c
  8760  01CFFC  0E00               	movlw	0
  8761  01CFFE  6EE6               	movwf	postinc1,c
  8762  01D000  EC49  F0E5         	call	_wdtdelay	;wreg free
  8763                           
  8764                           ; BSR set to: 0
  8765                           ;eadog.c: 135:  SPI1_Exchange8bit(cmd);
  8766                           ;stkvar	_cmd @ sp[(0)+-1]
  8767  01D004  0EFF               	movlw	-1
  8768  01D006  50E3               	movf	plusw1,w,c
  8769  01D008  6EE6               	movwf	postinc1,c
  8770  01D00A  EC79  F0EC         	call	_SPI1_Exchange8bit	;wreg free
  8771                           
  8772                           ;eadog.c: 136:  wdtdelay(8);
  8773  01D00E  0E08               	movlw	8
  8774  01D010  6EE6               	movwf	postinc1,c
  8775  01D012  0E00               	movlw	0
  8776  01D014  6EE6               	movwf	postinc1,c
  8777  01D016  0E00               	movlw	0
  8778  01D018  6EE6               	movwf	postinc1,c
  8779  01D01A  0E00               	movlw	0
  8780  01D01C  6EE6               	movwf	postinc1,c
  8781  01D01E  EC49  F0E5         	call	_wdtdelay	;wreg free
  8782                           
  8783                           ; BSR set to: 0
  8784                           ; _send_lcd_cmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
  8785  01D022  52E5               	movf	postdec1,f,c
  8786  01D024  0012               	return		;funcret
  8787  01D026                     __end_of_send_lcd_cmd:
  8788                           	opt callstack 0
  8789                           
  8790 ;; *************** function _SPI1_Exchange8bit *****************
  8791 ;; Defined at:
  8792 ;;		line 79 in file "mcc_generated_files/spi1.c"
  8793 ;; Parameters:    Size  Location     Type
  8794 ;;  data            1  [STACK] unsigned char 
  8795 ;; Auto vars:     Size  Location     Type
  8796 ;;		None
  8797 ;; Return value:  Size  Location     Type
  8798 ;;                  1  [STACK] unsigned char 
  8799 ;; Registers used:
  8800 ;;		wreg, fsr1l, fsr1h, status,2, btemp
  8801 ;; Tracked objects:
  8802 ;;		On entry : 0/1
  8803 ;;		On exit  : 3F/39
  8804 ;;		Unchanged: 0/0
  8805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8806 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8807 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8809 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8810 ;;Total ram usage:        0 bytes
  8811 ;; Hardware stack levels used:    1
  8812 ;; Hardware stack levels required when called:   15
  8813 ;; This function calls:
  8814 ;;		Nothing
  8815 ;; This function is called by:
  8816 ;;		_send_lcd_data
  8817 ;;		_send_lcd_cmd
  8818 ;;		_send_lcd_cmd_long
  8819 ;;		_set_dac
  8820 ;; This function uses a reentrant model
  8821 ;;
  8822                           
  8823                           	psect	text18
  8824  01D8F2                     __ptext18:
  8825                           	opt callstack 0
  8826  01D8F2                     _SPI1_Exchange8bit:
  8827                           	opt callstack 14
  8828                           
  8829                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
  8830                           
  8831                           ; BSR set to: 0
  8832                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8833                           ;incstack = 0
  8834  01D8F2  0E01               	movlw	1
  8835  01D8F4  013D               	movlb	61	; () banked
  8836  01D8F6  6F12               	movwf	18,b	;volatile
  8837                           
  8838                           ; BSR set to: 61
  8839                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
  8840                           ;stkvar	_data @ sp[(0)+-1]
  8841  01D8F8  0EFF               	movlw	-1
  8842  01D8FA  006F FF8F FD11     	movff	plusw1,15633	;volatile
  8843  01D900                     l809:
  8844                           
  8845                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
  8846  01D900  0139               	movlb	57	; () banked
  8847  01D902  A9A2               	btfss	162,4,b	;volatile
  8848  01D904  D7FD               	goto	l809
  8849                           
  8850                           ; BSR set to: 57
  8851                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
  8852  01D906  006F F440  F001    	movff	15632,btemp	;volatile
  8853                           
  8854                           ; BSR set to: 57
  8855                           ; _SPI1_Exchange8bit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  8856  01D90C  52E5               	movf	postdec1,f,c
  8857  01D90E  0012               	return		;funcret
  8858  01D910                     __end_of_SPI1_Exchange8bit:
  8859                           	opt callstack 0
  8860                           
  8861 ;; *************** function _ringBufS_init *****************
  8862 ;; Defined at:
  8863 ;;		line 22 in file "ringbufs.c"
  8864 ;; Parameters:    Size  Location     Type
  8865 ;;  _this           2  [STACK] PTR volatile struct ring
  8866 ;;		 -> ring_buf2(67), ring_buf1(67), 
  8867 ;; Auto vars:     Size  Location     Type
  8868 ;;		None
  8869 ;; Return value:  Size  Location     Type
  8870 ;;                  1  [STACK] void 
  8871 ;; Registers used:
  8872 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  8873 ;; Tracked objects:
  8874 ;;		On entry : 0/0
  8875 ;;		On exit  : 0/0
  8876 ;;		Unchanged: 0/0
  8877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8878 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8879 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8881 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8882 ;;Total ram usage:        0 bytes
  8883 ;; Hardware stack levels used:    1
  8884 ;; Hardware stack levels required when called:   16
  8885 ;; This function calls:
  8886 ;;		_memset
  8887 ;; This function is called by:
  8888 ;;		_init_display
  8889 ;; This function uses a reentrant model
  8890 ;;
  8891                           
  8892                           	psect	text19
  8893  01D51A                     __ptext19:
  8894                           	opt callstack 0
  8895  01D51A                     _ringBufS_init:
  8896                           	opt callstack 13
  8897                           
  8898                           ;ringbufs.c: 22: void ringBufS_init(volatile ringBufS_t *_this);ringbufs.c: 23: {;ringbu
      +                          fs.c: 32:  memset((void*)_this, 0, sizeof(*_this));
  8899                           
  8900                           ; BSR set to: 57
  8901                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8902                           ;incstack = 0
  8903  01D51A  0E43               	movlw	67
  8904  01D51C  6EE6               	movwf	postinc1,c
  8905  01D51E  0E00               	movlw	0
  8906  01D520  6EE6               	movwf	postinc1,c
  8907  01D522  0E00               	movlw	0
  8908  01D524  6EE6               	movwf	postinc1,c
  8909  01D526  0E00               	movlw	0
  8910  01D528  6EE6               	movwf	postinc1,c
  8911                           
  8912                           ;stkvar	__this @ sp[(-4)+-2]
  8913  01D52A  0EFA               	movlw	-6
  8914  01D52C  006F FF8F FFE6     	movff	plusw1,postinc1
  8915  01D532  006F FF8F FFE6     	movff	plusw1,postinc1
  8916  01D538  EC8F  F0BD         	call	_memset	;wreg free
  8917                           
  8918                           ; _ringBufS_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  8919  01D53C  52E5               	movf	postdec1,f,c
  8920  01D53E  52E5               	movf	postdec1,f,c
  8921  01D540  0012               	return		;funcret
  8922  01D542                     __end_of_ringBufS_init:
  8923                           	opt callstack 0
  8924                           
  8925 ;; *************** function _init_bsoc *****************
  8926 ;; Defined at:
  8927 ;;		line 110 in file "bsoc.c"
  8928 ;; Parameters:    Size  Location     Type
  8929 ;;		None
  8930 ;; Auto vars:     Size  Location     Type
  8931 ;;		None
  8932 ;; Return value:  Size  Location     Type
  8933 ;;                  1  [STACK] void 
  8934 ;; Registers used:
  8935 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
  8936 ;; Tracked objects:
  8937 ;;		On entry : 0/1
  8938 ;;		On exit  : 0/0
  8939 ;;		Unchanged: 0/0
  8940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8941 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8942 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8943 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8944 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8945 ;;Total ram usage:        0 bytes
  8946 ;; Hardware stack levels used:    1
  8947 ;; Hardware stack levels required when called:   18
  8948 ;; This function calls:
  8949 ;;		_TMR3_SetInterruptHandler
  8950 ;;		_Volts_to_SOC
  8951 ;;		___fldiv
  8952 ;;		___flmul
  8953 ;;		___fltol
  8954 ;;		___xxtofl
  8955 ;;		_conv_raw_result
  8956 ;; This function is called by:
  8957 ;;		_main
  8958 ;; This function uses a reentrant model
  8959 ;;
  8960                           
  8961                           	psect	text20
  8962  018894                     __ptext20:
  8963                           	opt callstack 0
  8964  018894                     _init_bsoc:
  8965                           	opt callstack 12
  8966                           
  8967                           ;bsoc.c: 115:  C.soc = Volts_to_SOC((uint32_t) conv_raw_result(V_BAT, CONV) * 1000.0);
  8968                           
  8969                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8970                           ;incstack = 0
  8971  018894  0E00               	movlw	0
  8972  018896  6EE6               	movwf	postinc1,c
  8973  018898  0E00               	movlw	0
  8974  01889A  6EE6               	movwf	postinc1,c
  8975  01889C  0E7A               	movlw	122
  8976  01889E  6EE6               	movwf	postinc1,c
  8977  0188A0  0E44               	movlw	68
  8978  0188A2  6EE6               	movwf	postinc1,c
  8979  0188A4  0E00               	movlw	0
  8980  0188A6  6EE6               	movwf	postinc1,c
  8981  0188A8  0E04               	movlw	4
  8982  0188AA  6EE6               	movwf	postinc1,c
  8983  0188AC  EC02  F0B0         	call	_conv_raw_result	;wreg free
  8984  0188B0  0060  F007  FFE6   	movff	btemp,postinc1
  8985  0188B6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8986  0188BC  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8987  0188C2  0060  F013  FFE6   	movff	btemp+3,postinc1
  8988  0188C8  EC42  F0CF         	call	___fltol	;wreg free
  8989  0188CC  0060  F007  FFE6   	movff	btemp,postinc1
  8990  0188D2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8991  0188D8  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8992  0188DE  0060  F013  FFE6   	movff	btemp+3,postinc1
  8993  0188E4  0E00               	movlw	0
  8994  0188E6  6EE6               	movwf	postinc1,c
  8995  0188E8  ECA6  F0C8         	call	___xxtofl	;wreg free
  8996  0188EC  0060  F007  FFE6   	movff	btemp,postinc1
  8997  0188F2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8998  0188F8  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8999  0188FE  0060  F013  FFE6   	movff	btemp+3,postinc1
  9000  018904  EC52  F0A5         	call	___flmul	;wreg free
  9001  018908  0060  F007  FFE6   	movff	btemp,postinc1
  9002  01890E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9003  018914  0060  F00F  FFE6   	movff	btemp+2,postinc1
  9004  01891A  0060  F013  FFE6   	movff	btemp+3,postinc1
  9005  018920  EC42  F0CF         	call	___fltol	;wreg free
  9006  018924  0060  F007  FFE6   	movff	btemp,postinc1
  9007  01892A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9008  018930  0060  F00F  FFE6   	movff	btemp+2,postinc1
  9009  018936  0060  F013  FFE6   	movff	btemp+3,postinc1
  9010  01893C  EC98  F0DC         	call	_Volts_to_SOC	;wreg free
  9011  018940  0060  F004  F8B5   	movff	btemp,_C+182	;volatile
  9012  018946  0060  F008  F8B6   	movff	btemp+1,_C+183	;volatile
  9013                           
  9014                           ;bsoc.c: 116:  C.dynamic_ah = C.bank_ah * (Volts_to_SOC((uint32_t) conv_raw_result(V_BAT
      +                          , CONV) * 1000.0) / 100.0);
  9015  01894C  EE22  F08B         	lfsr	2,_C+140	;volatile
  9016  018950  006F FF7B FFE6     	movff	postinc2,postinc1
  9017  018956  006F FF7B FFE6     	movff	postinc2,postinc1
  9018  01895C  006F FF7B FFE6     	movff	postinc2,postinc1
  9019  018962  006F FF7B FFE6     	movff	postinc2,postinc1
  9020  018968  0E00               	movlw	0
  9021  01896A  6EE6               	movwf	postinc1,c
  9022  01896C  0E00               	movlw	0
  9023  01896E  6EE6               	movwf	postinc1,c
  9024  018970  0EC8               	movlw	200
  9025  018972  6EE6               	movwf	postinc1,c
  9026  018974  0E42               	movlw	66
  9027  018976  6EE6               	movwf	postinc1,c
  9028  018978  0E00               	movlw	0
  9029  01897A  6EE6               	movwf	postinc1,c
  9030  01897C  0E00               	movlw	0
  9031  01897E  6EE6               	movwf	postinc1,c
  9032  018980  0E7A               	movlw	122
  9033  018982  6EE6               	movwf	postinc1,c
  9034  018984  0E44               	movlw	68
  9035  018986  6EE6               	movwf	postinc1,c
  9036  018988  0E00               	movlw	0
  9037  01898A  6EE6               	movwf	postinc1,c
  9038  01898C  0E04               	movlw	4
  9039  01898E  6EE6               	movwf	postinc1,c
  9040  018990  EC02  F0B0         	call	_conv_raw_result	;wreg free
  9041  018994  0060  F007  FFE6   	movff	btemp,postinc1
  9042  01899A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9043  0189A0  0060  F00F  FFE6   	movff	btemp+2,postinc1
  9044  0189A6  0060  F013  FFE6   	movff	btemp+3,postinc1
  9045  0189AC  EC42  F0CF         	call	___fltol	;wreg free
  9046  0189B0  0060  F007  FFE6   	movff	btemp,postinc1
  9047  0189B6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9048  0189BC  0060  F00F  FFE6   	movff	btemp+2,postinc1
  9049  0189C2  0060  F013  FFE6   	movff	btemp+3,postinc1
  9050  0189C8  0E00               	movlw	0
  9051  0189CA  6EE6               	movwf	postinc1,c
  9052  0189CC  ECA6  F0C8         	call	___xxtofl	;wreg free
  9053  0189D0  0060  F007  FFE6   	movff	btemp,postinc1
  9054  0189D6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9055  0189DC  0060  F00F  FFE6   	movff	btemp+2,postinc1
  9056  0189E2  0060  F013  FFE6   	movff	btemp+3,postinc1
  9057  0189E8  EC52  F0A5         	call	___flmul	;wreg free
  9058  0189EC  0060  F007  FFE6   	movff	btemp,postinc1
  9059  0189F2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9060  0189F8  0060  F00F  FFE6   	movff	btemp+2,postinc1
  9061  0189FE  0060  F013  FFE6   	movff	btemp+3,postinc1
  9062  018A04  EC42  F0CF         	call	___fltol	;wreg free
  9063  018A08  0060  F007  FFE6   	movff	btemp,postinc1
  9064  018A0E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9065  018A14  0060  F00F  FFE6   	movff	btemp+2,postinc1
  9066  018A1A  0060  F013  FFE6   	movff	btemp+3,postinc1
  9067  018A20  EC98  F0DC         	call	_Volts_to_SOC	;wreg free
  9068  018A24  0060  F004  F00B   	movff	btemp,btemp+10
  9069  018A2A  0060  F008  F00C   	movff	btemp+1,btemp+11
  9070  018A30  500B               	movf	(btemp+10)^0,w,c
  9071  018A32  6E05               	movwf	(btemp+4)^0,c
  9072  018A34  500C               	movf	(btemp+11)^0,w,c
  9073  018A36  6E06               	movwf	(btemp+5)^0,c
  9074  018A38  6A07               	clrf	(btemp+6)^0,c
  9075  018A3A  6A08               	clrf	(btemp+7)^0,c
  9076  018A3C  0060  F017  FFE6   	movff	btemp+4,postinc1
  9077  018A42  0060  F01B  FFE6   	movff	btemp+5,postinc1
  9078  018A48  0060  F01F  FFE6   	movff	btemp+6,postinc1
  9079  018A4E  0060  F023  FFE6   	movff	btemp+7,postinc1
  9080  018A54  0E00               	movlw	0
  9081  018A56  6EE6               	movwf	postinc1,c
  9082  018A58  ECA6  F0C8         	call	___xxtofl	;wreg free
  9083  018A5C  0060  F007  FFE6   	movff	btemp,postinc1
  9084  018A62  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9085  018A68  0060  F00F  FFE6   	movff	btemp+2,postinc1
  9086  018A6E  0060  F013  FFE6   	movff	btemp+3,postinc1
  9087  018A74  EC45  F0AD         	call	___fldiv	;wreg free
  9088  018A78  0060  F007  FFE6   	movff	btemp,postinc1
  9089  018A7E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9090  018A84  0060  F00F  FFE6   	movff	btemp+2,postinc1
  9091  018A8A  0060  F013  FFE6   	movff	btemp+3,postinc1
  9092  018A90  EC52  F0A5         	call	___flmul	;wreg free
  9093  018A94  0060  F004  F88F   	movff	btemp,_C+144	;volatile
  9094  018A9A  0060  F008  F890   	movff	btemp+1,_C+145	;volatile
  9095  018AA0  0060  F00C  F891   	movff	btemp+2,_C+146	;volatile
  9096  018AA6  0060  F010  F892   	movff	btemp+3,_C+147	;volatile
  9097                           
  9098                           ;bsoc.c: 117:  C.dynamic_ah_adj = C.dynamic_ah;
  9099  018AAC  EE22  F08F         	lfsr	2,_C+144	;volatile
  9100  018AB0  006F FF78  F89B    	movff	postinc2,_C+156	;volatile
  9101  018AB6  006F FF78  F89C    	movff	postinc2,_C+157	;volatile
  9102  018ABC  006F FF78  F89D    	movff	postinc2,_C+158	;volatile
  9103  018AC2  006F FF74  F89E    	movff	postdec2,_C+159	;volatile
  9104                           
  9105                           ;bsoc.c: 118:  TMR3_SetInterruptHandler(calc_bsoc);
  9106  018AC8  0E36               	movlw	low _calc_bsoc
  9107  018ACA  6EE6               	movwf	postinc1,c
  9108  018ACC  0E40               	movlw	high _calc_bsoc
  9109  018ACE  6EE6               	movwf	postinc1,c
  9110  018AD0  0E01               	movlw	low (_calc_bsoc shr (0+16))
  9111  018AD2  6EE6               	movwf	postinc1,c
  9112  018AD4  EC19  F0EB         	call	_TMR3_SetInterruptHandler	;wreg free
  9113                           
  9114                           ; _init_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  9115  018AD8  0012               	return		;funcret
  9116  018ADA                     __end_of_init_bsoc:
  9117                           	opt callstack 0
  9118                           
  9119 ;; *************** function _Volts_to_SOC *****************
  9120 ;; Defined at:
  9121 ;;		line 175 in file "bsoc.c"
  9122 ;; Parameters:    Size  Location     Type
  9123 ;;  cvoltage        4  [STACK] const unsigned long 
  9124 ;; Auto vars:     Size  Location     Type
  9125 ;;  soc             2  [STACK] unsigned short 
  9126 ;;  slot            1  [STACK] unsigned char 
  9127 ;; Return value:  Size  Location     Type
  9128 ;;                  2  [STACK] unsigned short 
  9129 ;; Registers used:
  9130 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
  9131 ;; Tracked objects:
  9132 ;;		On entry : 0/1
  9133 ;;		On exit  : 0/0
  9134 ;;		Unchanged: 0/0
  9135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9136 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9137 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9138 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9139 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9140 ;;Total ram usage:        0 bytes
  9141 ;; Hardware stack levels used:    1
  9142 ;; Hardware stack levels required when called:   15
  9143 ;; This function calls:
  9144 ;;		Nothing
  9145 ;; This function is called by:
  9146 ;;		_init_bsoc
  9147 ;; This function uses a reentrant model
  9148 ;;
  9149                           
  9150                           	psect	text21
  9151  01B930                     __ptext21:
  9152                           	opt callstack 0
  9153  01B930                     _Volts_to_SOC:
  9154                           	opt callstack 0
  9155                           
  9156                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9157  01B930  52E6               	movf	postinc1,f,c
  9158  01B932  52E6               	movf	postinc1,f,c
  9159  01B934  52E6               	movf	postinc1,f,c
  9160                           
  9161                           ;bsoc.c: 175: uint16_t Volts_to_SOC(const uint32_t cvoltage);bsoc.c: 176: {;bsoc.c: 177:
      +                            uint8_t slot;;bsoc.c: 178:  uint16_t soc = 0;
  9162                           ;stkvar	_soc @ sp[(-3)+0]
  9163                           
  9164                           ;incstack = 0
  9165  01B936  0EFD               	movlw	-3
  9166  01B938  6AE3               	clrf	plusw1,c
  9167  01B93A  0EFE               	movlw	-2
  9168  01B93C  6AE3               	clrf	plusw1,c
  9169                           
  9170                           ;bsoc.c: 183:  for (slot = 0; slot < 26; slot++) {
  9171                           ;stkvar	_slot @ sp[(-3)+2]
  9172  01B93E  0EFF               	movlw	-1
  9173  01B940  6AE3               	clrf	plusw1,c
  9174  01B942                     l11824:
  9175                           
  9176                           ;bsoc.c: 184:   if (cvoltage > BVSOC_TABLE[slot][0]) {
  9177                           ;stkvar	_cvoltage @ sp[(-3)+-4]
  9178                           ;stkvar	_slot @ sp[(-3)+2]
  9179  01B942  0EFF               	movlw	-1
  9180  01B944  50E3               	movf	plusw1,w,c
  9181  01B946  0D08               	mullw	8
  9182  01B948  0E7D               	movlw	low _BVSOC_TABLE
  9183  01B94A  24F3               	addwf	243,w,c
  9184  01B94C  6EF6               	movwf	tblptrl,c
  9185  01B94E  0EF8               	movlw	high _BVSOC_TABLE
  9186  01B950  20F4               	addwfc	244,w,c
  9187  01B952  6EF7               	movwf	tblptrh,c
  9188  01B954                     	if	1	;There are 3 active tblptr bytes
  9189  01B954  6AF8               	clrf	tblptru,c
  9190  01B956  0E00               	movlw	low (__mediumconst shr (0+16))
  9191  01B958  22F8               	addwfc	tblptru,f,c
  9192  01B95A                     	endif
  9193  01B95A  0EF9               	movlw	-7
  9194  01B95C  50E3               	movf	plusw1,w,c
  9195  01B95E  0009               	tblrd		*+
  9196  01B960  5CF5               	subwf	tablat,w,c
  9197  01B962  0EFA               	movlw	-6
  9198  01B964  50E3               	movf	plusw1,w,c
  9199  01B966  0009               	tblrd		*+
  9200  01B968  58F5               	subwfb	tablat,w,c
  9201  01B96A  0EFB               	movlw	-5
  9202  01B96C  50E3               	movf	plusw1,w,c
  9203  01B96E  0009               	tblrd		*+
  9204  01B970  58F5               	subwfb	tablat,w,c
  9205  01B972  0EFC               	movlw	-4
  9206  01B974  50E3               	movf	plusw1,w,c
  9207  01B976  0009               	tblrd		*+
  9208  01B978  58F5               	subwfb	tablat,w,c
  9209  01B97A  B0D8               	btfsc	status,0,c
  9210  01B97C  D020               	goto	l11828
  9211                           
  9212                           ;bsoc.c: 185:    soc = BVSOC_TABLE[slot][1];
  9213                           ;stkvar	_slot @ sp[(-3)+2]
  9214  01B97E  0EFF               	movlw	-1
  9215  01B980  50E3               	movf	plusw1,w,c
  9216  01B982  0D08               	mullw	8
  9217  01B984  0E04               	movlw	4
  9218  01B986  26F3               	addwf	243,f,c
  9219  01B988  0E00               	movlw	0
  9220  01B98A  22F4               	addwfc	244,f,c
  9221  01B98C  0E7D               	movlw	low _BVSOC_TABLE
  9222  01B98E  24F3               	addwf	243,w,c
  9223  01B990  6EF6               	movwf	tblptrl,c
  9224  01B992  0EF8               	movlw	high _BVSOC_TABLE
  9225  01B994  20F4               	addwfc	244,w,c
  9226  01B996  6EF7               	movwf	tblptrh,c
  9227  01B998                     	if	1	;There are 3 active tblptr bytes
  9228  01B998  6AF8               	clrf	tblptru,c
  9229  01B99A  0E00               	movlw	low (__mediumconst shr (0+16))
  9230  01B99C  22F8               	addwfc	tblptru,f,c
  9231  01B99E                     	endif
  9232  01B99E  0009               	tblrd		*+
  9233  01B9A0  006F FFD4  F00B    	movff	tablat,btemp+10
  9234  01B9A6  0009               	tblrd		*+
  9235  01B9A8  006F FFD4  F00C    	movff	tablat,btemp+11
  9236                           
  9237                           ;stkvar	_soc @ sp[(-3)+0]
  9238  01B9AE  0EFD               	movlw	-3
  9239  01B9B0  0060  F02F  FFE3   	movff	btemp+10,plusw1
  9240  01B9B6  0EFE               	movlw	-2
  9241  01B9B8  0060  F033  FFE3   	movff	btemp+11,plusw1
  9242  01B9BE                     l11828:
  9243                           
  9244                           ;bsoc.c: 187:  }
  9245                           ;stkvar	_slot @ sp[(-3)+2]
  9246  01B9BE  0EFF               	movlw	-1
  9247  01B9C0  2AE3               	incf	plusw1,f,c
  9248                           
  9249                           ;stkvar	_slot @ sp[(-3)+2]
  9250  01B9C2  0EFF               	movlw	-1
  9251  01B9C4  006F FF8C  F001    	movff	plusw1,btemp
  9252  01B9CA  0E19               	movlw	25
  9253  01B9CC  6401               	cpfsgt	btemp^0,c
  9254  01B9CE  D7B9               	goto	l11824
  9255                           
  9256                           ;bsoc.c: 188:  return soc;
  9257                           ;stkvar	_soc @ sp[(-3)+0]
  9258  01B9D0  0EFD               	movlw	-3
  9259  01B9D2  006F FF8C  F001    	movff	plusw1,btemp
  9260  01B9D8  0EFE               	movlw	-2
  9261  01B9DA  006F FF8C  F002    	movff	plusw1,btemp+1
  9262                           
  9263                           ; _Volts_to_SOC: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, 
      +                          argsize = 4, vargsize = 0
  9264  01B9E0  0EF9               	movlw	249
  9265  01B9E2  26E1               	addwf	fsr1l,f,c
  9266  01B9E4  0EFF               	movlw	255
  9267  01B9E6  22E2               	addwfc	fsr1h,f,c
  9268  01B9E8  0012               	return		;funcret
  9269  01B9EA                     __end_of_Volts_to_SOC:
  9270                           	opt callstack 0
  9271                           
  9272 ;; *************** function _hid_display *****************
  9273 ;; Defined at:
  9274 ;;		line 22 in file "hid.c"
  9275 ;; Parameters:    Size  Location     Type
  9276 ;;  h               1  [STACK] PTR struct H_data
  9277 ;;		 -> H(9), 
  9278 ;; Auto vars:     Size  Location     Type
  9279 ;;		None
  9280 ;; Return value:  Size  Location     Type
  9281 ;;                  1  [STACK] PTR struct H_data
  9282 ;; Registers used:
  9283 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
  9284 ;; Tracked objects:
  9285 ;;		On entry : 3F/39
  9286 ;;		On exit  : 0/0
  9287 ;;		Unchanged: 0/0
  9288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9289 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9290 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9291 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9292 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9293 ;;Total ram usage:        0 bytes
  9294 ;; Hardware stack levels used:    1
  9295 ;; Hardware stack levels required when called:   17
  9296 ;; This function calls:
  9297 ;;		_hid_input
  9298 ;; This function is called by:
  9299 ;;		_main
  9300 ;; This function uses a reentrant model
  9301 ;;
  9302                           
  9303                           	psect	text22
  9304  01AA34                     __ptext22:
  9305                           	opt callstack 0
  9306  01AA34                     _hid_display:
  9307                           	opt callstack 13
  9308                           
  9309                           ;hid.c: 22: H_data* hid_display(H_data* h);hid.c: 23: {;hid.c: 24:  hid_input(h);
  9310                           ;stkvar	_h @ sp[(0)+-1]
  9311                           
  9312                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9313                           ;incstack = 0
  9314  01AA34  0EFF               	movlw	-1
  9315  01AA36  50E3               	movf	plusw1,w,c
  9316  01AA38  6EE6               	movwf	postinc1,c
  9317  01AA3A  EC3B  F0DA         	call	_hid_input	;wreg free
  9318                           
  9319                           ;hid.c: 26:  switch (h->h_state) {
  9320  01AA3E  D076               	goto	l12472
  9321  01AA40                     l12446:
  9322                           
  9323                           ;hid.c: 28:   h->h_state = H_STATE_DISPLAY;
  9324                           ;stkvar	_h @ sp[(0)+-1]
  9325  01AA40  0EFF               	movlw	-1
  9326  01AA42  50E3               	movf	plusw1,w,c
  9327  01AA44  6ED9               	movwf	fsr2l,c
  9328  01AA46  6ADA               	clrf	fsr2h,c
  9329  01AA48  0E01               	movlw	1
  9330  01AA4A  26D9               	addwf	fsr2l,f,c
  9331  01AA4C  0E01               	movlw	1
  9332  01AA4E  6EDF               	movwf	indf2,c
  9333                           
  9334                           ;hid.c: 29:   h->hid_display = HID_MAIN;
  9335                           ;stkvar	_h @ sp[(0)+-1]
  9336  01AA50  0EFF               	movlw	-1
  9337  01AA52  50E3               	movf	plusw1,w,c
  9338  01AA54  6ED9               	movwf	fsr2l,c
  9339  01AA56  6ADA               	clrf	fsr2h,c
  9340  01AA58  0E00               	movlw	0
  9341  01AA5A  6EDF               	movwf	indf2,c
  9342                           
  9343                           ;hid.c: 30:   h->wait_enter = 1;
  9344                           ;stkvar	_h @ sp[(0)+-1]
  9345  01AA5C  0EFF               	movlw	-1
  9346  01AA5E  50E3               	movf	plusw1,w,c
  9347  01AA60  6ED9               	movwf	fsr2l,c
  9348  01AA62  6ADA               	clrf	fsr2h,c
  9349  01AA64  0E04               	movlw	4
  9350  01AA66  26D9               	addwf	fsr2l,f,c
  9351  01AA68  0E01               	movlw	1
  9352  01AA6A  6EDF               	movwf	indf2,c
  9353                           
  9354                           ;hid.c: 31:   h->wait_select = 1;
  9355                           ;stkvar	_h @ sp[(0)+-1]
  9356  01AA6C  0EFF               	movlw	-1
  9357  01AA6E  50E3               	movf	plusw1,w,c
  9358  01AA70  6ED9               	movwf	fsr2l,c
  9359  01AA72  6ADA               	clrf	fsr2h,c
  9360  01AA74  0E02               	movlw	2
  9361  01AA76  26D9               	addwf	fsr2l,f,c
  9362  01AA78  0E01               	movlw	1
  9363  01AA7A  6EDF               	movwf	indf2,c
  9364                           
  9365                           ;hid.c: 32:   h->wait_calib = 1;
  9366                           ;stkvar	_h @ sp[(0)+-1]
  9367  01AA7C  0EFF               	movlw	-1
  9368  01AA7E  50E3               	movf	plusw1,w,c
  9369  01AA80  6ED9               	movwf	fsr2l,c
  9370  01AA82  6ADA               	clrf	fsr2h,c
  9371  01AA84  0E06               	movlw	6
  9372  01AA86  26D9               	addwf	fsr2l,f,c
  9373  01AA88  0E01               	movlw	1
  9374  01AA8A  6EDF               	movwf	indf2,c
  9375                           
  9376                           ;hid.c: 33:   h->select_p = SW_OFF;
  9377                           ;stkvar	_h @ sp[(0)+-1]
  9378  01AA8C  0EFF               	movlw	-1
  9379  01AA8E  50E3               	movf	plusw1,w,c
  9380  01AA90  6ED9               	movwf	fsr2l,c
  9381  01AA92  6ADA               	clrf	fsr2h,c
  9382  01AA94  0E03               	movlw	3
  9383  01AA96  26D9               	addwf	fsr2l,f,c
  9384  01AA98  0E00               	movlw	0
  9385  01AA9A  6EDF               	movwf	indf2,c
  9386                           
  9387                           ;hid.c: 34:   h->enter_p = SW_OFF;
  9388                           ;stkvar	_h @ sp[(0)+-1]
  9389  01AA9C  0EFF               	movlw	-1
  9390  01AA9E  50E3               	movf	plusw1,w,c
  9391  01AAA0  6ED9               	movwf	fsr2l,c
  9392  01AAA2  6ADA               	clrf	fsr2h,c
  9393  01AAA4  0E05               	movlw	5
  9394  01AAA6  26D9               	addwf	fsr2l,f,c
  9395  01AAA8  0E00               	movlw	0
  9396  01AAAA  6EDF               	movwf	indf2,c
  9397                           
  9398                           ;hid.c: 35:   h->calib_p = SW_OFF;
  9399                           ;stkvar	_h @ sp[(0)+-1]
  9400  01AAAC  0EFF               	movlw	-1
  9401  01AAAE  50E3               	movf	plusw1,w,c
  9402  01AAB0  6ED9               	movwf	fsr2l,c
  9403  01AAB2  6ADA               	clrf	fsr2h,c
  9404  01AAB4  0E07               	movlw	7
  9405  01AAB6  26D9               	addwf	fsr2l,f,c
  9406  01AAB8  0E00               	movlw	0
  9407  01AABA  D036               	goto	L5
  9408  01AABC                     l12462:
  9409                           
  9410                           ;hid.c: 39:   if (!h->wait_select && (h->select_p == SW_OFF)) {
  9411                           ;stkvar	_h @ sp[(0)+-1]
  9412  01AABC  0EFF               	movlw	-1
  9413  01AABE  50E3               	movf	plusw1,w,c
  9414  01AAC0  6ED9               	movwf	fsr2l,c
  9415  01AAC2  6ADA               	clrf	fsr2h,c
  9416  01AAC4  0E02               	movlw	2
  9417  01AAC6  26D9               	addwf	fsr2l,f,c
  9418  01AAC8  50DF               	movf	indf2,w,c
  9419  01AACA  A4D8               	btfss	status,2,c
  9420  01AACC  D042               	goto	l2251
  9421                           
  9422                           ;stkvar	_h @ sp[(0)+-1]
  9423  01AACE  0EFF               	movlw	-1
  9424  01AAD0  50E3               	movf	plusw1,w,c
  9425  01AAD2  6ED9               	movwf	fsr2l,c
  9426  01AAD4  6ADA               	clrf	fsr2h,c
  9427  01AAD6  0E03               	movlw	3
  9428  01AAD8  26D9               	addwf	fsr2l,f,c
  9429  01AADA  50DF               	movf	indf2,w,c
  9430  01AADC  A4D8               	btfss	status,2,c
  9431  01AADE  D039               	goto	l2251
  9432                           
  9433                           ;hid.c: 40:    h->sequence = ++h->sequence & 0x3;
  9434                           ;stkvar	_h @ sp[(0)+-1]
  9435  01AAE0  0EFF               	movlw	-1
  9436  01AAE2  50E3               	movf	plusw1,w,c
  9437  01AAE4  6ED9               	movwf	fsr2l,c
  9438  01AAE6  6ADA               	clrf	fsr2h,c
  9439  01AAE8  0E08               	movlw	8
  9440  01AAEA  26D9               	addwf	fsr2l,f,c
  9441                           
  9442                           ;stkvar	_h @ sp[(0)+-1]
  9443  01AAEC  0EFF               	movlw	-1
  9444  01AAEE  50E3               	movf	plusw1,w,c
  9445  01AAF0  6EE9               	movwf	fsr0l,c
  9446  01AAF2  6AEA               	clrf	fsr0h,c
  9447  01AAF4  0E08               	movlw	8
  9448  01AAF6  26E9               	addwf	fsr0l,f,c
  9449  01AAF8  2AEF               	incf	indf0,f,c
  9450  01AAFA  50EF               	movf	indf0,w,c
  9451  01AAFC  0B03               	andlw	3
  9452  01AAFE  6EDF               	movwf	indf2,c
  9453                           
  9454                           ;hid.c: 41:    h->hid_display = h->sequence;
  9455                           ;stkvar	_h @ sp[(0)+-1]
  9456  01AB00  0EFF               	movlw	-1
  9457  01AB02  50E3               	movf	plusw1,w,c
  9458  01AB04  6ED9               	movwf	fsr2l,c
  9459  01AB06  6ADA               	clrf	fsr2h,c
  9460  01AB08  0E08               	movlw	8
  9461  01AB0A  26D9               	addwf	fsr2l,f,c
  9462                           
  9463                           ;stkvar	_h @ sp[(0)+-1]
  9464  01AB0C  0EFF               	movlw	-1
  9465  01AB0E  50E3               	movf	plusw1,w,c
  9466  01AB10  6EE9               	movwf	fsr0l,c
  9467  01AB12  6AEA               	clrf	fsr0h,c
  9468  01AB14  006F FF7F FFEF     	movff	indf2,indf0
  9469                           
  9470                           ;hid.c: 42:    h->wait_select = 1;
  9471                           ;stkvar	_h @ sp[(0)+-1]
  9472  01AB1A  0EFF               	movlw	-1
  9473  01AB1C  50E3               	movf	plusw1,w,c
  9474  01AB1E  6ED9               	movwf	fsr2l,c
  9475  01AB20  6ADA               	clrf	fsr2h,c
  9476  01AB22  0E02               	movlw	2
  9477  01AB24  26D9               	addwf	fsr2l,f,c
  9478  01AB26  0E01               	movlw	1
  9479  01AB28                     L5:
  9480  01AB28  6EDF               	movwf	indf2,c
  9481  01AB2A  D013               	goto	l2251
  9482  01AB2C                     l12472:
  9483                           
  9484                           ;stkvar	_h @ sp[(0)+-1]
  9485  01AB2C  0EFF               	movlw	-1
  9486  01AB2E  50E3               	movf	plusw1,w,c
  9487  01AB30  6ED9               	movwf	fsr2l,c
  9488  01AB32  6ADA               	clrf	fsr2h,c
  9489  01AB34  0E01               	movlw	1
  9490  01AB36  26D9               	addwf	fsr2l,f,c
  9491  01AB38  50DF               	movf	indf2,w,c
  9492  01AB3A  6E0B               	movwf	(btemp+10)^0,c
  9493  01AB3C  6A0C               	clrf	(btemp+11)^0,c
  9494                           
  9495                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9496                           ; Switch size 1, requested type "simple"
  9497                           ; Number of cases is 1, Range of values is 0 to 0
  9498                           ; switch strategies available:
  9499                           ; Name         Instructions Cycles
  9500                           ; simple_byte            4     3 (average)
  9501                           ;	Chosen strategy is simple_byte
  9502  01AB3E  500C               	movf	(btemp+11)^0,w,c
  9503  01AB40  0A00               	xorlw	0	; case 0
  9504  01AB42  A4D8               	btfss	status,2,c
  9505  01AB44  D7BB               	goto	l12462
  9506                           
  9507                           ; Switch size 1, requested type "simple"
  9508                           ; Number of cases is 2, Range of values is 0 to 1
  9509                           ; switch strategies available:
  9510                           ; Name         Instructions Cycles
  9511                           ; simple_byte            7     4 (average)
  9512                           ;	Chosen strategy is simple_byte
  9513  01AB46  500B               	movf	(btemp+10)^0,w,c
  9514  01AB48  0A00               	xorlw	0	; case 0
  9515  01AB4A  B4D8               	btfsc	status,2,c
  9516  01AB4C  D779               	goto	l12446
  9517  01AB4E  0A01               	xorlw	1	; case 1
  9518  01AB50  D7B5               	goto	l12462
  9519  01AB52                     l2251:
  9520                           
  9521                           ; _hid_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, a
      +                          rgsize = 1, vargsize = 0
  9522  01AB52  52E5               	movf	postdec1,f,c
  9523  01AB54  0012               	return		;funcret
  9524  01AB56                     __end_of_hid_display:
  9525                           	opt callstack 0
  9526                           
  9527 ;; *************** function _hid_input *****************
  9528 ;; Defined at:
  9529 ;;		line 3 in file "hid.c"
  9530 ;; Parameters:    Size  Location     Type
  9531 ;;  h               1  [STACK] PTR struct H_data
  9532 ;;		 -> H(9), 
  9533 ;; Auto vars:     Size  Location     Type
  9534 ;;		None
  9535 ;; Return value:  Size  Location     Type
  9536 ;;                  1  [STACK] PTR struct H_data
  9537 ;; Registers used:
  9538 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+11, prodl, prodh
  9539 ;; Tracked objects:
  9540 ;;		On entry : 0/39
  9541 ;;		On exit  : 0/0
  9542 ;;		Unchanged: 0/0
  9543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9544 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9545 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9546 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9547 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9548 ;;Total ram usage:        0 bytes
  9549 ;; Hardware stack levels used:    1
  9550 ;; Hardware stack levels required when called:   16
  9551 ;; This function calls:
  9552 ;;		_get_switch
  9553 ;; This function is called by:
  9554 ;;		_hid_display
  9555 ;; This function uses a reentrant model
  9556 ;;
  9557                           
  9558                           	psect	text23
  9559  01B476                     __ptext23:
  9560                           	opt callstack 0
  9561  01B476                     _hid_input:
  9562                           	opt callstack 13
  9563                           
  9564                           ;hid.c: 3: H_data* hid_input(H_data* h);hid.c: 4: {;hid.c: 5:  if (get_switch(SSELECT)) 
      +                          {
  9565                           
  9566                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9567                           ;incstack = 0
  9568  01B476  0E02               	movlw	2
  9569  01B478  6EE6               	movwf	postinc1,c
  9570  01B47A  EC35  F0EA         	call	_get_switch	;wreg free
  9571  01B47E  5001               	movf	btemp^0,w,c
  9572  01B480  B4D8               	btfsc	status,2,c
  9573  01B482  D01C               	goto	l11728
  9574                           
  9575                           ;hid.c: 6:   h->wait_select = 0;
  9576                           ;stkvar	_h @ sp[(0)+-1]
  9577  01B484  0EFF               	movlw	-1
  9578  01B486  50E3               	movf	plusw1,w,c
  9579  01B488  6ED9               	movwf	fsr2l,c
  9580  01B48A  6ADA               	clrf	fsr2h,c
  9581  01B48C  0E02               	movlw	2
  9582  01B48E  26D9               	addwf	fsr2l,f,c
  9583  01B490  0E00               	movlw	0
  9584  01B492  6EDF               	movwf	indf2,c
  9585                           
  9586                           ;hid.c: 7:   h->select_p = get_switch(SSELECT);
  9587  01B494  0E02               	movlw	2
  9588  01B496  6EE6               	movwf	postinc1,c
  9589  01B498  EC35  F0EA         	call	_get_switch	;wreg free
  9590  01B49C  5001               	movf	btemp^0,w,c
  9591  01B49E  B4D8               	btfsc	status,2,c
  9592  01B4A0  D003               	goto	u10720
  9593  01B4A2  6A0C               	clrf	(btemp+11)^0,c
  9594  01B4A4  2A0C               	incf	(btemp+11)^0,f,c
  9595  01B4A6  D001               	goto	u10738
  9596  01B4A8                     u10720:
  9597  01B4A8  6A0C               	clrf	(btemp+11)^0,c
  9598  01B4AA                     u10738:
  9599                           
  9600                           ;stkvar	_h @ sp[(0)+-1]
  9601  01B4AA  0EFF               	movlw	-1
  9602  01B4AC  50E3               	movf	plusw1,w,c
  9603  01B4AE  6ED9               	movwf	fsr2l,c
  9604  01B4B0  6ADA               	clrf	fsr2h,c
  9605  01B4B2  0E03               	movlw	3
  9606  01B4B4  26D9               	addwf	fsr2l,f,c
  9607  01B4B6  0060  F033  FFDF   	movff	btemp+11,indf2
  9608  01B4BC                     l11728:
  9609                           
  9610                           ;hid.c: 10:  if (get_switch(SENTER)) {
  9611  01B4BC  0E03               	movlw	3
  9612  01B4BE  6EE6               	movwf	postinc1,c
  9613  01B4C0  EC35  F0EA         	call	_get_switch	;wreg free
  9614  01B4C4  5001               	movf	btemp^0,w,c
  9615  01B4C6  B4D8               	btfsc	status,2,c
  9616  01B4C8  D01C               	goto	l11734
  9617                           
  9618                           ;hid.c: 11:   h->wait_enter = 0;
  9619                           ;stkvar	_h @ sp[(0)+-1]
  9620  01B4CA  0EFF               	movlw	-1
  9621  01B4CC  50E3               	movf	plusw1,w,c
  9622  01B4CE  6ED9               	movwf	fsr2l,c
  9623  01B4D0  6ADA               	clrf	fsr2h,c
  9624  01B4D2  0E04               	movlw	4
  9625  01B4D4  26D9               	addwf	fsr2l,f,c
  9626  01B4D6  0E00               	movlw	0
  9627  01B4D8  6EDF               	movwf	indf2,c
  9628                           
  9629                           ;hid.c: 12:   h->enter_p = get_switch(SENTER);
  9630  01B4DA  0E03               	movlw	3
  9631  01B4DC  6EE6               	movwf	postinc1,c
  9632  01B4DE  EC35  F0EA         	call	_get_switch	;wreg free
  9633  01B4E2  5001               	movf	btemp^0,w,c
  9634  01B4E4  B4D8               	btfsc	status,2,c
  9635  01B4E6  D003               	goto	u10750
  9636  01B4E8  6A0C               	clrf	(btemp+11)^0,c
  9637  01B4EA  2A0C               	incf	(btemp+11)^0,f,c
  9638  01B4EC  D001               	goto	u10768
  9639  01B4EE                     u10750:
  9640  01B4EE  6A0C               	clrf	(btemp+11)^0,c
  9641  01B4F0                     u10768:
  9642                           
  9643                           ;stkvar	_h @ sp[(0)+-1]
  9644  01B4F0  0EFF               	movlw	-1
  9645  01B4F2  50E3               	movf	plusw1,w,c
  9646  01B4F4  6ED9               	movwf	fsr2l,c
  9647  01B4F6  6ADA               	clrf	fsr2h,c
  9648  01B4F8  0E05               	movlw	5
  9649  01B4FA  26D9               	addwf	fsr2l,f,c
  9650  01B4FC  0060  F033  FFDF   	movff	btemp+11,indf2
  9651  01B502                     l11734:
  9652                           
  9653                           ;hid.c: 15:  if (get_switch(SCALIB)) {
  9654  01B502  0E04               	movlw	4
  9655  01B504  6EE6               	movwf	postinc1,c
  9656  01B506  EC35  F0EA         	call	_get_switch	;wreg free
  9657  01B50A  5001               	movf	btemp^0,w,c
  9658  01B50C  B4D8               	btfsc	status,2,c
  9659  01B50E  D01C               	goto	l2242
  9660                           
  9661                           ;hid.c: 16:   h->wait_calib = 0;
  9662                           ;stkvar	_h @ sp[(0)+-1]
  9663  01B510  0EFF               	movlw	-1
  9664  01B512  50E3               	movf	plusw1,w,c
  9665  01B514  6ED9               	movwf	fsr2l,c
  9666  01B516  6ADA               	clrf	fsr2h,c
  9667  01B518  0E06               	movlw	6
  9668  01B51A  26D9               	addwf	fsr2l,f,c
  9669  01B51C  0E00               	movlw	0
  9670  01B51E  6EDF               	movwf	indf2,c
  9671                           
  9672                           ;hid.c: 17:   h->calib_p = get_switch(SCALIB);
  9673  01B520  0E04               	movlw	4
  9674  01B522  6EE6               	movwf	postinc1,c
  9675  01B524  EC35  F0EA         	call	_get_switch	;wreg free
  9676  01B528  5001               	movf	btemp^0,w,c
  9677  01B52A  B4D8               	btfsc	status,2,c
  9678  01B52C  D003               	goto	u10780
  9679  01B52E  6A0C               	clrf	(btemp+11)^0,c
  9680  01B530  2A0C               	incf	(btemp+11)^0,f,c
  9681  01B532  D001               	goto	u10798
  9682  01B534                     u10780:
  9683  01B534  6A0C               	clrf	(btemp+11)^0,c
  9684  01B536                     u10798:
  9685                           
  9686                           ;stkvar	_h @ sp[(0)+-1]
  9687  01B536  0EFF               	movlw	-1
  9688  01B538  50E3               	movf	plusw1,w,c
  9689  01B53A  6ED9               	movwf	fsr2l,c
  9690  01B53C  6ADA               	clrf	fsr2h,c
  9691  01B53E  0E07               	movlw	7
  9692  01B540  26D9               	addwf	fsr2l,f,c
  9693  01B542  0060  F033  FFDF   	movff	btemp+11,indf2
  9694  01B548                     l2242:
  9695                           
  9696                           ; _hid_input: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
  9697  01B548  52E5               	movf	postdec1,f,c
  9698  01B54A  0012               	return		;funcret
  9699  01B54C                     __end_of_hid_input:
  9700                           	opt callstack 0
  9701                           
  9702 ;; *************** function _esr_check *****************
  9703 ;; Defined at:
  9704 ;;		line 197 in file "bsoc.c"
  9705 ;; Parameters:    Size  Location     Type
  9706 ;;  fsm             1  [STACK] const unsigned char 
  9707 ;; Auto vars:     Size  Location     Type
  9708 ;;		None
  9709 ;; Return value:  Size  Location     Type
  9710 ;;                  4  [STACK] float 
  9711 ;; Registers used:
  9712 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  9713 ;; Tracked objects:
  9714 ;;		On entry : 0/0
  9715 ;;		On exit  : 0/0
  9716 ;;		Unchanged: 0/0
  9717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9718 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9719 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9720 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9721 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9722 ;;Total ram usage:        0 bytes
  9723 ;; Hardware stack levels used:    1
  9724 ;; Hardware stack levels required when called:   18
  9725 ;; This function calls:
  9726 ;;		_StartTimer
  9727 ;;		_TimerDone
  9728 ;;		___fldiv
  9729 ;;		___flsub
  9730 ;;		_conv_raw_result
  9731 ;;		_fabsf
  9732 ;;		_set_load_relay_one
  9733 ;;		_set_load_relay_two
  9734 ;;		_update_adc_result
  9735 ;; This function is called by:
  9736 ;;		_main
  9737 ;; This function uses a reentrant model
  9738 ;;
  9739                           
  9740                           	psect	text24
  9741  017E0A                     __ptext24:
  9742                           	opt callstack 0
  9743  017E0A                     _esr_check:
  9744                           	opt callstack 12
  9745                           
  9746                           ;bsoc.c: 197: float esr_check(const uint8_t fsm);bsoc.c: 198: {;bsoc.c: 199:  static uin
      +                          t8_t esr_state = 0;;bsoc.c: 201:  if (fsm) {
  9747                           ;stkvar	_fsm @ sp[(0)+-1]
  9748                           
  9749                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9750                           ;incstack = 0
  9751  017E0A  0EFF               	movlw	-1
  9752  017E0C  50E3               	movf	plusw1,w,c
  9753  017E0E  B4D8               	btfsc	status,2,c
  9754  017E10  D149               	goto	l12230
  9755                           
  9756                           ;bsoc.c: 202:   esr_state = 0;
  9757  017E12  0100               	movlb	0	; () banked
  9758  017E14  6BCA               	clrf	esr_check@esr_state& (0+255),b
  9759                           
  9760                           ; BSR set to: 0
  9761                           ;bsoc.c: 203:   return -10.0;
  9762  017E16  0E00               	movlw	0
  9763  017E18  6E01               	movwf	btemp^0,c
  9764  017E1A  0E00               	movlw	0
  9765  017E1C  6E02               	movwf	(btemp+1)^0,c
  9766  017E1E  0E20               	movlw	32
  9767  017E20  6E03               	movwf	(btemp+2)^0,c
  9768  017E22  0EC1               	movlw	193
  9769  017E24  D15B               	goto	L6
  9770  017E26                     l12162:
  9771                           
  9772                           ; BSR set to: 0
  9773                           ;bsoc.c: 208:   StartTimer(TMR_ESR, 10000);
  9774  017E26  0E10               	movlw	16
  9775  017E28  6EE6               	movwf	postinc1,c
  9776  017E2A  0E27               	movlw	39
  9777  017E2C  6EE6               	movwf	postinc1,c
  9778  017E2E  0E0C               	movlw	12
  9779  017E30  6EE6               	movwf	postinc1,c
  9780  017E32  EC13  F0E8         	call	_StartTimer	;wreg free
  9781  017E36                     l12164:
  9782                           
  9783                           ;bsoc.c: 209:   esr_state++;
  9784  017E36  0100               	movlb	0	; () banked
  9785  017E38  2BCA               	incf	esr_check@esr_state& (0+255),f,b
  9786                           
  9787                           ;bsoc.c: 210:   break;
  9788  017E3A  D149               	goto	l12232
  9789  017E3C                     l12166:
  9790                           
  9791                           ; BSR set to: 0
  9792                           ;bsoc.c: 215:   set_load_relay_one(0);
  9793  017E3C  0E00               	movlw	0
  9794  017E3E  6EE6               	movwf	postinc1,c
  9795  017E40  EC3C  F0ED         	call	_set_load_relay_one	;wreg free
  9796                           
  9797                           ;bsoc.c: 216:   set_load_relay_two(0);
  9798  017E44  0E00               	movlw	0
  9799  017E46  6EE6               	movwf	postinc1,c
  9800  017E48  EC34  F0ED         	call	_set_load_relay_two	;wreg free
  9801                           
  9802                           ;bsoc.c: 217:   if (TimerDone(TMR_ESR)) {
  9803  017E4C  0E0C               	movlw	12
  9804  017E4E  6EE6               	movwf	postinc1,c
  9805  017E50  ECA1  F0EA         	call	_TimerDone	;wreg free
  9806  017E54  5001               	movf	btemp^0,w,c
  9807  017E56  B4D8               	btfsc	status,2,c
  9808  017E58  D009               	goto	l12172
  9809                           
  9810                           ;bsoc.c: 218:    StartTimer(TMR_ESR, 10000);
  9811  017E5A  0E10               	movlw	16
  9812  017E5C  6EE6               	movwf	postinc1,c
  9813  017E5E  0E27               	movlw	39
  9814  017E60  6EE6               	movwf	postinc1,c
  9815  017E62  0E0C               	movlw	12
  9816  017E64  6EE6               	movwf	postinc1,c
  9817  017E66  EC13  F0E8         	call	_StartTimer	;wreg free
  9818                           
  9819                           ;bsoc.c: 219:   } else {
  9820  017E6A  D006               	goto	l12176
  9821  017E6C                     l12172:
  9822                           
  9823                           ;bsoc.c: 220:    return -2.0;
  9824  017E6C  0E00               	movlw	0
  9825  017E6E  6E01               	movwf	btemp^0,c
  9826  017E70  0E00               	movlw	0
  9827  017E72  6E02               	movwf	(btemp+1)^0,c
  9828  017E74  0E00               	movlw	0
  9829  017E76  D066               	goto	L8
  9830  017E78                     l12176:
  9831                           
  9832                           ;bsoc.c: 225:   update_adc_result();
  9833  017E78  ECB3  F0E8         	call	_update_adc_result	;wreg free
  9834                           
  9835                           ;bsoc.c: 226:   C.bv_noload = conv_raw_result(V_BAT, CONV);
  9836  017E7C  0E00               	movlw	0
  9837  017E7E  6EE6               	movwf	postinc1,c
  9838  017E80  0E04               	movlw	4
  9839  017E82  6EE6               	movwf	postinc1,c
  9840  017E84  EC02  F0B0         	call	_conv_raw_result	;wreg free
  9841  017E88  0060  F004  F915   	movff	btemp,_C+278	;volatile
  9842  017E8E  0060  F008  F916   	movff	btemp+1,_C+279	;volatile
  9843  017E94  0060  F00C  F917   	movff	btemp+2,_C+280	;volatile
  9844  017E9A  0060  F010  F918   	movff	btemp+3,_C+281	;volatile
  9845  017EA0  D7CA               	goto	l12164
  9846  017EA2                     l12182:
  9847                           
  9848                           ; BSR set to: 0
  9849                           ;bsoc.c: 230:   set_load_relay_one(1);
  9850  017EA2  0E01               	movlw	1
  9851  017EA4  6EE6               	movwf	postinc1,c
  9852  017EA6  EC3C  F0ED         	call	_set_load_relay_one	;wreg free
  9853                           
  9854                           ;bsoc.c: 231:   if (TimerDone(TMR_ESR)) {
  9855  017EAA  0E0C               	movlw	12
  9856  017EAC  6EE6               	movwf	postinc1,c
  9857  017EAE  ECA1  F0EA         	call	_TimerDone	;wreg free
  9858  017EB2  5001               	movf	btemp^0,w,c
  9859  017EB4  B4D8               	btfsc	status,2,c
  9860  017EB6  D009               	goto	l12188
  9861                           
  9862                           ;bsoc.c: 232:    StartTimer(TMR_ESR, 10000);
  9863  017EB8  0E10               	movlw	16
  9864  017EBA  6EE6               	movwf	postinc1,c
  9865  017EBC  0E27               	movlw	39
  9866  017EBE  6EE6               	movwf	postinc1,c
  9867  017EC0  0E0C               	movlw	12
  9868  017EC2  6EE6               	movwf	postinc1,c
  9869  017EC4  EC13  F0E8         	call	_StartTimer	;wreg free
  9870                           
  9871                           ;bsoc.c: 233:   } else {
  9872  017EC8  D006               	goto	l12192
  9873  017ECA                     l12188:
  9874                           
  9875                           ;bsoc.c: 234:    return -3.0;
  9876  017ECA  0E00               	movlw	0
  9877  017ECC  6E01               	movwf	btemp^0,c
  9878  017ECE  0E00               	movlw	0
  9879  017ED0  6E02               	movwf	(btemp+1)^0,c
  9880  017ED2  0E40               	movlw	64
  9881  017ED4  D037               	goto	L8
  9882  017ED6                     l12192:
  9883                           
  9884                           ;bsoc.c: 237:   update_adc_result();
  9885  017ED6  ECB3  F0E8         	call	_update_adc_result	;wreg free
  9886                           
  9887                           ;bsoc.c: 238:   C.bv_one_load = conv_raw_result(V_BAT, CONV);
  9888  017EDA  0E00               	movlw	0
  9889  017EDC  6EE6               	movwf	postinc1,c
  9890  017EDE  0E04               	movlw	4
  9891  017EE0  6EE6               	movwf	postinc1,c
  9892  017EE2  EC02  F0B0         	call	_conv_raw_result	;wreg free
  9893  017EE6  0060  F004  F919   	movff	btemp,_C+282	;volatile
  9894  017EEC  0060  F008  F91A   	movff	btemp+1,_C+283	;volatile
  9895  017EF2  0060  F00C  F91B   	movff	btemp+2,_C+284	;volatile
  9896  017EF8  0060  F010  F91C   	movff	btemp+3,_C+285	;volatile
  9897                           
  9898                           ;bsoc.c: 239:   C.load_i1 = conv_raw_result(C_BATT, CONV);
  9899  017EFE  0E00               	movlw	0
  9900  017F00  6EE6               	movwf	postinc1,c
  9901  017F02  0E00               	movlw	0
  9902  017F04  6EE6               	movwf	postinc1,c
  9903  017F06  EC02  F0B0         	call	_conv_raw_result	;wreg free
  9904  017F0A  0060  F004  F90D   	movff	btemp,_C+270	;volatile
  9905  017F10  0060  F008  F90E   	movff	btemp+1,_C+271	;volatile
  9906  017F16  0060  F00C  F90F   	movff	btemp+2,_C+272	;volatile
  9907  017F1C  0060  F010  F910   	movff	btemp+3,_C+273	;volatile
  9908  017F22  D789               	goto	l12164
  9909  017F24                     l12200:
  9910                           
  9911                           ; BSR set to: 0
  9912                           ;bsoc.c: 243:   set_load_relay_two(1);
  9913  017F24  0E01               	movlw	1
  9914  017F26  6EE6               	movwf	postinc1,c
  9915  017F28  EC34  F0ED         	call	_set_load_relay_two	;wreg free
  9916                           
  9917                           ;bsoc.c: 244:   if (!TimerDone(TMR_ESR))
  9918  017F2C  0E0C               	movlw	12
  9919  017F2E  6EE6               	movwf	postinc1,c
  9920  017F30  ECA1  F0EA         	call	_TimerDone	;wreg free
  9921  017F34  5001               	movf	btemp^0,w,c
  9922  017F36  A4D8               	btfss	status,2,c
  9923  017F38  D008               	goto	l12208
  9924                           
  9925                           ;bsoc.c: 245:    return -4.0;
  9926  017F3A  0E00               	movlw	0
  9927  017F3C  6E01               	movwf	btemp^0,c
  9928  017F3E  0E00               	movlw	0
  9929  017F40  6E02               	movwf	(btemp+1)^0,c
  9930  017F42  0E80               	movlw	128
  9931  017F44                     L8:
  9932  017F44  6E03               	movwf	(btemp+2)^0,c
  9933  017F46  0EC0               	movlw	192
  9934  017F48  D0C9               	goto	L6
  9935  017F4A                     l12208:
  9936                           
  9937                           ;bsoc.c: 247:   update_adc_result();
  9938  017F4A  ECB3  F0E8         	call	_update_adc_result	;wreg free
  9939                           
  9940                           ;bsoc.c: 248:   C.bv_full_load = conv_raw_result(V_BAT, CONV);
  9941  017F4E  0E00               	movlw	0
  9942  017F50  6EE6               	movwf	postinc1,c
  9943  017F52  0E04               	movlw	4
  9944  017F54  6EE6               	movwf	postinc1,c
  9945  017F56  EC02  F0B0         	call	_conv_raw_result	;wreg free
  9946  017F5A  0060  F004  F91D   	movff	btemp,_C+286	;volatile
  9947  017F60  0060  F008  F91E   	movff	btemp+1,_C+287	;volatile
  9948  017F66  0060  F00C  F91F   	movff	btemp+2,_C+288	;volatile
  9949  017F6C  0060  F010  F920   	movff	btemp+3,_C+289	;volatile
  9950                           
  9951                           ;bsoc.c: 249:   C.load_i2 = conv_raw_result(C_BATT, CONV);
  9952  017F72  0E00               	movlw	0
  9953  017F74  6EE6               	movwf	postinc1,c
  9954  017F76  0E00               	movlw	0
  9955  017F78  6EE6               	movwf	postinc1,c
  9956  017F7A  EC02  F0B0         	call	_conv_raw_result	;wreg free
  9957  017F7E  0060  F004  F911   	movff	btemp,_C+274	;volatile
  9958  017F84  0060  F008  F912   	movff	btemp+1,_C+275	;volatile
  9959  017F8A  0060  F00C  F913   	movff	btemp+2,_C+276	;volatile
  9960  017F90  0060  F010  F914   	movff	btemp+3,_C+277	;volatile
  9961                           
  9962                           ;bsoc.c: 251:   C.esr = fabsf((C.bv_one_load - C.bv_full_load) / (C.load_i1 - C.load_i2)
      +                          );
  9963  017F96  EE22  F111         	lfsr	2,_C+274	;volatile
  9964  017F9A  006F FF7B FFE6     	movff	postinc2,postinc1
  9965  017FA0  006F FF7B FFE6     	movff	postinc2,postinc1
  9966  017FA6  006F FF7B FFE6     	movff	postinc2,postinc1
  9967  017FAC  006F FF7B FFE6     	movff	postinc2,postinc1
  9968  017FB2  EE22  F10D         	lfsr	2,_C+270	;volatile
  9969  017FB6  006F FF7B FFE6     	movff	postinc2,postinc1
  9970  017FBC  006F FF7B FFE6     	movff	postinc2,postinc1
  9971  017FC2  006F FF7B FFE6     	movff	postinc2,postinc1
  9972  017FC8  006F FF7B FFE6     	movff	postinc2,postinc1
  9973  017FCE  EC6D  F0E7         	call	___flsub	;wreg free
  9974  017FD2  0060  F007  FFE6   	movff	btemp,postinc1
  9975  017FD8  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9976  017FDE  0060  F00F  FFE6   	movff	btemp+2,postinc1
  9977  017FE4  0060  F013  FFE6   	movff	btemp+3,postinc1
  9978  017FEA  EE22  F11D         	lfsr	2,_C+286	;volatile
  9979  017FEE  006F FF7B FFE6     	movff	postinc2,postinc1
  9980  017FF4  006F FF7B FFE6     	movff	postinc2,postinc1
  9981  017FFA  006F FF7B FFE6     	movff	postinc2,postinc1
  9982  018000  006F FF7B FFE6     	movff	postinc2,postinc1
  9983  018006  EE22  F119         	lfsr	2,_C+282	;volatile
  9984  01800A  006F FF7B FFE6     	movff	postinc2,postinc1
  9985  018010  006F FF7B FFE6     	movff	postinc2,postinc1
  9986  018016  006F FF7B FFE6     	movff	postinc2,postinc1
  9987  01801C  006F FF7B FFE6     	movff	postinc2,postinc1
  9988  018022  EC6D  F0E7         	call	___flsub	;wreg free
  9989  018026  0060  F007  FFE6   	movff	btemp,postinc1
  9990  01802C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9991  018032  0060  F00F  FFE6   	movff	btemp+2,postinc1
  9992  018038  0060  F013  FFE6   	movff	btemp+3,postinc1
  9993  01803E  EC45  F0AD         	call	___fldiv	;wreg free
  9994  018042  0060  F007  FFE6   	movff	btemp,postinc1
  9995  018048  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9996  01804E  0060  F00F  FFE6   	movff	btemp+2,postinc1
  9997  018054  0060  F013  FFE6   	movff	btemp+3,postinc1
  9998  01805A  ECAC  F0DD         	call	_fabsf	;wreg free
  9999  01805E  0060  F004  F887   	movff	btemp,_C+136	;volatile
 10000  018064  0060  F008  F888   	movff	btemp+1,_C+137	;volatile
 10001  01806A  0060  F00C  F889   	movff	btemp+2,_C+138	;volatile
 10002  018070  0060  F010  F88A   	movff	btemp+3,_C+139	;volatile
 10003                           
 10004                           ;bsoc.c: 252:   set_load_relay_one(0);
 10005  018076  0E00               	movlw	0
 10006  018078  6EE6               	movwf	postinc1,c
 10007  01807A  EC3C  F0ED         	call	_set_load_relay_one	;wreg free
 10008                           
 10009                           ;bsoc.c: 253:   set_load_relay_two(0);
 10010  01807E  0E00               	movlw	0
 10011  018080  6EE6               	movwf	postinc1,c
 10012  018082  EC34  F0ED         	call	_set_load_relay_two	;wreg free
 10013                           
 10014                           ;bsoc.c: 254:   esr_state = 0;
 10015  018086  0100               	movlb	0	; () banked
 10016  018088  6BCA               	clrf	esr_check@esr_state& (0+255),b
 10017                           
 10018                           ; BSR set to: 0
 10019                           ;bsoc.c: 255:   return C.esr;
 10020  01808A  0062  F21C  F001   	movff	_C+136,btemp	;volatile
 10021  018090  0062  F220  F002   	movff	_C+137,btemp+1	;volatile
 10022  018096  0062  F224  F003   	movff	_C+138,btemp+2	;volatile
 10023  01809C  0062  F228  F004   	movff	_C+139,btemp+3	;volatile
 10024  0180A2  D01D               	goto	l2367
 10025  0180A4                     l12230:
 10026  0180A4  0100               	movlb	0	; () banked
 10027  0180A6  51CA               	movf	esr_check@esr_state& (0+255),w,b
 10028  0180A8  6E0B               	movwf	(btemp+10)^0,c
 10029  0180AA  6A0C               	clrf	(btemp+11)^0,c
 10030                           
 10031                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10032                           ; Switch size 1, requested type "simple"
 10033                           ; Number of cases is 1, Range of values is 0 to 0
 10034                           ; switch strategies available:
 10035                           ; Name         Instructions Cycles
 10036                           ; simple_byte            4     3 (average)
 10037                           ;	Chosen strategy is simple_byte
 10038  0180AC  500C               	movf	(btemp+11)^0,w,c
 10039  0180AE  0A00               	xorlw	0	; case 0
 10040  0180B0  A4D8               	btfss	status,2,c
 10041  0180B2  D00D               	goto	l12232
 10042                           
 10043                           ; BSR set to: 0
 10044                           ; Switch size 1, requested type "simple"
 10045                           ; Number of cases is 4, Range of values is 0 to 3
 10046                           ; switch strategies available:
 10047                           ; Name         Instructions Cycles
 10048                           ; simple_byte           13     7 (average)
 10049                           ;	Chosen strategy is simple_byte
 10050  0180B4  500B               	movf	(btemp+10)^0,w,c
 10051  0180B6  0A00               	xorlw	0	; case 0
 10052  0180B8  B4D8               	btfsc	status,2,c
 10053  0180BA  D6B5               	goto	l12162
 10054  0180BC  0A01               	xorlw	1	; case 1
 10055  0180BE  B4D8               	btfsc	status,2,c
 10056  0180C0  D6BD               	goto	l12166
 10057  0180C2  0A03               	xorlw	3	; case 2
 10058  0180C4  B4D8               	btfsc	status,2,c
 10059  0180C6  D6ED               	goto	l12182
 10060  0180C8  0A01               	xorlw	1	; case 3
 10061  0180CA  B4D8               	btfsc	status,2,c
 10062  0180CC  D72B               	goto	l12200
 10063  0180CE                     l12232:
 10064                           
 10065                           ; BSR set to: 0
 10066                           ;bsoc.c: 260:  return -1.0;
 10067  0180CE  0E00               	movlw	0
 10068  0180D0  6E01               	movwf	btemp^0,c
 10069  0180D2  0E00               	movlw	0
 10070  0180D4  6E02               	movwf	(btemp+1)^0,c
 10071  0180D6  0E80               	movlw	128
 10072  0180D8  6E03               	movwf	(btemp+2)^0,c
 10073  0180DA  0EBF               	movlw	191
 10074  0180DC                     L6:
 10075  0180DC  6E04               	movwf	(btemp+3)^0,c
 10076  0180DE                     l2367:
 10077                           
 10078                           ; _esr_check: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 10079  0180DE  52E5               	movf	postdec1,f,c
 10080  0180E0  0012               	return		;funcret
 10081  0180E2                     __end_of_esr_check:
 10082                           	opt callstack 0
 10083                           
 10084 ;; *************** function _update_adc_result *****************
 10085 ;; Defined at:
 10086 ;;		line 109 in file "daq.c"
 10087 ;; Parameters:    Size  Location     Type
 10088 ;;		None
 10089 ;; Auto vars:     Size  Location     Type
 10090 ;;		None
 10091 ;; Return value:  Size  Location     Type
 10092 ;;                  1  [STACK] _Bool 
 10093 ;; Registers used:
 10094 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl, p
      +rodh
 10095 ;; Tracked objects:
 10096 ;;		On entry : 0/0
 10097 ;;		On exit  : 0/0
 10098 ;;		Unchanged: 0/0
 10099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10100 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10101 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10102 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10103 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10104 ;;Total ram usage:        0 bytes
 10105 ;; Hardware stack levels used:    1
 10106 ;; Hardware stack levels required when called:   17
 10107 ;; This function calls:
 10108 ;;		_StartTimer
 10109 ;;		_TimerDone
 10110 ;;		_check_adc_scan
 10111 ;;		_clear_adc_scan
 10112 ;;		_start_adc_scan
 10113 ;; This function is called by:
 10114 ;;		_esr_check
 10115 ;; This function uses a reentrant model
 10116 ;;
 10117                           
 10118                           	psect	text25
 10119  01D166                     __ptext25:
 10120                           	opt callstack 0
 10121  01D166                     _update_adc_result:
 10122                           	opt callstack 12
 10123                           
 10124                           ;daq.c: 111:  if (R.done) {
 10125                           
 10126                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10127                           ;incstack = 0
 10128  01D166  0101               	movlb	1	; () banked
 10129  01D168  513C               	movf	(_R+53)& (0+255),w,b	;volatile
 10130  01D16A  B4D8               	btfsc	status,2,c
 10131  01D16C  0012               	return	
 10132                           
 10133                           ; BSR set to: 1
 10134                           ;daq.c: 112:   clear_adc_scan();
 10135  01D16E  ECB9  F0ED         	call	_clear_adc_scan	;wreg free
 10136                           
 10137                           ; BSR set to: 1
 10138                           ;daq.c: 113:   start_adc_scan();
 10139  01D172  EC2A  F0E4         	call	_start_adc_scan	;wreg free
 10140                           
 10141                           ;daq.c: 114:   StartTimer(TMR_ADC, 200);
 10142  01D176  0EC8               	movlw	200
 10143  01D178  6EE6               	movwf	postinc1,c
 10144  01D17A  0E00               	movlw	0
 10145  01D17C  6EE6               	movwf	postinc1,c
 10146  01D17E  0E01               	movlw	1
 10147  01D180  6EE6               	movwf	postinc1,c
 10148  01D182  EC13  F0E8         	call	_StartTimer	;wreg free
 10149  01D186                     l11612:
 10150  01D186  0E01               	movlw	1
 10151  01D188  6EE6               	movwf	postinc1,c
 10152  01D18A  ECA1  F0EA         	call	_TimerDone	;wreg free
 10153  01D18E  5001               	movf	btemp^0,w,c
 10154  01D190  A4D8               	btfss	status,2,c
 10155  01D192  0012               	return	
 10156  01D194  ECA2  F0ED         	call	_check_adc_scan	;wreg free
 10157  01D198  5001               	movf	btemp^0,w,c
 10158  01D19A  A4D8               	btfss	status,2,c
 10159  01D19C  0012               	return	
 10160  01D19E  D7F3               	goto	l11612
 10161  01D1A0                     __end_of_update_adc_result:
 10162                           	opt callstack 0
 10163                           
 10164 ;; *************** function _check_adc_scan *****************
 10165 ;; Defined at:
 10166 ;;		line 93 in file "daq.c"
 10167 ;; Parameters:    Size  Location     Type
 10168 ;;		None
 10169 ;; Auto vars:     Size  Location     Type
 10170 ;;		None
 10171 ;; Return value:  Size  Location     Type
 10172 ;;                  1  [STACK] _Bool 
 10173 ;; Registers used:
 10174 ;;		btemp
 10175 ;; Tracked objects:
 10176 ;;		On entry : 0/2
 10177 ;;		On exit  : 0/0
 10178 ;;		Unchanged: 0/0
 10179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10180 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10181 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10182 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10183 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10184 ;;Total ram usage:        0 bytes
 10185 ;; Hardware stack levels used:    1
 10186 ;; Hardware stack levels required when called:   15
 10187 ;; This function calls:
 10188 ;;		Nothing
 10189 ;; This function is called by:
 10190 ;;		_main
 10191 ;;		_update_adc_result
 10192 ;; This function uses a reentrant model
 10193 ;;
 10194                           
 10195                           	psect	text26
 10196  01DB44                     __ptext26:
 10197                           	opt callstack 0
 10198  01DB44                     _check_adc_scan:
 10199                           	opt callstack 13
 10200                           
 10201                           ;daq.c: 95:  return R.done;
 10202                           
 10203                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10204                           ;incstack = 0
 10205  01DB44  0060  F4F0  F001   	movff	_R+53,btemp	;volatile
 10206                           
 10207                           ; _check_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 10208  01DB4A  0012               	return		;funcret
 10209  01DB4C                     __end_of_check_adc_scan:
 10210                           	opt callstack 0
 10211                           
 10212 ;; *************** function _set_load_relay_two *****************
 10213 ;; Defined at:
 10214 ;;		line 130 in file "mbmc.c"
 10215 ;; Parameters:    Size  Location     Type
 10216 ;;  mode            1  [STACK] const _Bool 
 10217 ;; Auto vars:     Size  Location     Type
 10218 ;;		None
 10219 ;; Return value:  Size  Location     Type
 10220 ;;                  1  [STACK] void 
 10221 ;; Registers used:
 10222 ;;		wreg, fsr1l, fsr1h
 10223 ;; Tracked objects:
 10224 ;;		On entry : 0/0
 10225 ;;		On exit  : 0/0
 10226 ;;		Unchanged: 0/0
 10227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10228 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10229 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10230 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10231 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10232 ;;Total ram usage:        0 bytes
 10233 ;; Hardware stack levels used:    1
 10234 ;; Hardware stack levels required when called:   15
 10235 ;; This function calls:
 10236 ;;		Nothing
 10237 ;; This function is called by:
 10238 ;;		_main
 10239 ;;		_esr_check
 10240 ;; This function uses a reentrant model
 10241 ;;
 10242                           
 10243                           	psect	text27
 10244  01DA68                     __ptext27:
 10245                           	opt callstack 0
 10246  01DA68                     _set_load_relay_two:
 10247                           	opt callstack 15
 10248                           
 10249                           ;mbmc.c: 130: void set_load_relay_two(const _Bool mode);mbmc.c: 131: {;mbmc.c: 132:  LAT
      +                          Dbits.LATD5 = mode;
 10250                           ;stkvar	_mode @ sp[(0)+-1]
 10251                           
 10252                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10253                           ;incstack = 0
 10254  01DA68  0EFF               	movlw	-1
 10255  01DA6A  B0E3               	btfsc	plusw1,0,c
 10256  01DA6C  D002               	bra	u10315
 10257  01DA6E  9ABD               	bcf	189,5,c	;volatile
 10258  01DA70  D001               	bra	u10316
 10259  01DA72                     u10315:
 10260  01DA72  8ABD               	bsf	189,5,c	;volatile
 10261  01DA74                     u10316:
 10262                           
 10263                           ; _set_load_relay_two: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
 10264  01DA74  52E5               	movf	postdec1,f,c
 10265  01DA76  0012               	return		;funcret
 10266  01DA78                     __end_of_set_load_relay_two:
 10267                           	opt callstack 0
 10268                           
 10269 ;; *************** function _set_load_relay_one *****************
 10270 ;; Defined at:
 10271 ;;		line 125 in file "mbmc.c"
 10272 ;; Parameters:    Size  Location     Type
 10273 ;;  mode            1  [STACK] const _Bool 
 10274 ;; Auto vars:     Size  Location     Type
 10275 ;;		None
 10276 ;; Return value:  Size  Location     Type
 10277 ;;                  1  [STACK] void 
 10278 ;; Registers used:
 10279 ;;		wreg, fsr1l, fsr1h
 10280 ;; Tracked objects:
 10281 ;;		On entry : 0/0
 10282 ;;		On exit  : 0/0
 10283 ;;		Unchanged: 0/0
 10284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10285 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10286 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10288 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10289 ;;Total ram usage:        0 bytes
 10290 ;; Hardware stack levels used:    1
 10291 ;; Hardware stack levels required when called:   15
 10292 ;; This function calls:
 10293 ;;		Nothing
 10294 ;; This function is called by:
 10295 ;;		_main
 10296 ;;		_esr_check
 10297 ;; This function uses a reentrant model
 10298 ;;
 10299                           
 10300                           	psect	text28
 10301  01DA78                     __ptext28:
 10302                           	opt callstack 0
 10303  01DA78                     _set_load_relay_one:
 10304                           	opt callstack 15
 10305                           
 10306                           ;mbmc.c: 125: void set_load_relay_one(const _Bool mode);mbmc.c: 126: {;mbmc.c: 127:  LAT
      +                          Dbits.LATD4 = mode;
 10307                           ;stkvar	_mode @ sp[(0)+-1]
 10308                           
 10309                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10310                           ;incstack = 0
 10311  01DA78  0EFF               	movlw	-1
 10312  01DA7A  B0E3               	btfsc	plusw1,0,c
 10313  01DA7C  D002               	bra	u10305
 10314  01DA7E  98BD               	bcf	189,4,c	;volatile
 10315  01DA80  D001               	bra	u10306
 10316  01DA82                     u10305:
 10317  01DA82  88BD               	bsf	189,4,c	;volatile
 10318  01DA84                     u10306:
 10319                           
 10320                           ; _set_load_relay_one: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
 10321  01DA84  52E5               	movf	postdec1,f,c
 10322  01DA86  0012               	return		;funcret
 10323  01DA88                     __end_of_set_load_relay_one:
 10324                           	opt callstack 0
 10325                           
 10326 ;; *************** function _eaDogM_WriteCommand *****************
 10327 ;; Defined at:
 10328 ;;		line 385 in file "eadog.c"
 10329 ;; Parameters:    Size  Location     Type
 10330 ;;  cmd             1  [STACK] const unsigned char 
 10331 ;; Auto vars:     Size  Location     Type
 10332 ;;		None
 10333 ;; Return value:  Size  Location     Type
 10334 ;;                  1  [STACK] void 
 10335 ;; Registers used:
 10336 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 10337 ;; Tracked objects:
 10338 ;;		On entry : 3F/3D
 10339 ;;		On exit  : 3F/0
 10340 ;;		Unchanged: 0/0
 10341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10342 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10343 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10345 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10346 ;;Total ram usage:        0 bytes
 10347 ;; Hardware stack levels used:    1
 10348 ;; Hardware stack levels required when called:   26
 10349 ;; This function calls:
 10350 ;;		_send_lcd_cmd_dma
 10351 ;; This function is called by:
 10352 ;;		_main
 10353 ;; This function uses a reentrant model
 10354 ;;
 10355                           
 10356                           	psect	text29
 10357  01DAB8                     __ptext29:
 10358                           	opt callstack 0
 10359  01DAB8                     _eaDogM_WriteCommand:
 10360                           	opt callstack 4
 10361                           
 10362                           ;eadog.c: 385: void eaDogM_WriteCommand(const uint8_t cmd);eadog.c: 386: {;eadog.c: 387:
      +                            send_lcd_cmd_dma(cmd);
 10363                           ;stkvar	_cmd @ sp[(0)+-1]
 10364                           
 10365                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10366                           ;incstack = 0
 10367  01DAB8  0EFF               	movlw	-1
 10368  01DABA  50E3               	movf	plusw1,w,c
 10369  01DABC  6EE6               	movwf	postinc1,c
 10370  01DABE  EC88  F0EC         	call	_send_lcd_cmd_dma	;wreg free
 10371                           
 10372                           ; BSR set to: 0
 10373                           ; _eaDogM_WriteCommand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 1, argsize = 1, vargsize = 0
 10374  01DAC2  52E5               	movf	postdec1,f,c
 10375  01DAC4  0012               	return		;funcret
 10376  01DAC6                     __end_of_eaDogM_WriteCommand:
 10377                           	opt callstack 0
 10378                           
 10379 ;; *************** function _current_sensor_cal *****************
 10380 ;; Defined at:
 10381 ;;		line 484 in file "main.c"
 10382 ;; Parameters:    Size  Location     Type
 10383 ;;		None
 10384 ;; Auto vars:     Size  Location     Type
 10385 ;;  cp              4  [STACK] unsigned long 
 10386 ;;  cb              4  [STACK] unsigned long 
 10387 ;;  cpz             4  [STACK] unsigned long 
 10388 ;;  cbz             4  [STACK] unsigned long 
 10389 ;;  x               1  [STACK] unsigned char 
 10390 ;; Return value:  Size  Location     Type
 10391 ;;                  1  [STACK] _Bool 
 10392 ;; Registers used:
 10393 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 10394 ;; Tracked objects:
 10395 ;;		On entry : 0/2
 10396 ;;		On exit  : 0/0
 10397 ;;		Unchanged: 0/0
 10398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10399 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10400 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10401 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10402 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10403 ;;Total ram usage:        0 bytes
 10404 ;; Hardware stack levels used:    1
 10405 ;; Hardware stack levels required when called:   28
 10406 ;; This function calls:
 10407 ;;		_WaitMs
 10408 ;;		___fldiv
 10409 ;;		___xxtofl
 10410 ;;		_cal_current_10A
 10411 ;;		_cal_current_zero
 10412 ;;		_clear_adc_scan
 10413 ;;		_clear_switch
 10414 ;;		_get_raw_result
 10415 ;;		_get_switch
 10416 ;;		_get_vterm_ptr
 10417 ;;		_spinners
 10418 ;;		_sprintf
 10419 ;;		_start_adc_scan
 10420 ;;		_update_lcd
 10421 ;;		_write_cal_data
 10422 ;; This function is called by:
 10423 ;;		_main
 10424 ;; This function uses a reentrant model
 10425 ;;
 10426                           
 10427                           	psect	text30
 10428  013482                     __ptext30:
 10429                           	opt callstack 0
 10430  013482                     _current_sensor_cal:
 10431                           	opt callstack 0
 10432                           
 10433                           ; BSR set to: 0
 10434                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 10435  013482  0E11               	movlw	17
 10436  013484  26E1               	addwf	fsr1l,f,c
 10437  013486  0E00               	movlw	0
 10438  013488  22E2               	addwfc	fsr1h,f,c
 10439                           
 10440                           ;main.c: 486:  uint8_t x = 0;
 10441                           ;stkvar	_x @ sp[(-17)+16]
 10442                           
 10443                           ;incstack = 0
 10444  01348A  0EFF               	movlw	-1
 10445  01348C  6AE3               	clrf	plusw1,c
 10446                           
 10447                           ;main.c: 487:  uint32_t cb = 0, cp = 0;
 10448                           ;stkvar	_cb @ sp[(-17)+4]
 10449  01348E  0EF3               	movlw	-13
 10450  013490  6AE3               	clrf	plusw1,c
 10451  013492  0EF4               	movlw	-12
 10452  013494  6AE3               	clrf	plusw1,c
 10453  013496  0EF5               	movlw	-11
 10454  013498  6AE3               	clrf	plusw1,c
 10455  01349A  0EF6               	movlw	-10
 10456  01349C  6AE3               	clrf	plusw1,c
 10457                           
 10458                           ;stkvar	_cp @ sp[(-17)+0]
 10459  01349E  0EEF               	movlw	-17
 10460  0134A0  6AE3               	clrf	plusw1,c
 10461  0134A2  0EF0               	movlw	-16
 10462  0134A4  6AE3               	clrf	plusw1,c
 10463  0134A6  0EF1               	movlw	-15
 10464  0134A8  6AE3               	clrf	plusw1,c
 10465  0134AA  0EF2               	movlw	-14
 10466  0134AC  6AE3               	clrf	plusw1,c
 10467                           
 10468                           ;main.c: 489:  sprintf(get_vterm_ptr(0, 0), "Battery and PV      ");
 10469  0134AE  0E7A               	movlw	low STR_46
 10470  0134B0  6EE6               	movwf	postinc1,c
 10471  0134B2  0EFE               	movlw	high STR_46
 10472  0134B4  6EE6               	movwf	postinc1,c
 10473  0134B6  0E00               	movlw	0
 10474  0134B8  6EE6               	movwf	postinc1,c
 10475  0134BA  0E00               	movlw	0
 10476  0134BC  6EE6               	movwf	postinc1,c
 10477  0134BE  EC1E  F0EA         	call	_get_vterm_ptr	;wreg free
 10478  0134C2  0060  F007  FFE6   	movff	btemp,postinc1
 10479  0134C8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10480  0134CE  0E04               	movlw	4
 10481  0134D0  6EE6               	movwf	postinc1,c
 10482  0134D2  EC5C  F0D8         	call	_sprintf	;wreg free
 10483                           
 10484                           ; BSR set to: 0
 10485                           ;main.c: 490:  sprintf(get_vterm_ptr(1, 0), "Sensor Zero         ");
 10486  0134D6  0EFC               	movlw	low STR_47
 10487  0134D8  6EE6               	movwf	postinc1,c
 10488  0134DA  0EFD               	movlw	high STR_47
 10489  0134DC  6EE6               	movwf	postinc1,c
 10490  0134DE  0E00               	movlw	0
 10491  0134E0  6EE6               	movwf	postinc1,c
 10492  0134E2  0E01               	movlw	1
 10493  0134E4  6EE6               	movwf	postinc1,c
 10494  0134E6  EC1E  F0EA         	call	_get_vterm_ptr	;wreg free
 10495  0134EA  0060  F007  FFE6   	movff	btemp,postinc1
 10496  0134F0  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10497  0134F6  0E04               	movlw	4
 10498  0134F8  6EE6               	movwf	postinc1,c
 10499  0134FA  EC5C  F0D8         	call	_sprintf	;wreg free
 10500                           
 10501                           ; BSR set to: 0
 10502                           ;main.c: 491:  sprintf(get_vterm_ptr(2, 0), "Calibration         ");
 10503  0134FE  0EE7               	movlw	low STR_48
 10504  013500  6EE6               	movwf	postinc1,c
 10505  013502  0EFD               	movlw	high STR_48
 10506  013504  6EE6               	movwf	postinc1,c
 10507  013506  0E00               	movlw	0
 10508  013508  6EE6               	movwf	postinc1,c
 10509  01350A  0E02               	movlw	2
 10510  01350C  6EE6               	movwf	postinc1,c
 10511  01350E  EC1E  F0EA         	call	_get_vterm_ptr	;wreg free
 10512  013512  0060  F007  FFE6   	movff	btemp,postinc1
 10513  013518  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10514  01351E  0E04               	movlw	4
 10515  013520  6EE6               	movwf	postinc1,c
 10516  013522  EC5C  F0D8         	call	_sprintf	;wreg free
 10517                           
 10518                           ; BSR set to: 0
 10519                           ;main.c: 492:  update_lcd(0);
 10520  013526  0E00               	movlw	0
 10521  013528  6EE6               	movwf	postinc1,c
 10522  01352A  EC4D  F0D7         	call	_update_lcd	;wreg free
 10523                           
 10524                           ;main.c: 493:  WaitMs(2000);
 10525  01352E  0ED0               	movlw	208
 10526  013530  6EE6               	movwf	postinc1,c
 10527  013532  0E07               	movlw	7
 10528  013534  6EE6               	movwf	postinc1,c
 10529  013536  EC08  F0E9         	call	_WaitMs	;wreg free
 10530  01353A                     l14448:
 10531                           
 10532                           ;main.c: 495:   if (++x > 64)
 10533                           ;stkvar	_x @ sp[(-17)+16]
 10534  01353A  0EFF               	movlw	-1
 10535  01353C  2AE3               	incf	plusw1,f,c
 10536  01353E  0EFF               	movlw	-1
 10537  013540  006F FF8C  F001    	movff	plusw1,btemp
 10538  013546  0E40               	movlw	64
 10539  013548  6401               	cpfsgt	btemp^0,c
 10540  01354A  D002               	goto	l14452
 10541  01354C  EF16  F0A0         	goto	l1505
 10542  013550                     l14452:
 10543                           
 10544                           ;main.c: 497:   sprintf(get_vterm_ptr(2, 0), "Release button %c  ", spinners(4, 0));
 10545  013550  0E00               	movlw	0
 10546  013552  6EE6               	movwf	postinc1,c
 10547  013554  0E04               	movlw	4
 10548  013556  6EE6               	movwf	postinc1,c
 10549  013558  EC56  F0D9         	call	_spinners	;wreg free
 10550  01355C  5001               	movf	btemp^0,w,c
 10551  01355E  6EE6               	movwf	postinc1,c
 10552  013560  0E00               	movlw	0
 10553  013562  6EE6               	movwf	postinc1,c
 10554  013564  0E37               	movlw	low STR_49
 10555  013566  6EE6               	movwf	postinc1,c
 10556  013568  0EFF               	movlw	high STR_49
 10557  01356A  6EE6               	movwf	postinc1,c
 10558  01356C  0E00               	movlw	0
 10559  01356E  6EE6               	movwf	postinc1,c
 10560  013570  0E02               	movlw	2
 10561  013572  6EE6               	movwf	postinc1,c
 10562  013574  EC1E  F0EA         	call	_get_vterm_ptr	;wreg free
 10563  013578  0060  F007  FFE6   	movff	btemp,postinc1
 10564  01357E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10565  013584  0E06               	movlw	6
 10566  013586  6EE6               	movwf	postinc1,c
 10567  013588  EC5C  F0D8         	call	_sprintf	;wreg free
 10568                           
 10569                           ;main.c: 498:   update_lcd(0);
 10570  01358C  0E00               	movlw	0
 10571  01358E  6EE6               	movwf	postinc1,c
 10572  013590  EC4D  F0D7         	call	_update_lcd	;wreg free
 10573                           
 10574                           ;main.c: 499:   WaitMs(100);
 10575  013594  0E64               	movlw	100
 10576  013596  6EE6               	movwf	postinc1,c
 10577  013598  0E00               	movlw	0
 10578  01359A  6EE6               	movwf	postinc1,c
 10579  01359C  EC08  F0E9         	call	_WaitMs	;wreg free
 10580                           
 10581                           ;main.c: 500:  } while (get_switch(SCALIB));
 10582  0135A0  0E04               	movlw	4
 10583  0135A2  6EE6               	movwf	postinc1,c
 10584  0135A4  EC35  F0EA         	call	_get_switch	;wreg free
 10585  0135A8  5001               	movf	btemp^0,w,c
 10586  0135AA  A4D8               	btfss	status,2,c
 10587  0135AC  D7C6               	goto	l14448
 10588                           
 10589                           ;main.c: 502:  x = 0;
 10590                           ;stkvar	_x @ sp[(-17)+16]
 10591  0135AE  0EFF               	movlw	-1
 10592  0135B0  6AE3               	clrf	plusw1,c
 10593  0135B2                     l14460:
 10594                           
 10595                           ;main.c: 504:   cb += get_raw_result(C_BATT);
 10596  0135B2  0E00               	movlw	0
 10597  0135B4  6EE6               	movwf	postinc1,c
 10598  0135B6  EC37  F0EC         	call	_get_raw_result	;wreg free
 10599                           
 10600                           ;stkvar	_cb @ sp[(-17)+4]
 10601  0135BA  50E1               	movf	fsr1l,w,c
 10602  0135BC  0FF3               	addlw	-13
 10603  0135BE  6ED9               	movwf	fsr2l,c
 10604  0135C0  50E2               	movf	fsr1h,w,c
 10605  0135C2  6EDA               	movwf	fsr2h,c
 10606  0135C4  0EFF               	movlw	255
 10607  0135C6  22DA               	addwfc	fsr2h,f,c
 10608  0135C8  5001               	movf	btemp^0,w,c
 10609  0135CA  26DE               	addwf	postinc2,f,c
 10610  0135CC  5002               	movf	(btemp+1)^0,w,c
 10611  0135CE  22DE               	addwfc	postinc2,f,c
 10612  0135D0  0E00               	movlw	0
 10613  0135D2  22DE               	addwfc	postinc2,f,c
 10614  0135D4  22DE               	addwfc	postinc2,f,c
 10615                           
 10616                           ;main.c: 505:   cp += get_raw_result(C_PV);
 10617  0135D6  0E01               	movlw	1
 10618  0135D8  6EE6               	movwf	postinc1,c
 10619  0135DA  EC37  F0EC         	call	_get_raw_result	;wreg free
 10620                           
 10621                           ;stkvar	_cp @ sp[(-17)+0]
 10622  0135DE  50E1               	movf	fsr1l,w,c
 10623  0135E0  0FEF               	addlw	-17
 10624  0135E2  6ED9               	movwf	fsr2l,c
 10625  0135E4  50E2               	movf	fsr1h,w,c
 10626  0135E6  6EDA               	movwf	fsr2h,c
 10627  0135E8  0EFF               	movlw	255
 10628  0135EA  22DA               	addwfc	fsr2h,f,c
 10629  0135EC  5001               	movf	btemp^0,w,c
 10630  0135EE  26DE               	addwf	postinc2,f,c
 10631  0135F0  5002               	movf	(btemp+1)^0,w,c
 10632  0135F2  22DE               	addwfc	postinc2,f,c
 10633  0135F4  0E00               	movlw	0
 10634  0135F6  22DE               	addwfc	postinc2,f,c
 10635  0135F8  22DE               	addwfc	postinc2,f,c
 10636                           
 10637                           ;main.c: 506:   sprintf(get_vterm_ptr(0, 0), "Sensor Readings     ");
 10638  0135FA  0EA4               	movlw	low STR_50
 10639  0135FC  6EE6               	movwf	postinc1,c
 10640  0135FE  0EFE               	movlw	high STR_50
 10641  013600  6EE6               	movwf	postinc1,c
 10642  013602  0E00               	movlw	0
 10643  013604  6EE6               	movwf	postinc1,c
 10644  013606  0E00               	movlw	0
 10645  013608  6EE6               	movwf	postinc1,c
 10646  01360A  EC1E  F0EA         	call	_get_vterm_ptr	;wreg free
 10647  01360E  0060  F007  FFE6   	movff	btemp,postinc1
 10648  013614  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10649  01361A  0E04               	movlw	4
 10650  01361C  6EE6               	movwf	postinc1,c
 10651  01361E  EC5C  F0D8         	call	_sprintf	;wreg free
 10652                           
 10653                           ; BSR set to: 0
 10654                           ;main.c: 507:   sprintf(get_vterm_ptr(1, 0), " %d %d              ", get_raw_result(C_BA
      +                          TT), get_raw_result(C_PV));
 10655  013622  0E01               	movlw	1
 10656  013624  6EE6               	movwf	postinc1,c
 10657  013626  EC37  F0EC         	call	_get_raw_result	;wreg free
 10658  01362A  0060  F007  FFE6   	movff	btemp,postinc1
 10659  013630  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10660  013636  0E00               	movlw	0
 10661  013638  6EE6               	movwf	postinc1,c
 10662  01363A  EC37  F0EC         	call	_get_raw_result	;wreg free
 10663  01363E  0060  F007  FFE6   	movff	btemp,postinc1
 10664  013644  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10665  01364A  0E54               	movlw	low STR_51
 10666  01364C  6EE6               	movwf	postinc1,c
 10667  01364E  0EFD               	movlw	high STR_51
 10668  013650  6EE6               	movwf	postinc1,c
 10669  013652  0E00               	movlw	0
 10670  013654  6EE6               	movwf	postinc1,c
 10671  013656  0E01               	movlw	1
 10672  013658  6EE6               	movwf	postinc1,c
 10673  01365A  EC1E  F0EA         	call	_get_vterm_ptr	;wreg free
 10674  01365E  0060  F007  FFE6   	movff	btemp,postinc1
 10675  013664  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10676  01366A  0E08               	movlw	8
 10677  01366C  6EE6               	movwf	postinc1,c
 10678  01366E  EC5C  F0D8         	call	_sprintf	;wreg free
 10679                           
 10680                           ; BSR set to: 0
 10681                           ;main.c: 508:   sprintf(get_vterm_ptr(2, 0), "Stability clock %d  ", x);
 10682                           ;stkvar	_x @ sp[(-17)+16]
 10683  013672  0EFF               	movlw	-1
 10684  013674  50E3               	movf	plusw1,w,c
 10685  013676  6EE6               	movwf	postinc1,c
 10686  013678  0E00               	movlw	0
 10687  01367A  6EE6               	movwf	postinc1,c
 10688  01367C  0E0D               	movlw	low STR_52
 10689  01367E  6EE6               	movwf	postinc1,c
 10690  013680  0EFF               	movlw	high STR_52
 10691  013682  6EE6               	movwf	postinc1,c
 10692  013684  0E00               	movlw	0
 10693  013686  6EE6               	movwf	postinc1,c
 10694  013688  0E02               	movlw	2
 10695  01368A  6EE6               	movwf	postinc1,c
 10696  01368C  EC1E  F0EA         	call	_get_vterm_ptr	;wreg free
 10697  013690  0060  F007  FFE6   	movff	btemp,postinc1
 10698  013696  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10699  01369C  0E06               	movlw	6
 10700  01369E  6EE6               	movwf	postinc1,c
 10701  0136A0  EC5C  F0D8         	call	_sprintf	;wreg free
 10702                           
 10703                           ; BSR set to: 0
 10704                           ;main.c: 509:   update_lcd(0);
 10705  0136A4  0E00               	movlw	0
 10706  0136A6  6EE6               	movwf	postinc1,c
 10707  0136A8  EC4D  F0D7         	call	_update_lcd	;wreg free
 10708                           
 10709                           ;main.c: 510:   clear_adc_scan();
 10710  0136AC  ECB9  F0ED         	call	_clear_adc_scan	;wreg free
 10711                           
 10712                           ; BSR set to: 1
 10713                           ;main.c: 511:   start_adc_scan();
 10714  0136B0  EC2A  F0E4         	call	_start_adc_scan	;wreg free
 10715                           
 10716                           ;main.c: 512:   WaitMs(100);
 10717  0136B4  0E64               	movlw	100
 10718  0136B6  6EE6               	movwf	postinc1,c
 10719  0136B8  0E00               	movlw	0
 10720  0136BA  6EE6               	movwf	postinc1,c
 10721  0136BC  EC08  F0E9         	call	_WaitMs	;wreg free
 10722                           
 10723                           ;main.c: 513:  } while (++x < 64);
 10724                           ;stkvar	_x @ sp[(-17)+16]
 10725  0136C0  0EFF               	movlw	-1
 10726  0136C2  2AE3               	incf	plusw1,f,c
 10727  0136C4  0EFF               	movlw	-1
 10728  0136C6  006F FF8C  F001    	movff	plusw1,btemp
 10729  0136CC  0E3F               	movlw	63
 10730  0136CE  6401               	cpfsgt	btemp^0,c
 10731  0136D0  D770               	goto	l14460
 10732                           
 10733                           ;main.c: 514:  cb = cb >> 6;
 10734  0136D2  0E06               	movlw	6
 10735  0136D4  6E0C               	movwf	(btemp+11)^0,c
 10736                           
 10737                           ;stkvar	_cb @ sp[(-17)+4]
 10738  0136D6  50E1               	movf	fsr1l,w,c
 10739  0136D8  0FF3               	addlw	-13
 10740  0136DA  6ED9               	movwf	fsr2l,c
 10741  0136DC  50E2               	movf	fsr1h,w,c
 10742  0136DE  6EDA               	movwf	fsr2h,c
 10743  0136E0  0EFF               	movlw	255
 10744  0136E2  22DA               	addwfc	fsr2h,f,c
 10745  0136E4  280C               	incf	(btemp+11)^0,w,c
 10746  0136E6  52DE               	movf	postinc2,f,c
 10747  0136E8  D007               	goto	u13840
 10748  0136EA                     u13845:
 10749  0136EA  52DE               	movf	postinc2,f,c
 10750  0136EC  52DE               	movf	postinc2,f,c
 10751  0136EE  90D8               	bcf	status,0,c
 10752  0136F0  32DD               	rrcf	postdec2,f,c
 10753  0136F2  32DD               	rrcf	postdec2,f,c
 10754  0136F4  32DD               	rrcf	postdec2,f,c
 10755  0136F6  32DE               	rrcf	postinc2,f,c
 10756  0136F8                     u13840:
 10757  0136F8  2EE8               	decfsz	wreg,f,c
 10758  0136FA  D7F7               	goto	u13845
 10759                           
 10760                           ;main.c: 515:  cp = cp >> 6;
 10761  0136FC  0E06               	movlw	6
 10762  0136FE  6E0C               	movwf	(btemp+11)^0,c
 10763                           
 10764                           ;stkvar	_cp @ sp[(-17)+0]
 10765  013700  50E1               	movf	fsr1l,w,c
 10766  013702  0FEF               	addlw	-17
 10767  013704  6ED9               	movwf	fsr2l,c
 10768  013706  50E2               	movf	fsr1h,w,c
 10769  013708  6EDA               	movwf	fsr2h,c
 10770  01370A  0EFF               	movlw	255
 10771  01370C  22DA               	addwfc	fsr2h,f,c
 10772  01370E  280C               	incf	(btemp+11)^0,w,c
 10773  013710  52DE               	movf	postinc2,f,c
 10774  013712  D007               	goto	u13850
 10775  013714                     u13855:
 10776  013714  52DE               	movf	postinc2,f,c
 10777  013716  52DE               	movf	postinc2,f,c
 10778  013718  90D8               	bcf	status,0,c
 10779  01371A  32DD               	rrcf	postdec2,f,c
 10780  01371C  32DD               	rrcf	postdec2,f,c
 10781  01371E  32DD               	rrcf	postdec2,f,c
 10782  013720  32DE               	rrcf	postinc2,f,c
 10783  013722                     u13850:
 10784  013722  2EE8               	decfsz	wreg,f,c
 10785  013724  D7F7               	goto	u13855
 10786                           
 10787                           ;main.c: 517:  if (cal_current_zero(0, cb, cp)) {
 10788                           ;stkvar	_cp @ sp[(-17)+0]
 10789  013726  0EEF               	movlw	-17
 10790  013728  006F FF8F FFE6     	movff	plusw1,postinc1
 10791  01372E  006F FF8F FFE6     	movff	plusw1,postinc1
 10792                           
 10793                           ;stkvar	_cb @ sp[(-19)+4]
 10794  013734  0EF1               	movlw	-15
 10795  013736  006F FF8F FFE6     	movff	plusw1,postinc1
 10796  01373C  006F FF8F FFE6     	movff	plusw1,postinc1
 10797  013742  0E00               	movlw	0
 10798  013744  6EE6               	movwf	postinc1,c
 10799  013746  EC3D  F0E0         	call	_cal_current_zero	;wreg free
 10800  01374A  5001               	movf	btemp^0,w,c
 10801  01374C  B4D8               	btfsc	status,2,c
 10802  01374E  D075               	goto	l14498
 10803                           
 10804                           ;main.c: 518:   cal_current_zero(1, cb, cp);
 10805                           ;stkvar	_cp @ sp[(-17)+0]
 10806  013750  0EEF               	movlw	-17
 10807  013752  006F FF8F FFE6     	movff	plusw1,postinc1
 10808  013758  006F FF8F FFE6     	movff	plusw1,postinc1
 10809                           
 10810                           ;stkvar	_cb @ sp[(-19)+4]
 10811  01375E  0EF1               	movlw	-15
 10812  013760  006F FF8F FFE6     	movff	plusw1,postinc1
 10813  013766  006F FF8F FFE6     	movff	plusw1,postinc1
 10814  01376C  0E01               	movlw	1
 10815  01376E  6EE6               	movwf	postinc1,c
 10816  013770  EC3D  F0E0         	call	_cal_current_zero	;wreg free
 10817                           
 10818                           ;main.c: 519:   sprintf(get_vterm_ptr(0, 0), "Battery and PV      ");
 10819  013774  0E7A               	movlw	low STR_46
 10820  013776  6EE6               	movwf	postinc1,c
 10821  013778  0EFE               	movlw	high STR_46
 10822  01377A  6EE6               	movwf	postinc1,c
 10823  01377C  0E00               	movlw	0
 10824  01377E  6EE6               	movwf	postinc1,c
 10825  013780  0E00               	movlw	0
 10826  013782  6EE6               	movwf	postinc1,c
 10827  013784  EC1E  F0EA         	call	_get_vterm_ptr	;wreg free
 10828  013788  0060  F007  FFE6   	movff	btemp,postinc1
 10829  01378E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10830  013794  0E04               	movlw	4
 10831  013796  6EE6               	movwf	postinc1,c
 10832  013798  EC5C  F0D8         	call	_sprintf	;wreg free
 10833                           
 10834                           ; BSR set to: 0
 10835                           ;main.c: 520:   sprintf(get_vterm_ptr(1, 0), " %ld %ld            ", cb, cp);
 10836                           ;stkvar	_cp @ sp[(-17)+0]
 10837  01379C  0EEF               	movlw	-17
 10838  01379E  006F FF8F FFE6     	movff	plusw1,postinc1
 10839  0137A4  006F FF8F FFE6     	movff	plusw1,postinc1
 10840  0137AA  006F FF8F FFE6     	movff	plusw1,postinc1
 10841  0137B0  006F FF8F FFE6     	movff	plusw1,postinc1
 10842                           
 10843                           ;stkvar	_cb @ sp[(-21)+4]
 10844  0137B6  0EEF               	movlw	-17
 10845  0137B8  006F FF8F FFE6     	movff	plusw1,postinc1
 10846  0137BE  006F FF8F FFE6     	movff	plusw1,postinc1
 10847  0137C4  006F FF8F FFE6     	movff	plusw1,postinc1
 10848  0137CA  006F FF8F FFE6     	movff	plusw1,postinc1
 10849  0137D0  0E7E               	movlw	low STR_54
 10850  0137D2  6EE6               	movwf	postinc1,c
 10851  0137D4  0EFD               	movlw	high STR_54
 10852  0137D6  6EE6               	movwf	postinc1,c
 10853  0137D8  0E00               	movlw	0
 10854  0137DA  6EE6               	movwf	postinc1,c
 10855  0137DC  0E01               	movlw	1
 10856  0137DE  6EE6               	movwf	postinc1,c
 10857  0137E0  EC1E  F0EA         	call	_get_vterm_ptr	;wreg free
 10858  0137E4  0060  F007  FFE6   	movff	btemp,postinc1
 10859  0137EA  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10860  0137F0  0E0C               	movlw	12
 10861  0137F2  6EE6               	movwf	postinc1,c
 10862  0137F4  EC5C  F0D8         	call	_sprintf	;wreg free
 10863                           
 10864                           ; BSR set to: 0
 10865                           ;main.c: 521:   sprintf(get_vterm_ptr(2, 0), "Zero Cal Set        ");
 10866  0137F8  0E3B               	movlw	low STR_55
 10867  0137FA  6EE6               	movwf	postinc1,c
 10868  0137FC  0EFE               	movlw	high STR_55
 10869  0137FE  6EE6               	movwf	postinc1,c
 10870  013800  0E00               	movlw	0
 10871  013802  6EE6               	movwf	postinc1,c
 10872  013804  0E02               	movlw	2
 10873  013806  6EE6               	movwf	postinc1,c
 10874  013808  EC1E  F0EA         	call	_get_vterm_ptr	;wreg free
 10875  01380C  0060  F007  FFE6   	movff	btemp,postinc1
 10876  013812  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10877  013818  0E04               	movlw	4
 10878  01381A  6EE6               	movwf	postinc1,c
 10879  01381C  EC5C  F0D8         	call	_sprintf	;wreg free
 10880                           
 10881                           ; BSR set to: 0
 10882                           ;main.c: 522:   update_lcd(0);
 10883  013820  0E00               	movlw	0
 10884  013822  6EE6               	movwf	postinc1,c
 10885  013824  EC4D  F0D7         	call	_update_lcd	;wreg free
 10886                           
 10887                           ;main.c: 523:   WaitMs(2000);
 10888  013828  0ED0               	movlw	208
 10889  01382A  6EE6               	movwf	postinc1,c
 10890  01382C  0E07               	movlw	7
 10891  01382E  6EE6               	movwf	postinc1,c
 10892  013830  EC08  F0E9         	call	_WaitMs	;wreg free
 10893                           
 10894                           ;main.c: 524:   write_cal_data();
 10895  013834  EC5D  F0D1         	call	_write_cal_data	;wreg free
 10896                           
 10897                           ;main.c: 525:  } else {
 10898  013838  D05B               	goto	l14504
 10899  01383A                     l14498:
 10900                           
 10901                           ;main.c: 526:   sprintf(get_vterm_ptr(0, 0), "Battery and PV      ");
 10902  01383A  0E7A               	movlw	low STR_46
 10903  01383C  6EE6               	movwf	postinc1,c
 10904  01383E  0EFE               	movlw	high STR_46
 10905  013840  6EE6               	movwf	postinc1,c
 10906  013842  0E00               	movlw	0
 10907  013844  6EE6               	movwf	postinc1,c
 10908  013846  0E00               	movlw	0
 10909  013848  6EE6               	movwf	postinc1,c
 10910  01384A  EC1E  F0EA         	call	_get_vterm_ptr	;wreg free
 10911  01384E  0060  F007  FFE6   	movff	btemp,postinc1
 10912  013854  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10913  01385A  0E04               	movlw	4
 10914  01385C  6EE6               	movwf	postinc1,c
 10915  01385E  EC5C  F0D8         	call	_sprintf	;wreg free
 10916                           
 10917                           ;main.c: 527:   sprintf(get_vterm_ptr(1, 0), " %ld %ld            ", get_raw_result(C_BA
      +                          TT), get_raw_result(C_PV));
 10918  013862  0E01               	movlw	1
 10919  013864  6EE6               	movwf	postinc1,c
 10920  013866  EC37  F0EC         	call	_get_raw_result	;wreg free
 10921  01386A  0060  F007  FFE6   	movff	btemp,postinc1
 10922  013870  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10923  013876  0E00               	movlw	0
 10924  013878  6EE6               	movwf	postinc1,c
 10925  01387A  EC37  F0EC         	call	_get_raw_result	;wreg free
 10926  01387E  0060  F007  FFE6   	movff	btemp,postinc1
 10927  013884  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10928  01388A  0E7E               	movlw	low STR_54
 10929  01388C  6EE6               	movwf	postinc1,c
 10930  01388E  0EFD               	movlw	high STR_54
 10931  013890  6EE6               	movwf	postinc1,c
 10932  013892  0E00               	movlw	0
 10933  013894  6EE6               	movwf	postinc1,c
 10934  013896  0E01               	movlw	1
 10935  013898  6EE6               	movwf	postinc1,c
 10936  01389A  EC1E  F0EA         	call	_get_vterm_ptr	;wreg free
 10937  01389E  0060  F007  FFE6   	movff	btemp,postinc1
 10938  0138A4  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10939  0138AA  0E08               	movlw	8
 10940  0138AC  6EE6               	movwf	postinc1,c
 10941  0138AE  EC5C  F0D8         	call	_sprintf	;wreg free
 10942                           
 10943                           ;main.c: 528:   sprintf(get_vterm_ptr(2, 0), "Zero Out Of Range   ");
 10944  0138B2  0EF8               	movlw	low STR_58
 10945  0138B4  6EE6               	movwf	postinc1,c
 10946  0138B6  0EFE               	movlw	high STR_58
 10947  0138B8  6EE6               	movwf	postinc1,c
 10948  0138BA  0E00               	movlw	0
 10949  0138BC  6EE6               	movwf	postinc1,c
 10950  0138BE  0E02               	movlw	2
 10951  0138C0  6EE6               	movwf	postinc1,c
 10952  0138C2  EC1E  F0EA         	call	_get_vterm_ptr	;wreg free
 10953  0138C6  0060  F007  FFE6   	movff	btemp,postinc1
 10954  0138CC  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10955  0138D2  0E04               	movlw	4
 10956  0138D4  6EE6               	movwf	postinc1,c
 10957  0138D6  EC5C  F0D8         	call	_sprintf	;wreg free
 10958                           
 10959                           ;main.c: 529:   update_lcd(0);
 10960  0138DA  0E00               	movlw	0
 10961  0138DC  6EE6               	movwf	postinc1,c
 10962  0138DE  EC4D  F0D7         	call	_update_lcd	;wreg free
 10963  0138E2                     l14500:
 10964                           
 10965                           ;main.c: 530:   WaitMs(2000);
 10966  0138E2  0ED0               	movlw	208
 10967  0138E4  6EE6               	movwf	postinc1,c
 10968  0138E6  0E07               	movlw	7
 10969  0138E8  6EE6               	movwf	postinc1,c
 10970  0138EA  EC08  F0E9         	call	_WaitMs	;wreg free
 10971  0138EE  D39E               	goto	l1505
 10972  0138F0                     l14504:
 10973                           
 10974                           ;main.c: 535:  uint32_t cbz, cpz;;main.c: 537:  clear_switch(SCALIB);
 10975  0138F0  0E04               	movlw	4
 10976  0138F2  6EE6               	movwf	postinc1,c
 10977  0138F4  EC20  F0E6         	call	_clear_switch	;wreg free
 10978                           
 10979                           ;main.c: 538:  sprintf(get_vterm_ptr(0, 0), "Battery and PV      ");
 10980  0138F8  0E7A               	movlw	low STR_46
 10981  0138FA  6EE6               	movwf	postinc1,c
 10982  0138FC  0EFE               	movlw	high STR_46
 10983  0138FE  6EE6               	movwf	postinc1,c
 10984  013900  0E00               	movlw	0
 10985  013902  6EE6               	movwf	postinc1,c
 10986  013904  0E00               	movlw	0
 10987  013906  6EE6               	movwf	postinc1,c
 10988  013908  EC1E  F0EA         	call	_get_vterm_ptr	;wreg free
 10989  01390C  0060  F007  FFE6   	movff	btemp,postinc1
 10990  013912  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10991  013918  0E04               	movlw	4
 10992  01391A  6EE6               	movwf	postinc1,c
 10993  01391C  EC5C  F0D8         	call	_sprintf	;wreg free
 10994                           
 10995                           ; BSR set to: 0
 10996                           ;main.c: 539:  sprintf(get_vterm_ptr(1, 0), "10 Amp Sensor       ");
 10997  013920  0E50               	movlw	low STR_60
 10998  013922  6EE6               	movwf	postinc1,c
 10999  013924  0EFE               	movlw	high STR_60
 11000  013926  6EE6               	movwf	postinc1,c
 11001  013928  0E00               	movlw	0
 11002  01392A  6EE6               	movwf	postinc1,c
 11003  01392C  0E01               	movlw	1
 11004  01392E  6EE6               	movwf	postinc1,c
 11005  013930  EC1E  F0EA         	call	_get_vterm_ptr	;wreg free
 11006  013934  0060  F007  FFE6   	movff	btemp,postinc1
 11007  01393A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11008  013940  0E04               	movlw	4
 11009  013942  6EE6               	movwf	postinc1,c
 11010  013944  EC5C  F0D8         	call	_sprintf	;wreg free
 11011                           
 11012                           ; BSR set to: 0
 11013                           ;main.c: 540:  sprintf(get_vterm_ptr(2, 0), "Calibration         ");
 11014  013948  0EE7               	movlw	low STR_48
 11015  01394A  6EE6               	movwf	postinc1,c
 11016  01394C  0EFD               	movlw	high STR_48
 11017  01394E  6EE6               	movwf	postinc1,c
 11018  013950  0E00               	movlw	0
 11019  013952  6EE6               	movwf	postinc1,c
 11020  013954  0E02               	movlw	2
 11021  013956  6EE6               	movwf	postinc1,c
 11022  013958  EC1E  F0EA         	call	_get_vterm_ptr	;wreg free
 11023  01395C  0060  F007  FFE6   	movff	btemp,postinc1
 11024  013962  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11025  013968  0E04               	movlw	4
 11026  01396A  6EE6               	movwf	postinc1,c
 11027  01396C  EC5C  F0D8         	call	_sprintf	;wreg free
 11028                           
 11029                           ; BSR set to: 0
 11030                           ;main.c: 541:  update_lcd(0);
 11031  013970  0E00               	movlw	0
 11032  013972  6EE6               	movwf	postinc1,c
 11033  013974  EC4D  F0D7         	call	_update_lcd	;wreg free
 11034                           
 11035                           ;main.c: 542:  WaitMs(2000);
 11036  013978  0ED0               	movlw	208
 11037  01397A  6EE6               	movwf	postinc1,c
 11038  01397C  0E07               	movlw	7
 11039  01397E  6EE6               	movwf	postinc1,c
 11040  013980  EC08  F0E9         	call	_WaitMs	;wreg free
 11041                           
 11042                           ;main.c: 543:  x = 0;
 11043                           ;stkvar	_x @ sp[(-17)+16]
 11044  013984  0EFF               	movlw	-1
 11045  013986  6AE3               	clrf	plusw1,c
 11046  013988                     l14518:
 11047                           
 11048                           ;main.c: 545:   if (++x > 64)
 11049                           ;stkvar	_x @ sp[(-17)+16]
 11050  013988  0EFF               	movlw	-1
 11051  01398A  2AE3               	incf	plusw1,f,c
 11052  01398C  0EFF               	movlw	-1
 11053  01398E  006F FF8C  F001    	movff	plusw1,btemp
 11054  013994  0E40               	movlw	64
 11055  013996  6401               	cpfsgt	btemp^0,c
 11056  013998  D001               	goto	l14522
 11057  01399A  D348               	goto	l1505
 11058  01399C                     l14522:
 11059                           
 11060                           ;main.c: 547:   sprintf(get_vterm_ptr(2, 0), "Press button %c  ", spinners(4, 0));
 11061  01399C  0E00               	movlw	0
 11062  01399E  6EE6               	movwf	postinc1,c
 11063  0139A0  0E04               	movlw	4
 11064  0139A2  6EE6               	movwf	postinc1,c
 11065  0139A4  EC56  F0D9         	call	_spinners	;wreg free
 11066  0139A8  5001               	movf	btemp^0,w,c
 11067  0139AA  6EE6               	movwf	postinc1,c
 11068  0139AC  0E00               	movlw	0
 11069  0139AE  6EE6               	movwf	postinc1,c
 11070  0139B0  0E71               	movlw	low STR_62
 11071  0139B2  6EE6               	movwf	postinc1,c
 11072  0139B4  0EFF               	movlw	high STR_62
 11073  0139B6  6EE6               	movwf	postinc1,c
 11074  0139B8  0E00               	movlw	0
 11075  0139BA  6EE6               	movwf	postinc1,c
 11076  0139BC  0E02               	movlw	2
 11077  0139BE  6EE6               	movwf	postinc1,c
 11078  0139C0  EC1E  F0EA         	call	_get_vterm_ptr	;wreg free
 11079  0139C4  0060  F007  FFE6   	movff	btemp,postinc1
 11080  0139CA  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11081  0139D0  0E06               	movlw	6
 11082  0139D2  6EE6               	movwf	postinc1,c
 11083  0139D4  EC5C  F0D8         	call	_sprintf	;wreg free
 11084                           
 11085                           ;main.c: 548:   update_lcd(0);
 11086  0139D8  0E00               	movlw	0
 11087  0139DA  6EE6               	movwf	postinc1,c
 11088  0139DC  EC4D  F0D7         	call	_update_lcd	;wreg free
 11089                           
 11090                           ;main.c: 549:   WaitMs(100);
 11091  0139E0  0E64               	movlw	100
 11092  0139E2  6EE6               	movwf	postinc1,c
 11093  0139E4  0E00               	movlw	0
 11094  0139E6  6EE6               	movwf	postinc1,c
 11095  0139E8  EC08  F0E9         	call	_WaitMs	;wreg free
 11096                           
 11097                           ;main.c: 550:  } while (!get_switch(SCALIB));
 11098  0139EC  0E04               	movlw	4
 11099  0139EE  6EE6               	movwf	postinc1,c
 11100  0139F0  EC35  F0EA         	call	_get_switch	;wreg free
 11101  0139F4  5001               	movf	btemp^0,w,c
 11102  0139F6  B4D8               	btfsc	status,2,c
 11103  0139F8  D7C7               	goto	l14518
 11104                           
 11105                           ;main.c: 552:  x = 0;
 11106                           ;stkvar	_x @ sp[(-17)+16]
 11107  0139FA  0EFF               	movlw	-1
 11108  0139FC  6AE3               	clrf	plusw1,c
 11109                           
 11110                           ;main.c: 553:  cbz = cb;
 11111                           ;stkvar	_cb @ sp[(-17)+4]
 11112  0139FE  0EF3               	movlw	-13
 11113  013A00  006F FF8C  F009    	movff	plusw1,btemp+8
 11114  013A06  0EF4               	movlw	-12
 11115  013A08  006F FF8C  F00A    	movff	plusw1,btemp+9
 11116  013A0E  0EF5               	movlw	-11
 11117  013A10  006F FF8C  F00B    	movff	plusw1,btemp+10
 11118  013A16  0EF6               	movlw	-10
 11119  013A18  006F FF8C  F00C    	movff	plusw1,btemp+11
 11120                           
 11121                           ;stkvar	_cbz @ sp[(-17)+12]
 11122  013A1E  0EFB               	movlw	-5
 11123  013A20  0060  F027  FFE3   	movff	btemp+8,plusw1
 11124  013A26  0EFC               	movlw	-4
 11125  013A28  0060  F02B  FFE3   	movff	btemp+9,plusw1
 11126  013A2E  0EFD               	movlw	-3
 11127  013A30  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11128  013A36  0EFE               	movlw	-2
 11129  013A38  0060  F033  FFE3   	movff	btemp+11,plusw1
 11130                           
 11131                           ;main.c: 554:  cpz = cp;
 11132                           ;stkvar	_cp @ sp[(-17)+0]
 11133  013A3E  0EEF               	movlw	-17
 11134  013A40  006F FF8C  F009    	movff	plusw1,btemp+8
 11135  013A46  0EF0               	movlw	-16
 11136  013A48  006F FF8C  F00A    	movff	plusw1,btemp+9
 11137  013A4E  0EF1               	movlw	-15
 11138  013A50  006F FF8C  F00B    	movff	plusw1,btemp+10
 11139  013A56  0EF2               	movlw	-14
 11140  013A58  006F FF8C  F00C    	movff	plusw1,btemp+11
 11141                           
 11142                           ;stkvar	_cpz @ sp[(-17)+8]
 11143  013A5E  0EF7               	movlw	-9
 11144  013A60  0060  F027  FFE3   	movff	btemp+8,plusw1
 11145  013A66  0EF8               	movlw	-8
 11146  013A68  0060  F02B  FFE3   	movff	btemp+9,plusw1
 11147  013A6E  0EF9               	movlw	-7
 11148  013A70  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11149  013A76  0EFA               	movlw	-6
 11150  013A78  0060  F033  FFE3   	movff	btemp+11,plusw1
 11151                           
 11152                           ;main.c: 555:  cb = 0;
 11153                           ;stkvar	_cb @ sp[(-17)+4]
 11154  013A7E  0EF3               	movlw	-13
 11155  013A80  6AE3               	clrf	plusw1,c
 11156  013A82  0EF4               	movlw	-12
 11157  013A84  6AE3               	clrf	plusw1,c
 11158  013A86  0EF5               	movlw	-11
 11159  013A88  6AE3               	clrf	plusw1,c
 11160  013A8A  0EF6               	movlw	-10
 11161  013A8C  6AE3               	clrf	plusw1,c
 11162                           
 11163                           ;main.c: 556:  cp = 0;
 11164                           ;stkvar	_cp @ sp[(-17)+0]
 11165  013A8E  0EEF               	movlw	-17
 11166  013A90  6AE3               	clrf	plusw1,c
 11167  013A92  0EF0               	movlw	-16
 11168  013A94  6AE3               	clrf	plusw1,c
 11169  013A96  0EF1               	movlw	-15
 11170  013A98  6AE3               	clrf	plusw1,c
 11171  013A9A  0EF2               	movlw	-14
 11172  013A9C  6AE3               	clrf	plusw1,c
 11173  013A9E                     l14538:
 11174                           
 11175                           ;main.c: 558:   cb += get_raw_result(C_BATT);
 11176  013A9E  0E00               	movlw	0
 11177  013AA0  6EE6               	movwf	postinc1,c
 11178  013AA2  EC37  F0EC         	call	_get_raw_result	;wreg free
 11179                           
 11180                           ;stkvar	_cb @ sp[(-17)+4]
 11181  013AA6  50E1               	movf	fsr1l,w,c
 11182  013AA8  0FF3               	addlw	-13
 11183  013AAA  6ED9               	movwf	fsr2l,c
 11184  013AAC  50E2               	movf	fsr1h,w,c
 11185  013AAE  6EDA               	movwf	fsr2h,c
 11186  013AB0  0EFF               	movlw	255
 11187  013AB2  22DA               	addwfc	fsr2h,f,c
 11188  013AB4  5001               	movf	btemp^0,w,c
 11189  013AB6  26DE               	addwf	postinc2,f,c
 11190  013AB8  5002               	movf	(btemp+1)^0,w,c
 11191  013ABA  22DE               	addwfc	postinc2,f,c
 11192  013ABC  0E00               	movlw	0
 11193  013ABE  22DE               	addwfc	postinc2,f,c
 11194  013AC0  22DE               	addwfc	postinc2,f,c
 11195                           
 11196                           ;main.c: 559:   cp += get_raw_result(C_PV);
 11197  013AC2  0E01               	movlw	1
 11198  013AC4  6EE6               	movwf	postinc1,c
 11199  013AC6  EC37  F0EC         	call	_get_raw_result	;wreg free
 11200                           
 11201                           ;stkvar	_cp @ sp[(-17)+0]
 11202  013ACA  50E1               	movf	fsr1l,w,c
 11203  013ACC  0FEF               	addlw	-17
 11204  013ACE  6ED9               	movwf	fsr2l,c
 11205  013AD0  50E2               	movf	fsr1h,w,c
 11206  013AD2  6EDA               	movwf	fsr2h,c
 11207  013AD4  0EFF               	movlw	255
 11208  013AD6  22DA               	addwfc	fsr2h,f,c
 11209  013AD8  5001               	movf	btemp^0,w,c
 11210  013ADA  26DE               	addwf	postinc2,f,c
 11211  013ADC  5002               	movf	(btemp+1)^0,w,c
 11212  013ADE  22DE               	addwfc	postinc2,f,c
 11213  013AE0  0E00               	movlw	0
 11214  013AE2  22DE               	addwfc	postinc2,f,c
 11215  013AE4  22DE               	addwfc	postinc2,f,c
 11216                           
 11217                           ;main.c: 560:   sprintf(get_vterm_ptr(0, 0), "Sensor Readings     ");
 11218  013AE6  0EA4               	movlw	low STR_50
 11219  013AE8  6EE6               	movwf	postinc1,c
 11220  013AEA  0EFE               	movlw	high STR_50
 11221  013AEC  6EE6               	movwf	postinc1,c
 11222  013AEE  0E00               	movlw	0
 11223  013AF0  6EE6               	movwf	postinc1,c
 11224  013AF2  0E00               	movlw	0
 11225  013AF4  6EE6               	movwf	postinc1,c
 11226  013AF6  EC1E  F0EA         	call	_get_vterm_ptr	;wreg free
 11227  013AFA  0060  F007  FFE6   	movff	btemp,postinc1
 11228  013B00  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11229  013B06  0E04               	movlw	4
 11230  013B08  6EE6               	movwf	postinc1,c
 11231  013B0A  EC5C  F0D8         	call	_sprintf	;wreg free
 11232                           
 11233                           ; BSR set to: 0
 11234                           ;main.c: 561:   sprintf(get_vterm_ptr(1, 0), " %d %d              ", get_raw_result(C_BA
      +                          TT), get_raw_result(C_PV));
 11235  013B0E  0E01               	movlw	1
 11236  013B10  6EE6               	movwf	postinc1,c
 11237  013B12  EC37  F0EC         	call	_get_raw_result	;wreg free
 11238  013B16  0060  F007  FFE6   	movff	btemp,postinc1
 11239  013B1C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11240  013B22  0E00               	movlw	0
 11241  013B24  6EE6               	movwf	postinc1,c
 11242  013B26  EC37  F0EC         	call	_get_raw_result	;wreg free
 11243  013B2A  0060  F007  FFE6   	movff	btemp,postinc1
 11244  013B30  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11245  013B36  0E54               	movlw	low STR_51
 11246  013B38  6EE6               	movwf	postinc1,c
 11247  013B3A  0EFD               	movlw	high STR_51
 11248  013B3C  6EE6               	movwf	postinc1,c
 11249  013B3E  0E00               	movlw	0
 11250  013B40  6EE6               	movwf	postinc1,c
 11251  013B42  0E01               	movlw	1
 11252  013B44  6EE6               	movwf	postinc1,c
 11253  013B46  EC1E  F0EA         	call	_get_vterm_ptr	;wreg free
 11254  013B4A  0060  F007  FFE6   	movff	btemp,postinc1
 11255  013B50  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11256  013B56  0E08               	movlw	8
 11257  013B58  6EE6               	movwf	postinc1,c
 11258  013B5A  EC5C  F0D8         	call	_sprintf	;wreg free
 11259                           
 11260                           ; BSR set to: 0
 11261                           ;main.c: 562:   sprintf(get_vterm_ptr(2, 0), "Stability clock %d  ", x);
 11262                           ;stkvar	_x @ sp[(-17)+16]
 11263  013B5E  0EFF               	movlw	-1
 11264  013B60  50E3               	movf	plusw1,w,c
 11265  013B62  6EE6               	movwf	postinc1,c
 11266  013B64  0E00               	movlw	0
 11267  013B66  6EE6               	movwf	postinc1,c
 11268  013B68  0E0D               	movlw	low STR_52
 11269  013B6A  6EE6               	movwf	postinc1,c
 11270  013B6C  0EFF               	movlw	high STR_52
 11271  013B6E  6EE6               	movwf	postinc1,c
 11272  013B70  0E00               	movlw	0
 11273  013B72  6EE6               	movwf	postinc1,c
 11274  013B74  0E02               	movlw	2
 11275  013B76  6EE6               	movwf	postinc1,c
 11276  013B78  EC1E  F0EA         	call	_get_vterm_ptr	;wreg free
 11277  013B7C  0060  F007  FFE6   	movff	btemp,postinc1
 11278  013B82  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11279  013B88  0E06               	movlw	6
 11280  013B8A  6EE6               	movwf	postinc1,c
 11281  013B8C  EC5C  F0D8         	call	_sprintf	;wreg free
 11282                           
 11283                           ; BSR set to: 0
 11284                           ;main.c: 563:   update_lcd(0);
 11285  013B90  0E00               	movlw	0
 11286  013B92  6EE6               	movwf	postinc1,c
 11287  013B94  EC4D  F0D7         	call	_update_lcd	;wreg free
 11288                           
 11289                           ;main.c: 564:   clear_adc_scan();
 11290  013B98  ECB9  F0ED         	call	_clear_adc_scan	;wreg free
 11291                           
 11292                           ; BSR set to: 1
 11293                           ;main.c: 565:   start_adc_scan();
 11294  013B9C  EC2A  F0E4         	call	_start_adc_scan	;wreg free
 11295                           
 11296                           ;main.c: 566:   WaitMs(100);
 11297  013BA0  0E64               	movlw	100
 11298  013BA2  6EE6               	movwf	postinc1,c
 11299  013BA4  0E00               	movlw	0
 11300  013BA6  6EE6               	movwf	postinc1,c
 11301  013BA8  EC08  F0E9         	call	_WaitMs	;wreg free
 11302                           
 11303                           ;main.c: 567:  } while (++x < 64);
 11304                           ;stkvar	_x @ sp[(-17)+16]
 11305  013BAC  0EFF               	movlw	-1
 11306  013BAE  2AE3               	incf	plusw1,f,c
 11307  013BB0  0EFF               	movlw	-1
 11308  013BB2  006F FF8C  F001    	movff	plusw1,btemp
 11309  013BB8  0E3F               	movlw	63
 11310  013BBA  6401               	cpfsgt	btemp^0,c
 11311  013BBC  D770               	goto	l14538
 11312                           
 11313                           ;main.c: 568:  cb = cb >> 6;
 11314  013BBE  0E06               	movlw	6
 11315  013BC0  6E0C               	movwf	(btemp+11)^0,c
 11316                           
 11317                           ;stkvar	_cb @ sp[(-17)+4]
 11318  013BC2  50E1               	movf	fsr1l,w,c
 11319  013BC4  0FF3               	addlw	-13
 11320  013BC6  6ED9               	movwf	fsr2l,c
 11321  013BC8  50E2               	movf	fsr1h,w,c
 11322  013BCA  6EDA               	movwf	fsr2h,c
 11323  013BCC  0EFF               	movlw	255
 11324  013BCE  22DA               	addwfc	fsr2h,f,c
 11325  013BD0  280C               	incf	(btemp+11)^0,w,c
 11326  013BD2  52DE               	movf	postinc2,f,c
 11327  013BD4  D007               	goto	u13900
 11328  013BD6                     u13905:
 11329  013BD6  52DE               	movf	postinc2,f,c
 11330  013BD8  52DE               	movf	postinc2,f,c
 11331  013BDA  90D8               	bcf	status,0,c
 11332  013BDC  32DD               	rrcf	postdec2,f,c
 11333  013BDE  32DD               	rrcf	postdec2,f,c
 11334  013BE0  32DD               	rrcf	postdec2,f,c
 11335  013BE2  32DE               	rrcf	postinc2,f,c
 11336  013BE4                     u13900:
 11337  013BE4  2EE8               	decfsz	wreg,f,c
 11338  013BE6  D7F7               	goto	u13905
 11339                           
 11340                           ;main.c: 569:  cp = cp >> 6;
 11341  013BE8  0E06               	movlw	6
 11342  013BEA  6E0C               	movwf	(btemp+11)^0,c
 11343                           
 11344                           ;stkvar	_cp @ sp[(-17)+0]
 11345  013BEC  50E1               	movf	fsr1l,w,c
 11346  013BEE  0FEF               	addlw	-17
 11347  013BF0  6ED9               	movwf	fsr2l,c
 11348  013BF2  50E2               	movf	fsr1h,w,c
 11349  013BF4  6EDA               	movwf	fsr2h,c
 11350  013BF6  0EFF               	movlw	255
 11351  013BF8  22DA               	addwfc	fsr2h,f,c
 11352  013BFA  280C               	incf	(btemp+11)^0,w,c
 11353  013BFC  52DE               	movf	postinc2,f,c
 11354  013BFE  D007               	goto	u13910
 11355  013C00                     u13915:
 11356  013C00  52DE               	movf	postinc2,f,c
 11357  013C02  52DE               	movf	postinc2,f,c
 11358  013C04  90D8               	bcf	status,0,c
 11359  013C06  32DD               	rrcf	postdec2,f,c
 11360  013C08  32DD               	rrcf	postdec2,f,c
 11361  013C0A  32DD               	rrcf	postdec2,f,c
 11362  013C0C  32DE               	rrcf	postinc2,f,c
 11363  013C0E                     u13910:
 11364  013C0E  2EE8               	decfsz	wreg,f,c
 11365  013C10  D7F7               	goto	u13915
 11366                           
 11367                           ;main.c: 571:  if (cal_current_10A(0, cb, cp, 0.0, 0.0)) {
 11368  013C12  0E00               	movlw	0
 11369  013C14  6EE6               	movwf	postinc1,c
 11370  013C16  0E00               	movlw	0
 11371  013C18  6EE6               	movwf	postinc1,c
 11372  013C1A  0E00               	movlw	0
 11373  013C1C  6EE6               	movwf	postinc1,c
 11374  013C1E  0E00               	movlw	0
 11375  013C20  6EE6               	movwf	postinc1,c
 11376  013C22  0E00               	movlw	0
 11377  013C24  6EE6               	movwf	postinc1,c
 11378  013C26  0E00               	movlw	0
 11379  013C28  6EE6               	movwf	postinc1,c
 11380  013C2A  0E00               	movlw	0
 11381  013C2C  6EE6               	movwf	postinc1,c
 11382  013C2E  0E00               	movlw	0
 11383  013C30  6EE6               	movwf	postinc1,c
 11384                           
 11385                           ;stkvar	_cp @ sp[(-25)+0]
 11386  013C32  0EE7               	movlw	-25
 11387  013C34  006F FF8F FFE6     	movff	plusw1,postinc1
 11388  013C3A  006F FF8F FFE6     	movff	plusw1,postinc1
 11389                           
 11390                           ;stkvar	_cb @ sp[(-27)+4]
 11391  013C40  0EE9               	movlw	-23
 11392  013C42  006F FF8F FFE6     	movff	plusw1,postinc1
 11393  013C48  006F FF8F FFE6     	movff	plusw1,postinc1
 11394  013C4E  0E00               	movlw	0
 11395  013C50  6EE6               	movwf	postinc1,c
 11396  013C52  EC39  F0DC         	call	_cal_current_10A	;wreg free
 11397  013C56  5001               	movf	btemp^0,w,c
 11398  013C58  B4D8               	btfsc	status,2,c
 11399  013C5A  D193               	goto	l14576
 11400                           
 11401                           ;main.c: 572:   cal_current_10A(1, cb, cp, 10.0 / (float) (cb - cbz), 10.0 / (float) (cp
      +                           - cpz));
 11402                           ;stkvar	_cpz @ sp[(-17)+8]
 11403                           ;stkvar	_cp @ sp[(-17)+0]
 11404  013C5C  0EEF               	movlw	-17
 11405  013C5E  006F FF8C  F009    	movff	plusw1,btemp+8
 11406  013C64  0EF0               	movlw	-16
 11407  013C66  006F FF8C  F00A    	movff	plusw1,btemp+9
 11408  013C6C  0EF1               	movlw	-15
 11409  013C6E  006F FF8C  F00B    	movff	plusw1,btemp+10
 11410  013C74  0EF2               	movlw	-14
 11411  013C76  006F FF8C  F00C    	movff	plusw1,btemp+11
 11412  013C7C  0EF7               	movlw	-9
 11413  013C7E  50E3               	movf	plusw1,w,c
 11414  013C80  5E09               	subwf	(btemp+8)^0,f,c
 11415  013C82  0EF8               	movlw	-8
 11416  013C84  50E3               	movf	plusw1,w,c
 11417  013C86  5A0A               	subwfb	(btemp+9)^0,f,c
 11418  013C88  0EF9               	movlw	-7
 11419  013C8A  50E3               	movf	plusw1,w,c
 11420  013C8C  5A0B               	subwfb	(btemp+10)^0,f,c
 11421  013C8E  0EFA               	movlw	-6
 11422  013C90  50E3               	movf	plusw1,w,c
 11423  013C92  5A0C               	subwfb	(btemp+11)^0,f,c
 11424  013C94  0060  F027  FFE6   	movff	btemp+8,postinc1
 11425  013C9A  0060  F02B  FFE6   	movff	btemp+9,postinc1
 11426  013CA0  0060  F02F  FFE6   	movff	btemp+10,postinc1
 11427  013CA6  0060  F033  FFE6   	movff	btemp+11,postinc1
 11428  013CAC  0E00               	movlw	0
 11429  013CAE  6EE6               	movwf	postinc1,c
 11430  013CB0  ECA6  F0C8         	call	___xxtofl	;wreg free
 11431  013CB4  0060  F007  FFE6   	movff	btemp,postinc1
 11432  013CBA  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11433  013CC0  0060  F00F  FFE6   	movff	btemp+2,postinc1
 11434  013CC6  0060  F013  FFE6   	movff	btemp+3,postinc1
 11435  013CCC  0E00               	movlw	0
 11436  013CCE  6EE6               	movwf	postinc1,c
 11437  013CD0  0E00               	movlw	0
 11438  013CD2  6EE6               	movwf	postinc1,c
 11439  013CD4  0E20               	movlw	32
 11440  013CD6  6EE6               	movwf	postinc1,c
 11441  013CD8  0E41               	movlw	65
 11442  013CDA  6EE6               	movwf	postinc1,c
 11443  013CDC  EC45  F0AD         	call	___fldiv	;wreg free
 11444  013CE0  0060  F007  FFE6   	movff	btemp,postinc1
 11445  013CE6  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11446  013CEC  0060  F00F  FFE6   	movff	btemp+2,postinc1
 11447  013CF2  0060  F013  FFE6   	movff	btemp+3,postinc1
 11448                           
 11449                           ;stkvar	_cbz @ sp[(-21)+12]
 11450                           ;stkvar	_cb @ sp[(-21)+4]
 11451  013CF8  0EEF               	movlw	-17
 11452  013CFA  006F FF8C  F009    	movff	plusw1,btemp+8
 11453  013D00  0EF0               	movlw	-16
 11454  013D02  006F FF8C  F00A    	movff	plusw1,btemp+9
 11455  013D08  0EF1               	movlw	-15
 11456  013D0A  006F FF8C  F00B    	movff	plusw1,btemp+10
 11457  013D10  0EF2               	movlw	-14
 11458  013D12  006F FF8C  F00C    	movff	plusw1,btemp+11
 11459  013D18  0EF7               	movlw	-9
 11460  013D1A  50E3               	movf	plusw1,w,c
 11461  013D1C  5E09               	subwf	(btemp+8)^0,f,c
 11462  013D1E  0EF8               	movlw	-8
 11463  013D20  50E3               	movf	plusw1,w,c
 11464  013D22  5A0A               	subwfb	(btemp+9)^0,f,c
 11465  013D24  0EF9               	movlw	-7
 11466  013D26  50E3               	movf	plusw1,w,c
 11467  013D28  5A0B               	subwfb	(btemp+10)^0,f,c
 11468  013D2A  0EFA               	movlw	-6
 11469  013D2C  50E3               	movf	plusw1,w,c
 11470  013D2E  5A0C               	subwfb	(btemp+11)^0,f,c
 11471  013D30  0060  F027  FFE6   	movff	btemp+8,postinc1
 11472  013D36  0060  F02B  FFE6   	movff	btemp+9,postinc1
 11473  013D3C  0060  F02F  FFE6   	movff	btemp+10,postinc1
 11474  013D42  0060  F033  FFE6   	movff	btemp+11,postinc1
 11475  013D48  0E00               	movlw	0
 11476  013D4A  6EE6               	movwf	postinc1,c
 11477  013D4C  ECA6  F0C8         	call	___xxtofl	;wreg free
 11478  013D50  0060  F007  FFE6   	movff	btemp,postinc1
 11479  013D56  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11480  013D5C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 11481  013D62  0060  F013  FFE6   	movff	btemp+3,postinc1
 11482  013D68  0E00               	movlw	0
 11483  013D6A  6EE6               	movwf	postinc1,c
 11484  013D6C  0E00               	movlw	0
 11485  013D6E  6EE6               	movwf	postinc1,c
 11486  013D70  0E20               	movlw	32
 11487  013D72  6EE6               	movwf	postinc1,c
 11488  013D74  0E41               	movlw	65
 11489  013D76  6EE6               	movwf	postinc1,c
 11490  013D78  EC45  F0AD         	call	___fldiv	;wreg free
 11491  013D7C  0060  F007  FFE6   	movff	btemp,postinc1
 11492  013D82  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11493  013D88  0060  F00F  FFE6   	movff	btemp+2,postinc1
 11494  013D8E  0060  F013  FFE6   	movff	btemp+3,postinc1
 11495                           
 11496                           ;stkvar	_cp @ sp[(-25)+0]
 11497  013D94  0EE7               	movlw	-25
 11498  013D96  006F FF8F FFE6     	movff	plusw1,postinc1
 11499  013D9C  006F FF8F FFE6     	movff	plusw1,postinc1
 11500                           
 11501                           ;stkvar	_cb @ sp[(-27)+4]
 11502  013DA2  0EE9               	movlw	-23
 11503  013DA4  006F FF8F FFE6     	movff	plusw1,postinc1
 11504  013DAA  006F FF8F FFE6     	movff	plusw1,postinc1
 11505  013DB0  0E01               	movlw	1
 11506  013DB2  6EE6               	movwf	postinc1,c
 11507  013DB4  EC39  F0DC         	call	_cal_current_10A	;wreg free
 11508                           
 11509                           ;main.c: 573:   sprintf(get_vterm_ptr(0, 0), "Battery and PV      ");
 11510  013DB8  0E7A               	movlw	low STR_46
 11511  013DBA  6EE6               	movwf	postinc1,c
 11512  013DBC  0EFE               	movlw	high STR_46
 11513  013DBE  6EE6               	movwf	postinc1,c
 11514  013DC0  0E00               	movlw	0
 11515  013DC2  6EE6               	movwf	postinc1,c
 11516  013DC4  0E00               	movlw	0
 11517  013DC6  6EE6               	movwf	postinc1,c
 11518  013DC8  EC1E  F0EA         	call	_get_vterm_ptr	;wreg free
 11519  013DCC  0060  F007  FFE6   	movff	btemp,postinc1
 11520  013DD2  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11521  013DD8  0E04               	movlw	4
 11522  013DDA  6EE6               	movwf	postinc1,c
 11523  013DDC  EC5C  F0D8         	call	_sprintf	;wreg free
 11524                           
 11525                           ; BSR set to: 0
 11526                           ;main.c: 574:   sprintf(get_vterm_ptr(1, 0), " %f %f              ", 10.0 / (float) (cb 
      +                          - cbz), 10.0 / (float) (cp - cpz));
 11527                           ;stkvar	_cpz @ sp[(-17)+8]
 11528                           ;stkvar	_cp @ sp[(-17)+0]
 11529  013DE0  0EEF               	movlw	-17
 11530  013DE2  006F FF8C  F009    	movff	plusw1,btemp+8
 11531  013DE8  0EF0               	movlw	-16
 11532  013DEA  006F FF8C  F00A    	movff	plusw1,btemp+9
 11533  013DF0  0EF1               	movlw	-15
 11534  013DF2  006F FF8C  F00B    	movff	plusw1,btemp+10
 11535  013DF8  0EF2               	movlw	-14
 11536  013DFA  006F FF8C  F00C    	movff	plusw1,btemp+11
 11537  013E00  0EF7               	movlw	-9
 11538  013E02  50E3               	movf	plusw1,w,c
 11539  013E04  5E09               	subwf	(btemp+8)^0,f,c
 11540  013E06  0EF8               	movlw	-8
 11541  013E08  50E3               	movf	plusw1,w,c
 11542  013E0A  5A0A               	subwfb	(btemp+9)^0,f,c
 11543  013E0C  0EF9               	movlw	-7
 11544  013E0E  50E3               	movf	plusw1,w,c
 11545  013E10  5A0B               	subwfb	(btemp+10)^0,f,c
 11546  013E12  0EFA               	movlw	-6
 11547  013E14  50E3               	movf	plusw1,w,c
 11548  013E16  5A0C               	subwfb	(btemp+11)^0,f,c
 11549  013E18  0060  F027  FFE6   	movff	btemp+8,postinc1
 11550  013E1E  0060  F02B  FFE6   	movff	btemp+9,postinc1
 11551  013E24  0060  F02F  FFE6   	movff	btemp+10,postinc1
 11552  013E2A  0060  F033  FFE6   	movff	btemp+11,postinc1
 11553  013E30  0E00               	movlw	0
 11554  013E32  6EE6               	movwf	postinc1,c
 11555  013E34  ECA6  F0C8         	call	___xxtofl	;wreg free
 11556  013E38  0060  F007  FFE6   	movff	btemp,postinc1
 11557  013E3E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11558  013E44  0060  F00F  FFE6   	movff	btemp+2,postinc1
 11559  013E4A  0060  F013  FFE6   	movff	btemp+3,postinc1
 11560  013E50  0E00               	movlw	0
 11561  013E52  6EE6               	movwf	postinc1,c
 11562  013E54  0E00               	movlw	0
 11563  013E56  6EE6               	movwf	postinc1,c
 11564  013E58  0E20               	movlw	32
 11565  013E5A  6EE6               	movwf	postinc1,c
 11566  013E5C  0E41               	movlw	65
 11567  013E5E  6EE6               	movwf	postinc1,c
 11568  013E60  EC45  F0AD         	call	___fldiv	;wreg free
 11569  013E64  0060  F007  FFE6   	movff	btemp,postinc1
 11570  013E6A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11571  013E70  0060  F00F  FFE6   	movff	btemp+2,postinc1
 11572  013E76  0060  F013  FFE6   	movff	btemp+3,postinc1
 11573                           
 11574                           ;stkvar	_cbz @ sp[(-21)+12]
 11575                           ;stkvar	_cb @ sp[(-21)+4]
 11576  013E7C  0EEF               	movlw	-17
 11577  013E7E  006F FF8C  F009    	movff	plusw1,btemp+8
 11578  013E84  0EF0               	movlw	-16
 11579  013E86  006F FF8C  F00A    	movff	plusw1,btemp+9
 11580  013E8C  0EF1               	movlw	-15
 11581  013E8E  006F FF8C  F00B    	movff	plusw1,btemp+10
 11582  013E94  0EF2               	movlw	-14
 11583  013E96  006F FF8C  F00C    	movff	plusw1,btemp+11
 11584  013E9C  0EF7               	movlw	-9
 11585  013E9E  50E3               	movf	plusw1,w,c
 11586  013EA0  5E09               	subwf	(btemp+8)^0,f,c
 11587  013EA2  0EF8               	movlw	-8
 11588  013EA4  50E3               	movf	plusw1,w,c
 11589  013EA6  5A0A               	subwfb	(btemp+9)^0,f,c
 11590  013EA8  0EF9               	movlw	-7
 11591  013EAA  50E3               	movf	plusw1,w,c
 11592  013EAC  5A0B               	subwfb	(btemp+10)^0,f,c
 11593  013EAE  0EFA               	movlw	-6
 11594  013EB0  50E3               	movf	plusw1,w,c
 11595  013EB2  5A0C               	subwfb	(btemp+11)^0,f,c
 11596  013EB4  0060  F027  FFE6   	movff	btemp+8,postinc1
 11597  013EBA  0060  F02B  FFE6   	movff	btemp+9,postinc1
 11598  013EC0  0060  F02F  FFE6   	movff	btemp+10,postinc1
 11599  013EC6  0060  F033  FFE6   	movff	btemp+11,postinc1
 11600  013ECC  0E00               	movlw	0
 11601  013ECE  6EE6               	movwf	postinc1,c
 11602  013ED0  ECA6  F0C8         	call	___xxtofl	;wreg free
 11603  013ED4  0060  F007  FFE6   	movff	btemp,postinc1
 11604  013EDA  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11605  013EE0  0060  F00F  FFE6   	movff	btemp+2,postinc1
 11606  013EE6  0060  F013  FFE6   	movff	btemp+3,postinc1
 11607  013EEC  0E00               	movlw	0
 11608  013EEE  6EE6               	movwf	postinc1,c
 11609  013EF0  0E00               	movlw	0
 11610  013EF2  6EE6               	movwf	postinc1,c
 11611  013EF4  0E20               	movlw	32
 11612  013EF6  6EE6               	movwf	postinc1,c
 11613  013EF8  0E41               	movlw	65
 11614  013EFA  6EE6               	movwf	postinc1,c
 11615  013EFC  EC45  F0AD         	call	___fldiv	;wreg free
 11616  013F00  0060  F007  FFE6   	movff	btemp,postinc1
 11617  013F06  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11618  013F0C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 11619  013F12  0060  F013  FFE6   	movff	btemp+3,postinc1
 11620  013F18  0E69               	movlw	low STR_67
 11621  013F1A  6EE6               	movwf	postinc1,c
 11622  013F1C  0EFD               	movlw	high STR_67
 11623  013F1E  6EE6               	movwf	postinc1,c
 11624  013F20  0E00               	movlw	0
 11625  013F22  6EE6               	movwf	postinc1,c
 11626  013F24  0E01               	movlw	1
 11627  013F26  6EE6               	movwf	postinc1,c
 11628  013F28  EC1E  F0EA         	call	_get_vterm_ptr	;wreg free
 11629  013F2C  0060  F007  FFE6   	movff	btemp,postinc1
 11630  013F32  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11631  013F38  0E0C               	movlw	12
 11632  013F3A  6EE6               	movwf	postinc1,c
 11633  013F3C  EC5C  F0D8         	call	_sprintf	;wreg free
 11634                           
 11635                           ; BSR set to: 0
 11636                           ;main.c: 575:   sprintf(get_vterm_ptr(2, 0), "10A Cal Set         ");
 11637  013F40  0E26               	movlw	low STR_68
 11638  013F42  6EE6               	movwf	postinc1,c
 11639  013F44  0EFE               	movlw	high STR_68
 11640  013F46  6EE6               	movwf	postinc1,c
 11641  013F48  0E00               	movlw	0
 11642  013F4A  6EE6               	movwf	postinc1,c
 11643  013F4C  0E02               	movlw	2
 11644  013F4E  6EE6               	movwf	postinc1,c
 11645  013F50  EC1E  F0EA         	call	_get_vterm_ptr	;wreg free
 11646  013F54  0060  F007  FFE6   	movff	btemp,postinc1
 11647  013F5A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11648  013F60  0E04               	movlw	4
 11649  013F62  6EE6               	movwf	postinc1,c
 11650  013F64  EC5C  F0D8         	call	_sprintf	;wreg free
 11651                           
 11652                           ; BSR set to: 0
 11653                           ;main.c: 576:   update_lcd(0);
 11654  013F68  0E00               	movlw	0
 11655  013F6A  6EE6               	movwf	postinc1,c
 11656  013F6C  EC4D  F0D7         	call	_update_lcd	;wreg free
 11657                           
 11658                           ;main.c: 577:   WaitMs(5000);
 11659  013F70  0E88               	movlw	136
 11660  013F72  6EE6               	movwf	postinc1,c
 11661  013F74  0E13               	movlw	19
 11662  013F76  6EE6               	movwf	postinc1,c
 11663  013F78  EC08  F0E9         	call	_WaitMs	;wreg free
 11664                           
 11665                           ;main.c: 578:   write_cal_data();
 11666  013F7C  EC5D  F0D1         	call	_write_cal_data	;wreg free
 11667                           
 11668                           ;main.c: 579:  } else {
 11669  013F80  D055               	goto	l1505
 11670  013F82                     l14576:
 11671                           
 11672                           ;main.c: 580:   sprintf(get_vterm_ptr(0, 0), "Battery and PV      ");
 11673  013F82  0E7A               	movlw	low STR_46
 11674  013F84  6EE6               	movwf	postinc1,c
 11675  013F86  0EFE               	movlw	high STR_46
 11676  013F88  6EE6               	movwf	postinc1,c
 11677  013F8A  0E00               	movlw	0
 11678  013F8C  6EE6               	movwf	postinc1,c
 11679  013F8E  0E00               	movlw	0
 11680  013F90  6EE6               	movwf	postinc1,c
 11681  013F92  EC1E  F0EA         	call	_get_vterm_ptr	;wreg free
 11682  013F96  0060  F007  FFE6   	movff	btemp,postinc1
 11683  013F9C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11684  013FA2  0E04               	movlw	4
 11685  013FA4  6EE6               	movwf	postinc1,c
 11686  013FA6  EC5C  F0D8         	call	_sprintf	;wreg free
 11687                           
 11688                           ;main.c: 581:   sprintf(get_vterm_ptr(1, 0), " %ld %ld            ", get_raw_result(C_BA
      +                          TT), get_raw_result(C_PV));
 11689  013FAA  0E01               	movlw	1
 11690  013FAC  6EE6               	movwf	postinc1,c
 11691  013FAE  EC37  F0EC         	call	_get_raw_result	;wreg free
 11692  013FB2  0060  F007  FFE6   	movff	btemp,postinc1
 11693  013FB8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11694  013FBE  0E00               	movlw	0
 11695  013FC0  6EE6               	movwf	postinc1,c
 11696  013FC2  EC37  F0EC         	call	_get_raw_result	;wreg free
 11697  013FC6  0060  F007  FFE6   	movff	btemp,postinc1
 11698  013FCC  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11699  013FD2  0E7E               	movlw	low STR_54
 11700  013FD4  6EE6               	movwf	postinc1,c
 11701  013FD6  0EFD               	movlw	high STR_54
 11702  013FD8  6EE6               	movwf	postinc1,c
 11703  013FDA  0E00               	movlw	0
 11704  013FDC  6EE6               	movwf	postinc1,c
 11705  013FDE  0E01               	movlw	1
 11706  013FE0  6EE6               	movwf	postinc1,c
 11707  013FE2  EC1E  F0EA         	call	_get_vterm_ptr	;wreg free
 11708  013FE6  0060  F007  FFE6   	movff	btemp,postinc1
 11709  013FEC  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11710  013FF2  0E08               	movlw	8
 11711  013FF4  6EE6               	movwf	postinc1,c
 11712  013FF6  EC5C  F0D8         	call	_sprintf	;wreg free
 11713                           
 11714                           ;main.c: 582:   sprintf(get_vterm_ptr(2, 0), "10A Out Of Range    ");
 11715  013FFA  0ECE               	movlw	low STR_71
 11716  013FFC  6EE6               	movwf	postinc1,c
 11717  013FFE  0EFE               	movlw	high STR_71
 11718  014000  6EE6               	movwf	postinc1,c
 11719  014002  0E00               	movlw	0
 11720  014004  6EE6               	movwf	postinc1,c
 11721  014006  0E02               	movlw	2
 11722  014008  6EE6               	movwf	postinc1,c
 11723  01400A  EC1E  F0EA         	call	_get_vterm_ptr	;wreg free
 11724  01400E  0060  F007  FFE6   	movff	btemp,postinc1
 11725  014014  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11726  01401A  0E04               	movlw	4
 11727  01401C  6EE6               	movwf	postinc1,c
 11728  01401E  EC5C  F0D8         	call	_sprintf	;wreg free
 11729                           
 11730                           ;main.c: 583:   update_lcd(0);
 11731  014022  0E00               	movlw	0
 11732  014024  6EE6               	movwf	postinc1,c
 11733  014026  EC4D  F0D7         	call	_update_lcd	;wreg free
 11734  01402A  D45B               	goto	l14500
 11735  01402C                     l1505:
 11736                           
 11737                           ; _current_sensor_cal: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 0, argsize = 0, vargsize = 0
 11738  01402C  0EEF               	movlw	239
 11739  01402E  26E1               	addwf	fsr1l,f,c
 11740  014030  0EFF               	movlw	255
 11741  014032  22E2               	addwfc	fsr1h,f,c
 11742  014034  0012               	return		;funcret
 11743  014036                     __end_of_current_sensor_cal:
 11744                           	opt callstack 0
 11745                           
 11746 ;; *************** function _write_cal_data *****************
 11747 ;; Defined at:
 11748 ;;		line 406 in file "daq.c"
 11749 ;; Parameters:    Size  Location     Type
 11750 ;;		None
 11751 ;; Auto vars:     Size  Location     Type
 11752 ;;  x               2  [STACK] unsigned short 
 11753 ;;  r_cal_ptr       2  [STACK] PTR unsigned char 
 11754 ;;		 -> R(143), 
 11755 ;;  y               2  [STACK] unsigned short 
 11756 ;;  crcVal          1  [STACK] unsigned char 
 11757 ;; Return value:  Size  Location     Type
 11758 ;;                  1  [STACK] void 
 11759 ;; Registers used:
 11760 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, 
      +btemp+11, prodl
 11761 ;; Tracked objects:
 11762 ;;		On entry : 0/0
 11763 ;;		On exit  : 0/0
 11764 ;;		Unchanged: 0/0
 11765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11767 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11769 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11770 ;;Total ram usage:        0 bytes
 11771 ;; Hardware stack levels used:    1
 11772 ;; Hardware stack levels required when called:   17
 11773 ;; This function calls:
 11774 ;;		_CRC_8BitDataWrite
 11775 ;;		_CRC_CalculatedResultGet
 11776 ;;		_CRC_Initialize
 11777 ;;		_CRC_IsBusy
 11778 ;;		_CRC_Start
 11779 ;;		_DATAEE_WriteByte
 11780 ;; This function is called by:
 11781 ;;		_current_sensor_cal
 11782 ;; This function uses a reentrant model
 11783 ;;
 11784                           
 11785                           	psect	text31
 11786  01A2BA                     __ptext31:
 11787                           	opt callstack 0
 11788  01A2BA                     _write_cal_data:
 11789                           	opt callstack 0
 11790                           
 11791                           ; autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11792  01A2BA  0E07               	movlw	7
 11793  01A2BC  26E1               	addwf	fsr1l,f,c
 11794  01A2BE  0E00               	movlw	0
 11795  01A2C0  22E2               	addwfc	fsr1h,f,c
 11796                           
 11797                           ;daq.c: 408:  uint16_t x = 0, y;
 11798                           ;stkvar	_x @ sp[(-7)+0]
 11799                           
 11800                           ;incstack = 0
 11801  01A2C2  0EF9               	movlw	-7
 11802  01A2C4  6AE3               	clrf	plusw1,c
 11803  01A2C6  0EFA               	movlw	-6
 11804  01A2C8  6AE3               	clrf	plusw1,c
 11805                           
 11806                           ;daq.c: 409:  uint8_t *r_cal_ptr, crcVal;;daq.c: 411:  y = sizeof(R);
 11807  01A2CA  0E8F               	movlw	143
 11808  01A2CC  6E0B               	movwf	(btemp+10)^0,c
 11809  01A2CE  0E00               	movlw	0
 11810  01A2D0  6E0C               	movwf	(btemp+11)^0,c
 11811                           
 11812                           ;stkvar	_y @ sp[(-7)+4]
 11813  01A2D2  0EFD               	movlw	-3
 11814  01A2D4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11815  01A2DA  0EFE               	movlw	-2
 11816  01A2DC  0060  F033  FFE3   	movff	btemp+11,plusw1
 11817                           
 11818                           ;daq.c: 412:  R.crc = 0x42;
 11819  01A2E2  0E42               	movlw	66
 11820  01A2E4  0101               	movlb	1	; () banked
 11821  01A2E6  6F95               	movwf	(_R+142)& (0+255),b	;volatile
 11822                           
 11823                           ; BSR set to: 1
 11824                           ;daq.c: 413:  r_cal_ptr = (uint8_t*) & R;
 11825                           ;stkvar	_r_cal_ptr @ sp[(-7)+2]
 11826  01A2E8  0E01               	movlw	high _R
 11827  01A2EA  6E01               	movwf	btemp^0,c
 11828  01A2EC  0EFC               	movlw	-4
 11829  01A2EE  0060  F007  FFE3   	movff	btemp,plusw1
 11830  01A2F4  0E07               	movlw	low _R
 11831  01A2F6  6E01               	movwf	btemp^0,c
 11832  01A2F8  0EFB               	movlw	-5
 11833  01A2FA  0060  F007  FFE3   	movff	btemp,plusw1
 11834                           
 11835                           ; BSR set to: 1
 11836                           ;daq.c: 414:  R.checkmark = 0x1957;
 11837  01A300  0E19               	movlw	25
 11838  01A302  6F94               	movwf	(_R+141)& (0+255),b	;volatile
 11839  01A304  0E57               	movlw	87
 11840  01A306  6F93               	movwf	(_R+140)& (0+255),b	;volatile
 11841                           
 11842                           ; BSR set to: 1
 11843                           ;daq.c: 416:  CRC_Initialize();
 11844  01A308  EC18  F0E1         	call	_CRC_Initialize	;wreg free
 11845                           
 11846                           ; BSR set to: 0
 11847                           ;daq.c: 419:  CRC_Start();
 11848  01A30C  ECB6  F0ED         	call	_CRC_Start	;wreg free
 11849  01A310                     l11492:
 11850                           
 11851                           ;daq.c: 422:   DATAEE_WriteByte(x, r_cal_ptr[x]);
 11852                           ;stkvar	_x @ sp[(-7)+0]
 11853  01A310  0EF9               	movlw	-7
 11854  01A312  006F FF8C  F00B    	movff	plusw1,btemp+10
 11855  01A318  0EFA               	movlw	-6
 11856  01A31A  006F FF8C  F00C    	movff	plusw1,btemp+11
 11857                           
 11858                           ;stkvar	_r_cal_ptr @ sp[(-7)+2]
 11859  01A320  0EFB               	movlw	-5
 11860  01A322  006F FF8C  F009    	movff	plusw1,btemp+8
 11861  01A328  0EFC               	movlw	-4
 11862  01A32A  006F FF8C  F00A    	movff	plusw1,btemp+9
 11863  01A330  500B               	movf	(btemp+10)^0,w,c
 11864  01A332  2409               	addwf	(btemp+8)^0,w,c
 11865  01A334  6ED9               	movwf	fsr2l,c
 11866  01A336  500C               	movf	(btemp+11)^0,w,c
 11867  01A338  200A               	addwfc	(btemp+9)^0,w,c
 11868  01A33A  6EDA               	movwf	fsr2h,c
 11869  01A33C  50DF               	movf	indf2,w,c
 11870  01A33E  6EE6               	movwf	postinc1,c
 11871                           
 11872                           ;stkvar	_x @ sp[(-8)+0]
 11873  01A340  0EF8               	movlw	-8
 11874  01A342  006F FF8F FFE6     	movff	plusw1,postinc1
 11875  01A348  006F FF8F FFE6     	movff	plusw1,postinc1
 11876  01A34E  ECC3  F0E3         	call	_DATAEE_WriteByte	;wreg free
 11877                           
 11878                           ;daq.c: 423:   CRC_8BitDataWrite(r_cal_ptr[x]);
 11879                           ;stkvar	_x @ sp[(-7)+0]
 11880  01A352  0EF9               	movlw	-7
 11881  01A354  006F FF8C  F00B    	movff	plusw1,btemp+10
 11882  01A35A  0EFA               	movlw	-6
 11883  01A35C  006F FF8C  F00C    	movff	plusw1,btemp+11
 11884                           
 11885                           ;stkvar	_r_cal_ptr @ sp[(-7)+2]
 11886  01A362  0EFB               	movlw	-5
 11887  01A364  006F FF8C  F009    	movff	plusw1,btemp+8
 11888  01A36A  0EFC               	movlw	-4
 11889  01A36C  006F FF8C  F00A    	movff	plusw1,btemp+9
 11890  01A372  500B               	movf	(btemp+10)^0,w,c
 11891  01A374  2409               	addwf	(btemp+8)^0,w,c
 11892  01A376  6ED9               	movwf	fsr2l,c
 11893  01A378  500C               	movf	(btemp+11)^0,w,c
 11894  01A37A  200A               	addwfc	(btemp+9)^0,w,c
 11895  01A37C  6EDA               	movwf	fsr2h,c
 11896  01A37E  50DF               	movf	indf2,w,c
 11897  01A380  6EE6               	movwf	postinc1,c
 11898  01A382  EC22  F0ED         	call	_CRC_8BitDataWrite	;wreg free
 11899  01A386                     l11496:
 11900  01A386  EC44  F0ED         	call	_CRC_IsBusy	;wreg free
 11901  01A38A  5001               	movf	btemp^0,w,c
 11902  01A38C  A4D8               	btfss	status,2,c
 11903  01A38E  D7FB               	goto	l11496
 11904                           
 11905                           ;daq.c: 425:  } while (++x < y);
 11906                           ;stkvar	_y @ sp[(-7)+4]
 11907  01A390  0EFD               	movlw	-3
 11908  01A392  006F FF8C  F00B    	movff	plusw1,btemp+10
 11909  01A398  0EFE               	movlw	-2
 11910  01A39A  006F FF8C  F00C    	movff	plusw1,btemp+11
 11911                           
 11912                           ;stkvar	_x @ sp[(-7)+0]
 11913  01A3A0  0EF9               	movlw	-7
 11914  01A3A2  50E3               	movf	plusw1,w,c
 11915  01A3A4  0F01               	addlw	1
 11916  01A3A6  6E01               	movwf	btemp^0,c
 11917  01A3A8  0EF9               	movlw	-7
 11918  01A3AA  0060  F007  FFE3   	movff	btemp,plusw1
 11919  01A3B0  6A01               	clrf	btemp^0,c
 11920  01A3B2  0EFA               	movlw	-6
 11921  01A3B4  50E3               	movf	plusw1,w,c
 11922  01A3B6  2001               	addwfc	btemp^0,w,c
 11923  01A3B8  6E01               	movwf	btemp^0,c
 11924  01A3BA  0EFA               	movlw	-6
 11925  01A3BC  0060  F007  FFE3   	movff	btemp,plusw1
 11926  01A3C2  0EF9               	movlw	-7
 11927  01A3C4  006F FF8C  F009    	movff	plusw1,btemp+8
 11928  01A3CA  0EFA               	movlw	-6
 11929  01A3CC  006F FF8C  F00A    	movff	plusw1,btemp+9
 11930  01A3D2  500B               	movf	(btemp+10)^0,w,c
 11931  01A3D4  5C09               	subwf	(btemp+8)^0,w,c
 11932  01A3D6  500C               	movf	(btemp+11)^0,w,c
 11933  01A3D8  580A               	subwfb	(btemp+9)^0,w,c
 11934  01A3DA  A0D8               	btfss	status,0,c
 11935  01A3DC  D799               	goto	l11492
 11936                           
 11937                           ;daq.c: 427:  crcVal = CRC_CalculatedResultGet(0, 0x00);
 11938  01A3DE  0E00               	movlw	0
 11939  01A3E0  6EE6               	movwf	postinc1,c
 11940  01A3E2  0E00               	movlw	0
 11941  01A3E4  6EE6               	movwf	postinc1,c
 11942  01A3E6  0E00               	movlw	0
 11943  01A3E8  6EE6               	movwf	postinc1,c
 11944  01A3EA  EC89  F0CE         	call	_CRC_CalculatedResultGet	;wreg free
 11945                           
 11946                           ;stkvar	_crcVal @ sp[(-7)+6]
 11947  01A3EE  0EFF               	movlw	-1
 11948  01A3F0  0060  F007  FFE3   	movff	btemp,plusw1
 11949                           
 11950                           ;daq.c: 429:  DATAEE_WriteByte(sizeof(R) - 1, crcVal);
 11951                           ;stkvar	_crcVal @ sp[(-7)+6]
 11952  01A3F6  0EFF               	movlw	-1
 11953  01A3F8  50E3               	movf	plusw1,w,c
 11954  01A3FA  6EE6               	movwf	postinc1,c
 11955  01A3FC  0E8E               	movlw	142
 11956  01A3FE  6EE6               	movwf	postinc1,c
 11957  01A400  0E00               	movlw	0
 11958  01A402  6EE6               	movwf	postinc1,c
 11959  01A404  ECC3  F0E3         	call	_DATAEE_WriteByte	;wreg free
 11960                           
 11961                           ; _write_cal_data: autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 11962  01A408  0EF9               	movlw	249
 11963  01A40A  26E1               	addwf	fsr1l,f,c
 11964  01A40C  0EFF               	movlw	255
 11965  01A40E  22E2               	addwfc	fsr1h,f,c
 11966  01A410  0012               	return		;funcret
 11967  01A412                     __end_of_write_cal_data:
 11968                           	opt callstack 0
 11969                           
 11970 ;; *************** function _DATAEE_WriteByte *****************
 11971 ;; Defined at:
 11972 ;;		line 172 in file "mcc_generated_files/memory.c"
 11973 ;; Parameters:    Size  Location     Type
 11974 ;;  bAdd            2  [STACK] unsigned short 
 11975 ;;  bData           1  [STACK] unsigned char 
 11976 ;; Auto vars:     Size  Location     Type
 11977 ;;  GIEBitValue     1  [STACK] unsigned char 
 11978 ;; Return value:  Size  Location     Type
 11979 ;;                  1  [STACK] void 
 11980 ;; Registers used:
 11981 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+11
 11982 ;; Tracked objects:
 11983 ;;		On entry : 0/39
 11984 ;;		On exit  : 0/0
 11985 ;;		Unchanged: 0/0
 11986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11987 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11988 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11989 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11990 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11991 ;;Total ram usage:        0 bytes
 11992 ;; Hardware stack levels used:    1
 11993 ;; Hardware stack levels required when called:   15
 11994 ;; This function calls:
 11995 ;;		Nothing
 11996 ;; This function is called by:
 11997 ;;		_write_cal_data
 11998 ;; This function uses a reentrant model
 11999 ;;
 12000                           
 12001                           	psect	text32
 12002  01C786                     __ptext32:
 12003                           	opt callstack 0
 12004  01C786                     _DATAEE_WriteByte:
 12005                           	opt callstack 0
 12006                           
 12007                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12008  01C786  52E6               	movf	postinc1,f,c
 12009                           
 12010                           ;mcc_generated_files/memory.c: 172: void DATAEE_WriteByte(uint16_t bAdd, uint8_t bData);
      +                          mcc_generated_files/memory.c: 173: {;mcc_generated_files/memory.c: 174:     uint8_t GIEB
      +                          itValue = INTCON0bits.GIE;
 12011                           
 12012                           ;incstack = 0
 12013  01C788  AED2               	btfss	210,7,c	;volatile
 12014  01C78A  D003               	goto	u9940
 12015  01C78C  6A0C               	clrf	(btemp+11)^0,c
 12016  01C78E  2A0C               	incf	(btemp+11)^0,f,c
 12017  01C790  D001               	goto	u9948
 12018  01C792                     u9940:
 12019  01C792  6A0C               	clrf	(btemp+11)^0,c
 12020  01C794                     u9948:
 12021                           
 12022                           ;stkvar	_GIEBitValue @ sp[(-1)+0]
 12023  01C794  0EFF               	movlw	-1
 12024  01C796  0060  F033  FFE3   	movff	btemp+11,plusw1
 12025                           
 12026                           ;mcc_generated_files/memory.c: 176:     NVMADRH = (uint8_t)((bAdd >> 8) & 0x03);
 12027                           ;stkvar	_bAdd @ sp[(-1)+-2]
 12028  01C79C  0EFE               	movlw	254
 12029  01C79E  24E1               	addwf	fsr1l,w,c
 12030  01C7A0  6ED9               	movwf	fsr2l,c
 12031  01C7A2  0EFF               	movlw	255
 12032  01C7A4  20E2               	addwfc	fsr1h,w,c
 12033  01C7A6  6EDA               	movwf	fsr2h,c
 12034  01C7A8  50DF               	movf	indf2,w,c
 12035  01C7AA  0B03               	andlw	3
 12036  01C7AC  0139               	movlb	57	; () banked
 12037  01C7AE  6FE1               	movwf	225,b	;volatile
 12038                           
 12039                           ; BSR set to: 57
 12040                           ;mcc_generated_files/memory.c: 177:     NVMADRL = (uint8_t)(bAdd & 0xFF);
 12041                           ;stkvar	_bAdd @ sp[(-1)+-2]
 12042  01C7B0  0EFD               	movlw	-3
 12043  01C7B2  006F FF8F F9E0     	movff	plusw1,14816	;volatile
 12044                           
 12045                           ; BSR set to: 57
 12046                           ;mcc_generated_files/memory.c: 178:     NVMDAT = bData;
 12047                           ;stkvar	_bData @ sp[(-1)+-3]
 12048  01C7B8  0EFC               	movlw	-4
 12049  01C7BA  006F FF8F F9E3     	movff	plusw1,14819	;volatile
 12050                           
 12051                           ; BSR set to: 57
 12052                           ;mcc_generated_files/memory.c: 179:     NVMCON1bits.NVMREG = 0;
 12053  01C7C0  0E3F               	movlw	-193
 12054  01C7C2  17E5               	andwf	229,f,b	;volsfr
 12055                           
 12056                           ; BSR set to: 57
 12057                           ;mcc_generated_files/memory.c: 180:     NVMCON1bits.WREN = 1;
 12058  01C7C4  85E5               	bsf	229,2,b	;volsfr
 12059                           
 12060                           ; BSR set to: 57
 12061                           ;mcc_generated_files/memory.c: 181:     INTCON0bits.GIE = 0;
 12062  01C7C6  9ED2               	bcf	210,7,c	;volatile
 12063                           
 12064                           ; BSR set to: 57
 12065                           ;mcc_generated_files/memory.c: 182:     NVMCON2 = 0x55;
 12066  01C7C8  0E55               	movlw	85
 12067  01C7CA  6FE6               	movwf	230,b	;volsfr
 12068                           
 12069                           ; BSR set to: 57
 12070                           ;mcc_generated_files/memory.c: 183:     NVMCON2 = 0xAA;
 12071  01C7CC  0EAA               	movlw	170
 12072  01C7CE  6FE6               	movwf	230,b	;volsfr
 12073                           
 12074                           ; BSR set to: 57
 12075                           ;mcc_generated_files/memory.c: 184:     NVMCON1bits.WR = 1;
 12076  01C7D0  83E5               	bsf	229,1,b	;volsfr
 12077  01C7D2                     l942:
 12078                           
 12079                           ; BSR set to: 57
 12080                           ;mcc_generated_files/memory.c: 186:     while (NVMCON1bits.WR)
 12081  01C7D2  B3E5               	btfsc	229,1,b	;volsfr
 12082  01C7D4  D7FE               	goto	l942
 12083                           
 12084                           ; BSR set to: 57
 12085                           ;mcc_generated_files/memory.c: 190:     NVMCON1bits.WREN = 0;
 12086  01C7D6  95E5               	bcf	229,2,b	;volsfr
 12087                           
 12088                           ; BSR set to: 57
 12089                           ;mcc_generated_files/memory.c: 191:     INTCON0bits.GIE = GIEBitValue;
 12090                           ;stkvar	_GIEBitValue @ sp[(-1)+0]
 12091  01C7D8  0EFF               	movlw	-1
 12092  01C7DA  B0E3               	btfsc	plusw1,0,c
 12093  01C7DC  D002               	bra	u9965
 12094  01C7DE  9ED2               	bcf	210,7,c	;volatile
 12095  01C7E0  D001               	bra	u9966
 12096  01C7E2                     u9965:
 12097  01C7E2  8ED2               	bsf	210,7,c	;volatile
 12098  01C7E4                     u9966:
 12099                           
 12100                           ; _DATAEE_WriteByte: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 12101  01C7E4  52E5               	movf	postdec1,f,c
 12102  01C7E6  52E5               	movf	postdec1,f,c
 12103  01C7E8  52E5               	movf	postdec1,f,c
 12104  01C7EA  52E5               	movf	postdec1,f,c
 12105  01C7EC  0012               	return		;funcret
 12106  01C7EE                     __end_of_DATAEE_WriteByte:
 12107                           	opt callstack 0
 12108                           
 12109 ;; *************** function _CRC_Start *****************
 12110 ;; Defined at:
 12111 ;;		line 119 in file "mcc_generated_files/crc.c"
 12112 ;; Parameters:    Size  Location     Type
 12113 ;;		None
 12114 ;; Auto vars:     Size  Location     Type
 12115 ;;		None
 12116 ;; Return value:  Size  Location     Type
 12117 ;;                  1  [STACK] void 
 12118 ;; Registers used:
 12119 ;;		None
 12120 ;; Tracked objects:
 12121 ;;		On entry : 3F/0
 12122 ;;		On exit  : 3F/39
 12123 ;;		Unchanged: 0/0
 12124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12125 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12126 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12127 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12128 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12129 ;;Total ram usage:        0 bytes
 12130 ;; Hardware stack levels used:    1
 12131 ;; Hardware stack levels required when called:   15
 12132 ;; This function calls:
 12133 ;;		Nothing
 12134 ;; This function is called by:
 12135 ;;		_read_cal_data
 12136 ;;		_write_cal_data
 12137 ;; This function uses a reentrant model
 12138 ;;
 12139                           
 12140                           	psect	text33
 12141  01DB6C                     __ptext33:
 12142                           	opt callstack 0
 12143  01DB6C                     _CRC_Start:
 12144                           	opt callstack 14
 12145                           
 12146                           ;mcc_generated_files/crc.c: 122:     CRCCON0bits.CRCGO = 1;
 12147                           
 12148                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12149                           ;incstack = 0
 12150  01DB6C  0139               	movlb	57	; () banked
 12151  01DB6E  8D68               	bsf	104,6,b	;volatile
 12152                           
 12153                           ; BSR set to: 57
 12154                           ; _CRC_Start: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 12155  01DB70  0012               	return		;funcret
 12156  01DB72                     __end_of_CRC_Start:
 12157                           	opt callstack 0
 12158                           
 12159 ;; *************** function _CRC_IsBusy *****************
 12160 ;; Defined at:
 12161 ;;		line 201 in file "mcc_generated_files/crc.c"
 12162 ;; Parameters:    Size  Location     Type
 12163 ;;		None
 12164 ;; Auto vars:     Size  Location     Type
 12165 ;;		None
 12166 ;; Return value:  Size  Location     Type
 12167 ;;                  1  [STACK] _Bool 
 12168 ;; Registers used:
 12169 ;;		btemp
 12170 ;; Tracked objects:
 12171 ;;		On entry : 0/39
 12172 ;;		On exit  : 0/0
 12173 ;;		Unchanged: 0/0
 12174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12175 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12176 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12177 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12178 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12179 ;;Total ram usage:        0 bytes
 12180 ;; Hardware stack levels used:    1
 12181 ;; Hardware stack levels required when called:   15
 12182 ;; This function calls:
 12183 ;;		Nothing
 12184 ;; This function is called by:
 12185 ;;		_read_cal_data
 12186 ;;		_write_cal_data
 12187 ;; This function uses a reentrant model
 12188 ;;
 12189                           
 12190                           	psect	text34
 12191  01DA88                     __ptext34:
 12192                           	opt callstack 0
 12193  01DA88                     _CRC_IsBusy:
 12194                           	opt callstack 14
 12195                           
 12196                           ;mcc_generated_files/crc.c: 204:     return(CRCCON0bits.BUSY);
 12197                           
 12198                           ; BSR set to: 57
 12199                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12200                           ;incstack = 0
 12201  01DA88  0139               	movlb	57	; () banked
 12202  01DA8A  AB68               	btfss	104,5,b	;volatile
 12203  01DA8C  D003               	goto	u10150
 12204  01DA8E  6A01               	clrf	btemp^0,c
 12205  01DA90  2A01               	incf	btemp^0,f,c
 12206  01DA92  0012               	return	
 12207  01DA94                     u10150:
 12208  01DA94  6A01               	clrf	btemp^0,c
 12209                           
 12210                           ; _CRC_IsBusy: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 12211  01DA96  0012               	return		;funcret
 12212  01DA98                     __end_of_CRC_IsBusy:
 12213                           	opt callstack 0
 12214                           
 12215 ;; *************** function _CRC_CalculatedResultGet *****************
 12216 ;; Defined at:
 12217 ;;		line 159 in file "mcc_generated_files/crc.c"
 12218 ;; Parameters:    Size  Location     Type
 12219 ;;  reverse         1  [STACK] _Bool 
 12220 ;;  xorValue        2  [STACK] unsigned short 
 12221 ;; Auto vars:     Size  Location     Type
 12222 ;;  result          2  [STACK] unsigned short 
 12223 ;;  mask            2  [STACK] unsigned short 
 12224 ;; Return value:  Size  Location     Type
 12225 ;;                  2  [STACK] unsigned short 
 12226 ;; Registers used:
 12227 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+9, btemp+10, btemp+11,
      + prodl
 12228 ;; Tracked objects:
 12229 ;;		On entry : 0/39
 12230 ;;		On exit  : 0/0
 12231 ;;		Unchanged: 0/0
 12232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12233 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12234 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12235 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12236 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12237 ;;Total ram usage:        0 bytes
 12238 ;; Hardware stack levels used:    1
 12239 ;; Hardware stack levels required when called:   16
 12240 ;; This function calls:
 12241 ;;		_CRC_ReverseValue
 12242 ;; This function is called by:
 12243 ;;		_read_cal_data
 12244 ;;		_write_cal_data
 12245 ;; This function uses a reentrant model
 12246 ;;
 12247                           
 12248                           	psect	text35
 12249  019D12                     __ptext35:
 12250                           	opt callstack 0
 12251  019D12                     _CRC_CalculatedResultGet:
 12252                           	opt callstack 0
 12253                           
 12254                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12255  019D12  52E6               	movf	postinc1,f,c
 12256  019D14  52E6               	movf	postinc1,f,c
 12257  019D16  52E6               	movf	postinc1,f,c
 12258  019D18  52E6               	movf	postinc1,f,c
 12259                           
 12260                           ;mcc_generated_files/crc.c: 159: uint16_t CRC_CalculatedResultGet(_Bool reverse, uint16_
      +                          t xorValue);mcc_generated_files/crc.c: 160: {;mcc_generated_files/crc.c: 161:     uint16
      +                          _t result,mask;;mcc_generated_files/crc.c: 164:      CRCCON0bits.CRCGO = 0;
 12261                           
 12262                           ;incstack = 0
 12263  019D1A  0139               	movlb	57	; () banked
 12264  019D1C  9D68               	bcf	104,6,b	;volatile
 12265                           
 12266                           ;mcc_generated_files/crc.c: 165:      PIR0bits.CRCIF = 0;
 12267  019D1E  9DA0               	bcf	160,6,b	;volatile
 12268                           
 12269                           ; BSR set to: 57
 12270                           ;mcc_generated_files/crc.c: 166:      CRCCON1bits.DLEN= CRCCON1bits.PLEN;
 12271  019D20  5169               	movf	105,w,b	;volatile
 12272  019D22  0B0F               	andlw	15
 12273  019D24  6E0C               	movwf	(btemp+11)^0,c
 12274  019D26  3A0C               	swapf	(btemp+11)^0,f,c
 12275  019D28  5169               	movf	105,w,b	;volatile
 12276  019D2A  180C               	xorwf	(btemp+11)^0,w,c
 12277  019D2C  0B0F               	andlw	-241
 12278  019D2E  180C               	xorwf	(btemp+11)^0,w,c
 12279  019D30  6F69               	movwf	105,b	;volatile
 12280                           
 12281                           ; BSR set to: 57
 12282                           ;mcc_generated_files/crc.c: 168:      if(crcObj.polyWidth > 8)
 12283  019D32  0E08               	movlw	8
 12284  019D34  0100               	movlb	0	; () banked
 12285  019D36  65D6               	cpfsgt	(_crcObj+1)& (0+255),b
 12286  019D38  D003               	goto	l1282
 12287                           
 12288                           ; BSR set to: 0
 12289                           ;mcc_generated_files/crc.c: 169:      {;mcc_generated_files/crc.c: 170:          CRCDATH
      +                           = 0;
 12290  019D3A  0139               	movlb	57	; () banked
 12291  019D3C  6B61               	clrf	97,b	;volatile
 12292  019D3E  D001               	goto	L9
 12293  019D40                     l1282:
 12294                           
 12295                           ; BSR set to: 0
 12296                           ;mcc_generated_files/crc.c: 174:      {;mcc_generated_files/crc.c: 175:          CRCDATL
      +                           = 0;
 12297  019D40  0139               	movlb	57	; () banked
 12298  019D42                     L9:
 12299  019D42  6B60               	clrf	96,b	;volatile
 12300                           
 12301                           ; BSR set to: 57
 12302                           ;mcc_generated_files/crc.c: 178:      CRCCON0bits.CRCGO = 1;
 12303                           
 12304                           ;mcc_generated_files/crc.c: 176:      }
 12305  019D44  8D68               	bsf	104,6,b	;volatile
 12306  019D46                     l1284:
 12307                           
 12308                           ; BSR set to: 57
 12309  019D46  ADA0               	btfss	160,6,b	;volatile
 12310  019D48  D7FE               	goto	l1284
 12311                           
 12312                           ; BSR set to: 57
 12313                           ;mcc_generated_files/crc.c: 180:      PIR0bits.CRCIF = 0;
 12314  019D4A  9DA0               	bcf	160,6,b	;volatile
 12315                           
 12316                           ;mcc_generated_files/crc.c: 182:      CRCCON0bits.CRCGO = 0;
 12317  019D4C  9D68               	bcf	104,6,b	;volatile
 12318                           
 12319                           ; BSR set to: 57
 12320                           ;mcc_generated_files/crc.c: 183:      CRCCON1bits.DLEN = (uint8_t)(crcObj.dataWidth - 1)
      +                          ;
 12321  019D4E  0060  F354  F00C   	movff	_crcObj,btemp+11
 12322  019D54  0EFF               	movlw	255
 12323  019D56  260C               	addwf	(btemp+11)^0,f,c
 12324  019D58  3A0C               	swapf	(btemp+11)^0,f,c
 12325  019D5A  5169               	movf	105,w,b	;volatile
 12326  019D5C  180C               	xorwf	(btemp+11)^0,w,c
 12327  019D5E  0B0F               	andlw	-241
 12328  019D60  180C               	xorwf	(btemp+11)^0,w,c
 12329  019D62  6F69               	movwf	105,b	;volatile
 12330                           
 12331                           ; BSR set to: 57
 12332                           ;mcc_generated_files/crc.c: 185:      result = ((uint16_t)CRCACCH << 8)|CRCACCL;
 12333  019D64  5162               	movf	98,w,b	;volatile
 12334  019D66  006E F58C  F001    	movff	14691,btemp	;volatile
 12335  019D6C  6A02               	clrf	(btemp+1)^0,c
 12336  019D6E  0060  F004  F002   	movff	btemp,btemp+1
 12337  019D74  6A01               	clrf	btemp^0,c
 12338  019D76  1201               	iorwf	btemp^0,f,c
 12339  019D78  0E00               	movlw	0
 12340  019D7A  1202               	iorwf	(btemp+1)^0,f,c
 12341                           
 12342                           ;stkvar	_result @ sp[(-4)+0]
 12343  019D7C  0EFC               	movlw	-4
 12344  019D7E  0060  F007  FFE3   	movff	btemp,plusw1
 12345  019D84  0EFD               	movlw	-3
 12346  019D86  0060  F00B  FFE3   	movff	btemp+1,plusw1
 12347                           
 12348                           ; BSR set to: 57
 12349                           ;mcc_generated_files/crc.c: 186:      if(crcObj.polyWidth < 16)
 12350  019D8C  0E10               	movlw	16
 12351  019D8E  0100               	movlb	0	; () banked
 12352  019D90  61D6               	cpfslt	(_crcObj+1)& (0+255),b
 12353  019D92  D03A               	goto	l10824
 12354                           
 12355                           ; BSR set to: 0
 12356                           ;mcc_generated_files/crc.c: 187:      {;mcc_generated_files/crc.c: 189:         mask = (
      +                          uint16_t)((1 << crcObj.polyWidth) - 1);
 12357  019D94  0EFF               	movlw	255
 12358  019D96  6E0B               	movwf	(btemp+10)^0,c
 12359  019D98  0EFF               	movlw	255
 12360  019D9A  6E0C               	movwf	(btemp+11)^0,c
 12361  019D9C  0060  F358  F00A   	movff	_crcObj+1,btemp+9
 12362  019DA2  0E01               	movlw	1
 12363  019DA4  6E07               	movwf	(btemp+6)^0,c
 12364  019DA6  0E00               	movlw	0
 12365  019DA8  6E08               	movwf	(btemp+7)^0,c
 12366  019DAA  2A0A               	incf	(btemp+9)^0,f,c
 12367  019DAC  D003               	goto	u10134
 12368  019DAE                     u10135:
 12369  019DAE  90D8               	bcf	status,0,c
 12370  019DB0  3607               	rlcf	(btemp+6)^0,f,c
 12371  019DB2  3608               	rlcf	(btemp+7)^0,f,c
 12372  019DB4                     u10134:
 12373  019DB4  2E0A               	decfsz	(btemp+9)^0,f,c
 12374  019DB6  D7FB               	goto	u10135
 12375  019DB8  500B               	movf	(btemp+10)^0,w,c
 12376  019DBA  2607               	addwf	(btemp+6)^0,f,c
 12377  019DBC  500C               	movf	(btemp+11)^0,w,c
 12378  019DBE  2208               	addwfc	(btemp+7)^0,f,c
 12379                           
 12380                           ;stkvar	_mask @ sp[(-4)+2]
 12381  019DC0  0EFE               	movlw	-2
 12382  019DC2  0060  F01F  FFE3   	movff	btemp+6,plusw1
 12383  019DC8  0EFF               	movlw	-1
 12384  019DCA  0060  F023  FFE3   	movff	btemp+7,plusw1
 12385                           
 12386                           ;mcc_generated_files/crc.c: 190:         result &= mask;
 12387                           ;stkvar	_mask @ sp[(-4)+2]
 12388  019DD0  0EFE               	movlw	-2
 12389  019DD2  006F FF8C  F00B    	movff	plusw1,btemp+10
 12390  019DD8  0EFF               	movlw	-1
 12391  019DDA  006F FF8C  F00C    	movff	plusw1,btemp+11
 12392                           
 12393                           ;stkvar	_result @ sp[(-4)+0]
 12394  019DE0  0EFC               	movlw	-4
 12395  019DE2  006F FF8C  F001    	movff	plusw1,btemp
 12396  019DE8  500B               	movf	(btemp+10)^0,w,c
 12397  019DEA  1601               	andwf	btemp^0,f,c
 12398  019DEC  0EFC               	movlw	-4
 12399  019DEE  0060  F007  FFE3   	movff	btemp,plusw1
 12400  019DF4  0EFD               	movlw	-3
 12401  019DF6  006F FF8C  F001    	movff	plusw1,btemp
 12402  019DFC  500C               	movf	(btemp+11)^0,w,c
 12403  019DFE  1601               	andwf	btemp^0,f,c
 12404  019E00  0EFD               	movlw	-3
 12405  019E02  0060  F007  FFE3   	movff	btemp,plusw1
 12406  019E08                     l10824:
 12407                           
 12408                           ;mcc_generated_files/crc.c: 193:     if(reverse)
 12409                           ;stkvar	_reverse @ sp[(-4)+-1]
 12410  019E08  0EFB               	movlw	-5
 12411  019E0A  50E3               	movf	plusw1,w,c
 12412  019E0C  B4D8               	btfsc	status,2,c
 12413  019E0E  D011               	goto	l10828
 12414                           
 12415                           ;mcc_generated_files/crc.c: 194:         result = CRC_ReverseValue(result);
 12416                           ;stkvar	_result @ sp[(-4)+0]
 12417  019E10  0EFC               	movlw	-4
 12418  019E12  006F FF8F FFE6     	movff	plusw1,postinc1
 12419  019E18  006F FF8F FFE6     	movff	plusw1,postinc1
 12420  019E1E  EC10  F0DB         	call	_CRC_ReverseValue	;wreg free
 12421                           
 12422                           ;stkvar	_result @ sp[(-4)+0]
 12423  019E22  0EFC               	movlw	-4
 12424  019E24  0060  F007  FFE3   	movff	btemp,plusw1
 12425  019E2A  0EFD               	movlw	-3
 12426  019E2C  0060  F00B  FFE3   	movff	btemp+1,plusw1
 12427  019E32                     l10828:
 12428                           
 12429                           ;mcc_generated_files/crc.c: 196:     result ^= xorValue;
 12430                           ;stkvar	_xorValue @ sp[(-4)+-3]
 12431  019E32  0EF9               	movlw	-7
 12432  019E34  006F FF8C  F00B    	movff	plusw1,btemp+10
 12433  019E3A  0EFA               	movlw	-6
 12434  019E3C  006F FF8C  F00C    	movff	plusw1,btemp+11
 12435                           
 12436                           ;stkvar	_result @ sp[(-4)+0]
 12437  019E42  0EFC               	movlw	-4
 12438  019E44  006F FF8C  F001    	movff	plusw1,btemp
 12439  019E4A  500B               	movf	(btemp+10)^0,w,c
 12440  019E4C  1A01               	xorwf	btemp^0,f,c
 12441  019E4E  0EFC               	movlw	-4
 12442  019E50  0060  F007  FFE3   	movff	btemp,plusw1
 12443  019E56  0EFD               	movlw	-3
 12444  019E58  006F FF8C  F001    	movff	plusw1,btemp
 12445  019E5E  500C               	movf	(btemp+11)^0,w,c
 12446  019E60  1A01               	xorwf	btemp^0,f,c
 12447  019E62  0EFD               	movlw	-3
 12448  019E64  0060  F007  FFE3   	movff	btemp,plusw1
 12449                           
 12450                           ;mcc_generated_files/crc.c: 198:     return result;
 12451                           ;stkvar	_result @ sp[(-4)+0]
 12452  019E6A  0EFC               	movlw	-4
 12453  019E6C  006F FF8C  F001    	movff	plusw1,btemp
 12454  019E72  0EFD               	movlw	-3
 12455  019E74  006F FF8C  F002    	movff	plusw1,btemp+1
 12456                           
 12457                           ; _CRC_CalculatedResultGet: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 3, argsize = 3, vargsize = 0
 12458  019E7A  0EF9               	movlw	249
 12459  019E7C  26E1               	addwf	fsr1l,f,c
 12460  019E7E  0EFF               	movlw	255
 12461  019E80  22E2               	addwfc	fsr1h,f,c
 12462  019E82  0012               	return		;funcret
 12463  019E84                     __end_of_CRC_CalculatedResultGet:
 12464                           	opt callstack 0
 12465                           
 12466 ;; *************** function _CRC_ReverseValue *****************
 12467 ;; Defined at:
 12468 ;;		line 138 in file "mcc_generated_files/crc.c"
 12469 ;; Parameters:    Size  Location     Type
 12470 ;;  crc             2  [STACK] unsigned short 
 12471 ;; Auto vars:     Size  Location     Type
 12472 ;;  mask            2  [STACK] unsigned short 
 12473 ;;  reverse         2  [STACK] unsigned short 
 12474 ;; Return value:  Size  Location     Type
 12475 ;;                  2  [STACK] unsigned short 
 12476 ;; Registers used:
 12477 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 12478 ;; Tracked objects:
 12479 ;;		On entry : 0/0
 12480 ;;		On exit  : 0/0
 12481 ;;		Unchanged: 0/0
 12482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12483 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12484 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12485 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12486 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12487 ;;Total ram usage:        0 bytes
 12488 ;; Hardware stack levels used:    1
 12489 ;; Hardware stack levels required when called:   15
 12490 ;; This function calls:
 12491 ;;		Nothing
 12492 ;; This function is called by:
 12493 ;;		_CRC_CalculatedResultGet
 12494 ;; This function uses a reentrant model
 12495 ;;
 12496                           
 12497                           	psect	text36
 12498  01B620                     __ptext36:
 12499                           	opt callstack 0
 12500  01B620                     _CRC_ReverseValue:
 12501                           	opt callstack 0
 12502                           
 12503                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12504  01B620  52E6               	movf	postinc1,f,c
 12505  01B622  52E6               	movf	postinc1,f,c
 12506  01B624  52E6               	movf	postinc1,f,c
 12507  01B626  52E6               	movf	postinc1,f,c
 12508                           
 12509                           ;mcc_generated_files/crc.c: 138: static uint16_t CRC_ReverseValue(uint16_t crc);mcc_gene
      +                          rated_files/crc.c: 139: {;mcc_generated_files/crc.c: 140:     uint16_t mask;;mcc_generat
      +                          ed_files/crc.c: 141:     uint16_t reverse;;mcc_generated_files/crc.c: 143:     mask = 1;
 12510                           
 12511                           ;incstack = 0
 12512  01B628  0E01               	movlw	1
 12513  01B62A  6E0B               	movwf	(btemp+10)^0,c
 12514  01B62C  0E00               	movlw	0
 12515  01B62E  6E0C               	movwf	(btemp+11)^0,c
 12516                           
 12517                           ;stkvar	_mask @ sp[(-4)+0]
 12518  01B630  0EFC               	movlw	-4
 12519  01B632  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12520  01B638  0EFD               	movlw	-3
 12521  01B63A  0060  F033  FFE3   	movff	btemp+11,plusw1
 12522                           
 12523                           ;mcc_generated_files/crc.c: 144:     mask <<= crcObj.polyWidth - 1;
 12524  01B640  0060  F358  F00C   	movff	_crcObj+1,btemp+11
 12525  01B646  0EFF               	movlw	255
 12526  01B648  260C               	addwf	(btemp+11)^0,f,c
 12527                           
 12528                           ;stkvar	_mask @ sp[(-4)+0]
 12529  01B64A  50E1               	movf	fsr1l,w,c
 12530  01B64C  0FFC               	addlw	-4
 12531  01B64E  6ED9               	movwf	fsr2l,c
 12532  01B650  50E2               	movf	fsr1h,w,c
 12533  01B652  6EDA               	movwf	fsr2h,c
 12534  01B654  0EFF               	movlw	255
 12535  01B656  22DA               	addwfc	fsr2h,f,c
 12536  01B658  280C               	incf	(btemp+11)^0,w,c
 12537  01B65A  D003               	goto	u9740
 12538  01B65C                     u9745:
 12539  01B65C  90D8               	bcf	status,0,c
 12540  01B65E  36DE               	rlcf	postinc2,f,c
 12541  01B660  36DD               	rlcf	postdec2,f,c
 12542  01B662                     u9740:
 12543  01B662  2EE8               	decfsz	wreg,f,c
 12544  01B664  D7FB               	goto	u9745
 12545                           
 12546                           ;mcc_generated_files/crc.c: 145:     reverse = 0;
 12547                           ;stkvar	_reverse @ sp[(-4)+2]
 12548  01B666  0EFE               	movlw	-2
 12549  01B668  6AE3               	clrf	plusw1,c
 12550  01B66A  0EFF               	movlw	-1
 12551  01B66C  6AE3               	clrf	plusw1,c
 12552                           
 12553                           ;mcc_generated_files/crc.c: 147:     while(crc)
 12554  01B66E  D029               	goto	l10542
 12555  01B670                     l10534:
 12556                           
 12557                           ;mcc_generated_files/crc.c: 148:     {;mcc_generated_files/crc.c: 149:         if(crc & 
      +                          0x01)
 12558                           ;stkvar	_crc @ sp[(-4)+-2]
 12559  01B670  0EFA               	movlw	-6
 12560  01B672  A0E3               	btfss	plusw1,0,c
 12561  01B674  D01C               	goto	l10538
 12562                           
 12563                           ;mcc_generated_files/crc.c: 150:         {;mcc_generated_files/crc.c: 151:             r
      +                          everse |= mask;
 12564                           ;stkvar	_mask @ sp[(-4)+0]
 12565  01B676  0EFC               	movlw	-4
 12566  01B678  006F FF8C  F00B    	movff	plusw1,btemp+10
 12567  01B67E  0EFD               	movlw	-3
 12568  01B680  006F FF8C  F00C    	movff	plusw1,btemp+11
 12569                           
 12570                           ;stkvar	_reverse @ sp[(-4)+2]
 12571  01B686  0EFE               	movlw	-2
 12572  01B688  006F FF8C  F001    	movff	plusw1,btemp
 12573  01B68E  500B               	movf	(btemp+10)^0,w,c
 12574  01B690  1201               	iorwf	btemp^0,f,c
 12575  01B692  0EFE               	movlw	-2
 12576  01B694  0060  F007  FFE3   	movff	btemp,plusw1
 12577  01B69A  0EFF               	movlw	-1
 12578  01B69C  006F FF8C  F001    	movff	plusw1,btemp
 12579  01B6A2  500C               	movf	(btemp+11)^0,w,c
 12580  01B6A4  1201               	iorwf	btemp^0,f,c
 12581  01B6A6  0EFF               	movlw	-1
 12582  01B6A8  0060  F007  FFE3   	movff	btemp,plusw1
 12583  01B6AE                     l10538:
 12584                           
 12585                           ;mcc_generated_files/crc.c: 153:         mask >>= 1;
 12586                           ;stkvar	_mask @ sp[(-4)+0]
 12587  01B6AE  90D8               	bcf	status,0,c
 12588  01B6B0  0EFD               	movlw	-3
 12589  01B6B2  32E3               	rrcf	plusw1,f,c
 12590  01B6B4  0EFC               	movlw	-4
 12591  01B6B6  32E3               	rrcf	plusw1,f,c
 12592                           
 12593                           ;mcc_generated_files/crc.c: 154:         crc >>= 1;
 12594                           ;stkvar	_crc @ sp[(-4)+-2]
 12595  01B6B8  90D8               	bcf	status,0,c
 12596  01B6BA  0EFB               	movlw	-5
 12597  01B6BC  32E3               	rrcf	plusw1,f,c
 12598  01B6BE  0EFA               	movlw	-6
 12599  01B6C0  32E3               	rrcf	plusw1,f,c
 12600  01B6C2                     l10542:
 12601                           
 12602                           ;mcc_generated_files/crc.c: 147:     while(crc)
 12603                           ;stkvar	_crc @ sp[(-4)+-2]
 12604  01B6C2  0EFA               	movlw	-6
 12605  01B6C4  006F FF8C  F001    	movff	plusw1,btemp
 12606  01B6CA  0EFB               	movlw	-5
 12607  01B6CC  50E3               	movf	plusw1,w,c
 12608  01B6CE  1001               	iorwf	btemp^0,w,c
 12609  01B6D0  A4D8               	btfss	status,2,c
 12610  01B6D2  D7CE               	goto	l10534
 12611                           
 12612                           ;mcc_generated_files/crc.c: 156:     return reverse;
 12613                           ;stkvar	_reverse @ sp[(-4)+2]
 12614  01B6D4  0EFE               	movlw	-2
 12615  01B6D6  006F FF8C  F001    	movff	plusw1,btemp
 12616  01B6DC  0EFF               	movlw	-1
 12617  01B6DE  006F FF8C  F002    	movff	plusw1,btemp+1
 12618                           
 12619                           ; _CRC_ReverseValue: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           2, argsize = 2, vargsize = 0
 12620  01B6E4  0EFA               	movlw	250
 12621  01B6E6  26E1               	addwf	fsr1l,f,c
 12622  01B6E8  0EFF               	movlw	255
 12623  01B6EA  22E2               	addwfc	fsr1h,f,c
 12624  01B6EC  0012               	return		;funcret
 12625  01B6EE                     __end_of_CRC_ReverseValue:
 12626                           	opt callstack 0
 12627                           
 12628 ;; *************** function _CRC_8BitDataWrite *****************
 12629 ;; Defined at:
 12630 ;;		line 125 in file "mcc_generated_files/crc.c"
 12631 ;; Parameters:    Size  Location     Type
 12632 ;;  data            1  [STACK] unsigned char 
 12633 ;; Auto vars:     Size  Location     Type
 12634 ;;		None
 12635 ;; Return value:  Size  Location     Type
 12636 ;;                  1  [STACK] _Bool 
 12637 ;; Registers used:
 12638 ;;		fsr1l, fsr1h
 12639 ;; Tracked objects:
 12640 ;;		On entry : 0/4
 12641 ;;		On exit  : 3F/39
 12642 ;;		Unchanged: 0/0
 12643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12644 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12645 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12646 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12647 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12648 ;;Total ram usage:        0 bytes
 12649 ;; Hardware stack levels used:    1
 12650 ;; Hardware stack levels required when called:   15
 12651 ;; This function calls:
 12652 ;;		Nothing
 12653 ;; This function is called by:
 12654 ;;		_read_cal_data
 12655 ;;		_write_cal_data
 12656 ;; This function uses a reentrant model
 12657 ;;
 12658                           
 12659                           	psect	text37
 12660  01DA44                     __ptext37:
 12661                           	opt callstack 0
 12662  01DA44                     _CRC_8BitDataWrite:
 12663                           	opt callstack 14
 12664                           
 12665                           ;mcc_generated_files/crc.c: 125: _Bool CRC_8BitDataWrite(uint8_t data);mcc_generated_fil
      +                          es/crc.c: 126: {;mcc_generated_files/crc.c: 127:     if(!CRCCON0bits.FULL)
 12666                           
 12667                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12668                           ;incstack = 0
 12669  01DA44  0139               	movlb	57	; () banked
 12670  01DA46  B168               	btfsc	104,0,b	;volatile
 12671  01DA48  D004               	goto	l1271
 12672                           
 12673                           ; BSR set to: 57
 12674                           ;mcc_generated_files/crc.c: 128:     {;mcc_generated_files/crc.c: 129:         CRCDATL =
      +                           data;
 12675                           ;stkvar	_data @ sp[(0)+-1]
 12676  01DA4A  0EFF               	movlw	-1
 12677  01DA4C  006F FF8F F960     	movff	plusw1,14688	;volatile
 12678  01DA52                     l1271:
 12679                           
 12680                           ; BSR set to: 57
 12681                           ; _CRC_8BitDataWrite: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
 12682  01DA52  52E5               	movf	postdec1,f,c
 12683  01DA54  0012               	return		;funcret
 12684  01DA56                     __end_of_CRC_8BitDataWrite:
 12685                           	opt callstack 0
 12686                           
 12687 ;; *************** function _start_adc_scan *****************
 12688 ;; Defined at:
 12689 ;;		line 70 in file "daq.c"
 12690 ;; Parameters:    Size  Location     Type
 12691 ;;		None
 12692 ;; Auto vars:     Size  Location     Type
 12693 ;;		None
 12694 ;; Return value:  Size  Location     Type
 12695 ;;                  1  [STACK] _Bool 
 12696 ;; Registers used:
 12697 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 12698 ;; Tracked objects:
 12699 ;;		On entry : 0/0
 12700 ;;		On exit  : 0/0
 12701 ;;		Unchanged: 0/0
 12702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12703 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12704 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12705 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12706 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12707 ;;Total ram usage:        0 bytes
 12708 ;; Hardware stack levels used:    1
 12709 ;; Hardware stack levels required when called:   16
 12710 ;; This function calls:
 12711 ;;		_ADCC_DischargeSampleCapacitor
 12712 ;;		_ADCC_SetADIInterruptHandler
 12713 ;;		_ADCC_SetADTIInterruptHandler
 12714 ;;		_ADCC_StartConversion
 12715 ;; This function is called by:
 12716 ;;		_main
 12717 ;;		_current_sensor_cal
 12718 ;;		_update_adc_result
 12719 ;; This function uses a reentrant model
 12720 ;;
 12721                           
 12722                           	psect	text38
 12723  01C854                     __ptext38:
 12724                           	opt callstack 0
 12725  01C854                     _start_adc_scan:
 12726                           	opt callstack 14
 12727                           
 12728                           ;daq.c: 72:  if (R.done)
 12729                           
 12730                           ; BSR set to: 57
 12731                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12732                           ;incstack = 0
 12733  01C854  0101               	movlb	1	; () banked
 12734  01C856  513C               	movf	(_R+53)& (0+255),w,b	;volatile
 12735  01C858  A4D8               	btfss	status,2,c
 12736  01C85A  0012               	return	
 12737                           
 12738                           ; BSR set to: 1
 12739                           ;daq.c: 75:  R.scan_index = 0;
 12740  01C85C  6B39               	clrf	(_R+50)& (0+255),b	;volatile
 12741                           
 12742                           ; BSR set to: 1
 12743                           ;daq.c: 76:  R.scan_select = (uint16_t) ((ANSELB << 8) + ANSELA) & 0b0011110001110111;
 12744  01C85E  013A               	movlb	58	; () banked
 12745  01C860  5140               	movf	64,w,b	;volatile
 12746  01C862  006E F940  F001    	movff	14928,btemp	;volatile
 12747  01C868  6A02               	clrf	(btemp+1)^0,c
 12748  01C86A  0060  F004  F002   	movff	btemp,btemp+1
 12749  01C870  6A01               	clrf	btemp^0,c
 12750  01C872  2601               	addwf	btemp^0,f,c
 12751  01C874  0E00               	movlw	0
 12752  01C876  2202               	addwfc	(btemp+1)^0,f,c
 12753  01C878  0E77               	movlw	119
 12754  01C87A  1401               	andwf	btemp^0,w,c
 12755  01C87C  0101               	movlb	1	; () banked
 12756  01C87E  6F3A               	movwf	(_R+51)& (0+255),b	;volatile
 12757  01C880  0E3C               	movlw	60
 12758  01C882  1402               	andwf	(btemp+1)^0,w,c
 12759  01C884  6F3B               	movwf	(_R+52)& (0+255),b	;volatile
 12760                           
 12761                           ; BSR set to: 1
 12762                           ;daq.c: 77:  ADCC_SetADIInterruptHandler(adc_int_handler);
 12763  01C886  0E9A               	movlw	low _adc_int_handler
 12764  01C888  6EE6               	movwf	postinc1,c
 12765  01C88A  0EDB               	movlw	high _adc_int_handler
 12766  01C88C  6EE6               	movwf	postinc1,c
 12767  01C88E  0E01               	movlw	low (_adc_int_handler shr (0+16))
 12768  01C890  6EE6               	movwf	postinc1,c
 12769  01C892  EC69  F0EB         	call	_ADCC_SetADIInterruptHandler	;wreg free
 12770                           
 12771                           ;daq.c: 78:  ADCC_SetADTIInterruptHandler(adc_int_t_handler);
 12772  01C896  0E52               	movlw	low _adc_int_t_handler
 12773  01C898  6EE6               	movwf	postinc1,c
 12774  01C89A  0EC4               	movlw	high _adc_int_t_handler
 12775  01C89C  6EE6               	movwf	postinc1,c
 12776  01C89E  0E01               	movlw	low (_adc_int_t_handler shr (0+16))
 12777  01C8A0  6EE6               	movwf	postinc1,c
 12778  01C8A2  EC55  F0EB         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 12779                           
 12780                           ;daq.c: 79:  ADCC_DischargeSampleCapacitor();
 12781  01C8A6  ECA6  F0ED         	call	_ADCC_DischargeSampleCapacitor	;wreg free
 12782                           
 12783                           ; BSR set to: 62
 12784                           ;daq.c: 80:  ADCC_StartConversion(R.scan_index & 0xf);
 12785  01C8AA  0101               	movlb	1	; () banked
 12786  01C8AC  5139               	movf	(_R+50)& (0+255),w,b	;volatile
 12787  01C8AE  0B0F               	andlw	15
 12788  01C8B0  6EE6               	movwf	postinc1,c
 12789  01C8B2  EC2B  F0ED         	call	_ADCC_StartConversion	;wreg free
 12790                           
 12791                           ; _start_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 12792  01C8B6  0012               	return		;funcret
 12793  01C8B8                     __end_of_start_adc_scan:
 12794                           	opt callstack 0
 12795                           
 12796 ;; *************** function _ADCC_StartConversion *****************
 12797 ;; Defined at:
 12798 ;;		line 128 in file "mcc_generated_files/adcc.c"
 12799 ;; Parameters:    Size  Location     Type
 12800 ;;  channel         1  [STACK] enum E16136
 12801 ;; Auto vars:     Size  Location     Type
 12802 ;;		None
 12803 ;; Return value:  Size  Location     Type
 12804 ;;                  1  [STACK] void 
 12805 ;; Registers used:
 12806 ;;		fsr1l, fsr1h
 12807 ;; Tracked objects:
 12808 ;;		On entry : 3F/1
 12809 ;;		On exit  : 3F/3E
 12810 ;;		Unchanged: 0/0
 12811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12812 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12813 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12815 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12816 ;;Total ram usage:        0 bytes
 12817 ;; Hardware stack levels used:    1
 12818 ;; Hardware stack levels required when called:   15
 12819 ;; This function calls:
 12820 ;;		Nothing
 12821 ;; This function is called by:
 12822 ;;		_start_adc_scan
 12823 ;;		_adc_int_t_handler
 12824 ;; This function uses a reentrant model
 12825 ;;
 12826                           
 12827                           	psect	text39
 12828  01DA56                     __ptext39:
 12829                           	opt callstack 0
 12830  01DA56                     _ADCC_StartConversion:
 12831                           	opt callstack 0
 12832                           
 12833                           ;mcc_generated_files/adcc.c: 128: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 129: {;mcc_generated_files/adcc.c: 131:     ADPCH = channel;
 12834                           ;stkvar	_channel @ sp[(0)+-1]
 12835                           
 12836                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12837                           ;incstack = 0
 12838 ;; hardware stack exceeded
 12839  01DA56  0EFF               	movlw	-1
 12840  01DA58  006F FF8F FEF1     	movff	plusw1,16113	;volatile
 12841                           
 12842                           ;mcc_generated_files/adcc.c: 134:     ADCON0bits.ADON = 1;
 12843  01DA5E  013E               	movlb	62	; () banked
 12844  01DA60  8FF8               	bsf	248,7,b	;volatile
 12845                           
 12846                           ; BSR set to: 62
 12847                           ;mcc_generated_files/adcc.c: 137:     ADCON0bits.ADGO = 1;
 12848  01DA62  81F8               	bsf	248,0,b	;volatile
 12849                           
 12850                           ; BSR set to: 62
 12851                           ; _ADCC_StartConversion: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
 12852  01DA64  52E5               	movf	postdec1,f,c
 12853  01DA66  0012               	return		;funcret
 12854  01DA68                     __end_of_ADCC_StartConversion:
 12855                           	opt callstack 0
 12856                           
 12857 ;; *************** function _ADCC_DischargeSampleCapacitor *****************
 12858 ;; Defined at:
 12859 ;;		line 189 in file "mcc_generated_files/adcc.c"
 12860 ;; Parameters:    Size  Location     Type
 12861 ;;		None
 12862 ;; Auto vars:     Size  Location     Type
 12863 ;;		None
 12864 ;; Return value:  Size  Location     Type
 12865 ;;                  1  [STACK] void 
 12866 ;; Registers used:
 12867 ;;		wreg, status,2
 12868 ;; Tracked objects:
 12869 ;;		On entry : 0/1
 12870 ;;		On exit  : 3F/3E
 12871 ;;		Unchanged: 0/0
 12872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12873 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12874 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12876 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12877 ;;Total ram usage:        0 bytes
 12878 ;; Hardware stack levels used:    1
 12879 ;; Hardware stack levels required when called:   15
 12880 ;; This function calls:
 12881 ;;		Nothing
 12882 ;; This function is called by:
 12883 ;;		_start_adc_scan
 12884 ;;		_adc_int_t_handler
 12885 ;; This function uses a reentrant model
 12886 ;;
 12887                           
 12888                           	psect	text40
 12889  01DB4C                     __ptext40:
 12890                           	opt callstack 0
 12891  01DB4C                     _ADCC_DischargeSampleCapacitor:
 12892                           	opt callstack 0
 12893                           
 12894                           ;mcc_generated_files/adcc.c: 192:     ADPCH = 0x3b;
 12895                           
 12896                           ; BSR set to: 62
 12897                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12898                           ;incstack = 0
 12899 ;; hardware stack exceeded
 12900  01DB4C  0E3B               	movlw	59
 12901  01DB4E  013E               	movlb	62	; () banked
 12902  01DB50  6FF1               	movwf	241,b	;volatile
 12903                           
 12904                           ; BSR set to: 62
 12905                           ; _ADCC_DischargeSampleCapacitor: autosize = 0, savesize = 0, parsavesize = 0, tempsize 
      +                          = 0 parsize = 0, argsize = 0, vargsize = 0
 12906  01DB52  0012               	return		;funcret
 12907  01DB54                     __end_of_ADCC_DischargeSampleCapacitor:
 12908                           	opt callstack 0
 12909                           
 12910 ;; *************** function _spinners *****************
 12911 ;; Defined at:
 12912 ;;		line 146 in file "mbmc.c"
 12913 ;; Parameters:    Size  Location     Type
 12914 ;;  shape           1  [STACK] unsigned char 
 12915 ;;  reset           1  [STACK] const unsigned char 
 12916 ;; Auto vars:     Size  Location     Type
 12917 ;;  c               1  [STACK] unsigned char 
 12918 ;; Return value:  Size  Location     Type
 12919 ;;                  1  [STACK] unsigned char 
 12920 ;; Registers used:
 12921 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+9, btemp+10, btemp+11, tbl
      +ptrl, tblptrh, tblptru, prodl, prodh
 12922 ;; Tracked objects:
 12923 ;;		On entry : 0/0
 12924 ;;		On exit  : 0/0
 12925 ;;		Unchanged: 0/0
 12926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12927 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12928 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12930 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12931 ;;Total ram usage:        0 bytes
 12932 ;; Hardware stack levels used:    1
 12933 ;; Hardware stack levels required when called:   16
 12934 ;; This function calls:
 12935 ;;		_strlen
 12936 ;; This function is called by:
 12937 ;;		_main
 12938 ;;		_current_sensor_cal
 12939 ;; This function uses a reentrant model
 12940 ;;
 12941                           
 12942                           	psect	text41
 12943  01B2AC                     __ptext41:
 12944                           	opt callstack 0
 12945  01B2AC                     _spinners:
 12946                           	opt callstack 0
 12947                           
 12948                           ; BSR set to: 62
 12949                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12950  01B2AC  52E6               	movf	postinc1,f,c
 12951                           
 12952                           ;mbmc.c: 146: char spinners(uint8_t shape, const uint8_t reset);mbmc.c: 147: {;mbmc.c: 1
      +                          48:  static uint8_t s[6];;mbmc.c: 149:  char c;;mbmc.c: 151:  if (shape > (6 - 1))
 12953                           ;stkvar	_shape @ sp[(-1)+-1]
 12954                           
 12955                           ;incstack = 0
 12956  01B2AE  0EFE               	movlw	-2
 12957  01B2B0  006F FF8C  F001    	movff	plusw1,btemp
 12958  01B2B6  0E05               	movlw	5
 12959  01B2B8  6401               	cpfsgt	btemp^0,c
 12960  01B2BA  D002               	goto	l2159
 12961                           
 12962                           ;mbmc.c: 152:   shape = 0;
 12963                           ;stkvar	_shape @ sp[(-1)+-1]
 12964  01B2BC  0EFE               	movlw	-2
 12965  01B2BE  6AE3               	clrf	plusw1,c
 12966  01B2C0                     l2159:
 12967                           
 12968                           ;mbmc.c: 153:  if (reset)
 12969                           ;stkvar	_reset @ sp[(-1)+-2]
 12970  01B2C0  0EFD               	movlw	-3
 12971  01B2C2  50E3               	movf	plusw1,w,c
 12972  01B2C4  B4D8               	btfsc	status,2,c
 12973  01B2C6  D00A               	goto	l14254
 12974                           
 12975                           ;mbmc.c: 154:   s[shape] = 0;
 12976                           ;stkvar	_shape @ sp[(-1)+-1]
 12977  01B2C8  0EFE               	movlw	-2
 12978  01B2CA  006F FF8C  F00C    	movff	plusw1,btemp+11
 12979  01B2D0  500C               	movf	(btemp+11)^0,w,c
 12980  01B2D2  0F74               	addlw	low spinners@s
 12981  01B2D4  6ED9               	movwf	fsr2l,c
 12982  01B2D6  6ADA               	clrf	fsr2h,c
 12983  01B2D8  0E00               	movlw	0
 12984  01B2DA  6EDF               	movwf	indf2,c
 12985  01B2DC                     l14254:
 12986                           
 12987                           ;mbmc.c: 155:  c = spin[shape][s[shape]];
 12988                           ;stkvar	_shape @ sp[(-1)+-1]
 12989  01B2DC  0EFE               	movlw	-2
 12990  01B2DE  50E3               	movf	plusw1,w,c
 12991  01B2E0  0D14               	mullw	20
 12992  01B2E2  0EDD               	movlw	low _spin
 12993  01B2E4  6E0B               	movwf	(btemp+10)^0,c
 12994  01B2E6  0EF9               	movlw	high _spin
 12995  01B2E8  6E0C               	movwf	(btemp+11)^0,c
 12996  01B2EA  50F3               	movf	243,w,c
 12997  01B2EC  260B               	addwf	(btemp+10)^0,f,c
 12998  01B2EE  50F4               	movf	244,w,c
 12999  01B2F0  220C               	addwfc	(btemp+11)^0,f,c
 13000                           
 13001                           ;stkvar	_shape @ sp[(-1)+-1]
 13002  01B2F2  0EFE               	movlw	-2
 13003  01B2F4  006F FF8C  F00A    	movff	plusw1,btemp+9
 13004  01B2FA  500A               	movf	(btemp+9)^0,w,c
 13005  01B2FC  0F74               	addlw	low spinners@s
 13006  01B2FE  6ED9               	movwf	fsr2l,c
 13007  01B300  6ADA               	clrf	fsr2h,c
 13008  01B302  50DF               	movf	indf2,w,c
 13009  01B304  260B               	addwf	(btemp+10)^0,f,c
 13010  01B306  0E00               	movlw	0
 13011  01B308  220C               	addwfc	(btemp+11)^0,f,c
 13012  01B30A  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 13013  01B310  0060  F033  FFF7   	movff	btemp+11,tblptrh
 13014  01B316                     	if	0	;tblptru may be non-zero
 13015  01B316                     	endif
 13016  01B316                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13017  01B316  0E00               	movlw	low (__mediumconst shr (0+16))
 13018  01B318  6EF8               	movwf	tblptru,c
 13019  01B31A                     	endif
 13020                           
 13021                           ;stkvar	_c @ sp[(-1)+0]
 13022  01B31A  0008               	tblrd		*
 13023  01B31C  0EFF               	movlw	-1
 13024  01B31E  006F FFD7 FFE3     	movff	tablat,plusw1
 13025                           
 13026                           ;mbmc.c: 156:  if (++s[shape] >= strlen(spin[shape]))
 13027                           ;stkvar	_shape @ sp[(-1)+-1]
 13028  01B324  0EFE               	movlw	-2
 13029  01B326  50E3               	movf	plusw1,w,c
 13030  01B328  0D14               	mullw	20
 13031  01B32A  0EDD               	movlw	low _spin
 13032  01B32C  6E0B               	movwf	(btemp+10)^0,c
 13033  01B32E  0EF9               	movlw	high _spin
 13034  01B330  6E0C               	movwf	(btemp+11)^0,c
 13035  01B332  50F3               	movf	243,w,c
 13036  01B334  260B               	addwf	(btemp+10)^0,f,c
 13037  01B336  50F4               	movf	244,w,c
 13038  01B338  220C               	addwfc	(btemp+11)^0,f,c
 13039  01B33A  0060  F02F  FFE6   	movff	btemp+10,postinc1
 13040  01B340  0060  F033  FFE6   	movff	btemp+11,postinc1
 13041  01B346  EC55  F0DF         	call	_strlen	;wreg free
 13042                           
 13043                           ;stkvar	_shape @ sp[(-1)+-1]
 13044  01B34A  0EFE               	movlw	-2
 13045  01B34C  006F FF8C  F00C    	movff	plusw1,btemp+11
 13046  01B352  500C               	movf	(btemp+11)^0,w,c
 13047  01B354  0F74               	addlw	low spinners@s
 13048  01B356  6ED9               	movwf	fsr2l,c
 13049  01B358  6ADA               	clrf	fsr2h,c
 13050  01B35A  2ADF               	incf	indf2,f,c
 13051  01B35C  50DF               	movf	indf2,w,c
 13052  01B35E  6E0B               	movwf	(btemp+10)^0,c
 13053  01B360  6A0C               	clrf	(btemp+11)^0,c
 13054  01B362  5001               	movf	btemp^0,w,c
 13055  01B364  5C0B               	subwf	(btemp+10)^0,w,c
 13056  01B366  5002               	movf	(btemp+1)^0,w,c
 13057  01B368  580C               	subwfb	(btemp+11)^0,w,c
 13058  01B36A  A0D8               	btfss	status,0,c
 13059  01B36C  D00A               	goto	l14260
 13060                           
 13061                           ;mbmc.c: 157:   s[shape] = 0;
 13062                           ;stkvar	_shape @ sp[(-1)+-1]
 13063  01B36E  0EFE               	movlw	-2
 13064  01B370  006F FF8C  F00C    	movff	plusw1,btemp+11
 13065  01B376  500C               	movf	(btemp+11)^0,w,c
 13066  01B378  0F74               	addlw	low spinners@s
 13067  01B37A  6ED9               	movwf	fsr2l,c
 13068  01B37C  6ADA               	clrf	fsr2h,c
 13069  01B37E  0E00               	movlw	0
 13070  01B380  6EDF               	movwf	indf2,c
 13071  01B382                     l14260:
 13072                           
 13073                           ;mbmc.c: 158:  return c;
 13074                           ;stkvar	_c @ sp[(-1)+0]
 13075  01B382  0EFF               	movlw	-1
 13076  01B384  006F FF8C  F001    	movff	plusw1,btemp
 13077                           
 13078                           ; _spinners: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, args
      +                          ize = 2, vargsize = 0
 13079  01B38A  52E5               	movf	postdec1,f,c
 13080  01B38C  52E5               	movf	postdec1,f,c
 13081  01B38E  52E5               	movf	postdec1,f,c
 13082  01B390  0012               	return		;funcret
 13083  01B392                     __end_of_spinners:
 13084                           	opt callstack 0
 13085                           
 13086 ;; *************** function _get_switch *****************
 13087 ;; Defined at:
 13088 ;;		line 18 in file "dio.c"
 13089 ;; Parameters:    Size  Location     Type
 13090 ;;  i               1  [STACK] const unsigned char 
 13091 ;; Auto vars:     Size  Location     Type
 13092 ;;		None
 13093 ;; Return value:  Size  Location     Type
 13094 ;;                  1  [STACK] enum E17036
 13095 ;; Registers used:
 13096 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 13097 ;; Tracked objects:
 13098 ;;		On entry : 0/0
 13099 ;;		On exit  : 0/0
 13100 ;;		Unchanged: 0/0
 13101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13102 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13103 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13105 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13106 ;;Total ram usage:        0 bytes
 13107 ;; Hardware stack levels used:    1
 13108 ;; Hardware stack levels required when called:   15
 13109 ;; This function calls:
 13110 ;;		Nothing
 13111 ;; This function is called by:
 13112 ;;		_main
 13113 ;;		_current_sensor_cal
 13114 ;;		_hid_input
 13115 ;; This function uses a reentrant model
 13116 ;;
 13117                           
 13118                           	psect	text42
 13119  01D46A                     __ptext42:
 13120                           	opt callstack 0
 13121  01D46A                     _get_switch:
 13122                           	opt callstack 13
 13123                           
 13124                           ;dio.c: 18: SW_STATES get_switch(const uint8_t i);dio.c: 19: {;dio.c: 20:  if (i >= 6)
 13125                           ;stkvar	_i @ sp[(0)+-1]
 13126                           
 13127                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13128                           ;incstack = 0
 13129  01D46A  0EFF               	movlw	-1
 13130  01D46C  006F FF8C  F001    	movff	plusw1,btemp
 13131  01D472  0E05               	movlw	5
 13132  01D474  6401               	cpfsgt	btemp^0,c
 13133  01D476  D002               	goto	l10894
 13134                           
 13135                           ;dio.c: 21:   return SW_OFF;
 13136  01D478  0E00               	movlw	0
 13137  01D47A  D00A               	goto	L10
 13138  01D47C                     l10894:
 13139                           
 13140                           ;dio.c: 23:  return S.button[i].sw;
 13141                           ;stkvar	_i @ sp[(0)+-1]
 13142  01D47C  0EFF               	movlw	-1
 13143  01D47E  50E3               	movf	plusw1,w,c
 13144  01D480  0D05               	mullw	5
 13145  01D482  0E96               	movlw	low _S
 13146  01D484  24F3               	addwf	243,w,c
 13147  01D486  6ED9               	movwf	fsr2l,c
 13148  01D488  0E01               	movlw	high _S
 13149  01D48A  20F4               	addwfc	prodh,w,c
 13150  01D48C  6EDA               	movwf	fsr2h,c
 13151  01D48E  50DF               	movf	indf2,w,c
 13152  01D490                     L10:
 13153  01D490  6E01               	movwf	btemp^0,c
 13154                           
 13155                           ; _get_switch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
 13156  01D492  52E5               	movf	postdec1,f,c
 13157  01D494  0012               	return		;funcret
 13158  01D496                     __end_of_get_switch:
 13159                           	opt callstack 0
 13160                           
 13161 ;; *************** function _clear_switch *****************
 13162 ;; Defined at:
 13163 ;;		line 49 in file "dio.c"
 13164 ;; Parameters:    Size  Location     Type
 13165 ;;  i               1  [STACK] const unsigned char 
 13166 ;; Auto vars:     Size  Location     Type
 13167 ;;		None
 13168 ;; Return value:  Size  Location     Type
 13169 ;;                  1  [STACK] void 
 13170 ;; Registers used:
 13171 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
 13172 ;; Tracked objects:
 13173 ;;		On entry : 0/0
 13174 ;;		On exit  : 0/0
 13175 ;;		Unchanged: 0/0
 13176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13177 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13178 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13179 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13180 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13181 ;;Total ram usage:        0 bytes
 13182 ;; Hardware stack levels used:    1
 13183 ;; Hardware stack levels required when called:   15
 13184 ;; This function calls:
 13185 ;;		Nothing
 13186 ;; This function is called by:
 13187 ;;		_current_sensor_cal
 13188 ;; This function uses a reentrant model
 13189 ;;
 13190                           
 13191                           	psect	text43
 13192  01CC40                     __ptext43:
 13193                           	opt callstack 0
 13194  01CC40                     _clear_switch:
 13195                           	opt callstack 14
 13196                           
 13197                           ;dio.c: 49: void clear_switch(const uint8_t i);dio.c: 50: {;dio.c: 51:  if (i >= 6)
 13198                           ;stkvar	_i @ sp[(0)+-1]
 13199                           
 13200                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13201                           ;incstack = 0
 13202  01CC40  0EFF               	movlw	-1
 13203  01CC42  006F FF8C  F001    	movff	plusw1,btemp
 13204  01CC48  0E05               	movlw	5
 13205  01CC4A  6401               	cpfsgt	btemp^0,c
 13206  01CC4C  D001               	goto	l11508
 13207  01CC4E  D01D               	goto	l2210
 13208  01CC50                     l11508:
 13209                           
 13210                           ;dio.c: 54:  S.button[i].count = 0;
 13211                           ;stkvar	_i @ sp[(0)+-1]
 13212  01CC50  0EFF               	movlw	-1
 13213  01CC52  50E3               	movf	plusw1,w,c
 13214  01CC54  0D05               	mullw	5
 13215  01CC56  0E97               	movlw	low (_S+1)
 13216  01CC58  24F3               	addwf	243,w,c
 13217  01CC5A  6ED9               	movwf	fsr2l,c
 13218  01CC5C  0E01               	movlw	high (_S+1)
 13219  01CC5E  20F4               	addwfc	prodh,w,c
 13220  01CC60  6EDA               	movwf	fsr2h,c
 13221  01CC62  6ADE               	clrf	postinc2,c
 13222  01CC64  6ADE               	clrf	postinc2,c
 13223  01CC66  6ADE               	clrf	postinc2,c
 13224  01CC68  6ADD               	clrf	postdec2,c
 13225                           
 13226                           ;dio.c: 55:  S.sw_bitmap &= ~(1 << i);
 13227                           ;stkvar	_i @ sp[(0)+-1]
 13228  01CC6A  0EFF               	movlw	-1
 13229  01CC6C  006F FF8C  F00C    	movff	plusw1,btemp+11
 13230  01CC72  0E01               	movlw	1
 13231  01CC74  6E0B               	movwf	(btemp+10)^0,c
 13232  01CC76  2A0C               	incf	(btemp+11)^0,f,c
 13233  01CC78  D002               	goto	u10474
 13234  01CC7A                     u10475:
 13235  01CC7A  90D8               	bcf	status,0,c
 13236  01CC7C  360B               	rlcf	(btemp+10)^0,f,c
 13237  01CC7E                     u10474:
 13238  01CC7E  2E0C               	decfsz	(btemp+11)^0,f,c
 13239  01CC80  D7FC               	goto	u10475
 13240  01CC82  500B               	movf	(btemp+10)^0,w,c
 13241  01CC84  0AFF               	xorlw	255
 13242  01CC86  0101               	movlb	1	; () banked
 13243  01CC88  17BE               	andwf	(_S+40)& (0+255),f,b	;volatile
 13244  01CC8A                     l2210:
 13245                           
 13246                           ; _clear_switch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
 13247  01CC8A  52E5               	movf	postdec1,f,c
 13248  01CC8C  0012               	return		;funcret
 13249  01CC8E                     __end_of_clear_switch:
 13250                           	opt callstack 0
 13251                           
 13252 ;; *************** function _clear_adc_scan *****************
 13253 ;; Defined at:
 13254 ;;		line 101 in file "daq.c"
 13255 ;; Parameters:    Size  Location     Type
 13256 ;;		None
 13257 ;; Auto vars:     Size  Location     Type
 13258 ;;		None
 13259 ;; Return value:  Size  Location     Type
 13260 ;;                  1  [STACK] void 
 13261 ;; Registers used:
 13262 ;;		None
 13263 ;; Tracked objects:
 13264 ;;		On entry : 0/0
 13265 ;;		On exit  : 3F/1
 13266 ;;		Unchanged: 0/0
 13267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13268 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13269 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13270 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13271 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13272 ;;Total ram usage:        0 bytes
 13273 ;; Hardware stack levels used:    1
 13274 ;; Hardware stack levels required when called:   15
 13275 ;; This function calls:
 13276 ;;		Nothing
 13277 ;; This function is called by:
 13278 ;;		_main
 13279 ;;		_current_sensor_cal
 13280 ;;		_update_adc_result
 13281 ;; This function uses a reentrant model
 13282 ;;
 13283                           
 13284                           	psect	text44
 13285  01DB72                     __ptext44:
 13286                           	opt callstack 0
 13287  01DB72                     _clear_adc_scan:
 13288                           	opt callstack 13
 13289                           
 13290                           ;daq.c: 103:  R.done = 0;
 13291                           
 13292                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13293                           ;incstack = 0
 13294  01DB72  0101               	movlb	1	; () banked
 13295  01DB74  6B3C               	clrf	(_R+53)& (0+255),b	;volatile
 13296                           
 13297                           ; BSR set to: 1
 13298                           ; _clear_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 13299  01DB76  0012               	return		;funcret
 13300  01DB78                     __end_of_clear_adc_scan:
 13301                           	opt callstack 0
 13302                           
 13303 ;; *************** function _cal_current_zero *****************
 13304 ;; Defined at:
 13305 ;;		line 327 in file "daq.c"
 13306 ;; Parameters:    Size  Location     Type
 13307 ;;  mode            1  [STACK] _Bool 
 13308 ;;  cb              2  [STACK] short 
 13309 ;;  cp              2  [STACK] short 
 13310 ;; Auto vars:     Size  Location     Type
 13311 ;;		None
 13312 ;; Return value:  Size  Location     Type
 13313 ;;                  1  [STACK] _Bool 
 13314 ;; Registers used:
 13315 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 13316 ;; Tracked objects:
 13317 ;;		On entry : 0/1
 13318 ;;		On exit  : 0/0
 13319 ;;		Unchanged: 0/0
 13320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13321 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13322 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13323 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13324 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13325 ;;Total ram usage:        0 bytes
 13326 ;; Hardware stack levels used:    1
 13327 ;; Hardware stack levels required when called:   16
 13328 ;; This function calls:
 13329 ;;		_check_range
 13330 ;; This function is called by:
 13331 ;;		_current_sensor_cal
 13332 ;; This function uses a reentrant model
 13333 ;;
 13334                           
 13335                           	psect	text45
 13336  01C07A                     __ptext45:
 13337                           	opt callstack 0
 13338  01C07A                     _cal_current_zero:
 13339                           	opt callstack 13
 13340                           
 13341                           ;daq.c: 327: _Bool cal_current_zero(_Bool mode, int16_t cb, int16_t cp);daq.c: 328: {;da
      +                          q.c: 330:  if (!check_range(cb, 100, 4000))
 13342                           
 13343                           ; BSR set to: 1
 13344                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13345                           ;incstack = 0
 13346  01C07A  0EA0               	movlw	160
 13347  01C07C  6EE6               	movwf	postinc1,c
 13348  01C07E  0E0F               	movlw	15
 13349  01C080  6EE6               	movwf	postinc1,c
 13350  01C082  0E64               	movlw	100
 13351  01C084  6EE6               	movwf	postinc1,c
 13352  01C086  0E00               	movlw	0
 13353  01C088  6EE6               	movwf	postinc1,c
 13354                           
 13355                           ;stkvar	_cb @ sp[(-4)+-3]
 13356  01C08A  0EF9               	movlw	-7
 13357  01C08C  006F FF8F FFE6     	movff	plusw1,postinc1
 13358  01C092  006F FF8F FFE6     	movff	plusw1,postinc1
 13359  01C098  EC6A  F0E2         	call	_check_range	;wreg free
 13360  01C09C  5001               	movf	btemp^0,w,c
 13361  01C09E  A4D8               	btfss	status,2,c
 13362  01C0A0  D002               	goto	l11458
 13363  01C0A2                     u10410:
 13364                           
 13365                           ;daq.c: 331:   return 0;
 13366  01C0A2  0E00               	movlw	0
 13367  01C0A4  D019               	goto	L11
 13368  01C0A6                     l11458:
 13369                           
 13370                           ;daq.c: 333:  if (!check_range(cp, 100, 4000))
 13371  01C0A6  0EA0               	movlw	160
 13372  01C0A8  6EE6               	movwf	postinc1,c
 13373  01C0AA  0E0F               	movlw	15
 13374  01C0AC  6EE6               	movwf	postinc1,c
 13375  01C0AE  0E64               	movlw	100
 13376  01C0B0  6EE6               	movwf	postinc1,c
 13377  01C0B2  0E00               	movlw	0
 13378  01C0B4  6EE6               	movwf	postinc1,c
 13379                           
 13380                           ;stkvar	_cp @ sp[(-4)+-5]
 13381  01C0B6  0EF7               	movlw	-9
 13382  01C0B8  006F FF8F FFE6     	movff	plusw1,postinc1
 13383  01C0BE  006F FF8F FFE6     	movff	plusw1,postinc1
 13384  01C0C4  EC6A  F0E2         	call	_check_range	;wreg free
 13385  01C0C8  5001               	movf	btemp^0,w,c
 13386  01C0CA  B4D8               	btfsc	status,2,c
 13387  01C0CC  D7EA               	goto	u10410
 13388                           
 13389                           ;daq.c: 336:  if (!mode)
 13390                           ;stkvar	_mode @ sp[(0)+-1]
 13391  01C0CE  0EFF               	movlw	-1
 13392  01C0D0  50E3               	movf	plusw1,w,c
 13393  01C0D2  A4D8               	btfss	status,2,c
 13394  01C0D4  D003               	goto	l11470
 13395  01C0D6                     u10430:
 13396                           
 13397                           ;daq.c: 337:   return 1;
 13398  01C0D6  0E01               	movlw	1
 13399  01C0D8                     L11:
 13400  01C0D8  6E01               	movwf	btemp^0,c
 13401  01C0DA  D013               	goto	l2042
 13402  01C0DC                     l11470:
 13403                           
 13404                           ;daq.c: 339:  R.n_offset[0] = cb;
 13405                           ;stkvar	_cb @ sp[(0)+-3]
 13406  01C0DC  0EFD               	movlw	-3
 13407  01C0DE  006F FF8C  F12D    	movff	plusw1,_R+38	;volatile
 13408  01C0E4  0EFE               	movlw	-2
 13409  01C0E6  006F FF8C  F12E    	movff	plusw1,_R+39	;volatile
 13410                           
 13411                           ;daq.c: 340:  R.n_offset[1] = cp;
 13412                           ;stkvar	_cp @ sp[(0)+-5]
 13413  01C0EC  0EFB               	movlw	-5
 13414  01C0EE  006F FF8C  F12F    	movff	plusw1,_R+40	;volatile
 13415  01C0F4  0EFC               	movlw	-4
 13416  01C0F6  006F FF8C  F130    	movff	plusw1,_R+41	;volatile
 13417                           
 13418                           ;daq.c: 341:  R.c_zero_cal = 1;
 13419  01C0FC  0101               	movlb	1	; () banked
 13420  01C0FE  8392               	bsf	(_R+139)& (0+255),1,b	;volatile
 13421  01C100  D7EA               	goto	u10430
 13422  01C102                     l2042:
 13423                           
 13424                           ; _cal_current_zero: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           5, argsize = 5, vargsize = 0
 13425  01C102  0EFB               	movlw	251
 13426  01C104  26E1               	addwf	fsr1l,f,c
 13427  01C106  0EFF               	movlw	255
 13428  01C108  22E2               	addwfc	fsr1h,f,c
 13429  01C10A  0012               	return		;funcret
 13430  01C10C                     __end_of_cal_current_zero:
 13431                           	opt callstack 0
 13432                           
 13433 ;; *************** function _cal_current_10A *****************
 13434 ;; Defined at:
 13435 ;;		line 348 in file "daq.c"
 13436 ;; Parameters:    Size  Location     Type
 13437 ;;  mode            1  [STACK] _Bool 
 13438 ;;  cb              2  [STACK] short 
 13439 ;;  cp              2  [STACK] short 
 13440 ;;  scaleb          4  [STACK] float 
 13441 ;;  scalep          4  [STACK] float 
 13442 ;; Auto vars:     Size  Location     Type
 13443 ;;		None
 13444 ;; Return value:  Size  Location     Type
 13445 ;;                  1  [STACK] _Bool 
 13446 ;; Registers used:
 13447 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11
 13448 ;; Tracked objects:
 13449 ;;		On entry : 0/1
 13450 ;;		On exit  : 0/0
 13451 ;;		Unchanged: 0/0
 13452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13453 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13454 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13455 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13456 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13457 ;;Total ram usage:        0 bytes
 13458 ;; Hardware stack levels used:    1
 13459 ;; Hardware stack levels required when called:   16
 13460 ;; This function calls:
 13461 ;;		_check_range
 13462 ;; This function is called by:
 13463 ;;		_current_sensor_cal
 13464 ;; This function uses a reentrant model
 13465 ;;
 13466                           
 13467                           	psect	text46
 13468  01B872                     __ptext46:
 13469                           	opt callstack 0
 13470  01B872                     _cal_current_10A:
 13471                           	opt callstack 13
 13472                           
 13473                           ;daq.c: 348: _Bool cal_current_10A(_Bool mode, int16_t cb, int16_t cp, float scaleb, flo
      +                          at scalep);daq.c: 349: {;daq.c: 350:  if (!check_range(cb, 100, 4050))
 13474                           
 13475                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 13, argsize = 13 v
      +                          argsize = 0, retsize = 0 argfudge = 0
 13476                           ;incstack = 0
 13477  01B872  0ED2               	movlw	210
 13478  01B874  6EE6               	movwf	postinc1,c
 13479  01B876  0E0F               	movlw	15
 13480  01B878  6EE6               	movwf	postinc1,c
 13481  01B87A  0E64               	movlw	100
 13482  01B87C  6EE6               	movwf	postinc1,c
 13483  01B87E  0E00               	movlw	0
 13484  01B880  6EE6               	movwf	postinc1,c
 13485                           
 13486                           ;stkvar	_cb @ sp[(-4)+-3]
 13487  01B882  0EF9               	movlw	-7
 13488  01B884  006F FF8F FFE6     	movff	plusw1,postinc1
 13489  01B88A  006F FF8F FFE6     	movff	plusw1,postinc1
 13490  01B890  EC6A  F0E2         	call	_check_range	;wreg free
 13491  01B894  5001               	movf	btemp^0,w,c
 13492  01B896  A4D8               	btfss	status,2,c
 13493  01B898  D002               	goto	l11518
 13494  01B89A                     u10480:
 13495                           
 13496                           ;daq.c: 351:   return 0;
 13497  01B89A  0E00               	movlw	0
 13498  01B89C  D019               	goto	L12
 13499  01B89E                     l11518:
 13500                           
 13501                           ;daq.c: 353:  if (!check_range(cp, 100, 4278))
 13502  01B89E  0EB6               	movlw	182
 13503  01B8A0  6EE6               	movwf	postinc1,c
 13504  01B8A2  0E10               	movlw	16
 13505  01B8A4  6EE6               	movwf	postinc1,c
 13506  01B8A6  0E64               	movlw	100
 13507  01B8A8  6EE6               	movwf	postinc1,c
 13508  01B8AA  0E00               	movlw	0
 13509  01B8AC  6EE6               	movwf	postinc1,c
 13510                           
 13511                           ;stkvar	_cp @ sp[(-4)+-5]
 13512  01B8AE  0EF7               	movlw	-9
 13513  01B8B0  006F FF8F FFE6     	movff	plusw1,postinc1
 13514  01B8B6  006F FF8F FFE6     	movff	plusw1,postinc1
 13515  01B8BC  EC6A  F0E2         	call	_check_range	;wreg free
 13516  01B8C0  5001               	movf	btemp^0,w,c
 13517  01B8C2  B4D8               	btfsc	status,2,c
 13518  01B8C4  D7EA               	goto	u10480
 13519                           
 13520                           ;daq.c: 356:  if (!mode)
 13521                           ;stkvar	_mode @ sp[(0)+-1]
 13522  01B8C6  0EFF               	movlw	-1
 13523  01B8C8  50E3               	movf	plusw1,w,c
 13524  01B8CA  A4D8               	btfss	status,2,c
 13525  01B8CC  D003               	goto	l11530
 13526  01B8CE                     u10500:
 13527                           
 13528                           ;daq.c: 357:   return 1;
 13529  01B8CE  0E01               	movlw	1
 13530  01B8D0                     L12:
 13531  01B8D0  6E01               	movwf	btemp^0,c
 13532  01B8D2  D029               	goto	l2048
 13533  01B8D4                     l11530:
 13534                           
 13535                           ;daq.c: 359:  R.n_scalar[0] = scaleb;
 13536                           ;stkvar	_scaleb @ sp[(0)+-9]
 13537  01B8D4  50E1               	movf	fsr1l,w,c
 13538  01B8D6  0FF7               	addlw	-9
 13539  01B8D8  6ED9               	movwf	fsr2l,c
 13540  01B8DA  50E2               	movf	fsr1h,w,c
 13541  01B8DC  6EDA               	movwf	fsr2h,c
 13542  01B8DE  0EFF               	movlw	255
 13543  01B8E0  22DA               	addwfc	fsr2h,f,c
 13544  01B8E2  006F FF78  F131    	movff	postinc2,_R+42	;volatile
 13545  01B8E8  006F FF78  F132    	movff	postinc2,_R+43	;volatile
 13546  01B8EE  006F FF78  F133    	movff	postinc2,_R+44	;volatile
 13547  01B8F4  006F FF78  F134    	movff	postinc2,_R+45	;volatile
 13548                           
 13549                           ;daq.c: 360:  R.n_scalar[1] = scalep;
 13550                           ;stkvar	_scalep @ sp[(0)+-13]
 13551  01B8FA  50E1               	movf	fsr1l,w,c
 13552  01B8FC  0FF3               	addlw	-13
 13553  01B8FE  6ED9               	movwf	fsr2l,c
 13554  01B900  50E2               	movf	fsr1h,w,c
 13555  01B902  6EDA               	movwf	fsr2h,c
 13556  01B904  0EFF               	movlw	255
 13557  01B906  22DA               	addwfc	fsr2h,f,c
 13558  01B908  006F FF78  F135    	movff	postinc2,_R+46	;volatile
 13559  01B90E  006F FF78  F136    	movff	postinc2,_R+47	;volatile
 13560  01B914  006F FF78  F137    	movff	postinc2,_R+48	;volatile
 13561  01B91A  006F FF78  F138    	movff	postinc2,_R+49	;volatile
 13562                           
 13563                           ;daq.c: 361:  R.c_scale_cal = 1;
 13564  01B920  0101               	movlb	1	; () banked
 13565  01B922  8592               	bsf	(_R+139)& (0+255),2,b	;volatile
 13566  01B924  D7D4               	goto	u10500
 13567  01B926                     l2048:
 13568                           
 13569                           ; _cal_current_10A: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          13, argsize = 13, vargsize = 0
 13570  01B926  0EF3               	movlw	243
 13571  01B928  26E1               	addwf	fsr1l,f,c
 13572  01B92A  0EFF               	movlw	255
 13573  01B92C  22E2               	addwfc	fsr1h,f,c
 13574  01B92E  0012               	return		;funcret
 13575  01B930                     __end_of_cal_current_10A:
 13576                           	opt callstack 0
 13577                           
 13578 ;; *************** function _check_range *****************
 13579 ;; Defined at:
 13580 ;;		line 315 in file "daq.c"
 13581 ;; Parameters:    Size  Location     Type
 13582 ;;  value           2  [STACK] short 
 13583 ;;  window          2  [STACK] short 
 13584 ;;  standard        2  [STACK] short 
 13585 ;; Auto vars:     Size  Location     Type
 13586 ;;		None
 13587 ;; Return value:  Size  Location     Type
 13588 ;;                  1  [STACK] _Bool 
 13589 ;; Registers used:
 13590 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 13591 ;; Tracked objects:
 13592 ;;		On entry : 0/1
 13593 ;;		On exit  : 0/0
 13594 ;;		Unchanged: 0/0
 13595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13596 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13597 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13598 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13599 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13600 ;;Total ram usage:        0 bytes
 13601 ;; Hardware stack levels used:    1
 13602 ;; Hardware stack levels required when called:   15
 13603 ;; This function calls:
 13604 ;;		Nothing
 13605 ;; This function is called by:
 13606 ;;		_cal_current_zero
 13607 ;;		_cal_current_10A
 13608 ;; This function uses a reentrant model
 13609 ;;
 13610                           
 13611                           	psect	text47
 13612  01C4D4                     __ptext47:
 13613                           	opt callstack 0
 13614  01C4D4                     _check_range:
 13615                           	opt callstack 13
 13616                           
 13617                           ;daq.c: 315: static _Bool check_range(int16_t value, int16_t window, int16_t standard);d
      +                          aq.c: 316: {;daq.c: 317:  if (value > (standard + window))
 13618                           ;stkvar	_value @ sp[(0)+-2]
 13619                           ;stkvar	_window @ sp[(0)+-4]
 13620                           ;stkvar	_standard @ sp[(0)+-6]
 13621                           
 13622                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13623                           ;incstack = 0
 13624  01C4D4  0EFA               	movlw	-6
 13625  01C4D6  006F FF8C  F00B    	movff	plusw1,btemp+10
 13626  01C4DC  0EFB               	movlw	-5
 13627  01C4DE  006F FF8C  F00C    	movff	plusw1,btemp+11
 13628  01C4E4  0EFC               	movlw	-4
 13629  01C4E6  50E3               	movf	plusw1,w,c
 13630  01C4E8  260B               	addwf	(btemp+10)^0,f,c
 13631  01C4EA  0EFD               	movlw	-3
 13632  01C4EC  50E3               	movf	plusw1,w,c
 13633  01C4EE  220C               	addwfc	(btemp+11)^0,f,c
 13634  01C4F0  0EFE               	movlw	-2
 13635  01C4F2  50E3               	movf	plusw1,w,c
 13636  01C4F4  5C0B               	subwf	(btemp+10)^0,w,c
 13637  01C4F6  500C               	movf	(btemp+11)^0,w,c
 13638  01C4F8  0A80               	xorlw	128
 13639  01C4FA  6E01               	movwf	btemp^0,c
 13640  01C4FC  0EFF               	movlw	-1
 13641  01C4FE  50E3               	movf	plusw1,w,c
 13642  01C500  0A80               	xorlw	128
 13643  01C502  5801               	subwfb	btemp^0,w,c
 13644  01C504  B0D8               	btfsc	status,0,c
 13645  01C506  D002               	goto	l10952
 13646  01C508                     u10200:
 13647                           
 13648                           ;daq.c: 318:   return 0;
 13649  01C508  0E00               	movlw	0
 13650  01C50A  D01E               	goto	L13
 13651  01C50C                     l10952:
 13652                           
 13653                           ;daq.c: 319:  if (value < (standard - window))
 13654                           ;stkvar	_window @ sp[(0)+-4]
 13655                           ;stkvar	_standard @ sp[(0)+-6]
 13656  01C50C  0EFA               	movlw	-6
 13657  01C50E  006F FF8C  F00B    	movff	plusw1,btemp+10
 13658  01C514  0EFB               	movlw	-5
 13659  01C516  006F FF8C  F00C    	movff	plusw1,btemp+11
 13660  01C51C  0EFC               	movlw	-4
 13661  01C51E  50E3               	movf	plusw1,w,c
 13662  01C520  5E0B               	subwf	(btemp+10)^0,f,c
 13663  01C522  0EFD               	movlw	-3
 13664  01C524  50E3               	movf	plusw1,w,c
 13665  01C526  5A0C               	subwfb	(btemp+11)^0,f,c
 13666                           
 13667                           ;stkvar	_value @ sp[(0)+-2]
 13668  01C528  0EFE               	movlw	-2
 13669  01C52A  006F FF8C  F001    	movff	plusw1,btemp
 13670  01C530  500B               	movf	(btemp+10)^0,w,c
 13671  01C532  5C01               	subwf	btemp^0,w,c
 13672  01C534  0EFF               	movlw	-1
 13673  01C536  50E3               	movf	plusw1,w,c
 13674  01C538  0A80               	xorlw	128
 13675  01C53A  6E01               	movwf	btemp^0,c
 13676  01C53C  500C               	movf	(btemp+11)^0,w,c
 13677  01C53E  0A80               	xorlw	128
 13678  01C540  5801               	subwfb	btemp^0,w,c
 13679  01C542  A0D8               	btfss	status,0,c
 13680  01C544  D7E1               	goto	u10200
 13681                           
 13682                           ;daq.c: 321:  return 1;
 13683  01C546  0E01               	movlw	1
 13684  01C548                     L13:
 13685  01C548  6E01               	movwf	btemp^0,c
 13686                           
 13687                           ; _check_range: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, a
      +                          rgsize = 6, vargsize = 0
 13688  01C54A  0EFA               	movlw	250
 13689  01C54C  26E1               	addwf	fsr1l,f,c
 13690  01C54E  0EFF               	movlw	255
 13691  01C550  22E2               	addwfc	fsr1h,f,c
 13692  01C552  0012               	return		;funcret
 13693  01C554                     __end_of_check_range:
 13694                           	opt callstack 0
 13695                           
 13696 ;; *************** function _convert_adc_data *****************
 13697 ;; Defined at:
 13698 ;;		line 51 in file "mbmc.c"
 13699 ;; Parameters:    Size  Location     Type
 13700 ;;		None
 13701 ;; Auto vars:     Size  Location     Type
 13702 ;;  i               1  [STACK] unsigned char 
 13703 ;; Return value:  Size  Location     Type
 13704 ;;                  1  [STACK] void 
 13705 ;; Registers used:
 13706 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 13707 ;; Tracked objects:
 13708 ;;		On entry : 0/2
 13709 ;;		On exit  : 0/0
 13710 ;;		Unchanged: 0/0
 13711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13712 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13713 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13714 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13715 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13716 ;;Total ram usage:        0 bytes
 13717 ;; Hardware stack levels used:    1
 13718 ;; Hardware stack levels required when called:   18
 13719 ;; This function calls:
 13720 ;;		_conv_raw_result
 13721 ;;		_lp_filter
 13722 ;; This function is called by:
 13723 ;;		_main
 13724 ;; This function uses a reentrant model
 13725 ;;
 13726                           
 13727                           	psect	text48
 13728  01B9EA                     __ptext48:
 13729                           	opt callstack 0
 13730  01B9EA                     _convert_adc_data:
 13731                           	opt callstack 0
 13732                           
 13733                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13734  01B9EA  52E6               	movf	postinc1,f,c
 13735                           
 13736                           ;mbmc.c: 53:  uint8_t i = 0;
 13737                           ;stkvar	_i @ sp[(-1)+0]
 13738                           
 13739                           ;incstack = 0
 13740  01B9EC  0EFF               	movlw	-1
 13741  01B9EE  6AE3               	clrf	plusw1,c
 13742  01B9F0                     l12392:
 13743                           
 13744                           ;mbmc.c: 56:   if (V.calib) {
 13745  01B9F0  0102               	movlb	2	; () banked
 13746  01B9F2  51AC               	movf	(_V+172)& (0+255),w,b	;volatile
 13747  01B9F4  B4D8               	btfsc	status,2,c
 13748  01B9F6  D01B               	goto	l12396
 13749                           
 13750                           ; BSR set to: 2
 13751                           ;mbmc.c: 57:    C.calc[i] = lp_filter(conv_raw_result(i, O_CONV), i, 1);
 13752  01B9F8  0E01               	movlw	1
 13753  01B9FA  6EE6               	movwf	postinc1,c
 13754                           
 13755                           ;stkvar	_i @ sp[(-2)+0]
 13756  01B9FC  0EFE               	movlw	-2
 13757  01B9FE  50E3               	movf	plusw1,w,c
 13758  01BA00  6EE6               	movwf	postinc1,c
 13759  01BA02  0E01               	movlw	1
 13760  01BA04  6EE6               	movwf	postinc1,c
 13761                           
 13762                           ;stkvar	_i @ sp[(-4)+0]
 13763  01BA06  0EFC               	movlw	-4
 13764  01BA08  50E3               	movf	plusw1,w,c
 13765  01BA0A  6EE6               	movwf	postinc1,c
 13766  01BA0C  EC02  F0B0         	call	_conv_raw_result	;wreg free
 13767  01BA10  0060  F007  FFE6   	movff	btemp,postinc1
 13768  01BA16  0060  F00B  FFE6   	movff	btemp+1,postinc1
 13769  01BA1C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 13770  01BA22  0060  F013  FFE6   	movff	btemp+3,postinc1
 13771  01BA28  EC8D  F0CA         	call	_lp_filter	;wreg free
 13772  01BA2C  D01A               	goto	L14
 13773  01BA2E                     l12396:
 13774                           
 13775                           ; BSR set to: 2
 13776                           ;mbmc.c: 59:    C.calc[i] = lp_filter(conv_raw_result(i, CONV), i, 0);
 13777  01BA2E  0E00               	movlw	0
 13778  01BA30  6EE6               	movwf	postinc1,c
 13779                           
 13780                           ;stkvar	_i @ sp[(-2)+0]
 13781  01BA32  0EFE               	movlw	-2
 13782  01BA34  50E3               	movf	plusw1,w,c
 13783  01BA36  6EE6               	movwf	postinc1,c
 13784  01BA38  0E00               	movlw	0
 13785  01BA3A  6EE6               	movwf	postinc1,c
 13786                           
 13787                           ;stkvar	_i @ sp[(-4)+0]
 13788  01BA3C  0EFC               	movlw	-4
 13789  01BA3E  50E3               	movf	plusw1,w,c
 13790  01BA40  6EE6               	movwf	postinc1,c
 13791  01BA42  EC02  F0B0         	call	_conv_raw_result	;wreg free
 13792  01BA46  0060  F007  FFE6   	movff	btemp,postinc1
 13793  01BA4C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 13794  01BA52  0060  F00F  FFE6   	movff	btemp+2,postinc1
 13795  01BA58  0060  F013  FFE6   	movff	btemp+3,postinc1
 13796  01BA5E  EC8D  F0CA         	call	_lp_filter	;wreg free
 13797  01BA62                     L14:
 13798                           
 13799                           ;stkvar	_i @ sp[(-1)+0]
 13800  01BA62  0EFF               	movlw	-1
 13801  01BA64  50E3               	movf	plusw1,w,c
 13802  01BA66  0D04               	mullw	4
 13803  01BA68  0EFF               	movlw	low _C
 13804  01BA6A  24F3               	addwf	243,w,c
 13805  01BA6C  6ED9               	movwf	fsr2l,c
 13806  01BA6E  0E07               	movlw	high _C
 13807  01BA70  20F4               	addwfc	prodh,w,c
 13808  01BA72  6EDA               	movwf	fsr2h,c
 13809  01BA74  0060  F007  FFDE   	movff	btemp,postinc2
 13810  01BA7A  0060  F00B  FFDE   	movff	btemp+1,postinc2
 13811  01BA80  0060  F00F  FFDE   	movff	btemp+2,postinc2
 13812  01BA86  0060  F013  FFDE   	movff	btemp+3,postinc2
 13813                           
 13814                           ;mbmc.c: 61:  } while (++i < 16);
 13815                           ;stkvar	_i @ sp[(-1)+0]
 13816  01BA8C  0EFF               	movlw	-1
 13817  01BA8E  2AE3               	incf	plusw1,f,c
 13818  01BA90  0EFF               	movlw	-1
 13819  01BA92  006F FF8C  F001    	movff	plusw1,btemp
 13820  01BA98  0E0F               	movlw	15
 13821  01BA9A  6401               	cpfsgt	btemp^0,c
 13822  01BA9C  D7A9               	goto	l12392
 13823                           
 13824                           ; _convert_adc_data: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 13825  01BA9E  52E5               	movf	postdec1,f,c
 13826  01BAA0  0012               	return		;funcret
 13827  01BAA2                     __end_of_convert_adc_data:
 13828                           	opt callstack 0
 13829                           
 13830 ;; *************** function _clear_hid_pflags *****************
 13831 ;; Defined at:
 13832 ;;		line 67 in file "hid.c"
 13833 ;; Parameters:    Size  Location     Type
 13834 ;;  h               1  [STACK] PTR struct H_data
 13835 ;;		 -> H(9), 
 13836 ;; Auto vars:     Size  Location     Type
 13837 ;;		None
 13838 ;; Return value:  Size  Location     Type
 13839 ;;                  1  [STACK] void 
 13840 ;; Registers used:
 13841 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 13842 ;; Tracked objects:
 13843 ;;		On entry : 3F/0
 13844 ;;		On exit  : 0/0
 13845 ;;		Unchanged: 0/0
 13846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13847 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13848 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13849 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13850 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13851 ;;Total ram usage:        0 bytes
 13852 ;; Hardware stack levels used:    1
 13853 ;; Hardware stack levels required when called:   15
 13854 ;; This function calls:
 13855 ;;		Nothing
 13856 ;; This function is called by:
 13857 ;;		_main
 13858 ;; This function uses a reentrant model
 13859 ;;
 13860                           
 13861                           	psect	text49
 13862  01D2E2                     __ptext49:
 13863                           	opt callstack 0
 13864  01D2E2                     _clear_hid_pflags:
 13865                           	opt callstack 15
 13866                           
 13867                           ;hid.c: 67: void clear_hid_pflags(H_data* h);hid.c: 68: {;hid.c: 69:  h->select_p = SW_O
      +                          FF;
 13868                           ;stkvar	_h @ sp[(0)+-1]
 13869                           
 13870                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13871                           ;incstack = 0
 13872  01D2E2  0EFF               	movlw	-1
 13873  01D2E4  50E3               	movf	plusw1,w,c
 13874  01D2E6  6ED9               	movwf	fsr2l,c
 13875  01D2E8  6ADA               	clrf	fsr2h,c
 13876  01D2EA  0E03               	movlw	3
 13877  01D2EC  26D9               	addwf	fsr2l,f,c
 13878  01D2EE  0E00               	movlw	0
 13879  01D2F0  6EDF               	movwf	indf2,c
 13880                           
 13881                           ;hid.c: 70:  h->enter_p = SW_OFF;
 13882                           ;stkvar	_h @ sp[(0)+-1]
 13883  01D2F2  0EFF               	movlw	-1
 13884  01D2F4  50E3               	movf	plusw1,w,c
 13885  01D2F6  6ED9               	movwf	fsr2l,c
 13886  01D2F8  6ADA               	clrf	fsr2h,c
 13887  01D2FA  0E05               	movlw	5
 13888  01D2FC  26D9               	addwf	fsr2l,f,c
 13889  01D2FE  0E00               	movlw	0
 13890  01D300  6EDF               	movwf	indf2,c
 13891                           
 13892                           ;hid.c: 71:  h->calib_p = SW_OFF;
 13893                           ;stkvar	_h @ sp[(0)+-1]
 13894  01D302  0EFF               	movlw	-1
 13895  01D304  50E3               	movf	plusw1,w,c
 13896  01D306  6ED9               	movwf	fsr2l,c
 13897  01D308  6ADA               	clrf	fsr2h,c
 13898  01D30A  0E07               	movlw	7
 13899  01D30C  26D9               	addwf	fsr2l,f,c
 13900  01D30E  0E00               	movlw	0
 13901  01D310  6EDF               	movwf	indf2,c
 13902                           
 13903                           ; _clear_hid_pflags: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 13904  01D312  52E5               	movf	postdec1,f,c
 13905  01D314  0012               	return		;funcret
 13906  01D316                     __end_of_clear_hid_pflags:
 13907                           	opt callstack 0
 13908                           
 13909 ;; *************** function _check_help *****************
 13910 ;; Defined at:
 13911 ;;		line 40 in file "mconfig.c"
 13912 ;; Parameters:    Size  Location     Type
 13913 ;;  flipper         1  [STACK] const _Bool 
 13914 ;; Auto vars:     Size  Location     Type
 13915 ;;  estatus         1    0        _Bool 
 13916 ;; Return value:  Size  Location     Type
 13917 ;;                  1  [STACK] _Bool 
 13918 ;; Registers used:
 13919 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 13920 ;; Tracked objects:
 13921 ;;		On entry : 3F/2
 13922 ;;		On exit  : 0/0
 13923 ;;		Unchanged: 0/0
 13924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13925 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13926 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13928 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13929 ;;Total ram usage:        0 bytes
 13930 ;; Hardware stack levels used:    1
 13931 ;; Hardware stack levels required when called:   28
 13932 ;; This function calls:
 13933 ;;		_StartTimer
 13934 ;;		_TimerDone
 13935 ;;		_display_help
 13936 ;;		_display_info
 13937 ;;		_get_vterm_ptr
 13938 ;;		_help_button
 13939 ;;		_mode_lamp_bright
 13940 ;;		_mode_lamp_dim
 13941 ;;		_set_display_info
 13942 ;;		_set_temp_display_help
 13943 ;;		_set_vterm
 13944 ;;		_sprintf
 13945 ;;		_update_lcd
 13946 ;;		_vterm_dump
 13947 ;; This function is called by:
 13948 ;;		_main
 13949 ;; This function uses a reentrant model
 13950 ;;
 13951                           
 13952                           	psect	text50
 13953  018F3A                     __ptext50:
 13954                           	opt callstack 0
 13955  018F3A                     _check_help:
 13956                           	opt callstack 2
 13957                           
 13958                           ;mconfig.c: 46:  if (help_button() && display_info() != DIS_HELP) {
 13959                           
 13960                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13961                           ;incstack = 0
 13962  018F3A  ECD0  F0E8         	call	_help_button	;wreg free
 13963  018F3E  5001               	movf	btemp^0,w,c
 13964  018F40  B4D8               	btfsc	status,2,c
 13965  018F42  D0D0               	goto	l14618
 13966  018F44  ECAA  F0ED         	call	_display_info	;wreg free
 13967  018F48  0401               	decf	btemp^0,w,c
 13968  018F4A  B4D8               	btfsc	status,2,c
 13969  018F4C  D0CB               	goto	l14618
 13970                           
 13971                           ;mconfig.c: 47:   StartTimer(TMR_FLIPPER, 1500);
 13972  018F4E  0EDC               	movlw	220
 13973  018F50  6EE6               	movwf	postinc1,c
 13974  018F52  0E05               	movlw	5
 13975  018F54  6EE6               	movwf	postinc1,c
 13976  018F56  0E0B               	movlw	11
 13977  018F58  6EE6               	movwf	postinc1,c
 13978  018F5A  EC13  F0E8         	call	_StartTimer	;wreg free
 13979                           
 13980                           ;mconfig.c: 48:   if (V.debug)
 13981  018F5E  0102               	movlb	2	; () banked
 13982  018F60  B39B               	btfsc	(_V+155)& (0+255),1,b	;volatile
 13983                           
 13984                           ; BSR set to: 2
 13985                           ;mconfig.c: 49:    vterm_dump();
 13986  018F62  ECF1  F0D3         	call	_vterm_dump	;wreg free
 13987                           
 13988                           ;mconfig.c: 51:   set_vterm(1);
 13989  018F66  0E01               	movlw	1
 13990  018F68  6EE6               	movwf	postinc1,c
 13991  018F6A  EC97  F0EC         	call	_set_vterm	;wreg free
 13992                           
 13993                           ;mconfig.c: 52:   set_temp_display_help(display_info());
 13994  018F6E  ECAA  F0ED         	call	_display_info	;wreg free
 13995  018F72  5001               	movf	btemp^0,w,c
 13996  018F74  6EE6               	movwf	postinc1,c
 13997  018F76  EC4C  F0ED         	call	_set_temp_display_help	;wreg free
 13998                           
 13999                           ; BSR set to: 2
 14000                           ;mconfig.c: 53:   set_display_info(DIS_HELP);
 14001  018F7A  0E01               	movlw	1
 14002  018F7C  6EE6               	movwf	postinc1,c
 14003  018F7E  ECA6  F0EC         	call	_set_display_info	;wreg free
 14004                           
 14005                           ;mconfig.c: 54:   if (flipper) {
 14006                           ;stkvar	_flipper @ sp[(0)+-1]
 14007  018F82  0EFF               	movlw	-1
 14008  018F84  50E3               	movf	plusw1,w,c
 14009  018F86  B4D8               	btfsc	status,2,c
 14010  018F88  D019               	goto	l14604
 14011                           
 14012                           ;mconfig.c: 55:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_date);
 14013  018F8A  0EB3               	movlw	low STR_74
 14014  018F8C  6EE6               	movwf	postinc1,c
 14015  018F8E  0EFF               	movlw	high STR_74
 14016  018F90  6EE6               	movwf	postinc1,c
 14017  018F92  0E4B               	movlw	low STR_76
 14018  018F94  6EE6               	movwf	postinc1,c
 14019  018F96  0EFF               	movlw	high STR_76
 14020  018F98  6EE6               	movwf	postinc1,c
 14021  018F9A  0E01               	movlw	1
 14022  018F9C  6EE6               	movwf	postinc1,c
 14023  018F9E  0E00               	movlw	0
 14024  018FA0  6EE6               	movwf	postinc1,c
 14025  018FA2  EC1E  F0EA         	call	_get_vterm_ptr	;wreg free
 14026  018FA6  0060  F007  FFE6   	movff	btemp,postinc1
 14027  018FAC  0060  F00B  FFE6   	movff	btemp+1,postinc1
 14028  018FB2  0E06               	movlw	6
 14029  018FB4  6EE6               	movwf	postinc1,c
 14030  018FB6  EC5C  F0D8         	call	_sprintf	;wreg free
 14031                           
 14032                           ;mconfig.c: 56:   } else {
 14033  018FBA  D018               	goto	l1813
 14034  018FBC                     l14604:
 14035                           
 14036                           ;mconfig.c: 57:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_time);
 14037  018FBC  0EC9               	movlw	low STR_75
 14038  018FBE  6EE6               	movwf	postinc1,c
 14039  018FC0  0EFF               	movlw	high STR_75
 14040  018FC2  6EE6               	movwf	postinc1,c
 14041  018FC4  0E4B               	movlw	low STR_76
 14042  018FC6  6EE6               	movwf	postinc1,c
 14043  018FC8  0EFF               	movlw	high STR_76
 14044  018FCA  6EE6               	movwf	postinc1,c
 14045  018FCC  0E01               	movlw	1
 14046  018FCE  6EE6               	movwf	postinc1,c
 14047  018FD0  0E00               	movlw	0
 14048  018FD2  6EE6               	movwf	postinc1,c
 14049  018FD4  EC1E  F0EA         	call	_get_vterm_ptr	;wreg free
 14050  018FD8  0060  F007  FFE6   	movff	btemp,postinc1
 14051  018FDE  0060  F00B  FFE6   	movff	btemp+1,postinc1
 14052  018FE4  0E06               	movlw	6
 14053  018FE6  6EE6               	movwf	postinc1,c
 14054  018FE8  EC5C  F0D8         	call	_sprintf	;wreg free
 14055  018FEC                     l1813:
 14056                           
 14057                           ; BSR set to: 0
 14058                           ;mconfig.c: 59:   sprintf(get_vterm_ptr(1, 1), "%s       ", T[V.help_id].display);
 14059  018FEC  0102               	movlb	2	; () banked
 14060  018FEE  399B               	swapf	(_V+155)& (0+255),w,b	;volatile
 14061  018FF0  32E8               	rrcf	wreg,f,c
 14062  018FF2  32E8               	rrcf	wreg,f,c
 14063  018FF4  0B03               	andlw	3
 14064  018FF6  0D24               	mullw	36
 14065  018FF8  0E12               	movlw	18
 14066  018FFA  26F3               	addwf	243,f,c
 14067  018FFC  0E00               	movlw	0
 14068  018FFE  22F4               	addwfc	244,f,c
 14069  019000  0E4D               	movlw	low _T
 14070  019002  6E0B               	movwf	(btemp+10)^0,c
 14071  019004  0EF9               	movlw	high _T
 14072  019006  6E0C               	movwf	(btemp+11)^0,c
 14073  019008  50F3               	movf	243,w,c
 14074  01900A  260B               	addwf	(btemp+10)^0,f,c
 14075  01900C  50F4               	movf	244,w,c
 14076  01900E  220C               	addwfc	(btemp+11)^0,f,c
 14077  019010  0060  F02F  FFE6   	movff	btemp+10,postinc1
 14078  019016  0060  F033  FFE6   	movff	btemp+11,postinc1
 14079  01901C  0EBF               	movlw	low STR_78
 14080  01901E  6EE6               	movwf	postinc1,c
 14081  019020  0EFF               	movlw	high STR_78
 14082  019022  6EE6               	movwf	postinc1,c
 14083  019024  0E01               	movlw	1
 14084  019026  6EE6               	movwf	postinc1,c
 14085  019028  0E01               	movlw	1
 14086  01902A  6EE6               	movwf	postinc1,c
 14087  01902C  EC1E  F0EA         	call	_get_vterm_ptr	;wreg free
 14088  019030  0060  F007  FFE6   	movff	btemp,postinc1
 14089  019036  0060  F00B  FFE6   	movff	btemp+1,postinc1
 14090  01903C  0E06               	movlw	6
 14091  01903E  6EE6               	movwf	postinc1,c
 14092  019040  EC5C  F0D8         	call	_sprintf	;wreg free
 14093                           
 14094                           ;mconfig.c: 60:   sprintf(get_vterm_ptr(2, 1), "%s       ", T[V.help_id].message);
 14095  019044  0102               	movlb	2	; () banked
 14096  019046  399B               	swapf	(_V+155)& (0+255),w,b	;volatile
 14097  019048  32E8               	rrcf	wreg,f,c
 14098  01904A  32E8               	rrcf	wreg,f,c
 14099  01904C  0B03               	andlw	3
 14100  01904E  0D24               	mullw	36
 14101  019050  0E4D               	movlw	low _T
 14102  019052  6E0B               	movwf	(btemp+10)^0,c
 14103  019054  0EF9               	movlw	high _T
 14104  019056  6E0C               	movwf	(btemp+11)^0,c
 14105  019058  50F3               	movf	243,w,c
 14106  01905A  260B               	addwf	(btemp+10)^0,f,c
 14107  01905C  50F4               	movf	244,w,c
 14108  01905E  220C               	addwfc	(btemp+11)^0,f,c
 14109  019060  0060  F02F  FFE6   	movff	btemp+10,postinc1
 14110  019066  0060  F033  FFE6   	movff	btemp+11,postinc1
 14111  01906C  0EBF               	movlw	low STR_78
 14112  01906E  6EE6               	movwf	postinc1,c
 14113  019070  0EFF               	movlw	high STR_78
 14114  019072  6EE6               	movwf	postinc1,c
 14115  019074  0E01               	movlw	1
 14116  019076  6EE6               	movwf	postinc1,c
 14117  019078  0E02               	movlw	2
 14118  01907A  6EE6               	movwf	postinc1,c
 14119  01907C  EC1E  F0EA         	call	_get_vterm_ptr	;wreg free
 14120  019080  0060  F007  FFE6   	movff	btemp,postinc1
 14121  019086  0060  F00B  FFE6   	movff	btemp+1,postinc1
 14122  01908C  0E06               	movlw	6
 14123  01908E  6EE6               	movwf	postinc1,c
 14124  019090  EC5C  F0D8         	call	_sprintf	;wreg free
 14125                           
 14126                           ; BSR set to: 0
 14127                           ;mconfig.c: 61:   V.help_id++;
 14128  019094  EE20  F29B         	lfsr	2,_V+155	;volatile
 14129  019098  38DF               	swapf	223,w,c
 14130  01909A  6E0C               	movwf	(btemp+11)^0,c
 14131  01909C  320C               	rrcf	(btemp+11)^0,f,c
 14132  01909E  300C               	rrcf	(btemp+11)^0,w,c
 14133  0190A0  0B03               	andlw	3
 14134  0190A2  6E0C               	movwf	(btemp+11)^0,c
 14135  0190A4  2A0C               	incf	(btemp+11)^0,f,c
 14136  0190A6  3A0C               	swapf	(btemp+11)^0,f,c
 14137  0190A8  360C               	rlcf	(btemp+11)^0,f,c
 14138  0190AA  360C               	rlcf	(btemp+11)^0,f,c
 14139  0190AC  50DF               	movf	223,w,c
 14140  0190AE  180C               	xorwf	(btemp+11)^0,w,c
 14141  0190B0  0B3F               	andlw	-193
 14142  0190B2  180C               	xorwf	(btemp+11)^0,w,c
 14143  0190B4  6EDF               	movwf	223,c
 14144                           
 14145                           ; BSR set to: 0
 14146                           ;mconfig.c: 62:   StartTimer(TMR_HELPDIS, 3000);
 14147  0190B6  0EB8               	movlw	184
 14148  0190B8  6EE6               	movwf	postinc1,c
 14149  0190BA  0E0B               	movlw	11
 14150  0190BC  6EE6               	movwf	postinc1,c
 14151  0190BE  0E09               	movlw	9
 14152  0190C0  6EE6               	movwf	postinc1,c
 14153  0190C2  EC13  F0E8         	call	_StartTimer	;wreg free
 14154                           
 14155                           ;mconfig.c: 63:   StartTimer(TMR_INFO, 3000);
 14156  0190C6  0EB8               	movlw	184
 14157  0190C8  6EE6               	movwf	postinc1,c
 14158  0190CA  0E0B               	movlw	11
 14159  0190CC  6EE6               	movwf	postinc1,c
 14160  0190CE  0E07               	movlw	7
 14161  0190D0  6EE6               	movwf	postinc1,c
 14162  0190D2  EC13  F0E8         	call	_StartTimer	;wreg free
 14163                           
 14164                           ;mconfig.c: 64:   mode_lamp_bright();
 14165  0190D6  EC63  F0ED         	call	_mode_lamp_bright	;wreg free
 14166                           
 14167                           ;mconfig.c: 65:   update_lcd(1);
 14168  0190DA  0E01               	movlw	1
 14169  0190DC  6EE6               	movwf	postinc1,c
 14170  0190DE  EC4D  F0D7         	call	_update_lcd	;wreg free
 14171                           
 14172                           ;mconfig.c: 67:  } else {
 14173  0190E2  D032               	goto	l1814
 14174  0190E4                     l14618:
 14175                           
 14176                           ;mconfig.c: 68:   if (TimerDone(TMR_HELPDIS)) {
 14177  0190E4  0E09               	movlw	9
 14178  0190E6  6EE6               	movwf	postinc1,c
 14179  0190E8  ECA1  F0EA         	call	_TimerDone	;wreg free
 14180  0190EC  5001               	movf	btemp^0,w,c
 14181  0190EE  B4D8               	btfsc	status,2,c
 14182  0190F0  D02B               	goto	l1814
 14183                           
 14184                           ;mconfig.c: 69:    set_vterm(0);
 14185  0190F2  0E00               	movlw	0
 14186  0190F4  6EE6               	movwf	postinc1,c
 14187  0190F6  EC97  F0EC         	call	_set_vterm	;wreg free
 14188                           
 14189                           ;mconfig.c: 70:    V.help = 0;
 14190  0190FA  0102               	movlb	2	; () banked
 14191  0190FC  959B               	bcf	(_V+155)& (0+255),2,b	;volatile
 14192                           
 14193                           ; BSR set to: 2
 14194                           ;mconfig.c: 71:    set_display_info(display_help());
 14195  0190FE  ECAE  F0ED         	call	_display_help	;wreg free
 14196  019102  5001               	movf	btemp^0,w,c
 14197  019104  6EE6               	movwf	postinc1,c
 14198  019106  ECA6  F0EC         	call	_set_display_info	;wreg free
 14199                           
 14200                           ;mconfig.c: 72:    mode_lamp_dim(V.mode_pwm);
 14201  01910A  0060  FA57  FFE6   	movff	_V+149,postinc1
 14202  019110  0060  FA5B  FFE6   	movff	_V+150,postinc1
 14203  019116  ECDF  F0EC         	call	_mode_lamp_dim	;wreg free
 14204                           
 14205                           ;mconfig.c: 73:    if (TimerDone(TMR_FLIPPER)) {
 14206  01911A  0E0B               	movlw	11
 14207  01911C  6EE6               	movwf	postinc1,c
 14208  01911E  ECA1  F0EA         	call	_TimerDone	;wreg free
 14209  019122  5001               	movf	btemp^0,w,c
 14210  019124  B4D8               	btfsc	status,2,c
 14211  019126  D010               	goto	l1814
 14212                           
 14213                           ;mconfig.c: 74:     V.flipper = !V.flipper;
 14214  019128  0102               	movlb	2	; () banked
 14215  01912A  51AB               	movf	(_V+171)& (0+255),w,b	;volatile
 14216  01912C  A4D8               	btfss	status,2,c
 14217  01912E  D002               	goto	u13990
 14218  019130  0E01               	movlw	1
 14219  019132  D001               	goto	u14000
 14220  019134                     u13990:
 14221  019134  0E00               	movlw	0
 14222  019136                     u14000:
 14223  019136  6FAB               	movwf	(_V+171)& (0+255),b	;volatile
 14224                           
 14225                           ; BSR set to: 2
 14226                           ;mconfig.c: 75:     StartTimer(TMR_FLIPPER, 1500);
 14227  019138  0EDC               	movlw	220
 14228  01913A  6EE6               	movwf	postinc1,c
 14229  01913C  0E05               	movlw	5
 14230  01913E  6EE6               	movwf	postinc1,c
 14231  019140  0E0B               	movlw	11
 14232  019142  6EE6               	movwf	postinc1,c
 14233  019144  EC13  F0E8         	call	_StartTimer	;wreg free
 14234  019148                     l1814:
 14235                           
 14236                           ; _check_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
 14237  019148  52E5               	movf	postdec1,f,c
 14238  01914A  0012               	return		;funcret
 14239  01914C                     __end_of_check_help:
 14240                           	opt callstack 0
 14241                           
 14242 ;; *************** function _vterm_dump *****************
 14243 ;; Defined at:
 14244 ;;		line 121 in file "mconfig.c"
 14245 ;; Parameters:    Size  Location     Type
 14246 ;;		None
 14247 ;; Auto vars:     Size  Location     Type
 14248 ;;		None
 14249 ;; Return value:  Size  Location     Type
 14250 ;;                  1  [STACK] void 
 14251 ;; Registers used:
 14252 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 14253 ;; Tracked objects:
 14254 ;;		On entry : 3F/2
 14255 ;;		On exit  : 0/0
 14256 ;;		Unchanged: 0/0
 14257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14258 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14259 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14261 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14262 ;;Total ram usage:        0 bytes
 14263 ;; Hardware stack levels used:    1
 14264 ;; Hardware stack levels required when called:   27
 14265 ;; This function calls:
 14266 ;;		_WaitMs
 14267 ;;		_eaDogM_WriteStringAtPos
 14268 ;;		_get_vterm_ptr
 14269 ;;		_sprintf
 14270 ;;		_wait_lcd_done
 14271 ;; This function is called by:
 14272 ;;		_check_help
 14273 ;; This function uses a reentrant model
 14274 ;;
 14275                           
 14276                           	psect	text51
 14277  01A7E2                     __ptext51:
 14278                           	opt callstack 0
 14279  01A7E2                     _vterm_dump:
 14280                           	opt callstack 2
 14281                           
 14282                           ;mconfig.c: 123:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(0, 0), get_vterm_ptr(0,
      +                           1));
 14283                           
 14284                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14285                           ;incstack = 0
 14286  01A7E2  0E01               	movlw	1
 14287  01A7E4  6EE6               	movwf	postinc1,c
 14288  01A7E6  0E00               	movlw	0
 14289  01A7E8  6EE6               	movwf	postinc1,c
 14290  01A7EA  EC1E  F0EA         	call	_get_vterm_ptr	;wreg free
 14291  01A7EE  0060  F007  FFE6   	movff	btemp,postinc1
 14292  01A7F4  0060  F00B  FFE6   	movff	btemp+1,postinc1
 14293  01A7FA  0E00               	movlw	0
 14294  01A7FC  6EE6               	movwf	postinc1,c
 14295  01A7FE  0E00               	movlw	0
 14296  01A800  6EE6               	movwf	postinc1,c
 14297  01A802  EC1E  F0EA         	call	_get_vterm_ptr	;wreg free
 14298  01A806  0060  F007  FFE6   	movff	btemp,postinc1
 14299  01A80C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 14300  01A812  0EA4               	movlw	low STR_80
 14301  01A814  6EE6               	movwf	postinc1,c
 14302  01A816  0EFF               	movlw	high STR_80
 14303  01A818  6EE6               	movwf	postinc1,c
 14304  01A81A  0E01               	movlw	low (_V+1)
 14305  01A81C  6EE6               	movwf	postinc1,c
 14306  01A81E  0E02               	movlw	high (_V+1)
 14307  01A820  6EE6               	movwf	postinc1,c
 14308  01A822  0E08               	movlw	8
 14309  01A824  6EE6               	movwf	postinc1,c
 14310  01A826  EC5C  F0D8         	call	_sprintf	;wreg free
 14311                           
 14312                           ; BSR set to: 0
 14313                           ;mconfig.c: 124:  wait_lcd_done();
 14314  01A82A  EC26  F0EC         	call	_wait_lcd_done	;wreg free
 14315                           
 14316                           ; BSR set to: 0
 14317                           ;mconfig.c: 125:  eaDogM_WriteStringAtPos(0, 0, V.buf);
 14318  01A82E  0E01               	movlw	low (_V+1)
 14319  01A830  6EE6               	movwf	postinc1,c
 14320  01A832  0E02               	movlw	high (_V+1)
 14321  01A834  6EE6               	movwf	postinc1,c
 14322  01A836  0E00               	movlw	0
 14323  01A838  6EE6               	movwf	postinc1,c
 14324  01A83A  0E00               	movlw	0
 14325  01A83C  6EE6               	movwf	postinc1,c
 14326  01A83E  ECAE  F0DE         	call	_eaDogM_WriteStringAtPos	;wreg free
 14327                           
 14328                           ; BSR set to: 59
 14329                           ;mconfig.c: 126:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(1, 0), get_vterm_ptr(1,
      +                           1));
 14330  01A842  0E01               	movlw	1
 14331  01A844  6EE6               	movwf	postinc1,c
 14332  01A846  0E01               	movlw	1
 14333  01A848  6EE6               	movwf	postinc1,c
 14334  01A84A  EC1E  F0EA         	call	_get_vterm_ptr	;wreg free
 14335  01A84E  0060  F007  FFE6   	movff	btemp,postinc1
 14336  01A854  0060  F00B  FFE6   	movff	btemp+1,postinc1
 14337  01A85A  0E00               	movlw	0
 14338  01A85C  6EE6               	movwf	postinc1,c
 14339  01A85E  0E01               	movlw	1
 14340  01A860  6EE6               	movwf	postinc1,c
 14341  01A862  EC1E  F0EA         	call	_get_vterm_ptr	;wreg free
 14342  01A866  0060  F007  FFE6   	movff	btemp,postinc1
 14343  01A86C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 14344  01A872  0EA4               	movlw	low STR_80
 14345  01A874  6EE6               	movwf	postinc1,c
 14346  01A876  0EFF               	movlw	high STR_80
 14347  01A878  6EE6               	movwf	postinc1,c
 14348  01A87A  0E01               	movlw	low (_V+1)
 14349  01A87C  6EE6               	movwf	postinc1,c
 14350  01A87E  0E02               	movlw	high (_V+1)
 14351  01A880  6EE6               	movwf	postinc1,c
 14352  01A882  0E08               	movlw	8
 14353  01A884  6EE6               	movwf	postinc1,c
 14354  01A886  EC5C  F0D8         	call	_sprintf	;wreg free
 14355                           
 14356                           ; BSR set to: 0
 14357                           ;mconfig.c: 127:  wait_lcd_done();
 14358  01A88A  EC26  F0EC         	call	_wait_lcd_done	;wreg free
 14359                           
 14360                           ;mconfig.c: 128:  eaDogM_WriteStringAtPos(1, 0, V.buf);
 14361  01A88E  0E01               	movlw	low (_V+1)
 14362  01A890  6EE6               	movwf	postinc1,c
 14363  01A892  0E02               	movlw	high (_V+1)
 14364  01A894  6EE6               	movwf	postinc1,c
 14365  01A896  0E00               	movlw	0
 14366  01A898  6EE6               	movwf	postinc1,c
 14367  01A89A  0E01               	movlw	1
 14368  01A89C  6EE6               	movwf	postinc1,c
 14369  01A89E  ECAE  F0DE         	call	_eaDogM_WriteStringAtPos	;wreg free
 14370                           
 14371                           ;mconfig.c: 129:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(2, 0), get_vterm_ptr(2,
      +                           1));
 14372  01A8A2  0E01               	movlw	1
 14373  01A8A4  6EE6               	movwf	postinc1,c
 14374  01A8A6  0E02               	movlw	2
 14375  01A8A8  6EE6               	movwf	postinc1,c
 14376  01A8AA  EC1E  F0EA         	call	_get_vterm_ptr	;wreg free
 14377  01A8AE  0060  F007  FFE6   	movff	btemp,postinc1
 14378  01A8B4  0060  F00B  FFE6   	movff	btemp+1,postinc1
 14379  01A8BA  0E00               	movlw	0
 14380  01A8BC  6EE6               	movwf	postinc1,c
 14381  01A8BE  0E02               	movlw	2
 14382  01A8C0  6EE6               	movwf	postinc1,c
 14383  01A8C2  EC1E  F0EA         	call	_get_vterm_ptr	;wreg free
 14384  01A8C6  0060  F007  FFE6   	movff	btemp,postinc1
 14385  01A8CC  0060  F00B  FFE6   	movff	btemp+1,postinc1
 14386  01A8D2  0EA4               	movlw	low STR_80
 14387  01A8D4  6EE6               	movwf	postinc1,c
 14388  01A8D6  0EFF               	movlw	high STR_80
 14389  01A8D8  6EE6               	movwf	postinc1,c
 14390  01A8DA  0E01               	movlw	low (_V+1)
 14391  01A8DC  6EE6               	movwf	postinc1,c
 14392  01A8DE  0E02               	movlw	high (_V+1)
 14393  01A8E0  6EE6               	movwf	postinc1,c
 14394  01A8E2  0E08               	movlw	8
 14395  01A8E4  6EE6               	movwf	postinc1,c
 14396  01A8E6  EC5C  F0D8         	call	_sprintf	;wreg free
 14397                           
 14398                           ; BSR set to: 0
 14399                           ;mconfig.c: 130:  wait_lcd_done();
 14400  01A8EA  EC26  F0EC         	call	_wait_lcd_done	;wreg free
 14401                           
 14402                           ; BSR set to: 0
 14403                           ;mconfig.c: 131:  eaDogM_WriteStringAtPos(2, 0, V.buf);
 14404  01A8EE  0E01               	movlw	low (_V+1)
 14405  01A8F0  6EE6               	movwf	postinc1,c
 14406  01A8F2  0E02               	movlw	high (_V+1)
 14407  01A8F4  6EE6               	movwf	postinc1,c
 14408  01A8F6  0E00               	movlw	0
 14409  01A8F8  6EE6               	movwf	postinc1,c
 14410  01A8FA  0E02               	movlw	2
 14411  01A8FC  6EE6               	movwf	postinc1,c
 14412  01A8FE  ECAE  F0DE         	call	_eaDogM_WriteStringAtPos	;wreg free
 14413                           
 14414                           ; BSR set to: 59
 14415                           ;mconfig.c: 132:  WaitMs(3000);
 14416  01A902  0EB8               	movlw	184
 14417  01A904  6EE6               	movwf	postinc1,c
 14418  01A906  0E0B               	movlw	11
 14419  01A908  6EE6               	movwf	postinc1,c
 14420  01A90A  EC08  F0E9         	call	_WaitMs	;wreg free
 14421                           
 14422                           ; _vterm_dump: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 14423  01A90E  0012               	return		;funcret
 14424  01A910                     __end_of_vterm_dump:
 14425                           	opt callstack 0
 14426                           
 14427 ;; *************** function _sprintf *****************
 14428 ;; Defined at:
 14429 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_sprintf.c"
 14430 ;; Parameters:    Size  Location     Type
 14431 ;;  s               2  [STACK] PTR unsigned char 
 14432 ;;		 -> D.lcd(480), D(482), port_data(512), V(192), 
 14433 ;;  fmt             2  [STACK] PTR const unsigned char 
 14434 ;;		 -> STR_93(127), STR_91(3), STR_90(3), STR_89(19), 
 14435 ;;		 -> STR_88(19), STR_87(19), STR_86(19), STR_85(19), 
 14436 ;;		 -> STR_84(19), STR_83(24), STR_82(15), STR_81(15), 
 14437 ;;		 -> STR_80(15), STR_79(10), STR_78(10), STR_77(19), 
 14438 ;;		 -> STR_76(19), STR_71(21), STR_70(21), STR_69(21), 
 14439 ;;		 -> STR_68(21), STR_67(21), STR_66(21), STR_65(21), 
 14440 ;;		 -> STR_64(21), STR_63(21), STR_62(18), STR_61(21), 
 14441 ;;		 -> STR_60(21), STR_59(21), STR_58(21), STR_57(21), 
 14442 ;;		 -> STR_56(21), STR_55(21), STR_54(21), STR_53(21), 
 14443 ;;		 -> STR_52(21), STR_51(21), STR_50(21), STR_49(20), 
 14444 ;;		 -> STR_48(21), STR_47(21), STR_46(21), STR_45(22), 
 14445 ;;		 -> STR_44(22), STR_43(22), STR_42(23), STR_41(23), 
 14446 ;;		 -> STR_40(23), STR_39(29), STR_38(23), STR_37(23), 
 14447 ;;		 -> STR_36(22), STR_35(22), STR_34(22), STR_33(22), 
 14448 ;;		 -> STR_32(22), STR_31(22), STR_30(22), STR_29(22), 
 14449 ;;		 -> STR_28(22), STR_27(22), STR_26(22), STR_25(22), 
 14450 ;;		 -> STR_24(17), STR_23(16), STR_22(16), STR_21(26), 
 14451 ;;		 -> STR_20(26), STR_19(22), STR_18(21), STR_17(21), 
 14452 ;;		 -> STR_16(21), STR_15(21), STR_14(22), STR_13(22), 
 14453 ;;		 -> STR_12(22), STR_11(26), STR_10(21), STR_9(21), 
 14454 ;;		 -> STR_8(21), STR_7(21), STR_6(21), STR_5(21), 
 14455 ;;		 -> STR_4(21), STR_2(21), STR_1(21), 
 14456 ;; Auto vars:     Size  Location     Type
 14457 ;;  f               6  [STACK] struct _IO_FILE
 14458 ;;  ap              2  [STACK] PTR void [1]
 14459 ;;		 -> ?_printf(2), ?_sprintf(2), 
 14460 ;;  ret             2    0        int 
 14461 ;; Return value:  Size  Location     Type
 14462 ;;                  2  [STACK] int 
 14463 ;; Registers used:
 14464 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 14465 ;; Tracked objects:
 14466 ;;		On entry : 0/1
 14467 ;;		On exit  : 3F/0
 14468 ;;		Unchanged: 0/0
 14469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14470 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14471 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14473 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14474 ;;Total ram usage:        0 bytes
 14475 ;; Hardware stack levels used:    1
 14476 ;; Hardware stack levels required when called:   23
 14477 ;; This function calls:
 14478 ;;		_vfprintf
 14479 ;; This function is called by:
 14480 ;;		_main
 14481 ;;		_current_sensor_cal
 14482 ;;		_check_help
 14483 ;;		_vterm_dump
 14484 ;;		_calc_bsoc
 14485 ;; This function uses a reentrant model
 14486 ;;
 14487                           
 14488                           	psect	text52
 14489  01B0B8                     __ptext52:
 14490                           	opt callstack 0
 14491  01B0B8                     _sprintf:
 14492                           	opt callstack 0
 14493                           
 14494                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 94, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 14495  01B0B8  0E08               	movlw	8
 14496  01B0BA  26E1               	addwf	fsr1l,f,c
 14497  01B0BC  0E00               	movlw	0
 14498  01B0BE  22E2               	addwfc	fsr1h,f,c
 14499                           
 14500                           ;incstack = 0
 14501 ;; hardware stack exceeded
 14502  01B0C0  0EFE               	movlw	254
 14503  01B0C2  6E0B               	movwf	(btemp+10)^0,c
 14504  01B0C4  0EFF               	movlw	255
 14505  01B0C6  6E0C               	movwf	(btemp+11)^0,c
 14506                           
 14507                           ;stkvar	?_sprintf @ sp[(-8)+-3]
 14508  01B0C8  0EF5               	movlw	245
 14509  01B0CA  24E1               	addwf	fsr1l,w,c
 14510  01B0CC  6E09               	movwf	(btemp+8)^0,c
 14511  01B0CE  0EFF               	movlw	255
 14512  01B0D0  20E2               	addwfc	fsr1h,w,c
 14513  01B0D2  6E0A               	movwf	(btemp+9)^0,c
 14514  01B0D4  500B               	movf	(btemp+10)^0,w,c
 14515  01B0D6  2609               	addwf	(btemp+8)^0,f,c
 14516  01B0D8  500C               	movf	(btemp+11)^0,w,c
 14517  01B0DA  220A               	addwfc	(btemp+9)^0,f,c
 14518                           
 14519                           ;stkvar	_ap @ sp[(-8)+6]
 14520  01B0DC  0EFF               	movlw	-1
 14521  01B0DE  0060  F02B  FFE3   	movff	btemp+9,plusw1
 14522  01B0E4  0EFE               	movlw	-2
 14523  01B0E6  0060  F027  FFE3   	movff	btemp+8,plusw1
 14524                           
 14525                           ;stkvar	_s @ sp[(-8)+-3]
 14526  01B0EC  0EF5               	movlw	-11
 14527  01B0EE  006F FF8C  F00B    	movff	plusw1,btemp+10
 14528  01B0F4  0EF6               	movlw	-10
 14529  01B0F6  006F FF8C  F00C    	movff	plusw1,btemp+11
 14530                           
 14531                           ;stkvar	_f @ sp[(-8)+0]
 14532  01B0FC  0EF9               	movlw	-7
 14533  01B0FE  0060  F033  FFE3   	movff	btemp+11,plusw1
 14534  01B104  0EF8               	movlw	-8
 14535  01B106  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14536                           
 14537                           ;stkvar	_f @ sp[(-8)+0]
 14538  01B10C  0EFA               	movlw	250
 14539  01B10E  24E1               	addwf	fsr1l,w,c
 14540  01B110  6ED9               	movwf	fsr2l,c
 14541  01B112  0EFF               	movlw	255
 14542  01B114  20E2               	addwfc	fsr1h,w,c
 14543  01B116  6EDA               	movwf	fsr2h,c
 14544  01B118  0E00               	movlw	0
 14545  01B11A  6EDE               	movwf	postinc2,c
 14546  01B11C  0E00               	movlw	0
 14547  01B11E  6EDD               	movwf	postdec2,c
 14548                           
 14549                           ;stkvar	_f @ sp[(-8)+0]
 14550  01B120  0EFC               	movlw	252
 14551  01B122  24E1               	addwf	fsr1l,w,c
 14552  01B124  6ED9               	movwf	fsr2l,c
 14553  01B126  0EFF               	movlw	255
 14554  01B128  20E2               	addwfc	fsr1h,w,c
 14555  01B12A  6EDA               	movwf	fsr2h,c
 14556  01B12C  0E00               	movlw	0
 14557  01B12E  6EDE               	movwf	postinc2,c
 14558  01B130  0E00               	movlw	0
 14559  01B132  6EDD               	movwf	postdec2,c
 14560                           
 14561                           ;stkvar	_ap @ sp[(-8)+6]
 14562  01B134  0EFE               	movlw	254
 14563  01B136  24E1               	addwf	fsr1l,w,c
 14564  01B138  6E01               	movwf	btemp^0,c
 14565  01B13A  0EFF               	movlw	255
 14566  01B13C  20E2               	addwfc	fsr1h,w,c
 14567  01B13E  6E02               	movwf	(btemp+1)^0,c
 14568  01B140  0060  F007  FFE6   	movff	btemp,postinc1
 14569  01B146  0060  F00B  FFE6   	movff	btemp+1,postinc1
 14570                           
 14571                           ;stkvar	_fmt @ sp[(-10)+-5]
 14572  01B14C  0EF1               	movlw	-15
 14573  01B14E  006F FF8F FFE6     	movff	plusw1,postinc1
 14574  01B154  006F FF8F FFE6     	movff	plusw1,postinc1
 14575                           
 14576                           ;stkvar	_f @ sp[(-12)+0]
 14577  01B15A  0EF4               	movlw	244
 14578  01B15C  24E1               	addwf	fsr1l,w,c
 14579  01B15E  6E01               	movwf	btemp^0,c
 14580  01B160  0EFF               	movlw	255
 14581  01B162  20E2               	addwfc	fsr1h,w,c
 14582  01B164  6E02               	movwf	(btemp+1)^0,c
 14583  01B166  0060  F007  FFE6   	movff	btemp,postinc1
 14584  01B16C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 14585  01B172  EC03  F0DE         	call	_vfprintf	;wreg free
 14586                           
 14587                           ; BSR set to: 0
 14588                           ;stkvar	_f @ sp[(-8)+0]
 14589  01B176  0EFA               	movlw	250
 14590  01B178  24E1               	addwf	fsr1l,w,c
 14591  01B17A  6ED9               	movwf	fsr2l,c
 14592  01B17C  0EFF               	movlw	255
 14593  01B17E  20E2               	addwfc	fsr1h,w,c
 14594  01B180  6EDA               	movwf	fsr2h,c
 14595  01B182  006F FF78  F00B    	movff	postinc2,btemp+10
 14596  01B188  006F FF74  F00C    	movff	postdec2,btemp+11
 14597                           
 14598                           ;stkvar	_s @ sp[(-8)+-3]
 14599  01B18E  0EF5               	movlw	-11
 14600  01B190  006F FF8C  F009    	movff	plusw1,btemp+8
 14601  01B196  0EF6               	movlw	-10
 14602  01B198  006F FF8C  F00A    	movff	plusw1,btemp+9
 14603  01B19E  500B               	movf	(btemp+10)^0,w,c
 14604  01B1A0  2409               	addwf	(btemp+8)^0,w,c
 14605  01B1A2  6ED9               	movwf	fsr2l,c
 14606  01B1A4  500C               	movf	(btemp+11)^0,w,c
 14607  01B1A6  200A               	addwfc	(btemp+9)^0,w,c
 14608  01B1A8  6EDA               	movwf	fsr2h,c
 14609  01B1AA  0E00               	movlw	0
 14610  01B1AC  6EDF               	movwf	indf2,c
 14611                           
 14612                           ; BSR set to: 0
 14613                           ; _sprintf: autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 94, args
      +                          ize = 4, vargsize = 0
 14614  01B1AE  0EF8               	movlw	248
 14615  01B1B0  26E1               	addwf	fsr1l,f,c
 14616  01B1B2  0EFF               	movlw	255
 14617  01B1B4  22E2               	addwfc	fsr1h,f,c
 14618  01B1B6  52E5               	movf	postdec1,f,c
 14619  01B1B8  50E7               	movf	indf1,w,c
 14620  01B1BA  5EE1               	subwf	fsr1l,f,c
 14621  01B1BC  0E00               	movlw	0
 14622  01B1BE  5AE2               	subwfb	fsr1h,f,c
 14623  01B1C0  0012               	return		;funcret
 14624  01B1C2                     __end_of_sprintf:
 14625                           	opt callstack 0
 14626                           
 14627 ;; *************** function _get_vterm_ptr *****************
 14628 ;; Defined at:
 14629 ;;		line 116 in file "mconfig.c"
 14630 ;; Parameters:    Size  Location     Type
 14631 ;;  line            1  [STACK] const unsigned char 
 14632 ;;  vterm           1  [STACK] const unsigned char 
 14633 ;; Auto vars:     Size  Location     Type
 14634 ;;		None
 14635 ;; Return value:  Size  Location     Type
 14636 ;;                  2  [STACK] PTR unsigned char 
 14637 ;; Registers used:
 14638 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, prodl, prodh
 14639 ;; Tracked objects:
 14640 ;;		On entry : 0/1
 14641 ;;		On exit  : 0/0
 14642 ;;		Unchanged: 0/0
 14643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14644 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14645 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14646 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14647 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14648 ;;Total ram usage:        0 bytes
 14649 ;; Hardware stack levels used:    1
 14650 ;; Hardware stack levels required when called:   15
 14651 ;; This function calls:
 14652 ;;		Nothing
 14653 ;; This function is called by:
 14654 ;;		_main
 14655 ;;		_current_sensor_cal
 14656 ;;		_check_help
 14657 ;;		_vterm_dump
 14658 ;; This function uses a reentrant model
 14659 ;;
 14660                           
 14661                           	psect	text53
 14662  01D43C                     __ptext53:
 14663                           	opt callstack 0
 14664  01D43C                     _get_vterm_ptr:
 14665                           	opt callstack 15
 14666                           
 14667                           ;mconfig.c: 116: char * get_vterm_ptr(const uint8_t line, const uint8_t vterm);mconfig.c
      +                          : 117: {;mconfig.c: 118:  return D.lcd[vterm & 0x03][line & 0x03];
 14668                           ;stkvar	_vterm @ sp[(0)+-2]
 14669                           
 14670                           ; BSR set to: 0
 14671                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14672                           ;incstack = 0
 14673  01D43C  0EFE               	movlw	-2
 14674  01D43E  50E3               	movf	plusw1,w,c
 14675  01D440  0B03               	andlw	3
 14676  01D442  0D78               	mullw	120
 14677  01D444  0E2A               	movlw	low _D
 14678  01D446  6E01               	movwf	btemp^0,c
 14679  01D448  0E09               	movlw	high _D
 14680  01D44A  6E02               	movwf	(btemp+1)^0,c
 14681  01D44C  50F3               	movf	243,w,c
 14682  01D44E  2601               	addwf	btemp^0,f,c
 14683  01D450  50F4               	movf	244,w,c
 14684  01D452  2202               	addwfc	(btemp+1)^0,f,c
 14685                           
 14686                           ;stkvar	_line @ sp[(0)+-1]
 14687  01D454  0EFF               	movlw	-1
 14688  01D456  50E3               	movf	plusw1,w,c
 14689  01D458  0B03               	andlw	3
 14690  01D45A  0D28               	mullw	40
 14691  01D45C  50F3               	movf	243,w,c
 14692  01D45E  2601               	addwf	btemp^0,f,c
 14693  01D460  50F4               	movf	244,w,c
 14694  01D462  2202               	addwfc	(btemp+1)^0,f,c
 14695                           
 14696                           ; _get_vterm_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 14697  01D464  52E5               	movf	postdec1,f,c
 14698  01D466  52E5               	movf	postdec1,f,c
 14699  01D468  0012               	return		;funcret
 14700  01D46A                     __end_of_get_vterm_ptr:
 14701                           	opt callstack 0
 14702                           
 14703 ;; *************** function _WaitMs *****************
 14704 ;; Defined at:
 14705 ;;		line 32 in file "timers.c"
 14706 ;; Parameters:    Size  Location     Type
 14707 ;;  numMilliseco    2  [STACK] const unsigned short 
 14708 ;; Auto vars:     Size  Location     Type
 14709 ;;		None
 14710 ;; Return value:  Size  Location     Type
 14711 ;;                  1  [STACK] void 
 14712 ;; Registers used:
 14713 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 14714 ;; Tracked objects:
 14715 ;;		On entry : 0/2
 14716 ;;		On exit  : 0/0
 14717 ;;		Unchanged: 0/0
 14718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14719 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14720 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14721 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14722 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14723 ;;Total ram usage:        0 bytes
 14724 ;; Hardware stack levels used:    1
 14725 ;; Hardware stack levels required when called:   16
 14726 ;; This function calls:
 14727 ;;		_StartTimer
 14728 ;;		_TimerDone
 14729 ;; This function is called by:
 14730 ;;		_main
 14731 ;;		_current_sensor_cal
 14732 ;;		_vterm_dump
 14733 ;; This function uses a reentrant model
 14734 ;;
 14735                           
 14736                           	psect	text54
 14737  01D210                     __ptext54:
 14738                           	opt callstack 0
 14739  01D210                     _WaitMs:
 14740                           	opt callstack 13
 14741                           
 14742                           ;timers.c: 32: void WaitMs(const uint16_t numMilliseconds);timers.c: 33: {;timers.c: 34:
      +                            StartTimer(TMR_INTERNAL, numMilliseconds);
 14743                           ;stkvar	_numMilliseconds @ sp[(0)+-2]
 14744                           
 14745                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14746                           ;incstack = 0
 14747  01D210  0EFE               	movlw	-2
 14748  01D212  006F FF8F FFE6     	movff	plusw1,postinc1
 14749  01D218  006F FF8F FFE6     	movff	plusw1,postinc1
 14750  01D21E  0E00               	movlw	0
 14751  01D220  6EE6               	movwf	postinc1,c
 14752  01D222  EC13  F0E8         	call	_StartTimer	;wreg free
 14753                           
 14754                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
 14755  01D226  D005               	goto	l10840
 14756  01D228                     l1745:
 14757                           
 14758                           ;timers.c: 36:   __nop();
 14759  01D228  F000               	nop	
 14760                           
 14761                           ;timers.c: 37:   __nop();
 14762  01D22A  F000               	nop	
 14763                           
 14764                           ;timers.c: 38:   __nop();
 14765  01D22C  F000               	nop	
 14766                           
 14767                           ;timers.c: 39:   __nop();
 14768  01D22E  F000               	nop	
 14769  01D230  0004               	clrwdt		;# 
 14770  01D232                     l10840:
 14771                           
 14772                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
 14773  01D232  0E00               	movlw	0
 14774  01D234  6EE6               	movwf	postinc1,c
 14775  01D236  ECA1  F0EA         	call	_TimerDone	;wreg free
 14776  01D23A  5001               	movf	btemp^0,w,c
 14777  01D23C  B4D8               	btfsc	status,2,c
 14778  01D23E  D7F4               	goto	l1745
 14779                           
 14780                           ; _WaitMs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 14781  01D240  52E5               	movf	postdec1,f,c
 14782  01D242  52E5               	movf	postdec1,f,c
 14783  01D244  0012               	return		;funcret
 14784  01D246                     __end_of_WaitMs:
 14785                           	opt callstack 0
 14786                           
 14787 ;; *************** function _update_lcd *****************
 14788 ;; Defined at:
 14789 ;;		line 85 in file "mconfig.c"
 14790 ;; Parameters:    Size  Location     Type
 14791 ;;  vterm           1  [STACK] unsigned char 
 14792 ;; Auto vars:     Size  Location     Type
 14793 ;;		None
 14794 ;; Return value:  Size  Location     Type
 14795 ;;                  1  [STACK] unsigned char 
 14796 ;; Registers used:
 14797 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 14798 ;; Tracked objects:
 14799 ;;		On entry : 0/0
 14800 ;;		On exit  : 0/0
 14801 ;;		Unchanged: 0/0
 14802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14803 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14804 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14806 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14807 ;;Total ram usage:        0 bytes
 14808 ;; Hardware stack levels used:    1
 14809 ;; Hardware stack levels required when called:   27
 14810 ;; This function calls:
 14811 ;;		_eaDogM_WriteStringAtPos
 14812 ;;		_wait_lcd_done
 14813 ;; This function is called by:
 14814 ;;		_main
 14815 ;;		_current_sensor_cal
 14816 ;;		_check_help
 14817 ;; This function uses a reentrant model
 14818 ;;
 14819                           
 14820                           	psect	text55
 14821  01AE9A                     __ptext55:
 14822                           	opt callstack 0
 14823  01AE9A                     _update_lcd:
 14824                           	opt callstack 3
 14825                           
 14826                           ;mconfig.c: 85: uint8_t update_lcd(uint8_t vterm);mconfig.c: 86: {;mconfig.c: 87:  vterm
      +                           = vterm & 0x03;
 14827                           ;stkvar	_vterm @ sp[(0)+-1]
 14828                           
 14829                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14830                           ;incstack = 0
 14831  01AE9A  0EFF               	movlw	-1
 14832  01AE9C  006F FF8C  F001    	movff	plusw1,btemp
 14833  01AEA2  0E03               	movlw	3
 14834  01AEA4  1601               	andwf	btemp^0,f,c
 14835  01AEA6  0EFF               	movlw	-1
 14836  01AEA8  0060  F007  FFE3   	movff	btemp,plusw1
 14837                           
 14838                           ;mconfig.c: 89:  if (D.vterm >= 1 && vterm == 0)
 14839  01AEAE  EE22  F30A         	lfsr	2,_D+480
 14840  01AEB2  A0DF               	btfss	indf2,0,c
 14841  01AEB4  D004               	goto	l14232
 14842                           
 14843                           ;stkvar	_vterm @ sp[(0)+-1]
 14844  01AEB6  0EFF               	movlw	-1
 14845  01AEB8  50E3               	movf	plusw1,w,c
 14846  01AEBA  B4D8               	btfsc	status,2,c
 14847  01AEBC  D074               	goto	l1821
 14848  01AEBE                     l14232:
 14849                           
 14850                           ;mconfig.c: 92:  D.lcd[vterm][0][20] = 0;
 14851                           ;stkvar	_vterm @ sp[(0)+-1]
 14852  01AEBE  0EFF               	movlw	-1
 14853  01AEC0  50E3               	movf	plusw1,w,c
 14854  01AEC2  0D78               	mullw	120
 14855  01AEC4  0E3E               	movlw	low (_D+20)
 14856  01AEC6  24F3               	addwf	243,w,c
 14857  01AEC8  6ED9               	movwf	fsr2l,c
 14858  01AECA  0E09               	movlw	high (_D+20)
 14859  01AECC  20F4               	addwfc	prodh,w,c
 14860  01AECE  6EDA               	movwf	fsr2h,c
 14861  01AED0  0E00               	movlw	0
 14862  01AED2  6EDF               	movwf	indf2,c
 14863                           
 14864                           ;mconfig.c: 93:  D.lcd[vterm][1][20] = 0;
 14865                           ;stkvar	_vterm @ sp[(0)+-1]
 14866  01AED4  0EFF               	movlw	-1
 14867  01AED6  50E3               	movf	plusw1,w,c
 14868  01AED8  0D78               	mullw	120
 14869  01AEDA  0E66               	movlw	low (_D+60)
 14870  01AEDC  24F3               	addwf	243,w,c
 14871  01AEDE  6ED9               	movwf	fsr2l,c
 14872  01AEE0  0E09               	movlw	high (_D+60)
 14873  01AEE2  20F4               	addwfc	prodh,w,c
 14874  01AEE4  6EDA               	movwf	fsr2h,c
 14875  01AEE6  0E00               	movlw	0
 14876  01AEE8  6EDF               	movwf	indf2,c
 14877                           
 14878                           ;mconfig.c: 94:  D.lcd[vterm][2][20] = 0;
 14879                           ;stkvar	_vterm @ sp[(0)+-1]
 14880  01AEEA  0EFF               	movlw	-1
 14881  01AEEC  50E3               	movf	plusw1,w,c
 14882  01AEEE  0D78               	mullw	120
 14883  01AEF0  0E8E               	movlw	low (_D+100)
 14884  01AEF2  24F3               	addwf	243,w,c
 14885  01AEF4  6ED9               	movwf	fsr2l,c
 14886  01AEF6  0E09               	movlw	high (_D+100)
 14887  01AEF8  20F4               	addwfc	prodh,w,c
 14888  01AEFA  6EDA               	movwf	fsr2h,c
 14889  01AEFC  0E00               	movlw	0
 14890  01AEFE  6EDF               	movwf	indf2,c
 14891                           
 14892                           ;mconfig.c: 95:  wait_lcd_done();
 14893  01AF00  EC26  F0EC         	call	_wait_lcd_done	;wreg free
 14894                           
 14895                           ; BSR set to: 0
 14896                           ;mconfig.c: 96:  eaDogM_WriteStringAtPos(0, 0, D.lcd[vterm][0]);
 14897                           ;stkvar	_vterm @ sp[(0)+-1]
 14898  01AF04  0EFF               	movlw	-1
 14899  01AF06  50E3               	movf	plusw1,w,c
 14900  01AF08  0D78               	mullw	120
 14901  01AF0A  0E2A               	movlw	low _D
 14902  01AF0C  6E0B               	movwf	(btemp+10)^0,c
 14903  01AF0E  0E09               	movlw	high _D
 14904  01AF10  6E0C               	movwf	(btemp+11)^0,c
 14905  01AF12  50F3               	movf	243,w,c
 14906  01AF14  260B               	addwf	(btemp+10)^0,f,c
 14907  01AF16  50F4               	movf	244,w,c
 14908  01AF18  220C               	addwfc	(btemp+11)^0,f,c
 14909  01AF1A  0060  F02F  FFE6   	movff	btemp+10,postinc1
 14910  01AF20  0060  F033  FFE6   	movff	btemp+11,postinc1
 14911  01AF26  0E00               	movlw	0
 14912  01AF28  6EE6               	movwf	postinc1,c
 14913  01AF2A  0E00               	movlw	0
 14914  01AF2C  6EE6               	movwf	postinc1,c
 14915  01AF2E  ECAE  F0DE         	call	_eaDogM_WriteStringAtPos	;wreg free
 14916                           
 14917                           ; BSR set to: 59
 14918                           ;mconfig.c: 97:  wait_lcd_done();
 14919  01AF32  EC26  F0EC         	call	_wait_lcd_done	;wreg free
 14920                           
 14921                           ; BSR set to: 0
 14922                           ;mconfig.c: 98:  eaDogM_WriteStringAtPos(1, 0, D.lcd[vterm][1]);
 14923                           ;stkvar	_vterm @ sp[(0)+-1]
 14924  01AF36  0EFF               	movlw	-1
 14925  01AF38  50E3               	movf	plusw1,w,c
 14926  01AF3A  0D78               	mullw	120
 14927  01AF3C  0E2A               	movlw	low _D
 14928  01AF3E  6E0B               	movwf	(btemp+10)^0,c
 14929  01AF40  0E09               	movlw	high _D
 14930  01AF42  6E0C               	movwf	(btemp+11)^0,c
 14931  01AF44  0E28               	movlw	40
 14932  01AF46  260B               	addwf	(btemp+10)^0,f,c
 14933  01AF48  0E00               	movlw	0
 14934  01AF4A  220C               	addwfc	(btemp+11)^0,f,c
 14935  01AF4C  50F3               	movf	243,w,c
 14936  01AF4E  260B               	addwf	(btemp+10)^0,f,c
 14937  01AF50  50F4               	movf	244,w,c
 14938  01AF52  220C               	addwfc	(btemp+11)^0,f,c
 14939  01AF54  0060  F02F  FFE6   	movff	btemp+10,postinc1
 14940  01AF5A  0060  F033  FFE6   	movff	btemp+11,postinc1
 14941  01AF60  0E00               	movlw	0
 14942  01AF62  6EE6               	movwf	postinc1,c
 14943  01AF64  0E01               	movlw	1
 14944  01AF66  6EE6               	movwf	postinc1,c
 14945  01AF68  ECAE  F0DE         	call	_eaDogM_WriteStringAtPos	;wreg free
 14946                           
 14947                           ; BSR set to: 59
 14948                           ;mconfig.c: 99:  wait_lcd_done();
 14949  01AF6C  EC26  F0EC         	call	_wait_lcd_done	;wreg free
 14950                           
 14951                           ; BSR set to: 0
 14952                           ;mconfig.c: 100:  eaDogM_WriteStringAtPos(2, 0, D.lcd[vterm][2]);
 14953                           ;stkvar	_vterm @ sp[(0)+-1]
 14954  01AF70  0EFF               	movlw	-1
 14955  01AF72  50E3               	movf	plusw1,w,c
 14956  01AF74  0D78               	mullw	120
 14957  01AF76  0E2A               	movlw	low _D
 14958  01AF78  6E0B               	movwf	(btemp+10)^0,c
 14959  01AF7A  0E09               	movlw	high _D
 14960  01AF7C  6E0C               	movwf	(btemp+11)^0,c
 14961  01AF7E  0E50               	movlw	80
 14962  01AF80  260B               	addwf	(btemp+10)^0,f,c
 14963  01AF82  0E00               	movlw	0
 14964  01AF84  220C               	addwfc	(btemp+11)^0,f,c
 14965  01AF86  50F3               	movf	243,w,c
 14966  01AF88  260B               	addwf	(btemp+10)^0,f,c
 14967  01AF8A  50F4               	movf	244,w,c
 14968  01AF8C  220C               	addwfc	(btemp+11)^0,f,c
 14969  01AF8E  0060  F02F  FFE6   	movff	btemp+10,postinc1
 14970  01AF94  0060  F033  FFE6   	movff	btemp+11,postinc1
 14971  01AF9A  0E00               	movlw	0
 14972  01AF9C  6EE6               	movwf	postinc1,c
 14973  01AF9E  0E02               	movlw	2
 14974  01AFA0  6EE6               	movwf	postinc1,c
 14975  01AFA2  ECAE  F0DE         	call	_eaDogM_WriteStringAtPos	;wreg free
 14976  01AFA6                     l1821:
 14977                           
 14978                           ; _update_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
 14979  01AFA6  52E5               	movf	postdec1,f,c
 14980  01AFA8  0012               	return		;funcret
 14981  01AFAA                     __end_of_update_lcd:
 14982                           	opt callstack 0
 14983                           
 14984 ;; *************** function _eaDogM_WriteStringAtPos *****************
 14985 ;; Defined at:
 14986 ;;		line 195 in file "eadog.c"
 14987 ;; Parameters:    Size  Location     Type
 14988 ;;  r               1  [STACK] const unsigned char 
 14989 ;;  c               1  [STACK] const unsigned char 
 14990 ;;  strPtr          2  [STACK] PTR unsigned char 
 14991 ;;		 -> D.lcd(480), D(482), V(192), 
 14992 ;; Auto vars:     Size  Location     Type
 14993 ;;  row             1  [STACK] unsigned char 
 14994 ;; Return value:  Size  Location     Type
 14995 ;;                  1  [STACK] void 
 14996 ;; Registers used:
 14997 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 14998 ;; Tracked objects:
 14999 ;;		On entry : 3F/0
 15000 ;;		On exit  : 3F/3B
 15001 ;;		Unchanged: 0/0
 15002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15003 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15004 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15005 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15006 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15007 ;;Total ram usage:        0 bytes
 15008 ;; Hardware stack levels used:    1
 15009 ;; Hardware stack levels required when called:   26
 15010 ;; This function calls:
 15011 ;;		_eaDogM_WriteString
 15012 ;;		_send_lcd_cmd_dma
 15013 ;;		_send_lcd_data_dma
 15014 ;;		_wait_lcd_done
 15015 ;;		_wdtdelay
 15016 ;; This function is called by:
 15017 ;;		_update_lcd
 15018 ;;		_vterm_dump
 15019 ;; This function uses a reentrant model
 15020 ;;
 15021                           
 15022                           	psect	text56
 15023  01BD5C                     __ptext56:
 15024                           	opt callstack 0
 15025  01BD5C                     _eaDogM_WriteStringAtPos:
 15026                           	opt callstack 0
 15027                           
 15028                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15029  01BD5C  52E6               	movf	postinc1,f,c
 15030                           
 15031                           ;eadog.c: 195: void eaDogM_WriteStringAtPos(const uint8_t r, const uint8_t c, char *strP
      +                          tr);eadog.c: 196: {;eadog.c: 197:  uint8_t row;;eadog.c: 199:  switch (r) {
 15032                           
 15033                           ;incstack = 0
 15034  01BD5E  D014               	goto	l14208
 15035  01BD60                     l14196:
 15036                           
 15037                           ;eadog.c: 201:   row = 0x40;
 15038                           ;stkvar	_row @ sp[(-1)+0]
 15039  01BD60  0EFF               	movlw	-1
 15040  01BD62  6AE3               	clrf	plusw1,c
 15041  01BD64  8CE3               	bsf	plusw1,6,c
 15042                           
 15043                           ;eadog.c: 202:   break;
 15044  01BD66  D026               	goto	l14210
 15045  01BD68                     l14198:
 15046                           
 15047                           ;eadog.c: 204:   row = 0x14;
 15048                           ;stkvar	_row @ sp[(-1)+0]
 15049  01BD68  0EFF               	movlw	-1
 15050  01BD6A  6AE3               	clrf	plusw1,c
 15051  01BD6C  84E3               	bsf	plusw1,2,c
 15052  01BD6E  88E3               	bsf	plusw1,4,c	;indir
 15053                           
 15054                           ;eadog.c: 205:   break;
 15055  01BD70  D021               	goto	l14210
 15056  01BD72                     l14200:
 15057                           
 15058                           ;eadog.c: 207:   row = 0x54;
 15059  01BD72  0E54               	movlw	84
 15060  01BD74  6E0C               	movwf	(btemp+11)^0,c
 15061                           
 15062                           ;stkvar	_row @ sp[(-1)+0]
 15063  01BD76  0EFF               	movlw	-1
 15064  01BD78  0060  F033  FFE3   	movff	btemp+11,plusw1
 15065                           
 15066                           ;eadog.c: 208:   break;
 15067  01BD7E  D01A               	goto	l14210
 15068  01BD80                     l14202:
 15069                           
 15070                           ;eadog.c: 210:   row = 0x1;
 15071                           ;stkvar	_row @ sp[(-1)+0]
 15072  01BD80  0EFF               	movlw	-1
 15073  01BD82  6AE3               	clrf	plusw1,c
 15074  01BD84  2AE3               	incf	plusw1,f,c
 15075                           
 15076                           ;eadog.c: 211:   break;
 15077  01BD86  D016               	goto	l14210
 15078  01BD88                     l14208:
 15079                           
 15080                           ;stkvar	_r @ sp[(-1)+-1]
 15081  01BD88  0EFE               	movlw	-2
 15082  01BD8A  50E3               	movf	plusw1,w,c
 15083  01BD8C  6E0B               	movwf	(btemp+10)^0,c
 15084  01BD8E  6A0C               	clrf	(btemp+11)^0,c
 15085                           
 15086                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 15087                           ; Switch size 1, requested type "simple"
 15088                           ; Number of cases is 1, Range of values is 0 to 0
 15089                           ; switch strategies available:
 15090                           ; Name         Instructions Cycles
 15091                           ; simple_byte            4     3 (average)
 15092                           ;	Chosen strategy is simple_byte
 15093  01BD90  500C               	movf	(btemp+11)^0,w,c
 15094  01BD92  0A00               	xorlw	0	; case 0
 15095  01BD94  A4D8               	btfss	status,2,c
 15096  01BD96  D7E4               	goto	l14196
 15097                           
 15098                           ; Switch size 1, requested type "simple"
 15099                           ; Number of cases is 4, Range of values is 0 to 3
 15100                           ; switch strategies available:
 15101                           ; Name         Instructions Cycles
 15102                           ; simple_byte           13     7 (average)
 15103                           ;	Chosen strategy is simple_byte
 15104  01BD98  500B               	movf	(btemp+10)^0,w,c
 15105  01BD9A  0A00               	xorlw	0	; case 0
 15106  01BD9C  B4D8               	btfsc	status,2,c
 15107  01BD9E  D7E0               	goto	l14196
 15108  01BDA0  0A01               	xorlw	1	; case 1
 15109  01BDA2  B4D8               	btfsc	status,2,c
 15110  01BDA4  D7E1               	goto	l14198
 15111  01BDA6  0A03               	xorlw	3	; case 2
 15112  01BDA8  B4D8               	btfsc	status,2,c
 15113  01BDAA  D7E3               	goto	l14200
 15114  01BDAC  0A01               	xorlw	1	; case 3
 15115  01BDAE  B4D8               	btfsc	status,2,c
 15116  01BDB0  D7E7               	goto	l14202
 15117  01BDB2  D7D6               	goto	l14196
 15118  01BDB4                     l14210:
 15119                           
 15120                           ;eadog.c: 216:  send_lcd_cmd_dma(0x45);
 15121  01BDB4  0E45               	movlw	69
 15122  01BDB6  6EE6               	movwf	postinc1,c
 15123  01BDB8  EC88  F0EC         	call	_send_lcd_cmd_dma	;wreg free
 15124                           
 15125                           ;eadog.c: 217:  send_lcd_data_dma(row + c);
 15126                           ;stkvar	_c @ sp[(-1)+-2]
 15127  01BDBC  0EFD               	movlw	-3
 15128  01BDBE  006F FF8C  F00C    	movff	plusw1,btemp+11
 15129                           
 15130                           ;stkvar	_row @ sp[(-1)+0]
 15131  01BDC4  0EFF               	movlw	-1
 15132  01BDC6  50E3               	movf	plusw1,w,c
 15133  01BDC8  240C               	addwf	(btemp+11)^0,w,c
 15134  01BDCA  6EE6               	movwf	postinc1,c
 15135  01BDCC  EC95  F0E6         	call	_send_lcd_data_dma	;wreg free
 15136                           
 15137                           ; BSR set to: 59
 15138                           ;eadog.c: 218:  wait_lcd_done();
 15139  01BDD0  EC26  F0EC         	call	_wait_lcd_done	;wreg free
 15140                           
 15141                           ; BSR set to: 0
 15142                           ;eadog.c: 219:  wdtdelay(8);
 15143  01BDD4  0E08               	movlw	8
 15144  01BDD6  6EE6               	movwf	postinc1,c
 15145  01BDD8  0E00               	movlw	0
 15146  01BDDA  6EE6               	movwf	postinc1,c
 15147  01BDDC  0E00               	movlw	0
 15148  01BDDE  6EE6               	movwf	postinc1,c
 15149  01BDE0  0E00               	movlw	0
 15150  01BDE2  6EE6               	movwf	postinc1,c
 15151  01BDE4  EC49  F0E5         	call	_wdtdelay	;wreg free
 15152                           
 15153                           ;eadog.c: 220:  eaDogM_WriteString(strPtr);
 15154                           ;stkvar	_strPtr @ sp[(-1)+-4]
 15155  01BDE8  0EFB               	movlw	-5
 15156  01BDEA  006F FF8F FFE6     	movff	plusw1,postinc1
 15157  01BDF0  006F FF8F FFE6     	movff	plusw1,postinc1
 15158  01BDF6  EC02  F0DF         	call	_eaDogM_WriteString	;wreg free
 15159                           
 15160                           ; BSR set to: 59
 15161                           ; _eaDogM_WriteStringAtPos: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 4, argsize = 4, vargsize = 0
 15162  01BDFA  0EFB               	movlw	251
 15163  01BDFC  26E1               	addwf	fsr1l,f,c
 15164  01BDFE  0EFF               	movlw	255
 15165  01BE00  22E2               	addwfc	fsr1h,f,c
 15166  01BE02  0012               	return		;funcret
 15167  01BE04                     __end_of_eaDogM_WriteStringAtPos:
 15168                           	opt callstack 0
 15169                           
 15170 ;; *************** function _send_lcd_cmd_dma *****************
 15171 ;; Defined at:
 15172 ;;		line 171 in file "eadog.c"
 15173 ;; Parameters:    Size  Location     Type
 15174 ;;  strPtr          1  [STACK] const unsigned char 
 15175 ;; Auto vars:     Size  Location     Type
 15176 ;;		None
 15177 ;; Return value:  Size  Location     Type
 15178 ;;                  1  [STACK] void 
 15179 ;; Registers used:
 15180 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 15181 ;; Tracked objects:
 15182 ;;		On entry : 0/3D
 15183 ;;		On exit  : 3F/0
 15184 ;;		Unchanged: 0/0
 15185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15186 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15187 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15188 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15189 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15190 ;;Total ram usage:        0 bytes
 15191 ;; Hardware stack levels used:    1
 15192 ;; Hardware stack levels required when called:   25
 15193 ;; This function calls:
 15194 ;;		_send_lcd_data_dma
 15195 ;;		_wait_lcd_done
 15196 ;; This function is called by:
 15197 ;;		_eaDogM_WriteStringAtPos
 15198 ;;		_eaDogM_WriteCommand
 15199 ;; This function uses a reentrant model
 15200 ;;
 15201                           
 15202                           	psect	text57
 15203  01D910                     __ptext57:
 15204                           	opt callstack 0
 15205  01D910                     _send_lcd_cmd_dma:
 15206                           	opt callstack 3
 15207                           
 15208                           ;eadog.c: 171: void send_lcd_cmd_dma(const uint8_t strPtr);eadog.c: 172: {;eadog.c: 173:
      +                            send_lcd_data_dma(0xFE);
 15209                           
 15210                           ; BSR set to: 59
 15211                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15212                           ;incstack = 0
 15213  01D910  0EFE               	movlw	254
 15214  01D912  6EE6               	movwf	postinc1,c
 15215  01D914  EC95  F0E6         	call	_send_lcd_data_dma	;wreg free
 15216                           
 15217                           ; BSR set to: 59
 15218                           ;eadog.c: 174:  wait_lcd_done();
 15219  01D918  EC26  F0EC         	call	_wait_lcd_done	;wreg free
 15220                           
 15221                           ; BSR set to: 0
 15222                           ;eadog.c: 175:  send_lcd_data_dma(strPtr);
 15223                           ;stkvar	_strPtr @ sp[(0)+-1]
 15224  01D91C  0EFF               	movlw	-1
 15225  01D91E  50E3               	movf	plusw1,w,c
 15226  01D920  6EE6               	movwf	postinc1,c
 15227  01D922  EC95  F0E6         	call	_send_lcd_data_dma	;wreg free
 15228                           
 15229                           ;eadog.c: 176:  wait_lcd_done();
 15230  01D926  EC26  F0EC         	call	_wait_lcd_done	;wreg free
 15231                           
 15232                           ; BSR set to: 0
 15233                           ; _send_lcd_cmd_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 15234  01D92A  52E5               	movf	postdec1,f,c
 15235  01D92C  0012               	return		;funcret
 15236  01D92E                     __end_of_send_lcd_cmd_dma:
 15237                           	opt callstack 0
 15238                           
 15239 ;; *************** function _wait_lcd_done *****************
 15240 ;; Defined at:
 15241 ;;		line 444 in file "eadog.c"
 15242 ;; Parameters:    Size  Location     Type
 15243 ;;		None
 15244 ;; Auto vars:     Size  Location     Type
 15245 ;;		None
 15246 ;; Return value:  Size  Location     Type
 15247 ;;                  1  [STACK] void 
 15248 ;; Registers used:
 15249 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
 15250 ;; Tracked objects:
 15251 ;;		On entry : 0/2
 15252 ;;		On exit  : 3F/0
 15253 ;;		Unchanged: 0/0
 15254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15255 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15256 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15257 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15258 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15259 ;;Total ram usage:        0 bytes
 15260 ;; Hardware stack levels used:    1
 15261 ;; Hardware stack levels required when called:   16
 15262 ;; This function calls:
 15263 ;;		_wdtdelay
 15264 ;; This function is called by:
 15265 ;;		_main
 15266 ;;		_send_lcd_cmd_dma
 15267 ;;		_eaDogM_WriteStringAtPos
 15268 ;;		_update_lcd
 15269 ;;		_vterm_dump
 15270 ;; This function uses a reentrant model
 15271 ;;
 15272                           
 15273                           	psect	text58
 15274  01D84C                     __ptext58:
 15275                           	opt callstack 0
 15276  01D84C                     _wait_lcd_done:
 15277                           	opt callstack 14
 15278                           
 15279                           ;eadog.c: 446:  while (spi_link.LCD_DATA);
 15280                           
 15281                           ; BSR set to: 0
 15282                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15283                           ;incstack = 0
 15284  01D84C  0100               	movlb	0	; () banked
 15285  01D84E  B760               	btfsc	_spi_link& (0+255),3,b	;volatile
 15286  01D850  D7FD               	goto	_wait_lcd_done
 15287  01D852                     u9310:
 15288  01D852  013D               	movlb	61	; () banked
 15289  01D854  AB17               	btfss	23,5,b	;volatile
 15290  01D856  D7FD               	goto	u9310
 15291                           
 15292                           ; BSR set to: 61
 15293                           ;eadog.c: 448:  wdtdelay(50);
 15294  01D858  0E32               	movlw	50
 15295  01D85A  6EE6               	movwf	postinc1,c
 15296  01D85C  0E00               	movlw	0
 15297  01D85E  6EE6               	movwf	postinc1,c
 15298  01D860  0E00               	movlw	0
 15299  01D862  6EE6               	movwf	postinc1,c
 15300  01D864  0E00               	movlw	0
 15301  01D866  6EE6               	movwf	postinc1,c
 15302  01D868  EC49  F0E5         	call	_wdtdelay	;wreg free
 15303                           
 15304                           ; BSR set to: 0
 15305                           ; _wait_lcd_done: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
 15306  01D86C  0012               	return		;funcret
 15307  01D86E                     __end_of_wait_lcd_done:
 15308                           	opt callstack 0
 15309                           
 15310 ;; *************** function _wdtdelay *****************
 15311 ;; Defined at:
 15312 ;;		line 23 in file "eadog.c"
 15313 ;; Parameters:    Size  Location     Type
 15314 ;;  delay           4  [STACK] const unsigned long 
 15315 ;; Auto vars:     Size  Location     Type
 15316 ;;		None
 15317 ;; Return value:  Size  Location     Type
 15318 ;;                  1  [STACK] void 
 15319 ;; Registers used:
 15320 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
 15321 ;; Tracked objects:
 15322 ;;		On entry : 2/3D
 15323 ;;		On exit  : 3F/0
 15324 ;;		Unchanged: 0/0
 15325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15326 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15327 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15328 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15329 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15330 ;;Total ram usage:        0 bytes
 15331 ;; Hardware stack levels used:    1
 15332 ;; Hardware stack levels required when called:   15
 15333 ;; This function calls:
 15334 ;;		Nothing
 15335 ;; This function is called by:
 15336 ;;		_init_display
 15337 ;;		_send_lcd_data
 15338 ;;		_send_lcd_cmd
 15339 ;;		_send_lcd_cmd_long
 15340 ;;		_eaDogM_WriteStringAtPos
 15341 ;;		_wait_lcd_done
 15342 ;; This function uses a reentrant model
 15343 ;;
 15344                           
 15345                           	psect	text59
 15346  01CA92                     __ptext59:
 15347                           	opt callstack 0
 15348  01CA92                     _wdtdelay:
 15349                           	opt callstack 14
 15350                           
 15351                           ;eadog.c: 23: void wdtdelay(const uint32_t delay);eadog.c: 24: {;eadog.c: 25:  static ui
      +                          nt32_t dcount;;eadog.c: 27:  for (dcount = 0; dcount <= delay; dcount++) {
 15352                           
 15353                           ; BSR set to: 0
 15354                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15355                           ;incstack = 0
 15356  01CA92  0100               	movlb	0	; () banked
 15357  01CA94  6B9A               	clrf	wdtdelay@dcount& (0+255),b
 15358  01CA96  6B9B               	clrf	(wdtdelay@dcount+1)& (0+255),b
 15359  01CA98  6B9C               	clrf	(wdtdelay@dcount+2)& (0+255),b
 15360  01CA9A  6B9D               	clrf	(wdtdelay@dcount+3)& (0+255),b
 15361  01CA9C                     l1598:
 15362                           
 15363                           ; BSR set to: 0
 15364                           ;eadog.c: 28:   __nop();
 15365  01CA9C  F000               	nop	
 15366  01CA9E  0004               	clrwdt		;# 
 15367                           
 15368                           ;eadog.c: 30:  };
 15369  01CAA0  0E01               	movlw	1
 15370  01CAA2  0100               	movlb	0	; () banked
 15371  01CAA4  279A               	addwf	wdtdelay@dcount& (0+255),f,b
 15372  01CAA6  0E00               	movlw	0
 15373  01CAA8  239B               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
 15374  01CAAA  239C               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
 15375  01CAAC  239D               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
 15376                           
 15377                           ; BSR set to: 0
 15378                           ;stkvar	_delay @ sp[(0)+-4]
 15379  01CAAE  0EFC               	movlw	-4
 15380  01CAB0  006F FF8C  F001    	movff	plusw1,btemp
 15381  01CAB6  519A               	movf	wdtdelay@dcount& (0+255),w,b
 15382  01CAB8  5C01               	subwf	btemp^0,w,c
 15383  01CABA  0EFD               	movlw	-3
 15384  01CABC  006F FF8C  F001    	movff	plusw1,btemp
 15385  01CAC2  519B               	movf	(wdtdelay@dcount+1)& (0+255),w,b
 15386  01CAC4  5801               	subwfb	btemp^0,w,c
 15387  01CAC6  0EFE               	movlw	-2
 15388  01CAC8  006F FF8C  F001    	movff	plusw1,btemp
 15389  01CACE  519C               	movf	(wdtdelay@dcount+2)& (0+255),w,b
 15390  01CAD0  5801               	subwfb	btemp^0,w,c
 15391  01CAD2  0EFF               	movlw	-1
 15392  01CAD4  006F FF8C  F001    	movff	plusw1,btemp
 15393  01CADA  519D               	movf	(wdtdelay@dcount+3)& (0+255),w,b
 15394  01CADC  5801               	subwfb	btemp^0,w,c
 15395  01CADE  B0D8               	btfsc	status,0,c
 15396  01CAE0  D7DD               	goto	l1598
 15397                           
 15398                           ; BSR set to: 0
 15399                           ; _wdtdelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
 15400  01CAE2  52E5               	movf	postdec1,f,c
 15401  01CAE4  52E5               	movf	postdec1,f,c
 15402  01CAE6  52E5               	movf	postdec1,f,c
 15403  01CAE8  52E5               	movf	postdec1,f,c
 15404  01CAEA  0012               	return		;funcret
 15405  01CAEC                     __end_of_wdtdelay:
 15406                           	opt callstack 0
 15407                           
 15408 ;; *************** function _send_lcd_data_dma *****************
 15409 ;; Defined at:
 15410 ;;		line 182 in file "eadog.c"
 15411 ;; Parameters:    Size  Location     Type
 15412 ;;  strPtr          1  [STACK] const unsigned char 
 15413 ;; Auto vars:     Size  Location     Type
 15414 ;;		None
 15415 ;; Return value:  Size  Location     Type
 15416 ;;                  1  [STACK] void 
 15417 ;; Registers used:
 15418 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 15419 ;; Tracked objects:
 15420 ;;		On entry : 0/0
 15421 ;;		On exit  : 3F/3B
 15422 ;;		Unchanged: 0/0
 15423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15424 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15425 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15426 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15427 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15428 ;;Total ram usage:        0 bytes
 15429 ;; Hardware stack levels used:    1
 15430 ;; Hardware stack levels required when called:   24
 15431 ;; This function calls:
 15432 ;;		_printf
 15433 ;;		_ringBufS_flush
 15434 ;;		_start_lcd
 15435 ;;		_wait_lcd_set
 15436 ;; This function is called by:
 15437 ;;		_send_lcd_cmd_dma
 15438 ;;		_eaDogM_WriteStringAtPos
 15439 ;; This function uses a reentrant model
 15440 ;;
 15441                           
 15442                           	psect	text60
 15443  01CD2A                     __ptext60:
 15444                           	opt callstack 0
 15445  01CD2A                     _send_lcd_data_dma:
 15446                           	opt callstack 4
 15447                           
 15448                           ;eadog.c: 182: void send_lcd_data_dma(const uint8_t strPtr);eadog.c: 183: {;eadog.c: 184
      +                          :  wait_lcd_set();
 15449                           
 15450                           ; BSR set to: 0
 15451                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15452                           ;incstack = 0
 15453  01CD2A  ECBC  F0ED         	call	_wait_lcd_set	;wreg free
 15454                           
 15455                           ; BSR set to: 0
 15456                           ;eadog.c: 186:  ringBufS_flush(spi_link.tx1a, 0);
 15457  01CD2E  0E00               	movlw	0
 15458  01CD30  6EE6               	movwf	postinc1,c
 15459  01CD32  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
 15460  01CD38  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
 15461  01CD3E  EC86  F0E0         	call	_ringBufS_flush	;wreg free
 15462  01CD42  94BC               	bcf	188,2,c	;volatile
 15463                           
 15464                           ;eadog.c: 188:  DMA1CON0bits.EN = 0;
 15465  01CD44  013B               	movlb	59	; () banked
 15466  01CD46  9FFC               	bcf	252,7,b	;volatile
 15467                           
 15468                           ; BSR set to: 59
 15469                           ;eadog.c: 189:  DMA1SSZ = 1;
 15470  01CD48  0E00               	movlw	0
 15471  01CD4A  6FF8               	movwf	248,b	;volatile
 15472  01CD4C  0E01               	movlw	1
 15473  01CD4E  6FF7               	movwf	247,b	;volatile
 15474                           
 15475                           ; BSR set to: 59
 15476                           ;eadog.c: 190:  DMA1CON0bits.EN = 1;
 15477  01CD50  8FFC               	bsf	252,7,b	;volatile
 15478                           
 15479                           ; BSR set to: 59
 15480                           ;eadog.c: 191:  printf("%c", strPtr);
 15481                           ;stkvar	_strPtr @ sp[(0)+-1]
 15482  01CD52  0EFF               	movlw	-1
 15483  01CD54  50E3               	movf	plusw1,w,c
 15484  01CD56  6EE6               	movwf	postinc1,c
 15485  01CD58  0E00               	movlw	0
 15486  01CD5A  6EE6               	movwf	postinc1,c
 15487  01CD5C  0EF9               	movlw	low STR_73
 15488  01CD5E  6EE6               	movwf	postinc1,c
 15489  01CD60  0EFF               	movlw	high STR_73
 15490  01CD62  6EE6               	movwf	postinc1,c
 15491  01CD64  0E04               	movlw	4
 15492  01CD66  6EE6               	movwf	postinc1,c
 15493  01CD68  EC5C  F0E4         	call	_printf	;wreg free
 15494                           
 15495                           ; BSR set to: 0
 15496                           ;eadog.c: 192:  start_lcd();
 15497  01CD6C  ECBF  F0ED         	call	_start_lcd	;wreg free
 15498                           
 15499                           ; BSR set to: 59
 15500                           ; _send_lcd_data_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
 15501  01CD70  52E5               	movf	postdec1,f,c
 15502  01CD72  0012               	return		;funcret
 15503  01CD74                     __end_of_send_lcd_data_dma:
 15504                           	opt callstack 0
 15505                           
 15506 ;; *************** function _eaDogM_WriteString *****************
 15507 ;; Defined at:
 15508 ;;		line 151 in file "eadog.c"
 15509 ;; Parameters:    Size  Location     Type
 15510 ;;  strPtr          2  [STACK] PTR unsigned char 
 15511 ;;		 -> D.lcd(480), D(482), V(192), 
 15512 ;; Auto vars:     Size  Location     Type
 15513 ;;		None
 15514 ;; Return value:  Size  Location     Type
 15515 ;;                  1  [STACK] void 
 15516 ;; Registers used:
 15517 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 15518 ;; Tracked objects:
 15519 ;;		On entry : 3F/0
 15520 ;;		On exit  : 3F/3B
 15521 ;;		Unchanged: 0/0
 15522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15523 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15524 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15525 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15526 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15527 ;;Total ram usage:        0 bytes
 15528 ;; Hardware stack levels used:    1
 15529 ;; Hardware stack levels required when called:   24
 15530 ;; This function calls:
 15531 ;;		_printf
 15532 ;;		_ringBufS_flush
 15533 ;;		_start_lcd
 15534 ;;		_strlen
 15535 ;;		_wait_lcd_set
 15536 ;; This function is called by:
 15537 ;;		_eaDogM_WriteStringAtPos
 15538 ;; This function uses a reentrant model
 15539 ;;
 15540                           
 15541                           	psect	text61
 15542  01BE04                     __ptext61:
 15543                           	opt callstack 0
 15544  01BE04                     _eaDogM_WriteString:
 15545                           	opt callstack 4
 15546                           
 15547                           ;eadog.c: 151: void eaDogM_WriteString(char *strPtr);eadog.c: 152: {;eadog.c: 153:  wait
      +                          _lcd_set();
 15548                           
 15549                           ; BSR set to: 59
 15550                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15551                           ;incstack = 0
 15552  01BE04  ECBC  F0ED         	call	_wait_lcd_set	;wreg free
 15553                           
 15554                           ; BSR set to: 0
 15555                           ;eadog.c: 155:  ringBufS_flush(spi_link.tx1a, 0);
 15556  01BE08  0E00               	movlw	0
 15557  01BE0A  6EE6               	movwf	postinc1,c
 15558  01BE0C  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
 15559  01BE12  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
 15560  01BE18  EC86  F0E0         	call	_ringBufS_flush	;wreg free
 15561  01BE1C  94BC               	bcf	188,2,c	;volatile
 15562                           
 15563                           ;eadog.c: 157:  if (strlen(strPtr) > 64) strPtr[64] = 0;
 15564                           ;stkvar	_strPtr @ sp[(0)+-2]
 15565  01BE1E  0EFE               	movlw	-2
 15566  01BE20  006F FF8F FFE6     	movff	plusw1,postinc1
 15567  01BE26  006F FF8F FFE6     	movff	plusw1,postinc1
 15568  01BE2C  EC55  F0DF         	call	_strlen	;wreg free
 15569  01BE30  5002               	movf	(btemp+1)^0,w,c
 15570  01BE32  E104               	bnz	u13580
 15571  01BE34  0E41               	movlw	65
 15572  01BE36  5C01               	subwf	btemp^0,w,c
 15573  01BE38  A0D8               	btfss	status,0,c
 15574  01BE3A  D010               	goto	l14152
 15575  01BE3C                     u13580:
 15576                           
 15577                           ;stkvar	_strPtr @ sp[(0)+-2]
 15578  01BE3C  0EFE               	movlw	-2
 15579  01BE3E  006F FF8C  F00B    	movff	plusw1,btemp+10
 15580  01BE44  0EFF               	movlw	-1
 15581  01BE46  006F FF8C  F00C    	movff	plusw1,btemp+11
 15582  01BE4C  0E40               	movlw	64
 15583  01BE4E  240B               	addwf	(btemp+10)^0,w,c
 15584  01BE50  6ED9               	movwf	fsr2l,c
 15585  01BE52  0E00               	movlw	0
 15586  01BE54  200C               	addwfc	(btemp+11)^0,w,c
 15587  01BE56  6EDA               	movwf	fsr2h,c
 15588  01BE58  0E00               	movlw	0
 15589  01BE5A  6EDF               	movwf	indf2,c
 15590  01BE5C                     l14152:
 15591                           
 15592                           ;eadog.c: 158:  DMA1CON0bits.EN = 0;
 15593  01BE5C  013B               	movlb	59	; () banked
 15594  01BE5E  9FFC               	bcf	252,7,b	;volatile
 15595                           
 15596                           ; BSR set to: 59
 15597                           ;eadog.c: 159:  DMA1SSZ = strlen(strPtr);
 15598                           ;stkvar	_strPtr @ sp[(0)+-2]
 15599  01BE60  0EFE               	movlw	-2
 15600  01BE62  006F FF8F FFE6     	movff	plusw1,postinc1
 15601  01BE68  006F FF8F FFE6     	movff	plusw1,postinc1
 15602  01BE6E  EC55  F0DF         	call	_strlen	;wreg free
 15603  01BE72  0060  F007  FBF7   	movff	btemp,15351	;volatile
 15604  01BE78  0060  F00B  FBF8   	movff	btemp+1,15352	;volatile
 15605                           
 15606                           ;eadog.c: 160:  DMA1CON0bits.EN = 1;
 15607  01BE7E  013B               	movlb	59	; () banked
 15608  01BE80  8FFC               	bsf	252,7,b	;volatile
 15609                           
 15610                           ; BSR set to: 59
 15611                           ;eadog.c: 161:  printf("%s", strPtr);
 15612                           ;stkvar	_strPtr @ sp[(0)+-2]
 15613  01BE82  0EFE               	movlw	-2
 15614  01BE84  006F FF8F FFE6     	movff	plusw1,postinc1
 15615  01BE8A  006F FF8F FFE6     	movff	plusw1,postinc1
 15616  01BE90  0EFC               	movlw	low STR_72
 15617  01BE92  6EE6               	movwf	postinc1,c
 15618  01BE94  0EFF               	movlw	high STR_72
 15619  01BE96  6EE6               	movwf	postinc1,c
 15620  01BE98  0E04               	movlw	4
 15621  01BE9A  6EE6               	movwf	postinc1,c
 15622  01BE9C  EC5C  F0E4         	call	_printf	;wreg free
 15623                           
 15624                           ; BSR set to: 0
 15625                           ;eadog.c: 162:  start_lcd();
 15626  01BEA0  ECBF  F0ED         	call	_start_lcd	;wreg free
 15627                           
 15628                           ; BSR set to: 59
 15629                           ; _eaDogM_WriteString: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 15630  01BEA4  52E5               	movf	postdec1,f,c
 15631  01BEA6  52E5               	movf	postdec1,f,c
 15632  01BEA8  0012               	return		;funcret
 15633  01BEAA                     __end_of_eaDogM_WriteString:
 15634                           	opt callstack 0
 15635                           
 15636 ;; *************** function _wait_lcd_set *****************
 15637 ;; Defined at:
 15638 ;;		line 434 in file "eadog.c"
 15639 ;; Parameters:    Size  Location     Type
 15640 ;;		None
 15641 ;; Auto vars:     Size  Location     Type
 15642 ;;		None
 15643 ;; Return value:  Size  Location     Type
 15644 ;;                  1  [STACK] void 
 15645 ;; Registers used:
 15646 ;;		None
 15647 ;; Tracked objects:
 15648 ;;		On entry : 0/0
 15649 ;;		On exit  : 3F/0
 15650 ;;		Unchanged: 0/0
 15651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15652 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15653 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15654 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15655 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15656 ;;Total ram usage:        0 bytes
 15657 ;; Hardware stack levels used:    1
 15658 ;; Hardware stack levels required when called:   15
 15659 ;; This function calls:
 15660 ;;		Nothing
 15661 ;; This function is called by:
 15662 ;;		_eaDogM_WriteString
 15663 ;;		_send_lcd_data_dma
 15664 ;; This function uses a reentrant model
 15665 ;;
 15666                           
 15667                           	psect	text62
 15668  01DB78                     __ptext62:
 15669                           	opt callstack 0
 15670  01DB78                     _wait_lcd_set:
 15671                           	opt callstack 12
 15672                           
 15673                           ;eadog.c: 436:  spi_link.LCD_DATA = 1;
 15674                           
 15675                           ; BSR set to: 59
 15676                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15677                           ;incstack = 0
 15678  01DB78  0100               	movlb	0	; () banked
 15679  01DB7A  8760               	bsf	_spi_link& (0+255),3,b	;volatile
 15680                           
 15681                           ; BSR set to: 0
 15682                           ; _wait_lcd_set: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 15683  01DB7C  0012               	return		;funcret
 15684  01DB7E                     __end_of_wait_lcd_set:
 15685                           	opt callstack 0
 15686                           
 15687 ;; *************** function _start_lcd *****************
 15688 ;; Defined at:
 15689 ;;		line 429 in file "eadog.c"
 15690 ;; Parameters:    Size  Location     Type
 15691 ;;		None
 15692 ;; Auto vars:     Size  Location     Type
 15693 ;;		None
 15694 ;; Return value:  Size  Location     Type
 15695 ;;                  1  [STACK] void 
 15696 ;; Registers used:
 15697 ;;		None
 15698 ;; Tracked objects:
 15699 ;;		On entry : 3F/0
 15700 ;;		On exit  : 3F/3B
 15701 ;;		Unchanged: 0/0
 15702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15703 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15704 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15705 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15706 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15707 ;;Total ram usage:        0 bytes
 15708 ;; Hardware stack levels used:    1
 15709 ;; Hardware stack levels required when called:   15
 15710 ;; This function calls:
 15711 ;;		Nothing
 15712 ;; This function is called by:
 15713 ;;		_eaDogM_WriteString
 15714 ;;		_send_lcd_data_dma
 15715 ;; This function uses a reentrant model
 15716 ;;
 15717                           
 15718                           	psect	text63
 15719  01DB7E                     __ptext63:
 15720                           	opt callstack 0
 15721  01DB7E                     _start_lcd:
 15722                           	opt callstack 12
 15723                           
 15724                           ;eadog.c: 431:  DMA1CON0bits.DMA1SIRQEN = 1;
 15725                           
 15726                           ; BSR set to: 0
 15727                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15728                           ;incstack = 0
 15729  01DB7E  013B               	movlb	59	; () banked
 15730  01DB80  8DFC               	bsf	252,6,b	;volatile
 15731                           
 15732                           ; BSR set to: 59
 15733                           ; _start_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 15734  01DB82  0012               	return		;funcret
 15735  01DB84                     __end_of_start_lcd:
 15736                           	opt callstack 0
 15737                           
 15738 ;; *************** function _ringBufS_flush *****************
 15739 ;; Defined at:
 15740 ;;		line 76 in file "ringbufs.c"
 15741 ;; Parameters:    Size  Location     Type
 15742 ;;  _this           2  [STACK] PTR struct ringBufS_t
 15743 ;;		 -> ring_buf1(67), 
 15744 ;;  clearBuffer     1  [STACK] const char 
 15745 ;; Auto vars:     Size  Location     Type
 15746 ;;		None
 15747 ;; Return value:  Size  Location     Type
 15748 ;;                  1  [STACK] void 
 15749 ;; Registers used:
 15750 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
 15751 ;; Tracked objects:
 15752 ;;		On entry : 3F/0
 15753 ;;		On exit  : 0/0
 15754 ;;		Unchanged: 0/0
 15755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15756 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15757 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15759 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15760 ;;Total ram usage:        0 bytes
 15761 ;; Hardware stack levels used:    1
 15762 ;; Hardware stack levels required when called:   16
 15763 ;; This function calls:
 15764 ;;		_memset
 15765 ;; This function is called by:
 15766 ;;		_eaDogM_WriteString
 15767 ;;		_send_lcd_data_dma
 15768 ;; This function uses a reentrant model
 15769 ;;
 15770                           
 15771                           	psect	text64
 15772  01C10C                     __ptext64:
 15773                           	opt callstack 0
 15774  01C10C                     _ringBufS_flush:
 15775                           	opt callstack 11
 15776                           
 15777                           ;ringbufs.c: 76: void ringBufS_flush(ringBufS_t *_this, const int8_t clearBuffer);ringbu
      +                          fs.c: 77: {;ringbufs.c: 78:  _this->count = 0;
 15778                           ;stkvar	__this @ sp[(0)+-2]
 15779                           
 15780                           ; BSR set to: 59
 15781                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15782                           ;incstack = 0
 15783  01C10C  0EFE               	movlw	-2
 15784  01C10E  006F FF8C  F00B    	movff	plusw1,btemp+10
 15785  01C114  0EFF               	movlw	-1
 15786  01C116  006F FF8C  F00C    	movff	plusw1,btemp+11
 15787  01C11C  0E42               	movlw	66
 15788  01C11E  240B               	addwf	(btemp+10)^0,w,c
 15789  01C120  6ED9               	movwf	fsr2l,c
 15790  01C122  0E00               	movlw	0
 15791  01C124  200C               	addwfc	(btemp+11)^0,w,c
 15792  01C126  6EDA               	movwf	fsr2h,c
 15793  01C128  0E00               	movlw	0
 15794  01C12A  6EDF               	movwf	indf2,c
 15795                           
 15796                           ;ringbufs.c: 79:  _this->head = 0;
 15797                           ;stkvar	__this @ sp[(0)+-2]
 15798  01C12C  0EFE               	movlw	-2
 15799  01C12E  006F FF8C  F00B    	movff	plusw1,btemp+10
 15800  01C134  0EFF               	movlw	-1
 15801  01C136  006F FF8C  F00C    	movff	plusw1,btemp+11
 15802  01C13C  0E40               	movlw	64
 15803  01C13E  240B               	addwf	(btemp+10)^0,w,c
 15804  01C140  6ED9               	movwf	fsr2l,c
 15805  01C142  0E00               	movlw	0
 15806  01C144  200C               	addwfc	(btemp+11)^0,w,c
 15807  01C146  6EDA               	movwf	fsr2h,c
 15808  01C148  0E00               	movlw	0
 15809  01C14A  6EDF               	movwf	indf2,c
 15810                           
 15811                           ;ringbufs.c: 80:  _this->tail = 0;
 15812                           ;stkvar	__this @ sp[(0)+-2]
 15813  01C14C  0EFE               	movlw	-2
 15814  01C14E  006F FF8C  F00B    	movff	plusw1,btemp+10
 15815  01C154  0EFF               	movlw	-1
 15816  01C156  006F FF8C  F00C    	movff	plusw1,btemp+11
 15817  01C15C  0E41               	movlw	65
 15818  01C15E  240B               	addwf	(btemp+10)^0,w,c
 15819  01C160  6ED9               	movwf	fsr2l,c
 15820  01C162  0E00               	movlw	0
 15821  01C164  200C               	addwfc	(btemp+11)^0,w,c
 15822  01C166  6EDA               	movwf	fsr2h,c
 15823  01C168  0E00               	movlw	0
 15824  01C16A  6EDF               	movwf	indf2,c
 15825                           
 15826                           ;ringbufs.c: 81:  if (clearBuffer) {
 15827                           ;stkvar	_clearBuffer @ sp[(0)+-3]
 15828  01C16C  0EFD               	movlw	-3
 15829  01C16E  50E3               	movf	plusw1,w,c
 15830  01C170  B4D8               	btfsc	status,2,c
 15831  01C172  D011               	goto	l1730
 15832                           
 15833                           ;ringbufs.c: 82:   memset(_this->buf, 0, sizeof(_this->buf));
 15834  01C174  0E40               	movlw	64
 15835  01C176  6EE6               	movwf	postinc1,c
 15836  01C178  0E00               	movlw	0
 15837  01C17A  6EE6               	movwf	postinc1,c
 15838  01C17C  0E00               	movlw	0
 15839  01C17E  6EE6               	movwf	postinc1,c
 15840  01C180  0E00               	movlw	0
 15841  01C182  6EE6               	movwf	postinc1,c
 15842                           
 15843                           ;stkvar	__this @ sp[(-4)+-2]
 15844  01C184  0EFA               	movlw	-6
 15845  01C186  006F FF8F FFE6     	movff	plusw1,postinc1
 15846  01C18C  006F FF8F FFE6     	movff	plusw1,postinc1
 15847  01C192  EC8F  F0BD         	call	_memset	;wreg free
 15848  01C196                     l1730:
 15849                           
 15850                           ; _ringBufS_flush: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3
      +                          , argsize = 3, vargsize = 0
 15851  01C196  52E5               	movf	postdec1,f,c
 15852  01C198  52E5               	movf	postdec1,f,c
 15853  01C19A  52E5               	movf	postdec1,f,c
 15854  01C19C  0012               	return		;funcret
 15855  01C19E                     __end_of_ringBufS_flush:
 15856                           	opt callstack 0
 15857                           
 15858 ;; *************** function _memset *****************
 15859 ;; Defined at:
 15860 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/memset.c"
 15861 ;; Parameters:    Size  Location     Type
 15862 ;;  dest            2  [STACK] PTR void 
 15863 ;;		 -> ring_buf2(67), ring_buf1(67), 
 15864 ;;  c               2  [STACK] int 
 15865 ;;  n               2  [STACK] unsigned int 
 15866 ;; Auto vars:     Size  Location     Type
 15867 ;;  s               2  [STACK] PTR unsigned char 
 15868 ;;		 -> ring_buf2(67), ring_buf1(67), 
 15869 ;;  k               2  [STACK] unsigned int 
 15870 ;; Return value:  Size  Location     Type
 15871 ;;                  2  [STACK] PTR void 
 15872 ;; Registers used:
 15873 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
 15874 ;; Tracked objects:
 15875 ;;		On entry : 0/0
 15876 ;;		On exit  : 0/0
 15877 ;;		Unchanged: 0/0
 15878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15879 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15880 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15881 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15882 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15883 ;;Total ram usage:        0 bytes
 15884 ;; Hardware stack levels used:    1
 15885 ;; Hardware stack levels required when called:   15
 15886 ;; This function calls:
 15887 ;;		Nothing
 15888 ;; This function is called by:
 15889 ;;		_ringBufS_init
 15890 ;;		_ringBufS_flush
 15891 ;; This function uses a reentrant model
 15892 ;;
 15893                           
 15894                           	psect	text65
 15895  017B1E                     __ptext65:
 15896                           	opt callstack 0
 15897  017B1E                     _memset:
 15898                           	opt callstack 0
 15899                           
 15900                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15901  017B1E  52E6               	movf	postinc1,f,c
 15902  017B20  52E6               	movf	postinc1,f,c
 15903  017B22  52E6               	movf	postinc1,f,c
 15904  017B24  52E6               	movf	postinc1,f,c
 15905                           
 15906                           ;stkvar	_dest @ sp[(-4)+-2]
 15907                           
 15908                           ;incstack = 0
 15909  017B26  0EFA               	movlw	-6
 15910  017B28  006F FF8C  F00B    	movff	plusw1,btemp+10
 15911  017B2E  0EFB               	movlw	-5
 15912  017B30  006F FF8C  F00C    	movff	plusw1,btemp+11
 15913                           
 15914                           ;stkvar	_s @ sp[(-4)+0]
 15915  017B36  0EFD               	movlw	-3
 15916  017B38  0060  F033  FFE3   	movff	btemp+11,plusw1
 15917  017B3E  0EFC               	movlw	-4
 15918  017B40  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15919                           
 15920                           ;stkvar	_n @ sp[(-4)+-6]
 15921  017B46  0EF6               	movlw	-10
 15922  017B48  006F FF8C  F001    	movff	plusw1,btemp
 15923  017B4E  0EF7               	movlw	-9
 15924  017B50  50E3               	movf	plusw1,w,c
 15925  017B52  1001               	iorwf	btemp^0,w,c
 15926  017B54  B4D8               	btfsc	status,2,c
 15927  017B56  D154               	goto	u12130
 15928                           
 15929                           ;stkvar	_c @ sp[(-4)+-4]
 15930                           ;stkvar	_s @ sp[(-4)+0]
 15931  017B58  0EFC               	movlw	-4
 15932  017B5A  006F FF8F FFD9     	movff	plusw1,fsr2l
 15933  017B60  0EFD               	movlw	-3
 15934  017B62  006F FF8F FFDA     	movff	plusw1,fsr2h
 15935  017B68  0EF8               	movlw	-8
 15936  017B6A  006F FF8F FFDF     	movff	plusw1,indf2
 15937                           
 15938                           ;stkvar	_c @ sp[(-4)+-4]
 15939                           ;stkvar	_n @ sp[(-4)+-6]
 15940                           ;stkvar	_s @ sp[(-4)+0]
 15941  017B70  0EFC               	movlw	-4
 15942  017B72  006F FF8C  F00B    	movff	plusw1,btemp+10
 15943  017B78  0EFD               	movlw	-3
 15944  017B7A  006F FF8C  F00C    	movff	plusw1,btemp+11
 15945  017B80  0EF6               	movlw	-10
 15946  017B82  50E3               	movf	plusw1,w,c
 15947  017B84  260B               	addwf	(btemp+10)^0,f,c
 15948  017B86  0EF7               	movlw	-9
 15949  017B88  50E3               	movf	plusw1,w,c
 15950  017B8A  220C               	addwfc	(btemp+11)^0,f,c
 15951  017B8C  0EFF               	movlw	255
 15952  017B8E  240B               	addwf	(btemp+10)^0,w,c
 15953  017B90  6ED9               	movwf	fsr2l,c
 15954  017B92  0EFF               	movlw	255
 15955  017B94  200C               	addwfc	(btemp+11)^0,w,c
 15956  017B96  6EDA               	movwf	fsr2h,c
 15957  017B98  0EF8               	movlw	-8
 15958  017B9A  006F FF8F FFDF     	movff	plusw1,indf2
 15959                           
 15960                           ;stkvar	_n @ sp[(-4)+-6]
 15961  017BA0  0EF7               	movlw	-9
 15962  017BA2  50E3               	movf	plusw1,w,c
 15963  017BA4  E108               	bnz	l13304
 15964  017BA6  0EF6               	movlw	-10
 15965  017BA8  006F FF8C  F001    	movff	plusw1,btemp
 15966  017BAE  0E03               	movlw	3
 15967  017BB0  5E01               	subwf	btemp^0,f,c
 15968  017BB2  A0D8               	btfss	status,0,c
 15969  017BB4  D125               	goto	u12130
 15970  017BB6                     l13304:
 15971                           
 15972                           ;stkvar	_c @ sp[(-4)+-4]
 15973                           ;stkvar	_s @ sp[(-4)+0]
 15974  017BB6  0EFC               	movlw	-4
 15975  017BB8  006F FF8C  F00B    	movff	plusw1,btemp+10
 15976  017BBE  0EFD               	movlw	-3
 15977  017BC0  006F FF8C  F00C    	movff	plusw1,btemp+11
 15978  017BC6  0E01               	movlw	1
 15979  017BC8  240B               	addwf	(btemp+10)^0,w,c
 15980  017BCA  6ED9               	movwf	fsr2l,c
 15981  017BCC  0E00               	movlw	0
 15982  017BCE  200C               	addwfc	(btemp+11)^0,w,c
 15983  017BD0  6EDA               	movwf	fsr2h,c
 15984  017BD2  0EF8               	movlw	-8
 15985  017BD4  006F FF8F FFDF     	movff	plusw1,indf2
 15986                           
 15987                           ;stkvar	_c @ sp[(-4)+-4]
 15988                           ;stkvar	_s @ sp[(-4)+0]
 15989  017BDA  0EFC               	movlw	-4
 15990  017BDC  006F FF8C  F00B    	movff	plusw1,btemp+10
 15991  017BE2  0EFD               	movlw	-3
 15992  017BE4  006F FF8C  F00C    	movff	plusw1,btemp+11
 15993  017BEA  0E02               	movlw	2
 15994  017BEC  240B               	addwf	(btemp+10)^0,w,c
 15995  017BEE  6ED9               	movwf	fsr2l,c
 15996  017BF0  0E00               	movlw	0
 15997  017BF2  200C               	addwfc	(btemp+11)^0,w,c
 15998  017BF4  6EDA               	movwf	fsr2h,c
 15999  017BF6  0EF8               	movlw	-8
 16000  017BF8  006F FF8F FFDF     	movff	plusw1,indf2
 16001                           
 16002                           ;stkvar	_c @ sp[(-4)+-4]
 16003                           ;stkvar	_n @ sp[(-4)+-6]
 16004                           ;stkvar	_s @ sp[(-4)+0]
 16005  017BFE  0EFC               	movlw	-4
 16006  017C00  006F FF8C  F00B    	movff	plusw1,btemp+10
 16007  017C06  0EFD               	movlw	-3
 16008  017C08  006F FF8C  F00C    	movff	plusw1,btemp+11
 16009  017C0E  0EF6               	movlw	-10
 16010  017C10  50E3               	movf	plusw1,w,c
 16011  017C12  260B               	addwf	(btemp+10)^0,f,c
 16012  017C14  0EF7               	movlw	-9
 16013  017C16  50E3               	movf	plusw1,w,c
 16014  017C18  220C               	addwfc	(btemp+11)^0,f,c
 16015  017C1A  0EFE               	movlw	254
 16016  017C1C  240B               	addwf	(btemp+10)^0,w,c
 16017  017C1E  6ED9               	movwf	fsr2l,c
 16018  017C20  0EFF               	movlw	255
 16019  017C22  200C               	addwfc	(btemp+11)^0,w,c
 16020  017C24  6EDA               	movwf	fsr2h,c
 16021  017C26  0EF8               	movlw	-8
 16022  017C28  006F FF8F FFDF     	movff	plusw1,indf2
 16023                           
 16024                           ;stkvar	_c @ sp[(-4)+-4]
 16025                           ;stkvar	_n @ sp[(-4)+-6]
 16026                           ;stkvar	_s @ sp[(-4)+0]
 16027  017C2E  0EFC               	movlw	-4
 16028  017C30  006F FF8C  F00B    	movff	plusw1,btemp+10
 16029  017C36  0EFD               	movlw	-3
 16030  017C38  006F FF8C  F00C    	movff	plusw1,btemp+11
 16031  017C3E  0EF6               	movlw	-10
 16032  017C40  50E3               	movf	plusw1,w,c
 16033  017C42  260B               	addwf	(btemp+10)^0,f,c
 16034  017C44  0EF7               	movlw	-9
 16035  017C46  50E3               	movf	plusw1,w,c
 16036  017C48  220C               	addwfc	(btemp+11)^0,f,c
 16037  017C4A  0EFD               	movlw	253
 16038  017C4C  240B               	addwf	(btemp+10)^0,w,c
 16039  017C4E  6ED9               	movwf	fsr2l,c
 16040  017C50  0EFF               	movlw	255
 16041  017C52  200C               	addwfc	(btemp+11)^0,w,c
 16042  017C54  6EDA               	movwf	fsr2h,c
 16043  017C56  0EF8               	movlw	-8
 16044  017C58  006F FF8F FFDF     	movff	plusw1,indf2
 16045                           
 16046                           ;stkvar	_n @ sp[(-4)+-6]
 16047  017C5E  0EF7               	movlw	-9
 16048  017C60  50E3               	movf	plusw1,w,c
 16049  017C62  E108               	bnz	l13310
 16050  017C64  0EF6               	movlw	-10
 16051  017C66  006F FF8C  F001    	movff	plusw1,btemp
 16052  017C6C  0E07               	movlw	7
 16053  017C6E  5E01               	subwf	btemp^0,f,c
 16054  017C70  A0D8               	btfss	status,0,c
 16055  017C72  D0C6               	goto	u12130
 16056  017C74                     l13310:
 16057                           
 16058                           ;stkvar	_c @ sp[(-4)+-4]
 16059                           ;stkvar	_s @ sp[(-4)+0]
 16060  017C74  0EFC               	movlw	-4
 16061  017C76  006F FF8C  F00B    	movff	plusw1,btemp+10
 16062  017C7C  0EFD               	movlw	-3
 16063  017C7E  006F FF8C  F00C    	movff	plusw1,btemp+11
 16064  017C84  0E03               	movlw	3
 16065  017C86  240B               	addwf	(btemp+10)^0,w,c
 16066  017C88  6ED9               	movwf	fsr2l,c
 16067  017C8A  0E00               	movlw	0
 16068  017C8C  200C               	addwfc	(btemp+11)^0,w,c
 16069  017C8E  6EDA               	movwf	fsr2h,c
 16070  017C90  0EF8               	movlw	-8
 16071  017C92  006F FF8F FFDF     	movff	plusw1,indf2
 16072                           
 16073                           ;stkvar	_c @ sp[(-4)+-4]
 16074                           ;stkvar	_n @ sp[(-4)+-6]
 16075                           ;stkvar	_s @ sp[(-4)+0]
 16076  017C98  0EFC               	movlw	-4
 16077  017C9A  006F FF8C  F00B    	movff	plusw1,btemp+10
 16078  017CA0  0EFD               	movlw	-3
 16079  017CA2  006F FF8C  F00C    	movff	plusw1,btemp+11
 16080  017CA8  0EF6               	movlw	-10
 16081  017CAA  50E3               	movf	plusw1,w,c
 16082  017CAC  260B               	addwf	(btemp+10)^0,f,c
 16083  017CAE  0EF7               	movlw	-9
 16084  017CB0  50E3               	movf	plusw1,w,c
 16085  017CB2  220C               	addwfc	(btemp+11)^0,f,c
 16086  017CB4  0EFC               	movlw	252
 16087  017CB6  240B               	addwf	(btemp+10)^0,w,c
 16088  017CB8  6ED9               	movwf	fsr2l,c
 16089  017CBA  0EFF               	movlw	255
 16090  017CBC  200C               	addwfc	(btemp+11)^0,w,c
 16091  017CBE  6EDA               	movwf	fsr2h,c
 16092  017CC0  0EF8               	movlw	-8
 16093  017CC2  006F FF8F FFDF     	movff	plusw1,indf2
 16094                           
 16095                           ;stkvar	_n @ sp[(-4)+-6]
 16096  017CC8  0EF7               	movlw	-9
 16097  017CCA  50E3               	movf	plusw1,w,c
 16098  017CCC  E108               	bnz	l13316
 16099  017CCE  0EF6               	movlw	-10
 16100  017CD0  006F FF8C  F001    	movff	plusw1,btemp
 16101  017CD6  0E09               	movlw	9
 16102  017CD8  5E01               	subwf	btemp^0,f,c
 16103  017CDA  A0D8               	btfss	status,0,c
 16104  017CDC  D091               	goto	u12130
 16105  017CDE                     l13316:
 16106                           
 16107                           ;stkvar	_s @ sp[(-4)+0]
 16108  017CDE  0EFC               	movlw	-4
 16109  017CE0  006F FF8C  F00B    	movff	plusw1,btemp+10
 16110  017CE6  1E0B               	comf	(btemp+10)^0,f,c
 16111  017CE8  0EFD               	movlw	-3
 16112  017CEA  006F FF8C  F00C    	movff	plusw1,btemp+11
 16113  017CF0  1E0C               	comf	(btemp+11)^0,f,c
 16114  017CF2  2A0B               	incf	(btemp+10)^0,f,c
 16115  017CF4  B4D8               	btfsc	status,2,c
 16116  017CF6  2A0C               	incf	(btemp+11)^0,f,c
 16117  017CF8  0E03               	movlw	3
 16118  017CFA  160B               	andwf	(btemp+10)^0,f,c
 16119  017CFC  0E00               	movlw	0
 16120  017CFE  160C               	andwf	(btemp+11)^0,f,c
 16121                           
 16122                           ;stkvar	_k @ sp[(-4)+2]
 16123  017D00  0EFE               	movlw	-2
 16124  017D02  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16125  017D08  0EFF               	movlw	-1
 16126  017D0A  0060  F033  FFE3   	movff	btemp+11,plusw1
 16127                           
 16128                           ;stkvar	_k @ sp[(-4)+2]
 16129                           ;stkvar	_s @ sp[(-4)+0]
 16130  017D10  0EFC               	movlw	-4
 16131  017D12  50E3               	movf	plusw1,w,c
 16132  017D14  6E01               	movwf	btemp^0,c
 16133  017D16  0EFE               	movlw	-2
 16134  017D18  50E3               	movf	plusw1,w,c
 16135  017D1A  2601               	addwf	btemp^0,f,c
 16136  017D1C  0EFC               	movlw	-4
 16137  017D1E  0060  F007  FFE3   	movff	btemp,plusw1
 16138  017D24  0EFD               	movlw	-3
 16139  017D26  50E3               	movf	plusw1,w,c
 16140  017D28  6E01               	movwf	btemp^0,c
 16141  017D2A  0EFF               	movlw	-1
 16142  017D2C  50E3               	movf	plusw1,w,c
 16143  017D2E  2201               	addwfc	btemp^0,f,c
 16144  017D30  0EFD               	movlw	-3
 16145  017D32  0060  F007  FFE3   	movff	btemp,plusw1
 16146                           
 16147                           ;stkvar	_k @ sp[(-4)+2]
 16148                           ;stkvar	_n @ sp[(-4)+-6]
 16149  017D38  0EF6               	movlw	-10
 16150  017D3A  50E3               	movf	plusw1,w,c
 16151  017D3C  6E01               	movwf	btemp^0,c
 16152  017D3E  0EFE               	movlw	-2
 16153  017D40  50E3               	movf	plusw1,w,c
 16154  017D42  5E01               	subwf	btemp^0,f,c
 16155  017D44  0EF6               	movlw	-10
 16156  017D46  0060  F007  FFE3   	movff	btemp,plusw1
 16157  017D4C  0EF7               	movlw	-9
 16158  017D4E  50E3               	movf	plusw1,w,c
 16159  017D50  6E01               	movwf	btemp^0,c
 16160  017D52  0EFF               	movlw	-1
 16161  017D54  50E3               	movf	plusw1,w,c
 16162  017D56  5A01               	subwfb	btemp^0,f,c
 16163  017D58  0EF7               	movlw	-9
 16164  017D5A  0060  F007  FFE3   	movff	btemp,plusw1
 16165  017D60  0EFC               	movlw	252
 16166  017D62  6E0B               	movwf	(btemp+10)^0,c
 16167  017D64  0EFF               	movlw	255
 16168  017D66  6E0C               	movwf	(btemp+11)^0,c
 16169                           
 16170                           ;stkvar	_n @ sp[(-4)+-6]
 16171  017D68  0EF6               	movlw	-10
 16172  017D6A  006F FF8C  F001    	movff	plusw1,btemp
 16173  017D70  500B               	movf	(btemp+10)^0,w,c
 16174  017D72  1601               	andwf	btemp^0,f,c
 16175  017D74  0EF6               	movlw	-10
 16176  017D76  0060  F007  FFE3   	movff	btemp,plusw1
 16177  017D7C  0EF7               	movlw	-9
 16178  017D7E  006F FF8C  F001    	movff	plusw1,btemp
 16179  017D84  500C               	movf	(btemp+11)^0,w,c
 16180  017D86  1601               	andwf	btemp^0,f,c
 16181  017D88  0EF7               	movlw	-9
 16182  017D8A  D02E               	goto	L15
 16183  017D8C                     l13324:
 16184                           
 16185                           ;stkvar	_c @ sp[(-4)+-4]
 16186                           ;stkvar	_s @ sp[(-4)+0]
 16187  017D8C  0EFC               	movlw	-4
 16188  017D8E  006F FF8F FFD9     	movff	plusw1,fsr2l
 16189  017D94  0EFD               	movlw	-3
 16190  017D96  006F FF8F FFDA     	movff	plusw1,fsr2h
 16191  017D9C  0EF8               	movlw	-8
 16192  017D9E  006F FF8F FFDF     	movff	plusw1,indf2
 16193                           
 16194                           ;stkvar	_n @ sp[(-4)+-6]
 16195  017DA4  0EF6               	movlw	-10
 16196  017DA6  006F FF8C  F001    	movff	plusw1,btemp
 16197  017DAC  0E01               	movlw	1
 16198  017DAE  5E01               	subwf	btemp^0,f,c
 16199  017DB0  0EF6               	movlw	-10
 16200  017DB2  0060  F007  FFE3   	movff	btemp,plusw1
 16201  017DB8  0EF7               	movlw	-9
 16202  017DBA  006F FF8C  F001    	movff	plusw1,btemp
 16203  017DC0  0E00               	movlw	0
 16204  017DC2  5A01               	subwfb	btemp^0,f,c
 16205  017DC4  0EF7               	movlw	-9
 16206  017DC6  0060  F007  FFE3   	movff	btemp,plusw1
 16207                           
 16208                           ;stkvar	_s @ sp[(-4)+0]
 16209  017DCC  0EFC               	movlw	-4
 16210  017DCE  50E3               	movf	plusw1,w,c
 16211  017DD0  0F01               	addlw	1
 16212  017DD2  6E01               	movwf	btemp^0,c
 16213  017DD4  0EFC               	movlw	-4
 16214  017DD6  0060  F007  FFE3   	movff	btemp,plusw1
 16215  017DDC  6A01               	clrf	btemp^0,c
 16216  017DDE  0EFD               	movlw	-3
 16217  017DE0  50E3               	movf	plusw1,w,c
 16218  017DE2  2001               	addwfc	btemp^0,w,c
 16219  017DE4  6E01               	movwf	btemp^0,c
 16220  017DE6  0EFD               	movlw	-3
 16221  017DE8                     L15:
 16222  017DE8  0060  F007  FFE3   	movff	btemp,plusw1
 16223                           
 16224                           ;stkvar	_n @ sp[(-4)+-6]
 16225  017DEE  0EF6               	movlw	-10
 16226  017DF0  006F FF8C  F001    	movff	plusw1,btemp
 16227  017DF6  0EF7               	movlw	-9
 16228  017DF8  50E3               	movf	plusw1,w,c
 16229  017DFA  1001               	iorwf	btemp^0,w,c
 16230  017DFC  A4D8               	btfss	status,2,c
 16231  017DFE  D7C6               	goto	l13324
 16232  017E00                     u12130:
 16233                           
 16234                           ; _memset: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsiz
      +                          e = 6, vargsize = 0
 16235  017E00  0EF6               	movlw	246
 16236  017E02  26E1               	addwf	fsr1l,f,c
 16237  017E04  0EFF               	movlw	255
 16238  017E06  22E2               	addwfc	fsr1h,f,c
 16239  017E08  0012               	return		;funcret
 16240  017E0A                     __end_of_memset:
 16241                           	opt callstack 0
 16242                           
 16243 ;; *************** function _printf *****************
 16244 ;; Defined at:
 16245 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/printf.c"
 16246 ;; Parameters:    Size  Location     Type
 16247 ;;  fmt             2  [STACK] PTR const unsigned char 
 16248 ;;		 -> STR_73(3), STR_72(3), 
 16249 ;; Auto vars:     Size  Location     Type
 16250 ;;  ap              2  [STACK] PTR void [1]
 16251 ;;		 -> ?_printf(2), ?_sprintf(2), 
 16252 ;;  ret             2    0        int 
 16253 ;; Return value:  Size  Location     Type
 16254 ;;                  2  [STACK] int 
 16255 ;; Registers used:
 16256 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 16257 ;; Tracked objects:
 16258 ;;		On entry : 3F/3B
 16259 ;;		On exit  : 3F/0
 16260 ;;		Unchanged: 0/0
 16261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16262 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16263 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16265 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16266 ;;Total ram usage:        0 bytes
 16267 ;; Hardware stack levels used:    1
 16268 ;; Hardware stack levels required when called:   23
 16269 ;; This function calls:
 16270 ;;		_vfprintf
 16271 ;; This function is called by:
 16272 ;;		_eaDogM_WriteString
 16273 ;;		_send_lcd_data_dma
 16274 ;; This function uses a reentrant model
 16275 ;;
 16276                           
 16277                           	psect	text66
 16278  01C8B8                     __ptext66:
 16279                           	opt callstack 0
 16280  01C8B8                     _printf:
 16281                           	opt callstack 0
 16282                           
 16283                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16284  01C8B8  52E6               	movf	postinc1,f,c
 16285  01C8BA  52E6               	movf	postinc1,f,c
 16286                           
 16287                           ;stkvar	?_printf @ sp[(-2)+-3]
 16288                           
 16289                           ;incstack = 0
 16290  01C8BC  0EFB               	movlw	251
 16291  01C8BE  24E1               	addwf	fsr1l,w,c
 16292  01C8C0  6E0B               	movwf	(btemp+10)^0,c
 16293  01C8C2  0EFF               	movlw	255
 16294  01C8C4  20E2               	addwfc	fsr1h,w,c
 16295  01C8C6  6E0C               	movwf	(btemp+11)^0,c
 16296                           
 16297                           ;stkvar	_ap @ sp[(-2)+0]
 16298  01C8C8  0EFF               	movlw	-1
 16299  01C8CA  0060  F033  FFE3   	movff	btemp+11,plusw1
 16300  01C8D0  0EFE               	movlw	-2
 16301  01C8D2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16302                           
 16303                           ;stkvar	_ap @ sp[(-2)+0]
 16304  01C8D8  0EFE               	movlw	254
 16305  01C8DA  24E1               	addwf	fsr1l,w,c
 16306  01C8DC  6E01               	movwf	btemp^0,c
 16307  01C8DE  0EFF               	movlw	255
 16308  01C8E0  20E2               	addwfc	fsr1h,w,c
 16309  01C8E2  6E02               	movwf	(btemp+1)^0,c
 16310  01C8E4  0060  F007  FFE6   	movff	btemp,postinc1
 16311  01C8EA  0060  F00B  FFE6   	movff	btemp+1,postinc1
 16312                           
 16313                           ;stkvar	_fmt @ sp[(-4)+-3]
 16314  01C8F0  0EF9               	movlw	-7
 16315  01C8F2  006F FF8F FFE6     	movff	plusw1,postinc1
 16316  01C8F8  006F FF8F FFE6     	movff	plusw1,postinc1
 16317  01C8FE  0E00               	movlw	0
 16318  01C900  6EE6               	movwf	postinc1,c
 16319  01C902  0E00               	movlw	0
 16320  01C904  6EE6               	movwf	postinc1,c
 16321  01C906  EC03  F0DE         	call	_vfprintf	;wreg free
 16322                           
 16323                           ; BSR set to: 0
 16324                           ; _printf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 2, vargsize = 0
 16325  01C90A  52E5               	movf	postdec1,f,c
 16326  01C90C  52E5               	movf	postdec1,f,c
 16327  01C90E  52E5               	movf	postdec1,f,c
 16328  01C910  50E7               	movf	indf1,w,c
 16329  01C912  5EE1               	subwf	fsr1l,f,c
 16330  01C914  0E00               	movlw	0
 16331  01C916  5AE2               	subwfb	fsr1h,f,c
 16332  01C918  0012               	return		;funcret
 16333  01C91A                     __end_of_printf:
 16334                           	opt callstack 0
 16335                           
 16336 ;; *************** function _vfprintf *****************
 16337 ;; Defined at:
 16338 ;;		line 1368 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 16339 ;; Parameters:    Size  Location     Type
 16340 ;;  fp              2  [STACK] PTR struct _IO_FILE
 16341 ;;		 -> f(6), NULL(0), 
 16342 ;;  fmt             2  [STACK] PTR const unsigned char 
 16343 ;;		 -> STR_93(127), STR_91(3), STR_90(3), STR_89(19), 
 16344 ;;		 -> STR_88(19), STR_87(19), STR_86(19), STR_85(19), 
 16345 ;;		 -> STR_84(19), STR_83(24), STR_82(15), STR_81(15), 
 16346 ;;		 -> STR_80(15), STR_79(10), STR_78(10), STR_77(19), 
 16347 ;;		 -> STR_76(19), STR_73(3), STR_72(3), STR_71(21), 
 16348 ;;		 -> STR_70(21), STR_69(21), STR_68(21), STR_67(21), 
 16349 ;;		 -> STR_66(21), STR_65(21), STR_64(21), STR_63(21), 
 16350 ;;		 -> STR_62(18), STR_61(21), STR_60(21), STR_59(21), 
 16351 ;;		 -> STR_58(21), STR_57(21), STR_56(21), STR_55(21), 
 16352 ;;		 -> STR_54(21), STR_53(21), STR_52(21), STR_51(21), 
 16353 ;;		 -> STR_50(21), STR_49(20), STR_48(21), STR_47(21), 
 16354 ;;		 -> STR_46(21), STR_45(22), STR_44(22), STR_43(22), 
 16355 ;;		 -> STR_42(23), STR_41(23), STR_40(23), STR_39(29), 
 16356 ;;		 -> STR_38(23), STR_37(23), STR_36(22), STR_35(22), 
 16357 ;;		 -> STR_34(22), STR_33(22), STR_32(22), STR_31(22), 
 16358 ;;		 -> STR_30(22), STR_29(22), STR_28(22), STR_27(22), 
 16359 ;;		 -> STR_26(22), STR_25(22), STR_24(17), STR_23(16), 
 16360 ;;		 -> STR_22(16), STR_21(26), STR_20(26), STR_19(22), 
 16361 ;;		 -> STR_18(21), STR_17(21), STR_16(21), STR_15(21), 
 16362 ;;		 -> STR_14(22), STR_13(22), STR_12(22), STR_11(26), 
 16363 ;;		 -> STR_10(21), STR_9(21), STR_8(21), STR_7(21), 
 16364 ;;		 -> STR_6(21), STR_5(21), STR_4(21), STR_2(21), 
 16365 ;;		 -> STR_1(21), 
 16366 ;;  ap              2  [STACK] PTR PTR void 
 16367 ;;		 -> ap(2), ap(2), 
 16368 ;; Auto vars:     Size  Location     Type
 16369 ;;  cfmt            2  [STACK] PTR unsigned char 
 16370 ;;		 -> STR_93(127), STR_91(3), STR_90(3), STR_89(19), 
 16371 ;;		 -> STR_88(19), STR_87(19), STR_86(19), STR_85(19), 
 16372 ;;		 -> STR_84(19), STR_83(24), STR_82(15), STR_81(15), 
 16373 ;;		 -> STR_80(15), STR_79(10), STR_78(10), STR_77(19), 
 16374 ;;		 -> STR_76(19), STR_73(3), STR_72(3), STR_71(21), 
 16375 ;;		 -> STR_70(21), STR_69(21), STR_68(21), STR_67(21), 
 16376 ;;		 -> STR_66(21), STR_65(21), STR_64(21), STR_63(21), 
 16377 ;;		 -> STR_62(18), STR_61(21), STR_60(21), STR_59(21), 
 16378 ;;		 -> STR_58(21), STR_57(21), STR_56(21), STR_55(21), 
 16379 ;;		 -> STR_54(21), STR_53(21), STR_52(21), STR_51(21), 
 16380 ;;		 -> STR_50(21), STR_49(20), STR_48(21), STR_47(21), 
 16381 ;;		 -> STR_46(21), STR_45(22), STR_44(22), STR_43(22), 
 16382 ;;		 -> STR_42(23), STR_41(23), STR_40(23), STR_39(29), 
 16383 ;;		 -> STR_38(23), STR_37(23), STR_36(22), STR_35(22), 
 16384 ;;		 -> STR_34(22), STR_33(22), STR_32(22), STR_31(22), 
 16385 ;;		 -> STR_30(22), STR_29(22), STR_28(22), STR_27(22), 
 16386 ;;		 -> STR_26(22), STR_25(22), STR_24(17), STR_23(16), 
 16387 ;;		 -> STR_22(16), STR_21(26), STR_20(26), STR_19(22), 
 16388 ;;		 -> STR_18(21), STR_17(21), STR_16(21), STR_15(21), 
 16389 ;;		 -> STR_14(22), STR_13(22), STR_12(22), STR_11(26), 
 16390 ;;		 -> STR_10(21), STR_9(21), STR_8(21), STR_7(21), 
 16391 ;;		 -> STR_6(21), STR_5(21), STR_4(21), STR_2(21), 
 16392 ;;		 -> STR_1(21), 
 16393 ;; Return value:  Size  Location     Type
 16394 ;;                  2  [STACK] int 
 16395 ;; Registers used:
 16396 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 16397 ;; Tracked objects:
 16398 ;;		On entry : 0/1
 16399 ;;		On exit  : 3F/0
 16400 ;;		Unchanged: 0/0
 16401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16402 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16403 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16404 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16405 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16406 ;;Total ram usage:        0 bytes
 16407 ;; Hardware stack levels used:    1
 16408 ;; Hardware stack levels required when called:   22
 16409 ;; This function calls:
 16410 ;;		_vfpfcnvrt
 16411 ;; This function is called by:
 16412 ;;		_sprintf
 16413 ;;		_printf
 16414 ;; This function uses a reentrant model
 16415 ;;
 16416                           
 16417                           	psect	text67
 16418  01BC06                     __ptext67:
 16419                           	opt callstack 0
 16420  01BC06                     _vfprintf:
 16421                           	opt callstack 0
 16422                           
 16423                           ; BSR set to: 0
 16424                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16425  01BC06  52E6               	movf	postinc1,f,c
 16426  01BC08  52E6               	movf	postinc1,f,c
 16427                           
 16428                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
 16429                           ;stkvar	_fmt @ sp[(-2)+-4]
 16430                           
 16431                           ;incstack = 0
 16432 ;; hardware stack exceeded
 16433  01BC0A  0EFA               	movlw	-6
 16434  01BC0C  006F FF8C  F00B    	movff	plusw1,btemp+10
 16435  01BC12  0EFB               	movlw	-5
 16436  01BC14  006F FF8C  F00C    	movff	plusw1,btemp+11
 16437                           
 16438                           ;stkvar	_cfmt @ sp[(-2)+0]
 16439  01BC1A  0EFF               	movlw	-1
 16440  01BC1C  0060  F033  FFE3   	movff	btemp+11,plusw1
 16441  01BC22  0EFE               	movlw	-2
 16442  01BC24  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16443                           
 16444                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
 16445  01BC2A  0100               	movlb	0	; () banked
 16446  01BC2C  6BC0               	clrf	_nout& (0+255),b
 16447  01BC2E  6BC1               	clrf	(_nout+1)& (0+255),b
 16448                           
 16449                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 16450  01BC30  D021               	goto	l14174
 16451  01BC32                     l14172:
 16452                           
 16453                           ; BSR set to: 0
 16454                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
 16455                           ;stkvar	_ap @ sp[(-2)+-6]
 16456  01BC32  0EF8               	movlw	-8
 16457  01BC34  006F FF8F FFE6     	movff	plusw1,postinc1
 16458  01BC3A  006F FF8F FFE6     	movff	plusw1,postinc1
 16459                           
 16460                           ;stkvar	_cfmt @ sp[(-4)+0]
 16461  01BC40  0EFC               	movlw	252
 16462  01BC42  24E1               	addwf	fsr1l,w,c
 16463  01BC44  6E01               	movwf	btemp^0,c
 16464  01BC46  0EFF               	movlw	255
 16465  01BC48  20E2               	addwfc	fsr1h,w,c
 16466  01BC4A  6E02               	movwf	(btemp+1)^0,c
 16467  01BC4C  0060  F007  FFE6   	movff	btemp,postinc1
 16468  01BC52  0060  F00B  FFE6   	movff	btemp+1,postinc1
 16469                           
 16470                           ;stkvar	_fp @ sp[(-6)+-2]
 16471  01BC58  0EF8               	movlw	-8
 16472  01BC5A  006F FF8F FFE6     	movff	plusw1,postinc1
 16473  01BC60  006F FF8F FFE6     	movff	plusw1,postinc1
 16474  01BC66  EC6B  F092         	call	_vfpfcnvrt	;wreg free
 16475  01BC6A  5001               	movf	btemp^0,w,c
 16476  01BC6C  0100               	movlb	0	; () banked
 16477  01BC6E  27C0               	addwf	_nout& (0+255),f,b
 16478  01BC70  5002               	movf	(btemp+1)^0,w,c
 16479  01BC72  23C1               	addwfc	(_nout+1)& (0+255),f,b
 16480  01BC74                     l14174:
 16481                           
 16482                           ; BSR set to: 0
 16483                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 16484                           ;stkvar	_cfmt @ sp[(-2)+0]
 16485  01BC74  50E1               	movf	fsr1l,w,c
 16486  01BC76  0FFE               	addlw	-2
 16487  01BC78  6ED9               	movwf	fsr2l,c
 16488  01BC7A  50E2               	movf	fsr1h,w,c
 16489  01BC7C  6EDA               	movwf	fsr2h,c
 16490  01BC7E  0EFF               	movlw	255
 16491  01BC80  22DA               	addwfc	fsr2h,f,c
 16492  01BC82  006F FF7B FFF6     	movff	postinc2,tblptrl
 16493  01BC88  006F FF77 FFF7     	movff	postdec2,tblptrh
 16494  01BC8E                     	if	0	;tblptru may be non-zero
 16495  01BC8E                     	endif
 16496  01BC8E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16497  01BC8E  0E00               	movlw	low (__mediumconst shr (0+16))
 16498  01BC90  6EF8               	movwf	tblptru,c
 16499  01BC92                     	endif
 16500  01BC92  0008               	tblrd		*
 16501  01BC94  50F5               	movf	tablat,w,c
 16502  01BC96  0900               	iorlw	0
 16503  01BC98  A4D8               	btfss	status,2,c
 16504  01BC9A  D7CB               	goto	l14172
 16505                           
 16506                           ; BSR set to: 0
 16507                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1378:     return nout;
 16508  01BC9C  0060  F300  F001   	movff	_nout,btemp
 16509  01BCA2  0060  F304  F002   	movff	_nout+1,btemp+1
 16510                           
 16511                           ; BSR set to: 0
 16512                           ; _vfprintf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, args
      +                          ize = 6, vargsize = 0
 16513  01BCA8  0EF8               	movlw	248
 16514  01BCAA  26E1               	addwf	fsr1l,f,c
 16515  01BCAC  0EFF               	movlw	255
 16516  01BCAE  22E2               	addwfc	fsr1h,f,c
 16517  01BCB0  0012               	return		;funcret
 16518  01BCB2                     __end_of_vfprintf:
 16519                           	opt callstack 0
 16520                           
 16521 ;; *************** function _vfpfcnvrt *****************
 16522 ;; Defined at:
 16523 ;;		line 670 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 16524 ;; Parameters:    Size  Location     Type
 16525 ;;  fp              2  [STACK] PTR struct _IO_FILE
 16526 ;;		 -> f(6), NULL(0), 
 16527 ;;  fmt             2  [STACK] PTR PTR unsigned char 
 16528 ;;		 -> cfmt(2), 
 16529 ;;  ap              2  [STACK] PTR PTR void 
 16530 ;;		 -> ap(2), ap(2), 
 16531 ;; Auto vars:     Size  Location     Type
 16532 ;;  llu             8  [STACK] unsigned long long 
 16533 ;;  ll              8  [STACK] long long 
 16534 ;;  f               4  [STACK] long long 
 16535 ;;  ct              3  [STACK] unsigned char [3]
 16536 ;;  vp              3    0        PTR void 
 16537 ;;  cp              2  [STACK] PTR unsigned char 
 16538 ;;		 -> ?_printf(2), ?_sprintf(2), STR_75(9), STR_74(12), 
 16539 ;;		 -> D.lcd(480), D(482), T(144), cp(4), 
 16540 ;;		 -> cb(4), STR_3(5), V(192), 
 16541 ;;  i               2    0        int 
 16542 ;;  done            2    0        int 
 16543 ;;  c               1  [STACK] unsigned char 
 16544 ;; Return value:  Size  Location     Type
 16545 ;;                  2  [STACK] int 
 16546 ;; Registers used:
 16547 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 16548 ;; Tracked objects:
 16549 ;;		On entry : 0/0
 16550 ;;		On exit  : 0/0
 16551 ;;		Unchanged: 0/0
 16552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16553 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16554 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16555 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16556 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16557 ;;Total ram usage:        0 bytes
 16558 ;; Hardware stack levels used:    1
 16559 ;; Hardware stack levels required when called:   21
 16560 ;; This function calls:
 16561 ;;		_atoi
 16562 ;;		_ctoa
 16563 ;;		_dtoa
 16564 ;;		_efgtoa
 16565 ;;		_fputc
 16566 ;;		_isdigit
 16567 ;;		_isupper
 16568 ;;		_stoa
 16569 ;;		_strncmp
 16570 ;;		_tolower
 16571 ;;		_utoa
 16572 ;;		_xtoa
 16573 ;; This function is called by:
 16574 ;;		_vfprintf
 16575 ;; This function uses a reentrant model
 16576 ;;
 16577                           
 16578                           	psect	text68
 16579  0124D6                     __ptext68:
 16580                           	opt callstack 0
 16581  0124D6                     _vfpfcnvrt:
 16582                           	opt callstack 0
 16583                           
 16584                           ; BSR set to: 0
 16585                           ; autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 16586  0124D6  0E20               	movlw	32
 16587  0124D8  26E1               	addwf	fsr1l,f,c
 16588  0124DA  0E00               	movlw	0
 16589  0124DC  22E2               	addwfc	fsr1h,f,c
 16590                           
 16591                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
 16592                           ;stkvar	_fmt @ sp[(-32)+-4]
 16593                           
 16594                           ;incstack = 0
 16595 ;; hardware stack exceeded
 16596  0124DE  0EDC               	movlw	-36
 16597  0124E0  006F FF8F FFD9     	movff	plusw1,fsr2l
 16598  0124E6  0EDD               	movlw	-35
 16599  0124E8  006F FF8F FFDA     	movff	plusw1,fsr2h
 16600  0124EE  006F FF7B FFF6     	movff	postinc2,tblptrl
 16601  0124F4  006F FF77 FFF7     	movff	postdec2,tblptrh
 16602  0124FA                     	if	0	;tblptru may be non-zero
 16603  0124FA                     	endif
 16604  0124FA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16605  0124FA  0E00               	movlw	low (__mediumconst shr (0+16))
 16606  0124FC  6EF8               	movwf	tblptru,c
 16607  0124FE                     	endif
 16608  0124FE  0008               	tblrd		*
 16609  012500  50F5               	movf	tablat,w,c
 16610  012502  0A25               	xorlw	37
 16611  012504  A4D8               	btfss	status,2,c
 16612  012506  EF12  F09A         	goto	l14134
 16613                           
 16614                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
 16615                           ;stkvar	_fmt @ sp[(-32)+-4]
 16616  01250A  0EDC               	movlw	-36
 16617  01250C  006F FF8F FFD9     	movff	plusw1,fsr2l
 16618  012512  0EDD               	movlw	-35
 16619  012514  006F FF8F FFDA     	movff	plusw1,fsr2h
 16620  01251A  2ADE               	incf	postinc2,f,c
 16621  01251C  0E00               	movlw	0
 16622  01251E  22DD               	addwfc	postdec2,f,c
 16623                           
 16624                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
 16625  012520  6A3A               	clrf	_width^0,c
 16626  012522  6A3B               	clrf	(_width+1)^0,c
 16627  012524  6A3E               	clrf	_flags^0,c
 16628  012526  6A3F               	clrf	(_flags+1)^0,c
 16629                           
 16630                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
 16631  012528  683C               	setf	_prec^0,c
 16632  01252A  683D               	setf	(_prec+1)^0,c
 16633                           
 16634                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 723:         if ((*fmt)[0] ==
      +                           '*') {
 16635                           ;stkvar	_fmt @ sp[(-32)+-4]
 16636  01252C  0EDC               	movlw	-36
 16637  01252E  006F FF8F FFD9     	movff	plusw1,fsr2l
 16638  012534  0EDD               	movlw	-35
 16639  012536  006F FF8F FFDA     	movff	plusw1,fsr2h
 16640  01253C  006F FF7B FFF6     	movff	postinc2,tblptrl
 16641  012542  006F FF77 FFF7     	movff	postdec2,tblptrh
 16642  012548                     	if	0	;tblptru may be non-zero
 16643  012548                     	endif
 16644  012548                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16645  012548  0E00               	movlw	low (__mediumconst shr (0+16))
 16646  01254A  6EF8               	movwf	tblptru,c
 16647  01254C                     	endif
 16648  01254C  0008               	tblrd		*
 16649  01254E  50F5               	movf	tablat,w,c
 16650  012550  0A2A               	xorlw	42
 16651  012552  A4D8               	btfss	status,2,c
 16652  012554  D031               	goto	l13952
 16653                           
 16654                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 724:             ++*fmt;
 16655                           ;stkvar	_fmt @ sp[(-32)+-4]
 16656  012556  0EDC               	movlw	-36
 16657  012558  006F FF8F FFD9     	movff	plusw1,fsr2l
 16658  01255E  0EDD               	movlw	-35
 16659  012560  006F FF8F FFDA     	movff	plusw1,fsr2h
 16660  012566  2ADE               	incf	postinc2,f,c
 16661  012568  0E00               	movlw	0
 16662  01256A  22DD               	addwfc	postdec2,f,c
 16663                           
 16664                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 725:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
 16665                           ;stkvar	_ap @ sp[(-32)+-6]
 16666  01256C  0EDA               	movlw	-38
 16667  01256E  006F FF8F FFD9     	movff	plusw1,fsr2l
 16668  012574  0EDB               	movlw	-37
 16669  012576  006F FF8F FFDA     	movff	plusw1,fsr2h
 16670  01257C  0E02               	movlw	2
 16671  01257E  5EDE               	subwf	postinc2,f,c
 16672  012580  0E00               	movlw	0
 16673  012582  5ADD               	subwfb	postdec2,f,c
 16674  012584  006F FF78  F00B    	movff	postinc2,btemp+10
 16675  01258A  006F FF74  F00C    	movff	postdec2,btemp+11
 16676  012590  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 16677  012596  0060  F033  FFDA   	movff	btemp+11,fsr2h
 16678  01259C  006F FF78  F03A    	movff	postinc2,_width
 16679  0125A2  006F FF74  F03B    	movff	postdec2,_width+1
 16680                           
 16681                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 726:             if (width < 
      +                          0) {
 16682  0125A8  AE3B               	btfss	(_width+1)^0,7,c
 16683  0125AA  D066               	goto	u13320
 16684                           
 16685                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 727:                 flags |=
      +                           (1 << 0);
 16686  0125AC  803E               	bsf	_flags^0,0,c
 16687                           
 16688                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 728:                 width = 
      +                          -width;
 16689  0125AE  6C3A               	negf	_width^0,c
 16690  0125B0  1E3B               	comf	(_width+1)^0,f,c
 16691  0125B2  B0D8               	btfsc	status,0,c
 16692  0125B4  2A3B               	incf	(_width+1)^0,f,c
 16693  0125B6  D060               	goto	u13320
 16694  0125B8                     l13952:
 16695                           
 16696                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 731:             width = atoi
      +                          (*fmt);
 16697                           ;stkvar	_fmt @ sp[(-32)+-4]
 16698  0125B8  0EDC               	movlw	-36
 16699  0125BA  006F FF8F FFD9     	movff	plusw1,fsr2l
 16700  0125C0  0EDD               	movlw	-35
 16701  0125C2  006F FF8F FFDA     	movff	plusw1,fsr2h
 16702  0125C8  006F FF78  F00B    	movff	postinc2,btemp+10
 16703  0125CE  006F FF74  F00C    	movff	postdec2,btemp+11
 16704  0125D4  0060  F02F  FFE6   	movff	btemp+10,postinc1
 16705  0125DA  0060  F033  FFE6   	movff	btemp+11,postinc1
 16706  0125E0  EC10  F0C3         	call	_atoi	;wreg free
 16707  0125E4  0060  F004  F03A   	movff	btemp,_width
 16708  0125EA  0060  F008  F03B   	movff	btemp+1,_width+1
 16709                           
 16710                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 732:             while ((0 ? 
      +                          isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 16711  0125F0  D00B               	goto	l13956
 16712  0125F2                     l13954:
 16713                           
 16714                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 733:                 ++*fmt;
 16715                           ;stkvar	_fmt @ sp[(-32)+-4]
 16716  0125F2  0EDC               	movlw	-36
 16717  0125F4  006F FF8F FFD9     	movff	plusw1,fsr2l
 16718  0125FA  0EDD               	movlw	-35
 16719  0125FC  006F FF8F FFDA     	movff	plusw1,fsr2h
 16720  012602  2ADE               	incf	postinc2,f,c
 16721  012604  0E00               	movlw	0
 16722  012606  22DD               	addwfc	postdec2,f,c
 16723  012608                     l13956:
 16724  012608  0ED0               	movlw	208
 16725  01260A  6E0B               	movwf	(btemp+10)^0,c
 16726  01260C  0EFF               	movlw	255
 16727  01260E  6E0C               	movwf	(btemp+11)^0,c
 16728                           
 16729                           ;stkvar	_fmt @ sp[(-32)+-4]
 16730  012610  0EDC               	movlw	-36
 16731  012612  006F FF8F FFD9     	movff	plusw1,fsr2l
 16732  012618  0EDD               	movlw	-35
 16733  01261A  006F FF8F FFDA     	movff	plusw1,fsr2h
 16734  012620  006F FF7B FFF6     	movff	postinc2,tblptrl
 16735  012626  006F FF77 FFF7     	movff	postdec2,tblptrh
 16736  01262C                     	if	0	;tblptru may be non-zero
 16737  01262C                     	endif
 16738  01262C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16739  01262C  0E00               	movlw	low (__mediumconst shr (0+16))
 16740  01262E  6EF8               	movwf	tblptru,c
 16741  012630                     	endif
 16742  012630  0008               	tblrd		*
 16743  012632  50F5               	movf	tablat,w,c
 16744  012634  6E09               	movwf	(btemp+8)^0,c
 16745  012636  6A0A               	clrf	(btemp+9)^0,c
 16746  012638  500B               	movf	(btemp+10)^0,w,c
 16747  01263A  2609               	addwf	(btemp+8)^0,f,c
 16748  01263C  500C               	movf	(btemp+11)^0,w,c
 16749  01263E  220A               	addwfc	(btemp+9)^0,f,c
 16750  012640  500A               	movf	(btemp+9)^0,w,c
 16751  012642  E106               	bnz	u13300
 16752  012644  0E0A               	movlw	10
 16753  012646  5C09               	subwf	(btemp+8)^0,w,c
 16754  012648  B0D8               	btfsc	status,0,c
 16755  01264A  D002               	goto	u13300
 16756  01264C  0E01               	movlw	1
 16757  01264E  D001               	goto	u13310
 16758  012650                     u13300:
 16759  012650  0E00               	movlw	0
 16760  012652                     u13310:
 16761  012652  6E0B               	movwf	(btemp+10)^0,c
 16762  012654  6A0C               	clrf	(btemp+11)^0,c
 16763                           
 16764                           ;stkvar	_vfpfcnvrt$6577 @ sp[(-32)+4]
 16765  012656  0EE4               	movlw	-28
 16766  012658  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16767  01265E  0EE5               	movlw	-27
 16768  012660  0060  F033  FFE3   	movff	btemp+11,plusw1
 16769                           
 16770                           ;stkvar	_vfpfcnvrt$6577 @ sp[(-32)+4]
 16771  012666  0EE4               	movlw	-28
 16772  012668  006F FF8C  F001    	movff	plusw1,btemp
 16773  01266E  0EE5               	movlw	-27
 16774  012670  50E3               	movf	plusw1,w,c
 16775  012672  1001               	iorwf	btemp^0,w,c
 16776  012674  A4D8               	btfss	status,2,c
 16777  012676  D7BD               	goto	l13954
 16778  012678                     u13320:
 16779                           
 16780                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 740:         if ((*fmt)[0] ==
      +                           '.') {
 16781                           ;stkvar	_fmt @ sp[(-32)+-4]
 16782  012678  0EDC               	movlw	-36
 16783  01267A  006F FF8F FFD9     	movff	plusw1,fsr2l
 16784  012680  0EDD               	movlw	-35
 16785  012682  006F FF8F FFDA     	movff	plusw1,fsr2h
 16786  012688  006F FF7B FFF6     	movff	postinc2,tblptrl
 16787  01268E  006F FF77 FFF7     	movff	postdec2,tblptrh
 16788  012694                     	if	0	;tblptru may be non-zero
 16789  012694                     	endif
 16790  012694                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16791  012694  0E00               	movlw	low (__mediumconst shr (0+16))
 16792  012696  6EF8               	movwf	tblptru,c
 16793  012698                     	endif
 16794  012698  0008               	tblrd		*
 16795  01269A  50F5               	movf	tablat,w,c
 16796  01269C  0A2E               	xorlw	46
 16797  01269E  A4D8               	btfss	status,2,c
 16798  0126A0  D0AC               	goto	u13370
 16799                           
 16800                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 741:             prec = 0;
 16801  0126A2  6A3C               	clrf	_prec^0,c
 16802  0126A4  6A3D               	clrf	(_prec+1)^0,c
 16803                           
 16804                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 742:             ++*fmt;
 16805                           ;stkvar	_fmt @ sp[(-32)+-4]
 16806  0126A6  0EDC               	movlw	-36
 16807  0126A8  006F FF8F FFD9     	movff	plusw1,fsr2l
 16808  0126AE  0EDD               	movlw	-35
 16809  0126B0  006F FF8F FFDA     	movff	plusw1,fsr2h
 16810  0126B6  2ADE               	incf	postinc2,f,c
 16811  0126B8  0E00               	movlw	0
 16812  0126BA  22DD               	addwfc	postdec2,f,c
 16813                           
 16814                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 743:             if ((*fmt)[0
      +                          ] == '*') {
 16815                           ;stkvar	_fmt @ sp[(-32)+-4]
 16816  0126BC  0EDC               	movlw	-36
 16817  0126BE  006F FF8F FFD9     	movff	plusw1,fsr2l
 16818  0126C4  0EDD               	movlw	-35
 16819  0126C6  006F FF8F FFDA     	movff	plusw1,fsr2h
 16820  0126CC  006F FF7B FFF6     	movff	postinc2,tblptrl
 16821  0126D2  006F FF77 FFF7     	movff	postdec2,tblptrh
 16822  0126D8                     	if	0	;tblptru may be non-zero
 16823  0126D8                     	endif
 16824  0126D8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16825  0126D8  0E00               	movlw	low (__mediumconst shr (0+16))
 16826  0126DA  6EF8               	movwf	tblptru,c
 16827  0126DC                     	endif
 16828  0126DC  0008               	tblrd		*
 16829  0126DE  50F5               	movf	tablat,w,c
 16830  0126E0  0A2A               	xorlw	42
 16831  0126E2  A4D8               	btfss	status,2,c
 16832  0126E4  D02A               	goto	l13974
 16833                           
 16834                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 744:                 ++*fmt;
 16835                           ;stkvar	_fmt @ sp[(-32)+-4]
 16836  0126E6  0EDC               	movlw	-36
 16837  0126E8  006F FF8F FFD9     	movff	plusw1,fsr2l
 16838  0126EE  0EDD               	movlw	-35
 16839  0126F0  006F FF8F FFDA     	movff	plusw1,fsr2h
 16840  0126F6  2ADE               	incf	postinc2,f,c
 16841  0126F8  0E00               	movlw	0
 16842  0126FA  22DD               	addwfc	postdec2,f,c
 16843                           
 16844                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 745:                 prec = (
      +                          *(int *)__va_arg(*(int **)ap, (int)0));
 16845                           ;stkvar	_ap @ sp[(-32)+-6]
 16846  0126FC  0EDA               	movlw	-38
 16847  0126FE  006F FF8F FFD9     	movff	plusw1,fsr2l
 16848  012704  0EDB               	movlw	-37
 16849  012706  006F FF8F FFDA     	movff	plusw1,fsr2h
 16850  01270C  0E02               	movlw	2
 16851  01270E  5EDE               	subwf	postinc2,f,c
 16852  012710  0E00               	movlw	0
 16853  012712  5ADD               	subwfb	postdec2,f,c
 16854  012714  006F FF78  F00B    	movff	postinc2,btemp+10
 16855  01271A  006F FF74  F00C    	movff	postdec2,btemp+11
 16856  012720  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 16857  012726  0060  F033  FFDA   	movff	btemp+11,fsr2h
 16858  01272C  006F FF78  F03C    	movff	postinc2,_prec
 16859  012732  006F FF74  F03D    	movff	postdec2,_prec+1
 16860                           
 16861                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 746:             } else {
 16862  012738  D060               	goto	u13370
 16863  01273A                     l13974:
 16864                           
 16865                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 747:                 prec = a
      +                          toi(*fmt);
 16866                           ;stkvar	_fmt @ sp[(-32)+-4]
 16867  01273A  0EDC               	movlw	-36
 16868  01273C  006F FF8F FFD9     	movff	plusw1,fsr2l
 16869  012742  0EDD               	movlw	-35
 16870  012744  006F FF8F FFDA     	movff	plusw1,fsr2h
 16871  01274A  006F FF78  F00B    	movff	postinc2,btemp+10
 16872  012750  006F FF74  F00C    	movff	postdec2,btemp+11
 16873  012756  0060  F02F  FFE6   	movff	btemp+10,postinc1
 16874  01275C  0060  F033  FFE6   	movff	btemp+11,postinc1
 16875  012762  EC10  F0C3         	call	_atoi	;wreg free
 16876  012766  0060  F004  F03C   	movff	btemp,_prec
 16877  01276C  0060  F008  F03D   	movff	btemp+1,_prec+1
 16878                           
 16879                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 748:                 while ((
      +                          0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 16880  012772  D00B               	goto	l13978
 16881  012774                     l13976:
 16882                           
 16883                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 749:                     ++*f
      +                          mt;
 16884                           ;stkvar	_fmt @ sp[(-32)+-4]
 16885  012774  0EDC               	movlw	-36
 16886  012776  006F FF8F FFD9     	movff	plusw1,fsr2l
 16887  01277C  0EDD               	movlw	-35
 16888  01277E  006F FF8F FFDA     	movff	plusw1,fsr2h
 16889  012784  2ADE               	incf	postinc2,f,c
 16890  012786  0E00               	movlw	0
 16891  012788  22DD               	addwfc	postdec2,f,c
 16892  01278A                     l13978:
 16893  01278A  0ED0               	movlw	208
 16894  01278C  6E0B               	movwf	(btemp+10)^0,c
 16895  01278E  0EFF               	movlw	255
 16896  012790  6E0C               	movwf	(btemp+11)^0,c
 16897                           
 16898                           ;stkvar	_fmt @ sp[(-32)+-4]
 16899  012792  0EDC               	movlw	-36
 16900  012794  006F FF8F FFD9     	movff	plusw1,fsr2l
 16901  01279A  0EDD               	movlw	-35
 16902  01279C  006F FF8F FFDA     	movff	plusw1,fsr2h
 16903  0127A2  006F FF7B FFF6     	movff	postinc2,tblptrl
 16904  0127A8  006F FF77 FFF7     	movff	postdec2,tblptrh
 16905  0127AE                     	if	0	;tblptru may be non-zero
 16906  0127AE                     	endif
 16907  0127AE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16908  0127AE  0E00               	movlw	low (__mediumconst shr (0+16))
 16909  0127B0  6EF8               	movwf	tblptru,c
 16910  0127B2                     	endif
 16911  0127B2  0008               	tblrd		*
 16912  0127B4  50F5               	movf	tablat,w,c
 16913  0127B6  6E09               	movwf	(btemp+8)^0,c
 16914  0127B8  6A0A               	clrf	(btemp+9)^0,c
 16915  0127BA  500B               	movf	(btemp+10)^0,w,c
 16916  0127BC  2609               	addwf	(btemp+8)^0,f,c
 16917  0127BE  500C               	movf	(btemp+11)^0,w,c
 16918  0127C0  220A               	addwfc	(btemp+9)^0,f,c
 16919  0127C2  500A               	movf	(btemp+9)^0,w,c
 16920  0127C4  E106               	bnz	u13350
 16921  0127C6  0E0A               	movlw	10
 16922  0127C8  5C09               	subwf	(btemp+8)^0,w,c
 16923  0127CA  B0D8               	btfsc	status,0,c
 16924  0127CC  D002               	goto	u13350
 16925  0127CE  0E01               	movlw	1
 16926  0127D0  D001               	goto	u13360
 16927  0127D2                     u13350:
 16928  0127D2  0E00               	movlw	0
 16929  0127D4                     u13360:
 16930  0127D4  6E0B               	movwf	(btemp+10)^0,c
 16931  0127D6  6A0C               	clrf	(btemp+11)^0,c
 16932                           
 16933                           ;stkvar	_vfpfcnvrt$6578 @ sp[(-32)+0]
 16934  0127D8  0EE0               	movlw	-32
 16935  0127DA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16936  0127E0  0EE1               	movlw	-31
 16937  0127E2  0060  F033  FFE3   	movff	btemp+11,plusw1
 16938                           
 16939                           ;stkvar	_vfpfcnvrt$6578 @ sp[(-32)+0]
 16940  0127E8  0EE0               	movlw	-32
 16941  0127EA  006F FF8C  F001    	movff	plusw1,btemp
 16942  0127F0  0EE1               	movlw	-31
 16943  0127F2  50E3               	movf	plusw1,w,c
 16944  0127F4  1001               	iorwf	btemp^0,w,c
 16945  0127F6  A4D8               	btfss	status,2,c
 16946  0127F8  D7BD               	goto	l13976
 16947  0127FA                     u13370:
 16948                           
 16949                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 757:         ct[0] = tolower(
      +                          (int)(*fmt)[0]);
 16950                           ;stkvar	_fmt @ sp[(-32)+-4]
 16951  0127FA  0EDC               	movlw	-36
 16952  0127FC  006F FF8F FFD9     	movff	plusw1,fsr2l
 16953  012802  0EDD               	movlw	-35
 16954  012804  006F FF8F FFDA     	movff	plusw1,fsr2h
 16955  01280A  006F FF7B FFF6     	movff	postinc2,tblptrl
 16956  012810  006F FF77 FFF7     	movff	postdec2,tblptrh
 16957  012816                     	if	0	;tblptru may be non-zero
 16958  012816                     	endif
 16959  012816                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16960  012816  0E00               	movlw	low (__mediumconst shr (0+16))
 16961  012818  6EF8               	movwf	tblptru,c
 16962  01281A                     	endif
 16963  01281A  0008               	tblrd		*
 16964  01281C  50F5               	movf	tablat,w,c
 16965  01281E  6EE6               	movwf	postinc1,c
 16966  012820  0E00               	movlw	0
 16967  012822  6EE6               	movwf	postinc1,c
 16968  012824  ECE7  F0E1         	call	_tolower	;wreg free
 16969                           
 16970                           ;stkvar	_ct @ sp[(-32)+26]
 16971  012828  0EFA               	movlw	-6
 16972  01282A  0060  F007  FFE3   	movff	btemp,plusw1
 16973                           
 16974                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 758:         if (ct[0]) {
 16975                           ;stkvar	_ct @ sp[(-32)+26]
 16976  012830  0EFA               	movlw	-6
 16977  012832  50E3               	movf	plusw1,w,c
 16978  012834  B4D8               	btfsc	status,2,c
 16979  012836  D05B               	goto	l13994
 16980                           
 16981                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 759:             ct[1] = tolo
      +                          wer((int)(*fmt)[1]);
 16982                           ;stkvar	_ct @ sp[(-32)+26]
 16983  012838  0EFB               	movlw	251
 16984  01283A  24E1               	addwf	fsr1l,w,c
 16985  01283C  6ED9               	movwf	fsr2l,c
 16986  01283E  0EFF               	movlw	255
 16987  012840  20E2               	addwfc	fsr1h,w,c
 16988  012842  6EDA               	movwf	fsr2h,c
 16989                           
 16990                           ;stkvar	_fmt @ sp[(-32)+-4]
 16991  012844  0EDC               	movlw	-36
 16992  012846  006F FF8F FFE9     	movff	plusw1,fsr0l
 16993  01284C  0EDD               	movlw	-35
 16994  01284E  006F FF8F FFEA     	movff	plusw1,fsr0h
 16995  012854  006F FFB8  F00B    	movff	postinc0,btemp+10
 16996  01285A  006F FFB4  F00C    	movff	postdec0,btemp+11
 16997  012860  0E01               	movlw	1
 16998  012862  260B               	addwf	(btemp+10)^0,f,c
 16999  012864  0E00               	movlw	0
 17000  012866  220C               	addwfc	(btemp+11)^0,f,c
 17001  012868  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 17002  01286E  0060  F033  FFF7   	movff	btemp+11,tblptrh
 17003  012874                     	if	0	;tblptru may be non-zero
 17004  012874                     	endif
 17005  012874                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17006  012874  0E00               	movlw	low (__mediumconst shr (0+16))
 17007  012876  6EF8               	movwf	tblptru,c
 17008  012878                     	endif
 17009  012878  0008               	tblrd		*
 17010  01287A  50F5               	movf	tablat,w,c
 17011  01287C  6EE6               	movwf	postinc1,c
 17012  01287E  0E00               	movlw	0
 17013  012880  6EE6               	movwf	postinc1,c
 17014  012882  ECE7  F0E1         	call	_tolower	;wreg free
 17015  012886  5001               	movf	btemp^0,w,c
 17016  012888  6EDF               	movwf	indf2,c
 17017                           
 17018                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 760:             if (ct[1]) {
 17019                           ;stkvar	_ct @ sp[(-32)+26]
 17020  01288A  0EFB               	movlw	251
 17021  01288C  24E1               	addwf	fsr1l,w,c
 17022  01288E  6ED9               	movwf	fsr2l,c
 17023  012890  0EFF               	movlw	255
 17024  012892  20E2               	addwfc	fsr1h,w,c
 17025  012894  6EDA               	movwf	fsr2h,c
 17026  012896  50DF               	movf	indf2,w,c
 17027  012898  B4D8               	btfsc	status,2,c
 17028  01289A  D029               	goto	l13994
 17029                           
 17030                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 761:                 ct[2] = 
      +                          tolower((int)(*fmt)[2]);
 17031                           ;stkvar	_ct @ sp[(-32)+26]
 17032  01289C  0EFC               	movlw	252
 17033  01289E  24E1               	addwf	fsr1l,w,c
 17034  0128A0  6ED9               	movwf	fsr2l,c
 17035  0128A2  0EFF               	movlw	255
 17036  0128A4  20E2               	addwfc	fsr1h,w,c
 17037  0128A6  6EDA               	movwf	fsr2h,c
 17038                           
 17039                           ;stkvar	_fmt @ sp[(-32)+-4]
 17040  0128A8  0EDC               	movlw	-36
 17041  0128AA  006F FF8F FFE9     	movff	plusw1,fsr0l
 17042  0128B0  0EDD               	movlw	-35
 17043  0128B2  006F FF8F FFEA     	movff	plusw1,fsr0h
 17044  0128B8  006F FFB8  F00B    	movff	postinc0,btemp+10
 17045  0128BE  006F FFB4  F00C    	movff	postdec0,btemp+11
 17046  0128C4  0E02               	movlw	2
 17047  0128C6  260B               	addwf	(btemp+10)^0,f,c
 17048  0128C8  0E00               	movlw	0
 17049  0128CA  220C               	addwfc	(btemp+11)^0,f,c
 17050  0128CC  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 17051  0128D2  0060  F033  FFF7   	movff	btemp+11,tblptrh
 17052  0128D8                     	if	0	;tblptru may be non-zero
 17053  0128D8                     	endif
 17054  0128D8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17055  0128D8  0E00               	movlw	low (__mediumconst shr (0+16))
 17056  0128DA  6EF8               	movwf	tblptru,c
 17057  0128DC                     	endif
 17058  0128DC  0008               	tblrd		*
 17059  0128DE  50F5               	movf	tablat,w,c
 17060  0128E0  6EE6               	movwf	postinc1,c
 17061  0128E2  0E00               	movlw	0
 17062  0128E4  6EE6               	movwf	postinc1,c
 17063  0128E6  ECE7  F0E1         	call	_tolower	;wreg free
 17064  0128EA  5001               	movf	btemp^0,w,c
 17065  0128EC  6EDF               	movwf	indf2,c
 17066  0128EE                     l13994:
 17067                           
 17068                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
 17069                           ;stkvar	_fmt @ sp[(-32)+-4]
 17070  0128EE  0EDC               	movlw	-36
 17071  0128F0  006F FF8F FFD9     	movff	plusw1,fsr2l
 17072  0128F6  0EDD               	movlw	-35
 17073  0128F8  006F FF8F FFDA     	movff	plusw1,fsr2h
 17074  0128FE  006F FF7B FFF6     	movff	postinc2,tblptrl
 17075  012904  006F FF77 FFF7     	movff	postdec2,tblptrh
 17076  01290A                     	if	0	;tblptru may be non-zero
 17077  01290A                     	endif
 17078  01290A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17079  01290A  0E00               	movlw	low (__mediumconst shr (0+16))
 17080  01290C  6EF8               	movwf	tblptru,c
 17081  01290E                     	endif
 17082  01290E  0008               	tblrd		*
 17083  012910  50F5               	movf	tablat,w,c
 17084  012912  0A63               	xorlw	99
 17085  012914  A4D8               	btfss	status,2,c
 17086  012916  D037               	goto	l14004
 17087                           
 17088                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
 17089                           ;stkvar	_fmt @ sp[(-32)+-4]
 17090  012918  0EDC               	movlw	-36
 17091  01291A  006F FF8F FFD9     	movff	plusw1,fsr2l
 17092  012920  0EDD               	movlw	-35
 17093  012922  006F FF8F FFDA     	movff	plusw1,fsr2h
 17094  012928  2ADE               	incf	postinc2,f,c
 17095  01292A  0E00               	movlw	0
 17096  01292C  22DD               	addwfc	postdec2,f,c
 17097                           
 17098                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
 17099                           ;stkvar	_ap @ sp[(-32)+-6]
 17100  01292E  0EDA               	movlw	-38
 17101  012930  006F FF8F FFD9     	movff	plusw1,fsr2l
 17102  012936  0EDB               	movlw	-37
 17103  012938  006F FF8F FFDA     	movff	plusw1,fsr2h
 17104  01293E  0E02               	movlw	2
 17105  012940  5EDE               	subwf	postinc2,f,c
 17106  012942  0E00               	movlw	0
 17107  012944  5ADD               	subwfb	postdec2,f,c
 17108  012946  006F FF78  F00B    	movff	postinc2,btemp+10
 17109  01294C  006F FF74  F00C    	movff	postdec2,btemp+11
 17110  012952  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 17111  012958  0060  F033  FFDA   	movff	btemp+11,fsr2h
 17112  01295E  50DF               	movf	indf2,w,c
 17113  012960  6E0C               	movwf	(btemp+11)^0,c
 17114                           
 17115                           ;stkvar	_c @ sp[(-32)+31]
 17116  012962  0EFF               	movlw	-1
 17117  012964  0060  F033  FFE3   	movff	btemp+11,plusw1
 17118                           
 17119                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
 17120                           ;stkvar	_c @ sp[(-32)+31]
 17121  01296A  0EFF               	movlw	-1
 17122  01296C  50E3               	movf	plusw1,w,c
 17123  01296E  6EE6               	movwf	postinc1,c
 17124                           
 17125                           ;stkvar	_fp @ sp[(-33)+-2]
 17126  012970  0EDD               	movlw	-35
 17127  012972  006F FF8F FFE6     	movff	plusw1,postinc1
 17128  012978  006F FF8F FFE6     	movff	plusw1,postinc1
 17129  01297E  EC61  F0E1         	call	_ctoa	;wreg free
 17130  012982  EF3C  F09A         	goto	l2650
 17131  012986                     l14004:
 17132                           
 17133                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
 17134                           ;stkvar	_fmt @ sp[(-32)+-4]
 17135  012986  0EDC               	movlw	-36
 17136  012988  006F FF8F FFD9     	movff	plusw1,fsr2l
 17137  01298E  0EDD               	movlw	-35
 17138  012990  006F FF8F FFDA     	movff	plusw1,fsr2h
 17139  012996  006F FF7B FFF6     	movff	postinc2,tblptrl
 17140  01299C  006F FF77 FFF7     	movff	postdec2,tblptrh
 17141  0129A2                     	if	0	;tblptru may be non-zero
 17142  0129A2                     	endif
 17143  0129A2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17144  0129A2  0E00               	movlw	low (__mediumconst shr (0+16))
 17145  0129A4  6EF8               	movwf	tblptru,c
 17146  0129A6                     	endif
 17147  0129A6  0008               	tblrd		*
 17148  0129A8  50F5               	movf	tablat,w,c
 17149  0129AA  0A64               	xorlw	100
 17150  0129AC  B4D8               	btfsc	status,2,c
 17151  0129AE  D015               	goto	u13420
 17152                           
 17153                           ;stkvar	_fmt @ sp[(-32)+-4]
 17154  0129B0  0EDC               	movlw	-36
 17155  0129B2  006F FF8F FFD9     	movff	plusw1,fsr2l
 17156  0129B8  0EDD               	movlw	-35
 17157  0129BA  006F FF8F FFDA     	movff	plusw1,fsr2h
 17158  0129C0  006F FF7B FFF6     	movff	postinc2,tblptrl
 17159  0129C6  006F FF77 FFF7     	movff	postdec2,tblptrh
 17160  0129CC                     	if	0	;tblptru may be non-zero
 17161  0129CC                     	endif
 17162  0129CC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17163  0129CC  0E00               	movlw	low (__mediumconst shr (0+16))
 17164  0129CE  6EF8               	movwf	tblptru,c
 17165  0129D0                     	endif
 17166  0129D0  0008               	tblrd		*
 17167  0129D2  50F5               	movf	tablat,w,c
 17168  0129D4  0A69               	xorlw	105
 17169  0129D6  A4D8               	btfss	status,2,c
 17170  0129D8  D076               	goto	l14016
 17171  0129DA                     u13420:
 17172                           
 17173                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
 17174                           ;stkvar	_fmt @ sp[(-32)+-4]
 17175  0129DA  0EDC               	movlw	-36
 17176  0129DC  006F FF8F FFD9     	movff	plusw1,fsr2l
 17177  0129E2  0EDD               	movlw	-35
 17178  0129E4  006F FF8F FFDA     	movff	plusw1,fsr2h
 17179  0129EA  2ADE               	incf	postinc2,f,c
 17180  0129EC  0E00               	movlw	0
 17181  0129EE  22DD               	addwfc	postdec2,f,c
 17182                           
 17183                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
 17184                           ;stkvar	_ap @ sp[(-32)+-6]
 17185  0129F0  0EDA               	movlw	-38
 17186  0129F2  006F FF8F FFD9     	movff	plusw1,fsr2l
 17187  0129F8  0EDB               	movlw	-37
 17188  0129FA  006F FF8F FFDA     	movff	plusw1,fsr2h
 17189  012A00  0E02               	movlw	2
 17190  012A02  5EDE               	subwf	postinc2,f,c
 17191  012A04  0E00               	movlw	0
 17192  012A06  5ADD               	subwfb	postdec2,f,c
 17193  012A08  006F FF78  F00B    	movff	postinc2,btemp+10
 17194  012A0E  006F FF74  F00C    	movff	postdec2,btemp+11
 17195  012A14  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 17196  012A1A  0060  F033  FFDA   	movff	btemp+11,fsr2h
 17197  012A20  006F FF78  F00B    	movff	postinc2,btemp+10
 17198  012A26  006F FF74  F00C    	movff	postdec2,btemp+11
 17199                           
 17200                           ;stkvar	_ll @ sp[(-32)+14]
 17201  012A2C  0EEE               	movlw	-18
 17202  012A2E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17203  012A34  0EEF               	movlw	-17
 17204  012A36  0060  F033  FFE3   	movff	btemp+11,plusw1
 17205  012A3C  6A01               	clrf	btemp^0,c
 17206  012A3E  BEE3               	btfsc	plusw1,7,c
 17207  012A40  6801               	setf	btemp^0,c
 17208  012A42  0EF0               	movlw	-16
 17209  012A44  0060  F007  FFE3   	movff	btemp,plusw1
 17210  012A4A  0EF1               	movlw	-15
 17211  012A4C  0060  F007  FFE3   	movff	btemp,plusw1
 17212  012A52  0EF2               	movlw	-14
 17213  012A54  0060  F007  FFE3   	movff	btemp,plusw1
 17214  012A5A  0EF3               	movlw	-13
 17215  012A5C  0060  F007  FFE3   	movff	btemp,plusw1
 17216  012A62  0EF4               	movlw	-12
 17217  012A64  0060  F007  FFE3   	movff	btemp,plusw1
 17218  012A6A  0EF5               	movlw	-11
 17219  012A6C  0060  F007  FFE3   	movff	btemp,plusw1
 17220  012A72                     l14012:
 17221                           
 17222                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
 17223                           ;stkvar	_ll @ sp[(-32)+14]
 17224  012A72  50E1               	movf	fsr1l,w,c
 17225  012A74  0FEE               	addlw	-18
 17226  012A76  6ED9               	movwf	fsr2l,c
 17227  012A78  50E2               	movf	fsr1h,w,c
 17228  012A7A  6EDA               	movwf	fsr2h,c
 17229  012A7C  0EFF               	movlw	255
 17230  012A7E  22DA               	addwfc	fsr2h,f,c
 17231  012A80  006F FF7B FFE6     	movff	postinc2,postinc1
 17232  012A86  006F FF7B FFE6     	movff	postinc2,postinc1
 17233  012A8C  006F FF7B FFE6     	movff	postinc2,postinc1
 17234  012A92  006F FF7B FFE6     	movff	postinc2,postinc1
 17235  012A98  006F FF7B FFE6     	movff	postinc2,postinc1
 17236  012A9E  006F FF7B FFE6     	movff	postinc2,postinc1
 17237  012AA4  006F FF7B FFE6     	movff	postinc2,postinc1
 17238  012AAA  006F FF7B FFE6     	movff	postinc2,postinc1
 17239                           
 17240                           ;stkvar	_fp @ sp[(-40)+-2]
 17241  012AB0  0ED6               	movlw	-42
 17242  012AB2  006F FF8F FFE6     	movff	plusw1,postinc1
 17243  012AB8  006F FF8F FFE6     	movff	plusw1,postinc1
 17244  012ABE  EC60  F0B2         	call	_dtoa	;wreg free
 17245  012AC2  EF3C  F09A         	goto	l2650
 17246  012AC6                     l14016:
 17247                           
 17248                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 835:         if (!strncmp(*fm
      +                          t, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", ((sizeof("li")/size
      +                          of("li"[0]))-1))) {
 17249  012AC6  0E02               	movlw	2
 17250  012AC8  6EE6               	movwf	postinc1,c
 17251  012ACA  0E00               	movlw	0
 17252  012ACC  6EE6               	movwf	postinc1,c
 17253  012ACE  0EEA               	movlw	low STR_102
 17254  012AD0  6EE6               	movwf	postinc1,c
 17255  012AD2  0EFF               	movlw	high STR_102
 17256  012AD4  6EE6               	movwf	postinc1,c
 17257                           
 17258                           ;stkvar	_fmt @ sp[(-36)+-4]
 17259  012AD6  0ED8               	movlw	-40
 17260  012AD8  006F FF8F FFD9     	movff	plusw1,fsr2l
 17261  012ADE  0ED9               	movlw	-39
 17262  012AE0  006F FF8F FFDA     	movff	plusw1,fsr2h
 17263  012AE6  006F FF78  F00B    	movff	postinc2,btemp+10
 17264  012AEC  006F FF74  F00C    	movff	postdec2,btemp+11
 17265  012AF2  0060  F02F  FFE6   	movff	btemp+10,postinc1
 17266  012AF8  0060  F033  FFE6   	movff	btemp+11,postinc1
 17267  012AFE  EC8D  F0C6         	call	_strncmp	;wreg free
 17268  012B02  5001               	movf	btemp^0,w,c
 17269  012B04  1002               	iorwf	(btemp+1)^0,w,c
 17270  012B06  B4D8               	btfsc	status,2,c
 17271  012B08  D022               	goto	u13440
 17272  012B0A  0E02               	movlw	2
 17273  012B0C  6EE6               	movwf	postinc1,c
 17274  012B0E  0E00               	movlw	0
 17275  012B10  6EE6               	movwf	postinc1,c
 17276  012B12  0EF0               	movlw	low STR_106
 17277  012B14  6EE6               	movwf	postinc1,c
 17278  012B16  0EFF               	movlw	high STR_106
 17279  012B18  6EE6               	movwf	postinc1,c
 17280                           
 17281                           ;stkvar	_fmt @ sp[(-36)+-4]
 17282  012B1A  0ED8               	movlw	-40
 17283  012B1C  006F FF8F FFD9     	movff	plusw1,fsr2l
 17284  012B22  0ED9               	movlw	-39
 17285  012B24  006F FF8F FFDA     	movff	plusw1,fsr2h
 17286  012B2A  006F FF78  F00B    	movff	postinc2,btemp+10
 17287  012B30  006F FF74  F00C    	movff	postdec2,btemp+11
 17288  012B36  0060  F02F  FFE6   	movff	btemp+10,postinc1
 17289  012B3C  0060  F033  FFE6   	movff	btemp+11,postinc1
 17290  012B42  EC8D  F0C6         	call	_strncmp	;wreg free
 17291  012B46  5001               	movf	btemp^0,w,c
 17292  012B48  1002               	iorwf	(btemp+1)^0,w,c
 17293  012B4A  A4D8               	btfss	status,2,c
 17294  012B4C  D069               	goto	l14028
 17295  012B4E                     u13440:
 17296                           
 17297                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 836: ;/opt/microchip/xc8/v2.1
      +                          0/pic/sources/c99/common/doprnt.c: 838:             *fmt += ((sizeof("ld")/sizeof("ld"[0
      +                          ]))-1);
 17298                           ;stkvar	_fmt @ sp[(-32)+-4]
 17299  012B4E  0EDC               	movlw	-36
 17300  012B50  006F FF8F FFD9     	movff	plusw1,fsr2l
 17301  012B56  0EDD               	movlw	-35
 17302  012B58  006F FF8F FFDA     	movff	plusw1,fsr2h
 17303  012B5E  0E02               	movlw	2
 17304  012B60  26DE               	addwf	postinc2,f,c
 17305  012B62  0E00               	movlw	0
 17306  012B64  22DD               	addwfc	postdec2,f,c
 17307                           
 17308                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 839:             ll = (long l
      +                          ong)(*(long *)__va_arg(*(long **)ap, (long)0));
 17309                           ;stkvar	_ap @ sp[(-32)+-6]
 17310  012B66  0EDA               	movlw	-38
 17311  012B68  006F FF8F FFD9     	movff	plusw1,fsr2l
 17312  012B6E  0EDB               	movlw	-37
 17313  012B70  006F FF8F FFDA     	movff	plusw1,fsr2h
 17314  012B76  0E04               	movlw	4
 17315  012B78  5EDE               	subwf	postinc2,f,c
 17316  012B7A  0E00               	movlw	0
 17317  012B7C  5ADD               	subwfb	postdec2,f,c
 17318  012B7E  006F FF78  F00B    	movff	postinc2,btemp+10
 17319  012B84  006F FF74  F00C    	movff	postdec2,btemp+11
 17320  012B8A  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 17321  012B90  0060  F033  FFDA   	movff	btemp+11,fsr2h
 17322  012B96  006F FF78  F009    	movff	postinc2,btemp+8
 17323  012B9C  006F FF78  F00A    	movff	postinc2,btemp+9
 17324  012BA2  006F FF78  F00B    	movff	postinc2,btemp+10
 17325  012BA8  006F FF78  F00C    	movff	postinc2,btemp+11
 17326  012BAE  0060  F024  F011   	movff	btemp+8,btemp+16
 17327  012BB4  0060  F028  F012   	movff	btemp+9,btemp+17
 17328  012BBA  0060  F02C  F013   	movff	btemp+10,btemp+18
 17329  012BC0  0060  F030  F014   	movff	btemp+11,btemp+19
 17330  012BC6  6A15               	clrf	(btemp+20)^0,c
 17331  012BC8  BE14               	btfsc	(btemp+19)^0,7,c
 17332  012BCA  6815               	setf	(btemp+20)^0,c
 17333  012BCC  0060  F054  F016   	movff	btemp+20,btemp+21
 17334  012BD2  0060  F054  F017   	movff	btemp+20,btemp+22
 17335  012BD8  0060  F054  F018   	movff	btemp+20,btemp+23
 17336                           
 17337                           ;stkvar	_ll @ sp[(-32)+14]
 17338  012BDE  0EEE               	movlw	-18
 17339  012BE0  0060  F047  FFE3   	movff	btemp+16,plusw1
 17340  012BE6  0EEF               	movlw	-17
 17341  012BE8  0060  F04B  FFE3   	movff	btemp+17,plusw1
 17342  012BEE  0EF0               	movlw	-16
 17343  012BF0  0060  F04F  FFE3   	movff	btemp+18,plusw1
 17344  012BF6  0EF1               	movlw	-15
 17345  012BF8  0060  F053  FFE3   	movff	btemp+19,plusw1
 17346  012BFE  0EF2               	movlw	-14
 17347  012C00  0060  F057  FFE3   	movff	btemp+20,plusw1
 17348  012C06  0EF3               	movlw	-13
 17349  012C08  0060  F05B  FFE3   	movff	btemp+21,plusw1
 17350  012C0E  0EF4               	movlw	-12
 17351  012C10  0060  F05F  FFE3   	movff	btemp+22,plusw1
 17352  012C16  0EF5               	movlw	-11
 17353  012C18  0060  F063  FFE3   	movff	btemp+23,plusw1
 17354  012C1E  D729               	goto	l14012
 17355  012C20                     l14028:
 17356                           
 17357                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 920:         if (ct[0] == 'f'
      +                          ) {
 17358                           ;stkvar	_ct @ sp[(-32)+26]
 17359  012C20  0EFA               	movlw	-6
 17360  012C22  006F FF8C  F001    	movff	plusw1,btemp
 17361  012C28  0E66               	movlw	102
 17362  012C2A  1801               	xorwf	btemp^0,w,c
 17363  012C2C  A4D8               	btfss	status,2,c
 17364  012C2E  D06E               	goto	l14040
 17365                           
 17366                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 922:             c = (*fmt)[0
      +                          ];
 17367                           ;stkvar	_fmt @ sp[(-32)+-4]
 17368  012C30  0EDC               	movlw	-36
 17369  012C32  006F FF8F FFD9     	movff	plusw1,fsr2l
 17370  012C38  0EDD               	movlw	-35
 17371  012C3A  006F FF8F FFDA     	movff	plusw1,fsr2h
 17372  012C40  006F FF7B FFF6     	movff	postinc2,tblptrl
 17373  012C46  006F FF77 FFF7     	movff	postdec2,tblptrh
 17374  012C4C                     	if	0	;tblptru may be non-zero
 17375  012C4C                     	endif
 17376  012C4C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17377  012C4C  0E00               	movlw	low (__mediumconst shr (0+16))
 17378  012C4E  6EF8               	movwf	tblptru,c
 17379  012C50                     	endif
 17380                           
 17381                           ;stkvar	_c @ sp[(-32)+31]
 17382  012C50  0008               	tblrd		*
 17383  012C52  0EFF               	movlw	-1
 17384  012C54  006F FFD7 FFE3     	movff	tablat,plusw1
 17385                           
 17386                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 923:             ++*fmt;
 17387                           ;stkvar	_fmt @ sp[(-32)+-4]
 17388  012C5A  0EDC               	movlw	-36
 17389  012C5C  006F FF8F FFD9     	movff	plusw1,fsr2l
 17390  012C62  0EDD               	movlw	-35
 17391  012C64  006F FF8F FFDA     	movff	plusw1,fsr2h
 17392  012C6A  2ADE               	incf	postinc2,f,c
 17393  012C6C  0E00               	movlw	0
 17394  012C6E  22DD               	addwfc	postdec2,f,c
 17395                           
 17396                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 924:             f = (long do
      +                          uble)(*(double *)__va_arg(*(double **)ap, (double)0));
 17397                           ;stkvar	_ap @ sp[(-32)+-6]
 17398  012C70  0EDA               	movlw	-38
 17399  012C72  006F FF8F FFD9     	movff	plusw1,fsr2l
 17400  012C78  0EDB               	movlw	-37
 17401  012C7A  006F FF8F FFDA     	movff	plusw1,fsr2h
 17402  012C80  0E04               	movlw	4
 17403  012C82  5EDE               	subwf	postinc2,f,c
 17404  012C84  0E00               	movlw	0
 17405  012C86  5ADD               	subwfb	postdec2,f,c
 17406  012C88  006F FF78  F00B    	movff	postinc2,btemp+10
 17407  012C8E  006F FF74  F00C    	movff	postdec2,btemp+11
 17408  012C94  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 17409  012C9A  0060  F033  FFDA   	movff	btemp+11,fsr2h
 17410  012CA0  006F FF78  F009    	movff	postinc2,btemp+8
 17411  012CA6  006F FF78  F00A    	movff	postinc2,btemp+9
 17412  012CAC  006F FF78  F00B    	movff	postinc2,btemp+10
 17413  012CB2  006F FF78  F00C    	movff	postinc2,btemp+11
 17414                           
 17415                           ;stkvar	_f @ sp[(-32)+22]
 17416  012CB8  0EF6               	movlw	-10
 17417  012CBA  0060  F027  FFE3   	movff	btemp+8,plusw1
 17418  012CC0  0EF7               	movlw	-9
 17419  012CC2  0060  F02B  FFE3   	movff	btemp+9,plusw1
 17420  012CC8  0EF8               	movlw	-8
 17421  012CCA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17422  012CD0  0EF9               	movlw	-7
 17423  012CD2  0060  F033  FFE3   	movff	btemp+11,plusw1
 17424  012CD8                     l14036:
 17425                           
 17426                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 926:             return efgto
      +                          a(fp, f, c);
 17427                           ;stkvar	_c @ sp[(-32)+31]
 17428  012CD8  0EFF               	movlw	-1
 17429  012CDA  50E3               	movf	plusw1,w,c
 17430  012CDC  6EE6               	movwf	postinc1,c
 17431                           
 17432                           ;stkvar	_f @ sp[(-33)+22]
 17433  012CDE  0EF5               	movlw	-11
 17434  012CE0  006F FF8F FFE6     	movff	plusw1,postinc1
 17435  012CE6  006F FF8F FFE6     	movff	plusw1,postinc1
 17436  012CEC  006F FF8F FFE6     	movff	plusw1,postinc1
 17437  012CF2  006F FF8F FFE6     	movff	plusw1,postinc1
 17438                           
 17439                           ;stkvar	_fp @ sp[(-37)+-2]
 17440  012CF8  0ED9               	movlw	-39
 17441  012CFA  006F FF8F FFE6     	movff	plusw1,postinc1
 17442  012D00  006F FF8F FFE6     	movff	plusw1,postinc1
 17443  012D06  EC49  F089         	call	_efgtoa	;wreg free
 17444  012D0A  D3B6               	goto	l2650
 17445  012D0C                     l14040:
 17446                           
 17447                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 928:         if (!strncmp(ct,
      +                           "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
 17448  012D0C  0E02               	movlw	2
 17449  012D0E  6EE6               	movwf	postinc1,c
 17450  012D10  0E00               	movlw	0
 17451  012D12  6EE6               	movwf	postinc1,c
 17452  012D14  0EED               	movlw	low STR_111
 17453  012D16  6EE6               	movwf	postinc1,c
 17454  012D18  0EFF               	movlw	high STR_111
 17455  012D1A  6EE6               	movwf	postinc1,c
 17456                           
 17457                           ;stkvar	_ct @ sp[(-36)+26]
 17458  012D1C  0EF6               	movlw	246
 17459  012D1E  24E1               	addwf	fsr1l,w,c
 17460  012D20  6E01               	movwf	btemp^0,c
 17461  012D22  0EFF               	movlw	255
 17462  012D24  20E2               	addwfc	fsr1h,w,c
 17463  012D26  6E02               	movwf	(btemp+1)^0,c
 17464  012D28  0060  F007  FFE6   	movff	btemp,postinc1
 17465  012D2E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 17466  012D34  EC8D  F0C6         	call	_strncmp	;wreg free
 17467  012D38  5001               	movf	btemp^0,w,c
 17468  012D3A  1002               	iorwf	(btemp+1)^0,w,c
 17469  012D3C  A4D8               	btfss	status,2,c
 17470  012D3E  D096               	goto	l14060
 17471                           
 17472                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 931:             if ((0 ? isu
      +                          pper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
 17473                           ;stkvar	_fmt @ sp[(-32)+-4]
 17474  012D40  0EDC               	movlw	-36
 17475  012D42  006F FF8F FFD9     	movff	plusw1,fsr2l
 17476  012D48  0EDD               	movlw	-35
 17477  012D4A  006F FF8F FFDA     	movff	plusw1,fsr2h
 17478  012D50  006F FF78  F00B    	movff	postinc2,btemp+10
 17479  012D56  006F FF74  F00C    	movff	postdec2,btemp+11
 17480  012D5C  0E01               	movlw	1
 17481  012D5E  260B               	addwf	(btemp+10)^0,f,c
 17482  012D60  0E00               	movlw	0
 17483  012D62  220C               	addwfc	(btemp+11)^0,f,c
 17484  012D64  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 17485  012D6A  0060  F033  FFF7   	movff	btemp+11,tblptrh
 17486  012D70                     	if	0	;tblptru may be non-zero
 17487  012D70                     	endif
 17488  012D70                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17489  012D70  0E00               	movlw	low (__mediumconst shr (0+16))
 17490  012D72  6EF8               	movwf	tblptru,c
 17491  012D74                     	endif
 17492                           
 17493                           ;stkvar	_c @ sp[(-32)+31]
 17494  012D74  0008               	tblrd		*
 17495  012D76  0EFF               	movlw	-1
 17496  012D78  006F FFD7 FFE3     	movff	tablat,plusw1
 17497  012D7E  0EBF               	movlw	191
 17498  012D80  6E0B               	movwf	(btemp+10)^0,c
 17499  012D82  0EFF               	movlw	255
 17500  012D84  6E0C               	movwf	(btemp+11)^0,c
 17501                           
 17502                           ;stkvar	_fmt @ sp[(-32)+-4]
 17503  012D86  0EDC               	movlw	-36
 17504  012D88  006F FF8F FFD9     	movff	plusw1,fsr2l
 17505  012D8E  0EDD               	movlw	-35
 17506  012D90  006F FF8F FFDA     	movff	plusw1,fsr2h
 17507  012D96  006F FF7B FFF6     	movff	postinc2,tblptrl
 17508  012D9C  006F FF77 FFF7     	movff	postdec2,tblptrh
 17509  012DA2                     	if	0	;tblptru may be non-zero
 17510  012DA2                     	endif
 17511  012DA2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17512  012DA2  0E00               	movlw	low (__mediumconst shr (0+16))
 17513  012DA4  6EF8               	movwf	tblptru,c
 17514  012DA6                     	endif
 17515  012DA6  0008               	tblrd		*
 17516  012DA8  50F5               	movf	tablat,w,c
 17517  012DAA  6E09               	movwf	(btemp+8)^0,c
 17518  012DAC  6A0A               	clrf	(btemp+9)^0,c
 17519  012DAE  500B               	movf	(btemp+10)^0,w,c
 17520  012DB0  2609               	addwf	(btemp+8)^0,f,c
 17521  012DB2  500C               	movf	(btemp+11)^0,w,c
 17522  012DB4  220A               	addwfc	(btemp+9)^0,f,c
 17523  012DB6  500A               	movf	(btemp+9)^0,w,c
 17524  012DB8  E106               	bnz	u13470
 17525  012DBA  0E1A               	movlw	26
 17526  012DBC  5C09               	subwf	(btemp+8)^0,w,c
 17527  012DBE  B0D8               	btfsc	status,0,c
 17528  012DC0  D002               	goto	u13470
 17529  012DC2  0E01               	movlw	1
 17530  012DC4  D001               	goto	u13480
 17531  012DC6                     u13470:
 17532  012DC6  0E00               	movlw	0
 17533  012DC8                     u13480:
 17534  012DC8  6E0B               	movwf	(btemp+10)^0,c
 17535  012DCA  6A0C               	clrf	(btemp+11)^0,c
 17536                           
 17537                           ;stkvar	_vfpfcnvrt$6589 @ sp[(-32)+2]
 17538  012DCC  0EE2               	movlw	-30
 17539  012DCE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17540  012DD4  0EE3               	movlw	-29
 17541  012DD6  0060  F033  FFE3   	movff	btemp+11,plusw1
 17542                           
 17543                           ;stkvar	_vfpfcnvrt$6589 @ sp[(-32)+2]
 17544  012DDC  0EE2               	movlw	-30
 17545  012DDE  006F FF8C  F001    	movff	plusw1,btemp
 17546  012DE4  0EE3               	movlw	-29
 17547  012DE6  50E3               	movf	plusw1,w,c
 17548  012DE8  1001               	iorwf	btemp^0,w,c
 17549                           
 17550                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 934:                 f = (lon
      +                          g double)(*(double *)__va_arg(*(double **)ap, (double)0));
 17551                           ;stkvar	_ap @ sp[(-32)+-6]
 17552                           
 17553                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 933:             } else {
 17554                           
 17555                           ;stkvar	_f @ sp[(-32)+22]
 17556                           
 17557                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 932:                 f = (*(l
      +                          ong double *)__va_arg(*(long double **)ap, (long double)0));
 17558                           ;stkvar	_ap @ sp[(-32)+-6]
 17559  012DEA  0EDA               	movlw	-38
 17560  012DEC  006F FF8F FFD9     	movff	plusw1,fsr2l
 17561  012DF2  0EDB               	movlw	-37
 17562  012DF4  006F FF8F FFDA     	movff	plusw1,fsr2h
 17563  012DFA  0E04               	movlw	4
 17564  012DFC  5EDE               	subwf	postinc2,f,c
 17565  012DFE  0E00               	movlw	0
 17566  012E00  5ADD               	subwfb	postdec2,f,c
 17567  012E02  006F FF78  F00B    	movff	postinc2,btemp+10
 17568  012E08  006F FF74  F00C    	movff	postdec2,btemp+11
 17569  012E0E  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 17570  012E14  0060  F033  FFDA   	movff	btemp+11,fsr2h
 17571  012E1A  006F FF78  F009    	movff	postinc2,btemp+8
 17572  012E20  006F FF78  F00A    	movff	postinc2,btemp+9
 17573  012E26  006F FF78  F00B    	movff	postinc2,btemp+10
 17574  012E2C  006F FF78  F00C    	movff	postinc2,btemp+11
 17575                           
 17576                           ;stkvar	_f @ sp[(-32)+22]
 17577  012E32  0EF6               	movlw	-10
 17578  012E34  0060  F027  FFE3   	movff	btemp+8,plusw1
 17579  012E3A  0EF7               	movlw	-9
 17580  012E3C  0060  F02B  FFE3   	movff	btemp+9,plusw1
 17581  012E42  0EF8               	movlw	-8
 17582  012E44  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17583  012E4A  0EF9               	movlw	-7
 17584  012E4C  0060  F033  FFE3   	movff	btemp+11,plusw1
 17585                           
 17586                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 936:             *fmt += ((si
      +                          zeof("lf")/sizeof("lf"[0]))-1);
 17587                           ;stkvar	_fmt @ sp[(-32)+-4]
 17588  012E52  0EDC               	movlw	-36
 17589  012E54  006F FF8F FFD9     	movff	plusw1,fsr2l
 17590  012E5A  0EDD               	movlw	-35
 17591  012E5C  006F FF8F FFDA     	movff	plusw1,fsr2h
 17592  012E62  0E02               	movlw	2
 17593  012E64  26DE               	addwf	postinc2,f,c
 17594  012E66  0E00               	movlw	0
 17595  012E68  22DD               	addwfc	postdec2,f,c
 17596  012E6A  D736               	goto	l14036
 17597  012E6C                     l14060:
 17598                           
 17599                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
 17600                           ;stkvar	_fmt @ sp[(-32)+-4]
 17601  012E6C  0EDC               	movlw	-36
 17602  012E6E  006F FF8F FFD9     	movff	plusw1,fsr2l
 17603  012E74  0EDD               	movlw	-35
 17604  012E76  006F FF8F FFDA     	movff	plusw1,fsr2h
 17605  012E7C  006F FF7B FFF6     	movff	postinc2,tblptrl
 17606  012E82  006F FF77 FFF7     	movff	postdec2,tblptrh
 17607  012E88                     	if	0	;tblptru may be non-zero
 17608  012E88                     	endif
 17609  012E88                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17610  012E88  0E00               	movlw	low (__mediumconst shr (0+16))
 17611  012E8A  6EF8               	movwf	tblptru,c
 17612  012E8C                     	endif
 17613  012E8C  0008               	tblrd		*
 17614  012E8E  50F5               	movf	tablat,w,c
 17615  012E90  0A73               	xorlw	115
 17616  012E92  A4D8               	btfss	status,2,c
 17617  012E94  D042               	goto	l14070
 17618                           
 17619                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
 17620                           ;stkvar	_fmt @ sp[(-32)+-4]
 17621  012E96  0EDC               	movlw	-36
 17622  012E98  006F FF8F FFD9     	movff	plusw1,fsr2l
 17623  012E9E  0EDD               	movlw	-35
 17624  012EA0  006F FF8F FFDA     	movff	plusw1,fsr2h
 17625  012EA6  2ADE               	incf	postinc2,f,c
 17626  012EA8  0E00               	movlw	0
 17627  012EAA  22DD               	addwfc	postdec2,f,c
 17628                           
 17629                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
 17630                           ;stkvar	_ap @ sp[(-32)+-6]
 17631  012EAC  0EDA               	movlw	-38
 17632  012EAE  006F FF8F FFD9     	movff	plusw1,fsr2l
 17633  012EB4  0EDB               	movlw	-37
 17634  012EB6  006F FF8F FFDA     	movff	plusw1,fsr2h
 17635  012EBC  0E02               	movlw	2
 17636  012EBE  5EDE               	subwf	postinc2,f,c
 17637  012EC0  0E00               	movlw	0
 17638  012EC2  5ADD               	subwfb	postdec2,f,c
 17639  012EC4  006F FF78  F00B    	movff	postinc2,btemp+10
 17640  012ECA  006F FF74  F00C    	movff	postdec2,btemp+11
 17641  012ED0  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 17642  012ED6  0060  F033  FFDA   	movff	btemp+11,fsr2h
 17643  012EDC  006F FF78  F00B    	movff	postinc2,btemp+10
 17644  012EE2  006F FF74  F00C    	movff	postdec2,btemp+11
 17645                           
 17646                           ;stkvar	_cp @ sp[(-32)+29]
 17647  012EE8  0EFE               	movlw	-2
 17648  012EEA  0060  F033  FFE3   	movff	btemp+11,plusw1
 17649  012EF0  0EFD               	movlw	-3
 17650  012EF2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17651                           
 17652                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
 17653                           ;stkvar	_cp @ sp[(-32)+29]
 17654  012EF8  0EFD               	movlw	-3
 17655  012EFA  006F FF8F FFE6     	movff	plusw1,postinc1
 17656  012F00  006F FF8F FFE6     	movff	plusw1,postinc1
 17657                           
 17658                           ;stkvar	_fp @ sp[(-34)+-2]
 17659  012F06  0EDC               	movlw	-36
 17660  012F08  006F FF8F FFE6     	movff	plusw1,postinc1
 17661  012F0E  006F FF8F FFE6     	movff	plusw1,postinc1
 17662  012F14  EC71  F0C0         	call	_stoa	;wreg free
 17663  012F18  D2AF               	goto	l2650
 17664  012F1A                     l14070:
 17665                           
 17666                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1182:         if (*fmt[0] == 
      +                          'u') {
 17667                           ;stkvar	_fmt @ sp[(-32)+-4]
 17668  012F1A  0EDC               	movlw	-36
 17669  012F1C  006F FF8F FFD9     	movff	plusw1,fsr2l
 17670  012F22  0EDD               	movlw	-35
 17671  012F24  006F FF8F FFDA     	movff	plusw1,fsr2h
 17672  012F2A  006F FF7B FFF6     	movff	postinc2,tblptrl
 17673  012F30  006F FF77 FFF7     	movff	postdec2,tblptrh
 17674  012F36                     	if	0	;tblptru may be non-zero
 17675  012F36                     	endif
 17676  012F36                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17677  012F36  0E00               	movlw	low (__mediumconst shr (0+16))
 17678  012F38  6EF8               	movwf	tblptru,c
 17679  012F3A                     	endif
 17680  012F3A  0008               	tblrd		*
 17681  012F3C  50F5               	movf	tablat,w,c
 17682  012F3E  0A75               	xorlw	117
 17683  012F40  A4D8               	btfss	status,2,c
 17684  012F42  D07C               	goto	l14080
 17685                           
 17686                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1184:             ++*fmt;
 17687                           ;stkvar	_fmt @ sp[(-32)+-4]
 17688  012F44  0EDC               	movlw	-36
 17689  012F46  006F FF8F FFD9     	movff	plusw1,fsr2l
 17690  012F4C  0EDD               	movlw	-35
 17691  012F4E  006F FF8F FFDA     	movff	plusw1,fsr2h
 17692  012F54  2ADE               	incf	postinc2,f,c
 17693  012F56  0E00               	movlw	0
 17694  012F58  22DD               	addwfc	postdec2,f,c
 17695                           
 17696                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1185:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
 17697                           ;stkvar	_ap @ sp[(-32)+-6]
 17698  012F5A  0EDA               	movlw	-38
 17699  012F5C  006F FF8F FFD9     	movff	plusw1,fsr2l
 17700  012F62  0EDB               	movlw	-37
 17701  012F64  006F FF8F FFDA     	movff	plusw1,fsr2h
 17702  012F6A  0E02               	movlw	2
 17703  012F6C  5EDE               	subwf	postinc2,f,c
 17704  012F6E  0E00               	movlw	0
 17705  012F70  5ADD               	subwfb	postdec2,f,c
 17706  012F72  006F FF78  F00B    	movff	postinc2,btemp+10
 17707  012F78  006F FF74  F00C    	movff	postdec2,btemp+11
 17708  012F7E  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 17709  012F84  0060  F033  FFDA   	movff	btemp+11,fsr2h
 17710  012F8A  006F FF78  F00B    	movff	postinc2,btemp+10
 17711  012F90  006F FF74  F00C    	movff	postdec2,btemp+11
 17712  012F96  500B               	movf	(btemp+10)^0,w,c
 17713  012F98  6E11               	movwf	(btemp+16)^0,c
 17714  012F9A  500C               	movf	(btemp+11)^0,w,c
 17715  012F9C  6E12               	movwf	(btemp+17)^0,c
 17716  012F9E  6A13               	clrf	(btemp+18)^0,c
 17717  012FA0  6A14               	clrf	(btemp+19)^0,c
 17718  012FA2  6A15               	clrf	(btemp+20)^0,c
 17719  012FA4  6A16               	clrf	(btemp+21)^0,c
 17720  012FA6  6A17               	clrf	(btemp+22)^0,c
 17721  012FA8  6A18               	clrf	(btemp+23)^0,c
 17722                           
 17723                           ;stkvar	_llu @ sp[(-32)+6]
 17724  012FAA  0EE6               	movlw	-26
 17725  012FAC  0060  F047  FFE3   	movff	btemp+16,plusw1
 17726  012FB2  0EE7               	movlw	-25
 17727  012FB4  0060  F04B  FFE3   	movff	btemp+17,plusw1
 17728  012FBA  0EE8               	movlw	-24
 17729  012FBC  0060  F04F  FFE3   	movff	btemp+18,plusw1
 17730  012FC2  0EE9               	movlw	-23
 17731  012FC4  0060  F053  FFE3   	movff	btemp+19,plusw1
 17732  012FCA  0EEA               	movlw	-22
 17733  012FCC  0060  F057  FFE3   	movff	btemp+20,plusw1
 17734  012FD2  0EEB               	movlw	-21
 17735  012FD4  0060  F05B  FFE3   	movff	btemp+21,plusw1
 17736  012FDA  0EEC               	movlw	-20
 17737  012FDC  0060  F05F  FFE3   	movff	btemp+22,plusw1
 17738  012FE2  0EED               	movlw	-19
 17739  012FE4  0060  F063  FFE3   	movff	btemp+23,plusw1
 17740                           
 17741                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1187:             return utoa
      +                          (fp, llu);
 17742                           ;stkvar	_llu @ sp[(-32)+6]
 17743  012FEA  50E1               	movf	fsr1l,w,c
 17744  012FEC  0FE6               	addlw	-26
 17745  012FEE  6ED9               	movwf	fsr2l,c
 17746  012FF0  50E2               	movf	fsr1h,w,c
 17747  012FF2  6EDA               	movwf	fsr2h,c
 17748  012FF4  0EFF               	movlw	255
 17749  012FF6  22DA               	addwfc	fsr2h,f,c
 17750  012FF8  006F FF7B FFE6     	movff	postinc2,postinc1
 17751  012FFE  006F FF7B FFE6     	movff	postinc2,postinc1
 17752  013004  006F FF7B FFE6     	movff	postinc2,postinc1
 17753  01300A  006F FF7B FFE6     	movff	postinc2,postinc1
 17754  013010  006F FF7B FFE6     	movff	postinc2,postinc1
 17755  013016  006F FF7B FFE6     	movff	postinc2,postinc1
 17756  01301C  006F FF7B FFE6     	movff	postinc2,postinc1
 17757  013022  006F FF7B FFE6     	movff	postinc2,postinc1
 17758                           
 17759                           ;stkvar	_fp @ sp[(-40)+-2]
 17760  013028  0ED6               	movlw	-42
 17761  01302A  006F FF8F FFE6     	movff	plusw1,postinc1
 17762  013030  006F FF8F FFE6     	movff	plusw1,postinc1
 17763  013036  EC59  F0BA         	call	_utoa	;wreg free
 17764  01303A  D21E               	goto	l2650
 17765  01303C                     l14080:
 17766                           
 17767                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1192:         if (!strncmp(*f
      +                          mt, "lu", ((sizeof("lu")/sizeof("lu"[0]))-1))) {
 17768  01303C  0E02               	movlw	2
 17769  01303E  6EE6               	movwf	postinc1,c
 17770  013040  0E00               	movlw	0
 17771  013042  6EE6               	movwf	postinc1,c
 17772  013044  0EF3               	movlw	low STR_116
 17773  013046  6EE6               	movwf	postinc1,c
 17774  013048  0EFF               	movlw	high STR_116
 17775  01304A  6EE6               	movwf	postinc1,c
 17776                           
 17777                           ;stkvar	_fmt @ sp[(-36)+-4]
 17778  01304C  0ED8               	movlw	-40
 17779  01304E  006F FF8F FFD9     	movff	plusw1,fsr2l
 17780  013054  0ED9               	movlw	-39
 17781  013056  006F FF8F FFDA     	movff	plusw1,fsr2h
 17782  01305C  006F FF78  F00B    	movff	postinc2,btemp+10
 17783  013062  006F FF74  F00C    	movff	postdec2,btemp+11
 17784  013068  0060  F02F  FFE6   	movff	btemp+10,postinc1
 17785  01306E  0060  F033  FFE6   	movff	btemp+11,postinc1
 17786  013074  EC8D  F0C6         	call	_strncmp	;wreg free
 17787  013078  5001               	movf	btemp^0,w,c
 17788  01307A  1002               	iorwf	(btemp+1)^0,w,c
 17789  01307C  A4D8               	btfss	status,2,c
 17790  01307E  D039               	goto	l14090
 17791                           
 17792                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1194:             *fmt += ((s
      +                          izeof("lu")/sizeof("lu"[0]))-1);
 17793                           ;stkvar	_fmt @ sp[(-32)+-4]
 17794  013080  0EDC               	movlw	-36
 17795  013082  006F FF8F FFD9     	movff	plusw1,fsr2l
 17796  013088  0EDD               	movlw	-35
 17797  01308A  006F FF8F FFDA     	movff	plusw1,fsr2h
 17798  013090  0E02               	movlw	2
 17799  013092  26DE               	addwf	postinc2,f,c
 17800  013094  0E00               	movlw	0
 17801  013096  22DD               	addwfc	postdec2,f,c
 17802                           
 17803                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1195:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
 17804                           ;stkvar	_ap @ sp[(-32)+-6]
 17805  013098  0EDA               	movlw	-38
 17806  01309A  006F FF8F FFD9     	movff	plusw1,fsr2l
 17807  0130A0  0EDB               	movlw	-37
 17808  0130A2  006F FF8F FFDA     	movff	plusw1,fsr2h
 17809  0130A8  0E04               	movlw	4
 17810  0130AA  5EDE               	subwf	postinc2,f,c
 17811  0130AC  0E00               	movlw	0
 17812  0130AE  5ADD               	subwfb	postdec2,f,c
 17813  0130B0  006F FF78  F00B    	movff	postinc2,btemp+10
 17814  0130B6  006F FF74  F00C    	movff	postdec2,btemp+11
 17815  0130BC  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 17816  0130C2  0060  F033  FFDA   	movff	btemp+11,fsr2h
 17817  0130C8  006F FF78  F009    	movff	postinc2,btemp+8
 17818  0130CE  006F FF78  F00A    	movff	postinc2,btemp+9
 17819  0130D4  006F FF78  F00B    	movff	postinc2,btemp+10
 17820  0130DA  006F FF78  F00C    	movff	postinc2,btemp+11
 17821  0130E0  5009               	movf	(btemp+8)^0,w,c
 17822  0130E2  6E11               	movwf	(btemp+16)^0,c
 17823  0130E4  500A               	movf	(btemp+9)^0,w,c
 17824  0130E6  6E12               	movwf	(btemp+17)^0,c
 17825  0130E8  500B               	movf	(btemp+10)^0,w,c
 17826  0130EA  6E13               	movwf	(btemp+18)^0,c
 17827  0130EC  500C               	movf	(btemp+11)^0,w,c
 17828  0130EE  6E14               	movwf	(btemp+19)^0,c
 17829  0130F0  D758               	goto	L16
 17830  0130F2                     l14090:
 17831                           
 17832                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1274:         if ((*fmt[0] ==
      +                           'x') || (*fmt[0] == 'X')) {
 17833                           ;stkvar	_fmt @ sp[(-32)+-4]
 17834  0130F2  0EDC               	movlw	-36
 17835  0130F4  006F FF8F FFD9     	movff	plusw1,fsr2l
 17836  0130FA  0EDD               	movlw	-35
 17837  0130FC  006F FF8F FFDA     	movff	plusw1,fsr2h
 17838  013102  006F FF7B FFF6     	movff	postinc2,tblptrl
 17839  013108  006F FF77 FFF7     	movff	postdec2,tblptrh
 17840  01310E                     	if	0	;tblptru may be non-zero
 17841  01310E                     	endif
 17842  01310E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17843  01310E  0E00               	movlw	low (__mediumconst shr (0+16))
 17844  013110  6EF8               	movwf	tblptru,c
 17845  013112                     	endif
 17846  013112  0008               	tblrd		*
 17847  013114  50F5               	movf	tablat,w,c
 17848  013116  0A78               	xorlw	120
 17849  013118  B4D8               	btfsc	status,2,c
 17850  01311A  D015               	goto	u13540
 17851                           
 17852                           ;stkvar	_fmt @ sp[(-32)+-4]
 17853  01311C  0EDC               	movlw	-36
 17854  01311E  006F FF8F FFD9     	movff	plusw1,fsr2l
 17855  013124  0EDD               	movlw	-35
 17856  013126  006F FF8F FFDA     	movff	plusw1,fsr2h
 17857  01312C  006F FF7B FFF6     	movff	postinc2,tblptrl
 17858  013132  006F FF77 FFF7     	movff	postdec2,tblptrh
 17859  013138                     	if	0	;tblptru may be non-zero
 17860  013138                     	endif
 17861  013138                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17862  013138  0E00               	movlw	low (__mediumconst shr (0+16))
 17863  01313A  6EF8               	movwf	tblptru,c
 17864  01313C                     	endif
 17865  01313C  0008               	tblrd		*
 17866  01313E  50F5               	movf	tablat,w,c
 17867  013140  0A58               	xorlw	88
 17868  013142  A4D8               	btfss	status,2,c
 17869  013144  D094               	goto	l14104
 17870  013146                     u13540:
 17871                           
 17872                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1276:             c = (*fmt)[
      +                          0];
 17873                           ;stkvar	_fmt @ sp[(-32)+-4]
 17874  013146  0EDC               	movlw	-36
 17875  013148  006F FF8F FFD9     	movff	plusw1,fsr2l
 17876  01314E  0EDD               	movlw	-35
 17877  013150  006F FF8F FFDA     	movff	plusw1,fsr2h
 17878  013156  006F FF7B FFF6     	movff	postinc2,tblptrl
 17879  01315C  006F FF77 FFF7     	movff	postdec2,tblptrh
 17880  013162                     	if	0	;tblptru may be non-zero
 17881  013162                     	endif
 17882  013162                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17883  013162  0E00               	movlw	low (__mediumconst shr (0+16))
 17884  013164  6EF8               	movwf	tblptru,c
 17885  013166                     	endif
 17886                           
 17887                           ;stkvar	_c @ sp[(-32)+31]
 17888  013166  0008               	tblrd		*
 17889  013168  0EFF               	movlw	-1
 17890  01316A  006F FFD7 FFE3     	movff	tablat,plusw1
 17891                           
 17892                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1277:             ++*fmt;
 17893                           ;stkvar	_fmt @ sp[(-32)+-4]
 17894  013170  0EDC               	movlw	-36
 17895  013172  006F FF8F FFD9     	movff	plusw1,fsr2l
 17896  013178  0EDD               	movlw	-35
 17897  01317A  006F FF8F FFDA     	movff	plusw1,fsr2h
 17898  013180  2ADE               	incf	postinc2,f,c
 17899  013182  0E00               	movlw	0
 17900  013184  22DD               	addwfc	postdec2,f,c
 17901                           
 17902                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1278:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
 17903                           ;stkvar	_ap @ sp[(-32)+-6]
 17904  013186  0EDA               	movlw	-38
 17905  013188  006F FF8F FFD9     	movff	plusw1,fsr2l
 17906  01318E  0EDB               	movlw	-37
 17907  013190  006F FF8F FFDA     	movff	plusw1,fsr2h
 17908  013196  0E02               	movlw	2
 17909  013198  5EDE               	subwf	postinc2,f,c
 17910  01319A  0E00               	movlw	0
 17911  01319C  5ADD               	subwfb	postdec2,f,c
 17912  01319E  006F FF78  F00B    	movff	postinc2,btemp+10
 17913  0131A4  006F FF74  F00C    	movff	postdec2,btemp+11
 17914  0131AA  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 17915  0131B0  0060  F033  FFDA   	movff	btemp+11,fsr2h
 17916  0131B6  006F FF78  F00B    	movff	postinc2,btemp+10
 17917  0131BC  006F FF74  F00C    	movff	postdec2,btemp+11
 17918  0131C2  500B               	movf	(btemp+10)^0,w,c
 17919  0131C4  6E11               	movwf	(btemp+16)^0,c
 17920  0131C6  500C               	movf	(btemp+11)^0,w,c
 17921  0131C8  6E12               	movwf	(btemp+17)^0,c
 17922  0131CA  6A13               	clrf	(btemp+18)^0,c
 17923  0131CC  6A14               	clrf	(btemp+19)^0,c
 17924  0131CE  6A15               	clrf	(btemp+20)^0,c
 17925  0131D0  6A16               	clrf	(btemp+21)^0,c
 17926  0131D2  6A17               	clrf	(btemp+22)^0,c
 17927  0131D4  6A18               	clrf	(btemp+23)^0,c
 17928                           
 17929                           ;stkvar	_llu @ sp[(-32)+6]
 17930  0131D6  0EE6               	movlw	-26
 17931  0131D8  0060  F047  FFE3   	movff	btemp+16,plusw1
 17932  0131DE  0EE7               	movlw	-25
 17933  0131E0  0060  F04B  FFE3   	movff	btemp+17,plusw1
 17934  0131E6  0EE8               	movlw	-24
 17935  0131E8  0060  F04F  FFE3   	movff	btemp+18,plusw1
 17936  0131EE  0EE9               	movlw	-23
 17937  0131F0  0060  F053  FFE3   	movff	btemp+19,plusw1
 17938  0131F6  0EEA               	movlw	-22
 17939  0131F8  0060  F057  FFE3   	movff	btemp+20,plusw1
 17940  0131FE  0EEB               	movlw	-21
 17941  013200  0060  F05B  FFE3   	movff	btemp+21,plusw1
 17942  013206  0EEC               	movlw	-20
 17943  013208  0060  F05F  FFE3   	movff	btemp+22,plusw1
 17944  01320E  0EED               	movlw	-19
 17945  013210  0060  F063  FFE3   	movff	btemp+23,plusw1
 17946                           
 17947                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1280:             return xtoa
      +                          (fp, llu, c);
 17948                           ;stkvar	_c @ sp[(-32)+31]
 17949  013216  0EFF               	movlw	-1
 17950  013218  50E3               	movf	plusw1,w,c
 17951  01321A  6EE6               	movwf	postinc1,c
 17952                           
 17953                           ;stkvar	_llu @ sp[(-33)+6]
 17954  01321C  50E1               	movf	fsr1l,w,c
 17955  01321E  0FE5               	addlw	-27
 17956  013220  6ED9               	movwf	fsr2l,c
 17957  013222  50E2               	movf	fsr1h,w,c
 17958  013224  6EDA               	movwf	fsr2h,c
 17959  013226  0EFF               	movlw	255
 17960  013228  22DA               	addwfc	fsr2h,f,c
 17961  01322A  006F FF7B FFE6     	movff	postinc2,postinc1
 17962  013230  006F FF7B FFE6     	movff	postinc2,postinc1
 17963  013236  006F FF7B FFE6     	movff	postinc2,postinc1
 17964  01323C  006F FF7B FFE6     	movff	postinc2,postinc1
 17965  013242  006F FF7B FFE6     	movff	postinc2,postinc1
 17966  013248  006F FF7B FFE6     	movff	postinc2,postinc1
 17967  01324E  006F FF7B FFE6     	movff	postinc2,postinc1
 17968  013254  006F FF7B FFE6     	movff	postinc2,postinc1
 17969                           
 17970                           ;stkvar	_fp @ sp[(-41)+-2]
 17971  01325A  0ED5               	movlw	-43
 17972  01325C  006F FF8F FFE6     	movff	plusw1,postinc1
 17973  013262  006F FF8F FFE6     	movff	plusw1,postinc1
 17974  013268  ECC6  F0B6         	call	_xtoa	;wreg free
 17975  01326C  D105               	goto	l2650
 17976  01326E                     l14104:
 17977                           
 17978                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1285:         if (!strncmp(*f
      +                          mt, "lx", ((sizeof("lx")/sizeof("lx"[0]))-1)) || !strncmp(*fmt, "lX", ((sizeof("lX")/siz
      +                          eof("lX"[0]))-1))) {
 17979  01326E  0E02               	movlw	2
 17980  013270  6EE6               	movwf	postinc1,c
 17981  013272  0E00               	movlw	0
 17982  013274  6EE6               	movwf	postinc1,c
 17983  013276  0EF6               	movlw	low STR_121
 17984  013278  6EE6               	movwf	postinc1,c
 17985  01327A  0EFF               	movlw	high STR_121
 17986  01327C  6EE6               	movwf	postinc1,c
 17987                           
 17988                           ;stkvar	_fmt @ sp[(-36)+-4]
 17989  01327E  0ED8               	movlw	-40
 17990  013280  006F FF8F FFD9     	movff	plusw1,fsr2l
 17991  013286  0ED9               	movlw	-39
 17992  013288  006F FF8F FFDA     	movff	plusw1,fsr2h
 17993  01328E  006F FF78  F00B    	movff	postinc2,btemp+10
 17994  013294  006F FF74  F00C    	movff	postdec2,btemp+11
 17995  01329A  0060  F02F  FFE6   	movff	btemp+10,postinc1
 17996  0132A0  0060  F033  FFE6   	movff	btemp+11,postinc1
 17997  0132A6  EC8D  F0C6         	call	_strncmp	;wreg free
 17998  0132AA  5001               	movf	btemp^0,w,c
 17999  0132AC  1002               	iorwf	(btemp+1)^0,w,c
 18000  0132AE  B4D8               	btfsc	status,2,c
 18001  0132B0  D022               	goto	u13560
 18002  0132B2  0E02               	movlw	2
 18003  0132B4  6EE6               	movwf	postinc1,c
 18004  0132B6  0E00               	movlw	0
 18005  0132B8  6EE6               	movwf	postinc1,c
 18006  0132BA  0EE7               	movlw	low STR_125
 18007  0132BC  6EE6               	movwf	postinc1,c
 18008  0132BE  0EFF               	movlw	high STR_125
 18009  0132C0  6EE6               	movwf	postinc1,c
 18010                           
 18011                           ;stkvar	_fmt @ sp[(-36)+-4]
 18012  0132C2  0ED8               	movlw	-40
 18013  0132C4  006F FF8F FFD9     	movff	plusw1,fsr2l
 18014  0132CA  0ED9               	movlw	-39
 18015  0132CC  006F FF8F FFDA     	movff	plusw1,fsr2h
 18016  0132D2  006F FF78  F00B    	movff	postinc2,btemp+10
 18017  0132D8  006F FF74  F00C    	movff	postdec2,btemp+11
 18018  0132DE  0060  F02F  FFE6   	movff	btemp+10,postinc1
 18019  0132E4  0060  F033  FFE6   	movff	btemp+11,postinc1
 18020  0132EA  EC8D  F0C6         	call	_strncmp	;wreg free
 18021  0132EE  5001               	movf	btemp^0,w,c
 18022  0132F0  1002               	iorwf	(btemp+1)^0,w,c
 18023  0132F2  A4D8               	btfss	status,2,c
 18024  0132F4  D058               	goto	l14118
 18025  0132F6                     u13560:
 18026                           
 18027                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1286: ;/opt/microchip/xc8/v2.
      +                          10/pic/sources/c99/common/doprnt.c: 1288:             c = (*fmt)[1];
 18028                           ;stkvar	_fmt @ sp[(-32)+-4]
 18029  0132F6  0EDC               	movlw	-36
 18030  0132F8  006F FF8F FFD9     	movff	plusw1,fsr2l
 18031  0132FE  0EDD               	movlw	-35
 18032  013300  006F FF8F FFDA     	movff	plusw1,fsr2h
 18033  013306  006F FF78  F00B    	movff	postinc2,btemp+10
 18034  01330C  006F FF74  F00C    	movff	postdec2,btemp+11
 18035  013312  0E01               	movlw	1
 18036  013314  260B               	addwf	(btemp+10)^0,f,c
 18037  013316  0E00               	movlw	0
 18038  013318  220C               	addwfc	(btemp+11)^0,f,c
 18039  01331A  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 18040  013320  0060  F033  FFF7   	movff	btemp+11,tblptrh
 18041  013326                     	if	0	;tblptru may be non-zero
 18042  013326                     	endif
 18043  013326                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 18044  013326  0E00               	movlw	low (__mediumconst shr (0+16))
 18045  013328  6EF8               	movwf	tblptru,c
 18046  01332A                     	endif
 18047                           
 18048                           ;stkvar	_c @ sp[(-32)+31]
 18049  01332A  0008               	tblrd		*
 18050  01332C  0EFF               	movlw	-1
 18051  01332E  006F FFD7 FFE3     	movff	tablat,plusw1
 18052                           
 18053                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1289:             *fmt += ((s
      +                          izeof("lx")/sizeof("lx"[0]))-1);
 18054                           ;stkvar	_fmt @ sp[(-32)+-4]
 18055  013334  0EDC               	movlw	-36
 18056  013336  006F FF8F FFD9     	movff	plusw1,fsr2l
 18057  01333C  0EDD               	movlw	-35
 18058  01333E  006F FF8F FFDA     	movff	plusw1,fsr2h
 18059  013344  0E02               	movlw	2
 18060  013346  26DE               	addwf	postinc2,f,c
 18061  013348  0E00               	movlw	0
 18062  01334A  22DD               	addwfc	postdec2,f,c
 18063                           
 18064                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1290:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
 18065                           ;stkvar	_ap @ sp[(-32)+-6]
 18066  01334C  0EDA               	movlw	-38
 18067  01334E  006F FF8F FFD9     	movff	plusw1,fsr2l
 18068  013354  0EDB               	movlw	-37
 18069  013356  006F FF8F FFDA     	movff	plusw1,fsr2h
 18070  01335C  0E04               	movlw	4
 18071  01335E  5EDE               	subwf	postinc2,f,c
 18072  013360  0E00               	movlw	0
 18073  013362  5ADD               	subwfb	postdec2,f,c
 18074  013364  006F FF78  F00B    	movff	postinc2,btemp+10
 18075  01336A  006F FF74  F00C    	movff	postdec2,btemp+11
 18076  013370  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 18077  013376  0060  F033  FFDA   	movff	btemp+11,fsr2h
 18078  01337C  006F FF78  F009    	movff	postinc2,btemp+8
 18079  013382  006F FF78  F00A    	movff	postinc2,btemp+9
 18080  013388  006F FF78  F00B    	movff	postinc2,btemp+10
 18081  01338E  006F FF78  F00C    	movff	postinc2,btemp+11
 18082  013394  5009               	movf	(btemp+8)^0,w,c
 18083  013396  6E11               	movwf	(btemp+16)^0,c
 18084  013398  500A               	movf	(btemp+9)^0,w,c
 18085  01339A  6E12               	movwf	(btemp+17)^0,c
 18086  01339C  500B               	movf	(btemp+10)^0,w,c
 18087  01339E  6E13               	movwf	(btemp+18)^0,c
 18088  0133A0  500C               	movf	(btemp+11)^0,w,c
 18089  0133A2  6E14               	movwf	(btemp+19)^0,c
 18090  0133A4  D714               	goto	L17
 18091  0133A6                     l14118:
 18092                           
 18093                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
 18094                           ;stkvar	_fmt @ sp[(-32)+-4]
 18095  0133A6  0EDC               	movlw	-36
 18096  0133A8  006F FF8F FFD9     	movff	plusw1,fsr2l
 18097  0133AE  0EDD               	movlw	-35
 18098  0133B0  006F FF8F FFDA     	movff	plusw1,fsr2h
 18099  0133B6  006F FF7B FFF6     	movff	postinc2,tblptrl
 18100  0133BC  006F FF77 FFF7     	movff	postdec2,tblptrh
 18101  0133C2                     	if	0	;tblptru may be non-zero
 18102  0133C2                     	endif
 18103  0133C2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 18104  0133C2  0E00               	movlw	low (__mediumconst shr (0+16))
 18105  0133C4  6EF8               	movwf	tblptru,c
 18106  0133C6                     	endif
 18107  0133C6  0008               	tblrd		*
 18108  0133C8  50F5               	movf	tablat,w,c
 18109  0133CA  0A25               	xorlw	37
 18110  0133CC  A4D8               	btfss	status,2,c
 18111  0133CE  D01A               	goto	l14128
 18112                           
 18113                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
 18114                           ;stkvar	_fmt @ sp[(-32)+-4]
 18115  0133D0  0EDC               	movlw	-36
 18116  0133D2  006F FF8F FFD9     	movff	plusw1,fsr2l
 18117  0133D8  0EDD               	movlw	-35
 18118  0133DA  006F FF8F FFDA     	movff	plusw1,fsr2h
 18119  0133E0  2ADE               	incf	postinc2,f,c
 18120  0133E2  0E00               	movlw	0
 18121  0133E4  22DD               	addwfc	postdec2,f,c
 18122                           
 18123                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
 18124                           ;stkvar	_fp @ sp[(-32)+-2]
 18125  0133E6  0EDE               	movlw	-34
 18126  0133E8  006F FF8F FFE6     	movff	plusw1,postinc1
 18127  0133EE  006F FF8F FFE6     	movff	plusw1,postinc1
 18128  0133F4  0E25               	movlw	37
 18129  0133F6  6EE6               	movwf	postinc1,c
 18130  0133F8  0E00               	movlw	0
 18131  0133FA  6EE6               	movwf	postinc1,c
 18132  0133FC  EC88  F0D4         	call	_fputc	;wreg free
 18133  013400                     l14124:
 18134                           
 18135                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1353:             return 1;
 18136  013400  0E01               	movlw	1
 18137  013402  D00C               	goto	L18
 18138  013404                     l14128:
 18139                           
 18140                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
 18141                           ;stkvar	_fmt @ sp[(-32)+-4]
 18142  013404  0EDC               	movlw	-36
 18143  013406  006F FF8F FFD9     	movff	plusw1,fsr2l
 18144  01340C  0EDD               	movlw	-35
 18145  01340E  006F FF8F FFDA     	movff	plusw1,fsr2h
 18146  013414  2ADE               	incf	postinc2,f,c
 18147  013416  0E00               	movlw	0
 18148  013418  22DD               	addwfc	postdec2,f,c
 18149                           
 18150                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1358:         return 0;
 18151  01341A  0E00               	movlw	0
 18152  01341C                     L18:
 18153  01341C  6E01               	movwf	btemp^0,c
 18154  01341E  0E00               	movlw	0
 18155  013420  6E02               	movwf	(btemp+1)^0,c
 18156  013422  D02A               	goto	l2650
 18157  013424                     l14134:
 18158                           
 18159                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
 18160                           ;stkvar	_fp @ sp[(-32)+-2]
 18161  013424  0EDE               	movlw	-34
 18162  013426  006F FF8F FFE6     	movff	plusw1,postinc1
 18163  01342C  006F FF8F FFE6     	movff	plusw1,postinc1
 18164                           
 18165                           ;stkvar	_fmt @ sp[(-34)+-4]
 18166  013432  0EDA               	movlw	-38
 18167  013434  006F FF8F FFD9     	movff	plusw1,fsr2l
 18168  01343A  0EDB               	movlw	-37
 18169  01343C  006F FF8F FFDA     	movff	plusw1,fsr2h
 18170  013442  006F FF7B FFF6     	movff	postinc2,tblptrl
 18171  013448  006F FF77 FFF7     	movff	postdec2,tblptrh
 18172  01344E                     	if	0	;tblptru may be non-zero
 18173  01344E                     	endif
 18174  01344E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 18175  01344E  0E00               	movlw	low (__mediumconst shr (0+16))
 18176  013450  6EF8               	movwf	tblptru,c
 18177  013452                     	endif
 18178  013452  0008               	tblrd		*
 18179  013454  50F5               	movf	tablat,w,c
 18180  013456  6EE6               	movwf	postinc1,c
 18181  013458  0E00               	movlw	0
 18182  01345A  6EE6               	movwf	postinc1,c
 18183  01345C  EC88  F0D4         	call	_fputc	;wreg free
 18184                           
 18185                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
 18186                           ;stkvar	_fmt @ sp[(-32)+-4]
 18187  013460  0EDC               	movlw	-36
 18188  013462  006F FF8F FFD9     	movff	plusw1,fsr2l
 18189  013468  0EDD               	movlw	-35
 18190  01346A  006F FF8F FFDA     	movff	plusw1,fsr2h
 18191  013470  2ADE               	incf	postinc2,f,c
 18192  013472  0E00               	movlw	0
 18193  013474  22DD               	addwfc	postdec2,f,c
 18194  013476  D7C4               	goto	l14124
 18195  013478                     l2650:
 18196                           
 18197                           ; _vfpfcnvrt: autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, ar
      +                          gsize = 6, vargsize = 0
 18198  013478  0EDA               	movlw	218
 18199  01347A  26E1               	addwf	fsr1l,f,c
 18200  01347C  0EFF               	movlw	255
 18201  01347E  22E2               	addwfc	fsr1h,f,c
 18202  013480  0012               	return		;funcret
 18203  013482                     __end_of_vfpfcnvrt:
 18204                           	opt callstack 0
 18205                           
 18206 ;; *************** function _xtoa *****************
 18207 ;; Defined at:
 18208 ;;		line 623 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 18209 ;; Parameters:    Size  Location     Type
 18210 ;;  fp              2  [STACK] PTR struct _IO_FILE
 18211 ;;		 -> f(6), NULL(0), 
 18212 ;;  d               8  [STACK] unsigned long long 
 18213 ;;  x               1  [STACK] unsigned char 
 18214 ;; Auto vars:     Size  Location     Type
 18215 ;;  n               8  [STACK] unsigned long long 
 18216 ;;  c               2  [STACK] int 
 18217 ;;  i               2  [STACK] int 
 18218 ;;  w               2  [STACK] int 
 18219 ;;  p               2  [STACK] int 
 18220 ;; Return value:  Size  Location     Type
 18221 ;;                  2  [STACK] int 
 18222 ;; Registers used:
 18223 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 18224 ;; Tracked objects:
 18225 ;;		On entry : 0/0
 18226 ;;		On exit  : 0/0
 18227 ;;		Unchanged: 0/0
 18228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18229 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18230 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18232 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18233 ;;Total ram usage:        0 bytes
 18234 ;; Hardware stack levels used:    1
 18235 ;; Hardware stack levels required when called:   20
 18236 ;; This function calls:
 18237 ;;		_isalpha
 18238 ;;		_isupper
 18239 ;;		_pad
 18240 ;;		_toupper
 18241 ;; This function is called by:
 18242 ;;		_vfpfcnvrt
 18243 ;; This function uses a reentrant model
 18244 ;;
 18245                           
 18246                           	psect	text69
 18247  016D8C                     __ptext69:
 18248                           	opt callstack 0
 18249  016D8C                     _xtoa:
 18250                           	opt callstack 0
 18251                           
 18252                           ; autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsize = 11 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 18253  016D8C  0E14               	movlw	20
 18254  016D8E  26E1               	addwf	fsr1l,f,c
 18255  016D90  0E00               	movlw	0
 18256  016D92  22E2               	addwfc	fsr1h,f,c
 18257                           
 18258                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 623: static int xtoa(FILE *fp
      +                          , unsigned long long d, char x);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 624: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 625:     int c, i, p,
      +                           w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 626:     unsigned long lon
      +                          g n;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 629:     if (!(prec < 0))
      +                           {
 18259                           
 18260                           ;incstack = 0
 18261 ;; hardware stack exceeded
 18262  016D94  AE3D               	btfss	(_prec+1)^0,7,c
 18263                           
 18264                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 630:         flags &= ~(1 << 
      +                          1);
 18265  016D96  923E               	bcf	_flags^0,1,c
 18266                           
 18267                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 632:     p = (0 < prec) ? pre
      +                          c : 1;
 18268  016D98  BE3D               	btfsc	(_prec+1)^0,7,c
 18269  016D9A  D005               	goto	u13100
 18270  016D9C  503D               	movf	(_prec+1)^0,w,c
 18271  016D9E  E110               	bnz	l13854
 18272  016DA0  043C               	decf	_prec^0,w,c
 18273  016DA2  B0D8               	btfsc	status,0,c
 18274  016DA4  D00D               	goto	l13854
 18275  016DA6                     u13100:
 18276  016DA6  0E01               	movlw	1
 18277  016DA8  6E0B               	movwf	(btemp+10)^0,c
 18278  016DAA  0E00               	movlw	0
 18279  016DAC  6E0C               	movwf	(btemp+11)^0,c
 18280                           
 18281                           ;stkvar	_p @ sp[(-20)+18]
 18282  016DAE  0EFE               	movlw	-2
 18283  016DB0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18284  016DB6  0EFF               	movlw	-1
 18285  016DB8  0060  F033  FFE3   	movff	btemp+11,plusw1
 18286  016DBE  D008               	goto	l2600
 18287  016DC0                     l13854:
 18288                           
 18289                           ;stkvar	_p @ sp[(-20)+18]
 18290  016DC0  0EFE               	movlw	-2
 18291  016DC2  0060  F0F3  FFE3   	movff	_prec,plusw1
 18292  016DC8  0EFF               	movlw	-1
 18293  016DCA  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 18294  016DD0                     l2600:
 18295                           
 18296                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 633:     w = width;
 18297                           ;stkvar	_w @ sp[(-20)+16]
 18298  016DD0  0EFC               	movlw	-4
 18299  016DD2  0060  F0EB  FFE3   	movff	_width,plusw1
 18300  016DD8  0EFD               	movlw	-3
 18301  016DDA  0060  F0EF  FFE3   	movff	_width+1,plusw1
 18302                           
 18303                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 634:     if (flags & (1 << 4)
      +                          ) {
 18304  016DE0  A83E               	btfss	_flags^0,4,c
 18305  016DE2  D00B               	goto	l13860
 18306                           
 18307                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
 18308                           ;stkvar	_w @ sp[(-20)+16]
 18309  016DE4  50E1               	movf	fsr1l,w,c
 18310  016DE6  0FFC               	addlw	-4
 18311  016DE8  6ED9               	movwf	fsr2l,c
 18312  016DEA  50E2               	movf	fsr1h,w,c
 18313  016DEC  6EDA               	movwf	fsr2h,c
 18314  016DEE  0EFF               	movlw	255
 18315  016DF0  22DA               	addwfc	fsr2h,f,c
 18316  016DF2  0EFE               	movlw	254
 18317  016DF4  26DE               	addwf	postinc2,f,c
 18318  016DF6  0EFF               	movlw	255
 18319  016DF8  22DD               	addwfc	postdec2,f,c
 18320  016DFA                     l13860:
 18321                           
 18322                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 639:     n = d;
 18323                           ;stkvar	_d @ sp[(-20)+-10]
 18324  016DFA  0EE2               	movlw	226
 18325  016DFC  24E1               	addwf	fsr1l,w,c
 18326  016DFE  6ED9               	movwf	fsr2l,c
 18327  016E00  0EFF               	movlw	255
 18328  016E02  20E2               	addwfc	fsr1h,w,c
 18329  016E04  6EDA               	movwf	fsr2h,c
 18330                           
 18331                           ;stkvar	_n @ sp[(-20)+4]
 18332  016E06  0E08               	movlw	8
 18333  016E08  6E01               	movwf	btemp^0,c
 18334  016E0A  0EF0               	movlw	-16
 18335  016E0C                     us1312999:
 18336  016E0C  006F FF7B FFE3     	movff	postinc2,plusw1
 18337  016E12  28E8               	incf	wreg,w,c
 18338  016E14  2E01               	decfsz	btemp^0,f,c
 18339  016E16  D7FA               	bra	us1312999
 18340                           
 18341                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(dbuf) - 1
      +                          ;
 18342  016E18  0E4F               	movlw	79
 18343  016E1A  6E0B               	movwf	(btemp+10)^0,c
 18344  016E1C  0E00               	movlw	0
 18345  016E1E  6E0C               	movwf	(btemp+11)^0,c
 18346                           
 18347                           ;stkvar	_i @ sp[(-20)+14]
 18348  016E20  0EFA               	movlw	-6
 18349  016E22  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18350  016E28  0EFB               	movlw	-5
 18351  016E2A  0060  F033  FFE3   	movff	btemp+11,plusw1
 18352                           
 18353                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '\0';
 18354  016E30  0103               	movlb	3	; () banked
 18355  016E32  6BA3               	clrf	(_dbuf+79)& (0+255),b
 18356                           
 18357                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 18358  016E34  D0EE               	goto	l13898
 18359  016E36                     l13866:
 18360                           
 18361                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 643:         --i;
 18362                           ;stkvar	_i @ sp[(-20)+14]
 18363  016E36  50E1               	movf	fsr1l,w,c
 18364  016E38  0FFA               	addlw	-6
 18365  016E3A  6ED9               	movwf	fsr2l,c
 18366  016E3C  50E2               	movf	fsr1h,w,c
 18367  016E3E  6EDA               	movwf	fsr2h,c
 18368  016E40  0EFF               	movlw	255
 18369  016E42  22DA               	addwfc	fsr2h,f,c
 18370  016E44  06DE               	decf	postinc2,f,c
 18371  016E46  0E00               	movlw	0
 18372  016E48  5ADD               	subwfb	postdec2,f,c
 18373                           
 18374                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 644:         c = n & 0x0f;
 18375                           ;stkvar	_n @ sp[(-20)+4]
 18376  016E4A  0EF0               	movlw	-16
 18377  016E4C  006F FF8C  F00B    	movff	plusw1,btemp+10
 18378  016E52  0EF1               	movlw	-15
 18379  016E54  006F FF8C  F00C    	movff	plusw1,btemp+11
 18380  016E5A  0E0F               	movlw	15
 18381  016E5C  160B               	andwf	(btemp+10)^0,f,c
 18382  016E5E  0E00               	movlw	0
 18383  016E60  160C               	andwf	(btemp+11)^0,f,c
 18384                           
 18385                           ;stkvar	_c @ sp[(-20)+12]
 18386  016E62  0EF8               	movlw	-8
 18387  016E64  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18388  016E6A  0EF9               	movlw	-7
 18389  016E6C  0060  F033  FFE3   	movff	btemp+11,plusw1
 18390                           
 18391                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 645:         c = (c < 10) ? '
      +                          0' + c : 'a' + (c - 10);
 18392                           ;stkvar	_c @ sp[(-20)+12]
 18393  016E72  0EF9               	movlw	-7
 18394  016E74  BEE3               	btfsc	plusw1,7,c
 18395  016E76  D00F               	goto	l13874
 18396  016E78  0EF9               	movlw	-7
 18397  016E7A  50E3               	movf	plusw1,w,c
 18398  016E7C  E108               	bnz	u13130
 18399  016E7E  0EF8               	movlw	-8
 18400  016E80  006F FF8C  F001    	movff	plusw1,btemp
 18401  016E86  0E0A               	movlw	10
 18402  016E88  5E01               	subwf	btemp^0,f,c
 18403  016E8A  A0D8               	btfss	status,0,c
 18404  016E8C  D004               	goto	l13874
 18405  016E8E                     u13130:
 18406                           
 18407                           ;stkvar	_c @ sp[(-20)+12]
 18408  016E8E  0EF8               	movlw	-8
 18409  016E90  50E3               	movf	plusw1,w,c
 18410  016E92  0F57               	addlw	87
 18411  016E94  D003               	goto	L19
 18412  016E96                     l13874:
 18413                           
 18414                           ;stkvar	_c @ sp[(-20)+12]
 18415  016E96  0EF8               	movlw	-8
 18416  016E98  50E3               	movf	plusw1,w,c
 18417  016E9A  0F30               	addlw	48
 18418  016E9C                     L19:
 18419  016E9C  6E0B               	movwf	(btemp+10)^0,c
 18420  016E9E  0EF9               	movlw	-7
 18421  016EA0  006F FF8C  F00C    	movff	plusw1,btemp+11
 18422  016EA6  0E00               	movlw	0
 18423  016EA8  220C               	addwfc	(btemp+11)^0,f,c
 18424                           
 18425                           ;stkvar	_c @ sp[(-20)+12]
 18426  016EAA  0EF8               	movlw	-8
 18427  016EAC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18428  016EB2  0EF9               	movlw	-7
 18429  016EB4  0060  F033  FFE3   	movff	btemp+11,plusw1
 18430  016EBA  0EBF               	movlw	191
 18431  016EBC  6E0B               	movwf	(btemp+10)^0,c
 18432  016EBE  0EFF               	movlw	255
 18433  016EC0  6E0C               	movwf	(btemp+11)^0,c
 18434                           
 18435                           ;stkvar	_x @ sp[(-20)+-11]
 18436  016EC2  0EE1               	movlw	-31
 18437  016EC4  50E3               	movf	plusw1,w,c
 18438  016EC6  6E09               	movwf	(btemp+8)^0,c
 18439  016EC8  6A0A               	clrf	(btemp+9)^0,c
 18440  016ECA  500B               	movf	(btemp+10)^0,w,c
 18441  016ECC  2609               	addwf	(btemp+8)^0,f,c
 18442  016ECE  500C               	movf	(btemp+11)^0,w,c
 18443  016ED0  220A               	addwfc	(btemp+9)^0,f,c
 18444  016ED2  500A               	movf	(btemp+9)^0,w,c
 18445  016ED4  E106               	bnz	u13140
 18446  016ED6  0E1A               	movlw	26
 18447  016ED8  5C09               	subwf	(btemp+8)^0,w,c
 18448  016EDA  B0D8               	btfsc	status,0,c
 18449  016EDC  D002               	goto	u13140
 18450  016EDE  0E01               	movlw	1
 18451  016EE0  D001               	goto	u13150
 18452  016EE2                     u13140:
 18453  016EE2  0E00               	movlw	0
 18454  016EE4                     u13150:
 18455  016EE4  6E0B               	movwf	(btemp+10)^0,c
 18456  016EE6  6A0C               	clrf	(btemp+11)^0,c
 18457                           
 18458                           ;stkvar	_xtoa$6562 @ sp[(-20)+2]
 18459  016EE8  0EEE               	movlw	-18
 18460  016EEA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18461  016EF0  0EEF               	movlw	-17
 18462  016EF2  0060  F033  FFE3   	movff	btemp+11,plusw1
 18463                           
 18464                           ;stkvar	_xtoa$6562 @ sp[(-20)+2]
 18465  016EF8  0EEE               	movlw	-18
 18466  016EFA  006F FF8C  F001    	movff	plusw1,btemp
 18467  016F00  0EEF               	movlw	-17
 18468  016F02  50E3               	movf	plusw1,w,c
 18469  016F04  1001               	iorwf	btemp^0,w,c
 18470  016F06  B4D8               	btfsc	status,2,c
 18471  016F08  D041               	goto	l13890
 18472  016F0A  0E9F               	movlw	159
 18473  016F0C  6E0B               	movwf	(btemp+10)^0,c
 18474  016F0E  0EFF               	movlw	255
 18475  016F10  6E0C               	movwf	(btemp+11)^0,c
 18476                           
 18477                           ;stkvar	_c @ sp[(-20)+12]
 18478  016F12  0EF8               	movlw	-8
 18479  016F14  006F FF8C  F009    	movff	plusw1,btemp+8
 18480  016F1A  0EF9               	movlw	-7
 18481  016F1C  006F FF8C  F00A    	movff	plusw1,btemp+9
 18482  016F22  0E20               	movlw	32
 18483  016F24  1209               	iorwf	(btemp+8)^0,f,c
 18484  016F26  0E00               	movlw	0
 18485  016F28  120A               	iorwf	(btemp+9)^0,f,c
 18486  016F2A  500B               	movf	(btemp+10)^0,w,c
 18487  016F2C  2609               	addwf	(btemp+8)^0,f,c
 18488  016F2E  500C               	movf	(btemp+11)^0,w,c
 18489  016F30  220A               	addwfc	(btemp+9)^0,f,c
 18490  016F32  500A               	movf	(btemp+9)^0,w,c
 18491  016F34  E106               	bnz	u13170
 18492  016F36  0E1A               	movlw	26
 18493  016F38  5C09               	subwf	(btemp+8)^0,w,c
 18494  016F3A  B0D8               	btfsc	status,0,c
 18495  016F3C  D002               	goto	u13170
 18496  016F3E  0E01               	movlw	1
 18497  016F40  D001               	goto	u13180
 18498  016F42                     u13170:
 18499  016F42  0E00               	movlw	0
 18500  016F44                     u13180:
 18501  016F44  6E0B               	movwf	(btemp+10)^0,c
 18502  016F46  6A0C               	clrf	(btemp+11)^0,c
 18503                           
 18504                           ;stkvar	_xtoa$6563 @ sp[(-20)+0]
 18505  016F48  0EEC               	movlw	-20
 18506  016F4A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18507  016F50  0EED               	movlw	-19
 18508  016F52  0060  F033  FFE3   	movff	btemp+11,plusw1
 18509                           
 18510                           ;stkvar	_xtoa$6563 @ sp[(-20)+0]
 18511  016F58  0EEC               	movlw	-20
 18512  016F5A  006F FF8C  F001    	movff	plusw1,btemp
 18513  016F60  0EED               	movlw	-19
 18514  016F62  50E3               	movf	plusw1,w,c
 18515  016F64  1001               	iorwf	btemp^0,w,c
 18516  016F66  B4D8               	btfsc	status,2,c
 18517  016F68  D011               	goto	l13890
 18518                           
 18519                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 647:             c = toupper(
      +                          c);
 18520                           ;stkvar	_c @ sp[(-20)+12]
 18521  016F6A  0EF8               	movlw	-8
 18522  016F6C  006F FF8F FFE6     	movff	plusw1,postinc1
 18523  016F72  006F FF8F FFE6     	movff	plusw1,postinc1
 18524  016F78  ECA5  F0E1         	call	_toupper	;wreg free
 18525                           
 18526                           ;stkvar	_c @ sp[(-20)+12]
 18527  016F7C  0EF8               	movlw	-8
 18528  016F7E  0060  F007  FFE3   	movff	btemp,plusw1
 18529  016F84  0EF9               	movlw	-7
 18530  016F86  0060  F00B  FFE3   	movff	btemp+1,plusw1
 18531  016F8C                     l13890:
 18532                           
 18533                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 649:         dbuf[i] = (char)
      +                          c;
 18534                           ;stkvar	_c @ sp[(-20)+12]
 18535                           ;stkvar	_i @ sp[(-20)+14]
 18536  016F8C  0EFA               	movlw	-6
 18537  016F8E  006F FF8C  F00B    	movff	plusw1,btemp+10
 18538  016F94  0EFB               	movlw	-5
 18539  016F96  006F FF8C  F00C    	movff	plusw1,btemp+11
 18540  016F9C  0E54               	movlw	low _dbuf
 18541  016F9E  240B               	addwf	(btemp+10)^0,w,c
 18542  016FA0  6ED9               	movwf	fsr2l,c
 18543  016FA2  0E03               	movlw	high _dbuf
 18544  016FA4  200C               	addwfc	(btemp+11)^0,w,c
 18545  016FA6  6EDA               	movwf	fsr2h,c
 18546  016FA8  0EF8               	movlw	-8
 18547  016FAA  006F FF8F FFDF     	movff	plusw1,indf2
 18548                           
 18549                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 650:         --p;
 18550                           ;stkvar	_p @ sp[(-20)+18]
 18551  016FB0  50E1               	movf	fsr1l,w,c
 18552  016FB2  0FFE               	addlw	-2
 18553  016FB4  6ED9               	movwf	fsr2l,c
 18554  016FB6  50E2               	movf	fsr1h,w,c
 18555  016FB8  6EDA               	movwf	fsr2h,c
 18556  016FBA  0EFF               	movlw	255
 18557  016FBC  22DA               	addwfc	fsr2h,f,c
 18558  016FBE  06DE               	decf	postinc2,f,c
 18559  016FC0  0E00               	movlw	0
 18560  016FC2  5ADD               	subwfb	postdec2,f,c
 18561                           
 18562                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 651:         --w;
 18563                           ;stkvar	_w @ sp[(-20)+16]
 18564  016FC4  50E1               	movf	fsr1l,w,c
 18565  016FC6  0FFC               	addlw	-4
 18566  016FC8  6ED9               	movwf	fsr2l,c
 18567  016FCA  50E2               	movf	fsr1h,w,c
 18568  016FCC  6EDA               	movwf	fsr2h,c
 18569  016FCE  0EFF               	movlw	255
 18570  016FD0  22DA               	addwfc	fsr2h,f,c
 18571  016FD2  06DE               	decf	postinc2,f,c
 18572  016FD4  0E00               	movlw	0
 18573  016FD6  5ADD               	subwfb	postdec2,f,c
 18574                           
 18575                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 652:         n = n >> 4;
 18576  016FD8  0E04               	movlw	4
 18577  016FDA  6E0C               	movwf	(btemp+11)^0,c
 18578                           
 18579                           ;stkvar	_n @ sp[(-20)+4]
 18580  016FDC  50E1               	movf	fsr1l,w,c
 18581  016FDE  0FF0               	addlw	-16
 18582  016FE0  6ED9               	movwf	fsr2l,c
 18583  016FE2  50E2               	movf	fsr1h,w,c
 18584  016FE4  6EDA               	movwf	fsr2h,c
 18585  016FE6  0EFF               	movlw	255
 18586  016FE8  22DA               	addwfc	fsr2h,f,c
 18587  016FEA  280C               	incf	(btemp+11)^0,w,c
 18588  016FEC  52DE               	movf	postinc2,f,c
 18589  016FEE  D00F               	goto	u13200
 18590  016FF0                     u13205:
 18591  016FF0  52DE               	movf	postinc2,f,c
 18592  016FF2  52DE               	movf	postinc2,f,c
 18593  016FF4  52DE               	movf	postinc2,f,c
 18594  016FF6  52DE               	movf	postinc2,f,c
 18595  016FF8  52DE               	movf	postinc2,f,c
 18596  016FFA  52DE               	movf	postinc2,f,c
 18597  016FFC  90D8               	bcf	status,0,c
 18598  016FFE  32DD               	rrcf	postdec2,f,c
 18599  017000  32DD               	rrcf	postdec2,f,c
 18600  017002  32DD               	rrcf	postdec2,f,c
 18601  017004  32DD               	rrcf	postdec2,f,c
 18602  017006  32DD               	rrcf	postdec2,f,c
 18603  017008  32DD               	rrcf	postdec2,f,c
 18604  01700A  32DD               	rrcf	postdec2,f,c
 18605  01700C  32DE               	rrcf	postinc2,f,c
 18606  01700E                     u13200:
 18607  01700E  2EE8               	decfsz	wreg,f,c
 18608  017010  D7EF               	goto	u13205
 18609  017012                     l13898:
 18610                           
 18611                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 18612                           ;stkvar	_i @ sp[(-20)+14]
 18613  017012  0EFB               	movlw	-5
 18614  017014  BEE3               	btfsc	plusw1,7,c
 18615  017016  D03A               	goto	u13250
 18616  017018  0EFB               	movlw	-5
 18617  01701A  50E3               	movf	plusw1,w,c
 18618  01701C  E108               	bnz	u13210
 18619  01701E  0EFA               	movlw	-6
 18620  017020  006F FF8C  F001    	movff	plusw1,btemp
 18621  017026  0E02               	movlw	2
 18622  017028  5E01               	subwf	btemp^0,f,c
 18623  01702A  A0D8               	btfss	status,0,c
 18624  01702C  D02F               	goto	u13250
 18625  01702E                     u13210:
 18626                           
 18627                           ;stkvar	_n @ sp[(-20)+4]
 18628  01702E  0EF0               	movlw	-16
 18629  017030  50E3               	movf	plusw1,w,c
 18630  017032  E115               	bnz	u13221
 18631  017034  0EF1               	movlw	-15
 18632  017036  50E3               	movf	plusw1,w,c
 18633  017038  E112               	bnz	u13221
 18634  01703A  0EF2               	movlw	-14
 18635  01703C  50E3               	movf	plusw1,w,c
 18636  01703E  E10F               	bnz	u13221
 18637  017040  0EF3               	movlw	-13
 18638  017042  50E3               	movf	plusw1,w,c
 18639  017044  E10C               	bnz	u13221
 18640  017046  0EF4               	movlw	-12
 18641  017048  50E3               	movf	plusw1,w,c
 18642  01704A  E109               	bnz	u13221
 18643  01704C  0EF5               	movlw	-11
 18644  01704E  50E3               	movf	plusw1,w,c
 18645  017050  E106               	bnz	u13221
 18646  017052  0EF6               	movlw	-10
 18647  017054  50E3               	movf	plusw1,w,c
 18648  017056  E103               	bnz	u13221
 18649  017058  0EF7               	movlw	-9
 18650  01705A  50E3               	movf	plusw1,w,c
 18651  01705C  A4D8               	btfss	status,2,c
 18652  01705E                     u13221:
 18653  01705E  D6EB               	goto	l13866
 18654                           
 18655                           ;stkvar	_p @ sp[(-20)+18]
 18656  017060  0EFF               	movlw	-1
 18657  017062  BEE3               	btfsc	plusw1,7,c
 18658  017064  D007               	goto	u13230
 18659  017066  0EFF               	movlw	-1
 18660  017068  50E3               	movf	plusw1,w,c
 18661  01706A  E103               	bnz	u13231
 18662  01706C  0EFE               	movlw	-2
 18663  01706E  04E3               	decf	plusw1,w,c
 18664  017070  B0D8               	btfsc	status,0,c
 18665  017072                     u13231:
 18666  017072  D6E1               	goto	l13866
 18667  017074                     u13230:
 18668                           
 18669                           ;stkvar	_w @ sp[(-20)+16]
 18670  017074  0EFD               	movlw	-3
 18671  017076  BEE3               	btfsc	plusw1,7,c
 18672  017078  D009               	goto	u13250
 18673  01707A  0EFD               	movlw	-3
 18674  01707C  50E3               	movf	plusw1,w,c
 18675  01707E  E104               	bnz	u13240
 18676  017080  0EFC               	movlw	-4
 18677  017082  04E3               	decf	plusw1,w,c
 18678  017084  A0D8               	btfss	status,0,c
 18679  017086  D002               	goto	u13250
 18680  017088                     u13240:
 18681  017088  B23E               	btfsc	_flags^0,1,c
 18682  01708A  D6D5               	goto	l13866
 18683  01708C                     u13250:
 18684                           
 18685                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 656:     if (flags & (1 << 4)
      +                          ) {
 18686  01708C  A83E               	btfss	_flags^0,4,c
 18687  01708E  D036               	goto	l13914
 18688                           
 18689                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 657:         --i;
 18690                           ;stkvar	_i @ sp[(-20)+14]
 18691  017090  50E1               	movf	fsr1l,w,c
 18692  017092  0FFA               	addlw	-6
 18693  017094  6ED9               	movwf	fsr2l,c
 18694  017096  50E2               	movf	fsr1h,w,c
 18695  017098  6EDA               	movwf	fsr2h,c
 18696  01709A  0EFF               	movlw	255
 18697  01709C  22DA               	addwfc	fsr2h,f,c
 18698  01709E  06DE               	decf	postinc2,f,c
 18699  0170A0  0E00               	movlw	0
 18700  0170A2  5ADD               	subwfb	postdec2,f,c
 18701                           
 18702                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 658:         dbuf[i] = x;
 18703                           ;stkvar	_x @ sp[(-20)+-11]
 18704                           ;stkvar	_i @ sp[(-20)+14]
 18705  0170A4  0EFA               	movlw	-6
 18706  0170A6  006F FF8C  F00B    	movff	plusw1,btemp+10
 18707  0170AC  0EFB               	movlw	-5
 18708  0170AE  006F FF8C  F00C    	movff	plusw1,btemp+11
 18709  0170B4  0E54               	movlw	low _dbuf
 18710  0170B6  240B               	addwf	(btemp+10)^0,w,c
 18711  0170B8  6ED9               	movwf	fsr2l,c
 18712  0170BA  0E03               	movlw	high _dbuf
 18713  0170BC  200C               	addwfc	(btemp+11)^0,w,c
 18714  0170BE  6EDA               	movwf	fsr2h,c
 18715  0170C0  0EE1               	movlw	-31
 18716  0170C2  006F FF8F FFDF     	movff	plusw1,indf2
 18717                           
 18718                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 659:         --i;
 18719                           ;stkvar	_i @ sp[(-20)+14]
 18720  0170C8  50E1               	movf	fsr1l,w,c
 18721  0170CA  0FFA               	addlw	-6
 18722  0170CC  6ED9               	movwf	fsr2l,c
 18723  0170CE  50E2               	movf	fsr1h,w,c
 18724  0170D0  6EDA               	movwf	fsr2h,c
 18725  0170D2  0EFF               	movlw	255
 18726  0170D4  22DA               	addwfc	fsr2h,f,c
 18727  0170D6  06DE               	decf	postinc2,f,c
 18728  0170D8  0E00               	movlw	0
 18729  0170DA  5ADD               	subwfb	postdec2,f,c
 18730                           
 18731                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 660:         dbuf[i] = '0';
 18732                           ;stkvar	_i @ sp[(-20)+14]
 18733  0170DC  0EFA               	movlw	-6
 18734  0170DE  006F FF8C  F00B    	movff	plusw1,btemp+10
 18735  0170E4  0EFB               	movlw	-5
 18736  0170E6  006F FF8C  F00C    	movff	plusw1,btemp+11
 18737  0170EC  0E54               	movlw	low _dbuf
 18738  0170EE  240B               	addwf	(btemp+10)^0,w,c
 18739  0170F0  6ED9               	movwf	fsr2l,c
 18740  0170F2  0E03               	movlw	high _dbuf
 18741  0170F4  200C               	addwfc	(btemp+11)^0,w,c
 18742  0170F6  6EDA               	movwf	fsr2h,c
 18743  0170F8  0E30               	movlw	48
 18744  0170FA  6EDF               	movwf	indf2,c
 18745  0170FC                     l13914:
 18746                           
 18747                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 664:     return pad(fp, &dbuf
      +                          [i], w);
 18748                           ;stkvar	_w @ sp[(-20)+16]
 18749  0170FC  0EFC               	movlw	-4
 18750  0170FE  006F FF8F FFE6     	movff	plusw1,postinc1
 18751  017104  006F FF8F FFE6     	movff	plusw1,postinc1
 18752                           
 18753                           ;stkvar	_i @ sp[(-22)+14]
 18754  01710A  0E54               	movlw	low _dbuf
 18755  01710C  6E0B               	movwf	(btemp+10)^0,c
 18756  01710E  0E03               	movlw	high _dbuf
 18757  017110  6E0C               	movwf	(btemp+11)^0,c
 18758  017112  0EF8               	movlw	-8
 18759  017114  50E3               	movf	plusw1,w,c
 18760  017116  260B               	addwf	(btemp+10)^0,f,c
 18761  017118  0EF9               	movlw	-7
 18762  01711A  50E3               	movf	plusw1,w,c
 18763  01711C  220C               	addwfc	(btemp+11)^0,f,c
 18764  01711E  0060  F02F  FFE6   	movff	btemp+10,postinc1
 18765  017124  0060  F033  FFE6   	movff	btemp+11,postinc1
 18766                           
 18767                           ;stkvar	_fp @ sp[(-24)+-2]
 18768  01712A  0EE6               	movlw	-26
 18769  01712C  006F FF8F FFE6     	movff	plusw1,postinc1
 18770  017132  006F FF8F FFE6     	movff	plusw1,postinc1
 18771  017138  ECC3  F0D6         	call	_pad	;wreg free
 18772                           
 18773                           ; _xtoa: autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsiz
      +                          e = 11, vargsize = 0
 18774  01713C  0EE1               	movlw	225
 18775  01713E  26E1               	addwf	fsr1l,f,c
 18776  017140  0EFF               	movlw	255
 18777  017142  22E2               	addwfc	fsr1h,f,c
 18778  017144  0012               	return		;funcret
 18779  017146                     __end_of_xtoa:
 18780                           	opt callstack 0
 18781                           
 18782 ;; *************** function _toupper *****************
 18783 ;; Defined at:
 18784 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/toupper.c"
 18785 ;; Parameters:    Size  Location     Type
 18786 ;;  c               2  [STACK] int 
 18787 ;; Auto vars:     Size  Location     Type
 18788 ;;		None
 18789 ;; Return value:  Size  Location     Type
 18790 ;;                  2  [STACK] int 
 18791 ;; Registers used:
 18792 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 18793 ;; Tracked objects:
 18794 ;;		On entry : 0/3
 18795 ;;		On exit  : 0/0
 18796 ;;		Unchanged: 0/0
 18797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18798 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18799 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18800 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18801 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18802 ;;Total ram usage:        0 bytes
 18803 ;; Hardware stack levels used:    1
 18804 ;; Hardware stack levels required when called:   16
 18805 ;; This function calls:
 18806 ;;		_islower
 18807 ;; This function is called by:
 18808 ;;		_xtoa
 18809 ;; This function uses a reentrant model
 18810 ;;
 18811                           
 18812                           	psect	text70
 18813  01C34A                     __ptext70:
 18814                           	opt callstack 0
 18815  01C34A                     _toupper:
 18816                           	opt callstack 0
 18817                           
 18818                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18819  01C34A  52E6               	movf	postinc1,f,c
 18820  01C34C  52E6               	movf	postinc1,f,c
 18821                           
 18822                           ;stkvar	_c @ sp[(-2)+-2]
 18823                           
 18824                           ;incstack = 0
 18825 ;; hardware stack exceeded
 18826  01C34E  0EFC               	movlw	-4
 18827  01C350  50E3               	movf	plusw1,w,c
 18828  01C352  0F9F               	addlw	159
 18829  01C354  6E0B               	movwf	(btemp+10)^0,c
 18830  01C356  0EFD               	movlw	-3
 18831  01C358  006F FF8C  F00C    	movff	plusw1,btemp+11
 18832  01C35E  0EFF               	movlw	255
 18833  01C360  220C               	addwfc	(btemp+11)^0,f,c
 18834  01C362  500C               	movf	(btemp+11)^0,w,c
 18835  01C364  E106               	bnz	u6890
 18836  01C366  0E1A               	movlw	26
 18837  01C368  5C0B               	subwf	(btemp+10)^0,w,c
 18838  01C36A  B0D8               	btfsc	status,0,c
 18839  01C36C  D002               	goto	u6890
 18840  01C36E  0E01               	movlw	1
 18841  01C370  D001               	goto	u6900
 18842  01C372                     u6890:
 18843  01C372  0E00               	movlw	0
 18844  01C374                     u6900:
 18845  01C374  6E0B               	movwf	(btemp+10)^0,c
 18846  01C376  6A0C               	clrf	(btemp+11)^0,c
 18847                           
 18848                           ;stkvar	_toupper$7369 @ sp[(-2)+0]
 18849  01C378  0EFE               	movlw	-2
 18850  01C37A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18851  01C380  0EFF               	movlw	-1
 18852  01C382  0060  F033  FFE3   	movff	btemp+11,plusw1
 18853                           
 18854                           ;stkvar	_toupper$7369 @ sp[(-2)+0]
 18855  01C388  0EFE               	movlw	-2
 18856  01C38A  006F FF8C  F001    	movff	plusw1,btemp
 18857  01C390  0EFF               	movlw	-1
 18858  01C392  50E3               	movf	plusw1,w,c
 18859  01C394  1001               	iorwf	btemp^0,w,c
 18860  01C396  B4D8               	btfsc	status,2,c
 18861  01C398  D00D               	goto	l8954
 18862                           
 18863                           ;stkvar	_c @ sp[(-2)+-2]
 18864  01C39A  0EFC               	movlw	-4
 18865  01C39C  006F FF8C  F001    	movff	plusw1,btemp
 18866  01C3A2  0EFD               	movlw	-3
 18867  01C3A4  006F FF8C  F002    	movff	plusw1,btemp+1
 18868  01C3AA  0E5F               	movlw	95
 18869  01C3AC  1601               	andwf	btemp^0,f,c
 18870  01C3AE  0E00               	movlw	0
 18871  01C3B0  1602               	andwf	(btemp+1)^0,f,c
 18872  01C3B2  D008               	goto	l3767
 18873  01C3B4                     l8954:
 18874                           
 18875                           ;stkvar	_c @ sp[(-2)+-2]
 18876  01C3B4  0EFC               	movlw	-4
 18877  01C3B6  006F FF8C  F001    	movff	plusw1,btemp
 18878  01C3BC  0EFD               	movlw	-3
 18879  01C3BE  006F FF8C  F002    	movff	plusw1,btemp+1
 18880  01C3C4                     l3767:
 18881                           
 18882                           ; _toupper: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 18883  01C3C4  52E5               	movf	postdec1,f,c
 18884  01C3C6  52E5               	movf	postdec1,f,c
 18885  01C3C8  52E5               	movf	postdec1,f,c
 18886  01C3CA  52E5               	movf	postdec1,f,c
 18887  01C3CC  0012               	return		;funcret
 18888  01C3CE                     __end_of_toupper:
 18889                           	opt callstack 0
 18890                           
 18891 ;; *************** function _islower *****************
 18892 ;; Defined at:
 18893 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/islower.c"
 18894 ;; Parameters:    Size  Location     Type
 18895 ;;  c               2  [STACK] int 
 18896 ;; Auto vars:     Size  Location     Type
 18897 ;;		None
 18898 ;; Return value:  Size  Location     Type
 18899 ;;                  2  [STACK] int 
 18900 ;; Registers used:
 18901 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 18902 ;; Tracked objects:
 18903 ;;		On entry : 0/0
 18904 ;;		On exit  : 0/0
 18905 ;;		Unchanged: 0/0
 18906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18907 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18908 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18909 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18910 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18911 ;;Total ram usage:        0 bytes
 18912 ;; Hardware stack levels used:    1
 18913 ;; Hardware stack levels required when called:   15
 18914 ;; This function calls:
 18915 ;;		Nothing
 18916 ;; This function is called by:
 18917 ;;		_toupper
 18918 ;; This function uses a reentrant model
 18919 ;;
 18920                           
 18921                           	psect	text71
 18922  01D3AC                     __ptext71:
 18923                           	opt callstack 0
 18924  01D3AC                     _islower:
 18925                           	opt callstack 0
 18926                           
 18927                           ;stkvar	_c @ sp[(0)+-2]
 18928                           
 18929                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18930                           ;incstack = 0
 18931 ;; hardware stack exceeded
 18932  01D3AC  0EFE               	movlw	-2
 18933  01D3AE  50E3               	movf	plusw1,w,c
 18934  01D3B0  0F9F               	addlw	159
 18935  01D3B2  6E0B               	movwf	(btemp+10)^0,c
 18936  01D3B4  0EFF               	movlw	-1
 18937  01D3B6  006F FF8C  F00C    	movff	plusw1,btemp+11
 18938  01D3BC  0EFF               	movlw	255
 18939  01D3BE  220C               	addwfc	(btemp+11)^0,f,c
 18940  01D3C0  500C               	movf	(btemp+11)^0,w,c
 18941  01D3C2  E106               	bnz	u6530
 18942  01D3C4  0E1A               	movlw	26
 18943  01D3C6  5C0B               	subwf	(btemp+10)^0,w,c
 18944  01D3C8  B0D8               	btfsc	status,0,c
 18945  01D3CA  D002               	goto	u6530
 18946  01D3CC  0E01               	movlw	1
 18947  01D3CE  D001               	goto	u6540
 18948  01D3D0                     u6530:
 18949  01D3D0  0E00               	movlw	0
 18950  01D3D2                     u6540:
 18951  01D3D2  6E01               	movwf	btemp^0,c
 18952  01D3D4  6A02               	clrf	(btemp+1)^0,c
 18953                           
 18954                           ; _islower: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 18955  01D3D6  52E5               	movf	postdec1,f,c
 18956  01D3D8  52E5               	movf	postdec1,f,c
 18957  01D3DA  0012               	return		;funcret
 18958  01D3DC                     __end_of_islower:
 18959                           	opt callstack 0
 18960                           
 18961 ;; *************** function _isalpha *****************
 18962 ;; Defined at:
 18963 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isalpha.c"
 18964 ;; Parameters:    Size  Location     Type
 18965 ;;  c               2  [STACK] int 
 18966 ;; Auto vars:     Size  Location     Type
 18967 ;;		None
 18968 ;; Return value:  Size  Location     Type
 18969 ;;                  2  [STACK] int 
 18970 ;; Registers used:
 18971 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11
 18972 ;; Tracked objects:
 18973 ;;		On entry : 0/0
 18974 ;;		On exit  : 0/0
 18975 ;;		Unchanged: 0/0
 18976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18977 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18978 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18979 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18980 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18981 ;;Total ram usage:        0 bytes
 18982 ;; Hardware stack levels used:    1
 18983 ;; Hardware stack levels required when called:   15
 18984 ;; This function calls:
 18985 ;;		Nothing
 18986 ;; This function is called by:
 18987 ;;		_xtoa
 18988 ;; This function uses a reentrant model
 18989 ;;
 18990                           
 18991                           	psect	text72
 18992  01CF20                     __ptext72:
 18993                           	opt callstack 0
 18994  01CF20                     _isalpha:
 18995                           	opt callstack 0
 18996                           
 18997                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18998                           ;incstack = 0
 18999 ;; hardware stack exceeded
 19000  01CF20  0E9F               	movlw	159
 19001  01CF22  6E0B               	movwf	(btemp+10)^0,c
 19002  01CF24  0EFF               	movlw	255
 19003  01CF26  6E0C               	movwf	(btemp+11)^0,c
 19004                           
 19005                           ;stkvar	_c @ sp[(0)+-2]
 19006  01CF28  0EFE               	movlw	-2
 19007  01CF2A  006F FF8C  F009    	movff	plusw1,btemp+8
 19008  01CF30  0EFF               	movlw	-1
 19009  01CF32  006F FF8C  F00A    	movff	plusw1,btemp+9
 19010  01CF38  0E20               	movlw	32
 19011  01CF3A  1209               	iorwf	(btemp+8)^0,f,c
 19012  01CF3C  0E00               	movlw	0
 19013  01CF3E  120A               	iorwf	(btemp+9)^0,f,c
 19014  01CF40  500B               	movf	(btemp+10)^0,w,c
 19015  01CF42  2609               	addwf	(btemp+8)^0,f,c
 19016  01CF44  500C               	movf	(btemp+11)^0,w,c
 19017  01CF46  220A               	addwfc	(btemp+9)^0,f,c
 19018  01CF48  500A               	movf	(btemp+9)^0,w,c
 19019  01CF4A  E106               	bnz	u6870
 19020  01CF4C  0E1A               	movlw	26
 19021  01CF4E  5C09               	subwf	(btemp+8)^0,w,c
 19022  01CF50  B0D8               	btfsc	status,0,c
 19023  01CF52  D002               	goto	u6870
 19024  01CF54  0E01               	movlw	1
 19025  01CF56  D001               	goto	u6880
 19026  01CF58                     u6870:
 19027  01CF58  0E00               	movlw	0
 19028  01CF5A                     u6880:
 19029  01CF5A  6E01               	movwf	btemp^0,c
 19030  01CF5C  6A02               	clrf	(btemp+1)^0,c
 19031                           
 19032                           ; _isalpha: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 19033  01CF5E  52E5               	movf	postdec1,f,c
 19034  01CF60  52E5               	movf	postdec1,f,c
 19035  01CF62  0012               	return		;funcret
 19036  01CF64                     __end_of_isalpha:
 19037                           	opt callstack 0
 19038                           
 19039 ;; *************** function _utoa *****************
 19040 ;; Defined at:
 19041 ;;		line 593 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 19042 ;; Parameters:    Size  Location     Type
 19043 ;;  fp              2  [STACK] PTR struct _IO_FILE
 19044 ;;		 -> f(6), NULL(0), 
 19045 ;;  d               8  [STACK] unsigned long long 
 19046 ;; Auto vars:     Size  Location     Type
 19047 ;;  n               8  [STACK] unsigned long long 
 19048 ;;  i               2  [STACK] int 
 19049 ;;  w               2  [STACK] int 
 19050 ;;  p               2  [STACK] int 
 19051 ;; Return value:  Size  Location     Type
 19052 ;;                  2  [STACK] int 
 19053 ;; Registers used:
 19054 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 19055 ;; Tracked objects:
 19056 ;;		On entry : 0/0
 19057 ;;		On exit  : 0/0
 19058 ;;		Unchanged: 0/0
 19059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19060 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19061 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19062 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19063 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19064 ;;Total ram usage:        0 bytes
 19065 ;; Hardware stack levels used:    1
 19066 ;; Hardware stack levels required when called:   20
 19067 ;; This function calls:
 19068 ;;		___lodiv
 19069 ;;		___lomod
 19070 ;;		_pad
 19071 ;; This function is called by:
 19072 ;;		_vfpfcnvrt
 19073 ;; This function uses a reentrant model
 19074 ;;
 19075                           
 19076                           	psect	text73
 19077  0174B2                     __ptext73:
 19078                           	opt callstack 0
 19079  0174B2                     _utoa:
 19080                           	opt callstack 0
 19081                           
 19082                           ; autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 19083  0174B2  0E0E               	movlw	14
 19084  0174B4  26E1               	addwf	fsr1l,f,c
 19085  0174B6  0E00               	movlw	0
 19086  0174B8  22E2               	addwfc	fsr1h,f,c
 19087                           
 19088                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 593: static int utoa(FILE *fp
      +                          , unsigned long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 594: {
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 595:     int i, p, w;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 596:     unsigned long long n;;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 599:     if (!(prec < 0)) {
 19089                           
 19090                           ;incstack = 0
 19091 ;; hardware stack exceeded
 19092  0174BA  AE3D               	btfss	(_prec+1)^0,7,c
 19093                           
 19094                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 600:         flags &= ~(1 << 
      +                          1);
 19095  0174BC  923E               	bcf	_flags^0,1,c
 19096                           
 19097                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 602:     p = (0 < prec) ? pre
      +                          c : 1;
 19098  0174BE  BE3D               	btfsc	(_prec+1)^0,7,c
 19099  0174C0  D005               	goto	u13020
 19100  0174C2  503D               	movf	(_prec+1)^0,w,c
 19101  0174C4  E110               	bnz	l13814
 19102  0174C6  043C               	decf	_prec^0,w,c
 19103  0174C8  B0D8               	btfsc	status,0,c
 19104  0174CA  D00D               	goto	l13814
 19105  0174CC                     u13020:
 19106  0174CC  0E01               	movlw	1
 19107  0174CE  6E0B               	movwf	(btemp+10)^0,c
 19108  0174D0  0E00               	movlw	0
 19109  0174D2  6E0C               	movwf	(btemp+11)^0,c
 19110                           
 19111                           ;stkvar	_p @ sp[(-14)+12]
 19112  0174D4  0EFE               	movlw	-2
 19113  0174D6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19114  0174DC  0EFF               	movlw	-1
 19115  0174DE  0060  F033  FFE3   	movff	btemp+11,plusw1
 19116  0174E4  D008               	goto	l2585
 19117  0174E6                     l13814:
 19118                           
 19119                           ;stkvar	_p @ sp[(-14)+12]
 19120  0174E6  0EFE               	movlw	-2
 19121  0174E8  0060  F0F3  FFE3   	movff	_prec,plusw1
 19122  0174EE  0EFF               	movlw	-1
 19123  0174F0  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 19124  0174F6                     l2585:
 19125                           
 19126                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 603:     w = width;
 19127                           ;stkvar	_w @ sp[(-14)+10]
 19128  0174F6  0EFC               	movlw	-4
 19129  0174F8  0060  F0EB  FFE3   	movff	_width,plusw1
 19130  0174FE  0EFD               	movlw	-3
 19131  017500  0060  F0EF  FFE3   	movff	_width+1,plusw1
 19132                           
 19133                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 606:     n = d;
 19134                           ;stkvar	_d @ sp[(-14)+-10]
 19135  017506  0EE8               	movlw	232
 19136  017508  24E1               	addwf	fsr1l,w,c
 19137  01750A  6ED9               	movwf	fsr2l,c
 19138  01750C  0EFF               	movlw	255
 19139  01750E  20E2               	addwfc	fsr1h,w,c
 19140  017510  6EDA               	movwf	fsr2h,c
 19141                           
 19142                           ;stkvar	_n @ sp[(-14)+0]
 19143  017512  0E08               	movlw	8
 19144  017514  6E01               	movwf	btemp^0,c
 19145  017516  0EF2               	movlw	-14
 19146  017518                     us1303999:
 19147  017518  006F FF7B FFE3     	movff	postinc2,plusw1
 19148  01751E  28E8               	incf	wreg,w,c
 19149  017520  2E01               	decfsz	btemp^0,f,c
 19150  017522  D7FA               	bra	us1303999
 19151                           
 19152                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 607:     i = sizeof(dbuf) - 1
      +                          ;
 19153  017524  0E4F               	movlw	79
 19154  017526  6E0B               	movwf	(btemp+10)^0,c
 19155  017528  0E00               	movlw	0
 19156  01752A  6E0C               	movwf	(btemp+11)^0,c
 19157                           
 19158                           ;stkvar	_i @ sp[(-14)+8]
 19159  01752C  0EFA               	movlw	-6
 19160  01752E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19161  017534  0EFB               	movlw	-5
 19162  017536  0060  F033  FFE3   	movff	btemp+11,plusw1
 19163                           
 19164                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 608:     dbuf[i] = '\0';
 19165  01753C  0103               	movlb	3	; () banked
 19166  01753E  6BA3               	clrf	(_dbuf+79)& (0+255),b
 19167                           
 19168                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
 19169  017540  D0FB               	goto	l13832
 19170  017542                     l13822:
 19171                           
 19172                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 610:         --i;
 19173                           ;stkvar	_i @ sp[(-14)+8]
 19174  017542  50E1               	movf	fsr1l,w,c
 19175  017544  0FFA               	addlw	-6
 19176  017546  6ED9               	movwf	fsr2l,c
 19177  017548  50E2               	movf	fsr1h,w,c
 19178  01754A  6EDA               	movwf	fsr2h,c
 19179  01754C  0EFF               	movlw	255
 19180  01754E  22DA               	addwfc	fsr2h,f,c
 19181  017550  06DE               	decf	postinc2,f,c
 19182  017552  0E00               	movlw	0
 19183  017554  5ADD               	subwfb	postdec2,f,c
 19184                           
 19185                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 611:         dbuf[i] = '0' + 
      +                          (n % 10);
 19186  017556  0E0A               	movlw	10
 19187  017558  6EE6               	movwf	postinc1,c
 19188  01755A  0E00               	movlw	0
 19189  01755C  6EE6               	movwf	postinc1,c
 19190  01755E  0E00               	movlw	0
 19191  017560  6EE6               	movwf	postinc1,c
 19192  017562  0E00               	movlw	0
 19193  017564  6EE6               	movwf	postinc1,c
 19194  017566  0E00               	movlw	0
 19195  017568  6EE6               	movwf	postinc1,c
 19196  01756A  0E00               	movlw	0
 19197  01756C  6EE6               	movwf	postinc1,c
 19198  01756E  0E00               	movlw	0
 19199  017570  6EE6               	movwf	postinc1,c
 19200  017572  0E00               	movlw	0
 19201  017574  6EE6               	movwf	postinc1,c
 19202                           
 19203                           ;stkvar	_n @ sp[(-22)+0]
 19204  017576  50E1               	movf	fsr1l,w,c
 19205  017578  0FEA               	addlw	-22
 19206  01757A  6ED9               	movwf	fsr2l,c
 19207  01757C  50E2               	movf	fsr1h,w,c
 19208  01757E  6EDA               	movwf	fsr2h,c
 19209  017580  0EFF               	movlw	255
 19210  017582  22DA               	addwfc	fsr2h,f,c
 19211  017584  006F FF7B FFE6     	movff	postinc2,postinc1
 19212  01758A  006F FF7B FFE6     	movff	postinc2,postinc1
 19213  017590  006F FF7B FFE6     	movff	postinc2,postinc1
 19214  017596  006F FF7B FFE6     	movff	postinc2,postinc1
 19215  01759C  006F FF7B FFE6     	movff	postinc2,postinc1
 19216  0175A2  006F FF7B FFE6     	movff	postinc2,postinc1
 19217  0175A8  006F FF7B FFE6     	movff	postinc2,postinc1
 19218  0175AE  006F FF7B FFE6     	movff	postinc2,postinc1
 19219  0175B4  EC51  F0D3         	call	___lomod	;wreg free
 19220  0175B8  52E5               	movf	postdec1,f,c
 19221  0175BA  006F FF9C  F018    	movff	indf1,btemp+23
 19222  0175C0  52E5               	movf	postdec1,f,c
 19223  0175C2  006F FF9C  F017    	movff	indf1,btemp+22
 19224  0175C8  52E5               	movf	postdec1,f,c
 19225  0175CA  006F FF9C  F016    	movff	indf1,btemp+21
 19226  0175D0  52E5               	movf	postdec1,f,c
 19227  0175D2  006F FF9C  F015    	movff	indf1,btemp+20
 19228  0175D8  52E5               	movf	postdec1,f,c
 19229  0175DA  006F FF9C  F014    	movff	indf1,btemp+19
 19230  0175E0  52E5               	movf	postdec1,f,c
 19231  0175E2  006F FF9C  F013    	movff	indf1,btemp+18
 19232  0175E8  52E5               	movf	postdec1,f,c
 19233  0175EA  006F FF9C  F012    	movff	indf1,btemp+17
 19234  0175F0  52E5               	movf	postdec1,f,c
 19235  0175F2  006F FF9C  F011    	movff	indf1,btemp+16
 19236  0175F8  0EF8               	movlw	248
 19237  0175FA  26E1               	addwf	fsr1l,f,c
 19238  0175FC  0EFF               	movlw	255
 19239  0175FE  22E2               	addwfc	fsr1h,f,c
 19240  017600  0E30               	movlw	48
 19241  017602  2611               	addwf	(btemp+16)^0,f,c
 19242                           
 19243                           ;stkvar	_i @ sp[(-14)+8]
 19244  017604  0EFA               	movlw	-6
 19245  017606  006F FF8C  F00B    	movff	plusw1,btemp+10
 19246  01760C  0EFB               	movlw	-5
 19247  01760E  006F FF8C  F00C    	movff	plusw1,btemp+11
 19248  017614  0E54               	movlw	low _dbuf
 19249  017616  240B               	addwf	(btemp+10)^0,w,c
 19250  017618  6ED9               	movwf	fsr2l,c
 19251  01761A  0E03               	movlw	high _dbuf
 19252  01761C  200C               	addwfc	(btemp+11)^0,w,c
 19253  01761E  6EDA               	movwf	fsr2h,c
 19254  017620  0060  F047  FFDF   	movff	btemp+16,indf2
 19255                           
 19256                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 612:         --p;
 19257                           ;stkvar	_p @ sp[(-14)+12]
 19258  017626  50E1               	movf	fsr1l,w,c
 19259  017628  0FFE               	addlw	-2
 19260  01762A  6ED9               	movwf	fsr2l,c
 19261  01762C  50E2               	movf	fsr1h,w,c
 19262  01762E  6EDA               	movwf	fsr2h,c
 19263  017630  0EFF               	movlw	255
 19264  017632  22DA               	addwfc	fsr2h,f,c
 19265  017634  06DE               	decf	postinc2,f,c
 19266  017636  0E00               	movlw	0
 19267  017638  5ADD               	subwfb	postdec2,f,c
 19268                           
 19269                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 613:         --w;
 19270                           ;stkvar	_w @ sp[(-14)+10]
 19271  01763A  50E1               	movf	fsr1l,w,c
 19272  01763C  0FFC               	addlw	-4
 19273  01763E  6ED9               	movwf	fsr2l,c
 19274  017640  50E2               	movf	fsr1h,w,c
 19275  017642  6EDA               	movwf	fsr2h,c
 19276  017644  0EFF               	movlw	255
 19277  017646  22DA               	addwfc	fsr2h,f,c
 19278  017648  06DE               	decf	postinc2,f,c
 19279  01764A  0E00               	movlw	0
 19280  01764C  5ADD               	subwfb	postdec2,f,c
 19281                           
 19282                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 614:         n = n / 10;
 19283  01764E  0E0A               	movlw	10
 19284  017650  6EE6               	movwf	postinc1,c
 19285  017652  0E00               	movlw	0
 19286  017654  6EE6               	movwf	postinc1,c
 19287  017656  0E00               	movlw	0
 19288  017658  6EE6               	movwf	postinc1,c
 19289  01765A  0E00               	movlw	0
 19290  01765C  6EE6               	movwf	postinc1,c
 19291  01765E  0E00               	movlw	0
 19292  017660  6EE6               	movwf	postinc1,c
 19293  017662  0E00               	movlw	0
 19294  017664  6EE6               	movwf	postinc1,c
 19295  017666  0E00               	movlw	0
 19296  017668  6EE6               	movwf	postinc1,c
 19297  01766A  0E00               	movlw	0
 19298  01766C  6EE6               	movwf	postinc1,c
 19299                           
 19300                           ;stkvar	_n @ sp[(-22)+0]
 19301  01766E  50E1               	movf	fsr1l,w,c
 19302  017670  0FEA               	addlw	-22
 19303  017672  6ED9               	movwf	fsr2l,c
 19304  017674  50E2               	movf	fsr1h,w,c
 19305  017676  6EDA               	movwf	fsr2h,c
 19306  017678  0EFF               	movlw	255
 19307  01767A  22DA               	addwfc	fsr2h,f,c
 19308  01767C  006F FF7B FFE6     	movff	postinc2,postinc1
 19309  017682  006F FF7B FFE6     	movff	postinc2,postinc1
 19310  017688  006F FF7B FFE6     	movff	postinc2,postinc1
 19311  01768E  006F FF7B FFE6     	movff	postinc2,postinc1
 19312  017694  006F FF7B FFE6     	movff	postinc2,postinc1
 19313  01769A  006F FF7B FFE6     	movff	postinc2,postinc1
 19314  0176A0  006F FF7B FFE6     	movff	postinc2,postinc1
 19315  0176A6  006F FF7B FFE6     	movff	postinc2,postinc1
 19316  0176AC  ECC9  F0CD         	call	___lodiv	;wreg free
 19317  0176B0  52E5               	movf	postdec1,f,c
 19318  0176B2  006F FF9C  F018    	movff	indf1,btemp+23
 19319  0176B8  52E5               	movf	postdec1,f,c
 19320  0176BA  006F FF9C  F017    	movff	indf1,btemp+22
 19321  0176C0  52E5               	movf	postdec1,f,c
 19322  0176C2  006F FF9C  F016    	movff	indf1,btemp+21
 19323  0176C8  52E5               	movf	postdec1,f,c
 19324  0176CA  006F FF9C  F015    	movff	indf1,btemp+20
 19325  0176D0  52E5               	movf	postdec1,f,c
 19326  0176D2  006F FF9C  F014    	movff	indf1,btemp+19
 19327  0176D8  52E5               	movf	postdec1,f,c
 19328  0176DA  006F FF9C  F013    	movff	indf1,btemp+18
 19329  0176E0  52E5               	movf	postdec1,f,c
 19330  0176E2  006F FF9C  F012    	movff	indf1,btemp+17
 19331  0176E8  52E5               	movf	postdec1,f,c
 19332  0176EA  006F FF9C  F011    	movff	indf1,btemp+16
 19333  0176F0  0EF8               	movlw	248
 19334  0176F2  26E1               	addwf	fsr1l,f,c
 19335  0176F4  0EFF               	movlw	255
 19336  0176F6  22E2               	addwfc	fsr1h,f,c
 19337                           
 19338                           ;stkvar	_n @ sp[(-14)+0]
 19339  0176F8  0EF2               	movlw	-14
 19340  0176FA  0060  F047  FFE3   	movff	btemp+16,plusw1
 19341  017700  0EF3               	movlw	-13
 19342  017702  0060  F04B  FFE3   	movff	btemp+17,plusw1
 19343  017708  0EF4               	movlw	-12
 19344  01770A  0060  F04F  FFE3   	movff	btemp+18,plusw1
 19345  017710  0EF5               	movlw	-11
 19346  017712  0060  F053  FFE3   	movff	btemp+19,plusw1
 19347  017718  0EF6               	movlw	-10
 19348  01771A  0060  F057  FFE3   	movff	btemp+20,plusw1
 19349  017720  0EF7               	movlw	-9
 19350  017722  0060  F05B  FFE3   	movff	btemp+21,plusw1
 19351  017728  0EF8               	movlw	-8
 19352  01772A  0060  F05F  FFE3   	movff	btemp+22,plusw1
 19353  017730  0EF9               	movlw	-7
 19354  017732  0060  F063  FFE3   	movff	btemp+23,plusw1
 19355  017738                     l13832:
 19356                           
 19357                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
 19358                           ;stkvar	_i @ sp[(-14)+8]
 19359  017738  0EFA               	movlw	-6
 19360  01773A  006F FF8C  F001    	movff	plusw1,btemp
 19361  017740  0EFB               	movlw	-5
 19362  017742  50E3               	movf	plusw1,w,c
 19363  017744  1001               	iorwf	btemp^0,w,c
 19364  017746  B4D8               	btfsc	status,2,c
 19365  017748  D02F               	goto	u13080
 19366                           
 19367                           ;stkvar	_n @ sp[(-14)+0]
 19368  01774A  0EF2               	movlw	-14
 19369  01774C  50E3               	movf	plusw1,w,c
 19370  01774E  E115               	bnz	u13051
 19371  017750  0EF3               	movlw	-13
 19372  017752  50E3               	movf	plusw1,w,c
 19373  017754  E112               	bnz	u13051
 19374  017756  0EF4               	movlw	-12
 19375  017758  50E3               	movf	plusw1,w,c
 19376  01775A  E10F               	bnz	u13051
 19377  01775C  0EF5               	movlw	-11
 19378  01775E  50E3               	movf	plusw1,w,c
 19379  017760  E10C               	bnz	u13051
 19380  017762  0EF6               	movlw	-10
 19381  017764  50E3               	movf	plusw1,w,c
 19382  017766  E109               	bnz	u13051
 19383  017768  0EF7               	movlw	-9
 19384  01776A  50E3               	movf	plusw1,w,c
 19385  01776C  E106               	bnz	u13051
 19386  01776E  0EF8               	movlw	-8
 19387  017770  50E3               	movf	plusw1,w,c
 19388  017772  E103               	bnz	u13051
 19389  017774  0EF9               	movlw	-7
 19390  017776  50E3               	movf	plusw1,w,c
 19391  017778  A4D8               	btfss	status,2,c
 19392  01777A                     u13051:
 19393  01777A  D6E3               	goto	l13822
 19394                           
 19395                           ;stkvar	_p @ sp[(-14)+12]
 19396  01777C  0EFF               	movlw	-1
 19397  01777E  BEE3               	btfsc	plusw1,7,c
 19398  017780  D007               	goto	u13060
 19399  017782  0EFF               	movlw	-1
 19400  017784  50E3               	movf	plusw1,w,c
 19401  017786  E103               	bnz	u13061
 19402  017788  0EFE               	movlw	-2
 19403  01778A  04E3               	decf	plusw1,w,c
 19404  01778C  B0D8               	btfsc	status,0,c
 19405  01778E                     u13061:
 19406  01778E  D6D9               	goto	l13822
 19407  017790                     u13060:
 19408                           
 19409                           ;stkvar	_w @ sp[(-14)+10]
 19410  017790  0EFD               	movlw	-3
 19411  017792  BEE3               	btfsc	plusw1,7,c
 19412  017794  D009               	goto	u13080
 19413  017796  0EFD               	movlw	-3
 19414  017798  50E3               	movf	plusw1,w,c
 19415  01779A  E104               	bnz	u13070
 19416  01779C  0EFC               	movlw	-4
 19417  01779E  04E3               	decf	plusw1,w,c
 19418  0177A0  A0D8               	btfss	status,0,c
 19419  0177A2  D002               	goto	u13080
 19420  0177A4                     u13070:
 19421  0177A4  B23E               	btfsc	_flags^0,1,c
 19422  0177A6  D6CD               	goto	l13822
 19423  0177A8                     u13080:
 19424                           
 19425                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 618:     return pad(fp, &dbuf
      +                          [i], w);
 19426                           ;stkvar	_w @ sp[(-14)+10]
 19427  0177A8  0EFC               	movlw	-4
 19428  0177AA  006F FF8F FFE6     	movff	plusw1,postinc1
 19429  0177B0  006F FF8F FFE6     	movff	plusw1,postinc1
 19430                           
 19431                           ;stkvar	_i @ sp[(-16)+8]
 19432  0177B6  0E54               	movlw	low _dbuf
 19433  0177B8  6E0B               	movwf	(btemp+10)^0,c
 19434  0177BA  0E03               	movlw	high _dbuf
 19435  0177BC  6E0C               	movwf	(btemp+11)^0,c
 19436  0177BE  0EF8               	movlw	-8
 19437  0177C0  50E3               	movf	plusw1,w,c
 19438  0177C2  260B               	addwf	(btemp+10)^0,f,c
 19439  0177C4  0EF9               	movlw	-7
 19440  0177C6  50E3               	movf	plusw1,w,c
 19441  0177C8  220C               	addwfc	(btemp+11)^0,f,c
 19442  0177CA  0060  F02F  FFE6   	movff	btemp+10,postinc1
 19443  0177D0  0060  F033  FFE6   	movff	btemp+11,postinc1
 19444                           
 19445                           ;stkvar	_fp @ sp[(-18)+-2]
 19446  0177D6  0EEC               	movlw	-20
 19447  0177D8  006F FF8F FFE6     	movff	plusw1,postinc1
 19448  0177DE  006F FF8F FFE6     	movff	plusw1,postinc1
 19449  0177E4  ECC3  F0D6         	call	_pad	;wreg free
 19450                           
 19451                           ; _utoa: autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 19452  0177E8  0EE8               	movlw	232
 19453  0177EA  26E1               	addwf	fsr1l,f,c
 19454  0177EC  0EFF               	movlw	255
 19455  0177EE  22E2               	addwfc	fsr1h,f,c
 19456  0177F0  0012               	return		;funcret
 19457  0177F2                     __end_of_utoa:
 19458                           	opt callstack 0
 19459                           
 19460 ;; *************** function ___lomod *****************
 19461 ;; Defined at:
 19462 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lomod.c"
 19463 ;; Parameters:    Size  Location     Type
 19464 ;;  dividend        8  [STACK] unsigned long long 
 19465 ;;  divisor         8  [STACK] unsigned long long 
 19466 ;; Auto vars:     Size  Location     Type
 19467 ;;  counter         1  [STACK] unsigned char 
 19468 ;; Return value:  Size  Location     Type
 19469 ;;                  8  [STACK] unsigned long long 
 19470 ;; Registers used:
 19471 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 19472 ;; Tracked objects:
 19473 ;;		On entry : 0/3
 19474 ;;		On exit  : 0/0
 19475 ;;		Unchanged: 0/0
 19476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19477 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19478 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19479 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19480 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19481 ;;Total ram usage:        0 bytes
 19482 ;; Hardware stack levels used:    1
 19483 ;; Hardware stack levels required when called:   15
 19484 ;; This function calls:
 19485 ;;		Nothing
 19486 ;; This function is called by:
 19487 ;;		_utoa
 19488 ;; This function uses a reentrant model
 19489 ;;
 19490                           
 19491                           	psect	text74
 19492  01A6A2                     __ptext74:
 19493                           	opt callstack 0
 19494  01A6A2                     ___lomod:
 19495                           	opt callstack 0
 19496                           
 19497                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 19498  01A6A2  52E6               	movf	postinc1,f,c
 19499                           
 19500                           ;stkvar	_divisor @ sp[(-1)+-16]
 19501                           
 19502                           ;incstack = 0
 19503 ;; hardware stack exceeded
 19504  01A6A4  0EEF               	movlw	-17
 19505  01A6A6  50E3               	movf	plusw1,w,c
 19506  01A6A8  E116               	bnz	u8020
 19507  01A6AA  0EF0               	movlw	-16
 19508  01A6AC  50E3               	movf	plusw1,w,c
 19509  01A6AE  E113               	bnz	u8020
 19510  01A6B0  0EF1               	movlw	-15
 19511  01A6B2  50E3               	movf	plusw1,w,c
 19512  01A6B4  E110               	bnz	u8020
 19513  01A6B6  0EF2               	movlw	-14
 19514  01A6B8  50E3               	movf	plusw1,w,c
 19515  01A6BA  E10D               	bnz	u8020
 19516  01A6BC  0EF3               	movlw	-13
 19517  01A6BE  50E3               	movf	plusw1,w,c
 19518  01A6C0  E10A               	bnz	u8020
 19519  01A6C2  0EF4               	movlw	-12
 19520  01A6C4  50E3               	movf	plusw1,w,c
 19521  01A6C6  E107               	bnz	u8020
 19522  01A6C8  0EF5               	movlw	-11
 19523  01A6CA  50E3               	movf	plusw1,w,c
 19524  01A6CC  E104               	bnz	u8020
 19525  01A6CE  0EF6               	movlw	-10
 19526  01A6D0  50E3               	movf	plusw1,w,c
 19527  01A6D2  B4D8               	btfsc	status,2,c
 19528  01A6D4  D075               	goto	u8050
 19529  01A6D6                     u8020:
 19530                           
 19531                           ;stkvar	_counter @ sp[(-1)+0]
 19532  01A6D6  0EFF               	movlw	-1
 19533  01A6D8  6AE3               	clrf	plusw1,c
 19534  01A6DA  D012               	goto	L20
 19535  01A6DC                     l9564:
 19536                           
 19537                           ;stkvar	_divisor @ sp[(-1)+-16]
 19538  01A6DC  90D8               	bcf	status,0,c
 19539  01A6DE  0EEF               	movlw	-17
 19540  01A6E0  36E3               	rlcf	plusw1,f,c
 19541  01A6E2  0EF0               	movlw	-16
 19542  01A6E4  36E3               	rlcf	plusw1,f,c
 19543  01A6E6  0EF1               	movlw	-15
 19544  01A6E8  36E3               	rlcf	plusw1,f,c
 19545  01A6EA  0EF2               	movlw	-14
 19546  01A6EC  36E3               	rlcf	plusw1,f,c
 19547  01A6EE  0EF3               	movlw	-13
 19548  01A6F0  36E3               	rlcf	plusw1,f,c
 19549  01A6F2  0EF4               	movlw	-12
 19550  01A6F4  36E3               	rlcf	plusw1,f,c
 19551  01A6F6  0EF5               	movlw	-11
 19552  01A6F8  36E3               	rlcf	plusw1,f,c
 19553  01A6FA  0EF6               	movlw	-10
 19554  01A6FC  36E3               	rlcf	plusw1,f,c
 19555                           
 19556                           ;stkvar	_counter @ sp[(-1)+0]
 19557  01A6FE  0EFF               	movlw	-1
 19558  01A700                     L20:
 19559  01A700  2AE3               	incf	plusw1,f,c
 19560                           
 19561                           ;stkvar	_divisor @ sp[(-1)+-16]
 19562  01A702  0EF6               	movlw	-10
 19563  01A704  AEE3               	btfss	plusw1,7,c
 19564  01A706  D7EA               	goto	l9564
 19565  01A708                     u8030:
 19566                           
 19567                           ;stkvar	_divisor @ sp[(-1)+-16]
 19568                           ;stkvar	_dividend @ sp[(-1)+-8]
 19569  01A708  50E1               	movf	fsr1l,w,c
 19570  01A70A  0FF7               	addlw	-9
 19571  01A70C  6ED9               	movwf	fsr2l,c
 19572  01A70E  50E2               	movf	fsr1h,w,c
 19573  01A710  6EDA               	movwf	fsr2h,c
 19574  01A712  0EFF               	movlw	255
 19575  01A714  22DA               	addwfc	fsr2h,f,c
 19576  01A716  0EEF               	movlw	-17
 19577  01A718  50E3               	movf	plusw1,w,c
 19578  01A71A  5CDE               	subwf	postinc2,w,c
 19579  01A71C  0EF0               	movlw	-16
 19580  01A71E  50E3               	movf	plusw1,w,c
 19581  01A720  58DE               	subwfb	postinc2,w,c
 19582  01A722  0EF1               	movlw	-15
 19583  01A724  50E3               	movf	plusw1,w,c
 19584  01A726  58DE               	subwfb	postinc2,w,c
 19585  01A728  0EF2               	movlw	-14
 19586  01A72A  50E3               	movf	plusw1,w,c
 19587  01A72C  58DE               	subwfb	postinc2,w,c
 19588  01A72E  0EF3               	movlw	-13
 19589  01A730  50E3               	movf	plusw1,w,c
 19590  01A732  58DE               	subwfb	postinc2,w,c
 19591  01A734  0EF4               	movlw	-12
 19592  01A736  50E3               	movf	plusw1,w,c
 19593  01A738  58DE               	subwfb	postinc2,w,c
 19594  01A73A  0EF5               	movlw	-11
 19595  01A73C  50E3               	movf	plusw1,w,c
 19596  01A73E  58DE               	subwfb	postinc2,w,c
 19597  01A740  0EF6               	movlw	-10
 19598  01A742  50E3               	movf	plusw1,w,c
 19599  01A744  58DE               	subwfb	postinc2,w,c
 19600  01A746  A0D8               	btfss	status,0,c
 19601  01A748  D01F               	goto	l9572
 19602                           
 19603                           ;stkvar	_divisor @ sp[(-1)+-16]
 19604                           ;stkvar	_dividend @ sp[(-1)+-8]
 19605  01A74A  50E1               	movf	fsr1l,w,c
 19606  01A74C  0FF7               	addlw	-9
 19607  01A74E  6ED9               	movwf	fsr2l,c
 19608  01A750  50E2               	movf	fsr1h,w,c
 19609  01A752  6EDA               	movwf	fsr2h,c
 19610  01A754  0EFF               	movlw	255
 19611  01A756  22DA               	addwfc	fsr2h,f,c
 19612  01A758  0EEF               	movlw	-17
 19613  01A75A  50E3               	movf	plusw1,w,c
 19614  01A75C  5EDE               	subwf	postinc2,f,c
 19615  01A75E  0EF0               	movlw	-16
 19616  01A760  50E3               	movf	plusw1,w,c
 19617  01A762  5ADE               	subwfb	postinc2,f,c
 19618  01A764  0EF1               	movlw	-15
 19619  01A766  50E3               	movf	plusw1,w,c
 19620  01A768  5ADE               	subwfb	postinc2,f,c
 19621  01A76A  0EF2               	movlw	-14
 19622  01A76C  50E3               	movf	plusw1,w,c
 19623  01A76E  5ADE               	subwfb	postinc2,f,c
 19624  01A770  0EF3               	movlw	-13
 19625  01A772  50E3               	movf	plusw1,w,c
 19626  01A774  5ADE               	subwfb	postinc2,f,c
 19627  01A776  0EF4               	movlw	-12
 19628  01A778  50E3               	movf	plusw1,w,c
 19629  01A77A  5ADE               	subwfb	postinc2,f,c
 19630  01A77C  0EF5               	movlw	-11
 19631  01A77E  50E3               	movf	plusw1,w,c
 19632  01A780  5ADE               	subwfb	postinc2,f,c
 19633  01A782  0EF6               	movlw	-10
 19634  01A784  50E3               	movf	plusw1,w,c
 19635  01A786  5ADE               	subwfb	postinc2,f,c
 19636  01A788                     l9572:
 19637                           
 19638                           ;stkvar	_divisor @ sp[(-1)+-16]
 19639  01A788  90D8               	bcf	status,0,c
 19640  01A78A  0EF6               	movlw	-10
 19641  01A78C  32E3               	rrcf	plusw1,f,c
 19642  01A78E  0EF5               	movlw	-11
 19643  01A790  32E3               	rrcf	plusw1,f,c
 19644  01A792  0EF4               	movlw	-12
 19645  01A794  32E3               	rrcf	plusw1,f,c
 19646  01A796  0EF3               	movlw	-13
 19647  01A798  32E3               	rrcf	plusw1,f,c
 19648  01A79A  0EF2               	movlw	-14
 19649  01A79C  32E3               	rrcf	plusw1,f,c
 19650  01A79E  0EF1               	movlw	-15
 19651  01A7A0  32E3               	rrcf	plusw1,f,c
 19652  01A7A2  0EF0               	movlw	-16
 19653  01A7A4  32E3               	rrcf	plusw1,f,c
 19654  01A7A6  0EEF               	movlw	-17
 19655  01A7A8  32E3               	rrcf	plusw1,f,c
 19656                           
 19657                           ;stkvar	_counter @ sp[(-1)+0]
 19658  01A7AA  0EFF               	movlw	-1
 19659  01A7AC  50E3               	movf	plusw1,w,c
 19660  01A7AE  6E01               	movwf	btemp^0,c
 19661  01A7B0  0E01               	movlw	1
 19662  01A7B2  5E01               	subwf	btemp^0,f,c
 19663  01A7B4  0EFF               	movlw	-1
 19664  01A7B6  0060  F007  FFE3   	movff	btemp,plusw1
 19665  01A7BC  A4D8               	btfss	status,2,c
 19666  01A7BE  D7A4               	goto	u8030
 19667  01A7C0                     u8050:
 19668                           
 19669                           ;stkvar	_dividend @ sp[(-1)+-8]
 19670  01A7C0  0EF7               	movlw	247
 19671  01A7C2  24E1               	addwf	fsr1l,w,c
 19672  01A7C4  6ED9               	movwf	fsr2l,c
 19673  01A7C6  0EFF               	movlw	255
 19674  01A7C8  20E2               	addwfc	fsr1h,w,c
 19675  01A7CA  6EDA               	movwf	fsr2h,c
 19676                           
 19677                           ;stkvar	?___lomod @ sp[(-1)+-8]
 19678  01A7CC  0E08               	movlw	8
 19679  01A7CE  6E01               	movwf	btemp^0,c
 19680  01A7D0  0EF7               	movlw	-9
 19681  01A7D2                     us806999:
 19682  01A7D2  006F FF7B FFE3     	movff	postinc2,plusw1
 19683  01A7D8  28E8               	incf	wreg,w,c
 19684  01A7DA  2E01               	decfsz	btemp^0,f,c
 19685  01A7DC  D7FA               	bra	us806999
 19686                           
 19687                           ; ___lomod: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 19688  01A7DE  52E5               	movf	postdec1,f,c
 19689  01A7E0  0012               	return		;funcret
 19690  01A7E2                     __end_of___lomod:
 19691                           	opt callstack 0
 19692                           
 19693 ;; *************** function ___lodiv *****************
 19694 ;; Defined at:
 19695 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lodiv.c"
 19696 ;; Parameters:    Size  Location     Type
 19697 ;;  dividend        8  [STACK] unsigned long long 
 19698 ;;  divisor         8  [STACK] unsigned long long 
 19699 ;; Auto vars:     Size  Location     Type
 19700 ;;  quotient        8  [STACK] unsigned long long 
 19701 ;;  counter         1  [STACK] unsigned char 
 19702 ;; Return value:  Size  Location     Type
 19703 ;;                  8  [STACK] unsigned long long 
 19704 ;; Registers used:
 19705 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 19706 ;; Tracked objects:
 19707 ;;		On entry : 0/3
 19708 ;;		On exit  : 0/0
 19709 ;;		Unchanged: 0/0
 19710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19711 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19712 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19714 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19715 ;;Total ram usage:        0 bytes
 19716 ;; Hardware stack levels used:    1
 19717 ;; Hardware stack levels required when called:   15
 19718 ;; This function calls:
 19719 ;;		Nothing
 19720 ;; This function is called by:
 19721 ;;		_utoa
 19722 ;; This function uses a reentrant model
 19723 ;;
 19724                           
 19725                           	psect	text75
 19726  019B92                     __ptext75:
 19727                           	opt callstack 0
 19728  019B92                     ___lodiv:
 19729                           	opt callstack 0
 19730                           
 19731                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 19732  019B92  0E09               	movlw	9
 19733  019B94  26E1               	addwf	fsr1l,f,c
 19734  019B96  0E00               	movlw	0
 19735  019B98  22E2               	addwfc	fsr1h,f,c
 19736                           
 19737                           ;stkvar	_quotient @ sp[(-9)+0]
 19738                           
 19739                           ;incstack = 0
 19740 ;; hardware stack exceeded
 19741  019B9A  0E07               	movlw	7
 19742  019B9C  6E01               	movwf	btemp^0,c
 19743  019B9E  0EF7               	movlw	-9
 19744  019BA0                     u7961:
 19745  019BA0  6AE3               	clrf	plusw1,c
 19746  019BA2  2AE8               	incf	wreg,f,c
 19747  019BA4  0601               	decf	btemp^0,f,c
 19748  019BA6  E2FC               	bc	u7961
 19749                           
 19750                           ;stkvar	_divisor @ sp[(-9)+-16]
 19751  019BA8  0EE7               	movlw	-25
 19752  019BAA  50E3               	movf	plusw1,w,c
 19753  019BAC  E116               	bnz	u7970
 19754  019BAE  0EE8               	movlw	-24
 19755  019BB0  50E3               	movf	plusw1,w,c
 19756  019BB2  E113               	bnz	u7970
 19757  019BB4  0EE9               	movlw	-23
 19758  019BB6  50E3               	movf	plusw1,w,c
 19759  019BB8  E110               	bnz	u7970
 19760  019BBA  0EEA               	movlw	-22
 19761  019BBC  50E3               	movf	plusw1,w,c
 19762  019BBE  E10D               	bnz	u7970
 19763  019BC0  0EEB               	movlw	-21
 19764  019BC2  50E3               	movf	plusw1,w,c
 19765  019BC4  E10A               	bnz	u7970
 19766  019BC6  0EEC               	movlw	-20
 19767  019BC8  50E3               	movf	plusw1,w,c
 19768  019BCA  E107               	bnz	u7970
 19769  019BCC  0EED               	movlw	-19
 19770  019BCE  50E3               	movf	plusw1,w,c
 19771  019BD0  E104               	bnz	u7970
 19772  019BD2  0EEE               	movlw	-18
 19773  019BD4  50E3               	movf	plusw1,w,c
 19774  019BD6  B4D8               	btfsc	status,2,c
 19775  019BD8  D088               	goto	u8000
 19776  019BDA                     u7970:
 19777                           
 19778                           ;stkvar	_counter @ sp[(-9)+8]
 19779  019BDA  0EFF               	movlw	-1
 19780  019BDC  6AE3               	clrf	plusw1,c
 19781  019BDE  D012               	goto	L21
 19782  019BE0                     l9540:
 19783                           
 19784                           ;stkvar	_divisor @ sp[(-9)+-16]
 19785  019BE0  90D8               	bcf	status,0,c
 19786  019BE2  0EE7               	movlw	-25
 19787  019BE4  36E3               	rlcf	plusw1,f,c
 19788  019BE6  0EE8               	movlw	-24
 19789  019BE8  36E3               	rlcf	plusw1,f,c
 19790  019BEA  0EE9               	movlw	-23
 19791  019BEC  36E3               	rlcf	plusw1,f,c
 19792  019BEE  0EEA               	movlw	-22
 19793  019BF0  36E3               	rlcf	plusw1,f,c
 19794  019BF2  0EEB               	movlw	-21
 19795  019BF4  36E3               	rlcf	plusw1,f,c
 19796  019BF6  0EEC               	movlw	-20
 19797  019BF8  36E3               	rlcf	plusw1,f,c
 19798  019BFA  0EED               	movlw	-19
 19799  019BFC  36E3               	rlcf	plusw1,f,c
 19800  019BFE  0EEE               	movlw	-18
 19801  019C00  36E3               	rlcf	plusw1,f,c
 19802                           
 19803                           ;stkvar	_counter @ sp[(-9)+8]
 19804  019C02  0EFF               	movlw	-1
 19805  019C04                     L21:
 19806  019C04  2AE3               	incf	plusw1,f,c
 19807                           
 19808                           ;stkvar	_divisor @ sp[(-9)+-16]
 19809  019C06  0EEE               	movlw	-18
 19810  019C08  AEE3               	btfss	plusw1,7,c
 19811  019C0A  D7EA               	goto	l9540
 19812  019C0C                     u7980:
 19813                           
 19814                           ;stkvar	_quotient @ sp[(-9)+0]
 19815  019C0C  90D8               	bcf	status,0,c
 19816  019C0E  0EF7               	movlw	-9
 19817  019C10  36E3               	rlcf	plusw1,f,c
 19818  019C12  0EF8               	movlw	-8
 19819  019C14  36E3               	rlcf	plusw1,f,c
 19820  019C16  0EF9               	movlw	-7
 19821  019C18  36E3               	rlcf	plusw1,f,c
 19822  019C1A  0EFA               	movlw	-6
 19823  019C1C  36E3               	rlcf	plusw1,f,c
 19824  019C1E  0EFB               	movlw	-5
 19825  019C20  36E3               	rlcf	plusw1,f,c
 19826  019C22  0EFC               	movlw	-4
 19827  019C24  36E3               	rlcf	plusw1,f,c
 19828  019C26  0EFD               	movlw	-3
 19829  019C28  36E3               	rlcf	plusw1,f,c
 19830  019C2A  0EFE               	movlw	-2
 19831  019C2C  36E3               	rlcf	plusw1,f,c
 19832                           
 19833                           ;stkvar	_divisor @ sp[(-9)+-16]
 19834                           ;stkvar	_dividend @ sp[(-9)+-8]
 19835  019C2E  50E1               	movf	fsr1l,w,c
 19836  019C30  0FEF               	addlw	-17
 19837  019C32  6ED9               	movwf	fsr2l,c
 19838  019C34  50E2               	movf	fsr1h,w,c
 19839  019C36  6EDA               	movwf	fsr2h,c
 19840  019C38  0EFF               	movlw	255
 19841  019C3A  22DA               	addwfc	fsr2h,f,c
 19842  019C3C  0EE7               	movlw	-25
 19843  019C3E  50E3               	movf	plusw1,w,c
 19844  019C40  5CDE               	subwf	postinc2,w,c
 19845  019C42  0EE8               	movlw	-24
 19846  019C44  50E3               	movf	plusw1,w,c
 19847  019C46  58DE               	subwfb	postinc2,w,c
 19848  019C48  0EE9               	movlw	-23
 19849  019C4A  50E3               	movf	plusw1,w,c
 19850  019C4C  58DE               	subwfb	postinc2,w,c
 19851  019C4E  0EEA               	movlw	-22
 19852  019C50  50E3               	movf	plusw1,w,c
 19853  019C52  58DE               	subwfb	postinc2,w,c
 19854  019C54  0EEB               	movlw	-21
 19855  019C56  50E3               	movf	plusw1,w,c
 19856  019C58  58DE               	subwfb	postinc2,w,c
 19857  019C5A  0EEC               	movlw	-20
 19858  019C5C  50E3               	movf	plusw1,w,c
 19859  019C5E  58DE               	subwfb	postinc2,w,c
 19860  019C60  0EED               	movlw	-19
 19861  019C62  50E3               	movf	plusw1,w,c
 19862  019C64  58DE               	subwfb	postinc2,w,c
 19863  019C66  0EEE               	movlw	-18
 19864  019C68  50E3               	movf	plusw1,w,c
 19865  019C6A  58DE               	subwfb	postinc2,w,c
 19866  019C6C  A0D8               	btfss	status,0,c
 19867  019C6E  D021               	goto	l9552
 19868                           
 19869                           ;stkvar	_divisor @ sp[(-9)+-16]
 19870                           ;stkvar	_dividend @ sp[(-9)+-8]
 19871  019C70  50E1               	movf	fsr1l,w,c
 19872  019C72  0FEF               	addlw	-17
 19873  019C74  6ED9               	movwf	fsr2l,c
 19874  019C76  50E2               	movf	fsr1h,w,c
 19875  019C78  6EDA               	movwf	fsr2h,c
 19876  019C7A  0EFF               	movlw	255
 19877  019C7C  22DA               	addwfc	fsr2h,f,c
 19878  019C7E  0EE7               	movlw	-25
 19879  019C80  50E3               	movf	plusw1,w,c
 19880  019C82  5EDE               	subwf	postinc2,f,c
 19881  019C84  0EE8               	movlw	-24
 19882  019C86  50E3               	movf	plusw1,w,c
 19883  019C88  5ADE               	subwfb	postinc2,f,c
 19884  019C8A  0EE9               	movlw	-23
 19885  019C8C  50E3               	movf	plusw1,w,c
 19886  019C8E  5ADE               	subwfb	postinc2,f,c
 19887  019C90  0EEA               	movlw	-22
 19888  019C92  50E3               	movf	plusw1,w,c
 19889  019C94  5ADE               	subwfb	postinc2,f,c
 19890  019C96  0EEB               	movlw	-21
 19891  019C98  50E3               	movf	plusw1,w,c
 19892  019C9A  5ADE               	subwfb	postinc2,f,c
 19893  019C9C  0EEC               	movlw	-20
 19894  019C9E  50E3               	movf	plusw1,w,c
 19895  019CA0  5ADE               	subwfb	postinc2,f,c
 19896  019CA2  0EED               	movlw	-19
 19897  019CA4  50E3               	movf	plusw1,w,c
 19898  019CA6  5ADE               	subwfb	postinc2,f,c
 19899  019CA8  0EEE               	movlw	-18
 19900  019CAA  50E3               	movf	plusw1,w,c
 19901  019CAC  5ADE               	subwfb	postinc2,f,c
 19902                           
 19903                           ;stkvar	_quotient @ sp[(-9)+0]
 19904  019CAE  0EF7               	movlw	-9
 19905  019CB0  80E3               	bsf	plusw1,0,c
 19906  019CB2                     l9552:
 19907                           
 19908                           ;stkvar	_divisor @ sp[(-9)+-16]
 19909  019CB2  90D8               	bcf	status,0,c
 19910  019CB4  0EEE               	movlw	-18
 19911  019CB6  32E3               	rrcf	plusw1,f,c
 19912  019CB8  0EED               	movlw	-19
 19913  019CBA  32E3               	rrcf	plusw1,f,c
 19914  019CBC  0EEC               	movlw	-20
 19915  019CBE  32E3               	rrcf	plusw1,f,c
 19916  019CC0  0EEB               	movlw	-21
 19917  019CC2  32E3               	rrcf	plusw1,f,c
 19918  019CC4  0EEA               	movlw	-22
 19919  019CC6  32E3               	rrcf	plusw1,f,c
 19920  019CC8  0EE9               	movlw	-23
 19921  019CCA  32E3               	rrcf	plusw1,f,c
 19922  019CCC  0EE8               	movlw	-24
 19923  019CCE  32E3               	rrcf	plusw1,f,c
 19924  019CD0  0EE7               	movlw	-25
 19925  019CD2  32E3               	rrcf	plusw1,f,c
 19926                           
 19927                           ;stkvar	_counter @ sp[(-9)+8]
 19928  019CD4  0EFF               	movlw	-1
 19929  019CD6  50E3               	movf	plusw1,w,c
 19930  019CD8  6E01               	movwf	btemp^0,c
 19931  019CDA  0E01               	movlw	1
 19932  019CDC  5E01               	subwf	btemp^0,f,c
 19933  019CDE  0EFF               	movlw	-1
 19934  019CE0  0060  F007  FFE3   	movff	btemp,plusw1
 19935  019CE6  A4D8               	btfss	status,2,c
 19936  019CE8  D791               	goto	u7980
 19937  019CEA                     u8000:
 19938                           
 19939                           ;stkvar	_quotient @ sp[(-9)+0]
 19940  019CEA  0EF7               	movlw	247
 19941  019CEC  24E1               	addwf	fsr1l,w,c
 19942  019CEE  6ED9               	movwf	fsr2l,c
 19943  019CF0  0EFF               	movlw	255
 19944  019CF2  20E2               	addwfc	fsr1h,w,c
 19945  019CF4  6EDA               	movwf	fsr2h,c
 19946                           
 19947                           ;stkvar	?___lodiv @ sp[(-9)+-8]
 19948  019CF6  0E08               	movlw	8
 19949  019CF8  6E01               	movwf	btemp^0,c
 19950  019CFA  0EEF               	movlw	-17
 19951  019CFC                     us801999:
 19952  019CFC  006F FF7B FFE3     	movff	postinc2,plusw1
 19953  019D02  28E8               	incf	wreg,w,c
 19954  019D04  2E01               	decfsz	btemp^0,f,c
 19955  019D06  D7FA               	bra	us801999
 19956                           
 19957                           ; ___lodiv: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 19958  019D08  0EF7               	movlw	247
 19959  019D0A  26E1               	addwf	fsr1l,f,c
 19960  019D0C  0EFF               	movlw	255
 19961  019D0E  22E2               	addwfc	fsr1h,f,c
 19962  019D10  0012               	return		;funcret
 19963  019D12                     __end_of___lodiv:
 19964                           	opt callstack 0
 19965                           
 19966 ;; *************** function _strncmp *****************
 19967 ;; Defined at:
 19968 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strncmp.c"
 19969 ;; Parameters:    Size  Location     Type
 19970 ;;  _l              2  [STACK] PTR const unsigned char 
 19971 ;;		 -> ct(3), STR_93(127), STR_91(3), STR_90(3), 
 19972 ;;		 -> STR_89(19), STR_88(19), STR_87(19), STR_86(19), 
 19973 ;;		 -> STR_85(19), STR_84(19), STR_83(24), STR_82(15), 
 19974 ;;		 -> STR_81(15), STR_80(15), STR_79(10), STR_78(10), 
 19975 ;;		 -> STR_77(19), STR_76(19), STR_73(3), STR_72(3), 
 19976 ;;		 -> STR_71(21), STR_70(21), STR_69(21), STR_68(21), 
 19977 ;;		 -> STR_67(21), STR_66(21), STR_65(21), STR_64(21), 
 19978 ;;		 -> STR_63(21), STR_62(18), STR_61(21), STR_60(21), 
 19979 ;;		 -> STR_59(21), STR_58(21), STR_57(21), STR_56(21), 
 19980 ;;		 -> STR_55(21), STR_54(21), STR_53(21), STR_52(21), 
 19981 ;;		 -> STR_51(21), STR_50(21), STR_49(20), STR_48(21), 
 19982 ;;		 -> STR_47(21), STR_46(21), STR_45(22), STR_44(22), 
 19983 ;;		 -> STR_43(22), STR_42(23), STR_41(23), STR_40(23), 
 19984 ;;		 -> STR_39(29), STR_38(23), STR_37(23), STR_36(22), 
 19985 ;;		 -> STR_35(22), STR_34(22), STR_33(22), STR_32(22), 
 19986 ;;		 -> STR_31(22), STR_30(22), STR_29(22), STR_28(22), 
 19987 ;;		 -> STR_27(22), STR_26(22), STR_25(22), STR_24(17), 
 19988 ;;		 -> STR_23(16), STR_22(16), STR_21(26), STR_20(26), 
 19989 ;;		 -> STR_19(22), STR_18(21), STR_17(21), STR_16(21), 
 19990 ;;		 -> STR_15(21), STR_14(22), STR_13(22), STR_12(22), 
 19991 ;;		 -> STR_11(26), STR_10(21), STR_9(21), STR_8(21), 
 19992 ;;		 -> STR_7(21), STR_6(21), STR_5(21), STR_4(21), 
 19993 ;;		 -> STR_2(21), STR_1(21), 
 19994 ;;  _r              2  [STACK] PTR const unsigned char 
 19995 ;;		 -> STR_127(3), STR_123(3), STR_118(3), STR_113(3), 
 19996 ;;		 -> STR_108(3), STR_104(3), 
 19997 ;;  n               2  [STACK] unsigned int 
 19998 ;; Auto vars:     Size  Location     Type
 19999 ;;  r               2  [STACK] PTR const unsigned char 
 20000 ;;		 -> STR_127(3), STR_123(3), STR_118(3), STR_113(3), 
 20001 ;;		 -> STR_108(3), STR_104(3), 
 20002 ;;  l               2  [STACK] PTR const unsigned char 
 20003 ;;		 -> ct(3), STR_93(127), STR_91(3), STR_90(3), 
 20004 ;;		 -> STR_89(19), STR_88(19), STR_87(19), STR_86(19), 
 20005 ;;		 -> STR_85(19), STR_84(19), STR_83(24), STR_82(15), 
 20006 ;;		 -> STR_81(15), STR_80(15), STR_79(10), STR_78(10), 
 20007 ;;		 -> STR_77(19), STR_76(19), STR_73(3), STR_72(3), 
 20008 ;;		 -> STR_71(21), STR_70(21), STR_69(21), STR_68(21), 
 20009 ;;		 -> STR_67(21), STR_66(21), STR_65(21), STR_64(21), 
 20010 ;;		 -> STR_63(21), STR_62(18), STR_61(21), STR_60(21), 
 20011 ;;		 -> STR_59(21), STR_58(21), STR_57(21), STR_56(21), 
 20012 ;;		 -> STR_55(21), STR_54(21), STR_53(21), STR_52(21), 
 20013 ;;		 -> STR_51(21), STR_50(21), STR_49(20), STR_48(21), 
 20014 ;;		 -> STR_47(21), STR_46(21), STR_45(22), STR_44(22), 
 20015 ;;		 -> STR_43(22), STR_42(23), STR_41(23), STR_40(23), 
 20016 ;;		 -> STR_39(29), STR_38(23), STR_37(23), STR_36(22), 
 20017 ;;		 -> STR_35(22), STR_34(22), STR_33(22), STR_32(22), 
 20018 ;;		 -> STR_31(22), STR_30(22), STR_29(22), STR_28(22), 
 20019 ;;		 -> STR_27(22), STR_26(22), STR_25(22), STR_24(17), 
 20020 ;;		 -> STR_23(16), STR_22(16), STR_21(26), STR_20(26), 
 20021 ;;		 -> STR_19(22), STR_18(21), STR_17(21), STR_16(21), 
 20022 ;;		 -> STR_15(21), STR_14(22), STR_13(22), STR_12(22), 
 20023 ;;		 -> STR_11(26), STR_10(21), STR_9(21), STR_8(21), 
 20024 ;;		 -> STR_7(21), STR_6(21), STR_5(21), STR_4(21), 
 20025 ;;		 -> STR_2(21), STR_1(21), 
 20026 ;; Return value:  Size  Location     Type
 20027 ;;                  2  [STACK] int 
 20028 ;; Registers used:
 20029 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tbl
      +ptrh, tblptru, prodl
 20030 ;; Tracked objects:
 20031 ;;		On entry : 0/0
 20032 ;;		On exit  : 0/0
 20033 ;;		Unchanged: 0/0
 20034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20035 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20036 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20037 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20038 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20039 ;;Total ram usage:        0 bytes
 20040 ;; Hardware stack levels used:    1
 20041 ;; Hardware stack levels required when called:   15
 20042 ;; This function calls:
 20043 ;;		Nothing
 20044 ;; This function is called by:
 20045 ;;		_vfpfcnvrt
 20046 ;; This function uses a reentrant model
 20047 ;;
 20048                           
 20049                           	psect	text76
 20050  018D1A                     __ptext76:
 20051                           	opt callstack 0
 20052  018D1A                     _strncmp:
 20053                           	opt callstack 0
 20054                           
 20055                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20056  018D1A  52E6               	movf	postinc1,f,c
 20057  018D1C  52E6               	movf	postinc1,f,c
 20058  018D1E  52E6               	movf	postinc1,f,c
 20059  018D20  52E6               	movf	postinc1,f,c
 20060                           
 20061                           ;stkvar	__l @ sp[(-4)+-2]
 20062                           
 20063                           ;incstack = 0
 20064 ;; hardware stack exceeded
 20065  018D22  0EFA               	movlw	-6
 20066  018D24  006F FF8C  F00B    	movff	plusw1,btemp+10
 20067  018D2A  0EFB               	movlw	-5
 20068  018D2C  006F FF8C  F00C    	movff	plusw1,btemp+11
 20069                           
 20070                           ;stkvar	_l @ sp[(-4)+2]
 20071  018D32  0EFF               	movlw	-1
 20072  018D34  0060  F033  FFE3   	movff	btemp+11,plusw1
 20073  018D3A  0EFE               	movlw	-2
 20074  018D3C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20075                           
 20076                           ;stkvar	__r @ sp[(-4)+-4]
 20077  018D42  0EF8               	movlw	-8
 20078  018D44  006F FF8C  F00B    	movff	plusw1,btemp+10
 20079  018D4A  0EF9               	movlw	-7
 20080  018D4C  006F FF8C  F00C    	movff	plusw1,btemp+11
 20081                           
 20082                           ;stkvar	_r @ sp[(-4)+0]
 20083  018D52  0EFD               	movlw	-3
 20084  018D54  0060  F033  FFE3   	movff	btemp+11,plusw1
 20085  018D5A  0EFC               	movlw	-4
 20086  018D5C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20087                           
 20088                           ;stkvar	_n @ sp[(-4)+-6]
 20089  018D62  0EF6               	movlw	-10
 20090  018D64  006F FF8C  F001    	movff	plusw1,btemp
 20091  018D6A  0E01               	movlw	1
 20092  018D6C  5E01               	subwf	btemp^0,f,c
 20093  018D6E  0EF6               	movlw	-10
 20094  018D70  0060  F007  FFE3   	movff	btemp,plusw1
 20095  018D76  0EF7               	movlw	-9
 20096  018D78  006F FF8C  F001    	movff	plusw1,btemp
 20097  018D7E  0E00               	movlw	0
 20098  018D80  5A01               	subwfb	btemp^0,f,c
 20099  018D82  0EF7               	movlw	-9
 20100  018D84  0060  F007  FFE3   	movff	btemp,plusw1
 20101  018D8A  0EF6               	movlw	-10
 20102  018D8C  28E3               	incf	plusw1,w,c
 20103  018D8E  E13F               	bnz	l10222
 20104  018D90  0EF7               	movlw	-9
 20105  018D92  28E3               	incf	plusw1,w,c
 20106  018D94  A4D8               	btfss	status,2,c
 20107  018D96  D03B               	goto	l10222
 20108  018D98  0E00               	movlw	0
 20109  018D9A  6E01               	movwf	btemp^0,c
 20110  018D9C  0E00               	movlw	0
 20111  018D9E  6E02               	movwf	(btemp+1)^0,c
 20112  018DA0  D0C7               	goto	l3739
 20113  018DA2                     l10220:
 20114                           
 20115                           ;stkvar	_l @ sp[(-4)+2]
 20116  018DA2  0EFE               	movlw	-2
 20117  018DA4  50E3               	movf	plusw1,w,c
 20118  018DA6  0F01               	addlw	1
 20119  018DA8  6E01               	movwf	btemp^0,c
 20120  018DAA  0EFE               	movlw	-2
 20121  018DAC  0060  F007  FFE3   	movff	btemp,plusw1
 20122  018DB2  6A01               	clrf	btemp^0,c
 20123  018DB4  0EFF               	movlw	-1
 20124  018DB6  50E3               	movf	plusw1,w,c
 20125  018DB8  2001               	addwfc	btemp^0,w,c
 20126  018DBA  6E01               	movwf	btemp^0,c
 20127  018DBC  0EFF               	movlw	-1
 20128  018DBE  0060  F007  FFE3   	movff	btemp,plusw1
 20129                           
 20130                           ;stkvar	_r @ sp[(-4)+0]
 20131  018DC4  0EFC               	movlw	-4
 20132  018DC6  50E3               	movf	plusw1,w,c
 20133  018DC8  0F01               	addlw	1
 20134  018DCA  6E01               	movwf	btemp^0,c
 20135  018DCC  0EFC               	movlw	-4
 20136  018DCE  0060  F007  FFE3   	movff	btemp,plusw1
 20137  018DD4  6A01               	clrf	btemp^0,c
 20138  018DD6  0EFD               	movlw	-3
 20139  018DD8  50E3               	movf	plusw1,w,c
 20140  018DDA  2001               	addwfc	btemp^0,w,c
 20141  018DDC  6E01               	movwf	btemp^0,c
 20142  018DDE  0EFD               	movlw	-3
 20143  018DE0  0060  F007  FFE3   	movff	btemp,plusw1
 20144                           
 20145                           ;stkvar	_n @ sp[(-4)+-6]
 20146  018DE6  0EF6               	movlw	-10
 20147  018DE8  006F FF8C  F001    	movff	plusw1,btemp
 20148  018DEE  0E01               	movlw	1
 20149  018DF0  5E01               	subwf	btemp^0,f,c
 20150  018DF2  0EF6               	movlw	-10
 20151  018DF4  0060  F007  FFE3   	movff	btemp,plusw1
 20152  018DFA  0EF7               	movlw	-9
 20153  018DFC  006F FF8C  F001    	movff	plusw1,btemp
 20154  018E02  0E00               	movlw	0
 20155  018E04  5A01               	subwfb	btemp^0,f,c
 20156  018E06  0EF7               	movlw	-9
 20157  018E08  0060  F007  FFE3   	movff	btemp,plusw1
 20158  018E0E                     l10222:
 20159                           
 20160                           ;stkvar	_l @ sp[(-4)+2]
 20161  018E0E  0EFE               	movlw	-2
 20162  018E10  006F FF8F FFF6     	movff	plusw1,tblptrl
 20163  018E16  0EFF               	movlw	-1
 20164  018E18  006F FF8F FFF7     	movff	plusw1,tblptrh
 20165  018E1E  0E00               	movlw	low (__mediumconst shr (0+16))
 20166  018E20  6EF8               	movwf	tblptru,c
 20167  018E22  0E1F               	movlw	(high __ramtop+-1)
 20168  018E24  64F7               	cpfsgt	tblptrh,c
 20169  018E26  D003               	bra	u9257
 20170  018E28  0008               	tblrd		*
 20171  018E2A  50F5               	movf	tablat,w,c
 20172  018E2C  D007               	bra	u9250
 20173  018E2E                     u9257:
 20174  018E2E  006F FFDB FFE9     	movff	tblptrl,fsr0l
 20175  018E34  006F FFDF FFEA     	movff	tblptrh,fsr0h
 20176  018E3A  50EF               	movf	indf0,w,c
 20177  018E3C                     u9250:
 20178  018E3C  0900               	iorlw	0
 20179  018E3E  B4D8               	btfsc	status,2,c
 20180  018E40  D04A               	goto	u9290
 20181                           
 20182                           ;stkvar	_r @ sp[(-4)+0]
 20183  018E42  50E1               	movf	fsr1l,w,c
 20184  018E44  0FFC               	addlw	-4
 20185  018E46  6ED9               	movwf	fsr2l,c
 20186  018E48  50E2               	movf	fsr1h,w,c
 20187  018E4A  6EDA               	movwf	fsr2h,c
 20188  018E4C  0EFF               	movlw	255
 20189  018E4E  22DA               	addwfc	fsr2h,f,c
 20190  018E50  006F FF7B FFF6     	movff	postinc2,tblptrl
 20191  018E56  006F FF77 FFF7     	movff	postdec2,tblptrh
 20192  018E5C                     	if	0	;tblptru may be non-zero
 20193  018E5C                     	endif
 20194  018E5C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20195  018E5C  0E00               	movlw	low (__mediumconst shr (0+16))
 20196  018E5E  6EF8               	movwf	tblptru,c
 20197  018E60                     	endif
 20198  018E60  0008               	tblrd		*
 20199  018E62  50F5               	movf	tablat,w,c
 20200  018E64  0900               	iorlw	0
 20201  018E66  B4D8               	btfsc	status,2,c
 20202  018E68  D036               	goto	u9290
 20203                           
 20204                           ;stkvar	_n @ sp[(-4)+-6]
 20205  018E6A  0EF6               	movlw	-10
 20206  018E6C  006F FF8C  F001    	movff	plusw1,btemp
 20207  018E72  0EF7               	movlw	-9
 20208  018E74  50E3               	movf	plusw1,w,c
 20209  018E76  1001               	iorwf	btemp^0,w,c
 20210  018E78  B4D8               	btfsc	status,2,c
 20211  018E7A  D02D               	goto	u9290
 20212                           
 20213                           ;stkvar	_r @ sp[(-4)+0]
 20214  018E7C  50E1               	movf	fsr1l,w,c
 20215  018E7E  0FFC               	addlw	-4
 20216  018E80  6ED9               	movwf	fsr2l,c
 20217  018E82  50E2               	movf	fsr1h,w,c
 20218  018E84  6EDA               	movwf	fsr2h,c
 20219  018E86  0EFF               	movlw	255
 20220  018E88  22DA               	addwfc	fsr2h,f,c
 20221  018E8A  006F FF7B FFF6     	movff	postinc2,tblptrl
 20222  018E90  006F FF77 FFF7     	movff	postdec2,tblptrh
 20223  018E96                     	if	0	;tblptru may be non-zero
 20224  018E96                     	endif
 20225  018E96                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20226  018E96  0E00               	movlw	low (__mediumconst shr (0+16))
 20227  018E98  6EF8               	movwf	tblptru,c
 20228  018E9A                     	endif
 20229  018E9A  0008               	tblrd		*
 20230  018E9C  006F FFD4  F00C    	movff	tablat,btemp+11
 20231                           
 20232                           ;stkvar	_l @ sp[(-4)+2]
 20233  018EA2  0EFE               	movlw	-2
 20234  018EA4  006F FF8F FFF6     	movff	plusw1,tblptrl
 20235  018EAA  0EFF               	movlw	-1
 20236  018EAC  006F FF8F FFF7     	movff	plusw1,tblptrh
 20237  018EB2  0E00               	movlw	low (__mediumconst shr (0+16))
 20238  018EB4  6EF8               	movwf	tblptru,c
 20239  018EB6  0E1F               	movlw	(high __ramtop+-1)
 20240  018EB8  64F7               	cpfsgt	tblptrh,c
 20241  018EBA  D003               	bra	u9297
 20242  018EBC  0008               	tblrd		*
 20243  018EBE  50F5               	movf	tablat,w,c
 20244  018EC0  D007               	bra	u9295
 20245  018EC2                     u9297:
 20246  018EC2  006F FFDB FFE9     	movff	tblptrl,fsr0l
 20247  018EC8  006F FFDF FFEA     	movff	tblptrh,fsr0h
 20248  018ECE  50EF               	movf	indf0,w,c
 20249  018ED0                     u9295:
 20250  018ED0  180C               	xorwf	(btemp+11)^0,w,c
 20251  018ED2  B4D8               	btfsc	status,2,c
 20252  018ED4  D766               	goto	l10220
 20253  018ED6                     u9290:
 20254                           
 20255                           ;stkvar	_l @ sp[(-4)+2]
 20256  018ED6  0EFE               	movlw	-2
 20257  018ED8  006F FF8F FFF6     	movff	plusw1,tblptrl
 20258  018EDE  0EFF               	movlw	-1
 20259  018EE0  006F FF8F FFF7     	movff	plusw1,tblptrh
 20260  018EE6  0E00               	movlw	low (__mediumconst shr (0+16))
 20261  018EE8  6EF8               	movwf	tblptru,c
 20262  018EEA  0E1F               	movlw	(high __ramtop+-1)
 20263  018EEC  64F7               	cpfsgt	tblptrh,c
 20264  018EEE  D003               	bra	u9307
 20265  018EF0  0008               	tblrd		*
 20266  018EF2  50F5               	movf	tablat,w,c
 20267  018EF4  D007               	bra	u9300
 20268  018EF6                     u9307:
 20269  018EF6  006F FFDB FFE9     	movff	tblptrl,fsr0l
 20270  018EFC  006F FFDF FFEA     	movff	tblptrh,fsr0h
 20271  018F02  50EF               	movf	indf0,w,c
 20272  018F04                     u9300:
 20273  018F04  6E01               	movwf	btemp^0,c
 20274  018F06  6A02               	clrf	(btemp+1)^0,c
 20275                           
 20276                           ;stkvar	_r @ sp[(-4)+0]
 20277  018F08  50E1               	movf	fsr1l,w,c
 20278  018F0A  0FFC               	addlw	-4
 20279  018F0C  6ED9               	movwf	fsr2l,c
 20280  018F0E  50E2               	movf	fsr1h,w,c
 20281  018F10  6EDA               	movwf	fsr2h,c
 20282  018F12  0EFF               	movlw	255
 20283  018F14  22DA               	addwfc	fsr2h,f,c
 20284  018F16  006F FF7B FFF6     	movff	postinc2,tblptrl
 20285  018F1C  006F FF77 FFF7     	movff	postdec2,tblptrh
 20286  018F22                     	if	0	;tblptru may be non-zero
 20287  018F22                     	endif
 20288  018F22                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20289  018F22  0E00               	movlw	low (__mediumconst shr (0+16))
 20290  018F24  6EF8               	movwf	tblptru,c
 20291  018F26                     	endif
 20292  018F26  0008               	tblrd		*
 20293  018F28  50F5               	movf	tablat,w,c
 20294  018F2A  5E01               	subwf	btemp^0,f,c
 20295  018F2C  0E00               	movlw	0
 20296  018F2E  5A02               	subwfb	(btemp+1)^0,f,c
 20297  018F30                     l3739:
 20298                           
 20299                           ; _strncmp: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsi
      +                          ze = 6, vargsize = 0
 20300  018F30  0EF6               	movlw	246
 20301  018F32  26E1               	addwf	fsr1l,f,c
 20302  018F34  0EFF               	movlw	255
 20303  018F36  22E2               	addwfc	fsr1h,f,c
 20304  018F38  0012               	return		;funcret
 20305  018F3A                     __end_of_strncmp:
 20306                           	opt callstack 0
 20307                           
 20308 ;; *************** function _stoa *****************
 20309 ;; Defined at:
 20310 ;;		line 546 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 20311 ;; Parameters:    Size  Location     Type
 20312 ;;  fp              2  [STACK] PTR struct _IO_FILE
 20313 ;;		 -> f(6), NULL(0), 
 20314 ;;  s               2  [STACK] PTR unsigned char 
 20315 ;;		 -> ?_printf(2), ?_sprintf(2), STR_75(9), STR_74(12), 
 20316 ;;		 -> D.lcd(480), D(482), T(144), cp(4), 
 20317 ;;		 -> cb(4), STR_3(5), V(192), 
 20318 ;; Auto vars:     Size  Location     Type
 20319 ;;  nuls            7  [STACK] unsigned char [7]
 20320 ;;  l               2  [STACK] int 
 20321 ;;  p               2  [STACK] int 
 20322 ;;  cp              2  [STACK] PTR unsigned char 
 20323 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), STR_75(9), 
 20324 ;;		 -> STR_74(12), D.lcd(480), D(482), T(144), 
 20325 ;;		 -> cp(4), cb(4), STR_3(5), V(192), 
 20326 ;;  w               2  [STACK] int 
 20327 ;;  i               2  [STACK] int 
 20328 ;; Return value:  Size  Location     Type
 20329 ;;                  2  [STACK] int 
 20330 ;; Registers used:
 20331 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 20332 ;; Tracked objects:
 20333 ;;		On entry : 0/0
 20334 ;;		On exit  : 0/0
 20335 ;;		Unchanged: 0/0
 20336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20337 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20338 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20340 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20341 ;;Total ram usage:        0 bytes
 20342 ;; Hardware stack levels used:    1
 20343 ;; Hardware stack levels required when called:   18
 20344 ;; This function calls:
 20345 ;;		_fputc
 20346 ;;		_strlen
 20347 ;; This function is called by:
 20348 ;;		_vfpfcnvrt
 20349 ;; This function uses a reentrant model
 20350 ;;
 20351                           
 20352                           	psect	text77
 20353  0180E2                     __ptext77:
 20354                           	opt callstack 0
 20355  0180E2                     _stoa:
 20356                           	opt callstack 0
 20357                           
 20358                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 20359  0180E2  0E11               	movlw	17
 20360  0180E4  26E1               	addwf	fsr1l,f,c
 20361  0180E6  0E00               	movlw	0
 20362  0180E8  22E2               	addwfc	fsr1h,f,c
 20363                           
 20364                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
 20365                           
 20366                           ;incstack = 0
 20367 ;; hardware stack exceeded
 20368  0180EA  EE20  F100         	lfsr	2,stoa@F1166
 20369                           
 20370                           ;stkvar	_nuls @ sp[(-17)+0]
 20371  0180EE  0E07               	movlw	7
 20372  0180F0  6E01               	movwf	btemp^0,c
 20373  0180F2  0EEF               	movlw	-17
 20374  0180F4                     us1291999:
 20375  0180F4  006F FF7B FFE3     	movff	postinc2,plusw1
 20376  0180FA  28E8               	incf	wreg,w,c
 20377  0180FC  2E01               	decfsz	btemp^0,f,c
 20378  0180FE  D7FA               	bra	us1291999
 20379                           
 20380                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 552:     cp = s;
 20381                           ;stkvar	_s @ sp[(-17)+-4]
 20382  018100  0EEB               	movlw	-21
 20383  018102  006F FF8C  F00B    	movff	plusw1,btemp+10
 20384  018108  0EEC               	movlw	-20
 20385  01810A  006F FF8C  F00C    	movff	plusw1,btemp+11
 20386                           
 20387                           ;stkvar	_cp @ sp[(-17)+11]
 20388  018110  0EFB               	movlw	-5
 20389  018112  0060  F033  FFE3   	movff	btemp+11,plusw1
 20390  018118  0EFA               	movlw	-6
 20391  01811A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20392                           
 20393                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
 20394                           ;stkvar	_cp @ sp[(-17)+11]
 20395  018120  0EFA               	movlw	-6
 20396  018122  006F FF8C  F001    	movff	plusw1,btemp
 20397  018128  0EFB               	movlw	-5
 20398  01812A  50E3               	movf	plusw1,w,c
 20399  01812C  1001               	iorwf	btemp^0,w,c
 20400  01812E  A4D8               	btfss	status,2,c
 20401  018130  D00E               	goto	l13762
 20402                           
 20403                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
 20404                           ;stkvar	_nuls @ sp[(-17)+0]
 20405  018132  0EEF               	movlw	239
 20406  018134  24E1               	addwf	fsr1l,w,c
 20407  018136  6E0B               	movwf	(btemp+10)^0,c
 20408  018138  0EFF               	movlw	255
 20409  01813A  20E2               	addwfc	fsr1h,w,c
 20410  01813C  6E0C               	movwf	(btemp+11)^0,c
 20411                           
 20412                           ;stkvar	_cp @ sp[(-17)+11]
 20413  01813E  0EFB               	movlw	-5
 20414  018140  0060  F033  FFE3   	movff	btemp+11,plusw1
 20415  018146  0EFA               	movlw	-6
 20416  018148  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20417  01814E                     l13762:
 20418                           
 20419                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
 20420                           ;stkvar	_cp @ sp[(-17)+11]
 20421  01814E  0EFA               	movlw	-6
 20422  018150  006F FF8F FFE6     	movff	plusw1,postinc1
 20423  018156  006F FF8F FFE6     	movff	plusw1,postinc1
 20424  01815C  EC55  F0DF         	call	_strlen	;wreg free
 20425                           
 20426                           ;stkvar	_l @ sp[(-17)+7]
 20427  018160  0EF6               	movlw	-10
 20428  018162  0060  F007  FFE3   	movff	btemp,plusw1
 20429  018168  0EF7               	movlw	-9
 20430  01816A  0060  F00B  FFE3   	movff	btemp+1,plusw1
 20431                           
 20432                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 559:     p = prec;
 20433                           ;stkvar	_p @ sp[(-17)+9]
 20434  018170  0EF8               	movlw	-8
 20435  018172  0060  F0F3  FFE3   	movff	_prec,plusw1
 20436  018178  0EF9               	movlw	-7
 20437  01817A  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 20438                           
 20439                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
 20440                           ;stkvar	_p @ sp[(-17)+9]
 20441  018180  0EF9               	movlw	-7
 20442  018182  BEE3               	btfsc	plusw1,7,c
 20443  018184  D023               	goto	l2564
 20444                           
 20445                           ;stkvar	_l @ sp[(-17)+7]
 20446                           ;stkvar	_p @ sp[(-17)+9]
 20447  018186  50E1               	movf	fsr1l,w,c
 20448  018188  0FF8               	addlw	-8
 20449  01818A  6ED9               	movwf	fsr2l,c
 20450  01818C  50E2               	movf	fsr1h,w,c
 20451  01818E  6EDA               	movwf	fsr2h,c
 20452  018190  0EFF               	movlw	255
 20453  018192  22DA               	addwfc	fsr2h,f,c
 20454  018194  0EF6               	movlw	-10
 20455  018196  50E3               	movf	plusw1,w,c
 20456  018198  5CDE               	subwf	postinc2,w,c
 20457  01819A  50DE               	movf	postinc2,w,c
 20458  01819C  0A80               	xorlw	128
 20459  01819E  6E01               	movwf	btemp^0,c
 20460  0181A0  0EF7               	movlw	-9
 20461  0181A2  50E3               	movf	plusw1,w,c
 20462  0181A4  0A80               	xorlw	128
 20463  0181A6  5801               	subwfb	btemp^0,w,c
 20464  0181A8  B0D8               	btfsc	status,0,c
 20465  0181AA  D010               	goto	l2564
 20466                           
 20467                           ;stkvar	_p @ sp[(-17)+9]
 20468                           ;stkvar	_l @ sp[(-17)+7]
 20469  0181AC  0EF8               	movlw	-8
 20470  0181AE  006F FF8C  F001    	movff	plusw1,btemp
 20471  0181B4  0EF6               	movlw	-10
 20472  0181B6  0060  F007  FFE3   	movff	btemp,plusw1
 20473  0181BC  0EF9               	movlw	-7
 20474  0181BE  006F FF8C  F001    	movff	plusw1,btemp
 20475  0181C4  0EF7               	movlw	-9
 20476  0181C6  0060  F007  FFE3   	movff	btemp,plusw1
 20477  0181CC                     l2564:
 20478                           
 20479                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 561:     p = l;
 20480                           ;stkvar	_l @ sp[(-17)+7]
 20481                           ;stkvar	_p @ sp[(-17)+9]
 20482  0181CC  0EF6               	movlw	-10
 20483  0181CE  006F FF8C  F001    	movff	plusw1,btemp
 20484  0181D4  0EF8               	movlw	-8
 20485  0181D6  0060  F007  FFE3   	movff	btemp,plusw1
 20486  0181DC  0EF7               	movlw	-9
 20487  0181DE  006F FF8C  F001    	movff	plusw1,btemp
 20488  0181E4  0EF9               	movlw	-7
 20489  0181E6  0060  F007  FFE3   	movff	btemp,plusw1
 20490                           
 20491                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 562:     w = width;
 20492                           ;stkvar	_w @ sp[(-17)+13]
 20493  0181EC  0EFC               	movlw	-4
 20494  0181EE  0060  F0EB  FFE3   	movff	_width,plusw1
 20495  0181F4  0EFD               	movlw	-3
 20496  0181F6  0060  F0EF  FFE3   	movff	_width+1,plusw1
 20497                           
 20498                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
 20499  0181FC  A03E               	btfss	_flags^0,0,c
 20500  0181FE  D01F               	goto	l13782
 20501  018200  D031               	goto	u12960
 20502  018202                     l13778:
 20503                           
 20504                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
 20505                           ;stkvar	_fp @ sp[(-17)+-2]
 20506  018202  0EED               	movlw	-19
 20507  018204  006F FF8F FFE6     	movff	plusw1,postinc1
 20508  01820A  006F FF8F FFE6     	movff	plusw1,postinc1
 20509  018210  0E20               	movlw	32
 20510  018212  6EE6               	movwf	postinc1,c
 20511  018214  0E00               	movlw	0
 20512  018216  6EE6               	movwf	postinc1,c
 20513  018218  EC88  F0D4         	call	_fputc	;wreg free
 20514                           
 20515                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 568:             ++l;
 20516                           ;stkvar	_l @ sp[(-17)+7]
 20517  01821C  0EF6               	movlw	-10
 20518  01821E  50E3               	movf	plusw1,w,c
 20519  018220  0F01               	addlw	1
 20520  018222  6E01               	movwf	btemp^0,c
 20521  018224  0EF6               	movlw	-10
 20522  018226  0060  F007  FFE3   	movff	btemp,plusw1
 20523  01822C  6A01               	clrf	btemp^0,c
 20524  01822E  0EF7               	movlw	-9
 20525  018230  50E3               	movf	plusw1,w,c
 20526  018232  2001               	addwfc	btemp^0,w,c
 20527  018234  6E01               	movwf	btemp^0,c
 20528  018236  0EF7               	movlw	-9
 20529  018238  0060  F007  FFE3   	movff	btemp,plusw1
 20530  01823E                     l13782:
 20531                           
 20532                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
 20533                           ;stkvar	_w @ sp[(-17)+13]
 20534                           ;stkvar	_l @ sp[(-17)+7]
 20535  01823E  50E1               	movf	fsr1l,w,c
 20536  018240  0FF6               	addlw	-10
 20537  018242  6ED9               	movwf	fsr2l,c
 20538  018244  50E2               	movf	fsr1h,w,c
 20539  018246  6EDA               	movwf	fsr2h,c
 20540  018248  0EFF               	movlw	255
 20541  01824A  22DA               	addwfc	fsr2h,f,c
 20542  01824C  0EFC               	movlw	-4
 20543  01824E  50E3               	movf	plusw1,w,c
 20544  018250  5CDE               	subwf	postinc2,w,c
 20545  018252  50DE               	movf	postinc2,w,c
 20546  018254  0A80               	xorlw	128
 20547  018256  6E01               	movwf	btemp^0,c
 20548  018258  0EFD               	movlw	-3
 20549  01825A  50E3               	movf	plusw1,w,c
 20550  01825C  0A80               	xorlw	128
 20551  01825E  5801               	subwfb	btemp^0,w,c
 20552  018260  A0D8               	btfss	status,0,c
 20553  018262  D7CF               	goto	l13778
 20554  018264                     u12960:
 20555                           
 20556                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 573:     i = 0;
 20557                           ;stkvar	_i @ sp[(-17)+15]
 20558  018264  0EFE               	movlw	-2
 20559  018266  6AE3               	clrf	plusw1,c
 20560  018268  0EFF               	movlw	-1
 20561  01826A  6AE3               	clrf	plusw1,c
 20562                           
 20563                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 20564  01826C  D045               	goto	l13792
 20565  01826E                     l13786:
 20566                           
 20567                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
 20568                           ;stkvar	_fp @ sp[(-17)+-2]
 20569  01826E  0EED               	movlw	-19
 20570  018270  006F FF8F FFE6     	movff	plusw1,postinc1
 20571  018276  006F FF8F FFE6     	movff	plusw1,postinc1
 20572                           
 20573                           ;stkvar	_cp @ sp[(-19)+11]
 20574  01827C  0EF8               	movlw	-8
 20575  01827E  006F FF8F FFF6     	movff	plusw1,tblptrl
 20576  018284  0EF9               	movlw	-7
 20577  018286  006F FF8F FFF7     	movff	plusw1,tblptrh
 20578  01828C  0E00               	movlw	low (__mediumconst shr (0+16))
 20579  01828E  6EF8               	movwf	tblptru,c
 20580  018290  0E1F               	movlw	(high __ramtop+-1)
 20581  018292  64F7               	cpfsgt	tblptrh,c
 20582  018294  D003               	bra	u12977
 20583  018296  0008               	tblrd		*
 20584  018298  50F5               	movf	tablat,w,c
 20585  01829A  D007               	bra	u12970
 20586  01829C                     u12977:
 20587  01829C  006F FFDB FFE9     	movff	tblptrl,fsr0l
 20588  0182A2  006F FFDF FFEA     	movff	tblptrh,fsr0h
 20589  0182A8  50EF               	movf	indf0,w,c
 20590  0182AA                     u12970:
 20591  0182AA  6EE6               	movwf	postinc1,c
 20592  0182AC  0E00               	movlw	0
 20593  0182AE  6EE6               	movwf	postinc1,c
 20594  0182B0  EC88  F0D4         	call	_fputc	;wreg free
 20595                           
 20596                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 576:         ++cp;
 20597                           ;stkvar	_cp @ sp[(-17)+11]
 20598  0182B4  0EFA               	movlw	-6
 20599  0182B6  50E3               	movf	plusw1,w,c
 20600  0182B8  0F01               	addlw	1
 20601  0182BA  6E01               	movwf	btemp^0,c
 20602  0182BC  0EFA               	movlw	-6
 20603  0182BE  0060  F007  FFE3   	movff	btemp,plusw1
 20604  0182C4  6A01               	clrf	btemp^0,c
 20605  0182C6  0EFB               	movlw	-5
 20606  0182C8  50E3               	movf	plusw1,w,c
 20607  0182CA  2001               	addwfc	btemp^0,w,c
 20608  0182CC  6E01               	movwf	btemp^0,c
 20609  0182CE  0EFB               	movlw	-5
 20610  0182D0  0060  F007  FFE3   	movff	btemp,plusw1
 20611                           
 20612                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 577:         ++i;
 20613                           ;stkvar	_i @ sp[(-17)+15]
 20614  0182D6  0EFE               	movlw	-2
 20615  0182D8  50E3               	movf	plusw1,w,c
 20616  0182DA  0F01               	addlw	1
 20617  0182DC  6E01               	movwf	btemp^0,c
 20618  0182DE  0EFE               	movlw	-2
 20619  0182E0  0060  F007  FFE3   	movff	btemp,plusw1
 20620  0182E6  6A01               	clrf	btemp^0,c
 20621  0182E8  0EFF               	movlw	-1
 20622  0182EA  50E3               	movf	plusw1,w,c
 20623  0182EC  2001               	addwfc	btemp^0,w,c
 20624  0182EE  6E01               	movwf	btemp^0,c
 20625  0182F0  0EFF               	movlw	-1
 20626  0182F2  0060  F007  FFE3   	movff	btemp,plusw1
 20627  0182F8                     l13792:
 20628                           
 20629                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 20630                           ;stkvar	_p @ sp[(-17)+9]
 20631                           ;stkvar	_i @ sp[(-17)+15]
 20632  0182F8  50E1               	movf	fsr1l,w,c
 20633  0182FA  0FFE               	addlw	-2
 20634  0182FC  6ED9               	movwf	fsr2l,c
 20635  0182FE  50E2               	movf	fsr1h,w,c
 20636  018300  6EDA               	movwf	fsr2h,c
 20637  018302  0EFF               	movlw	255
 20638  018304  22DA               	addwfc	fsr2h,f,c
 20639  018306  0EF8               	movlw	-8
 20640  018308  50E3               	movf	plusw1,w,c
 20641  01830A  5CDE               	subwf	postinc2,w,c
 20642  01830C  50DE               	movf	postinc2,w,c
 20643  01830E  0A80               	xorlw	128
 20644  018310  6E01               	movwf	btemp^0,c
 20645  018312  0EF9               	movlw	-7
 20646  018314  50E3               	movf	plusw1,w,c
 20647  018316  0A80               	xorlw	128
 20648  018318  5801               	subwfb	btemp^0,w,c
 20649  01831A  A0D8               	btfss	status,0,c
 20650  01831C  D7A8               	goto	l13786
 20651                           
 20652                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
 20653  01831E  B03E               	btfsc	_flags^0,0,c
 20654  018320  D01F               	goto	l13800
 20655  018322  D031               	goto	u13000
 20656  018324                     l13796:
 20657                           
 20658                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
 20659                           ;stkvar	_fp @ sp[(-17)+-2]
 20660  018324  0EED               	movlw	-19
 20661  018326  006F FF8F FFE6     	movff	plusw1,postinc1
 20662  01832C  006F FF8F FFE6     	movff	plusw1,postinc1
 20663  018332  0E20               	movlw	32
 20664  018334  6EE6               	movwf	postinc1,c
 20665  018336  0E00               	movlw	0
 20666  018338  6EE6               	movwf	postinc1,c
 20667  01833A  EC88  F0D4         	call	_fputc	;wreg free
 20668                           
 20669                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 584:             ++l;
 20670                           ;stkvar	_l @ sp[(-17)+7]
 20671  01833E  0EF6               	movlw	-10
 20672  018340  50E3               	movf	plusw1,w,c
 20673  018342  0F01               	addlw	1
 20674  018344  6E01               	movwf	btemp^0,c
 20675  018346  0EF6               	movlw	-10
 20676  018348  0060  F007  FFE3   	movff	btemp,plusw1
 20677  01834E  6A01               	clrf	btemp^0,c
 20678  018350  0EF7               	movlw	-9
 20679  018352  50E3               	movf	plusw1,w,c
 20680  018354  2001               	addwfc	btemp^0,w,c
 20681  018356  6E01               	movwf	btemp^0,c
 20682  018358  0EF7               	movlw	-9
 20683  01835A  0060  F007  FFE3   	movff	btemp,plusw1
 20684  018360                     l13800:
 20685                           
 20686                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
 20687                           ;stkvar	_w @ sp[(-17)+13]
 20688                           ;stkvar	_l @ sp[(-17)+7]
 20689  018360  50E1               	movf	fsr1l,w,c
 20690  018362  0FF6               	addlw	-10
 20691  018364  6ED9               	movwf	fsr2l,c
 20692  018366  50E2               	movf	fsr1h,w,c
 20693  018368  6EDA               	movwf	fsr2h,c
 20694  01836A  0EFF               	movlw	255
 20695  01836C  22DA               	addwfc	fsr2h,f,c
 20696  01836E  0EFC               	movlw	-4
 20697  018370  50E3               	movf	plusw1,w,c
 20698  018372  5CDE               	subwf	postinc2,w,c
 20699  018374  50DE               	movf	postinc2,w,c
 20700  018376  0A80               	xorlw	128
 20701  018378  6E01               	movwf	btemp^0,c
 20702  01837A  0EFD               	movlw	-3
 20703  01837C  50E3               	movf	plusw1,w,c
 20704  01837E  0A80               	xorlw	128
 20705  018380  5801               	subwfb	btemp^0,w,c
 20706  018382  A0D8               	btfss	status,0,c
 20707  018384  D7CF               	goto	l13796
 20708  018386                     u13000:
 20709                           
 20710                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 588:     return l;
 20711                           ;stkvar	_l @ sp[(-17)+7]
 20712  018386  0EF6               	movlw	-10
 20713  018388  006F FF8C  F001    	movff	plusw1,btemp
 20714  01838E  0EF7               	movlw	-9
 20715  018390  006F FF8C  F002    	movff	plusw1,btemp+1
 20716                           
 20717                           ; _stoa: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 20718  018396  0EEB               	movlw	235
 20719  018398  26E1               	addwf	fsr1l,f,c
 20720  01839A  0EFF               	movlw	255
 20721  01839C  22E2               	addwfc	fsr1h,f,c
 20722  01839E  0012               	return		;funcret
 20723  0183A0                     __end_of_stoa:
 20724                           	opt callstack 0
 20725                           
 20726 ;; *************** function _efgtoa *****************
 20727 ;; Defined at:
 20728 ;;		line 319 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 20729 ;; Parameters:    Size  Location     Type
 20730 ;;  fp              2  [STACK] PTR struct _IO_FILE
 20731 ;;		 -> f(6), NULL(0), 
 20732 ;;  f               4  [STACK] PTR struct _IO_FILE
 20733 ;;  c               1  [STACK] unsigned char 
 20734 ;; Auto vars:     Size  Location     Type
 20735 ;;  u               4  [STACK] unsigned char 
 20736 ;;  g               4  [STACK] unsigned char 
 20737 ;;  l               4  [STACK] unsigned char 
 20738 ;;  h               4  [STACK] unsigned char 
 20739 ;;  ou              4  [STACK] unsigned char 
 20740 ;;  n               2  [STACK] int 
 20741 ;;  e               2  [STACK] int 
 20742 ;;  i               2  [STACK] int 
 20743 ;;  w               2  [STACK] int 
 20744 ;;  p               2  [STACK] int 
 20745 ;;  sign            2  [STACK] int 
 20746 ;;  d               2  [STACK] int 
 20747 ;;  ne              2  [STACK] int 
 20748 ;;  m               2  [STACK] int 
 20749 ;;  pp              2  [STACK] int 
 20750 ;;  t               2  [STACK] int 
 20751 ;;  mode            1  [STACK] unsigned char 
 20752 ;;  nmode           1  [STACK] unsigned char 
 20753 ;; Return value:  Size  Location     Type
 20754 ;;                  2  [STACK] int 
 20755 ;; Registers used:
 20756 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 20757 ;; Tracked objects:
 20758 ;;		On entry : 0/0
 20759 ;;		On exit  : 0/0
 20760 ;;		Unchanged: 0/0
 20761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20762 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20763 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20765 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20766 ;;Total ram usage:        0 bytes
 20767 ;; Hardware stack levels used:    1
 20768 ;; Hardware stack levels required when called:   20
 20769 ;; This function calls:
 20770 ;;		___awdiv
 20771 ;;		___awmod
 20772 ;;		___fladd
 20773 ;;		___fldiv
 20774 ;;		___fleq
 20775 ;;		___flge
 20776 ;;		___flmul
 20777 ;;		___flneg
 20778 ;;		___flsub
 20779 ;;		___fltol
 20780 ;;		___fpclassifyf
 20781 ;;		_floorf
 20782 ;;		_isupper
 20783 ;;		_pad
 20784 ;;		_strcpy
 20785 ;;		_tolower
 20786 ;; This function is called by:
 20787 ;;		_vfpfcnvrt
 20788 ;; This function uses a reentrant model
 20789 ;;
 20790                           
 20791                           	psect	text78
 20792  011292                     __ptext78:
 20793                           	opt callstack 0
 20794  011292                     _efgtoa:
 20795                           	opt callstack 0
 20796                           
 20797                           ; autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsize = 7 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 20798  011292  0E38               	movlw	56
 20799  011294  26E1               	addwf	fsr1l,f,c
 20800  011296  0E00               	movlw	0
 20801  011298  22E2               	addwfc	fsr1h,f,c
 20802                           
 20803                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 319: static int efgtoa(FILE *
      +                          fp, long double f, char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 320
      +                          : {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 321:     char mode, nmode;
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 322:     int d, e, i, m, n, n
      +                          e, p, pp, sign, t, w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 323:    
      +                           long double g, h, l, ou, u;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 3
      +                          26:     sign = 0;
 20804                           ;stkvar	_sign @ sp[(-56)+42]
 20805                           
 20806                           ;incstack = 0
 20807 ;; hardware stack exceeded
 20808  01129A  0EF2               	movlw	-14
 20809  01129C  6AE3               	clrf	plusw1,c
 20810  01129E  0EF3               	movlw	-13
 20811  0112A0  6AE3               	clrf	plusw1,c
 20812                           
 20813                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 327:     g = f;
 20814                           ;stkvar	_f @ sp[(-56)+-6]
 20815  0112A2  0EC2               	movlw	-62
 20816  0112A4  006F FF8C  F009    	movff	plusw1,btemp+8
 20817  0112AA  0EC3               	movlw	-61
 20818  0112AC  006F FF8C  F00A    	movff	plusw1,btemp+9
 20819  0112B2  0EC4               	movlw	-60
 20820  0112B4  006F FF8C  F00B    	movff	plusw1,btemp+10
 20821  0112BA  0EC5               	movlw	-59
 20822  0112BC  006F FF8C  F00C    	movff	plusw1,btemp+11
 20823                           
 20824                           ;stkvar	_g @ sp[(-56)+16]
 20825  0112C2  0ED8               	movlw	-40
 20826  0112C4  0060  F027  FFE3   	movff	btemp+8,plusw1
 20827  0112CA  0ED9               	movlw	-39
 20828  0112CC  0060  F02B  FFE3   	movff	btemp+9,plusw1
 20829  0112D2  0EDA               	movlw	-38
 20830  0112D4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20831  0112DA  0EDB               	movlw	-37
 20832  0112DC  0060  F033  FFE3   	movff	btemp+11,plusw1
 20833                           
 20834                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 328:     if (g < 0.0) {
 20835                           ;stkvar	_g @ sp[(-56)+16]
 20836  0112E2  0EDB               	movlw	-37
 20837  0112E4  AEE3               	btfss	plusw1,7,c
 20838  0112E6  D02B               	goto	l13460
 20839                           
 20840                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 329:         sign = 1;
 20841  0112E8  0E01               	movlw	1
 20842  0112EA  6E0B               	movwf	(btemp+10)^0,c
 20843  0112EC  0E00               	movlw	0
 20844  0112EE  6E0C               	movwf	(btemp+11)^0,c
 20845                           
 20846                           ;stkvar	_sign @ sp[(-56)+42]
 20847  0112F0  0EF2               	movlw	-14
 20848  0112F2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20849  0112F8  0EF3               	movlw	-13
 20850  0112FA  0060  F033  FFE3   	movff	btemp+11,plusw1
 20851                           
 20852                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 330:         g = -g;
 20853                           ;stkvar	_g @ sp[(-56)+16]
 20854  011300  0ED8               	movlw	-40
 20855  011302  006F FF8F FFE6     	movff	plusw1,postinc1
 20856  011308  006F FF8F FFE6     	movff	plusw1,postinc1
 20857  01130E  006F FF8F FFE6     	movff	plusw1,postinc1
 20858  011314  006F FF8F FFE6     	movff	plusw1,postinc1
 20859  01131A  ECBA  F0E6         	call	___flneg	;wreg free
 20860                           
 20861                           ;stkvar	_g @ sp[(-56)+16]
 20862  01131E  0ED8               	movlw	-40
 20863  011320  0060  F007  FFE3   	movff	btemp,plusw1
 20864  011326  0ED9               	movlw	-39
 20865  011328  0060  F00B  FFE3   	movff	btemp+1,plusw1
 20866  01132E  0EDA               	movlw	-38
 20867  011330  0060  F00F  FFE3   	movff	btemp+2,plusw1
 20868  011336  0EDB               	movlw	-37
 20869  011338  0060  F013  FFE3   	movff	btemp+3,plusw1
 20870  01133E                     l13460:
 20871                           
 20872                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 334:     n = 0;
 20873                           ;stkvar	_n @ sp[(-56)+32]
 20874  01133E  0EE8               	movlw	-24
 20875  011340  6AE3               	clrf	plusw1,c
 20876  011342  0EE9               	movlw	-23
 20877  011344  6AE3               	clrf	plusw1,c
 20878                           
 20879                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 335:     w = width;
 20880                           ;stkvar	_w @ sp[(-56)+38]
 20881  011346  0EEE               	movlw	-18
 20882  011348  0060  F0EB  FFE3   	movff	_width,plusw1
 20883  01134E  0EEF               	movlw	-17
 20884  011350  0060  F0EF  FFE3   	movff	_width+1,plusw1
 20885                           
 20886                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 336:     if (sign || (flags &
      +                           (1 << 2))) {
 20887                           ;stkvar	_sign @ sp[(-56)+42]
 20888  011356  0EF2               	movlw	-14
 20889  011358  006F FF8C  F001    	movff	plusw1,btemp
 20890  01135E  0EF3               	movlw	-13
 20891  011360  50E3               	movf	plusw1,w,c
 20892  011362  1001               	iorwf	btemp^0,w,c
 20893  011364  A4D8               	btfss	status,2,c
 20894  011366  D002               	goto	u12410
 20895  011368  A43E               	btfss	_flags^0,2,c
 20896  01136A  D036               	goto	l13480
 20897  01136C                     u12410:
 20898                           
 20899                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 337:         dbuf[n] = sign ?
      +                           '-' : '+';
 20900                           ;stkvar	_sign @ sp[(-56)+42]
 20901  01136C  0EF2               	movlw	-14
 20902  01136E  006F FF8C  F001    	movff	plusw1,btemp
 20903  011374  0EF3               	movlw	-13
 20904  011376  50E3               	movf	plusw1,w,c
 20905  011378  1001               	iorwf	btemp^0,w,c
 20906  01137A  A4D8               	btfss	status,2,c
 20907  01137C  D002               	goto	l13472
 20908  01137E  0E2B               	movlw	43
 20909  011380  D001               	goto	L22
 20910  011382                     l13472:
 20911  011382  0E2D               	movlw	45
 20912  011384                     L22:
 20913  011384  6E0B               	movwf	(btemp+10)^0,c
 20914  011386  0E00               	movlw	0
 20915  011388  6E0C               	movwf	(btemp+11)^0,c
 20916                           
 20917                           ;stkvar	_efgtoa$6524 @ sp[(-56)+10]
 20918  01138A  0ED2               	movlw	-46
 20919  01138C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20920  011392  0ED3               	movlw	-45
 20921  011394  0060  F033  FFE3   	movff	btemp+11,plusw1
 20922                           
 20923                           ;stkvar	_efgtoa$6524 @ sp[(-56)+10]
 20924  01139A  0ED2               	movlw	-46
 20925  01139C  006F FF8C  F354    	movff	plusw1,_dbuf
 20926                           
 20927                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 338:         ++n;
 20928                           ;stkvar	_n @ sp[(-56)+32]
 20929  0113A2  0EE8               	movlw	-24
 20930  0113A4  50E3               	movf	plusw1,w,c
 20931  0113A6  0F01               	addlw	1
 20932  0113A8  6E01               	movwf	btemp^0,c
 20933  0113AA  0EE8               	movlw	-24
 20934  0113AC  0060  F007  FFE3   	movff	btemp,plusw1
 20935  0113B2  6A01               	clrf	btemp^0,c
 20936  0113B4  0EE9               	movlw	-23
 20937  0113B6  50E3               	movf	plusw1,w,c
 20938  0113B8  2001               	addwfc	btemp^0,w,c
 20939  0113BA  6E01               	movwf	btemp^0,c
 20940  0113BC  0EE9               	movlw	-23
 20941  0113BE  0060  F007  FFE3   	movff	btemp,plusw1
 20942                           
 20943                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 339:         --w;
 20944                           ;stkvar	_w @ sp[(-56)+38]
 20945  0113C4  50E1               	movf	fsr1l,w,c
 20946  0113C6  0FEE               	addlw	-18
 20947  0113C8  6ED9               	movwf	fsr2l,c
 20948  0113CA  50E2               	movf	fsr1h,w,c
 20949  0113CC  6EDA               	movwf	fsr2h,c
 20950  0113CE  0EFF               	movlw	255
 20951  0113D0  22DA               	addwfc	fsr2h,f,c
 20952  0113D2  06DE               	decf	postinc2,f,c
 20953  0113D4  0E00               	movlw	0
 20954  0113D6  5ADD               	subwfb	postdec2,f,c
 20955  0113D8                     l13480:
 20956                           
 20957                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 344:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 20958                           ;stkvar	_g @ sp[(-56)+16]
 20959  0113D8  0ED8               	movlw	-40
 20960  0113DA  006F FF8F FFE6     	movff	plusw1,postinc1
 20961  0113E0  006F FF8F FFE6     	movff	plusw1,postinc1
 20962  0113E6  006F FF8F FFE6     	movff	plusw1,postinc1
 20963  0113EC  006F FF8F FFE6     	movff	plusw1,postinc1
 20964  0113F2  EC3B  F0CC         	call	___fpclassifyf	;wreg free
 20965  0113F6  0401               	decf	btemp^0,w,c
 20966  0113F8  1002               	iorwf	(btemp+1)^0,w,c
 20967  0113FA  A4D8               	btfss	status,2,c
 20968  0113FC  D076               	goto	l13498
 20969  0113FE  0EBF               	movlw	191
 20970  011400  6E0B               	movwf	(btemp+10)^0,c
 20971  011402  0EFF               	movlw	255
 20972  011404  6E0C               	movwf	(btemp+11)^0,c
 20973                           
 20974                           ;stkvar	_c @ sp[(-56)+-7]
 20975  011406  0EC1               	movlw	-63
 20976  011408  50E3               	movf	plusw1,w,c
 20977  01140A  6E09               	movwf	(btemp+8)^0,c
 20978  01140C  6A0A               	clrf	(btemp+9)^0,c
 20979  01140E  500B               	movf	(btemp+10)^0,w,c
 20980  011410  2609               	addwf	(btemp+8)^0,f,c
 20981  011412  500C               	movf	(btemp+11)^0,w,c
 20982  011414  220A               	addwfc	(btemp+9)^0,f,c
 20983  011416  500A               	movf	(btemp+9)^0,w,c
 20984  011418  E106               	bnz	u12440
 20985  01141A  0E1A               	movlw	26
 20986  01141C  5C09               	subwf	(btemp+8)^0,w,c
 20987  01141E  B0D8               	btfsc	status,0,c
 20988  011420  D002               	goto	u12440
 20989  011422  0E01               	movlw	1
 20990  011424  D001               	goto	u12450
 20991  011426                     u12440:
 20992  011426  0E00               	movlw	0
 20993  011428                     u12450:
 20994  011428  6E0B               	movwf	(btemp+10)^0,c
 20995  01142A  6A0C               	clrf	(btemp+11)^0,c
 20996                           
 20997                           ;stkvar	_efgtoa$6525 @ sp[(-56)+8]
 20998  01142C  0ED0               	movlw	-48
 20999  01142E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21000  011434  0ED1               	movlw	-47
 21001  011436  0060  F033  FFE3   	movff	btemp+11,plusw1
 21002                           
 21003                           ;stkvar	_efgtoa$6525 @ sp[(-56)+8]
 21004  01143C  0ED0               	movlw	-48
 21005  01143E  006F FF8C  F001    	movff	plusw1,btemp
 21006  011444  0ED1               	movlw	-47
 21007  011446  50E3               	movf	plusw1,w,c
 21008  011448  1001               	iorwf	btemp^0,w,c
 21009  01144A  B4D8               	btfsc	status,2,c
 21010  01144C  D017               	goto	l13490
 21011                           
 21012                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 345:             strcpy(&dbuf
      +                          [n], "INF");
 21013  01144E  0ED7               	movlw	low STR_94
 21014  011450  6EE6               	movwf	postinc1,c
 21015  011452  0EFF               	movlw	high STR_94
 21016  011454  6EE6               	movwf	postinc1,c
 21017                           
 21018                           ;stkvar	_n @ sp[(-58)+32]
 21019  011456  0E54               	movlw	low _dbuf
 21020  011458  6E0B               	movwf	(btemp+10)^0,c
 21021  01145A  0E03               	movlw	high _dbuf
 21022  01145C  6E0C               	movwf	(btemp+11)^0,c
 21023  01145E  0EE6               	movlw	-26
 21024  011460  50E3               	movf	plusw1,w,c
 21025  011462  260B               	addwf	(btemp+10)^0,f,c
 21026  011464  0EE7               	movlw	-25
 21027  011466  50E3               	movf	plusw1,w,c
 21028  011468  220C               	addwfc	(btemp+11)^0,f,c
 21029  01146A  0060  F02F  FFE6   	movff	btemp+10,postinc1
 21030  011470  0060  F033  FFE6   	movff	btemp+11,postinc1
 21031  011476  ECA6  F0DA         	call	_strcpy	;wreg free
 21032                           
 21033                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 346:         } else {
 21034  01147A  D016               	goto	l13492
 21035  01147C                     l13490:
 21036                           
 21037                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 347:             strcpy(&dbuf
      +                          [n], "inf");
 21038  01147C  0EDF               	movlw	low STR_95
 21039  01147E  6EE6               	movwf	postinc1,c
 21040  011480  0EFF               	movlw	high STR_95
 21041  011482  6EE6               	movwf	postinc1,c
 21042                           
 21043                           ;stkvar	_n @ sp[(-58)+32]
 21044  011484  0E54               	movlw	low _dbuf
 21045  011486  6E0B               	movwf	(btemp+10)^0,c
 21046  011488  0E03               	movlw	high _dbuf
 21047  01148A  6E0C               	movwf	(btemp+11)^0,c
 21048  01148C  0EE6               	movlw	-26
 21049  01148E  50E3               	movf	plusw1,w,c
 21050  011490  260B               	addwf	(btemp+10)^0,f,c
 21051  011492  0EE7               	movlw	-25
 21052  011494  50E3               	movf	plusw1,w,c
 21053  011496  220C               	addwfc	(btemp+11)^0,f,c
 21054  011498  0060  F02F  FFE6   	movff	btemp+10,postinc1
 21055  01149E  0060  F033  FFE6   	movff	btemp+11,postinc1
 21056  0114A4  ECA6  F0DA         	call	_strcpy	;wreg free
 21057  0114A8                     l13492:
 21058                           
 21059                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 349:         w -= ((sizeof("i
      +                          nf")/sizeof("inf"[0]))-1);
 21060                           ;stkvar	_w @ sp[(-56)+38]
 21061  0114A8  50E1               	movf	fsr1l,w,c
 21062  0114AA  0FEE               	addlw	-18
 21063  0114AC  6ED9               	movwf	fsr2l,c
 21064  0114AE  50E2               	movf	fsr1h,w,c
 21065  0114B0  6EDA               	movwf	fsr2h,c
 21066  0114B2  0EFF               	movlw	255
 21067  0114B4  22DA               	addwfc	fsr2h,f,c
 21068  0114B6  0EFD               	movlw	253
 21069  0114B8  26DE               	addwf	postinc2,f,c
 21070  0114BA  0EFF               	movlw	255
 21071  0114BC  22DD               	addwfc	postdec2,f,c
 21072  0114BE                     l13494:
 21073                           
 21074                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 350:         return pad(fp, &
      +                          dbuf[0], w);
 21075                           ;stkvar	_w @ sp[(-56)+38]
 21076  0114BE  0EEE               	movlw	-18
 21077  0114C0  006F FF8F FFE6     	movff	plusw1,postinc1
 21078  0114C6  006F FF8F FFE6     	movff	plusw1,postinc1
 21079  0114CC  0E54               	movlw	low _dbuf
 21080  0114CE  6EE6               	movwf	postinc1,c
 21081  0114D0  0E03               	movlw	high _dbuf
 21082  0114D2  6EE6               	movwf	postinc1,c
 21083                           
 21084                           ;stkvar	_fp @ sp[(-60)+-2]
 21085  0114D4  0EC2               	movlw	-62
 21086  0114D6  006F FF8F FFE6     	movff	plusw1,postinc1
 21087  0114DC  006F FF8F FFE6     	movff	plusw1,postinc1
 21088  0114E2  ECC3  F0D6         	call	_pad	;wreg free
 21089  0114E6  EF66  F092         	goto	l2482
 21090  0114EA                     l13498:
 21091                           
 21092                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 353:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 21093                           ;stkvar	_g @ sp[(-56)+16]
 21094  0114EA  0ED8               	movlw	-40
 21095  0114EC  006F FF8F FFE6     	movff	plusw1,postinc1
 21096  0114F2  006F FF8F FFE6     	movff	plusw1,postinc1
 21097  0114F8  006F FF8F FFE6     	movff	plusw1,postinc1
 21098  0114FE  006F FF8F FFE6     	movff	plusw1,postinc1
 21099  011504  EC3B  F0CC         	call	___fpclassifyf	;wreg free
 21100  011508  5001               	movf	btemp^0,w,c
 21101  01150A  1002               	iorwf	(btemp+1)^0,w,c
 21102  01150C  A4D8               	btfss	status,2,c
 21103  01150E  D056               	goto	l13516
 21104  011510  0EBF               	movlw	191
 21105  011512  6E0B               	movwf	(btemp+10)^0,c
 21106  011514  0EFF               	movlw	255
 21107  011516  6E0C               	movwf	(btemp+11)^0,c
 21108                           
 21109                           ;stkvar	_c @ sp[(-56)+-7]
 21110  011518  0EC1               	movlw	-63
 21111  01151A  50E3               	movf	plusw1,w,c
 21112  01151C  6E09               	movwf	(btemp+8)^0,c
 21113  01151E  6A0A               	clrf	(btemp+9)^0,c
 21114  011520  500B               	movf	(btemp+10)^0,w,c
 21115  011522  2609               	addwf	(btemp+8)^0,f,c
 21116  011524  500C               	movf	(btemp+11)^0,w,c
 21117  011526  220A               	addwfc	(btemp+9)^0,f,c
 21118  011528  500A               	movf	(btemp+9)^0,w,c
 21119  01152A  E106               	bnz	u12480
 21120  01152C  0E1A               	movlw	26
 21121  01152E  5C09               	subwf	(btemp+8)^0,w,c
 21122  011530  B0D8               	btfsc	status,0,c
 21123  011532  D002               	goto	u12480
 21124  011534  0E01               	movlw	1
 21125  011536  D001               	goto	u12490
 21126  011538                     u12480:
 21127  011538  0E00               	movlw	0
 21128  01153A                     u12490:
 21129  01153A  6E0B               	movwf	(btemp+10)^0,c
 21130  01153C  6A0C               	clrf	(btemp+11)^0,c
 21131                           
 21132                           ;stkvar	_efgtoa$6529 @ sp[(-56)+6]
 21133  01153E  0ECE               	movlw	-50
 21134  011540  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21135  011546  0ECF               	movlw	-49
 21136  011548  0060  F033  FFE3   	movff	btemp+11,plusw1
 21137                           
 21138                           ;stkvar	_efgtoa$6529 @ sp[(-56)+6]
 21139  01154E  0ECE               	movlw	-50
 21140  011550  006F FF8C  F001    	movff	plusw1,btemp
 21141  011556  0ECF               	movlw	-49
 21142  011558  50E3               	movf	plusw1,w,c
 21143  01155A  1001               	iorwf	btemp^0,w,c
 21144  01155C  B4D8               	btfsc	status,2,c
 21145  01155E  D017               	goto	l13508
 21146                           
 21147                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 354:             strcpy(&dbuf
      +                          [n], "NAN");
 21148  011560  0EDB               	movlw	low STR_98
 21149  011562  6EE6               	movwf	postinc1,c
 21150  011564  0EFF               	movlw	high STR_98
 21151  011566  6EE6               	movwf	postinc1,c
 21152                           
 21153                           ;stkvar	_n @ sp[(-58)+32]
 21154  011568  0E54               	movlw	low _dbuf
 21155  01156A  6E0B               	movwf	(btemp+10)^0,c
 21156  01156C  0E03               	movlw	high _dbuf
 21157  01156E  6E0C               	movwf	(btemp+11)^0,c
 21158  011570  0EE6               	movlw	-26
 21159  011572  50E3               	movf	plusw1,w,c
 21160  011574  260B               	addwf	(btemp+10)^0,f,c
 21161  011576  0EE7               	movlw	-25
 21162  011578  50E3               	movf	plusw1,w,c
 21163  01157A  220C               	addwfc	(btemp+11)^0,f,c
 21164  01157C  0060  F02F  FFE6   	movff	btemp+10,postinc1
 21165  011582  0060  F033  FFE6   	movff	btemp+11,postinc1
 21166  011588  ECA6  F0DA         	call	_strcpy	;wreg free
 21167                           
 21168                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 355:         } else {
 21169  01158C  D78D               	goto	l13492
 21170  01158E                     l13508:
 21171                           
 21172                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 356:             strcpy(&dbuf
      +                          [n], "nan");
 21173  01158E  0EE3               	movlw	low STR_99
 21174  011590  6EE6               	movwf	postinc1,c
 21175  011592  0EFF               	movlw	high STR_99
 21176  011594  6EE6               	movwf	postinc1,c
 21177                           
 21178                           ;stkvar	_n @ sp[(-58)+32]
 21179  011596  0E54               	movlw	low _dbuf
 21180  011598  6E0B               	movwf	(btemp+10)^0,c
 21181  01159A  0E03               	movlw	high _dbuf
 21182  01159C  6E0C               	movwf	(btemp+11)^0,c
 21183  01159E  0EE6               	movlw	-26
 21184  0115A0  50E3               	movf	plusw1,w,c
 21185  0115A2  260B               	addwf	(btemp+10)^0,f,c
 21186  0115A4  0EE7               	movlw	-25
 21187  0115A6  50E3               	movf	plusw1,w,c
 21188  0115A8  220C               	addwfc	(btemp+11)^0,f,c
 21189  0115AA  0060  F02F  FFE6   	movff	btemp+10,postinc1
 21190  0115B0  0060  F033  FFE6   	movff	btemp+11,postinc1
 21191  0115B6  ECA6  F0DA         	call	_strcpy	;wreg free
 21192  0115BA  D776               	goto	l13492
 21193  0115BC                     l13516:
 21194                           
 21195                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 363:     u = 1.0;
 21196  0115BC  0E00               	movlw	0
 21197  0115BE  6E09               	movwf	(btemp+8)^0,c
 21198  0115C0  0E00               	movlw	0
 21199  0115C2  6E0A               	movwf	(btemp+9)^0,c
 21200  0115C4  0E80               	movlw	128
 21201  0115C6  6E0B               	movwf	(btemp+10)^0,c
 21202  0115C8  0E3F               	movlw	63
 21203  0115CA  6E0C               	movwf	(btemp+11)^0,c
 21204                           
 21205                           ;stkvar	_u @ sp[(-56)+12]
 21206  0115CC  0ED4               	movlw	-44
 21207  0115CE  0060  F027  FFE3   	movff	btemp+8,plusw1
 21208  0115D4  0ED5               	movlw	-43
 21209  0115D6  0060  F02B  FFE3   	movff	btemp+9,plusw1
 21210  0115DC  0ED6               	movlw	-42
 21211  0115DE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21212  0115E4  0ED7               	movlw	-41
 21213  0115E6  0060  F033  FFE3   	movff	btemp+11,plusw1
 21214                           
 21215                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 364:     e = 0;
 21216                           ;stkvar	_e @ sp[(-56)+34]
 21217  0115EC  0EEA               	movlw	-22
 21218  0115EE  6AE3               	clrf	plusw1,c
 21219  0115F0  0EEB               	movlw	-21
 21220  0115F2  6AE3               	clrf	plusw1,c
 21221                           
 21222                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 365:     if (!(g == 0.0)) {
 21223  0115F4  0E00               	movlw	0
 21224  0115F6  6EE6               	movwf	postinc1,c
 21225  0115F8  0E00               	movlw	0
 21226  0115FA  6EE6               	movwf	postinc1,c
 21227  0115FC  0E00               	movlw	0
 21228  0115FE  6EE6               	movwf	postinc1,c
 21229  011600  0E00               	movlw	0
 21230  011602  6EE6               	movwf	postinc1,c
 21231                           
 21232                           ;stkvar	_g @ sp[(-60)+16]
 21233  011604  0ED4               	movlw	-44
 21234  011606  006F FF8F FFE6     	movff	plusw1,postinc1
 21235  01160C  006F FF8F FFE6     	movff	plusw1,postinc1
 21236  011612  006F FF8F FFE6     	movff	plusw1,postinc1
 21237  011618  006F FF8F FFE6     	movff	plusw1,postinc1
 21238  01161E  EC77  F0DB         	call	___fleq	;wreg free
 21239  011622  A001               	btfss	btemp& (0+255),0,c
 21240  011624  D039               	goto	l13528
 21241  011626  D0BC               	goto	u12530
 21242  011628                     l13524:
 21243                           
 21244                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 367:             u = u*10.0;
 21245  011628  0E00               	movlw	0
 21246  01162A  6EE6               	movwf	postinc1,c
 21247  01162C  0E00               	movlw	0
 21248  01162E  6EE6               	movwf	postinc1,c
 21249  011630  0E20               	movlw	32
 21250  011632  6EE6               	movwf	postinc1,c
 21251  011634  0E41               	movlw	65
 21252  011636  6EE6               	movwf	postinc1,c
 21253                           
 21254                           ;stkvar	_u @ sp[(-60)+12]
 21255  011638  0ED0               	movlw	-48
 21256  01163A  006F FF8F FFE6     	movff	plusw1,postinc1
 21257  011640  006F FF8F FFE6     	movff	plusw1,postinc1
 21258  011646  006F FF8F FFE6     	movff	plusw1,postinc1
 21259  01164C  006F FF8F FFE6     	movff	plusw1,postinc1
 21260  011652  EC52  F0A5         	call	___flmul	;wreg free
 21261                           
 21262                           ;stkvar	_u @ sp[(-56)+12]
 21263  011656  0ED4               	movlw	-44
 21264  011658  0060  F007  FFE3   	movff	btemp,plusw1
 21265  01165E  0ED5               	movlw	-43
 21266  011660  0060  F00B  FFE3   	movff	btemp+1,plusw1
 21267  011666  0ED6               	movlw	-42
 21268  011668  0060  F00F  FFE3   	movff	btemp+2,plusw1
 21269  01166E  0ED7               	movlw	-41
 21270  011670  0060  F013  FFE3   	movff	btemp+3,plusw1
 21271                           
 21272                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 368:             ++e;
 21273                           ;stkvar	_e @ sp[(-56)+34]
 21274  011676  0EEA               	movlw	-22
 21275  011678  50E3               	movf	plusw1,w,c
 21276  01167A  0F01               	addlw	1
 21277  01167C  6E01               	movwf	btemp^0,c
 21278  01167E  0EEA               	movlw	-22
 21279  011680  0060  F007  FFE3   	movff	btemp,plusw1
 21280  011686  6A01               	clrf	btemp^0,c
 21281  011688  0EEB               	movlw	-21
 21282  01168A  50E3               	movf	plusw1,w,c
 21283  01168C  2001               	addwfc	btemp^0,w,c
 21284  01168E  6E01               	movwf	btemp^0,c
 21285  011690  0EEB               	movlw	-21
 21286  011692  0060  F007  FFE3   	movff	btemp,plusw1
 21287  011698                     l13528:
 21288                           
 21289                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 366:         while (!(g < (u*
      +                          10.0))) {
 21290  011698  0E00               	movlw	0
 21291  01169A  6EE6               	movwf	postinc1,c
 21292  01169C  0E00               	movlw	0
 21293  01169E  6EE6               	movwf	postinc1,c
 21294  0116A0  0E20               	movlw	32
 21295  0116A2  6EE6               	movwf	postinc1,c
 21296  0116A4  0E41               	movlw	65
 21297  0116A6  6EE6               	movwf	postinc1,c
 21298                           
 21299                           ;stkvar	_u @ sp[(-60)+12]
 21300  0116A8  0ED0               	movlw	-48
 21301  0116AA  006F FF8F FFE6     	movff	plusw1,postinc1
 21302  0116B0  006F FF8F FFE6     	movff	plusw1,postinc1
 21303  0116B6  006F FF8F FFE6     	movff	plusw1,postinc1
 21304  0116BC  006F FF8F FFE6     	movff	plusw1,postinc1
 21305  0116C2  EC52  F0A5         	call	___flmul	;wreg free
 21306  0116C6  0060  F007  FFE6   	movff	btemp,postinc1
 21307  0116CC  0060  F00B  FFE6   	movff	btemp+1,postinc1
 21308  0116D2  0060  F00F  FFE6   	movff	btemp+2,postinc1
 21309  0116D8  0060  F013  FFE6   	movff	btemp+3,postinc1
 21310                           
 21311                           ;stkvar	_g @ sp[(-60)+16]
 21312  0116DE  0ED4               	movlw	-44
 21313  0116E0  006F FF8F FFE6     	movff	plusw1,postinc1
 21314  0116E6  006F FF8F FFE6     	movff	plusw1,postinc1
 21315  0116EC  006F FF8F FFE6     	movff	plusw1,postinc1
 21316  0116F2  006F FF8F FFE6     	movff	plusw1,postinc1
 21317  0116F8  ECFB  F0CF         	call	___flge	;wreg free
 21318  0116FC  A001               	btfss	btemp& (0+255),0,c
 21319  0116FE  D032               	goto	l13534
 21320  011700  D793               	goto	l13524
 21321  011702                     l13530:
 21322                           
 21323                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 371:             u = u/10.0;
 21324  011702  0E00               	movlw	0
 21325  011704  6EE6               	movwf	postinc1,c
 21326  011706  0E00               	movlw	0
 21327  011708  6EE6               	movwf	postinc1,c
 21328  01170A  0E20               	movlw	32
 21329  01170C  6EE6               	movwf	postinc1,c
 21330  01170E  0E41               	movlw	65
 21331  011710  6EE6               	movwf	postinc1,c
 21332                           
 21333                           ;stkvar	_u @ sp[(-60)+12]
 21334  011712  0ED0               	movlw	-48
 21335  011714  006F FF8F FFE6     	movff	plusw1,postinc1
 21336  01171A  006F FF8F FFE6     	movff	plusw1,postinc1
 21337  011720  006F FF8F FFE6     	movff	plusw1,postinc1
 21338  011726  006F FF8F FFE6     	movff	plusw1,postinc1
 21339  01172C  EC45  F0AD         	call	___fldiv	;wreg free
 21340                           
 21341                           ;stkvar	_u @ sp[(-56)+12]
 21342  011730  0ED4               	movlw	-44
 21343  011732  0060  F007  FFE3   	movff	btemp,plusw1
 21344  011738  0ED5               	movlw	-43
 21345  01173A  0060  F00B  FFE3   	movff	btemp+1,plusw1
 21346  011740  0ED6               	movlw	-42
 21347  011742  0060  F00F  FFE3   	movff	btemp+2,plusw1
 21348  011748  0ED7               	movlw	-41
 21349  01174A  0060  F013  FFE3   	movff	btemp+3,plusw1
 21350                           
 21351                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 372:             --e;
 21352                           ;stkvar	_e @ sp[(-56)+34]
 21353  011750  50E1               	movf	fsr1l,w,c
 21354  011752  0FEA               	addlw	-22
 21355  011754  6ED9               	movwf	fsr2l,c
 21356  011756  50E2               	movf	fsr1h,w,c
 21357  011758  6EDA               	movwf	fsr2h,c
 21358  01175A  0EFF               	movlw	255
 21359  01175C  22DA               	addwfc	fsr2h,f,c
 21360  01175E  06DE               	decf	postinc2,f,c
 21361  011760  0E00               	movlw	0
 21362  011762  5ADD               	subwfb	postdec2,f,c
 21363  011764                     l13534:
 21364                           
 21365                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 370:         while (g < u) {
 21366                           ;stkvar	_u @ sp[(-56)+12]
 21367  011764  0ED4               	movlw	-44
 21368  011766  006F FF8F FFE6     	movff	plusw1,postinc1
 21369  01176C  006F FF8F FFE6     	movff	plusw1,postinc1
 21370  011772  006F FF8F FFE6     	movff	plusw1,postinc1
 21371  011778  006F FF8F FFE6     	movff	plusw1,postinc1
 21372                           
 21373                           ;stkvar	_g @ sp[(-60)+16]
 21374  01177E  0ED4               	movlw	-44
 21375  011780  006F FF8F FFE6     	movff	plusw1,postinc1
 21376  011786  006F FF8F FFE6     	movff	plusw1,postinc1
 21377  01178C  006F FF8F FFE6     	movff	plusw1,postinc1
 21378  011792  006F FF8F FFE6     	movff	plusw1,postinc1
 21379  011798  ECFB  F0CF         	call	___flge	;wreg free
 21380  01179C  A001               	btfss	btemp& (0+255),0,c
 21381  01179E  D7B1               	goto	l13530
 21382  0117A0                     u12530:
 21383                           
 21384                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 377:     mode = tolower((int)
      +                          c);
 21385                           ;stkvar	_c @ sp[(-56)+-7]
 21386  0117A0  0EC1               	movlw	-63
 21387  0117A2  50E3               	movf	plusw1,w,c
 21388  0117A4  6EE6               	movwf	postinc1,c
 21389  0117A6  0E00               	movlw	0
 21390  0117A8  6EE6               	movwf	postinc1,c
 21391  0117AA  ECE7  F0E1         	call	_tolower	;wreg free
 21392                           
 21393                           ;stkvar	_mode @ sp[(-56)+54]
 21394  0117AE  0EFE               	movlw	-2
 21395  0117B0  0060  F007  FFE3   	movff	btemp,plusw1
 21396                           
 21397                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 378:     nmode = mode;
 21398                           ;stkvar	_mode @ sp[(-56)+54]
 21399                           ;stkvar	_nmode @ sp[(-56)+55]
 21400  0117B6  0EFE               	movlw	-2
 21401  0117B8  006F FF8C  F001    	movff	plusw1,btemp
 21402  0117BE  0EFF               	movlw	-1
 21403  0117C0  0060  F007  FFE3   	movff	btemp,plusw1
 21404                           
 21405                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 379:     if (mode == 'g') {
 21406                           ;stkvar	_mode @ sp[(-56)+54]
 21407  0117C6  0EFE               	movlw	-2
 21408  0117C8  006F FF8C  F001    	movff	plusw1,btemp
 21409  0117CE  0E67               	movlw	103
 21410  0117D0  1801               	xorwf	btemp^0,w,c
 21411  0117D2  A4D8               	btfss	status,2,c
 21412  0117D4  D025               	goto	l13552
 21413                           
 21414                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 380:   if (prec == 0) {
 21415  0117D6  503C               	movf	_prec^0,w,c
 21416  0117D8  103D               	iorwf	(_prec+1)^0,w,c
 21417  0117DA  A4D8               	btfss	status,2,c
 21418  0117DC  D004               	goto	l13546
 21419                           
 21420                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 381:    prec = 1;
 21421  0117DE  0E00               	movlw	0
 21422  0117E0  6E3D               	movwf	(_prec+1)^0,c
 21423  0117E2  0E01               	movlw	1
 21424  0117E4  6E3C               	movwf	_prec^0,c
 21425  0117E6                     l13546:
 21426                           
 21427                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 383:         p = (0 < prec) ?
      +                           prec : 6;
 21428  0117E6  BE3D               	btfsc	(_prec+1)^0,7,c
 21429  0117E8  D005               	goto	u12560
 21430  0117EA  503D               	movf	(_prec+1)^0,w,c
 21431  0117EC  E110               	bnz	l13550
 21432  0117EE  043C               	decf	_prec^0,w,c
 21433  0117F0  B0D8               	btfsc	status,0,c
 21434  0117F2  D00D               	goto	l13550
 21435  0117F4                     u12560:
 21436  0117F4  0E06               	movlw	6
 21437  0117F6  6E0B               	movwf	(btemp+10)^0,c
 21438  0117F8  0E00               	movlw	0
 21439  0117FA  6E0C               	movwf	(btemp+11)^0,c
 21440                           
 21441                           ;stkvar	_p @ sp[(-56)+40]
 21442  0117FC  0EF0               	movlw	-16
 21443  0117FE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21444  011804  0EF1               	movlw	-15
 21445  011806  0060  F033  FFE3   	movff	btemp+11,plusw1
 21446  01180C  D00C               	goto	l13558
 21447  01180E                     l13550:
 21448                           
 21449                           ;stkvar	_p @ sp[(-56)+40]
 21450  01180E  0EF0               	movlw	-16
 21451  011810  0060  F0F3  FFE3   	movff	_prec,plusw1
 21452  011816  0EF1               	movlw	-15
 21453  011818  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 21454  01181E  D003               	goto	l13558
 21455  011820                     l13552:
 21456                           
 21457                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 385:         p = (prec < 0) ?
      +                           6 : prec;
 21458  011820  AE3D               	btfss	(_prec+1)^0,7,c
 21459  011822  D7F5               	goto	l13550
 21460  011824  D7E7               	goto	u12560
 21461  011826                     l13558:
 21462                           
 21463                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 389:     if (mode == 'g') {
 21464                           ;stkvar	_mode @ sp[(-56)+54]
 21465  011826  0EFE               	movlw	-2
 21466  011828  006F FF8C  F001    	movff	plusw1,btemp
 21467  01182E  0E67               	movlw	103
 21468  011830  1801               	xorwf	btemp^0,w,c
 21469  011832  A4D8               	btfss	status,2,c
 21470  011834  D02F               	goto	l13568
 21471                           
 21472                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 390:         if (!(e < -4) &&
      +                           !((p - 1) < e)) {
 21473                           ;stkvar	_e @ sp[(-56)+34]
 21474  011836  0EEB               	movlw	-21
 21475  011838  AEE3               	btfss	plusw1,7,c
 21476  01183A  D00E               	goto	u12590
 21477  01183C  0EEA               	movlw	-22
 21478  01183E  006F FF8C  F001    	movff	plusw1,btemp
 21479  011844  0EFC               	movlw	252
 21480  011846  5E01               	subwf	btemp^0,f,c
 21481  011848  0EEB               	movlw	-21
 21482  01184A  006F FF8C  F001    	movff	plusw1,btemp
 21483  011850  0EFF               	movlw	255
 21484  011852  5A01               	subwfb	btemp^0,f,c
 21485  011854  A0D8               	btfss	status,0,c
 21486  011856  D018               	goto	l13566
 21487  011858                     u12590:
 21488                           
 21489                           ;stkvar	_e @ sp[(-56)+34]
 21490                           ;stkvar	_p @ sp[(-56)+40]
 21491  011858  0EF0               	movlw	-16
 21492  01185A  50E3               	movf	plusw1,w,c
 21493  01185C  0FFF               	addlw	255
 21494  01185E  6E0B               	movwf	(btemp+10)^0,c
 21495  011860  0EF1               	movlw	-15
 21496  011862  006F FF8C  F00C    	movff	plusw1,btemp+11
 21497  011868  0EFF               	movlw	255
 21498  01186A  220C               	addwfc	(btemp+11)^0,f,c
 21499  01186C  0EEA               	movlw	-22
 21500  01186E  50E3               	movf	plusw1,w,c
 21501  011870  5C0B               	subwf	(btemp+10)^0,w,c
 21502  011872  500C               	movf	(btemp+11)^0,w,c
 21503  011874  0A80               	xorlw	128
 21504  011876  6E01               	movwf	btemp^0,c
 21505  011878  0EEB               	movlw	-21
 21506  01187A  50E3               	movf	plusw1,w,c
 21507  01187C  0A80               	xorlw	128
 21508  01187E  5801               	subwfb	btemp^0,w,c
 21509  011880  A0D8               	btfss	status,0,c
 21510  011882  D002               	goto	l13566
 21511                           
 21512                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 391:             nmode = 'f';
 21513  011884  0E66               	movlw	102
 21514  011886  D001               	goto	L23
 21515  011888                     l13566:
 21516                           
 21517                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 393:             nmode = 'e';
 21518  011888  0E65               	movlw	101
 21519  01188A                     L23:
 21520  01188A  6E0C               	movwf	(btemp+11)^0,c
 21521                           
 21522                           ;stkvar	_nmode @ sp[(-56)+55]
 21523  01188C  0EFF               	movlw	-1
 21524  01188E  0060  F033  FFE3   	movff	btemp+11,plusw1
 21525  011894                     l13568:
 21526                           
 21527                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 398:     m = p;
 21528                           ;stkvar	_p @ sp[(-56)+40]
 21529                           ;stkvar	_m @ sp[(-56)+48]
 21530  011894  0EF0               	movlw	-16
 21531  011896  006F FF8C  F001    	movff	plusw1,btemp
 21532  01189C  0EF8               	movlw	-8
 21533  01189E  0060  F007  FFE3   	movff	btemp,plusw1
 21534  0118A4  0EF1               	movlw	-15
 21535  0118A6  006F FF8C  F001    	movff	plusw1,btemp
 21536  0118AC  0EF9               	movlw	-7
 21537  0118AE  0060  F007  FFE3   	movff	btemp,plusw1
 21538                           
 21539                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 399:     if (!(mode == 'g') |
      +                          | ((nmode == 'f') && (e < 0))) {
 21540                           ;stkvar	_mode @ sp[(-56)+54]
 21541  0118B4  0EFE               	movlw	-2
 21542  0118B6  006F FF8C  F001    	movff	plusw1,btemp
 21543  0118BC  0E67               	movlw	103
 21544  0118BE  1801               	xorwf	btemp^0,w,c
 21545  0118C0  A4D8               	btfss	status,2,c
 21546  0118C2  D00B               	goto	u12630
 21547                           
 21548                           ;stkvar	_nmode @ sp[(-56)+55]
 21549  0118C4  0EFF               	movlw	-1
 21550  0118C6  006F FF8C  F001    	movff	plusw1,btemp
 21551  0118CC  0E66               	movlw	102
 21552  0118CE  1801               	xorwf	btemp^0,w,c
 21553  0118D0  A4D8               	btfss	status,2,c
 21554  0118D2  D014               	goto	l2511
 21555                           
 21556                           ;stkvar	_e @ sp[(-56)+34]
 21557  0118D4  0EEB               	movlw	-21
 21558  0118D6  AEE3               	btfss	plusw1,7,c
 21559  0118D8  D011               	goto	l2511
 21560  0118DA                     u12630:
 21561                           
 21562                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 400:         ++m;
 21563                           ;stkvar	_m @ sp[(-56)+48]
 21564  0118DA  0EF8               	movlw	-8
 21565  0118DC  50E3               	movf	plusw1,w,c
 21566  0118DE  0F01               	addlw	1
 21567  0118E0  6E01               	movwf	btemp^0,c
 21568  0118E2  0EF8               	movlw	-8
 21569  0118E4  0060  F007  FFE3   	movff	btemp,plusw1
 21570  0118EA  6A01               	clrf	btemp^0,c
 21571  0118EC  0EF9               	movlw	-7
 21572  0118EE  50E3               	movf	plusw1,w,c
 21573  0118F0  2001               	addwfc	btemp^0,w,c
 21574  0118F2  6E01               	movwf	btemp^0,c
 21575  0118F4  0EF9               	movlw	-7
 21576  0118F6  0060  F007  FFE3   	movff	btemp,plusw1
 21577  0118FC                     l2511:
 21578                           
 21579                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 404:     if (nmode == 'f') {
 21580                           ;stkvar	_nmode @ sp[(-56)+55]
 21581  0118FC  0EFF               	movlw	-1
 21582  0118FE  006F FF8C  F001    	movff	plusw1,btemp
 21583  011904  0E66               	movlw	102
 21584  011906  1801               	xorwf	btemp^0,w,c
 21585  011908  A4D8               	btfss	status,2,c
 21586  01190A  D03B               	goto	l13588
 21587                           
 21588                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 405:         if (e < 0) {
 21589                           ;stkvar	_e @ sp[(-56)+34]
 21590  01190C  0EEB               	movlw	-21
 21591  01190E  AEE3               	btfss	plusw1,7,c
 21592  011910  D01C               	goto	l13584
 21593                           
 21594                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 406:             u = 1.0;
 21595  011912  0E00               	movlw	0
 21596  011914  6E09               	movwf	(btemp+8)^0,c
 21597  011916  0E00               	movlw	0
 21598  011918  6E0A               	movwf	(btemp+9)^0,c
 21599  01191A  0E80               	movlw	128
 21600  01191C  6E0B               	movwf	(btemp+10)^0,c
 21601  01191E  0E3F               	movlw	63
 21602  011920  6E0C               	movwf	(btemp+11)^0,c
 21603                           
 21604                           ;stkvar	_u @ sp[(-56)+12]
 21605  011922  0ED4               	movlw	-44
 21606  011924  0060  F027  FFE3   	movff	btemp+8,plusw1
 21607  01192A  0ED5               	movlw	-43
 21608  01192C  0060  F02B  FFE3   	movff	btemp+9,plusw1
 21609  011932  0ED6               	movlw	-42
 21610  011934  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21611  01193A  0ED7               	movlw	-41
 21612  01193C  0060  F033  FFE3   	movff	btemp+11,plusw1
 21613                           
 21614                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 407:             e = 0;
 21615                           ;stkvar	_e @ sp[(-56)+34]
 21616  011942  0EEA               	movlw	-22
 21617  011944  6AE3               	clrf	plusw1,c
 21618  011946  0EEB               	movlw	-21
 21619  011948  6AE3               	clrf	plusw1,c
 21620  01194A                     l13584:
 21621                           
 21622                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 409:         if (!(mode == 'g
      +                          ')) {
 21623                           ;stkvar	_mode @ sp[(-56)+54]
 21624  01194A  0EFE               	movlw	-2
 21625  01194C  006F FF8C  F001    	movff	plusw1,btemp
 21626  011952  0E67               	movlw	103
 21627  011954  1801               	xorwf	btemp^0,w,c
 21628  011956  B4D8               	btfsc	status,2,c
 21629  011958  D014               	goto	l13588
 21630                           
 21631                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 410:             m += e;
 21632                           ;stkvar	_e @ sp[(-56)+34]
 21633                           ;stkvar	_m @ sp[(-56)+48]
 21634  01195A  0EF8               	movlw	-8
 21635  01195C  50E3               	movf	plusw1,w,c
 21636  01195E  6E01               	movwf	btemp^0,c
 21637  011960  0EEA               	movlw	-22
 21638  011962  50E3               	movf	plusw1,w,c
 21639  011964  2601               	addwf	btemp^0,f,c
 21640  011966  0EF8               	movlw	-8
 21641  011968  0060  F007  FFE3   	movff	btemp,plusw1
 21642  01196E  0EF9               	movlw	-7
 21643  011970  50E3               	movf	plusw1,w,c
 21644  011972  6E01               	movwf	btemp^0,c
 21645  011974  0EEB               	movlw	-21
 21646  011976  50E3               	movf	plusw1,w,c
 21647  011978  2201               	addwfc	btemp^0,f,c
 21648  01197A  0EF9               	movlw	-7
 21649  01197C  0060  F007  FFE3   	movff	btemp,plusw1
 21650  011982                     l13588:
 21651                           
 21652                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 415:     i = 0;
 21653                           ;stkvar	_i @ sp[(-56)+36]
 21654  011982  0EEC               	movlw	-20
 21655  011984  6AE3               	clrf	plusw1,c
 21656  011986  0EED               	movlw	-19
 21657  011988  6AE3               	clrf	plusw1,c
 21658                           
 21659                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 416:     h = g;
 21660                           ;stkvar	_g @ sp[(-56)+16]
 21661  01198A  0ED8               	movlw	-40
 21662  01198C  006F FF8C  F009    	movff	plusw1,btemp+8
 21663  011992  0ED9               	movlw	-39
 21664  011994  006F FF8C  F00A    	movff	plusw1,btemp+9
 21665  01199A  0EDA               	movlw	-38
 21666  01199C  006F FF8C  F00B    	movff	plusw1,btemp+10
 21667  0119A2  0EDB               	movlw	-37
 21668  0119A4  006F FF8C  F00C    	movff	plusw1,btemp+11
 21669                           
 21670                           ;stkvar	_h @ sp[(-56)+24]
 21671  0119AA  0EE0               	movlw	-32
 21672  0119AC  0060  F027  FFE3   	movff	btemp+8,plusw1
 21673  0119B2  0EE1               	movlw	-31
 21674  0119B4  0060  F02B  FFE3   	movff	btemp+9,plusw1
 21675  0119BA  0EE2               	movlw	-30
 21676  0119BC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21677  0119C2  0EE3               	movlw	-29
 21678  0119C4  0060  F033  FFE3   	movff	btemp+11,plusw1
 21679                           
 21680                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 417:     ou = u;
 21681                           ;stkvar	_u @ sp[(-56)+12]
 21682  0119CA  0ED4               	movlw	-44
 21683  0119CC  006F FF8C  F009    	movff	plusw1,btemp+8
 21684  0119D2  0ED5               	movlw	-43
 21685  0119D4  006F FF8C  F00A    	movff	plusw1,btemp+9
 21686  0119DA  0ED6               	movlw	-42
 21687  0119DC  006F FF8C  F00B    	movff	plusw1,btemp+10
 21688  0119E2  0ED7               	movlw	-41
 21689  0119E4  006F FF8C  F00C    	movff	plusw1,btemp+11
 21690                           
 21691                           ;stkvar	_ou @ sp[(-56)+28]
 21692  0119EA  0EE4               	movlw	-28
 21693  0119EC  0060  F027  FFE3   	movff	btemp+8,plusw1
 21694  0119F2  0EE5               	movlw	-27
 21695  0119F4  0060  F02B  FFE3   	movff	btemp+9,plusw1
 21696  0119FA  0EE6               	movlw	-26
 21697  0119FC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21698  011A02  0EE7               	movlw	-25
 21699  011A04  0060  F033  FFE3   	movff	btemp+11,plusw1
 21700                           
 21701                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 21702  011A0A  D0D6               	goto	l13604
 21703  011A0C                     l13594:
 21704                           
 21705                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 419:         l = floorf(h/u);
 21706                           ;stkvar	_u @ sp[(-56)+12]
 21707  011A0C  0ED4               	movlw	-44
 21708  011A0E  006F FF8F FFE6     	movff	plusw1,postinc1
 21709  011A14  006F FF8F FFE6     	movff	plusw1,postinc1
 21710  011A1A  006F FF8F FFE6     	movff	plusw1,postinc1
 21711  011A20  006F FF8F FFE6     	movff	plusw1,postinc1
 21712                           
 21713                           ;stkvar	_h @ sp[(-60)+24]
 21714  011A26  0EDC               	movlw	-36
 21715  011A28  006F FF8F FFE6     	movff	plusw1,postinc1
 21716  011A2E  006F FF8F FFE6     	movff	plusw1,postinc1
 21717  011A34  006F FF8F FFE6     	movff	plusw1,postinc1
 21718  011A3A  006F FF8F FFE6     	movff	plusw1,postinc1
 21719  011A40  EC45  F0AD         	call	___fldiv	;wreg free
 21720  011A44  0060  F007  FFE6   	movff	btemp,postinc1
 21721  011A4A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 21722  011A50  0060  F00F  FFE6   	movff	btemp+2,postinc1
 21723  011A56  0060  F013  FFE6   	movff	btemp+3,postinc1
 21724  011A5C  ECA3  F0B8         	call	_floorf	;wreg free
 21725                           
 21726                           ;stkvar	_l @ sp[(-56)+20]
 21727  011A60  0EDC               	movlw	-36
 21728  011A62  0060  F007  FFE3   	movff	btemp,plusw1
 21729  011A68  0EDD               	movlw	-35
 21730  011A6A  0060  F00B  FFE3   	movff	btemp+1,plusw1
 21731  011A70  0EDE               	movlw	-34
 21732  011A72  0060  F00F  FFE3   	movff	btemp+2,plusw1
 21733  011A78  0EDF               	movlw	-33
 21734  011A7A  0060  F013  FFE3   	movff	btemp+3,plusw1
 21735                           
 21736                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 420:         d = (int)l;
 21737                           ;stkvar	_l @ sp[(-56)+20]
 21738  011A80  0EDC               	movlw	-36
 21739  011A82  006F FF8F FFE6     	movff	plusw1,postinc1
 21740  011A88  006F FF8F FFE6     	movff	plusw1,postinc1
 21741  011A8E  006F FF8F FFE6     	movff	plusw1,postinc1
 21742  011A94  006F FF8F FFE6     	movff	plusw1,postinc1
 21743  011A9A  EC42  F0CF         	call	___fltol	;wreg free
 21744  011A9E  0060  F004  F00B   	movff	btemp,btemp+10
 21745  011AA4  0060  F008  F00C   	movff	btemp+1,btemp+11
 21746                           
 21747                           ;stkvar	_d @ sp[(-56)+44]
 21748  011AAA  0EF4               	movlw	-12
 21749  011AAC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21750  011AB2  0EF5               	movlw	-11
 21751  011AB4  0060  F033  FFE3   	movff	btemp+11,plusw1
 21752                           
 21753                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 421:         h -= l*u;
 21754                           ;stkvar	_u @ sp[(-56)+12]
 21755  011ABA  0ED4               	movlw	-44
 21756  011ABC  006F FF8F FFE6     	movff	plusw1,postinc1
 21757  011AC2  006F FF8F FFE6     	movff	plusw1,postinc1
 21758  011AC8  006F FF8F FFE6     	movff	plusw1,postinc1
 21759  011ACE  006F FF8F FFE6     	movff	plusw1,postinc1
 21760                           
 21761                           ;stkvar	_l @ sp[(-60)+20]
 21762  011AD4  0ED8               	movlw	-40
 21763  011AD6  006F FF8F FFE6     	movff	plusw1,postinc1
 21764  011ADC  006F FF8F FFE6     	movff	plusw1,postinc1
 21765  011AE2  006F FF8F FFE6     	movff	plusw1,postinc1
 21766  011AE8  006F FF8F FFE6     	movff	plusw1,postinc1
 21767  011AEE  EC52  F0A5         	call	___flmul	;wreg free
 21768  011AF2  0060  F007  FFE6   	movff	btemp,postinc1
 21769  011AF8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 21770  011AFE  0060  F00F  FFE6   	movff	btemp+2,postinc1
 21771  011B04  0060  F013  FFE6   	movff	btemp+3,postinc1
 21772                           
 21773                           ;stkvar	_h @ sp[(-60)+24]
 21774  011B0A  0EDC               	movlw	-36
 21775  011B0C  006F FF8F FFE6     	movff	plusw1,postinc1
 21776  011B12  006F FF8F FFE6     	movff	plusw1,postinc1
 21777  011B18  006F FF8F FFE6     	movff	plusw1,postinc1
 21778  011B1E  006F FF8F FFE6     	movff	plusw1,postinc1
 21779  011B24  EC6D  F0E7         	call	___flsub	;wreg free
 21780                           
 21781                           ;stkvar	_h @ sp[(-56)+24]
 21782  011B28  0EE0               	movlw	-32
 21783  011B2A  0060  F007  FFE3   	movff	btemp,plusw1
 21784  011B30  0EE1               	movlw	-31
 21785  011B32  0060  F00B  FFE3   	movff	btemp+1,plusw1
 21786  011B38  0EE2               	movlw	-30
 21787  011B3A  0060  F00F  FFE3   	movff	btemp+2,plusw1
 21788  011B40  0EE3               	movlw	-29
 21789  011B42  0060  F013  FFE3   	movff	btemp+3,plusw1
 21790                           
 21791                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 422:         u = u/10.0;
 21792  011B48  0E00               	movlw	0
 21793  011B4A  6EE6               	movwf	postinc1,c
 21794  011B4C  0E00               	movlw	0
 21795  011B4E  6EE6               	movwf	postinc1,c
 21796  011B50  0E20               	movlw	32
 21797  011B52  6EE6               	movwf	postinc1,c
 21798  011B54  0E41               	movlw	65
 21799  011B56  6EE6               	movwf	postinc1,c
 21800                           
 21801                           ;stkvar	_u @ sp[(-60)+12]
 21802  011B58  0ED0               	movlw	-48
 21803  011B5A  006F FF8F FFE6     	movff	plusw1,postinc1
 21804  011B60  006F FF8F FFE6     	movff	plusw1,postinc1
 21805  011B66  006F FF8F FFE6     	movff	plusw1,postinc1
 21806  011B6C  006F FF8F FFE6     	movff	plusw1,postinc1
 21807  011B72  EC45  F0AD         	call	___fldiv	;wreg free
 21808                           
 21809                           ;stkvar	_u @ sp[(-56)+12]
 21810  011B76  0ED4               	movlw	-44
 21811  011B78  0060  F007  FFE3   	movff	btemp,plusw1
 21812  011B7E  0ED5               	movlw	-43
 21813  011B80  0060  F00B  FFE3   	movff	btemp+1,plusw1
 21814  011B86  0ED6               	movlw	-42
 21815  011B88  0060  F00F  FFE3   	movff	btemp+2,plusw1
 21816  011B8E  0ED7               	movlw	-41
 21817  011B90  0060  F013  FFE3   	movff	btemp+3,plusw1
 21818                           
 21819                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 423:         ++i;
 21820                           ;stkvar	_i @ sp[(-56)+36]
 21821  011B96  0EEC               	movlw	-20
 21822  011B98  50E3               	movf	plusw1,w,c
 21823  011B9A  0F01               	addlw	1
 21824  011B9C  6E01               	movwf	btemp^0,c
 21825  011B9E  0EEC               	movlw	-20
 21826  011BA0  0060  F007  FFE3   	movff	btemp,plusw1
 21827  011BA6  6A01               	clrf	btemp^0,c
 21828  011BA8  0EED               	movlw	-19
 21829  011BAA  50E3               	movf	plusw1,w,c
 21830  011BAC  2001               	addwfc	btemp^0,w,c
 21831  011BAE  6E01               	movwf	btemp^0,c
 21832  011BB0  0EED               	movlw	-19
 21833  011BB2  0060  F007  FFE3   	movff	btemp,plusw1
 21834  011BB8                     l13604:
 21835                           
 21836                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 21837                           ;stkvar	_m @ sp[(-56)+48]
 21838                           ;stkvar	_i @ sp[(-56)+36]
 21839  011BB8  50E1               	movf	fsr1l,w,c
 21840  011BBA  0FEC               	addlw	-20
 21841  011BBC  6ED9               	movwf	fsr2l,c
 21842  011BBE  50E2               	movf	fsr1h,w,c
 21843  011BC0  6EDA               	movwf	fsr2h,c
 21844  011BC2  0EFF               	movlw	255
 21845  011BC4  22DA               	addwfc	fsr2h,f,c
 21846  011BC6  0EF8               	movlw	-8
 21847  011BC8  50E3               	movf	plusw1,w,c
 21848  011BCA  5CDE               	subwf	postinc2,w,c
 21849  011BCC  50DE               	movf	postinc2,w,c
 21850  011BCE  0A80               	xorlw	128
 21851  011BD0  6E01               	movwf	btemp^0,c
 21852  011BD2  0EF9               	movlw	-7
 21853  011BD4  50E3               	movf	plusw1,w,c
 21854  011BD6  0A80               	xorlw	128
 21855  011BD8  5801               	subwfb	btemp^0,w,c
 21856  011BDA  A0D8               	btfss	status,0,c
 21857  011BDC  D717               	goto	l13594
 21858                           
 21859                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 427:     l = u*5.0;
 21860  011BDE  0E00               	movlw	0
 21861  011BE0  6EE6               	movwf	postinc1,c
 21862  011BE2  0E00               	movlw	0
 21863  011BE4  6EE6               	movwf	postinc1,c
 21864  011BE6  0EA0               	movlw	160
 21865  011BE8  6EE6               	movwf	postinc1,c
 21866  011BEA  0E40               	movlw	64
 21867  011BEC  6EE6               	movwf	postinc1,c
 21868                           
 21869                           ;stkvar	_u @ sp[(-60)+12]
 21870  011BEE  0ED0               	movlw	-48
 21871  011BF0  006F FF8F FFE6     	movff	plusw1,postinc1
 21872  011BF6  006F FF8F FFE6     	movff	plusw1,postinc1
 21873  011BFC  006F FF8F FFE6     	movff	plusw1,postinc1
 21874  011C02  006F FF8F FFE6     	movff	plusw1,postinc1
 21875  011C08  EC52  F0A5         	call	___flmul	;wreg free
 21876                           
 21877                           ;stkvar	_l @ sp[(-56)+20]
 21878  011C0C  0EDC               	movlw	-36
 21879  011C0E  0060  F007  FFE3   	movff	btemp,plusw1
 21880  011C14  0EDD               	movlw	-35
 21881  011C16  0060  F00B  FFE3   	movff	btemp+1,plusw1
 21882  011C1C  0EDE               	movlw	-34
 21883  011C1E  0060  F00F  FFE3   	movff	btemp+2,plusw1
 21884  011C24  0EDF               	movlw	-33
 21885  011C26  0060  F013  FFE3   	movff	btemp+3,plusw1
 21886                           
 21887                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 428:     if (h < l) {
 21888                           ;stkvar	_l @ sp[(-56)+20]
 21889  011C2C  0EDC               	movlw	-36
 21890  011C2E  006F FF8F FFE6     	movff	plusw1,postinc1
 21891  011C34  006F FF8F FFE6     	movff	plusw1,postinc1
 21892  011C3A  006F FF8F FFE6     	movff	plusw1,postinc1
 21893  011C40  006F FF8F FFE6     	movff	plusw1,postinc1
 21894                           
 21895                           ;stkvar	_h @ sp[(-60)+24]
 21896  011C46  0EDC               	movlw	-36
 21897  011C48  006F FF8F FFE6     	movff	plusw1,postinc1
 21898  011C4E  006F FF8F FFE6     	movff	plusw1,postinc1
 21899  011C54  006F FF8F FFE6     	movff	plusw1,postinc1
 21900  011C5A  006F FF8F FFE6     	movff	plusw1,postinc1
 21901  011C60  ECFB  F0CF         	call	___flge	;wreg free
 21902  011C64  A001               	btfss	btemp& (0+255),0,c
 21903  011C66  D021               	goto	u12700
 21904                           
 21905                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 432:         if ((h == l) && 
      +                          !(d % 2)) {
 21906                           ;stkvar	_l @ sp[(-56)+20]
 21907                           
 21908                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 430:     } else {
 21909                           
 21910                           ;stkvar	_l @ sp[(-56)+20]
 21911                           
 21912                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 429:         l = 0.0;
 21913  011C68  0EDC               	movlw	-36
 21914  011C6A  006F FF8F FFE6     	movff	plusw1,postinc1
 21915  011C70  006F FF8F FFE6     	movff	plusw1,postinc1
 21916  011C76  006F FF8F FFE6     	movff	plusw1,postinc1
 21917  011C7C  006F FF8F FFE6     	movff	plusw1,postinc1
 21918                           
 21919                           ;stkvar	_h @ sp[(-60)+24]
 21920  011C82  0EDC               	movlw	-36
 21921  011C84  006F FF8F FFE6     	movff	plusw1,postinc1
 21922  011C8A  006F FF8F FFE6     	movff	plusw1,postinc1
 21923  011C90  006F FF8F FFE6     	movff	plusw1,postinc1
 21924  011C96  006F FF8F FFE6     	movff	plusw1,postinc1
 21925  011C9C  EC77  F0DB         	call	___fleq	;wreg free
 21926  011CA0  A001               	btfss	btemp& (0+255),0,c
 21927  011CA2  D01B               	goto	l13618
 21928                           
 21929                           ;stkvar	_d @ sp[(-56)+44]
 21930  011CA4  0EF4               	movlw	-12
 21931  011CA6  B0E3               	btfsc	plusw1,0,c
 21932  011CA8  D018               	goto	l13618
 21933  011CAA                     u12700:
 21934                           
 21935                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 433:             l = 0.0;
 21936  011CAA  0E00               	movlw	0
 21937  011CAC  6E09               	movwf	(btemp+8)^0,c
 21938  011CAE  0E00               	movlw	0
 21939  011CB0  6E0A               	movwf	(btemp+9)^0,c
 21940  011CB2  0E00               	movlw	0
 21941  011CB4  6E0B               	movwf	(btemp+10)^0,c
 21942  011CB6  0E00               	movlw	0
 21943  011CB8  6E0C               	movwf	(btemp+11)^0,c
 21944                           
 21945                           ;stkvar	_l @ sp[(-56)+20]
 21946  011CBA  0EDC               	movlw	-36
 21947  011CBC  0060  F027  FFE3   	movff	btemp+8,plusw1
 21948  011CC2  0EDD               	movlw	-35
 21949  011CC4  0060  F02B  FFE3   	movff	btemp+9,plusw1
 21950  011CCA  0EDE               	movlw	-34
 21951  011CCC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21952  011CD2  0EDF               	movlw	-33
 21953  011CD4  0060  F033  FFE3   	movff	btemp+11,plusw1
 21954  011CDA                     l13618:
 21955                           
 21956                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 438:     h = g + l;
 21957                           ;stkvar	_l @ sp[(-56)+20]
 21958  011CDA  0EDC               	movlw	-36
 21959  011CDC  006F FF8F FFE6     	movff	plusw1,postinc1
 21960  011CE2  006F FF8F FFE6     	movff	plusw1,postinc1
 21961  011CE8  006F FF8F FFE6     	movff	plusw1,postinc1
 21962  011CEE  006F FF8F FFE6     	movff	plusw1,postinc1
 21963                           
 21964                           ;stkvar	_g @ sp[(-60)+16]
 21965  011CF4  0ED4               	movlw	-44
 21966  011CF6  006F FF8F FFE6     	movff	plusw1,postinc1
 21967  011CFC  006F FF8F FFE6     	movff	plusw1,postinc1
 21968  011D02  006F FF8F FFE6     	movff	plusw1,postinc1
 21969  011D08  006F FF8F FFE6     	movff	plusw1,postinc1
 21970  011D0E  EC67  F0A9         	call	___fladd	;wreg free
 21971                           
 21972                           ;stkvar	_h @ sp[(-56)+24]
 21973  011D12  0EE0               	movlw	-32
 21974  011D14  0060  F007  FFE3   	movff	btemp,plusw1
 21975  011D1A  0EE1               	movlw	-31
 21976  011D1C  0060  F00B  FFE3   	movff	btemp+1,plusw1
 21977  011D22  0EE2               	movlw	-30
 21978  011D24  0060  F00F  FFE3   	movff	btemp+2,plusw1
 21979  011D2A  0EE3               	movlw	-29
 21980  011D2C  0060  F013  FFE3   	movff	btemp+3,plusw1
 21981                           
 21982                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 441:     u = ou;
 21983                           ;stkvar	_ou @ sp[(-56)+28]
 21984  011D32  0EE4               	movlw	-28
 21985  011D34  006F FF8C  F009    	movff	plusw1,btemp+8
 21986  011D3A  0EE5               	movlw	-27
 21987  011D3C  006F FF8C  F00A    	movff	plusw1,btemp+9
 21988  011D42  0EE6               	movlw	-26
 21989  011D44  006F FF8C  F00B    	movff	plusw1,btemp+10
 21990  011D4A  0EE7               	movlw	-25
 21991  011D4C  006F FF8C  F00C    	movff	plusw1,btemp+11
 21992                           
 21993                           ;stkvar	_u @ sp[(-56)+12]
 21994  011D52  0ED4               	movlw	-44
 21995  011D54  0060  F027  FFE3   	movff	btemp+8,plusw1
 21996  011D5A  0ED5               	movlw	-43
 21997  011D5C  0060  F02B  FFE3   	movff	btemp+9,plusw1
 21998  011D62  0ED6               	movlw	-42
 21999  011D64  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22000  011D6A  0ED7               	movlw	-41
 22001  011D6C  0060  F033  FFE3   	movff	btemp+11,plusw1
 22002                           
 22003                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 442:     ne = (nmode == 'e') 
      +                          ? 0 : e;
 22004                           ;stkvar	_nmode @ sp[(-56)+55]
 22005  011D72  0EFF               	movlw	-1
 22006  011D74  006F FF8C  F001    	movff	plusw1,btemp
 22007  011D7A  0E65               	movlw	101
 22008  011D7C  1801               	xorwf	btemp^0,w,c
 22009  011D7E  B4D8               	btfsc	status,2,c
 22010  011D80  D011               	goto	l13626
 22011                           
 22012                           ;stkvar	_e @ sp[(-56)+34]
 22013                           ;stkvar	_ne @ sp[(-56)+46]
 22014  011D82  0EEA               	movlw	-22
 22015  011D84  006F FF8C  F001    	movff	plusw1,btemp
 22016  011D8A  0EF6               	movlw	-10
 22017  011D8C  0060  F007  FFE3   	movff	btemp,plusw1
 22018  011D92  0EEB               	movlw	-21
 22019  011D94  006F FF8C  F001    	movff	plusw1,btemp
 22020  011D9A  0EF7               	movlw	-9
 22021  011D9C  0060  F007  FFE3   	movff	btemp,plusw1
 22022  011DA2  D004               	goto	l2526
 22023  011DA4                     l13626:
 22024                           
 22025                           ;stkvar	_ne @ sp[(-56)+46]
 22026  011DA4  0EF6               	movlw	-10
 22027  011DA6  6AE3               	clrf	plusw1,c
 22028  011DA8  0EF7               	movlw	-9
 22029  011DAA  6AE3               	clrf	plusw1,c
 22030  011DAC                     l2526:
 22031                           
 22032                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 443:     pp = 0;
 22033                           ;stkvar	_pp @ sp[(-56)+50]
 22034  011DAC  0EFA               	movlw	-6
 22035  011DAE  6AE3               	clrf	plusw1,c
 22036  011DB0  0EFB               	movlw	-5
 22037  011DB2  6AE3               	clrf	plusw1,c
 22038                           
 22039                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 444:     t = 0;
 22040                           ;stkvar	_t @ sp[(-56)+52]
 22041  011DB4  0EFC               	movlw	-4
 22042  011DB6  6AE3               	clrf	plusw1,c
 22043  011DB8  0EFD               	movlw	-3
 22044  011DBA  6AE3               	clrf	plusw1,c
 22045                           
 22046                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 445:     i = 0;
 22047                           ;stkvar	_i @ sp[(-56)+36]
 22048  011DBC  0EEC               	movlw	-20
 22049  011DBE  6AE3               	clrf	plusw1,c
 22050  011DC0  0EED               	movlw	-19
 22051  011DC2  6AE3               	clrf	plusw1,c
 22052                           
 22053                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 22054  011DC4  D1B7               	goto	l13678
 22055  011DC6                     l13628:
 22056                           
 22057                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 447:         l = floorf(h/u);
 22058                           ;stkvar	_u @ sp[(-56)+12]
 22059  011DC6  0ED4               	movlw	-44
 22060  011DC8  006F FF8F FFE6     	movff	plusw1,postinc1
 22061  011DCE  006F FF8F FFE6     	movff	plusw1,postinc1
 22062  011DD4  006F FF8F FFE6     	movff	plusw1,postinc1
 22063  011DDA  006F FF8F FFE6     	movff	plusw1,postinc1
 22064                           
 22065                           ;stkvar	_h @ sp[(-60)+24]
 22066  011DE0  0EDC               	movlw	-36
 22067  011DE2  006F FF8F FFE6     	movff	plusw1,postinc1
 22068  011DE8  006F FF8F FFE6     	movff	plusw1,postinc1
 22069  011DEE  006F FF8F FFE6     	movff	plusw1,postinc1
 22070  011DF4  006F FF8F FFE6     	movff	plusw1,postinc1
 22071  011DFA  EC45  F0AD         	call	___fldiv	;wreg free
 22072  011DFE  0060  F007  FFE6   	movff	btemp,postinc1
 22073  011E04  0060  F00B  FFE6   	movff	btemp+1,postinc1
 22074  011E0A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 22075  011E10  0060  F013  FFE6   	movff	btemp+3,postinc1
 22076  011E16  ECA3  F0B8         	call	_floorf	;wreg free
 22077                           
 22078                           ;stkvar	_l @ sp[(-56)+20]
 22079  011E1A  0EDC               	movlw	-36
 22080  011E1C  0060  F007  FFE3   	movff	btemp,plusw1
 22081  011E22  0EDD               	movlw	-35
 22082  011E24  0060  F00B  FFE3   	movff	btemp+1,plusw1
 22083  011E2A  0EDE               	movlw	-34
 22084  011E2C  0060  F00F  FFE3   	movff	btemp+2,plusw1
 22085  011E32  0EDF               	movlw	-33
 22086  011E34  0060  F013  FFE3   	movff	btemp+3,plusw1
 22087                           
 22088                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 448:         d = (int)l;
 22089                           ;stkvar	_l @ sp[(-56)+20]
 22090  011E3A  0EDC               	movlw	-36
 22091  011E3C  006F FF8F FFE6     	movff	plusw1,postinc1
 22092  011E42  006F FF8F FFE6     	movff	plusw1,postinc1
 22093  011E48  006F FF8F FFE6     	movff	plusw1,postinc1
 22094  011E4E  006F FF8F FFE6     	movff	plusw1,postinc1
 22095  011E54  EC42  F0CF         	call	___fltol	;wreg free
 22096  011E58  0060  F004  F00B   	movff	btemp,btemp+10
 22097  011E5E  0060  F008  F00C   	movff	btemp+1,btemp+11
 22098                           
 22099                           ;stkvar	_d @ sp[(-56)+44]
 22100  011E64  0EF4               	movlw	-12
 22101  011E66  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22102  011E6C  0EF5               	movlw	-11
 22103  011E6E  0060  F033  FFE3   	movff	btemp+11,plusw1
 22104                           
 22105                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 449:         if (!(flags & (1
      +                           << 4)) && !d && (mode == 'g') && (ne < 0)) {
 22106  011E74  B83E               	btfsc	_flags^0,4,c
 22107  011E76  D026               	goto	l13642
 22108                           
 22109                           ;stkvar	_d @ sp[(-56)+44]
 22110  011E78  0EF4               	movlw	-12
 22111  011E7A  006F FF8C  F001    	movff	plusw1,btemp
 22112  011E80  0EF5               	movlw	-11
 22113  011E82  50E3               	movf	plusw1,w,c
 22114  011E84  1001               	iorwf	btemp^0,w,c
 22115  011E86  A4D8               	btfss	status,2,c
 22116  011E88  D01D               	goto	l13642
 22117                           
 22118                           ;stkvar	_mode @ sp[(-56)+54]
 22119  011E8A  0EFE               	movlw	-2
 22120  011E8C  006F FF8C  F001    	movff	plusw1,btemp
 22121  011E92  0E67               	movlw	103
 22122  011E94  1801               	xorwf	btemp^0,w,c
 22123  011E96  A4D8               	btfss	status,2,c
 22124  011E98  D015               	goto	l13642
 22125                           
 22126                           ;stkvar	_ne @ sp[(-56)+46]
 22127  011E9A  0EF7               	movlw	-9
 22128  011E9C  AEE3               	btfss	plusw1,7,c
 22129  011E9E  D012               	goto	l13642
 22130                           
 22131                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 450:             ++t;
 22132                           ;stkvar	_t @ sp[(-56)+52]
 22133  011EA0  0EFC               	movlw	-4
 22134  011EA2  50E3               	movf	plusw1,w,c
 22135  011EA4  0F01               	addlw	1
 22136  011EA6  6E01               	movwf	btemp^0,c
 22137  011EA8  0EFC               	movlw	-4
 22138  011EAA  0060  F007  FFE3   	movff	btemp,plusw1
 22139  011EB0  6A01               	clrf	btemp^0,c
 22140  011EB2  0EFD               	movlw	-3
 22141  011EB4  50E3               	movf	plusw1,w,c
 22142  011EB6  2001               	addwfc	btemp^0,w,c
 22143  011EB8  6E01               	movwf	btemp^0,c
 22144  011EBA  0EFD               	movlw	-3
 22145  011EBC  0060  F007  FFE3   	movff	btemp,plusw1
 22146                           
 22147                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 451:         } else {
 22148  011EC2  D0AF               	goto	l13670
 22149  011EC4                     l13642:
 22150                           
 22151                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 452:             if (!pp && (
      +                          ne < 0)) {
 22152                           ;stkvar	_pp @ sp[(-56)+50]
 22153  011EC4  0EFA               	movlw	-6
 22154  011EC6  006F FF8C  F001    	movff	plusw1,btemp
 22155  011ECC  0EFB               	movlw	-5
 22156  011ECE  50E3               	movf	plusw1,w,c
 22157  011ED0  1001               	iorwf	btemp^0,w,c
 22158  011ED2  A4D8               	btfss	status,2,c
 22159  011ED4  D070               	goto	l13662
 22160                           
 22161                           ;stkvar	_ne @ sp[(-56)+46]
 22162  011ED6  0EF7               	movlw	-9
 22163  011ED8  AEE3               	btfss	plusw1,7,c
 22164  011EDA  D06D               	goto	l13662
 22165                           
 22166                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 453:                 dbuf[n++
      +                          ] = '.';
 22167                           ;stkvar	_n @ sp[(-56)+32]
 22168  011EDC  0EE8               	movlw	-24
 22169  011EDE  006F FF8C  F00B    	movff	plusw1,btemp+10
 22170  011EE4  0EE9               	movlw	-23
 22171  011EE6  006F FF8C  F00C    	movff	plusw1,btemp+11
 22172  011EEC  0E54               	movlw	low _dbuf
 22173  011EEE  240B               	addwf	(btemp+10)^0,w,c
 22174  011EF0  6ED9               	movwf	fsr2l,c
 22175  011EF2  0E03               	movlw	high _dbuf
 22176  011EF4  200C               	addwfc	(btemp+11)^0,w,c
 22177  011EF6  6EDA               	movwf	fsr2h,c
 22178  011EF8  0E2E               	movlw	46
 22179  011EFA  6EDF               	movwf	indf2,c
 22180                           
 22181                           ;stkvar	_n @ sp[(-56)+32]
 22182  011EFC  0EE8               	movlw	-24
 22183  011EFE  50E3               	movf	plusw1,w,c
 22184  011F00  0F01               	addlw	1
 22185  011F02  6E01               	movwf	btemp^0,c
 22186  011F04  0EE8               	movlw	-24
 22187  011F06  0060  F007  FFE3   	movff	btemp,plusw1
 22188  011F0C  6A01               	clrf	btemp^0,c
 22189  011F0E  0EE9               	movlw	-23
 22190  011F10  50E3               	movf	plusw1,w,c
 22191  011F12  2001               	addwfc	btemp^0,w,c
 22192  011F14  6E01               	movwf	btemp^0,c
 22193  011F16  0EE9               	movlw	-23
 22194  011F18  0060  F007  FFE3   	movff	btemp,plusw1
 22195                           
 22196                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 454:                 --w;
 22197                           ;stkvar	_w @ sp[(-56)+38]
 22198  011F1E  50E1               	movf	fsr1l,w,c
 22199  011F20  0FEE               	addlw	-18
 22200  011F22  6ED9               	movwf	fsr2l,c
 22201  011F24  50E2               	movf	fsr1h,w,c
 22202  011F26  6EDA               	movwf	fsr2h,c
 22203  011F28  0EFF               	movlw	255
 22204  011F2A  22DA               	addwfc	fsr2h,f,c
 22205  011F2C  06DE               	decf	postinc2,f,c
 22206  011F2E  0E00               	movlw	0
 22207  011F30  5ADD               	subwfb	postdec2,f,c
 22208                           
 22209                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 455:                 pp = 1;
 22210  011F32  0E01               	movlw	1
 22211  011F34  6E0B               	movwf	(btemp+10)^0,c
 22212  011F36  0E00               	movlw	0
 22213  011F38  6E0C               	movwf	(btemp+11)^0,c
 22214                           
 22215                           ;stkvar	_pp @ sp[(-56)+50]
 22216  011F3A  0EFA               	movlw	-6
 22217  011F3C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22218  011F42  0EFB               	movlw	-5
 22219  011F44  0060  F033  FFE3   	movff	btemp+11,plusw1
 22220  011F4A  D035               	goto	l13662
 22221  011F4C                     l13654:
 22222                           
 22223                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 458:                 dbuf[n++
      +                          ] = '0';
 22224                           ;stkvar	_n @ sp[(-56)+32]
 22225  011F4C  0EE8               	movlw	-24
 22226  011F4E  006F FF8C  F00B    	movff	plusw1,btemp+10
 22227  011F54  0EE9               	movlw	-23
 22228  011F56  006F FF8C  F00C    	movff	plusw1,btemp+11
 22229  011F5C  0E54               	movlw	low _dbuf
 22230  011F5E  240B               	addwf	(btemp+10)^0,w,c
 22231  011F60  6ED9               	movwf	fsr2l,c
 22232  011F62  0E03               	movlw	high _dbuf
 22233  011F64  200C               	addwfc	(btemp+11)^0,w,c
 22234  011F66  6EDA               	movwf	fsr2h,c
 22235  011F68  0E30               	movlw	48
 22236  011F6A  6EDF               	movwf	indf2,c
 22237                           
 22238                           ;stkvar	_n @ sp[(-56)+32]
 22239  011F6C  0EE8               	movlw	-24
 22240  011F6E  50E3               	movf	plusw1,w,c
 22241  011F70  0F01               	addlw	1
 22242  011F72  6E01               	movwf	btemp^0,c
 22243  011F74  0EE8               	movlw	-24
 22244  011F76  0060  F007  FFE3   	movff	btemp,plusw1
 22245  011F7C  6A01               	clrf	btemp^0,c
 22246  011F7E  0EE9               	movlw	-23
 22247  011F80  50E3               	movf	plusw1,w,c
 22248  011F82  2001               	addwfc	btemp^0,w,c
 22249  011F84  6E01               	movwf	btemp^0,c
 22250  011F86  0EE9               	movlw	-23
 22251  011F88  0060  F007  FFE3   	movff	btemp,plusw1
 22252                           
 22253                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 459:                 --w;
 22254                           ;stkvar	_w @ sp[(-56)+38]
 22255  011F8E  50E1               	movf	fsr1l,w,c
 22256  011F90  0FEE               	addlw	-18
 22257  011F92  6ED9               	movwf	fsr2l,c
 22258  011F94  50E2               	movf	fsr1h,w,c
 22259  011F96  6EDA               	movwf	fsr2h,c
 22260  011F98  0EFF               	movlw	255
 22261  011F9A  22DA               	addwfc	fsr2h,f,c
 22262  011F9C  06DE               	decf	postinc2,f,c
 22263  011F9E  0E00               	movlw	0
 22264  011FA0  5ADD               	subwfb	postdec2,f,c
 22265                           
 22266                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 460:                 --t;
 22267                           ;stkvar	_t @ sp[(-56)+52]
 22268  011FA2  50E1               	movf	fsr1l,w,c
 22269  011FA4  0FFC               	addlw	-4
 22270  011FA6  6ED9               	movwf	fsr2l,c
 22271  011FA8  50E2               	movf	fsr1h,w,c
 22272  011FAA  6EDA               	movwf	fsr2h,c
 22273  011FAC  0EFF               	movlw	255
 22274  011FAE  22DA               	addwfc	fsr2h,f,c
 22275  011FB0  06DE               	decf	postinc2,f,c
 22276  011FB2  0E00               	movlw	0
 22277  011FB4  5ADD               	subwfb	postdec2,f,c
 22278  011FB6                     l13662:
 22279                           
 22280                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 457:             while (t) {
 22281                           ;stkvar	_t @ sp[(-56)+52]
 22282  011FB6  0EFC               	movlw	-4
 22283  011FB8  006F FF8C  F001    	movff	plusw1,btemp
 22284  011FBE  0EFD               	movlw	-3
 22285  011FC0  50E3               	movf	plusw1,w,c
 22286  011FC2  1001               	iorwf	btemp^0,w,c
 22287  011FC4  A4D8               	btfss	status,2,c
 22288  011FC6  D7C2               	goto	l13654
 22289                           
 22290                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 462:             dbuf[n++] = 
      +                          '0' + d;
 22291                           ;stkvar	_n @ sp[(-56)+32]
 22292  011FC8  0EE8               	movlw	-24
 22293  011FCA  006F FF8C  F00B    	movff	plusw1,btemp+10
 22294  011FD0  0EE9               	movlw	-23
 22295  011FD2  006F FF8C  F00C    	movff	plusw1,btemp+11
 22296  011FD8  0E54               	movlw	low _dbuf
 22297  011FDA  240B               	addwf	(btemp+10)^0,w,c
 22298  011FDC  6ED9               	movwf	fsr2l,c
 22299  011FDE  0E03               	movlw	high _dbuf
 22300  011FE0  200C               	addwfc	(btemp+11)^0,w,c
 22301  011FE2  6EDA               	movwf	fsr2h,c
 22302                           
 22303                           ;stkvar	_d @ sp[(-56)+44]
 22304  011FE4  0EF4               	movlw	-12
 22305  011FE6  50E3               	movf	plusw1,w,c
 22306  011FE8  0F30               	addlw	48
 22307  011FEA  6EDF               	movwf	indf2,c
 22308                           
 22309                           ;stkvar	_n @ sp[(-56)+32]
 22310  011FEC  0EE8               	movlw	-24
 22311  011FEE  50E3               	movf	plusw1,w,c
 22312  011FF0  0F01               	addlw	1
 22313  011FF2  6E01               	movwf	btemp^0,c
 22314  011FF4  0EE8               	movlw	-24
 22315  011FF6  0060  F007  FFE3   	movff	btemp,plusw1
 22316  011FFC  6A01               	clrf	btemp^0,c
 22317  011FFE  0EE9               	movlw	-23
 22318  012000  50E3               	movf	plusw1,w,c
 22319  012002  2001               	addwfc	btemp^0,w,c
 22320  012004  6E01               	movwf	btemp^0,c
 22321  012006  0EE9               	movlw	-23
 22322  012008  0060  F007  FFE3   	movff	btemp,plusw1
 22323                           
 22324                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 463:             --w;
 22325                           ;stkvar	_w @ sp[(-56)+38]
 22326  01200E  50E1               	movf	fsr1l,w,c
 22327  012010  0FEE               	addlw	-18
 22328  012012  6ED9               	movwf	fsr2l,c
 22329  012014  50E2               	movf	fsr1h,w,c
 22330  012016  6EDA               	movwf	fsr2h,c
 22331  012018  0EFF               	movlw	255
 22332  01201A  22DA               	addwfc	fsr2h,f,c
 22333  01201C  06DE               	decf	postinc2,f,c
 22334  01201E  0E00               	movlw	0
 22335  012020  5ADD               	subwfb	postdec2,f,c
 22336  012022                     l13670:
 22337                           
 22338                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 465:         h -= l*u;
 22339                           ;stkvar	_u @ sp[(-56)+12]
 22340  012022  0ED4               	movlw	-44
 22341  012024  006F FF8F FFE6     	movff	plusw1,postinc1
 22342  01202A  006F FF8F FFE6     	movff	plusw1,postinc1
 22343  012030  006F FF8F FFE6     	movff	plusw1,postinc1
 22344  012036  006F FF8F FFE6     	movff	plusw1,postinc1
 22345                           
 22346                           ;stkvar	_l @ sp[(-60)+20]
 22347  01203C  0ED8               	movlw	-40
 22348  01203E  006F FF8F FFE6     	movff	plusw1,postinc1
 22349  012044  006F FF8F FFE6     	movff	plusw1,postinc1
 22350  01204A  006F FF8F FFE6     	movff	plusw1,postinc1
 22351  012050  006F FF8F FFE6     	movff	plusw1,postinc1
 22352  012056  EC52  F0A5         	call	___flmul	;wreg free
 22353  01205A  0060  F007  FFE6   	movff	btemp,postinc1
 22354  012060  0060  F00B  FFE6   	movff	btemp+1,postinc1
 22355  012066  0060  F00F  FFE6   	movff	btemp+2,postinc1
 22356  01206C  0060  F013  FFE6   	movff	btemp+3,postinc1
 22357                           
 22358                           ;stkvar	_h @ sp[(-60)+24]
 22359  012072  0EDC               	movlw	-36
 22360  012074  006F FF8F FFE6     	movff	plusw1,postinc1
 22361  01207A  006F FF8F FFE6     	movff	plusw1,postinc1
 22362  012080  006F FF8F FFE6     	movff	plusw1,postinc1
 22363  012086  006F FF8F FFE6     	movff	plusw1,postinc1
 22364  01208C  EC6D  F0E7         	call	___flsub	;wreg free
 22365                           
 22366                           ;stkvar	_h @ sp[(-56)+24]
 22367  012090  0EE0               	movlw	-32
 22368  012092  0060  F007  FFE3   	movff	btemp,plusw1
 22369  012098  0EE1               	movlw	-31
 22370  01209A  0060  F00B  FFE3   	movff	btemp+1,plusw1
 22371  0120A0  0EE2               	movlw	-30
 22372  0120A2  0060  F00F  FFE3   	movff	btemp+2,plusw1
 22373  0120A8  0EE3               	movlw	-29
 22374  0120AA  0060  F013  FFE3   	movff	btemp+3,plusw1
 22375                           
 22376                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 466:         u = u/10.0;
 22377  0120B0  0E00               	movlw	0
 22378  0120B2  6EE6               	movwf	postinc1,c
 22379  0120B4  0E00               	movlw	0
 22380  0120B6  6EE6               	movwf	postinc1,c
 22381  0120B8  0E20               	movlw	32
 22382  0120BA  6EE6               	movwf	postinc1,c
 22383  0120BC  0E41               	movlw	65
 22384  0120BE  6EE6               	movwf	postinc1,c
 22385                           
 22386                           ;stkvar	_u @ sp[(-60)+12]
 22387  0120C0  0ED0               	movlw	-48
 22388  0120C2  006F FF8F FFE6     	movff	plusw1,postinc1
 22389  0120C8  006F FF8F FFE6     	movff	plusw1,postinc1
 22390  0120CE  006F FF8F FFE6     	movff	plusw1,postinc1
 22391  0120D4  006F FF8F FFE6     	movff	plusw1,postinc1
 22392  0120DA  EC45  F0AD         	call	___fldiv	;wreg free
 22393                           
 22394                           ;stkvar	_u @ sp[(-56)+12]
 22395  0120DE  0ED4               	movlw	-44
 22396  0120E0  0060  F007  FFE3   	movff	btemp,plusw1
 22397  0120E6  0ED5               	movlw	-43
 22398  0120E8  0060  F00B  FFE3   	movff	btemp+1,plusw1
 22399  0120EE  0ED6               	movlw	-42
 22400  0120F0  0060  F00F  FFE3   	movff	btemp+2,plusw1
 22401  0120F6  0ED7               	movlw	-41
 22402  0120F8  0060  F013  FFE3   	movff	btemp+3,plusw1
 22403                           
 22404                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 467:         --ne;
 22405                           ;stkvar	_ne @ sp[(-56)+46]
 22406  0120FE  50E1               	movf	fsr1l,w,c
 22407  012100  0FF6               	addlw	-10
 22408  012102  6ED9               	movwf	fsr2l,c
 22409  012104  50E2               	movf	fsr1h,w,c
 22410  012106  6EDA               	movwf	fsr2h,c
 22411  012108  0EFF               	movlw	255
 22412  01210A  22DA               	addwfc	fsr2h,f,c
 22413  01210C  06DE               	decf	postinc2,f,c
 22414  01210E  0E00               	movlw	0
 22415  012110  5ADD               	subwfb	postdec2,f,c
 22416                           
 22417                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 468:         ++i;
 22418                           ;stkvar	_i @ sp[(-56)+36]
 22419  012112  0EEC               	movlw	-20
 22420  012114  50E3               	movf	plusw1,w,c
 22421  012116  0F01               	addlw	1
 22422  012118  6E01               	movwf	btemp^0,c
 22423  01211A  0EEC               	movlw	-20
 22424  01211C  0060  F007  FFE3   	movff	btemp,plusw1
 22425  012122  6A01               	clrf	btemp^0,c
 22426  012124  0EED               	movlw	-19
 22427  012126  50E3               	movf	plusw1,w,c
 22428  012128  2001               	addwfc	btemp^0,w,c
 22429  01212A  6E01               	movwf	btemp^0,c
 22430  01212C  0EED               	movlw	-19
 22431  01212E  0060  F007  FFE3   	movff	btemp,plusw1
 22432  012134                     l13678:
 22433                           
 22434                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 22435                           ;stkvar	_m @ sp[(-56)+48]
 22436                           ;stkvar	_i @ sp[(-56)+36]
 22437  012134  50E1               	movf	fsr1l,w,c
 22438  012136  0FEC               	addlw	-20
 22439  012138  6ED9               	movwf	fsr2l,c
 22440  01213A  50E2               	movf	fsr1h,w,c
 22441  01213C  6EDA               	movwf	fsr2h,c
 22442  01213E  0EFF               	movlw	255
 22443  012140  22DA               	addwfc	fsr2h,f,c
 22444  012142  0EF8               	movlw	-8
 22445  012144  50E3               	movf	plusw1,w,c
 22446  012146  5CDE               	subwf	postinc2,w,c
 22447  012148  50DE               	movf	postinc2,w,c
 22448  01214A  0A80               	xorlw	128
 22449  01214C  6E01               	movwf	btemp^0,c
 22450  01214E  0EF9               	movlw	-7
 22451  012150  50E3               	movf	plusw1,w,c
 22452  012152  0A80               	xorlw	128
 22453  012154  5801               	subwfb	btemp^0,w,c
 22454  012156  B0D8               	btfsc	status,0,c
 22455  012158  D00E               	goto	u12800
 22456                           
 22457                           ;stkvar	_n @ sp[(-56)+32]
 22458  01215A  0EE9               	movlw	-23
 22459  01215C  BEE3               	btfsc	plusw1,7,c
 22460  01215E  D633               	goto	l13628
 22461  012160  0EE9               	movlw	-23
 22462  012162  50E3               	movf	plusw1,w,c
 22463  012164  E108               	bnz	u12800
 22464  012166  0EE8               	movlw	-24
 22465  012168  006F FF8C  F001    	movff	plusw1,btemp
 22466  01216E  0E4B               	movlw	75
 22467  012170  5E01               	subwf	btemp^0,f,c
 22468  012172  A0D8               	btfss	status,0,c
 22469  012174  D628               	goto	l13628
 22470  012176                     u12800:
 22471                           
 22472                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 470:     if (!pp && (flags & 
      +                          (1 << 4))) {
 22473                           ;stkvar	_pp @ sp[(-56)+50]
 22474  012176  0EFA               	movlw	-6
 22475  012178  006F FF8C  F001    	movff	plusw1,btemp
 22476  01217E  0EFB               	movlw	-5
 22477  012180  50E3               	movf	plusw1,w,c
 22478  012182  1001               	iorwf	btemp^0,w,c
 22479  012184  B4D8               	btfsc	status,2,c
 22480  012186  A83E               	btfss	_flags^0,4,c
 22481  012188  D021               	goto	l13690
 22482                           
 22483                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 471:         dbuf[n++] = '.';
 22484                           ;stkvar	_n @ sp[(-56)+32]
 22485  01218A  0EE8               	movlw	-24
 22486  01218C  006F FF8C  F00B    	movff	plusw1,btemp+10
 22487  012192  0EE9               	movlw	-23
 22488  012194  006F FF8C  F00C    	movff	plusw1,btemp+11
 22489  01219A  0E54               	movlw	low _dbuf
 22490  01219C  240B               	addwf	(btemp+10)^0,w,c
 22491  01219E  6ED9               	movwf	fsr2l,c
 22492  0121A0  0E03               	movlw	high _dbuf
 22493  0121A2  200C               	addwfc	(btemp+11)^0,w,c
 22494  0121A4  6EDA               	movwf	fsr2h,c
 22495  0121A6  0E2E               	movlw	46
 22496  0121A8  6EDF               	movwf	indf2,c
 22497                           
 22498                           ;stkvar	_n @ sp[(-56)+32]
 22499  0121AA  0EE8               	movlw	-24
 22500  0121AC  50E3               	movf	plusw1,w,c
 22501  0121AE  0F01               	addlw	1
 22502  0121B0  6E01               	movwf	btemp^0,c
 22503  0121B2  0EE8               	movlw	-24
 22504  0121B4  0060  F007  FFE3   	movff	btemp,plusw1
 22505  0121BA  6A01               	clrf	btemp^0,c
 22506  0121BC  0EE9               	movlw	-23
 22507  0121BE  50E3               	movf	plusw1,w,c
 22508  0121C0  2001               	addwfc	btemp^0,w,c
 22509  0121C2  6E01               	movwf	btemp^0,c
 22510  0121C4  0EE9               	movlw	-23
 22511  0121C6  0060  F007  FFE3   	movff	btemp,plusw1
 22512  0121CC                     l13690:
 22513                           
 22514                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 473:     dbuf[n] = '\0';
 22515                           ;stkvar	_n @ sp[(-56)+32]
 22516  0121CC  0EE8               	movlw	-24
 22517  0121CE  006F FF8C  F00B    	movff	plusw1,btemp+10
 22518  0121D4  0EE9               	movlw	-23
 22519  0121D6  006F FF8C  F00C    	movff	plusw1,btemp+11
 22520  0121DC  0E54               	movlw	low _dbuf
 22521  0121DE  240B               	addwf	(btemp+10)^0,w,c
 22522  0121E0  6ED9               	movwf	fsr2l,c
 22523  0121E2  0E03               	movlw	high _dbuf
 22524  0121E4  200C               	addwfc	(btemp+11)^0,w,c
 22525  0121E6  6EDA               	movwf	fsr2h,c
 22526  0121E8  0E00               	movlw	0
 22527  0121EA  6EDF               	movwf	indf2,c
 22528                           
 22529                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 476:     if (nmode == 'e') {
 22530                           ;stkvar	_nmode @ sp[(-56)+55]
 22531  0121EC  0EFF               	movlw	-1
 22532  0121EE  006F FF8C  F001    	movff	plusw1,btemp
 22533  0121F4  0E65               	movlw	101
 22534  0121F6  1801               	xorwf	btemp^0,w,c
 22535  0121F8  A4D8               	btfss	status,2,c
 22536  0121FA  EF5F  F08A         	goto	l13494
 22537                           
 22538                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 477:         i = sizeof(dbuf)
      +                           - 1;
 22539  0121FE  0E4F               	movlw	79
 22540  012200  6E0B               	movwf	(btemp+10)^0,c
 22541  012202  0E00               	movlw	0
 22542  012204  6E0C               	movwf	(btemp+11)^0,c
 22543                           
 22544                           ;stkvar	_i @ sp[(-56)+36]
 22545  012206  0EEC               	movlw	-20
 22546  012208  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22547  01220E  0EED               	movlw	-19
 22548  012210  0060  F033  FFE3   	movff	btemp+11,plusw1
 22549                           
 22550                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 478:         dbuf[i] = '\0';
 22551                           ;stkvar	_i @ sp[(-56)+36]
 22552  012216  0EEC               	movlw	-20
 22553  012218  006F FF8C  F00B    	movff	plusw1,btemp+10
 22554  01221E  0EED               	movlw	-19
 22555  012220  006F FF8C  F00C    	movff	plusw1,btemp+11
 22556  012226  0E54               	movlw	low _dbuf
 22557  012228  240B               	addwf	(btemp+10)^0,w,c
 22558  01222A  6ED9               	movwf	fsr2l,c
 22559  01222C  0E03               	movlw	high _dbuf
 22560  01222E  200C               	addwfc	(btemp+11)^0,w,c
 22561  012230  6EDA               	movwf	fsr2h,c
 22562  012232  0E00               	movlw	0
 22563  012234  6EDF               	movwf	indf2,c
 22564                           
 22565                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 479:         sign = 0;
 22566                           ;stkvar	_sign @ sp[(-56)+42]
 22567  012236  0EF2               	movlw	-14
 22568  012238  6AE3               	clrf	plusw1,c
 22569  01223A  0EF3               	movlw	-13
 22570  01223C  6AE3               	clrf	plusw1,c
 22571                           
 22572                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 480:         if (e < 0) {
 22573                           ;stkvar	_e @ sp[(-56)+34]
 22574  01223E  0EEB               	movlw	-21
 22575  012240  AEE3               	btfss	plusw1,7,c
 22576  012242  D012               	goto	l13704
 22577                           
 22578                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 481:             sign = 1;
 22579  012244  0E01               	movlw	1
 22580  012246  6E0B               	movwf	(btemp+10)^0,c
 22581  012248  0E00               	movlw	0
 22582  01224A  6E0C               	movwf	(btemp+11)^0,c
 22583                           
 22584                           ;stkvar	_sign @ sp[(-56)+42]
 22585  01224C  0EF2               	movlw	-14
 22586  01224E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22587  012254  0EF3               	movlw	-13
 22588  012256  0060  F033  FFE3   	movff	btemp+11,plusw1
 22589                           
 22590                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 482:             e = -e;
 22591                           ;stkvar	_e @ sp[(-56)+34]
 22592                           ;stkvar	_e @ sp[(-56)+34]
 22593  01225C  0EEA               	movlw	-22
 22594  01225E  6CE3               	negf	plusw1,c
 22595  012260  0EEB               	movlw	-21
 22596  012262  1EE3               	comf	plusw1,f,c
 22597  012264  B0D8               	btfsc	status,0,c
 22598  012266  2AE3               	incf	plusw1,f,c
 22599  012268                     l13704:
 22600                           
 22601                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 484:         p = 2;
 22602  012268  0E02               	movlw	2
 22603  01226A  6E0B               	movwf	(btemp+10)^0,c
 22604  01226C  0E00               	movlw	0
 22605  01226E  6E0C               	movwf	(btemp+11)^0,c
 22606                           
 22607                           ;stkvar	_p @ sp[(-56)+40]
 22608  012270  0EF0               	movlw	-16
 22609  012272  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22610  012278  0EF1               	movlw	-15
 22611  01227A  0060  F033  FFE3   	movff	btemp+11,plusw1
 22612                           
 22613                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 22614  012280  D051               	goto	l13716
 22615  012282                     l13706:
 22616                           
 22617                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 486:             --i;
 22618                           ;stkvar	_i @ sp[(-56)+36]
 22619  012282  50E1               	movf	fsr1l,w,c
 22620  012284  0FEC               	addlw	-20
 22621  012286  6ED9               	movwf	fsr2l,c
 22622  012288  50E2               	movf	fsr1h,w,c
 22623  01228A  6EDA               	movwf	fsr2h,c
 22624  01228C  0EFF               	movlw	255
 22625  01228E  22DA               	addwfc	fsr2h,f,c
 22626  012290  06DE               	decf	postinc2,f,c
 22627  012292  0E00               	movlw	0
 22628  012294  5ADD               	subwfb	postdec2,f,c
 22629                           
 22630                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 487:             dbuf[i] = '0
      +                          ' + (e % 10);
 22631                           ;stkvar	_i @ sp[(-56)+36]
 22632  012296  0EEC               	movlw	-20
 22633  012298  006F FF8C  F00B    	movff	plusw1,btemp+10
 22634  01229E  0EED               	movlw	-19
 22635  0122A0  006F FF8C  F00C    	movff	plusw1,btemp+11
 22636  0122A6  0E54               	movlw	low _dbuf
 22637  0122A8  240B               	addwf	(btemp+10)^0,w,c
 22638  0122AA  6ED9               	movwf	fsr2l,c
 22639  0122AC  0E03               	movlw	high _dbuf
 22640  0122AE  200C               	addwfc	(btemp+11)^0,w,c
 22641  0122B0  6EDA               	movwf	fsr2h,c
 22642  0122B2  0E0A               	movlw	10
 22643  0122B4  6EE6               	movwf	postinc1,c
 22644  0122B6  0E00               	movlw	0
 22645  0122B8  6EE6               	movwf	postinc1,c
 22646                           
 22647                           ;stkvar	_e @ sp[(-58)+34]
 22648  0122BA  0EE8               	movlw	-24
 22649  0122BC  006F FF8F FFE6     	movff	plusw1,postinc1
 22650  0122C2  006F FF8F FFE6     	movff	plusw1,postinc1
 22651  0122C8  EC37  F0D6         	call	___awmod	;wreg free
 22652  0122CC  5001               	movf	btemp^0,w,c
 22653  0122CE  0F30               	addlw	48
 22654  0122D0  6EDF               	movwf	indf2,c
 22655                           
 22656                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 488:             e = e / 10;
 22657  0122D2  0E0A               	movlw	10
 22658  0122D4  6EE6               	movwf	postinc1,c
 22659  0122D6  0E00               	movlw	0
 22660  0122D8  6EE6               	movwf	postinc1,c
 22661                           
 22662                           ;stkvar	_e @ sp[(-58)+34]
 22663  0122DA  0EE8               	movlw	-24
 22664  0122DC  006F FF8F FFE6     	movff	plusw1,postinc1
 22665  0122E2  006F FF8F FFE6     	movff	plusw1,postinc1
 22666  0122E8  EC09  F0D2         	call	___awdiv	;wreg free
 22667                           
 22668                           ;stkvar	_e @ sp[(-56)+34]
 22669  0122EC  0EEA               	movlw	-22
 22670  0122EE  0060  F007  FFE3   	movff	btemp,plusw1
 22671  0122F4  0EEB               	movlw	-21
 22672  0122F6  0060  F00B  FFE3   	movff	btemp+1,plusw1
 22673                           
 22674                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 489:             --p;
 22675                           ;stkvar	_p @ sp[(-56)+40]
 22676  0122FC  50E1               	movf	fsr1l,w,c
 22677  0122FE  0FF0               	addlw	-16
 22678  012300  6ED9               	movwf	fsr2l,c
 22679  012302  50E2               	movf	fsr1h,w,c
 22680  012304  6EDA               	movwf	fsr2h,c
 22681  012306  0EFF               	movlw	255
 22682  012308  22DA               	addwfc	fsr2h,f,c
 22683  01230A  06DE               	decf	postinc2,f,c
 22684  01230C  0E00               	movlw	0
 22685  01230E  5ADD               	subwfb	postdec2,f,c
 22686                           
 22687                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 490:             --w;
 22688                           ;stkvar	_w @ sp[(-56)+38]
 22689  012310  50E1               	movf	fsr1l,w,c
 22690  012312  0FEE               	addlw	-18
 22691  012314  6ED9               	movwf	fsr2l,c
 22692  012316  50E2               	movf	fsr1h,w,c
 22693  012318  6EDA               	movwf	fsr2h,c
 22694  01231A  0EFF               	movlw	255
 22695  01231C  22DA               	addwfc	fsr2h,f,c
 22696  01231E  06DE               	decf	postinc2,f,c
 22697  012320  0E00               	movlw	0
 22698  012322  5ADD               	subwfb	postdec2,f,c
 22699  012324                     l13716:
 22700                           
 22701                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 22702                           ;stkvar	_e @ sp[(-56)+34]
 22703  012324  0EEA               	movlw	-22
 22704  012326  006F FF8C  F001    	movff	plusw1,btemp
 22705  01232C  0EEB               	movlw	-21
 22706  01232E  50E3               	movf	plusw1,w,c
 22707  012330  1001               	iorwf	btemp^0,w,c
 22708  012332  A4D8               	btfss	status,2,c
 22709  012334  D7A6               	goto	l13706
 22710                           
 22711                           ;stkvar	_p @ sp[(-56)+40]
 22712  012336  0EF1               	movlw	-15
 22713  012338  BEE3               	btfsc	plusw1,7,c
 22714  01233A  D007               	goto	u12860
 22715  01233C  0EF1               	movlw	-15
 22716  01233E  50E3               	movf	plusw1,w,c
 22717  012340  E1A0               	bnz	l13706
 22718  012342  0EF0               	movlw	-16
 22719  012344  04E3               	decf	plusw1,w,c
 22720  012346  B0D8               	btfsc	status,0,c
 22721  012348  D79C               	goto	l13706
 22722  01234A                     u12860:
 22723                           
 22724                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 492:         --i;
 22725                           ;stkvar	_i @ sp[(-56)+36]
 22726  01234A  50E1               	movf	fsr1l,w,c
 22727  01234C  0FEC               	addlw	-20
 22728  01234E  6ED9               	movwf	fsr2l,c
 22729  012350  50E2               	movf	fsr1h,w,c
 22730  012352  6EDA               	movwf	fsr2h,c
 22731  012354  0EFF               	movlw	255
 22732  012356  22DA               	addwfc	fsr2h,f,c
 22733  012358  06DE               	decf	postinc2,f,c
 22734  01235A  0E00               	movlw	0
 22735  01235C  5ADD               	subwfb	postdec2,f,c
 22736                           
 22737                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 493:         dbuf[i] = sign ?
      +                           '-' : '+';
 22738                           ;stkvar	_sign @ sp[(-56)+42]
 22739  01235E  0EF2               	movlw	-14
 22740  012360  006F FF8C  F001    	movff	plusw1,btemp
 22741  012366  0EF3               	movlw	-13
 22742  012368  50E3               	movf	plusw1,w,c
 22743  01236A  1001               	iorwf	btemp^0,w,c
 22744  01236C  A4D8               	btfss	status,2,c
 22745  01236E  D002               	goto	l13726
 22746  012370  0E2B               	movlw	43
 22747  012372  D001               	goto	L24
 22748  012374                     l13726:
 22749  012374  0E2D               	movlw	45
 22750  012376                     L24:
 22751  012376  6E0B               	movwf	(btemp+10)^0,c
 22752  012378  0E00               	movlw	0
 22753  01237A  6E0C               	movwf	(btemp+11)^0,c
 22754                           
 22755                           ;stkvar	_efgtoa$6533 @ sp[(-56)+4]
 22756  01237C  0ECC               	movlw	-52
 22757  01237E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22758  012384  0ECD               	movlw	-51
 22759  012386  0060  F033  FFE3   	movff	btemp+11,plusw1
 22760                           
 22761                           ;stkvar	_efgtoa$6533 @ sp[(-56)+4]
 22762                           ;stkvar	_i @ sp[(-56)+36]
 22763  01238C  0EEC               	movlw	-20
 22764  01238E  006F FF8C  F00B    	movff	plusw1,btemp+10
 22765  012394  0EED               	movlw	-19
 22766  012396  006F FF8C  F00C    	movff	plusw1,btemp+11
 22767  01239C  0E54               	movlw	low _dbuf
 22768  01239E  240B               	addwf	(btemp+10)^0,w,c
 22769  0123A0  6ED9               	movwf	fsr2l,c
 22770  0123A2  0E03               	movlw	high _dbuf
 22771  0123A4  200C               	addwfc	(btemp+11)^0,w,c
 22772  0123A6  6EDA               	movwf	fsr2h,c
 22773  0123A8  0ECC               	movlw	-52
 22774  0123AA  006F FF8F FFDF     	movff	plusw1,indf2
 22775                           
 22776                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 494:         --w;
 22777                           ;stkvar	_w @ sp[(-56)+38]
 22778  0123B0  50E1               	movf	fsr1l,w,c
 22779  0123B2  0FEE               	addlw	-18
 22780  0123B4  6ED9               	movwf	fsr2l,c
 22781  0123B6  50E2               	movf	fsr1h,w,c
 22782  0123B8  6EDA               	movwf	fsr2h,c
 22783  0123BA  0EFF               	movlw	255
 22784  0123BC  22DA               	addwfc	fsr2h,f,c
 22785  0123BE  06DE               	decf	postinc2,f,c
 22786  0123C0  0E00               	movlw	0
 22787  0123C2  5ADD               	subwfb	postdec2,f,c
 22788                           
 22789                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 496:         dbuf[i] = (0 ? i
      +                          supper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
 22790                           ;stkvar	_i @ sp[(-56)+36]
 22791  0123C4  50E1               	movf	fsr1l,w,c
 22792  0123C6  0FEC               	addlw	-20
 22793  0123C8  6ED9               	movwf	fsr2l,c
 22794  0123CA  50E2               	movf	fsr1h,w,c
 22795  0123CC  6EDA               	movwf	fsr2h,c
 22796  0123CE  0EFF               	movlw	255
 22797  0123D0  22DA               	addwfc	fsr2h,f,c
 22798  0123D2  06DE               	decf	postinc2,f,c
 22799  0123D4  0E00               	movlw	0
 22800  0123D6  5ADD               	subwfb	postdec2,f,c
 22801  0123D8  0EBF               	movlw	191
 22802  0123DA  6E0B               	movwf	(btemp+10)^0,c
 22803  0123DC  0EFF               	movlw	255
 22804  0123DE  6E0C               	movwf	(btemp+11)^0,c
 22805                           
 22806                           ;stkvar	_c @ sp[(-56)+-7]
 22807  0123E0  0EC1               	movlw	-63
 22808  0123E2  50E3               	movf	plusw1,w,c
 22809  0123E4  6E09               	movwf	(btemp+8)^0,c
 22810  0123E6  6A0A               	clrf	(btemp+9)^0,c
 22811  0123E8  500B               	movf	(btemp+10)^0,w,c
 22812  0123EA  2609               	addwf	(btemp+8)^0,f,c
 22813  0123EC  500C               	movf	(btemp+11)^0,w,c
 22814  0123EE  220A               	addwfc	(btemp+9)^0,f,c
 22815  0123F0  500A               	movf	(btemp+9)^0,w,c
 22816  0123F2  E106               	bnz	u12880
 22817  0123F4  0E1A               	movlw	26
 22818  0123F6  5C09               	subwf	(btemp+8)^0,w,c
 22819  0123F8  B0D8               	btfsc	status,0,c
 22820  0123FA  D002               	goto	u12880
 22821  0123FC  0E01               	movlw	1
 22822  0123FE  D001               	goto	u12890
 22823  012400                     u12880:
 22824  012400  0E00               	movlw	0
 22825  012402                     u12890:
 22826  012402  6E0B               	movwf	(btemp+10)^0,c
 22827  012404  6A0C               	clrf	(btemp+11)^0,c
 22828                           
 22829                           ;stkvar	_efgtoa$6535 @ sp[(-56)+0]
 22830  012406  0EC8               	movlw	-56
 22831  012408  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22832  01240E  0EC9               	movlw	-55
 22833  012410  0060  F033  FFE3   	movff	btemp+11,plusw1
 22834                           
 22835                           ;stkvar	_efgtoa$6535 @ sp[(-56)+0]
 22836  012416  0EC8               	movlw	-56
 22837  012418  006F FF8C  F001    	movff	plusw1,btemp
 22838  01241E  0EC9               	movlw	-55
 22839  012420  50E3               	movf	plusw1,w,c
 22840  012422  1001               	iorwf	btemp^0,w,c
 22841  012424  A4D8               	btfss	status,2,c
 22842  012426  D002               	goto	l13742
 22843  012428  0E65               	movlw	101
 22844  01242A  D001               	goto	L25
 22845  01242C                     l13742:
 22846  01242C  0E45               	movlw	69
 22847  01242E                     L25:
 22848  01242E  6E0B               	movwf	(btemp+10)^0,c
 22849  012430  0E00               	movlw	0
 22850  012432  6E0C               	movwf	(btemp+11)^0,c
 22851                           
 22852                           ;stkvar	_efgtoa$6534 @ sp[(-56)+2]
 22853  012434  0ECA               	movlw	-54
 22854  012436  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22855  01243C  0ECB               	movlw	-53
 22856  01243E  0060  F033  FFE3   	movff	btemp+11,plusw1
 22857                           
 22858                           ;stkvar	_efgtoa$6534 @ sp[(-56)+2]
 22859                           ;stkvar	_i @ sp[(-56)+36]
 22860  012444  0EEC               	movlw	-20
 22861  012446  006F FF8C  F00B    	movff	plusw1,btemp+10
 22862  01244C  0EED               	movlw	-19
 22863  01244E  006F FF8C  F00C    	movff	plusw1,btemp+11
 22864  012454  0E54               	movlw	low _dbuf
 22865  012456  240B               	addwf	(btemp+10)^0,w,c
 22866  012458  6ED9               	movwf	fsr2l,c
 22867  01245A  0E03               	movlw	high _dbuf
 22868  01245C  200C               	addwfc	(btemp+11)^0,w,c
 22869  01245E  6EDA               	movwf	fsr2h,c
 22870  012460  0ECA               	movlw	-54
 22871  012462  006F FF8F FFDF     	movff	plusw1,indf2
 22872                           
 22873                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 497:         --w;
 22874                           ;stkvar	_w @ sp[(-56)+38]
 22875  012468  50E1               	movf	fsr1l,w,c
 22876  01246A  0FEE               	addlw	-18
 22877  01246C  6ED9               	movwf	fsr2l,c
 22878  01246E  50E2               	movf	fsr1h,w,c
 22879  012470  6EDA               	movwf	fsr2h,c
 22880  012472  0EFF               	movlw	255
 22881  012474  22DA               	addwfc	fsr2h,f,c
 22882  012476  06DE               	decf	postinc2,f,c
 22883  012478  0E00               	movlw	0
 22884  01247A  5ADD               	subwfb	postdec2,f,c
 22885                           
 22886                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 498:         strcpy(&dbuf[n],
      +                           &dbuf[i]);
 22887                           ;stkvar	_i @ sp[(-56)+36]
 22888  01247C  0EEC               	movlw	-20
 22889  01247E  006F FF8C  F00B    	movff	plusw1,btemp+10
 22890  012484  0EED               	movlw	-19
 22891  012486  006F FF8C  F00C    	movff	plusw1,btemp+11
 22892  01248C  0E54               	movlw	low _dbuf
 22893  01248E  240B               	addwf	(btemp+10)^0,w,c
 22894  012490  6E09               	movwf	(btemp+8)^0,c
 22895  012492  0E03               	movlw	high _dbuf
 22896  012494  200C               	addwfc	(btemp+11)^0,w,c
 22897  012496  6E0A               	movwf	(btemp+9)^0,c
 22898  012498  0060  F027  FFE6   	movff	btemp+8,postinc1
 22899  01249E  0060  F02B  FFE6   	movff	btemp+9,postinc1
 22900                           
 22901                           ;stkvar	_n @ sp[(-58)+32]
 22902  0124A4  0E54               	movlw	low _dbuf
 22903  0124A6  6E0B               	movwf	(btemp+10)^0,c
 22904  0124A8  0E03               	movlw	high _dbuf
 22905  0124AA  6E0C               	movwf	(btemp+11)^0,c
 22906  0124AC  0EE6               	movlw	-26
 22907  0124AE  50E3               	movf	plusw1,w,c
 22908  0124B0  260B               	addwf	(btemp+10)^0,f,c
 22909  0124B2  0EE7               	movlw	-25
 22910  0124B4  50E3               	movf	plusw1,w,c
 22911  0124B6  220C               	addwfc	(btemp+11)^0,f,c
 22912  0124B8  0060  F02F  FFE6   	movff	btemp+10,postinc1
 22913  0124BE  0060  F033  FFE6   	movff	btemp+11,postinc1
 22914  0124C4  ECA6  F0DA         	call	_strcpy	;wreg free
 22915  0124C8  EF5F  F08A         	goto	l13494
 22916  0124CC                     l2482:
 22917                           
 22918                           ; _efgtoa: autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsi
      +                          ze = 7, vargsize = 0
 22919  0124CC  0EC1               	movlw	193
 22920  0124CE  26E1               	addwf	fsr1l,f,c
 22921  0124D0  0EFF               	movlw	255
 22922  0124D2  22E2               	addwfc	fsr1h,f,c
 22923  0124D4  0012               	return		;funcret
 22924  0124D6                     __end_of_efgtoa:
 22925                           	opt callstack 0
 22926                           
 22927 ;; *************** function _tolower *****************
 22928 ;; Defined at:
 22929 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/tolower.c"
 22930 ;; Parameters:    Size  Location     Type
 22931 ;;  c               2  [STACK] int 
 22932 ;; Auto vars:     Size  Location     Type
 22933 ;;		None
 22934 ;; Return value:  Size  Location     Type
 22935 ;;                  2  [STACK] int 
 22936 ;; Registers used:
 22937 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 22938 ;; Tracked objects:
 22939 ;;		On entry : 0/0
 22940 ;;		On exit  : 0/0
 22941 ;;		Unchanged: 0/0
 22942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22943 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22944 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22945 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22946 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22947 ;;Total ram usage:        0 bytes
 22948 ;; Hardware stack levels used:    1
 22949 ;; Hardware stack levels required when called:   16
 22950 ;; This function calls:
 22951 ;;		_isupper
 22952 ;; This function is called by:
 22953 ;;		_efgtoa
 22954 ;;		_vfpfcnvrt
 22955 ;; This function uses a reentrant model
 22956 ;;
 22957                           
 22958                           	psect	text79
 22959  01C3CE                     __ptext79:
 22960                           	opt callstack 0
 22961  01C3CE                     _tolower:
 22962                           	opt callstack 0
 22963                           
 22964                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22965  01C3CE  52E6               	movf	postinc1,f,c
 22966  01C3D0  52E6               	movf	postinc1,f,c
 22967                           
 22968                           ;stkvar	_c @ sp[(-2)+-2]
 22969                           
 22970                           ;incstack = 0
 22971 ;; hardware stack exceeded
 22972  01C3D2  0EFC               	movlw	-4
 22973  01C3D4  50E3               	movf	plusw1,w,c
 22974  01C3D6  0FBF               	addlw	191
 22975  01C3D8  6E0B               	movwf	(btemp+10)^0,c
 22976  01C3DA  0EFD               	movlw	-3
 22977  01C3DC  006F FF8C  F00C    	movff	plusw1,btemp+11
 22978  01C3E2  0EFF               	movlw	255
 22979  01C3E4  220C               	addwfc	(btemp+11)^0,f,c
 22980  01C3E6  500C               	movf	(btemp+11)^0,w,c
 22981  01C3E8  E106               	bnz	u6740
 22982  01C3EA  0E1A               	movlw	26
 22983  01C3EC  5C0B               	subwf	(btemp+10)^0,w,c
 22984  01C3EE  B0D8               	btfsc	status,0,c
 22985  01C3F0  D002               	goto	u6740
 22986  01C3F2  0E01               	movlw	1
 22987  01C3F4  D001               	goto	u6750
 22988  01C3F6                     u6740:
 22989  01C3F6  0E00               	movlw	0
 22990  01C3F8                     u6750:
 22991  01C3F8  6E0B               	movwf	(btemp+10)^0,c
 22992  01C3FA  6A0C               	clrf	(btemp+11)^0,c
 22993                           
 22994                           ;stkvar	_tolower$7354 @ sp[(-2)+0]
 22995  01C3FC  0EFE               	movlw	-2
 22996  01C3FE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22997  01C404  0EFF               	movlw	-1
 22998  01C406  0060  F033  FFE3   	movff	btemp+11,plusw1
 22999                           
 23000                           ;stkvar	_tolower$7354 @ sp[(-2)+0]
 23001  01C40C  0EFE               	movlw	-2
 23002  01C40E  006F FF8C  F001    	movff	plusw1,btemp
 23003  01C414  0EFF               	movlw	-1
 23004  01C416  50E3               	movf	plusw1,w,c
 23005  01C418  1001               	iorwf	btemp^0,w,c
 23006  01C41A  B4D8               	btfsc	status,2,c
 23007  01C41C  D00D               	goto	l8898
 23008                           
 23009                           ;stkvar	_c @ sp[(-2)+-2]
 23010  01C41E  0EFC               	movlw	-4
 23011  01C420  006F FF8C  F001    	movff	plusw1,btemp
 23012  01C426  0EFD               	movlw	-3
 23013  01C428  006F FF8C  F002    	movff	plusw1,btemp+1
 23014  01C42E  0E20               	movlw	32
 23015  01C430  1201               	iorwf	btemp^0,f,c
 23016  01C432  0E00               	movlw	0
 23017  01C434  1202               	iorwf	(btemp+1)^0,f,c
 23018  01C436  D008               	goto	l3754
 23019  01C438                     l8898:
 23020                           
 23021                           ;stkvar	_c @ sp[(-2)+-2]
 23022  01C438  0EFC               	movlw	-4
 23023  01C43A  006F FF8C  F001    	movff	plusw1,btemp
 23024  01C440  0EFD               	movlw	-3
 23025  01C442  006F FF8C  F002    	movff	plusw1,btemp+1
 23026  01C448                     l3754:
 23027                           
 23028                           ; _tolower: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 23029  01C448  52E5               	movf	postdec1,f,c
 23030  01C44A  52E5               	movf	postdec1,f,c
 23031  01C44C  52E5               	movf	postdec1,f,c
 23032  01C44E  52E5               	movf	postdec1,f,c
 23033  01C450  0012               	return		;funcret
 23034  01C452                     __end_of_tolower:
 23035                           	opt callstack 0
 23036                           
 23037 ;; *************** function _isupper *****************
 23038 ;; Defined at:
 23039 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isupper.c"
 23040 ;; Parameters:    Size  Location     Type
 23041 ;;  c               2  [STACK] int 
 23042 ;; Auto vars:     Size  Location     Type
 23043 ;;		None
 23044 ;; Return value:  Size  Location     Type
 23045 ;;                  2  [STACK] int 
 23046 ;; Registers used:
 23047 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 23048 ;; Tracked objects:
 23049 ;;		On entry : 0/0
 23050 ;;		On exit  : 0/0
 23051 ;;		Unchanged: 0/0
 23052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23053 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23054 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23056 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23057 ;;Total ram usage:        0 bytes
 23058 ;; Hardware stack levels used:    1
 23059 ;; Hardware stack levels required when called:   15
 23060 ;; This function calls:
 23061 ;;		Nothing
 23062 ;; This function is called by:
 23063 ;;		_efgtoa
 23064 ;;		_xtoa
 23065 ;;		_vfpfcnvrt
 23066 ;;		_tolower
 23067 ;; This function uses a reentrant model
 23068 ;;
 23069                           
 23070                           	psect	text80
 23071  01D3DC                     __ptext80:
 23072                           	opt callstack 0
 23073  01D3DC                     _isupper:
 23074                           	opt callstack 0
 23075                           
 23076                           ;stkvar	_c @ sp[(0)+-2]
 23077                           
 23078                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23079                           ;incstack = 0
 23080 ;; hardware stack exceeded
 23081  01D3DC  0EFE               	movlw	-2
 23082  01D3DE  50E3               	movf	plusw1,w,c
 23083  01D3E0  0FBF               	addlw	191
 23084  01D3E2  6E0B               	movwf	(btemp+10)^0,c
 23085  01D3E4  0EFF               	movlw	-1
 23086  01D3E6  006F FF8C  F00C    	movff	plusw1,btemp+11
 23087  01D3EC  0EFF               	movlw	255
 23088  01D3EE  220C               	addwfc	(btemp+11)^0,f,c
 23089  01D3F0  500C               	movf	(btemp+11)^0,w,c
 23090  01D3F2  E106               	bnz	u6090
 23091  01D3F4  0E1A               	movlw	26
 23092  01D3F6  5C0B               	subwf	(btemp+10)^0,w,c
 23093  01D3F8  B0D8               	btfsc	status,0,c
 23094  01D3FA  D002               	goto	u6090
 23095  01D3FC  0E01               	movlw	1
 23096  01D3FE  D001               	goto	u6100
 23097  01D400                     u6090:
 23098  01D400  0E00               	movlw	0
 23099  01D402                     u6100:
 23100  01D402  6E01               	movwf	btemp^0,c
 23101  01D404  6A02               	clrf	(btemp+1)^0,c
 23102                           
 23103                           ; _isupper: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 23104  01D406  52E5               	movf	postdec1,f,c
 23105  01D408  52E5               	movf	postdec1,f,c
 23106  01D40A  0012               	return		;funcret
 23107  01D40C                     __end_of_isupper:
 23108                           	opt callstack 0
 23109                           
 23110 ;; *************** function _strcpy *****************
 23111 ;; Defined at:
 23112 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strcpy.c"
 23113 ;; Parameters:    Size  Location     Type
 23114 ;;  dest            2  [STACK] PTR unsigned char 
 23115 ;;		 -> dbuf(80), 
 23116 ;;  src             2  [STACK] PTR const unsigned char 
 23117 ;;		 -> STR_99(4), STR_98(4), STR_95(4), STR_94(4), 
 23118 ;;		 -> dbuf(80), 
 23119 ;; Auto vars:     Size  Location     Type
 23120 ;;  d               2  [STACK] PTR unsigned char 
 23121 ;;		 -> dbuf(80), 
 23122 ;;  s               2  [STACK] PTR const unsigned char 
 23123 ;;		 -> STR_99(4), STR_98(4), STR_95(4), STR_94(4), 
 23124 ;;		 -> dbuf(80), 
 23125 ;; Return value:  Size  Location     Type
 23126 ;;                  2  [STACK] PTR unsigned char 
 23127 ;; Registers used:
 23128 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, tblptrl, tblptrh, tbl
      +ptru
 23129 ;; Tracked objects:
 23130 ;;		On entry : 0/0
 23131 ;;		On exit  : 0/0
 23132 ;;		Unchanged: 0/0
 23133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23134 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23135 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23137 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23138 ;;Total ram usage:        0 bytes
 23139 ;; Hardware stack levels used:    1
 23140 ;; Hardware stack levels required when called:   15
 23141 ;; This function calls:
 23142 ;;		Nothing
 23143 ;; This function is called by:
 23144 ;;		_efgtoa
 23145 ;; This function uses a reentrant model
 23146 ;;
 23147                           
 23148                           	psect	text81
 23149  01B54C                     __ptext81:
 23150                           	opt callstack 0
 23151  01B54C                     _strcpy:
 23152                           	opt callstack 0
 23153                           
 23154                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23155  01B54C  52E6               	movf	postinc1,f,c
 23156  01B54E  52E6               	movf	postinc1,f,c
 23157  01B550  52E6               	movf	postinc1,f,c
 23158  01B552  52E6               	movf	postinc1,f,c
 23159                           
 23160                           ;stkvar	_src @ sp[(-4)+-4]
 23161                           
 23162                           ;incstack = 0
 23163 ;; hardware stack exceeded
 23164  01B554  0EF8               	movlw	-8
 23165  01B556  006F FF8C  F00B    	movff	plusw1,btemp+10
 23166  01B55C  0EF9               	movlw	-7
 23167  01B55E  006F FF8C  F00C    	movff	plusw1,btemp+11
 23168                           
 23169                           ;stkvar	_s @ sp[(-4)+2]
 23170  01B564  0EFF               	movlw	-1
 23171  01B566  0060  F033  FFE3   	movff	btemp+11,plusw1
 23172  01B56C  0EFE               	movlw	-2
 23173  01B56E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23174                           
 23175                           ;stkvar	_dest @ sp[(-4)+-2]
 23176  01B574  0EFA               	movlw	-6
 23177  01B576  006F FF8C  F00B    	movff	plusw1,btemp+10
 23178  01B57C  0EFB               	movlw	-5
 23179  01B57E  006F FF8C  F00C    	movff	plusw1,btemp+11
 23180                           
 23181                           ;stkvar	_d @ sp[(-4)+0]
 23182  01B584  0EFD               	movlw	-3
 23183  01B586  0060  F033  FFE3   	movff	btemp+11,plusw1
 23184  01B58C  0EFC               	movlw	-4
 23185  01B58E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23186  01B594                     l13356:
 23187                           
 23188                           ;stkvar	_s @ sp[(-4)+2]
 23189  01B594  50E1               	movf	fsr1l,w,c
 23190  01B596  0FFE               	addlw	-2
 23191  01B598  6ED9               	movwf	fsr2l,c
 23192  01B59A  50E2               	movf	fsr1h,w,c
 23193  01B59C  6EDA               	movwf	fsr2h,c
 23194  01B59E  0EFF               	movlw	255
 23195  01B5A0  22DA               	addwfc	fsr2h,f,c
 23196  01B5A2  006F FF7C  F00B    	movff	indf2,btemp+10
 23197  01B5A8  0E01               	movlw	1
 23198  01B5AA  26DE               	addwf	postinc2,f,c
 23199  01B5AC  006F FF7C  F00C    	movff	indf2,btemp+11
 23200  01B5B2  0E00               	movlw	0
 23201  01B5B4  22DD               	addwfc	postdec2,f,c
 23202  01B5B6  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 23203  01B5BC  0060  F033  FFF7   	movff	btemp+11,tblptrh
 23204  01B5C2  0E00               	movlw	low (__mediumconst shr (0+16))
 23205  01B5C4  6EF8               	movwf	tblptru,c
 23206                           
 23207                           ;stkvar	_d @ sp[(-4)+0]
 23208  01B5C6  50E1               	movf	fsr1l,w,c
 23209  01B5C8  0FFC               	addlw	-4
 23210  01B5CA  6ED9               	movwf	fsr2l,c
 23211  01B5CC  50E2               	movf	fsr1h,w,c
 23212  01B5CE  6EDA               	movwf	fsr2h,c
 23213  01B5D0  0EFF               	movlw	255
 23214  01B5D2  22DA               	addwfc	fsr2h,f,c
 23215  01B5D4  006F FF7C  F00B    	movff	indf2,btemp+10
 23216  01B5DA  0E01               	movlw	1
 23217  01B5DC  26DE               	addwf	postinc2,f,c
 23218  01B5DE  006F FF7C  F00C    	movff	indf2,btemp+11
 23219  01B5E4  0E00               	movlw	0
 23220  01B5E6  22DD               	addwfc	postdec2,f,c
 23221  01B5E8  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 23222  01B5EE  0060  F033  FFDA   	movff	btemp+11,fsr2h
 23223  01B5F4  0E1F               	movlw	(high __ramtop+-1)
 23224  01B5F6  64F7               	cpfsgt	tblptrh,c
 23225  01B5F8  D003               	bra	u12187
 23226  01B5FA  0008               	tblrd		*
 23227  01B5FC  50F5               	movf	tablat,w,c
 23228  01B5FE  D007               	bra	u12180
 23229  01B600                     u12187:
 23230  01B600  006F FFDB FFE9     	movff	tblptrl,fsr0l
 23231  01B606  006F FFDF FFEA     	movff	tblptrh,fsr0h
 23232  01B60C  50EF               	movf	indf0,w,c
 23233  01B60E                     u12180:
 23234  01B60E  6EDF               	movwf	indf2,c
 23235  01B610  50DF               	movf	indf2,w,c
 23236  01B612  A4D8               	btfss	status,2,c
 23237  01B614  D7BF               	goto	l13356
 23238                           
 23239                           ; _strcpy: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 4, vargsize = 0
 23240  01B616  0EF8               	movlw	248
 23241  01B618  26E1               	addwf	fsr1l,f,c
 23242  01B61A  0EFF               	movlw	255
 23243  01B61C  22E2               	addwfc	fsr1h,f,c
 23244  01B61E  0012               	return		;funcret
 23245  01B620                     __end_of_strcpy:
 23246                           	opt callstack 0
 23247                           
 23248 ;; *************** function _floorf *****************
 23249 ;; Defined at:
 23250 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/floorf.c"
 23251 ;; Parameters:    Size  Location     Type
 23252 ;;  x               4  [STACK] float 
 23253 ;; Auto vars:     Size  Location     Type
 23254 ;;  u               4  [STACK] struct .
 23255 ;;  m               4  [STACK] unsigned long 
 23256 ;;  e               2  [STACK] int 
 23257 ;; Return value:  Size  Location     Type
 23258 ;;                  4  [STACK] float 
 23259 ;; Registers used:
 23260 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 23261 ;; Tracked objects:
 23262 ;;		On entry : 0/0
 23263 ;;		On exit  : 0/0
 23264 ;;		Unchanged: 0/0
 23265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23266 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23267 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23269 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23270 ;;Total ram usage:        0 bytes
 23271 ;; Hardware stack levels used:    1
 23272 ;; Hardware stack levels required when called:   15
 23273 ;; This function calls:
 23274 ;;		Nothing
 23275 ;; This function is called by:
 23276 ;;		_efgtoa
 23277 ;; This function uses a reentrant model
 23278 ;;
 23279                           
 23280                           	psect	text82
 23281  017146                     __ptext82:
 23282                           	opt callstack 0
 23283  017146                     _floorf:
 23284                           	opt callstack 0
 23285                           
 23286                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 23287  017146  0E0A               	movlw	10
 23288  017148  26E1               	addwf	fsr1l,f,c
 23289  01714A  0E00               	movlw	0
 23290  01714C  22E2               	addwfc	fsr1h,f,c
 23291                           
 23292                           ;incstack = 0
 23293 ;; hardware stack exceeded
 23294  01714E  0060  F1E8  F009   	movff	floorf@F524,btemp+8
 23295  017154  0060  F1EC  F00A   	movff	floorf@F524+1,btemp+9
 23296  01715A  0060  F1F0  F00B   	movff	floorf@F524+2,btemp+10
 23297  017160  0060  F1F4  F00C   	movff	floorf@F524+3,btemp+11
 23298                           
 23299                           ;stkvar	_u @ sp[(-10)+0]
 23300  017166  0EF6               	movlw	-10
 23301  017168  0060  F027  FFE3   	movff	btemp+8,plusw1
 23302  01716E  0EF7               	movlw	-9
 23303  017170  0060  F02B  FFE3   	movff	btemp+9,plusw1
 23304  017176  0EF8               	movlw	-8
 23305  017178  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23306  01717E  0EF9               	movlw	-7
 23307  017180  0060  F033  FFE3   	movff	btemp+11,plusw1
 23308                           
 23309                           ;stkvar	_x @ sp[(-10)+-4]
 23310  017186  0EF2               	movlw	-14
 23311  017188  006F FF8C  F009    	movff	plusw1,btemp+8
 23312  01718E  0EF3               	movlw	-13
 23313  017190  006F FF8C  F00A    	movff	plusw1,btemp+9
 23314  017196  0EF4               	movlw	-12
 23315  017198  006F FF8C  F00B    	movff	plusw1,btemp+10
 23316  01719E  0EF5               	movlw	-11
 23317  0171A0  006F FF8C  F00C    	movff	plusw1,btemp+11
 23318                           
 23319                           ;stkvar	_u @ sp[(-10)+0]
 23320  0171A6  0EF6               	movlw	-10
 23321  0171A8  0060  F027  FFE3   	movff	btemp+8,plusw1
 23322  0171AE  0EF7               	movlw	-9
 23323  0171B0  0060  F02B  FFE3   	movff	btemp+9,plusw1
 23324  0171B6  0EF8               	movlw	-8
 23325  0171B8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23326  0171BE  0EF9               	movlw	-7
 23327  0171C0  0060  F033  FFE3   	movff	btemp+11,plusw1
 23328  0171C6  0E81               	movlw	129
 23329  0171C8  6E0B               	movwf	(btemp+10)^0,c
 23330  0171CA  0EFF               	movlw	255
 23331  0171CC  6E0C               	movwf	(btemp+11)^0,c
 23332                           
 23333                           ;stkvar	_u @ sp[(-10)+0]
 23334  0171CE  0EF6               	movlw	-10
 23335  0171D0  006F FF8C  F005    	movff	plusw1,btemp+4
 23336  0171D6  0EF7               	movlw	-9
 23337  0171D8  006F FF8C  F006    	movff	plusw1,btemp+5
 23338  0171DE  0EF8               	movlw	-8
 23339  0171E0  006F FF8C  F007    	movff	plusw1,btemp+6
 23340  0171E6  0EF9               	movlw	-7
 23341  0171E8  006F FF8C  F008    	movff	plusw1,btemp+7
 23342  0171EE  0E18               	movlw	24
 23343  0171F0  D005               	goto	u6770
 23344  0171F2                     u6775:
 23345  0171F2  90D8               	bcf	status,0,c
 23346  0171F4  3208               	rrcf	(btemp+7)^0,f,c
 23347  0171F6  3207               	rrcf	(btemp+6)^0,f,c
 23348  0171F8  3206               	rrcf	(btemp+5)^0,f,c
 23349  0171FA  3205               	rrcf	(btemp+4)^0,f,c
 23350  0171FC                     u6770:
 23351  0171FC  2EE8               	decfsz	wreg,f,c
 23352  0171FE  D7F9               	goto	u6775
 23353  017200  0060  F014  F009   	movff	btemp+4,btemp+8
 23354  017206  0060  F018  F00A   	movff	btemp+5,btemp+9
 23355  01720C  0EFF               	movlw	255
 23356  01720E  1609               	andwf	(btemp+8)^0,f,c
 23357  017210  0E00               	movlw	0
 23358  017212  160A               	andwf	(btemp+9)^0,f,c
 23359  017214  500B               	movf	(btemp+10)^0,w,c
 23360  017216  2609               	addwf	(btemp+8)^0,f,c
 23361  017218  500C               	movf	(btemp+11)^0,w,c
 23362  01721A  220A               	addwfc	(btemp+9)^0,f,c
 23363                           
 23364                           ;stkvar	_e @ sp[(-10)+8]
 23365  01721C  0EFE               	movlw	-2
 23366  01721E  0060  F027  FFE3   	movff	btemp+8,plusw1
 23367  017224  0EFF               	movlw	-1
 23368  017226  0060  F02B  FFE3   	movff	btemp+9,plusw1
 23369                           
 23370                           ;stkvar	_e @ sp[(-10)+8]
 23371  01722C  0EFF               	movlw	-1
 23372  01722E  BEE3               	btfsc	plusw1,7,c
 23373  017230  D019               	goto	l8912
 23374  017232  0EFF               	movlw	-1
 23375  017234  50E3               	movf	plusw1,w,c
 23376  017236  E108               	bnz	u6780
 23377  017238  0EFE               	movlw	-2
 23378  01723A  006F FF8C  F001    	movff	plusw1,btemp
 23379  017240  0E17               	movlw	23
 23380  017242  5E01               	subwf	btemp^0,f,c
 23381  017244  A0D8               	btfss	status,0,c
 23382  017246  D00E               	goto	l8912
 23383  017248                     u6780:
 23384                           
 23385                           ;stkvar	_x @ sp[(-10)+-4]
 23386  017248  0EF2               	movlw	-14
 23387  01724A  006F FF8C  F001    	movff	plusw1,btemp
 23388  017250  0EF3               	movlw	-13
 23389  017252  006F FF8C  F002    	movff	plusw1,btemp+1
 23390  017258  0EF4               	movlw	-12
 23391  01725A  006F FF8C  F003    	movff	plusw1,btemp+2
 23392  017260  0EF5               	movlw	-11
 23393  017262  D11F               	goto	L26
 23394  017264                     l8912:
 23395                           
 23396                           ;stkvar	_e @ sp[(-10)+8]
 23397  017264  0EFF               	movlw	-1
 23398  017266  BEE3               	btfsc	plusw1,7,c
 23399  017268  D0B4               	goto	l8928
 23400                           
 23401                           ;stkvar	_e @ sp[(-10)+8]
 23402  01726A  0EFE               	movlw	-2
 23403  01726C  006F FF8C  F00C    	movff	plusw1,btemp+11
 23404  017272  0EFF               	movlw	255
 23405  017274  6E05               	movwf	(btemp+4)^0,c
 23406  017276  0EFF               	movlw	255
 23407  017278  6E06               	movwf	(btemp+5)^0,c
 23408  01727A  0E7F               	movlw	127
 23409  01727C  6E07               	movwf	(btemp+6)^0,c
 23410  01727E  0E00               	movlw	0
 23411  017280  6E08               	movwf	(btemp+7)^0,c
 23412  017282                     u6805:
 23413  017282  660C               	tstfsz	(btemp+11)^0,c
 23414  017284  D001               	goto	u6806
 23415  017286  D007               	goto	u6807
 23416  017288                     u6806:
 23417  017288  3408               	rlcf	(btemp+7)^0,w,c
 23418  01728A  3208               	rrcf	(btemp+7)^0,f,c
 23419  01728C  3207               	rrcf	(btemp+6)^0,f,c
 23420  01728E  3206               	rrcf	(btemp+5)^0,f,c
 23421  017290  3205               	rrcf	(btemp+4)^0,f,c
 23422  017292  2E0C               	decfsz	(btemp+11)^0,f,c
 23423  017294  D7F6               	goto	u6805
 23424  017296                     u6807:
 23425                           
 23426                           ;stkvar	_m @ sp[(-10)+4]
 23427  017296  0EFA               	movlw	-6
 23428  017298  0060  F017  FFE3   	movff	btemp+4,plusw1
 23429  01729E  0EFB               	movlw	-5
 23430  0172A0  0060  F01B  FFE3   	movff	btemp+5,plusw1
 23431  0172A6  0EFC               	movlw	-4
 23432  0172A8  0060  F01F  FFE3   	movff	btemp+6,plusw1
 23433  0172AE  0EFD               	movlw	-3
 23434  0172B0  0060  F023  FFE3   	movff	btemp+7,plusw1
 23435                           
 23436                           ;stkvar	_m @ sp[(-10)+4]
 23437                           ;stkvar	_u @ sp[(-10)+0]
 23438  0172B6  0EF6               	movlw	-10
 23439  0172B8  006F FF8C  F009    	movff	plusw1,btemp+8
 23440  0172BE  0EF7               	movlw	-9
 23441  0172C0  006F FF8C  F00A    	movff	plusw1,btemp+9
 23442  0172C6  0EF8               	movlw	-8
 23443  0172C8  006F FF8C  F00B    	movff	plusw1,btemp+10
 23444  0172CE  0EF9               	movlw	-7
 23445  0172D0  006F FF8C  F00C    	movff	plusw1,btemp+11
 23446  0172D6  0EFA               	movlw	-6
 23447  0172D8  50E3               	movf	plusw1,w,c
 23448  0172DA  1609               	andwf	(btemp+8)^0,f,c
 23449  0172DC  0EFB               	movlw	-5
 23450  0172DE  50E3               	movf	plusw1,w,c
 23451  0172E0  160A               	andwf	(btemp+9)^0,f,c
 23452  0172E2  0EFC               	movlw	-4
 23453  0172E4  50E3               	movf	plusw1,w,c
 23454  0172E6  160B               	andwf	(btemp+10)^0,f,c
 23455  0172E8  0EFD               	movlw	-3
 23456  0172EA  50E3               	movf	plusw1,w,c
 23457  0172EC  160C               	andwf	(btemp+11)^0,f,c
 23458  0172EE  5009               	movf	(btemp+8)^0,w,c
 23459  0172F0  100A               	iorwf	(btemp+9)^0,w,c
 23460  0172F2  100B               	iorwf	(btemp+10)^0,w,c
 23461  0172F4  100C               	iorwf	(btemp+11)^0,w,c
 23462  0172F6  B4D8               	btfsc	status,2,c
 23463  0172F8  D7A7               	goto	u6780
 23464                           
 23465                           ;stkvar	_u @ sp[(-10)+0]
 23466  0172FA  0EF6               	movlw	-10
 23467  0172FC  006F FF8C  F009    	movff	plusw1,btemp+8
 23468  017302  0EF7               	movlw	-9
 23469  017304  006F FF8C  F00A    	movff	plusw1,btemp+9
 23470  01730A  0EF8               	movlw	-8
 23471  01730C  006F FF8C  F00B    	movff	plusw1,btemp+10
 23472  017312  0EF9               	movlw	-7
 23473  017314  006F FF8C  F00C    	movff	plusw1,btemp+11
 23474  01731A  0E20               	movlw	32
 23475  01731C  D005               	goto	u6820
 23476  01731E                     u6825:
 23477  01731E  90D8               	bcf	status,0,c
 23478  017320  320C               	rrcf	(btemp+11)^0,f,c
 23479  017322  320B               	rrcf	(btemp+10)^0,f,c
 23480  017324  320A               	rrcf	(btemp+9)^0,f,c
 23481  017326  3209               	rrcf	(btemp+8)^0,f,c
 23482  017328                     u6820:
 23483  017328  2EE8               	decfsz	wreg,f,c
 23484  01732A  D7F9               	goto	u6825
 23485  01732C  5009               	movf	(btemp+8)^0,w,c
 23486  01732E  B4D8               	btfsc	status,2,c
 23487  017330  D028               	goto	l8926
 23488                           
 23489                           ;stkvar	_m @ sp[(-10)+4]
 23490                           ;stkvar	_u @ sp[(-10)+0]
 23491  017332  0EF6               	movlw	-10
 23492  017334  50E3               	movf	plusw1,w,c
 23493  017336  6E01               	movwf	btemp^0,c
 23494  017338  0EFA               	movlw	-6
 23495  01733A  50E3               	movf	plusw1,w,c
 23496  01733C  2601               	addwf	btemp^0,f,c
 23497  01733E  0EF6               	movlw	-10
 23498  017340  0060  F007  FFE3   	movff	btemp,plusw1
 23499  017346  0EF7               	movlw	-9
 23500  017348  50E3               	movf	plusw1,w,c
 23501  01734A  6E01               	movwf	btemp^0,c
 23502  01734C  0EFB               	movlw	-5
 23503  01734E  50E3               	movf	plusw1,w,c
 23504  017350  2201               	addwfc	btemp^0,f,c
 23505  017352  0EF7               	movlw	-9
 23506  017354  0060  F007  FFE3   	movff	btemp,plusw1
 23507  01735A  0EF8               	movlw	-8
 23508  01735C  50E3               	movf	plusw1,w,c
 23509  01735E  6E01               	movwf	btemp^0,c
 23510  017360  0EFC               	movlw	-4
 23511  017362  50E3               	movf	plusw1,w,c
 23512  017364  2201               	addwfc	btemp^0,f,c
 23513  017366  0EF8               	movlw	-8
 23514  017368  0060  F007  FFE3   	movff	btemp,plusw1
 23515  01736E  0EF9               	movlw	-7
 23516  017370  50E3               	movf	plusw1,w,c
 23517  017372  6E01               	movwf	btemp^0,c
 23518  017374  0EFD               	movlw	-3
 23519  017376  50E3               	movf	plusw1,w,c
 23520  017378  2201               	addwfc	btemp^0,f,c
 23521  01737A  0EF9               	movlw	-7
 23522  01737C  0060  F007  FFE3   	movff	btemp,plusw1
 23523  017382                     l8926:
 23524                           
 23525                           ;stkvar	_m @ sp[(-10)+4]
 23526  017382  0EFA               	movlw	-6
 23527  017384  006F FF8C  F009    	movff	plusw1,btemp+8
 23528  01738A  0EFB               	movlw	-5
 23529  01738C  006F FF8C  F00A    	movff	plusw1,btemp+9
 23530  017392  0EFC               	movlw	-4
 23531  017394  006F FF8C  F00B    	movff	plusw1,btemp+10
 23532  01739A  0EFD               	movlw	-3
 23533  01739C  006F FF8C  F00C    	movff	plusw1,btemp+11
 23534  0173A2  1C09               	comf	(btemp+8)^0,w,c
 23535  0173A4  6E05               	movwf	(btemp+4)^0,c
 23536  0173A6  1C0A               	comf	(btemp+9)^0,w,c
 23537  0173A8  6E06               	movwf	(btemp+5)^0,c
 23538  0173AA  1C0B               	comf	(btemp+10)^0,w,c
 23539  0173AC  6E07               	movwf	(btemp+6)^0,c
 23540  0173AE  1C0C               	comf	(btemp+11)^0,w,c
 23541  0173B0  6E08               	movwf	(btemp+7)^0,c
 23542                           
 23543                           ;stkvar	_u @ sp[(-10)+0]
 23544  0173B2  50E1               	movf	fsr1l,w,c
 23545  0173B4  0FF6               	addlw	-10
 23546  0173B6  6ED9               	movwf	fsr2l,c
 23547  0173B8  50E2               	movf	fsr1h,w,c
 23548  0173BA  6EDA               	movwf	fsr2h,c
 23549  0173BC  0EFF               	movlw	255
 23550  0173BE  22DA               	addwfc	fsr2h,f,c
 23551  0173C0  5005               	movf	(btemp+4)^0,w,c
 23552  0173C2  16DE               	andwf	postinc2,f,c
 23553  0173C4  5006               	movf	(btemp+5)^0,w,c
 23554  0173C6  16DE               	andwf	postinc2,f,c
 23555  0173C8  5007               	movf	(btemp+6)^0,w,c
 23556  0173CA  16DE               	andwf	postinc2,f,c
 23557  0173CC  5008               	movf	(btemp+7)^0,w,c
 23558  0173CE  16DE               	andwf	postinc2,f,c
 23559  0173D0  D05B               	goto	l8936
 23560  0173D2                     l8928:
 23561                           
 23562                           ;stkvar	_u @ sp[(-10)+0]
 23563  0173D2  0EF6               	movlw	-10
 23564  0173D4  006F FF8C  F009    	movff	plusw1,btemp+8
 23565  0173DA  0EF7               	movlw	-9
 23566  0173DC  006F FF8C  F00A    	movff	plusw1,btemp+9
 23567  0173E2  0EF8               	movlw	-8
 23568  0173E4  006F FF8C  F00B    	movff	plusw1,btemp+10
 23569  0173EA  0EF9               	movlw	-7
 23570  0173EC  006F FF8C  F00C    	movff	plusw1,btemp+11
 23571  0173F2  0E20               	movlw	32
 23572  0173F4  D005               	goto	u6840
 23573  0173F6                     u6845:
 23574  0173F6  90D8               	bcf	status,0,c
 23575  0173F8  320C               	rrcf	(btemp+11)^0,f,c
 23576  0173FA  320B               	rrcf	(btemp+10)^0,f,c
 23577  0173FC  320A               	rrcf	(btemp+9)^0,f,c
 23578  0173FE  3209               	rrcf	(btemp+8)^0,f,c
 23579  017400                     u6840:
 23580  017400  2EE8               	decfsz	wreg,f,c
 23581  017402  D7F9               	goto	u6845
 23582  017404  6609               	tstfsz	(btemp+8)^0,c
 23583  017406  D009               	goto	l8932
 23584                           
 23585                           ;stkvar	_u @ sp[(-10)+0]
 23586  017408  0EF6               	movlw	-10
 23587  01740A  6AE3               	clrf	plusw1,c
 23588  01740C  0EF7               	movlw	-9
 23589  01740E  6AE3               	clrf	plusw1,c
 23590  017410  0EF8               	movlw	-8
 23591  017412  6AE3               	clrf	plusw1,c
 23592  017414  0EF9               	movlw	-7
 23593  017416  6AE3               	clrf	plusw1,c
 23594  017418  D037               	goto	l8936
 23595  01741A                     l8932:
 23596                           
 23597                           ;stkvar	_u @ sp[(-10)+0]
 23598  01741A  0EF6               	movlw	-10
 23599  01741C  006F FF8C  F009    	movff	plusw1,btemp+8
 23600  017422  0EF7               	movlw	-9
 23601  017424  006F FF8C  F00A    	movff	plusw1,btemp+9
 23602  01742A  0EF8               	movlw	-8
 23603  01742C  006F FF8C  F00B    	movff	plusw1,btemp+10
 23604  017432  0EF9               	movlw	-7
 23605  017434  006F FF8C  F00C    	movff	plusw1,btemp+11
 23606  01743A  90D8               	bcf	status,0,c
 23607  01743C  3409               	rlcf	(btemp+8)^0,w,c
 23608  01743E  6E05               	movwf	(btemp+4)^0,c
 23609  017440  340A               	rlcf	(btemp+9)^0,w,c
 23610  017442  6E06               	movwf	(btemp+5)^0,c
 23611  017444  340B               	rlcf	(btemp+10)^0,w,c
 23612  017446  6E07               	movwf	(btemp+6)^0,c
 23613  017448  340C               	rlcf	(btemp+11)^0,w,c
 23614  01744A  6E08               	movwf	(btemp+7)^0,c
 23615  01744C  5005               	movf	(btemp+4)^0,w,c
 23616  01744E  1006               	iorwf	(btemp+5)^0,w,c
 23617  017450  1007               	iorwf	(btemp+6)^0,w,c
 23618  017452  1008               	iorwf	(btemp+7)^0,w,c
 23619  017454  B4D8               	btfsc	status,2,c
 23620  017456  D018               	goto	l8936
 23621  017458  0E00               	movlw	0
 23622  01745A  6E09               	movwf	(btemp+8)^0,c
 23623  01745C  0E00               	movlw	0
 23624  01745E  6E0A               	movwf	(btemp+9)^0,c
 23625  017460  0E80               	movlw	128
 23626  017462  6E0B               	movwf	(btemp+10)^0,c
 23627  017464  0EBF               	movlw	191
 23628  017466  6E0C               	movwf	(btemp+11)^0,c
 23629                           
 23630                           ;stkvar	_u @ sp[(-10)+0]
 23631  017468  0EF6               	movlw	-10
 23632  01746A  0060  F027  FFE3   	movff	btemp+8,plusw1
 23633  017470  0EF7               	movlw	-9
 23634  017472  0060  F02B  FFE3   	movff	btemp+9,plusw1
 23635  017478  0EF8               	movlw	-8
 23636  01747A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23637  017480  0EF9               	movlw	-7
 23638  017482  0060  F033  FFE3   	movff	btemp+11,plusw1
 23639  017488                     l8936:
 23640                           
 23641                           ;stkvar	_u @ sp[(-10)+0]
 23642  017488  0EF6               	movlw	-10
 23643  01748A  006F FF8C  F001    	movff	plusw1,btemp
 23644  017490  0EF7               	movlw	-9
 23645  017492  006F FF8C  F002    	movff	plusw1,btemp+1
 23646  017498  0EF8               	movlw	-8
 23647  01749A  006F FF8C  F003    	movff	plusw1,btemp+2
 23648  0174A0  0EF9               	movlw	-7
 23649  0174A2                     L26:
 23650  0174A2  006F FF8C  F004    	movff	plusw1,btemp+3
 23651                           
 23652                           ; _floorf: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 23653  0174A8  0EF2               	movlw	242
 23654  0174AA  26E1               	addwf	fsr1l,f,c
 23655  0174AC  0EFF               	movlw	255
 23656  0174AE  22E2               	addwfc	fsr1h,f,c
 23657  0174B0  0012               	return		;funcret
 23658  0174B2                     __end_of_floorf:
 23659                           	opt callstack 0
 23660                           
 23661 ;; *************** function ___fpclassifyf *****************
 23662 ;; Defined at:
 23663 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__fpclassifyf.c"
 23664 ;; Parameters:    Size  Location     Type
 23665 ;;  x               4  [STACK] float 
 23666 ;; Auto vars:     Size  Location     Type
 23667 ;;  u               4  [STACK] struct .
 23668 ;;  e               2  [STACK] int 
 23669 ;; Return value:  Size  Location     Type
 23670 ;;                  2  [STACK] int 
 23671 ;; Registers used:
 23672 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+
      +10, btemp+11, prodl
 23673 ;; Tracked objects:
 23674 ;;		On entry : 0/0
 23675 ;;		On exit  : 0/0
 23676 ;;		Unchanged: 0/0
 23677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23678 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23679 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23680 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23681 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23682 ;;Total ram usage:        0 bytes
 23683 ;; Hardware stack levels used:    1
 23684 ;; Hardware stack levels required when called:   15
 23685 ;; This function calls:
 23686 ;;		Nothing
 23687 ;; This function is called by:
 23688 ;;		_efgtoa
 23689 ;; This function uses a reentrant model
 23690 ;;
 23691                           
 23692                           	psect	text83
 23693  019876                     __ptext83:
 23694                           	opt callstack 0
 23695  019876                     ___fpclassifyf:
 23696                           	opt callstack 0
 23697                           
 23698                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23699  019876  0E06               	movlw	6
 23700  019878  26E1               	addwf	fsr1l,f,c
 23701  01987A  0E00               	movlw	0
 23702  01987C  22E2               	addwfc	fsr1h,f,c
 23703                           
 23704                           ;incstack = 0
 23705 ;; hardware stack exceeded
 23706  01987E  0060  F208  F009   	movff	___fpclassifyf@F463,btemp+8
 23707  019884  0060  F20C  F00A   	movff	___fpclassifyf@F463+1,btemp+9
 23708  01988A  0060  F210  F00B   	movff	___fpclassifyf@F463+2,btemp+10
 23709  019890  0060  F214  F00C   	movff	___fpclassifyf@F463+3,btemp+11
 23710                           
 23711                           ;stkvar	_u @ sp[(-6)+0]
 23712  019896  0EFA               	movlw	-6
 23713  019898  0060  F027  FFE3   	movff	btemp+8,plusw1
 23714  01989E  0EFB               	movlw	-5
 23715  0198A0  0060  F02B  FFE3   	movff	btemp+9,plusw1
 23716  0198A6  0EFC               	movlw	-4
 23717  0198A8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23718  0198AE  0EFD               	movlw	-3
 23719  0198B0  0060  F033  FFE3   	movff	btemp+11,plusw1
 23720                           
 23721                           ;stkvar	_x @ sp[(-6)+-4]
 23722  0198B6  0EF6               	movlw	-10
 23723  0198B8  006F FF8C  F009    	movff	plusw1,btemp+8
 23724  0198BE  0EF7               	movlw	-9
 23725  0198C0  006F FF8C  F00A    	movff	plusw1,btemp+9
 23726  0198C6  0EF8               	movlw	-8
 23727  0198C8  006F FF8C  F00B    	movff	plusw1,btemp+10
 23728  0198CE  0EF9               	movlw	-7
 23729  0198D0  006F FF8C  F00C    	movff	plusw1,btemp+11
 23730                           
 23731                           ;stkvar	_u @ sp[(-6)+0]
 23732  0198D6  0EFA               	movlw	-6
 23733  0198D8  0060  F027  FFE3   	movff	btemp+8,plusw1
 23734  0198DE  0EFB               	movlw	-5
 23735  0198E0  0060  F02B  FFE3   	movff	btemp+9,plusw1
 23736  0198E6  0EFC               	movlw	-4
 23737  0198E8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23738  0198EE  0EFD               	movlw	-3
 23739  0198F0  0060  F033  FFE3   	movff	btemp+11,plusw1
 23740                           
 23741                           ;stkvar	_u @ sp[(-6)+0]
 23742  0198F6  0EFA               	movlw	-6
 23743  0198F8  006F FF8C  F009    	movff	plusw1,btemp+8
 23744  0198FE  0EFB               	movlw	-5
 23745  019900  006F FF8C  F00A    	movff	plusw1,btemp+9
 23746  019906  0EFC               	movlw	-4
 23747  019908  006F FF8C  F00B    	movff	plusw1,btemp+10
 23748  01990E  0EFD               	movlw	-3
 23749  019910  006F FF8C  F00C    	movff	plusw1,btemp+11
 23750  019916  0E18               	movlw	24
 23751  019918  D005               	goto	u6650
 23752  01991A                     u6655:
 23753  01991A  90D8               	bcf	status,0,c
 23754  01991C  320C               	rrcf	(btemp+11)^0,f,c
 23755  01991E  320B               	rrcf	(btemp+10)^0,f,c
 23756  019920  320A               	rrcf	(btemp+9)^0,f,c
 23757  019922  3209               	rrcf	(btemp+8)^0,f,c
 23758  019924                     u6650:
 23759  019924  2EE8               	decfsz	wreg,f,c
 23760  019926  D7F9               	goto	u6655
 23761  019928  0060  F024  F007   	movff	btemp+8,btemp+6
 23762  01992E  0060  F028  F008   	movff	btemp+9,btemp+7
 23763  019934  0EFF               	movlw	255
 23764  019936  1607               	andwf	(btemp+6)^0,f,c
 23765  019938  0E00               	movlw	0
 23766  01993A  1608               	andwf	(btemp+7)^0,f,c
 23767                           
 23768                           ;stkvar	_e @ sp[(-6)+4]
 23769  01993C  0EFE               	movlw	-2
 23770  01993E  0060  F01F  FFE3   	movff	btemp+6,plusw1
 23771  019944  0EFF               	movlw	-1
 23772  019946  0060  F023  FFE3   	movff	btemp+7,plusw1
 23773                           
 23774                           ;stkvar	_e @ sp[(-6)+4]
 23775  01994C  0EFE               	movlw	-2
 23776  01994E  006F FF8C  F001    	movff	plusw1,btemp
 23777  019954  0EFF               	movlw	-1
 23778  019956  50E3               	movf	plusw1,w,c
 23779  019958  1001               	iorwf	btemp^0,w,c
 23780  01995A  A4D8               	btfss	status,2,c
 23781  01995C  D023               	goto	l8874
 23782                           
 23783                           ;stkvar	_u @ sp[(-6)+0]
 23784  01995E  0EFA               	movlw	-6
 23785  019960  006F FF8C  F009    	movff	plusw1,btemp+8
 23786  019966  0EFB               	movlw	-5
 23787  019968  006F FF8C  F00A    	movff	plusw1,btemp+9
 23788  01996E  0EFC               	movlw	-4
 23789  019970  006F FF8C  F00B    	movff	plusw1,btemp+10
 23790  019976  0EFD               	movlw	-3
 23791  019978  006F FF8C  F00C    	movff	plusw1,btemp+11
 23792  01997E  90D8               	bcf	status,0,c
 23793  019980  3409               	rlcf	(btemp+8)^0,w,c
 23794  019982  6E05               	movwf	(btemp+4)^0,c
 23795  019984  340A               	rlcf	(btemp+9)^0,w,c
 23796  019986  6E06               	movwf	(btemp+5)^0,c
 23797  019988  340B               	rlcf	(btemp+10)^0,w,c
 23798  01998A  6E07               	movwf	(btemp+6)^0,c
 23799  01998C  340C               	rlcf	(btemp+11)^0,w,c
 23800  01998E  6E08               	movwf	(btemp+7)^0,c
 23801  019990  5005               	movf	(btemp+4)^0,w,c
 23802  019992  1006               	iorwf	(btemp+5)^0,w,c
 23803  019994  1007               	iorwf	(btemp+6)^0,w,c
 23804  019996  1008               	iorwf	(btemp+7)^0,w,c
 23805  019998  A4D8               	btfss	status,2,c
 23806  01999A  D002               	goto	l8870
 23807  01999C  0E02               	movlw	2
 23808  01999E  D02E               	goto	L27
 23809  0199A0                     l8870:
 23810  0199A0  0E03               	movlw	3
 23811  0199A2  D02C               	goto	L27
 23812  0199A4                     l8874:
 23813                           
 23814                           ;stkvar	_e @ sp[(-6)+4]
 23815  0199A4  0EFE               	movlw	-2
 23816  0199A6  28E3               	incf	plusw1,w,c
 23817  0199A8  E128               	bnz	l8880
 23818  0199AA  0EFF               	movlw	-1
 23819  0199AC  50E3               	movf	plusw1,w,c
 23820  0199AE  A4D8               	btfss	status,2,c
 23821  0199B0  D024               	goto	l8880
 23822                           
 23823                           ;stkvar	_u @ sp[(-6)+0]
 23824  0199B2  0EFA               	movlw	-6
 23825  0199B4  006F FF8C  F009    	movff	plusw1,btemp+8
 23826  0199BA  0EFB               	movlw	-5
 23827  0199BC  006F FF8C  F00A    	movff	plusw1,btemp+9
 23828  0199C2  0EFC               	movlw	-4
 23829  0199C4  006F FF8C  F00B    	movff	plusw1,btemp+10
 23830  0199CA  0EFD               	movlw	-3
 23831  0199CC  006F FF8C  F00C    	movff	plusw1,btemp+11
 23832  0199D2  0E09               	movlw	9
 23833  0199D4                     u6695:
 23834  0199D4  90D8               	bcf	status,0,c
 23835  0199D6  3609               	rlcf	(btemp+8)^0,f,c
 23836  0199D8  360A               	rlcf	(btemp+9)^0,f,c
 23837  0199DA  360B               	rlcf	(btemp+10)^0,f,c
 23838  0199DC  360C               	rlcf	(btemp+11)^0,f,c
 23839  0199DE  2EE8               	decfsz	wreg,f,c
 23840  0199E0  D7F9               	goto	u6695
 23841  0199E2  5009               	movf	(btemp+8)^0,w,c
 23842  0199E4  100A               	iorwf	(btemp+9)^0,w,c
 23843  0199E6  100B               	iorwf	(btemp+10)^0,w,c
 23844  0199E8  100C               	iorwf	(btemp+11)^0,w,c
 23845  0199EA  A4D8               	btfss	status,2,c
 23846  0199EC  D002               	goto	u6700
 23847  0199EE  0E01               	movlw	1
 23848  0199F0  D001               	goto	u6710
 23849  0199F2                     u6700:
 23850  0199F2  0E00               	movlw	0
 23851  0199F4                     u6710:
 23852  0199F4  6E01               	movwf	btemp^0,c
 23853  0199F6  6A02               	clrf	(btemp+1)^0,c
 23854  0199F8  D004               	goto	l3364
 23855  0199FA                     l8880:
 23856  0199FA  0E04               	movlw	4
 23857  0199FC                     L27:
 23858  0199FC  6E01               	movwf	btemp^0,c
 23859  0199FE  0E00               	movlw	0
 23860  019A00  6E02               	movwf	(btemp+1)^0,c
 23861  019A02                     l3364:
 23862                           
 23863                           ; ___fpclassifyf: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4,
      +                           argsize = 4, vargsize = 0
 23864  019A02  0EF6               	movlw	246
 23865  019A04  26E1               	addwf	fsr1l,f,c
 23866  019A06  0EFF               	movlw	255
 23867  019A08  22E2               	addwfc	fsr1h,f,c
 23868  019A0A  0012               	return		;funcret
 23869  019A0C                     __end_of___fpclassifyf:
 23870                           	opt callstack 0
 23871                           
 23872 ;; *************** function ___fltol *****************
 23873 ;; Defined at:
 23874 ;;		line 43 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fltol.c"
 23875 ;; Parameters:    Size  Location     Type
 23876 ;;  f1              4  [STACK] int 
 23877 ;; Auto vars:     Size  Location     Type
 23878 ;;  exp1            1  [STACK] unsigned char 
 23879 ;;  sign1           1  [STACK] unsigned char 
 23880 ;; Return value:  Size  Location     Type
 23881 ;;                  4  [STACK] long 
 23882 ;; Registers used:
 23883 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 23884 ;; Tracked objects:
 23885 ;;		On entry : 0/0
 23886 ;;		On exit  : 0/0
 23887 ;;		Unchanged: 0/0
 23888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23889 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23890 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23891 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23892 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23893 ;;Total ram usage:        0 bytes
 23894 ;; Hardware stack levels used:    1
 23895 ;; Hardware stack levels required when called:   15
 23896 ;; This function calls:
 23897 ;;		Nothing
 23898 ;; This function is called by:
 23899 ;;		_main
 23900 ;;		_convert_dac_raw
 23901 ;;		_calc_bsoc
 23902 ;;		_init_bsoc
 23903 ;;		_efgtoa
 23904 ;; This function uses a reentrant model
 23905 ;;
 23906                           
 23907                           	psect	text84
 23908  019E84                     __ptext84:
 23909                           	opt callstack 0
 23910  019E84                     ___fltol:
 23911                           	opt callstack 0
 23912                           
 23913                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23914  019E84  52E6               	movf	postinc1,f,c
 23915  019E86  52E6               	movf	postinc1,f,c
 23916                           
 23917                           ;stkvar	_f1 @ sp[(-2)+-4]
 23918                           
 23919                           ;incstack = 0
 23920 ;; hardware stack exceeded
 23921  019E88  0EFA               	movlw	-6
 23922  019E8A  006F FF8C  F009    	movff	plusw1,btemp+8
 23923  019E90  0EFB               	movlw	-5
 23924  019E92  006F FF8C  F00A    	movff	plusw1,btemp+9
 23925  019E98  0EFC               	movlw	-4
 23926  019E9A  006F FF8C  F00B    	movff	plusw1,btemp+10
 23927  019EA0  0EFD               	movlw	-3
 23928  019EA2  006F FF8C  F00C    	movff	plusw1,btemp+11
 23929  019EA8  0E18               	movlw	24
 23930  019EAA  D005               	goto	u7860
 23931  019EAC                     u7865:
 23932  019EAC  90D8               	bcf	status,0,c
 23933  019EAE  320C               	rrcf	(btemp+11)^0,f,c
 23934  019EB0  320B               	rrcf	(btemp+10)^0,f,c
 23935  019EB2  320A               	rrcf	(btemp+9)^0,f,c
 23936  019EB4  3209               	rrcf	(btemp+8)^0,f,c
 23937  019EB6                     u7860:
 23938  019EB6  2EE8               	decfsz	wreg,f,c
 23939  019EB8  D7F9               	goto	u7865
 23940                           
 23941                           ;stkvar	_exp1 @ sp[(-2)+0]
 23942  019EBA  0EFE               	movlw	-2
 23943  019EBC  0060  F027  FFE3   	movff	btemp+8,plusw1
 23944  019EC2  0EFE               	movlw	-2
 23945  019EC4  50E3               	movf	plusw1,w,c
 23946  019EC6  A4D8               	btfss	status,2,c
 23947  019EC8  D006               	goto	l9500
 23948  019ECA                     u7870:
 23949  019ECA  0E00               	movlw	0
 23950  019ECC  6E01               	movwf	btemp^0,c
 23951  019ECE  6A02               	clrf	(btemp+1)^0,c
 23952  019ED0  6A03               	clrf	(btemp+2)^0,c
 23953  019ED2  6A04               	clrf	(btemp+3)^0,c
 23954  019ED4  D08B               	goto	l2980
 23955  019ED6                     l9500:
 23956                           
 23957                           ;stkvar	_f1 @ sp[(-2)+-4]
 23958  019ED6  0EFA               	movlw	-6
 23959  019ED8  006F FF8C  F009    	movff	plusw1,btemp+8
 23960  019EDE  0EFB               	movlw	-5
 23961  019EE0  006F FF8C  F00A    	movff	plusw1,btemp+9
 23962  019EE6  0EFC               	movlw	-4
 23963  019EE8  006F FF8C  F00B    	movff	plusw1,btemp+10
 23964  019EEE  0EFD               	movlw	-3
 23965  019EF0  006F FF8C  F00C    	movff	plusw1,btemp+11
 23966  019EF6  0E20               	movlw	32
 23967  019EF8  D005               	goto	u7880
 23968  019EFA                     u7885:
 23969  019EFA  90D8               	bcf	status,0,c
 23970  019EFC  320C               	rrcf	(btemp+11)^0,f,c
 23971  019EFE  320B               	rrcf	(btemp+10)^0,f,c
 23972  019F00  320A               	rrcf	(btemp+9)^0,f,c
 23973  019F02  3209               	rrcf	(btemp+8)^0,f,c
 23974  019F04                     u7880:
 23975  019F04  2EE8               	decfsz	wreg,f,c
 23976  019F06  D7F9               	goto	u7885
 23977                           
 23978                           ;stkvar	_sign1 @ sp[(-2)+1]
 23979  019F08  0EFF               	movlw	-1
 23980  019F0A  0060  F027  FFE3   	movff	btemp+8,plusw1
 23981                           
 23982                           ;stkvar	_f1 @ sp[(-2)+-4]
 23983  019F10  0EFC               	movlw	-4
 23984  019F12  8EE3               	bsf	plusw1,7,c
 23985                           
 23986                           ;stkvar	_f1 @ sp[(-2)+-4]
 23987  019F14  50E1               	movf	fsr1l,w,c
 23988  019F16  0FFA               	addlw	-6
 23989  019F18  6ED9               	movwf	fsr2l,c
 23990  019F1A  50E2               	movf	fsr1h,w,c
 23991  019F1C  6EDA               	movwf	fsr2h,c
 23992  019F1E  0EFF               	movlw	255
 23993  019F20  22DA               	addwfc	fsr2h,f,c
 23994  019F22  0EFF               	movlw	255
 23995  019F24  16DE               	andwf	postinc2,f,c
 23996  019F26  0EFF               	movlw	255
 23997  019F28  16DE               	andwf	postinc2,f,c
 23998  019F2A  0EFF               	movlw	255
 23999  019F2C  16DE               	andwf	postinc2,f,c
 24000  019F2E  0E00               	movlw	0
 24001  019F30  16DE               	andwf	postinc2,f,c
 24002                           
 24003                           ;stkvar	_exp1 @ sp[(-2)+0]
 24004  019F32  0EFE               	movlw	-2
 24005  019F34  006F FF8C  F001    	movff	plusw1,btemp
 24006  019F3A  0E96               	movlw	150
 24007  019F3C  5E01               	subwf	btemp^0,f,c
 24008  019F3E  0EFE               	movlw	-2
 24009  019F40  0060  F007  FFE3   	movff	btemp,plusw1
 24010                           
 24011                           ;stkvar	_exp1 @ sp[(-2)+0]
 24012  019F46  0EFE               	movlw	-2
 24013  019F48  AEE3               	btfss	plusw1,7,c
 24014  019F4A  D014               	goto	l9518
 24015                           
 24016                           ;stkvar	_exp1 @ sp[(-2)+0]
 24017  019F4C  0EFE               	movlw	-2
 24018  019F4E  50E3               	movf	plusw1,w,c
 24019  019F50  0A80               	xorlw	128
 24020  019F52  0F97               	addlw	151
 24021  019F54  A0D8               	btfss	status,0,c
 24022  019F56  D7B9               	goto	u7870
 24023  019F58                     l9516:
 24024                           
 24025                           ;stkvar	_f1 @ sp[(-2)+-4]
 24026  019F58  90D8               	bcf	status,0,c
 24027  019F5A  0EFD               	movlw	-3
 24028  019F5C  32E3               	rrcf	plusw1,f,c
 24029  019F5E  0EFC               	movlw	-4
 24030  019F60  32E3               	rrcf	plusw1,f,c
 24031  019F62  0EFB               	movlw	-5
 24032  019F64  32E3               	rrcf	plusw1,f,c
 24033  019F66  0EFA               	movlw	-6
 24034  019F68  32E3               	rrcf	plusw1,f,c
 24035                           
 24036                           ;stkvar	_exp1 @ sp[(-2)+0]
 24037  019F6A  0EFE               	movlw	-2
 24038  019F6C  2AE3               	incf	plusw1,f,c
 24039  019F6E  B4D8               	btfsc	status,2,c
 24040  019F70  D018               	goto	u7930
 24041  019F72  D7F2               	goto	l9516
 24042  019F74                     l9518:
 24043                           
 24044                           ;stkvar	_exp1 @ sp[(-2)+0]
 24045  019F74  0EFE               	movlw	-2
 24046  019F76  006F FF8C  F001    	movff	plusw1,btemp
 24047  019F7C  0E1F               	movlw	31
 24048  019F7E  6401               	cpfsgt	btemp^0,c
 24049  019F80  D00C               	goto	l9526
 24050  019F82  D7A3               	goto	u7870
 24051  019F84                     l9524:
 24052                           
 24053                           ;stkvar	_f1 @ sp[(-2)+-4]
 24054  019F84  90D8               	bcf	status,0,c
 24055  019F86  0EFA               	movlw	-6
 24056  019F88  36E3               	rlcf	plusw1,f,c
 24057  019F8A  0EFB               	movlw	-5
 24058  019F8C  36E3               	rlcf	plusw1,f,c
 24059  019F8E  0EFC               	movlw	-4
 24060  019F90  36E3               	rlcf	plusw1,f,c
 24061  019F92  0EFD               	movlw	-3
 24062  019F94  36E3               	rlcf	plusw1,f,c
 24063                           
 24064                           ;stkvar	_exp1 @ sp[(-2)+0]
 24065  019F96  0EFE               	movlw	-2
 24066  019F98  06E3               	decf	plusw1,f,c
 24067  019F9A                     l9526:
 24068                           
 24069                           ;stkvar	_exp1 @ sp[(-2)+0]
 24070  019F9A  0EFE               	movlw	-2
 24071  019F9C  50E3               	movf	plusw1,w,c
 24072  019F9E  A4D8               	btfss	status,2,c
 24073  019FA0  D7F1               	goto	l9524
 24074  019FA2                     u7930:
 24075                           
 24076                           ;stkvar	_sign1 @ sp[(-2)+1]
 24077  019FA2  0EFF               	movlw	-1
 24078  019FA4  50E3               	movf	plusw1,w,c
 24079  019FA6  B4D8               	btfsc	status,2,c
 24080  019FA8  D011               	goto	u7950
 24081                           
 24082                           ;stkvar	_f1 @ sp[(-2)+-4]
 24083                           ;stkvar	_f1 @ sp[(-2)+-4]
 24084  019FAA  0EFA               	movlw	-6
 24085  019FAC  6CE3               	negf	plusw1,c
 24086  019FAE  0EFB               	movlw	-5
 24087  019FB0  1EE3               	comf	plusw1,f,c
 24088  019FB2  0EFC               	movlw	-4
 24089  019FB4  1EE3               	comf	plusw1,f,c
 24090  019FB6  0EFD               	movlw	-3
 24091  019FB8  1EE3               	comf	plusw1,f,c
 24092  019FBA  E308               	bnc	u7950
 24093  019FBC  0EFB               	movlw	-5
 24094  019FBE  2AE3               	incf	plusw1,f,c
 24095  019FC0  E305               	bnc	u7950
 24096  019FC2  0EFC               	movlw	-4
 24097  019FC4  2AE3               	incf	plusw1,f,c
 24098  019FC6  E302               	bnc	u7950
 24099  019FC8  0EFD               	movlw	-3
 24100  019FCA  2AE3               	incf	plusw1,f,c
 24101  019FCC                     u7950:
 24102                           
 24103                           ;stkvar	_f1 @ sp[(-2)+-4]
 24104  019FCC  0EFA               	movlw	-6
 24105  019FCE  006F FF8C  F001    	movff	plusw1,btemp
 24106  019FD4  0EFB               	movlw	-5
 24107  019FD6  006F FF8C  F002    	movff	plusw1,btemp+1
 24108  019FDC  0EFC               	movlw	-4
 24109  019FDE  006F FF8C  F003    	movff	plusw1,btemp+2
 24110  019FE4  0EFD               	movlw	-3
 24111  019FE6  006F FF8C  F004    	movff	plusw1,btemp+3
 24112  019FEC                     l2980:
 24113                           
 24114                           ; ___fltol: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 24115  019FEC  0EFA               	movlw	250
 24116  019FEE  26E1               	addwf	fsr1l,f,c
 24117  019FF0  0EFF               	movlw	255
 24118  019FF2  22E2               	addwfc	fsr1h,f,c
 24119  019FF4  0012               	return		;funcret
 24120  019FF6                     __end_of___fltol:
 24121                           	opt callstack 0
 24122                           
 24123 ;; *************** function ___flneg *****************
 24124 ;; Defined at:
 24125 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flneg.c"
 24126 ;; Parameters:    Size  Location     Type
 24127 ;;  f1              4  [STACK] long 
 24128 ;; Auto vars:     Size  Location     Type
 24129 ;;		None
 24130 ;; Return value:  Size  Location     Type
 24131 ;;                  4  [STACK] long 
 24132 ;; Registers used:
 24133 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 24134 ;; Tracked objects:
 24135 ;;		On entry : 0/0
 24136 ;;		On exit  : 0/0
 24137 ;;		Unchanged: 0/0
 24138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24139 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24140 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24141 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24142 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24143 ;;Total ram usage:        0 bytes
 24144 ;; Hardware stack levels used:    1
 24145 ;; Hardware stack levels required when called:   15
 24146 ;; This function calls:
 24147 ;;		Nothing
 24148 ;; This function is called by:
 24149 ;;		_calc_bsoc
 24150 ;;		_efgtoa
 24151 ;; This function uses a reentrant model
 24152 ;;
 24153                           
 24154                           	psect	text85
 24155  01CD74                     __ptext85:
 24156                           	opt callstack 0
 24157  01CD74                     ___flneg:
 24158                           	opt callstack 0
 24159                           
 24160                           ;stkvar	_f1 @ sp[(0)+-4]
 24161                           
 24162                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24163                           ;incstack = 0
 24164 ;; hardware stack exceeded
 24165  01CD74  0EFC               	movlw	-4
 24166  01CD76  50E3               	movf	plusw1,w,c
 24167  01CD78  E10A               	bnz	u7850
 24168  01CD7A  0EFD               	movlw	-3
 24169  01CD7C  50E3               	movf	plusw1,w,c
 24170  01CD7E  E107               	bnz	u7850
 24171  01CD80  0EFE               	movlw	-2
 24172  01CD82  50E3               	movf	plusw1,w,c
 24173  01CD84  E104               	bnz	u7850
 24174  01CD86  0EFF               	movlw	-1
 24175  01CD88  50E3               	movf	plusw1,w,c
 24176  01CD8A  B4D8               	btfsc	status,2,c
 24177  01CD8C  D002               	goto	l9490
 24178  01CD8E                     u7850:
 24179                           
 24180                           ;stkvar	_f1 @ sp[(0)+-4]
 24181  01CD8E  0EFF               	movlw	-1
 24182  01CD90  7EE3               	btg	plusw1,7,c
 24183  01CD92                     l9490:
 24184                           
 24185                           ;stkvar	_f1 @ sp[(0)+-4]
 24186  01CD92  0EFC               	movlw	-4
 24187  01CD94  006F FF8C  F001    	movff	plusw1,btemp
 24188  01CD9A  0EFD               	movlw	-3
 24189  01CD9C  006F FF8C  F002    	movff	plusw1,btemp+1
 24190  01CDA2  0EFE               	movlw	-2
 24191  01CDA4  006F FF8C  F003    	movff	plusw1,btemp+2
 24192  01CDAA  0EFF               	movlw	-1
 24193  01CDAC  006F FF8C  F004    	movff	plusw1,btemp+3
 24194                           
 24195                           ; ___flneg: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 24196  01CDB2  52E5               	movf	postdec1,f,c
 24197  01CDB4  52E5               	movf	postdec1,f,c
 24198  01CDB6  52E5               	movf	postdec1,f,c
 24199  01CDB8  52E5               	movf	postdec1,f,c
 24200  01CDBA  0012               	return		;funcret
 24201  01CDBC                     __end_of___flneg:
 24202                           	opt callstack 0
 24203                           
 24204 ;; *************** function ___fleq *****************
 24205 ;; Defined at:
 24206 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fleq.c"
 24207 ;; Parameters:    Size  Location     Type
 24208 ;;  ff1             4  [STACK] long 
 24209 ;;  ff2             4  [STACK] long 
 24210 ;; Auto vars:     Size  Location     Type
 24211 ;;		None
 24212 ;; Return value:  Size  Location     Type
 24213 ;;		None               void
 24214 ;; Registers used:
 24215 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 24216 ;; Tracked objects:
 24217 ;;		On entry : 0/0
 24218 ;;		On exit  : 0/0
 24219 ;;		Unchanged: 0/0
 24220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24221 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24222 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24223 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24224 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24225 ;;Total ram usage:        0 bytes
 24226 ;; Hardware stack levels used:    1
 24227 ;; Hardware stack levels required when called:   15
 24228 ;; This function calls:
 24229 ;;		Nothing
 24230 ;; This function is called by:
 24231 ;;		_efgtoa
 24232 ;; This function uses a reentrant model
 24233 ;;
 24234                           
 24235                           	psect	text86
 24236  01B6EE                     __ptext86:
 24237                           	opt callstack 0
 24238  01B6EE                     ___fleq:
 24239                           	opt callstack 0
 24240                           
 24241                           ;stkvar	_ff1 @ sp[(0)+-4]
 24242                           
 24243                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24244                           ;incstack = 0
 24245 ;; hardware stack exceeded
 24246  01B6EE  50E1               	movf	fsr1l,w,c
 24247  01B6F0  0FFC               	addlw	-4
 24248  01B6F2  6ED9               	movwf	fsr2l,c
 24249  01B6F4  50E2               	movf	fsr1h,w,c
 24250  01B6F6  6EDA               	movwf	fsr2h,c
 24251  01B6F8  0EFF               	movlw	255
 24252  01B6FA  22DA               	addwfc	fsr2h,f,c
 24253  01B6FC  0E00               	movlw	0
 24254  01B6FE  14DE               	andwf	postinc2,w,c
 24255  01B700  6E09               	movwf	(btemp+8)^0,c
 24256  01B702  0E00               	movlw	0
 24257  01B704  14DE               	andwf	postinc2,w,c
 24258  01B706  6E0A               	movwf	(btemp+9)^0,c
 24259  01B708  0E80               	movlw	128
 24260  01B70A  14DE               	andwf	postinc2,w,c
 24261  01B70C  6E0B               	movwf	(btemp+10)^0,c
 24262  01B70E  0E7F               	movlw	127
 24263  01B710  14DE               	andwf	postinc2,w,c
 24264  01B712  6E0C               	movwf	(btemp+11)^0,c
 24265  01B714  5009               	movf	(btemp+8)^0,w,c
 24266  01B716  100A               	iorwf	(btemp+9)^0,w,c
 24267  01B718  100B               	iorwf	(btemp+10)^0,w,c
 24268  01B71A  100C               	iorwf	(btemp+11)^0,w,c
 24269  01B71C  A4D8               	btfss	status,2,c
 24270  01B71E  D008               	goto	l9448
 24271                           
 24272                           ;stkvar	_ff1 @ sp[(0)+-4]
 24273  01B720  0EFC               	movlw	-4
 24274  01B722  6AE3               	clrf	plusw1,c
 24275  01B724  0EFD               	movlw	-3
 24276  01B726  6AE3               	clrf	plusw1,c
 24277  01B728  0EFE               	movlw	-2
 24278  01B72A  6AE3               	clrf	plusw1,c
 24279  01B72C  0EFF               	movlw	-1
 24280  01B72E  6AE3               	clrf	plusw1,c
 24281  01B730                     l9448:
 24282                           
 24283                           ;stkvar	_ff2 @ sp[(0)+-8]
 24284  01B730  50E1               	movf	fsr1l,w,c
 24285  01B732  0FF8               	addlw	-8
 24286  01B734  6ED9               	movwf	fsr2l,c
 24287  01B736  50E2               	movf	fsr1h,w,c
 24288  01B738  6EDA               	movwf	fsr2h,c
 24289  01B73A  0EFF               	movlw	255
 24290  01B73C  22DA               	addwfc	fsr2h,f,c
 24291  01B73E  0E00               	movlw	0
 24292  01B740  14DE               	andwf	postinc2,w,c
 24293  01B742  6E09               	movwf	(btemp+8)^0,c
 24294  01B744  0E00               	movlw	0
 24295  01B746  14DE               	andwf	postinc2,w,c
 24296  01B748  6E0A               	movwf	(btemp+9)^0,c
 24297  01B74A  0E80               	movlw	128
 24298  01B74C  14DE               	andwf	postinc2,w,c
 24299  01B74E  6E0B               	movwf	(btemp+10)^0,c
 24300  01B750  0E7F               	movlw	127
 24301  01B752  14DE               	andwf	postinc2,w,c
 24302  01B754  6E0C               	movwf	(btemp+11)^0,c
 24303  01B756  5009               	movf	(btemp+8)^0,w,c
 24304  01B758  100A               	iorwf	(btemp+9)^0,w,c
 24305  01B75A  100B               	iorwf	(btemp+10)^0,w,c
 24306  01B75C  100C               	iorwf	(btemp+11)^0,w,c
 24307  01B75E  A4D8               	btfss	status,2,c
 24308  01B760  D008               	goto	l9452
 24309                           
 24310                           ;stkvar	_ff2 @ sp[(0)+-8]
 24311  01B762  0EF8               	movlw	-8
 24312  01B764  6AE3               	clrf	plusw1,c
 24313  01B766  0EF9               	movlw	-7
 24314  01B768  6AE3               	clrf	plusw1,c
 24315  01B76A  0EFA               	movlw	-6
 24316  01B76C  6AE3               	clrf	plusw1,c
 24317  01B76E  0EFB               	movlw	-5
 24318  01B770  6AE3               	clrf	plusw1,c
 24319  01B772                     l9452:
 24320                           
 24321                           ;stkvar	_ff2 @ sp[(0)+-8]
 24322                           ;stkvar	_ff1 @ sp[(0)+-4]
 24323  01B772  50E1               	movf	fsr1l,w,c
 24324  01B774  0FFC               	addlw	-4
 24325  01B776  6ED9               	movwf	fsr2l,c
 24326  01B778  50E2               	movf	fsr1h,w,c
 24327  01B77A  6EDA               	movwf	fsr2h,c
 24328  01B77C  0EFF               	movlw	255
 24329  01B77E  22DA               	addwfc	fsr2h,f,c
 24330  01B780  0EF8               	movlw	-8
 24331  01B782  50E3               	movf	plusw1,w,c
 24332  01B784  18DE               	xorwf	postinc2,w,c
 24333  01B786  E10D               	bnz	u7790
 24334  01B788  0EF9               	movlw	-7
 24335  01B78A  50E3               	movf	plusw1,w,c
 24336  01B78C  18DE               	xorwf	postinc2,w,c
 24337  01B78E  E109               	bnz	u7790
 24338  01B790  0EFA               	movlw	-6
 24339  01B792  50E3               	movf	plusw1,w,c
 24340  01B794  18DE               	xorwf	postinc2,w,c
 24341  01B796  E105               	bnz	u7790
 24342  01B798  0EFB               	movlw	-5
 24343  01B79A  50E3               	movf	plusw1,w,c
 24344  01B79C  18DE               	xorwf	postinc2,w,c
 24345  01B79E  B4D8               	btfsc	status,2,c
 24346  01B7A0  D002               	goto	l9456
 24347  01B7A2                     u7790:
 24348  01B7A2  9001               	bcf	btemp& (0+255),0,c
 24349  01B7A4  D001               	goto	l2942
 24350  01B7A6                     l9456:
 24351  01B7A6  8001               	bsf	btemp& (0+255),0,c
 24352  01B7A8                     l2942:
 24353                           
 24354                           ; ___fleq: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 24355  01B7A8  0EF8               	movlw	248
 24356  01B7AA  26E1               	addwf	fsr1l,f,c
 24357  01B7AC  0EFF               	movlw	255
 24358  01B7AE  22E2               	addwfc	fsr1h,f,c
 24359  01B7B0  0012               	return		;funcret
 24360  01B7B2                     __end_of___fleq:
 24361                           	opt callstack 0
 24362                           
 24363 ;; *************** function ___awmod *****************
 24364 ;; Defined at:
 24365 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awmod.c"
 24366 ;; Parameters:    Size  Location     Type
 24367 ;;  dividend        2  [STACK] int 
 24368 ;;  divisor         2  [STACK] int 
 24369 ;; Auto vars:     Size  Location     Type
 24370 ;;  sign            1  [STACK] unsigned char 
 24371 ;;  counter         1  [STACK] unsigned char 
 24372 ;; Return value:  Size  Location     Type
 24373 ;;                  2  [STACK] int 
 24374 ;; Registers used:
 24375 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 24376 ;; Tracked objects:
 24377 ;;		On entry : 0/0
 24378 ;;		On exit  : 0/0
 24379 ;;		Unchanged: 0/0
 24380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24381 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24382 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24383 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24384 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24385 ;;Total ram usage:        0 bytes
 24386 ;; Hardware stack levels used:    1
 24387 ;; Hardware stack levels required when called:   15
 24388 ;; This function calls:
 24389 ;;		Nothing
 24390 ;; This function is called by:
 24391 ;;		_efgtoa
 24392 ;; This function uses a reentrant model
 24393 ;;
 24394                           
 24395                           	psect	text87
 24396  01AC6E                     __ptext87:
 24397                           	opt callstack 0
 24398  01AC6E                     ___awmod:
 24399                           	opt callstack 0
 24400                           
 24401                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24402  01AC6E  52E6               	movf	postinc1,f,c
 24403  01AC70  52E6               	movf	postinc1,f,c
 24404                           
 24405                           ;stkvar	_sign @ sp[(-2)+0]
 24406                           
 24407                           ;incstack = 0
 24408 ;; hardware stack exceeded
 24409  01AC72  0EFE               	movlw	-2
 24410  01AC74  6AE3               	clrf	plusw1,c
 24411                           
 24412                           ;stkvar	_dividend @ sp[(-2)+-2]
 24413  01AC76  0EFD               	movlw	-3
 24414  01AC78  AEE3               	btfss	plusw1,7,c
 24415  01AC7A  D009               	goto	l9414
 24416                           
 24417                           ;stkvar	_dividend @ sp[(-2)+-2]
 24418                           ;stkvar	_dividend @ sp[(-2)+-2]
 24419  01AC7C  0EFC               	movlw	-4
 24420  01AC7E  6CE3               	negf	plusw1,c
 24421  01AC80  0EFD               	movlw	-3
 24422  01AC82  1EE3               	comf	plusw1,f,c
 24423  01AC84  B0D8               	btfsc	status,0,c
 24424  01AC86  2AE3               	incf	plusw1,f,c
 24425                           
 24426                           ;stkvar	_sign @ sp[(-2)+0]
 24427  01AC88  0EFE               	movlw	-2
 24428  01AC8A  6AE3               	clrf	plusw1,c
 24429  01AC8C  2AE3               	incf	plusw1,f,c
 24430  01AC8E                     l9414:
 24431                           
 24432                           ;stkvar	_divisor @ sp[(-2)+-4]
 24433  01AC8E  0EFB               	movlw	-5
 24434  01AC90  AEE3               	btfss	plusw1,7,c
 24435  01AC92  D006               	goto	l9418
 24436                           
 24437                           ;stkvar	_divisor @ sp[(-2)+-4]
 24438                           ;stkvar	_divisor @ sp[(-2)+-4]
 24439  01AC94  0EFA               	movlw	-6
 24440  01AC96  6CE3               	negf	plusw1,c
 24441  01AC98  0EFB               	movlw	-5
 24442  01AC9A  1EE3               	comf	plusw1,f,c
 24443  01AC9C  B0D8               	btfsc	status,0,c
 24444  01AC9E  2AE3               	incf	plusw1,f,c
 24445  01ACA0                     l9418:
 24446                           
 24447                           ;stkvar	_divisor @ sp[(-2)+-4]
 24448  01ACA0  0EFA               	movlw	-6
 24449  01ACA2  006F FF8C  F001    	movff	plusw1,btemp
 24450  01ACA8  0EFB               	movlw	-5
 24451  01ACAA  50E3               	movf	plusw1,w,c
 24452  01ACAC  1001               	iorwf	btemp^0,w,c
 24453  01ACAE  B4D8               	btfsc	status,2,c
 24454  01ACB0  D053               	goto	u7750
 24455                           
 24456                           ;stkvar	_counter @ sp[(-2)+1]
 24457  01ACB2  0EFF               	movlw	-1
 24458  01ACB4  6AE3               	clrf	plusw1,c
 24459  01ACB6  D012               	goto	L28
 24460  01ACB8                     l9422:
 24461                           
 24462                           ;stkvar	_divisor @ sp[(-2)+-4]
 24463  01ACB8  0EFA               	movlw	-6
 24464  01ACBA  50E3               	movf	plusw1,w,c
 24465  01ACBC  90D8               	bcf	status,0,c
 24466  01ACBE  34E8               	rlcf	wreg,w,c
 24467  01ACC0  6E01               	movwf	btemp^0,c
 24468  01ACC2  0EFA               	movlw	-6
 24469  01ACC4  0060  F007  FFE3   	movff	btemp,plusw1
 24470  01ACCA  0EFB               	movlw	-5
 24471  01ACCC  50E3               	movf	plusw1,w,c
 24472  01ACCE  34E8               	rlcf	wreg,w,c
 24473  01ACD0  6E01               	movwf	btemp^0,c
 24474  01ACD2  0EFB               	movlw	-5
 24475  01ACD4  0060  F007  FFE3   	movff	btemp,plusw1
 24476                           
 24477                           ;stkvar	_counter @ sp[(-2)+1]
 24478  01ACDA  0EFF               	movlw	-1
 24479  01ACDC                     L28:
 24480  01ACDC  2AE3               	incf	plusw1,f,c
 24481                           
 24482                           ;stkvar	_divisor @ sp[(-2)+-4]
 24483  01ACDE  0EFB               	movlw	-5
 24484  01ACE0  AEE3               	btfss	plusw1,7,c
 24485  01ACE2  D7EA               	goto	l9422
 24486  01ACE4                     u7730:
 24487                           
 24488                           ;stkvar	_divisor @ sp[(-2)+-4]
 24489  01ACE4  0EFA               	movlw	-6
 24490  01ACE6  006F FF8C  F00B    	movff	plusw1,btemp+10
 24491  01ACEC  0EFB               	movlw	-5
 24492  01ACEE  006F FF8C  F00C    	movff	plusw1,btemp+11
 24493                           
 24494                           ;stkvar	_dividend @ sp[(-2)+-2]
 24495  01ACF4  0EFC               	movlw	-4
 24496  01ACF6  006F FF8C  F009    	movff	plusw1,btemp+8
 24497  01ACFC  0EFD               	movlw	-3
 24498  01ACFE  006F FF8C  F00A    	movff	plusw1,btemp+9
 24499  01AD04  500B               	movf	(btemp+10)^0,w,c
 24500  01AD06  5C09               	subwf	(btemp+8)^0,w,c
 24501  01AD08  500C               	movf	(btemp+11)^0,w,c
 24502  01AD0A  580A               	subwfb	(btemp+9)^0,w,c
 24503  01AD0C  A0D8               	btfss	status,0,c
 24504  01AD0E  D014               	goto	l9432
 24505                           
 24506                           ;stkvar	_divisor @ sp[(-2)+-4]
 24507                           ;stkvar	_dividend @ sp[(-2)+-2]
 24508  01AD10  0EFC               	movlw	-4
 24509  01AD12  50E3               	movf	plusw1,w,c
 24510  01AD14  6E01               	movwf	btemp^0,c
 24511  01AD16  0EFA               	movlw	-6
 24512  01AD18  50E3               	movf	plusw1,w,c
 24513  01AD1A  5E01               	subwf	btemp^0,f,c
 24514  01AD1C  0EFC               	movlw	-4
 24515  01AD1E  0060  F007  FFE3   	movff	btemp,plusw1
 24516  01AD24  0EFD               	movlw	-3
 24517  01AD26  50E3               	movf	plusw1,w,c
 24518  01AD28  6E01               	movwf	btemp^0,c
 24519  01AD2A  0EFB               	movlw	-5
 24520  01AD2C  50E3               	movf	plusw1,w,c
 24521  01AD2E  5A01               	subwfb	btemp^0,f,c
 24522  01AD30  0EFD               	movlw	-3
 24523  01AD32  0060  F007  FFE3   	movff	btemp,plusw1
 24524  01AD38                     l9432:
 24525                           
 24526                           ;stkvar	_divisor @ sp[(-2)+-4]
 24527  01AD38  90D8               	bcf	status,0,c
 24528  01AD3A  0EFB               	movlw	-5
 24529  01AD3C  32E3               	rrcf	plusw1,f,c
 24530  01AD3E  0EFA               	movlw	-6
 24531  01AD40  32E3               	rrcf	plusw1,f,c
 24532                           
 24533                           ;stkvar	_counter @ sp[(-2)+1]
 24534  01AD42  0EFF               	movlw	-1
 24535  01AD44  50E3               	movf	plusw1,w,c
 24536  01AD46  6E01               	movwf	btemp^0,c
 24537  01AD48  0E01               	movlw	1
 24538  01AD4A  5E01               	subwf	btemp^0,f,c
 24539  01AD4C  0EFF               	movlw	-1
 24540  01AD4E  0060  F007  FFE3   	movff	btemp,plusw1
 24541  01AD54  A4D8               	btfss	status,2,c
 24542  01AD56  D7C6               	goto	u7730
 24543  01AD58                     u7750:
 24544                           
 24545                           ;stkvar	_sign @ sp[(-2)+0]
 24546  01AD58  0EFE               	movlw	-2
 24547  01AD5A  50E3               	movf	plusw1,w,c
 24548  01AD5C  B4D8               	btfsc	status,2,c
 24549  01AD5E  D006               	goto	l9440
 24550                           
 24551                           ;stkvar	_dividend @ sp[(-2)+-2]
 24552                           ;stkvar	_dividend @ sp[(-2)+-2]
 24553  01AD60  0EFC               	movlw	-4
 24554  01AD62  6CE3               	negf	plusw1,c
 24555  01AD64  0EFD               	movlw	-3
 24556  01AD66  1EE3               	comf	plusw1,f,c
 24557  01AD68  B0D8               	btfsc	status,0,c
 24558  01AD6A  2AE3               	incf	plusw1,f,c
 24559  01AD6C                     l9440:
 24560                           
 24561                           ;stkvar	_dividend @ sp[(-2)+-2]
 24562  01AD6C  0EFC               	movlw	-4
 24563  01AD6E  006F FF8C  F001    	movff	plusw1,btemp
 24564  01AD74  0EFD               	movlw	-3
 24565  01AD76  006F FF8C  F002    	movff	plusw1,btemp+1
 24566                           
 24567                           ; ___awmod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 24568  01AD7C  0EFA               	movlw	250
 24569  01AD7E  26E1               	addwf	fsr1l,f,c
 24570  01AD80  0EFF               	movlw	255
 24571  01AD82  22E2               	addwfc	fsr1h,f,c
 24572  01AD84  0012               	return		;funcret
 24573  01AD86                     __end_of___awmod:
 24574                           	opt callstack 0
 24575                           
 24576 ;; *************** function ___awdiv *****************
 24577 ;; Defined at:
 24578 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awdiv.c"
 24579 ;; Parameters:    Size  Location     Type
 24580 ;;  dividend        2  [STACK] int 
 24581 ;;  divisor         2  [STACK] int 
 24582 ;; Auto vars:     Size  Location     Type
 24583 ;;  quotient        2  [STACK] int 
 24584 ;;  sign            1  [STACK] unsigned char 
 24585 ;;  counter         1  [STACK] unsigned char 
 24586 ;; Return value:  Size  Location     Type
 24587 ;;                  2  [STACK] int 
 24588 ;; Registers used:
 24589 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 24590 ;; Tracked objects:
 24591 ;;		On entry : 0/0
 24592 ;;		On exit  : 0/0
 24593 ;;		Unchanged: 0/0
 24594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24595 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24596 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24597 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24598 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24599 ;;Total ram usage:        0 bytes
 24600 ;; Hardware stack levels used:    1
 24601 ;; Hardware stack levels required when called:   15
 24602 ;; This function calls:
 24603 ;;		Nothing
 24604 ;; This function is called by:
 24605 ;;		_efgtoa
 24606 ;; This function uses a reentrant model
 24607 ;;
 24608                           
 24609                           	psect	text88
 24610  01A412                     __ptext88:
 24611                           	opt callstack 0
 24612  01A412                     ___awdiv:
 24613                           	opt callstack 0
 24614                           
 24615                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24616  01A412  52E6               	movf	postinc1,f,c
 24617  01A414  52E6               	movf	postinc1,f,c
 24618  01A416  52E6               	movf	postinc1,f,c
 24619  01A418  52E6               	movf	postinc1,f,c
 24620                           
 24621                           ;stkvar	_sign @ sp[(-4)+2]
 24622                           
 24623                           ;incstack = 0
 24624 ;; hardware stack exceeded
 24625  01A41A  0EFE               	movlw	-2
 24626  01A41C  6AE3               	clrf	plusw1,c
 24627                           
 24628                           ;stkvar	_divisor @ sp[(-4)+-4]
 24629  01A41E  0EF9               	movlw	-7
 24630  01A420  AEE3               	btfss	plusw1,7,c
 24631  01A422  D009               	goto	l9368
 24632                           
 24633                           ;stkvar	_divisor @ sp[(-4)+-4]
 24634                           ;stkvar	_divisor @ sp[(-4)+-4]
 24635  01A424  0EF8               	movlw	-8
 24636  01A426  6CE3               	negf	plusw1,c
 24637  01A428  0EF9               	movlw	-7
 24638  01A42A  1EE3               	comf	plusw1,f,c
 24639  01A42C  B0D8               	btfsc	status,0,c
 24640  01A42E  2AE3               	incf	plusw1,f,c
 24641                           
 24642                           ;stkvar	_sign @ sp[(-4)+2]
 24643  01A430  0EFE               	movlw	-2
 24644  01A432  6AE3               	clrf	plusw1,c
 24645  01A434  2AE3               	incf	plusw1,f,c
 24646  01A436                     l9368:
 24647                           
 24648                           ;stkvar	_dividend @ sp[(-4)+-2]
 24649  01A436  0EFB               	movlw	-5
 24650  01A438  AEE3               	btfss	plusw1,7,c
 24651  01A43A  D008               	goto	l9374
 24652                           
 24653                           ;stkvar	_dividend @ sp[(-4)+-2]
 24654                           ;stkvar	_dividend @ sp[(-4)+-2]
 24655  01A43C  0EFA               	movlw	-6
 24656  01A43E  6CE3               	negf	plusw1,c
 24657  01A440  0EFB               	movlw	-5
 24658  01A442  1EE3               	comf	plusw1,f,c
 24659  01A444  B0D8               	btfsc	status,0,c
 24660  01A446  2AE3               	incf	plusw1,f,c
 24661                           
 24662                           ;stkvar	_sign @ sp[(-4)+2]
 24663  01A448  0EFE               	movlw	-2
 24664  01A44A  70E3               	btg	plusw1,0,c
 24665  01A44C                     l9374:
 24666                           
 24667                           ;stkvar	_quotient @ sp[(-4)+0]
 24668  01A44C  0EFC               	movlw	-4
 24669  01A44E  6AE3               	clrf	plusw1,c
 24670  01A450  0EFD               	movlw	-3
 24671  01A452  6AE3               	clrf	plusw1,c
 24672                           
 24673                           ;stkvar	_divisor @ sp[(-4)+-4]
 24674  01A454  0EF8               	movlw	-8
 24675  01A456  006F FF8C  F001    	movff	plusw1,btemp
 24676  01A45C  0EF9               	movlw	-7
 24677  01A45E  50E3               	movf	plusw1,w,c
 24678  01A460  1001               	iorwf	btemp^0,w,c
 24679  01A462  B4D8               	btfsc	status,2,c
 24680  01A464  D066               	goto	u7680
 24681                           
 24682                           ;stkvar	_counter @ sp[(-4)+3]
 24683  01A466  0EFF               	movlw	-1
 24684  01A468  6AE3               	clrf	plusw1,c
 24685  01A46A  D012               	goto	L29
 24686  01A46C                     l9380:
 24687                           
 24688                           ;stkvar	_divisor @ sp[(-4)+-4]
 24689  01A46C  0EF8               	movlw	-8
 24690  01A46E  50E3               	movf	plusw1,w,c
 24691  01A470  90D8               	bcf	status,0,c
 24692  01A472  34E8               	rlcf	wreg,w,c
 24693  01A474  6E01               	movwf	btemp^0,c
 24694  01A476  0EF8               	movlw	-8
 24695  01A478  0060  F007  FFE3   	movff	btemp,plusw1
 24696  01A47E  0EF9               	movlw	-7
 24697  01A480  50E3               	movf	plusw1,w,c
 24698  01A482  34E8               	rlcf	wreg,w,c
 24699  01A484  6E01               	movwf	btemp^0,c
 24700  01A486  0EF9               	movlw	-7
 24701  01A488  0060  F007  FFE3   	movff	btemp,plusw1
 24702                           
 24703                           ;stkvar	_counter @ sp[(-4)+3]
 24704  01A48E  0EFF               	movlw	-1
 24705  01A490                     L29:
 24706  01A490  2AE3               	incf	plusw1,f,c
 24707                           
 24708                           ;stkvar	_divisor @ sp[(-4)+-4]
 24709  01A492  0EF9               	movlw	-7
 24710  01A494  AEE3               	btfss	plusw1,7,c
 24711  01A496  D7EA               	goto	l9380
 24712  01A498                     u7660:
 24713                           
 24714                           ;stkvar	_quotient @ sp[(-4)+0]
 24715  01A498  0EFC               	movlw	-4
 24716  01A49A  50E3               	movf	plusw1,w,c
 24717  01A49C  90D8               	bcf	status,0,c
 24718  01A49E  34E8               	rlcf	wreg,w,c
 24719  01A4A0  6E01               	movwf	btemp^0,c
 24720  01A4A2  0EFC               	movlw	-4
 24721  01A4A4  0060  F007  FFE3   	movff	btemp,plusw1
 24722  01A4AA  0EFD               	movlw	-3
 24723  01A4AC  50E3               	movf	plusw1,w,c
 24724  01A4AE  34E8               	rlcf	wreg,w,c
 24725  01A4B0  6E01               	movwf	btemp^0,c
 24726  01A4B2  0EFD               	movlw	-3
 24727  01A4B4  0060  F007  FFE3   	movff	btemp,plusw1
 24728                           
 24729                           ;stkvar	_divisor @ sp[(-4)+-4]
 24730  01A4BA  0EF8               	movlw	-8
 24731  01A4BC  006F FF8C  F00B    	movff	plusw1,btemp+10
 24732  01A4C2  0EF9               	movlw	-7
 24733  01A4C4  006F FF8C  F00C    	movff	plusw1,btemp+11
 24734                           
 24735                           ;stkvar	_dividend @ sp[(-4)+-2]
 24736  01A4CA  0EFA               	movlw	-6
 24737  01A4CC  006F FF8C  F009    	movff	plusw1,btemp+8
 24738  01A4D2  0EFB               	movlw	-5
 24739  01A4D4  006F FF8C  F00A    	movff	plusw1,btemp+9
 24740  01A4DA  500B               	movf	(btemp+10)^0,w,c
 24741  01A4DC  5C09               	subwf	(btemp+8)^0,w,c
 24742  01A4DE  500C               	movf	(btemp+11)^0,w,c
 24743  01A4E0  580A               	subwfb	(btemp+9)^0,w,c
 24744  01A4E2  A0D8               	btfss	status,0,c
 24745  01A4E4  D016               	goto	l9394
 24746                           
 24747                           ;stkvar	_divisor @ sp[(-4)+-4]
 24748                           ;stkvar	_dividend @ sp[(-4)+-2]
 24749  01A4E6  0EFA               	movlw	-6
 24750  01A4E8  50E3               	movf	plusw1,w,c
 24751  01A4EA  6E01               	movwf	btemp^0,c
 24752  01A4EC  0EF8               	movlw	-8
 24753  01A4EE  50E3               	movf	plusw1,w,c
 24754  01A4F0  5E01               	subwf	btemp^0,f,c
 24755  01A4F2  0EFA               	movlw	-6
 24756  01A4F4  0060  F007  FFE3   	movff	btemp,plusw1
 24757  01A4FA  0EFB               	movlw	-5
 24758  01A4FC  50E3               	movf	plusw1,w,c
 24759  01A4FE  6E01               	movwf	btemp^0,c
 24760  01A500  0EF9               	movlw	-7
 24761  01A502  50E3               	movf	plusw1,w,c
 24762  01A504  5A01               	subwfb	btemp^0,f,c
 24763  01A506  0EFB               	movlw	-5
 24764  01A508  0060  F007  FFE3   	movff	btemp,plusw1
 24765                           
 24766                           ;stkvar	_quotient @ sp[(-4)+0]
 24767  01A50E  0EFC               	movlw	-4
 24768  01A510  80E3               	bsf	plusw1,0,c
 24769  01A512                     l9394:
 24770                           
 24771                           ;stkvar	_divisor @ sp[(-4)+-4]
 24772  01A512  90D8               	bcf	status,0,c
 24773  01A514  0EF9               	movlw	-7
 24774  01A516  32E3               	rrcf	plusw1,f,c
 24775  01A518  0EF8               	movlw	-8
 24776  01A51A  32E3               	rrcf	plusw1,f,c
 24777                           
 24778                           ;stkvar	_counter @ sp[(-4)+3]
 24779  01A51C  0EFF               	movlw	-1
 24780  01A51E  50E3               	movf	plusw1,w,c
 24781  01A520  6E01               	movwf	btemp^0,c
 24782  01A522  0E01               	movlw	1
 24783  01A524  5E01               	subwf	btemp^0,f,c
 24784  01A526  0EFF               	movlw	-1
 24785  01A528  0060  F007  FFE3   	movff	btemp,plusw1
 24786  01A52E  A4D8               	btfss	status,2,c
 24787  01A530  D7B3               	goto	u7660
 24788  01A532                     u7680:
 24789                           
 24790                           ;stkvar	_sign @ sp[(-4)+2]
 24791  01A532  0EFE               	movlw	-2
 24792  01A534  50E3               	movf	plusw1,w,c
 24793  01A536  B4D8               	btfsc	status,2,c
 24794  01A538  D006               	goto	l9402
 24795                           
 24796                           ;stkvar	_quotient @ sp[(-4)+0]
 24797                           ;stkvar	_quotient @ sp[(-4)+0]
 24798  01A53A  0EFC               	movlw	-4
 24799  01A53C  6CE3               	negf	plusw1,c
 24800  01A53E  0EFD               	movlw	-3
 24801  01A540  1EE3               	comf	plusw1,f,c
 24802  01A542  B0D8               	btfsc	status,0,c
 24803  01A544  2AE3               	incf	plusw1,f,c
 24804  01A546                     l9402:
 24805                           
 24806                           ;stkvar	_quotient @ sp[(-4)+0]
 24807  01A546  0EFC               	movlw	-4
 24808  01A548  006F FF8C  F001    	movff	plusw1,btemp
 24809  01A54E  0EFD               	movlw	-3
 24810  01A550  006F FF8C  F002    	movff	plusw1,btemp+1
 24811                           
 24812                           ; ___awdiv: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 24813  01A556  0EF8               	movlw	248
 24814  01A558  26E1               	addwf	fsr1l,f,c
 24815  01A55A  0EFF               	movlw	255
 24816  01A55C  22E2               	addwfc	fsr1h,f,c
 24817  01A55E  0012               	return		;funcret
 24818  01A560                     __end_of___awdiv:
 24819                           	opt callstack 0
 24820                           
 24821 ;; *************** function _dtoa *****************
 24822 ;; Defined at:
 24823 ;;		line 274 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 24824 ;; Parameters:    Size  Location     Type
 24825 ;;  fp              2  [STACK] PTR struct _IO_FILE
 24826 ;;		 -> f(6), NULL(0), 
 24827 ;;  d               8  [STACK] long long 
 24828 ;; Auto vars:     Size  Location     Type
 24829 ;;  n               8  [STACK] long long 
 24830 ;;  i               2  [STACK] int 
 24831 ;;  s               2  [STACK] int 
 24832 ;;  w               2  [STACK] int 
 24833 ;;  p               2  [STACK] int 
 24834 ;; Return value:  Size  Location     Type
 24835 ;;                  2  [STACK] int 
 24836 ;; Registers used:
 24837 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 24838 ;; Tracked objects:
 24839 ;;		On entry : 0/0
 24840 ;;		On exit  : 0/0
 24841 ;;		Unchanged: 0/0
 24842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24843 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24844 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24845 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24846 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24847 ;;Total ram usage:        0 bytes
 24848 ;; Hardware stack levels used:    1
 24849 ;; Hardware stack levels required when called:   20
 24850 ;; This function calls:
 24851 ;;		___aodiv
 24852 ;;		___aomod
 24853 ;;		_abs
 24854 ;;		_pad
 24855 ;; This function is called by:
 24856 ;;		_vfpfcnvrt
 24857 ;; This function uses a reentrant model
 24858 ;;
 24859                           
 24860                           	psect	text89
 24861  0164C0                     __ptext89:
 24862                           	opt callstack 0
 24863  0164C0                     _dtoa:
 24864                           	opt callstack 0
 24865                           
 24866                           ; autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 24867  0164C0  0E12               	movlw	18
 24868  0164C2  26E1               	addwf	fsr1l,f,c
 24869  0164C4  0E00               	movlw	0
 24870  0164C6  22E2               	addwfc	fsr1h,f,c
 24871                           
 24872                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .10/pic/sources/c99/common/doprnt.c: 280:     n = d;
 24873                           ;stkvar	_d @ sp[(-18)+-10]
 24874                           
 24875                           ;incstack = 0
 24876 ;; hardware stack exceeded
 24877  0164C8  0EE4               	movlw	228
 24878  0164CA  24E1               	addwf	fsr1l,w,c
 24879  0164CC  6ED9               	movwf	fsr2l,c
 24880  0164CE  0EFF               	movlw	255
 24881  0164D0  20E2               	addwfc	fsr1h,w,c
 24882  0164D2  6EDA               	movwf	fsr2h,c
 24883                           
 24884                           ;stkvar	_n @ sp[(-18)+2]
 24885  0164D4  0E08               	movlw	8
 24886  0164D6  6E01               	movwf	btemp^0,c
 24887  0164D8  0EF0               	movlw	-16
 24888  0164DA                     us1222999:
 24889  0164DA  006F FF7B FFE3     	movff	postinc2,plusw1
 24890  0164E0  28E8               	incf	wreg,w,c
 24891  0164E2  2E01               	decfsz	btemp^0,f,c
 24892  0164E4  D7FA               	bra	us1222999
 24893                           
 24894                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
 24895                           ;stkvar	_n @ sp[(-18)+2]
 24896  0164E6  0EF7               	movlw	-9
 24897  0164E8  AEE3               	btfss	plusw1,7,c
 24898  0164EA  D002               	goto	u12230
 24899  0164EC  0E01               	movlw	1
 24900  0164EE  D001               	goto	u12240
 24901  0164F0                     u12230:
 24902  0164F0  0E00               	movlw	0
 24903  0164F2                     u12240:
 24904  0164F2  6E0B               	movwf	(btemp+10)^0,c
 24905  0164F4  6A0C               	clrf	(btemp+11)^0,c
 24906                           
 24907                           ;stkvar	_s @ sp[(-18)+12]
 24908  0164F6  0EFA               	movlw	-6
 24909  0164F8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24910  0164FE  0EFB               	movlw	-5
 24911  016500  0060  F033  FFE3   	movff	btemp+11,plusw1
 24912                           
 24913                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 282:     if (s) {
 24914                           ;stkvar	_s @ sp[(-18)+12]
 24915  016506  0EFA               	movlw	-6
 24916  016508  006F FF8C  F001    	movff	plusw1,btemp
 24917  01650E  0EFB               	movlw	-5
 24918  016510  50E3               	movf	plusw1,w,c
 24919  016512  1001               	iorwf	btemp^0,w,c
 24920  016514  B4D8               	btfsc	status,2,c
 24921  016516  D025               	goto	u12260
 24922                           
 24923                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 283:         n = -n;
 24924                           ;stkvar	_n @ sp[(-18)+2]
 24925                           ;stkvar	_n @ sp[(-18)+2]
 24926  016518  0EF0               	movlw	-16
 24927  01651A  6CE3               	negf	plusw1,c
 24928  01651C  0EF1               	movlw	-15
 24929  01651E  1EE3               	comf	plusw1,f,c
 24930  016520  0EF2               	movlw	-14
 24931  016522  1EE3               	comf	plusw1,f,c
 24932  016524  0EF3               	movlw	-13
 24933  016526  1EE3               	comf	plusw1,f,c
 24934  016528  0EF4               	movlw	-12
 24935  01652A  1EE3               	comf	plusw1,f,c
 24936  01652C  0EF5               	movlw	-11
 24937  01652E  1EE3               	comf	plusw1,f,c
 24938  016530  0EF6               	movlw	-10
 24939  016532  1EE3               	comf	plusw1,f,c
 24940  016534  0EF7               	movlw	-9
 24941  016536  1EE3               	comf	plusw1,f,c
 24942  016538  E314               	bnc	u12260
 24943  01653A  0EF1               	movlw	-15
 24944  01653C  2AE3               	incf	plusw1,f,c
 24945  01653E  E311               	bnc	u12260
 24946  016540  0EF2               	movlw	-14
 24947  016542  2AE3               	incf	plusw1,f,c
 24948  016544  E30E               	bnc	u12260
 24949  016546  0EF3               	movlw	-13
 24950  016548  2AE3               	incf	plusw1,f,c
 24951  01654A  E30B               	bnc	u12260
 24952  01654C  0EF4               	movlw	-12
 24953  01654E  2AE3               	incf	plusw1,f,c
 24954  016550  E308               	bnc	u12260
 24955  016552  0EF5               	movlw	-11
 24956  016554  2AE3               	incf	plusw1,f,c
 24957  016556  E305               	bnc	u12260
 24958  016558  0EF6               	movlw	-10
 24959  01655A  2AE3               	incf	plusw1,f,c
 24960  01655C  E302               	bnc	u12260
 24961  01655E  0EF7               	movlw	-9
 24962  016560  2AE3               	incf	plusw1,f,c
 24963  016562                     u12260:
 24964                           
 24965                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
 24966  016562  AE3D               	btfss	(_prec+1)^0,7,c
 24967                           
 24968                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
 24969  016564  923E               	bcf	_flags^0,1,c
 24970                           
 24971                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
 24972  016566  BE3D               	btfsc	(_prec+1)^0,7,c
 24973  016568  D005               	goto	u12280
 24974  01656A  503D               	movf	(_prec+1)^0,w,c
 24975  01656C  E110               	bnz	l13400
 24976  01656E  043C               	decf	_prec^0,w,c
 24977  016570  B0D8               	btfsc	status,0,c
 24978  016572  D00D               	goto	l13400
 24979  016574                     u12280:
 24980  016574  0E01               	movlw	1
 24981  016576  6E0B               	movwf	(btemp+10)^0,c
 24982  016578  0E00               	movlw	0
 24983  01657A  6E0C               	movwf	(btemp+11)^0,c
 24984                           
 24985                           ;stkvar	_p @ sp[(-18)+16]
 24986  01657C  0EFE               	movlw	-2
 24987  01657E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24988  016584  0EFF               	movlw	-1
 24989  016586  0060  F033  FFE3   	movff	btemp+11,plusw1
 24990  01658C  D008               	goto	l2446
 24991  01658E                     l13400:
 24992                           
 24993                           ;stkvar	_p @ sp[(-18)+16]
 24994  01658E  0EFE               	movlw	-2
 24995  016590  0060  F0F3  FFE3   	movff	_prec,plusw1
 24996  016596  0EFF               	movlw	-1
 24997  016598  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 24998  01659E                     l2446:
 24999                           
 25000                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 291:     w = width;
 25001                           ;stkvar	_w @ sp[(-18)+14]
 25002  01659E  0EFC               	movlw	-4
 25003  0165A0  0060  F0EB  FFE3   	movff	_width,plusw1
 25004  0165A6  0EFD               	movlw	-3
 25005  0165A8  0060  F0EF  FFE3   	movff	_width+1,plusw1
 25006                           
 25007                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
 25008                           ;stkvar	_s @ sp[(-18)+12]
 25009  0165AE  0EFA               	movlw	-6
 25010  0165B0  006F FF8C  F001    	movff	plusw1,btemp
 25011  0165B6  0EFB               	movlw	-5
 25012  0165B8  50E3               	movf	plusw1,w,c
 25013  0165BA  1001               	iorwf	btemp^0,w,c
 25014  0165BC  A4D8               	btfss	status,2,c
 25015  0165BE  D002               	goto	u12300
 25016  0165C0  A43E               	btfss	_flags^0,2,c
 25017  0165C2  D00A               	goto	l13408
 25018  0165C4                     u12300:
 25019                           
 25020                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 293:         --w;
 25021                           ;stkvar	_w @ sp[(-18)+14]
 25022  0165C4  50E1               	movf	fsr1l,w,c
 25023  0165C6  0FFC               	addlw	-4
 25024  0165C8  6ED9               	movwf	fsr2l,c
 25025  0165CA  50E2               	movf	fsr1h,w,c
 25026  0165CC  6EDA               	movwf	fsr2h,c
 25027  0165CE  0EFF               	movlw	255
 25028  0165D0  22DA               	addwfc	fsr2h,f,c
 25029  0165D2  06DE               	decf	postinc2,f,c
 25030  0165D4  0E00               	movlw	0
 25031  0165D6  5ADD               	subwfb	postdec2,f,c
 25032  0165D8                     l13408:
 25033                           
 25034                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
 25035  0165D8  0E4F               	movlw	79
 25036  0165DA  6E0B               	movwf	(btemp+10)^0,c
 25037  0165DC  0E00               	movlw	0
 25038  0165DE  6E0C               	movwf	(btemp+11)^0,c
 25039                           
 25040                           ;stkvar	_i @ sp[(-18)+10]
 25041  0165E0  0EF8               	movlw	-8
 25042  0165E2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25043  0165E8  0EF9               	movlw	-7
 25044  0165EA  0060  F033  FFE3   	movff	btemp+11,plusw1
 25045                           
 25046                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
 25047  0165F0  0103               	movlb	3	; () banked
 25048  0165F2  6BA3               	clrf	(_dbuf+79)& (0+255),b
 25049                           
 25050                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 25051  0165F4  D109               	goto	l13422
 25052  0165F6                     l13412:
 25053                           
 25054                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 300:         --i;
 25055                           ;stkvar	_i @ sp[(-18)+10]
 25056  0165F6  50E1               	movf	fsr1l,w,c
 25057  0165F8  0FF8               	addlw	-8
 25058  0165FA  6ED9               	movwf	fsr2l,c
 25059  0165FC  50E2               	movf	fsr1h,w,c
 25060  0165FE  6EDA               	movwf	fsr2h,c
 25061  016600  0EFF               	movlw	255
 25062  016602  22DA               	addwfc	fsr2h,f,c
 25063  016604  06DE               	decf	postinc2,f,c
 25064  016606  0E00               	movlw	0
 25065  016608  5ADD               	subwfb	postdec2,f,c
 25066                           
 25067                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
 25068  01660A  0E0A               	movlw	10
 25069  01660C  6EE6               	movwf	postinc1,c
 25070  01660E  0E00               	movlw	0
 25071  016610  6EE6               	movwf	postinc1,c
 25072  016612  0E00               	movlw	0
 25073  016614  6EE6               	movwf	postinc1,c
 25074  016616  0E00               	movlw	0
 25075  016618  6EE6               	movwf	postinc1,c
 25076  01661A  0E00               	movlw	0
 25077  01661C  6EE6               	movwf	postinc1,c
 25078  01661E  0E00               	movlw	0
 25079  016620  6EE6               	movwf	postinc1,c
 25080  016622  0E00               	movlw	0
 25081  016624  6EE6               	movwf	postinc1,c
 25082  016626  0E00               	movlw	0
 25083  016628  6EE6               	movwf	postinc1,c
 25084                           
 25085                           ;stkvar	_n @ sp[(-26)+2]
 25086  01662A  50E1               	movf	fsr1l,w,c
 25087  01662C  0FE8               	addlw	-24
 25088  01662E  6ED9               	movwf	fsr2l,c
 25089  016630  50E2               	movf	fsr1h,w,c
 25090  016632  6EDA               	movwf	fsr2h,c
 25091  016634  0EFF               	movlw	255
 25092  016636  22DA               	addwfc	fsr2h,f,c
 25093  016638  006F FF7B FFE6     	movff	postinc2,postinc1
 25094  01663E  006F FF7B FFE6     	movff	postinc2,postinc1
 25095  016644  006F FF7B FFE6     	movff	postinc2,postinc1
 25096  01664A  006F FF7B FFE6     	movff	postinc2,postinc1
 25097  016650  006F FF7B FFE6     	movff	postinc2,postinc1
 25098  016656  006F FF7B FFE6     	movff	postinc2,postinc1
 25099  01665C  006F FF7B FFE6     	movff	postinc2,postinc1
 25100  016662  006F FF7B FFE6     	movff	postinc2,postinc1
 25101  016668  EC6D  F0C5         	call	___aomod	;wreg free
 25102  01666C  52E5               	movf	postdec1,f,c
 25103  01666E  006F FF9C  F018    	movff	indf1,btemp+23
 25104  016674  52E5               	movf	postdec1,f,c
 25105  016676  006F FF9C  F017    	movff	indf1,btemp+22
 25106  01667C  52E5               	movf	postdec1,f,c
 25107  01667E  006F FF9C  F016    	movff	indf1,btemp+21
 25108  016684  52E5               	movf	postdec1,f,c
 25109  016686  006F FF9C  F015    	movff	indf1,btemp+20
 25110  01668C  52E5               	movf	postdec1,f,c
 25111  01668E  006F FF9C  F014    	movff	indf1,btemp+19
 25112  016694  52E5               	movf	postdec1,f,c
 25113  016696  006F FF9C  F013    	movff	indf1,btemp+18
 25114  01669C  52E5               	movf	postdec1,f,c
 25115  01669E  006F FF9C  F012    	movff	indf1,btemp+17
 25116  0166A4  52E5               	movf	postdec1,f,c
 25117  0166A6  006F FF9C  F011    	movff	indf1,btemp+16
 25118  0166AC  0EF8               	movlw	248
 25119  0166AE  26E1               	addwf	fsr1l,f,c
 25120  0166B0  0EFF               	movlw	255
 25121  0166B2  22E2               	addwfc	fsr1h,f,c
 25122  0166B4  0060  F044  F00B   	movff	btemp+16,btemp+10
 25123  0166BA  0060  F048  F00C   	movff	btemp+17,btemp+11
 25124  0166C0  0060  F02F  FFE6   	movff	btemp+10,postinc1
 25125  0166C6  0060  F033  FFE6   	movff	btemp+11,postinc1
 25126  0166CC  EC4A  F0E7         	call	_abs	;wreg free
 25127  0166D0  0E30               	movlw	48
 25128  0166D2  2601               	addwf	btemp^0,f,c
 25129                           
 25130                           ;stkvar	_i @ sp[(-18)+10]
 25131  0166D4  0EF8               	movlw	-8
 25132  0166D6  006F FF8C  F00B    	movff	plusw1,btemp+10
 25133  0166DC  0EF9               	movlw	-7
 25134  0166DE  006F FF8C  F00C    	movff	plusw1,btemp+11
 25135  0166E4  0E54               	movlw	low _dbuf
 25136  0166E6  240B               	addwf	(btemp+10)^0,w,c
 25137  0166E8  6ED9               	movwf	fsr2l,c
 25138  0166EA  0E03               	movlw	high _dbuf
 25139  0166EC  200C               	addwfc	(btemp+11)^0,w,c
 25140  0166EE  6EDA               	movwf	fsr2h,c
 25141  0166F0  0060  F007  FFDF   	movff	btemp,indf2
 25142                           
 25143                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 302:         --p;
 25144                           ;stkvar	_p @ sp[(-18)+16]
 25145  0166F6  50E1               	movf	fsr1l,w,c
 25146  0166F8  0FFE               	addlw	-2
 25147  0166FA  6ED9               	movwf	fsr2l,c
 25148  0166FC  50E2               	movf	fsr1h,w,c
 25149  0166FE  6EDA               	movwf	fsr2h,c
 25150  016700  0EFF               	movlw	255
 25151  016702  22DA               	addwfc	fsr2h,f,c
 25152  016704  06DE               	decf	postinc2,f,c
 25153  016706  0E00               	movlw	0
 25154  016708  5ADD               	subwfb	postdec2,f,c
 25155                           
 25156                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 303:         --w;
 25157                           ;stkvar	_w @ sp[(-18)+14]
 25158  01670A  50E1               	movf	fsr1l,w,c
 25159  01670C  0FFC               	addlw	-4
 25160  01670E  6ED9               	movwf	fsr2l,c
 25161  016710  50E2               	movf	fsr1h,w,c
 25162  016712  6EDA               	movwf	fsr2h,c
 25163  016714  0EFF               	movlw	255
 25164  016716  22DA               	addwfc	fsr2h,f,c
 25165  016718  06DE               	decf	postinc2,f,c
 25166  01671A  0E00               	movlw	0
 25167  01671C  5ADD               	subwfb	postdec2,f,c
 25168                           
 25169                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
 25170  01671E  0E0A               	movlw	10
 25171  016720  6EE6               	movwf	postinc1,c
 25172  016722  0E00               	movlw	0
 25173  016724  6EE6               	movwf	postinc1,c
 25174  016726  0E00               	movlw	0
 25175  016728  6EE6               	movwf	postinc1,c
 25176  01672A  0E00               	movlw	0
 25177  01672C  6EE6               	movwf	postinc1,c
 25178  01672E  0E00               	movlw	0
 25179  016730  6EE6               	movwf	postinc1,c
 25180  016732  0E00               	movlw	0
 25181  016734  6EE6               	movwf	postinc1,c
 25182  016736  0E00               	movlw	0
 25183  016738  6EE6               	movwf	postinc1,c
 25184  01673A  0E00               	movlw	0
 25185  01673C  6EE6               	movwf	postinc1,c
 25186                           
 25187                           ;stkvar	_n @ sp[(-26)+2]
 25188  01673E  50E1               	movf	fsr1l,w,c
 25189  016740  0FE8               	addlw	-24
 25190  016742  6ED9               	movwf	fsr2l,c
 25191  016744  50E2               	movf	fsr1h,w,c
 25192  016746  6EDA               	movwf	fsr2h,c
 25193  016748  0EFF               	movlw	255
 25194  01674A  22DA               	addwfc	fsr2h,f,c
 25195  01674C  006F FF7B FFE6     	movff	postinc2,postinc1
 25196  016752  006F FF7B FFE6     	movff	postinc2,postinc1
 25197  016758  006F FF7B FFE6     	movff	postinc2,postinc1
 25198  01675E  006F FF7B FFE6     	movff	postinc2,postinc1
 25199  016764  006F FF7B FFE6     	movff	postinc2,postinc1
 25200  01676A  006F FF7B FFE6     	movff	postinc2,postinc1
 25201  016770  006F FF7B FFE6     	movff	postinc2,postinc1
 25202  016776  006F FF7B FFE6     	movff	postinc2,postinc1
 25203  01677C  ECD0  F0C1         	call	___aodiv	;wreg free
 25204  016780  52E5               	movf	postdec1,f,c
 25205  016782  006F FF9C  F018    	movff	indf1,btemp+23
 25206  016788  52E5               	movf	postdec1,f,c
 25207  01678A  006F FF9C  F017    	movff	indf1,btemp+22
 25208  016790  52E5               	movf	postdec1,f,c
 25209  016792  006F FF9C  F016    	movff	indf1,btemp+21
 25210  016798  52E5               	movf	postdec1,f,c
 25211  01679A  006F FF9C  F015    	movff	indf1,btemp+20
 25212  0167A0  52E5               	movf	postdec1,f,c
 25213  0167A2  006F FF9C  F014    	movff	indf1,btemp+19
 25214  0167A8  52E5               	movf	postdec1,f,c
 25215  0167AA  006F FF9C  F013    	movff	indf1,btemp+18
 25216  0167B0  52E5               	movf	postdec1,f,c
 25217  0167B2  006F FF9C  F012    	movff	indf1,btemp+17
 25218  0167B8  52E5               	movf	postdec1,f,c
 25219  0167BA  006F FF9C  F011    	movff	indf1,btemp+16
 25220  0167C0  0EF8               	movlw	248
 25221  0167C2  26E1               	addwf	fsr1l,f,c
 25222  0167C4  0EFF               	movlw	255
 25223  0167C6  22E2               	addwfc	fsr1h,f,c
 25224                           
 25225                           ;stkvar	_n @ sp[(-18)+2]
 25226  0167C8  0EF0               	movlw	-16
 25227  0167CA  0060  F047  FFE3   	movff	btemp+16,plusw1
 25228  0167D0  0EF1               	movlw	-15
 25229  0167D2  0060  F04B  FFE3   	movff	btemp+17,plusw1
 25230  0167D8  0EF2               	movlw	-14
 25231  0167DA  0060  F04F  FFE3   	movff	btemp+18,plusw1
 25232  0167E0  0EF3               	movlw	-13
 25233  0167E2  0060  F053  FFE3   	movff	btemp+19,plusw1
 25234  0167E8  0EF4               	movlw	-12
 25235  0167EA  0060  F057  FFE3   	movff	btemp+20,plusw1
 25236  0167F0  0EF5               	movlw	-11
 25237  0167F2  0060  F05B  FFE3   	movff	btemp+21,plusw1
 25238  0167F8  0EF6               	movlw	-10
 25239  0167FA  0060  F05F  FFE3   	movff	btemp+22,plusw1
 25240  016800  0EF7               	movlw	-9
 25241  016802  0060  F063  FFE3   	movff	btemp+23,plusw1
 25242  016808                     l13422:
 25243                           
 25244                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 25245                           ;stkvar	_i @ sp[(-18)+10]
 25246  016808  0EF9               	movlw	-7
 25247  01680A  BEE3               	btfsc	plusw1,7,c
 25248  01680C  D036               	goto	u12350
 25249  01680E  0EF9               	movlw	-7
 25250  016810  50E3               	movf	plusw1,w,c
 25251  016812  E104               	bnz	u12310
 25252  016814  0EF8               	movlw	-8
 25253  016816  04E3               	decf	plusw1,w,c
 25254  016818  A0D8               	btfss	status,0,c
 25255  01681A  D02F               	goto	u12350
 25256  01681C                     u12310:
 25257                           
 25258                           ;stkvar	_n @ sp[(-18)+2]
 25259  01681C  0EF0               	movlw	-16
 25260  01681E  50E3               	movf	plusw1,w,c
 25261  016820  E115               	bnz	u12321
 25262  016822  0EF1               	movlw	-15
 25263  016824  50E3               	movf	plusw1,w,c
 25264  016826  E112               	bnz	u12321
 25265  016828  0EF2               	movlw	-14
 25266  01682A  50E3               	movf	plusw1,w,c
 25267  01682C  E10F               	bnz	u12321
 25268  01682E  0EF3               	movlw	-13
 25269  016830  50E3               	movf	plusw1,w,c
 25270  016832  E10C               	bnz	u12321
 25271  016834  0EF4               	movlw	-12
 25272  016836  50E3               	movf	plusw1,w,c
 25273  016838  E109               	bnz	u12321
 25274  01683A  0EF5               	movlw	-11
 25275  01683C  50E3               	movf	plusw1,w,c
 25276  01683E  E106               	bnz	u12321
 25277  016840  0EF6               	movlw	-10
 25278  016842  50E3               	movf	plusw1,w,c
 25279  016844  E103               	bnz	u12321
 25280  016846  0EF7               	movlw	-9
 25281  016848  50E3               	movf	plusw1,w,c
 25282  01684A  A4D8               	btfss	status,2,c
 25283  01684C                     u12321:
 25284  01684C  D6D4               	goto	l13412
 25285                           
 25286                           ;stkvar	_p @ sp[(-18)+16]
 25287  01684E  0EFF               	movlw	-1
 25288  016850  BEE3               	btfsc	plusw1,7,c
 25289  016852  D007               	goto	u12330
 25290  016854  0EFF               	movlw	-1
 25291  016856  50E3               	movf	plusw1,w,c
 25292  016858  E103               	bnz	u12331
 25293  01685A  0EFE               	movlw	-2
 25294  01685C  04E3               	decf	plusw1,w,c
 25295  01685E  B0D8               	btfsc	status,0,c
 25296  016860                     u12331:
 25297  016860  D6CA               	goto	l13412
 25298  016862                     u12330:
 25299                           
 25300                           ;stkvar	_w @ sp[(-18)+14]
 25301  016862  0EFD               	movlw	-3
 25302  016864  BEE3               	btfsc	plusw1,7,c
 25303  016866  D009               	goto	u12350
 25304  016868  0EFD               	movlw	-3
 25305  01686A  50E3               	movf	plusw1,w,c
 25306  01686C  E104               	bnz	u12340
 25307  01686E  0EFC               	movlw	-4
 25308  016870  04E3               	decf	plusw1,w,c
 25309  016872  A0D8               	btfss	status,0,c
 25310  016874  D002               	goto	u12350
 25311  016876                     u12340:
 25312  016876  B23E               	btfsc	_flags^0,1,c
 25313  016878  D6BE               	goto	l13412
 25314  01687A                     u12350:
 25315                           
 25316                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
 25317                           ;stkvar	_s @ sp[(-18)+12]
 25318  01687A  0EFA               	movlw	-6
 25319  01687C  006F FF8C  F001    	movff	plusw1,btemp
 25320  016882  0EFB               	movlw	-5
 25321  016884  50E3               	movf	plusw1,w,c
 25322  016886  1001               	iorwf	btemp^0,w,c
 25323  016888  A4D8               	btfss	status,2,c
 25324  01688A  D002               	goto	u12370
 25325  01688C  A43E               	btfss	_flags^0,2,c
 25326  01688E  D033               	goto	l13446
 25327  016890                     u12370:
 25328                           
 25329                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 309:         --i;
 25330                           ;stkvar	_i @ sp[(-18)+10]
 25331  016890  50E1               	movf	fsr1l,w,c
 25332  016892  0FF8               	addlw	-8
 25333  016894  6ED9               	movwf	fsr2l,c
 25334  016896  50E2               	movf	fsr1h,w,c
 25335  016898  6EDA               	movwf	fsr2h,c
 25336  01689A  0EFF               	movlw	255
 25337  01689C  22DA               	addwfc	fsr2h,f,c
 25338  01689E  06DE               	decf	postinc2,f,c
 25339  0168A0  0E00               	movlw	0
 25340  0168A2  5ADD               	subwfb	postdec2,f,c
 25341                           
 25342                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
 25343                           ;stkvar	_s @ sp[(-18)+12]
 25344  0168A4  0EFA               	movlw	-6
 25345  0168A6  006F FF8C  F001    	movff	plusw1,btemp
 25346  0168AC  0EFB               	movlw	-5
 25347  0168AE  50E3               	movf	plusw1,w,c
 25348  0168B0  1001               	iorwf	btemp^0,w,c
 25349  0168B2  A4D8               	btfss	status,2,c
 25350  0168B4  D002               	goto	l13442
 25351  0168B6  0E2B               	movlw	43
 25352  0168B8  D001               	goto	L30
 25353  0168BA                     l13442:
 25354  0168BA  0E2D               	movlw	45
 25355  0168BC                     L30:
 25356  0168BC  6E0B               	movwf	(btemp+10)^0,c
 25357  0168BE  0E00               	movlw	0
 25358  0168C0  6E0C               	movwf	(btemp+11)^0,c
 25359                           
 25360                           ;stkvar	_dtoa$6501 @ sp[(-18)+0]
 25361  0168C2  0EEE               	movlw	-18
 25362  0168C4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25363  0168CA  0EEF               	movlw	-17
 25364  0168CC  0060  F033  FFE3   	movff	btemp+11,plusw1
 25365                           
 25366                           ;stkvar	_dtoa$6501 @ sp[(-18)+0]
 25367                           ;stkvar	_i @ sp[(-18)+10]
 25368  0168D2  0EF8               	movlw	-8
 25369  0168D4  006F FF8C  F00B    	movff	plusw1,btemp+10
 25370  0168DA  0EF9               	movlw	-7
 25371  0168DC  006F FF8C  F00C    	movff	plusw1,btemp+11
 25372  0168E2  0E54               	movlw	low _dbuf
 25373  0168E4  240B               	addwf	(btemp+10)^0,w,c
 25374  0168E6  6ED9               	movwf	fsr2l,c
 25375  0168E8  0E03               	movlw	high _dbuf
 25376  0168EA  200C               	addwfc	(btemp+11)^0,w,c
 25377  0168EC  6EDA               	movwf	fsr2h,c
 25378  0168EE  0EEE               	movlw	-18
 25379  0168F0  006F FF8F FFDF     	movff	plusw1,indf2
 25380  0168F6                     l13446:
 25381                           
 25382                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
 25383                           ;stkvar	_w @ sp[(-18)+14]
 25384  0168F6  0EFC               	movlw	-4
 25385  0168F8  006F FF8F FFE6     	movff	plusw1,postinc1
 25386  0168FE  006F FF8F FFE6     	movff	plusw1,postinc1
 25387                           
 25388                           ;stkvar	_i @ sp[(-20)+10]
 25389  016904  0E54               	movlw	low _dbuf
 25390  016906  6E0B               	movwf	(btemp+10)^0,c
 25391  016908  0E03               	movlw	high _dbuf
 25392  01690A  6E0C               	movwf	(btemp+11)^0,c
 25393  01690C  0EF6               	movlw	-10
 25394  01690E  50E3               	movf	plusw1,w,c
 25395  016910  260B               	addwf	(btemp+10)^0,f,c
 25396  016912  0EF7               	movlw	-9
 25397  016914  50E3               	movf	plusw1,w,c
 25398  016916  220C               	addwfc	(btemp+11)^0,f,c
 25399  016918  0060  F02F  FFE6   	movff	btemp+10,postinc1
 25400  01691E  0060  F033  FFE6   	movff	btemp+11,postinc1
 25401                           
 25402                           ;stkvar	_fp @ sp[(-22)+-2]
 25403  016924  0EE8               	movlw	-24
 25404  016926  006F FF8F FFE6     	movff	plusw1,postinc1
 25405  01692C  006F FF8F FFE6     	movff	plusw1,postinc1
 25406  016932  ECC3  F0D6         	call	_pad	;wreg free
 25407                           
 25408                           ; _dtoa: autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 25409  016936  0EE4               	movlw	228
 25410  016938  26E1               	addwf	fsr1l,f,c
 25411  01693A  0EFF               	movlw	255
 25412  01693C  22E2               	addwfc	fsr1h,f,c
 25413  01693E  0012               	return		;funcret
 25414  016940                     __end_of_dtoa:
 25415                           	opt callstack 0
 25416                           
 25417 ;; *************** function _abs *****************
 25418 ;; Defined at:
 25419 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/abs.c"
 25420 ;; Parameters:    Size  Location     Type
 25421 ;;  a               2  [STACK] int 
 25422 ;; Auto vars:     Size  Location     Type
 25423 ;;		None
 25424 ;; Return value:  Size  Location     Type
 25425 ;;                  2  [STACK] int 
 25426 ;; Registers used:
 25427 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
 25428 ;; Tracked objects:
 25429 ;;		On entry : 0/3
 25430 ;;		On exit  : 0/0
 25431 ;;		Unchanged: 0/0
 25432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25433 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25434 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25435 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25436 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25437 ;;Total ram usage:        0 bytes
 25438 ;; Hardware stack levels used:    1
 25439 ;; Hardware stack levels required when called:   15
 25440 ;; This function calls:
 25441 ;;		Nothing
 25442 ;; This function is called by:
 25443 ;;		_dtoa
 25444 ;; This function uses a reentrant model
 25445 ;;
 25446                           
 25447                           	psect	text90
 25448  01CE94                     __ptext90:
 25449                           	opt callstack 0
 25450  01CE94                     _abs:
 25451                           	opt callstack 0
 25452                           
 25453                           ;stkvar	_a @ sp[(0)+-2]
 25454                           
 25455                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25456                           ;incstack = 0
 25457 ;; hardware stack exceeded
 25458  01CE94  0EFF               	movlw	-1
 25459  01CE96  BEE3               	btfsc	plusw1,7,c
 25460  01CE98  D007               	goto	u6640
 25461  01CE9A  0EFF               	movlw	-1
 25462  01CE9C  50E3               	movf	plusw1,w,c
 25463  01CE9E  E112               	bnz	l8856
 25464  01CEA0  0EFE               	movlw	-2
 25465  01CEA2  04E3               	decf	plusw1,w,c
 25466  01CEA4  B0D8               	btfsc	status,0,c
 25467  01CEA6  D00E               	goto	l8856
 25468  01CEA8                     u6640:
 25469                           
 25470                           ;stkvar	_a @ sp[(0)+-2]
 25471  01CEA8  0EFE               	movlw	-2
 25472  01CEAA  006F FF8C  F001    	movff	plusw1,btemp
 25473  01CEB0  1E01               	comf	btemp^0,f,c
 25474  01CEB2  0EFF               	movlw	-1
 25475  01CEB4  006F FF8C  F002    	movff	plusw1,btemp+1
 25476  01CEBA  1E02               	comf	(btemp+1)^0,f,c
 25477  01CEBC  2A01               	incf	btemp^0,f,c
 25478  01CEBE  B4D8               	btfsc	status,2,c
 25479  01CEC0  2A02               	incf	(btemp+1)^0,f,c
 25480  01CEC2  D008               	goto	l3372
 25481  01CEC4                     l8856:
 25482                           
 25483                           ;stkvar	_a @ sp[(0)+-2]
 25484  01CEC4  0EFE               	movlw	-2
 25485  01CEC6  006F FF8C  F001    	movff	plusw1,btemp
 25486  01CECC  0EFF               	movlw	-1
 25487  01CECE  006F FF8C  F002    	movff	plusw1,btemp+1
 25488  01CED4                     l3372:
 25489                           
 25490                           ; _abs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize =
      +                           2, vargsize = 0
 25491  01CED4  52E5               	movf	postdec1,f,c
 25492  01CED6  52E5               	movf	postdec1,f,c
 25493  01CED8  0012               	return		;funcret
 25494  01CEDA                     __end_of_abs:
 25495                           	opt callstack 0
 25496                           
 25497 ;; *************** function ___aomod *****************
 25498 ;; Defined at:
 25499 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aomod.c"
 25500 ;; Parameters:    Size  Location     Type
 25501 ;;  dividend        8  [STACK] long long 
 25502 ;;  divisor         8  [STACK] long long 
 25503 ;; Auto vars:     Size  Location     Type
 25504 ;;  sign            1  [STACK] unsigned char 
 25505 ;;  counter         1  [STACK] unsigned char 
 25506 ;; Return value:  Size  Location     Type
 25507 ;;                  8  [STACK] long long 
 25508 ;; Registers used:
 25509 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 25510 ;; Tracked objects:
 25511 ;;		On entry : 0/3
 25512 ;;		On exit  : 0/0
 25513 ;;		Unchanged: 0/0
 25514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25515 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25516 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25517 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25518 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25519 ;;Total ram usage:        0 bytes
 25520 ;; Hardware stack levels used:    1
 25521 ;; Hardware stack levels required when called:   15
 25522 ;; This function calls:
 25523 ;;		Nothing
 25524 ;; This function is called by:
 25525 ;;		_dtoa
 25526 ;; This function uses a reentrant model
 25527 ;;
 25528                           
 25529                           	psect	text91
 25530  018ADA                     __ptext91:
 25531                           	opt callstack 0
 25532  018ADA                     ___aomod:
 25533                           	opt callstack 0
 25534                           
 25535                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 25536  018ADA  52E6               	movf	postinc1,f,c
 25537  018ADC  52E6               	movf	postinc1,f,c
 25538                           
 25539                           ;stkvar	_sign @ sp[(-2)+0]
 25540                           
 25541                           ;incstack = 0
 25542 ;; hardware stack exceeded
 25543  018ADE  0EFE               	movlw	-2
 25544  018AE0  6AE3               	clrf	plusw1,c
 25545                           
 25546                           ;stkvar	_dividend @ sp[(-2)+-8]
 25547  018AE2  0EFD               	movlw	-3
 25548  018AE4  AEE3               	btfss	plusw1,7,c
 25549  018AE6  D028               	goto	l9014
 25550                           
 25551                           ;stkvar	_dividend @ sp[(-2)+-8]
 25552                           ;stkvar	_dividend @ sp[(-2)+-8]
 25553  018AE8  0EF6               	movlw	-10
 25554  018AEA  6CE3               	negf	plusw1,c
 25555  018AEC  0EF7               	movlw	-9
 25556  018AEE  1EE3               	comf	plusw1,f,c
 25557  018AF0  0EF8               	movlw	-8
 25558  018AF2  1EE3               	comf	plusw1,f,c
 25559  018AF4  0EF9               	movlw	-7
 25560  018AF6  1EE3               	comf	plusw1,f,c
 25561  018AF8  0EFA               	movlw	-6
 25562  018AFA  1EE3               	comf	plusw1,f,c
 25563  018AFC  0EFB               	movlw	-5
 25564  018AFE  1EE3               	comf	plusw1,f,c
 25565  018B00  0EFC               	movlw	-4
 25566  018B02  1EE3               	comf	plusw1,f,c
 25567  018B04  0EFD               	movlw	-3
 25568  018B06  1EE3               	comf	plusw1,f,c
 25569  018B08  E314               	bnc	u7070
 25570  018B0A  0EF7               	movlw	-9
 25571  018B0C  2AE3               	incf	plusw1,f,c
 25572  018B0E  E311               	bnc	u7070
 25573  018B10  0EF8               	movlw	-8
 25574  018B12  2AE3               	incf	plusw1,f,c
 25575  018B14  E30E               	bnc	u7070
 25576  018B16  0EF9               	movlw	-7
 25577  018B18  2AE3               	incf	plusw1,f,c
 25578  018B1A  E30B               	bnc	u7070
 25579  018B1C  0EFA               	movlw	-6
 25580  018B1E  2AE3               	incf	plusw1,f,c
 25581  018B20  E308               	bnc	u7070
 25582  018B22  0EFB               	movlw	-5
 25583  018B24  2AE3               	incf	plusw1,f,c
 25584  018B26  E305               	bnc	u7070
 25585  018B28  0EFC               	movlw	-4
 25586  018B2A  2AE3               	incf	plusw1,f,c
 25587  018B2C  E302               	bnc	u7070
 25588  018B2E  0EFD               	movlw	-3
 25589  018B30  2AE3               	incf	plusw1,f,c
 25590  018B32                     u7070:
 25591                           
 25592                           ;stkvar	_sign @ sp[(-2)+0]
 25593  018B32  0EFE               	movlw	-2
 25594  018B34  6AE3               	clrf	plusw1,c
 25595  018B36  2AE3               	incf	plusw1,f,c
 25596  018B38                     l9014:
 25597                           
 25598                           ;stkvar	_divisor @ sp[(-2)+-16]
 25599  018B38  0EF5               	movlw	-11
 25600  018B3A  AEE3               	btfss	plusw1,7,c
 25601  018B3C  D025               	goto	u7090
 25602                           
 25603                           ;stkvar	_divisor @ sp[(-2)+-16]
 25604                           ;stkvar	_divisor @ sp[(-2)+-16]
 25605  018B3E  0EEE               	movlw	-18
 25606  018B40  6CE3               	negf	plusw1,c
 25607  018B42  0EEF               	movlw	-17
 25608  018B44  1EE3               	comf	plusw1,f,c
 25609  018B46  0EF0               	movlw	-16
 25610  018B48  1EE3               	comf	plusw1,f,c
 25611  018B4A  0EF1               	movlw	-15
 25612  018B4C  1EE3               	comf	plusw1,f,c
 25613  018B4E  0EF2               	movlw	-14
 25614  018B50  1EE3               	comf	plusw1,f,c
 25615  018B52  0EF3               	movlw	-13
 25616  018B54  1EE3               	comf	plusw1,f,c
 25617  018B56  0EF4               	movlw	-12
 25618  018B58  1EE3               	comf	plusw1,f,c
 25619  018B5A  0EF5               	movlw	-11
 25620  018B5C  1EE3               	comf	plusw1,f,c
 25621  018B5E  E314               	bnc	u7090
 25622  018B60  0EEF               	movlw	-17
 25623  018B62  2AE3               	incf	plusw1,f,c
 25624  018B64  E311               	bnc	u7090
 25625  018B66  0EF0               	movlw	-16
 25626  018B68  2AE3               	incf	plusw1,f,c
 25627  018B6A  E30E               	bnc	u7090
 25628  018B6C  0EF1               	movlw	-15
 25629  018B6E  2AE3               	incf	plusw1,f,c
 25630  018B70  E30B               	bnc	u7090
 25631  018B72  0EF2               	movlw	-14
 25632  018B74  2AE3               	incf	plusw1,f,c
 25633  018B76  E308               	bnc	u7090
 25634  018B78  0EF3               	movlw	-13
 25635  018B7A  2AE3               	incf	plusw1,f,c
 25636  018B7C  E305               	bnc	u7090
 25637  018B7E  0EF4               	movlw	-12
 25638  018B80  2AE3               	incf	plusw1,f,c
 25639  018B82  E302               	bnc	u7090
 25640  018B84  0EF5               	movlw	-11
 25641  018B86  2AE3               	incf	plusw1,f,c
 25642  018B88                     u7090:
 25643                           
 25644                           ;stkvar	_divisor @ sp[(-2)+-16]
 25645  018B88  0EEE               	movlw	-18
 25646  018B8A  50E3               	movf	plusw1,w,c
 25647  018B8C  E116               	bnz	u7100
 25648  018B8E  0EEF               	movlw	-17
 25649  018B90  50E3               	movf	plusw1,w,c
 25650  018B92  E113               	bnz	u7100
 25651  018B94  0EF0               	movlw	-16
 25652  018B96  50E3               	movf	plusw1,w,c
 25653  018B98  E110               	bnz	u7100
 25654  018B9A  0EF1               	movlw	-15
 25655  018B9C  50E3               	movf	plusw1,w,c
 25656  018B9E  E10D               	bnz	u7100
 25657  018BA0  0EF2               	movlw	-14
 25658  018BA2  50E3               	movf	plusw1,w,c
 25659  018BA4  E10A               	bnz	u7100
 25660  018BA6  0EF3               	movlw	-13
 25661  018BA8  50E3               	movf	plusw1,w,c
 25662  018BAA  E107               	bnz	u7100
 25663  018BAC  0EF4               	movlw	-12
 25664  018BAE  50E3               	movf	plusw1,w,c
 25665  018BB0  E104               	bnz	u7100
 25666  018BB2  0EF5               	movlw	-11
 25667  018BB4  50E3               	movf	plusw1,w,c
 25668  018BB6  B4D8               	btfsc	status,2,c
 25669  018BB8  D075               	goto	u7130
 25670  018BBA                     u7100:
 25671                           
 25672                           ;stkvar	_counter @ sp[(-2)+1]
 25673  018BBA  0EFF               	movlw	-1
 25674  018BBC  6AE3               	clrf	plusw1,c
 25675  018BBE  D012               	goto	L31
 25676  018BC0                     l9022:
 25677                           
 25678                           ;stkvar	_divisor @ sp[(-2)+-16]
 25679  018BC0  90D8               	bcf	status,0,c
 25680  018BC2  0EEE               	movlw	-18
 25681  018BC4  36E3               	rlcf	plusw1,f,c
 25682  018BC6  0EEF               	movlw	-17
 25683  018BC8  36E3               	rlcf	plusw1,f,c
 25684  018BCA  0EF0               	movlw	-16
 25685  018BCC  36E3               	rlcf	plusw1,f,c
 25686  018BCE  0EF1               	movlw	-15
 25687  018BD0  36E3               	rlcf	plusw1,f,c
 25688  018BD2  0EF2               	movlw	-14
 25689  018BD4  36E3               	rlcf	plusw1,f,c
 25690  018BD6  0EF3               	movlw	-13
 25691  018BD8  36E3               	rlcf	plusw1,f,c
 25692  018BDA  0EF4               	movlw	-12
 25693  018BDC  36E3               	rlcf	plusw1,f,c
 25694  018BDE  0EF5               	movlw	-11
 25695  018BE0  36E3               	rlcf	plusw1,f,c
 25696                           
 25697                           ;stkvar	_counter @ sp[(-2)+1]
 25698  018BE2  0EFF               	movlw	-1
 25699  018BE4                     L31:
 25700  018BE4  2AE3               	incf	plusw1,f,c
 25701                           
 25702                           ;stkvar	_divisor @ sp[(-2)+-16]
 25703  018BE6  0EF5               	movlw	-11
 25704  018BE8  AEE3               	btfss	plusw1,7,c
 25705  018BEA  D7EA               	goto	l9022
 25706  018BEC                     u7110:
 25707                           
 25708                           ;stkvar	_divisor @ sp[(-2)+-16]
 25709                           ;stkvar	_dividend @ sp[(-2)+-8]
 25710  018BEC  50E1               	movf	fsr1l,w,c
 25711  018BEE  0FF6               	addlw	-10
 25712  018BF0  6ED9               	movwf	fsr2l,c
 25713  018BF2  50E2               	movf	fsr1h,w,c
 25714  018BF4  6EDA               	movwf	fsr2h,c
 25715  018BF6  0EFF               	movlw	255
 25716  018BF8  22DA               	addwfc	fsr2h,f,c
 25717  018BFA  0EEE               	movlw	-18
 25718  018BFC  50E3               	movf	plusw1,w,c
 25719  018BFE  5CDE               	subwf	postinc2,w,c
 25720  018C00  0EEF               	movlw	-17
 25721  018C02  50E3               	movf	plusw1,w,c
 25722  018C04  58DE               	subwfb	postinc2,w,c
 25723  018C06  0EF0               	movlw	-16
 25724  018C08  50E3               	movf	plusw1,w,c
 25725  018C0A  58DE               	subwfb	postinc2,w,c
 25726  018C0C  0EF1               	movlw	-15
 25727  018C0E  50E3               	movf	plusw1,w,c
 25728  018C10  58DE               	subwfb	postinc2,w,c
 25729  018C12  0EF2               	movlw	-14
 25730  018C14  50E3               	movf	plusw1,w,c
 25731  018C16  58DE               	subwfb	postinc2,w,c
 25732  018C18  0EF3               	movlw	-13
 25733  018C1A  50E3               	movf	plusw1,w,c
 25734  018C1C  58DE               	subwfb	postinc2,w,c
 25735  018C1E  0EF4               	movlw	-12
 25736  018C20  50E3               	movf	plusw1,w,c
 25737  018C22  58DE               	subwfb	postinc2,w,c
 25738  018C24  0EF5               	movlw	-11
 25739  018C26  50E3               	movf	plusw1,w,c
 25740  018C28  58DE               	subwfb	postinc2,w,c
 25741  018C2A  A0D8               	btfss	status,0,c
 25742  018C2C  D01F               	goto	l9030
 25743                           
 25744                           ;stkvar	_divisor @ sp[(-2)+-16]
 25745                           ;stkvar	_dividend @ sp[(-2)+-8]
 25746  018C2E  50E1               	movf	fsr1l,w,c
 25747  018C30  0FF6               	addlw	-10
 25748  018C32  6ED9               	movwf	fsr2l,c
 25749  018C34  50E2               	movf	fsr1h,w,c
 25750  018C36  6EDA               	movwf	fsr2h,c
 25751  018C38  0EFF               	movlw	255
 25752  018C3A  22DA               	addwfc	fsr2h,f,c
 25753  018C3C  0EEE               	movlw	-18
 25754  018C3E  50E3               	movf	plusw1,w,c
 25755  018C40  5EDE               	subwf	postinc2,f,c
 25756  018C42  0EEF               	movlw	-17
 25757  018C44  50E3               	movf	plusw1,w,c
 25758  018C46  5ADE               	subwfb	postinc2,f,c
 25759  018C48  0EF0               	movlw	-16
 25760  018C4A  50E3               	movf	plusw1,w,c
 25761  018C4C  5ADE               	subwfb	postinc2,f,c
 25762  018C4E  0EF1               	movlw	-15
 25763  018C50  50E3               	movf	plusw1,w,c
 25764  018C52  5ADE               	subwfb	postinc2,f,c
 25765  018C54  0EF2               	movlw	-14
 25766  018C56  50E3               	movf	plusw1,w,c
 25767  018C58  5ADE               	subwfb	postinc2,f,c
 25768  018C5A  0EF3               	movlw	-13
 25769  018C5C  50E3               	movf	plusw1,w,c
 25770  018C5E  5ADE               	subwfb	postinc2,f,c
 25771  018C60  0EF4               	movlw	-12
 25772  018C62  50E3               	movf	plusw1,w,c
 25773  018C64  5ADE               	subwfb	postinc2,f,c
 25774  018C66  0EF5               	movlw	-11
 25775  018C68  50E3               	movf	plusw1,w,c
 25776  018C6A  5ADE               	subwfb	postinc2,f,c
 25777  018C6C                     l9030:
 25778                           
 25779                           ;stkvar	_divisor @ sp[(-2)+-16]
 25780  018C6C  90D8               	bcf	status,0,c
 25781  018C6E  0EF5               	movlw	-11
 25782  018C70  32E3               	rrcf	plusw1,f,c
 25783  018C72  0EF4               	movlw	-12
 25784  018C74  32E3               	rrcf	plusw1,f,c
 25785  018C76  0EF3               	movlw	-13
 25786  018C78  32E3               	rrcf	plusw1,f,c
 25787  018C7A  0EF2               	movlw	-14
 25788  018C7C  32E3               	rrcf	plusw1,f,c
 25789  018C7E  0EF1               	movlw	-15
 25790  018C80  32E3               	rrcf	plusw1,f,c
 25791  018C82  0EF0               	movlw	-16
 25792  018C84  32E3               	rrcf	plusw1,f,c
 25793  018C86  0EEF               	movlw	-17
 25794  018C88  32E3               	rrcf	plusw1,f,c
 25795  018C8A  0EEE               	movlw	-18
 25796  018C8C  32E3               	rrcf	plusw1,f,c
 25797                           
 25798                           ;stkvar	_counter @ sp[(-2)+1]
 25799  018C8E  0EFF               	movlw	-1
 25800  018C90  50E3               	movf	plusw1,w,c
 25801  018C92  6E01               	movwf	btemp^0,c
 25802  018C94  0E01               	movlw	1
 25803  018C96  5E01               	subwf	btemp^0,f,c
 25804  018C98  0EFF               	movlw	-1
 25805  018C9A  0060  F007  FFE3   	movff	btemp,plusw1
 25806  018CA0  A4D8               	btfss	status,2,c
 25807  018CA2  D7A4               	goto	u7110
 25808  018CA4                     u7130:
 25809                           
 25810                           ;stkvar	_sign @ sp[(-2)+0]
 25811  018CA4  0EFE               	movlw	-2
 25812  018CA6  50E3               	movf	plusw1,w,c
 25813  018CA8  B4D8               	btfsc	status,2,c
 25814  018CAA  D025               	goto	u7150
 25815                           
 25816                           ;stkvar	_dividend @ sp[(-2)+-8]
 25817                           ;stkvar	_dividend @ sp[(-2)+-8]
 25818  018CAC  0EF6               	movlw	-10
 25819  018CAE  6CE3               	negf	plusw1,c
 25820  018CB0  0EF7               	movlw	-9
 25821  018CB2  1EE3               	comf	plusw1,f,c
 25822  018CB4  0EF8               	movlw	-8
 25823  018CB6  1EE3               	comf	plusw1,f,c
 25824  018CB8  0EF9               	movlw	-7
 25825  018CBA  1EE3               	comf	plusw1,f,c
 25826  018CBC  0EFA               	movlw	-6
 25827  018CBE  1EE3               	comf	plusw1,f,c
 25828  018CC0  0EFB               	movlw	-5
 25829  018CC2  1EE3               	comf	plusw1,f,c
 25830  018CC4  0EFC               	movlw	-4
 25831  018CC6  1EE3               	comf	plusw1,f,c
 25832  018CC8  0EFD               	movlw	-3
 25833  018CCA  1EE3               	comf	plusw1,f,c
 25834  018CCC  E314               	bnc	u7150
 25835  018CCE  0EF7               	movlw	-9
 25836  018CD0  2AE3               	incf	plusw1,f,c
 25837  018CD2  E311               	bnc	u7150
 25838  018CD4  0EF8               	movlw	-8
 25839  018CD6  2AE3               	incf	plusw1,f,c
 25840  018CD8  E30E               	bnc	u7150
 25841  018CDA  0EF9               	movlw	-7
 25842  018CDC  2AE3               	incf	plusw1,f,c
 25843  018CDE  E30B               	bnc	u7150
 25844  018CE0  0EFA               	movlw	-6
 25845  018CE2  2AE3               	incf	plusw1,f,c
 25846  018CE4  E308               	bnc	u7150
 25847  018CE6  0EFB               	movlw	-5
 25848  018CE8  2AE3               	incf	plusw1,f,c
 25849  018CEA  E305               	bnc	u7150
 25850  018CEC  0EFC               	movlw	-4
 25851  018CEE  2AE3               	incf	plusw1,f,c
 25852  018CF0  E302               	bnc	u7150
 25853  018CF2  0EFD               	movlw	-3
 25854  018CF4  2AE3               	incf	plusw1,f,c
 25855  018CF6                     u7150:
 25856                           
 25857                           ;stkvar	_dividend @ sp[(-2)+-8]
 25858  018CF6  0EF6               	movlw	246
 25859  018CF8  24E1               	addwf	fsr1l,w,c
 25860  018CFA  6ED9               	movwf	fsr2l,c
 25861  018CFC  0EFF               	movlw	255
 25862  018CFE  20E2               	addwfc	fsr1h,w,c
 25863  018D00  6EDA               	movwf	fsr2h,c
 25864                           
 25865                           ;stkvar	?___aomod @ sp[(-2)+-8]
 25866  018D02  0E08               	movlw	8
 25867  018D04  6E01               	movwf	btemp^0,c
 25868  018D06  0EF6               	movlw	-10
 25869  018D08                     us716999:
 25870  018D08  006F FF7B FFE3     	movff	postinc2,plusw1
 25871  018D0E  28E8               	incf	wreg,w,c
 25872  018D10  2E01               	decfsz	btemp^0,f,c
 25873  018D12  D7FA               	bra	us716999
 25874                           
 25875                           ; ___aomod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 25876  018D14  52E5               	movf	postdec1,f,c
 25877  018D16  52E5               	movf	postdec1,f,c
 25878  018D18  0012               	return		;funcret
 25879  018D1A                     __end_of___aomod:
 25880                           	opt callstack 0
 25881                           
 25882 ;; *************** function ___aodiv *****************
 25883 ;; Defined at:
 25884 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aodiv.c"
 25885 ;; Parameters:    Size  Location     Type
 25886 ;;  dividend        8  [STACK] long long 
 25887 ;;  divisor         8  [STACK] long long 
 25888 ;; Auto vars:     Size  Location     Type
 25889 ;;  quotient        8  [STACK] long long 
 25890 ;;  sign            1  [STACK] unsigned char 
 25891 ;;  counter         1  [STACK] unsigned char 
 25892 ;; Return value:  Size  Location     Type
 25893 ;;                  8  [STACK] long long 
 25894 ;; Registers used:
 25895 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 25896 ;; Tracked objects:
 25897 ;;		On entry : 0/3
 25898 ;;		On exit  : 0/0
 25899 ;;		Unchanged: 0/0
 25900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25901 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25902 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25903 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25904 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25905 ;;Total ram usage:        0 bytes
 25906 ;; Hardware stack levels used:    1
 25907 ;; Hardware stack levels required when called:   15
 25908 ;; This function calls:
 25909 ;;		Nothing
 25910 ;; This function is called by:
 25911 ;;		_dtoa
 25912 ;; This function uses a reentrant model
 25913 ;;
 25914                           
 25915                           	psect	text92
 25916  0183A0                     __ptext92:
 25917                           	opt callstack 0
 25918  0183A0                     ___aodiv:
 25919                           	opt callstack 0
 25920                           
 25921                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 
      +                          vargsize = 0, retsize = 8 argfudge = 0
 25922  0183A0  0E0A               	movlw	10
 25923  0183A2  26E1               	addwf	fsr1l,f,c
 25924  0183A4  0E00               	movlw	0
 25925  0183A6  22E2               	addwfc	fsr1h,f,c
 25926                           
 25927                           ;stkvar	_sign @ sp[(-10)+8]
 25928                           
 25929                           ;incstack = 0
 25930 ;; hardware stack exceeded
 25931  0183A8  0EFE               	movlw	-2
 25932  0183AA  6AE3               	clrf	plusw1,c
 25933                           
 25934                           ;stkvar	_divisor @ sp[(-10)+-16]
 25935  0183AC  0EED               	movlw	-19
 25936  0183AE  AEE3               	btfss	plusw1,7,c
 25937  0183B0  D028               	goto	l8970
 25938                           
 25939                           ;stkvar	_divisor @ sp[(-10)+-16]
 25940                           ;stkvar	_divisor @ sp[(-10)+-16]
 25941  0183B2  0EE6               	movlw	-26
 25942  0183B4  6CE3               	negf	plusw1,c
 25943  0183B6  0EE7               	movlw	-25
 25944  0183B8  1EE3               	comf	plusw1,f,c
 25945  0183BA  0EE8               	movlw	-24
 25946  0183BC  1EE3               	comf	plusw1,f,c
 25947  0183BE  0EE9               	movlw	-23
 25948  0183C0  1EE3               	comf	plusw1,f,c
 25949  0183C2  0EEA               	movlw	-22
 25950  0183C4  1EE3               	comf	plusw1,f,c
 25951  0183C6  0EEB               	movlw	-21
 25952  0183C8  1EE3               	comf	plusw1,f,c
 25953  0183CA  0EEC               	movlw	-20
 25954  0183CC  1EE3               	comf	plusw1,f,c
 25955  0183CE  0EED               	movlw	-19
 25956  0183D0  1EE3               	comf	plusw1,f,c
 25957  0183D2  E314               	bnc	u6950
 25958  0183D4  0EE7               	movlw	-25
 25959  0183D6  2AE3               	incf	plusw1,f,c
 25960  0183D8  E311               	bnc	u6950
 25961  0183DA  0EE8               	movlw	-24
 25962  0183DC  2AE3               	incf	plusw1,f,c
 25963  0183DE  E30E               	bnc	u6950
 25964  0183E0  0EE9               	movlw	-23
 25965  0183E2  2AE3               	incf	plusw1,f,c
 25966  0183E4  E30B               	bnc	u6950
 25967  0183E6  0EEA               	movlw	-22
 25968  0183E8  2AE3               	incf	plusw1,f,c
 25969  0183EA  E308               	bnc	u6950
 25970  0183EC  0EEB               	movlw	-21
 25971  0183EE  2AE3               	incf	plusw1,f,c
 25972  0183F0  E305               	bnc	u6950
 25973  0183F2  0EEC               	movlw	-20
 25974  0183F4  2AE3               	incf	plusw1,f,c
 25975  0183F6  E302               	bnc	u6950
 25976  0183F8  0EED               	movlw	-19
 25977  0183FA  2AE3               	incf	plusw1,f,c
 25978  0183FC                     u6950:
 25979                           
 25980                           ;stkvar	_sign @ sp[(-10)+8]
 25981  0183FC  0EFE               	movlw	-2
 25982  0183FE  6AE3               	clrf	plusw1,c
 25983  018400  2AE3               	incf	plusw1,f,c
 25984  018402                     l8970:
 25985                           
 25986                           ;stkvar	_dividend @ sp[(-10)+-8]
 25987  018402  0EF5               	movlw	-11
 25988  018404  AEE3               	btfss	plusw1,7,c
 25989  018406  D027               	goto	l8976
 25990                           
 25991                           ;stkvar	_dividend @ sp[(-10)+-8]
 25992                           ;stkvar	_dividend @ sp[(-10)+-8]
 25993  018408  0EEE               	movlw	-18
 25994  01840A  6CE3               	negf	plusw1,c
 25995  01840C  0EEF               	movlw	-17
 25996  01840E  1EE3               	comf	plusw1,f,c
 25997  018410  0EF0               	movlw	-16
 25998  018412  1EE3               	comf	plusw1,f,c
 25999  018414  0EF1               	movlw	-15
 26000  018416  1EE3               	comf	plusw1,f,c
 26001  018418  0EF2               	movlw	-14
 26002  01841A  1EE3               	comf	plusw1,f,c
 26003  01841C  0EF3               	movlw	-13
 26004  01841E  1EE3               	comf	plusw1,f,c
 26005  018420  0EF4               	movlw	-12
 26006  018422  1EE3               	comf	plusw1,f,c
 26007  018424  0EF5               	movlw	-11
 26008  018426  1EE3               	comf	plusw1,f,c
 26009  018428  E314               	bnc	u6970
 26010  01842A  0EEF               	movlw	-17
 26011  01842C  2AE3               	incf	plusw1,f,c
 26012  01842E  E311               	bnc	u6970
 26013  018430  0EF0               	movlw	-16
 26014  018432  2AE3               	incf	plusw1,f,c
 26015  018434  E30E               	bnc	u6970
 26016  018436  0EF1               	movlw	-15
 26017  018438  2AE3               	incf	plusw1,f,c
 26018  01843A  E30B               	bnc	u6970
 26019  01843C  0EF2               	movlw	-14
 26020  01843E  2AE3               	incf	plusw1,f,c
 26021  018440  E308               	bnc	u6970
 26022  018442  0EF3               	movlw	-13
 26023  018444  2AE3               	incf	plusw1,f,c
 26024  018446  E305               	bnc	u6970
 26025  018448  0EF4               	movlw	-12
 26026  01844A  2AE3               	incf	plusw1,f,c
 26027  01844C  E302               	bnc	u6970
 26028  01844E  0EF5               	movlw	-11
 26029  018450  2AE3               	incf	plusw1,f,c
 26030  018452                     u6970:
 26031                           
 26032                           ;stkvar	_sign @ sp[(-10)+8]
 26033  018452  0EFE               	movlw	-2
 26034  018454  70E3               	btg	plusw1,0,c
 26035  018456                     l8976:
 26036                           
 26037                           ;stkvar	_quotient @ sp[(-10)+0]
 26038  018456  0E07               	movlw	7
 26039  018458  6E01               	movwf	btemp^0,c
 26040  01845A  0EF6               	movlw	-10
 26041  01845C                     u6981:
 26042  01845C  6AE3               	clrf	plusw1,c
 26043  01845E  2AE8               	incf	wreg,f,c
 26044  018460  0601               	decf	btemp^0,f,c
 26045  018462  E2FC               	bc	u6981
 26046                           
 26047                           ;stkvar	_divisor @ sp[(-10)+-16]
 26048  018464  0EE6               	movlw	-26
 26049  018466  50E3               	movf	plusw1,w,c
 26050  018468  E116               	bnz	u6990
 26051  01846A  0EE7               	movlw	-25
 26052  01846C  50E3               	movf	plusw1,w,c
 26053  01846E  E113               	bnz	u6990
 26054  018470  0EE8               	movlw	-24
 26055  018472  50E3               	movf	plusw1,w,c
 26056  018474  E110               	bnz	u6990
 26057  018476  0EE9               	movlw	-23
 26058  018478  50E3               	movf	plusw1,w,c
 26059  01847A  E10D               	bnz	u6990
 26060  01847C  0EEA               	movlw	-22
 26061  01847E  50E3               	movf	plusw1,w,c
 26062  018480  E10A               	bnz	u6990
 26063  018482  0EEB               	movlw	-21
 26064  018484  50E3               	movf	plusw1,w,c
 26065  018486  E107               	bnz	u6990
 26066  018488  0EEC               	movlw	-20
 26067  01848A  50E3               	movf	plusw1,w,c
 26068  01848C  E104               	bnz	u6990
 26069  01848E  0EED               	movlw	-19
 26070  018490  50E3               	movf	plusw1,w,c
 26071  018492  B4D8               	btfsc	status,2,c
 26072  018494  D088               	goto	u7020
 26073  018496                     u6990:
 26074                           
 26075                           ;stkvar	_counter @ sp[(-10)+9]
 26076  018496  0EFF               	movlw	-1
 26077  018498  6AE3               	clrf	plusw1,c
 26078  01849A  D012               	goto	L32
 26079  01849C                     l8982:
 26080                           
 26081                           ;stkvar	_divisor @ sp[(-10)+-16]
 26082  01849C  90D8               	bcf	status,0,c
 26083  01849E  0EE6               	movlw	-26
 26084  0184A0  36E3               	rlcf	plusw1,f,c
 26085  0184A2  0EE7               	movlw	-25
 26086  0184A4  36E3               	rlcf	plusw1,f,c
 26087  0184A6  0EE8               	movlw	-24
 26088  0184A8  36E3               	rlcf	plusw1,f,c
 26089  0184AA  0EE9               	movlw	-23
 26090  0184AC  36E3               	rlcf	plusw1,f,c
 26091  0184AE  0EEA               	movlw	-22
 26092  0184B0  36E3               	rlcf	plusw1,f,c
 26093  0184B2  0EEB               	movlw	-21
 26094  0184B4  36E3               	rlcf	plusw1,f,c
 26095  0184B6  0EEC               	movlw	-20
 26096  0184B8  36E3               	rlcf	plusw1,f,c
 26097  0184BA  0EED               	movlw	-19
 26098  0184BC  36E3               	rlcf	plusw1,f,c
 26099                           
 26100                           ;stkvar	_counter @ sp[(-10)+9]
 26101  0184BE  0EFF               	movlw	-1
 26102  0184C0                     L32:
 26103  0184C0  2AE3               	incf	plusw1,f,c
 26104                           
 26105                           ;stkvar	_divisor @ sp[(-10)+-16]
 26106  0184C2  0EED               	movlw	-19
 26107  0184C4  AEE3               	btfss	plusw1,7,c
 26108  0184C6  D7EA               	goto	l8982
 26109  0184C8                     u7000:
 26110                           
 26111                           ;stkvar	_quotient @ sp[(-10)+0]
 26112  0184C8  90D8               	bcf	status,0,c
 26113  0184CA  0EF6               	movlw	-10
 26114  0184CC  36E3               	rlcf	plusw1,f,c
 26115  0184CE  0EF7               	movlw	-9
 26116  0184D0  36E3               	rlcf	plusw1,f,c
 26117  0184D2  0EF8               	movlw	-8
 26118  0184D4  36E3               	rlcf	plusw1,f,c
 26119  0184D6  0EF9               	movlw	-7
 26120  0184D8  36E3               	rlcf	plusw1,f,c
 26121  0184DA  0EFA               	movlw	-6
 26122  0184DC  36E3               	rlcf	plusw1,f,c
 26123  0184DE  0EFB               	movlw	-5
 26124  0184E0  36E3               	rlcf	plusw1,f,c
 26125  0184E2  0EFC               	movlw	-4
 26126  0184E4  36E3               	rlcf	plusw1,f,c
 26127  0184E6  0EFD               	movlw	-3
 26128  0184E8  36E3               	rlcf	plusw1,f,c
 26129                           
 26130                           ;stkvar	_divisor @ sp[(-10)+-16]
 26131                           ;stkvar	_dividend @ sp[(-10)+-8]
 26132  0184EA  50E1               	movf	fsr1l,w,c
 26133  0184EC  0FEE               	addlw	-18
 26134  0184EE  6ED9               	movwf	fsr2l,c
 26135  0184F0  50E2               	movf	fsr1h,w,c
 26136  0184F2  6EDA               	movwf	fsr2h,c
 26137  0184F4  0EFF               	movlw	255
 26138  0184F6  22DA               	addwfc	fsr2h,f,c
 26139  0184F8  0EE6               	movlw	-26
 26140  0184FA  50E3               	movf	plusw1,w,c
 26141  0184FC  5CDE               	subwf	postinc2,w,c
 26142  0184FE  0EE7               	movlw	-25
 26143  018500  50E3               	movf	plusw1,w,c
 26144  018502  58DE               	subwfb	postinc2,w,c
 26145  018504  0EE8               	movlw	-24
 26146  018506  50E3               	movf	plusw1,w,c
 26147  018508  58DE               	subwfb	postinc2,w,c
 26148  01850A  0EE9               	movlw	-23
 26149  01850C  50E3               	movf	plusw1,w,c
 26150  01850E  58DE               	subwfb	postinc2,w,c
 26151  018510  0EEA               	movlw	-22
 26152  018512  50E3               	movf	plusw1,w,c
 26153  018514  58DE               	subwfb	postinc2,w,c
 26154  018516  0EEB               	movlw	-21
 26155  018518  50E3               	movf	plusw1,w,c
 26156  01851A  58DE               	subwfb	postinc2,w,c
 26157  01851C  0EEC               	movlw	-20
 26158  01851E  50E3               	movf	plusw1,w,c
 26159  018520  58DE               	subwfb	postinc2,w,c
 26160  018522  0EED               	movlw	-19
 26161  018524  50E3               	movf	plusw1,w,c
 26162  018526  58DE               	subwfb	postinc2,w,c
 26163  018528  A0D8               	btfss	status,0,c
 26164  01852A  D021               	goto	l8994
 26165                           
 26166                           ;stkvar	_divisor @ sp[(-10)+-16]
 26167                           ;stkvar	_dividend @ sp[(-10)+-8]
 26168  01852C  50E1               	movf	fsr1l,w,c
 26169  01852E  0FEE               	addlw	-18
 26170  018530  6ED9               	movwf	fsr2l,c
 26171  018532  50E2               	movf	fsr1h,w,c
 26172  018534  6EDA               	movwf	fsr2h,c
 26173  018536  0EFF               	movlw	255
 26174  018538  22DA               	addwfc	fsr2h,f,c
 26175  01853A  0EE6               	movlw	-26
 26176  01853C  50E3               	movf	plusw1,w,c
 26177  01853E  5EDE               	subwf	postinc2,f,c
 26178  018540  0EE7               	movlw	-25
 26179  018542  50E3               	movf	plusw1,w,c
 26180  018544  5ADE               	subwfb	postinc2,f,c
 26181  018546  0EE8               	movlw	-24
 26182  018548  50E3               	movf	plusw1,w,c
 26183  01854A  5ADE               	subwfb	postinc2,f,c
 26184  01854C  0EE9               	movlw	-23
 26185  01854E  50E3               	movf	plusw1,w,c
 26186  018550  5ADE               	subwfb	postinc2,f,c
 26187  018552  0EEA               	movlw	-22
 26188  018554  50E3               	movf	plusw1,w,c
 26189  018556  5ADE               	subwfb	postinc2,f,c
 26190  018558  0EEB               	movlw	-21
 26191  01855A  50E3               	movf	plusw1,w,c
 26192  01855C  5ADE               	subwfb	postinc2,f,c
 26193  01855E  0EEC               	movlw	-20
 26194  018560  50E3               	movf	plusw1,w,c
 26195  018562  5ADE               	subwfb	postinc2,f,c
 26196  018564  0EED               	movlw	-19
 26197  018566  50E3               	movf	plusw1,w,c
 26198  018568  5ADE               	subwfb	postinc2,f,c
 26199                           
 26200                           ;stkvar	_quotient @ sp[(-10)+0]
 26201  01856A  0EF6               	movlw	-10
 26202  01856C  80E3               	bsf	plusw1,0,c
 26203  01856E                     l8994:
 26204                           
 26205                           ;stkvar	_divisor @ sp[(-10)+-16]
 26206  01856E  90D8               	bcf	status,0,c
 26207  018570  0EED               	movlw	-19
 26208  018572  32E3               	rrcf	plusw1,f,c
 26209  018574  0EEC               	movlw	-20
 26210  018576  32E3               	rrcf	plusw1,f,c
 26211  018578  0EEB               	movlw	-21
 26212  01857A  32E3               	rrcf	plusw1,f,c
 26213  01857C  0EEA               	movlw	-22
 26214  01857E  32E3               	rrcf	plusw1,f,c
 26215  018580  0EE9               	movlw	-23
 26216  018582  32E3               	rrcf	plusw1,f,c
 26217  018584  0EE8               	movlw	-24
 26218  018586  32E3               	rrcf	plusw1,f,c
 26219  018588  0EE7               	movlw	-25
 26220  01858A  32E3               	rrcf	plusw1,f,c
 26221  01858C  0EE6               	movlw	-26
 26222  01858E  32E3               	rrcf	plusw1,f,c
 26223                           
 26224                           ;stkvar	_counter @ sp[(-10)+9]
 26225  018590  0EFF               	movlw	-1
 26226  018592  50E3               	movf	plusw1,w,c
 26227  018594  6E01               	movwf	btemp^0,c
 26228  018596  0E01               	movlw	1
 26229  018598  5E01               	subwf	btemp^0,f,c
 26230  01859A  0EFF               	movlw	-1
 26231  01859C  0060  F007  FFE3   	movff	btemp,plusw1
 26232  0185A2  A4D8               	btfss	status,2,c
 26233  0185A4  D791               	goto	u7000
 26234  0185A6                     u7020:
 26235                           
 26236                           ;stkvar	_sign @ sp[(-10)+8]
 26237  0185A6  0EFE               	movlw	-2
 26238  0185A8  50E3               	movf	plusw1,w,c
 26239  0185AA  B4D8               	btfsc	status,2,c
 26240  0185AC  D025               	goto	u7040
 26241                           
 26242                           ;stkvar	_quotient @ sp[(-10)+0]
 26243                           ;stkvar	_quotient @ sp[(-10)+0]
 26244  0185AE  0EF6               	movlw	-10
 26245  0185B0  6CE3               	negf	plusw1,c
 26246  0185B2  0EF7               	movlw	-9
 26247  0185B4  1EE3               	comf	plusw1,f,c
 26248  0185B6  0EF8               	movlw	-8
 26249  0185B8  1EE3               	comf	plusw1,f,c
 26250  0185BA  0EF9               	movlw	-7
 26251  0185BC  1EE3               	comf	plusw1,f,c
 26252  0185BE  0EFA               	movlw	-6
 26253  0185C0  1EE3               	comf	plusw1,f,c
 26254  0185C2  0EFB               	movlw	-5
 26255  0185C4  1EE3               	comf	plusw1,f,c
 26256  0185C6  0EFC               	movlw	-4
 26257  0185C8  1EE3               	comf	plusw1,f,c
 26258  0185CA  0EFD               	movlw	-3
 26259  0185CC  1EE3               	comf	plusw1,f,c
 26260  0185CE  E314               	bnc	u7040
 26261  0185D0  0EF7               	movlw	-9
 26262  0185D2  2AE3               	incf	plusw1,f,c
 26263  0185D4  E311               	bnc	u7040
 26264  0185D6  0EF8               	movlw	-8
 26265  0185D8  2AE3               	incf	plusw1,f,c
 26266  0185DA  E30E               	bnc	u7040
 26267  0185DC  0EF9               	movlw	-7
 26268  0185DE  2AE3               	incf	plusw1,f,c
 26269  0185E0  E30B               	bnc	u7040
 26270  0185E2  0EFA               	movlw	-6
 26271  0185E4  2AE3               	incf	plusw1,f,c
 26272  0185E6  E308               	bnc	u7040
 26273  0185E8  0EFB               	movlw	-5
 26274  0185EA  2AE3               	incf	plusw1,f,c
 26275  0185EC  E305               	bnc	u7040
 26276  0185EE  0EFC               	movlw	-4
 26277  0185F0  2AE3               	incf	plusw1,f,c
 26278  0185F2  E302               	bnc	u7040
 26279  0185F4  0EFD               	movlw	-3
 26280  0185F6  2AE3               	incf	plusw1,f,c
 26281  0185F8                     u7040:
 26282                           
 26283                           ;stkvar	_quotient @ sp[(-10)+0]
 26284  0185F8  0EF6               	movlw	246
 26285  0185FA  24E1               	addwf	fsr1l,w,c
 26286  0185FC  6ED9               	movwf	fsr2l,c
 26287  0185FE  0EFF               	movlw	255
 26288  018600  20E2               	addwfc	fsr1h,w,c
 26289  018602  6EDA               	movwf	fsr2h,c
 26290                           
 26291                           ;stkvar	?___aodiv @ sp[(-10)+-8]
 26292  018604  0E08               	movlw	8
 26293  018606  6E01               	movwf	btemp^0,c
 26294  018608  0EEE               	movlw	-18
 26295  01860A                     us705999:
 26296  01860A  006F FF7B FFE3     	movff	postinc2,plusw1
 26297  018610  28E8               	incf	wreg,w,c
 26298  018612  2E01               	decfsz	btemp^0,f,c
 26299  018614  D7FA               	bra	us705999
 26300                           
 26301                           ; ___aodiv: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, arg
      +                          size = 16, vargsize = 0
 26302  018616  0EF6               	movlw	246
 26303  018618  26E1               	addwf	fsr1l,f,c
 26304  01861A  0EFF               	movlw	255
 26305  01861C  22E2               	addwfc	fsr1h,f,c
 26306  01861E  0012               	return		;funcret
 26307  018620                     __end_of___aodiv:
 26308                           	opt callstack 0
 26309                           
 26310 ;; *************** function _ctoa *****************
 26311 ;; Defined at:
 26312 ;;		line 259 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 26313 ;; Parameters:    Size  Location     Type
 26314 ;;  fp              2  [STACK] PTR struct _IO_FILE
 26315 ;;		 -> f(6), NULL(0), 
 26316 ;;  c               1  [STACK] unsigned char 
 26317 ;; Auto vars:     Size  Location     Type
 26318 ;;  w               2  [STACK] int 
 26319 ;;  l               2    0        int 
 26320 ;; Return value:  Size  Location     Type
 26321 ;;                  2  [STACK] int 
 26322 ;; Registers used:
 26323 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 26324 ;; Tracked objects:
 26325 ;;		On entry : 0/0
 26326 ;;		On exit  : 0/0
 26327 ;;		Unchanged: 0/0
 26328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26329 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26330 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26331 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26332 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26333 ;;Total ram usage:        0 bytes
 26334 ;; Hardware stack levels used:    1
 26335 ;; Hardware stack levels required when called:   20
 26336 ;; This function calls:
 26337 ;;		_pad
 26338 ;; This function is called by:
 26339 ;;		_vfpfcnvrt
 26340 ;; This function uses a reentrant model
 26341 ;;
 26342                           
 26343                           	psect	text93
 26344  01C2C2                     __ptext93:
 26345                           	opt callstack 0
 26346  01C2C2                     _ctoa:
 26347                           	opt callstack 0
 26348                           
 26349                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26350  01C2C2  52E6               	movf	postinc1,f,c
 26351  01C2C4  52E6               	movf	postinc1,f,c
 26352                           
 26353                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.10
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
 26354                           
 26355                           ;incstack = 0
 26356 ;; hardware stack exceeded
 26357  01C2C6  503A               	movf	_width^0,w,c
 26358  01C2C8  103B               	iorwf	(_width+1)^0,w,c
 26359  01C2CA  A4D8               	btfss	status,2,c
 26360  01C2CC  D009               	goto	l13374
 26361                           
 26362                           ;stkvar	_w @ sp[(-2)+0]
 26363  01C2CE  0EFE               	movlw	-2
 26364  01C2D0  0060  F0EB  FFE3   	movff	_width,plusw1
 26365  01C2D6  0EFF               	movlw	-1
 26366  01C2D8  0060  F0EF  FFE3   	movff	_width+1,plusw1
 26367  01C2DE  D016               	goto	l13376
 26368  01C2E0                     l13374:
 26369  01C2E0  0EFF               	movlw	255
 26370  01C2E2  6E0B               	movwf	(btemp+10)^0,c
 26371  01C2E4  0EFF               	movlw	255
 26372  01C2E6  6E0C               	movwf	(btemp+11)^0,c
 26373  01C2E8  0060  F0E8  F009   	movff	_width,btemp+8
 26374  01C2EE  0060  F0EC  F00A   	movff	_width+1,btemp+9
 26375  01C2F4  500B               	movf	(btemp+10)^0,w,c
 26376  01C2F6  2609               	addwf	(btemp+8)^0,f,c
 26377  01C2F8  500C               	movf	(btemp+11)^0,w,c
 26378  01C2FA  220A               	addwfc	(btemp+9)^0,f,c
 26379                           
 26380                           ;stkvar	_w @ sp[(-2)+0]
 26381  01C2FC  0EFE               	movlw	-2
 26382  01C2FE  0060  F027  FFE3   	movff	btemp+8,plusw1
 26383  01C304  0EFF               	movlw	-1
 26384  01C306  0060  F02B  FFE3   	movff	btemp+9,plusw1
 26385  01C30C                     l13376:
 26386                           
 26387                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
 26388                           ;stkvar	_c @ sp[(-2)+-3]
 26389  01C30C  0EFB               	movlw	-5
 26390  01C30E  006F FF8C  F354    	movff	plusw1,_dbuf
 26391                           
 26392                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
 26393  01C314  0103               	movlb	3	; () banked
 26394  01C316  6B55               	clrf	(_dbuf+1)& (0+255),b
 26395                           
 26396                           ; BSR set to: 3
 26397                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
 26398                           ;stkvar	_w @ sp[(-2)+0]
 26399  01C318  0EFE               	movlw	-2
 26400  01C31A  006F FF8F FFE6     	movff	plusw1,postinc1
 26401  01C320  006F FF8F FFE6     	movff	plusw1,postinc1
 26402  01C326  0E54               	movlw	low _dbuf
 26403  01C328  6EE6               	movwf	postinc1,c
 26404  01C32A  0E03               	movlw	high _dbuf
 26405  01C32C  6EE6               	movwf	postinc1,c
 26406                           
 26407                           ;stkvar	_fp @ sp[(-6)+-2]
 26408  01C32E  0EF8               	movlw	-8
 26409  01C330  006F FF8F FFE6     	movff	plusw1,postinc1
 26410  01C336  006F FF8F FFE6     	movff	plusw1,postinc1
 26411  01C33C  ECC3  F0D6         	call	_pad	;wreg free
 26412                           
 26413                           ; _ctoa: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize 
      +                          = 3, vargsize = 0
 26414  01C340  0EFB               	movlw	251
 26415  01C342  26E1               	addwf	fsr1l,f,c
 26416  01C344  0EFF               	movlw	255
 26417  01C346  22E2               	addwfc	fsr1h,f,c
 26418  01C348  0012               	return		;funcret
 26419  01C34A                     __end_of_ctoa:
 26420                           	opt callstack 0
 26421                           
 26422 ;; *************** function _pad *****************
 26423 ;; Defined at:
 26424 ;;		line 72 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 26425 ;; Parameters:    Size  Location     Type
 26426 ;;  fp              2  [STACK] PTR struct _IO_FILE
 26427 ;;		 -> f(6), NULL(0), 
 26428 ;;  buf             2  [STACK] PTR unsigned char 
 26429 ;;		 -> dbuf(80), 
 26430 ;;  p               2  [STACK] int 
 26431 ;; Auto vars:     Size  Location     Type
 26432 ;;  w               2  [STACK] int 
 26433 ;;  i               2  [STACK] int 
 26434 ;; Return value:  Size  Location     Type
 26435 ;;                  2  [STACK] int 
 26436 ;; Registers used:
 26437 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 26438 ;; Tracked objects:
 26439 ;;		On entry : 0/3
 26440 ;;		On exit  : 0/0
 26441 ;;		Unchanged: 0/0
 26442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26443 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26444 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26445 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26446 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26447 ;;Total ram usage:        0 bytes
 26448 ;; Hardware stack levels used:    1
 26449 ;; Hardware stack levels required when called:   19
 26450 ;; This function calls:
 26451 ;;		_fputc
 26452 ;;		_fputs
 26453 ;;		_strlen
 26454 ;; This function is called by:
 26455 ;;		_ctoa
 26456 ;;		_dtoa
 26457 ;;		_efgtoa
 26458 ;;		_utoa
 26459 ;;		_xtoa
 26460 ;; This function uses a reentrant model
 26461 ;;
 26462                           
 26463                           	psect	text94
 26464  01AD86                     __ptext94:
 26465                           	opt callstack 0
 26466  01AD86                     _pad:
 26467                           	opt callstack 0
 26468                           
 26469                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26470  01AD86  52E6               	movf	postinc1,f,c
 26471  01AD88  52E6               	movf	postinc1,f,c
 26472  01AD8A  52E6               	movf	postinc1,f,c
 26473  01AD8C  52E6               	movf	postinc1,f,c
 26474                           
 26475                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.10/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
 26476                           
 26477                           ;incstack = 0
 26478 ;; hardware stack exceeded
 26479  01AD8E  A03E               	btfss	_flags^0,0,c
 26480  01AD90  D010               	goto	l13336
 26481                           
 26482                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
 26483                           ;stkvar	_fp @ sp[(-4)+-2]
 26484  01AD92  0EFA               	movlw	-6
 26485  01AD94  006F FF8F FFE6     	movff	plusw1,postinc1
 26486  01AD9A  006F FF8F FFE6     	movff	plusw1,postinc1
 26487                           
 26488                           ;stkvar	_buf @ sp[(-6)+-4]
 26489  01ADA0  0EF6               	movlw	-10
 26490  01ADA2  006F FF8F FFE6     	movff	plusw1,postinc1
 26491  01ADA8  006F FF8F FFE6     	movff	plusw1,postinc1
 26492  01ADAE  ECA6  F0DF         	call	_fputs	;wreg free
 26493  01ADB2                     l13336:
 26494                           
 26495                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
 26496                           ;stkvar	_p @ sp[(-4)+-6]
 26497  01ADB2  0EF7               	movlw	-9
 26498  01ADB4  BEE3               	btfsc	plusw1,7,c
 26499  01ADB6  D011               	goto	l13340
 26500                           
 26501                           ;stkvar	_p @ sp[(-4)+-6]
 26502                           ;stkvar	_w @ sp[(-4)+0]
 26503  01ADB8  0EF6               	movlw	-10
 26504  01ADBA  006F FF8C  F001    	movff	plusw1,btemp
 26505  01ADC0  0EFC               	movlw	-4
 26506  01ADC2  0060  F007  FFE3   	movff	btemp,plusw1
 26507  01ADC8  0EF7               	movlw	-9
 26508  01ADCA  006F FF8C  F001    	movff	plusw1,btemp
 26509  01ADD0  0EFD               	movlw	-3
 26510  01ADD2  0060  F007  FFE3   	movff	btemp,plusw1
 26511  01ADD8  D004               	goto	l2426
 26512  01ADDA                     l13340:
 26513                           
 26514                           ;stkvar	_w @ sp[(-4)+0]
 26515  01ADDA  0EFC               	movlw	-4
 26516  01ADDC  6AE3               	clrf	plusw1,c
 26517  01ADDE  0EFD               	movlw	-3
 26518  01ADE0  6AE3               	clrf	plusw1,c
 26519  01ADE2                     l2426:
 26520                           
 26521                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 26522                           ;stkvar	_i @ sp[(-4)+2]
 26523  01ADE2  0EFE               	movlw	-2
 26524  01ADE4  6AE3               	clrf	plusw1,c
 26525  01ADE6  0EFF               	movlw	-1
 26526  01ADE8  6AE3               	clrf	plusw1,c
 26527                           
 26528                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 26529  01ADEA  D01E               	goto	l13346
 26530  01ADEC                     l13342:
 26531                           
 26532                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
 26533                           ;stkvar	_fp @ sp[(-4)+-2]
 26534  01ADEC  0EFA               	movlw	-6
 26535  01ADEE  006F FF8F FFE6     	movff	plusw1,postinc1
 26536  01ADF4  006F FF8F FFE6     	movff	plusw1,postinc1
 26537  01ADFA  0E20               	movlw	32
 26538  01ADFC  6EE6               	movwf	postinc1,c
 26539  01ADFE  0E00               	movlw	0
 26540  01AE00  6EE6               	movwf	postinc1,c
 26541  01AE02  EC88  F0D4         	call	_fputc	;wreg free
 26542                           
 26543                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 86:         ++i;
 26544                           ;stkvar	_i @ sp[(-4)+2]
 26545  01AE06  0EFE               	movlw	-2
 26546  01AE08  50E3               	movf	plusw1,w,c
 26547  01AE0A  0F01               	addlw	1
 26548  01AE0C  6E01               	movwf	btemp^0,c
 26549  01AE0E  0EFE               	movlw	-2
 26550  01AE10  0060  F007  FFE3   	movff	btemp,plusw1
 26551  01AE16  6A01               	clrf	btemp^0,c
 26552  01AE18  0EFF               	movlw	-1
 26553  01AE1A  50E3               	movf	plusw1,w,c
 26554  01AE1C  2001               	addwfc	btemp^0,w,c
 26555  01AE1E  6E01               	movwf	btemp^0,c
 26556  01AE20  0EFF               	movlw	-1
 26557  01AE22  0060  F007  FFE3   	movff	btemp,plusw1
 26558  01AE28                     l13346:
 26559                           
 26560                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 26561                           ;stkvar	_w @ sp[(-4)+0]
 26562                           ;stkvar	_i @ sp[(-4)+2]
 26563  01AE28  50E1               	movf	fsr1l,w,c
 26564  01AE2A  0FFE               	addlw	-2
 26565  01AE2C  6ED9               	movwf	fsr2l,c
 26566  01AE2E  50E2               	movf	fsr1h,w,c
 26567  01AE30  6EDA               	movwf	fsr2h,c
 26568  01AE32  0EFF               	movlw	255
 26569  01AE34  22DA               	addwfc	fsr2h,f,c
 26570  01AE36  0EFC               	movlw	-4
 26571  01AE38  50E3               	movf	plusw1,w,c
 26572  01AE3A  5CDE               	subwf	postinc2,w,c
 26573  01AE3C  50DE               	movf	postinc2,w,c
 26574  01AE3E  0A80               	xorlw	128
 26575  01AE40  6E01               	movwf	btemp^0,c
 26576  01AE42  0EFD               	movlw	-3
 26577  01AE44  50E3               	movf	plusw1,w,c
 26578  01AE46  0A80               	xorlw	128
 26579  01AE48  5801               	subwfb	btemp^0,w,c
 26580  01AE4A  A0D8               	btfss	status,0,c
 26581  01AE4C  D7CF               	goto	l13342
 26582                           
 26583                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
 26584  01AE4E  B03E               	btfsc	_flags^0,0,c
 26585  01AE50  D010               	goto	l13350
 26586                           
 26587                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
 26588                           ;stkvar	_fp @ sp[(-4)+-2]
 26589  01AE52  0EFA               	movlw	-6
 26590  01AE54  006F FF8F FFE6     	movff	plusw1,postinc1
 26591  01AE5A  006F FF8F FFE6     	movff	plusw1,postinc1
 26592                           
 26593                           ;stkvar	_buf @ sp[(-6)+-4]
 26594  01AE60  0EF6               	movlw	-10
 26595  01AE62  006F FF8F FFE6     	movff	plusw1,postinc1
 26596  01AE68  006F FF8F FFE6     	movff	plusw1,postinc1
 26597  01AE6E  ECA6  F0DF         	call	_fputs	;wreg free
 26598  01AE72                     l13350:
 26599                           
 26600                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
 26601                           ;stkvar	_w @ sp[(-4)+0]
 26602                           ;stkvar	_buf @ sp[(-4)+-4]
 26603  01AE72  0EF8               	movlw	-8
 26604  01AE74  006F FF8F FFE6     	movff	plusw1,postinc1
 26605  01AE7A  006F FF8F FFE6     	movff	plusw1,postinc1
 26606  01AE80  EC55  F0DF         	call	_strlen	;wreg free
 26607  01AE84  0EFC               	movlw	-4
 26608  01AE86  50E3               	movf	plusw1,w,c
 26609  01AE88  2601               	addwf	btemp^0,f,c
 26610  01AE8A  0EFD               	movlw	-3
 26611  01AE8C  50E3               	movf	plusw1,w,c
 26612  01AE8E  2202               	addwfc	(btemp+1)^0,f,c
 26613                           
 26614                           ; _pad: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize =
      +                           6, vargsize = 0
 26615  01AE90  0EF6               	movlw	246
 26616  01AE92  26E1               	addwf	fsr1l,f,c
 26617  01AE94  0EFF               	movlw	255
 26618  01AE96  22E2               	addwfc	fsr1h,f,c
 26619  01AE98  0012               	return		;funcret
 26620  01AE9A                     __end_of_pad:
 26621                           	opt callstack 0
 26622                           
 26623 ;; *************** function _strlen *****************
 26624 ;; Defined at:
 26625 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strlen.c"
 26626 ;; Parameters:    Size  Location     Type
 26627 ;;  s               2  [STACK] PTR const unsigned char 
 26628 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 26629 ;;		 -> spin(120), STR_75(9), STR_74(12), D.lcd(480), 
 26630 ;;		 -> D(482), T(144), port_data(512), cp(4), 
 26631 ;;		 -> cb(4), STR_3(5), V(192), 
 26632 ;; Auto vars:     Size  Location     Type
 26633 ;;  a               2  [STACK] PTR const unsigned char 
 26634 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 26635 ;;		 -> spin(120), STR_75(9), STR_74(12), D.lcd(480), 
 26636 ;;		 -> D(482), T(144), port_data(512), cp(4), 
 26637 ;;		 -> cb(4), STR_3(5), V(192), 
 26638 ;; Return value:  Size  Location     Type
 26639 ;;                  2  [STACK] unsigned int 
 26640 ;; Registers used:
 26641 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru
 26642 ;; Tracked objects:
 26643 ;;		On entry : 0/0
 26644 ;;		On exit  : 0/0
 26645 ;;		Unchanged: 0/0
 26646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26647 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26648 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26649 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26650 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26651 ;;Total ram usage:        0 bytes
 26652 ;; Hardware stack levels used:    1
 26653 ;; Hardware stack levels required when called:   15
 26654 ;; This function calls:
 26655 ;;		Nothing
 26656 ;; This function is called by:
 26657 ;;		_eaDogM_WriteString
 26658 ;;		_spinners
 26659 ;;		_calc_bsoc
 26660 ;;		_pad
 26661 ;;		_stoa
 26662 ;; This function uses a reentrant model
 26663 ;;
 26664                           
 26665                           	psect	text95
 26666  01BEAA                     __ptext95:
 26667                           	opt callstack 0
 26668  01BEAA                     _strlen:
 26669                           	opt callstack 0
 26670                           
 26671                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26672  01BEAA  52E6               	movf	postinc1,f,c
 26673  01BEAC  52E6               	movf	postinc1,f,c
 26674                           
 26675                           ;stkvar	_s @ sp[(-2)+-2]
 26676                           
 26677                           ;incstack = 0
 26678 ;; hardware stack exceeded
 26679  01BEAE  0EFC               	movlw	-4
 26680  01BEB0  006F FF8C  F00B    	movff	plusw1,btemp+10
 26681  01BEB6  0EFD               	movlw	-3
 26682  01BEB8  006F FF8C  F00C    	movff	plusw1,btemp+11
 26683                           
 26684                           ;stkvar	_a @ sp[(-2)+0]
 26685  01BEBE  0EFF               	movlw	-1
 26686  01BEC0  0060  F033  FFE3   	movff	btemp+11,plusw1
 26687  01BEC6  0EFE               	movlw	-2
 26688  01BEC8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26689  01BECE  D011               	goto	l13276
 26690  01BED0                     l13274:
 26691                           
 26692                           ;stkvar	_s @ sp[(-2)+-2]
 26693  01BED0  0EFC               	movlw	-4
 26694  01BED2  50E3               	movf	plusw1,w,c
 26695  01BED4  0F01               	addlw	1
 26696  01BED6  6E01               	movwf	btemp^0,c
 26697  01BED8  0EFC               	movlw	-4
 26698  01BEDA  0060  F007  FFE3   	movff	btemp,plusw1
 26699  01BEE0  6A01               	clrf	btemp^0,c
 26700  01BEE2  0EFD               	movlw	-3
 26701  01BEE4  50E3               	movf	plusw1,w,c
 26702  01BEE6  2001               	addwfc	btemp^0,w,c
 26703  01BEE8  6E01               	movwf	btemp^0,c
 26704  01BEEA  0EFD               	movlw	-3
 26705  01BEEC  0060  F007  FFE3   	movff	btemp,plusw1
 26706  01BEF2                     l13276:
 26707                           
 26708                           ;stkvar	_s @ sp[(-2)+-2]
 26709  01BEF2  0EFC               	movlw	-4
 26710  01BEF4  006F FF8F FFF6     	movff	plusw1,tblptrl
 26711  01BEFA  0EFD               	movlw	-3
 26712  01BEFC  006F FF8F FFF7     	movff	plusw1,tblptrh
 26713  01BF02  0E00               	movlw	low (__mediumconst shr (0+16))
 26714  01BF04  6EF8               	movwf	tblptru,c
 26715  01BF06  0E1F               	movlw	(high __ramtop+-1)
 26716  01BF08  64F7               	cpfsgt	tblptrh,c
 26717  01BF0A  D003               	bra	u12067
 26718  01BF0C  0008               	tblrd		*
 26719  01BF0E  50F5               	movf	tablat,w,c
 26720  01BF10  D007               	bra	u12060
 26721  01BF12                     u12067:
 26722  01BF12  006F FFDB FFE9     	movff	tblptrl,fsr0l
 26723  01BF18  006F FFDF FFEA     	movff	tblptrh,fsr0h
 26724  01BF1E  50EF               	movf	indf0,w,c
 26725  01BF20                     u12060:
 26726  01BF20  0900               	iorlw	0
 26727  01BF22  A4D8               	btfss	status,2,c
 26728  01BF24  D7D5               	goto	l13274
 26729                           
 26730                           ;stkvar	_a @ sp[(-2)+0]
 26731                           ;stkvar	_s @ sp[(-2)+-2]
 26732  01BF26  0EFC               	movlw	-4
 26733  01BF28  006F FF8C  F001    	movff	plusw1,btemp
 26734  01BF2E  0EFD               	movlw	-3
 26735  01BF30  006F FF8C  F002    	movff	plusw1,btemp+1
 26736  01BF36  0EFE               	movlw	-2
 26737  01BF38  50E3               	movf	plusw1,w,c
 26738  01BF3A  5E01               	subwf	btemp^0,f,c
 26739  01BF3C  0EFF               	movlw	-1
 26740  01BF3E  50E3               	movf	plusw1,w,c
 26741  01BF40  5A02               	subwfb	(btemp+1)^0,f,c
 26742                           
 26743                           ; _strlen: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 26744  01BF42  52E5               	movf	postdec1,f,c
 26745  01BF44  52E5               	movf	postdec1,f,c
 26746  01BF46  52E5               	movf	postdec1,f,c
 26747  01BF48  52E5               	movf	postdec1,f,c
 26748  01BF4A  0012               	return		;funcret
 26749  01BF4C                     __end_of_strlen:
 26750                           	opt callstack 0
 26751                           
 26752 ;; *************** function _fputs *****************
 26753 ;; Defined at:
 26754 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputs.c"
 26755 ;; Parameters:    Size  Location     Type
 26756 ;;  s               2  [STACK] PTR const unsigned char 
 26757 ;;		 -> dbuf(80), 
 26758 ;;  fp              2  [STACK] PTR struct _IO_FILE
 26759 ;;		 -> f(6), NULL(0), 
 26760 ;; Auto vars:     Size  Location     Type
 26761 ;;  i               2  [STACK] int 
 26762 ;;  c               1  [STACK] unsigned char 
 26763 ;; Return value:  Size  Location     Type
 26764 ;;                  2  [STACK] int 
 26765 ;; Registers used:
 26766 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 26767 ;; Tracked objects:
 26768 ;;		On entry : 0/3
 26769 ;;		On exit  : 0/0
 26770 ;;		Unchanged: 0/0
 26771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26772 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26773 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26774 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26775 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26776 ;;Total ram usage:        0 bytes
 26777 ;; Hardware stack levels used:    1
 26778 ;; Hardware stack levels required when called:   18
 26779 ;; This function calls:
 26780 ;;		_fputc
 26781 ;; This function is called by:
 26782 ;;		_pad
 26783 ;; This function uses a reentrant model
 26784 ;;
 26785                           
 26786                           	psect	text96
 26787  01BF4C                     __ptext96:
 26788                           	opt callstack 0
 26789  01BF4C                     _fputs:
 26790                           	opt callstack 0
 26791                           
 26792                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26793  01BF4C  52E6               	movf	postinc1,f,c
 26794  01BF4E  52E6               	movf	postinc1,f,c
 26795  01BF50  52E6               	movf	postinc1,f,c
 26796                           
 26797                           ;stkvar	_i @ sp[(-3)+0]
 26798                           
 26799                           ;incstack = 0
 26800 ;; hardware stack exceeded
 26801  01BF52  0EFD               	movlw	-3
 26802  01BF54  6AE3               	clrf	plusw1,c
 26803  01BF56  0EFE               	movlw	-2
 26804  01BF58  6AE3               	clrf	plusw1,c
 26805  01BF5A  D01F               	goto	l13288
 26806  01BF5C                     l13284:
 26807                           
 26808                           ;stkvar	_fp @ sp[(-3)+-4]
 26809  01BF5C  0EF9               	movlw	-7
 26810  01BF5E  006F FF8F FFE6     	movff	plusw1,postinc1
 26811  01BF64  006F FF8F FFE6     	movff	plusw1,postinc1
 26812                           
 26813                           ;stkvar	_c @ sp[(-5)+2]
 26814  01BF6A  0EFD               	movlw	-3
 26815  01BF6C  50E3               	movf	plusw1,w,c
 26816  01BF6E  6EE6               	movwf	postinc1,c
 26817  01BF70  0E00               	movlw	0
 26818  01BF72  6EE6               	movwf	postinc1,c
 26819  01BF74  EC88  F0D4         	call	_fputc	;wreg free
 26820                           
 26821                           ;stkvar	_i @ sp[(-3)+0]
 26822  01BF78  0EFD               	movlw	-3
 26823  01BF7A  50E3               	movf	plusw1,w,c
 26824  01BF7C  0F01               	addlw	1
 26825  01BF7E  6E01               	movwf	btemp^0,c
 26826  01BF80  0EFD               	movlw	-3
 26827  01BF82  0060  F007  FFE3   	movff	btemp,plusw1
 26828  01BF88  6A01               	clrf	btemp^0,c
 26829  01BF8A  0EFE               	movlw	-2
 26830  01BF8C  50E3               	movf	plusw1,w,c
 26831  01BF8E  2001               	addwfc	btemp^0,w,c
 26832  01BF90  6E01               	movwf	btemp^0,c
 26833  01BF92  0EFE               	movlw	-2
 26834  01BF94  0060  F007  FFE3   	movff	btemp,plusw1
 26835  01BF9A                     l13288:
 26836                           
 26837                           ;stkvar	_i @ sp[(-3)+0]
 26838  01BF9A  0EFD               	movlw	-3
 26839  01BF9C  006F FF8C  F00B    	movff	plusw1,btemp+10
 26840  01BFA2  0EFE               	movlw	-2
 26841  01BFA4  006F FF8C  F00C    	movff	plusw1,btemp+11
 26842                           
 26843                           ;stkvar	_s @ sp[(-3)+-2]
 26844  01BFAA  0EFB               	movlw	-5
 26845  01BFAC  006F FF8C  F009    	movff	plusw1,btemp+8
 26846  01BFB2  0EFC               	movlw	-4
 26847  01BFB4  006F FF8C  F00A    	movff	plusw1,btemp+9
 26848  01BFBA  500B               	movf	(btemp+10)^0,w,c
 26849  01BFBC  2409               	addwf	(btemp+8)^0,w,c
 26850  01BFBE  6ED9               	movwf	fsr2l,c
 26851  01BFC0  500C               	movf	(btemp+11)^0,w,c
 26852  01BFC2  200A               	addwfc	(btemp+9)^0,w,c
 26853  01BFC4  6EDA               	movwf	fsr2h,c
 26854  01BFC6  50DF               	movf	indf2,w,c
 26855  01BFC8  6E0C               	movwf	(btemp+11)^0,c
 26856                           
 26857                           ;stkvar	_c @ sp[(-3)+2]
 26858  01BFCA  0EFF               	movlw	-1
 26859  01BFCC  0060  F033  FFE3   	movff	btemp+11,plusw1
 26860  01BFD2  0EFF               	movlw	-1
 26861  01BFD4  50E3               	movf	plusw1,w,c
 26862  01BFD6  A4D8               	btfss	status,2,c
 26863  01BFD8  D7C1               	goto	l13284
 26864                           
 26865                           ; _fputs: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 26866  01BFDA  0EF9               	movlw	249
 26867  01BFDC  26E1               	addwf	fsr1l,f,c
 26868  01BFDE  0EFF               	movlw	255
 26869  01BFE0  22E2               	addwfc	fsr1h,f,c
 26870  01BFE2  0012               	return		;funcret
 26871  01BFE4                     __end_of_fputs:
 26872                           	opt callstack 0
 26873                           
 26874 ;; *************** function _fputc *****************
 26875 ;; Defined at:
 26876 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputc.c"
 26877 ;; Parameters:    Size  Location     Type
 26878 ;;  c               2  [STACK] int 
 26879 ;;  fp              2  [STACK] PTR struct _IO_FILE
 26880 ;;		 -> f(6), NULL(0), 
 26881 ;; Auto vars:     Size  Location     Type
 26882 ;;		None
 26883 ;; Return value:  Size  Location     Type
 26884 ;;                  2  [STACK] int 
 26885 ;; Registers used:
 26886 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 26887 ;; Tracked objects:
 26888 ;;		On entry : 0/0
 26889 ;;		On exit  : 0/0
 26890 ;;		Unchanged: 0/0
 26891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26892 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26893 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26894 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26895 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26896 ;;Total ram usage:        0 bytes
 26897 ;; Hardware stack levels used:    1
 26898 ;; Hardware stack levels required when called:   17
 26899 ;; This function calls:
 26900 ;;		_putch
 26901 ;; This function is called by:
 26902 ;;		_pad
 26903 ;;		_stoa
 26904 ;;		_vfpfcnvrt
 26905 ;;		_fputs
 26906 ;; This function uses a reentrant model
 26907 ;;
 26908                           
 26909                           	psect	text97
 26910  01A910                     __ptext97:
 26911                           	opt callstack 0
 26912  01A910                     _fputc:
 26913                           	opt callstack 0
 26914                           
 26915                           ;stkvar	_fp @ sp[(0)+-4]
 26916                           
 26917                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26918                           ;incstack = 0
 26919 ;; hardware stack exceeded
 26920  01A910  0EFC               	movlw	-4
 26921  01A912  006F FF8C  F001    	movff	plusw1,btemp
 26922  01A918  0EFD               	movlw	-3
 26923  01A91A  50E3               	movf	plusw1,w,c
 26924  01A91C  1001               	iorwf	btemp^0,w,c
 26925  01A91E  B4D8               	btfsc	status,2,c
 26926  01A920  D009               	goto	u12030
 26927                           
 26928                           ;stkvar	_fp @ sp[(0)+-4]
 26929  01A922  0EFC               	movlw	-4
 26930  01A924  006F FF8C  F001    	movff	plusw1,btemp
 26931  01A92A  0EFD               	movlw	-3
 26932  01A92C  50E3               	movf	plusw1,w,c
 26933  01A92E  1001               	iorwf	btemp^0,w,c
 26934  01A930  A4D8               	btfss	status,2,c
 26935  01A932  D006               	goto	l13262
 26936  01A934                     u12030:
 26937                           
 26938                           ;stkvar	_c @ sp[(0)+-2]
 26939  01A934  0EFE               	movlw	-2
 26940  01A936  50E3               	movf	plusw1,w,c
 26941  01A938  6EE6               	movwf	postinc1,c
 26942  01A93A  ECC4  F0EC         	call	_putch	;wreg free
 26943  01A93E  D075               	goto	l3472
 26944  01A940                     l13262:
 26945                           
 26946                           ;stkvar	_fp @ sp[(0)+-4]
 26947  01A940  0EFC               	movlw	-4
 26948  01A942  006F FF8C  F00B    	movff	plusw1,btemp+10
 26949  01A948  0EFD               	movlw	-3
 26950  01A94A  006F FF8C  F00C    	movff	plusw1,btemp+11
 26951  01A950  0E04               	movlw	4
 26952  01A952  240B               	addwf	(btemp+10)^0,w,c
 26953  01A954  6ED9               	movwf	fsr2l,c
 26954  01A956  0E00               	movlw	0
 26955  01A958  200C               	addwfc	(btemp+11)^0,w,c
 26956  01A95A  6EDA               	movwf	fsr2h,c
 26957  01A95C  50DE               	movf	postinc2,w,c
 26958  01A95E  10DE               	iorwf	postinc2,w,c
 26959  01A960  B4D8               	btfsc	status,2,c
 26960  01A962  D026               	goto	u12050
 26961                           
 26962                           ;stkvar	_fp @ sp[(0)+-4]
 26963  01A964  0EFC               	movlw	-4
 26964  01A966  006F FF8C  F00B    	movff	plusw1,btemp+10
 26965  01A96C  0EFD               	movlw	-3
 26966  01A96E  006F FF8C  F00C    	movff	plusw1,btemp+11
 26967  01A974  0E04               	movlw	4
 26968  01A976  240B               	addwf	(btemp+10)^0,w,c
 26969  01A978  6ED9               	movwf	fsr2l,c
 26970  01A97A  0E00               	movlw	0
 26971  01A97C  200C               	addwfc	(btemp+11)^0,w,c
 26972  01A97E  6EDA               	movwf	fsr2h,c
 26973                           
 26974                           ;stkvar	_fp @ sp[(0)+-4]
 26975  01A980  0EFC               	movlw	-4
 26976  01A982  006F FF8C  F00B    	movff	plusw1,btemp+10
 26977  01A988  0EFD               	movlw	-3
 26978  01A98A  006F FF8C  F00C    	movff	plusw1,btemp+11
 26979  01A990  0E02               	movlw	2
 26980  01A992  240B               	addwf	(btemp+10)^0,w,c
 26981  01A994  6EE9               	movwf	fsr0l,c
 26982  01A996  0E00               	movlw	0
 26983  01A998  200C               	addwfc	(btemp+11)^0,w,c
 26984  01A99A  6EEA               	movwf	fsr0h,c
 26985  01A99C  50DE               	movf	postinc2,w,c
 26986  01A99E  5CEE               	subwf	postinc0,w,c
 26987  01A9A0  50EE               	movf	postinc0,w,c
 26988  01A9A2  0A80               	xorlw	128
 26989  01A9A4  6E01               	movwf	btemp^0,c
 26990  01A9A6  50DE               	movf	postinc2,w,c
 26991  01A9A8  0A80               	xorlw	128
 26992  01A9AA  5801               	subwfb	btemp^0,w,c
 26993  01A9AC  B0D8               	btfsc	status,0,c
 26994  01A9AE  D03D               	goto	l3472
 26995  01A9B0                     u12050:
 26996                           
 26997                           ;stkvar	_c @ sp[(0)+-2]
 26998                           ;stkvar	_fp @ sp[(0)+-4]
 26999  01A9B0  0EFC               	movlw	-4
 27000  01A9B2  006F FF8C  F00B    	movff	plusw1,btemp+10
 27001  01A9B8  0EFD               	movlw	-3
 27002  01A9BA  006F FF8C  F00C    	movff	plusw1,btemp+11
 27003  01A9C0  0E02               	movlw	2
 27004  01A9C2  240B               	addwf	(btemp+10)^0,w,c
 27005  01A9C4  6ED9               	movwf	fsr2l,c
 27006  01A9C6  0E00               	movlw	0
 27007  01A9C8  200C               	addwfc	(btemp+11)^0,w,c
 27008  01A9CA  6EDA               	movwf	fsr2h,c
 27009  01A9CC  006F FF78  F00B    	movff	postinc2,btemp+10
 27010  01A9D2  006F FF74  F00C    	movff	postdec2,btemp+11
 27011                           
 27012                           ;stkvar	_fp @ sp[(0)+-4]
 27013  01A9D8  0EFC               	movlw	-4
 27014  01A9DA  006F FF8F FFD9     	movff	plusw1,fsr2l
 27015  01A9E0  0EFD               	movlw	-3
 27016  01A9E2  006F FF8F FFDA     	movff	plusw1,fsr2h
 27017  01A9E8  006F FF78  F009    	movff	postinc2,btemp+8
 27018  01A9EE  006F FF74  F00A    	movff	postdec2,btemp+9
 27019  01A9F4  500B               	movf	(btemp+10)^0,w,c
 27020  01A9F6  2409               	addwf	(btemp+8)^0,w,c
 27021  01A9F8  6ED9               	movwf	fsr2l,c
 27022  01A9FA  500C               	movf	(btemp+11)^0,w,c
 27023  01A9FC  200A               	addwfc	(btemp+9)^0,w,c
 27024  01A9FE  6EDA               	movwf	fsr2h,c
 27025  01AA00  0EFE               	movlw	-2
 27026  01AA02  006F FF8F FFDF     	movff	plusw1,indf2
 27027                           
 27028                           ;stkvar	_fp @ sp[(0)+-4]
 27029  01AA08  0EFC               	movlw	-4
 27030  01AA0A  006F FF8C  F00B    	movff	plusw1,btemp+10
 27031  01AA10  0EFD               	movlw	-3
 27032  01AA12  006F FF8C  F00C    	movff	plusw1,btemp+11
 27033  01AA18  0E02               	movlw	2
 27034  01AA1A  240B               	addwf	(btemp+10)^0,w,c
 27035  01AA1C  6ED9               	movwf	fsr2l,c
 27036  01AA1E  0E00               	movlw	0
 27037  01AA20  200C               	addwfc	(btemp+11)^0,w,c
 27038  01AA22  6EDA               	movwf	fsr2h,c
 27039  01AA24  2ADE               	incf	postinc2,f,c
 27040  01AA26  0E00               	movlw	0
 27041  01AA28  22DD               	addwfc	postdec2,f,c
 27042  01AA2A                     l3472:
 27043                           
 27044                           ; _fputc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 27045  01AA2A  52E5               	movf	postdec1,f,c
 27046  01AA2C  52E5               	movf	postdec1,f,c
 27047  01AA2E  52E5               	movf	postdec1,f,c
 27048  01AA30  52E5               	movf	postdec1,f,c
 27049  01AA32  0012               	return		;funcret
 27050  01AA34                     __end_of_fputc:
 27051                           	opt callstack 0
 27052                           
 27053 ;; *************** function _putch *****************
 27054 ;; Defined at:
 27055 ;;		line 421 in file "eadog.c"
 27056 ;; Parameters:    Size  Location     Type
 27057 ;;  c               1  [STACK] unsigned char 
 27058 ;; Auto vars:     Size  Location     Type
 27059 ;;		None
 27060 ;; Return value:  Size  Location     Type
 27061 ;;                  1  [STACK] void 
 27062 ;; Registers used:
 27063 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 27064 ;; Tracked objects:
 27065 ;;		On entry : 0/0
 27066 ;;		On exit  : 0/0
 27067 ;;		Unchanged: 0/0
 27068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27069 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27070 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27071 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27072 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27073 ;;Total ram usage:        0 bytes
 27074 ;; Hardware stack levels used:    1
 27075 ;; Hardware stack levels required when called:   16
 27076 ;; This function calls:
 27077 ;;		_ringBufS_put_dma
 27078 ;; This function is called by:
 27079 ;;		_fputc
 27080 ;; This function uses a reentrant model
 27081 ;;
 27082                           
 27083                           	psect	text98
 27084  01D988                     __ptext98:
 27085                           	opt callstack 0
 27086  01D988                     _putch:
 27087                           	opt callstack 0
 27088                           
 27089                           ;eadog.c: 421: void putch(char c);eadog.c: 422: {;eadog.c: 423:  ringBufS_put_dma(spi_li
      +                          nk.tx1a, c);
 27090                           ;stkvar	_c @ sp[(0)+-1]
 27091                           
 27092                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27093                           ;incstack = 0
 27094 ;; hardware stack exceeded
 27095  01D988  0EFF               	movlw	-1
 27096  01D98A  50E3               	movf	plusw1,w,c
 27097  01D98C  6EE6               	movwf	postinc1,c
 27098  01D98E  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
 27099  01D994  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
 27100  01D99A  EC59  F0DE         	call	_ringBufS_put_dma	;wreg free
 27101                           
 27102                           ; _putch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
 27103  01D99E  52E5               	movf	postdec1,f,c
 27104  01D9A0  0012               	return		;funcret
 27105  01D9A2                     __end_of_putch:
 27106                           	opt callstack 0
 27107                           
 27108 ;; *************** function _ringBufS_put_dma *****************
 27109 ;; Defined at:
 27110 ;;		line 67 in file "ringbufs.c"
 27111 ;; Parameters:    Size  Location     Type
 27112 ;;  _this           2  [STACK] PTR struct ringBufS_t
 27113 ;;		 -> ring_buf1(67), 
 27114 ;;  c               1  [STACK] const unsigned char 
 27115 ;; Auto vars:     Size  Location     Type
 27116 ;;		None
 27117 ;; Return value:  Size  Location     Type
 27118 ;;                  1  [STACK] void 
 27119 ;; Registers used:
 27120 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 27121 ;; Tracked objects:
 27122 ;;		On entry : 0/0
 27123 ;;		On exit  : 0/0
 27124 ;;		Unchanged: 0/0
 27125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27126 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27127 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27129 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27130 ;;Total ram usage:        0 bytes
 27131 ;; Hardware stack levels used:    1
 27132 ;; Hardware stack levels required when called:   15
 27133 ;; This function calls:
 27134 ;;		Nothing
 27135 ;; This function is called by:
 27136 ;;		_putch
 27137 ;; This function uses a reentrant model
 27138 ;;
 27139                           
 27140                           	psect	text99
 27141  01BCB2                     __ptext99:
 27142                           	opt callstack 0
 27143  01BCB2                     _ringBufS_put_dma:
 27144                           	opt callstack 0
 27145                           
 27146                           ;ringbufs.c: 67: void ringBufS_put_dma(ringBufS_t *_this, const uint8_t c);ringbufs.c: 6
      +                          8: {;ringbufs.c: 69:  if (_this->count < 64) {
 27147                           ;stkvar	__this @ sp[(0)+-2]
 27148                           
 27149                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27150                           ;incstack = 0
 27151 ;; hardware stack exceeded
 27152  01BCB2  0EFE               	movlw	-2
 27153  01BCB4  006F FF8C  F00B    	movff	plusw1,btemp+10
 27154  01BCBA  0EFF               	movlw	-1
 27155  01BCBC  006F FF8C  F00C    	movff	plusw1,btemp+11
 27156  01BCC2  0E42               	movlw	66
 27157  01BCC4  240B               	addwf	(btemp+10)^0,w,c
 27158  01BCC6  6ED9               	movwf	fsr2l,c
 27159  01BCC8  0E00               	movlw	0
 27160  01BCCA  200C               	addwfc	(btemp+11)^0,w,c
 27161  01BCCC  6EDA               	movwf	fsr2h,c
 27162  01BCCE  0E40               	movlw	64
 27163  01BCD0  60DF               	cpfslt	indf2,c
 27164  01BCD2  D040               	goto	l1726
 27165                           
 27166                           ;ringbufs.c: 70:   _this->buf[_this->head] = c;
 27167                           ;stkvar	_c @ sp[(0)+-3]
 27168                           ;stkvar	__this @ sp[(0)+-2]
 27169  01BCD4  0EFE               	movlw	-2
 27170  01BCD6  006F FF8C  F00B    	movff	plusw1,btemp+10
 27171  01BCDC  0EFF               	movlw	-1
 27172  01BCDE  006F FF8C  F00C    	movff	plusw1,btemp+11
 27173  01BCE4  0E40               	movlw	64
 27174  01BCE6  240B               	addwf	(btemp+10)^0,w,c
 27175  01BCE8  6ED9               	movwf	fsr2l,c
 27176  01BCEA  0E00               	movlw	0
 27177  01BCEC  200C               	addwfc	(btemp+11)^0,w,c
 27178  01BCEE  6EDA               	movwf	fsr2h,c
 27179  01BCF0  50DF               	movf	indf2,w,c
 27180  01BCF2  6E0C               	movwf	(btemp+11)^0,c
 27181                           
 27182                           ;stkvar	__this @ sp[(0)+-2]
 27183  01BCF4  0EFE               	movlw	-2
 27184  01BCF6  006F FF8C  F009    	movff	plusw1,btemp+8
 27185  01BCFC  0EFF               	movlw	-1
 27186  01BCFE  006F FF8C  F00A    	movff	plusw1,btemp+9
 27187  01BD04  500C               	movf	(btemp+11)^0,w,c
 27188  01BD06  2409               	addwf	(btemp+8)^0,w,c
 27189  01BD08  6ED9               	movwf	fsr2l,c
 27190  01BD0A  0E00               	movlw	0
 27191  01BD0C  200A               	addwfc	(btemp+9)^0,w,c
 27192  01BD0E  6EDA               	movwf	fsr2h,c
 27193  01BD10  0EFD               	movlw	-3
 27194  01BD12  006F FF8F FFDF     	movff	plusw1,indf2
 27195                           
 27196                           ;ringbufs.c: 71:   ++_this->head;
 27197                           ;stkvar	__this @ sp[(0)+-2]
 27198  01BD18  0EFE               	movlw	-2
 27199  01BD1A  006F FF8C  F00B    	movff	plusw1,btemp+10
 27200  01BD20  0EFF               	movlw	-1
 27201  01BD22  006F FF8C  F00C    	movff	plusw1,btemp+11
 27202  01BD28  0E40               	movlw	64
 27203  01BD2A  240B               	addwf	(btemp+10)^0,w,c
 27204  01BD2C  6ED9               	movwf	fsr2l,c
 27205  01BD2E  0E00               	movlw	0
 27206  01BD30  200C               	addwfc	(btemp+11)^0,w,c
 27207  01BD32  6EDA               	movwf	fsr2h,c
 27208  01BD34  2ADF               	incf	indf2,f,c
 27209                           
 27210                           ;ringbufs.c: 72:   ++_this->count;
 27211                           ;stkvar	__this @ sp[(0)+-2]
 27212  01BD36  0EFE               	movlw	-2
 27213  01BD38  006F FF8C  F00B    	movff	plusw1,btemp+10
 27214  01BD3E  0EFF               	movlw	-1
 27215  01BD40  006F FF8C  F00C    	movff	plusw1,btemp+11
 27216  01BD46  0E42               	movlw	66
 27217  01BD48  240B               	addwf	(btemp+10)^0,w,c
 27218  01BD4A  6ED9               	movwf	fsr2l,c
 27219  01BD4C  0E00               	movlw	0
 27220  01BD4E  200C               	addwfc	(btemp+11)^0,w,c
 27221  01BD50  6EDA               	movwf	fsr2h,c
 27222  01BD52  2ADF               	incf	indf2,f,c
 27223  01BD54                     l1726:
 27224                           
 27225                           ; _ringBufS_put_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 27226  01BD54  52E5               	movf	postdec1,f,c
 27227  01BD56  52E5               	movf	postdec1,f,c
 27228  01BD58  52E5               	movf	postdec1,f,c
 27229  01BD5A  0012               	return		;funcret
 27230  01BD5C                     __end_of_ringBufS_put_dma:
 27231                           	opt callstack 0
 27232                           
 27233 ;; *************** function _atoi *****************
 27234 ;; Defined at:
 27235 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/atoi.c"
 27236 ;; Parameters:    Size  Location     Type
 27237 ;;  s               2  [STACK] PTR const unsigned char 
 27238 ;;		 -> STR_93(127), STR_91(3), STR_90(3), STR_89(19), 
 27239 ;;		 -> STR_88(19), STR_87(19), STR_86(19), STR_85(19), 
 27240 ;;		 -> STR_84(19), STR_83(24), STR_82(15), STR_81(15), 
 27241 ;;		 -> STR_80(15), STR_79(10), STR_78(10), STR_77(19), 
 27242 ;;		 -> STR_76(19), STR_73(3), STR_72(3), STR_71(21), 
 27243 ;;		 -> STR_70(21), STR_69(21), STR_68(21), STR_67(21), 
 27244 ;;		 -> STR_66(21), STR_65(21), STR_64(21), STR_63(21), 
 27245 ;;		 -> STR_62(18), STR_61(21), STR_60(21), STR_59(21), 
 27246 ;;		 -> STR_58(21), STR_57(21), STR_56(21), STR_55(21), 
 27247 ;;		 -> STR_54(21), STR_53(21), STR_52(21), STR_51(21), 
 27248 ;;		 -> STR_50(21), STR_49(20), STR_48(21), STR_47(21), 
 27249 ;;		 -> STR_46(21), STR_45(22), STR_44(22), STR_43(22), 
 27250 ;;		 -> STR_42(23), STR_41(23), STR_40(23), STR_39(29), 
 27251 ;;		 -> STR_38(23), STR_37(23), STR_36(22), STR_35(22), 
 27252 ;;		 -> STR_34(22), STR_33(22), STR_32(22), STR_31(22), 
 27253 ;;		 -> STR_30(22), STR_29(22), STR_28(22), STR_27(22), 
 27254 ;;		 -> STR_26(22), STR_25(22), STR_24(17), STR_23(16), 
 27255 ;;		 -> STR_22(16), STR_21(26), STR_20(26), STR_19(22), 
 27256 ;;		 -> STR_18(21), STR_17(21), STR_16(21), STR_15(21), 
 27257 ;;		 -> STR_14(22), STR_13(22), STR_12(22), STR_11(26), 
 27258 ;;		 -> STR_10(21), STR_9(21), STR_8(21), STR_7(21), 
 27259 ;;		 -> STR_6(21), STR_5(21), STR_4(21), STR_2(21), 
 27260 ;;		 -> STR_1(21), 
 27261 ;; Auto vars:     Size  Location     Type
 27262 ;;  n               2  [STACK] int 
 27263 ;;  neg             2  [STACK] int 
 27264 ;; Return value:  Size  Location     Type
 27265 ;;                  2  [STACK] int 
 27266 ;; Registers used:
 27267 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl,
      + tblptrh, tblptru, prodl, prodh
 27268 ;; Tracked objects:
 27269 ;;		On entry : 0/0
 27270 ;;		On exit  : 0/0
 27271 ;;		Unchanged: 0/0
 27272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27273 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27276 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27277 ;;Total ram usage:        0 bytes
 27278 ;; Hardware stack levels used:    1
 27279 ;; Hardware stack levels required when called:   16
 27280 ;; This function calls:
 27281 ;;		_isdigit
 27282 ;;		_isspace
 27283 ;; This function is called by:
 27284 ;;		_vfpfcnvrt
 27285 ;; This function uses a reentrant model
 27286 ;;
 27287                           
 27288                           	psect	text100
 27289  018620                     __ptext100:
 27290                           	opt callstack 0
 27291  018620                     _atoi:
 27292                           	opt callstack 0
 27293                           
 27294                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27295  018620  0E09               	movlw	9
 27296  018622  26E1               	addwf	fsr1l,f,c
 27297  018624  0E00               	movlw	0
 27298  018626  22E2               	addwfc	fsr1h,f,c
 27299                           
 27300                           ;stkvar	_n @ sp[(-9)+5]
 27301                           
 27302                           ;incstack = 0
 27303 ;; hardware stack exceeded
 27304  018628  0EFC               	movlw	-4
 27305  01862A  6AE3               	clrf	plusw1,c
 27306  01862C  0EFD               	movlw	-3
 27307  01862E  6AE3               	clrf	plusw1,c
 27308                           
 27309                           ;stkvar	_neg @ sp[(-9)+7]
 27310  018630  0EFE               	movlw	-2
 27311  018632  6AE3               	clrf	plusw1,c
 27312  018634  0EFF               	movlw	-1
 27313  018636  6AE3               	clrf	plusw1,c
 27314  018638  D011               	goto	l10170
 27315  01863A                     l10168:
 27316                           
 27317                           ;stkvar	_s @ sp[(-9)+-2]
 27318  01863A  0EF5               	movlw	-11
 27319  01863C  50E3               	movf	plusw1,w,c
 27320  01863E  0F01               	addlw	1
 27321  018640  6E01               	movwf	btemp^0,c
 27322  018642  0EF5               	movlw	-11
 27323  018644  0060  F007  FFE3   	movff	btemp,plusw1
 27324  01864A  6A01               	clrf	btemp^0,c
 27325  01864C  0EF6               	movlw	-10
 27326  01864E  50E3               	movf	plusw1,w,c
 27327  018650  2001               	addwfc	btemp^0,w,c
 27328  018652  6E01               	movwf	btemp^0,c
 27329  018654  0EF6               	movlw	-10
 27330  018656  0060  F007  FFE3   	movff	btemp,plusw1
 27331  01865C                     l10170:
 27332                           
 27333                           ;stkvar	_atoi$7084 @ sp[(-9)+4]
 27334  01865C  0EFB               	movlw	-5
 27335  01865E  6AE3               	clrf	plusw1,c
 27336  018660  2AE3               	incf	plusw1,f,c
 27337                           
 27338                           ;stkvar	_s @ sp[(-9)+-2]
 27339  018662  50E1               	movf	fsr1l,w,c
 27340  018664  0FF5               	addlw	-11
 27341  018666  6ED9               	movwf	fsr2l,c
 27342  018668  50E2               	movf	fsr1h,w,c
 27343  01866A  6EDA               	movwf	fsr2h,c
 27344  01866C  0EFF               	movlw	255
 27345  01866E  22DA               	addwfc	fsr2h,f,c
 27346  018670  006F FF7B FFF6     	movff	postinc2,tblptrl
 27347  018676  006F FF77 FFF7     	movff	postdec2,tblptrh
 27348  01867C                     	if	0	;tblptru may be non-zero
 27349  01867C                     	endif
 27350  01867C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 27351  01867C  0E00               	movlw	low (__mediumconst shr (0+16))
 27352  01867E  6EF8               	movwf	tblptru,c
 27353  018680                     	endif
 27354  018680  0008               	tblrd		*
 27355  018682  50F5               	movf	tablat,w,c
 27356  018684  0A20               	xorlw	32
 27357  018686  B4D8               	btfsc	status,2,c
 27358  018688  D023               	goto	l10178
 27359  01868A  0EF7               	movlw	247
 27360  01868C  6E0B               	movwf	(btemp+10)^0,c
 27361  01868E  0EFF               	movlw	255
 27362  018690  6E0C               	movwf	(btemp+11)^0,c
 27363                           
 27364                           ;stkvar	_s @ sp[(-9)+-2]
 27365  018692  50E1               	movf	fsr1l,w,c
 27366  018694  0FF5               	addlw	-11
 27367  018696  6ED9               	movwf	fsr2l,c
 27368  018698  50E2               	movf	fsr1h,w,c
 27369  01869A  6EDA               	movwf	fsr2h,c
 27370  01869C  0EFF               	movlw	255
 27371  01869E  22DA               	addwfc	fsr2h,f,c
 27372  0186A0  006F FF7B FFF6     	movff	postinc2,tblptrl
 27373  0186A6  006F FF77 FFF7     	movff	postdec2,tblptrh
 27374  0186AC                     	if	0	;tblptru may be non-zero
 27375  0186AC                     	endif
 27376  0186AC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 27377  0186AC  0E00               	movlw	low (__mediumconst shr (0+16))
 27378  0186AE  6EF8               	movwf	tblptru,c
 27379  0186B0                     	endif
 27380  0186B0  0008               	tblrd		*
 27381  0186B2  50F5               	movf	tablat,w,c
 27382  0186B4  6E09               	movwf	(btemp+8)^0,c
 27383  0186B6  6A0A               	clrf	(btemp+9)^0,c
 27384  0186B8  500B               	movf	(btemp+10)^0,w,c
 27385  0186BA  2609               	addwf	(btemp+8)^0,f,c
 27386  0186BC  500C               	movf	(btemp+11)^0,w,c
 27387  0186BE  220A               	addwfc	(btemp+9)^0,f,c
 27388  0186C0  500A               	movf	(btemp+9)^0,w,c
 27389  0186C2  E104               	bnz	u9180
 27390  0186C4  0E05               	movlw	5
 27391  0186C6  5C09               	subwf	(btemp+8)^0,w,c
 27392  0186C8  A0D8               	btfss	status,0,c
 27393  0186CA  D002               	goto	l10178
 27394  0186CC                     u9180:
 27395                           
 27396                           ;stkvar	_atoi$7084 @ sp[(-9)+4]
 27397  0186CC  0EFB               	movlw	-5
 27398  0186CE  6AE3               	clrf	plusw1,c
 27399  0186D0                     l10178:
 27400                           
 27401                           ;stkvar	_atoi$7084 @ sp[(-9)+4]
 27402  0186D0  0EFB               	movlw	-5
 27403  0186D2  50E3               	movf	plusw1,w,c
 27404  0186D4  6E0B               	movwf	(btemp+10)^0,c
 27405  0186D6  6A0C               	clrf	(btemp+11)^0,c
 27406                           
 27407                           ;stkvar	_atoi$7083 @ sp[(-9)+2]
 27408  0186D8  0EF9               	movlw	-7
 27409  0186DA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27410  0186E0  0EFA               	movlw	-6
 27411  0186E2  0060  F033  FFE3   	movff	btemp+11,plusw1
 27412                           
 27413                           ;stkvar	_atoi$7083 @ sp[(-9)+2]
 27414  0186E8  0EF9               	movlw	-7
 27415  0186EA  006F FF8C  F001    	movff	plusw1,btemp
 27416  0186F0  0EFA               	movlw	-6
 27417  0186F2  50E3               	movf	plusw1,w,c
 27418  0186F4  1001               	iorwf	btemp^0,w,c
 27419  0186F6  B4D8               	btfsc	status,2,c
 27420  0186F8  D01F               	goto	l10188
 27421  0186FA  D79F               	goto	l10168
 27422  0186FC                     l10184:
 27423  0186FC  0E01               	movlw	1
 27424  0186FE  6E0B               	movwf	(btemp+10)^0,c
 27425  018700  0E00               	movlw	0
 27426  018702  6E0C               	movwf	(btemp+11)^0,c
 27427                           
 27428                           ;stkvar	_neg @ sp[(-9)+7]
 27429  018704  0EFE               	movlw	-2
 27430  018706  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27431  01870C  0EFF               	movlw	-1
 27432  01870E  0060  F033  FFE3   	movff	btemp+11,plusw1
 27433  018714                     l10186:
 27434                           
 27435                           ;stkvar	_s @ sp[(-9)+-2]
 27436  018714  0EF5               	movlw	-11
 27437  018716  50E3               	movf	plusw1,w,c
 27438  018718  0F01               	addlw	1
 27439  01871A  6E01               	movwf	btemp^0,c
 27440  01871C  0EF5               	movlw	-11
 27441  01871E  0060  F007  FFE3   	movff	btemp,plusw1
 27442  018724  6A01               	clrf	btemp^0,c
 27443  018726  0EF6               	movlw	-10
 27444  018728  50E3               	movf	plusw1,w,c
 27445  01872A  2001               	addwfc	btemp^0,w,c
 27446  01872C  6E01               	movwf	btemp^0,c
 27447  01872E  0EF6               	movlw	-10
 27448  018730  0060  F007  FFE3   	movff	btemp,plusw1
 27449  018736  D053               	goto	l10194
 27450  018738                     l10188:
 27451                           
 27452                           ;stkvar	_s @ sp[(-9)+-2]
 27453  018738  50E1               	movf	fsr1l,w,c
 27454  01873A  0FF5               	addlw	-11
 27455  01873C  6ED9               	movwf	fsr2l,c
 27456  01873E  50E2               	movf	fsr1h,w,c
 27457  018740  6EDA               	movwf	fsr2h,c
 27458  018742  0EFF               	movlw	255
 27459  018744  22DA               	addwfc	fsr2h,f,c
 27460  018746  006F FF7B FFF6     	movff	postinc2,tblptrl
 27461  01874C  006F FF77 FFF7     	movff	postdec2,tblptrh
 27462  018752                     	if	0	;tblptru may be non-zero
 27463  018752                     	endif
 27464  018752                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 27465  018752  0E00               	movlw	low (__mediumconst shr (0+16))
 27466  018754  6EF8               	movwf	tblptru,c
 27467  018756                     	endif
 27468  018756  0008               	tblrd		*
 27469  018758  50F5               	movf	tablat,w,c
 27470  01875A  6E0B               	movwf	(btemp+10)^0,c
 27471  01875C  6A0C               	clrf	(btemp+11)^0,c
 27472                           
 27473                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 27474                           ; Switch size 1, requested type "simple"
 27475                           ; Number of cases is 1, Range of values is 0 to 0
 27476                           ; switch strategies available:
 27477                           ; Name         Instructions Cycles
 27478                           ; simple_byte            4     3 (average)
 27479                           ;	Chosen strategy is simple_byte
 27480  01875E  500C               	movf	(btemp+11)^0,w,c
 27481  018760  0A00               	xorlw	0	; case 0
 27482  018762  A4D8               	btfss	status,2,c
 27483  018764  D03C               	goto	l10194
 27484                           
 27485                           ; Switch size 1, requested type "simple"
 27486                           ; Number of cases is 2, Range of values is 43 to 45
 27487                           ; switch strategies available:
 27488                           ; Name         Instructions Cycles
 27489                           ; simple_byte            7     4 (average)
 27490                           ;	Chosen strategy is simple_byte
 27491  018766  500B               	movf	(btemp+10)^0,w,c
 27492  018768  0A2B               	xorlw	43	; case 43
 27493  01876A  B4D8               	btfsc	status,2,c
 27494  01876C  D7D3               	goto	l10186
 27495  01876E  0A06               	xorlw	6	; case 45
 27496  018770  B4D8               	btfsc	status,2,c
 27497  018772  D7C4               	goto	l10184
 27498  018774  D034               	goto	l10194
 27499  018776                     l10190:
 27500                           
 27501                           ;stkvar	_n @ sp[(-9)+5]
 27502  018776  0EFC               	movlw	-4
 27503  018778  006F FF8C  F00B    	movff	plusw1,btemp+10
 27504  01877E  0EFD               	movlw	-3
 27505  018780  006F FF8C  F00C    	movff	plusw1,btemp+11
 27506  018786  0E0A               	movlw	10
 27507  018788  020B               	mulwf	(btemp+10)^0,c
 27508  01878A  006F FFCC  F009    	movff	prodl,btemp+8
 27509  018790  006F FFD0  F00A    	movff	prodh,btemp+9
 27510  018796  020C               	mulwf	(btemp+11)^0,c
 27511  018798  50F3               	movf	prodl,w,c
 27512  01879A  260A               	addwf	(btemp+9)^0,f,c
 27513                           
 27514                           ;stkvar	_s @ sp[(-9)+-2]
 27515  01879C  50E1               	movf	fsr1l,w,c
 27516  01879E  0FF5               	addlw	-11
 27517  0187A0  6ED9               	movwf	fsr2l,c
 27518  0187A2  50E2               	movf	fsr1h,w,c
 27519  0187A4  6EDA               	movwf	fsr2h,c
 27520  0187A6  0EFF               	movlw	255
 27521  0187A8  22DA               	addwfc	fsr2h,f,c
 27522  0187AA  006F FF7B FFF6     	movff	postinc2,tblptrl
 27523  0187B0  006F FF77 FFF7     	movff	postdec2,tblptrh
 27524  0187B6                     	if	0	;tblptru may be non-zero
 27525  0187B6                     	endif
 27526  0187B6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 27527  0187B6  0E00               	movlw	low (__mediumconst shr (0+16))
 27528  0187B8  6EF8               	movwf	tblptru,c
 27529  0187BA                     	endif
 27530  0187BA  0008               	tblrd		*
 27531  0187BC  50F5               	movf	tablat,w,c
 27532  0187BE  5E09               	subwf	(btemp+8)^0,f,c
 27533  0187C0  0E00               	movlw	0
 27534  0187C2  5A0A               	subwfb	(btemp+9)^0,f,c
 27535  0187C4  0E30               	movlw	48
 27536  0187C6  2609               	addwf	(btemp+8)^0,f,c
 27537  0187C8  0E00               	movlw	0
 27538  0187CA  220A               	addwfc	(btemp+9)^0,f,c
 27539                           
 27540                           ;stkvar	_n @ sp[(-9)+5]
 27541  0187CC  0EFC               	movlw	-4
 27542  0187CE  0060  F027  FFE3   	movff	btemp+8,plusw1
 27543  0187D4  0EFD               	movlw	-3
 27544  0187D6  0060  F02B  FFE3   	movff	btemp+9,plusw1
 27545  0187DC  D79B               	goto	l10186
 27546  0187DE                     l10194:
 27547  0187DE  0ED0               	movlw	208
 27548  0187E0  6E0B               	movwf	(btemp+10)^0,c
 27549  0187E2  0EFF               	movlw	255
 27550  0187E4  6E0C               	movwf	(btemp+11)^0,c
 27551                           
 27552                           ;stkvar	_s @ sp[(-9)+-2]
 27553  0187E6  50E1               	movf	fsr1l,w,c
 27554  0187E8  0FF5               	addlw	-11
 27555  0187EA  6ED9               	movwf	fsr2l,c
 27556  0187EC  50E2               	movf	fsr1h,w,c
 27557  0187EE  6EDA               	movwf	fsr2h,c
 27558  0187F0  0EFF               	movlw	255
 27559  0187F2  22DA               	addwfc	fsr2h,f,c
 27560  0187F4  006F FF7B FFF6     	movff	postinc2,tblptrl
 27561  0187FA  006F FF77 FFF7     	movff	postdec2,tblptrh
 27562  018800                     	if	0	;tblptru may be non-zero
 27563  018800                     	endif
 27564  018800                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 27565  018800  0E00               	movlw	low (__mediumconst shr (0+16))
 27566  018802  6EF8               	movwf	tblptru,c
 27567  018804                     	endif
 27568  018804  0008               	tblrd		*
 27569  018806  50F5               	movf	tablat,w,c
 27570  018808  6E09               	movwf	(btemp+8)^0,c
 27571  01880A  6A0A               	clrf	(btemp+9)^0,c
 27572  01880C  500B               	movf	(btemp+10)^0,w,c
 27573  01880E  2609               	addwf	(btemp+8)^0,f,c
 27574  018810  500C               	movf	(btemp+11)^0,w,c
 27575  018812  220A               	addwfc	(btemp+9)^0,f,c
 27576  018814  500A               	movf	(btemp+9)^0,w,c
 27577  018816  E106               	bnz	u9200
 27578  018818  0E0A               	movlw	10
 27579  01881A  5C09               	subwf	(btemp+8)^0,w,c
 27580  01881C  B0D8               	btfsc	status,0,c
 27581  01881E  D002               	goto	u9200
 27582  018820  0E01               	movlw	1
 27583  018822  D001               	goto	u9210
 27584  018824                     u9200:
 27585  018824  0E00               	movlw	0
 27586  018826                     u9210:
 27587  018826  6E0B               	movwf	(btemp+10)^0,c
 27588  018828  6A0C               	clrf	(btemp+11)^0,c
 27589                           
 27590                           ;stkvar	_atoi$7085 @ sp[(-9)+0]
 27591  01882A  0EF7               	movlw	-9
 27592  01882C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27593  018832  0EF8               	movlw	-8
 27594  018834  0060  F033  FFE3   	movff	btemp+11,plusw1
 27595                           
 27596                           ;stkvar	_atoi$7085 @ sp[(-9)+0]
 27597  01883A  0EF7               	movlw	-9
 27598  01883C  006F FF8C  F001    	movff	plusw1,btemp
 27599  018842  0EF8               	movlw	-8
 27600  018844  50E3               	movf	plusw1,w,c
 27601  018846  1001               	iorwf	btemp^0,w,c
 27602  018848  A4D8               	btfss	status,2,c
 27603  01884A  D795               	goto	l10190
 27604                           
 27605                           ;stkvar	_neg @ sp[(-9)+7]
 27606  01884C  0EFE               	movlw	-2
 27607  01884E  006F FF8C  F001    	movff	plusw1,btemp
 27608  018854  0EFF               	movlw	-1
 27609  018856  50E3               	movf	plusw1,w,c
 27610  018858  1001               	iorwf	btemp^0,w,c
 27611  01885A  A4D8               	btfss	status,2,c
 27612  01885C  D00E               	goto	l10204
 27613                           
 27614                           ;stkvar	_n @ sp[(-9)+5]
 27615  01885E  0EFC               	movlw	-4
 27616  018860  006F FF8C  F001    	movff	plusw1,btemp
 27617  018866  1E01               	comf	btemp^0,f,c
 27618  018868  0EFD               	movlw	-3
 27619  01886A  006F FF8C  F002    	movff	plusw1,btemp+1
 27620  018870  1E02               	comf	(btemp+1)^0,f,c
 27621  018872  2A01               	incf	btemp^0,f,c
 27622  018874  B4D8               	btfsc	status,2,c
 27623  018876  2A02               	incf	(btemp+1)^0,f,c
 27624  018878  D008               	goto	l3403
 27625  01887A                     l10204:
 27626                           
 27627                           ;stkvar	_n @ sp[(-9)+5]
 27628  01887A  0EFC               	movlw	-4
 27629  01887C  006F FF8C  F001    	movff	plusw1,btemp
 27630  018882  0EFD               	movlw	-3
 27631  018884  006F FF8C  F002    	movff	plusw1,btemp+1
 27632  01888A                     l3403:
 27633                           
 27634                           ; _atoi: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 27635  01888A  0EF5               	movlw	245
 27636  01888C  26E1               	addwf	fsr1l,f,c
 27637  01888E  0EFF               	movlw	255
 27638  018890  22E2               	addwfc	fsr1h,f,c
 27639  018892  0012               	return		;funcret
 27640  018894                     __end_of_atoi:
 27641                           	opt callstack 0
 27642                           
 27643 ;; *************** function _isspace *****************
 27644 ;; Defined at:
 27645 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isspace.c"
 27646 ;; Parameters:    Size  Location     Type
 27647 ;;  c               2  [STACK] int 
 27648 ;; Auto vars:     Size  Location     Type
 27649 ;;		None
 27650 ;; Return value:  Size  Location     Type
 27651 ;;                  2  [STACK] int 
 27652 ;; Registers used:
 27653 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 27654 ;; Tracked objects:
 27655 ;;		On entry : 0/0
 27656 ;;		On exit  : 0/0
 27657 ;;		Unchanged: 0/0
 27658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27659 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27660 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27662 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27663 ;;Total ram usage:        0 bytes
 27664 ;; Hardware stack levels used:    1
 27665 ;; Hardware stack levels required when called:   15
 27666 ;; This function calls:
 27667 ;;		Nothing
 27668 ;; This function is called by:
 27669 ;;		_atoi
 27670 ;; This function uses a reentrant model
 27671 ;;
 27672                           
 27673                           	psect	text101
 27674  01CB9C                     __ptext101:
 27675                           	opt callstack 0
 27676  01CB9C                     _isspace:
 27677                           	opt callstack 0
 27678                           
 27679                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27680  01CB9C  52E6               	movf	postinc1,f,c
 27681                           
 27682                           ;stkvar	_isspace$7134 @ sp[(-1)+0]
 27683                           
 27684                           ;incstack = 0
 27685 ;; hardware stack exceeded
 27686  01CB9E  0EFF               	movlw	-1
 27687  01CBA0  6AE3               	clrf	plusw1,c
 27688  01CBA2  2AE3               	incf	plusw1,f,c
 27689                           
 27690                           ;stkvar	_c @ sp[(-1)+-2]
 27691  01CBA4  0EFD               	movlw	-3
 27692  01CBA6  006F FF8C  F001    	movff	plusw1,btemp
 27693  01CBAC  0E20               	movlw	32
 27694  01CBAE  1801               	xorwf	btemp^0,w,c
 27695  01CBB0  E104               	bnz	u8070
 27696  01CBB2  0EFE               	movlw	-2
 27697  01CBB4  50E3               	movf	plusw1,w,c
 27698  01CBB6  B4D8               	btfsc	status,2,c
 27699  01CBB8  D012               	goto	l9588
 27700  01CBBA                     u8070:
 27701                           
 27702                           ;stkvar	_c @ sp[(-1)+-2]
 27703  01CBBA  0EFD               	movlw	-3
 27704  01CBBC  50E3               	movf	plusw1,w,c
 27705  01CBBE  0FF7               	addlw	247
 27706  01CBC0  6E0B               	movwf	(btemp+10)^0,c
 27707  01CBC2  0EFE               	movlw	-2
 27708  01CBC4  006F FF8C  F00C    	movff	plusw1,btemp+11
 27709  01CBCA  0EFF               	movlw	255
 27710  01CBCC  220C               	addwfc	(btemp+11)^0,f,c
 27711  01CBCE  500C               	movf	(btemp+11)^0,w,c
 27712  01CBD0  E104               	bnz	u8080
 27713  01CBD2  0E05               	movlw	5
 27714  01CBD4  5C0B               	subwf	(btemp+10)^0,w,c
 27715  01CBD6  A0D8               	btfss	status,0,c
 27716  01CBD8  D002               	goto	l9588
 27717  01CBDA                     u8080:
 27718                           
 27719                           ;stkvar	_isspace$7134 @ sp[(-1)+0]
 27720  01CBDA  0EFF               	movlw	-1
 27721  01CBDC  6AE3               	clrf	plusw1,c
 27722  01CBDE                     l9588:
 27723                           
 27724                           ;stkvar	_isspace$7134 @ sp[(-1)+0]
 27725  01CBDE  0EFF               	movlw	-1
 27726  01CBE0  50E3               	movf	plusw1,w,c
 27727  01CBE2  6E01               	movwf	btemp^0,c
 27728  01CBE4  6A02               	clrf	(btemp+1)^0,c
 27729                           
 27730                           ; _isspace: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 27731  01CBE6  52E5               	movf	postdec1,f,c
 27732  01CBE8  52E5               	movf	postdec1,f,c
 27733  01CBEA  52E5               	movf	postdec1,f,c
 27734  01CBEC  0012               	return		;funcret
 27735  01CBEE                     __end_of_isspace:
 27736                           	opt callstack 0
 27737                           
 27738 ;; *************** function _isdigit *****************
 27739 ;; Defined at:
 27740 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isdigit.c"
 27741 ;; Parameters:    Size  Location     Type
 27742 ;;  c               2  [STACK] int 
 27743 ;; Auto vars:     Size  Location     Type
 27744 ;;		None
 27745 ;; Return value:  Size  Location     Type
 27746 ;;                  2  [STACK] int 
 27747 ;; Registers used:
 27748 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 27749 ;; Tracked objects:
 27750 ;;		On entry : 0/0
 27751 ;;		On exit  : 0/0
 27752 ;;		Unchanged: 0/0
 27753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27754 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27755 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27756 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27757 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27758 ;;Total ram usage:        0 bytes
 27759 ;; Hardware stack levels used:    1
 27760 ;; Hardware stack levels required when called:   15
 27761 ;; This function calls:
 27762 ;;		Nothing
 27763 ;; This function is called by:
 27764 ;;		_vfpfcnvrt
 27765 ;;		_atoi
 27766 ;; This function uses a reentrant model
 27767 ;;
 27768                           
 27769                           	psect	text102
 27770  01D40C                     __ptext102:
 27771                           	opt callstack 0
 27772  01D40C                     _isdigit:
 27773                           	opt callstack 0
 27774                           
 27775                           ;stkvar	_c @ sp[(0)+-2]
 27776                           
 27777                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27778                           ;incstack = 0
 27779 ;; hardware stack exceeded
 27780  01D40C  0EFE               	movlw	-2
 27781  01D40E  50E3               	movf	plusw1,w,c
 27782  01D410  0FD0               	addlw	208
 27783  01D412  6E0B               	movwf	(btemp+10)^0,c
 27784  01D414  0EFF               	movlw	-1
 27785  01D416  006F FF8C  F00C    	movff	plusw1,btemp+11
 27786  01D41C  0EFF               	movlw	255
 27787  01D41E  220C               	addwfc	(btemp+11)^0,f,c
 27788  01D420  500C               	movf	(btemp+11)^0,w,c
 27789  01D422  E106               	bnz	u6920
 27790  01D424  0E0A               	movlw	10
 27791  01D426  5C0B               	subwf	(btemp+10)^0,w,c
 27792  01D428  B0D8               	btfsc	status,0,c
 27793  01D42A  D002               	goto	u6920
 27794  01D42C  0E01               	movlw	1
 27795  01D42E  D001               	goto	u6930
 27796  01D430                     u6920:
 27797  01D430  0E00               	movlw	0
 27798  01D432                     u6930:
 27799  01D432  6E01               	movwf	btemp^0,c
 27800  01D434  6A02               	clrf	(btemp+1)^0,c
 27801                           
 27802                           ; _isdigit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 27803  01D436  52E5               	movf	postdec1,f,c
 27804  01D438  52E5               	movf	postdec1,f,c
 27805  01D43A  0012               	return		;funcret
 27806  01D43C                     __end_of_isdigit:
 27807                           	opt callstack 0
 27808                           
 27809 ;; *************** function _set_vterm *****************
 27810 ;; Defined at:
 27811 ;;		line 107 in file "mconfig.c"
 27812 ;; Parameters:    Size  Location     Type
 27813 ;;  vterm           1  [STACK] const unsigned char 
 27814 ;; Auto vars:     Size  Location     Type
 27815 ;;		None
 27816 ;; Return value:  Size  Location     Type
 27817 ;;                  1  [STACK] unsigned char 
 27818 ;; Registers used:
 27819 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+11
 27820 ;; Tracked objects:
 27821 ;;		On entry : 0/1
 27822 ;;		On exit  : 0/0
 27823 ;;		Unchanged: 0/0
 27824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27825 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27826 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27828 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27829 ;;Total ram usage:        0 bytes
 27830 ;; Hardware stack levels used:    1
 27831 ;; Hardware stack levels required when called:   15
 27832 ;; This function calls:
 27833 ;;		Nothing
 27834 ;; This function is called by:
 27835 ;;		_main
 27836 ;;		_check_help
 27837 ;; This function uses a reentrant model
 27838 ;;
 27839                           
 27840                           	psect	text103
 27841  01D92E                     __ptext103:
 27842                           	opt callstack 0
 27843  01D92E                     _set_vterm:
 27844                           	opt callstack 15
 27845                           
 27846                           ;mconfig.c: 107: uint8_t set_vterm(const uint8_t vterm);mconfig.c: 108: {;mconfig.c: 109
      +                          :  D.vterm = vterm & 0x03;
 27847                           ;stkvar	_vterm @ sp[(0)+-1]
 27848                           
 27849                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27850                           ;incstack = 0
 27851  01D92E  0EFF               	movlw	-1
 27852  01D930  006F FF8C  F00C    	movff	plusw1,btemp+11
 27853  01D936  0E03               	movlw	3
 27854  01D938  160C               	andwf	(btemp+11)^0,f,c
 27855  01D93A  EE22  F30A         	lfsr	2,_D+480
 27856  01D93E  50DF               	movf	223,w,c
 27857  01D940  180C               	xorwf	(btemp+11)^0,w,c
 27858  01D942  0BFE               	andlw	-2
 27859  01D944  180C               	xorwf	(btemp+11)^0,w,c
 27860  01D946  6EDF               	movwf	223,c
 27861                           
 27862                           ; _set_vterm: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 27863  01D948  52E5               	movf	postdec1,f,c
 27864  01D94A  0012               	return		;funcret
 27865  01D94C                     __end_of_set_vterm:
 27866                           	opt callstack 0
 27867                           
 27868 ;; *************** function _set_temp_display_help *****************
 27869 ;; Defined at:
 27870 ;;		line 211 in file "mconfig.c"
 27871 ;; Parameters:    Size  Location     Type
 27872 ;;  new_response    1  [STACK] const enum E16524
 27873 ;; Auto vars:     Size  Location     Type
 27874 ;;		None
 27875 ;; Return value:  Size  Location     Type
 27876 ;;                  1  [STACK] enum E16524
 27877 ;; Registers used:
 27878 ;;		wreg, fsr1l, fsr1h
 27879 ;; Tracked objects:
 27880 ;;		On entry : 0/2
 27881 ;;		On exit  : 3F/2
 27882 ;;		Unchanged: 0/0
 27883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27884 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27885 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27886 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27887 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27888 ;;Total ram usage:        0 bytes
 27889 ;; Hardware stack levels used:    1
 27890 ;; Hardware stack levels required when called:   15
 27891 ;; This function calls:
 27892 ;;		Nothing
 27893 ;; This function is called by:
 27894 ;;		_check_help
 27895 ;; This function uses a reentrant model
 27896 ;;
 27897                           
 27898                           	psect	text104
 27899  01DA98                     __ptext104:
 27900                           	opt callstack 0
 27901  01DA98                     _set_temp_display_help:
 27902                           	opt callstack 14
 27903                           
 27904                           ;mconfig.c: 211: D_CODES set_temp_display_help(const D_CODES new_response_info);mconfig.
      +                          c: 212: {;mconfig.c: 213:  static D_CODES old_info;;mconfig.c: 215:  old_info = V.respon
      +                          se.help_temp;
 27905                           
 27906                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27907                           ;incstack = 0
 27908  01DA98  0102               	movlb	2	; () banked
 27909  01DA9A  51A5               	movf	(_V+165)& (0+255),w,b	;volatile
 27910                           
 27911                           ; BSR set to: 2
 27912                           ;mconfig.c: 216:  V.response.help_temp = new_response_info;
 27913                           ;stkvar	_new_response_info @ sp[(0)+-1]
 27914  01DA9C  0EFF               	movlw	-1
 27915  01DA9E  006F FF8C  F2A5    	movff	plusw1,_V+165	;volatile
 27916                           
 27917                           ; BSR set to: 2
 27918                           ; _set_temp_display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 1, argsize = 1, vargsize = 0
 27919  01DAA4  52E5               	movf	postdec1,f,c
 27920  01DAA6  0012               	return		;funcret
 27921  01DAA8                     __end_of_set_temp_display_help:
 27922                           	opt callstack 0
 27923                           
 27924 ;; *************** function _set_display_info *****************
 27925 ;; Defined at:
 27926 ;;		line 200 in file "mconfig.c"
 27927 ;; Parameters:    Size  Location     Type
 27928 ;;  new_response    1  [STACK] const enum E16524
 27929 ;; Auto vars:     Size  Location     Type
 27930 ;;		None
 27931 ;; Return value:  Size  Location     Type
 27932 ;;                  1  [STACK] enum E17009
 27933 ;; Registers used:
 27934 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 27935 ;; Tracked objects:
 27936 ;;		On entry : 0/2
 27937 ;;		On exit  : 0/0
 27938 ;;		Unchanged: 0/0
 27939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27940 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27941 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27943 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27944 ;;Total ram usage:        0 bytes
 27945 ;; Hardware stack levels used:    1
 27946 ;; Hardware stack levels required when called:   16
 27947 ;; This function calls:
 27948 ;;		_TimerDone
 27949 ;; This function is called by:
 27950 ;;		_main
 27951 ;;		_check_help
 27952 ;; This function uses a reentrant model
 27953 ;;
 27954                           
 27955                           	psect	text105
 27956  01D94C                     __ptext105:
 27957                           	opt callstack 0
 27958  01D94C                     _set_display_info:
 27959                           	opt callstack 14
 27960                           
 27961                           ;mconfig.c: 200: D_CODES set_display_info(const D_CODES new_response_info);mconfig.c: 20
      +                          1: {;mconfig.c: 202:  static D_CODES old_info = DIS_STR;;mconfig.c: 204:  if (TimerDone(
      +                          TMR_INFO)) {
 27962                           
 27963                           ; BSR set to: 2
 27964                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27965                           ;incstack = 0
 27966  01D94C  0E07               	movlw	7
 27967  01D94E  6EE6               	movwf	postinc1,c
 27968  01D950  ECA1  F0EA         	call	_TimerDone	;wreg free
 27969  01D954  5001               	movf	btemp^0,w,c
 27970  01D956  B4D8               	btfsc	status,2,c
 27971  01D958  D006               	goto	l1861
 27972                           
 27973                           ;mconfig.c: 205:   old_info = V.response.info;
 27974  01D95A  0102               	movlb	2	; () banked
 27975  01D95C  51A4               	movf	(_V+164)& (0+255),w,b	;volatile
 27976                           
 27977                           ; BSR set to: 2
 27978                           ;mconfig.c: 206:   V.response.info = new_response_info;
 27979                           ;stkvar	_new_response_info @ sp[(0)+-1]
 27980  01D95E  0EFF               	movlw	-1
 27981  01D960  006F FF8C  F2A4    	movff	plusw1,_V+164	;volatile
 27982  01D966                     l1861:
 27983                           
 27984                           ; _set_display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 27985  01D966  52E5               	movf	postdec1,f,c
 27986  01D968  0012               	return		;funcret
 27987  01D96A                     __end_of_set_display_info:
 27988                           	opt callstack 0
 27989                           
 27990 ;; *************** function _mode_lamp_dim *****************
 27991 ;; Defined at:
 27992 ;;		line 13 in file "mconfig.c"
 27993 ;; Parameters:    Size  Location     Type
 27994 ;;  level           2  [STACK] const unsigned short 
 27995 ;; Auto vars:     Size  Location     Type
 27996 ;;		None
 27997 ;; Return value:  Size  Location     Type
 27998 ;;                  1  [STACK] void 
 27999 ;; Registers used:
 28000 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 28001 ;; Tracked objects:
 28002 ;;		On entry : 0/2
 28003 ;;		On exit  : 0/0
 28004 ;;		Unchanged: 0/0
 28005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28006 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28007 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28008 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28009 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28010 ;;Total ram usage:        0 bytes
 28011 ;; Hardware stack levels used:    1
 28012 ;; Hardware stack levels required when called:   16
 28013 ;; This function calls:
 28014 ;;		_PWM8_LoadDutyValue
 28015 ;; This function is called by:
 28016 ;;		_main
 28017 ;;		_check_help
 28018 ;; This function uses a reentrant model
 28019 ;;
 28020                           
 28021                           	psect	text106
 28022  01D9BE                     __ptext106:
 28023                           	opt callstack 0
 28024  01D9BE                     _mode_lamp_dim:
 28025                           	opt callstack 14
 28026                           
 28027                           ;mconfig.c: 13: void mode_lamp_dim(const uint16_t level);mconfig.c: 14: {;mconfig.c: 15:
      +                            PWM8_LoadDutyValue(level);
 28028                           ;stkvar	_level @ sp[(0)+-2]
 28029                           
 28030                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28031                           ;incstack = 0
 28032  01D9BE  0EFE               	movlw	-2
 28033  01D9C0  006F FF8F FFE6     	movff	plusw1,postinc1
 28034  01D9C6  006F FF8F FFE6     	movff	plusw1,postinc1
 28035  01D9CC  ECB2  F0E7         	call	_PWM8_LoadDutyValue	;wreg free
 28036                           
 28037                           ; _mode_lamp_dim: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 28038  01D9D0  52E5               	movf	postdec1,f,c
 28039  01D9D2  52E5               	movf	postdec1,f,c
 28040  01D9D4  0012               	return		;funcret
 28041  01D9D6                     __end_of_mode_lamp_dim:
 28042                           	opt callstack 0
 28043                           
 28044 ;; *************** function _mode_lamp_bright *****************
 28045 ;; Defined at:
 28046 ;;		line 18 in file "mconfig.c"
 28047 ;; Parameters:    Size  Location     Type
 28048 ;;		None
 28049 ;; Auto vars:     Size  Location     Type
 28050 ;;		None
 28051 ;; Return value:  Size  Location     Type
 28052 ;;                  1  [STACK] void 
 28053 ;; Registers used:
 28054 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 28055 ;; Tracked objects:
 28056 ;;		On entry : 0/0
 28057 ;;		On exit  : 0/0
 28058 ;;		Unchanged: 0/0
 28059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28060 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28061 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28062 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28063 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28064 ;;Total ram usage:        0 bytes
 28065 ;; Hardware stack levels used:    1
 28066 ;; Hardware stack levels required when called:   16
 28067 ;; This function calls:
 28068 ;;		_PWM8_LoadDutyValue
 28069 ;; This function is called by:
 28070 ;;		_check_help
 28071 ;; This function uses a reentrant model
 28072 ;;
 28073                           
 28074                           	psect	text107
 28075  01DAC6                     __ptext107:
 28076                           	opt callstack 0
 28077  01DAC6                     _mode_lamp_bright:
 28078                           	opt callstack 13
 28079                           
 28080                           ;mconfig.c: 20:  PWM8_LoadDutyValue(300);
 28081                           
 28082                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28083                           ;incstack = 0
 28084  01DAC6  0E2C               	movlw	44
 28085  01DAC8  6EE6               	movwf	postinc1,c
 28086  01DACA  0E01               	movlw	1
 28087  01DACC  6EE6               	movwf	postinc1,c
 28088  01DACE  ECB2  F0E7         	call	_PWM8_LoadDutyValue	;wreg free
 28089                           
 28090                           ; _mode_lamp_bright: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 28091  01DAD2  0012               	return		;funcret
 28092  01DAD4                     __end_of_mode_lamp_bright:
 28093                           	opt callstack 0
 28094                           
 28095 ;; *************** function _PWM8_LoadDutyValue *****************
 28096 ;; Defined at:
 28097 ;;		line 74 in file "mcc_generated_files/pwm8.c"
 28098 ;; Parameters:    Size  Location     Type
 28099 ;;  dutyValue       2  [STACK] unsigned short 
 28100 ;; Auto vars:     Size  Location     Type
 28101 ;;		None
 28102 ;; Return value:  Size  Location     Type
 28103 ;;                  1  [STACK] void 
 28104 ;; Registers used:
 28105 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 28106 ;; Tracked objects:
 28107 ;;		On entry : 0/2
 28108 ;;		On exit  : 0/0
 28109 ;;		Unchanged: 0/0
 28110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28111 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28112 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28114 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28115 ;;Total ram usage:        0 bytes
 28116 ;; Hardware stack levels used:    1
 28117 ;; Hardware stack levels required when called:   15
 28118 ;; This function calls:
 28119 ;;		Nothing
 28120 ;; This function is called by:
 28121 ;;		_mode_lamp_dim
 28122 ;;		_mode_lamp_bright
 28123 ;; This function uses a reentrant model
 28124 ;;
 28125                           
 28126                           	psect	text108
 28127  01CF64                     __ptext108:
 28128                           	opt callstack 0
 28129  01CF64                     _PWM8_LoadDutyValue:
 28130                           	opt callstack 14
 28131                           
 28132                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 28133                           ;stkvar	_dutyValue @ sp[(0)+-2]
 28134                           
 28135                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28136                           ;incstack = 0
 28137  01CF64  0EFE               	movlw	-2
 28138  01CF66  006F FF8C  F00B    	movff	plusw1,btemp+10
 28139  01CF6C  0EFF               	movlw	-1
 28140  01CF6E  006F FF8C  F00C    	movff	plusw1,btemp+11
 28141  01CF74  90D8               	bcf	status,0,c
 28142  01CF76  320C               	rrcf	(btemp+11)^0,f,c
 28143  01CF78  320B               	rrcf	(btemp+10)^0,f,c
 28144  01CF7A  90D8               	bcf	status,0,c
 28145  01CF7C  320C               	rrcf	(btemp+11)^0,f,c
 28146  01CF7E  320B               	rrcf	(btemp+10)^0,f,c
 28147  01CF80  500B               	movf	(btemp+10)^0,w,c
 28148  01CF82  6E61               	movwf	97,c	;volatile
 28149                           
 28150                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
 28151                           ;stkvar	_dutyValue @ sp[(0)+-2]
 28152  01CF84  0EFE               	movlw	-2
 28153  01CF86  006F FF8C  F00C    	movff	plusw1,btemp+11
 28154  01CF8C  0E03               	movlw	3
 28155  01CF8E  160C               	andwf	(btemp+11)^0,f,c
 28156  01CF90  0E06               	movlw	6
 28157  01CF92  6E01               	movwf	btemp^0,c
 28158  01CF94                     u10085:
 28159  01CF94  90D8               	bcf	status,0,c
 28160  01CF96  360C               	rlcf	(btemp+11)^0,f,c
 28161  01CF98  2E01               	decfsz	btemp^0,f,c
 28162  01CF9A  D7FC               	goto	u10085
 28163  01CF9C  500C               	movf	(btemp+11)^0,w,c
 28164  01CF9E  6E60               	movwf	96,c	;volatile
 28165                           
 28166                           ; _PWM8_LoadDutyValue: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 28167  01CFA0  52E5               	movf	postdec1,f,c
 28168  01CFA2  52E5               	movf	postdec1,f,c
 28169  01CFA4  0012               	return		;funcret
 28170  01CFA6                     __end_of_PWM8_LoadDutyValue:
 28171                           	opt callstack 0
 28172                           
 28173 ;; *************** function _help_button *****************
 28174 ;; Defined at:
 28175 ;;		line 26 in file "mconfig.c"
 28176 ;; Parameters:    Size  Location     Type
 28177 ;;		None
 28178 ;; Auto vars:     Size  Location     Type
 28179 ;;		None
 28180 ;; Return value:  Size  Location     Type
 28181 ;;                  1  [STACK] _Bool 
 28182 ;; Registers used:
 28183 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 28184 ;; Tracked objects:
 28185 ;;		On entry : 0/2
 28186 ;;		On exit  : 0/0
 28187 ;;		Unchanged: 0/0
 28188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28189 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28190 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28191 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28192 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28193 ;;Total ram usage:        0 bytes
 28194 ;; Hardware stack levels used:    1
 28195 ;; Hardware stack levels required when called:   16
 28196 ;; This function calls:
 28197 ;;		_StartTimer
 28198 ;;		_TimerDone
 28199 ;; This function is called by:
 28200 ;;		_check_help
 28201 ;; This function uses a reentrant model
 28202 ;;
 28203                           
 28204                           	psect	text109
 28205  01D1A0                     __ptext109:
 28206                           	opt callstack 0
 28207  01D1A0                     _help_button:
 28208                           	opt callstack 13
 28209                           
 28210                           ;mconfig.c: 28:  if (!PORTBbits.RB0) {
 28211                           
 28212                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28213                           ;incstack = 0
 28214  01D1A0  B0CB               	btfsc	203,0,c	;volatile
 28215  01D1A2  D00C               	goto	l1804
 28216                           
 28217                           ;mconfig.c: 29:   V.help = 1;
 28218  01D1A4  0102               	movlb	2	; () banked
 28219  01D1A6  859B               	bsf	(_V+155)& (0+255),2,b	;volatile
 28220                           
 28221                           ; BSR set to: 2
 28222                           ;mconfig.c: 30:   if (TimerDone(TMR_HELP))
 28223  01D1A8  0E08               	movlw	8
 28224  01D1AA  6EE6               	movwf	postinc1,c
 28225  01D1AC  ECA1  F0EA         	call	_TimerDone	;wreg free
 28226  01D1B0  5001               	movf	btemp^0,w,c
 28227  01D1B2  B4D8               	btfsc	status,2,c
 28228  01D1B4  D003               	goto	l1804
 28229                           
 28230                           ;mconfig.c: 31:    return 1;
 28231  01D1B6  0E01               	movlw	1
 28232  01D1B8  6E01               	movwf	btemp^0,c
 28233  01D1BA  0012               	return	
 28234  01D1BC                     l1804:
 28235                           
 28236                           ;mconfig.c: 34:  if (!V.help)
 28237  01D1BC  0102               	movlb	2	; () banked
 28238  01D1BE  B59B               	btfsc	(_V+155)& (0+255),2,b	;volatile
 28239  01D1C0  D008               	goto	l11570
 28240                           
 28241                           ; BSR set to: 2
 28242                           ;mconfig.c: 35:   StartTimer(TMR_HELP, 300);
 28243  01D1C2  0E2C               	movlw	44
 28244  01D1C4  6EE6               	movwf	postinc1,c
 28245  01D1C6  0E01               	movlw	1
 28246  01D1C8  6EE6               	movwf	postinc1,c
 28247  01D1CA  0E08               	movlw	8
 28248  01D1CC  6EE6               	movwf	postinc1,c
 28249  01D1CE  EC13  F0E8         	call	_StartTimer	;wreg free
 28250  01D1D2                     l11570:
 28251                           
 28252                           ;mconfig.c: 37:  return 0;
 28253  01D1D2  0E00               	movlw	0
 28254  01D1D4  6E01               	movwf	btemp^0,c
 28255                           
 28256                           ; _help_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
 28257  01D1D6  0012               	return		;funcret
 28258  01D1D8                     __end_of_help_button:
 28259                           	opt callstack 0
 28260                           
 28261 ;; *************** function _TimerDone *****************
 28262 ;; Defined at:
 28263 ;;		line 20 in file "timers.c"
 28264 ;; Parameters:    Size  Location     Type
 28265 ;;  timer           1  [STACK] const unsigned char 
 28266 ;; Auto vars:     Size  Location     Type
 28267 ;;		None
 28268 ;; Return value:  Size  Location     Type
 28269 ;;                  1  [STACK] _Bool 
 28270 ;; Registers used:
 28271 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 28272 ;; Tracked objects:
 28273 ;;		On entry : 0/2
 28274 ;;		On exit  : 0/0
 28275 ;;		Unchanged: 0/0
 28276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28277 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28278 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28279 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28280 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28281 ;;Total ram usage:        0 bytes
 28282 ;; Hardware stack levels used:    1
 28283 ;; Hardware stack levels required when called:   15
 28284 ;; This function calls:
 28285 ;;		Nothing
 28286 ;; This function is called by:
 28287 ;;		_main
 28288 ;;		_WaitMs
 28289 ;;		_help_button
 28290 ;;		_check_help
 28291 ;;		_set_display_info
 28292 ;;		_update_adc_result
 28293 ;;		_esr_check
 28294 ;; This function uses a reentrant model
 28295 ;;
 28296                           
 28297                           	psect	text110
 28298  01D542                     __ptext110:
 28299                           	opt callstack 0
 28300  01D542                     _TimerDone:
 28301                           	opt callstack 14
 28302                           
 28303                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28304                           ;incstack = 0
 28305  01D542  0004               	clrwdt		;# 
 28306                           
 28307                           ;timers.c: 23:  if (tickCount[timer] == 0) {
 28308                           ;stkvar	_timer @ sp[(0)+-1]
 28309  01D544  0EFF               	movlw	-1
 28310  01D546  50E3               	movf	plusw1,w,c
 28311  01D548  0D02               	mullw	2
 28312  01D54A  0EBF               	movlw	low _tickCount
 28313  01D54C  24F3               	addwf	243,w,c
 28314  01D54E  6ED9               	movwf	fsr2l,c
 28315  01D550  0E01               	movlw	high _tickCount
 28316  01D552  20F4               	addwfc	prodh,w,c
 28317  01D554  6EDA               	movwf	fsr2h,c
 28318  01D556  50DE               	movf	postinc2,w,c
 28319  01D558  10DE               	iorwf	postinc2,w,c
 28320  01D55A  A4D8               	btfss	status,2,c
 28321  01D55C  D002               	goto	l10622
 28322                           
 28323                           ;timers.c: 24:   return 1;
 28324  01D55E  0E01               	movlw	1
 28325  01D560  D001               	goto	L33
 28326  01D562                     l10622:
 28327                           
 28328                           ;timers.c: 26:  return 0;
 28329  01D562  0E00               	movlw	0
 28330  01D564                     L33:
 28331  01D564  6E01               	movwf	btemp^0,c
 28332                           
 28333                           ; _TimerDone: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 28334  01D566  52E5               	movf	postdec1,f,c
 28335  01D568  0012               	return		;funcret
 28336  01D56A                     __end_of_TimerDone:
 28337                           	opt callstack 0
 28338                           
 28339 ;; *************** function _StartTimer *****************
 28340 ;; Defined at:
 28341 ;;		line 12 in file "timers.c"
 28342 ;; Parameters:    Size  Location     Type
 28343 ;;  timer           1  [STACK] const unsigned char 
 28344 ;;  count           2  [STACK] const unsigned short 
 28345 ;; Auto vars:     Size  Location     Type
 28346 ;;		None
 28347 ;; Return value:  Size  Location     Type
 28348 ;;                  1  [STACK] void 
 28349 ;; Registers used:
 28350 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 28351 ;; Tracked objects:
 28352 ;;		On entry : 0/0
 28353 ;;		On exit  : 0/0
 28354 ;;		Unchanged: 0/0
 28355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28356 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28357 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28358 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28359 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28360 ;;Total ram usage:        0 bytes
 28361 ;; Hardware stack levels used:    1
 28362 ;; Hardware stack levels required when called:   15
 28363 ;; This function calls:
 28364 ;;		Nothing
 28365 ;; This function is called by:
 28366 ;;		_main
 28367 ;;		_WaitMs
 28368 ;;		_help_button
 28369 ;;		_check_help
 28370 ;;		_update_adc_result
 28371 ;;		_calc_bsoc
 28372 ;;		_esr_check
 28373 ;; This function uses a reentrant model
 28374 ;;
 28375                           
 28376                           	psect	text111
 28377  01D026                     __ptext111:
 28378                           	opt callstack 0
 28379  01D026                     _StartTimer:
 28380                           	opt callstack 0
 28381                           
 28382                           ;timers.c: 12: void StartTimer(const uint8_t timer, const uint16_t count);timers.c: 13: 
      +                          {;timers.c: 14:  tickCount[timer] = count << 1;
 28383                           ;stkvar	_count @ sp[(0)+-3]
 28384                           
 28385                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28386                           ;incstack = 0
 28387 ;; hardware stack exceeded
 28388  01D026  0EFD               	movlw	-3
 28389  01D028  006F FF8C  F00B    	movff	plusw1,btemp+10
 28390  01D02E  0EFE               	movlw	-2
 28391  01D030  006F FF8C  F00C    	movff	plusw1,btemp+11
 28392  01D036  90D8               	bcf	status,0,c
 28393  01D038  340B               	rlcf	(btemp+10)^0,w,c
 28394  01D03A  6E09               	movwf	(btemp+8)^0,c
 28395  01D03C  340C               	rlcf	(btemp+11)^0,w,c
 28396  01D03E  6E0A               	movwf	(btemp+9)^0,c
 28397                           
 28398                           ;stkvar	_timer @ sp[(0)+-1]
 28399  01D040  0EFF               	movlw	-1
 28400  01D042  50E3               	movf	plusw1,w,c
 28401  01D044  0D02               	mullw	2
 28402  01D046  0EBF               	movlw	low _tickCount
 28403  01D048  24F3               	addwf	243,w,c
 28404  01D04A  6ED9               	movwf	fsr2l,c
 28405  01D04C  0E01               	movlw	high _tickCount
 28406  01D04E  20F4               	addwfc	prodh,w,c
 28407  01D050  6EDA               	movwf	fsr2h,c
 28408  01D052  0060  F027  FFDE   	movff	btemp+8,postinc2
 28409  01D058  0060  F02B  FFDD   	movff	btemp+9,postdec2
 28410                           
 28411                           ; _StartTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
 28412  01D05E  52E5               	movf	postdec1,f,c
 28413  01D060  52E5               	movf	postdec1,f,c
 28414  01D062  52E5               	movf	postdec1,f,c
 28415  01D064  0012               	return		;funcret
 28416  01D066                     __end_of_StartTimer:
 28417                           	opt callstack 0
 28418                           
 28419 ;; *************** function _display_info *****************
 28420 ;; Defined at:
 28421 ;;		line 190 in file "mconfig.c"
 28422 ;; Parameters:    Size  Location     Type
 28423 ;;		None
 28424 ;; Auto vars:     Size  Location     Type
 28425 ;;		None
 28426 ;; Return value:  Size  Location     Type
 28427 ;;                  1  [STACK] enum E16524
 28428 ;; Registers used:
 28429 ;;		btemp
 28430 ;; Tracked objects:
 28431 ;;		On entry : 0/2
 28432 ;;		On exit  : 0/0
 28433 ;;		Unchanged: 0/0
 28434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28435 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28436 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28437 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28438 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28439 ;;Total ram usage:        0 bytes
 28440 ;; Hardware stack levels used:    1
 28441 ;; Hardware stack levels required when called:   15
 28442 ;; This function calls:
 28443 ;;		Nothing
 28444 ;; This function is called by:
 28445 ;;		_check_help
 28446 ;; This function uses a reentrant model
 28447 ;;
 28448                           
 28449                           	psect	text112
 28450  01DB54                     __ptext112:
 28451                           	opt callstack 0
 28452  01DB54                     _display_info:
 28453                           	opt callstack 14
 28454                           
 28455                           ;mconfig.c: 192:  return V.response.info;
 28456                           
 28457                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28458                           ;incstack = 0
 28459  01DB54  0060  FA90  F001   	movff	_V+164,btemp	;volatile
 28460                           
 28461                           ; _display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 28462  01DB5A  0012               	return		;funcret
 28463  01DB5C                     __end_of_display_info:
 28464                           	opt callstack 0
 28465                           
 28466 ;; *************** function _display_help *****************
 28467 ;; Defined at:
 28468 ;;		line 195 in file "mconfig.c"
 28469 ;; Parameters:    Size  Location     Type
 28470 ;;		None
 28471 ;; Auto vars:     Size  Location     Type
 28472 ;;		None
 28473 ;; Return value:  Size  Location     Type
 28474 ;;                  1  [STACK] enum E16524
 28475 ;; Registers used:
 28476 ;;		btemp
 28477 ;; Tracked objects:
 28478 ;;		On entry : 3F/2
 28479 ;;		On exit  : 0/0
 28480 ;;		Unchanged: 0/0
 28481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28482 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28483 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28484 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28485 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28486 ;;Total ram usage:        0 bytes
 28487 ;; Hardware stack levels used:    1
 28488 ;; Hardware stack levels required when called:   15
 28489 ;; This function calls:
 28490 ;;		Nothing
 28491 ;; This function is called by:
 28492 ;;		_check_help
 28493 ;; This function uses a reentrant model
 28494 ;;
 28495                           
 28496                           	psect	text113
 28497  01DB5C                     __ptext113:
 28498                           	opt callstack 0
 28499  01DB5C                     _display_help:
 28500                           	opt callstack 14
 28501                           
 28502                           ;mconfig.c: 197:  return V.response.help_temp;
 28503                           
 28504                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28505                           ;incstack = 0
 28506  01DB5C  0060  FA94  F001   	movff	_V+165,btemp	;volatile
 28507                           
 28508                           ; _display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 28509  01DB62  0012               	return		;funcret
 28510  01DB64                     __end_of_display_help:
 28511                           	opt callstack 0
 28512                           
 28513 ;; *************** function _check_enter_button *****************
 28514 ;; Defined at:
 28515 ;;		line 49 in file "hid.c"
 28516 ;; Parameters:    Size  Location     Type
 28517 ;;  h               1  [STACK] PTR struct H_data
 28518 ;;		 -> H(9), 
 28519 ;; Auto vars:     Size  Location     Type
 28520 ;;		None
 28521 ;; Return value:  Size  Location     Type
 28522 ;;                  1  [STACK] _Bool 
 28523 ;; Registers used:
 28524 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 28525 ;; Tracked objects:
 28526 ;;		On entry : 0/0
 28527 ;;		On exit  : 0/0
 28528 ;;		Unchanged: 0/0
 28529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28530 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28531 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28532 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28533 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28534 ;;Total ram usage:        0 bytes
 28535 ;; Hardware stack levels used:    1
 28536 ;; Hardware stack levels required when called:   15
 28537 ;; This function calls:
 28538 ;;		Nothing
 28539 ;; This function is called by:
 28540 ;;		_main
 28541 ;; This function uses a reentrant model
 28542 ;;
 28543                           
 28544                           	psect	text114
 28545  01D066                     __ptext114:
 28546                           	opt callstack 0
 28547  01D066                     _check_enter_button:
 28548                           	opt callstack 15
 28549                           
 28550                           ;hid.c: 49: _Bool check_enter_button(H_data* h);hid.c: 50: {;hid.c: 51:  if (!h->wait_en
      +                          ter && (h->enter_p == SW_OFF)) {
 28551                           ;stkvar	_h @ sp[(0)+-1]
 28552                           
 28553                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28554                           ;incstack = 0
 28555  01D066  0EFF               	movlw	-1
 28556  01D068  50E3               	movf	plusw1,w,c
 28557  01D06A  6ED9               	movwf	fsr2l,c
 28558  01D06C  6ADA               	clrf	fsr2h,c
 28559  01D06E  0E04               	movlw	4
 28560  01D070  26D9               	addwf	fsr2l,f,c
 28561  01D072  50DF               	movf	indf2,w,c
 28562  01D074  A4D8               	btfss	status,2,c
 28563  01D076  D013               	goto	l12490
 28564                           
 28565                           ;stkvar	_h @ sp[(0)+-1]
 28566  01D078  0EFF               	movlw	-1
 28567  01D07A  50E3               	movf	plusw1,w,c
 28568  01D07C  6ED9               	movwf	fsr2l,c
 28569  01D07E  6ADA               	clrf	fsr2h,c
 28570  01D080  0E05               	movlw	5
 28571  01D082  26D9               	addwf	fsr2l,f,c
 28572  01D084  50DF               	movf	indf2,w,c
 28573  01D086  A4D8               	btfss	status,2,c
 28574  01D088  D00A               	goto	l12490
 28575                           
 28576                           ;hid.c: 52:   h->wait_enter = 1;
 28577                           ;stkvar	_h @ sp[(0)+-1]
 28578  01D08A  0EFF               	movlw	-1
 28579  01D08C  50E3               	movf	plusw1,w,c
 28580  01D08E  6ED9               	movwf	fsr2l,c
 28581  01D090  6ADA               	clrf	fsr2h,c
 28582  01D092  0E04               	movlw	4
 28583  01D094  26D9               	addwf	fsr2l,f,c
 28584  01D096  0E01               	movlw	1
 28585  01D098  6EDF               	movwf	indf2,c
 28586                           
 28587                           ;hid.c: 53:   return 1;
 28588  01D09A  0E01               	movlw	1
 28589  01D09C  D001               	goto	L34
 28590  01D09E                     l12490:
 28591                           
 28592                           ;hid.c: 55:  return 0;
 28593  01D09E  0E00               	movlw	0
 28594  01D0A0                     L34:
 28595  01D0A0  6E01               	movwf	btemp^0,c
 28596                           
 28597                           ; _check_enter_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
 28598  01D0A2  52E5               	movf	postdec1,f,c
 28599  01D0A4  0012               	return		;funcret
 28600  01D0A6                     __end_of_check_enter_button:
 28601                           	opt callstack 0
 28602                           
 28603 ;; *************** function _calc_ror_data *****************
 28604 ;; Defined at:
 28605 ;;		line 102 in file "mbmc.c"
 28606 ;; Parameters:    Size  Location     Type
 28607 ;;		None
 28608 ;; Auto vars:     Size  Location     Type
 28609 ;;		None
 28610 ;; Return value:  Size  Location     Type
 28611 ;;                  1  [STACK] void 
 28612 ;; Registers used:
 28613 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 28614 ;; Tracked objects:
 28615 ;;		On entry : 0/0
 28616 ;;		On exit  : 0/0
 28617 ;;		Unchanged: 0/0
 28618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28619 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28620 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28621 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28622 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28623 ;;Total ram usage:        0 bytes
 28624 ;; Hardware stack levels used:    1
 28625 ;; Hardware stack levels required when called:   18
 28626 ;; This function calls:
 28627 ;;		___flge
 28628 ;;		___flsub
 28629 ;;		_conv_raw_result
 28630 ;;		_fabsf
 28631 ;; This function is called by:
 28632 ;;		_main
 28633 ;; This function uses a reentrant model
 28634 ;;
 28635                           
 28636                           	psect	text115
 28637  019A0C                     __ptext115:
 28638                           	opt callstack 0
 28639  019A0C                     _calc_ror_data:
 28640                           	opt callstack 12
 28641                           
 28642                           ;mbmc.c: 104:  static float bvror = 0.0, bcror = 0.0;;mbmc.c: 106:  C.bc_ror = fabsf(con
      +                          v_raw_result(C_BATT, CONV) - bcror);
 28643                           
 28644                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28645                           ;incstack = 0
 28646  019A0C  0060  F21B  FFE6   	movff	calc_ror_data@bcror,postinc1
 28647  019A12  0060  F21F  FFE6   	movff	calc_ror_data@bcror+1,postinc1
 28648  019A18  0060  F223  FFE6   	movff	calc_ror_data@bcror+2,postinc1
 28649  019A1E  0060  F227  FFE6   	movff	calc_ror_data@bcror+3,postinc1
 28650  019A24  0E00               	movlw	0
 28651  019A26  6EE6               	movwf	postinc1,c
 28652  019A28  0E00               	movlw	0
 28653  019A2A  6EE6               	movwf	postinc1,c
 28654  019A2C  EC02  F0B0         	call	_conv_raw_result	;wreg free
 28655  019A30  0060  F007  FFE6   	movff	btemp,postinc1
 28656  019A36  0060  F00B  FFE6   	movff	btemp+1,postinc1
 28657  019A3C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 28658  019A42  0060  F013  FFE6   	movff	btemp+3,postinc1
 28659  019A48  EC6D  F0E7         	call	___flsub	;wreg free
 28660  019A4C  0060  F007  FFE6   	movff	btemp,postinc1
 28661  019A52  0060  F00B  FFE6   	movff	btemp+1,postinc1
 28662  019A58  0060  F00F  FFE6   	movff	btemp+2,postinc1
 28663  019A5E  0060  F013  FFE6   	movff	btemp+3,postinc1
 28664  019A64  ECAC  F0DD         	call	_fabsf	;wreg free
 28665  019A68  0060  F004  F86F   	movff	btemp,_C+112	;volatile
 28666  019A6E  0060  F008  F870   	movff	btemp+1,_C+113	;volatile
 28667  019A74  0060  F00C  F871   	movff	btemp+2,_C+114	;volatile
 28668  019A7A  0060  F010  F872   	movff	btemp+3,_C+115	;volatile
 28669                           
 28670                           ;mbmc.c: 107:  bcror = conv_raw_result(C_BATT, CONV);
 28671  019A80  0E00               	movlw	0
 28672  019A82  6EE6               	movwf	postinc1,c
 28673  019A84  0E00               	movlw	0
 28674  019A86  6EE6               	movwf	postinc1,c
 28675  019A88  EC02  F0B0         	call	_conv_raw_result	;wreg free
 28676  019A8C  0060  F004  F086   	movff	btemp,calc_ror_data@bcror
 28677  019A92  0060  F008  F087   	movff	btemp+1,calc_ror_data@bcror+1
 28678  019A98  0060  F00C  F088   	movff	btemp+2,calc_ror_data@bcror+2
 28679  019A9E  0060  F010  F089   	movff	btemp+3,calc_ror_data@bcror+3
 28680                           
 28681                           ;mbmc.c: 108:  C.bv_ror = fabsf(conv_raw_result(V_BAT, CONV) - bvror);
 28682  019AA4  0060  F22B  FFE6   	movff	calc_ror_data@bvror,postinc1
 28683  019AAA  0060  F22F  FFE6   	movff	calc_ror_data@bvror+1,postinc1
 28684  019AB0  0060  F233  FFE6   	movff	calc_ror_data@bvror+2,postinc1
 28685  019AB6  0060  F237  FFE6   	movff	calc_ror_data@bvror+3,postinc1
 28686  019ABC  0E00               	movlw	0
 28687  019ABE  6EE6               	movwf	postinc1,c
 28688  019AC0  0E04               	movlw	4
 28689  019AC2  6EE6               	movwf	postinc1,c
 28690  019AC4  EC02  F0B0         	call	_conv_raw_result	;wreg free
 28691  019AC8  0060  F007  FFE6   	movff	btemp,postinc1
 28692  019ACE  0060  F00B  FFE6   	movff	btemp+1,postinc1
 28693  019AD4  0060  F00F  FFE6   	movff	btemp+2,postinc1
 28694  019ADA  0060  F013  FFE6   	movff	btemp+3,postinc1
 28695  019AE0  EC6D  F0E7         	call	___flsub	;wreg free
 28696  019AE4  0060  F007  FFE6   	movff	btemp,postinc1
 28697  019AEA  0060  F00B  FFE6   	movff	btemp+1,postinc1
 28698  019AF0  0060  F00F  FFE6   	movff	btemp+2,postinc1
 28699  019AF6  0060  F013  FFE6   	movff	btemp+3,postinc1
 28700  019AFC  ECAC  F0DD         	call	_fabsf	;wreg free
 28701  019B00  0060  F004  F86B   	movff	btemp,_C+108	;volatile
 28702  019B06  0060  F008  F86C   	movff	btemp+1,_C+109	;volatile
 28703  019B0C  0060  F00C  F86D   	movff	btemp+2,_C+110	;volatile
 28704  019B12  0060  F010  F86E   	movff	btemp+3,_C+111	;volatile
 28705                           
 28706                           ;mbmc.c: 109:  if (C.bv_ror < 0.0051)
 28707  019B18  0EE7               	movlw	231
 28708  019B1A  6EE6               	movwf	postinc1,c
 28709  019B1C  0E1D               	movlw	29
 28710  019B1E  6EE6               	movwf	postinc1,c
 28711  019B20  0EA7               	movlw	167
 28712  019B22  6EE6               	movwf	postinc1,c
 28713  019B24  0E3B               	movlw	59
 28714  019B26  6EE6               	movwf	postinc1,c
 28715  019B28  EE22  F06B         	lfsr	2,_C+108	;volatile
 28716  019B2C  006F FF7B FFE6     	movff	postinc2,postinc1
 28717  019B32  006F FF7B FFE6     	movff	postinc2,postinc1
 28718  019B38  006F FF7B FFE6     	movff	postinc2,postinc1
 28719  019B3E  006F FF7B FFE6     	movff	postinc2,postinc1
 28720  019B44  ECFB  F0CF         	call	___flge	;wreg free
 28721  019B48  B001               	btfsc	btemp& (0+255),0,c
 28722  019B4A  D010               	goto	l12142
 28723                           
 28724                           ;mbmc.c: 110:   C.bv_ror = 0.0140 + 0.0001;
 28725  019B4C  0EB0               	movlw	176
 28726  019B4E  006F FFA0  F86B    	movff	wreg,_C+108	;volatile
 28727  019B54  0E03               	movlw	3
 28728  019B56  006F FFA0  F86C    	movff	wreg,_C+109	;volatile
 28729  019B5C  0E67               	movlw	103
 28730  019B5E  006F FFA0  F86D    	movff	wreg,_C+110	;volatile
 28731  019B64  0E3C               	movlw	60
 28732  019B66  006F FFA0  F86E    	movff	wreg,_C+111	;volatile
 28733  019B6C                     l12142:
 28734                           
 28735                           ;mbmc.c: 111:  bvror = conv_raw_result(V_BAT, CONV);
 28736  019B6C  0E00               	movlw	0
 28737  019B6E  6EE6               	movwf	postinc1,c
 28738  019B70  0E04               	movlw	4
 28739  019B72  6EE6               	movwf	postinc1,c
 28740  019B74  EC02  F0B0         	call	_conv_raw_result	;wreg free
 28741  019B78  0060  F004  F08A   	movff	btemp,calc_ror_data@bvror
 28742  019B7E  0060  F008  F08B   	movff	btemp+1,calc_ror_data@bvror+1
 28743  019B84  0060  F00C  F08C   	movff	btemp+2,calc_ror_data@bvror+2
 28744  019B8A  0060  F010  F08D   	movff	btemp+3,calc_ror_data@bvror+3
 28745                           
 28746                           ; _calc_ror_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
 28747  019B90  0012               	return		;funcret
 28748  019B92                     __end_of_calc_ror_data:
 28749                           	opt callstack 0
 28750                           
 28751 ;; *************** function _fabsf *****************
 28752 ;; Defined at:
 28753 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fabsf.c"
 28754 ;; Parameters:    Size  Location     Type
 28755 ;;  x               4  [STACK] float 
 28756 ;; Auto vars:     Size  Location     Type
 28757 ;;  u               4  [STACK] struct .
 28758 ;; Return value:  Size  Location     Type
 28759 ;;                  4  [STACK] float 
 28760 ;; Registers used:
 28761 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
 28762 ;; Tracked objects:
 28763 ;;		On entry : 0/0
 28764 ;;		On exit  : 0/0
 28765 ;;		Unchanged: 0/0
 28766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28767 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28768 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28769 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28770 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28771 ;;Total ram usage:        0 bytes
 28772 ;; Hardware stack levels used:    1
 28773 ;; Hardware stack levels required when called:   15
 28774 ;; This function calls:
 28775 ;;		Nothing
 28776 ;; This function is called by:
 28777 ;;		_main
 28778 ;;		_calc_ror_data
 28779 ;;		_calc_bsoc
 28780 ;;		_esr_check
 28781 ;; This function uses a reentrant model
 28782 ;;
 28783                           
 28784                           	psect	text116
 28785  01BB58                     __ptext116:
 28786                           	opt callstack 0
 28787  01BB58                     _fabsf:
 28788                           	opt callstack 0
 28789                           
 28790                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28791  01BB58  52E6               	movf	postinc1,f,c
 28792  01BB5A  52E6               	movf	postinc1,f,c
 28793  01BB5C  52E6               	movf	postinc1,f,c
 28794  01BB5E  52E6               	movf	postinc1,f,c
 28795                           
 28796                           ;incstack = 0
 28797 ;; hardware stack exceeded
 28798  01BB60  0060  F1F8  F009   	movff	fabsf@F463,btemp+8
 28799  01BB66  0060  F1FC  F00A   	movff	fabsf@F463+1,btemp+9
 28800  01BB6C  0060  F200  F00B   	movff	fabsf@F463+2,btemp+10
 28801  01BB72  0060  F204  F00C   	movff	fabsf@F463+3,btemp+11
 28802                           
 28803                           ;stkvar	_u @ sp[(-4)+0]
 28804  01BB78  0EFC               	movlw	-4
 28805  01BB7A  0060  F027  FFE3   	movff	btemp+8,plusw1
 28806  01BB80  0EFD               	movlw	-3
 28807  01BB82  0060  F02B  FFE3   	movff	btemp+9,plusw1
 28808  01BB88  0EFE               	movlw	-2
 28809  01BB8A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28810  01BB90  0EFF               	movlw	-1
 28811  01BB92  0060  F033  FFE3   	movff	btemp+11,plusw1
 28812                           
 28813                           ;stkvar	_x @ sp[(-4)+-4]
 28814  01BB98  0EF8               	movlw	-8
 28815  01BB9A  006F FF8C  F009    	movff	plusw1,btemp+8
 28816  01BBA0  0EF9               	movlw	-7
 28817  01BBA2  006F FF8C  F00A    	movff	plusw1,btemp+9
 28818  01BBA8  0EFA               	movlw	-6
 28819  01BBAA  006F FF8C  F00B    	movff	plusw1,btemp+10
 28820  01BBB0  0EFB               	movlw	-5
 28821  01BBB2  006F FF8C  F00C    	movff	plusw1,btemp+11
 28822                           
 28823                           ;stkvar	_u @ sp[(-4)+0]
 28824  01BBB8  0EFC               	movlw	-4
 28825  01BBBA  0060  F027  FFE3   	movff	btemp+8,plusw1
 28826  01BBC0  0EFD               	movlw	-3
 28827  01BBC2  0060  F02B  FFE3   	movff	btemp+9,plusw1
 28828  01BBC8  0EFE               	movlw	-2
 28829  01BBCA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28830  01BBD0  0EFF               	movlw	-1
 28831  01BBD2  0060  F033  FFE3   	movff	btemp+11,plusw1
 28832                           
 28833                           ;stkvar	_u @ sp[(-4)+0]
 28834  01BBD8  0EFF               	movlw	-1
 28835  01BBDA  9EE3               	bcf	plusw1,7,c
 28836                           
 28837                           ;stkvar	_u @ sp[(-4)+0]
 28838  01BBDC  0EFC               	movlw	-4
 28839  01BBDE  006F FF8C  F001    	movff	plusw1,btemp
 28840  01BBE4  0EFD               	movlw	-3
 28841  01BBE6  006F FF8C  F002    	movff	plusw1,btemp+1
 28842  01BBEC  0EFE               	movlw	-2
 28843  01BBEE  006F FF8C  F003    	movff	plusw1,btemp+2
 28844  01BBF4  0EFF               	movlw	-1
 28845  01BBF6  006F FF8C  F004    	movff	plusw1,btemp+3
 28846                           
 28847                           ; _fabsf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 28848  01BBFC  0EF8               	movlw	248
 28849  01BBFE  26E1               	addwf	fsr1l,f,c
 28850  01BC00  0EFF               	movlw	255
 28851  01BC02  22E2               	addwfc	fsr1h,f,c
 28852  01BC04  0012               	return		;funcret
 28853  01BC06                     __end_of_fabsf:
 28854                           	opt callstack 0
 28855                           
 28856 ;; *************** function _conv_raw_result *****************
 28857 ;; Defined at:
 28858 ;;		line 133 in file "daq.c"
 28859 ;; Parameters:    Size  Location     Type
 28860 ;;  chan            1  [STACK] const enum E16605
 28861 ;;  to_what         1  [STACK] const enum E16843
 28862 ;; Auto vars:     Size  Location     Type
 28863 ;;		None
 28864 ;; Return value:  Size  Location     Type
 28865 ;;                  4  [STACK] float 
 28866 ;; Registers used:
 28867 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 28868 ;; Tracked objects:
 28869 ;;		On entry : 0/0
 28870 ;;		On exit  : 0/0
 28871 ;;		Unchanged: 0/0
 28872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28873 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28874 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28876 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28877 ;;Total ram usage:        0 bytes
 28878 ;; Hardware stack levels used:    1
 28879 ;; Hardware stack levels required when called:   17
 28880 ;; This function calls:
 28881 ;;		___fldiv
 28882 ;;		___flmul
 28883 ;;		___flsub
 28884 ;;		___xxtofl
 28885 ;;		_get_raw_result
 28886 ;;		_nanf
 28887 ;; This function is called by:
 28888 ;;		_main
 28889 ;;		_convert_adc_data
 28890 ;;		_calc_ror_data
 28891 ;;		_check_day_time
 28892 ;;		_init_bsoc
 28893 ;;		_esr_check
 28894 ;; This function uses a reentrant model
 28895 ;;
 28896                           
 28897                           	psect	text117
 28898  016004                     __ptext117:
 28899                           	opt callstack 0
 28900  016004                     _conv_raw_result:
 28901                           	opt callstack 0
 28902                           
 28903                           ;daq.c: 133: float conv_raw_result(const adcc_channel_t chan, const adc_conv_t to_what);
      +                          daq.c: 134: {;daq.c: 136:  switch (to_what) {
 28904                           
 28905                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28906                           ;incstack = 0
 28907 ;; hardware stack exceeded
 28908  016004  D24A               	goto	l10604
 28909  016006                     l10550:
 28910                           
 28911                           ;daq.c: 138:   if (!(0b0011110001110111 >> chan & 0x1))
 28912                           ;stkvar	_chan @ sp[(0)+-1]
 28913  016006  0EFF               	movlw	-1
 28914  016008  006F FF8C  F00C    	movff	plusw1,btemp+11
 28915  01600E  0E77               	movlw	119
 28916  016010  6E09               	movwf	(btemp+8)^0,c
 28917  016012  0E3C               	movlw	60
 28918  016014  6E0A               	movwf	(btemp+9)^0,c
 28919  016016  2A0C               	incf	(btemp+11)^0,f,c
 28920  016018  D003               	goto	u9774
 28921  01601A                     u9775:
 28922  01601A  340A               	rlcf	(btemp+9)^0,w,c
 28923  01601C  320A               	rrcf	(btemp+9)^0,f,c
 28924  01601E  3209               	rrcf	(btemp+8)^0,f,c
 28925  016020                     u9774:
 28926  016020  2E0C               	decfsz	(btemp+11)^0,f,c
 28927  016022  D7FB               	goto	u9775
 28928  016024  B009               	btfsc	(btemp+8)^0,0,c
 28929  016026  D007               	goto	l10556
 28930                           
 28931                           ;daq.c: 139:    return nanf("");
 28932  016028  0EE7               	movlw	low (STR_93+126)
 28933  01602A  6EE6               	movwf	postinc1,c
 28934  01602C  0EFA               	movlw	high (STR_93+126)
 28935  01602E  6EE6               	movwf	postinc1,c
 28936  016030  EC8D  F0E4         	call	_nanf	;wreg free
 28937  016034  D242               	goto	l1961
 28938  016036                     l10556:
 28939                           
 28940                           ;daq.c: 141:   if (0b0000000000000011 >> chan & 0x1) {
 28941                           ;stkvar	_chan @ sp[(0)+-1]
 28942  016036  0EFF               	movlw	-1
 28943  016038  006F FF8C  F00C    	movff	plusw1,btemp+11
 28944  01603E  0E03               	movlw	3
 28945  016040  6E09               	movwf	(btemp+8)^0,c
 28946  016042  0E00               	movlw	0
 28947  016044  6E0A               	movwf	(btemp+9)^0,c
 28948  016046  2A0C               	incf	(btemp+11)^0,f,c
 28949  016048  D003               	goto	u9794
 28950  01604A                     u9795:
 28951  01604A  340A               	rlcf	(btemp+9)^0,w,c
 28952  01604C  320A               	rrcf	(btemp+9)^0,f,c
 28953  01604E  3209               	rrcf	(btemp+8)^0,f,c
 28954  016050                     u9794:
 28955  016050  2E0C               	decfsz	(btemp+11)^0,f,c
 28956  016052  D7FB               	goto	u9795
 28957  016054  A009               	btfss	(btemp+8)^0,0,c
 28958  016056  D0F3               	goto	l10570
 28959                           
 28960                           ;daq.c: 142:    if (0b0000000000000001 >> chan & 0x1) {
 28961                           ;stkvar	_chan @ sp[(0)+-1]
 28962  016058  0EFF               	movlw	-1
 28963  01605A  006F FF8C  F00C    	movff	plusw1,btemp+11
 28964  016060  0E01               	movlw	1
 28965  016062  6E09               	movwf	(btemp+8)^0,c
 28966  016064  0E00               	movlw	0
 28967  016066  6E0A               	movwf	(btemp+9)^0,c
 28968  016068  2A0C               	incf	(btemp+11)^0,f,c
 28969  01606A  D003               	goto	u9814
 28970  01606C                     u9815:
 28971  01606C  340A               	rlcf	(btemp+9)^0,w,c
 28972  01606E  320A               	rrcf	(btemp+9)^0,f,c
 28973  016070  3209               	rrcf	(btemp+8)^0,f,c
 28974  016072                     u9814:
 28975  016072  2E0C               	decfsz	(btemp+11)^0,f,c
 28976  016074  D7FB               	goto	u9815
 28977  016076  A009               	btfss	(btemp+8)^0,0,c
 28978  016078  D071               	goto	l10566
 28979                           
 28980                           ;daq.c: 143:     return((float) ((int16_t) get_raw_result(chan)) - R.n_offset[0]) * R.n_
      +                          scalar[0];
 28981  01607A  0060  F4C7  FFE6   	movff	_R+42,postinc1
 28982  016080  0060  F4CB  FFE6   	movff	_R+43,postinc1
 28983  016086  0060  F4CF  FFE6   	movff	_R+44,postinc1
 28984  01608C  0060  F4D3  FFE6   	movff	_R+45,postinc1
 28985  016092  0060  F4B4  F009   	movff	_R+38,btemp+8	;volatile
 28986  016098  0060  F4B8  F00A   	movff	_R+39,btemp+9	;volatile
 28987  01609E  0E00               	movlw	0
 28988  0160A0  BE0A               	btfsc	(btemp+9)^0,7,c
 28989  0160A2  0EFF               	movlw	255
 28990  0160A4  6E0B               	movwf	(btemp+10)^0,c
 28991  0160A6  6E0C               	movwf	(btemp+11)^0,c
 28992  0160A8  0060  F027  FFE6   	movff	btemp+8,postinc1
 28993  0160AE  0060  F02B  FFE6   	movff	btemp+9,postinc1
 28994  0160B4  0060  F02F  FFE6   	movff	btemp+10,postinc1
 28995  0160BA  0060  F033  FFE6   	movff	btemp+11,postinc1
 28996  0160C0  0E01               	movlw	1
 28997  0160C2  6EE6               	movwf	postinc1,c
 28998  0160C4  ECA6  F0C8         	call	___xxtofl	;wreg free
 28999  0160C8  0060  F007  FFE6   	movff	btemp,postinc1
 29000  0160CE  0060  F00B  FFE6   	movff	btemp+1,postinc1
 29001  0160D4  0060  F00F  FFE6   	movff	btemp+2,postinc1
 29002  0160DA  0060  F013  FFE6   	movff	btemp+3,postinc1
 29003                           
 29004                           ;stkvar	_chan @ sp[(-8)+-1]
 29005  0160E0  0EF7               	movlw	-9
 29006  0160E2  50E3               	movf	plusw1,w,c
 29007  0160E4  6EE6               	movwf	postinc1,c
 29008  0160E6  EC37  F0EC         	call	_get_raw_result	;wreg free
 29009  0160EA  0060  F004  F00B   	movff	btemp,btemp+10
 29010  0160F0  0060  F008  F00C   	movff	btemp+1,btemp+11
 29011  0160F6  500B               	movf	(btemp+10)^0,w,c
 29012  0160F8  6E05               	movwf	(btemp+4)^0,c
 29013  0160FA  500C               	movf	(btemp+11)^0,w,c
 29014  0160FC  6E06               	movwf	(btemp+5)^0,c
 29015  0160FE  6A07               	clrf	(btemp+6)^0,c
 29016  016100  6A08               	clrf	(btemp+7)^0,c
 29017  016102  0060  F017  FFE6   	movff	btemp+4,postinc1
 29018  016108  0060  F01B  FFE6   	movff	btemp+5,postinc1
 29019  01610E  0060  F01F  FFE6   	movff	btemp+6,postinc1
 29020  016114  0060  F023  FFE6   	movff	btemp+7,postinc1
 29021  01611A  0E00               	movlw	0
 29022  01611C  6EE6               	movwf	postinc1,c
 29023  01611E  ECA6  F0C8         	call	___xxtofl	;wreg free
 29024  016122  0060  F007  FFE6   	movff	btemp,postinc1
 29025  016128  0060  F00B  FFE6   	movff	btemp+1,postinc1
 29026  01612E  0060  F00F  FFE6   	movff	btemp+2,postinc1
 29027  016134  0060  F013  FFE6   	movff	btemp+3,postinc1
 29028  01613A  EC6D  F0E7         	call	___flsub	;wreg free
 29029  01613E  0060  F007  FFE6   	movff	btemp,postinc1
 29030  016144  0060  F00B  FFE6   	movff	btemp+1,postinc1
 29031  01614A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 29032  016150  0060  F013  FFE6   	movff	btemp+3,postinc1
 29033  016156  EC52  F0A5         	call	___flmul	;wreg free
 29034  01615A  D1AF               	goto	l1961
 29035  01615C                     l10566:
 29036                           
 29037                           ;daq.c: 145:     return((float) ((int16_t) get_raw_result(chan)) - R.n_offset[1]) * R.n_
      +                          scalar[1];
 29038  01615C  0060  F4D7  FFE6   	movff	_R+46,postinc1
 29039  016162  0060  F4DB  FFE6   	movff	_R+47,postinc1
 29040  016168  0060  F4DF  FFE6   	movff	_R+48,postinc1
 29041  01616E  0060  F4E3  FFE6   	movff	_R+49,postinc1
 29042  016174  0060  F4BC  F009   	movff	_R+40,btemp+8	;volatile
 29043  01617A  0060  F4C0  F00A   	movff	_R+41,btemp+9	;volatile
 29044  016180  0E00               	movlw	0
 29045  016182  BE0A               	btfsc	(btemp+9)^0,7,c
 29046  016184  0EFF               	movlw	255
 29047  016186  6E0B               	movwf	(btemp+10)^0,c
 29048  016188  6E0C               	movwf	(btemp+11)^0,c
 29049  01618A  0060  F027  FFE6   	movff	btemp+8,postinc1
 29050  016190  0060  F02B  FFE6   	movff	btemp+9,postinc1
 29051  016196  0060  F02F  FFE6   	movff	btemp+10,postinc1
 29052  01619C  0060  F033  FFE6   	movff	btemp+11,postinc1
 29053  0161A2  0E01               	movlw	1
 29054  0161A4  6EE6               	movwf	postinc1,c
 29055  0161A6  ECA6  F0C8         	call	___xxtofl	;wreg free
 29056  0161AA  0060  F007  FFE6   	movff	btemp,postinc1
 29057  0161B0  0060  F00B  FFE6   	movff	btemp+1,postinc1
 29058  0161B6  0060  F00F  FFE6   	movff	btemp+2,postinc1
 29059  0161BC  0060  F013  FFE6   	movff	btemp+3,postinc1
 29060                           
 29061                           ;stkvar	_chan @ sp[(-8)+-1]
 29062  0161C2  0EF7               	movlw	-9
 29063  0161C4  50E3               	movf	plusw1,w,c
 29064  0161C6  6EE6               	movwf	postinc1,c
 29065  0161C8  EC37  F0EC         	call	_get_raw_result	;wreg free
 29066  0161CC  0060  F004  F00B   	movff	btemp,btemp+10
 29067  0161D2  0060  F008  F00C   	movff	btemp+1,btemp+11
 29068  0161D8  500B               	movf	(btemp+10)^0,w,c
 29069  0161DA  6E05               	movwf	(btemp+4)^0,c
 29070  0161DC  500C               	movf	(btemp+11)^0,w,c
 29071  0161DE  6E06               	movwf	(btemp+5)^0,c
 29072  0161E0  6A07               	clrf	(btemp+6)^0,c
 29073  0161E2  6A08               	clrf	(btemp+7)^0,c
 29074  0161E4  0060  F017  FFE6   	movff	btemp+4,postinc1
 29075  0161EA  0060  F01B  FFE6   	movff	btemp+5,postinc1
 29076  0161F0  0060  F01F  FFE6   	movff	btemp+6,postinc1
 29077  0161F6  0060  F023  FFE6   	movff	btemp+7,postinc1
 29078  0161FC  0E00               	movlw	0
 29079  0161FE  6EE6               	movwf	postinc1,c
 29080  016200  ECA6  F0C8         	call	___xxtofl	;wreg free
 29081  016204  0060  F007  FFE6   	movff	btemp,postinc1
 29082  01620A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 29083  016210  0060  F00F  FFE6   	movff	btemp+2,postinc1
 29084  016216  0060  F013  FFE6   	movff	btemp+3,postinc1
 29085  01621C  EC6D  F0E7         	call	___flsub	;wreg free
 29086  016220  0060  F007  FFE6   	movff	btemp,postinc1
 29087  016226  0060  F00B  FFE6   	movff	btemp+1,postinc1
 29088  01622C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 29089  016232  0060  F013  FFE6   	movff	btemp+3,postinc1
 29090  016238  EC52  F0A5         	call	___flmul	;wreg free
 29091  01623C  D13E               	goto	l1961
 29092  01623E                     l10570:
 29093                           
 29094                           ;daq.c: 148:    if (0b0000100000000000 >> chan & 0x1) {
 29095                           ;stkvar	_chan @ sp[(0)+-1]
 29096  01623E  0EFF               	movlw	-1
 29097  016240  006F FF8C  F00C    	movff	plusw1,btemp+11
 29098  016246  0E00               	movlw	0
 29099  016248  6E09               	movwf	(btemp+8)^0,c
 29100  01624A  0E08               	movlw	8
 29101  01624C  6E0A               	movwf	(btemp+9)^0,c
 29102  01624E  2A0C               	incf	(btemp+11)^0,f,c
 29103  016250  D003               	goto	u9834
 29104  016252                     u9835:
 29105  016252  340A               	rlcf	(btemp+9)^0,w,c
 29106  016254  320A               	rrcf	(btemp+9)^0,f,c
 29107  016256  3209               	rrcf	(btemp+8)^0,f,c
 29108  016258                     u9834:
 29109  016258  2E0C               	decfsz	(btemp+11)^0,f,c
 29110  01625A  D7FB               	goto	u9835
 29111  01625C  A009               	btfss	(btemp+8)^0,0,c
 29112  01625E  D008               	goto	l10578
 29113                           
 29114                           ;daq.c: 149:     return 25.0;
 29115  016260  0E00               	movlw	0
 29116  016262  6E01               	movwf	btemp^0,c
 29117  016264  0E00               	movlw	0
 29118  016266  6E02               	movwf	(btemp+1)^0,c
 29119  016268  0EC8               	movlw	200
 29120  01626A  6E03               	movwf	(btemp+2)^0,c
 29121  01626C  0E41               	movlw	65
 29122  01626E  D113               	goto	L35
 29123  016270                     l10578:
 29124                           
 29125                           ;daq.c: 151:     return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
 29126  016270  0E00               	movlw	0
 29127  016272  6EE6               	movwf	postinc1,c
 29128  016274  0E00               	movlw	0
 29129  016276  6EE6               	movwf	postinc1,c
 29130  016278  0E7A               	movlw	122
 29131  01627A  6EE6               	movwf	postinc1,c
 29132  01627C  0E44               	movlw	68
 29133  01627E  6EE6               	movwf	postinc1,c
 29134  016280  0E61               	movlw	97
 29135  016282  6EE6               	movwf	postinc1,c
 29136  016284  0E03               	movlw	3
 29137  016286  6EE6               	movwf	postinc1,c
 29138  016288  0E84               	movlw	132
 29139  01628A  6EE6               	movwf	postinc1,c
 29140  01628C  0E40               	movlw	64
 29141  01628E  6EE6               	movwf	postinc1,c
 29142                           
 29143                           ;stkvar	_chan @ sp[(-8)+-1]
 29144  016290  0EF7               	movlw	-9
 29145  016292  50E3               	movf	plusw1,w,c
 29146  016294  6EE6               	movwf	postinc1,c
 29147  016296  EC37  F0EC         	call	_get_raw_result	;wreg free
 29148  01629A  0060  F004  F00B   	movff	btemp,btemp+10
 29149  0162A0  0060  F008  F00C   	movff	btemp+1,btemp+11
 29150  0162A6  500B               	movf	(btemp+10)^0,w,c
 29151  0162A8  6E05               	movwf	(btemp+4)^0,c
 29152  0162AA  500C               	movf	(btemp+11)^0,w,c
 29153  0162AC  6E06               	movwf	(btemp+5)^0,c
 29154  0162AE  6A07               	clrf	(btemp+6)^0,c
 29155  0162B0  6A08               	clrf	(btemp+7)^0,c
 29156  0162B2  0060  F017  FFE6   	movff	btemp+4,postinc1
 29157  0162B8  0060  F01B  FFE6   	movff	btemp+5,postinc1
 29158  0162BE  0060  F01F  FFE6   	movff	btemp+6,postinc1
 29159  0162C4  0060  F023  FFE6   	movff	btemp+7,postinc1
 29160  0162CA  0E00               	movlw	0
 29161  0162CC  6EE6               	movwf	postinc1,c
 29162  0162CE  ECA6  F0C8         	call	___xxtofl	;wreg free
 29163  0162D2  0060  F007  FFE6   	movff	btemp,postinc1
 29164  0162D8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 29165  0162DE  0060  F00F  FFE6   	movff	btemp+2,postinc1
 29166  0162E4  0060  F013  FFE6   	movff	btemp+3,postinc1
 29167  0162EA  EC52  F0A5         	call	___flmul	;wreg free
 29168  0162EE  0060  F007  FFE6   	movff	btemp,postinc1
 29169  0162F4  0060  F00B  FFE6   	movff	btemp+1,postinc1
 29170  0162FA  0060  F00F  FFE6   	movff	btemp+2,postinc1
 29171  016300  0060  F013  FFE6   	movff	btemp+3,postinc1
 29172  016306  EC45  F0AD         	call	___fldiv	;wreg free
 29173  01630A  D0D7               	goto	l1961
 29174  01630C                     l10582:
 29175                           
 29176                           ;daq.c: 156:   if (0b0000000000000011 >> chan & 0x1 || 0b0000100000000000 >> chan & 0x1)
 29177                           ;stkvar	_chan @ sp[(0)+-1]
 29178  01630C  0EFF               	movlw	-1
 29179  01630E  006F FF8C  F00C    	movff	plusw1,btemp+11
 29180  016314  0E03               	movlw	3
 29181  016316  6E09               	movwf	(btemp+8)^0,c
 29182  016318  0E00               	movlw	0
 29183  01631A  6E0A               	movwf	(btemp+9)^0,c
 29184  01631C  2A0C               	incf	(btemp+11)^0,f,c
 29185  01631E  D003               	goto	u9854
 29186  016320                     u9855:
 29187  016320  340A               	rlcf	(btemp+9)^0,w,c
 29188  016322  320A               	rrcf	(btemp+9)^0,f,c
 29189  016324  3209               	rrcf	(btemp+8)^0,f,c
 29190  016326                     u9854:
 29191  016326  2E0C               	decfsz	(btemp+11)^0,f,c
 29192  016328  D7FB               	goto	u9855
 29193  01632A  B009               	btfsc	(btemp+8)^0,0,c
 29194  01632C  D011               	goto	u9880
 29195                           
 29196                           ;stkvar	_chan @ sp[(0)+-1]
 29197  01632E  0EFF               	movlw	-1
 29198  016330  006F FF8C  F00C    	movff	plusw1,btemp+11
 29199  016336  0E00               	movlw	0
 29200  016338  6E09               	movwf	(btemp+8)^0,c
 29201  01633A  0E08               	movlw	8
 29202  01633C  6E0A               	movwf	(btemp+9)^0,c
 29203  01633E  2A0C               	incf	(btemp+11)^0,f,c
 29204  016340  D003               	goto	u9874
 29205  016342                     u9875:
 29206  016342  340A               	rlcf	(btemp+9)^0,w,c
 29207  016344  320A               	rrcf	(btemp+9)^0,f,c
 29208  016346  3209               	rrcf	(btemp+8)^0,f,c
 29209  016348                     u9874:
 29210  016348  2E0C               	decfsz	(btemp+11)^0,f,c
 29211  01634A  D7FB               	goto	u9875
 29212  01634C  A009               	btfss	(btemp+8)^0,0,c
 29213  01634E  D04E               	goto	l10590
 29214  016350                     u9880:
 29215                           
 29216                           ;daq.c: 157:    return((float) get_raw_result(chan) * 0.6250000) / 1000.0;
 29217  016350  0E00               	movlw	0
 29218  016352  6EE6               	movwf	postinc1,c
 29219  016354  0E00               	movlw	0
 29220  016356  6EE6               	movwf	postinc1,c
 29221  016358  0E7A               	movlw	122
 29222  01635A  6EE6               	movwf	postinc1,c
 29223  01635C  0E44               	movlw	68
 29224  01635E  6EE6               	movwf	postinc1,c
 29225  016360  0E00               	movlw	0
 29226  016362  6EE6               	movwf	postinc1,c
 29227  016364  0E00               	movlw	0
 29228  016366  6EE6               	movwf	postinc1,c
 29229  016368  0E20               	movlw	32
 29230  01636A  6EE6               	movwf	postinc1,c
 29231  01636C  0E3F               	movlw	63
 29232  01636E  6EE6               	movwf	postinc1,c
 29233                           
 29234                           ;stkvar	_chan @ sp[(-8)+-1]
 29235  016370  0EF7               	movlw	-9
 29236  016372  50E3               	movf	plusw1,w,c
 29237  016374  6EE6               	movwf	postinc1,c
 29238  016376  EC37  F0EC         	call	_get_raw_result	;wreg free
 29239  01637A  0060  F004  F00B   	movff	btemp,btemp+10
 29240  016380  0060  F008  F00C   	movff	btemp+1,btemp+11
 29241  016386  500B               	movf	(btemp+10)^0,w,c
 29242  016388  6E05               	movwf	(btemp+4)^0,c
 29243  01638A  500C               	movf	(btemp+11)^0,w,c
 29244  01638C  6E06               	movwf	(btemp+5)^0,c
 29245  01638E  6A07               	clrf	(btemp+6)^0,c
 29246  016390  6A08               	clrf	(btemp+7)^0,c
 29247  016392  0060  F017  FFE6   	movff	btemp+4,postinc1
 29248  016398  0060  F01B  FFE6   	movff	btemp+5,postinc1
 29249  01639E  0060  F01F  FFE6   	movff	btemp+6,postinc1
 29250  0163A4  0060  F023  FFE6   	movff	btemp+7,postinc1
 29251  0163AA  0E00               	movlw	0
 29252  0163AC  6EE6               	movwf	postinc1,c
 29253  0163AE  ECA6  F0C8         	call	___xxtofl	;wreg free
 29254  0163B2  0060  F007  FFE6   	movff	btemp,postinc1
 29255  0163B8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 29256  0163BE  0060  F00F  FFE6   	movff	btemp+2,postinc1
 29257  0163C4  0060  F013  FFE6   	movff	btemp+3,postinc1
 29258  0163CA  EC52  F0A5         	call	___flmul	;wreg free
 29259  0163CE  0060  F007  FFE6   	movff	btemp,postinc1
 29260  0163D4  0060  F00B  FFE6   	movff	btemp+1,postinc1
 29261  0163DA  0060  F00F  FFE6   	movff	btemp+2,postinc1
 29262  0163E0  0060  F013  FFE6   	movff	btemp+3,postinc1
 29263  0163E6  EC45  F0AD         	call	___fldiv	;wreg free
 29264  0163EA  D067               	goto	l1961
 29265  0163EC                     l10590:
 29266                           
 29267                           ;daq.c: 159:   return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
 29268  0163EC  0E00               	movlw	0
 29269  0163EE  6EE6               	movwf	postinc1,c
 29270  0163F0  0E00               	movlw	0
 29271  0163F2  6EE6               	movwf	postinc1,c
 29272  0163F4  0E7A               	movlw	122
 29273  0163F6  6EE6               	movwf	postinc1,c
 29274  0163F8  0E44               	movlw	68
 29275  0163FA  6EE6               	movwf	postinc1,c
 29276  0163FC  0E61               	movlw	97
 29277  0163FE  6EE6               	movwf	postinc1,c
 29278  016400  0E03               	movlw	3
 29279  016402  6EE6               	movwf	postinc1,c
 29280  016404  0E84               	movlw	132
 29281  016406  6EE6               	movwf	postinc1,c
 29282  016408  0E40               	movlw	64
 29283  01640A  6EE6               	movwf	postinc1,c
 29284                           
 29285                           ;stkvar	_chan @ sp[(-8)+-1]
 29286  01640C  0EF7               	movlw	-9
 29287  01640E  50E3               	movf	plusw1,w,c
 29288  016410  6EE6               	movwf	postinc1,c
 29289  016412  EC37  F0EC         	call	_get_raw_result	;wreg free
 29290  016416  0060  F004  F00B   	movff	btemp,btemp+10
 29291  01641C  0060  F008  F00C   	movff	btemp+1,btemp+11
 29292  016422  500B               	movf	(btemp+10)^0,w,c
 29293  016424  6E05               	movwf	(btemp+4)^0,c
 29294  016426  500C               	movf	(btemp+11)^0,w,c
 29295  016428  6E06               	movwf	(btemp+5)^0,c
 29296  01642A  6A07               	clrf	(btemp+6)^0,c
 29297  01642C  6A08               	clrf	(btemp+7)^0,c
 29298  01642E  0060  F017  FFE6   	movff	btemp+4,postinc1
 29299  016434  0060  F01B  FFE6   	movff	btemp+5,postinc1
 29300  01643A  0060  F01F  FFE6   	movff	btemp+6,postinc1
 29301  016440  0060  F023  FFE6   	movff	btemp+7,postinc1
 29302  016446  0E00               	movlw	0
 29303  016448  6EE6               	movwf	postinc1,c
 29304  01644A  ECA6  F0C8         	call	___xxtofl	;wreg free
 29305  01644E  0060  F007  FFE6   	movff	btemp,postinc1
 29306  016454  0060  F00B  FFE6   	movff	btemp+1,postinc1
 29307  01645A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 29308  016460  0060  F013  FFE6   	movff	btemp+3,postinc1
 29309  016466  EC52  F0A5         	call	___flmul	;wreg free
 29310  01646A  0060  F007  FFE6   	movff	btemp,postinc1
 29311  016470  0060  F00B  FFE6   	movff	btemp+1,postinc1
 29312  016476  0060  F00F  FFE6   	movff	btemp+2,postinc1
 29313  01647C  0060  F013  FFE6   	movff	btemp+3,postinc1
 29314  016482  EC45  F0AD         	call	___fldiv	;wreg free
 29315  016486  D019               	goto	l1961
 29316  016488                     l10596:
 29317                           
 29318                           ;daq.c: 162:   return 0.0;
 29319  016488  0E00               	movlw	0
 29320  01648A  6E01               	movwf	btemp^0,c
 29321  01648C  0E00               	movlw	0
 29322  01648E  6E02               	movwf	(btemp+1)^0,c
 29323  016490  0E00               	movlw	0
 29324  016492  6E03               	movwf	(btemp+2)^0,c
 29325  016494  0E00               	movlw	0
 29326  016496                     L35:
 29327  016496  6E04               	movwf	(btemp+3)^0,c
 29328  016498  D010               	goto	l1961
 29329  01649A                     l10604:
 29330                           
 29331                           ;stkvar	_to_what @ sp[(0)+-2]
 29332  01649A  0EFE               	movlw	-2
 29333  01649C  50E3               	movf	plusw1,w,c
 29334  01649E  6E0B               	movwf	(btemp+10)^0,c
 29335  0164A0  6A0C               	clrf	(btemp+11)^0,c
 29336                           
 29337                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 29338                           ; Switch size 1, requested type "simple"
 29339                           ; Number of cases is 1, Range of values is 0 to 0
 29340                           ; switch strategies available:
 29341                           ; Name         Instructions Cycles
 29342                           ; simple_byte            4     3 (average)
 29343                           ;	Chosen strategy is simple_byte
 29344  0164A2  500C               	movf	(btemp+11)^0,w,c
 29345  0164A4  0A00               	xorlw	0	; case 0
 29346  0164A6  A4D8               	btfss	status,2,c
 29347  0164A8  D7EF               	goto	l10596
 29348                           
 29349                           ; Switch size 1, requested type "simple"
 29350                           ; Number of cases is 2, Range of values is 0 to 1
 29351                           ; switch strategies available:
 29352                           ; Name         Instructions Cycles
 29353                           ; simple_byte            7     4 (average)
 29354                           ;	Chosen strategy is simple_byte
 29355  0164AA  500B               	movf	(btemp+10)^0,w,c
 29356  0164AC  0A00               	xorlw	0	; case 0
 29357  0164AE  B4D8               	btfsc	status,2,c
 29358  0164B0  D5AA               	goto	l10550
 29359  0164B2  0A01               	xorlw	1	; case 1
 29360  0164B4  B4D8               	btfsc	status,2,c
 29361  0164B6  D72A               	goto	l10582
 29362  0164B8  D7E7               	goto	l10596
 29363  0164BA                     l1961:
 29364                           
 29365                           ; _conv_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 29366  0164BA  52E5               	movf	postdec1,f,c
 29367  0164BC  52E5               	movf	postdec1,f,c
 29368  0164BE  0012               	return		;funcret
 29369  0164C0                     __end_of_conv_raw_result:
 29370                           	opt callstack 0
 29371                           
 29372 ;; *************** function _nanf *****************
 29373 ;; Defined at:
 29374 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nanf.c"
 29375 ;; Parameters:    Size  Location     Type
 29376 ;;  s               2  [STACK] PTR const unsigned char 
 29377 ;;		 -> STR_130(1), STR_92(1), 
 29378 ;; Auto vars:     Size  Location     Type
 29379 ;;  u               4  [STACK] struct .
 29380 ;; Return value:  Size  Location     Type
 29381 ;;                  4  [STACK] float 
 29382 ;; Registers used:
 29383 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
 29384 ;; Tracked objects:
 29385 ;;		On entry : 0/0
 29386 ;;		On exit  : 0/0
 29387 ;;		Unchanged: 0/0
 29388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29389 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29390 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29391 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29392 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29393 ;;Total ram usage:        0 bytes
 29394 ;; Hardware stack levels used:    1
 29395 ;; Hardware stack levels required when called:   15
 29396 ;; This function calls:
 29397 ;;		Nothing
 29398 ;; This function is called by:
 29399 ;;		_conv_raw_result
 29400 ;; This function uses a reentrant model
 29401 ;;
 29402                           
 29403                           	psect	text118
 29404  01C91A                     __ptext118:
 29405                           	opt callstack 0
 29406  01C91A                     _nanf:
 29407                           	opt callstack 0
 29408                           
 29409                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29410  01C91A  52E6               	movf	postinc1,f,c
 29411  01C91C  52E6               	movf	postinc1,f,c
 29412  01C91E  52E6               	movf	postinc1,f,c
 29413  01C920  52E6               	movf	postinc1,f,c
 29414                           
 29415                           ;incstack = 0
 29416 ;; hardware stack exceeded
 29417  01C922  0EFF               	movlw	255
 29418  01C924  6E09               	movwf	(btemp+8)^0,c
 29419  01C926  0EFF               	movlw	255
 29420  01C928  6E0A               	movwf	(btemp+9)^0,c
 29421  01C92A  0EFF               	movlw	255
 29422  01C92C  6E0B               	movwf	(btemp+10)^0,c
 29423  01C92E  0E7F               	movlw	127
 29424  01C930  6E0C               	movwf	(btemp+11)^0,c
 29425                           
 29426                           ;stkvar	_u @ sp[(-4)+0]
 29427  01C932  0EFC               	movlw	-4
 29428  01C934  0060  F027  FFE3   	movff	btemp+8,plusw1
 29429  01C93A  0EFD               	movlw	-3
 29430  01C93C  0060  F02B  FFE3   	movff	btemp+9,plusw1
 29431  01C942  0EFE               	movlw	-2
 29432  01C944  0060  F02F  FFE3   	movff	btemp+10,plusw1
 29433  01C94A  0EFF               	movlw	-1
 29434  01C94C  0060  F033  FFE3   	movff	btemp+11,plusw1
 29435                           
 29436                           ;stkvar	_u @ sp[(-4)+0]
 29437  01C952  0EFC               	movlw	-4
 29438  01C954  006F FF8C  F001    	movff	plusw1,btemp
 29439  01C95A  0EFD               	movlw	-3
 29440  01C95C  006F FF8C  F002    	movff	plusw1,btemp+1
 29441  01C962  0EFE               	movlw	-2
 29442  01C964  006F FF8C  F003    	movff	plusw1,btemp+2
 29443  01C96A  0EFF               	movlw	-1
 29444  01C96C  006F FF8C  F004    	movff	plusw1,btemp+3
 29445                           
 29446                           ; _nanf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 29447  01C972  0EFA               	movlw	250
 29448  01C974  26E1               	addwf	fsr1l,f,c
 29449  01C976  0EFF               	movlw	255
 29450  01C978  22E2               	addwfc	fsr1h,f,c
 29451  01C97A  0012               	return		;funcret
 29452  01C97C                     __end_of_nanf:
 29453                           	opt callstack 0
 29454                           
 29455 ;; *************** function _get_raw_result *****************
 29456 ;; Defined at:
 29457 ;;		line 125 in file "daq.c"
 29458 ;; Parameters:    Size  Location     Type
 29459 ;;  index           1  [STACK] const enum E16605
 29460 ;; Auto vars:     Size  Location     Type
 29461 ;;		None
 29462 ;; Return value:  Size  Location     Type
 29463 ;;                  2  [STACK] unsigned short 
 29464 ;; Registers used:
 29465 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, prodl, prodh
 29466 ;; Tracked objects:
 29467 ;;		On entry : 0/2
 29468 ;;		On exit  : 0/0
 29469 ;;		Unchanged: 0/0
 29470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29471 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29472 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29473 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29474 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29475 ;;Total ram usage:        0 bytes
 29476 ;; Hardware stack levels used:    1
 29477 ;; Hardware stack levels required when called:   15
 29478 ;; This function calls:
 29479 ;;		Nothing
 29480 ;; This function is called by:
 29481 ;;		_main
 29482 ;;		_current_sensor_cal
 29483 ;;		_conv_raw_result
 29484 ;; This function uses a reentrant model
 29485 ;;
 29486                           
 29487                           	psect	text119
 29488  01D86E                     __ptext119:
 29489                           	opt callstack 0
 29490  01D86E                     _get_raw_result:
 29491                           	opt callstack 0
 29492                           
 29493                           ;daq.c: 125: adc_result_t get_raw_result(const adcc_channel_t index);daq.c: 126: {;daq.c
      +                          : 127:  return R.raw_adc[index];
 29494                           ;stkvar	_index @ sp[(0)+-1]
 29495                           
 29496                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29497                           ;incstack = 0
 29498 ;; hardware stack exceeded
 29499  01D86E  0EFF               	movlw	-1
 29500  01D870  50E3               	movf	plusw1,w,c
 29501  01D872  0D02               	mullw	2
 29502  01D874  0E07               	movlw	low _R
 29503  01D876  24F3               	addwf	243,w,c
 29504  01D878  6ED9               	movwf	fsr2l,c
 29505  01D87A  0E01               	movlw	high _R
 29506  01D87C  20F4               	addwfc	prodh,w,c
 29507  01D87E  6EDA               	movwf	fsr2h,c
 29508  01D880  006F FF78  F001    	movff	postinc2,btemp
 29509  01D886  006F FF74  F002    	movff	postdec2,btemp+1
 29510                           
 29511                           ; _get_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1
      +                          , argsize = 1, vargsize = 0
 29512  01D88C  52E5               	movf	postdec1,f,c
 29513  01D88E  0012               	return		;funcret
 29514  01D890                     __end_of_get_raw_result:
 29515                           	opt callstack 0
 29516                           
 29517 ;; *************** function ___xxtofl *****************
 29518 ;; Defined at:
 29519 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/xxtofl.c"
 29520 ;; Parameters:    Size  Location     Type
 29521 ;;  sign            1  [STACK] unsigned char 
 29522 ;;  val             4  [STACK] long 
 29523 ;; Auto vars:     Size  Location     Type
 29524 ;;  arg             4  [STACK] unsigned long 
 29525 ;;  exp             1  [STACK] unsigned char 
 29526 ;; Return value:  Size  Location     Type
 29527 ;;                  4  [STACK] unsigned char 
 29528 ;; Registers used:
 29529 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 29530 ;; Tracked objects:
 29531 ;;		On entry : 0/1
 29532 ;;		On exit  : 0/0
 29533 ;;		Unchanged: 0/0
 29534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29535 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29536 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29537 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29538 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29539 ;;Total ram usage:        0 bytes
 29540 ;; Hardware stack levels used:    1
 29541 ;; Hardware stack levels required when called:   15
 29542 ;; This function calls:
 29543 ;;		Nothing
 29544 ;; This function is called by:
 29545 ;;		_current_sensor_cal
 29546 ;;		_conv_raw_result
 29547 ;;		_init_bsoc
 29548 ;; This function uses a reentrant model
 29549 ;;
 29550                           
 29551                           	psect	text120
 29552  01914C                     __ptext120:
 29553                           	opt callstack 0
 29554  01914C                     ___xxtofl:
 29555                           	opt callstack 0
 29556                           
 29557                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29558  01914C  0E05               	movlw	5
 29559  01914E  26E1               	addwf	fsr1l,f,c
 29560  019150  0E00               	movlw	0
 29561  019152  22E2               	addwfc	fsr1h,f,c
 29562                           
 29563                           ;stkvar	_sign @ sp[(-5)+-1]
 29564                           
 29565                           ;incstack = 0
 29566 ;; hardware stack exceeded
 29567  019154  0EFA               	movlw	-6
 29568  019156  50E3               	movf	plusw1,w,c
 29569  019158  B4D8               	btfsc	status,2,c
 29570  01915A  D01D               	goto	l10478
 29571                           
 29572                           ;stkvar	_val @ sp[(-5)+-5]
 29573  01915C  0EF9               	movlw	-7
 29574  01915E  AEE3               	btfss	plusw1,7,c
 29575  019160  D01A               	goto	l10478
 29576                           
 29577                           ;stkvar	_val @ sp[(-5)+-5]
 29578  019162  0EF6               	movlw	-10
 29579  019164  006F FF8C  F009    	movff	plusw1,btemp+8
 29580  01916A  0EF7               	movlw	-9
 29581  01916C  006F FF8C  F00A    	movff	plusw1,btemp+9
 29582  019172  0EF8               	movlw	-8
 29583  019174  006F FF8C  F00B    	movff	plusw1,btemp+10
 29584  01917A  0EF9               	movlw	-7
 29585  01917C  006F FF8C  F00C    	movff	plusw1,btemp+11
 29586  019182  1E09               	comf	(btemp+8)^0,f,c
 29587  019184  1E0A               	comf	(btemp+9)^0,f,c
 29588  019186  1E0B               	comf	(btemp+10)^0,f,c
 29589  019188  1E0C               	comf	(btemp+11)^0,f,c
 29590  01918A  2A09               	incf	(btemp+8)^0,f,c
 29591  01918C  0E00               	movlw	0
 29592  01918E  220A               	addwfc	(btemp+9)^0,f,c
 29593  019190  220B               	addwfc	(btemp+10)^0,f,c
 29594  019192  220C               	addwfc	(btemp+11)^0,f,c
 29595  019194  D010               	goto	L36
 29596  019196                     l10478:
 29597                           
 29598                           ;stkvar	_val @ sp[(-5)+-5]
 29599  019196  0EF6               	movlw	-10
 29600  019198  006F FF8C  F009    	movff	plusw1,btemp+8
 29601  01919E  0EF7               	movlw	-9
 29602  0191A0  006F FF8C  F00A    	movff	plusw1,btemp+9
 29603  0191A6  0EF8               	movlw	-8
 29604  0191A8  006F FF8C  F00B    	movff	plusw1,btemp+10
 29605  0191AE  0EF9               	movlw	-7
 29606  0191B0  006F FF8C  F00C    	movff	plusw1,btemp+11
 29607  0191B6                     L36:
 29608                           
 29609                           ;stkvar	_arg @ sp[(-5)+0]
 29610  0191B6  0EFB               	movlw	-5
 29611  0191B8  0060  F027  FFE3   	movff	btemp+8,plusw1
 29612  0191BE  0EFC               	movlw	-4
 29613  0191C0  0060  F02B  FFE3   	movff	btemp+9,plusw1
 29614  0191C6  0EFD               	movlw	-3
 29615  0191C8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 29616  0191CE  0EFE               	movlw	-2
 29617  0191D0  0060  F033  FFE3   	movff	btemp+11,plusw1
 29618                           
 29619                           ;stkvar	_val @ sp[(-5)+-5]
 29620  0191D6  0EF6               	movlw	-10
 29621  0191D8  50E3               	movf	plusw1,w,c
 29622  0191DA  E113               	bnz	l10486
 29623  0191DC  0EF7               	movlw	-9
 29624  0191DE  50E3               	movf	plusw1,w,c
 29625  0191E0  E110               	bnz	l10486
 29626  0191E2  0EF8               	movlw	-8
 29627  0191E4  50E3               	movf	plusw1,w,c
 29628  0191E6  E10D               	bnz	l10486
 29629  0191E8  0EF9               	movlw	-7
 29630  0191EA  50E3               	movf	plusw1,w,c
 29631  0191EC  A4D8               	btfss	status,2,c
 29632  0191EE  D009               	goto	l10486
 29633  0191F0  0E00               	movlw	0
 29634  0191F2  6E01               	movwf	btemp^0,c
 29635  0191F4  0E00               	movlw	0
 29636  0191F6  6E02               	movwf	(btemp+1)^0,c
 29637  0191F8  0E00               	movlw	0
 29638  0191FA  6E03               	movwf	(btemp+2)^0,c
 29639  0191FC  0E00               	movlw	0
 29640  0191FE  6E04               	movwf	(btemp+3)^0,c
 29641  019200  D0A2               	goto	l3341
 29642  019202                     l10486:
 29643  019202  0E96               	movlw	150
 29644  019204  6E0C               	movwf	(btemp+11)^0,c
 29645                           
 29646                           ;stkvar	_exp @ sp[(-5)+4]
 29647  019206  0EFF               	movlw	-1
 29648  019208  0060  F033  FFE3   	movff	btemp+11,plusw1
 29649  01920E  D00B               	goto	l10490
 29650  019210                     l10488:
 29651                           
 29652                           ;stkvar	_exp @ sp[(-5)+4]
 29653  019210  0EFF               	movlw	-1
 29654  019212  2AE3               	incf	plusw1,f,c
 29655                           
 29656                           ;stkvar	_arg @ sp[(-5)+0]
 29657  019214  90D8               	bcf	status,0,c
 29658  019216  0EFE               	movlw	-2
 29659  019218  32E3               	rrcf	plusw1,f,c
 29660  01921A  0EFD               	movlw	-3
 29661  01921C  32E3               	rrcf	plusw1,f,c
 29662  01921E  0EFC               	movlw	-4
 29663  019220  32E3               	rrcf	plusw1,f,c
 29664  019222  0EFB               	movlw	-5
 29665  019224  32E3               	rrcf	plusw1,f,c
 29666  019226                     l10490:
 29667                           
 29668                           ;stkvar	_arg @ sp[(-5)+0]
 29669  019226  50E1               	movf	fsr1l,w,c
 29670  019228  0FFB               	addlw	-5
 29671  01922A  6ED9               	movwf	fsr2l,c
 29672  01922C  50E2               	movf	fsr1h,w,c
 29673  01922E  6EDA               	movwf	fsr2h,c
 29674  019230  0EFF               	movlw	255
 29675  019232  22DA               	addwfc	fsr2h,f,c
 29676  019234  52DE               	movf	postinc2,f,c
 29677  019236  52DE               	movf	postinc2,f,c
 29678  019238  52DE               	movf	postinc2,f,c
 29679  01923A  0EFE               	movlw	254
 29680  01923C  14DD               	andwf	postdec2,w,c
 29681  01923E  B4D8               	btfsc	status,2,c
 29682  019240  D018               	goto	l10498
 29683  019242  D7E6               	goto	l10488
 29684  019244                     l10492:
 29685                           
 29686                           ;stkvar	_exp @ sp[(-5)+4]
 29687  019244  0EFF               	movlw	-1
 29688  019246  2AE3               	incf	plusw1,f,c
 29689                           
 29690                           ;stkvar	_arg @ sp[(-5)+0]
 29691  019248  50E1               	movf	fsr1l,w,c
 29692  01924A  0FFB               	addlw	-5
 29693  01924C  6ED9               	movwf	fsr2l,c
 29694  01924E  50E2               	movf	fsr1h,w,c
 29695  019250  6EDA               	movwf	fsr2h,c
 29696  019252  0EFF               	movlw	255
 29697  019254  22DA               	addwfc	fsr2h,f,c
 29698  019256  2ADE               	incf	postinc2,f,c
 29699  019258  0E00               	movlw	0
 29700  01925A  22DE               	addwfc	postinc2,f,c
 29701  01925C  22DE               	addwfc	postinc2,f,c
 29702  01925E  22DE               	addwfc	postinc2,f,c
 29703                           
 29704                           ;stkvar	_arg @ sp[(-5)+0]
 29705  019260  90D8               	bcf	status,0,c
 29706  019262  0EFE               	movlw	-2
 29707  019264  32E3               	rrcf	plusw1,f,c
 29708  019266  0EFD               	movlw	-3
 29709  019268  32E3               	rrcf	plusw1,f,c
 29710  01926A  0EFC               	movlw	-4
 29711  01926C  32E3               	rrcf	plusw1,f,c
 29712  01926E  0EFB               	movlw	-5
 29713  019270  32E3               	rrcf	plusw1,f,c
 29714  019272                     l10498:
 29715                           
 29716                           ;stkvar	_arg @ sp[(-5)+0]
 29717  019272  50E1               	movf	fsr1l,w,c
 29718  019274  0FFB               	addlw	-5
 29719  019276  6ED9               	movwf	fsr2l,c
 29720  019278  50E2               	movf	fsr1h,w,c
 29721  01927A  6EDA               	movwf	fsr2h,c
 29722  01927C  0EFF               	movlw	255
 29723  01927E  22DA               	addwfc	fsr2h,f,c
 29724  019280  52DE               	movf	postinc2,f,c
 29725  019282  52DE               	movf	postinc2,f,c
 29726  019284  52DE               	movf	postinc2,f,c
 29727  019286  0EFF               	movlw	255
 29728  019288  14DD               	andwf	postdec2,w,c
 29729  01928A  B4D8               	btfsc	status,2,c
 29730  01928C  D00C               	goto	l10502
 29731  01928E  D7DA               	goto	l10492
 29732  019290                     l10500:
 29733                           
 29734                           ;stkvar	_exp @ sp[(-5)+4]
 29735  019290  0EFF               	movlw	-1
 29736  019292  06E3               	decf	plusw1,f,c
 29737                           
 29738                           ;stkvar	_arg @ sp[(-5)+0]
 29739  019294  90D8               	bcf	status,0,c
 29740  019296  0EFB               	movlw	-5
 29741  019298  36E3               	rlcf	plusw1,f,c
 29742  01929A  0EFC               	movlw	-4
 29743  01929C  36E3               	rlcf	plusw1,f,c
 29744  01929E  0EFD               	movlw	-3
 29745  0192A0  36E3               	rlcf	plusw1,f,c
 29746  0192A2  0EFE               	movlw	-2
 29747  0192A4  36E3               	rlcf	plusw1,f,c
 29748  0192A6                     l10502:
 29749                           
 29750                           ;stkvar	_arg @ sp[(-5)+0]
 29751  0192A6  0EFD               	movlw	-3
 29752  0192A8  BEE3               	btfsc	plusw1,7,c
 29753  0192AA  D007               	goto	u9700
 29754                           
 29755                           ;stkvar	_exp @ sp[(-5)+4]
 29756  0192AC  0EFF               	movlw	-1
 29757  0192AE  006F FF8C  F001    	movff	plusw1,btemp
 29758  0192B4  0E02               	movlw	2
 29759  0192B6  6001               	cpfslt	btemp^0,c
 29760  0192B8  D7EB               	goto	l10500
 29761  0192BA                     u9700:
 29762                           
 29763                           ;stkvar	_exp @ sp[(-5)+4]
 29764  0192BA  0EFF               	movlw	-1
 29765  0192BC  B0E3               	btfsc	plusw1,0,c
 29766  0192BE  D002               	goto	l10510
 29767                           
 29768                           ;stkvar	_arg @ sp[(-5)+0]
 29769  0192C0  0EFD               	movlw	-3
 29770  0192C2  9EE3               	bcf	plusw1,7,c
 29771  0192C4                     l10510:
 29772                           
 29773                           ;stkvar	_exp @ sp[(-5)+4]
 29774  0192C4  50E1               	movf	fsr1l,w,c
 29775  0192C6  0FFF               	addlw	-1
 29776  0192C8  6ED9               	movwf	fsr2l,c
 29777  0192CA  50E2               	movf	fsr1h,w,c
 29778  0192CC  6EDA               	movwf	fsr2h,c
 29779  0192CE  0EFF               	movlw	255
 29780  0192D0  22DA               	addwfc	fsr2h,f,c
 29781  0192D2  90D8               	bcf	status,0,c
 29782  0192D4  32DF               	rrcf	indf2,f,c
 29783                           
 29784                           ;stkvar	_exp @ sp[(-5)+4]
 29785  0192D6  0EFF               	movlw	-1
 29786  0192D8  006F FF8C  F00C    	movff	plusw1,btemp+11
 29787  0192DE  0060  F030  F005   	movff	btemp+11,btemp+4
 29788  0192E4  6A06               	clrf	(btemp+5)^0,c
 29789  0192E6  6A07               	clrf	(btemp+6)^0,c
 29790  0192E8  6A08               	clrf	(btemp+7)^0,c
 29791  0192EA  0060  F014  F008   	movff	btemp+4,btemp+7
 29792  0192F0  6A07               	clrf	(btemp+6)^0,c
 29793  0192F2  6A06               	clrf	(btemp+5)^0,c
 29794  0192F4  6A05               	clrf	(btemp+4)^0,c
 29795                           
 29796                           ;stkvar	_arg @ sp[(-5)+0]
 29797  0192F6  50E1               	movf	fsr1l,w,c
 29798  0192F8  0FFB               	addlw	-5
 29799  0192FA  6ED9               	movwf	fsr2l,c
 29800  0192FC  50E2               	movf	fsr1h,w,c
 29801  0192FE  6EDA               	movwf	fsr2h,c
 29802  019300  0EFF               	movlw	255
 29803  019302  22DA               	addwfc	fsr2h,f,c
 29804  019304  5005               	movf	(btemp+4)^0,w,c
 29805  019306  12DE               	iorwf	postinc2,f,c
 29806  019308  5006               	movf	(btemp+5)^0,w,c
 29807  01930A  12DE               	iorwf	postinc2,f,c
 29808  01930C  5007               	movf	(btemp+6)^0,w,c
 29809  01930E  12DE               	iorwf	postinc2,f,c
 29810  019310  5008               	movf	(btemp+7)^0,w,c
 29811  019312  12DE               	iorwf	postinc2,f,c
 29812                           
 29813                           ;stkvar	_sign @ sp[(-5)+-1]
 29814  019314  0EFA               	movlw	-6
 29815  019316  50E3               	movf	plusw1,w,c
 29816  019318  B4D8               	btfsc	status,2,c
 29817  01931A  D005               	goto	l10520
 29818                           
 29819                           ;stkvar	_val @ sp[(-5)+-5]
 29820  01931C  0EF9               	movlw	-7
 29821  01931E  AEE3               	btfss	plusw1,7,c
 29822  019320  D002               	goto	l10520
 29823                           
 29824                           ;stkvar	_arg @ sp[(-5)+0]
 29825  019322  0EFE               	movlw	-2
 29826  019324  8EE3               	bsf	plusw1,7,c
 29827  019326                     l10520:
 29828                           
 29829                           ;stkvar	_arg @ sp[(-5)+0]
 29830  019326  0EFB               	movlw	-5
 29831  019328  006F FF8C  F001    	movff	plusw1,btemp
 29832  01932E  0EFC               	movlw	-4
 29833  019330  006F FF8C  F002    	movff	plusw1,btemp+1
 29834  019336  0EFD               	movlw	-3
 29835  019338  006F FF8C  F003    	movff	plusw1,btemp+2
 29836  01933E  0EFE               	movlw	-2
 29837  019340  006F FF8C  F004    	movff	plusw1,btemp+3
 29838  019346                     l3341:
 29839                           
 29840                           ; ___xxtofl: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, args
      +                          ize = 5, vargsize = 0
 29841  019346  0EF6               	movlw	246
 29842  019348  26E1               	addwf	fsr1l,f,c
 29843  01934A  0EFF               	movlw	255
 29844  01934C  22E2               	addwfc	fsr1h,f,c
 29845  01934E  0012               	return		;funcret
 29846  019350                     __end_of___xxtofl:
 29847                           	opt callstack 0
 29848                           
 29849 ;; *************** function ___fldiv *****************
 29850 ;; Defined at:
 29851 ;;		line 11 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcdiv.c"
 29852 ;; Parameters:    Size  Location     Type
 29853 ;;  b               4  [STACK] unsigned char 
 29854 ;;  a               4  [STACK] unsigned char 
 29855 ;; Auto vars:     Size  Location     Type
 29856 ;;  grs             4  [STACK] unsigned long 
 29857 ;;  rem             4  [STACK] unsigned long 
 29858 ;;  new_exp         2  [STACK] short 
 29859 ;;  aexp            1  [STACK] unsigned char 
 29860 ;;  bexp            1  [STACK] unsigned char 
 29861 ;;  sign            1  [STACK] unsigned char 
 29862 ;; Return value:  Size  Location     Type
 29863 ;;                  4  [STACK] unsigned char 
 29864 ;; Registers used:
 29865 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 29866 ;; Tracked objects:
 29867 ;;		On entry : 0/0
 29868 ;;		On exit  : 0/0
 29869 ;;		Unchanged: 0/0
 29870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29871 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29872 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29873 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29874 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29875 ;;Total ram usage:        0 bytes
 29876 ;; Hardware stack levels used:    1
 29877 ;; Hardware stack levels required when called:   15
 29878 ;; This function calls:
 29879 ;;		Nothing
 29880 ;; This function is called by:
 29881 ;;		_current_sensor_cal
 29882 ;;		_conv_raw_result
 29883 ;;		_convert_dac_raw
 29884 ;;		_calc_bsoc
 29885 ;;		_init_bsoc
 29886 ;;		_esr_check
 29887 ;;		_efgtoa
 29888 ;; This function uses a reentrant model
 29889 ;;
 29890                           
 29891                           	psect	text121
 29892  015A8A                     __ptext121:
 29893                           	opt callstack 0
 29894  015A8A                     ___fldiv:
 29895                           	opt callstack 0
 29896                           
 29897                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 29898  015A8A  0E0D               	movlw	13
 29899  015A8C  26E1               	addwf	fsr1l,f,c
 29900  015A8E  0E00               	movlw	0
 29901  015A90  22E2               	addwfc	fsr1h,f,c
 29902                           
 29903                           ;stkvar	_b @ sp[(-13)+-4]
 29904                           
 29905                           ;incstack = 0
 29906 ;; hardware stack exceeded
 29907  015A92  0EF2               	movlw	242
 29908  015A94  24E1               	addwf	fsr1l,w,c
 29909  015A96  6ED9               	movwf	fsr2l,c
 29910  015A98  0EFF               	movlw	255
 29911  015A9A  20E2               	addwfc	fsr1h,w,c
 29912  015A9C  6EDA               	movwf	fsr2h,c
 29913  015A9E  50DF               	movf	indf2,w,c
 29914  015AA0  6E0C               	movwf	(btemp+11)^0,c
 29915  015AA2  0E80               	movlw	128
 29916  015AA4  160C               	andwf	(btemp+11)^0,f,c
 29917                           
 29918                           ;stkvar	_sign @ sp[(-13)+12]
 29919  015AA6  0EFF               	movlw	-1
 29920  015AA8  0060  F033  FFE3   	movff	btemp+11,plusw1
 29921                           
 29922                           ;stkvar	_b @ sp[(-13)+-4]
 29923  015AAE  0EF2               	movlw	242
 29924  015AB0  24E1               	addwf	fsr1l,w,c
 29925  015AB2  6ED9               	movwf	fsr2l,c
 29926  015AB4  0EFF               	movlw	255
 29927  015AB6  20E2               	addwfc	fsr1h,w,c
 29928  015AB8  6EDA               	movwf	fsr2h,c
 29929  015ABA  50DF               	movf	indf2,w,c
 29930  015ABC  6E0C               	movwf	(btemp+11)^0,c
 29931  015ABE  90D8               	bcf	status,0,c
 29932  015AC0  340C               	rlcf	(btemp+11)^0,w,c
 29933  015AC2  6E0B               	movwf	(btemp+10)^0,c
 29934                           
 29935                           ;stkvar	_bexp @ sp[(-13)+11]
 29936  015AC4  0EFE               	movlw	-2
 29937  015AC6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 29938                           
 29939                           ;stkvar	_b @ sp[(-13)+-4]
 29940  015ACC  0EF1               	movlw	241
 29941  015ACE  24E1               	addwf	fsr1l,w,c
 29942  015AD0  6ED9               	movwf	fsr2l,c
 29943  015AD2  0EFF               	movlw	255
 29944  015AD4  20E2               	addwfc	fsr1h,w,c
 29945  015AD6  6EDA               	movwf	fsr2h,c
 29946  015AD8  AEDF               	btfss	indf2,7,c
 29947  015ADA  D002               	goto	l9050
 29948                           
 29949                           ;stkvar	_bexp @ sp[(-13)+11]
 29950  015ADC  0EFE               	movlw	-2
 29951  015ADE  80E3               	bsf	plusw1,0,c
 29952  015AE0                     l9050:
 29953                           
 29954                           ;stkvar	_bexp @ sp[(-13)+11]
 29955  015AE0  0EFE               	movlw	-2
 29956  015AE2  50E3               	movf	plusw1,w,c
 29957  015AE4  B4D8               	btfsc	status,2,c
 29958  015AE6  D027               	goto	l9060
 29959                           
 29960                           ;stkvar	_bexp @ sp[(-13)+11]
 29961  015AE8  0EFE               	movlw	-2
 29962  015AEA  28E3               	incf	plusw1,w,c
 29963  015AEC  A4D8               	btfss	status,2,c
 29964  015AEE  D018               	goto	l9056
 29965  015AF0  0E00               	movlw	0
 29966  015AF2  6E09               	movwf	(btemp+8)^0,c
 29967  015AF4  0E00               	movlw	0
 29968  015AF6  6E0A               	movwf	(btemp+9)^0,c
 29969  015AF8  0E00               	movlw	0
 29970  015AFA  6E0B               	movwf	(btemp+10)^0,c
 29971  015AFC  0E00               	movlw	0
 29972  015AFE  6E0C               	movwf	(btemp+11)^0,c
 29973                           
 29974                           ;stkvar	_b @ sp[(-13)+-4]
 29975  015B00  0EEF               	movlw	-17
 29976  015B02  0060  F027  FFE3   	movff	btemp+8,plusw1
 29977  015B08  0EF0               	movlw	-16
 29978  015B0A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 29979  015B10  0EF1               	movlw	-15
 29980  015B12  0060  F02F  FFE3   	movff	btemp+10,plusw1
 29981  015B18  0EF2               	movlw	-14
 29982  015B1A  0060  F033  FFE3   	movff	btemp+11,plusw1
 29983  015B20                     l9056:
 29984                           
 29985                           ;stkvar	_b @ sp[(-13)+-4]
 29986  015B20  0EF1               	movlw	-15
 29987  015B22  8EE3               	bsf	plusw1,7,c
 29988                           
 29989                           ;stkvar	_b @ sp[(-13)+-4]
 29990  015B24  0EF2               	movlw	242
 29991  015B26  24E1               	addwf	fsr1l,w,c
 29992  015B28  6ED9               	movwf	fsr2l,c
 29993  015B2A  0EFF               	movlw	255
 29994  015B2C  20E2               	addwfc	fsr1h,w,c
 29995  015B2E  6EDA               	movwf	fsr2h,c
 29996  015B30  0E00               	movlw	0
 29997  015B32  6EDF               	movwf	indf2,c
 29998  015B34  D018               	goto	l9062
 29999  015B36                     l9060:
 30000  015B36  0E00               	movlw	0
 30001  015B38  6E09               	movwf	(btemp+8)^0,c
 30002  015B3A  0E00               	movlw	0
 30003  015B3C  6E0A               	movwf	(btemp+9)^0,c
 30004  015B3E  0E00               	movlw	0
 30005  015B40  6E0B               	movwf	(btemp+10)^0,c
 30006  015B42  0E00               	movlw	0
 30007  015B44  6E0C               	movwf	(btemp+11)^0,c
 30008                           
 30009                           ;stkvar	_b @ sp[(-13)+-4]
 30010  015B46  0EEF               	movlw	-17
 30011  015B48  0060  F027  FFE3   	movff	btemp+8,plusw1
 30012  015B4E  0EF0               	movlw	-16
 30013  015B50  0060  F02B  FFE3   	movff	btemp+9,plusw1
 30014  015B56  0EF1               	movlw	-15
 30015  015B58  0060  F02F  FFE3   	movff	btemp+10,plusw1
 30016  015B5E  0EF2               	movlw	-14
 30017  015B60  0060  F033  FFE3   	movff	btemp+11,plusw1
 30018  015B66                     l9062:
 30019                           
 30020                           ;stkvar	_a @ sp[(-13)+-8]
 30021  015B66  0EEE               	movlw	238
 30022  015B68  24E1               	addwf	fsr1l,w,c
 30023  015B6A  6ED9               	movwf	fsr2l,c
 30024  015B6C  0EFF               	movlw	255
 30025  015B6E  20E2               	addwfc	fsr1h,w,c
 30026  015B70  6EDA               	movwf	fsr2h,c
 30027  015B72  50DF               	movf	indf2,w,c
 30028  015B74  6E0C               	movwf	(btemp+11)^0,c
 30029  015B76  0E80               	movlw	128
 30030  015B78  160C               	andwf	(btemp+11)^0,f,c
 30031                           
 30032                           ;stkvar	_sign @ sp[(-13)+12]
 30033  015B7A  50E1               	movf	fsr1l,w,c
 30034  015B7C  0FFF               	addlw	-1
 30035  015B7E  6ED9               	movwf	fsr2l,c
 30036  015B80  50E2               	movf	fsr1h,w,c
 30037  015B82  6EDA               	movwf	fsr2h,c
 30038  015B84  0EFF               	movlw	255
 30039  015B86  22DA               	addwfc	fsr2h,f,c
 30040  015B88  500C               	movf	(btemp+11)^0,w,c
 30041  015B8A  1ADF               	xorwf	indf2,f,c
 30042                           
 30043                           ;stkvar	_a @ sp[(-13)+-8]
 30044  015B8C  0EEE               	movlw	238
 30045  015B8E  24E1               	addwf	fsr1l,w,c
 30046  015B90  6ED9               	movwf	fsr2l,c
 30047  015B92  0EFF               	movlw	255
 30048  015B94  20E2               	addwfc	fsr1h,w,c
 30049  015B96  6EDA               	movwf	fsr2h,c
 30050  015B98  50DF               	movf	indf2,w,c
 30051  015B9A  6E0C               	movwf	(btemp+11)^0,c
 30052  015B9C  90D8               	bcf	status,0,c
 30053  015B9E  340C               	rlcf	(btemp+11)^0,w,c
 30054  015BA0  6E0B               	movwf	(btemp+10)^0,c
 30055                           
 30056                           ;stkvar	_aexp @ sp[(-13)+10]
 30057  015BA2  0EFD               	movlw	-3
 30058  015BA4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 30059                           
 30060                           ;stkvar	_a @ sp[(-13)+-8]
 30061  015BAA  0EED               	movlw	237
 30062  015BAC  24E1               	addwf	fsr1l,w,c
 30063  015BAE  6ED9               	movwf	fsr2l,c
 30064  015BB0  0EFF               	movlw	255
 30065  015BB2  20E2               	addwfc	fsr1h,w,c
 30066  015BB4  6EDA               	movwf	fsr2h,c
 30067  015BB6  AEDF               	btfss	indf2,7,c
 30068  015BB8  D002               	goto	l9070
 30069                           
 30070                           ;stkvar	_aexp @ sp[(-13)+10]
 30071  015BBA  0EFD               	movlw	-3
 30072  015BBC  80E3               	bsf	plusw1,0,c
 30073  015BBE                     l9070:
 30074                           
 30075                           ;stkvar	_aexp @ sp[(-13)+10]
 30076  015BBE  0EFD               	movlw	-3
 30077  015BC0  50E3               	movf	plusw1,w,c
 30078  015BC2  B4D8               	btfsc	status,2,c
 30079  015BC4  D027               	goto	l9080
 30080                           
 30081                           ;stkvar	_aexp @ sp[(-13)+10]
 30082  015BC6  0EFD               	movlw	-3
 30083  015BC8  28E3               	incf	plusw1,w,c
 30084  015BCA  A4D8               	btfss	status,2,c
 30085  015BCC  D018               	goto	l9076
 30086  015BCE  0E00               	movlw	0
 30087  015BD0  6E09               	movwf	(btemp+8)^0,c
 30088  015BD2  0E00               	movlw	0
 30089  015BD4  6E0A               	movwf	(btemp+9)^0,c
 30090  015BD6  0E00               	movlw	0
 30091  015BD8  6E0B               	movwf	(btemp+10)^0,c
 30092  015BDA  0E00               	movlw	0
 30093  015BDC  6E0C               	movwf	(btemp+11)^0,c
 30094                           
 30095                           ;stkvar	_a @ sp[(-13)+-8]
 30096  015BDE  0EEB               	movlw	-21
 30097  015BE0  0060  F027  FFE3   	movff	btemp+8,plusw1
 30098  015BE6  0EEC               	movlw	-20
 30099  015BE8  0060  F02B  FFE3   	movff	btemp+9,plusw1
 30100  015BEE  0EED               	movlw	-19
 30101  015BF0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 30102  015BF6  0EEE               	movlw	-18
 30103  015BF8  0060  F033  FFE3   	movff	btemp+11,plusw1
 30104  015BFE                     l9076:
 30105                           
 30106                           ;stkvar	_a @ sp[(-13)+-8]
 30107  015BFE  0EED               	movlw	-19
 30108  015C00  8EE3               	bsf	plusw1,7,c
 30109                           
 30110                           ;stkvar	_a @ sp[(-13)+-8]
 30111  015C02  0EEE               	movlw	238
 30112  015C04  24E1               	addwf	fsr1l,w,c
 30113  015C06  6ED9               	movwf	fsr2l,c
 30114  015C08  0EFF               	movlw	255
 30115  015C0A  20E2               	addwfc	fsr1h,w,c
 30116  015C0C  6EDA               	movwf	fsr2h,c
 30117  015C0E  0E00               	movlw	0
 30118  015C10  6EDF               	movwf	indf2,c
 30119  015C12  D018               	goto	l9082
 30120  015C14                     l9080:
 30121  015C14  0E00               	movlw	0
 30122  015C16  6E09               	movwf	(btemp+8)^0,c
 30123  015C18  0E00               	movlw	0
 30124  015C1A  6E0A               	movwf	(btemp+9)^0,c
 30125  015C1C  0E00               	movlw	0
 30126  015C1E  6E0B               	movwf	(btemp+10)^0,c
 30127  015C20  0E00               	movlw	0
 30128  015C22  6E0C               	movwf	(btemp+11)^0,c
 30129                           
 30130                           ;stkvar	_a @ sp[(-13)+-8]
 30131  015C24  0EEB               	movlw	-21
 30132  015C26  0060  F027  FFE3   	movff	btemp+8,plusw1
 30133  015C2C  0EEC               	movlw	-20
 30134  015C2E  0060  F02B  FFE3   	movff	btemp+9,plusw1
 30135  015C34  0EED               	movlw	-19
 30136  015C36  0060  F02F  FFE3   	movff	btemp+10,plusw1
 30137  015C3C  0EEE               	movlw	-18
 30138  015C3E  0060  F033  FFE3   	movff	btemp+11,plusw1
 30139  015C44                     l9082:
 30140                           
 30141                           ;stkvar	_a @ sp[(-13)+-8]
 30142  015C44  0EEB               	movlw	-21
 30143  015C46  50E3               	movf	plusw1,w,c
 30144  015C48  E139               	bnz	l9094
 30145  015C4A  0EEC               	movlw	-20
 30146  015C4C  50E3               	movf	plusw1,w,c
 30147  015C4E  E136               	bnz	l9094
 30148  015C50  0EED               	movlw	-19
 30149  015C52  50E3               	movf	plusw1,w,c
 30150  015C54  E133               	bnz	l9094
 30151  015C56  0EEE               	movlw	-18
 30152  015C58  50E3               	movf	plusw1,w,c
 30153  015C5A  A4D8               	btfss	status,2,c
 30154  015C5C  D02F               	goto	l9094
 30155                           
 30156                           ;stkvar	_b @ sp[(-13)+-4]
 30157  015C5E  0EEF               	movlw	-17
 30158  015C60  6AE3               	clrf	plusw1,c
 30159  015C62  0EF0               	movlw	-16
 30160  015C64  6AE3               	clrf	plusw1,c
 30161  015C66  0EF1               	movlw	-15
 30162  015C68  6AE3               	clrf	plusw1,c
 30163  015C6A  0EF2               	movlw	-14
 30164  015C6C  6AE3               	clrf	plusw1,c
 30165                           
 30166                           ;stkvar	_b @ sp[(-13)+-4]
 30167  015C6E  0EF1               	movlw	241
 30168  015C70  24E1               	addwf	fsr1l,w,c
 30169  015C72  6ED9               	movwf	fsr2l,c
 30170  015C74  0EFF               	movlw	255
 30171  015C76  20E2               	addwfc	fsr1h,w,c
 30172  015C78  6EDA               	movwf	fsr2h,c
 30173  015C7A  0E80               	movlw	128
 30174  015C7C  12DE               	iorwf	postinc2,f,c
 30175  015C7E  0E7F               	movlw	127
 30176  015C80  12DD               	iorwf	postdec2,f,c
 30177  015C82                     l9088:
 30178                           
 30179                           ;stkvar	_sign @ sp[(-13)+12]
 30180  015C82  0EFF               	movlw	-1
 30181  015C84  006F FF8C  F00C    	movff	plusw1,btemp+11
 30182                           
 30183                           ;stkvar	_b @ sp[(-13)+-4]
 30184  015C8A  0EF2               	movlw	242
 30185  015C8C  24E1               	addwf	fsr1l,w,c
 30186  015C8E  6ED9               	movwf	fsr2l,c
 30187  015C90  0EFF               	movlw	255
 30188  015C92  20E2               	addwfc	fsr1h,w,c
 30189  015C94  6EDA               	movwf	fsr2h,c
 30190  015C96  500C               	movf	(btemp+11)^0,w,c
 30191  015C98  12DF               	iorwf	indf2,f,c
 30192                           
 30193                           ;stkvar	_b @ sp[(-13)+-4]
 30194  015C9A  0EEF               	movlw	-17
 30195  015C9C  006F FF8C  F001    	movff	plusw1,btemp
 30196  015CA2  0EF0               	movlw	-16
 30197  015CA4  006F FF8C  F002    	movff	plusw1,btemp+1
 30198  015CAA  0EF1               	movlw	-15
 30199  015CAC  006F FF8C  F003    	movff	plusw1,btemp+2
 30200  015CB2  0EF2               	movlw	-14
 30201  015CB4  006F FF8C  F004    	movff	plusw1,btemp+3
 30202  015CBA  D19F               	goto	l3265
 30203  015CBC                     l9094:
 30204                           
 30205                           ;stkvar	_bexp @ sp[(-13)+11]
 30206  015CBC  0EFE               	movlw	-2
 30207  015CBE  50E3               	movf	plusw1,w,c
 30208  015CC0  A4D8               	btfss	status,2,c
 30209  015CC2  D009               	goto	l9102
 30210  015CC4  0E00               	movlw	0
 30211  015CC6  6E01               	movwf	btemp^0,c
 30212  015CC8  0E00               	movlw	0
 30213  015CCA  6E02               	movwf	(btemp+1)^0,c
 30214  015CCC  0E00               	movlw	0
 30215  015CCE  6E03               	movwf	(btemp+2)^0,c
 30216  015CD0  0E00               	movlw	0
 30217  015CD2  6E04               	movwf	(btemp+3)^0,c
 30218  015CD4  D192               	goto	l3265
 30219  015CD6                     l9102:
 30220                           
 30221                           ;stkvar	_bexp @ sp[(-13)+11]
 30222  015CD6  0EFE               	movlw	-2
 30223  015CD8  50E3               	movf	plusw1,w,c
 30224  015CDA  6E0B               	movwf	(btemp+10)^0,c
 30225  015CDC  6A0C               	clrf	(btemp+11)^0,c
 30226                           
 30227                           ;stkvar	_aexp @ sp[(-13)+10]
 30228  015CDE  0EFD               	movlw	-3
 30229  015CE0  50E3               	movf	plusw1,w,c
 30230  015CE2  5E0B               	subwf	(btemp+10)^0,f,c
 30231  015CE4  0E00               	movlw	0
 30232  015CE6  5A0C               	subwfb	(btemp+11)^0,f,c
 30233  015CE8  0E7F               	movlw	127
 30234  015CEA  260B               	addwf	(btemp+10)^0,f,c
 30235  015CEC  0E00               	movlw	0
 30236  015CEE  220C               	addwfc	(btemp+11)^0,f,c
 30237                           
 30238                           ;stkvar	_new_exp @ sp[(-13)+8]
 30239  015CF0  0EFB               	movlw	-5
 30240  015CF2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 30241  015CF8  0EFC               	movlw	-4
 30242  015CFA  0060  F033  FFE3   	movff	btemp+11,plusw1
 30243                           
 30244                           ;stkvar	_b @ sp[(-13)+-4]
 30245  015D00  0EEF               	movlw	-17
 30246  015D02  006F FF8C  F009    	movff	plusw1,btemp+8
 30247  015D08  0EF0               	movlw	-16
 30248  015D0A  006F FF8C  F00A    	movff	plusw1,btemp+9
 30249  015D10  0EF1               	movlw	-15
 30250  015D12  006F FF8C  F00B    	movff	plusw1,btemp+10
 30251  015D18  0EF2               	movlw	-14
 30252  015D1A  006F FF8C  F00C    	movff	plusw1,btemp+11
 30253                           
 30254                           ;stkvar	_rem @ sp[(-13)+4]
 30255  015D20  0EF7               	movlw	-9
 30256  015D22  0060  F027  FFE3   	movff	btemp+8,plusw1
 30257  015D28  0EF8               	movlw	-8
 30258  015D2A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 30259  015D30  0EF9               	movlw	-7
 30260  015D32  0060  F02F  FFE3   	movff	btemp+10,plusw1
 30261  015D38  0EFA               	movlw	-6
 30262  015D3A  0060  F033  FFE3   	movff	btemp+11,plusw1
 30263                           
 30264                           ;stkvar	_b @ sp[(-13)+-4]
 30265  015D40  0EEF               	movlw	-17
 30266  015D42  6AE3               	clrf	plusw1,c
 30267  015D44  0EF0               	movlw	-16
 30268  015D46  6AE3               	clrf	plusw1,c
 30269  015D48  0EF1               	movlw	-15
 30270  015D4A  6AE3               	clrf	plusw1,c
 30271  015D4C  0EF2               	movlw	-14
 30272  015D4E  6AE3               	clrf	plusw1,c
 30273                           
 30274                           ;stkvar	_grs @ sp[(-13)+0]
 30275  015D50  0EF3               	movlw	-13
 30276  015D52  6AE3               	clrf	plusw1,c
 30277  015D54  0EF4               	movlw	-12
 30278  015D56  6AE3               	clrf	plusw1,c
 30279  015D58  0EF5               	movlw	-11
 30280  015D5A  6AE3               	clrf	plusw1,c
 30281  015D5C  0EF6               	movlw	-10
 30282  015D5E  6AE3               	clrf	plusw1,c
 30283                           
 30284                           ;stkvar	_aexp @ sp[(-13)+10]
 30285  015D60  0EFD               	movlw	-3
 30286  015D62  6AE3               	clrf	plusw1,c
 30287  015D64  D050               	goto	l9130
 30288  015D66                     l9112:
 30289                           
 30290                           ;stkvar	_aexp @ sp[(-13)+10]
 30291  015D66  0EFD               	movlw	-3
 30292  015D68  50E3               	movf	plusw1,w,c
 30293  015D6A  B4D8               	btfsc	status,2,c
 30294  015D6C  D020               	goto	l9122
 30295                           
 30296                           ;stkvar	_rem @ sp[(-13)+4]
 30297  015D6E  90D8               	bcf	status,0,c
 30298  015D70  0EF7               	movlw	-9
 30299  015D72  36E3               	rlcf	plusw1,f,c
 30300  015D74  0EF8               	movlw	-8
 30301  015D76  36E3               	rlcf	plusw1,f,c
 30302  015D78  0EF9               	movlw	-7
 30303  015D7A  36E3               	rlcf	plusw1,f,c
 30304  015D7C  0EFA               	movlw	-6
 30305  015D7E  36E3               	rlcf	plusw1,f,c
 30306                           
 30307                           ;stkvar	_b @ sp[(-13)+-4]
 30308  015D80  90D8               	bcf	status,0,c
 30309  015D82  0EEF               	movlw	-17
 30310  015D84  36E3               	rlcf	plusw1,f,c
 30311  015D86  0EF0               	movlw	-16
 30312  015D88  36E3               	rlcf	plusw1,f,c
 30313  015D8A  0EF1               	movlw	-15
 30314  015D8C  36E3               	rlcf	plusw1,f,c
 30315  015D8E  0EF2               	movlw	-14
 30316  015D90  36E3               	rlcf	plusw1,f,c
 30317                           
 30318                           ;stkvar	_grs @ sp[(-13)+0]
 30319  015D92  0EF6               	movlw	-10
 30320  015D94  AEE3               	btfss	plusw1,7,c
 30321  015D96  D002               	goto	l9120
 30322                           
 30323                           ;stkvar	_b @ sp[(-13)+-4]
 30324  015D98  0EEF               	movlw	-17
 30325  015D9A  80E3               	bsf	plusw1,0,c
 30326  015D9C                     l9120:
 30327                           
 30328                           ;stkvar	_grs @ sp[(-13)+0]
 30329  015D9C  90D8               	bcf	status,0,c
 30330  015D9E  0EF3               	movlw	-13
 30331  015DA0  36E3               	rlcf	plusw1,f,c
 30332  015DA2  0EF4               	movlw	-12
 30333  015DA4  36E3               	rlcf	plusw1,f,c
 30334  015DA6  0EF5               	movlw	-11
 30335  015DA8  36E3               	rlcf	plusw1,f,c
 30336  015DAA  0EF6               	movlw	-10
 30337  015DAC  36E3               	rlcf	plusw1,f,c
 30338  015DAE                     l9122:
 30339                           
 30340                           ;stkvar	_a @ sp[(-13)+-8]
 30341                           ;stkvar	_rem @ sp[(-13)+4]
 30342  015DAE  50E1               	movf	fsr1l,w,c
 30343  015DB0  0FF7               	addlw	-9
 30344  015DB2  6ED9               	movwf	fsr2l,c
 30345  015DB4  50E2               	movf	fsr1h,w,c
 30346  015DB6  6EDA               	movwf	fsr2h,c
 30347  015DB8  0EFF               	movlw	255
 30348  015DBA  22DA               	addwfc	fsr2h,f,c
 30349  015DBC  0EEB               	movlw	-21
 30350  015DBE  50E3               	movf	plusw1,w,c
 30351  015DC0  5CDE               	subwf	postinc2,w,c
 30352  015DC2  0EEC               	movlw	-20
 30353  015DC4  50E3               	movf	plusw1,w,c
 30354  015DC6  58DE               	subwfb	postinc2,w,c
 30355  015DC8  0EED               	movlw	-19
 30356  015DCA  50E3               	movf	plusw1,w,c
 30357  015DCC  58DE               	subwfb	postinc2,w,c
 30358  015DCE  0EEE               	movlw	-18
 30359  015DD0  50E3               	movf	plusw1,w,c
 30360  015DD2  58DE               	subwfb	postinc2,w,c
 30361  015DD4  A0D8               	btfss	status,0,c
 30362  015DD6  D015               	goto	l9128
 30363                           
 30364                           ;stkvar	_grs @ sp[(-13)+0]
 30365  015DD8  0EF6               	movlw	-10
 30366  015DDA  8CE3               	bsf	plusw1,6,c
 30367                           
 30368                           ;stkvar	_a @ sp[(-13)+-8]
 30369                           ;stkvar	_rem @ sp[(-13)+4]
 30370  015DDC  50E1               	movf	fsr1l,w,c
 30371  015DDE  0FF7               	addlw	-9
 30372  015DE0  6ED9               	movwf	fsr2l,c
 30373  015DE2  50E2               	movf	fsr1h,w,c
 30374  015DE4  6EDA               	movwf	fsr2h,c
 30375  015DE6  0EFF               	movlw	255
 30376  015DE8  22DA               	addwfc	fsr2h,f,c
 30377  015DEA  0EEB               	movlw	-21
 30378  015DEC  50E3               	movf	plusw1,w,c
 30379  015DEE  5EDE               	subwf	postinc2,f,c
 30380  015DF0  0EEC               	movlw	-20
 30381  015DF2  50E3               	movf	plusw1,w,c
 30382  015DF4  5ADE               	subwfb	postinc2,f,c
 30383  015DF6  0EED               	movlw	-19
 30384  015DF8  50E3               	movf	plusw1,w,c
 30385  015DFA  5ADE               	subwfb	postinc2,f,c
 30386  015DFC  0EEE               	movlw	-18
 30387  015DFE  50E3               	movf	plusw1,w,c
 30388  015E00  5ADE               	subwfb	postinc2,f,c
 30389  015E02                     l9128:
 30390                           
 30391                           ;stkvar	_aexp @ sp[(-13)+10]
 30392  015E02  0EFD               	movlw	-3
 30393  015E04  2AE3               	incf	plusw1,f,c
 30394  015E06                     l9130:
 30395                           
 30396                           ;stkvar	_aexp @ sp[(-13)+10]
 30397  015E06  0EFD               	movlw	-3
 30398  015E08  006F FF8C  F001    	movff	plusw1,btemp
 30399  015E0E  0E19               	movlw	25
 30400  015E10  6401               	cpfsgt	btemp^0,c
 30401  015E12  D7A9               	goto	l9112
 30402                           
 30403                           ;stkvar	_rem @ sp[(-13)+4]
 30404  015E14  0EF7               	movlw	-9
 30405  015E16  50E3               	movf	plusw1,w,c
 30406  015E18  E10A               	bnz	u7290
 30407  015E1A  0EF8               	movlw	-8
 30408  015E1C  50E3               	movf	plusw1,w,c
 30409  015E1E  E107               	bnz	u7290
 30410  015E20  0EF9               	movlw	-7
 30411  015E22  50E3               	movf	plusw1,w,c
 30412  015E24  E104               	bnz	u7290
 30413  015E26  0EFA               	movlw	-6
 30414  015E28  50E3               	movf	plusw1,w,c
 30415  015E2A  B4D8               	btfsc	status,2,c
 30416  015E2C  D024               	goto	l9146
 30417  015E2E                     u7290:
 30418                           
 30419                           ;stkvar	_grs @ sp[(-13)+0]
 30420  015E2E  0EF3               	movlw	-13
 30421  015E30  80E3               	bsf	plusw1,0,c
 30422  015E32  D021               	goto	l9146
 30423  015E34                     l9136:
 30424                           
 30425                           ;stkvar	_b @ sp[(-13)+-4]
 30426  015E34  90D8               	bcf	status,0,c
 30427  015E36  0EEF               	movlw	-17
 30428  015E38  36E3               	rlcf	plusw1,f,c
 30429  015E3A  0EF0               	movlw	-16
 30430  015E3C  36E3               	rlcf	plusw1,f,c
 30431  015E3E  0EF1               	movlw	-15
 30432  015E40  36E3               	rlcf	plusw1,f,c
 30433  015E42  0EF2               	movlw	-14
 30434  015E44  36E3               	rlcf	plusw1,f,c
 30435                           
 30436                           ;stkvar	_grs @ sp[(-13)+0]
 30437  015E46  0EF6               	movlw	-10
 30438  015E48  AEE3               	btfss	plusw1,7,c
 30439  015E4A  D002               	goto	l9142
 30440                           
 30441                           ;stkvar	_b @ sp[(-13)+-4]
 30442  015E4C  0EEF               	movlw	-17
 30443  015E4E  80E3               	bsf	plusw1,0,c
 30444  015E50                     l9142:
 30445                           
 30446                           ;stkvar	_grs @ sp[(-13)+0]
 30447  015E50  90D8               	bcf	status,0,c
 30448  015E52  0EF3               	movlw	-13
 30449  015E54  36E3               	rlcf	plusw1,f,c
 30450  015E56  0EF4               	movlw	-12
 30451  015E58  36E3               	rlcf	plusw1,f,c
 30452  015E5A  0EF5               	movlw	-11
 30453  015E5C  36E3               	rlcf	plusw1,f,c
 30454  015E5E  0EF6               	movlw	-10
 30455  015E60  36E3               	rlcf	plusw1,f,c
 30456                           
 30457                           ;stkvar	_new_exp @ sp[(-13)+8]
 30458  015E62  50E1               	movf	fsr1l,w,c
 30459  015E64  0FFB               	addlw	-5
 30460  015E66  6ED9               	movwf	fsr2l,c
 30461  015E68  50E2               	movf	fsr1h,w,c
 30462  015E6A  6EDA               	movwf	fsr2h,c
 30463  015E6C  0EFF               	movlw	255
 30464  015E6E  22DA               	addwfc	fsr2h,f,c
 30465  015E70  06DE               	decf	postinc2,f,c
 30466  015E72  0E00               	movlw	0
 30467  015E74  5ADD               	subwfb	postdec2,f,c
 30468  015E76                     l9146:
 30469                           
 30470                           ;stkvar	_b @ sp[(-13)+-4]
 30471  015E76  0EF1               	movlw	-15
 30472  015E78  AEE3               	btfss	plusw1,7,c
 30473  015E7A  D7DC               	goto	l9136
 30474                           
 30475                           ;stkvar	_aexp @ sp[(-13)+10]
 30476  015E7C  0EFD               	movlw	-3
 30477  015E7E  6AE3               	clrf	plusw1,c
 30478                           
 30479                           ;stkvar	_grs @ sp[(-13)+0]
 30480  015E80  0EF6               	movlw	-10
 30481  015E82  AEE3               	btfss	plusw1,7,c
 30482  015E84  D020               	goto	l9160
 30483                           
 30484                           ;stkvar	_grs @ sp[(-13)+0]
 30485  015E86  50E1               	movf	fsr1l,w,c
 30486  015E88  0FF3               	addlw	-13
 30487  015E8A  6ED9               	movwf	fsr2l,c
 30488  015E8C  50E2               	movf	fsr1h,w,c
 30489  015E8E  6EDA               	movwf	fsr2h,c
 30490  015E90  0EFF               	movlw	255
 30491  015E92  22DA               	addwfc	fsr2h,f,c
 30492  015E94  0EFF               	movlw	255
 30493  015E96  14DE               	andwf	postinc2,w,c
 30494  015E98  6E09               	movwf	(btemp+8)^0,c
 30495  015E9A  0EFF               	movlw	255
 30496  015E9C  14DE               	andwf	postinc2,w,c
 30497  015E9E  6E0A               	movwf	(btemp+9)^0,c
 30498  015EA0  0EFF               	movlw	255
 30499  015EA2  14DE               	andwf	postinc2,w,c
 30500  015EA4  6E0B               	movwf	(btemp+10)^0,c
 30501  015EA6  0E7F               	movlw	127
 30502  015EA8  14DE               	andwf	postinc2,w,c
 30503  015EAA  6E0C               	movwf	(btemp+11)^0,c
 30504  015EAC  5009               	movf	(btemp+8)^0,w,c
 30505  015EAE  100A               	iorwf	(btemp+9)^0,w,c
 30506  015EB0  100B               	iorwf	(btemp+10)^0,w,c
 30507  015EB2  100C               	iorwf	(btemp+11)^0,w,c
 30508  015EB4  B4D8               	btfsc	status,2,c
 30509  015EB6  D004               	goto	l9156
 30510  015EB8                     u7330:
 30511                           
 30512                           ;stkvar	_aexp @ sp[(-13)+10]
 30513  015EB8  0EFD               	movlw	-3
 30514  015EBA  6AE3               	clrf	plusw1,c
 30515  015EBC  2AE3               	incf	plusw1,f,c
 30516  015EBE  D003               	goto	l9160
 30517  015EC0                     l9156:
 30518                           
 30519                           ;stkvar	_b @ sp[(-13)+-4]
 30520  015EC0  0EEF               	movlw	-17
 30521  015EC2  B0E3               	btfsc	plusw1,0,c
 30522  015EC4  D7F9               	goto	u7330
 30523  015EC6                     l9160:
 30524                           
 30525                           ;stkvar	_aexp @ sp[(-13)+10]
 30526  015EC6  0EFD               	movlw	-3
 30527  015EC8  50E3               	movf	plusw1,w,c
 30528  015ECA  B4D8               	btfsc	status,2,c
 30529  015ECC  D036               	goto	l9170
 30530                           
 30531                           ;stkvar	_b @ sp[(-13)+-4]
 30532  015ECE  50E1               	movf	fsr1l,w,c
 30533  015ED0  0FEF               	addlw	-17
 30534  015ED2  6ED9               	movwf	fsr2l,c
 30535  015ED4  50E2               	movf	fsr1h,w,c
 30536  015ED6  6EDA               	movwf	fsr2h,c
 30537  015ED8  0EFF               	movlw	255
 30538  015EDA  22DA               	addwfc	fsr2h,f,c
 30539  015EDC  2ADE               	incf	postinc2,f,c
 30540  015EDE  0E00               	movlw	0
 30541  015EE0  22DE               	addwfc	postinc2,f,c
 30542  015EE2  22DE               	addwfc	postinc2,f,c
 30543  015EE4  22DE               	addwfc	postinc2,f,c
 30544                           
 30545                           ;stkvar	_b @ sp[(-13)+-4]
 30546  015EE6  0EF2               	movlw	-14
 30547  015EE8  A0E3               	btfss	plusw1,0,c
 30548  015EEA  D027               	goto	l9170
 30549  015EEC  0E01               	movlw	1
 30550  015EEE  6E0C               	movwf	(btemp+11)^0,c
 30551                           
 30552                           ;stkvar	_b @ sp[(-13)+-4]
 30553  015EF0  50E1               	movf	fsr1l,w,c
 30554  015EF2  0FEF               	addlw	-17
 30555  015EF4  6ED9               	movwf	fsr2l,c
 30556  015EF6  50E2               	movf	fsr1h,w,c
 30557  015EF8  6EDA               	movwf	fsr2h,c
 30558  015EFA  0EFF               	movlw	255
 30559  015EFC  22DA               	addwfc	fsr2h,f,c
 30560  015EFE  280C               	incf	(btemp+11)^0,w,c
 30561  015F00  52DE               	movf	postinc2,f,c
 30562  015F02  D008               	goto	u7370
 30563  015F04                     u7375:
 30564  015F04  52DE               	movf	postinc2,f,c
 30565  015F06  90D8               	bcf	status,0,c
 30566  015F08  BEDC               	btfsc	preinc2,7,c
 30567  015F0A  80D8               	bsf	status,0,c
 30568  015F0C  32DD               	rrcf	postdec2,f,c
 30569  015F0E  32DD               	rrcf	postdec2,f,c
 30570  015F10  32DD               	rrcf	postdec2,f,c
 30571  015F12  32DE               	rrcf	postinc2,f,c
 30572  015F14                     u7370:
 30573  015F14  2EE8               	decfsz	wreg,f,c
 30574  015F16  D7F6               	goto	u7375
 30575                           
 30576                           ;stkvar	_new_exp @ sp[(-13)+8]
 30577  015F18  0EFB               	movlw	-5
 30578  015F1A  50E3               	movf	plusw1,w,c
 30579  015F1C  0F01               	addlw	1
 30580  015F1E  6E01               	movwf	btemp^0,c
 30581  015F20  0EFB               	movlw	-5
 30582  015F22  0060  F007  FFE3   	movff	btemp,plusw1
 30583  015F28  6A01               	clrf	btemp^0,c
 30584  015F2A  0EFC               	movlw	-4
 30585  015F2C  50E3               	movf	plusw1,w,c
 30586  015F2E  2001               	addwfc	btemp^0,w,c
 30587  015F30  6E01               	movwf	btemp^0,c
 30588  015F32  0EFC               	movlw	-4
 30589  015F34  0060  F007  FFE3   	movff	btemp,plusw1
 30590  015F3A                     l9170:
 30591                           
 30592                           ;stkvar	_new_exp @ sp[(-13)+8]
 30593  015F3A  0EFC               	movlw	-4
 30594  015F3C  BEE3               	btfsc	plusw1,7,c
 30595  015F3E  D01B               	goto	l9176
 30596  015F40  0EFC               	movlw	-4
 30597  015F42  50E3               	movf	plusw1,w,c
 30598  015F44  E104               	bnz	u7380
 30599  015F46  0EFB               	movlw	-5
 30600  015F48  28E3               	incf	plusw1,w,c
 30601  015F4A  A0D8               	btfss	status,0,c
 30602  015F4C  D014               	goto	l9176
 30603  015F4E                     u7380:
 30604  015F4E  0EFF               	movlw	255
 30605  015F50  6E0B               	movwf	(btemp+10)^0,c
 30606  015F52  0E00               	movlw	0
 30607  015F54  6E0C               	movwf	(btemp+11)^0,c
 30608                           
 30609                           ;stkvar	_new_exp @ sp[(-13)+8]
 30610  015F56  0EFB               	movlw	-5
 30611  015F58  0060  F02F  FFE3   	movff	btemp+10,plusw1
 30612  015F5E  0EFC               	movlw	-4
 30613  015F60  0060  F033  FFE3   	movff	btemp+11,plusw1
 30614                           
 30615                           ;stkvar	_b @ sp[(-13)+-4]
 30616  015F66  0EEF               	movlw	-17
 30617  015F68  6AE3               	clrf	plusw1,c
 30618  015F6A  0EF0               	movlw	-16
 30619  015F6C  6AE3               	clrf	plusw1,c
 30620  015F6E  0EF1               	movlw	-15
 30621  015F70  6AE3               	clrf	plusw1,c
 30622  015F72  0EF2               	movlw	-14
 30623  015F74  6AE3               	clrf	plusw1,c
 30624  015F76                     l9176:
 30625                           
 30626                           ;stkvar	_new_exp @ sp[(-13)+8]
 30627  015F76  0EFC               	movlw	-4
 30628  015F78  BEE3               	btfsc	plusw1,7,c
 30629  015F7A  D007               	goto	u7390
 30630  015F7C  0EFC               	movlw	-4
 30631  015F7E  50E3               	movf	plusw1,w,c
 30632  015F80  E112               	bnz	l9182
 30633  015F82  0EFB               	movlw	-5
 30634  015F84  04E3               	decf	plusw1,w,c
 30635  015F86  B0D8               	btfsc	status,0,c
 30636  015F88  D00E               	goto	l9182
 30637  015F8A                     u7390:
 30638                           
 30639                           ;stkvar	_new_exp @ sp[(-13)+8]
 30640  015F8A  0EFB               	movlw	-5
 30641  015F8C  6AE3               	clrf	plusw1,c
 30642  015F8E  0EFC               	movlw	-4
 30643  015F90  6AE3               	clrf	plusw1,c
 30644                           
 30645                           ;stkvar	_b @ sp[(-13)+-4]
 30646  015F92  0EEF               	movlw	-17
 30647  015F94  6AE3               	clrf	plusw1,c
 30648  015F96  0EF0               	movlw	-16
 30649  015F98  6AE3               	clrf	plusw1,c
 30650  015F9A  0EF1               	movlw	-15
 30651  015F9C  6AE3               	clrf	plusw1,c
 30652  015F9E  0EF2               	movlw	-14
 30653  015FA0  6AE3               	clrf	plusw1,c
 30654                           
 30655                           ;stkvar	_sign @ sp[(-13)+12]
 30656  015FA2  0EFF               	movlw	-1
 30657  015FA4  6AE3               	clrf	plusw1,c
 30658  015FA6                     l9182:
 30659                           
 30660                           ;stkvar	_new_exp @ sp[(-13)+8]
 30661                           ;stkvar	_bexp @ sp[(-13)+11]
 30662  015FA6  0EFB               	movlw	-5
 30663  015FA8  006F FF8C  F001    	movff	plusw1,btemp
 30664  015FAE  0EFE               	movlw	-2
 30665  015FB0  0060  F007  FFE3   	movff	btemp,plusw1
 30666                           
 30667                           ;stkvar	_bexp @ sp[(-13)+11]
 30668  015FB6  0EFE               	movlw	-2
 30669  015FB8  A0E3               	btfss	plusw1,0,c
 30670  015FBA  D009               	goto	l9188
 30671                           
 30672                           ;stkvar	_b @ sp[(-13)+-4]
 30673  015FBC  0EF1               	movlw	241
 30674  015FBE  24E1               	addwf	fsr1l,w,c
 30675  015FC0  6ED9               	movwf	fsr2l,c
 30676  015FC2  0EFF               	movlw	255
 30677  015FC4  20E2               	addwfc	fsr1h,w,c
 30678  015FC6  6EDA               	movwf	fsr2h,c
 30679  015FC8  0E00               	movlw	0
 30680  015FCA  8EDB               	bsf	plusw2,7,c
 30681  015FCC  D008               	goto	l9190
 30682  015FCE                     l9188:
 30683                           
 30684                           ;stkvar	_b @ sp[(-13)+-4]
 30685  015FCE  0EF1               	movlw	241
 30686  015FD0  24E1               	addwf	fsr1l,w,c
 30687  015FD2  6ED9               	movwf	fsr2l,c
 30688  015FD4  0EFF               	movlw	255
 30689  015FD6  20E2               	addwfc	fsr1h,w,c
 30690  015FD8  6EDA               	movwf	fsr2h,c
 30691  015FDA  0E7F               	movlw	127
 30692  015FDC  16DF               	andwf	indf2,f,c
 30693  015FDE                     l9190:
 30694                           
 30695                           ;stkvar	_b @ sp[(-13)+-4]
 30696  015FDE  0EF2               	movlw	242
 30697  015FE0  24E1               	addwf	fsr1l,w,c
 30698  015FE2  6ED9               	movwf	fsr2l,c
 30699  015FE4  0EFF               	movlw	255
 30700  015FE6  20E2               	addwfc	fsr1h,w,c
 30701  015FE8  6EDA               	movwf	fsr2h,c
 30702                           
 30703                           ;stkvar	_bexp @ sp[(-13)+11]
 30704  015FEA  0EFE               	movlw	-2
 30705  015FEC  006F FF8C  F00C    	movff	plusw1,btemp+11
 30706  015FF2  90D8               	bcf	status,0,c
 30707  015FF4  300C               	rrcf	(btemp+11)^0,w,c
 30708  015FF6  6EDF               	movwf	indf2,c
 30709  015FF8  D644               	goto	l9088
 30710  015FFA                     l3265:
 30711                           
 30712                           ; ___fldiv: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 30713  015FFA  0EEB               	movlw	235
 30714  015FFC  26E1               	addwf	fsr1l,f,c
 30715  015FFE  0EFF               	movlw	255
 30716  016000  22E2               	addwfc	fsr1h,f,c
 30717  016002  0012               	return		;funcret
 30718  016004                     __end_of___fldiv:
 30719                           	opt callstack 0
 30720                           
 30721 ;; *************** function ___flge *****************
 30722 ;; Defined at:
 30723 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flge.c"
 30724 ;; Parameters:    Size  Location     Type
 30725 ;;  ff1             4  [STACK] unsigned char 
 30726 ;;  ff2             4  [STACK] unsigned char 
 30727 ;; Auto vars:     Size  Location     Type
 30728 ;;		None
 30729 ;; Return value:  Size  Location     Type
 30730 ;;		None               void
 30731 ;; Registers used:
 30732 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 30733 ;; Tracked objects:
 30734 ;;		On entry : 0/1
 30735 ;;		On exit  : 0/0
 30736 ;;		Unchanged: 0/0
 30737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30738 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30739 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30740 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30741 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30742 ;;Total ram usage:        0 bytes
 30743 ;; Hardware stack levels used:    1
 30744 ;; Hardware stack levels required when called:   15
 30745 ;; This function calls:
 30746 ;;		Nothing
 30747 ;; This function is called by:
 30748 ;;		_main
 30749 ;;		_convert_dac_raw
 30750 ;;		_calc_ror_data
 30751 ;;		_check_day_time
 30752 ;;		_calc_bsoc
 30753 ;;		_efgtoa
 30754 ;; This function uses a reentrant model
 30755 ;;
 30756                           
 30757                           	psect	text122
 30758  019FF6                     __ptext122:
 30759                           	opt callstack 0
 30760  019FF6                     ___flge:
 30761                           	opt callstack 0
 30762                           
 30763                           ;stkvar	_ff1 @ sp[(0)+-4]
 30764                           
 30765                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30766                           ;incstack = 0
 30767 ;; hardware stack exceeded
 30768  019FF6  50E1               	movf	fsr1l,w,c
 30769  019FF8  0FFC               	addlw	-4
 30770  019FFA  6ED9               	movwf	fsr2l,c
 30771  019FFC  50E2               	movf	fsr1h,w,c
 30772  019FFE  6EDA               	movwf	fsr2h,c
 30773  01A000  0EFF               	movlw	255
 30774  01A002  22DA               	addwfc	fsr2h,f,c
 30775  01A004  0E00               	movlw	0
 30776  01A006  14DE               	andwf	postinc2,w,c
 30777  01A008  6E09               	movwf	(btemp+8)^0,c
 30778  01A00A  0E00               	movlw	0
 30779  01A00C  14DE               	andwf	postinc2,w,c
 30780  01A00E  6E0A               	movwf	(btemp+9)^0,c
 30781  01A010  0E80               	movlw	128
 30782  01A012  14DE               	andwf	postinc2,w,c
 30783  01A014  6E0B               	movwf	(btemp+10)^0,c
 30784  01A016  0E7F               	movlw	127
 30785  01A018  14DE               	andwf	postinc2,w,c
 30786  01A01A  6E0C               	movwf	(btemp+11)^0,c
 30787  01A01C  5009               	movf	(btemp+8)^0,w,c
 30788  01A01E  100A               	iorwf	(btemp+9)^0,w,c
 30789  01A020  100B               	iorwf	(btemp+10)^0,w,c
 30790  01A022  100C               	iorwf	(btemp+11)^0,w,c
 30791  01A024  A4D8               	btfss	status,2,c
 30792  01A026  D008               	goto	l9464
 30793                           
 30794                           ;stkvar	_ff1 @ sp[(0)+-4]
 30795  01A028  0EFC               	movlw	-4
 30796  01A02A  6AE3               	clrf	plusw1,c
 30797  01A02C  0EFD               	movlw	-3
 30798  01A02E  6AE3               	clrf	plusw1,c
 30799  01A030  0EFE               	movlw	-2
 30800  01A032  6AE3               	clrf	plusw1,c
 30801  01A034  0EFF               	movlw	-1
 30802  01A036  6AE3               	clrf	plusw1,c
 30803  01A038                     l9464:
 30804                           
 30805                           ;stkvar	_ff2 @ sp[(0)+-8]
 30806  01A038  50E1               	movf	fsr1l,w,c
 30807  01A03A  0FF8               	addlw	-8
 30808  01A03C  6ED9               	movwf	fsr2l,c
 30809  01A03E  50E2               	movf	fsr1h,w,c
 30810  01A040  6EDA               	movwf	fsr2h,c
 30811  01A042  0EFF               	movlw	255
 30812  01A044  22DA               	addwfc	fsr2h,f,c
 30813  01A046  0E00               	movlw	0
 30814  01A048  14DE               	andwf	postinc2,w,c
 30815  01A04A  6E09               	movwf	(btemp+8)^0,c
 30816  01A04C  0E00               	movlw	0
 30817  01A04E  14DE               	andwf	postinc2,w,c
 30818  01A050  6E0A               	movwf	(btemp+9)^0,c
 30819  01A052  0E80               	movlw	128
 30820  01A054  14DE               	andwf	postinc2,w,c
 30821  01A056  6E0B               	movwf	(btemp+10)^0,c
 30822  01A058  0E7F               	movlw	127
 30823  01A05A  14DE               	andwf	postinc2,w,c
 30824  01A05C  6E0C               	movwf	(btemp+11)^0,c
 30825  01A05E  5009               	movf	(btemp+8)^0,w,c
 30826  01A060  100A               	iorwf	(btemp+9)^0,w,c
 30827  01A062  100B               	iorwf	(btemp+10)^0,w,c
 30828  01A064  100C               	iorwf	(btemp+11)^0,w,c
 30829  01A066  A4D8               	btfss	status,2,c
 30830  01A068  D008               	goto	l2946
 30831                           
 30832                           ;stkvar	_ff2 @ sp[(0)+-8]
 30833  01A06A  0EF8               	movlw	-8
 30834  01A06C  6AE3               	clrf	plusw1,c
 30835  01A06E  0EF9               	movlw	-7
 30836  01A070  6AE3               	clrf	plusw1,c
 30837  01A072  0EFA               	movlw	-6
 30838  01A074  6AE3               	clrf	plusw1,c
 30839  01A076  0EFB               	movlw	-5
 30840  01A078  6AE3               	clrf	plusw1,c
 30841  01A07A                     l2946:
 30842                           
 30843                           ;stkvar	_ff1 @ sp[(0)+-4]
 30844  01A07A  0EFF               	movlw	-1
 30845  01A07C  AEE3               	btfss	plusw1,7,c
 30846  01A07E  D024               	goto	l9470
 30847                           
 30848                           ;stkvar	_ff1 @ sp[(0)+-4]
 30849  01A080  0E00               	movlw	0
 30850  01A082  6E09               	movwf	(btemp+8)^0,c
 30851  01A084  0E00               	movlw	0
 30852  01A086  6E0A               	movwf	(btemp+9)^0,c
 30853  01A088  0E00               	movlw	0
 30854  01A08A  6E0B               	movwf	(btemp+10)^0,c
 30855  01A08C  0E80               	movlw	128
 30856  01A08E  6E0C               	movwf	(btemp+11)^0,c
 30857  01A090  0EFC               	movlw	-4
 30858  01A092  50E3               	movf	plusw1,w,c
 30859  01A094  5E09               	subwf	(btemp+8)^0,f,c
 30860  01A096  0EFD               	movlw	-3
 30861  01A098  50E3               	movf	plusw1,w,c
 30862  01A09A  5A0A               	subwfb	(btemp+9)^0,f,c
 30863  01A09C  0EFE               	movlw	-2
 30864  01A09E  50E3               	movf	plusw1,w,c
 30865  01A0A0  5A0B               	subwfb	(btemp+10)^0,f,c
 30866  01A0A2  0EFF               	movlw	-1
 30867  01A0A4  50E3               	movf	plusw1,w,c
 30868  01A0A6  5A0C               	subwfb	(btemp+11)^0,f,c
 30869                           
 30870                           ;stkvar	_ff1 @ sp[(0)+-4]
 30871  01A0A8  0EFC               	movlw	-4
 30872  01A0AA  0060  F027  FFE3   	movff	btemp+8,plusw1
 30873  01A0B0  0EFD               	movlw	-3
 30874  01A0B2  0060  F02B  FFE3   	movff	btemp+9,plusw1
 30875  01A0B8  0EFE               	movlw	-2
 30876  01A0BA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 30877  01A0C0  0EFF               	movlw	-1
 30878  01A0C2  0060  F033  FFE3   	movff	btemp+11,plusw1
 30879  01A0C8                     l9470:
 30880                           
 30881                           ;stkvar	_ff2 @ sp[(0)+-8]
 30882  01A0C8  0EFB               	movlw	-5
 30883  01A0CA  AEE3               	btfss	plusw1,7,c
 30884  01A0CC  D024               	goto	l9474
 30885                           
 30886                           ;stkvar	_ff2 @ sp[(0)+-8]
 30887  01A0CE  0E00               	movlw	0
 30888  01A0D0  6E09               	movwf	(btemp+8)^0,c
 30889  01A0D2  0E00               	movlw	0
 30890  01A0D4  6E0A               	movwf	(btemp+9)^0,c
 30891  01A0D6  0E00               	movlw	0
 30892  01A0D8  6E0B               	movwf	(btemp+10)^0,c
 30893  01A0DA  0E80               	movlw	128
 30894  01A0DC  6E0C               	movwf	(btemp+11)^0,c
 30895  01A0DE  0EF8               	movlw	-8
 30896  01A0E0  50E3               	movf	plusw1,w,c
 30897  01A0E2  5E09               	subwf	(btemp+8)^0,f,c
 30898  01A0E4  0EF9               	movlw	-7
 30899  01A0E6  50E3               	movf	plusw1,w,c
 30900  01A0E8  5A0A               	subwfb	(btemp+9)^0,f,c
 30901  01A0EA  0EFA               	movlw	-6
 30902  01A0EC  50E3               	movf	plusw1,w,c
 30903  01A0EE  5A0B               	subwfb	(btemp+10)^0,f,c
 30904  01A0F0  0EFB               	movlw	-5
 30905  01A0F2  50E3               	movf	plusw1,w,c
 30906  01A0F4  5A0C               	subwfb	(btemp+11)^0,f,c
 30907                           
 30908                           ;stkvar	_ff2 @ sp[(0)+-8]
 30909  01A0F6  0EF8               	movlw	-8
 30910  01A0F8  0060  F027  FFE3   	movff	btemp+8,plusw1
 30911  01A0FE  0EF9               	movlw	-7
 30912  01A100  0060  F02B  FFE3   	movff	btemp+9,plusw1
 30913  01A106  0EFA               	movlw	-6
 30914  01A108  0060  F02F  FFE3   	movff	btemp+10,plusw1
 30915  01A10E  0EFB               	movlw	-5
 30916  01A110  0060  F033  FFE3   	movff	btemp+11,plusw1
 30917  01A116                     l9474:
 30918                           
 30919                           ;stkvar	_ff1 @ sp[(0)+-4]
 30920  01A116  0EFF               	movlw	-1
 30921  01A118  7EE3               	btg	plusw1,7,c
 30922                           
 30923                           ;stkvar	_ff2 @ sp[(0)+-8]
 30924  01A11A  0EFB               	movlw	-5
 30925  01A11C  7EE3               	btg	plusw1,7,c
 30926                           
 30927                           ;stkvar	_ff2 @ sp[(0)+-8]
 30928                           ;stkvar	_ff1 @ sp[(0)+-4]
 30929  01A11E  50E1               	movf	fsr1l,w,c
 30930  01A120  0FFC               	addlw	-4
 30931  01A122  6ED9               	movwf	fsr2l,c
 30932  01A124  50E2               	movf	fsr1h,w,c
 30933  01A126  6EDA               	movwf	fsr2h,c
 30934  01A128  0EFF               	movlw	255
 30935  01A12A  22DA               	addwfc	fsr2h,f,c
 30936  01A12C  0EF8               	movlw	-8
 30937  01A12E  50E3               	movf	plusw1,w,c
 30938  01A130  5CDE               	subwf	postinc2,w,c
 30939  01A132  0EF9               	movlw	-7
 30940  01A134  50E3               	movf	plusw1,w,c
 30941  01A136  58DE               	subwfb	postinc2,w,c
 30942  01A138  0EFA               	movlw	-6
 30943  01A13A  50E3               	movf	plusw1,w,c
 30944  01A13C  58DE               	subwfb	postinc2,w,c
 30945  01A13E  0EFB               	movlw	-5
 30946  01A140  50E3               	movf	plusw1,w,c
 30947  01A142  58DE               	subwfb	postinc2,w,c
 30948  01A144  B0D8               	btfsc	status,0,c
 30949  01A146  D002               	goto	l9482
 30950  01A148  9001               	bcf	btemp& (0+255),0,c
 30951  01A14A  D001               	goto	l2953
 30952  01A14C                     l9482:
 30953  01A14C  8001               	bsf	btemp& (0+255),0,c
 30954  01A14E                     l2953:
 30955                           
 30956                           ; ___flge: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 30957  01A14E  0EF8               	movlw	248
 30958  01A150  26E1               	addwf	fsr1l,f,c
 30959  01A152  0EFF               	movlw	255
 30960  01A154  22E2               	addwfc	fsr1h,f,c
 30961  01A156  0012               	return		;funcret
 30962  01A158                     __end_of___flge:
 30963                           	opt callstack 0
 30964                           
 30965 ;; *************** function _calc_model_data *****************
 30966 ;; Defined at:
 30967 ;;		line 67 in file "mbmc.c"
 30968 ;; Parameters:    Size  Location     Type
 30969 ;;		None
 30970 ;; Auto vars:     Size  Location     Type
 30971 ;;		None
 30972 ;; Return value:  Size  Location     Type
 30973 ;;                  1  [STACK] void 
 30974 ;; Registers used:
 30975 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 30976 ;; Tracked objects:
 30977 ;;		On entry : 0/2
 30978 ;;		On exit  : 3F/39
 30979 ;;		Unchanged: 0/0
 30980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30981 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30982 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30983 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30984 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30985 ;;Total ram usage:        0 bytes
 30986 ;; Hardware stack levels used:    1
 30987 ;; Hardware stack levels required when called:   18
 30988 ;; This function calls:
 30989 ;;		___fladd
 30990 ;;		___flmul
 30991 ;;		___flsub
 30992 ;;		_lp_filter
 30993 ;;		_start_bsoc
 30994 ;;		_stop_bsoc
 30995 ;; This function is called by:
 30996 ;;		_main
 30997 ;; This function uses a reentrant model
 30998 ;;
 30999                           
 31000                           	psect	text123
 31001  016940                     __ptext123:
 31002                           	opt callstack 0
 31003  016940                     _calc_model_data:
 31004                           	opt callstack 12
 31005                           
 31006                           ;mbmc.c: 69:  static float bvror = 0.0, bcror = 0.0;;mbmc.c: 70:  stop_bsoc();
 31007                           
 31008                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31009                           ;incstack = 0
 31010  016940  ECC2  F0ED         	call	_stop_bsoc	;wreg free
 31011                           
 31012                           ; BSR set to: 57
 31013                           ;mbmc.c: 72:  if (!V.calib) {
 31014  016944  0102               	movlb	2	; () banked
 31015  016946  51AC               	movf	(_V+172)& (0+255),w,b	;volatile
 31016  016948  A4D8               	btfss	status,2,c
 31017  01694A  D219               	goto	l12440
 31018                           
 31019                           ; BSR set to: 2
 31020                           ;mbmc.c: 73:   C.c_bat = C.calc[C_BATT];
 31021  01694C  EE21  F3FF         	lfsr	2,_C
 31022  016950  006F FF78  F843    	movff	postinc2,_C+68	;volatile
 31023  016956  006F FF78  F844    	movff	postinc2,_C+69	;volatile
 31024  01695C  006F FF78  F845    	movff	postinc2,_C+70	;volatile
 31025  016962  006F FF74  F846    	movff	postdec2,_C+71	;volatile
 31026                           
 31027                           ; BSR set to: 2
 31028                           ;mbmc.c: 74:   C.bc_ror = C.c_bat - bcror;
 31029  016968  0060  F23B  FFE6   	movff	calc_model_data@bcror,postinc1
 31030  01696E  0060  F23F  FFE6   	movff	calc_model_data@bcror+1,postinc1
 31031  016974  0060  F243  FFE6   	movff	calc_model_data@bcror+2,postinc1
 31032  01697A  0060  F247  FFE6   	movff	calc_model_data@bcror+3,postinc1
 31033  016980  EE22  F043         	lfsr	2,_C+68	;volatile
 31034  016984  006F FF7B FFE6     	movff	postinc2,postinc1
 31035  01698A  006F FF7B FFE6     	movff	postinc2,postinc1
 31036  016990  006F FF7B FFE6     	movff	postinc2,postinc1
 31037  016996  006F FF7B FFE6     	movff	postinc2,postinc1
 31038  01699C  EC6D  F0E7         	call	___flsub	;wreg free
 31039  0169A0  0060  F004  F86F   	movff	btemp,_C+112	;volatile
 31040  0169A6  0060  F008  F870   	movff	btemp+1,_C+113	;volatile
 31041  0169AC  0060  F00C  F871   	movff	btemp+2,_C+114	;volatile
 31042  0169B2  0060  F010  F872   	movff	btemp+3,_C+115	;volatile
 31043                           
 31044                           ;mbmc.c: 75:   bcror = C.c_bat;
 31045  0169B8  C843  F08E         	movff	_C+68,calc_model_data@bcror	;volatile
 31046  0169BC  C844  F08F         	movff	_C+69,calc_model_data@bcror+1	;volatile
 31047  0169C0  C845  F090         	movff	_C+70,calc_model_data@bcror+2	;volatile
 31048  0169C4  C846  F091         	movff	_C+71,calc_model_data@bcror+3	;volatile
 31049                           
 31050                           ;mbmc.c: 76:   C.c_pv = C.calc[C_PV];
 31051  0169C8  EE22  F003         	lfsr	2,_C+4	;volatile
 31052  0169CC  006F FF78  F847    	movff	postinc2,_C+72	;volatile
 31053  0169D2  006F FF78  F848    	movff	postinc2,_C+73	;volatile
 31054  0169D8  006F FF78  F849    	movff	postinc2,_C+74	;volatile
 31055  0169DE  006F FF74  F84A    	movff	postdec2,_C+75	;volatile
 31056                           
 31057                           ;mbmc.c: 77:   C.v_bat = C.calc[V_BAT];
 31058  0169E4  EE22  F00F         	lfsr	2,_C+16	;volatile
 31059  0169E8  006F FF78  F853    	movff	postinc2,_C+84	;volatile
 31060  0169EE  006F FF78  F854    	movff	postinc2,_C+85	;volatile
 31061  0169F4  006F FF78  F855    	movff	postinc2,_C+86	;volatile
 31062  0169FA  006F FF74  F856    	movff	postdec2,_C+87	;volatile
 31063                           
 31064                           ;mbmc.c: 78:   C.v_sensor = C.calc[V_LIGHT_SENSOR];
 31065  016A00  EE22  F033         	lfsr	2,_C+52	;volatile
 31066  016A04  006F FF78  F867    	movff	postinc2,_C+104	;volatile
 31067  016A0A  006F FF78  F868    	movff	postinc2,_C+105	;volatile
 31068  016A10  006F FF78  F869    	movff	postinc2,_C+106	;volatile
 31069  016A16  006F FF74  F86A    	movff	postdec2,_C+107	;volatile
 31070                           
 31071                           ;mbmc.c: 79:   C.bv_ror = C.v_bat - bvror;
 31072  016A1C  0060  F24B  FFE6   	movff	calc_model_data@bvror,postinc1
 31073  016A22  0060  F24F  FFE6   	movff	calc_model_data@bvror+1,postinc1
 31074  016A28  0060  F253  FFE6   	movff	calc_model_data@bvror+2,postinc1
 31075  016A2E  0060  F257  FFE6   	movff	calc_model_data@bvror+3,postinc1
 31076  016A34  EE22  F053         	lfsr	2,_C+84	;volatile
 31077  016A38  006F FF7B FFE6     	movff	postinc2,postinc1
 31078  016A3E  006F FF7B FFE6     	movff	postinc2,postinc1
 31079  016A44  006F FF7B FFE6     	movff	postinc2,postinc1
 31080  016A4A  006F FF7B FFE6     	movff	postinc2,postinc1
 31081  016A50  EC6D  F0E7         	call	___flsub	;wreg free
 31082  016A54  0060  F004  F86B   	movff	btemp,_C+108	;volatile
 31083  016A5A  0060  F008  F86C   	movff	btemp+1,_C+109	;volatile
 31084  016A60  0060  F00C  F86D   	movff	btemp+2,_C+110	;volatile
 31085  016A66  0060  F010  F86E   	movff	btemp+3,_C+111	;volatile
 31086                           
 31087                           ;mbmc.c: 80:   bvror = C.v_bat;
 31088  016A6C  C853  F092         	movff	_C+84,calc_model_data@bvror	;volatile
 31089  016A70  C854  F093         	movff	_C+85,calc_model_data@bvror+1	;volatile
 31090  016A74  C855  F094         	movff	_C+86,calc_model_data@bvror+2	;volatile
 31091  016A78  C856  F095         	movff	_C+87,calc_model_data@bvror+3	;volatile
 31092                           
 31093                           ;mbmc.c: 81:   C.v_pv = C.calc[V_PV];
 31094  016A7C  EE22  F013         	lfsr	2,_C+20	;volatile
 31095  016A80  006F FF78  F84F    	movff	postinc2,_C+80	;volatile
 31096  016A86  006F FF78  F850    	movff	postinc2,_C+81	;volatile
 31097  016A8C  006F FF78  F851    	movff	postinc2,_C+82	;volatile
 31098  016A92  006F FF74  F852    	movff	postdec2,_C+83	;volatile
 31099                           
 31100                           ;mbmc.c: 82:   C.v_cc = C.calc[V_CC];
 31101  016A98  EE22  F007         	lfsr	2,_C+8	;volatile
 31102  016A9C  006F FF78  F84B    	movff	postinc2,_C+76	;volatile
 31103  016AA2  006F FF78  F84C    	movff	postinc2,_C+77	;volatile
 31104  016AA8  006F FF78  F84D    	movff	postinc2,_C+78	;volatile
 31105  016AAE  006F FF74  F84E    	movff	postdec2,_C+79	;volatile
 31106                           
 31107                           ;mbmc.c: 83:   C.v_inverter = C.calc[V_INVERTER];
 31108  016AB4  EE22  F02F         	lfsr	2,_C+48	;volatile
 31109  016AB8  006F FF78  F863    	movff	postinc2,_C+100	;volatile
 31110  016ABE  006F FF78  F864    	movff	postinc2,_C+101	;volatile
 31111  016AC4  006F FF78  F865    	movff	postinc2,_C+102	;volatile
 31112  016ACA  006F FF74  F866    	movff	postdec2,_C+103	;volatile
 31113                           
 31114                           ;mbmc.c: 84:   C.c_load = lp_filter(C.calc[C_PV]+(-(C.calc[C_BATT])), 16, 1);
 31115  016AD0  0E01               	movlw	1
 31116  016AD2  6EE6               	movwf	postinc1,c
 31117  016AD4  0E10               	movlw	16
 31118  016AD6  6EE6               	movwf	postinc1,c
 31119  016AD8  EE21  F3FF         	lfsr	2,_C
 31120  016ADC  006F FF7B FFE6     	movff	postinc2,postinc1
 31121  016AE2  006F FF7B FFE6     	movff	postinc2,postinc1
 31122  016AE8  006F FF7B FFE6     	movff	postinc2,postinc1
 31123  016AEE  006F FF7B FFE6     	movff	postinc2,postinc1
 31124  016AF4  EE22  F003         	lfsr	2,_C+4	;volatile
 31125  016AF8  006F FF7B FFE6     	movff	postinc2,postinc1
 31126  016AFE  006F FF7B FFE6     	movff	postinc2,postinc1
 31127  016B04  006F FF7B FFE6     	movff	postinc2,postinc1
 31128  016B0A  006F FF7B FFE6     	movff	postinc2,postinc1
 31129  016B10  EC6D  F0E7         	call	___flsub	;wreg free
 31130  016B14  0060  F007  FFE6   	movff	btemp,postinc1
 31131  016B1A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 31132  016B20  0060  F00F  FFE6   	movff	btemp+2,postinc1
 31133  016B26  0060  F013  FFE6   	movff	btemp+3,postinc1
 31134  016B2C  EC8D  F0CA         	call	_lp_filter	;wreg free
 31135  016B30  0060  F004  F83F   	movff	btemp,_C+64	;volatile
 31136  016B36  0060  F008  F840   	movff	btemp+1,_C+65	;volatile
 31137  016B3C  0060  F00C  F841   	movff	btemp+2,_C+66	;volatile
 31138  016B42  0060  F010  F842   	movff	btemp+3,_C+67	;volatile
 31139                           
 31140                           ;mbmc.c: 85:   C.p_load = lp_filter(C.c_load * C.v_bat, 17, 1);
 31141  016B48  0E01               	movlw	1
 31142  016B4A  6EE6               	movwf	postinc1,c
 31143  016B4C  0E11               	movlw	17
 31144  016B4E  6EE6               	movwf	postinc1,c
 31145  016B50  EE22  F053         	lfsr	2,_C+84	;volatile
 31146  016B54  006F FF7B FFE6     	movff	postinc2,postinc1
 31147  016B5A  006F FF7B FFE6     	movff	postinc2,postinc1
 31148  016B60  006F FF7B FFE6     	movff	postinc2,postinc1
 31149  016B66  006F FF7B FFE6     	movff	postinc2,postinc1
 31150  016B6C  EE22  F03F         	lfsr	2,_C+64	;volatile
 31151  016B70  006F FF7B FFE6     	movff	postinc2,postinc1
 31152  016B76  006F FF7B FFE6     	movff	postinc2,postinc1
 31153  016B7C  006F FF7B FFE6     	movff	postinc2,postinc1
 31154  016B82  006F FF7B FFE6     	movff	postinc2,postinc1
 31155  016B88  EC52  F0A5         	call	___flmul	;wreg free
 31156  016B8C  0060  F007  FFE6   	movff	btemp,postinc1
 31157  016B92  0060  F00B  FFE6   	movff	btemp+1,postinc1
 31158  016B98  0060  F00F  FFE6   	movff	btemp+2,postinc1
 31159  016B9E  0060  F013  FFE6   	movff	btemp+3,postinc1
 31160  016BA4  EC8D  F0CA         	call	_lp_filter	;wreg free
 31161  016BA8  0060  F004  F873   	movff	btemp,_C+116	;volatile
 31162  016BAE  0060  F008  F874   	movff	btemp+1,_C+117	;volatile
 31163  016BB4  0060  F00C  F875   	movff	btemp+2,_C+118	;volatile
 31164  016BBA  0060  F010  F876   	movff	btemp+3,_C+119	;volatile
 31165                           
 31166                           ;mbmc.c: 86:   C.p_pv = lp_filter(C.c_pv * C.v_pv, 18, 1);
 31167  016BC0  0E01               	movlw	1
 31168  016BC2  6EE6               	movwf	postinc1,c
 31169  016BC4  0E12               	movlw	18
 31170  016BC6  6EE6               	movwf	postinc1,c
 31171  016BC8  EE22  F04F         	lfsr	2,_C+80	;volatile
 31172  016BCC  006F FF7B FFE6     	movff	postinc2,postinc1
 31173  016BD2  006F FF7B FFE6     	movff	postinc2,postinc1
 31174  016BD8  006F FF7B FFE6     	movff	postinc2,postinc1
 31175  016BDE  006F FF7B FFE6     	movff	postinc2,postinc1
 31176  016BE4  EE22  F047         	lfsr	2,_C+72	;volatile
 31177  016BE8  006F FF7B FFE6     	movff	postinc2,postinc1
 31178  016BEE  006F FF7B FFE6     	movff	postinc2,postinc1
 31179  016BF4  006F FF7B FFE6     	movff	postinc2,postinc1
 31180  016BFA  006F FF7B FFE6     	movff	postinc2,postinc1
 31181  016C00  EC52  F0A5         	call	___flmul	;wreg free
 31182  016C04  0060  F007  FFE6   	movff	btemp,postinc1
 31183  016C0A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 31184  016C10  0060  F00F  FFE6   	movff	btemp+2,postinc1
 31185  016C16  0060  F013  FFE6   	movff	btemp+3,postinc1
 31186  016C1C  EC8D  F0CA         	call	_lp_filter	;wreg free
 31187  016C20  0060  F004  F87B   	movff	btemp,_C+124	;volatile
 31188  016C26  0060  F008  F87C   	movff	btemp+1,_C+125	;volatile
 31189  016C2C  0060  F00C  F87D   	movff	btemp+2,_C+126	;volatile
 31190  016C32  0060  F010  F87E   	movff	btemp+3,_C+127	;volatile
 31191                           
 31192                           ;mbmc.c: 87:   C.p_inverter = lp_filter((C.c_load * C.v_inverter) - 14.00, 19, 1);
 31193  016C38  0E01               	movlw	1
 31194  016C3A  6EE6               	movwf	postinc1,c
 31195  016C3C  0E13               	movlw	19
 31196  016C3E  6EE6               	movwf	postinc1,c
 31197  016C40  0E00               	movlw	0
 31198  016C42  6EE6               	movwf	postinc1,c
 31199  016C44  0E00               	movlw	0
 31200  016C46  6EE6               	movwf	postinc1,c
 31201  016C48  0E60               	movlw	96
 31202  016C4A  6EE6               	movwf	postinc1,c
 31203  016C4C  0EC1               	movlw	193
 31204  016C4E  6EE6               	movwf	postinc1,c
 31205  016C50  EE22  F063         	lfsr	2,_C+100	;volatile
 31206  016C54  006F FF7B FFE6     	movff	postinc2,postinc1
 31207  016C5A  006F FF7B FFE6     	movff	postinc2,postinc1
 31208  016C60  006F FF7B FFE6     	movff	postinc2,postinc1
 31209  016C66  006F FF7B FFE6     	movff	postinc2,postinc1
 31210  016C6C  EE22  F03F         	lfsr	2,_C+64	;volatile
 31211  016C70  006F FF7B FFE6     	movff	postinc2,postinc1
 31212  016C76  006F FF7B FFE6     	movff	postinc2,postinc1
 31213  016C7C  006F FF7B FFE6     	movff	postinc2,postinc1
 31214  016C82  006F FF7B FFE6     	movff	postinc2,postinc1
 31215  016C88  EC52  F0A5         	call	___flmul	;wreg free
 31216  016C8C  0060  F007  FFE6   	movff	btemp,postinc1
 31217  016C92  0060  F00B  FFE6   	movff	btemp+1,postinc1
 31218  016C98  0060  F00F  FFE6   	movff	btemp+2,postinc1
 31219  016C9E  0060  F013  FFE6   	movff	btemp+3,postinc1
 31220  016CA4  EC67  F0A9         	call	___fladd	;wreg free
 31221  016CA8  0060  F007  FFE6   	movff	btemp,postinc1
 31222  016CAE  0060  F00B  FFE6   	movff	btemp+1,postinc1
 31223  016CB4  0060  F00F  FFE6   	movff	btemp+2,postinc1
 31224  016CBA  0060  F013  FFE6   	movff	btemp+3,postinc1
 31225  016CC0  EC8D  F0CA         	call	_lp_filter	;wreg free
 31226  016CC4  0060  F004  F877   	movff	btemp,_C+120	;volatile
 31227  016CCA  0060  F008  F878   	movff	btemp+1,_C+121	;volatile
 31228  016CD0  0060  F00C  F879   	movff	btemp+2,_C+122	;volatile
 31229  016CD6  0060  F010  F87A   	movff	btemp+3,_C+123	;volatile
 31230                           
 31231                           ;mbmc.c: 88:   C.p_bat = lp_filter(C.c_bat * C.v_bat, 20, 1);
 31232  016CDC  0E01               	movlw	1
 31233  016CDE  6EE6               	movwf	postinc1,c
 31234  016CE0  0E14               	movlw	20
 31235  016CE2  6EE6               	movwf	postinc1,c
 31236  016CE4  EE22  F053         	lfsr	2,_C+84	;volatile
 31237  016CE8  006F FF7B FFE6     	movff	postinc2,postinc1
 31238  016CEE  006F FF7B FFE6     	movff	postinc2,postinc1
 31239  016CF4  006F FF7B FFE6     	movff	postinc2,postinc1
 31240  016CFA  006F FF7B FFE6     	movff	postinc2,postinc1
 31241  016D00  EE22  F043         	lfsr	2,_C+68	;volatile
 31242  016D04  006F FF7B FFE6     	movff	postinc2,postinc1
 31243  016D0A  006F FF7B FFE6     	movff	postinc2,postinc1
 31244  016D10  006F FF7B FFE6     	movff	postinc2,postinc1
 31245  016D16  006F FF7B FFE6     	movff	postinc2,postinc1
 31246  016D1C  EC52  F0A5         	call	___flmul	;wreg free
 31247  016D20  0060  F007  FFE6   	movff	btemp,postinc1
 31248  016D26  0060  F00B  FFE6   	movff	btemp+1,postinc1
 31249  016D2C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 31250  016D32  0060  F013  FFE6   	movff	btemp+3,postinc1
 31251  016D38  EC8D  F0CA         	call	_lp_filter	;wreg free
 31252  016D3C  0060  F004  F87F   	movff	btemp,_C+128	;volatile
 31253  016D42  0060  F008  F880   	movff	btemp+1,_C+129	;volatile
 31254  016D48  0060  F00C  F881   	movff	btemp+2,_C+130	;volatile
 31255  016D4E  0060  F010  F882   	movff	btemp+3,_C+131	;volatile
 31256                           
 31257                           ;mbmc.c: 92:   if (C.p_inverter < 0.0)
 31258  016D54  EE22  F077         	lfsr	2,_C+120	;volatile
 31259  016D58  0E03               	movlw	3
 31260  016D5A  AEDB               	btfss	plusw2,7,c
 31261  016D5C  D010               	goto	l12440
 31262                           
 31263                           ;mbmc.c: 93:    C.p_inverter = 0.0001;
 31264  016D5E  0E17               	movlw	23
 31265  016D60  006F FFA0  F877    	movff	wreg,_C+120	;volatile
 31266  016D66  0EB7               	movlw	183
 31267  016D68  006F FFA0  F878    	movff	wreg,_C+121	;volatile
 31268  016D6E  0ED1               	movlw	209
 31269  016D70  006F FFA0  F879    	movff	wreg,_C+122	;volatile
 31270  016D76  0E38               	movlw	56
 31271  016D78  006F FFA0  F87A    	movff	wreg,_C+123	;volatile
 31272  016D7E                     l12440:
 31273                           
 31274                           ;mbmc.c: 95:  start_bsoc();
 31275  016D7E  EC48  F0EC         	call	_start_bsoc	;wreg free
 31276                           
 31277                           ; BSR set to: 57
 31278                           ;mbmc.c: 96:  C.update = 1;
 31279  016D82  0E01               	movlw	1
 31280  016D84  006F FFA0  F8B7    	movff	wreg,_C+184	;volatile
 31281                           
 31282                           ; BSR set to: 57
 31283                           ; _calc_model_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 31284  016D8A  0012               	return		;funcret
 31285  016D8C                     __end_of_calc_model_data:
 31286                           	opt callstack 0
 31287                           
 31288 ;; *************** function _stop_bsoc *****************
 31289 ;; Defined at:
 31290 ;;		line 130 in file "bsoc.c"
 31291 ;; Parameters:    Size  Location     Type
 31292 ;;		None
 31293 ;; Auto vars:     Size  Location     Type
 31294 ;;		None
 31295 ;; Return value:  Size  Location     Type
 31296 ;;                  1  [STACK] void 
 31297 ;; Registers used:
 31298 ;;		None
 31299 ;; Tracked objects:
 31300 ;;		On entry : 0/2
 31301 ;;		On exit  : 3F/39
 31302 ;;		Unchanged: 0/0
 31303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31304 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31305 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31306 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31307 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31308 ;;Total ram usage:        0 bytes
 31309 ;; Hardware stack levels used:    1
 31310 ;; Hardware stack levels required when called:   15
 31311 ;; This function calls:
 31312 ;;		Nothing
 31313 ;; This function is called by:
 31314 ;;		_calc_model_data
 31315 ;; This function uses a reentrant model
 31316 ;;
 31317                           
 31318                           	psect	text124
 31319  01DB84                     __ptext124:
 31320                           	opt callstack 0
 31321  01DB84                     _stop_bsoc:
 31322                           	opt callstack 14
 31323                           
 31324                           ;bsoc.c: 133:  PIE6bits.TMR3IE = 0;
 31325                           
 31326                           ; BSR set to: 57
 31327                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31328                           ;incstack = 0
 31329  01DB84  0139               	movlb	57	; () banked
 31330  01DB86  9D96               	bcf	150,6,b	;volatile
 31331                           
 31332                           ; BSR set to: 57
 31333                           ; _stop_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 31334  01DB88  0012               	return		;funcret
 31335  01DB8A                     __end_of_stop_bsoc:
 31336                           	opt callstack 0
 31337                           
 31338 ;; *************** function _start_bsoc *****************
 31339 ;; Defined at:
 31340 ;;		line 121 in file "bsoc.c"
 31341 ;; Parameters:    Size  Location     Type
 31342 ;;		None
 31343 ;; Auto vars:     Size  Location     Type
 31344 ;;		None
 31345 ;; Return value:  Size  Location     Type
 31346 ;;                  1  [STACK] void 
 31347 ;; Registers used:
 31348 ;;		wreg, status,2, status,0, btemp+11
 31349 ;; Tracked objects:
 31350 ;;		On entry : 0/2
 31351 ;;		On exit  : 3F/39
 31352 ;;		Unchanged: 0/0
 31353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31354 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31355 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31356 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31357 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31358 ;;Total ram usage:        0 bytes
 31359 ;; Hardware stack levels used:    1
 31360 ;; Hardware stack levels required when called:   15
 31361 ;; This function calls:
 31362 ;;		Nothing
 31363 ;; This function is called by:
 31364 ;;		_calc_model_data
 31365 ;; This function uses a reentrant model
 31366 ;;
 31367                           
 31368                           	psect	text125
 31369  01D890                     __ptext125:
 31370                           	opt callstack 0
 31371  01D890                     _start_bsoc:
 31372                           	opt callstack 14
 31373                           
 31374                           ;bsoc.c: 124:  PIE6bits.TMR3IE = 1;
 31375                           
 31376                           ; BSR set to: 57
 31377                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31378                           ;incstack = 0
 31379  01D890  0139               	movlb	57	; () banked
 31380  01D892  8D96               	bsf	150,6,b	;volatile
 31381                           
 31382                           ; BSR set to: 57
 31383  01D894  A4BE               	btfss	190,2,c	;volatile
 31384  01D896  D002               	goto	u10620
 31385  01D898  0E01               	movlw	1
 31386  01D89A  D001               	goto	u10626
 31387  01D89C                     u10620:
 31388  01D89C  0E00               	movlw	0
 31389  01D89E                     u10626:
 31390  01D89E  0AFF               	xorlw	255
 31391  01D8A0  6E0C               	movwf	(btemp+11)^0,c
 31392  01D8A2  460C               	rlncf	(btemp+11)^0,f,c
 31393  01D8A4  460C               	rlncf	(btemp+11)^0,f,c
 31394  01D8A6  50BE               	movf	190,w,c	;volatile
 31395  01D8A8  180C               	xorwf	(btemp+11)^0,w,c
 31396  01D8AA  0BFB               	andlw	-5
 31397  01D8AC  180C               	xorwf	(btemp+11)^0,w,c
 31398  01D8AE  6EBE               	movwf	190,c	;volatile
 31399                           
 31400                           ; BSR set to: 57
 31401                           ; _start_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 31402  01D8B0  0012               	return		;funcret
 31403  01D8B2                     __end_of_start_bsoc:
 31404                           	opt callstack 0
 31405                           
 31406 ;; *************** function _lp_filter *****************
 31407 ;; Defined at:
 31408 ;;		line 29 in file "mbmc.c"
 31409 ;; Parameters:    Size  Location     Type
 31410 ;;  new             4  [STACK] const float 
 31411 ;;  bn              1  [STACK] const unsigned char 
 31412 ;;  slow            1  [STACK] const char 
 31413 ;; Auto vars:     Size  Location     Type
 31414 ;;  lp_speed        4  [STACK] float 
 31415 ;; Return value:  Size  Location     Type
 31416 ;;                  4  [STACK] float 
 31417 ;; Registers used:
 31418 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 31419 ;; Tracked objects:
 31420 ;;		On entry : 0/2
 31421 ;;		On exit  : 0/0
 31422 ;;		Unchanged: 0/0
 31423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31424 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31425 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31426 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31427 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31428 ;;Total ram usage:        0 bytes
 31429 ;; Hardware stack levels used:    1
 31430 ;; Hardware stack levels required when called:   17
 31431 ;; This function calls:
 31432 ;;		___fladd
 31433 ;;		___flmul
 31434 ;;		___flsub
 31435 ;; This function is called by:
 31436 ;;		_main
 31437 ;;		_convert_adc_data
 31438 ;;		_calc_model_data
 31439 ;; This function uses a reentrant model
 31440 ;;
 31441                           
 31442                           	psect	text126
 31443  01951A                     __ptext126:
 31444                           	opt callstack 0
 31445  01951A                     _lp_filter:
 31446                           	opt callstack 0
 31447                           
 31448                           ; BSR set to: 57
 31449                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31450  01951A  52E6               	movf	postinc1,f,c
 31451  01951C  52E6               	movf	postinc1,f,c
 31452  01951E  52E6               	movf	postinc1,f,c
 31453  019520  52E6               	movf	postinc1,f,c
 31454                           
 31455                           ;mbmc.c: 29: float lp_filter(const float new, const uint8_t bn, const int8_t slow);mbmc.
      +                          c: 30: {;mbmc.c: 31:  static float smooth[16 +5];;mbmc.c: 32:  float lp_speed;;mbmc.c: 3
      +                          4:  if (bn >= 16 +5)
 31456                           ;stkvar	_bn @ sp[(-4)+-5]
 31457                           
 31458                           ;incstack = 0
 31459  019522  0EF7               	movlw	-9
 31460  019524  006F FF8C  F001    	movff	plusw1,btemp
 31461  01952A  0E14               	movlw	20
 31462  01952C  6401               	cpfsgt	btemp^0,c
 31463  01952E  D011               	goto	l11434
 31464  019530                     u10380:
 31465                           
 31466                           ;mbmc.c: 35:   return new;
 31467                           ;stkvar	_new @ sp[(-4)+-4]
 31468  019530  0EF8               	movlw	-8
 31469  019532  006F FF8C  F001    	movff	plusw1,btemp
 31470  019538  0EF9               	movlw	-7
 31471  01953A  006F FF8C  F002    	movff	plusw1,btemp+1
 31472  019540  0EFA               	movlw	-6
 31473  019542  006F FF8C  F003    	movff	plusw1,btemp+2
 31474  019548  0EFB               	movlw	-5
 31475  01954A  006F FF8C  F004    	movff	plusw1,btemp+3
 31476  019550  D0BD               	goto	l2112
 31477  019552                     l11434:
 31478                           
 31479                           ;mbmc.c: 37:  if (slow == (-1)) {
 31480                           ;stkvar	_slow @ sp[(-4)+-6]
 31481  019552  0EF6               	movlw	-10
 31482  019554  28E3               	incf	plusw1,w,c
 31483  019556  A4D8               	btfss	status,2,c
 31484  019558  D012               	goto	l11442
 31485                           
 31486                           ;mbmc.c: 38:   smooth[bn] = 0.0;
 31487                           ;stkvar	_bn @ sp[(-4)+-5]
 31488  01955A  0EF7               	movlw	-9
 31489  01955C  50E3               	movf	plusw1,w,c
 31490  01955E  0D04               	mullw	4
 31491  019560  0E00               	movlw	low lp_filter@smooth
 31492  019562  24F3               	addwf	243,w,c
 31493  019564  6ED9               	movwf	fsr2l,c
 31494  019566  0E03               	movlw	high lp_filter@smooth
 31495  019568  20F4               	addwfc	prodh,w,c
 31496  01956A  6EDA               	movwf	fsr2h,c
 31497  01956C  0E00               	movlw	0
 31498  01956E  6EDE               	movwf	postinc2,c
 31499  019570  0E00               	movlw	0
 31500  019572  6EDE               	movwf	postinc2,c
 31501  019574  0E00               	movlw	0
 31502  019576  6EDE               	movwf	postinc2,c
 31503  019578  0E00               	movlw	0
 31504  01957A  6EDD               	movwf	postdec2,c
 31505  01957C  D7D9               	goto	u10380
 31506  01957E                     l11442:
 31507                           
 31508                           ;mbmc.c: 42:  if (slow) {
 31509                           ;stkvar	_slow @ sp[(-4)+-6]
 31510  01957E  0EF6               	movlw	-10
 31511  019580  50E3               	movf	plusw1,w,c
 31512  019582  B4D8               	btfsc	status,2,c
 31513  019584  D006               	goto	l11446
 31514                           
 31515                           ;mbmc.c: 43:   lp_speed = 0.033;
 31516  019586  0E02               	movlw	2
 31517  019588  6E09               	movwf	(btemp+8)^0,c
 31518  01958A  0E2B               	movlw	43
 31519  01958C  6E0A               	movwf	(btemp+9)^0,c
 31520  01958E  0E07               	movlw	7
 31521  019590  D005               	goto	L37
 31522  019592                     l11446:
 31523                           
 31524                           ;mbmc.c: 45:   lp_speed = 0.066;
 31525  019592  0E02               	movlw	2
 31526  019594  6E09               	movwf	(btemp+8)^0,c
 31527  019596  0E2B               	movlw	43
 31528  019598  6E0A               	movwf	(btemp+9)^0,c
 31529  01959A  0E87               	movlw	135
 31530  01959C                     L37:
 31531  01959C  6E0B               	movwf	(btemp+10)^0,c
 31532  01959E  0E3D               	movlw	61
 31533  0195A0  6E0C               	movwf	(btemp+11)^0,c
 31534                           
 31535                           ;stkvar	_lp_speed @ sp[(-4)+0]
 31536  0195A2  0EFC               	movlw	-4
 31537  0195A4  0060  F027  FFE3   	movff	btemp+8,plusw1
 31538  0195AA  0EFD               	movlw	-3
 31539  0195AC  0060  F02B  FFE3   	movff	btemp+9,plusw1
 31540  0195B2  0EFE               	movlw	-2
 31541  0195B4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 31542  0195BA  0EFF               	movlw	-1
 31543  0195BC  0060  F033  FFE3   	movff	btemp+11,plusw1
 31544                           
 31545                           ;mbmc.c: 48:  return smooth[bn] = smooth[bn] + ((new - smooth[bn]) * lp_speed);
 31546                           ;stkvar	_bn @ sp[(-4)+-5]
 31547  0195C2  0EF7               	movlw	-9
 31548  0195C4  50E3               	movf	plusw1,w,c
 31549  0195C6  0D04               	mullw	4
 31550  0195C8  0E00               	movlw	low lp_filter@smooth
 31551  0195CA  24F3               	addwf	243,w,c
 31552  0195CC  6ED9               	movwf	fsr2l,c
 31553  0195CE  0E03               	movlw	high lp_filter@smooth
 31554  0195D0  20F4               	addwfc	prodh,w,c
 31555  0195D2  6EDA               	movwf	fsr2h,c
 31556  0195D4  006F FF7B FFE6     	movff	postinc2,postinc1
 31557  0195DA  006F FF7B FFE6     	movff	postinc2,postinc1
 31558  0195E0  006F FF7B FFE6     	movff	postinc2,postinc1
 31559  0195E6  006F FF7B FFE6     	movff	postinc2,postinc1
 31560                           
 31561                           ;stkvar	_lp_speed @ sp[(-8)+0]
 31562  0195EC  0EF8               	movlw	-8
 31563  0195EE  006F FF8F FFE6     	movff	plusw1,postinc1
 31564  0195F4  006F FF8F FFE6     	movff	plusw1,postinc1
 31565  0195FA  006F FF8F FFE6     	movff	plusw1,postinc1
 31566  019600  006F FF8F FFE6     	movff	plusw1,postinc1
 31567                           
 31568                           ;stkvar	_bn @ sp[(-12)+-5]
 31569  019606  0EEF               	movlw	-17
 31570  019608  50E3               	movf	plusw1,w,c
 31571  01960A  0D04               	mullw	4
 31572  01960C  0E00               	movlw	low lp_filter@smooth
 31573  01960E  24F3               	addwf	243,w,c
 31574  019610  6ED9               	movwf	fsr2l,c
 31575  019612  0E03               	movlw	high lp_filter@smooth
 31576  019614  20F4               	addwfc	prodh,w,c
 31577  019616  6EDA               	movwf	fsr2h,c
 31578  019618  006F FF7B FFE6     	movff	postinc2,postinc1
 31579  01961E  006F FF7B FFE6     	movff	postinc2,postinc1
 31580  019624  006F FF7B FFE6     	movff	postinc2,postinc1
 31581  01962A  006F FF7B FFE6     	movff	postinc2,postinc1
 31582                           
 31583                           ;stkvar	_new @ sp[(-16)+-4]
 31584  019630  0EEC               	movlw	-20
 31585  019632  006F FF8F FFE6     	movff	plusw1,postinc1
 31586  019638  006F FF8F FFE6     	movff	plusw1,postinc1
 31587  01963E  006F FF8F FFE6     	movff	plusw1,postinc1
 31588  019644  006F FF8F FFE6     	movff	plusw1,postinc1
 31589  01964A  EC6D  F0E7         	call	___flsub	;wreg free
 31590  01964E  0060  F007  FFE6   	movff	btemp,postinc1
 31591  019654  0060  F00B  FFE6   	movff	btemp+1,postinc1
 31592  01965A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 31593  019660  0060  F013  FFE6   	movff	btemp+3,postinc1
 31594  019666  EC52  F0A5         	call	___flmul	;wreg free
 31595  01966A  0060  F007  FFE6   	movff	btemp,postinc1
 31596  019670  0060  F00B  FFE6   	movff	btemp+1,postinc1
 31597  019676  0060  F00F  FFE6   	movff	btemp+2,postinc1
 31598  01967C  0060  F013  FFE6   	movff	btemp+3,postinc1
 31599  019682  EC67  F0A9         	call	___fladd	;wreg free
 31600                           
 31601                           ;stkvar	_bn @ sp[(-4)+-5]
 31602  019686  0EF7               	movlw	-9
 31603  019688  50E3               	movf	plusw1,w,c
 31604  01968A  0D04               	mullw	4
 31605  01968C  0E00               	movlw	low lp_filter@smooth
 31606  01968E  24F3               	addwf	243,w,c
 31607  019690  6ED9               	movwf	fsr2l,c
 31608  019692  0E03               	movlw	high lp_filter@smooth
 31609  019694  20F4               	addwfc	prodh,w,c
 31610  019696  6EDA               	movwf	fsr2h,c
 31611  019698  0060  F007  FFDE   	movff	btemp,postinc2
 31612  01969E  0060  F00B  FFDE   	movff	btemp+1,postinc2
 31613  0196A4  0060  F00F  FFDE   	movff	btemp+2,postinc2
 31614  0196AA  0060  F013  FFDD   	movff	btemp+3,postdec2
 31615  0196B0  52DD               	movf	postdec2,f,c
 31616  0196B2  52DD               	movf	postdec2,f,c
 31617  0196B4  006F FF78  F001    	movff	postinc2,btemp
 31618  0196BA  006F FF78  F002    	movff	postinc2,btemp+1
 31619  0196C0  006F FF78  F003    	movff	postinc2,btemp+2
 31620  0196C6  006F FF78  F004    	movff	postinc2,btemp+3
 31621  0196CC                     l2112:
 31622                           
 31623                           ; _lp_filter: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
 31624  0196CC  0EF6               	movlw	246
 31625  0196CE  26E1               	addwf	fsr1l,f,c
 31626  0196D0  0EFF               	movlw	255
 31627  0196D2  22E2               	addwfc	fsr1h,f,c
 31628  0196D4  0012               	return		;funcret
 31629  0196D6                     __end_of_lp_filter:
 31630                           	opt callstack 0
 31631                           
 31632 ;; *************** function ___flsub *****************
 31633 ;; Defined at:
 31634 ;;		line 245 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 31635 ;; Parameters:    Size  Location     Type
 31636 ;;  b               4  [STACK] float 
 31637 ;;  a               4  [STACK] float 
 31638 ;; Auto vars:     Size  Location     Type
 31639 ;;		None
 31640 ;; Return value:  Size  Location     Type
 31641 ;;                  4  [STACK] float 
 31642 ;; Registers used:
 31643 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 31644 ;; Tracked objects:
 31645 ;;		On entry : 0/0
 31646 ;;		On exit  : 0/0
 31647 ;;		Unchanged: 0/0
 31648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31649 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31650 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31651 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31652 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31653 ;;Total ram usage:        0 bytes
 31654 ;; Hardware stack levels used:    1
 31655 ;; Hardware stack levels required when called:   16
 31656 ;; This function calls:
 31657 ;;		___fladd
 31658 ;; This function is called by:
 31659 ;;		_conv_raw_result
 31660 ;;		_lp_filter
 31661 ;;		_calc_model_data
 31662 ;;		_calc_ror_data
 31663 ;;		_esr_check
 31664 ;;		_efgtoa
 31665 ;; This function uses a reentrant model
 31666 ;;
 31667                           
 31668                           	psect	text127
 31669  01CEDA                     __ptext127:
 31670                           	opt callstack 0
 31671  01CEDA                     ___flsub:
 31672                           	opt callstack 0
 31673                           
 31674                           ;stkvar	_a @ sp[(0)+-8]
 31675                           
 31676                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31677                           ;incstack = 0
 31678 ;; hardware stack exceeded
 31679  01CEDA  0EFB               	movlw	-5
 31680  01CEDC  7EE3               	btg	plusw1,7,c
 31681                           
 31682                           ;stkvar	_a @ sp[(0)+-8]
 31683  01CEDE  0EF8               	movlw	-8
 31684  01CEE0  006F FF8F FFE6     	movff	plusw1,postinc1
 31685  01CEE6  006F FF8F FFE6     	movff	plusw1,postinc1
 31686  01CEEC  006F FF8F FFE6     	movff	plusw1,postinc1
 31687  01CEF2  006F FF8F FFE6     	movff	plusw1,postinc1
 31688                           
 31689                           ;stkvar	_b @ sp[(-4)+-4]
 31690  01CEF8  0EF8               	movlw	-8
 31691  01CEFA  006F FF8F FFE6     	movff	plusw1,postinc1
 31692  01CF00  006F FF8F FFE6     	movff	plusw1,postinc1
 31693  01CF06  006F FF8F FFE6     	movff	plusw1,postinc1
 31694  01CF0C  006F FF8F FFE6     	movff	plusw1,postinc1
 31695  01CF12  EC67  F0A9         	call	___fladd	;wreg free
 31696                           
 31697                           ; ___flsub: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 31698  01CF16  0EF8               	movlw	248
 31699  01CF18  26E1               	addwf	fsr1l,f,c
 31700  01CF1A  0EFF               	movlw	255
 31701  01CF1C  22E2               	addwfc	fsr1h,f,c
 31702  01CF1E  0012               	return		;funcret
 31703  01CF20                     __end_of___flsub:
 31704                           	opt callstack 0
 31705                           
 31706 ;; *************** function ___fladd *****************
 31707 ;; Defined at:
 31708 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 31709 ;; Parameters:    Size  Location     Type
 31710 ;;  b               4  [STACK] float 
 31711 ;;  a               4  [STACK] float 
 31712 ;; Auto vars:     Size  Location     Type
 31713 ;;  grs             1  [STACK] unsigned char 
 31714 ;;  bexp            1  [STACK] unsigned char 
 31715 ;;  aexp            1  [STACK] unsigned char 
 31716 ;;  signs           1  [STACK] unsigned char 
 31717 ;; Return value:  Size  Location     Type
 31718 ;;                  4  [STACK] unsigned char 
 31719 ;; Registers used:
 31720 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 31721 ;; Tracked objects:
 31722 ;;		On entry : 0/0
 31723 ;;		On exit  : 0/0
 31724 ;;		Unchanged: 0/0
 31725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31726 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31727 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31728 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31729 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31730 ;;Total ram usage:        0 bytes
 31731 ;; Hardware stack levels used:    1
 31732 ;; Hardware stack levels required when called:   15
 31733 ;; This function calls:
 31734 ;;		Nothing
 31735 ;; This function is called by:
 31736 ;;		_main
 31737 ;;		_lp_filter
 31738 ;;		_calc_model_data
 31739 ;;		_efgtoa
 31740 ;;		___asfladd
 31741 ;;		___flsub
 31742 ;; This function uses a reentrant model
 31743 ;;
 31744                           
 31745                           	psect	text128
 31746  0152CE                     __ptext128:
 31747                           	opt callstack 0
 31748  0152CE                     ___fladd:
 31749                           	opt callstack 0
 31750                           
 31751                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31752  0152CE  52E6               	movf	postinc1,f,c
 31753  0152D0  52E6               	movf	postinc1,f,c
 31754  0152D2  52E6               	movf	postinc1,f,c
 31755  0152D4  52E6               	movf	postinc1,f,c
 31756                           
 31757                           ;stkvar	_b @ sp[(-4)+-4]
 31758                           
 31759                           ;incstack = 0
 31760 ;; hardware stack exceeded
 31761  0152D6  0EFB               	movlw	251
 31762  0152D8  24E1               	addwf	fsr1l,w,c
 31763  0152DA  6ED9               	movwf	fsr2l,c
 31764  0152DC  0EFF               	movlw	255
 31765  0152DE  20E2               	addwfc	fsr1h,w,c
 31766  0152E0  6EDA               	movwf	fsr2h,c
 31767  0152E2  50DF               	movf	indf2,w,c
 31768  0152E4  6E0C               	movwf	(btemp+11)^0,c
 31769  0152E6  0E80               	movlw	128
 31770  0152E8  160C               	andwf	(btemp+11)^0,f,c
 31771                           
 31772                           ;stkvar	_signs @ sp[(-4)+3]
 31773  0152EA  0EFF               	movlw	-1
 31774  0152EC  0060  F033  FFE3   	movff	btemp+11,plusw1
 31775                           
 31776                           ;stkvar	_b @ sp[(-4)+-4]
 31777  0152F2  0EFB               	movlw	251
 31778  0152F4  24E1               	addwf	fsr1l,w,c
 31779  0152F6  6ED9               	movwf	fsr2l,c
 31780  0152F8  0EFF               	movlw	255
 31781  0152FA  20E2               	addwfc	fsr1h,w,c
 31782  0152FC  6EDA               	movwf	fsr2h,c
 31783  0152FE  50DF               	movf	indf2,w,c
 31784  015300  6E0C               	movwf	(btemp+11)^0,c
 31785  015302  90D8               	bcf	status,0,c
 31786  015304  340C               	rlcf	(btemp+11)^0,w,c
 31787  015306  6E0B               	movwf	(btemp+10)^0,c
 31788                           
 31789                           ;stkvar	_bexp @ sp[(-4)+1]
 31790  015308  0EFD               	movlw	-3
 31791  01530A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 31792                           
 31793                           ;stkvar	_b @ sp[(-4)+-4]
 31794  015310  0EFA               	movlw	250
 31795  015312  24E1               	addwf	fsr1l,w,c
 31796  015314  6ED9               	movwf	fsr2l,c
 31797  015316  0EFF               	movlw	255
 31798  015318  20E2               	addwfc	fsr1h,w,c
 31799  01531A  6EDA               	movwf	fsr2h,c
 31800  01531C  AEDF               	btfss	indf2,7,c
 31801  01531E  D002               	goto	l8572
 31802                           
 31803                           ;stkvar	_bexp @ sp[(-4)+1]
 31804  015320  0EFD               	movlw	-3
 31805  015322  80E3               	bsf	plusw1,0,c
 31806  015324                     l8572:
 31807                           
 31808                           ;stkvar	_bexp @ sp[(-4)+1]
 31809  015324  0EFD               	movlw	-3
 31810  015326  50E3               	movf	plusw1,w,c
 31811  015328  B4D8               	btfsc	status,2,c
 31812  01532A  D027               	goto	l8582
 31813                           
 31814                           ;stkvar	_bexp @ sp[(-4)+1]
 31815  01532C  0EFD               	movlw	-3
 31816  01532E  28E3               	incf	plusw1,w,c
 31817  015330  A4D8               	btfss	status,2,c
 31818  015332  D018               	goto	l8578
 31819  015334  0E00               	movlw	0
 31820  015336  6E09               	movwf	(btemp+8)^0,c
 31821  015338  0E00               	movlw	0
 31822  01533A  6E0A               	movwf	(btemp+9)^0,c
 31823  01533C  0E00               	movlw	0
 31824  01533E  6E0B               	movwf	(btemp+10)^0,c
 31825  015340  0E00               	movlw	0
 31826  015342  6E0C               	movwf	(btemp+11)^0,c
 31827                           
 31828                           ;stkvar	_b @ sp[(-4)+-4]
 31829  015344  0EF8               	movlw	-8
 31830  015346  0060  F027  FFE3   	movff	btemp+8,plusw1
 31831  01534C  0EF9               	movlw	-7
 31832  01534E  0060  F02B  FFE3   	movff	btemp+9,plusw1
 31833  015354  0EFA               	movlw	-6
 31834  015356  0060  F02F  FFE3   	movff	btemp+10,plusw1
 31835  01535C  0EFB               	movlw	-5
 31836  01535E  0060  F033  FFE3   	movff	btemp+11,plusw1
 31837  015364                     l8578:
 31838                           
 31839                           ;stkvar	_b @ sp[(-4)+-4]
 31840  015364  0EFA               	movlw	-6
 31841  015366  8EE3               	bsf	plusw1,7,c
 31842                           
 31843                           ;stkvar	_b @ sp[(-4)+-4]
 31844  015368  0EFB               	movlw	251
 31845  01536A  24E1               	addwf	fsr1l,w,c
 31846  01536C  6ED9               	movwf	fsr2l,c
 31847  01536E  0EFF               	movlw	255
 31848  015370  20E2               	addwfc	fsr1h,w,c
 31849  015372  6EDA               	movwf	fsr2h,c
 31850  015374  0E00               	movlw	0
 31851  015376  6EDF               	movwf	indf2,c
 31852  015378  D018               	goto	l8584
 31853  01537A                     l8582:
 31854  01537A  0E00               	movlw	0
 31855  01537C  6E09               	movwf	(btemp+8)^0,c
 31856  01537E  0E00               	movlw	0
 31857  015380  6E0A               	movwf	(btemp+9)^0,c
 31858  015382  0E00               	movlw	0
 31859  015384  6E0B               	movwf	(btemp+10)^0,c
 31860  015386  0E00               	movlw	0
 31861  015388  6E0C               	movwf	(btemp+11)^0,c
 31862                           
 31863                           ;stkvar	_b @ sp[(-4)+-4]
 31864  01538A  0EF8               	movlw	-8
 31865  01538C  0060  F027  FFE3   	movff	btemp+8,plusw1
 31866  015392  0EF9               	movlw	-7
 31867  015394  0060  F02B  FFE3   	movff	btemp+9,plusw1
 31868  01539A  0EFA               	movlw	-6
 31869  01539C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 31870  0153A2  0EFB               	movlw	-5
 31871  0153A4  0060  F033  FFE3   	movff	btemp+11,plusw1
 31872  0153AA                     l8584:
 31873                           
 31874                           ;stkvar	_a @ sp[(-4)+-8]
 31875  0153AA  0EF7               	movlw	247
 31876  0153AC  24E1               	addwf	fsr1l,w,c
 31877  0153AE  6ED9               	movwf	fsr2l,c
 31878  0153B0  0EFF               	movlw	255
 31879  0153B2  20E2               	addwfc	fsr1h,w,c
 31880  0153B4  6EDA               	movwf	fsr2h,c
 31881  0153B6  50DF               	movf	indf2,w,c
 31882  0153B8  6E0C               	movwf	(btemp+11)^0,c
 31883  0153BA  0E80               	movlw	128
 31884  0153BC  160C               	andwf	(btemp+11)^0,f,c
 31885                           
 31886                           ;stkvar	_aexp @ sp[(-4)+2]
 31887  0153BE  0EFE               	movlw	-2
 31888  0153C0  0060  F033  FFE3   	movff	btemp+11,plusw1
 31889                           
 31890                           ;stkvar	_signs @ sp[(-4)+3]
 31891                           ;stkvar	_aexp @ sp[(-4)+2]
 31892  0153C6  50E1               	movf	fsr1l,w,c
 31893  0153C8  0FFE               	addlw	-2
 31894  0153CA  6ED9               	movwf	fsr2l,c
 31895  0153CC  50E2               	movf	fsr1h,w,c
 31896  0153CE  6EDA               	movwf	fsr2h,c
 31897  0153D0  0EFF               	movlw	255
 31898  0153D2  22DA               	addwfc	fsr2h,f,c
 31899  0153D4  0EFF               	movlw	-1
 31900  0153D6  50E3               	movf	plusw1,w,c
 31901  0153D8  18DE               	xorwf	postinc2,w,c
 31902  0153DA  B4D8               	btfsc	status,2,c
 31903  0153DC  D002               	goto	l8590
 31904                           
 31905                           ;stkvar	_signs @ sp[(-4)+3]
 31906  0153DE  0EFF               	movlw	-1
 31907  0153E0  8CE3               	bsf	plusw1,6,c
 31908  0153E2                     l8590:
 31909                           
 31910                           ;stkvar	_a @ sp[(-4)+-8]
 31911  0153E2  0EF7               	movlw	247
 31912  0153E4  24E1               	addwf	fsr1l,w,c
 31913  0153E6  6ED9               	movwf	fsr2l,c
 31914  0153E8  0EFF               	movlw	255
 31915  0153EA  20E2               	addwfc	fsr1h,w,c
 31916  0153EC  6EDA               	movwf	fsr2h,c
 31917  0153EE  50DF               	movf	indf2,w,c
 31918  0153F0  6E0C               	movwf	(btemp+11)^0,c
 31919  0153F2  90D8               	bcf	status,0,c
 31920  0153F4  340C               	rlcf	(btemp+11)^0,w,c
 31921  0153F6  6E0B               	movwf	(btemp+10)^0,c
 31922                           
 31923                           ;stkvar	_aexp @ sp[(-4)+2]
 31924  0153F8  0EFE               	movlw	-2
 31925  0153FA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 31926                           
 31927                           ;stkvar	_a @ sp[(-4)+-8]
 31928  015400  0EF6               	movlw	246
 31929  015402  24E1               	addwf	fsr1l,w,c
 31930  015404  6ED9               	movwf	fsr2l,c
 31931  015406  0EFF               	movlw	255
 31932  015408  20E2               	addwfc	fsr1h,w,c
 31933  01540A  6EDA               	movwf	fsr2h,c
 31934  01540C  AEDF               	btfss	indf2,7,c
 31935  01540E  D002               	goto	l8596
 31936                           
 31937                           ;stkvar	_aexp @ sp[(-4)+2]
 31938  015410  0EFE               	movlw	-2
 31939  015412  80E3               	bsf	plusw1,0,c
 31940  015414                     l8596:
 31941                           
 31942                           ;stkvar	_aexp @ sp[(-4)+2]
 31943  015414  0EFE               	movlw	-2
 31944  015416  50E3               	movf	plusw1,w,c
 31945  015418  B4D8               	btfsc	status,2,c
 31946  01541A  D027               	goto	l8606
 31947                           
 31948                           ;stkvar	_aexp @ sp[(-4)+2]
 31949  01541C  0EFE               	movlw	-2
 31950  01541E  28E3               	incf	plusw1,w,c
 31951  015420  A4D8               	btfss	status,2,c
 31952  015422  D018               	goto	l8602
 31953  015424  0E00               	movlw	0
 31954  015426  6E09               	movwf	(btemp+8)^0,c
 31955  015428  0E00               	movlw	0
 31956  01542A  6E0A               	movwf	(btemp+9)^0,c
 31957  01542C  0E00               	movlw	0
 31958  01542E  6E0B               	movwf	(btemp+10)^0,c
 31959  015430  0E00               	movlw	0
 31960  015432  6E0C               	movwf	(btemp+11)^0,c
 31961                           
 31962                           ;stkvar	_a @ sp[(-4)+-8]
 31963  015434  0EF4               	movlw	-12
 31964  015436  0060  F027  FFE3   	movff	btemp+8,plusw1
 31965  01543C  0EF5               	movlw	-11
 31966  01543E  0060  F02B  FFE3   	movff	btemp+9,plusw1
 31967  015444  0EF6               	movlw	-10
 31968  015446  0060  F02F  FFE3   	movff	btemp+10,plusw1
 31969  01544C  0EF7               	movlw	-9
 31970  01544E  0060  F033  FFE3   	movff	btemp+11,plusw1
 31971  015454                     l8602:
 31972                           
 31973                           ;stkvar	_a @ sp[(-4)+-8]
 31974  015454  0EF6               	movlw	-10
 31975  015456  8EE3               	bsf	plusw1,7,c
 31976                           
 31977                           ;stkvar	_a @ sp[(-4)+-8]
 31978  015458  0EF7               	movlw	247
 31979  01545A  24E1               	addwf	fsr1l,w,c
 31980  01545C  6ED9               	movwf	fsr2l,c
 31981  01545E  0EFF               	movlw	255
 31982  015460  20E2               	addwfc	fsr1h,w,c
 31983  015462  6EDA               	movwf	fsr2h,c
 31984  015464  0E00               	movlw	0
 31985  015466  6EDF               	movwf	indf2,c
 31986  015468  D018               	goto	l8608
 31987  01546A                     l8606:
 31988  01546A  0E00               	movlw	0
 31989  01546C  6E09               	movwf	(btemp+8)^0,c
 31990  01546E  0E00               	movlw	0
 31991  015470  6E0A               	movwf	(btemp+9)^0,c
 31992  015472  0E00               	movlw	0
 31993  015474  6E0B               	movwf	(btemp+10)^0,c
 31994  015476  0E00               	movlw	0
 31995  015478  6E0C               	movwf	(btemp+11)^0,c
 31996                           
 31997                           ;stkvar	_a @ sp[(-4)+-8]
 31998  01547A  0EF4               	movlw	-12
 31999  01547C  0060  F027  FFE3   	movff	btemp+8,plusw1
 32000  015482  0EF5               	movlw	-11
 32001  015484  0060  F02B  FFE3   	movff	btemp+9,plusw1
 32002  01548A  0EF6               	movlw	-10
 32003  01548C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 32004  015492  0EF7               	movlw	-9
 32005  015494  0060  F033  FFE3   	movff	btemp+11,plusw1
 32006  01549A                     l8608:
 32007                           
 32008                           ;stkvar	_bexp @ sp[(-4)+1]
 32009                           ;stkvar	_aexp @ sp[(-4)+2]
 32010  01549A  50E1               	movf	fsr1l,w,c
 32011  01549C  0FFE               	addlw	-2
 32012  01549E  6ED9               	movwf	fsr2l,c
 32013  0154A0  50E2               	movf	fsr1h,w,c
 32014  0154A2  6EDA               	movwf	fsr2h,c
 32015  0154A4  0EFF               	movlw	255
 32016  0154A6  22DA               	addwfc	fsr2h,f,c
 32017  0154A8  0EFD               	movlw	-3
 32018  0154AA  50E3               	movf	plusw1,w,c
 32019  0154AC  5CDE               	subwf	postinc2,w,c
 32020  0154AE  B0D8               	btfsc	status,0,c
 32021  0154B0  D0A4               	goto	l8644
 32022                           
 32023                           ;stkvar	_signs @ sp[(-4)+3]
 32024  0154B2  0EFF               	movlw	-1
 32025  0154B4  ACE3               	btfss	plusw1,6,c
 32026  0154B6  D002               	goto	l8614
 32027                           
 32028                           ;stkvar	_signs @ sp[(-4)+3]
 32029  0154B8  0EFF               	movlw	-1
 32030  0154BA  7EE3               	btg	plusw1,7,c
 32031  0154BC                     l8614:
 32032                           
 32033                           ;stkvar	_bexp @ sp[(-4)+1]
 32034                           ;stkvar	_grs @ sp[(-4)+0]
 32035  0154BC  0EFD               	movlw	-3
 32036  0154BE  006F FF8C  F001    	movff	plusw1,btemp
 32037  0154C4  0EFC               	movlw	-4
 32038  0154C6  0060  F007  FFE3   	movff	btemp,plusw1
 32039                           
 32040                           ;stkvar	_aexp @ sp[(-4)+2]
 32041                           ;stkvar	_bexp @ sp[(-4)+1]
 32042  0154CC  0EFE               	movlw	-2
 32043  0154CE  006F FF8C  F001    	movff	plusw1,btemp
 32044  0154D4  0EFD               	movlw	-3
 32045  0154D6  0060  F007  FFE3   	movff	btemp,plusw1
 32046                           
 32047                           ;stkvar	_grs @ sp[(-4)+0]
 32048                           ;stkvar	_aexp @ sp[(-4)+2]
 32049  0154DC  0EFC               	movlw	-4
 32050  0154DE  006F FF8C  F001    	movff	plusw1,btemp
 32051  0154E4  0EFE               	movlw	-2
 32052  0154E6  0060  F007  FFE3   	movff	btemp,plusw1
 32053                           
 32054                           ;stkvar	_b @ sp[(-4)+-4]
 32055                           ;stkvar	_grs @ sp[(-4)+0]
 32056  0154EC  0EF8               	movlw	-8
 32057  0154EE  006F FF8C  F001    	movff	plusw1,btemp
 32058  0154F4  0EFC               	movlw	-4
 32059  0154F6  0060  F007  FFE3   	movff	btemp,plusw1
 32060                           
 32061                           ;stkvar	_a @ sp[(-4)+-8]
 32062                           ;stkvar	_b @ sp[(-4)+-4]
 32063  0154FC  0EF4               	movlw	-12
 32064  0154FE  006F FF8C  F001    	movff	plusw1,btemp
 32065  015504  0EF8               	movlw	-8
 32066  015506  0060  F007  FFE3   	movff	btemp,plusw1
 32067                           
 32068                           ;stkvar	_grs @ sp[(-4)+0]
 32069                           ;stkvar	_a @ sp[(-4)+-8]
 32070  01550C  0EFC               	movlw	-4
 32071  01550E  006F FF8C  F001    	movff	plusw1,btemp
 32072  015514  0EF4               	movlw	-12
 32073  015516  0060  F007  FFE3   	movff	btemp,plusw1
 32074                           
 32075                           ;stkvar	_b @ sp[(-4)+-4]
 32076  01551C  0EF9               	movlw	249
 32077  01551E  24E1               	addwf	fsr1l,w,c
 32078  015520  6ED9               	movwf	fsr2l,c
 32079  015522  0EFF               	movlw	255
 32080  015524  20E2               	addwfc	fsr1h,w,c
 32081  015526  6EDA               	movwf	fsr2h,c
 32082  015528  50DF               	movf	indf2,w,c
 32083  01552A  6E0C               	movwf	(btemp+11)^0,c
 32084                           
 32085                           ;stkvar	_grs @ sp[(-4)+0]
 32086  01552C  0EFC               	movlw	-4
 32087  01552E  0060  F033  FFE3   	movff	btemp+11,plusw1
 32088                           
 32089                           ;stkvar	_a @ sp[(-4)+-8]
 32090  015534  0EF5               	movlw	245
 32091  015536  24E1               	addwf	fsr1l,w,c
 32092  015538  6ED9               	movwf	fsr2l,c
 32093  01553A  0EFF               	movlw	255
 32094  01553C  20E2               	addwfc	fsr1h,w,c
 32095  01553E  6EDA               	movwf	fsr2h,c
 32096                           
 32097                           ;stkvar	_b @ sp[(-4)+-4]
 32098  015540  0EF9               	movlw	249
 32099  015542  24E1               	addwf	fsr1l,w,c
 32100  015544  6EE9               	movwf	fsr0l,c
 32101  015546  0EFF               	movlw	255
 32102  015548  20E2               	addwfc	fsr1h,w,c
 32103  01554A  6EEA               	movwf	fsr0h,c
 32104  01554C  006F FF7F FFEF     	movff	indf2,indf0
 32105                           
 32106                           ;stkvar	_grs @ sp[(-4)+0]
 32107                           ;stkvar	_a @ sp[(-4)+-8]
 32108  015552  0EF5               	movlw	245
 32109  015554  24E1               	addwf	fsr1l,w,c
 32110  015556  6ED9               	movwf	fsr2l,c
 32111  015558  0EFF               	movlw	255
 32112  01555A  20E2               	addwfc	fsr1h,w,c
 32113  01555C  6EDA               	movwf	fsr2h,c
 32114  01555E  0EFC               	movlw	-4
 32115  015560  006F FF8F FFDF     	movff	plusw1,indf2
 32116                           
 32117                           ;stkvar	_b @ sp[(-4)+-4]
 32118  015566  0EFA               	movlw	250
 32119  015568  24E1               	addwf	fsr1l,w,c
 32120  01556A  6ED9               	movwf	fsr2l,c
 32121  01556C  0EFF               	movlw	255
 32122  01556E  20E2               	addwfc	fsr1h,w,c
 32123  015570  6EDA               	movwf	fsr2h,c
 32124  015572  50DF               	movf	indf2,w,c
 32125  015574  6E0C               	movwf	(btemp+11)^0,c
 32126                           
 32127                           ;stkvar	_grs @ sp[(-4)+0]
 32128  015576  0EFC               	movlw	-4
 32129  015578  0060  F033  FFE3   	movff	btemp+11,plusw1
 32130                           
 32131                           ;stkvar	_a @ sp[(-4)+-8]
 32132  01557E  0EF6               	movlw	246
 32133  015580  24E1               	addwf	fsr1l,w,c
 32134  015582  6ED9               	movwf	fsr2l,c
 32135  015584  0EFF               	movlw	255
 32136  015586  20E2               	addwfc	fsr1h,w,c
 32137  015588  6EDA               	movwf	fsr2h,c
 32138                           
 32139                           ;stkvar	_b @ sp[(-4)+-4]
 32140  01558A  0EFA               	movlw	250
 32141  01558C  24E1               	addwf	fsr1l,w,c
 32142  01558E  6EE9               	movwf	fsr0l,c
 32143  015590  0EFF               	movlw	255
 32144  015592  20E2               	addwfc	fsr1h,w,c
 32145  015594  6EEA               	movwf	fsr0h,c
 32146  015596  006F FF7F FFEF     	movff	indf2,indf0
 32147                           
 32148                           ;stkvar	_grs @ sp[(-4)+0]
 32149                           ;stkvar	_a @ sp[(-4)+-8]
 32150  01559C  0EF6               	movlw	246
 32151  01559E  24E1               	addwf	fsr1l,w,c
 32152  0155A0  6ED9               	movwf	fsr2l,c
 32153  0155A2  0EFF               	movlw	255
 32154  0155A4  20E2               	addwfc	fsr1h,w,c
 32155  0155A6  6EDA               	movwf	fsr2h,c
 32156  0155A8  0EFC               	movlw	-4
 32157  0155AA  006F FF8F FFDF     	movff	plusw1,indf2
 32158                           
 32159                           ;stkvar	_b @ sp[(-4)+-4]
 32160  0155B0  0EFB               	movlw	251
 32161  0155B2  24E1               	addwf	fsr1l,w,c
 32162  0155B4  6ED9               	movwf	fsr2l,c
 32163  0155B6  0EFF               	movlw	255
 32164  0155B8  20E2               	addwfc	fsr1h,w,c
 32165  0155BA  6EDA               	movwf	fsr2h,c
 32166  0155BC  50DF               	movf	indf2,w,c
 32167  0155BE  6E0C               	movwf	(btemp+11)^0,c
 32168                           
 32169                           ;stkvar	_grs @ sp[(-4)+0]
 32170  0155C0  0EFC               	movlw	-4
 32171  0155C2  0060  F033  FFE3   	movff	btemp+11,plusw1
 32172                           
 32173                           ;stkvar	_a @ sp[(-4)+-8]
 32174  0155C8  0EF7               	movlw	247
 32175  0155CA  24E1               	addwf	fsr1l,w,c
 32176  0155CC  6ED9               	movwf	fsr2l,c
 32177  0155CE  0EFF               	movlw	255
 32178  0155D0  20E2               	addwfc	fsr1h,w,c
 32179  0155D2  6EDA               	movwf	fsr2h,c
 32180                           
 32181                           ;stkvar	_b @ sp[(-4)+-4]
 32182  0155D4  0EFB               	movlw	251
 32183  0155D6  24E1               	addwf	fsr1l,w,c
 32184  0155D8  6EE9               	movwf	fsr0l,c
 32185  0155DA  0EFF               	movlw	255
 32186  0155DC  20E2               	addwfc	fsr1h,w,c
 32187  0155DE  6EEA               	movwf	fsr0h,c
 32188  0155E0  006F FF7F FFEF     	movff	indf2,indf0
 32189                           
 32190                           ;stkvar	_grs @ sp[(-4)+0]
 32191                           ;stkvar	_a @ sp[(-4)+-8]
 32192  0155E6  0EF7               	movlw	247
 32193  0155E8  24E1               	addwf	fsr1l,w,c
 32194  0155EA  6ED9               	movwf	fsr2l,c
 32195  0155EC  0EFF               	movlw	255
 32196  0155EE  20E2               	addwfc	fsr1h,w,c
 32197  0155F0  6EDA               	movwf	fsr2h,c
 32198  0155F2  0EFC               	movlw	-4
 32199  0155F4  006F FF8F FFDF     	movff	plusw1,indf2
 32200  0155FA                     l8644:
 32201                           
 32202                           ;stkvar	_grs @ sp[(-4)+0]
 32203  0155FA  0EFC               	movlw	-4
 32204  0155FC  6AE3               	clrf	plusw1,c
 32205                           
 32206                           ;stkvar	_aexp @ sp[(-4)+2]
 32207  0155FE  0EFE               	movlw	-2
 32208  015600  50E3               	movf	plusw1,w,c
 32209  015602  6E0B               	movwf	(btemp+10)^0,c
 32210  015604  6A0C               	clrf	(btemp+11)^0,c
 32211                           
 32212                           ;stkvar	_bexp @ sp[(-4)+1]
 32213  015606  0EFD               	movlw	-3
 32214  015608  50E3               	movf	plusw1,w,c
 32215  01560A  5E0B               	subwf	(btemp+10)^0,f,c
 32216  01560C  0E00               	movlw	0
 32217  01560E  5A0C               	subwfb	(btemp+11)^0,f,c
 32218  015610  BE0C               	btfsc	(btemp+11)^0,7,c
 32219  015612  D062               	goto	l8668
 32220  015614  500C               	movf	(btemp+11)^0,w,c
 32221  015616  E104               	bnz	u6200
 32222  015618  0E1A               	movlw	26
 32223  01561A  5C0B               	subwf	(btemp+10)^0,w,c
 32224  01561C  A0D8               	btfss	status,0,c
 32225  01561E  D05C               	goto	l8668
 32226  015620                     u6200:
 32227                           
 32228                           ;stkvar	_b @ sp[(-4)+-4]
 32229  015620  0EF8               	movlw	-8
 32230  015622  50E3               	movf	plusw1,w,c
 32231  015624  E10A               	bnz	u6211
 32232  015626  0EF9               	movlw	-7
 32233  015628  50E3               	movf	plusw1,w,c
 32234  01562A  E107               	bnz	u6211
 32235  01562C  0EFA               	movlw	-6
 32236  01562E  50E3               	movf	plusw1,w,c
 32237  015630  E104               	bnz	u6211
 32238  015632  0EFB               	movlw	-5
 32239  015634  50E3               	movf	plusw1,w,c
 32240  015636  B4D8               	btfsc	status,2,c
 32241  015638  D003               	goto	u6210
 32242  01563A                     u6211:
 32243  01563A  6A0C               	clrf	(btemp+11)^0,c
 32244  01563C  2A0C               	incf	(btemp+11)^0,f,c
 32245  01563E  D001               	goto	u6228
 32246  015640                     u6210:
 32247  015640  6A0C               	clrf	(btemp+11)^0,c
 32248  015642                     u6228:
 32249                           
 32250                           ;stkvar	_grs @ sp[(-4)+0]
 32251  015642  0EFC               	movlw	-4
 32252  015644  0060  F033  FFE3   	movff	btemp+11,plusw1
 32253                           
 32254                           ;stkvar	_b @ sp[(-4)+-4]
 32255  01564A  0EF8               	movlw	-8
 32256  01564C  6AE3               	clrf	plusw1,c
 32257  01564E  0EF9               	movlw	-7
 32258  015650  6AE3               	clrf	plusw1,c
 32259  015652  0EFA               	movlw	-6
 32260  015654  6AE3               	clrf	plusw1,c
 32261  015656  0EFB               	movlw	-5
 32262  015658  6AE3               	clrf	plusw1,c
 32263                           
 32264                           ;stkvar	_aexp @ sp[(-4)+2]
 32265                           ;stkvar	_bexp @ sp[(-4)+1]
 32266  01565A  0EFE               	movlw	-2
 32267  01565C  006F FF8C  F001    	movff	plusw1,btemp
 32268  015662  0EFD               	movlw	-3
 32269  015664  0060  F007  FFE3   	movff	btemp,plusw1
 32270  01566A  D042               	goto	u6260
 32271  01566C                     l8654:
 32272                           
 32273                           ;stkvar	_grs @ sp[(-4)+0]
 32274  01566C  0EFC               	movlw	-4
 32275  01566E  A0E3               	btfss	plusw1,0,c
 32276  015670  D00D               	goto	l8658
 32277                           
 32278                           ;stkvar	_grs @ sp[(-4)+0]
 32279  015672  0EFC               	movlw	-4
 32280  015674  006F FF8C  F00C    	movff	plusw1,btemp+11
 32281  01567A  90D8               	bcf	status,0,c
 32282  01567C  320C               	rrcf	(btemp+11)^0,f,c
 32283  01567E  0E01               	movlw	1
 32284  015680  120C               	iorwf	(btemp+11)^0,f,c
 32285                           
 32286                           ;stkvar	_grs @ sp[(-4)+0]
 32287  015682  0EFC               	movlw	-4
 32288  015684  0060  F033  FFE3   	movff	btemp+11,plusw1
 32289  01568A  D009               	goto	l8660
 32290  01568C                     l8658:
 32291                           
 32292                           ;stkvar	_grs @ sp[(-4)+0]
 32293  01568C  50E1               	movf	fsr1l,w,c
 32294  01568E  0FFC               	addlw	-4
 32295  015690  6ED9               	movwf	fsr2l,c
 32296  015692  50E2               	movf	fsr1h,w,c
 32297  015694  6EDA               	movwf	fsr2h,c
 32298  015696  0EFF               	movlw	255
 32299  015698  22DA               	addwfc	fsr2h,f,c
 32300  01569A  90D8               	bcf	status,0,c
 32301  01569C  32DF               	rrcf	indf2,f,c
 32302  01569E                     l8660:
 32303                           
 32304                           ;stkvar	_b @ sp[(-4)+-4]
 32305  01569E  0EF8               	movlw	-8
 32306  0156A0  A0E3               	btfss	plusw1,0,c
 32307  0156A2  D002               	goto	l8664
 32308                           
 32309                           ;stkvar	_grs @ sp[(-4)+0]
 32310  0156A4  0EFC               	movlw	-4
 32311  0156A6  8EE3               	bsf	plusw1,7,c
 32312  0156A8                     l8664:
 32313  0156A8  0E01               	movlw	1
 32314  0156AA  6E0C               	movwf	(btemp+11)^0,c
 32315                           
 32316                           ;stkvar	_b @ sp[(-4)+-4]
 32317  0156AC  50E1               	movf	fsr1l,w,c
 32318  0156AE  0FF8               	addlw	-8
 32319  0156B0  6ED9               	movwf	fsr2l,c
 32320  0156B2  50E2               	movf	fsr1h,w,c
 32321  0156B4  6EDA               	movwf	fsr2h,c
 32322  0156B6  0EFF               	movlw	255
 32323  0156B8  22DA               	addwfc	fsr2h,f,c
 32324  0156BA  280C               	incf	(btemp+11)^0,w,c
 32325  0156BC  52DE               	movf	postinc2,f,c
 32326  0156BE  D008               	goto	u6250
 32327  0156C0                     u6255:
 32328  0156C0  52DE               	movf	postinc2,f,c
 32329  0156C2  90D8               	bcf	status,0,c
 32330  0156C4  BEDC               	btfsc	preinc2,7,c
 32331  0156C6  80D8               	bsf	status,0,c
 32332  0156C8  32DD               	rrcf	postdec2,f,c
 32333  0156CA  32DD               	rrcf	postdec2,f,c
 32334  0156CC  32DD               	rrcf	postdec2,f,c
 32335  0156CE  32DE               	rrcf	postinc2,f,c
 32336  0156D0                     u6250:
 32337  0156D0  2EE8               	decfsz	wreg,f,c
 32338  0156D2  D7F6               	goto	u6255
 32339                           
 32340                           ;stkvar	_bexp @ sp[(-4)+1]
 32341  0156D4  0EFD               	movlw	-3
 32342  0156D6  2AE3               	incf	plusw1,f,c
 32343  0156D8                     l8668:
 32344                           
 32345                           ;stkvar	_aexp @ sp[(-4)+2]
 32346                           ;stkvar	_bexp @ sp[(-4)+1]
 32347  0156D8  50E1               	movf	fsr1l,w,c
 32348  0156DA  0FFD               	addlw	-3
 32349  0156DC  6ED9               	movwf	fsr2l,c
 32350  0156DE  50E2               	movf	fsr1h,w,c
 32351  0156E0  6EDA               	movwf	fsr2h,c
 32352  0156E2  0EFF               	movlw	255
 32353  0156E4  22DA               	addwfc	fsr2h,f,c
 32354  0156E6  0EFE               	movlw	-2
 32355  0156E8  50E3               	movf	plusw1,w,c
 32356  0156EA  5CDE               	subwf	postinc2,w,c
 32357  0156EC  A0D8               	btfss	status,0,c
 32358  0156EE  D7BE               	goto	l8654
 32359  0156F0                     u6260:
 32360                           
 32361                           ;stkvar	_signs @ sp[(-4)+3]
 32362  0156F0  0EFF               	movlw	-1
 32363  0156F2  BCE3               	btfsc	plusw1,6,c
 32364  0156F4  D066               	goto	l8696
 32365                           
 32366                           ;stkvar	_bexp @ sp[(-4)+1]
 32367  0156F6  0EFD               	movlw	-3
 32368  0156F8  50E3               	movf	plusw1,w,c
 32369  0156FA  B4D8               	btfsc	status,2,c
 32370  0156FC  D0F2               	goto	u6360
 32371                           
 32372                           ;stkvar	_a @ sp[(-4)+-8]
 32373                           ;stkvar	_b @ sp[(-4)+-4]
 32374  0156FE  0EF8               	movlw	-8
 32375  015700  50E3               	movf	plusw1,w,c
 32376  015702  6E01               	movwf	btemp^0,c
 32377  015704  0EF4               	movlw	-12
 32378  015706  50E3               	movf	plusw1,w,c
 32379  015708  2601               	addwf	btemp^0,f,c
 32380  01570A  0EF8               	movlw	-8
 32381  01570C  0060  F007  FFE3   	movff	btemp,plusw1
 32382  015712  0EF9               	movlw	-7
 32383  015714  50E3               	movf	plusw1,w,c
 32384  015716  6E01               	movwf	btemp^0,c
 32385  015718  0EF5               	movlw	-11
 32386  01571A  50E3               	movf	plusw1,w,c
 32387  01571C  2201               	addwfc	btemp^0,f,c
 32388  01571E  0EF9               	movlw	-7
 32389  015720  0060  F007  FFE3   	movff	btemp,plusw1
 32390  015726  0EFA               	movlw	-6
 32391  015728  50E3               	movf	plusw1,w,c
 32392  01572A  6E01               	movwf	btemp^0,c
 32393  01572C  0EF6               	movlw	-10
 32394  01572E  50E3               	movf	plusw1,w,c
 32395  015730  2201               	addwfc	btemp^0,f,c
 32396  015732  0EFA               	movlw	-6
 32397  015734  0060  F007  FFE3   	movff	btemp,plusw1
 32398  01573A  0EFB               	movlw	-5
 32399  01573C  50E3               	movf	plusw1,w,c
 32400  01573E  6E01               	movwf	btemp^0,c
 32401  015740  0EF7               	movlw	-9
 32402  015742  50E3               	movf	plusw1,w,c
 32403  015744  2201               	addwfc	btemp^0,f,c
 32404  015746  0EFB               	movlw	-5
 32405  015748  0060  F007  FFE3   	movff	btemp,plusw1
 32406                           
 32407                           ;stkvar	_b @ sp[(-4)+-4]
 32408  01574E  0EFB               	movlw	-5
 32409  015750  A0E3               	btfss	plusw1,0,c
 32410  015752  D101               	goto	u6400
 32411                           
 32412                           ;stkvar	_grs @ sp[(-4)+0]
 32413  015754  0EFC               	movlw	-4
 32414  015756  A0E3               	btfss	plusw1,0,c
 32415  015758  D00D               	goto	l8686
 32416                           
 32417                           ;stkvar	_grs @ sp[(-4)+0]
 32418  01575A  0EFC               	movlw	-4
 32419  01575C  006F FF8C  F00C    	movff	plusw1,btemp+11
 32420  015762  90D8               	bcf	status,0,c
 32421  015764  320C               	rrcf	(btemp+11)^0,f,c
 32422  015766  0E01               	movlw	1
 32423  015768  120C               	iorwf	(btemp+11)^0,f,c
 32424                           
 32425                           ;stkvar	_grs @ sp[(-4)+0]
 32426  01576A  0EFC               	movlw	-4
 32427  01576C  0060  F033  FFE3   	movff	btemp+11,plusw1
 32428  015772  D009               	goto	l8688
 32429  015774                     l8686:
 32430                           
 32431                           ;stkvar	_grs @ sp[(-4)+0]
 32432  015774  50E1               	movf	fsr1l,w,c
 32433  015776  0FFC               	addlw	-4
 32434  015778  6ED9               	movwf	fsr2l,c
 32435  01577A  50E2               	movf	fsr1h,w,c
 32436  01577C  6EDA               	movwf	fsr2h,c
 32437  01577E  0EFF               	movlw	255
 32438  015780  22DA               	addwfc	fsr2h,f,c
 32439  015782  90D8               	bcf	status,0,c
 32440  015784  32DF               	rrcf	indf2,f,c
 32441  015786                     l8688:
 32442                           
 32443                           ;stkvar	_b @ sp[(-4)+-4]
 32444  015786  0EF8               	movlw	-8
 32445  015788  A0E3               	btfss	plusw1,0,c
 32446  01578A  D002               	goto	l8692
 32447                           
 32448                           ;stkvar	_grs @ sp[(-4)+0]
 32449  01578C  0EFC               	movlw	-4
 32450  01578E  8EE3               	bsf	plusw1,7,c
 32451  015790                     l8692:
 32452  015790  0E01               	movlw	1
 32453  015792  6E0C               	movwf	(btemp+11)^0,c
 32454                           
 32455                           ;stkvar	_b @ sp[(-4)+-4]
 32456  015794  50E1               	movf	fsr1l,w,c
 32457  015796  0FF8               	addlw	-8
 32458  015798  6ED9               	movwf	fsr2l,c
 32459  01579A  50E2               	movf	fsr1h,w,c
 32460  01579C  6EDA               	movwf	fsr2h,c
 32461  01579E  0EFF               	movlw	255
 32462  0157A0  22DA               	addwfc	fsr2h,f,c
 32463  0157A2  280C               	incf	(btemp+11)^0,w,c
 32464  0157A4  52DE               	movf	postinc2,f,c
 32465  0157A6  D008               	goto	u6320
 32466  0157A8                     u6325:
 32467  0157A8  52DE               	movf	postinc2,f,c
 32468  0157AA  90D8               	bcf	status,0,c
 32469  0157AC  BEDC               	btfsc	preinc2,7,c
 32470  0157AE  80D8               	bsf	status,0,c
 32471  0157B0  32DD               	rrcf	postdec2,f,c
 32472  0157B2  32DD               	rrcf	postdec2,f,c
 32473  0157B4  32DD               	rrcf	postdec2,f,c
 32474  0157B6  32DE               	rrcf	postinc2,f,c
 32475  0157B8                     u6320:
 32476  0157B8  2EE8               	decfsz	wreg,f,c
 32477  0157BA  D7F6               	goto	u6325
 32478                           
 32479                           ;stkvar	_bexp @ sp[(-4)+1]
 32480  0157BC  0EFD               	movlw	-3
 32481  0157BE  2AE3               	incf	plusw1,f,c
 32482  0157C0  D0CA               	goto	u6400
 32483  0157C2                     l8696:
 32484                           
 32485                           ;stkvar	_a @ sp[(-4)+-8]
 32486                           ;stkvar	_b @ sp[(-4)+-4]
 32487  0157C2  50E1               	movf	fsr1l,w,c
 32488  0157C4  0FF8               	addlw	-8
 32489  0157C6  6ED9               	movwf	fsr2l,c
 32490  0157C8  50E2               	movf	fsr1h,w,c
 32491  0157CA  6EDA               	movwf	fsr2h,c
 32492  0157CC  0EFF               	movlw	255
 32493  0157CE  22DA               	addwfc	fsr2h,f,c
 32494  0157D0  0EF4               	movlw	-12
 32495  0157D2  50E3               	movf	plusw1,w,c
 32496  0157D4  5CDE               	subwf	postinc2,w,c
 32497  0157D6  0EF5               	movlw	-11
 32498  0157D8  50E3               	movf	plusw1,w,c
 32499  0157DA  58DE               	subwfb	postinc2,w,c
 32500  0157DC  0EF6               	movlw	-10
 32501  0157DE  50E3               	movf	plusw1,w,c
 32502  0157E0  58DE               	subwfb	postinc2,w,c
 32503  0157E2  50DE               	movf	postinc2,w,c
 32504  0157E4  0A80               	xorlw	128
 32505  0157E6  6E01               	movwf	btemp^0,c
 32506  0157E8  0EF7               	movlw	-9
 32507  0157EA  50E3               	movf	plusw1,w,c
 32508  0157EC  0A80               	xorlw	128
 32509  0157EE  5801               	subwfb	btemp^0,w,c
 32510  0157F0  B0D8               	btfsc	status,0,c
 32511  0157F2  D053               	goto	l8708
 32512                           
 32513                           ;stkvar	_b @ sp[(-4)+-4]
 32514                           ;stkvar	_a @ sp[(-4)+-8]
 32515  0157F4  0EF4               	movlw	-12
 32516  0157F6  006F FF8C  F009    	movff	plusw1,btemp+8
 32517  0157FC  0EF5               	movlw	-11
 32518  0157FE  006F FF8C  F00A    	movff	plusw1,btemp+9
 32519  015804  0EF6               	movlw	-10
 32520  015806  006F FF8C  F00B    	movff	plusw1,btemp+10
 32521  01580C  0EF7               	movlw	-9
 32522  01580E  006F FF8C  F00C    	movff	plusw1,btemp+11
 32523  015814  0EF8               	movlw	-8
 32524  015816  50E3               	movf	plusw1,w,c
 32525  015818  5E09               	subwf	(btemp+8)^0,f,c
 32526  01581A  0EF9               	movlw	-7
 32527  01581C  50E3               	movf	plusw1,w,c
 32528  01581E  5A0A               	subwfb	(btemp+9)^0,f,c
 32529  015820  0EFA               	movlw	-6
 32530  015822  50E3               	movf	plusw1,w,c
 32531  015824  5A0B               	subwfb	(btemp+10)^0,f,c
 32532  015826  0EFB               	movlw	-5
 32533  015828  50E3               	movf	plusw1,w,c
 32534  01582A  5A0C               	subwfb	(btemp+11)^0,f,c
 32535  01582C  0EFF               	movlw	255
 32536  01582E  2409               	addwf	(btemp+8)^0,w,c
 32537  015830  6E05               	movwf	(btemp+4)^0,c
 32538  015832  0EFF               	movlw	255
 32539  015834  200A               	addwfc	(btemp+9)^0,w,c
 32540  015836  6E06               	movwf	(btemp+5)^0,c
 32541  015838  0EFF               	movlw	255
 32542  01583A  200B               	addwfc	(btemp+10)^0,w,c
 32543  01583C  6E07               	movwf	(btemp+6)^0,c
 32544  01583E  0EFF               	movlw	255
 32545  015840  200C               	addwfc	(btemp+11)^0,w,c
 32546  015842  6E08               	movwf	(btemp+7)^0,c
 32547                           
 32548                           ;stkvar	_b @ sp[(-4)+-4]
 32549  015844  0EF8               	movlw	-8
 32550  015846  0060  F017  FFE3   	movff	btemp+4,plusw1
 32551  01584C  0EF9               	movlw	-7
 32552  01584E  0060  F01B  FFE3   	movff	btemp+5,plusw1
 32553  015854  0EFA               	movlw	-6
 32554  015856  0060  F01F  FFE3   	movff	btemp+6,plusw1
 32555  01585C  0EFB               	movlw	-5
 32556  01585E  0060  F023  FFE3   	movff	btemp+7,plusw1
 32557                           
 32558                           ;stkvar	_signs @ sp[(-4)+3]
 32559  015864  0EFF               	movlw	-1
 32560  015866  7EE3               	btg	plusw1,7,c
 32561                           
 32562                           ;stkvar	_grs @ sp[(-4)+0]
 32563  015868  0EFC               	movlw	-4
 32564  01586A  50E3               	movf	plusw1,w,c
 32565  01586C  0800               	sublw	0
 32566  01586E  6E0C               	movwf	(btemp+11)^0,c
 32567                           
 32568                           ;stkvar	_grs @ sp[(-4)+0]
 32569  015870  0EFC               	movlw	-4
 32570  015872  0060  F033  FFE3   	movff	btemp+11,plusw1
 32571                           
 32572                           ;stkvar	_grs @ sp[(-4)+0]
 32573  015878  0EFC               	movlw	-4
 32574  01587A  50E3               	movf	plusw1,w,c
 32575  01587C  A4D8               	btfss	status,2,c
 32576  01587E  D020               	goto	l8710
 32577                           
 32578                           ;stkvar	_b @ sp[(-4)+-4]
 32579  015880  50E1               	movf	fsr1l,w,c
 32580  015882  0FF8               	addlw	-8
 32581  015884  6ED9               	movwf	fsr2l,c
 32582  015886  50E2               	movf	fsr1h,w,c
 32583  015888  6EDA               	movwf	fsr2h,c
 32584  01588A  0EFF               	movlw	255
 32585  01588C  22DA               	addwfc	fsr2h,f,c
 32586  01588E  2ADE               	incf	postinc2,f,c
 32587  015890  0E00               	movlw	0
 32588  015892  22DE               	addwfc	postinc2,f,c
 32589  015894  22DE               	addwfc	postinc2,f,c
 32590  015896  22DE               	addwfc	postinc2,f,c
 32591  015898  D013               	goto	l8710
 32592  01589A                     l8708:
 32593                           
 32594                           ;stkvar	_a @ sp[(-4)+-8]
 32595                           ;stkvar	_b @ sp[(-4)+-4]
 32596  01589A  50E1               	movf	fsr1l,w,c
 32597  01589C  0FF8               	addlw	-8
 32598  01589E  6ED9               	movwf	fsr2l,c
 32599  0158A0  50E2               	movf	fsr1h,w,c
 32600  0158A2  6EDA               	movwf	fsr2h,c
 32601  0158A4  0EFF               	movlw	255
 32602  0158A6  22DA               	addwfc	fsr2h,f,c
 32603  0158A8  0EF4               	movlw	-12
 32604  0158AA  50E3               	movf	plusw1,w,c
 32605  0158AC  5EDE               	subwf	postinc2,f,c
 32606  0158AE  0EF5               	movlw	-11
 32607  0158B0  50E3               	movf	plusw1,w,c
 32608  0158B2  5ADE               	subwfb	postinc2,f,c
 32609  0158B4  0EF6               	movlw	-10
 32610  0158B6  50E3               	movf	plusw1,w,c
 32611  0158B8  5ADE               	subwfb	postinc2,f,c
 32612  0158BA  0EF7               	movlw	-9
 32613  0158BC  50E3               	movf	plusw1,w,c
 32614  0158BE  5ADE               	subwfb	postinc2,f,c
 32615  0158C0                     l8710:
 32616                           
 32617                           ;stkvar	_b @ sp[(-4)+-4]
 32618  0158C0  0EF8               	movlw	-8
 32619  0158C2  50E3               	movf	plusw1,w,c
 32620  0158C4  E145               	bnz	l8732
 32621  0158C6  0EF9               	movlw	-7
 32622  0158C8  50E3               	movf	plusw1,w,c
 32623  0158CA  E142               	bnz	l8732
 32624  0158CC  0EFA               	movlw	-6
 32625  0158CE  50E3               	movf	plusw1,w,c
 32626  0158D0  E13F               	bnz	l8732
 32627  0158D2  0EFB               	movlw	-5
 32628  0158D4  50E3               	movf	plusw1,w,c
 32629  0158D6  A4D8               	btfss	status,2,c
 32630  0158D8  D03B               	goto	l8732
 32631                           
 32632                           ;stkvar	_grs @ sp[(-4)+0]
 32633  0158DA  0EFC               	movlw	-4
 32634  0158DC  50E3               	movf	plusw1,w,c
 32635  0158DE  A4D8               	btfss	status,2,c
 32636  0158E0  D037               	goto	l8732
 32637  0158E2                     u6360:
 32638  0158E2  0E00               	movlw	0
 32639  0158E4  6E01               	movwf	btemp^0,c
 32640  0158E6  0E00               	movlw	0
 32641  0158E8  6E02               	movwf	(btemp+1)^0,c
 32642  0158EA  0E00               	movlw	0
 32643  0158EC  6E03               	movwf	(btemp+2)^0,c
 32644  0158EE  0E00               	movlw	0
 32645  0158F0  6E04               	movwf	(btemp+3)^0,c
 32646  0158F2  D0C6               	goto	l3220
 32647  0158F4                     l8718:
 32648                           
 32649                           ;stkvar	_b @ sp[(-4)+-4]
 32650  0158F4  90D8               	bcf	status,0,c
 32651  0158F6  0EF8               	movlw	-8
 32652  0158F8  36E3               	rlcf	plusw1,f,c
 32653  0158FA  0EF9               	movlw	-7
 32654  0158FC  36E3               	rlcf	plusw1,f,c
 32655  0158FE  0EFA               	movlw	-6
 32656  015900  36E3               	rlcf	plusw1,f,c
 32657  015902  0EFB               	movlw	-5
 32658  015904  36E3               	rlcf	plusw1,f,c
 32659                           
 32660                           ;stkvar	_grs @ sp[(-4)+0]
 32661  015906  0EFC               	movlw	-4
 32662  015908  AEE3               	btfss	plusw1,7,c
 32663  01590A  D002               	goto	l3232
 32664                           
 32665                           ;stkvar	_b @ sp[(-4)+-4]
 32666  01590C  0EF8               	movlw	-8
 32667  01590E  80E3               	bsf	plusw1,0,c
 32668  015910                     l3232:
 32669                           
 32670                           ;stkvar	_grs @ sp[(-4)+0]
 32671  015910  0EFC               	movlw	-4
 32672  015912  A0E3               	btfss	plusw1,0,c
 32673  015914  D00E               	goto	l8726
 32674                           
 32675                           ;stkvar	_grs @ sp[(-4)+0]
 32676  015916  0EFC               	movlw	-4
 32677  015918  006F FF8C  F00C    	movff	plusw1,btemp+11
 32678  01591E  90D8               	bcf	status,0,c
 32679  015920  340C               	rlcf	(btemp+11)^0,w,c
 32680  015922  6E0B               	movwf	(btemp+10)^0,c
 32681  015924  0E01               	movlw	1
 32682  015926  120B               	iorwf	(btemp+10)^0,f,c
 32683                           
 32684                           ;stkvar	_grs @ sp[(-4)+0]
 32685  015928  0EFC               	movlw	-4
 32686  01592A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 32687  015930  D009               	goto	l8728
 32688  015932                     l8726:
 32689                           
 32690                           ;stkvar	_grs @ sp[(-4)+0]
 32691  015932  50E1               	movf	fsr1l,w,c
 32692  015934  0FFC               	addlw	-4
 32693  015936  6ED9               	movwf	fsr2l,c
 32694  015938  50E2               	movf	fsr1h,w,c
 32695  01593A  6EDA               	movwf	fsr2h,c
 32696  01593C  0EFF               	movlw	255
 32697  01593E  22DA               	addwfc	fsr2h,f,c
 32698  015940  90D8               	bcf	status,0,c
 32699  015942  36DF               	rlcf	indf2,f,c
 32700  015944                     l8728:
 32701                           
 32702                           ;stkvar	_bexp @ sp[(-4)+1]
 32703  015944  0EFD               	movlw	-3
 32704  015946  50E3               	movf	plusw1,w,c
 32705  015948  B4D8               	btfsc	status,2,c
 32706  01594A  D002               	goto	l8732
 32707                           
 32708                           ;stkvar	_bexp @ sp[(-4)+1]
 32709  01594C  0EFD               	movlw	-3
 32710  01594E  06E3               	decf	plusw1,f,c
 32711  015950                     l8732:
 32712                           
 32713                           ;stkvar	_b @ sp[(-4)+-4]
 32714  015950  0EFA               	movlw	-6
 32715  015952  AEE3               	btfss	plusw1,7,c
 32716  015954  D7CF               	goto	l8718
 32717  015956                     u6400:
 32718                           
 32719                           ;stkvar	_aexp @ sp[(-4)+2]
 32720  015956  0EFE               	movlw	-2
 32721  015958  6AE3               	clrf	plusw1,c
 32722                           
 32723                           ;stkvar	_grs @ sp[(-4)+0]
 32724  01595A  0EFC               	movlw	-4
 32725  01595C  AEE3               	btfss	plusw1,7,c
 32726  01595E  D00F               	goto	l8746
 32727                           
 32728                           ;stkvar	_grs @ sp[(-4)+0]
 32729  015960  0EFC               	movlw	-4
 32730  015962  006F FF8C  F00C    	movff	plusw1,btemp+11
 32731  015968  0E7F               	movlw	127
 32732  01596A  160C               	andwf	(btemp+11)^0,f,c
 32733  01596C  B4D8               	btfsc	status,2,c
 32734  01596E  D004               	goto	l8742
 32735  015970                     u6420:
 32736                           
 32737                           ;stkvar	_aexp @ sp[(-4)+2]
 32738  015970  0EFE               	movlw	-2
 32739  015972  6AE3               	clrf	plusw1,c
 32740  015974  2AE3               	incf	plusw1,f,c
 32741  015976  D003               	goto	l8746
 32742  015978                     l8742:
 32743                           
 32744                           ;stkvar	_b @ sp[(-4)+-4]
 32745  015978  0EF8               	movlw	-8
 32746  01597A  B0E3               	btfsc	plusw1,0,c
 32747  01597C  D7F9               	goto	u6420
 32748  01597E                     l8746:
 32749                           
 32750                           ;stkvar	_aexp @ sp[(-4)+2]
 32751  01597E  0EFE               	movlw	-2
 32752  015980  50E3               	movf	plusw1,w,c
 32753  015982  B4D8               	btfsc	status,2,c
 32754  015984  D02B               	goto	l8758
 32755                           
 32756                           ;stkvar	_b @ sp[(-4)+-4]
 32757  015986  50E1               	movf	fsr1l,w,c
 32758  015988  0FF8               	addlw	-8
 32759  01598A  6ED9               	movwf	fsr2l,c
 32760  01598C  50E2               	movf	fsr1h,w,c
 32761  01598E  6EDA               	movwf	fsr2h,c
 32762  015990  0EFF               	movlw	255
 32763  015992  22DA               	addwfc	fsr2h,f,c
 32764  015994  2ADE               	incf	postinc2,f,c
 32765  015996  0E00               	movlw	0
 32766  015998  22DE               	addwfc	postinc2,f,c
 32767  01599A  22DE               	addwfc	postinc2,f,c
 32768  01599C  22DE               	addwfc	postinc2,f,c
 32769                           
 32770                           ;stkvar	_b @ sp[(-4)+-4]
 32771  01599E  0EFB               	movlw	-5
 32772  0159A0  A0E3               	btfss	plusw1,0,c
 32773  0159A2  D01C               	goto	l8758
 32774  0159A4  0E01               	movlw	1
 32775  0159A6  6E0C               	movwf	(btemp+11)^0,c
 32776                           
 32777                           ;stkvar	_b @ sp[(-4)+-4]
 32778  0159A8  50E1               	movf	fsr1l,w,c
 32779  0159AA  0FF8               	addlw	-8
 32780  0159AC  6ED9               	movwf	fsr2l,c
 32781  0159AE  50E2               	movf	fsr1h,w,c
 32782  0159B0  6EDA               	movwf	fsr2h,c
 32783  0159B2  0EFF               	movlw	255
 32784  0159B4  22DA               	addwfc	fsr2h,f,c
 32785  0159B6  280C               	incf	(btemp+11)^0,w,c
 32786  0159B8  52DE               	movf	postinc2,f,c
 32787  0159BA  D008               	goto	u6460
 32788  0159BC                     u6465:
 32789  0159BC  52DE               	movf	postinc2,f,c
 32790  0159BE  90D8               	bcf	status,0,c
 32791  0159C0  BEDC               	btfsc	preinc2,7,c
 32792  0159C2  80D8               	bsf	status,0,c
 32793  0159C4  32DD               	rrcf	postdec2,f,c
 32794  0159C6  32DD               	rrcf	postdec2,f,c
 32795  0159C8  32DD               	rrcf	postdec2,f,c
 32796  0159CA  32DE               	rrcf	postinc2,f,c
 32797  0159CC                     u6460:
 32798  0159CC  2EE8               	decfsz	wreg,f,c
 32799  0159CE  D7F6               	goto	u6465
 32800                           
 32801                           ;stkvar	_bexp @ sp[(-4)+1]
 32802  0159D0  0EFD               	movlw	-3
 32803  0159D2  28E3               	incf	plusw1,w,c
 32804  0159D4  B4D8               	btfsc	status,2,c
 32805  0159D6  D002               	goto	l8758
 32806                           
 32807                           ;stkvar	_bexp @ sp[(-4)+1]
 32808  0159D8  0EFD               	movlw	-3
 32809  0159DA  2AE3               	incf	plusw1,f,c
 32810  0159DC                     l8758:
 32811                           
 32812                           ;stkvar	_bexp @ sp[(-4)+1]
 32813  0159DC  0EFD               	movlw	-3
 32814  0159DE  28E3               	incf	plusw1,w,c
 32815  0159E0  B4D8               	btfsc	status,2,c
 32816  0159E2  D004               	goto	u6490
 32817                           
 32818                           ;stkvar	_bexp @ sp[(-4)+1]
 32819  0159E4  0EFD               	movlw	-3
 32820  0159E6  50E3               	movf	plusw1,w,c
 32821  0159E8  A4D8               	btfss	status,2,c
 32822  0159EA  D00E               	goto	l8768
 32823  0159EC                     u6490:
 32824                           
 32825                           ;stkvar	_b @ sp[(-4)+-4]
 32826  0159EC  0EF8               	movlw	-8
 32827  0159EE  6AE3               	clrf	plusw1,c
 32828  0159F0  0EF9               	movlw	-7
 32829  0159F2  6AE3               	clrf	plusw1,c
 32830  0159F4  0EFA               	movlw	-6
 32831  0159F6  6AE3               	clrf	plusw1,c
 32832  0159F8  0EFB               	movlw	-5
 32833  0159FA  6AE3               	clrf	plusw1,c
 32834                           
 32835                           ;stkvar	_bexp @ sp[(-4)+1]
 32836  0159FC  0EFD               	movlw	-3
 32837  0159FE  50E3               	movf	plusw1,w,c
 32838  015A00  A4D8               	btfss	status,2,c
 32839  015A02  D002               	goto	l8768
 32840                           
 32841                           ;stkvar	_signs @ sp[(-4)+3]
 32842  015A04  0EFF               	movlw	-1
 32843  015A06  6AE3               	clrf	plusw1,c
 32844  015A08                     l8768:
 32845                           
 32846                           ;stkvar	_bexp @ sp[(-4)+1]
 32847  015A08  0EFD               	movlw	-3
 32848  015A0A  A0E3               	btfss	plusw1,0,c
 32849  015A0C  D009               	goto	l8772
 32850                           
 32851                           ;stkvar	_b @ sp[(-4)+-4]
 32852  015A0E  0EFA               	movlw	250
 32853  015A10  24E1               	addwf	fsr1l,w,c
 32854  015A12  6ED9               	movwf	fsr2l,c
 32855  015A14  0EFF               	movlw	255
 32856  015A16  20E2               	addwfc	fsr1h,w,c
 32857  015A18  6EDA               	movwf	fsr2h,c
 32858  015A1A  0E00               	movlw	0
 32859  015A1C  8EDB               	bsf	plusw2,7,c
 32860  015A1E  D008               	goto	l8774
 32861  015A20                     l8772:
 32862                           
 32863                           ;stkvar	_b @ sp[(-4)+-4]
 32864  015A20  0EFA               	movlw	250
 32865  015A22  24E1               	addwf	fsr1l,w,c
 32866  015A24  6ED9               	movwf	fsr2l,c
 32867  015A26  0EFF               	movlw	255
 32868  015A28  20E2               	addwfc	fsr1h,w,c
 32869  015A2A  6EDA               	movwf	fsr2h,c
 32870  015A2C  0E7F               	movlw	127
 32871  015A2E  16DF               	andwf	indf2,f,c
 32872  015A30                     l8774:
 32873                           
 32874                           ;stkvar	_b @ sp[(-4)+-4]
 32875  015A30  0EFB               	movlw	251
 32876  015A32  24E1               	addwf	fsr1l,w,c
 32877  015A34  6ED9               	movwf	fsr2l,c
 32878  015A36  0EFF               	movlw	255
 32879  015A38  20E2               	addwfc	fsr1h,w,c
 32880  015A3A  6EDA               	movwf	fsr2h,c
 32881                           
 32882                           ;stkvar	_bexp @ sp[(-4)+1]
 32883  015A3C  0EFD               	movlw	-3
 32884  015A3E  006F FF8C  F00C    	movff	plusw1,btemp+11
 32885  015A44  90D8               	bcf	status,0,c
 32886  015A46  300C               	rrcf	(btemp+11)^0,w,c
 32887  015A48  6EDF               	movwf	indf2,c
 32888                           
 32889                           ;stkvar	_signs @ sp[(-4)+3]
 32890  015A4A  0EFF               	movlw	-1
 32891  015A4C  AEE3               	btfss	plusw1,7,c
 32892  015A4E  D008               	goto	l8780
 32893                           
 32894                           ;stkvar	_b @ sp[(-4)+-4]
 32895  015A50  0EFB               	movlw	251
 32896  015A52  24E1               	addwf	fsr1l,w,c
 32897  015A54  6ED9               	movwf	fsr2l,c
 32898  015A56  0EFF               	movlw	255
 32899  015A58  20E2               	addwfc	fsr1h,w,c
 32900  015A5A  6EDA               	movwf	fsr2h,c
 32901  015A5C  0E00               	movlw	0
 32902  015A5E  8EDB               	bsf	plusw2,7,c
 32903  015A60                     l8780:
 32904                           
 32905                           ;stkvar	_b @ sp[(-4)+-4]
 32906  015A60  0EF8               	movlw	-8
 32907  015A62  006F FF8C  F001    	movff	plusw1,btemp
 32908  015A68  0EF9               	movlw	-7
 32909  015A6A  006F FF8C  F002    	movff	plusw1,btemp+1
 32910  015A70  0EFA               	movlw	-6
 32911  015A72  006F FF8C  F003    	movff	plusw1,btemp+2
 32912  015A78  0EFB               	movlw	-5
 32913  015A7A  006F FF8C  F004    	movff	plusw1,btemp+3
 32914  015A80                     l3220:
 32915                           
 32916                           ; ___fladd: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 32917  015A80  0EF4               	movlw	244
 32918  015A82  26E1               	addwf	fsr1l,f,c
 32919  015A84  0EFF               	movlw	255
 32920  015A86  22E2               	addwfc	fsr1h,f,c
 32921  015A88  0012               	return		;funcret
 32922  015A8A                     __end_of___fladd:
 32923                           	opt callstack 0
 32924                           
 32925 ;; *************** function ___flmul *****************
 32926 ;; Defined at:
 32927 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcmul.c"
 32928 ;; Parameters:    Size  Location     Type
 32929 ;;  b               4  [STACK] unsigned char 
 32930 ;;  a               4  [STACK] unsigned char 
 32931 ;; Auto vars:     Size  Location     Type
 32932 ;;  prod            4  [STACK] struct .
 32933 ;;  grs             4  [STACK] unsigned long 
 32934 ;;  temp            2  [STACK] struct .
 32935 ;;  bexp            1  [STACK] unsigned char 
 32936 ;;  aexp            1  [STACK] unsigned char 
 32937 ;;  sign            1  [STACK] unsigned char 
 32938 ;; Return value:  Size  Location     Type
 32939 ;;                  4  [STACK] unsigned char 
 32940 ;; Registers used:
 32941 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 32942 ;; Tracked objects:
 32943 ;;		On entry : 0/1
 32944 ;;		On exit  : 0/0
 32945 ;;		Unchanged: 0/0
 32946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32947 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32948 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32950 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32951 ;;Total ram usage:        0 bytes
 32952 ;; Hardware stack levels used:    1
 32953 ;; Hardware stack levels required when called:   15
 32954 ;; This function calls:
 32955 ;;		Nothing
 32956 ;; This function is called by:
 32957 ;;		_conv_raw_result
 32958 ;;		_lp_filter
 32959 ;;		_calc_model_data
 32960 ;;		_calc_bsoc
 32961 ;;		_init_bsoc
 32962 ;;		_efgtoa
 32963 ;; This function uses a reentrant model
 32964 ;;
 32965                           
 32966                           	psect	text129
 32967  014AA4                     __ptext129:
 32968                           	opt callstack 0
 32969  014AA4                     ___flmul:
 32970                           	opt callstack 0
 32971                           
 32972                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 32973  014AA4  0E0D               	movlw	13
 32974  014AA6  26E1               	addwf	fsr1l,f,c
 32975  014AA8  0E00               	movlw	0
 32976  014AAA  22E2               	addwfc	fsr1h,f,c
 32977                           
 32978                           ;stkvar	_b @ sp[(-13)+-4]
 32979                           
 32980                           ;incstack = 0
 32981 ;; hardware stack exceeded
 32982  014AAC  0EF2               	movlw	242
 32983  014AAE  24E1               	addwf	fsr1l,w,c
 32984  014AB0  6ED9               	movwf	fsr2l,c
 32985  014AB2  0EFF               	movlw	255
 32986  014AB4  20E2               	addwfc	fsr1h,w,c
 32987  014AB6  6EDA               	movwf	fsr2h,c
 32988  014AB8  50DF               	movf	indf2,w,c
 32989  014ABA  6E0C               	movwf	(btemp+11)^0,c
 32990  014ABC  0E80               	movlw	128
 32991  014ABE  160C               	andwf	(btemp+11)^0,f,c
 32992                           
 32993                           ;stkvar	_sign @ sp[(-13)+12]
 32994  014AC0  0EFF               	movlw	-1
 32995  014AC2  0060  F033  FFE3   	movff	btemp+11,plusw1
 32996                           
 32997                           ;stkvar	_b @ sp[(-13)+-4]
 32998  014AC8  0EF2               	movlw	242
 32999  014ACA  24E1               	addwf	fsr1l,w,c
 33000  014ACC  6ED9               	movwf	fsr2l,c
 33001  014ACE  0EFF               	movlw	255
 33002  014AD0  20E2               	addwfc	fsr1h,w,c
 33003  014AD2  6EDA               	movwf	fsr2h,c
 33004  014AD4  50DF               	movf	indf2,w,c
 33005  014AD6  6E0C               	movwf	(btemp+11)^0,c
 33006  014AD8  90D8               	bcf	status,0,c
 33007  014ADA  340C               	rlcf	(btemp+11)^0,w,c
 33008  014ADC  6E0B               	movwf	(btemp+10)^0,c
 33009                           
 33010                           ;stkvar	_bexp @ sp[(-13)+10]
 33011  014ADE  0EFD               	movlw	-3
 33012  014AE0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 33013                           
 33014                           ;stkvar	_b @ sp[(-13)+-4]
 33015  014AE6  0EF1               	movlw	241
 33016  014AE8  24E1               	addwf	fsr1l,w,c
 33017  014AEA  6ED9               	movwf	fsr2l,c
 33018  014AEC  0EFF               	movlw	255
 33019  014AEE  20E2               	addwfc	fsr1h,w,c
 33020  014AF0  6EDA               	movwf	fsr2h,c
 33021  014AF2  AEDF               	btfss	indf2,7,c
 33022  014AF4  D002               	goto	l9206
 33023                           
 33024                           ;stkvar	_bexp @ sp[(-13)+10]
 33025  014AF6  0EFD               	movlw	-3
 33026  014AF8  80E3               	bsf	plusw1,0,c
 33027  014AFA                     l9206:
 33028                           
 33029                           ;stkvar	_bexp @ sp[(-13)+10]
 33030  014AFA  0EFD               	movlw	-3
 33031  014AFC  50E3               	movf	plusw1,w,c
 33032  014AFE  B4D8               	btfsc	status,2,c
 33033  014B00  D01F               	goto	l9214
 33034                           
 33035                           ;stkvar	_bexp @ sp[(-13)+10]
 33036  014B02  0EFD               	movlw	-3
 33037  014B04  28E3               	incf	plusw1,w,c
 33038  014B06  A4D8               	btfss	status,2,c
 33039  014B08  D018               	goto	l9212
 33040  014B0A  0E00               	movlw	0
 33041  014B0C  6E09               	movwf	(btemp+8)^0,c
 33042  014B0E  0E00               	movlw	0
 33043  014B10  6E0A               	movwf	(btemp+9)^0,c
 33044  014B12  0E00               	movlw	0
 33045  014B14  6E0B               	movwf	(btemp+10)^0,c
 33046  014B16  0E00               	movlw	0
 33047  014B18  6E0C               	movwf	(btemp+11)^0,c
 33048                           
 33049                           ;stkvar	_b @ sp[(-13)+-4]
 33050  014B1A  0EEF               	movlw	-17
 33051  014B1C  0060  F027  FFE3   	movff	btemp+8,plusw1
 33052  014B22  0EF0               	movlw	-16
 33053  014B24  0060  F02B  FFE3   	movff	btemp+9,plusw1
 33054  014B2A  0EF1               	movlw	-15
 33055  014B2C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 33056  014B32  0EF2               	movlw	-14
 33057  014B34  0060  F033  FFE3   	movff	btemp+11,plusw1
 33058  014B3A                     l9212:
 33059                           
 33060                           ;stkvar	_b @ sp[(-13)+-4]
 33061  014B3A  0EF1               	movlw	-15
 33062  014B3C  8EE3               	bsf	plusw1,7,c
 33063  014B3E  D018               	goto	l9216
 33064  014B40                     l9214:
 33065  014B40  0E00               	movlw	0
 33066  014B42  6E09               	movwf	(btemp+8)^0,c
 33067  014B44  0E00               	movlw	0
 33068  014B46  6E0A               	movwf	(btemp+9)^0,c
 33069  014B48  0E00               	movlw	0
 33070  014B4A  6E0B               	movwf	(btemp+10)^0,c
 33071  014B4C  0E00               	movlw	0
 33072  014B4E  6E0C               	movwf	(btemp+11)^0,c
 33073                           
 33074                           ;stkvar	_b @ sp[(-13)+-4]
 33075  014B50  0EEF               	movlw	-17
 33076  014B52  0060  F027  FFE3   	movff	btemp+8,plusw1
 33077  014B58  0EF0               	movlw	-16
 33078  014B5A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 33079  014B60  0EF1               	movlw	-15
 33080  014B62  0060  F02F  FFE3   	movff	btemp+10,plusw1
 33081  014B68  0EF2               	movlw	-14
 33082  014B6A  0060  F033  FFE3   	movff	btemp+11,plusw1
 33083  014B70                     l9216:
 33084                           
 33085                           ;stkvar	_a @ sp[(-13)+-8]
 33086  014B70  0EEE               	movlw	238
 33087  014B72  24E1               	addwf	fsr1l,w,c
 33088  014B74  6ED9               	movwf	fsr2l,c
 33089  014B76  0EFF               	movlw	255
 33090  014B78  20E2               	addwfc	fsr1h,w,c
 33091  014B7A  6EDA               	movwf	fsr2h,c
 33092  014B7C  50DF               	movf	indf2,w,c
 33093  014B7E  6E0C               	movwf	(btemp+11)^0,c
 33094  014B80  0E80               	movlw	128
 33095  014B82  160C               	andwf	(btemp+11)^0,f,c
 33096                           
 33097                           ;stkvar	_sign @ sp[(-13)+12]
 33098  014B84  50E1               	movf	fsr1l,w,c
 33099  014B86  0FFF               	addlw	-1
 33100  014B88  6ED9               	movwf	fsr2l,c
 33101  014B8A  50E2               	movf	fsr1h,w,c
 33102  014B8C  6EDA               	movwf	fsr2h,c
 33103  014B8E  0EFF               	movlw	255
 33104  014B90  22DA               	addwfc	fsr2h,f,c
 33105  014B92  500C               	movf	(btemp+11)^0,w,c
 33106  014B94  1ADF               	xorwf	indf2,f,c
 33107                           
 33108                           ;stkvar	_a @ sp[(-13)+-8]
 33109  014B96  0EEE               	movlw	238
 33110  014B98  24E1               	addwf	fsr1l,w,c
 33111  014B9A  6ED9               	movwf	fsr2l,c
 33112  014B9C  0EFF               	movlw	255
 33113  014B9E  20E2               	addwfc	fsr1h,w,c
 33114  014BA0  6EDA               	movwf	fsr2h,c
 33115  014BA2  50DF               	movf	indf2,w,c
 33116  014BA4  6E0C               	movwf	(btemp+11)^0,c
 33117  014BA6  90D8               	bcf	status,0,c
 33118  014BA8  340C               	rlcf	(btemp+11)^0,w,c
 33119  014BAA  6E0B               	movwf	(btemp+10)^0,c
 33120                           
 33121                           ;stkvar	_aexp @ sp[(-13)+11]
 33122  014BAC  0EFE               	movlw	-2
 33123  014BAE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 33124                           
 33125                           ;stkvar	_a @ sp[(-13)+-8]
 33126  014BB4  0EED               	movlw	237
 33127  014BB6  24E1               	addwf	fsr1l,w,c
 33128  014BB8  6ED9               	movwf	fsr2l,c
 33129  014BBA  0EFF               	movlw	255
 33130  014BBC  20E2               	addwfc	fsr1h,w,c
 33131  014BBE  6EDA               	movwf	fsr2h,c
 33132  014BC0  AEDF               	btfss	indf2,7,c
 33133  014BC2  D002               	goto	l9224
 33134                           
 33135                           ;stkvar	_aexp @ sp[(-13)+11]
 33136  014BC4  0EFE               	movlw	-2
 33137  014BC6  80E3               	bsf	plusw1,0,c
 33138  014BC8                     l9224:
 33139                           
 33140                           ;stkvar	_aexp @ sp[(-13)+11]
 33141  014BC8  0EFE               	movlw	-2
 33142  014BCA  50E3               	movf	plusw1,w,c
 33143  014BCC  B4D8               	btfsc	status,2,c
 33144  014BCE  D01F               	goto	l9232
 33145                           
 33146                           ;stkvar	_aexp @ sp[(-13)+11]
 33147  014BD0  0EFE               	movlw	-2
 33148  014BD2  28E3               	incf	plusw1,w,c
 33149  014BD4  A4D8               	btfss	status,2,c
 33150  014BD6  D018               	goto	l9230
 33151  014BD8  0E00               	movlw	0
 33152  014BDA  6E09               	movwf	(btemp+8)^0,c
 33153  014BDC  0E00               	movlw	0
 33154  014BDE  6E0A               	movwf	(btemp+9)^0,c
 33155  014BE0  0E00               	movlw	0
 33156  014BE2  6E0B               	movwf	(btemp+10)^0,c
 33157  014BE4  0E00               	movlw	0
 33158  014BE6  6E0C               	movwf	(btemp+11)^0,c
 33159                           
 33160                           ;stkvar	_a @ sp[(-13)+-8]
 33161  014BE8  0EEB               	movlw	-21
 33162  014BEA  0060  F027  FFE3   	movff	btemp+8,plusw1
 33163  014BF0  0EEC               	movlw	-20
 33164  014BF2  0060  F02B  FFE3   	movff	btemp+9,plusw1
 33165  014BF8  0EED               	movlw	-19
 33166  014BFA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 33167  014C00  0EEE               	movlw	-18
 33168  014C02  0060  F033  FFE3   	movff	btemp+11,plusw1
 33169  014C08                     l9230:
 33170                           
 33171                           ;stkvar	_a @ sp[(-13)+-8]
 33172  014C08  0EED               	movlw	-19
 33173  014C0A  8EE3               	bsf	plusw1,7,c
 33174  014C0C  D018               	goto	l9234
 33175  014C0E                     l9232:
 33176  014C0E  0E00               	movlw	0
 33177  014C10  6E09               	movwf	(btemp+8)^0,c
 33178  014C12  0E00               	movlw	0
 33179  014C14  6E0A               	movwf	(btemp+9)^0,c
 33180  014C16  0E00               	movlw	0
 33181  014C18  6E0B               	movwf	(btemp+10)^0,c
 33182  014C1A  0E00               	movlw	0
 33183  014C1C  6E0C               	movwf	(btemp+11)^0,c
 33184                           
 33185                           ;stkvar	_a @ sp[(-13)+-8]
 33186  014C1E  0EEB               	movlw	-21
 33187  014C20  0060  F027  FFE3   	movff	btemp+8,plusw1
 33188  014C26  0EEC               	movlw	-20
 33189  014C28  0060  F02B  FFE3   	movff	btemp+9,plusw1
 33190  014C2E  0EED               	movlw	-19
 33191  014C30  0060  F02F  FFE3   	movff	btemp+10,plusw1
 33192  014C36  0EEE               	movlw	-18
 33193  014C38  0060  F033  FFE3   	movff	btemp+11,plusw1
 33194  014C3E                     l9234:
 33195                           
 33196                           ;stkvar	_aexp @ sp[(-13)+11]
 33197  014C3E  0EFE               	movlw	-2
 33198  014C40  50E3               	movf	plusw1,w,c
 33199  014C42  B4D8               	btfsc	status,2,c
 33200  014C44  D004               	goto	u7480
 33201                           
 33202                           ;stkvar	_bexp @ sp[(-13)+10]
 33203  014C46  0EFD               	movlw	-3
 33204  014C48  50E3               	movf	plusw1,w,c
 33205  014C4A  A4D8               	btfss	status,2,c
 33206  014C4C  D009               	goto	l9242
 33207  014C4E                     u7480:
 33208  014C4E  0E00               	movlw	0
 33209  014C50  6E01               	movwf	btemp^0,c
 33210  014C52  0E00               	movlw	0
 33211  014C54  6E02               	movwf	(btemp+1)^0,c
 33212  014C56  0E00               	movlw	0
 33213  014C58  6E03               	movwf	(btemp+2)^0,c
 33214  014C5A  0E00               	movlw	0
 33215  014C5C  6E04               	movwf	(btemp+3)^0,c
 33216  014C5E  D332               	goto	l3301
 33217  014C60                     l9242:
 33218                           
 33219                           ;stkvar	_b @ sp[(-13)+-4]
 33220  014C60  0EEF               	movlw	-17
 33221  014C62  006F FF8C  F00C    	movff	plusw1,btemp+11
 33222                           
 33223                           ;stkvar	_a @ sp[(-13)+-8]
 33224  014C68  0EED               	movlw	237
 33225  014C6A  24E1               	addwf	fsr1l,w,c
 33226  014C6C  6ED9               	movwf	fsr2l,c
 33227  014C6E  0EFF               	movlw	255
 33228  014C70  20E2               	addwfc	fsr1h,w,c
 33229  014C72  6EDA               	movwf	fsr2h,c
 33230  014C74  50DF               	movf	indf2,w,c
 33231  014C76  020C               	mulwf	(btemp+11)^0,c
 33232                           
 33233                           ;stkvar	_temp @ sp[(-13)+8]
 33234  014C78  0EFB               	movlw	-5
 33235  014C7A  006F FFCF FFE3     	movff	prodl,plusw1
 33236  014C80  0EFC               	movlw	-4
 33237  014C82  006F FFD3 FFE3     	movff	prodh,plusw1
 33238                           
 33239                           ;stkvar	_temp @ sp[(-13)+8]
 33240  014C88  0EFB               	movlw	-5
 33241  014C8A  006F FF8C  F00C    	movff	plusw1,btemp+11
 33242  014C90  0060  F030  F005   	movff	btemp+11,btemp+4
 33243  014C96  6A06               	clrf	(btemp+5)^0,c
 33244  014C98  6A07               	clrf	(btemp+6)^0,c
 33245  014C9A  6A08               	clrf	(btemp+7)^0,c
 33246                           
 33247                           ;stkvar	_grs @ sp[(-13)+4]
 33248  014C9C  0EF7               	movlw	-9
 33249  014C9E  0060  F017  FFE3   	movff	btemp+4,plusw1
 33250  014CA4  0EF8               	movlw	-8
 33251  014CA6  0060  F01B  FFE3   	movff	btemp+5,plusw1
 33252  014CAC  0EF9               	movlw	-7
 33253  014CAE  0060  F01F  FFE3   	movff	btemp+6,plusw1
 33254  014CB4  0EFA               	movlw	-6
 33255  014CB6  0060  F023  FFE3   	movff	btemp+7,plusw1
 33256                           
 33257                           ;stkvar	_temp @ sp[(-13)+8]
 33258  014CBC  0EFC               	movlw	252
 33259  014CBE  24E1               	addwf	fsr1l,w,c
 33260  014CC0  6ED9               	movwf	fsr2l,c
 33261  014CC2  0EFF               	movlw	255
 33262  014CC4  20E2               	addwfc	fsr1h,w,c
 33263  014CC6  6EDA               	movwf	fsr2h,c
 33264  014CC8  50DF               	movf	indf2,w,c
 33265  014CCA  6E0C               	movwf	(btemp+11)^0,c
 33266  014CCC  0060  F030  F005   	movff	btemp+11,btemp+4
 33267  014CD2  6A06               	clrf	(btemp+5)^0,c
 33268  014CD4  6A07               	clrf	(btemp+6)^0,c
 33269  014CD6  6A08               	clrf	(btemp+7)^0,c
 33270                           
 33271                           ;stkvar	_prod @ sp[(-13)+0]
 33272  014CD8  0EF3               	movlw	-13
 33273  014CDA  0060  F017  FFE3   	movff	btemp+4,plusw1
 33274  014CE0  0EF4               	movlw	-12
 33275  014CE2  0060  F01B  FFE3   	movff	btemp+5,plusw1
 33276  014CE8  0EF5               	movlw	-11
 33277  014CEA  0060  F01F  FFE3   	movff	btemp+6,plusw1
 33278  014CF0  0EF6               	movlw	-10
 33279  014CF2  0060  F023  FFE3   	movff	btemp+7,plusw1
 33280                           
 33281                           ;stkvar	_b @ sp[(-13)+-4]
 33282  014CF8  0EF0               	movlw	240
 33283  014CFA  24E1               	addwf	fsr1l,w,c
 33284  014CFC  6ED9               	movwf	fsr2l,c
 33285  014CFE  0EFF               	movlw	255
 33286  014D00  20E2               	addwfc	fsr1h,w,c
 33287  014D02  6EDA               	movwf	fsr2h,c
 33288  014D04  50DF               	movf	indf2,w,c
 33289  014D06  6E0C               	movwf	(btemp+11)^0,c
 33290                           
 33291                           ;stkvar	_a @ sp[(-13)+-8]
 33292  014D08  0EEC               	movlw	236
 33293  014D0A  24E1               	addwf	fsr1l,w,c
 33294  014D0C  6ED9               	movwf	fsr2l,c
 33295  014D0E  0EFF               	movlw	255
 33296  014D10  20E2               	addwfc	fsr1h,w,c
 33297  014D12  6EDA               	movwf	fsr2h,c
 33298  014D14  50DF               	movf	indf2,w,c
 33299  014D16  020C               	mulwf	(btemp+11)^0,c
 33300                           
 33301                           ;stkvar	_temp @ sp[(-13)+8]
 33302  014D18  0EFB               	movlw	-5
 33303  014D1A  006F FFCF FFE3     	movff	prodl,plusw1
 33304  014D20  0EFC               	movlw	-4
 33305  014D22  006F FFD3 FFE3     	movff	prodh,plusw1
 33306                           
 33307                           ;stkvar	_grs @ sp[(-13)+4]
 33308  014D28  50E1               	movf	fsr1l,w,c
 33309  014D2A  0FF7               	addlw	-9
 33310  014D2C  6ED9               	movwf	fsr2l,c
 33311  014D2E  50E2               	movf	fsr1h,w,c
 33312  014D30  6EDA               	movwf	fsr2h,c
 33313  014D32  0EFF               	movlw	255
 33314  014D34  22DA               	addwfc	fsr2h,f,c
 33315                           
 33316                           ;stkvar	_temp @ sp[(-13)+8]
 33317  014D36  0EFB               	movlw	-5
 33318  014D38  50E3               	movf	plusw1,w,c
 33319  014D3A  26DE               	addwf	postinc2,f,c
 33320  014D3C  0E00               	movlw	0
 33321  014D3E  22DE               	addwfc	postinc2,f,c
 33322  014D40  22DE               	addwfc	postinc2,f,c
 33323  014D42  22DE               	addwfc	postinc2,f,c
 33324                           
 33325                           ;stkvar	_prod @ sp[(-13)+0]
 33326  014D44  50E1               	movf	fsr1l,w,c
 33327  014D46  0FF3               	addlw	-13
 33328  014D48  6ED9               	movwf	fsr2l,c
 33329  014D4A  50E2               	movf	fsr1h,w,c
 33330  014D4C  6EDA               	movwf	fsr2h,c
 33331  014D4E  0EFF               	movlw	255
 33332  014D50  22DA               	addwfc	fsr2h,f,c
 33333                           
 33334                           ;stkvar	_temp @ sp[(-13)+8]
 33335  014D52  0EFC               	movlw	252
 33336  014D54  24E1               	addwf	fsr1l,w,c
 33337  014D56  6EE9               	movwf	fsr0l,c
 33338  014D58  0EFF               	movlw	255
 33339  014D5A  20E2               	addwfc	fsr1h,w,c
 33340  014D5C  6EEA               	movwf	fsr0h,c
 33341  014D5E  50EF               	movf	indf0,w,c
 33342  014D60  26DE               	addwf	postinc2,f,c
 33343  014D62  0E00               	movlw	0
 33344  014D64  22DE               	addwfc	postinc2,f,c
 33345  014D66  22DE               	addwfc	postinc2,f,c
 33346  014D68  22DE               	addwfc	postinc2,f,c
 33347                           
 33348                           ;stkvar	_b @ sp[(-13)+-4]
 33349  014D6A  0EF1               	movlw	241
 33350  014D6C  24E1               	addwf	fsr1l,w,c
 33351  014D6E  6ED9               	movwf	fsr2l,c
 33352  014D70  0EFF               	movlw	255
 33353  014D72  20E2               	addwfc	fsr1h,w,c
 33354  014D74  6EDA               	movwf	fsr2h,c
 33355  014D76  50DF               	movf	indf2,w,c
 33356  014D78  6E0C               	movwf	(btemp+11)^0,c
 33357                           
 33358                           ;stkvar	_a @ sp[(-13)+-8]
 33359  014D7A  0EEB               	movlw	-21
 33360  014D7C  50E3               	movf	plusw1,w,c
 33361  014D7E  020C               	mulwf	(btemp+11)^0,c
 33362                           
 33363                           ;stkvar	_temp @ sp[(-13)+8]
 33364  014D80  0EFB               	movlw	-5
 33365  014D82  006F FFCF FFE3     	movff	prodl,plusw1
 33366  014D88  0EFC               	movlw	-4
 33367  014D8A  006F FFD3 FFE3     	movff	prodh,plusw1
 33368                           
 33369                           ;stkvar	_grs @ sp[(-13)+4]
 33370  014D90  50E1               	movf	fsr1l,w,c
 33371  014D92  0FF7               	addlw	-9
 33372  014D94  6ED9               	movwf	fsr2l,c
 33373  014D96  50E2               	movf	fsr1h,w,c
 33374  014D98  6EDA               	movwf	fsr2h,c
 33375  014D9A  0EFF               	movlw	255
 33376  014D9C  22DA               	addwfc	fsr2h,f,c
 33377                           
 33378                           ;stkvar	_temp @ sp[(-13)+8]
 33379  014D9E  0EFB               	movlw	-5
 33380  014DA0  50E3               	movf	plusw1,w,c
 33381  014DA2  26DE               	addwf	postinc2,f,c
 33382  014DA4  0E00               	movlw	0
 33383  014DA6  22DE               	addwfc	postinc2,f,c
 33384  014DA8  22DE               	addwfc	postinc2,f,c
 33385  014DAA  22DE               	addwfc	postinc2,f,c
 33386                           
 33387                           ;stkvar	_prod @ sp[(-13)+0]
 33388  014DAC  50E1               	movf	fsr1l,w,c
 33389  014DAE  0FF3               	addlw	-13
 33390  014DB0  6ED9               	movwf	fsr2l,c
 33391  014DB2  50E2               	movf	fsr1h,w,c
 33392  014DB4  6EDA               	movwf	fsr2h,c
 33393  014DB6  0EFF               	movlw	255
 33394  014DB8  22DA               	addwfc	fsr2h,f,c
 33395                           
 33396                           ;stkvar	_temp @ sp[(-13)+8]
 33397  014DBA  0EFC               	movlw	252
 33398  014DBC  24E1               	addwf	fsr1l,w,c
 33399  014DBE  6EE9               	movwf	fsr0l,c
 33400  014DC0  0EFF               	movlw	255
 33401  014DC2  20E2               	addwfc	fsr1h,w,c
 33402  014DC4  6EEA               	movwf	fsr0h,c
 33403  014DC6  50EF               	movf	indf0,w,c
 33404  014DC8  26DE               	addwf	postinc2,f,c
 33405  014DCA  0E00               	movlw	0
 33406  014DCC  22DE               	addwfc	postinc2,f,c
 33407  014DCE  22DE               	addwfc	postinc2,f,c
 33408  014DD0  22DE               	addwfc	postinc2,f,c
 33409                           
 33410                           ;stkvar	_grs @ sp[(-13)+4]
 33411  014DD2  50E1               	movf	fsr1l,w,c
 33412  014DD4  0FF7               	addlw	-9
 33413  014DD6  6ED9               	movwf	fsr2l,c
 33414  014DD8  50E2               	movf	fsr1h,w,c
 33415  014DDA  6EDA               	movwf	fsr2h,c
 33416  014DDC  0EFF               	movlw	255
 33417  014DDE  22DA               	addwfc	fsr2h,f,c
 33418  014DE0  0E08               	movlw	8
 33419  014DE2                     u7495:
 33420  014DE2  90D8               	bcf	status,0,c
 33421  014DE4  36DE               	rlcf	postinc2,f,c
 33422  014DE6  36DE               	rlcf	postinc2,f,c
 33423  014DE8  36DE               	rlcf	postinc2,f,c
 33424  014DEA  36DD               	rlcf	postdec2,f,c
 33425  014DEC  52DD               	movf	postdec2,f,c
 33426  014DEE  52DD               	movf	postdec2,f,c
 33427  014DF0  2EE8               	decfsz	wreg,f,c
 33428  014DF2  D7F7               	goto	u7495
 33429                           
 33430                           ;stkvar	_b @ sp[(-13)+-4]
 33431  014DF4  0EF0               	movlw	240
 33432  014DF6  24E1               	addwf	fsr1l,w,c
 33433  014DF8  6ED9               	movwf	fsr2l,c
 33434  014DFA  0EFF               	movlw	255
 33435  014DFC  20E2               	addwfc	fsr1h,w,c
 33436  014DFE  6EDA               	movwf	fsr2h,c
 33437  014E00  50DF               	movf	indf2,w,c
 33438  014E02  6E0C               	movwf	(btemp+11)^0,c
 33439                           
 33440                           ;stkvar	_a @ sp[(-13)+-8]
 33441  014E04  0EEB               	movlw	-21
 33442  014E06  50E3               	movf	plusw1,w,c
 33443  014E08  020C               	mulwf	(btemp+11)^0,c
 33444                           
 33445                           ;stkvar	_temp @ sp[(-13)+8]
 33446  014E0A  0EFB               	movlw	-5
 33447  014E0C  006F FFCF FFE3     	movff	prodl,plusw1
 33448  014E12  0EFC               	movlw	-4
 33449  014E14  006F FFD3 FFE3     	movff	prodh,plusw1
 33450                           
 33451                           ;stkvar	_temp @ sp[(-13)+8]
 33452  014E1A  0EFB               	movlw	-5
 33453  014E1C  006F FF8C  F00B    	movff	plusw1,btemp+10
 33454  014E22  0EFC               	movlw	-4
 33455  014E24  006F FF8C  F00C    	movff	plusw1,btemp+11
 33456                           
 33457                           ;stkvar	_grs @ sp[(-13)+4]
 33458  014E2A  50E1               	movf	fsr1l,w,c
 33459  014E2C  0FF7               	addlw	-9
 33460  014E2E  6ED9               	movwf	fsr2l,c
 33461  014E30  50E2               	movf	fsr1h,w,c
 33462  014E32  6EDA               	movwf	fsr2h,c
 33463  014E34  0EFF               	movlw	255
 33464  014E36  22DA               	addwfc	fsr2h,f,c
 33465  014E38  500B               	movf	(btemp+10)^0,w,c
 33466  014E3A  26DE               	addwf	postinc2,f,c
 33467  014E3C  500C               	movf	(btemp+11)^0,w,c
 33468  014E3E  22DE               	addwfc	postinc2,f,c
 33469  014E40  0E00               	movlw	0
 33470  014E42  22DE               	addwfc	postinc2,f,c
 33471  014E44  22DE               	addwfc	postinc2,f,c
 33472                           
 33473                           ;stkvar	_b @ sp[(-13)+-4]
 33474  014E46  0EEF               	movlw	-17
 33475  014E48  006F FF8C  F00C    	movff	plusw1,btemp+11
 33476                           
 33477                           ;stkvar	_a @ sp[(-13)+-8]
 33478  014E4E  0EEC               	movlw	236
 33479  014E50  24E1               	addwf	fsr1l,w,c
 33480  014E52  6ED9               	movwf	fsr2l,c
 33481  014E54  0EFF               	movlw	255
 33482  014E56  20E2               	addwfc	fsr1h,w,c
 33483  014E58  6EDA               	movwf	fsr2h,c
 33484  014E5A  50DF               	movf	indf2,w,c
 33485  014E5C  020C               	mulwf	(btemp+11)^0,c
 33486                           
 33487                           ;stkvar	_temp @ sp[(-13)+8]
 33488  014E5E  0EFB               	movlw	-5
 33489  014E60  006F FFCF FFE3     	movff	prodl,plusw1
 33490  014E66  0EFC               	movlw	-4
 33491  014E68  006F FFD3 FFE3     	movff	prodh,plusw1
 33492                           
 33493                           ;stkvar	_temp @ sp[(-13)+8]
 33494  014E6E  0EFB               	movlw	-5
 33495  014E70  006F FF8C  F00B    	movff	plusw1,btemp+10
 33496  014E76  0EFC               	movlw	-4
 33497  014E78  006F FF8C  F00C    	movff	plusw1,btemp+11
 33498                           
 33499                           ;stkvar	_grs @ sp[(-13)+4]
 33500  014E7E  50E1               	movf	fsr1l,w,c
 33501  014E80  0FF7               	addlw	-9
 33502  014E82  6ED9               	movwf	fsr2l,c
 33503  014E84  50E2               	movf	fsr1h,w,c
 33504  014E86  6EDA               	movwf	fsr2h,c
 33505  014E88  0EFF               	movlw	255
 33506  014E8A  22DA               	addwfc	fsr2h,f,c
 33507  014E8C  500B               	movf	(btemp+10)^0,w,c
 33508  014E8E  26DE               	addwf	postinc2,f,c
 33509  014E90  500C               	movf	(btemp+11)^0,w,c
 33510  014E92  22DE               	addwfc	postinc2,f,c
 33511  014E94  0E00               	movlw	0
 33512  014E96  22DE               	addwfc	postinc2,f,c
 33513  014E98  22DE               	addwfc	postinc2,f,c
 33514                           
 33515                           ;stkvar	_grs @ sp[(-13)+4]
 33516  014E9A  50E1               	movf	fsr1l,w,c
 33517  014E9C  0FF7               	addlw	-9
 33518  014E9E  6ED9               	movwf	fsr2l,c
 33519  014EA0  50E2               	movf	fsr1h,w,c
 33520  014EA2  6EDA               	movwf	fsr2h,c
 33521  014EA4  0EFF               	movlw	255
 33522  014EA6  22DA               	addwfc	fsr2h,f,c
 33523  014EA8  0E08               	movlw	8
 33524  014EAA                     u7505:
 33525  014EAA  90D8               	bcf	status,0,c
 33526  014EAC  36DE               	rlcf	postinc2,f,c
 33527  014EAE  36DE               	rlcf	postinc2,f,c
 33528  014EB0  36DE               	rlcf	postinc2,f,c
 33529  014EB2  36DD               	rlcf	postdec2,f,c
 33530  014EB4  52DD               	movf	postdec2,f,c
 33531  014EB6  52DD               	movf	postdec2,f,c
 33532  014EB8  2EE8               	decfsz	wreg,f,c
 33533  014EBA  D7F7               	goto	u7505
 33534                           
 33535                           ;stkvar	_b @ sp[(-13)+-4]
 33536  014EBC  0EEF               	movlw	-17
 33537  014EBE  006F FF8C  F00C    	movff	plusw1,btemp+11
 33538                           
 33539                           ;stkvar	_a @ sp[(-13)+-8]
 33540  014EC4  0EEB               	movlw	-21
 33541  014EC6  50E3               	movf	plusw1,w,c
 33542  014EC8  020C               	mulwf	(btemp+11)^0,c
 33543                           
 33544                           ;stkvar	_temp @ sp[(-13)+8]
 33545  014ECA  0EFB               	movlw	-5
 33546  014ECC  006F FFCF FFE3     	movff	prodl,plusw1
 33547  014ED2  0EFC               	movlw	-4
 33548  014ED4  006F FFD3 FFE3     	movff	prodh,plusw1
 33549                           
 33550                           ;stkvar	_temp @ sp[(-13)+8]
 33551  014EDA  0EFB               	movlw	-5
 33552  014EDC  006F FF8C  F00B    	movff	plusw1,btemp+10
 33553  014EE2  0EFC               	movlw	-4
 33554  014EE4  006F FF8C  F00C    	movff	plusw1,btemp+11
 33555                           
 33556                           ;stkvar	_grs @ sp[(-13)+4]
 33557  014EEA  50E1               	movf	fsr1l,w,c
 33558  014EEC  0FF7               	addlw	-9
 33559  014EEE  6ED9               	movwf	fsr2l,c
 33560  014EF0  50E2               	movf	fsr1h,w,c
 33561  014EF2  6EDA               	movwf	fsr2h,c
 33562  014EF4  0EFF               	movlw	255
 33563  014EF6  22DA               	addwfc	fsr2h,f,c
 33564  014EF8  500B               	movf	(btemp+10)^0,w,c
 33565  014EFA  26DE               	addwf	postinc2,f,c
 33566  014EFC  500C               	movf	(btemp+11)^0,w,c
 33567  014EFE  22DE               	addwfc	postinc2,f,c
 33568  014F00  0E00               	movlw	0
 33569  014F02  22DE               	addwfc	postinc2,f,c
 33570  014F04  22DE               	addwfc	postinc2,f,c
 33571                           
 33572                           ;stkvar	_b @ sp[(-13)+-4]
 33573  014F06  0EF0               	movlw	240
 33574  014F08  24E1               	addwf	fsr1l,w,c
 33575  014F0A  6ED9               	movwf	fsr2l,c
 33576  014F0C  0EFF               	movlw	255
 33577  014F0E  20E2               	addwfc	fsr1h,w,c
 33578  014F10  6EDA               	movwf	fsr2h,c
 33579  014F12  50DF               	movf	indf2,w,c
 33580  014F14  6E0C               	movwf	(btemp+11)^0,c
 33581                           
 33582                           ;stkvar	_a @ sp[(-13)+-8]
 33583  014F16  0EED               	movlw	237
 33584  014F18  24E1               	addwf	fsr1l,w,c
 33585  014F1A  6ED9               	movwf	fsr2l,c
 33586  014F1C  0EFF               	movlw	255
 33587  014F1E  20E2               	addwfc	fsr1h,w,c
 33588  014F20  6EDA               	movwf	fsr2h,c
 33589  014F22  50DF               	movf	indf2,w,c
 33590  014F24  020C               	mulwf	(btemp+11)^0,c
 33591                           
 33592                           ;stkvar	_temp @ sp[(-13)+8]
 33593  014F26  0EFB               	movlw	-5
 33594  014F28  006F FFCF FFE3     	movff	prodl,plusw1
 33595  014F2E  0EFC               	movlw	-4
 33596  014F30  006F FFD3 FFE3     	movff	prodh,plusw1
 33597                           
 33598                           ;stkvar	_temp @ sp[(-13)+8]
 33599  014F36  0EFB               	movlw	-5
 33600  014F38  006F FF8C  F00B    	movff	plusw1,btemp+10
 33601  014F3E  0EFC               	movlw	-4
 33602  014F40  006F FF8C  F00C    	movff	plusw1,btemp+11
 33603                           
 33604                           ;stkvar	_prod @ sp[(-13)+0]
 33605  014F46  50E1               	movf	fsr1l,w,c
 33606  014F48  0FF3               	addlw	-13
 33607  014F4A  6ED9               	movwf	fsr2l,c
 33608  014F4C  50E2               	movf	fsr1h,w,c
 33609  014F4E  6EDA               	movwf	fsr2h,c
 33610  014F50  0EFF               	movlw	255
 33611  014F52  22DA               	addwfc	fsr2h,f,c
 33612  014F54  500B               	movf	(btemp+10)^0,w,c
 33613  014F56  26DE               	addwf	postinc2,f,c
 33614  014F58  500C               	movf	(btemp+11)^0,w,c
 33615  014F5A  22DE               	addwfc	postinc2,f,c
 33616  014F5C  0E00               	movlw	0
 33617  014F5E  22DE               	addwfc	postinc2,f,c
 33618  014F60  22DE               	addwfc	postinc2,f,c
 33619                           
 33620                           ;stkvar	_b @ sp[(-13)+-4]
 33621  014F62  0EF1               	movlw	241
 33622  014F64  24E1               	addwf	fsr1l,w,c
 33623  014F66  6ED9               	movwf	fsr2l,c
 33624  014F68  0EFF               	movlw	255
 33625  014F6A  20E2               	addwfc	fsr1h,w,c
 33626  014F6C  6EDA               	movwf	fsr2h,c
 33627  014F6E  50DF               	movf	indf2,w,c
 33628  014F70  6E0C               	movwf	(btemp+11)^0,c
 33629                           
 33630                           ;stkvar	_a @ sp[(-13)+-8]
 33631  014F72  0EEC               	movlw	236
 33632  014F74  24E1               	addwf	fsr1l,w,c
 33633  014F76  6ED9               	movwf	fsr2l,c
 33634  014F78  0EFF               	movlw	255
 33635  014F7A  20E2               	addwfc	fsr1h,w,c
 33636  014F7C  6EDA               	movwf	fsr2h,c
 33637  014F7E  50DF               	movf	indf2,w,c
 33638  014F80  020C               	mulwf	(btemp+11)^0,c
 33639                           
 33640                           ;stkvar	_temp @ sp[(-13)+8]
 33641  014F82  0EFB               	movlw	-5
 33642  014F84  006F FFCF FFE3     	movff	prodl,plusw1
 33643  014F8A  0EFC               	movlw	-4
 33644  014F8C  006F FFD3 FFE3     	movff	prodh,plusw1
 33645                           
 33646                           ;stkvar	_temp @ sp[(-13)+8]
 33647  014F92  0EFB               	movlw	-5
 33648  014F94  006F FF8C  F00B    	movff	plusw1,btemp+10
 33649  014F9A  0EFC               	movlw	-4
 33650  014F9C  006F FF8C  F00C    	movff	plusw1,btemp+11
 33651                           
 33652                           ;stkvar	_prod @ sp[(-13)+0]
 33653  014FA2  50E1               	movf	fsr1l,w,c
 33654  014FA4  0FF3               	addlw	-13
 33655  014FA6  6ED9               	movwf	fsr2l,c
 33656  014FA8  50E2               	movf	fsr1h,w,c
 33657  014FAA  6EDA               	movwf	fsr2h,c
 33658  014FAC  0EFF               	movlw	255
 33659  014FAE  22DA               	addwfc	fsr2h,f,c
 33660  014FB0  500B               	movf	(btemp+10)^0,w,c
 33661  014FB2  26DE               	addwf	postinc2,f,c
 33662  014FB4  500C               	movf	(btemp+11)^0,w,c
 33663  014FB6  22DE               	addwfc	postinc2,f,c
 33664  014FB8  0E00               	movlw	0
 33665  014FBA  22DE               	addwfc	postinc2,f,c
 33666  014FBC  22DE               	addwfc	postinc2,f,c
 33667                           
 33668                           ;stkvar	_b @ sp[(-13)+-4]
 33669  014FBE  0EF1               	movlw	241
 33670  014FC0  24E1               	addwf	fsr1l,w,c
 33671  014FC2  6ED9               	movwf	fsr2l,c
 33672  014FC4  0EFF               	movlw	255
 33673  014FC6  20E2               	addwfc	fsr1h,w,c
 33674  014FC8  6EDA               	movwf	fsr2h,c
 33675  014FCA  50DF               	movf	indf2,w,c
 33676  014FCC  6E0C               	movwf	(btemp+11)^0,c
 33677                           
 33678                           ;stkvar	_a @ sp[(-13)+-8]
 33679  014FCE  0EED               	movlw	237
 33680  014FD0  24E1               	addwf	fsr1l,w,c
 33681  014FD2  6ED9               	movwf	fsr2l,c
 33682  014FD4  0EFF               	movlw	255
 33683  014FD6  20E2               	addwfc	fsr1h,w,c
 33684  014FD8  6EDA               	movwf	fsr2h,c
 33685  014FDA  50DF               	movf	indf2,w,c
 33686  014FDC  020C               	mulwf	(btemp+11)^0,c
 33687                           
 33688                           ;stkvar	_temp @ sp[(-13)+8]
 33689  014FDE  0EFB               	movlw	-5
 33690  014FE0  006F FFCF FFE3     	movff	prodl,plusw1
 33691  014FE6  0EFC               	movlw	-4
 33692  014FE8  006F FFD3 FFE3     	movff	prodh,plusw1
 33693                           
 33694                           ;stkvar	_temp @ sp[(-13)+8]
 33695  014FEE  0EFB               	movlw	-5
 33696  014FF0  006F FF8C  F00B    	movff	plusw1,btemp+10
 33697  014FF6  0EFC               	movlw	-4
 33698  014FF8  006F FF8C  F00C    	movff	plusw1,btemp+11
 33699  014FFE  500B               	movf	(btemp+10)^0,w,c
 33700  015000  6E05               	movwf	(btemp+4)^0,c
 33701  015002  500C               	movf	(btemp+11)^0,w,c
 33702  015004  6E06               	movwf	(btemp+5)^0,c
 33703  015006  6A07               	clrf	(btemp+6)^0,c
 33704  015008  6A08               	clrf	(btemp+7)^0,c
 33705  01500A  0060  F01C  F008   	movff	btemp+6,btemp+7
 33706  015010  0060  F018  F007   	movff	btemp+5,btemp+6
 33707  015016  0060  F014  F006   	movff	btemp+4,btemp+5
 33708  01501C  6A05               	clrf	(btemp+4)^0,c
 33709                           
 33710                           ;stkvar	_prod @ sp[(-13)+0]
 33711  01501E  50E1               	movf	fsr1l,w,c
 33712  015020  0FF3               	addlw	-13
 33713  015022  6ED9               	movwf	fsr2l,c
 33714  015024  50E2               	movf	fsr1h,w,c
 33715  015026  6EDA               	movwf	fsr2h,c
 33716  015028  0EFF               	movlw	255
 33717  01502A  22DA               	addwfc	fsr2h,f,c
 33718  01502C  5005               	movf	(btemp+4)^0,w,c
 33719  01502E  26DE               	addwf	postinc2,f,c
 33720  015030  5006               	movf	(btemp+5)^0,w,c
 33721  015032  22DE               	addwfc	postinc2,f,c
 33722  015034  5007               	movf	(btemp+6)^0,w,c
 33723  015036  22DE               	addwfc	postinc2,f,c
 33724  015038  5008               	movf	(btemp+7)^0,w,c
 33725  01503A  22DE               	addwfc	postinc2,f,c
 33726                           
 33727                           ;stkvar	_prod @ sp[(-13)+0]
 33728  01503C  50E1               	movf	fsr1l,w,c
 33729  01503E  0FF3               	addlw	-13
 33730  015040  6ED9               	movwf	fsr2l,c
 33731  015042  50E2               	movf	fsr1h,w,c
 33732  015044  6EDA               	movwf	fsr2h,c
 33733  015046  0EFF               	movlw	255
 33734  015048  22DA               	addwfc	fsr2h,f,c
 33735                           
 33736                           ;stkvar	_grs @ sp[(-13)+4]
 33737  01504A  0EFA               	movlw	250
 33738  01504C  24E1               	addwf	fsr1l,w,c
 33739  01504E  6EE9               	movwf	fsr0l,c
 33740  015050  0EFF               	movlw	255
 33741  015052  20E2               	addwfc	fsr1h,w,c
 33742  015054  6EEA               	movwf	fsr0h,c
 33743  015056  50EF               	movf	indf0,w,c
 33744  015058  26DE               	addwf	postinc2,f,c
 33745  01505A  0E00               	movlw	0
 33746  01505C  22DE               	addwfc	postinc2,f,c
 33747  01505E  22DE               	addwfc	postinc2,f,c
 33748  015060  22DE               	addwfc	postinc2,f,c
 33749                           
 33750                           ;stkvar	_grs @ sp[(-13)+4]
 33751  015062  50E1               	movf	fsr1l,w,c
 33752  015064  0FF7               	addlw	-9
 33753  015066  6ED9               	movwf	fsr2l,c
 33754  015068  50E2               	movf	fsr1h,w,c
 33755  01506A  6EDA               	movwf	fsr2h,c
 33756  01506C  0EFF               	movlw	255
 33757  01506E  22DA               	addwfc	fsr2h,f,c
 33758  015070  0E08               	movlw	8
 33759  015072                     u7515:
 33760  015072  90D8               	bcf	status,0,c
 33761  015074  36DE               	rlcf	postinc2,f,c
 33762  015076  36DE               	rlcf	postinc2,f,c
 33763  015078  36DE               	rlcf	postinc2,f,c
 33764  01507A  36DD               	rlcf	postdec2,f,c
 33765  01507C  52DD               	movf	postdec2,f,c
 33766  01507E  52DD               	movf	postdec2,f,c
 33767  015080  2EE8               	decfsz	wreg,f,c
 33768  015082  D7F7               	goto	u7515
 33769  015084  0E82               	movlw	130
 33770  015086  6E0B               	movwf	(btemp+10)^0,c
 33771  015088  0EFF               	movlw	255
 33772  01508A  6E0C               	movwf	(btemp+11)^0,c
 33773                           
 33774                           ;stkvar	_bexp @ sp[(-13)+10]
 33775  01508C  0EFD               	movlw	-3
 33776  01508E  50E3               	movf	plusw1,w,c
 33777  015090  6E09               	movwf	(btemp+8)^0,c
 33778  015092  6A0A               	clrf	(btemp+9)^0,c
 33779                           
 33780                           ;stkvar	_aexp @ sp[(-13)+11]
 33781  015094  0EFE               	movlw	-2
 33782  015096  50E3               	movf	plusw1,w,c
 33783  015098  2609               	addwf	(btemp+8)^0,f,c
 33784  01509A  0E00               	movlw	0
 33785  01509C  220A               	addwfc	(btemp+9)^0,f,c
 33786  01509E  500B               	movf	(btemp+10)^0,w,c
 33787  0150A0  2609               	addwf	(btemp+8)^0,f,c
 33788  0150A2  500C               	movf	(btemp+11)^0,w,c
 33789  0150A4  220A               	addwfc	(btemp+9)^0,f,c
 33790                           
 33791                           ;stkvar	_temp @ sp[(-13)+8]
 33792  0150A6  0EFB               	movlw	-5
 33793  0150A8  0060  F027  FFE3   	movff	btemp+8,plusw1
 33794  0150AE  0EFC               	movlw	-4
 33795  0150B0  0060  F02B  FFE3   	movff	btemp+9,plusw1
 33796  0150B6  D021               	goto	l9304
 33797  0150B8                     l9294:
 33798                           
 33799                           ;stkvar	_prod @ sp[(-13)+0]
 33800  0150B8  90D8               	bcf	status,0,c
 33801  0150BA  0EF3               	movlw	-13
 33802  0150BC  36E3               	rlcf	plusw1,f,c
 33803  0150BE  0EF4               	movlw	-12
 33804  0150C0  36E3               	rlcf	plusw1,f,c
 33805  0150C2  0EF5               	movlw	-11
 33806  0150C4  36E3               	rlcf	plusw1,f,c
 33807  0150C6  0EF6               	movlw	-10
 33808  0150C8  36E3               	rlcf	plusw1,f,c
 33809                           
 33810                           ;stkvar	_grs @ sp[(-13)+4]
 33811  0150CA  0EFA               	movlw	-6
 33812  0150CC  AEE3               	btfss	plusw1,7,c
 33813  0150CE  D002               	goto	l9300
 33814                           
 33815                           ;stkvar	_prod @ sp[(-13)+0]
 33816  0150D0  0EF3               	movlw	-13
 33817  0150D2  80E3               	bsf	plusw1,0,c
 33818  0150D4                     l9300:
 33819                           
 33820                           ;stkvar	_grs @ sp[(-13)+4]
 33821  0150D4  90D8               	bcf	status,0,c
 33822  0150D6  0EF7               	movlw	-9
 33823  0150D8  36E3               	rlcf	plusw1,f,c
 33824  0150DA  0EF8               	movlw	-8
 33825  0150DC  36E3               	rlcf	plusw1,f,c
 33826  0150DE  0EF9               	movlw	-7
 33827  0150E0  36E3               	rlcf	plusw1,f,c
 33828  0150E2  0EFA               	movlw	-6
 33829  0150E4  36E3               	rlcf	plusw1,f,c
 33830                           
 33831                           ;stkvar	_temp @ sp[(-13)+8]
 33832  0150E6  50E1               	movf	fsr1l,w,c
 33833  0150E8  0FFB               	addlw	-5
 33834  0150EA  6ED9               	movwf	fsr2l,c
 33835  0150EC  50E2               	movf	fsr1h,w,c
 33836  0150EE  6EDA               	movwf	fsr2h,c
 33837  0150F0  0EFF               	movlw	255
 33838  0150F2  22DA               	addwfc	fsr2h,f,c
 33839  0150F4  06DE               	decf	postinc2,f,c
 33840  0150F6  0E00               	movlw	0
 33841  0150F8  5ADD               	subwfb	postdec2,f,c
 33842  0150FA                     l9304:
 33843                           
 33844                           ;stkvar	_prod @ sp[(-13)+0]
 33845  0150FA  0EF5               	movlw	-11
 33846  0150FC  AEE3               	btfss	plusw1,7,c
 33847  0150FE  D7DC               	goto	l9294
 33848                           
 33849                           ;stkvar	_aexp @ sp[(-13)+11]
 33850  015100  0EFE               	movlw	-2
 33851  015102  6AE3               	clrf	plusw1,c
 33852                           
 33853                           ;stkvar	_grs @ sp[(-13)+4]
 33854  015104  0EFA               	movlw	-6
 33855  015106  AEE3               	btfss	plusw1,7,c
 33856  015108  D020               	goto	l9318
 33857                           
 33858                           ;stkvar	_grs @ sp[(-13)+4]
 33859  01510A  50E1               	movf	fsr1l,w,c
 33860  01510C  0FF7               	addlw	-9
 33861  01510E  6ED9               	movwf	fsr2l,c
 33862  015110  50E2               	movf	fsr1h,w,c
 33863  015112  6EDA               	movwf	fsr2h,c
 33864  015114  0EFF               	movlw	255
 33865  015116  22DA               	addwfc	fsr2h,f,c
 33866  015118  0EFF               	movlw	255
 33867  01511A  14DE               	andwf	postinc2,w,c
 33868  01511C  6E09               	movwf	(btemp+8)^0,c
 33869  01511E  0EFF               	movlw	255
 33870  015120  14DE               	andwf	postinc2,w,c
 33871  015122  6E0A               	movwf	(btemp+9)^0,c
 33872  015124  0EFF               	movlw	255
 33873  015126  14DE               	andwf	postinc2,w,c
 33874  015128  6E0B               	movwf	(btemp+10)^0,c
 33875  01512A  0E7F               	movlw	127
 33876  01512C  14DE               	andwf	postinc2,w,c
 33877  01512E  6E0C               	movwf	(btemp+11)^0,c
 33878  015130  5009               	movf	(btemp+8)^0,w,c
 33879  015132  100A               	iorwf	(btemp+9)^0,w,c
 33880  015134  100B               	iorwf	(btemp+10)^0,w,c
 33881  015136  100C               	iorwf	(btemp+11)^0,w,c
 33882  015138  B4D8               	btfsc	status,2,c
 33883  01513A  D004               	goto	l9314
 33884  01513C                     u7550:
 33885                           
 33886                           ;stkvar	_aexp @ sp[(-13)+11]
 33887  01513C  0EFE               	movlw	-2
 33888  01513E  6AE3               	clrf	plusw1,c
 33889  015140  2AE3               	incf	plusw1,f,c
 33890  015142  D003               	goto	l9318
 33891  015144                     l9314:
 33892                           
 33893                           ;stkvar	_prod @ sp[(-13)+0]
 33894  015144  0EF3               	movlw	-13
 33895  015146  B0E3               	btfsc	plusw1,0,c
 33896  015148  D7F9               	goto	u7550
 33897  01514A                     l9318:
 33898                           
 33899                           ;stkvar	_aexp @ sp[(-13)+11]
 33900  01514A  0EFE               	movlw	-2
 33901  01514C  50E3               	movf	plusw1,w,c
 33902  01514E  B4D8               	btfsc	status,2,c
 33903  015150  D036               	goto	l9328
 33904                           
 33905                           ;stkvar	_prod @ sp[(-13)+0]
 33906  015152  50E1               	movf	fsr1l,w,c
 33907  015154  0FF3               	addlw	-13
 33908  015156  6ED9               	movwf	fsr2l,c
 33909  015158  50E2               	movf	fsr1h,w,c
 33910  01515A  6EDA               	movwf	fsr2h,c
 33911  01515C  0EFF               	movlw	255
 33912  01515E  22DA               	addwfc	fsr2h,f,c
 33913  015160  2ADE               	incf	postinc2,f,c
 33914  015162  0E00               	movlw	0
 33915  015164  22DE               	addwfc	postinc2,f,c
 33916  015166  22DE               	addwfc	postinc2,f,c
 33917  015168  22DE               	addwfc	postinc2,f,c
 33918                           
 33919                           ;stkvar	_prod @ sp[(-13)+0]
 33920  01516A  0EF6               	movlw	-10
 33921  01516C  A0E3               	btfss	plusw1,0,c
 33922  01516E  D027               	goto	l9328
 33923  015170  0E01               	movlw	1
 33924  015172  6E0C               	movwf	(btemp+11)^0,c
 33925                           
 33926                           ;stkvar	_prod @ sp[(-13)+0]
 33927  015174  50E1               	movf	fsr1l,w,c
 33928  015176  0FF3               	addlw	-13
 33929  015178  6ED9               	movwf	fsr2l,c
 33930  01517A  50E2               	movf	fsr1h,w,c
 33931  01517C  6EDA               	movwf	fsr2h,c
 33932  01517E  0EFF               	movlw	255
 33933  015180  22DA               	addwfc	fsr2h,f,c
 33934  015182  280C               	incf	(btemp+11)^0,w,c
 33935  015184  52DE               	movf	postinc2,f,c
 33936  015186  D008               	goto	u7590
 33937  015188                     u7595:
 33938  015188  52DE               	movf	postinc2,f,c
 33939  01518A  90D8               	bcf	status,0,c
 33940  01518C  BEDC               	btfsc	preinc2,7,c
 33941  01518E  80D8               	bsf	status,0,c
 33942  015190  32DD               	rrcf	postdec2,f,c
 33943  015192  32DD               	rrcf	postdec2,f,c
 33944  015194  32DD               	rrcf	postdec2,f,c
 33945  015196  32DE               	rrcf	postinc2,f,c
 33946  015198                     u7590:
 33947  015198  2EE8               	decfsz	wreg,f,c
 33948  01519A  D7F6               	goto	u7595
 33949                           
 33950                           ;stkvar	_temp @ sp[(-13)+8]
 33951  01519C  0EFB               	movlw	-5
 33952  01519E  50E3               	movf	plusw1,w,c
 33953  0151A0  0F01               	addlw	1
 33954  0151A2  6E01               	movwf	btemp^0,c
 33955  0151A4  0EFB               	movlw	-5
 33956  0151A6  0060  F007  FFE3   	movff	btemp,plusw1
 33957  0151AC  6A01               	clrf	btemp^0,c
 33958  0151AE  0EFC               	movlw	-4
 33959  0151B0  50E3               	movf	plusw1,w,c
 33960  0151B2  2001               	addwfc	btemp^0,w,c
 33961  0151B4  6E01               	movwf	btemp^0,c
 33962  0151B6  0EFC               	movlw	-4
 33963  0151B8  0060  F007  FFE3   	movff	btemp,plusw1
 33964  0151BE                     l9328:
 33965                           
 33966                           ;stkvar	_temp @ sp[(-13)+8]
 33967  0151BE  0EFC               	movlw	-4
 33968  0151C0  BEE3               	btfsc	plusw1,7,c
 33969  0151C2  D020               	goto	l9332
 33970  0151C4  0EFC               	movlw	-4
 33971  0151C6  50E3               	movf	plusw1,w,c
 33972  0151C8  E104               	bnz	u7600
 33973  0151CA  0EFB               	movlw	-5
 33974  0151CC  28E3               	incf	plusw1,w,c
 33975  0151CE  A0D8               	btfss	status,0,c
 33976  0151D0  D019               	goto	l9332
 33977  0151D2                     u7600:
 33978  0151D2  0E00               	movlw	0
 33979  0151D4  6E09               	movwf	(btemp+8)^0,c
 33980  0151D6  0E00               	movlw	0
 33981  0151D8  6E0A               	movwf	(btemp+9)^0,c
 33982  0151DA  0E80               	movlw	128
 33983  0151DC  6E0B               	movwf	(btemp+10)^0,c
 33984  0151DE  0E7F               	movlw	127
 33985  0151E0  6E0C               	movwf	(btemp+11)^0,c
 33986                           
 33987                           ;stkvar	_prod @ sp[(-13)+0]
 33988  0151E2  0EF3               	movlw	-13
 33989  0151E4  0060  F027  FFE3   	movff	btemp+8,plusw1
 33990  0151EA  0EF4               	movlw	-12
 33991  0151EC  0060  F02B  FFE3   	movff	btemp+9,plusw1
 33992  0151F2  0EF5               	movlw	-11
 33993  0151F4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 33994  0151FA  0EF6               	movlw	-10
 33995  0151FC  0060  F033  FFE3   	movff	btemp+11,plusw1
 33996  015202  D044               	goto	l9348
 33997  015204                     l9332:
 33998                           
 33999                           ;stkvar	_temp @ sp[(-13)+8]
 34000  015204  0EFC               	movlw	-4
 34001  015206  BEE3               	btfsc	plusw1,7,c
 34002  015208  D007               	goto	u7610
 34003  01520A  0EFC               	movlw	-4
 34004  01520C  50E3               	movf	plusw1,w,c
 34005  01520E  E10F               	bnz	l9338
 34006  015210  0EFB               	movlw	-5
 34007  015212  04E3               	decf	plusw1,w,c
 34008  015214  B0D8               	btfsc	status,0,c
 34009  015216  D00B               	goto	l9338
 34010  015218                     u7610:
 34011                           
 34012                           ;stkvar	_prod @ sp[(-13)+0]
 34013  015218  0EF3               	movlw	-13
 34014  01521A  6AE3               	clrf	plusw1,c
 34015  01521C  0EF4               	movlw	-12
 34016  01521E  6AE3               	clrf	plusw1,c
 34017  015220  0EF5               	movlw	-11
 34018  015222  6AE3               	clrf	plusw1,c
 34019  015224  0EF6               	movlw	-10
 34020  015226  6AE3               	clrf	plusw1,c
 34021                           
 34022                           ;stkvar	_sign @ sp[(-13)+12]
 34023  015228  0EFF               	movlw	-1
 34024  01522A  6AE3               	clrf	plusw1,c
 34025  01522C  D02F               	goto	l9348
 34026  01522E                     l9338:
 34027                           
 34028                           ;stkvar	_temp @ sp[(-13)+8]
 34029                           ;stkvar	_bexp @ sp[(-13)+10]
 34030  01522E  0EFB               	movlw	-5
 34031  015230  006F FF8C  F001    	movff	plusw1,btemp
 34032  015236  0EFD               	movlw	-3
 34033  015238  0060  F007  FFE3   	movff	btemp,plusw1
 34034                           
 34035                           ;stkvar	_prod @ sp[(-13)+0]
 34036  01523E  50E1               	movf	fsr1l,w,c
 34037  015240  0FF3               	addlw	-13
 34038  015242  6ED9               	movwf	fsr2l,c
 34039  015244  50E2               	movf	fsr1h,w,c
 34040  015246  6EDA               	movwf	fsr2h,c
 34041  015248  0EFF               	movlw	255
 34042  01524A  22DA               	addwfc	fsr2h,f,c
 34043  01524C  0EFF               	movlw	255
 34044  01524E  16DE               	andwf	postinc2,f,c
 34045  015250  0EFF               	movlw	255
 34046  015252  16DE               	andwf	postinc2,f,c
 34047  015254  0E7F               	movlw	127
 34048  015256  16DE               	andwf	postinc2,f,c
 34049  015258  0E00               	movlw	0
 34050  01525A  16DE               	andwf	postinc2,f,c
 34051                           
 34052                           ;stkvar	_bexp @ sp[(-13)+10]
 34053  01525C  0EFD               	movlw	-3
 34054  01525E  A0E3               	btfss	plusw1,0,c
 34055  015260  D008               	goto	l9346
 34056                           
 34057                           ;stkvar	_prod @ sp[(-13)+0]
 34058  015262  0EF5               	movlw	245
 34059  015264  24E1               	addwf	fsr1l,w,c
 34060  015266  6ED9               	movwf	fsr2l,c
 34061  015268  0EFF               	movlw	255
 34062  01526A  20E2               	addwfc	fsr1h,w,c
 34063  01526C  6EDA               	movwf	fsr2h,c
 34064  01526E  0E00               	movlw	0
 34065  015270  8EDB               	bsf	plusw2,7,c
 34066  015272                     l9346:
 34067                           
 34068                           ;stkvar	_prod @ sp[(-13)+0]
 34069  015272  0EF6               	movlw	246
 34070  015274  24E1               	addwf	fsr1l,w,c
 34071  015276  6ED9               	movwf	fsr2l,c
 34072  015278  0EFF               	movlw	255
 34073  01527A  20E2               	addwfc	fsr1h,w,c
 34074  01527C  6EDA               	movwf	fsr2h,c
 34075                           
 34076                           ;stkvar	_bexp @ sp[(-13)+10]
 34077  01527E  0EFD               	movlw	-3
 34078  015280  006F FF8C  F00C    	movff	plusw1,btemp+11
 34079  015286  90D8               	bcf	status,0,c
 34080  015288  300C               	rrcf	(btemp+11)^0,w,c
 34081  01528A  6EDF               	movwf	indf2,c
 34082  01528C                     l9348:
 34083                           
 34084                           ;stkvar	_sign @ sp[(-13)+12]
 34085  01528C  0EFF               	movlw	-1
 34086  01528E  006F FF8C  F00C    	movff	plusw1,btemp+11
 34087                           
 34088                           ;stkvar	_prod @ sp[(-13)+0]
 34089  015294  0EF6               	movlw	246
 34090  015296  24E1               	addwf	fsr1l,w,c
 34091  015298  6ED9               	movwf	fsr2l,c
 34092  01529A  0EFF               	movlw	255
 34093  01529C  20E2               	addwfc	fsr1h,w,c
 34094  01529E  6EDA               	movwf	fsr2h,c
 34095  0152A0  500C               	movf	(btemp+11)^0,w,c
 34096  0152A2  12DF               	iorwf	indf2,f,c
 34097                           
 34098                           ;stkvar	_prod @ sp[(-13)+0]
 34099  0152A4  0EF3               	movlw	-13
 34100  0152A6  006F FF8C  F001    	movff	plusw1,btemp
 34101  0152AC  0EF4               	movlw	-12
 34102  0152AE  006F FF8C  F002    	movff	plusw1,btemp+1
 34103  0152B4  0EF5               	movlw	-11
 34104  0152B6  006F FF8C  F003    	movff	plusw1,btemp+2
 34105  0152BC  0EF6               	movlw	-10
 34106  0152BE  006F FF8C  F004    	movff	plusw1,btemp+3
 34107  0152C4                     l3301:
 34108                           
 34109                           ; ___flmul: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 34110  0152C4  0EEB               	movlw	235
 34111  0152C6  26E1               	addwf	fsr1l,f,c
 34112  0152C8  0EFF               	movlw	255
 34113  0152CA  22E2               	addwfc	fsr1h,f,c
 34114  0152CC  0012               	return		;funcret
 34115  0152CE                     __end_of___flmul:
 34116                           	opt callstack 0
 34117                           
 34118 ;; *************** function _SYSTEM_Initialize *****************
 34119 ;; Defined at:
 34120 ;;		line 50 in file "mcc_generated_files/mcc.c"
 34121 ;; Parameters:    Size  Location     Type
 34122 ;;		None
 34123 ;; Auto vars:     Size  Location     Type
 34124 ;;		None
 34125 ;; Return value:  Size  Location     Type
 34126 ;;                  1  [STACK] void 
 34127 ;; Registers used:
 34128 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 34129 ;; Tracked objects:
 34130 ;;		On entry : 0/0
 34131 ;;		On exit  : 3F/3C
 34132 ;;		Unchanged: 0/0
 34133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34134 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34135 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34137 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34138 ;;Total ram usage:        0 bytes
 34139 ;; Hardware stack levels used:    1
 34140 ;; Hardware stack levels required when called:   17
 34141 ;; This function calls:
 34142 ;;		_ADCC_Initialize
 34143 ;;		_CLKREF_Initialize
 34144 ;;		_CRC_Initialize
 34145 ;;		_DMA1_Initialize
 34146 ;;		_DMA2_Initialize
 34147 ;;		_EXT_INT_Initialize
 34148 ;;		_FVR_Initialize
 34149 ;;		_INTERRUPT_Initialize
 34150 ;;		_OSCILLATOR_Initialize
 34151 ;;		_PIN_MANAGER_Initialize
 34152 ;;		_PMD_Initialize
 34153 ;;		_PWM8_Initialize
 34154 ;;		_SPI1_Initialize
 34155 ;;		_TMR2_Initialize
 34156 ;;		_TMR3_Initialize
 34157 ;;		_TMR5_Initialize
 34158 ;;		_TMR6_Initialize
 34159 ;;		_UART1_Initialize
 34160 ;;		_UART2_Initialize
 34161 ;; This function is called by:
 34162 ;;		_main
 34163 ;; This function uses a reentrant model
 34164 ;;
 34165                           
 34166                           	psect	text130
 34167  01CC8E                     __ptext130:
 34168                           	opt callstack 0
 34169  01CC8E                     _SYSTEM_Initialize:
 34170                           	opt callstack 13
 34171                           
 34172                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 34173                           
 34174                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34175                           ;incstack = 0
 34176  01CC8E  ECF7  F0E3         	call	_INTERRUPT_Initialize	;wreg free
 34177                           
 34178                           ; BSR set to: 57
 34179                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 34180  01CC92  EC18  F0ED         	call	_PMD_Initialize	;wreg free
 34181                           
 34182                           ; BSR set to: 57
 34183                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 34184  01CC96  ECCF  F0E0         	call	_PIN_MANAGER_Initialize	;wreg free
 34185                           
 34186                           ; BSR set to: 58
 34187                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 34188  01CC9A  EC0D  F0ED         	call	_OSCILLATOR_Initialize	;wreg free
 34189                           
 34190                           ; BSR set to: 57
 34191                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
 34192  01CC9E  ECB2  F0ED         	call	_FVR_Initialize	;wreg free
 34193                           
 34194                           ; BSR set to: 62
 34195                           ;mcc_generated_files/mcc.c: 57:     CRC_Initialize();
 34196  01CCA2  EC18  F0E1         	call	_CRC_Initialize	;wreg free
 34197                           
 34198                           ; BSR set to: 0
 34199                           ;mcc_generated_files/mcc.c: 58:     ADCC_Initialize();
 34200  01CCA6  EC58  F0E3         	call	_ADCC_Initialize	;wreg free
 34201                           
 34202                           ;mcc_generated_files/mcc.c: 59:     PWM8_Initialize();
 34203  01CCAA  EC02  F0ED         	call	_PWM8_Initialize	;wreg free
 34204                           
 34205                           ; BSR set to: 63
 34206                           ;mcc_generated_files/mcc.c: 60:     TMR2_Initialize();
 34207  01CCAE  ECEB  F0EC         	call	_TMR2_Initialize	;wreg free
 34208                           
 34209                           ; BSR set to: 57
 34210                           ;mcc_generated_files/mcc.c: 61:     EXT_INT_Initialize();
 34211  01CCB2  EC8B  F0E9         	call	_EXT_INT_Initialize	;wreg free
 34212                           
 34213                           ; BSR set to: 57
 34214                           ;mcc_generated_files/mcc.c: 62:     TMR6_Initialize();
 34215  01CCB6  EC78  F0EA         	call	_TMR6_Initialize	;wreg free
 34216                           
 34217                           ;mcc_generated_files/mcc.c: 63:     TMR3_Initialize();
 34218  01CCBA  EC26  F0E7         	call	_TMR3_Initialize	;wreg free
 34219                           
 34220                           ;mcc_generated_files/mcc.c: 64:     TMR5_Initialize();
 34221  01CCBE  EC02  F0E7         	call	_TMR5_Initialize	;wreg free
 34222                           
 34223                           ;mcc_generated_files/mcc.c: 65:     UART1_Initialize();
 34224  01CCC2  ECDE  F0E6         	call	_UART1_Initialize	;wreg free
 34225                           
 34226                           ; BSR set to: 57
 34227                           ;mcc_generated_files/mcc.c: 66:     UART2_Initialize();
 34228  01CCC6  ECBE  F0E4         	call	_UART2_Initialize	;wreg free
 34229                           
 34230                           ; BSR set to: 57
 34231                           ;mcc_generated_files/mcc.c: 67:     SPI1_Initialize();
 34232  01CCCA  ECF7  F0EC         	call	_SPI1_Initialize	;wreg free
 34233                           
 34234                           ; BSR set to: 61
 34235                           ;mcc_generated_files/mcc.c: 68:     DMA2_Initialize();
 34236  01CCCE  EC76  F0E5         	call	_DMA2_Initialize	;wreg free
 34237                           
 34238                           ; BSR set to: 59
 34239                           ;mcc_generated_files/mcc.c: 69:     DMA1_Initialize();
 34240  01CCD2  EC23  F0E3         	call	_DMA1_Initialize	;wreg free
 34241                           
 34242                           ; BSR set to: 59
 34243                           ;mcc_generated_files/mcc.c: 70:     CLKREF_Initialize();
 34244  01CCD6  EC81  F0ED         	call	_CLKREF_Initialize	;wreg free
 34245                           
 34246                           ; BSR set to: 60
 34247                           ; _SYSTEM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 34248  01CCDA  0012               	return		;funcret
 34249  01CCDC                     __end_of_SYSTEM_Initialize:
 34250                           	opt callstack 0
 34251                           
 34252 ;; *************** function _UART2_Initialize *****************
 34253 ;; Defined at:
 34254 ;;		line 78 in file "mcc_generated_files/uart2.c"
 34255 ;; Parameters:    Size  Location     Type
 34256 ;;		None
 34257 ;; Auto vars:     Size  Location     Type
 34258 ;;		None
 34259 ;; Return value:  Size  Location     Type
 34260 ;;                  1  [STACK] void 
 34261 ;; Registers used:
 34262 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 34263 ;; Tracked objects:
 34264 ;;		On entry : 3F/39
 34265 ;;		On exit  : 3F/39
 34266 ;;		Unchanged: 0/0
 34267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34268 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34269 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34270 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34271 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34272 ;;Total ram usage:        0 bytes
 34273 ;; Hardware stack levels used:    1
 34274 ;; Hardware stack levels required when called:   16
 34275 ;; This function calls:
 34276 ;;		_UART2_SetRxInterruptHandler
 34277 ;;		_UART2_SetTxInterruptHandler
 34278 ;; This function is called by:
 34279 ;;		_SYSTEM_Initialize
 34280 ;; This function uses a reentrant model
 34281 ;;
 34282                           
 34283                           	psect	text131
 34284  01C97C                     __ptext131:
 34285                           	opt callstack 0
 34286  01C97C                     _UART2_Initialize:
 34287                           	opt callstack 13
 34288                           
 34289                           ;mcc_generated_files/uart2.c: 81:     PIE6bits.U2RXIE = 0;
 34290                           
 34291                           ; BSR set to: 60
 34292                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34293                           ;incstack = 0
 34294  01C97C  0139               	movlb	57	; () banked
 34295  01C97E  9596               	bcf	150,2,b	;volatile
 34296                           
 34297                           ; BSR set to: 57
 34298                           ;mcc_generated_files/uart2.c: 82:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
 34299  01C980  0ED2               	movlw	low _UART2_Receive_ISR
 34300  01C982  6EE6               	movwf	postinc1,c
 34301  01C984  0ED8               	movlw	high _UART2_Receive_ISR
 34302  01C986  6EE6               	movwf	postinc1,c
 34303  01C988  0E01               	movlw	low (_UART2_Receive_ISR shr (0+16))
 34304  01C98A  6EE6               	movwf	postinc1,c
 34305  01C98C  ECC9  F0EA         	call	_UART2_SetRxInterruptHandler	;wreg free
 34306                           
 34307                           ;mcc_generated_files/uart2.c: 83:     PIE6bits.U2TXIE = 0;
 34308  01C990  0139               	movlb	57	; () banked
 34309  01C992  9796               	bcf	150,3,b	;volatile
 34310                           
 34311                           ;mcc_generated_files/uart2.c: 84:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
 34312  01C994  0EC4               	movlw	low _UART2_Transmit_ISR
 34313  01C996  6EE6               	movwf	postinc1,c
 34314  01C998  0ED4               	movlw	high _UART2_Transmit_ISR
 34315  01C99A  6EE6               	movwf	postinc1,c
 34316  01C99C  0E01               	movlw	low (_UART2_Transmit_ISR shr (0+16))
 34317  01C99E  6EE6               	movwf	postinc1,c
 34318  01C9A0  ECB5  F0EA         	call	_UART2_SetTxInterruptHandler	;wreg free
 34319                           
 34320                           ;mcc_generated_files/uart2.c: 89:     U2P1L = 0x00;
 34321  01C9A4  013D               	movlb	61	; () banked
 34322  01C9A6  6BD4               	clrf	212,b	;volatile
 34323                           
 34324                           ; BSR set to: 61
 34325                           ;mcc_generated_files/uart2.c: 92:     U2P2L = 0x00;
 34326  01C9A8  6BD6               	clrf	214,b	;volatile
 34327                           
 34328                           ; BSR set to: 61
 34329                           ;mcc_generated_files/uart2.c: 95:     U2P3L = 0x00;
 34330  01C9AA  6BD8               	clrf	216,b	;volatile
 34331                           
 34332                           ; BSR set to: 61
 34333                           ;mcc_generated_files/uart2.c: 98:     U2CON0 = 0xB0;
 34334  01C9AC  0EB0               	movlw	176
 34335  01C9AE  6FDA               	movwf	218,b	;volatile
 34336                           
 34337                           ; BSR set to: 61
 34338                           ;mcc_generated_files/uart2.c: 101:     U2CON1 = 0x80;
 34339  01C9B0  0E80               	movlw	128
 34340  01C9B2  6FDB               	movwf	219,b	;volatile
 34341                           
 34342                           ; BSR set to: 61
 34343                           ;mcc_generated_files/uart2.c: 104:     U2CON2 = 0x00;
 34344  01C9B4  6BDC               	clrf	220,b	;volatile
 34345                           
 34346                           ; BSR set to: 61
 34347                           ;mcc_generated_files/uart2.c: 107:     U2BRGL = 0x82;
 34348  01C9B6  0E82               	movlw	130
 34349  01C9B8  6FDD               	movwf	221,b	;volatile
 34350                           
 34351                           ; BSR set to: 61
 34352                           ;mcc_generated_files/uart2.c: 110:     U2BRGH = 0x06;
 34353  01C9BA  0E06               	movlw	6
 34354  01C9BC  6FDE               	movwf	222,b	;volatile
 34355                           
 34356                           ; BSR set to: 61
 34357                           ;mcc_generated_files/uart2.c: 113:     U2FIFO = 0x00;
 34358  01C9BE  6BDF               	clrf	223,b	;volatile
 34359                           
 34360                           ; BSR set to: 61
 34361                           ;mcc_generated_files/uart2.c: 116:     U2UIR = 0x00;
 34362  01C9C0  6BE0               	clrf	224,b	;volatile
 34363                           
 34364                           ; BSR set to: 61
 34365                           ;mcc_generated_files/uart2.c: 119:     U2ERRIR = 0x00;
 34366  01C9C2  6BE1               	clrf	225,b	;volatile
 34367                           
 34368                           ; BSR set to: 61
 34369                           ;mcc_generated_files/uart2.c: 122:     U2ERRIE = 0x00;
 34370  01C9C4  6BE2               	clrf	226,b	;volatile
 34371                           
 34372                           ; BSR set to: 61
 34373                           ;mcc_generated_files/uart2.c: 126:     uart2TxHead = 0;
 34374  01C9C6  0100               	movlb	0	; () banked
 34375  01C9C8  6BD2               	clrf	_uart2TxHead& (0+255),b	;volatile
 34376                           
 34377                           ; BSR set to: 0
 34378                           ;mcc_generated_files/uart2.c: 127:     uart2TxTail = 0;
 34379  01C9CA  6A46               	clrf	_uart2TxTail^0,c	;volatile
 34380                           
 34381                           ; BSR set to: 0
 34382                           ;mcc_generated_files/uart2.c: 128:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
 34383  01C9CC  0E40               	movlw	64
 34384  01C9CE  6E45               	movwf	_uart2TxBufferRemaining^0,c	;volatile
 34385                           
 34386                           ; BSR set to: 0
 34387                           ;mcc_generated_files/uart2.c: 129:     uart2RxHead = 0;
 34388  01C9D0  6A44               	clrf	_uart2RxHead^0,c	;volatile
 34389                           
 34390                           ; BSR set to: 0
 34391                           ;mcc_generated_files/uart2.c: 130:     uart2RxTail = 0;
 34392  01C9D2  6BD1               	clrf	_uart2RxTail& (0+255),b	;volatile
 34393                           
 34394                           ; BSR set to: 0
 34395                           ;mcc_generated_files/uart2.c: 131:     uart2RxCount = 0;
 34396  01C9D4  6BD0               	clrf	_uart2RxCount& (0+255),b	;volatile
 34397                           
 34398                           ; BSR set to: 0
 34399                           ;mcc_generated_files/uart2.c: 134:     PIE6bits.U2RXIE = 1;
 34400  01C9D6  0139               	movlb	57	; () banked
 34401  01C9D8  8596               	bsf	150,2,b	;volatile
 34402                           
 34403                           ; BSR set to: 57
 34404                           ; _UART2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 34405  01C9DA  0012               	return		;funcret
 34406  01C9DC                     __end_of_UART2_Initialize:
 34407                           	opt callstack 0
 34408                           
 34409 ;; *************** function _UART2_SetTxInterruptHandler *****************
 34410 ;; Defined at:
 34411 ;;		line 252 in file "mcc_generated_files/uart2.c"
 34412 ;; Parameters:    Size  Location     Type
 34413 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 34414 ;;		 -> UART2_Transmit_ISR(1), 
 34415 ;; Auto vars:     Size  Location     Type
 34416 ;;		None
 34417 ;; Return value:  Size  Location     Type
 34418 ;;                  1  [STACK] void 
 34419 ;; Registers used:
 34420 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 34421 ;; Tracked objects:
 34422 ;;		On entry : 3F/39
 34423 ;;		On exit  : 0/0
 34424 ;;		Unchanged: 0/0
 34425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34426 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34427 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34428 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34429 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34430 ;;Total ram usage:        0 bytes
 34431 ;; Hardware stack levels used:    1
 34432 ;; Hardware stack levels required when called:   15
 34433 ;; This function calls:
 34434 ;;		Nothing
 34435 ;; This function is called by:
 34436 ;;		_UART2_Initialize
 34437 ;; This function uses a reentrant model
 34438 ;;
 34439                           
 34440                           	psect	text132
 34441  01D56A                     __ptext132:
 34442                           	opt callstack 0
 34443  01D56A                     _UART2_SetTxInterruptHandler:
 34444                           	opt callstack 13
 34445                           
 34446                           ;mcc_generated_files/uart2.c: 253:     UART2_TxInterruptHandler = InterruptHandler;
 34447                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 34448                           
 34449                           ; BSR set to: 57
 34450                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34451                           ;incstack = 0
 34452  01D56A  50E1               	movf	fsr1l,w,c
 34453  01D56C  0FFD               	addlw	-3
 34454  01D56E  6ED9               	movwf	fsr2l,c
 34455  01D570  50E2               	movf	fsr1h,w,c
 34456  01D572  6EDA               	movwf	fsr2h,c
 34457  01D574  0EFF               	movlw	255
 34458  01D576  22DA               	addwfc	fsr2h,f,c
 34459  01D578  006F FF78  F0B4    	movff	postinc2,_UART2_TxInterruptHandler
 34460  01D57E  006F FF78  F0B5    	movff	postinc2,_UART2_TxInterruptHandler+1
 34461  01D584  006F FF74  F0B6    	movff	postdec2,_UART2_TxInterruptHandler+2
 34462                           
 34463                           ; _UART2_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 34464  01D58A  52E5               	movf	postdec1,f,c
 34465  01D58C  52E5               	movf	postdec1,f,c
 34466  01D58E  52E5               	movf	postdec1,f,c
 34467  01D590  0012               	return		;funcret
 34468  01D592                     __end_of_UART2_SetTxInterruptHandler:
 34469                           	opt callstack 0
 34470                           
 34471 ;; *************** function _UART2_SetRxInterruptHandler *****************
 34472 ;; Defined at:
 34473 ;;		line 248 in file "mcc_generated_files/uart2.c"
 34474 ;; Parameters:    Size  Location     Type
 34475 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 34476 ;;		 -> UART2_Receive_ISR(1), 
 34477 ;; Auto vars:     Size  Location     Type
 34478 ;;		None
 34479 ;; Return value:  Size  Location     Type
 34480 ;;                  1  [STACK] void 
 34481 ;; Registers used:
 34482 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 34483 ;; Tracked objects:
 34484 ;;		On entry : 3F/39
 34485 ;;		On exit  : 0/0
 34486 ;;		Unchanged: 0/0
 34487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34488 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34489 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34490 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34491 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34492 ;;Total ram usage:        0 bytes
 34493 ;; Hardware stack levels used:    1
 34494 ;; Hardware stack levels required when called:   15
 34495 ;; This function calls:
 34496 ;;		Nothing
 34497 ;; This function is called by:
 34498 ;;		_UART2_Initialize
 34499 ;; This function uses a reentrant model
 34500 ;;
 34501                           
 34502                           	psect	text133
 34503  01D592                     __ptext133:
 34504                           	opt callstack 0
 34505  01D592                     _UART2_SetRxInterruptHandler:
 34506                           	opt callstack 13
 34507                           
 34508                           ;mcc_generated_files/uart2.c: 249:     UART2_RxInterruptHandler = InterruptHandler;
 34509                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 34510                           
 34511                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34512                           ;incstack = 0
 34513  01D592  50E1               	movf	fsr1l,w,c
 34514  01D594  0FFD               	addlw	-3
 34515  01D596  6ED9               	movwf	fsr2l,c
 34516  01D598  50E2               	movf	fsr1h,w,c
 34517  01D59A  6EDA               	movwf	fsr2h,c
 34518  01D59C  0EFF               	movlw	255
 34519  01D59E  22DA               	addwfc	fsr2h,f,c
 34520  01D5A0  006F FF78  F0B7    	movff	postinc2,_UART2_RxInterruptHandler
 34521  01D5A6  006F FF78  F0B8    	movff	postinc2,_UART2_RxInterruptHandler+1
 34522  01D5AC  006F FF74  F0B9    	movff	postdec2,_UART2_RxInterruptHandler+2
 34523                           
 34524                           ; _UART2_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 34525  01D5B2  52E5               	movf	postdec1,f,c
 34526  01D5B4  52E5               	movf	postdec1,f,c
 34527  01D5B6  52E5               	movf	postdec1,f,c
 34528  01D5B8  0012               	return		;funcret
 34529  01D5BA                     __end_of_UART2_SetRxInterruptHandler:
 34530                           	opt callstack 0
 34531                           
 34532 ;; *************** function _UART1_Initialize *****************
 34533 ;; Defined at:
 34534 ;;		line 75 in file "mcc_generated_files/uart1.c"
 34535 ;; Parameters:    Size  Location     Type
 34536 ;;		None
 34537 ;; Auto vars:     Size  Location     Type
 34538 ;;		None
 34539 ;; Return value:  Size  Location     Type
 34540 ;;                  1  [STACK] void 
 34541 ;; Registers used:
 34542 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 34543 ;; Tracked objects:
 34544 ;;		On entry : 0/39
 34545 ;;		On exit  : 3F/39
 34546 ;;		Unchanged: 0/0
 34547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34548 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34549 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34550 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34551 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34552 ;;Total ram usage:        0 bytes
 34553 ;; Hardware stack levels used:    1
 34554 ;; Hardware stack levels required when called:   16
 34555 ;; This function calls:
 34556 ;;		_UART1_SetRxInterruptHandler
 34557 ;; This function is called by:
 34558 ;;		_SYSTEM_Initialize
 34559 ;; This function uses a reentrant model
 34560 ;;
 34561                           
 34562                           	psect	text134
 34563  01CDBC                     __ptext134:
 34564                           	opt callstack 0
 34565  01CDBC                     _UART1_Initialize:
 34566                           	opt callstack 13
 34567                           
 34568                           ;mcc_generated_files/uart1.c: 78:  PIE3bits.U1RXIE = 0;
 34569                           
 34570                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34571                           ;incstack = 0
 34572  01CDBC  0139               	movlb	57	; () banked
 34573  01CDBE  9793               	bcf	147,3,b	;volatile
 34574                           
 34575                           ; BSR set to: 57
 34576                           ;mcc_generated_files/uart1.c: 79:  UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 34577  01CDC0  0E6A               	movlw	low _UART1_Receive_ISR
 34578  01CDC2  6EE6               	movwf	postinc1,c
 34579  01CDC4  0ED9               	movlw	high _UART1_Receive_ISR
 34580  01CDC6  6EE6               	movwf	postinc1,c
 34581  01CDC8  0E01               	movlw	low (_UART1_Receive_ISR shr (0+16))
 34582  01CDCA  6EE6               	movwf	postinc1,c
 34583  01CDCC  ECDD  F0EA         	call	_UART1_SetRxInterruptHandler	;wreg free
 34584                           
 34585                           ;mcc_generated_files/uart1.c: 84:  U1P1L = 0x00;
 34586  01CDD0  013D               	movlb	61	; () banked
 34587  01CDD2  6BEC               	clrf	236,b	;volatile
 34588                           
 34589                           ; BSR set to: 61
 34590                           ;mcc_generated_files/uart1.c: 87:  U1P1H = 0x00;
 34591  01CDD4  6BED               	clrf	237,b	;volatile
 34592                           
 34593                           ; BSR set to: 61
 34594                           ;mcc_generated_files/uart1.c: 90:  U1P2L = 0x00;
 34595  01CDD6  6BEE               	clrf	238,b	;volatile
 34596                           
 34597                           ; BSR set to: 61
 34598                           ;mcc_generated_files/uart1.c: 93:  U1P2H = 0x00;
 34599  01CDD8  6BEF               	clrf	239,b	;volatile
 34600                           
 34601                           ; BSR set to: 61
 34602                           ;mcc_generated_files/uart1.c: 96:  U1P3L = 0x00;
 34603  01CDDA  6BF0               	clrf	240,b	;volatile
 34604                           
 34605                           ; BSR set to: 61
 34606                           ;mcc_generated_files/uart1.c: 99:  U1P3H = 0x00;
 34607  01CDDC  6BF1               	clrf	241,b	;volatile
 34608                           
 34609                           ; BSR set to: 61
 34610                           ;mcc_generated_files/uart1.c: 102:  U1CON0 = 0xB0;
 34611  01CDDE  0EB0               	movlw	176
 34612  01CDE0  6FF2               	movwf	242,b	;volatile
 34613                           
 34614                           ; BSR set to: 61
 34615                           ;mcc_generated_files/uart1.c: 105:  U1CON1 = 0x80;
 34616  01CDE2  0E80               	movlw	128
 34617  01CDE4  6FF3               	movwf	243,b	;volatile
 34618                           
 34619                           ; BSR set to: 61
 34620                           ;mcc_generated_files/uart1.c: 108:  U1CON2 = 0x00;
 34621  01CDE6  6BF4               	clrf	244,b	;volatile
 34622                           
 34623                           ; BSR set to: 61
 34624                           ;mcc_generated_files/uart1.c: 111:     U1BRGL = 0x8A;
 34625  01CDE8  0E8A               	movlw	138
 34626  01CDEA  6FF5               	movwf	245,b	;volatile
 34627                           
 34628                           ; BSR set to: 61
 34629                           ;mcc_generated_files/uart1.c: 114:     U1BRGH = 0x00;
 34630  01CDEC  6BF6               	clrf	246,b	;volatile
 34631                           
 34632                           ; BSR set to: 61
 34633                           ;mcc_generated_files/uart1.c: 117:  U1FIFO = 0x00;
 34634  01CDEE  6BF7               	clrf	247,b	;volatile
 34635                           
 34636                           ; BSR set to: 61
 34637                           ;mcc_generated_files/uart1.c: 120:  U1UIR = 0x00;
 34638  01CDF0  6BF8               	clrf	248,b	;volatile
 34639                           
 34640                           ; BSR set to: 61
 34641                           ;mcc_generated_files/uart1.c: 123:  U1ERRIR = 0x00;
 34642  01CDF2  6BF9               	clrf	249,b	;volatile
 34643                           
 34644                           ; BSR set to: 61
 34645                           ;mcc_generated_files/uart1.c: 126:  U1ERRIE = 0x00;
 34646  01CDF4  6BFA               	clrf	250,b	;volatile
 34647                           
 34648                           ; BSR set to: 61
 34649                           ;mcc_generated_files/uart1.c: 129:  uart1RxHead = 0;
 34650  01CDF6  6A47               	clrf	_uart1RxHead^0,c	;volatile
 34651                           
 34652                           ; BSR set to: 61
 34653                           ;mcc_generated_files/uart1.c: 130:  uart1RxTail = 0;
 34654  01CDF8  0100               	movlb	0	; () banked
 34655  01CDFA  6BD4               	clrf	_uart1RxTail& (0+255),b	;volatile
 34656                           
 34657                           ; BSR set to: 0
 34658                           ;mcc_generated_files/uart1.c: 131:  uart1RxCount = 0;
 34659  01CDFC  6BD3               	clrf	_uart1RxCount& (0+255),b	;volatile
 34660                           
 34661                           ; BSR set to: 0
 34662                           ;mcc_generated_files/uart1.c: 134:  PIE3bits.U1RXIE = 1;
 34663  01CDFE  0139               	movlb	57	; () banked
 34664  01CE00  8793               	bsf	147,3,b	;volatile
 34665                           
 34666                           ; BSR set to: 57
 34667                           ; _UART1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 34668  01CE02  0012               	return		;funcret
 34669  01CE04                     __end_of_UART1_Initialize:
 34670                           	opt callstack 0
 34671                           
 34672 ;; *************** function _UART1_SetRxInterruptHandler *****************
 34673 ;; Defined at:
 34674 ;;		line 207 in file "mcc_generated_files/uart1.c"
 34675 ;; Parameters:    Size  Location     Type
 34676 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 34677 ;;		 -> UART1_Receive_ISR(1), 
 34678 ;; Auto vars:     Size  Location     Type
 34679 ;;		None
 34680 ;; Return value:  Size  Location     Type
 34681 ;;                  1  [STACK] void 
 34682 ;; Registers used:
 34683 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 34684 ;; Tracked objects:
 34685 ;;		On entry : 3F/39
 34686 ;;		On exit  : 0/0
 34687 ;;		Unchanged: 0/0
 34688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34689 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34690 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34691 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34692 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34693 ;;Total ram usage:        0 bytes
 34694 ;; Hardware stack levels used:    1
 34695 ;; Hardware stack levels required when called:   15
 34696 ;; This function calls:
 34697 ;;		Nothing
 34698 ;; This function is called by:
 34699 ;;		_UART1_Initialize
 34700 ;; This function uses a reentrant model
 34701 ;;
 34702                           
 34703                           	psect	text135
 34704  01D5BA                     __ptext135:
 34705                           	opt callstack 0
 34706  01D5BA                     _UART1_SetRxInterruptHandler:
 34707                           	opt callstack 13
 34708                           
 34709                           ;mcc_generated_files/uart1.c: 208:  UART1_RxInterruptHandler = InterruptHandler;
 34710                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 34711                           
 34712                           ; BSR set to: 57
 34713                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34714                           ;incstack = 0
 34715  01D5BA  50E1               	movf	fsr1l,w,c
 34716  01D5BC  0FFD               	addlw	-3
 34717  01D5BE  6ED9               	movwf	fsr2l,c
 34718  01D5C0  50E2               	movf	fsr1h,w,c
 34719  01D5C2  6EDA               	movwf	fsr2h,c
 34720  01D5C4  0EFF               	movlw	255
 34721  01D5C6  22DA               	addwfc	fsr2h,f,c
 34722  01D5C8  006F FF78  F0B1    	movff	postinc2,_UART1_RxInterruptHandler
 34723  01D5CE  006F FF78  F0B2    	movff	postinc2,_UART1_RxInterruptHandler+1
 34724  01D5D4  006F FF74  F0B3    	movff	postdec2,_UART1_RxInterruptHandler+2
 34725                           
 34726                           ; _UART1_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 34727  01D5DA  52E5               	movf	postdec1,f,c
 34728  01D5DC  52E5               	movf	postdec1,f,c
 34729  01D5DE  52E5               	movf	postdec1,f,c
 34730  01D5E0  0012               	return		;funcret
 34731  01D5E2                     __end_of_UART1_SetRxInterruptHandler:
 34732                           	opt callstack 0
 34733                           
 34734 ;; *************** function _TMR6_Initialize *****************
 34735 ;; Defined at:
 34736 ;;		line 70 in file "mcc_generated_files/tmr6.c"
 34737 ;; Parameters:    Size  Location     Type
 34738 ;;		None
 34739 ;; Auto vars:     Size  Location     Type
 34740 ;;		None
 34741 ;; Return value:  Size  Location     Type
 34742 ;;                  1  [STACK] void 
 34743 ;; Registers used:
 34744 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 34745 ;; Tracked objects:
 34746 ;;		On entry : 3F/39
 34747 ;;		On exit  : 0/0
 34748 ;;		Unchanged: 0/0
 34749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34750 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34751 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34753 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34754 ;;Total ram usage:        0 bytes
 34755 ;; Hardware stack levels used:    1
 34756 ;; Hardware stack levels required when called:   16
 34757 ;; This function calls:
 34758 ;;		_TMR6_SetInterruptHandler
 34759 ;; This function is called by:
 34760 ;;		_SYSTEM_Initialize
 34761 ;; This function uses a reentrant model
 34762 ;;
 34763                           
 34764                           	psect	text136
 34765  01D4F0                     __ptext136:
 34766                           	opt callstack 0
 34767  01D4F0                     _TMR6_Initialize:
 34768                           	opt callstack 13
 34769                           
 34770                           ;mcc_generated_files/tmr6.c: 75:     T6CLKCON = 0x01;
 34771                           
 34772                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34773                           ;incstack = 0
 34774  01D4F0  0E01               	movlw	1
 34775  01D4F2  6E96               	movwf	150,c	;volatile
 34776                           
 34777                           ;mcc_generated_files/tmr6.c: 78:     T6HLT = 0x00;
 34778  01D4F4  6A95               	clrf	149,c	;volatile
 34779                           
 34780                           ;mcc_generated_files/tmr6.c: 81:     T6RST = 0x00;
 34781  01D4F6  6A97               	clrf	151,c	;volatile
 34782                           
 34783                           ;mcc_generated_files/tmr6.c: 84:     T6PR = 0x7C;
 34784  01D4F8  0E7C               	movlw	124
 34785  01D4FA  6E93               	movwf	147,c	;volatile
 34786                           
 34787                           ;mcc_generated_files/tmr6.c: 87:     T6TMR = 0x00;
 34788  01D4FC  6A92               	clrf	146,c	;volatile
 34789                           
 34790                           ;mcc_generated_files/tmr6.c: 90:     PIR9bits.TMR6IF = 0;
 34791  01D4FE  0139               	movlb	57	; () banked
 34792  01D500  91A9               	bcf	169,0,b	;volatile
 34793                           
 34794                           ; BSR set to: 57
 34795                           ;mcc_generated_files/tmr6.c: 93:     PIE9bits.TMR6IE = 1;
 34796  01D502  8199               	bsf	153,0,b	;volatile
 34797                           
 34798                           ; BSR set to: 57
 34799                           ;mcc_generated_files/tmr6.c: 96:     TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandl
      +                          er);
 34800  01D504  0EDC               	movlw	low _TMR6_DefaultInterruptHandler
 34801  01D506  6EE6               	movwf	postinc1,c
 34802  01D508  0ECC               	movlw	high _TMR6_DefaultInterruptHandler
 34803  01D50A  6EE6               	movwf	postinc1,c
 34804  01D50C  0E01               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 34805  01D50E  6EE6               	movwf	postinc1,c
 34806  01D510  ECF1  F0EA         	call	_TMR6_SetInterruptHandler	;wreg free
 34807                           
 34808                           ;mcc_generated_files/tmr6.c: 99:     T6CON = 0xE0;
 34809  01D514  0EE0               	movlw	224
 34810  01D516  6E94               	movwf	148,c	;volatile
 34811                           
 34812                           ; _TMR6_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 34813  01D518  0012               	return		;funcret
 34814  01D51A                     __end_of_TMR6_Initialize:
 34815                           	opt callstack 0
 34816                           
 34817 ;; *************** function _TMR6_SetInterruptHandler *****************
 34818 ;; Defined at:
 34819 ;;		line 192 in file "mcc_generated_files/tmr6.c"
 34820 ;; Parameters:    Size  Location     Type
 34821 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 34822 ;;		 -> TMR6_DefaultInterruptHandler(1), 
 34823 ;; Auto vars:     Size  Location     Type
 34824 ;;		None
 34825 ;; Return value:  Size  Location     Type
 34826 ;;                  1  [STACK] void 
 34827 ;; Registers used:
 34828 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 34829 ;; Tracked objects:
 34830 ;;		On entry : 3F/39
 34831 ;;		On exit  : 0/0
 34832 ;;		Unchanged: 0/0
 34833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34834 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34835 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34836 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34837 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34838 ;;Total ram usage:        0 bytes
 34839 ;; Hardware stack levels used:    1
 34840 ;; Hardware stack levels required when called:   15
 34841 ;; This function calls:
 34842 ;;		Nothing
 34843 ;; This function is called by:
 34844 ;;		_TMR6_Initialize
 34845 ;; This function uses a reentrant model
 34846 ;;
 34847                           
 34848                           	psect	text137
 34849  01D5E2                     __ptext137:
 34850                           	opt callstack 0
 34851  01D5E2                     _TMR6_SetInterruptHandler:
 34852                           	opt callstack 13
 34853                           
 34854                           ;mcc_generated_files/tmr6.c: 193:     TMR6_InterruptHandler = InterruptHandler;
 34855                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 34856                           
 34857                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34858                           ;incstack = 0
 34859  01D5E2  50E1               	movf	fsr1l,w,c
 34860  01D5E4  0FFD               	addlw	-3
 34861  01D5E6  6ED9               	movwf	fsr2l,c
 34862  01D5E8  50E2               	movf	fsr1h,w,c
 34863  01D5EA  6EDA               	movwf	fsr2h,c
 34864  01D5EC  0EFF               	movlw	255
 34865  01D5EE  22DA               	addwfc	fsr2h,f,c
 34866  01D5F0  006F FF78  F0A8    	movff	postinc2,_TMR6_InterruptHandler
 34867  01D5F6  006F FF78  F0A9    	movff	postinc2,_TMR6_InterruptHandler+1
 34868  01D5FC  006F FF74  F0AA    	movff	postdec2,_TMR6_InterruptHandler+2
 34869                           
 34870                           ; _TMR6_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 34871  01D602  52E5               	movf	postdec1,f,c
 34872  01D604  52E5               	movf	postdec1,f,c
 34873  01D606  52E5               	movf	postdec1,f,c
 34874  01D608  0012               	return		;funcret
 34875  01D60A                     __end_of_TMR6_SetInterruptHandler:
 34876                           	opt callstack 0
 34877                           
 34878 ;; *************** function _TMR5_Initialize *****************
 34879 ;; Defined at:
 34880 ;;		line 69 in file "mcc_generated_files/tmr5.c"
 34881 ;; Parameters:    Size  Location     Type
 34882 ;;		None
 34883 ;; Auto vars:     Size  Location     Type
 34884 ;;		None
 34885 ;; Return value:  Size  Location     Type
 34886 ;;                  1  [STACK] void 
 34887 ;; Registers used:
 34888 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 34889 ;; Tracked objects:
 34890 ;;		On entry : 0/39
 34891 ;;		On exit  : 0/0
 34892 ;;		Unchanged: 0/0
 34893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34894 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34895 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34896 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34897 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34898 ;;Total ram usage:        0 bytes
 34899 ;; Hardware stack levels used:    1
 34900 ;; Hardware stack levels required when called:   16
 34901 ;; This function calls:
 34902 ;;		_TMR5_SetInterruptHandler
 34903 ;; This function is called by:
 34904 ;;		_SYSTEM_Initialize
 34905 ;; This function uses a reentrant model
 34906 ;;
 34907                           
 34908                           	psect	text138
 34909  01CE04                     __ptext138:
 34910                           	opt callstack 0
 34911  01CE04                     _TMR5_Initialize:
 34912                           	opt callstack 13
 34913                           
 34914                           ;mcc_generated_files/tmr5.c: 74:  T5GCON = 0x00;
 34915                           
 34916                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34917                           ;incstack = 0
 34918  01CE04  6A9B               	clrf	155,c	;volatile
 34919                           
 34920                           ;mcc_generated_files/tmr5.c: 77:  T5GATE = 0x00;
 34921  01CE06  6A9C               	clrf	156,c	;volatile
 34922                           
 34923                           ;mcc_generated_files/tmr5.c: 80:  T5CLK = 0x01;
 34924  01CE08  0E01               	movlw	1
 34925  01CE0A  6E9D               	movwf	157,c	;volatile
 34926                           
 34927                           ;mcc_generated_files/tmr5.c: 83:  TMR5H = 0x63;
 34928  01CE0C  0E63               	movlw	99
 34929  01CE0E  6E99               	movwf	153,c	;volatile
 34930                           
 34931                           ;mcc_generated_files/tmr5.c: 86:  TMR5L = 0xC0;
 34932  01CE10  0EC0               	movlw	192
 34933  01CE12  6E98               	movwf	152,c	;volatile
 34934                           
 34935                           ;mcc_generated_files/tmr5.c: 89:  timer5ReloadVal = (uint16_t) ((TMR5H << 8) | TMR5L);
 34936  01CE14  5098               	movf	152,w,c	;volatile
 34937  01CE16  006F FE64  F001    	movff	16281,btemp	;volatile
 34938  01CE1C  6A02               	clrf	(btemp+1)^0,c
 34939  01CE1E  0060  F004  F002   	movff	btemp,btemp+1
 34940  01CE24  6A01               	clrf	btemp^0,c
 34941  01CE26  1001               	iorwf	btemp^0,w,c
 34942  01CE28  0100               	movlb	0	; () banked
 34943  01CE2A  6FC8               	movwf	_timer5ReloadVal& (0+255),b	;volatile
 34944  01CE2C  5002               	movf	(btemp+1)^0,w,c
 34945  01CE2E  6FC9               	movwf	(_timer5ReloadVal+1)& (0+255),b	;volatile
 34946                           
 34947                           ; BSR set to: 0
 34948                           ;mcc_generated_files/tmr5.c: 92:  PIR8bits.TMR5IF = 0;
 34949  01CE30  0139               	movlb	57	; () banked
 34950  01CE32  9DA8               	bcf	168,6,b	;volatile
 34951                           
 34952                           ; BSR set to: 57
 34953                           ;mcc_generated_files/tmr5.c: 95:  PIE8bits.TMR5IE = 1;
 34954  01CE34  8D98               	bsf	152,6,b	;volatile
 34955                           
 34956                           ; BSR set to: 57
 34957                           ;mcc_generated_files/tmr5.c: 98:  TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler)
      +                          ;
 34958  01CE36  0ED8               	movlw	low _TMR5_DefaultInterruptHandler
 34959  01CE38  6EE6               	movwf	postinc1,c
 34960  01CE3A  0ED1               	movlw	high _TMR5_DefaultInterruptHandler
 34961  01CE3C  6EE6               	movwf	postinc1,c
 34962  01CE3E  0E01               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 34963  01CE40  6EE6               	movwf	postinc1,c
 34964  01CE42  EC05  F0EB         	call	_TMR5_SetInterruptHandler	;wreg free
 34965                           
 34966                           ;mcc_generated_files/tmr5.c: 101:  T5CON = 0x31;
 34967  01CE46  0E31               	movlw	49
 34968  01CE48  6E9A               	movwf	154,c	;volatile
 34969                           
 34970                           ; _TMR5_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 34971  01CE4A  0012               	return		;funcret
 34972  01CE4C                     __end_of_TMR5_Initialize:
 34973                           	opt callstack 0
 34974                           
 34975 ;; *************** function _TMR5_SetInterruptHandler *****************
 34976 ;; Defined at:
 34977 ;;		line 192 in file "mcc_generated_files/tmr5.c"
 34978 ;; Parameters:    Size  Location     Type
 34979 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 34980 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 34981 ;; Auto vars:     Size  Location     Type
 34982 ;;		None
 34983 ;; Return value:  Size  Location     Type
 34984 ;;                  1  [STACK] void 
 34985 ;; Registers used:
 34986 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 34987 ;; Tracked objects:
 34988 ;;		On entry : 3F/39
 34989 ;;		On exit  : 0/0
 34990 ;;		Unchanged: 0/0
 34991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34992 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34993 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34994 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34995 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34996 ;;Total ram usage:        0 bytes
 34997 ;; Hardware stack levels used:    1
 34998 ;; Hardware stack levels required when called:   15
 34999 ;; This function calls:
 35000 ;;		Nothing
 35001 ;; This function is called by:
 35002 ;;		_TMR5_Initialize
 35003 ;; This function uses a reentrant model
 35004 ;;
 35005                           
 35006                           	psect	text139
 35007  01D60A                     __ptext139:
 35008                           	opt callstack 0
 35009  01D60A                     _TMR5_SetInterruptHandler:
 35010                           	opt callstack 13
 35011                           
 35012                           ;mcc_generated_files/tmr5.c: 192: void TMR5_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr5.c: 193: {;mcc_generated_files/tmr5.c: 194:  TMR5_Inter
      +                          ruptHandler = InterruptHandler;
 35013                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 35014                           
 35015                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35016                           ;incstack = 0
 35017  01D60A  50E1               	movf	fsr1l,w,c
 35018  01D60C  0FFD               	addlw	-3
 35019  01D60E  6ED9               	movwf	fsr2l,c
 35020  01D610  50E2               	movf	fsr1h,w,c
 35021  01D612  6EDA               	movwf	fsr2h,c
 35022  01D614  0EFF               	movlw	255
 35023  01D616  22DA               	addwfc	fsr2h,f,c
 35024  01D618  006F FF78  F0A5    	movff	postinc2,_TMR5_InterruptHandler
 35025  01D61E  006F FF78  F0A6    	movff	postinc2,_TMR5_InterruptHandler+1
 35026  01D624  006F FF74  F0A7    	movff	postdec2,_TMR5_InterruptHandler+2
 35027                           
 35028                           ; _TMR5_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 35029  01D62A  52E5               	movf	postdec1,f,c
 35030  01D62C  52E5               	movf	postdec1,f,c
 35031  01D62E  52E5               	movf	postdec1,f,c
 35032  01D630  0012               	return		;funcret
 35033  01D632                     __end_of_TMR5_SetInterruptHandler:
 35034                           	opt callstack 0
 35035                           
 35036 ;; *************** function _TMR3_Initialize *****************
 35037 ;; Defined at:
 35038 ;;		line 65 in file "mcc_generated_files/tmr3.c"
 35039 ;; Parameters:    Size  Location     Type
 35040 ;;		None
 35041 ;; Auto vars:     Size  Location     Type
 35042 ;;		None
 35043 ;; Return value:  Size  Location     Type
 35044 ;;                  1  [STACK] void 
 35045 ;; Registers used:
 35046 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 35047 ;; Tracked objects:
 35048 ;;		On entry : 0/39
 35049 ;;		On exit  : 0/0
 35050 ;;		Unchanged: 0/0
 35051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35052 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35053 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35054 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35055 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35056 ;;Total ram usage:        0 bytes
 35057 ;; Hardware stack levels used:    1
 35058 ;; Hardware stack levels required when called:   16
 35059 ;; This function calls:
 35060 ;;		_TMR3_SetInterruptHandler
 35061 ;; This function is called by:
 35062 ;;		_SYSTEM_Initialize
 35063 ;; This function uses a reentrant model
 35064 ;;
 35065                           
 35066                           	psect	text140
 35067  01CE4C                     __ptext140:
 35068                           	opt callstack 0
 35069  01CE4C                     _TMR3_Initialize:
 35070                           	opt callstack 13
 35071                           
 35072                           ;mcc_generated_files/tmr3.c: 70:     T3GCON = 0x00;
 35073                           
 35074                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35075                           ;incstack = 0
 35076  01CE4C  6AA7               	clrf	167,c	;volatile
 35077                           
 35078                           ;mcc_generated_files/tmr3.c: 73:     T3GATE = 0x00;
 35079  01CE4E  6AA8               	clrf	168,c	;volatile
 35080                           
 35081                           ;mcc_generated_files/tmr3.c: 76:     T3CLK = 0x01;
 35082  01CE50  0E01               	movlw	1
 35083  01CE52  6EA9               	movwf	169,c	;volatile
 35084                           
 35085                           ;mcc_generated_files/tmr3.c: 79:     TMR3H = 0x3C;
 35086  01CE54  0E3C               	movlw	60
 35087  01CE56  6EA5               	movwf	165,c	;volatile
 35088                           
 35089                           ;mcc_generated_files/tmr3.c: 82:     TMR3L = 0xB0;
 35090  01CE58  0EB0               	movlw	176
 35091  01CE5A  6EA4               	movwf	164,c	;volatile
 35092                           
 35093                           ;mcc_generated_files/tmr3.c: 85:     timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
 35094  01CE5C  50A4               	movf	164,w,c	;volatile
 35095  01CE5E  006F FE94  F001    	movff	16293,btemp	;volatile
 35096  01CE64  6A02               	clrf	(btemp+1)^0,c
 35097  01CE66  0060  F004  F002   	movff	btemp,btemp+1
 35098  01CE6C  6A01               	clrf	btemp^0,c
 35099  01CE6E  1001               	iorwf	btemp^0,w,c
 35100  01CE70  0100               	movlb	0	; () banked
 35101  01CE72  6FC4               	movwf	_timer3ReloadVal& (0+255),b	;volatile
 35102  01CE74  5002               	movf	(btemp+1)^0,w,c
 35103  01CE76  6FC5               	movwf	(_timer3ReloadVal+1)& (0+255),b	;volatile
 35104                           
 35105                           ; BSR set to: 0
 35106                           ;mcc_generated_files/tmr3.c: 88:     PIR6bits.TMR3IF = 0;
 35107  01CE78  0139               	movlb	57	; () banked
 35108  01CE7A  9DA6               	bcf	166,6,b	;volatile
 35109                           
 35110                           ; BSR set to: 57
 35111                           ;mcc_generated_files/tmr3.c: 91:     PIE6bits.TMR3IE = 1;
 35112  01CE7C  8D96               	bsf	150,6,b	;volatile
 35113                           
 35114                           ; BSR set to: 57
 35115                           ;mcc_generated_files/tmr3.c: 94:     TMR3_SetInterruptHandler(TMR3_DefaultInterruptHandl
      +                          er);
 35116  01CE7E  0E94               	movlw	low _TMR3_DefaultInterruptHandler
 35117  01CE80  6EE6               	movwf	postinc1,c
 35118  01CE82  0EDB               	movlw	high _TMR3_DefaultInterruptHandler
 35119  01CE84  6EE6               	movwf	postinc1,c
 35120  01CE86  0E01               	movlw	low (_TMR3_DefaultInterruptHandler shr (0+16))
 35121  01CE88  6EE6               	movwf	postinc1,c
 35122  01CE8A  EC19  F0EB         	call	_TMR3_SetInterruptHandler	;wreg free
 35123                           
 35124                           ;mcc_generated_files/tmr3.c: 97:     T3CON = 0x31;
 35125  01CE8E  0E31               	movlw	49
 35126  01CE90  6EA6               	movwf	166,c	;volatile
 35127                           
 35128                           ; _TMR3_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 35129  01CE92  0012               	return		;funcret
 35130  01CE94                     __end_of_TMR3_Initialize:
 35131                           	opt callstack 0
 35132                           
 35133 ;; *************** function _TMR3_SetInterruptHandler *****************
 35134 ;; Defined at:
 35135 ;;		line 193 in file "mcc_generated_files/tmr3.c"
 35136 ;; Parameters:    Size  Location     Type
 35137 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 35138 ;;		 -> calc_bsoc(1), TMR3_DefaultInterruptHandler(1), 
 35139 ;; Auto vars:     Size  Location     Type
 35140 ;;		None
 35141 ;; Return value:  Size  Location     Type
 35142 ;;                  1  [STACK] void 
 35143 ;; Registers used:
 35144 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 35145 ;; Tracked objects:
 35146 ;;		On entry : 0/1
 35147 ;;		On exit  : 0/0
 35148 ;;		Unchanged: 0/0
 35149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35150 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35151 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35152 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35153 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35154 ;;Total ram usage:        0 bytes
 35155 ;; Hardware stack levels used:    1
 35156 ;; Hardware stack levels required when called:   15
 35157 ;; This function calls:
 35158 ;;		Nothing
 35159 ;; This function is called by:
 35160 ;;		_TMR3_Initialize
 35161 ;;		_init_bsoc
 35162 ;; This function uses a reentrant model
 35163 ;;
 35164                           
 35165                           	psect	text141
 35166  01D632                     __ptext141:
 35167                           	opt callstack 0
 35168  01D632                     _TMR3_SetInterruptHandler:
 35169                           	opt callstack 14
 35170                           
 35171                           ;mcc_generated_files/tmr3.c: 194:     TMR3_InterruptHandler = InterruptHandler;
 35172                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 35173                           
 35174                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35175                           ;incstack = 0
 35176  01D632  50E1               	movf	fsr1l,w,c
 35177  01D634  0FFD               	addlw	-3
 35178  01D636  6ED9               	movwf	fsr2l,c
 35179  01D638  50E2               	movf	fsr1h,w,c
 35180  01D63A  6EDA               	movwf	fsr2h,c
 35181  01D63C  0EFF               	movlw	255
 35182  01D63E  22DA               	addwfc	fsr2h,f,c
 35183  01D640  006F FF78  F0A2    	movff	postinc2,_TMR3_InterruptHandler
 35184  01D646  006F FF78  F0A3    	movff	postinc2,_TMR3_InterruptHandler+1
 35185  01D64C  006F FF74  F0A4    	movff	postdec2,_TMR3_InterruptHandler+2
 35186                           
 35187                           ; _TMR3_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 35188  01D652  52E5               	movf	postdec1,f,c
 35189  01D654  52E5               	movf	postdec1,f,c
 35190  01D656  52E5               	movf	postdec1,f,c
 35191  01D658  0012               	return		;funcret
 35192  01D65A                     __end_of_TMR3_SetInterruptHandler:
 35193                           	opt callstack 0
 35194                           
 35195 ;; *************** function _TMR2_Initialize *****************
 35196 ;; Defined at:
 35197 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 35198 ;; Parameters:    Size  Location     Type
 35199 ;;		None
 35200 ;; Auto vars:     Size  Location     Type
 35201 ;;		None
 35202 ;; Return value:  Size  Location     Type
 35203 ;;                  1  [STACK] void 
 35204 ;; Registers used:
 35205 ;;		wreg, status,2
 35206 ;; Tracked objects:
 35207 ;;		On entry : 3F/3F
 35208 ;;		On exit  : 3F/39
 35209 ;;		Unchanged: 0/0
 35210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35211 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35212 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35214 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35215 ;;Total ram usage:        0 bytes
 35216 ;; Hardware stack levels used:    1
 35217 ;; Hardware stack levels required when called:   15
 35218 ;; This function calls:
 35219 ;;		Nothing
 35220 ;; This function is called by:
 35221 ;;		_SYSTEM_Initialize
 35222 ;; This function uses a reentrant model
 35223 ;;
 35224                           
 35225                           	psect	text142
 35226  01D9D6                     __ptext142:
 35227                           	opt callstack 0
 35228  01D9D6                     _TMR2_Initialize:
 35229                           	opt callstack 14
 35230                           
 35231                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
 35232                           
 35233                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35234                           ;incstack = 0
 35235  01D9D6  0E01               	movlw	1
 35236  01D9D8  6EAE               	movwf	174,c	;volatile
 35237                           
 35238                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 35239  01D9DA  6AAD               	clrf	173,c	;volatile
 35240                           
 35241                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 35242  01D9DC  6AAF               	clrf	175,c	;volatile
 35243                           
 35244                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0x63;
 35245  01D9DE  0E63               	movlw	99
 35246  01D9E0  6EAB               	movwf	171,c	;volatile
 35247                           
 35248                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 35249  01D9E2  6AAA               	clrf	170,c	;volatile
 35250                           
 35251                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 35252  01D9E4  0139               	movlb	57	; () banked
 35253  01D9E6  95A4               	bcf	164,2,b	;volatile
 35254                           
 35255                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xC0;
 35256  01D9E8  0EC0               	movlw	192
 35257  01D9EA  6EAC               	movwf	172,c	;volatile
 35258                           
 35259                           ; BSR set to: 57
 35260                           ; _TMR2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 35261  01D9EC  0012               	return		;funcret
 35262  01D9EE                     __end_of_TMR2_Initialize:
 35263                           	opt callstack 0
 35264                           
 35265 ;; *************** function _SPI1_Initialize *****************
 35266 ;; Defined at:
 35267 ;;		line 64 in file "mcc_generated_files/spi1.c"
 35268 ;; Parameters:    Size  Location     Type
 35269 ;;		None
 35270 ;; Auto vars:     Size  Location     Type
 35271 ;;		None
 35272 ;; Return value:  Size  Location     Type
 35273 ;;                  1  [STACK] void 
 35274 ;; Registers used:
 35275 ;;		wreg, status,2
 35276 ;; Tracked objects:
 35277 ;;		On entry : 3F/39
 35278 ;;		On exit  : 3F/3D
 35279 ;;		Unchanged: 0/0
 35280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35281 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35282 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35283 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35284 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35285 ;;Total ram usage:        0 bytes
 35286 ;; Hardware stack levels used:    1
 35287 ;; Hardware stack levels required when called:   15
 35288 ;; This function calls:
 35289 ;;		Nothing
 35290 ;; This function is called by:
 35291 ;;		_SYSTEM_Initialize
 35292 ;; This function uses a reentrant model
 35293 ;;
 35294                           
 35295                           	psect	text143
 35296  01D9EE                     __ptext143:
 35297                           	opt callstack 0
 35298  01D9EE                     _SPI1_Initialize:
 35299                           	opt callstack 14
 35300                           
 35301                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
 35302                           
 35303                           ; BSR set to: 57
 35304                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35305                           ;incstack = 0
 35306  01D9EE  0E40               	movlw	64
 35307  01D9F0  013D               	movlb	61	; () banked
 35308  01D9F2  6F15               	movwf	21,b	;volatile
 35309                           
 35310                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
 35311  01D9F4  0E03               	movlw	3
 35312  01D9F6  6F16               	movwf	22,b	;volatile
 35313                           
 35314                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x4F;
 35315  01D9F8  0E4F               	movlw	79
 35316  01D9FA  6F19               	movwf	25,b	;volatile
 35317                           
 35318                           ; BSR set to: 61
 35319                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
 35320  01D9FC  6B1C               	clrf	28,b	;volatile
 35321                           
 35322                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x83;
 35323  01D9FE  0E83               	movlw	131
 35324  01DA00  6F14               	movwf	20,b	;volatile
 35325                           
 35326                           ; BSR set to: 61
 35327                           ; _SPI1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 35328  01DA02  0012               	return		;funcret
 35329  01DA04                     __end_of_SPI1_Initialize:
 35330                           	opt callstack 0
 35331                           
 35332 ;; *************** function _PWM8_Initialize *****************
 35333 ;; Defined at:
 35334 ;;		line 58 in file "mcc_generated_files/pwm8.c"
 35335 ;; Parameters:    Size  Location     Type
 35336 ;;		None
 35337 ;; Auto vars:     Size  Location     Type
 35338 ;;		None
 35339 ;; Return value:  Size  Location     Type
 35340 ;;                  1  [STACK] void 
 35341 ;; Registers used:
 35342 ;;		wreg, status,2
 35343 ;; Tracked objects:
 35344 ;;		On entry : 0/0
 35345 ;;		On exit  : 3F/3F
 35346 ;;		Unchanged: 0/0
 35347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35348 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35349 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35350 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35351 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35352 ;;Total ram usage:        0 bytes
 35353 ;; Hardware stack levels used:    1
 35354 ;; Hardware stack levels required when called:   15
 35355 ;; This function calls:
 35356 ;;		Nothing
 35357 ;; This function is called by:
 35358 ;;		_SYSTEM_Initialize
 35359 ;; This function uses a reentrant model
 35360 ;;
 35361                           
 35362                           	psect	text144
 35363  01DA04                     __ptext144:
 35364                           	opt callstack 0
 35365  01DA04                     _PWM8_Initialize:
 35366                           	opt callstack 14
 35367                           
 35368                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
 35369                           
 35370                           ; BSR set to: 61
 35371                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35372                           ;incstack = 0
 35373  01DA04  0E80               	movlw	128
 35374  01DA06  6E62               	movwf	98,c	;volatile
 35375                           
 35376                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x00;
 35377  01DA08  6A61               	clrf	97,c	;volatile
 35378                           
 35379                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0x40;
 35380  01DA0A  0E40               	movlw	64
 35381  01DA0C  6E60               	movwf	96,c	;volatile
 35382                           
 35383                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 1;
 35384  01DA0E  013F               	movlb	63	; () banked
 35385  01DA10  515F               	movf	95,w,b	;volatile
 35386  01DA12  0B3F               	andlw	-193
 35387  01DA14  0940               	iorlw	64
 35388  01DA16  6F5F               	movwf	95,b	;volatile
 35389                           
 35390                           ; BSR set to: 63
 35391                           ; _PWM8_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 35392  01DA18  0012               	return		;funcret
 35393  01DA1A                     __end_of_PWM8_Initialize:
 35394                           	opt callstack 0
 35395                           
 35396 ;; *************** function _PMD_Initialize *****************
 35397 ;; Defined at:
 35398 ;;		line 91 in file "mcc_generated_files/mcc.c"
 35399 ;; Parameters:    Size  Location     Type
 35400 ;;		None
 35401 ;; Auto vars:     Size  Location     Type
 35402 ;;		None
 35403 ;; Return value:  Size  Location     Type
 35404 ;;                  1  [STACK] void 
 35405 ;; Registers used:
 35406 ;;		None
 35407 ;; Tracked objects:
 35408 ;;		On entry : 3F/39
 35409 ;;		On exit  : 3F/39
 35410 ;;		Unchanged: 0/0
 35411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35412 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35413 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35414 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35415 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35416 ;;Total ram usage:        0 bytes
 35417 ;; Hardware stack levels used:    1
 35418 ;; Hardware stack levels required when called:   15
 35419 ;; This function calls:
 35420 ;;		Nothing
 35421 ;; This function is called by:
 35422 ;;		_SYSTEM_Initialize
 35423 ;; This function uses a reentrant model
 35424 ;;
 35425                           
 35426                           	psect	text145
 35427  01DA30                     __ptext145:
 35428                           	opt callstack 0
 35429  01DA30                     _PMD_Initialize:
 35430                           	opt callstack 14
 35431                           
 35432                           ;mcc_generated_files/mcc.c: 94:     PMD0 = 0x00;
 35433                           
 35434                           ; BSR set to: 63
 35435                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35436                           ;incstack = 0
 35437  01DA30  0139               	movlb	57	; () banked
 35438  01DA32  6BC0               	clrf	192,b	;volatile
 35439                           
 35440                           ;mcc_generated_files/mcc.c: 96:     PMD1 = 0x00;
 35441  01DA34  6BC1               	clrf	193,b	;volatile
 35442                           
 35443                           ;mcc_generated_files/mcc.c: 98:     PMD2 = 0x00;
 35444  01DA36  6BC2               	clrf	194,b	;volatile
 35445                           
 35446                           ;mcc_generated_files/mcc.c: 100:     PMD3 = 0x00;
 35447  01DA38  6BC3               	clrf	195,b	;volatile
 35448                           
 35449                           ;mcc_generated_files/mcc.c: 102:     PMD4 = 0x00;
 35450  01DA3A  6BC4               	clrf	196,b	;volatile
 35451                           
 35452                           ;mcc_generated_files/mcc.c: 104:     PMD5 = 0x00;
 35453  01DA3C  6BC5               	clrf	197,b	;volatile
 35454                           
 35455                           ;mcc_generated_files/mcc.c: 106:     PMD6 = 0x00;
 35456  01DA3E  6BC6               	clrf	198,b	;volatile
 35457                           
 35458                           ;mcc_generated_files/mcc.c: 108:     PMD7 = 0x00;
 35459  01DA40  6BC7               	clrf	199,b	;volatile
 35460                           
 35461                           ; BSR set to: 57
 35462                           ; _PMD_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 35463  01DA42  0012               	return		;funcret
 35464  01DA44                     __end_of_PMD_Initialize:
 35465                           	opt callstack 0
 35466                           
 35467 ;; *************** function _PIN_MANAGER_Initialize *****************
 35468 ;; Defined at:
 35469 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 35470 ;; Parameters:    Size  Location     Type
 35471 ;;		None
 35472 ;; Auto vars:     Size  Location     Type
 35473 ;;		None
 35474 ;; Return value:  Size  Location     Type
 35475 ;;                  1  [STACK] void 
 35476 ;; Registers used:
 35477 ;;		wreg, status,2
 35478 ;; Tracked objects:
 35479 ;;		On entry : 3F/39
 35480 ;;		On exit  : 3F/3A
 35481 ;;		Unchanged: 0/0
 35482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35483 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35484 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35485 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35486 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35487 ;;Total ram usage:        0 bytes
 35488 ;; Hardware stack levels used:    1
 35489 ;; Hardware stack levels required when called:   15
 35490 ;; This function calls:
 35491 ;;		Nothing
 35492 ;; This function is called by:
 35493 ;;		_SYSTEM_Initialize
 35494 ;; This function uses a reentrant model
 35495 ;;
 35496                           
 35497                           	psect	text146
 35498  01C19E                     __ptext146:
 35499                           	opt callstack 0
 35500  01C19E                     _PIN_MANAGER_Initialize:
 35501                           	opt callstack 14
 35502                           
 35503                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x07;
 35504                           
 35505                           ; BSR set to: 57
 35506                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35507                           ;incstack = 0
 35508  01C19E  0E07               	movlw	7
 35509  01C1A0  6EBE               	movwf	190,c	;volatile
 35510                           
 35511                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x00;
 35512  01C1A2  6ABD               	clrf	189,c	;volatile
 35513                           
 35514                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 35515  01C1A4  6ABA               	clrf	186,c	;volatile
 35516                           
 35517                           ;mcc_generated_files/pin_manager.c: 65:     LATF = 0x23;
 35518  01C1A6  0E23               	movlw	35
 35519  01C1A8  6EBF               	movwf	191,c	;volatile
 35520                           
 35521                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
 35522  01C1AA  6ABB               	clrf	187,c	;volatile
 35523                           
 35524                           ;mcc_generated_files/pin_manager.c: 67:     LATC = 0x07;
 35525  01C1AC  0E07               	movlw	7
 35526  01C1AE  6EBC               	movwf	188,c	;volatile
 35527                           
 35528                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0x00;
 35529  01C1B0  6AC6               	clrf	198,c	;volatile
 35530                           
 35531                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0x0C;
 35532  01C1B2  0E0C               	movlw	12
 35533  01C1B4  6EC7               	movwf	199,c	;volatile
 35534                           
 35535                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0xFF;
 35536  01C1B6  68C2               	setf	194,c	;volatile
 35537                           
 35538                           ;mcc_generated_files/pin_manager.c: 75:     TRISB = 0xBF;
 35539  01C1B8  0EBF               	movlw	191
 35540  01C1BA  6EC3               	movwf	195,c	;volatile
 35541                           
 35542                           ;mcc_generated_files/pin_manager.c: 76:     TRISC = 0x90;
 35543  01C1BC  0E90               	movlw	144
 35544  01C1BE  6EC4               	movwf	196,c	;volatile
 35545                           
 35546                           ;mcc_generated_files/pin_manager.c: 77:     TRISD = 0x0C;
 35547  01C1C0  0E0C               	movlw	12
 35548  01C1C2  6EC5               	movwf	197,c	;volatile
 35549                           
 35550                           ;mcc_generated_files/pin_manager.c: 82:     ANSELD = 0x00;
 35551  01C1C4  013A               	movlb	58	; () banked
 35552  01C1C6  6B70               	clrf	112,b	;volatile
 35553                           
 35554                           ; BSR set to: 58
 35555                           ;mcc_generated_files/pin_manager.c: 83:     ANSELC = 0x00;
 35556  01C1C8  6B60               	clrf	96,b	;volatile
 35557                           
 35558                           ;mcc_generated_files/pin_manager.c: 84:     ANSELB = 0x3C;
 35559  01C1CA  0E3C               	movlw	60
 35560  01C1CC  6F50               	movwf	80,b	;volatile
 35561                           
 35562                           ; BSR set to: 58
 35563                           ;mcc_generated_files/pin_manager.c: 85:     ANSELE = 0x00;
 35564  01C1CE  6B80               	clrf	128,b	;volatile
 35565                           
 35566                           ; BSR set to: 58
 35567                           ;mcc_generated_files/pin_manager.c: 86:     ANSELF = 0x00;
 35568  01C1D0  6B90               	clrf	144,b	;volatile
 35569                           
 35570                           ; BSR set to: 58
 35571                           ;mcc_generated_files/pin_manager.c: 87:     ANSELA = 0xFF;
 35572  01C1D2  6940               	setf	64,b	;volatile
 35573                           
 35574                           ;mcc_generated_files/pin_manager.c: 92:     WPUD = 0x0C;
 35575  01C1D4  0E0C               	movlw	12
 35576  01C1D6  6F71               	movwf	113,b	;volatile
 35577                           
 35578                           ;mcc_generated_files/pin_manager.c: 93:     WPUF = 0x0C;
 35579  01C1D8  0E0C               	movlw	12
 35580  01C1DA  6F91               	movwf	145,b	;volatile
 35581                           
 35582                           ; BSR set to: 58
 35583                           ;mcc_generated_files/pin_manager.c: 94:     WPUE = 0x00;
 35584  01C1DC  6B81               	clrf	129,b	;volatile
 35585                           
 35586                           ;mcc_generated_files/pin_manager.c: 95:     WPUB = 0x83;
 35587  01C1DE  0E83               	movlw	131
 35588  01C1E0  6F51               	movwf	81,b	;volatile
 35589                           
 35590                           ; BSR set to: 58
 35591                           ;mcc_generated_files/pin_manager.c: 96:     WPUA = 0x00;
 35592  01C1E2  6B41               	clrf	65,b	;volatile
 35593                           
 35594                           ;mcc_generated_files/pin_manager.c: 97:     WPUC = 0x97;
 35595  01C1E4  0E97               	movlw	151
 35596  01C1E6  6F61               	movwf	97,b	;volatile
 35597                           
 35598                           ; BSR set to: 58
 35599                           ;mcc_generated_files/pin_manager.c: 102:     ODCONE = 0x00;
 35600  01C1E8  6B82               	clrf	130,b	;volatile
 35601                           
 35602                           ; BSR set to: 58
 35603                           ;mcc_generated_files/pin_manager.c: 103:     ODCONF = 0x00;
 35604  01C1EA  6B92               	clrf	146,b	;volatile
 35605                           
 35606                           ; BSR set to: 58
 35607                           ;mcc_generated_files/pin_manager.c: 104:     ODCONA = 0x00;
 35608  01C1EC  6B42               	clrf	66,b	;volatile
 35609                           
 35610                           ; BSR set to: 58
 35611                           ;mcc_generated_files/pin_manager.c: 105:     ODCONB = 0x00;
 35612  01C1EE  6B52               	clrf	82,b	;volatile
 35613                           
 35614                           ; BSR set to: 58
 35615                           ;mcc_generated_files/pin_manager.c: 106:     ODCONC = 0x00;
 35616  01C1F0  6B62               	clrf	98,b	;volatile
 35617                           
 35618                           ; BSR set to: 58
 35619                           ;mcc_generated_files/pin_manager.c: 107:     ODCOND = 0x00;
 35620  01C1F2  6B72               	clrf	114,b	;volatile
 35621                           
 35622                           ; BSR set to: 58
 35623                           ;mcc_generated_files/pin_manager.c: 112:     SLRCONA = 0xFF;
 35624  01C1F4  6943               	setf	67,b	;volatile
 35625                           
 35626                           ; BSR set to: 58
 35627                           ;mcc_generated_files/pin_manager.c: 113:     SLRCONB = 0xFF;
 35628  01C1F6  6953               	setf	83,b	;volatile
 35629                           
 35630                           ; BSR set to: 58
 35631                           ;mcc_generated_files/pin_manager.c: 114:     SLRCONC = 0xFF;
 35632  01C1F8  6963               	setf	99,b	;volatile
 35633                           
 35634                           ; BSR set to: 58
 35635                           ;mcc_generated_files/pin_manager.c: 115:     SLRCOND = 0xFF;
 35636  01C1FA  6973               	setf	115,b	;volatile
 35637                           
 35638                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONE = 0x07;
 35639  01C1FC  0E07               	movlw	7
 35640  01C1FE  6F83               	movwf	131,b	;volatile
 35641                           
 35642                           ; BSR set to: 58
 35643                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONF = 0xFF;
 35644  01C200  6993               	setf	147,b	;volatile
 35645                           
 35646                           ;mcc_generated_files/pin_manager.c: 126:     U2RXPPS = 0x0F;
 35647  01C202  0E0F               	movlw	15
 35648  01C204  6FE8               	movwf	232,b	;volatile
 35649                           
 35650                           ;mcc_generated_files/pin_manager.c: 127:     SPI1SCKPPS = 0x13;
 35651  01C206  0E13               	movlw	19
 35652  01C208  6FDE               	movwf	222,b	;volatile
 35653                           
 35654                           ;mcc_generated_files/pin_manager.c: 128:     RB6PPS = 0x16;
 35655  01C20A  0E16               	movlw	22
 35656  01C20C  6F0E               	movwf	14,b	;volatile
 35657                           
 35658                           ;mcc_generated_files/pin_manager.c: 129:     RC3PPS = 0x1E;
 35659  01C20E  0E1E               	movlw	30
 35660  01C210  6F13               	movwf	19,b	;volatile
 35661                           
 35662                           ;mcc_generated_files/pin_manager.c: 130:     INT0PPS = 0x08;
 35663  01C212  0E08               	movlw	8
 35664  01C214  6FC0               	movwf	192,b	;volatile
 35665                           
 35666                           ;mcc_generated_files/pin_manager.c: 131:     RD1PPS = 0x10;
 35667  01C216  0E10               	movlw	16
 35668  01C218  6F19               	movwf	25,b	;volatile
 35669                           
 35670                           ;mcc_generated_files/pin_manager.c: 132:     INT1PPS = 0x09;
 35671  01C21A  0E09               	movlw	9
 35672  01C21C  6FC1               	movwf	193,b	;volatile
 35673                           
 35674                           ;mcc_generated_files/pin_manager.c: 133:     RC5PPS = 0x1F;
 35675  01C21E  0E1F               	movlw	31
 35676  01C220  6F15               	movwf	21,b	;volatile
 35677                           
 35678                           ;mcc_generated_files/pin_manager.c: 134:     RC6PPS = 0x13;
 35679  01C222  0E13               	movlw	19
 35680  01C224  6F16               	movwf	22,b	;volatile
 35681                           
 35682                           ;mcc_generated_files/pin_manager.c: 135:     U1RXPPS = 0x17;
 35683  01C226  0E17               	movlw	23
 35684  01C228  6FE5               	movwf	229,b	;volatile
 35685                           
 35686                           ;mcc_generated_files/pin_manager.c: 136:     SPI1SDIPPS = 0x14;
 35687  01C22A  0E14               	movlw	20
 35688  01C22C  6FDF               	movwf	223,b	;volatile
 35689                           
 35690                           ; BSR set to: 58
 35691                           ; _PIN_MANAGER_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
 35692  01C22E  0012               	return		;funcret
 35693  01C230                     __end_of_PIN_MANAGER_Initialize:
 35694                           	opt callstack 0
 35695                           
 35696 ;; *************** function _OSCILLATOR_Initialize *****************
 35697 ;; Defined at:
 35698 ;;		line 73 in file "mcc_generated_files/mcc.c"
 35699 ;; Parameters:    Size  Location     Type
 35700 ;;		None
 35701 ;; Auto vars:     Size  Location     Type
 35702 ;;		None
 35703 ;; Return value:  Size  Location     Type
 35704 ;;                  1  [STACK] void 
 35705 ;; Registers used:
 35706 ;;		wreg, status,2
 35707 ;; Tracked objects:
 35708 ;;		On entry : 3F/3A
 35709 ;;		On exit  : 3F/39
 35710 ;;		Unchanged: 0/0
 35711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35712 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35713 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35714 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35715 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35716 ;;Total ram usage:        0 bytes
 35717 ;; Hardware stack levels used:    1
 35718 ;; Hardware stack levels required when called:   15
 35719 ;; This function calls:
 35720 ;;		Nothing
 35721 ;; This function is called by:
 35722 ;;		_SYSTEM_Initialize
 35723 ;; This function uses a reentrant model
 35724 ;;
 35725                           
 35726                           	psect	text147
 35727  01DA1A                     __ptext147:
 35728                           	opt callstack 0
 35729  01DA1A                     _OSCILLATOR_Initialize:
 35730                           	opt callstack 14
 35731                           
 35732                           ;mcc_generated_files/mcc.c: 76:     OSCCON1 = 0x20;
 35733                           
 35734                           ; BSR set to: 58
 35735                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35736                           ;incstack = 0
 35737  01DA1A  0E20               	movlw	32
 35738  01DA1C  0139               	movlb	57	; () banked
 35739  01DA1E  6FD9               	movwf	217,b	;volatile
 35740                           
 35741                           ; BSR set to: 57
 35742                           ;mcc_generated_files/mcc.c: 78:     OSCCON3 = 0x00;
 35743  01DA20  6BDB               	clrf	219,b	;volatile
 35744                           
 35745                           ; BSR set to: 57
 35746                           ;mcc_generated_files/mcc.c: 80:     OSCEN = 0x00;
 35747  01DA22  6BDD               	clrf	221,b	;volatile
 35748                           
 35749                           ;mcc_generated_files/mcc.c: 82:     OSCFRQ = 0x02;
 35750  01DA24  0E02               	movlw	2
 35751  01DA26  6FDF               	movwf	223,b	;volatile
 35752                           
 35753                           ; BSR set to: 57
 35754                           ;mcc_generated_files/mcc.c: 84:     OSCTUNE = 0x00;
 35755  01DA28  6BDE               	clrf	222,b	;volatile
 35756  01DA2A                     l171:
 35757                           
 35758                           ; BSR set to: 57
 35759                           ;mcc_generated_files/mcc.c: 86:     while(PLLR == 0)
 35760  01DA2A  B1DC               	btfsc	220,0,b	;volatile
 35761  01DA2C  0012               	return	
 35762  01DA2E  D7FD               	goto	l171
 35763  01DA30                     __end_of_OSCILLATOR_Initialize:
 35764                           	opt callstack 0
 35765                           
 35766 ;; *************** function _INTERRUPT_Initialize *****************
 35767 ;; Defined at:
 35768 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 35769 ;; Parameters:    Size  Location     Type
 35770 ;;		None
 35771 ;; Auto vars:     Size  Location     Type
 35772 ;;  state           1  [STACK] _Bool 
 35773 ;; Return value:  Size  Location     Type
 35774 ;;                  1  [STACK] void 
 35775 ;; Registers used:
 35776 ;;		wreg, fsr1l, fsr1h, status,2, btemp+11
 35777 ;; Tracked objects:
 35778 ;;		On entry : 0/0
 35779 ;;		On exit  : 3F/39
 35780 ;;		Unchanged: 0/0
 35781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35782 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35783 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35784 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35785 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35786 ;;Total ram usage:        0 bytes
 35787 ;; Hardware stack levels used:    1
 35788 ;; Hardware stack levels required when called:   15
 35789 ;; This function calls:
 35790 ;;		Nothing
 35791 ;; This function is called by:
 35792 ;;		_SYSTEM_Initialize
 35793 ;; This function uses a reentrant model
 35794 ;;
 35795                           
 35796                           	psect	text148
 35797  01C7EE                     __ptext148:
 35798                           	opt callstack 0
 35799  01C7EE                     _INTERRUPT_Initialize:
 35800                           	opt callstack 0
 35801                           
 35802                           ; BSR set to: 57
 35803                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35804  01C7EE  52E6               	movf	postinc1,f,c
 35805                           
 35806                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 35807                           
 35808                           ;incstack = 0
 35809  01C7F0  8AD2               	bsf	210,5,c	;volatile
 35810                           
 35811                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 35812  01C7F2  AED2               	btfss	16338,7,c	;volatile
 35813  01C7F4  D003               	goto	u10230
 35814  01C7F6  6A0C               	clrf	(btemp+11)^0,c
 35815  01C7F8  2A0C               	incf	(btemp+11)^0,f,c
 35816  01C7FA  D001               	goto	u10248
 35817  01C7FC                     u10230:
 35818  01C7FC  6A0C               	clrf	(btemp+11)^0,c
 35819  01C7FE                     u10248:
 35820                           
 35821                           ;stkvar	_state @ sp[(-1)+0]
 35822  01C7FE  0EFF               	movlw	-1
 35823  01C800  0060  F033  FFE3   	movff	btemp+11,plusw1
 35824                           
 35825                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 35826  01C806  9ED2               	bcf	16338,7,c	;volatile
 35827                           
 35828                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 35829  01C808  0E55               	movlw	85
 35830  01C80A  6ED4               	movwf	212,c	;volatile
 35831                           
 35832                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 35833  01C80C  0EAA               	movlw	170
 35834  01C80E  6ED4               	movwf	212,c	;volatile
 35835                           
 35836                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 35837  01C810  90D4               	bcf	212,0,c	;volatile
 35838                           
 35839                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
 35840  01C812  0138               	movlb	56	; () banked
 35841  01C814  6B9F               	clrf	159,b	;volatile
 35842                           
 35843                           ; BSR set to: 56
 35844                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
 35845  01C816  6B9E               	clrf	158,b	;volatile
 35846                           
 35847                           ; BSR set to: 56
 35848                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
 35849  01C818  0E08               	movlw	8
 35850  01C81A  6F9D               	movwf	157,b	;volatile
 35851                           
 35852                           ; BSR set to: 56
 35853                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 35854  01C81C  0E55               	movlw	85
 35855  01C81E  6ED4               	movwf	212,c	;volatile
 35856                           
 35857                           ; BSR set to: 56
 35858                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 35859  01C820  0EAA               	movlw	170
 35860  01C822  6ED4               	movwf	212,c	;volatile
 35861                           
 35862                           ; BSR set to: 56
 35863                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 35864  01C824  80D4               	bsf	212,0,c	;volatile
 35865                           
 35866                           ; BSR set to: 56
 35867                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 35868                           ;stkvar	_state @ sp[(-1)+0]
 35869  01C826  0EFF               	movlw	-1
 35870  01C828  B0E3               	btfsc	plusw1,0,c
 35871  01C82A  D002               	bra	u10255
 35872  01C82C  9ED2               	bcf	16338,7,c	;volatile
 35873  01C82E  D001               	bra	u10256
 35874  01C830                     u10255:
 35875  01C830  8ED2               	bsf	16338,7,c	;volatile
 35876  01C832                     u10256:
 35877                           
 35878                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR2bits.DMA1AIP = 1;
 35879  01C832  0139               	movlb	57	; () banked
 35880  01C834  8782               	bsf	130,3,b	;volatile
 35881                           
 35882                           ; BSR set to: 57
 35883                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR2bits.DMA1DCNTIP = 1;
 35884  01C836  8382               	bsf	130,1,b	;volatile
 35885                           
 35886                           ; BSR set to: 57
 35887                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR2bits.DMA1SCNTIP = 1;
 35888  01C838  8182               	bsf	130,0,b	;volatile
 35889                           
 35890                           ; BSR set to: 57
 35891                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR2bits.DMA1ORIP = 1;
 35892  01C83A  8582               	bsf	130,2,b	;volatile
 35893                           
 35894                           ; BSR set to: 57
 35895                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR6bits.U2TXIP = 1;
 35896  01C83C  8786               	bsf	134,3,b	;volatile
 35897                           
 35898                           ; BSR set to: 57
 35899                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR6bits.U2RXIP = 1;
 35900  01C83E  8586               	bsf	134,2,b	;volatile
 35901                           
 35902                           ; BSR set to: 57
 35903                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR3bits.U1RXIP = 1;
 35904  01C840  8783               	bsf	131,3,b	;volatile
 35905                           
 35906                           ; BSR set to: 57
 35907                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR1bits.INT0IP = 1;
 35908  01C842  8181               	bsf	129,0,b	;volatile
 35909                           
 35910                           ; BSR set to: 57
 35911                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR5bits.INT1IP = 0;
 35912  01C844  9185               	bcf	133,0,b	;volatile
 35913                           
 35914                           ; BSR set to: 57
 35915                           ;mcc_generated_files/interrupt_manager.c: 81:     IPR9bits.TMR6IP = 1;
 35916  01C846  8189               	bsf	137,0,b	;volatile
 35917                           
 35918                           ; BSR set to: 57
 35919                           ;mcc_generated_files/interrupt_manager.c: 82:     IPR8bits.TMR5IP = 0;
 35920  01C848  9D88               	bcf	136,6,b	;volatile
 35921                           
 35922                           ; BSR set to: 57
 35923                           ;mcc_generated_files/interrupt_manager.c: 83:     IPR6bits.TMR3IP = 0;
 35924  01C84A  9D86               	bcf	134,6,b	;volatile
 35925                           
 35926                           ; BSR set to: 57
 35927                           ;mcc_generated_files/interrupt_manager.c: 84:     IPR1bits.ADIP = 1;
 35928  01C84C  8581               	bsf	129,2,b	;volatile
 35929                           
 35930                           ; BSR set to: 57
 35931                           ;mcc_generated_files/interrupt_manager.c: 85:     IPR1bits.ADTIP = 1;
 35932  01C84E  8781               	bsf	129,3,b	;volatile
 35933                           
 35934                           ; BSR set to: 57
 35935                           ; _INTERRUPT_Initialize: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 35936  01C850  52E5               	movf	postdec1,f,c
 35937  01C852  0012               	return		;funcret
 35938  01C854                     __end_of_INTERRUPT_Initialize:
 35939                           	opt callstack 0
 35940                           
 35941 ;; *************** function _FVR_Initialize *****************
 35942 ;; Defined at:
 35943 ;;		line 58 in file "mcc_generated_files/fvr.c"
 35944 ;; Parameters:    Size  Location     Type
 35945 ;;		None
 35946 ;; Auto vars:     Size  Location     Type
 35947 ;;		None
 35948 ;; Return value:  Size  Location     Type
 35949 ;;                  1  [STACK] void 
 35950 ;; Registers used:
 35951 ;;		wreg, status,2
 35952 ;; Tracked objects:
 35953 ;;		On entry : 3F/39
 35954 ;;		On exit  : 3F/3E
 35955 ;;		Unchanged: 0/0
 35956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35957 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35958 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35959 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35960 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35961 ;;Total ram usage:        0 bytes
 35962 ;; Hardware stack levels used:    1
 35963 ;; Hardware stack levels required when called:   15
 35964 ;; This function calls:
 35965 ;;		Nothing
 35966 ;; This function is called by:
 35967 ;;		_SYSTEM_Initialize
 35968 ;; This function uses a reentrant model
 35969 ;;
 35970                           
 35971                           	psect	text149
 35972  01DB64                     __ptext149:
 35973                           	opt callstack 0
 35974  01DB64                     _FVR_Initialize:
 35975                           	opt callstack 14
 35976                           
 35977                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0xAF;
 35978                           
 35979                           ; BSR set to: 57
 35980                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35981                           ;incstack = 0
 35982  01DB64  0EAF               	movlw	175
 35983  01DB66  013E               	movlb	62	; () banked
 35984  01DB68  6FC1               	movwf	193,b	;volatile
 35985                           
 35986                           ; BSR set to: 62
 35987                           ; _FVR_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 35988  01DB6A  0012               	return		;funcret
 35989  01DB6C                     __end_of_FVR_Initialize:
 35990                           	opt callstack 0
 35991                           
 35992 ;; *************** function _EXT_INT_Initialize *****************
 35993 ;; Defined at:
 35994 ;;		line 89 in file "mcc_generated_files/ext_int.c"
 35995 ;; Parameters:    Size  Location     Type
 35996 ;;		None
 35997 ;; Auto vars:     Size  Location     Type
 35998 ;;		None
 35999 ;; Return value:  Size  Location     Type
 36000 ;;                  1  [STACK] void 
 36001 ;; Registers used:
 36002 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 36003 ;; Tracked objects:
 36004 ;;		On entry : 3F/39
 36005 ;;		On exit  : 3F/39
 36006 ;;		Unchanged: 0/0
 36007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36008 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36009 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36010 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36011 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36012 ;;Total ram usage:        0 bytes
 36013 ;; Hardware stack levels used:    1
 36014 ;; Hardware stack levels required when called:   16
 36015 ;; This function calls:
 36016 ;;		_INT0_SetInterruptHandler
 36017 ;;		_INT1_SetInterruptHandler
 36018 ;; This function is called by:
 36019 ;;		_SYSTEM_Initialize
 36020 ;; This function uses a reentrant model
 36021 ;;
 36022                           
 36023                           	psect	text150
 36024  01D316                     __ptext150:
 36025                           	opt callstack 0
 36026  01D316                     _EXT_INT_Initialize:
 36027                           	opt callstack 13
 36028                           
 36029                           ;mcc_generated_files/ext_int.c: 94:  (PIR1bits.INT0IF = 0);
 36030                           
 36031                           ; BSR set to: 62
 36032                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36033                           ;incstack = 0
 36034  01D316  0139               	movlb	57	; () banked
 36035  01D318  91A1               	bcf	161,0,b	;volatile
 36036                           
 36037                           ;mcc_generated_files/ext_int.c: 95:  (INTCON0bits.INT0EDG = 0);
 36038  01D31A  90D2               	bcf	210,0,c	;volatile
 36039                           
 36040                           ; BSR set to: 57
 36041                           ;mcc_generated_files/ext_int.c: 97:  INT0_SetInterruptHandler(INT0_DefaultInterruptHandl
      +                          er);
 36042  01D31C  0E96               	movlw	low _INT0_DefaultInterruptHandler
 36043  01D31E  6EE6               	movwf	postinc1,c
 36044  01D320  0EDB               	movlw	high _INT0_DefaultInterruptHandler
 36045  01D322  6EE6               	movwf	postinc1,c
 36046  01D324  0E01               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 36047  01D326  6EE6               	movwf	postinc1,c
 36048  01D328  EC41  F0EB         	call	_INT0_SetInterruptHandler	;wreg free
 36049                           
 36050                           ;mcc_generated_files/ext_int.c: 98:  (PIE1bits.INT0IE = 1);
 36051  01D32C  0139               	movlb	57	; () banked
 36052  01D32E  8191               	bsf	145,0,b	;volatile
 36053                           
 36054                           ; BSR set to: 57
 36055                           ;mcc_generated_files/ext_int.c: 103:  (PIR5bits.INT1IF = 0);
 36056  01D330  91A5               	bcf	165,0,b	;volatile
 36057                           
 36058                           ; BSR set to: 57
 36059                           ;mcc_generated_files/ext_int.c: 104:  (INTCON0bits.INT1EDG = 0);
 36060  01D332  92D2               	bcf	210,1,c	;volatile
 36061                           
 36062                           ;mcc_generated_files/ext_int.c: 106:  INT1_SetInterruptHandler(INT1_DefaultInterruptHand
      +                          ler);
 36063  01D334  0E92               	movlw	low _INT1_DefaultInterruptHandler
 36064  01D336  6EE6               	movwf	postinc1,c
 36065  01D338  0EDB               	movlw	high _INT1_DefaultInterruptHandler
 36066  01D33A  6EE6               	movwf	postinc1,c
 36067  01D33C  0E01               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 36068  01D33E  6EE6               	movwf	postinc1,c
 36069  01D340  EC2D  F0EB         	call	_INT1_SetInterruptHandler	;wreg free
 36070                           
 36071                           ;mcc_generated_files/ext_int.c: 107:  (PIE5bits.INT1IE = 1);
 36072  01D344  0139               	movlb	57	; () banked
 36073  01D346  8195               	bsf	149,0,b	;volatile
 36074                           
 36075                           ; BSR set to: 57
 36076                           ; _EXT_INT_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 36077  01D348  0012               	return		;funcret
 36078  01D34A                     __end_of_EXT_INT_Initialize:
 36079                           	opt callstack 0
 36080                           
 36081 ;; *************** function _INT1_SetInterruptHandler *****************
 36082 ;; Defined at:
 36083 ;;		line 78 in file "mcc_generated_files/ext_int.c"
 36084 ;; Parameters:    Size  Location     Type
 36085 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 36086 ;;		 -> switch_handler(1), INT1_DefaultInterruptHandler(1), 
 36087 ;; Auto vars:     Size  Location     Type
 36088 ;;		None
 36089 ;; Return value:  Size  Location     Type
 36090 ;;                  1  [STACK] void 
 36091 ;; Registers used:
 36092 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 36093 ;; Tracked objects:
 36094 ;;		On entry : 3F/39
 36095 ;;		On exit  : 0/0
 36096 ;;		Unchanged: 0/0
 36097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36098 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36099 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36100 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36101 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36102 ;;Total ram usage:        0 bytes
 36103 ;; Hardware stack levels used:    1
 36104 ;; Hardware stack levels required when called:   15
 36105 ;; This function calls:
 36106 ;;		Nothing
 36107 ;; This function is called by:
 36108 ;;		_EXT_INT_Initialize
 36109 ;;		_start_switch_handler
 36110 ;; This function uses a reentrant model
 36111 ;;
 36112                           
 36113                           	psect	text151
 36114  01D65A                     __ptext151:
 36115                           	opt callstack 0
 36116  01D65A                     _INT1_SetInterruptHandler:
 36117                           	opt callstack 14
 36118                           
 36119                           ;mcc_generated_files/ext_int.c: 78: void INT1_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 79: {;mcc_generated_files/ext_int.c: 80:  INT1
      +                          _InterruptHandler = InterruptHandler;
 36120                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 36121                           
 36122                           ; BSR set to: 57
 36123                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36124                           ;incstack = 0
 36125  01D65A  50E1               	movf	fsr1l,w,c
 36126  01D65C  0FFD               	addlw	-3
 36127  01D65E  6ED9               	movwf	fsr2l,c
 36128  01D660  50E2               	movf	fsr1h,w,c
 36129  01D662  6EDA               	movwf	fsr2h,c
 36130  01D664  0EFF               	movlw	255
 36131  01D666  22DA               	addwfc	fsr2h,f,c
 36132  01D668  006F FF78  F0BA    	movff	postinc2,_INT1_InterruptHandler
 36133  01D66E  006F FF78  F0BB    	movff	postinc2,_INT1_InterruptHandler+1
 36134  01D674  006F FF74  F0BC    	movff	postdec2,_INT1_InterruptHandler+2
 36135                           
 36136                           ; _INT1_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 36137  01D67A  52E5               	movf	postdec1,f,c
 36138  01D67C  52E5               	movf	postdec1,f,c
 36139  01D67E  52E5               	movf	postdec1,f,c
 36140  01D680  0012               	return		;funcret
 36141  01D682                     __end_of_INT1_SetInterruptHandler:
 36142                           	opt callstack 0
 36143                           
 36144 ;; *************** function _INT0_SetInterruptHandler *****************
 36145 ;; Defined at:
 36146 ;;		line 52 in file "mcc_generated_files/ext_int.c"
 36147 ;; Parameters:    Size  Location     Type
 36148 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 36149 ;;		 -> INT0_DefaultInterruptHandler(1), 
 36150 ;; Auto vars:     Size  Location     Type
 36151 ;;		None
 36152 ;; Return value:  Size  Location     Type
 36153 ;;                  1  [STACK] void 
 36154 ;; Registers used:
 36155 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 36156 ;; Tracked objects:
 36157 ;;		On entry : 3F/39
 36158 ;;		On exit  : 0/0
 36159 ;;		Unchanged: 0/0
 36160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36161 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36162 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36163 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36164 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36165 ;;Total ram usage:        0 bytes
 36166 ;; Hardware stack levels used:    1
 36167 ;; Hardware stack levels required when called:   15
 36168 ;; This function calls:
 36169 ;;		Nothing
 36170 ;; This function is called by:
 36171 ;;		_EXT_INT_Initialize
 36172 ;; This function uses a reentrant model
 36173 ;;
 36174                           
 36175                           	psect	text152
 36176  01D682                     __ptext152:
 36177                           	opt callstack 0
 36178  01D682                     _INT0_SetInterruptHandler:
 36179                           	opt callstack 13
 36180                           
 36181                           ;mcc_generated_files/ext_int.c: 52: void INT0_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 53: {;mcc_generated_files/ext_int.c: 54:  INT0
      +                          _InterruptHandler = InterruptHandler;
 36182                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 36183                           
 36184                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36185                           ;incstack = 0
 36186  01D682  50E1               	movf	fsr1l,w,c
 36187  01D684  0FFD               	addlw	-3
 36188  01D686  6ED9               	movwf	fsr2l,c
 36189  01D688  50E2               	movf	fsr1h,w,c
 36190  01D68A  6EDA               	movwf	fsr2h,c
 36191  01D68C  0EFF               	movlw	255
 36192  01D68E  22DA               	addwfc	fsr2h,f,c
 36193  01D690  006F FF78  F0BD    	movff	postinc2,_INT0_InterruptHandler
 36194  01D696  006F FF78  F0BE    	movff	postinc2,_INT0_InterruptHandler+1
 36195  01D69C  006F FF74  F0BF    	movff	postdec2,_INT0_InterruptHandler+2
 36196                           
 36197                           ; _INT0_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 36198  01D6A2  52E5               	movf	postdec1,f,c
 36199  01D6A4  52E5               	movf	postdec1,f,c
 36200  01D6A6  52E5               	movf	postdec1,f,c
 36201  01D6A8  0012               	return		;funcret
 36202  01D6AA                     __end_of_INT0_SetInterruptHandler:
 36203                           	opt callstack 0
 36204                           
 36205 ;; *************** function _DMA2_Initialize *****************
 36206 ;; Defined at:
 36207 ;;		line 61 in file "mcc_generated_files/dma2.c"
 36208 ;; Parameters:    Size  Location     Type
 36209 ;;		None
 36210 ;; Auto vars:     Size  Location     Type
 36211 ;;		None
 36212 ;; Return value:  Size  Location     Type
 36213 ;;                  1  [STACK] void 
 36214 ;; Registers used:
 36215 ;;		wreg, status,2
 36216 ;; Tracked objects:
 36217 ;;		On entry : 3F/3D
 36218 ;;		On exit  : 3F/3B
 36219 ;;		Unchanged: 0/0
 36220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36221 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36222 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36223 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36224 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36225 ;;Total ram usage:        0 bytes
 36226 ;; Hardware stack levels used:    1
 36227 ;; Hardware stack levels required when called:   15
 36228 ;; This function calls:
 36229 ;;		Nothing
 36230 ;; This function is called by:
 36231 ;;		_SYSTEM_Initialize
 36232 ;; This function uses a reentrant model
 36233 ;;
 36234                           
 36235                           	psect	text153
 36236  01CAEC                     __ptext153:
 36237                           	opt callstack 0
 36238  01CAEC                     _DMA2_Initialize:
 36239                           	opt callstack 14
 36240                           
 36241                           ;mcc_generated_files/dma2.c: 63:     DMA2SSA = 0x001000;
 36242                           
 36243                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36244                           ;incstack = 0
 36245  01CAEC  0E00               	movlw	0
 36246  01CAEE  013B               	movlb	59	; () banked
 36247  01CAF0  6FD9               	movwf	217,b	;volatile
 36248  01CAF2  0E10               	movlw	16
 36249  01CAF4  6FDA               	movwf	218,b	;volatile
 36250  01CAF6  0E00               	movlw	0
 36251  01CAF8  6FDB               	movwf	219,b	;volatile
 36252                           
 36253                           ;mcc_generated_files/dma2.c: 64:     DMA2DSA = 0x3FBB;
 36254  01CAFA  0E3F               	movlw	63
 36255  01CAFC  6FD1               	movwf	209,b	;volatile
 36256  01CAFE  0EBB               	movlw	187
 36257  01CB00  6FD0               	movwf	208,b	;volatile
 36258                           
 36259                           ;mcc_generated_files/dma2.c: 65:     DMA2CON1 = 0x03;
 36260  01CB02  0E03               	movlw	3
 36261  01CB04  6FDD               	movwf	221,b	;volatile
 36262                           
 36263                           ;mcc_generated_files/dma2.c: 66:     DMA2SSZ = 0x0001;
 36264  01CB06  0E00               	movlw	0
 36265  01CB08  6FD8               	movwf	216,b	;volatile
 36266  01CB0A  0E01               	movlw	1
 36267  01CB0C  6FD7               	movwf	215,b	;volatile
 36268                           
 36269                           ;mcc_generated_files/dma2.c: 67:     DMA2DSZ = 0x0001;
 36270  01CB0E  0E00               	movlw	0
 36271  01CB10  6FCF               	movwf	207,b	;volatile
 36272  01CB12  0E01               	movlw	1
 36273  01CB14  6FCE               	movwf	206,b	;volatile
 36274                           
 36275                           ;mcc_generated_files/dma2.c: 68:     DMA2SIRQ = 0x1C;
 36276  01CB16  0E1C               	movlw	28
 36277  01CB18  6FDF               	movwf	223,b	;volatile
 36278                           
 36279                           ;mcc_generated_files/dma2.c: 69:     DMA2AIRQ = 0x3D;
 36280  01CB1A  0E3D               	movlw	61
 36281  01CB1C  6FDE               	movwf	222,b	;volatile
 36282                           
 36283                           ; BSR set to: 59
 36284                           ;mcc_generated_files/dma2.c: 71:     PIR5bits.DMA2DCNTIF =0;
 36285  01CB1E  0139               	movlb	57	; () banked
 36286  01CB20  97A5               	bcf	165,3,b	;volatile
 36287                           
 36288                           ; BSR set to: 57
 36289                           ;mcc_generated_files/dma2.c: 72:     PIR5bits.DMA2SCNTIF =0;
 36290  01CB22  95A5               	bcf	165,2,b	;volatile
 36291                           
 36292                           ; BSR set to: 57
 36293                           ;mcc_generated_files/dma2.c: 73:     PIR5bits.DMA2AIF =0;
 36294  01CB24  9BA5               	bcf	165,5,b	;volatile
 36295                           
 36296                           ; BSR set to: 57
 36297                           ;mcc_generated_files/dma2.c: 74:  PIR5bits.DMA2ORIF =0;
 36298  01CB26  99A5               	bcf	165,4,b	;volatile
 36299                           
 36300                           ; BSR set to: 57
 36301                           ;mcc_generated_files/dma2.c: 76:     PIE5bits.DMA2DCNTIE =0;
 36302  01CB28  9795               	bcf	149,3,b	;volatile
 36303                           
 36304                           ; BSR set to: 57
 36305                           ;mcc_generated_files/dma2.c: 77:     PIE5bits.DMA2SCNTIE =0;
 36306  01CB2A  9595               	bcf	149,2,b	;volatile
 36307                           
 36308                           ; BSR set to: 57
 36309                           ;mcc_generated_files/dma2.c: 78:     PIE5bits.DMA2AIE =0;
 36310  01CB2C  9B95               	bcf	149,5,b	;volatile
 36311                           
 36312                           ; BSR set to: 57
 36313                           ;mcc_generated_files/dma2.c: 79:     PIE5bits.DMA2ORIE =0;
 36314  01CB2E  9995               	bcf	149,4,b	;volatile
 36315  01CB30  9ED2               	bcf	16338,7,c	;# 
 36316  01CB32  0139               	banksel	14831	;# 
 36317  01CB34  0E55               	movlw	85	;# 
 36318  01CB36  6FEF               	movwf	14831,b	;# 
 36319  01CB38  0EAA               	movlw	170	;# 
 36320  01CB3A  6FEF               	movwf	14831,b	;# 
 36321  01CB3C  81EF               	bsf	14831,0,b	;# 
 36322  01CB3E  8ED2               	bsf	16338,7,c	;# 
 36323                           
 36324                           ;mcc_generated_files/dma2.c: 92:     DMA2CON0 = 0x00;
 36325  01CB40  013B               	movlb	59	; () banked
 36326  01CB42  6BDC               	clrf	220,b	;volatile
 36327                           
 36328                           ; BSR set to: 59
 36329                           ; _DMA2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 36330  01CB44  0012               	return		;funcret
 36331  01CB46                     __end_of_DMA2_Initialize:
 36332                           	opt callstack 0
 36333                           
 36334 ;; *************** function _DMA1_Initialize *****************
 36335 ;; Defined at:
 36336 ;;		line 86 in file "mcc_generated_files/dma1.c"
 36337 ;; Parameters:    Size  Location     Type
 36338 ;;		None
 36339 ;; Auto vars:     Size  Location     Type
 36340 ;;		None
 36341 ;; Return value:  Size  Location     Type
 36342 ;;                  1  [STACK] void 
 36343 ;; Registers used:
 36344 ;;		wreg, status,2
 36345 ;; Tracked objects:
 36346 ;;		On entry : 3F/3B
 36347 ;;		On exit  : 3F/3B
 36348 ;;		Unchanged: 0/0
 36349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36350 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36351 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36352 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36353 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36354 ;;Total ram usage:        0 bytes
 36355 ;; Hardware stack levels used:    1
 36356 ;; Hardware stack levels required when called:   15
 36357 ;; This function calls:
 36358 ;;		Nothing
 36359 ;; This function is called by:
 36360 ;;		_SYSTEM_Initialize
 36361 ;; This function uses a reentrant model
 36362 ;;
 36363                           
 36364                           	psect	text154
 36365  01C646                     __ptext154:
 36366                           	opt callstack 0
 36367  01C646                     _DMA1_Initialize:
 36368                           	opt callstack 14
 36369                           
 36370                           ;mcc_generated_files/dma1.c: 88:  DMA1SSA = 0x001000;
 36371                           
 36372                           ; BSR set to: 59
 36373                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36374                           ;incstack = 0
 36375  01C646  0E00               	movlw	0
 36376  01C648  013B               	movlb	59	; () banked
 36377  01C64A  6FF9               	movwf	249,b	;volatile
 36378  01C64C  0E10               	movlw	16
 36379  01C64E  6FFA               	movwf	250,b	;volatile
 36380  01C650  0E00               	movlw	0
 36381  01C652  6FFB               	movwf	251,b	;volatile
 36382                           
 36383                           ;mcc_generated_files/dma1.c: 89:  DMA1DSA = 0x3D11;
 36384  01C654  0E3D               	movlw	61
 36385  01C656  6FF1               	movwf	241,b	;volatile
 36386  01C658  0E11               	movlw	17
 36387  01C65A  6FF0               	movwf	240,b	;volatile
 36388                           
 36389                           ;mcc_generated_files/dma1.c: 90:  DMA1CON1 = 0x03;
 36390  01C65C  0E03               	movlw	3
 36391  01C65E  6FFD               	movwf	253,b	;volatile
 36392                           
 36393                           ;mcc_generated_files/dma1.c: 91:  DMA1SSZ = 0x0001;
 36394  01C660  0E00               	movlw	0
 36395  01C662  6FF8               	movwf	248,b	;volatile
 36396  01C664  0E01               	movlw	1
 36397  01C666  6FF7               	movwf	247,b	;volatile
 36398                           
 36399                           ;mcc_generated_files/dma1.c: 92:  DMA1DSZ = 0x0001;
 36400  01C668  0E00               	movlw	0
 36401  01C66A  6FEF               	movwf	239,b	;volatile
 36402  01C66C  0E01               	movlw	1
 36403  01C66E  6FEE               	movwf	238,b	;volatile
 36404                           
 36405                           ;mcc_generated_files/dma1.c: 93:  DMA1SIRQ = 0x15;
 36406  01C670  0E15               	movlw	21
 36407  01C672  6FFF               	movwf	255,b	;volatile
 36408                           
 36409                           ; BSR set to: 59
 36410                           ;mcc_generated_files/dma1.c: 94:  DMA1AIRQ = 0x0;
 36411  01C674  6BFE               	clrf	254,b	;volatile
 36412                           
 36413                           ; BSR set to: 59
 36414                           ;mcc_generated_files/dma1.c: 96:  PIR2bits.DMA1DCNTIF = 0;
 36415  01C676  0139               	movlb	57	; () banked
 36416  01C678  93A2               	bcf	162,1,b	;volatile
 36417                           
 36418                           ; BSR set to: 57
 36419                           ;mcc_generated_files/dma1.c: 97:  PIR2bits.DMA1SCNTIF = 0;
 36420  01C67A  91A2               	bcf	162,0,b	;volatile
 36421                           
 36422                           ; BSR set to: 57
 36423                           ;mcc_generated_files/dma1.c: 98:  PIR2bits.DMA1AIF = 0;
 36424  01C67C  97A2               	bcf	162,3,b	;volatile
 36425                           
 36426                           ; BSR set to: 57
 36427                           ;mcc_generated_files/dma1.c: 99:  PIR2bits.DMA1ORIF = 0;
 36428  01C67E  95A2               	bcf	162,2,b	;volatile
 36429                           
 36430                           ; BSR set to: 57
 36431                           ;mcc_generated_files/dma1.c: 101:  PIE2bits.DMA1DCNTIE = 1;
 36432  01C680  8392               	bsf	146,1,b	;volatile
 36433                           
 36434                           ; BSR set to: 57
 36435                           ;mcc_generated_files/dma1.c: 102:  PIE2bits.DMA1SCNTIE = 1;
 36436  01C682  8192               	bsf	146,0,b	;volatile
 36437                           
 36438                           ; BSR set to: 57
 36439                           ;mcc_generated_files/dma1.c: 103:  PIE2bits.DMA1AIE = 1;
 36440  01C684  8792               	bsf	146,3,b	;volatile
 36441                           
 36442                           ; BSR set to: 57
 36443                           ;mcc_generated_files/dma1.c: 104:  PIE2bits.DMA1ORIE = 1;
 36444  01C686  8592               	bsf	146,2,b	;volatile
 36445                           
 36446                           ; BSR set to: 57
 36447                           ;mcc_generated_files/dma1.c: 106:  ISRPR = 0;
 36448  01C688  6BF1               	clrf	241,b	;volatile
 36449                           
 36450                           ;mcc_generated_files/dma1.c: 107:  MAINPR = 1;
 36451  01C68A  0E01               	movlw	1
 36452  01C68C  6FF2               	movwf	242,b	;volatile
 36453                           
 36454                           ;mcc_generated_files/dma1.c: 108:  DMA1PR = 4;
 36455  01C68E  0E04               	movlw	4
 36456  01C690  6FF3               	movwf	243,b	;volatile
 36457                           
 36458                           ;mcc_generated_files/dma1.c: 109:  DMA2PR = 2;
 36459  01C692  0E02               	movlw	2
 36460  01C694  6FF4               	movwf	244,b	;volatile
 36461                           
 36462                           ;mcc_generated_files/dma1.c: 110:  SCANPR = 3;
 36463  01C696  0E03               	movlw	3
 36464  01C698  6FF7               	movwf	247,b	;volatile
 36465  01C69A  9ED2               	bcf	16338,7,c	;# 
 36466  01C69C  0139               	banksel	14831	;# 
 36467  01C69E  0E55               	movlw	85	;# 
 36468  01C6A0  6FEF               	movwf	14831,b	;# 
 36469  01C6A2  0EAA               	movlw	170	;# 
 36470  01C6A4  6FEF               	movwf	14831,b	;# 
 36471  01C6A6  81EF               	bsf	14831,0,b	;# 
 36472  01C6A8  8ED2               	bsf	16338,7,c	;# 
 36473                           
 36474                           ;mcc_generated_files/dma1.c: 123:  DMA1CON0 = 0x00;
 36475  01C6AA  013B               	movlb	59	; () banked
 36476  01C6AC  6BFC               	clrf	252,b	;volatile
 36477                           
 36478                           ; BSR set to: 59
 36479                           ; _DMA1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 36480  01C6AE  0012               	return		;funcret
 36481  01C6B0                     __end_of_DMA1_Initialize:
 36482                           	opt callstack 0
 36483                           
 36484 ;; *************** function _CRC_Initialize *****************
 36485 ;; Defined at:
 36486 ;;		line 76 in file "mcc_generated_files/crc.c"
 36487 ;; Parameters:    Size  Location     Type
 36488 ;;		None
 36489 ;; Auto vars:     Size  Location     Type
 36490 ;;  seed            2  [STACK] unsigned short 
 36491 ;;  poly            2  [STACK] unsigned short 
 36492 ;; Return value:  Size  Location     Type
 36493 ;;                  1  [STACK] void 
 36494 ;; Registers used:
 36495 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+10, btemp+11
 36496 ;; Tracked objects:
 36497 ;;		On entry : 0/39
 36498 ;;		On exit  : 3F/0
 36499 ;;		Unchanged: 0/0
 36500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36501 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36502 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36504 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36505 ;;Total ram usage:        0 bytes
 36506 ;; Hardware stack levels used:    1
 36507 ;; Hardware stack levels required when called:   15
 36508 ;; This function calls:
 36509 ;;		Nothing
 36510 ;; This function is called by:
 36511 ;;		_SYSTEM_Initialize
 36512 ;;		_read_cal_data
 36513 ;;		_write_cal_data
 36514 ;; This function uses a reentrant model
 36515 ;;
 36516                           
 36517                           	psect	text155
 36518  01C230                     __ptext155:
 36519                           	opt callstack 0
 36520  01C230                     _CRC_Initialize:
 36521                           	opt callstack 0
 36522                           
 36523                           ; BSR set to: 59
 36524                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36525  01C230  52E6               	movf	postinc1,f,c
 36526  01C232  52E6               	movf	postinc1,f,c
 36527  01C234  52E6               	movf	postinc1,f,c
 36528  01C236  52E6               	movf	postinc1,f,c
 36529                           
 36530                           ;mcc_generated_files/crc.c: 78:     uint16_t poly;;mcc_generated_files/crc.c: 79:     ui
      +                          nt16_t seed;;mcc_generated_files/crc.c: 82:     CRCCON0 = 0x80;
 36531                           
 36532                           ;incstack = 0
 36533  01C238  0E80               	movlw	128
 36534  01C23A  0139               	movlb	57	; () banked
 36535  01C23C  6F68               	movwf	104,b	;volatile
 36536                           
 36537                           ;mcc_generated_files/crc.c: 84:     CRCCON1 = (0 << 4) | (7);
 36538  01C23E  0E07               	movlw	7
 36539  01C240  6F69               	movwf	105,b	;volatile
 36540                           
 36541                           ; BSR set to: 57
 36542                           ;mcc_generated_files/crc.c: 86:     CRCACCL = 0x00;
 36543  01C242  6B62               	clrf	98,b	;volatile
 36544                           
 36545                           ; BSR set to: 57
 36546                           ;mcc_generated_files/crc.c: 88:     CRCACCH = 0x00;
 36547  01C244  6B63               	clrf	99,b	;volatile
 36548                           
 36549                           ; BSR set to: 57
 36550                           ;mcc_generated_files/crc.c: 90:     SCANCON0 = 0x00;
 36551  01C246  6B7C               	clrf	124,b	;volatile
 36552                           
 36553                           ; BSR set to: 57
 36554                           ;mcc_generated_files/crc.c: 92:     SCANLADRU = 0x00;
 36555  01C248  6B78               	clrf	120,b	;volatile
 36556                           
 36557                           ; BSR set to: 57
 36558                           ;mcc_generated_files/crc.c: 94:     SCANLADRH = 0x00;
 36559  01C24A  6B77               	clrf	119,b	;volatile
 36560                           
 36561                           ; BSR set to: 57
 36562                           ;mcc_generated_files/crc.c: 96:     SCANLADRL = 0x00;
 36563  01C24C  6B76               	clrf	118,b	;volatile
 36564                           
 36565                           ;mcc_generated_files/crc.c: 98:     SCANHADRU = 0x3F;
 36566  01C24E  0E3F               	movlw	63
 36567  01C250  6F7B               	movwf	123,b	;volatile
 36568                           
 36569                           ; BSR set to: 57
 36570                           ;mcc_generated_files/crc.c: 100:     SCANHADRH = 0xFF;
 36571  01C252  697A               	setf	122,b	;volatile
 36572                           
 36573                           ; BSR set to: 57
 36574                           ;mcc_generated_files/crc.c: 102:     SCANHADRL = 0xFF;
 36575  01C254  6979               	setf	121,b	;volatile
 36576                           
 36577                           ; BSR set to: 57
 36578                           ;mcc_generated_files/crc.c: 104:     SCANTRIG = 0x00;
 36579  01C256  6B7D               	clrf	125,b	;volatile
 36580                           
 36581                           ; BSR set to: 57
 36582                           ;mcc_generated_files/crc.c: 106:     poly = 213;
 36583  01C258  0ED5               	movlw	213
 36584  01C25A  6E0B               	movwf	(btemp+10)^0,c
 36585  01C25C  0E00               	movlw	0
 36586  01C25E  6E0C               	movwf	(btemp+11)^0,c
 36587                           
 36588                           ;stkvar	_poly @ sp[(-4)+2]
 36589  01C260  0EFE               	movlw	-2
 36590  01C262  0060  F02F  FFE3   	movff	btemp+10,plusw1
 36591  01C268  0EFF               	movlw	-1
 36592  01C26A  0060  F033  FFE3   	movff	btemp+11,plusw1
 36593                           
 36594                           ; BSR set to: 57
 36595                           ;mcc_generated_files/crc.c: 107:     CRCXORH = poly >> 8;
 36596                           ;stkvar	_poly @ sp[(-4)+2]
 36597  01C270  0EFF               	movlw	255
 36598  01C272  24E1               	addwf	fsr1l,w,c
 36599  01C274  6ED9               	movwf	fsr2l,c
 36600  01C276  0EFF               	movlw	255
 36601  01C278  20E2               	addwfc	fsr1h,w,c
 36602  01C27A  6EDA               	movwf	fsr2h,c
 36603  01C27C  50DF               	movf	indf2,w,c
 36604  01C27E  6F67               	movwf	103,b	;volatile
 36605                           
 36606                           ; BSR set to: 57
 36607                           ;mcc_generated_files/crc.c: 108:     CRCXORL = poly;
 36608  01C280  0ED5               	movlw	213
 36609  01C282  6F66               	movwf	102,b	;volatile
 36610                           
 36611                           ; BSR set to: 57
 36612                           ;mcc_generated_files/crc.c: 110:     seed = 0;
 36613                           ;stkvar	_seed @ sp[(-4)+0]
 36614  01C284  0EFC               	movlw	-4
 36615  01C286  6AE3               	clrf	plusw1,c
 36616  01C288  0EFD               	movlw	-3
 36617  01C28A  6AE3               	clrf	plusw1,c
 36618                           
 36619                           ; BSR set to: 57
 36620                           ;mcc_generated_files/crc.c: 112:     CRCACCH = seed >> 8;
 36621                           ;stkvar	_seed @ sp[(-4)+0]
 36622  01C28C  0EFD               	movlw	253
 36623  01C28E  24E1               	addwf	fsr1l,w,c
 36624  01C290  6ED9               	movwf	fsr2l,c
 36625  01C292  0EFF               	movlw	255
 36626  01C294  20E2               	addwfc	fsr1h,w,c
 36627  01C296  6EDA               	movwf	fsr2h,c
 36628  01C298  50DF               	movf	indf2,w,c
 36629  01C29A  6F63               	movwf	99,b	;volatile
 36630                           
 36631                           ; BSR set to: 57
 36632                           ;mcc_generated_files/crc.c: 113:     CRCACCL = seed;
 36633  01C29C  6B62               	clrf	98,b	;volatile
 36634                           
 36635                           ; BSR set to: 57
 36636                           ;mcc_generated_files/crc.c: 115:     crcObj.dataWidth = (uint8_t)(CRCCON1bits.DLEN + 1);
 36637  01C29E  3969               	swapf	105,w,b	;volatile
 36638  01C2A0  0B0F               	andlw	15
 36639  01C2A2  6E0C               	movwf	(btemp+11)^0,c
 36640  01C2A4  280C               	incf	(btemp+11)^0,w,c
 36641  01C2A6  0100               	movlb	0	; () banked
 36642  01C2A8  6FD5               	movwf	_crcObj& (0+255),b
 36643                           
 36644                           ; BSR set to: 0
 36645                           ;mcc_generated_files/crc.c: 116:     crcObj.polyWidth = (uint8_t)(CRCCON1bits.PLEN + 1);
 36646  01C2AA  0139               	movlb	57	; () banked
 36647  01C2AC  5169               	movf	105,w,b	;volatile
 36648  01C2AE  0B0F               	andlw	15
 36649  01C2B0  6E0C               	movwf	(btemp+11)^0,c
 36650  01C2B2  280C               	incf	(btemp+11)^0,w,c
 36651  01C2B4  0100               	movlb	0	; () banked
 36652  01C2B6  6FD6               	movwf	(_crcObj+1)& (0+255),b
 36653                           
 36654                           ; BSR set to: 0
 36655                           ; _CRC_Initialize: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 36656  01C2B8  52E5               	movf	postdec1,f,c
 36657  01C2BA  52E5               	movf	postdec1,f,c
 36658  01C2BC  52E5               	movf	postdec1,f,c
 36659  01C2BE  52E5               	movf	postdec1,f,c
 36660  01C2C0  0012               	return		;funcret
 36661  01C2C2                     __end_of_CRC_Initialize:
 36662                           	opt callstack 0
 36663                           
 36664 ;; *************** function _CLKREF_Initialize *****************
 36665 ;; Defined at:
 36666 ;;		line 58 in file "mcc_generated_files/clkref.c"
 36667 ;; Parameters:    Size  Location     Type
 36668 ;;		None
 36669 ;; Auto vars:     Size  Location     Type
 36670 ;;		None
 36671 ;; Return value:  Size  Location     Type
 36672 ;;                  1  [STACK] void 
 36673 ;; Registers used:
 36674 ;;		wreg, status,2
 36675 ;; Tracked objects:
 36676 ;;		On entry : 3F/3B
 36677 ;;		On exit  : 3F/3C
 36678 ;;		Unchanged: 0/0
 36679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36680 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36681 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36682 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36683 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36684 ;;Total ram usage:        0 bytes
 36685 ;; Hardware stack levels used:    1
 36686 ;; Hardware stack levels required when called:   15
 36687 ;; This function calls:
 36688 ;;		Nothing
 36689 ;; This function is called by:
 36690 ;;		_SYSTEM_Initialize
 36691 ;; This function uses a reentrant model
 36692 ;;
 36693                           
 36694                           	psect	text156
 36695  01DB02                     __ptext156:
 36696                           	opt callstack 0
 36697  01DB02                     _CLKREF_Initialize:
 36698                           	opt callstack 14
 36699                           
 36700                           ;mcc_generated_files/clkref.c: 61:     CLKRCLK = 0x00;
 36701                           
 36702                           ; BSR set to: 0
 36703                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36704                           ;incstack = 0
 36705  01DB02  013C               	movlb	60	; () banked
 36706  01DB04  6BE6               	clrf	230,b	;volatile
 36707                           
 36708                           ; BSR set to: 60
 36709                           ;mcc_generated_files/clkref.c: 63:     CLKRCON = 0x94;
 36710  01DB06  0E94               	movlw	148
 36711  01DB08  6FE5               	movwf	229,b	;volatile
 36712                           
 36713                           ; BSR set to: 60
 36714                           ; _CLKREF_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 36715  01DB0A  0012               	return		;funcret
 36716  01DB0C                     __end_of_CLKREF_Initialize:
 36717                           	opt callstack 0
 36718                           
 36719 ;; *************** function _ADCC_Initialize *****************
 36720 ;; Defined at:
 36721 ;;		line 65 in file "mcc_generated_files/adcc.c"
 36722 ;; Parameters:    Size  Location     Type
 36723 ;;		None
 36724 ;; Auto vars:     Size  Location     Type
 36725 ;;		None
 36726 ;; Return value:  Size  Location     Type
 36727 ;;                  1  [STACK] void 
 36728 ;; Registers used:
 36729 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 36730 ;; Tracked objects:
 36731 ;;		On entry : 3F/0
 36732 ;;		On exit  : 0/0
 36733 ;;		Unchanged: 0/0
 36734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36735 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36736 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36738 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36739 ;;Total ram usage:        0 bytes
 36740 ;; Hardware stack levels used:    1
 36741 ;; Hardware stack levels required when called:   16
 36742 ;; This function calls:
 36743 ;;		_ADCC_SetADIInterruptHandler
 36744 ;;		_ADCC_SetADTIInterruptHandler
 36745 ;; This function is called by:
 36746 ;;		_SYSTEM_Initialize
 36747 ;; This function uses a reentrant model
 36748 ;;
 36749                           
 36750                           	psect	text157
 36751  01C6B0                     __ptext157:
 36752                           	opt callstack 0
 36753  01C6B0                     _ADCC_Initialize:
 36754                           	opt callstack 13
 36755                           
 36756                           ;mcc_generated_files/adcc.c: 69:     ADLTHL = 0x00;
 36757                           
 36758                           ; BSR set to: 60
 36759                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36760                           ;incstack = 0
 36761  01C6B0  013E               	movlb	62	; () banked
 36762  01C6B2  6BDE               	clrf	222,b	;volatile
 36763                           
 36764                           ;mcc_generated_files/adcc.c: 71:     ADLTHH = 0x00;
 36765  01C6B4  6BDF               	clrf	223,b	;volatile
 36766                           
 36767                           ;mcc_generated_files/adcc.c: 73:     ADUTHL = 0x00;
 36768  01C6B6  6BE0               	clrf	224,b	;volatile
 36769                           
 36770                           ;mcc_generated_files/adcc.c: 75:     ADUTHH = 0x00;
 36771  01C6B8  6BE1               	clrf	225,b	;volatile
 36772                           
 36773                           ;mcc_generated_files/adcc.c: 77:     ADSTPTL = 0x00;
 36774  01C6BA  6BE4               	clrf	228,b	;volatile
 36775                           
 36776                           ;mcc_generated_files/adcc.c: 79:     ADSTPTH = 0x00;
 36777  01C6BC  6BE5               	clrf	229,b	;volatile
 36778                           
 36779                           ;mcc_generated_files/adcc.c: 81:     ADACCU = 0x00;
 36780  01C6BE  6BEA               	clrf	234,b	;volatile
 36781                           
 36782                           ; BSR set to: 62
 36783                           ;mcc_generated_files/adcc.c: 83:     ADRPT = 0x40;
 36784  01C6C0  0E40               	movlw	64
 36785  01C6C2  6FEC               	movwf	236,b	;volatile
 36786                           
 36787                           ; BSR set to: 62
 36788                           ;mcc_generated_files/adcc.c: 85:     ADPCH = 0x00;
 36789  01C6C4  6BF1               	clrf	241,b	;volatile
 36790                           
 36791                           ;mcc_generated_files/adcc.c: 87:     ADACQL = 0x20;
 36792  01C6C6  0E20               	movlw	32
 36793  01C6C8  6FF3               	movwf	243,b	;volatile
 36794                           
 36795                           ; BSR set to: 62
 36796                           ;mcc_generated_files/adcc.c: 89:     ADACQH = 0x00;
 36797  01C6CA  6BF4               	clrf	244,b	;volatile
 36798                           
 36799                           ; BSR set to: 62
 36800                           ;mcc_generated_files/adcc.c: 91:     ADCAP = 0x00;
 36801  01C6CC  6BF5               	clrf	245,b	;volatile
 36802                           
 36803                           ; BSR set to: 62
 36804                           ;mcc_generated_files/adcc.c: 93:     ADPREL = 0x00;
 36805  01C6CE  6BF6               	clrf	246,b	;volatile
 36806                           
 36807                           ; BSR set to: 62
 36808                           ;mcc_generated_files/adcc.c: 95:     ADPREH = 0x00;
 36809  01C6D0  6BF7               	clrf	247,b	;volatile
 36810                           
 36811                           ; BSR set to: 62
 36812                           ;mcc_generated_files/adcc.c: 97:     ADCON1 = 0x00;
 36813  01C6D2  6BF9               	clrf	249,b	;volatile
 36814                           
 36815                           ;mcc_generated_files/adcc.c: 99:     ADCON2 = 0x5B;
 36816  01C6D4  0E5B               	movlw	91
 36817  01C6D6  6FFA               	movwf	250,b	;volatile
 36818                           
 36819                           ;mcc_generated_files/adcc.c: 101:     ADCON3 = 0x27;
 36820  01C6D8  0E27               	movlw	39
 36821  01C6DA  6FFB               	movwf	251,b	;volatile
 36822                           
 36823                           ; BSR set to: 62
 36824                           ;mcc_generated_files/adcc.c: 103:     ADSTAT = 0x00;
 36825  01C6DC  6BFC               	clrf	252,b	;volatile
 36826                           
 36827                           ;mcc_generated_files/adcc.c: 105:     ADREF = 0x02;
 36828  01C6DE  0E02               	movlw	2
 36829  01C6E0  6FFD               	movwf	253,b	;volatile
 36830                           
 36831                           ; BSR set to: 62
 36832                           ;mcc_generated_files/adcc.c: 107:     ADACT = 0x00;
 36833  01C6E2  6BFE               	clrf	254,b	;volatile
 36834                           
 36835                           ;mcc_generated_files/adcc.c: 109:     ADCLK = 0x07;
 36836  01C6E4  0E07               	movlw	7
 36837  01C6E6  6FFF               	movwf	255,b	;volatile
 36838                           
 36839                           ;mcc_generated_files/adcc.c: 111:     ADCON0 = 0x84;
 36840  01C6E8  0E84               	movlw	132
 36841  01C6EA  6FF8               	movwf	248,b	;volatile
 36842                           
 36843                           ; BSR set to: 62
 36844                           ;mcc_generated_files/adcc.c: 114:     PIR1bits.ADIF = 0;
 36845  01C6EC  0139               	movlb	57	; () banked
 36846  01C6EE  95A1               	bcf	161,2,b	;volatile
 36847                           
 36848                           ; BSR set to: 57
 36849                           ;mcc_generated_files/adcc.c: 116:     PIE1bits.ADIE = 1;
 36850  01C6F0  8591               	bsf	145,2,b	;volatile
 36851                           
 36852                           ; BSR set to: 57
 36853                           ;mcc_generated_files/adcc.c: 118:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 36854  01C6F2  0E98               	movlw	low _ADCC_DefaultInterruptHandler
 36855  01C6F4  6EE6               	movwf	postinc1,c
 36856  01C6F6  0EDB               	movlw	high _ADCC_DefaultInterruptHandler
 36857  01C6F8  6EE6               	movwf	postinc1,c
 36858  01C6FA  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 36859  01C6FC  6EE6               	movwf	postinc1,c
 36860  01C6FE  EC69  F0EB         	call	_ADCC_SetADIInterruptHandler	;wreg free
 36861                           
 36862                           ;mcc_generated_files/adcc.c: 121:     PIR1bits.ADTIF = 0;
 36863  01C702  0139               	movlb	57	; () banked
 36864  01C704  97A1               	bcf	161,3,b	;volatile
 36865                           
 36866                           ; BSR set to: 57
 36867                           ;mcc_generated_files/adcc.c: 123:     PIE1bits.ADTIE = 1;
 36868  01C706  8791               	bsf	145,3,b	;volatile
 36869                           
 36870                           ; BSR set to: 57
 36871                           ;mcc_generated_files/adcc.c: 125:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
 36872  01C708  0E98               	movlw	low _ADCC_DefaultInterruptHandler
 36873  01C70A  6EE6               	movwf	postinc1,c
 36874  01C70C  0EDB               	movlw	high _ADCC_DefaultInterruptHandler
 36875  01C70E  6EE6               	movwf	postinc1,c
 36876  01C710  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 36877  01C712  6EE6               	movwf	postinc1,c
 36878  01C714  EC55  F0EB         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 36879                           
 36880                           ; _ADCC_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 36881  01C718  0012               	return		;funcret
 36882  01C71A                     __end_of_ADCC_Initialize:
 36883                           	opt callstack 0
 36884                           
 36885 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 36886 ;; Defined at:
 36887 ;;		line 336 in file "mcc_generated_files/adcc.c"
 36888 ;; Parameters:    Size  Location     Type
 36889 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 36890 ;;		 -> adc_int_t_handler(1), ADCC_DefaultInterruptHandler(1), 
 36891 ;; Auto vars:     Size  Location     Type
 36892 ;;		None
 36893 ;; Return value:  Size  Location     Type
 36894 ;;                  1  [STACK] void 
 36895 ;; Registers used:
 36896 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 36897 ;; Tracked objects:
 36898 ;;		On entry : 0/1
 36899 ;;		On exit  : 0/0
 36900 ;;		Unchanged: 0/0
 36901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36902 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36903 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36904 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36905 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36906 ;;Total ram usage:        0 bytes
 36907 ;; Hardware stack levels used:    1
 36908 ;; Hardware stack levels required when called:   15
 36909 ;; This function calls:
 36910 ;;		Nothing
 36911 ;; This function is called by:
 36912 ;;		_ADCC_Initialize
 36913 ;;		_start_adc_scan
 36914 ;; This function uses a reentrant model
 36915 ;;
 36916                           
 36917                           	psect	text158
 36918  01D6AA                     __ptext158:
 36919                           	opt callstack 0
 36920  01D6AA                     _ADCC_SetADTIInterruptHandler:
 36921                           	opt callstack 14
 36922                           
 36923                           ;mcc_generated_files/adcc.c: 337:     ADCC_ADTI_InterruptHandler = InterruptHandler;
 36924                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 36925                           
 36926                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36927                           ;incstack = 0
 36928  01D6AA  50E1               	movf	fsr1l,w,c
 36929  01D6AC  0FFD               	addlw	-3
 36930  01D6AE  6ED9               	movwf	fsr2l,c
 36931  01D6B0  50E2               	movf	fsr1h,w,c
 36932  01D6B2  6EDA               	movwf	fsr2h,c
 36933  01D6B4  0EFF               	movlw	255
 36934  01D6B6  22DA               	addwfc	fsr2h,f,c
 36935  01D6B8  006F FF78  F0AB    	movff	postinc2,_ADCC_ADTI_InterruptHandler
 36936  01D6BE  006F FF78  F0AC    	movff	postinc2,_ADCC_ADTI_InterruptHandler+1
 36937  01D6C4  006F FF74  F0AD    	movff	postdec2,_ADCC_ADTI_InterruptHandler+2
 36938                           
 36939                           ; _ADCC_SetADTIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 3, argsize = 3, vargsize = 0
 36940  01D6CA  52E5               	movf	postdec1,f,c
 36941  01D6CC  52E5               	movf	postdec1,f,c
 36942  01D6CE  52E5               	movf	postdec1,f,c
 36943  01D6D0  0012               	return		;funcret
 36944  01D6D2                     __end_of_ADCC_SetADTIInterruptHandler:
 36945                           	opt callstack 0
 36946                           
 36947 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 36948 ;; Defined at:
 36949 ;;		line 323 in file "mcc_generated_files/adcc.c"
 36950 ;; Parameters:    Size  Location     Type
 36951 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 36952 ;;		 -> adc_int_handler(1), ADCC_DefaultInterruptHandler(1), 
 36953 ;; Auto vars:     Size  Location     Type
 36954 ;;		None
 36955 ;; Return value:  Size  Location     Type
 36956 ;;                  1  [STACK] void 
 36957 ;; Registers used:
 36958 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 36959 ;; Tracked objects:
 36960 ;;		On entry : 7/1
 36961 ;;		On exit  : 0/0
 36962 ;;		Unchanged: 0/0
 36963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36964 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36965 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36967 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36968 ;;Total ram usage:        0 bytes
 36969 ;; Hardware stack levels used:    1
 36970 ;; Hardware stack levels required when called:   15
 36971 ;; This function calls:
 36972 ;;		Nothing
 36973 ;; This function is called by:
 36974 ;;		_ADCC_Initialize
 36975 ;;		_start_adc_scan
 36976 ;; This function uses a reentrant model
 36977 ;;
 36978                           
 36979                           	psect	text159
 36980  01D6D2                     __ptext159:
 36981                           	opt callstack 0
 36982  01D6D2                     _ADCC_SetADIInterruptHandler:
 36983                           	opt callstack 14
 36984                           
 36985                           ;mcc_generated_files/adcc.c: 324:     ADCC_ADI_InterruptHandler = InterruptHandler;
 36986                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 36987                           
 36988                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36989                           ;incstack = 0
 36990  01D6D2  50E1               	movf	fsr1l,w,c
 36991  01D6D4  0FFD               	addlw	-3
 36992  01D6D6  6ED9               	movwf	fsr2l,c
 36993  01D6D8  50E2               	movf	fsr1h,w,c
 36994  01D6DA  6EDA               	movwf	fsr2h,c
 36995  01D6DC  0EFF               	movlw	255
 36996  01D6DE  22DA               	addwfc	fsr2h,f,c
 36997  01D6E0  006F FF78  F0AE    	movff	postinc2,_ADCC_ADI_InterruptHandler
 36998  01D6E6  006F FF78  F0AF    	movff	postinc2,_ADCC_ADI_InterruptHandler+1
 36999  01D6EC  006F FF74  F0B0    	movff	postdec2,_ADCC_ADI_InterruptHandler+2
 37000                           
 37001                           ; _ADCC_SetADIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 37002  01D6F2  52E5               	movf	postdec1,f,c
 37003  01D6F4  52E5               	movf	postdec1,f,c
 37004  01D6F6  52E5               	movf	postdec1,f,c
 37005  01D6F8  0012               	return		;funcret
 37006  01D6FA                     __end_of_ADCC_SetADIInterruptHandler:
 37007                           	opt callstack 0
 37008                           
 37009 ;; *************** function _INT1_ISR *****************
 37010 ;; Defined at:
 37011 ;;		line 62 in file "mcc_generated_files/ext_int.c"
 37012 ;; Parameters:    Size  Location     Type
 37013 ;;		None
 37014 ;; Auto vars:     Size  Location     Type
 37015 ;;		None
 37016 ;; Return value:  Size  Location     Type
 37017 ;;                  1    wreg      void 
 37018 ;; Registers used:
 37019 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 37020 ;; Tracked objects:
 37021 ;;		On entry : 0/0
 37022 ;;		On exit  : 0/0
 37023 ;;		Unchanged: 0/0
 37024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37025 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37026 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37027 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37028 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37029 ;;Total ram usage:        4 bytes
 37030 ;; Hardware stack levels used:    1
 37031 ;; Hardware stack levels required when called:    5
 37032 ;; This function calls:
 37033 ;;		_INT1_CallBack
 37034 ;; This function is called by:
 37035 ;;		Interrupt level 1
 37036 ;; This function uses a non-reentrant model
 37037 ;;
 37038                           
 37039                           	psect	text160
 37040  01D128                     __ptext160:
 37041                           	opt callstack 0
 37042  01D128                     _INT1_ISR:
 37043                           	opt callstack 11
 37044                           
 37045                           ;incstack = 0
 37046  01D128  006F FF60  F027    	movff	status,??_INT1_ISR
 37047  01D12E  0060  F004  F028   	movff	btemp,??_INT1_ISR+1
 37048  01D134  0060  F02C  F029   	movff	btemp+10,??_INT1_ISR+2
 37049  01D13A  0060  F030  F02A   	movff	btemp+11,??_INT1_ISR+3
 37050  01D140  EE16  F104         	lfsr	1,___intlo_sp
 37051                           
 37052                           ;mcc_generated_files/ext_int.c: 64:  (PIR5bits.INT1IF = 0);
 37053  01D144  0139               	movlb	57	; () banked
 37054  01D146  91A5               	bcf	165,0,b	;volatile
 37055                           
 37056                           ; BSR set to: 57
 37057                           ;mcc_generated_files/ext_int.c: 67:  INT1_CallBack();
 37058  01D148  ECCC  F0EB         	call	_INT1_CallBack	;wreg free
 37059  01D14C  0060  F0A8  F00C   	movff	??_INT1_ISR+3,btemp+11
 37060  01D152  0060  F0A4  F00B   	movff	??_INT1_ISR+2,btemp+10
 37061  01D158  0060  F0A0  F001   	movff	??_INT1_ISR+1,btemp
 37062  01D15E  0060  F09F  FFD8   	movff	??_INT1_ISR,status
 37063  01D164  0011               	retfie		f
 37064  01D166                     __end_of_INT1_ISR:
 37065                           	opt callstack 0
 37066                           
 37067 ;; *************** function _INT1_CallBack *****************
 37068 ;; Defined at:
 37069 ;;		line 70 in file "mcc_generated_files/ext_int.c"
 37070 ;; Parameters:    Size  Location     Type
 37071 ;;		None
 37072 ;; Auto vars:     Size  Location     Type
 37073 ;;		None
 37074 ;; Return value:  Size  Location     Type
 37075 ;;                  1  [STACK] void 
 37076 ;; Registers used:
 37077 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 37078 ;; Tracked objects:
 37079 ;;		On entry : 3F/39
 37080 ;;		On exit  : 0/0
 37081 ;;		Unchanged: 0/0
 37082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37083 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37084 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37085 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37086 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37087 ;;Total ram usage:        0 bytes
 37088 ;; Hardware stack levels used:    1
 37089 ;; Hardware stack levels required when called:    4
 37090 ;; This function calls:
 37091 ;;		Absolute function
 37092 ;;		_INT1_DefaultInterruptHandler
 37093 ;;		_switch_handler
 37094 ;; This function is called by:
 37095 ;;		_INT1_ISR
 37096 ;; This function uses a reentrant model
 37097 ;;
 37098                           
 37099                           	psect	text161
 37100  01D798                     __ptext161:
 37101                           	opt callstack 0
 37102  01D798                     _INT1_CallBack:
 37103                           	opt callstack 11
 37104                           
 37105                           ;mcc_generated_files/ext_int.c: 73:  if (INT1_InterruptHandler) {
 37106                           
 37107                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37108                           ;incstack = 0
 37109  01D798  0100               	movlb	0	; () banked
 37110  01D79A  51BA               	movf	_INT1_InterruptHandler& (0+255),w,b
 37111  01D79C  11BB               	iorwf	(_INT1_InterruptHandler+1)& (0+255),w,b
 37112  01D79E  11BC               	iorwf	(_INT1_InterruptHandler+2)& (0+255),w,b
 37113  01D7A0  B4D8               	btfsc	status,2,c
 37114  01D7A2  0012               	return	
 37115                           
 37116                           ; BSR set to: 0
 37117                           ;mcc_generated_files/ext_int.c: 74:   INT1_InterruptHandler();
 37118  01D7A4  D801               	call	u1099_28
 37119  01D7A6  0012               	return	
 37120  01D7A8                     u1099_28:
 37121  01D7A8  0005               	push	
 37122  01D7AA  6EFA               	movwf	pclath,c
 37123  01D7AC  51BA               	movf	_INT1_InterruptHandler& (0+255),w,b
 37124  01D7AE  6EFD               	movwf	tosl,c
 37125  01D7B0  51BB               	movf	(_INT1_InterruptHandler+1)& (0+255),w,b
 37126  01D7B2  6EFE               	movwf	tosh,c
 37127  01D7B4  51BC               	movf	(_INT1_InterruptHandler+2)& (0+255),w,b
 37128  01D7B6  6EFF               	movwf	tosu,c
 37129  01D7B8  50FA               	movf	pclath,w,c
 37130  01D7BA  0012               	return		;indir
 37131  01D7BC                     __end_of_INT1_CallBack:
 37132                           	opt callstack 0
 37133                           
 37134 ;; *************** function _INT1_DefaultInterruptHandler *****************
 37135 ;; Defined at:
 37136 ;;		line 83 in file "mcc_generated_files/ext_int.c"
 37137 ;; Parameters:    Size  Location     Type
 37138 ;;		None
 37139 ;; Auto vars:     Size  Location     Type
 37140 ;;		None
 37141 ;; Return value:  Size  Location     Type
 37142 ;;                  1  [STACK] void 
 37143 ;; Registers used:
 37144 ;;		None
 37145 ;; Tracked objects:
 37146 ;;		On entry : 3F/0
 37147 ;;		On exit  : 0/0
 37148 ;;		Unchanged: 0/0
 37149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37150 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37151 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37152 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37153 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37154 ;;Total ram usage:        0 bytes
 37155 ;; Hardware stack levels used:    1
 37156 ;; Hardware stack levels required when called:    3
 37157 ;; This function calls:
 37158 ;;		Nothing
 37159 ;; This function is called by:
 37160 ;;		_EXT_INT_Initialize
 37161 ;;		_INT1_CallBack
 37162 ;; This function uses a reentrant model
 37163 ;;
 37164                           
 37165                           	psect	text162
 37166  01DB92                     __ptext162:
 37167                           	opt callstack 0
 37168  01DB92                     _INT1_DefaultInterruptHandler:
 37169                           	opt callstack 11
 37170                           
 37171                           ; _INT1_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 37172                           
 37173                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37174                           ;incstack = 0
 37175  01DB92  0012               	return		;funcret
 37176  01DB94                     __end_of_INT1_DefaultInterruptHandler:
 37177                           	opt callstack 0
 37178                           
 37179 ;; *************** function _switch_handler *****************
 37180 ;; Defined at:
 37181 ;;		line 58 in file "dio.c"
 37182 ;; Parameters:    Size  Location     Type
 37183 ;;		None
 37184 ;; Auto vars:     Size  Location     Type
 37185 ;;  i               1  [STACK] unsigned char 
 37186 ;;  sw_value        1  [STACK] unsigned char 
 37187 ;; Return value:  Size  Location     Type
 37188 ;;                  1  [STACK] void 
 37189 ;; Registers used:
 37190 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
 37191 ;; Tracked objects:
 37192 ;;		On entry : 3F/0
 37193 ;;		On exit  : 0/0
 37194 ;;		Unchanged: 0/0
 37195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37196 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37197 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37198 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37199 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37200 ;;Total ram usage:        0 bytes
 37201 ;; Hardware stack levels used:    1
 37202 ;; Hardware stack levels required when called:    3
 37203 ;; This function calls:
 37204 ;;		Nothing
 37205 ;; This function is called by:
 37206 ;;		_start_switch_handler
 37207 ;;		_INT1_CallBack
 37208 ;; This function uses a reentrant model
 37209 ;;
 37210                           
 37211                           	psect	text163
 37212  01A560                     __ptext163:
 37213                           	opt callstack 0
 37214  01A560                     _switch_handler:
 37215                           	opt callstack 0
 37216                           
 37217                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37218  01A560  52E6               	movf	postinc1,f,c
 37219  01A562  52E6               	movf	postinc1,f,c
 37220                           
 37221                           ;dio.c: 60:  uint8_t i = 0, sw_value;
 37222                           ;stkvar	_i @ sp[(-2)+0]
 37223                           
 37224                           ;incstack = 0
 37225  01A564  0EFE               	movlw	-2
 37226  01A566  6AE3               	clrf	plusw1,c
 37227  01A568  9ABF               	bcf	191,5,c	;volatile
 37228                           
 37229                           ;dio.c: 72:  __nop();
 37230  01A56A  F000               	nop	
 37231                           
 37232                           ;dio.c: 73:  __nop();
 37233  01A56C  F000               	nop	
 37234                           
 37235                           ;dio.c: 74:  __nop();
 37236  01A56E  F000               	nop	
 37237                           
 37238                           ;dio.c: 75:  __nop();
 37239  01A570  F000               	nop	
 37240                           
 37241                           ;dio.c: 76:  __nop();
 37242  01A572  F000               	nop	
 37243                           
 37244                           ;dio.c: 77:  __nop();
 37245  01A574  F000               	nop	
 37246  01A576  D016               	goto	l11700
 37247  01A578                     l11686:
 37248                           
 37249                           ;dio.c: 82:    sw_value = PORTFbits.RF3;
 37250  01A578  A6CF               	btfss	207,3,c	;volatile
 37251  01A57A  D00E               	goto	u1065_20
 37252  01A57C  D00A               	goto	u1065_21
 37253  01A57E                     u1063_28:
 37254                           
 37255                           ;stkvar	_sw_value @ sp[(-2)+1]
 37256  01A57E  0EFF               	movlw	-1
 37257  01A580  0060  F033  FFE3   	movff	btemp+11,plusw1
 37258                           
 37259                           ;dio.c: 83:    break;
 37260  01A586  D027               	goto	l11702
 37261  01A588                     l11688:
 37262                           
 37263                           ;dio.c: 85:    sw_value = PORTFbits.RF2;
 37264  01A588  A4CF               	btfss	207,2,c	;volatile
 37265  01A58A  D006               	goto	u1065_20
 37266  01A58C  D002               	goto	u1065_21
 37267  01A58E                     l11690:
 37268                           
 37269                           ;dio.c: 88:    sw_value = PORTDbits.RD3;
 37270  01A58E  A6CD               	btfss	205,3,c	;volatile
 37271  01A590  D003               	goto	u1065_20
 37272  01A592                     u1065_21:
 37273  01A592  6A0C               	clrf	(btemp+11)^0,c
 37274  01A594  2A0C               	incf	(btemp+11)^0,f,c
 37275  01A596  D7F3               	goto	u1063_28
 37276  01A598                     u1065_20:
 37277  01A598  6A0C               	clrf	(btemp+11)^0,c
 37278  01A59A  D7F1               	goto	u1063_28
 37279  01A59C                     l11692:
 37280                           
 37281                           ;dio.c: 91:    sw_value = 1;
 37282                           ;stkvar	_sw_value @ sp[(-2)+1]
 37283  01A59C  0EFF               	movlw	-1
 37284  01A59E  6AE3               	clrf	plusw1,c
 37285  01A5A0  2AE3               	incf	plusw1,f,c
 37286                           
 37287                           ;dio.c: 92:    break;
 37288  01A5A2  D019               	goto	l11702
 37289  01A5A4                     l11700:
 37290                           
 37291                           ;stkvar	_i @ sp[(-2)+0]
 37292  01A5A4  0EFE               	movlw	-2
 37293  01A5A6  50E3               	movf	plusw1,w,c
 37294  01A5A8  6E0B               	movwf	(btemp+10)^0,c
 37295  01A5AA  6A0C               	clrf	(btemp+11)^0,c
 37296                           
 37297                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 37298                           ; Switch size 1, requested type "simple"
 37299                           ; Number of cases is 1, Range of values is 0 to 0
 37300                           ; switch strategies available:
 37301                           ; Name         Instructions Cycles
 37302                           ; simple_byte            4     3 (average)
 37303                           ;	Chosen strategy is simple_byte
 37304  01A5AC  500C               	movf	(btemp+11)^0,w,c
 37305  01A5AE  0A00               	xorlw	0	; case 0
 37306  01A5B0  A4D8               	btfss	status,2,c
 37307  01A5B2  D7F4               	goto	l11692
 37308                           
 37309                           ; Switch size 1, requested type "simple"
 37310                           ; Number of cases is 5, Range of values is 0 to 4
 37311                           ; switch strategies available:
 37312                           ; Name         Instructions Cycles
 37313                           ; simple_byte           16     9 (average)
 37314                           ;	Chosen strategy is simple_byte
 37315  01A5B4  500B               	movf	(btemp+10)^0,w,c
 37316  01A5B6  0A00               	xorlw	0	; case 0
 37317  01A5B8  B4D8               	btfsc	status,2,c
 37318  01A5BA  D7F0               	goto	l11692
 37319  01A5BC  0A01               	xorlw	1	; case 1
 37320  01A5BE  B4D8               	btfsc	status,2,c
 37321  01A5C0  D7ED               	goto	l11692
 37322  01A5C2  0A03               	xorlw	3	; case 2
 37323  01A5C4  B4D8               	btfsc	status,2,c
 37324  01A5C6  D7E0               	goto	l11688
 37325  01A5C8  0A01               	xorlw	1	; case 3
 37326  01A5CA  B4D8               	btfsc	status,2,c
 37327  01A5CC  D7D5               	goto	l11686
 37328  01A5CE  0A07               	xorlw	7	; case 4
 37329  01A5D0  B4D8               	btfsc	status,2,c
 37330  01A5D2  D7DD               	goto	l11690
 37331  01A5D4  D7E3               	goto	l11692
 37332  01A5D6                     l11702:
 37333                           
 37334                           ;dio.c: 102:   if (sw_value) {
 37335                           ;stkvar	_sw_value @ sp[(-2)+1]
 37336  01A5D6  0EFF               	movlw	-1
 37337  01A5D8  50E3               	movf	plusw1,w,c
 37338  01A5DA  B4D8               	btfsc	status,2,c
 37339  01A5DC  D018               	goto	l11708
 37340                           
 37341                           ;dio.c: 103:    if (S.button[i].sw == SW_ON) {
 37342                           ;stkvar	_i @ sp[(-2)+0]
 37343  01A5DE  0EFE               	movlw	-2
 37344  01A5E0  50E3               	movf	plusw1,w,c
 37345  01A5E2  0D05               	mullw	5
 37346  01A5E4  0E96               	movlw	low _S
 37347  01A5E6  24F3               	addwf	243,w,c
 37348  01A5E8  6ED9               	movwf	fsr2l,c
 37349  01A5EA  0E01               	movlw	high _S
 37350  01A5EC  20F4               	addwfc	prodh,w,c
 37351  01A5EE  6EDA               	movwf	fsr2h,c
 37352  01A5F0  04DE               	decf	postinc2,w,c
 37353  01A5F2  A4D8               	btfss	status,2,c
 37354  01A5F4  D049               	goto	l11716
 37355                           
 37356                           ;dio.c: 104:     S.button[i].sw = SW_OFF;
 37357                           ;stkvar	_i @ sp[(-2)+0]
 37358  01A5F6  0EFE               	movlw	-2
 37359  01A5F8  50E3               	movf	plusw1,w,c
 37360  01A5FA  0D05               	mullw	5
 37361  01A5FC  0E96               	movlw	low _S
 37362  01A5FE  24F3               	addwf	243,w,c
 37363  01A600  6ED9               	movwf	fsr2l,c
 37364  01A602  0E01               	movlw	high _S
 37365  01A604  20F4               	addwfc	prodh,w,c
 37366  01A606  6EDA               	movwf	fsr2h,c
 37367  01A608  0E00               	movlw	0
 37368  01A60A  6EDF               	movwf	indf2,c
 37369  01A60C  D03D               	goto	l11716
 37370  01A60E                     l11708:
 37371                           
 37372                           ;dio.c: 107:    if (S.button[i].sw == SW_OFF) {
 37373                           ;stkvar	_i @ sp[(-2)+0]
 37374  01A60E  0EFE               	movlw	-2
 37375  01A610  50E3               	movf	plusw1,w,c
 37376  01A612  0D05               	mullw	5
 37377  01A614  0E96               	movlw	low _S
 37378  01A616  24F3               	addwf	243,w,c
 37379  01A618  6ED9               	movwf	fsr2l,c
 37380  01A61A  0E01               	movlw	high _S
 37381  01A61C  20F4               	addwfc	prodh,w,c
 37382  01A61E  6EDA               	movwf	fsr2h,c
 37383  01A620  50DF               	movf	indf2,w,c
 37384  01A622  A4D8               	btfss	status,2,c
 37385  01A624  D031               	goto	l11716
 37386                           
 37387                           ;dio.c: 108:     S.button[i].sw = SW_ON;
 37388                           ;stkvar	_i @ sp[(-2)+0]
 37389  01A626  0EFE               	movlw	-2
 37390  01A628  50E3               	movf	plusw1,w,c
 37391  01A62A  0D05               	mullw	5
 37392  01A62C  0E96               	movlw	low _S
 37393  01A62E  24F3               	addwf	243,w,c
 37394  01A630  6ED9               	movwf	fsr2l,c
 37395  01A632  0E01               	movlw	high _S
 37396  01A634  20F4               	addwfc	prodh,w,c
 37397  01A636  6EDA               	movwf	fsr2h,c
 37398  01A638  0E01               	movlw	1
 37399  01A63A  6EDF               	movwf	indf2,c
 37400                           
 37401                           ;dio.c: 109:     S.button[i].count = V.timerint_count;
 37402  01A63C  EE20  F2BC         	lfsr	2,_V+188	;volatile
 37403                           
 37404                           ;stkvar	_i @ sp[(-2)+0]
 37405  01A640  0EFE               	movlw	-2
 37406  01A642  50E3               	movf	plusw1,w,c
 37407  01A644  0D05               	mullw	5
 37408  01A646  0E97               	movlw	low (_S+1)
 37409  01A648  24F3               	addwf	243,w,c
 37410  01A64A  6EE9               	movwf	fsr0l,c
 37411  01A64C  0E01               	movlw	high (_S+1)
 37412  01A64E  20F4               	addwfc	prodh,w,c
 37413  01A650  6EEA               	movwf	fsr0h,c
 37414  01A652  006F FF7B FFEE     	movff	postinc2,postinc0
 37415  01A658  006F FF7B FFEE     	movff	postinc2,postinc0
 37416  01A65E  006F FF7B FFEE     	movff	postinc2,postinc0
 37417  01A664  006F FF7B FFEE     	movff	postinc2,postinc0
 37418                           
 37419                           ;dio.c: 110:     S.sw_bitmap |= 1 << i;
 37420                           ;stkvar	_i @ sp[(-2)+0]
 37421  01A66A  0EFE               	movlw	-2
 37422  01A66C  006F FF8C  F00C    	movff	plusw1,btemp+11
 37423  01A672  0E01               	movlw	1
 37424  01A674  6E0B               	movwf	(btemp+10)^0,c
 37425  01A676  2A0C               	incf	(btemp+11)^0,f,c
 37426  01A678  D002               	goto	u1069_24
 37427  01A67A                     u1069_25:
 37428  01A67A  90D8               	bcf	status,0,c
 37429  01A67C  360B               	rlcf	(btemp+10)^0,f,c
 37430  01A67E                     u1069_24:
 37431  01A67E  2E0C               	decfsz	(btemp+11)^0,f,c
 37432  01A680  D7FC               	goto	u1069_25
 37433  01A682  500B               	movf	(btemp+10)^0,w,c
 37434  01A684  0101               	movlb	1	; () banked
 37435  01A686  13BE               	iorwf	(_S+40)& (0+255),f,b	;volatile
 37436  01A688                     l11716:
 37437                           
 37438                           ;dio.c: 113:  } while (++i < 6);
 37439                           ;stkvar	_i @ sp[(-2)+0]
 37440  01A688  0EFE               	movlw	-2
 37441  01A68A  2AE3               	incf	plusw1,f,c
 37442  01A68C  0EFE               	movlw	-2
 37443  01A68E  006F FF8C  F001    	movff	plusw1,btemp
 37444  01A694  0E05               	movlw	5
 37445  01A696  6401               	cpfsgt	btemp^0,c
 37446  01A698  D785               	goto	l11700
 37447                           
 37448                           ;dio.c: 122:  do { LATFbits.LATF5 = 1; } while(0);
 37449  01A69A  8ABF               	bsf	191,5,c	;volatile
 37450                           
 37451                           ; _switch_handler: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 37452  01A69C  52E5               	movf	postdec1,f,c
 37453  01A69E  52E5               	movf	postdec1,f,c
 37454  01A6A0  0012               	return		;funcret
 37455  01A6A2                     __end_of_switch_handler:
 37456                           	opt callstack 0
 37457                           
 37458 ;; *************** function _TMR5_ISR *****************
 37459 ;; Defined at:
 37460 ;;		line 166 in file "mcc_generated_files/tmr5.c"
 37461 ;; Parameters:    Size  Location     Type
 37462 ;;		None
 37463 ;; Auto vars:     Size  Location     Type
 37464 ;;		None
 37465 ;; Return value:  Size  Location     Type
 37466 ;;                  1    wreg      void 
 37467 ;; Registers used:
 37468 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, prodl, prodh
 37469 ;; Tracked objects:
 37470 ;;		On entry : 0/0
 37471 ;;		On exit  : 3F/0
 37472 ;;		Unchanged: 0/0
 37473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37474 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37475 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37476 ;;      Temps:         15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37477 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37478 ;;Total ram usage:       15 bytes
 37479 ;; Hardware stack levels used:    1
 37480 ;; Hardware stack levels required when called:    9
 37481 ;; This function calls:
 37482 ;;		_TMR5_CallBack
 37483 ;;		_TMR5_WriteTimer
 37484 ;; This function is called by:
 37485 ;;		Interrupt level 1
 37486 ;; This function uses a non-reentrant model
 37487 ;;
 37488                           
 37489                           	psect	text164
 37490  01B394                     __ptext164:
 37491                           	opt callstack 0
 37492  01B394                     _TMR5_ISR:
 37493                           	opt callstack 7
 37494                           
 37495                           ;incstack = 0
 37496  01B394  006F FF60  F02D    	movff	status,??_TMR5_ISR+2
 37497  01B39A  0060  F004  F02E   	movff	btemp,??_TMR5_ISR+3
 37498  01B3A0  0060  F008  F02F   	movff	btemp+1,??_TMR5_ISR+4
 37499  01B3A6  0060  F00C  F030   	movff	btemp+2,??_TMR5_ISR+5
 37500  01B3AC  0060  F010  F031   	movff	btemp+3,??_TMR5_ISR+6
 37501  01B3B2  0060  F014  F032   	movff	btemp+4,??_TMR5_ISR+7
 37502  01B3B8  0060  F018  F033   	movff	btemp+5,??_TMR5_ISR+8
 37503  01B3BE  0060  F01C  F034   	movff	btemp+6,??_TMR5_ISR+9
 37504  01B3C4  0060  F020  F035   	movff	btemp+7,??_TMR5_ISR+10
 37505  01B3CA  0060  F024  F036   	movff	btemp+8,??_TMR5_ISR+11
 37506  01B3D0  0060  F028  F037   	movff	btemp+9,??_TMR5_ISR+12
 37507  01B3D6  0060  F02C  F038   	movff	btemp+10,??_TMR5_ISR+13
 37508  01B3DC  0060  F030  F039   	movff	btemp+11,??_TMR5_ISR+14
 37509  01B3E2  EE16  F104         	lfsr	1,___intlo_sp
 37510                           
 37511                           ;mcc_generated_files/tmr5.c: 168:  static volatile unsigned int CountCallBack = 0;;mcc_g
      +                          enerated_files/tmr5.c: 171:  PIR8bits.TMR5IF = 0;
 37512  01B3E6  0139               	movlb	57	; () banked
 37513  01B3E8  9DA8               	bcf	168,6,b	;volatile
 37514                           
 37515                           ; BSR set to: 57
 37516                           ;mcc_generated_files/tmr5.c: 172:  TMR5_WriteTimer(timer5ReloadVal);
 37517  01B3EA  0060  F323  FFE6   	movff	_timer5ReloadVal,postinc1
 37518  01B3F0  0060  F327  FFE6   	movff	_timer5ReloadVal+1,postinc1
 37519  01B3F6  EC53  F0E8         	call	_TMR5_WriteTimer	;wreg free
 37520                           
 37521                           ;mcc_generated_files/tmr5.c: 175:  if (++CountCallBack >= (5 +V.ticker)) {
 37522  01B3FA  0102               	movlb	2	; () banked
 37523  01B3FC  51AA               	movf	(_V+170)& (0+255),w,b	;volatile
 37524  01B3FE  6E2B               	movwf	??_TMR5_ISR^0,c
 37525  01B400  6A2C               	clrf	(??_TMR5_ISR+1)^0,c
 37526  01B402  0E05               	movlw	5
 37527  01B404  262B               	addwf	??_TMR5_ISR^0,f,c
 37528  01B406  0E00               	movlw	0
 37529  01B408  222C               	addwfc	(??_TMR5_ISR+1)^0,f,c
 37530  01B40A  0100               	movlb	0	; () banked
 37531  01B40C  4BC6               	infsnz	TMR5_ISR@CountCallBack& (0+255),f,b	;volatile
 37532  01B40E  2BC7               	incf	(TMR5_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 37533  01B410  502B               	movf	??_TMR5_ISR^0,w,c
 37534  01B412  5DC6               	subwf	TMR5_ISR@CountCallBack& (0+255),w,b	;volatile
 37535  01B414  502C               	movf	(??_TMR5_ISR+1)^0,w,c
 37536  01B416  59C7               	subwfb	(TMR5_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 37537  01B418  A0D8               	btfss	status,0,c
 37538  01B41A  D005               	goto	i1l1021
 37539                           
 37540                           ; BSR set to: 0
 37541                           ;mcc_generated_files/tmr5.c: 177:   TMR5_CallBack();
 37542  01B41C  ECDE  F0EB         	call	_TMR5_CallBack	;wreg free
 37543                           
 37544                           ;mcc_generated_files/tmr5.c: 180:   CountCallBack = 0;
 37545  01B420  0100               	movlb	0	; () banked
 37546  01B422  6BC6               	clrf	TMR5_ISR@CountCallBack& (0+255),b	;volatile
 37547  01B424  6BC7               	clrf	(TMR5_ISR@CountCallBack+1)& (0+255),b	;volatile
 37548  01B426                     i1l1021:
 37549                           
 37550                           ; BSR set to: 0
 37551  01B426  0060  F0E4  F00C   	movff	??_TMR5_ISR+14,btemp+11
 37552  01B42C  0060  F0E0  F00B   	movff	??_TMR5_ISR+13,btemp+10
 37553  01B432  0060  F0DC  F00A   	movff	??_TMR5_ISR+12,btemp+9
 37554  01B438  0060  F0D8  F009   	movff	??_TMR5_ISR+11,btemp+8
 37555  01B43E  0060  F0D4  F008   	movff	??_TMR5_ISR+10,btemp+7
 37556  01B444  0060  F0D0  F007   	movff	??_TMR5_ISR+9,btemp+6
 37557  01B44A  0060  F0CC  F006   	movff	??_TMR5_ISR+8,btemp+5
 37558  01B450  0060  F0C8  F005   	movff	??_TMR5_ISR+7,btemp+4
 37559  01B456  0060  F0C4  F004   	movff	??_TMR5_ISR+6,btemp+3
 37560  01B45C  0060  F0C0  F003   	movff	??_TMR5_ISR+5,btemp+2
 37561  01B462  0060  F0BC  F002   	movff	??_TMR5_ISR+4,btemp+1
 37562  01B468  0060  F0B8  F001   	movff	??_TMR5_ISR+3,btemp
 37563  01B46E  0060  F0B7  FFD8   	movff	??_TMR5_ISR+2,status
 37564  01B474  0011               	retfie		f
 37565  01B476                     __end_of_TMR5_ISR:
 37566                           	opt callstack 0
 37567                           
 37568 ;; *************** function _TMR5_WriteTimer *****************
 37569 ;; Defined at:
 37570 ;;		line 132 in file "mcc_generated_files/tmr5.c"
 37571 ;; Parameters:    Size  Location     Type
 37572 ;;  timerVal        2  [STACK] unsigned short 
 37573 ;; Auto vars:     Size  Location     Type
 37574 ;;		None
 37575 ;; Return value:  Size  Location     Type
 37576 ;;                  1  [STACK] void 
 37577 ;; Registers used:
 37578 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 37579 ;; Tracked objects:
 37580 ;;		On entry : 3F/39
 37581 ;;		On exit  : 0/0
 37582 ;;		Unchanged: 0/0
 37583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37584 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37585 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37586 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37587 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37588 ;;Total ram usage:        0 bytes
 37589 ;; Hardware stack levels used:    1
 37590 ;; Hardware stack levels required when called:    3
 37591 ;; This function calls:
 37592 ;;		Nothing
 37593 ;; This function is called by:
 37594 ;;		_TMR5_ISR
 37595 ;; This function uses a reentrant model
 37596 ;;
 37597                           
 37598                           	psect	text165
 37599  01D0A6                     __ptext165:
 37600                           	opt callstack 0
 37601  01D0A6                     _TMR5_WriteTimer:
 37602                           	opt callstack 12
 37603                           
 37604                           ;mcc_generated_files/tmr5.c: 132: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 133: {;mcc_generated_files/tmr5.c: 134:  if (T5CONbits.NOT_SYNC == 1) {
 37605                           
 37606                           ; BSR set to: 0
 37607                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37608                           ;incstack = 0
 37609  01D0A6  A49A               	btfss	154,2,c	;volatile
 37610  01D0A8  D00F               	goto	l11928
 37611                           
 37612                           ;mcc_generated_files/tmr5.c: 136:   T5CONbits.TMR5ON = 0;
 37613  01D0AA  909A               	bcf	154,0,c	;volatile
 37614                           
 37615                           ;mcc_generated_files/tmr5.c: 139:   TMR5H = (timerVal >> 8);
 37616                           ;stkvar	_timerVal @ sp[(0)+-2]
 37617  01D0AC  0EFF               	movlw	255
 37618  01D0AE  24E1               	addwf	fsr1l,w,c
 37619  01D0B0  6ED9               	movwf	fsr2l,c
 37620  01D0B2  0EFF               	movlw	255
 37621  01D0B4  20E2               	addwfc	fsr1h,w,c
 37622  01D0B6  6EDA               	movwf	fsr2h,c
 37623  01D0B8  50DF               	movf	indf2,w,c
 37624  01D0BA  6E99               	movwf	153,c	;volatile
 37625                           
 37626                           ;mcc_generated_files/tmr5.c: 140:   TMR5L = timerVal;
 37627                           ;stkvar	_timerVal @ sp[(0)+-2]
 37628  01D0BC  0EFE               	movlw	-2
 37629  01D0BE  006F FF8F FF98     	movff	plusw1,16280	;volatile
 37630                           
 37631                           ;mcc_generated_files/tmr5.c: 143:   T5CONbits.TMR5ON = 1;
 37632  01D0C4  809A               	bsf	154,0,c	;volatile
 37633                           
 37634                           ;mcc_generated_files/tmr5.c: 144:  } else {
 37635  01D0C6  D00C               	goto	l1004
 37636  01D0C8                     l11928:
 37637                           
 37638                           ;mcc_generated_files/tmr5.c: 146:   TMR5H = (timerVal >> 8);
 37639                           ;stkvar	_timerVal @ sp[(0)+-2]
 37640  01D0C8  0EFF               	movlw	255
 37641  01D0CA  24E1               	addwf	fsr1l,w,c
 37642  01D0CC  6ED9               	movwf	fsr2l,c
 37643  01D0CE  0EFF               	movlw	255
 37644  01D0D0  20E2               	addwfc	fsr1h,w,c
 37645  01D0D2  6EDA               	movwf	fsr2h,c
 37646  01D0D4  50DF               	movf	indf2,w,c
 37647  01D0D6  6E99               	movwf	153,c	;volatile
 37648                           
 37649                           ;mcc_generated_files/tmr5.c: 147:   TMR5L = timerVal;
 37650                           ;stkvar	_timerVal @ sp[(0)+-2]
 37651  01D0D8  0EFE               	movlw	-2
 37652  01D0DA  006F FF8F FF98     	movff	plusw1,16280	;volatile
 37653  01D0E0                     l1004:
 37654                           
 37655                           ; _TMR5_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 37656  01D0E0  52E5               	movf	postdec1,f,c
 37657  01D0E2  52E5               	movf	postdec1,f,c
 37658  01D0E4  0012               	return		;funcret
 37659  01D0E6                     __end_of_TMR5_WriteTimer:
 37660                           	opt callstack 0
 37661                           
 37662 ;; *************** function _TMR5_CallBack *****************
 37663 ;; Defined at:
 37664 ;;		line 184 in file "mcc_generated_files/tmr5.c"
 37665 ;; Parameters:    Size  Location     Type
 37666 ;;		None
 37667 ;; Auto vars:     Size  Location     Type
 37668 ;;		None
 37669 ;; Return value:  Size  Location     Type
 37670 ;;                  1  [STACK] void 
 37671 ;; Registers used:
 37672 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, prodl, prodh
 37673 ;; Tracked objects:
 37674 ;;		On entry : 3F/0
 37675 ;;		On exit  : 0/0
 37676 ;;		Unchanged: 0/0
 37677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37678 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37679 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37680 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37681 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37682 ;;Total ram usage:        0 bytes
 37683 ;; Hardware stack levels used:    1
 37684 ;; Hardware stack levels required when called:    8
 37685 ;; This function calls:
 37686 ;;		Absolute function
 37687 ;;		_TMR5_DefaultInterruptHandler
 37688 ;; This function is called by:
 37689 ;;		_TMR5_ISR
 37690 ;; This function uses a reentrant model
 37691 ;;
 37692                           
 37693                           	psect	text166
 37694  01D7BC                     __ptext166:
 37695                           	opt callstack 0
 37696  01D7BC                     _TMR5_CallBack:
 37697                           	opt callstack 7
 37698                           
 37699                           ;mcc_generated_files/tmr5.c: 187:  if (TMR5_InterruptHandler) {
 37700                           
 37701                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37702                           ;incstack = 0
 37703  01D7BC  0100               	movlb	0	; () banked
 37704  01D7BE  51A5               	movf	_TMR5_InterruptHandler& (0+255),w,b
 37705  01D7C0  11A6               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 37706  01D7C2  11A7               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 37707  01D7C4  B4D8               	btfsc	status,2,c
 37708  01D7C6  0012               	return	
 37709                           
 37710                           ; BSR set to: 0
 37711                           ;mcc_generated_files/tmr5.c: 188:   TMR5_InterruptHandler();
 37712  01D7C8  D801               	call	u1108_28
 37713  01D7CA  0012               	return	
 37714  01D7CC                     u1108_28:
 37715  01D7CC  0005               	push	
 37716  01D7CE  6EFA               	movwf	pclath,c
 37717  01D7D0  51A5               	movf	_TMR5_InterruptHandler& (0+255),w,b
 37718  01D7D2  6EFD               	movwf	tosl,c
 37719  01D7D4  51A6               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 37720  01D7D6  6EFE               	movwf	tosh,c
 37721  01D7D8  51A7               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 37722  01D7DA  6EFF               	movwf	tosu,c
 37723  01D7DC  50FA               	movf	pclath,w,c
 37724  01D7DE  0012               	return		;indir
 37725  01D7E0                     __end_of_TMR5_CallBack:
 37726                           	opt callstack 0
 37727                           
 37728 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 37729 ;; Defined at:
 37730 ;;		line 197 in file "mcc_generated_files/tmr5.c"
 37731 ;; Parameters:    Size  Location     Type
 37732 ;;		None
 37733 ;; Auto vars:     Size  Location     Type
 37734 ;;		None
 37735 ;; Return value:  Size  Location     Type
 37736 ;;                  1  [STACK] void 
 37737 ;; Registers used:
 37738 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 37739 ;; Tracked objects:
 37740 ;;		On entry : 3F/0
 37741 ;;		On exit  : 0/0
 37742 ;;		Unchanged: 0/0
 37743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37744 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37745 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37746 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37747 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37748 ;;Total ram usage:        0 bytes
 37749 ;; Hardware stack levels used:    1
 37750 ;; Hardware stack levels required when called:    7
 37751 ;; This function calls:
 37752 ;;		_check_day_time
 37753 ;; This function is called by:
 37754 ;;		_TMR5_Initialize
 37755 ;;		_TMR5_CallBack
 37756 ;; This function uses a reentrant model
 37757 ;;
 37758                           
 37759                           	psect	text167
 37760  01D1D8                     __ptext167:
 37761                           	opt callstack 0
 37762  01D1D8                     _TMR5_DefaultInterruptHandler:
 37763                           	opt callstack 7
 37764                           
 37765                           ;mcc_generated_files/tmr5.c: 201:  LATEbits.LATE0 = (uint8_t) ~LATEbits.LATE0;
 37766                           
 37767                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37768                           ;incstack = 0
 37769  01D1D8  A0BE               	btfss	190,0,c	;volatile
 37770  01D1DA  D002               	goto	u1029_20
 37771  01D1DC  0E01               	movlw	1
 37772  01D1DE  D001               	goto	u1029_26
 37773  01D1E0                     u1029_20:
 37774  01D1E0  0E00               	movlw	0
 37775  01D1E2                     u1029_26:
 37776  01D1E2  0AFF               	xorlw	255
 37777  01D1E4  6E0C               	movwf	(btemp+11)^0,c
 37778  01D1E6  50BE               	movf	190,w,c	;volatile
 37779  01D1E8  180C               	xorwf	(btemp+11)^0,w,c
 37780  01D1EA  0BFE               	andlw	-2
 37781  01D1EC  180C               	xorwf	(btemp+11)^0,w,c
 37782  01D1EE  6EBE               	movwf	190,c	;volatile
 37783                           
 37784                           ;mcc_generated_files/tmr5.c: 202:  V.timerint_count++;
 37785  01D1F0  0E01               	movlw	1
 37786  01D1F2  0102               	movlb	2	; () banked
 37787  01D1F4  27BC               	addwf	(_V+188)& (0+255),f,b	;volatile
 37788  01D1F6  0E00               	movlw	0
 37789  01D1F8  23BD               	addwfc	(_V+189)& (0+255),f,b	;volatile
 37790  01D1FA  23BE               	addwfc	(_V+190)& (0+255),f,b	;volatile
 37791  01D1FC  23BF               	addwfc	(_V+191)& (0+255),f,b	;volatile
 37792                           
 37793                           ; BSR set to: 2
 37794                           ;mcc_generated_files/tmr5.c: 203:  V.ticks++;
 37795  01D1FE  0E01               	movlw	1
 37796  01D200  2781               	addwf	(_V+129)& (0+255),f,b	;volatile
 37797  01D202  0E00               	movlw	0
 37798  01D204  2382               	addwfc	(_V+130)& (0+255),f,b	;volatile
 37799  01D206  2383               	addwfc	(_V+131)& (0+255),f,b	;volatile
 37800  01D208  2384               	addwfc	(_V+132)& (0+255),f,b	;volatile
 37801                           
 37802                           ; BSR set to: 2
 37803                           ;mcc_generated_files/tmr5.c: 204:  check_day_time();
 37804  01D20A  EC6B  F0CB         	call	_check_day_time	;wreg free
 37805                           
 37806                           ; _TMR5_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 37807  01D20E  0012               	return		;funcret
 37808  01D210                     __end_of_TMR5_DefaultInterruptHandler:
 37809                           	opt callstack 0
 37810                           
 37811 ;; *************** function _check_day_time *****************
 37812 ;; Defined at:
 37813 ;;		line 165 in file "mbmc.c"
 37814 ;; Parameters:    Size  Location     Type
 37815 ;;		None
 37816 ;; Auto vars:     Size  Location     Type
 37817 ;;  light           4  [STACK] float 
 37818 ;; Return value:  Size  Location     Type
 37819 ;;                  1  [STACK] _Bool 
 37820 ;; Registers used:
 37821 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 37822 ;; Tracked objects:
 37823 ;;		On entry : 3F/2
 37824 ;;		On exit  : 0/0
 37825 ;;		Unchanged: 0/0
 37826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37827 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37828 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37829 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37830 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37831 ;;Total ram usage:        0 bytes
 37832 ;; Hardware stack levels used:    1
 37833 ;; Hardware stack levels required when called:    6
 37834 ;; This function calls:
 37835 ;;		___flge
 37836 ;;		_conv_raw_result
 37837 ;;		_get_ac_charger_relay
 37838 ;;		_set_ac_charger_relay
 37839 ;; This function is called by:
 37840 ;;		_TMR5_DefaultInterruptHandler
 37841 ;; This function uses a reentrant model
 37842 ;;
 37843                           
 37844                           	psect	text168
 37845  0196D6                     __ptext168:
 37846                           	opt callstack 0
 37847  0196D6                     _check_day_time:
 37848                           	opt callstack 0
 37849                           
 37850                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37851  0196D6  52E6               	movf	postinc1,f,c
 37852  0196D8  52E6               	movf	postinc1,f,c
 37853  0196DA  52E6               	movf	postinc1,f,c
 37854  0196DC  52E6               	movf	postinc1,f,c
 37855                           
 37856                           ;mbmc.c: 167:  static uint8_t day_delay = 0;;mbmc.c: 168:  float light;;mbmc.c: 170:  li
      +                          ght = conv_raw_result(V_LIGHT_SENSOR, CONV);
 37857                           
 37858                           ;incstack = 0
 37859  0196DE  0E00               	movlw	0
 37860  0196E0  6EE6               	movwf	postinc1,c
 37861  0196E2  0E0D               	movlw	13
 37862  0196E4  6EE6               	movwf	postinc1,c
 37863  0196E6  EC02  F0B0         	call	_conv_raw_result	;wreg free
 37864                           
 37865                           ;stkvar	_light @ sp[(-4)+0]
 37866  0196EA  0EFC               	movlw	-4
 37867  0196EC  0060  F007  FFE3   	movff	btemp,plusw1
 37868  0196F2  0EFD               	movlw	-3
 37869  0196F4  0060  F00B  FFE3   	movff	btemp+1,plusw1
 37870  0196FA  0EFE               	movlw	-2
 37871  0196FC  0060  F00F  FFE3   	movff	btemp+2,plusw1
 37872  019702  0EFF               	movlw	-1
 37873  019704  0060  F013  FFE3   	movff	btemp+3,plusw1
 37874                           
 37875                           ;mbmc.c: 172:  if (!day_delay++ && V.system_stable) {
 37876  01970A  2A41               	incf	check_day_time@day_delay^0,f,c
 37877  01970C  0441               	decf	check_day_time@day_delay^0,w,c
 37878  01970E  A4D8               	btfss	status,2,c
 37879  019710  D0A9               	goto	l2176
 37880  019712  0102               	movlb	2	; () banked
 37881  019714  51AF               	movf	(_V+175)& (0+255),w,b	;volatile
 37882  019716  B4D8               	btfsc	status,2,c
 37883  019718  D0A5               	goto	l2176
 37884                           
 37885                           ; BSR set to: 2
 37886                           ;mbmc.c: 173:   if (C.soc > 3) {
 37887  01971A  EE22  F0B5         	lfsr	2,_C+182	;volatile
 37888  01971E  0E01               	movlw	1
 37889  019720  50DB               	movf	plusw2,w,c
 37890  019722  E104               	bnz	u999_20
 37891  019724  0E04               	movlw	4
 37892  019726  5CDE               	subwf	postinc2,w,c
 37893  019728  A0D8               	btfss	status,0,c
 37894  01972A  D073               	goto	l10780
 37895  01972C                     u999_20:
 37896                           
 37897                           ; BSR set to: 2
 37898                           ;mbmc.c: 174:    if (!C.day) {
 37899  01972C  EE22  F121         	lfsr	2,_C+290	;volatile
 37900  019730  50DF               	movf	indf2,w,c
 37901  019732  A4D8               	btfss	status,2,c
 37902  019734  D035               	goto	l10768
 37903                           
 37904                           ; BSR set to: 2
 37905                           ;mbmc.c: 175:     if (light > 22.0) {
 37906                           ;stkvar	_light @ sp[(-4)+0]
 37907  019736  0EFC               	movlw	-4
 37908  019738  006F FF8F FFE6     	movff	plusw1,postinc1
 37909  01973E  006F FF8F FFE6     	movff	plusw1,postinc1
 37910  019744  006F FF8F FFE6     	movff	plusw1,postinc1
 37911  01974A  006F FF8F FFE6     	movff	plusw1,postinc1
 37912  019750  0E00               	movlw	0
 37913  019752  6EE6               	movwf	postinc1,c
 37914  019754  0E00               	movlw	0
 37915  019756  6EE6               	movwf	postinc1,c
 37916  019758  0EB0               	movlw	176
 37917  01975A  6EE6               	movwf	postinc1,c
 37918  01975C  0E41               	movlw	65
 37919  01975E  6EE6               	movwf	postinc1,c
 37920  019760  ECFB  F0CF         	call	___flge	;wreg free
 37921  019764  B001               	btfsc	btemp& (0+255),0,c
 37922  019766  D07E               	goto	l2176
 37923                           
 37924                           ;mbmc.c: 176:      C.day = 1;
 37925  019768  0E01               	movlw	1
 37926  01976A  006F FFA0  F921    	movff	wreg,_C+290	;volatile
 37927                           
 37928                           ;mbmc.c: 177:      C.day_start = V.ticks;
 37929  019770  EE20  F281         	lfsr	2,_V+129	;volatile
 37930  019774  006F FF78  F922    	movff	postinc2,_C+291	;volatile
 37931  01977A  006F FF78  F923    	movff	postinc2,_C+292	;volatile
 37932  019780  006F FF78  F924    	movff	postinc2,_C+293	;volatile
 37933  019786  006F FF74  F925    	movff	postdec2,_C+294	;volatile
 37934                           
 37935                           ;mbmc.c: 178:      if (get_ac_charger_relay()) {
 37936  01978C  EC6A  F0ED         	call	_get_ac_charger_relay	;wreg free
 37937  019790  5001               	movf	btemp^0,w,c
 37938  019792  B4D8               	btfsc	status,2,c
 37939  019794  D06B               	goto	l2172
 37940                           
 37941                           ;mbmc.c: 179:       set_ac_charger_relay(0);
 37942  019796  0E00               	movlw	0
 37943  019798  6EE6               	movwf	postinc1,c
 37944  01979A  EC54  F0ED         	call	_set_ac_charger_relay	;wreg free
 37945  01979E  D066               	goto	l2172
 37946  0197A0                     l10768:
 37947                           
 37948                           ; BSR set to: 2
 37949                           ;mbmc.c: 184:     if (light < 12.0) {
 37950  0197A0  0E00               	movlw	0
 37951  0197A2  6EE6               	movwf	postinc1,c
 37952  0197A4  0E00               	movlw	0
 37953  0197A6  6EE6               	movwf	postinc1,c
 37954  0197A8  0E40               	movlw	64
 37955  0197AA  6EE6               	movwf	postinc1,c
 37956  0197AC  0E41               	movlw	65
 37957  0197AE  6EE6               	movwf	postinc1,c
 37958                           
 37959                           ;stkvar	_light @ sp[(-8)+0]
 37960  0197B0  0EF8               	movlw	-8
 37961  0197B2  006F FF8F FFE6     	movff	plusw1,postinc1
 37962  0197B8  006F FF8F FFE6     	movff	plusw1,postinc1
 37963  0197BE  006F FF8F FFE6     	movff	plusw1,postinc1
 37964  0197C4  006F FF8F FFE6     	movff	plusw1,postinc1
 37965  0197CA  ECFB  F0CF         	call	___flge	;wreg free
 37966  0197CE  B001               	btfsc	btemp& (0+255),0,c
 37967  0197D0  D049               	goto	l2176
 37968                           
 37969                           ;mbmc.c: 185:      C.day = 0;
 37970  0197D2  0E00               	movlw	0
 37971  0197D4  006F FFA0  F921    	movff	wreg,_C+290	;volatile
 37972                           
 37973                           ;mbmc.c: 186:      C.day_end = V.ticks;
 37974  0197DA  EE20  F281         	lfsr	2,_V+129	;volatile
 37975  0197DE  006F FF78  F926    	movff	postinc2,_C+295	;volatile
 37976  0197E4  006F FF78  F927    	movff	postinc2,_C+296	;volatile
 37977  0197EA  006F FF78  F928    	movff	postinc2,_C+297	;volatile
 37978  0197F0  006F FF74  F929    	movff	postdec2,_C+298	;volatile
 37979                           
 37980                           ;mbmc.c: 190:      if ((C.soc < 20)) {
 37981  0197F6  EE22  F0B5         	lfsr	2,_C+182	;volatile
 37982  0197FA  0E01               	movlw	1
 37983  0197FC  50DB               	movf	plusw2,w,c
 37984  0197FE  E136               	bnz	l2172
 37985  019800  0E14               	movlw	20
 37986  019802  5CDE               	subwf	postinc2,w,c
 37987  019804  B0D8               	btfsc	status,0,c
 37988  019806  D032               	goto	l2172
 37989                           
 37990                           ;mbmc.c: 191:       set_ac_charger_relay(1);
 37991  019808  0E01               	movlw	1
 37992  01980A  6EE6               	movwf	postinc1,c
 37993  01980C  EC54  F0ED         	call	_set_ac_charger_relay	;wreg free
 37994  019810  D02D               	goto	l2172
 37995  019812                     l10780:
 37996                           
 37997                           ; BSR set to: 2
 37998                           ;mbmc.c: 197:    if (C.p_pv < C.p_inverter) {
 37999  019812  EE22  F077         	lfsr	2,_C+120	;volatile
 38000  019816  006F FF7B FFE6     	movff	postinc2,postinc1
 38001  01981C  006F FF7B FFE6     	movff	postinc2,postinc1
 38002  019822  006F FF7B FFE6     	movff	postinc2,postinc1
 38003  019828  006F FF7B FFE6     	movff	postinc2,postinc1
 38004  01982E  EE22  F07B         	lfsr	2,_C+124	;volatile
 38005  019832  006F FF7B FFE6     	movff	postinc2,postinc1
 38006  019838  006F FF7B FFE6     	movff	postinc2,postinc1
 38007  01983E  006F FF7B FFE6     	movff	postinc2,postinc1
 38008  019844  006F FF7B FFE6     	movff	postinc2,postinc1
 38009  01984A  ECFB  F0CF         	call	___flge	;wreg free
 38010  01984E  B001               	btfsc	btemp& (0+255),0,c
 38011  019850  D009               	goto	l2176
 38012                           
 38013                           ;mbmc.c: 198:     if (!get_ac_charger_relay()) {
 38014  019852  EC6A  F0ED         	call	_get_ac_charger_relay	;wreg free
 38015  019856  5001               	movf	btemp^0,w,c
 38016  019858  A4D8               	btfss	status,2,c
 38017  01985A  D004               	goto	l2176
 38018                           
 38019                           ;mbmc.c: 199:      set_ac_charger_relay(1);
 38020  01985C  0E01               	movlw	1
 38021  01985E  6EE6               	movwf	postinc1,c
 38022  019860  EC54  F0ED         	call	_set_ac_charger_relay	;wreg free
 38023  019864                     l2176:
 38024                           
 38025                           ;mbmc.c: 204:  if (day_delay >= 240)
 38026  019864  0EEF               	movlw	239
 38027  019866  6441               	cpfsgt	check_day_time@day_delay^0,c
 38028  019868  D001               	goto	l2172
 38029                           
 38030                           ;mbmc.c: 205:   day_delay = 0;
 38031  01986A  6A41               	clrf	check_day_time@day_delay^0,c
 38032  01986C                     l2172:
 38033                           
 38034                           ; _check_day_time: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 38035  01986C  52E5               	movf	postdec1,f,c
 38036  01986E  52E5               	movf	postdec1,f,c
 38037  019870  52E5               	movf	postdec1,f,c
 38038  019872  52E5               	movf	postdec1,f,c
 38039  019874  0012               	return		;funcret
 38040  019876                     __end_of_check_day_time:
 38041                           	opt callstack 0
 38042                           
 38043 ;; *************** function _set_ac_charger_relay *****************
 38044 ;; Defined at:
 38045 ;;		line 135 in file "mbmc.c"
 38046 ;; Parameters:    Size  Location     Type
 38047 ;;  mode            1  [STACK] const _Bool 
 38048 ;; Auto vars:     Size  Location     Type
 38049 ;;		None
 38050 ;; Return value:  Size  Location     Type
 38051 ;;                  1  [STACK] void 
 38052 ;; Registers used:
 38053 ;;		wreg, fsr1l, fsr1h
 38054 ;; Tracked objects:
 38055 ;;		On entry : 0/2
 38056 ;;		On exit  : 0/0
 38057 ;;		Unchanged: 0/0
 38058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38059 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38060 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38061 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38062 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38063 ;;Total ram usage:        0 bytes
 38064 ;; Hardware stack levels used:    1
 38065 ;; Hardware stack levels required when called:    3
 38066 ;; This function calls:
 38067 ;;		Nothing
 38068 ;; This function is called by:
 38069 ;;		_check_day_time
 38070 ;; This function uses a reentrant model
 38071 ;;
 38072                           
 38073                           	psect	text169
 38074  01DAA8                     __ptext169:
 38075                           	opt callstack 0
 38076  01DAA8                     _set_ac_charger_relay:
 38077                           	opt callstack 9
 38078                           
 38079                           ;mbmc.c: 135: void set_ac_charger_relay(const _Bool mode);mbmc.c: 136: {;mbmc.c: 137:  L
      +                          ATDbits.LATD6 = mode;
 38080                           ;stkvar	_mode @ sp[(0)+-1]
 38081                           
 38082                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38083                           ;incstack = 0
 38084  01DAA8  0EFF               	movlw	-1
 38085  01DAAA  B0E3               	btfsc	plusw1,0,c
 38086  01DAAC  D002               	bra	u991_25
 38087  01DAAE  9CBD               	bcf	189,6,c	;volatile
 38088  01DAB0  D001               	bra	u991_26
 38089  01DAB2                     u991_25:
 38090  01DAB2  8CBD               	bsf	189,6,c	;volatile
 38091  01DAB4                     u991_26:
 38092                           
 38093                           ; _set_ac_charger_relay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
 38094  01DAB4  52E5               	movf	postdec1,f,c
 38095  01DAB6  0012               	return		;funcret
 38096  01DAB8                     __end_of_set_ac_charger_relay:
 38097                           	opt callstack 0
 38098                           
 38099 ;; *************** function _get_ac_charger_relay *****************
 38100 ;; Defined at:
 38101 ;;		line 140 in file "mbmc.c"
 38102 ;; Parameters:    Size  Location     Type
 38103 ;;		None
 38104 ;; Auto vars:     Size  Location     Type
 38105 ;;		None
 38106 ;; Return value:  Size  Location     Type
 38107 ;;                  1  [STACK] _Bool 
 38108 ;; Registers used:
 38109 ;;		btemp
 38110 ;; Tracked objects:
 38111 ;;		On entry : 0/2
 38112 ;;		On exit  : 0/0
 38113 ;;		Unchanged: 0/0
 38114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38115 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38116 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38117 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38118 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38119 ;;Total ram usage:        0 bytes
 38120 ;; Hardware stack levels used:    1
 38121 ;; Hardware stack levels required when called:    3
 38122 ;; This function calls:
 38123 ;;		Nothing
 38124 ;; This function is called by:
 38125 ;;		_check_day_time
 38126 ;;		_calc_bsoc
 38127 ;; This function uses a reentrant model
 38128 ;;
 38129                           
 38130                           	psect	text170
 38131  01DAD4                     __ptext170:
 38132                           	opt callstack 0
 38133  01DAD4                     _get_ac_charger_relay:
 38134                           	opt callstack 10
 38135                           
 38136                           ;mbmc.c: 142:  return LATDbits.LATD6;
 38137                           
 38138                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38139                           ;incstack = 0
 38140  01DAD4  ACBD               	btfss	189,6,c	;volatile
 38141  01DAD6  D003               	goto	u1022_20
 38142  01DAD8  6A01               	clrf	btemp^0,c
 38143  01DADA  2A01               	incf	btemp^0,f,c
 38144  01DADC  0012               	return	
 38145  01DADE                     u1022_20:
 38146  01DADE  6A01               	clrf	btemp^0,c
 38147                           
 38148                           ; _get_ac_charger_relay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 38149  01DAE0  0012               	return		;funcret
 38150  01DAE2                     __end_of_get_ac_charger_relay:
 38151                           	opt callstack 0
 38152                           
 38153 ;; *************** function _TMR3_ISR *****************
 38154 ;; Defined at:
 38155 ;;		line 165 in file "mcc_generated_files/tmr3.c"
 38156 ;; Parameters:    Size  Location     Type
 38157 ;;		None
 38158 ;; Auto vars:     Size  Location     Type
 38159 ;;		None
 38160 ;; Return value:  Size  Location     Type
 38161 ;;                  1    wreg      void 
 38162 ;; Registers used:
 38163 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, tosl, tblptrl, tblptrh, tblptru, prodl, prodh
 38164 ;; Tracked objects:
 38165 ;;		On entry : 0/0
 38166 ;;		On exit  : 3F/0
 38167 ;;		Unchanged: 0/0
 38168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38169 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38170 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38171 ;;      Temps:          0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38172 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38173 ;;Total ram usage:       25 bytes
 38174 ;; Hardware stack levels used:    1
 38175 ;; Hardware stack levels required when called:   14
 38176 ;; This function calls:
 38177 ;;		_TMR3_CallBack
 38178 ;;		_TMR3_WriteTimer
 38179 ;; This function is called by:
 38180 ;;		Interrupt level 1
 38181 ;; This function uses a non-reentrant model
 38182 ;;
 38183                           
 38184                           	psect	text171
 38185  01A158                     __ptext171:
 38186                           	opt callstack 0
 38187  01A158                     _TMR3_ISR:
 38188                           	opt callstack 2
 38189                           
 38190                           ;incstack = 0
 38191  01A158  006F FF60  F0D8    	movff	status,??_TMR3_ISR
 38192  01A15E  006F FFD8  F0D9    	movff	tblptrl,??_TMR3_ISR+1
 38193  01A164  006F FFDC  F0DA    	movff	tblptrh,??_TMR3_ISR+2
 38194  01A16A  006F FFE0  F0DB    	movff	tblptru,??_TMR3_ISR+3
 38195  01A170  006F FFD4  F0DC    	movff	tablat,??_TMR3_ISR+4
 38196  01A176  0060  F004  F0DD   	movff	btemp,??_TMR3_ISR+5
 38197  01A17C  0060  F008  F0DE   	movff	btemp+1,??_TMR3_ISR+6
 38198  01A182  0060  F00C  F0DF   	movff	btemp+2,??_TMR3_ISR+7
 38199  01A188  0060  F010  F0E0   	movff	btemp+3,??_TMR3_ISR+8
 38200  01A18E  0060  F014  F0E1   	movff	btemp+4,??_TMR3_ISR+9
 38201  01A194  0060  F018  F0E2   	movff	btemp+5,??_TMR3_ISR+10
 38202  01A19A  0060  F01C  F0E3   	movff	btemp+6,??_TMR3_ISR+11
 38203  01A1A0  0060  F020  F0E4   	movff	btemp+7,??_TMR3_ISR+12
 38204  01A1A6  0060  F024  F0E5   	movff	btemp+8,??_TMR3_ISR+13
 38205  01A1AC  0060  F028  F0E6   	movff	btemp+9,??_TMR3_ISR+14
 38206  01A1B2  0060  F02C  F0E7   	movff	btemp+10,??_TMR3_ISR+15
 38207  01A1B8  0060  F030  F0E8   	movff	btemp+11,??_TMR3_ISR+16
 38208  01A1BE  0060  F044  F0E9   	movff	btemp+16,??_TMR3_ISR+17
 38209  01A1C4  0060  F048  F0EA   	movff	btemp+17,??_TMR3_ISR+18
 38210  01A1CA  0060  F04C  F0EB   	movff	btemp+18,??_TMR3_ISR+19
 38211  01A1D0  0060  F050  F0EC   	movff	btemp+19,??_TMR3_ISR+20
 38212  01A1D6  0060  F054  F0ED   	movff	btemp+20,??_TMR3_ISR+21
 38213  01A1DC  0060  F058  F0EE   	movff	btemp+21,??_TMR3_ISR+22
 38214  01A1E2  0060  F05C  F0EF   	movff	btemp+22,??_TMR3_ISR+23
 38215  01A1E8  0060  F060  F0F0   	movff	btemp+23,??_TMR3_ISR+24
 38216  01A1EE  EE16  F104         	lfsr	1,___intlo_sp
 38217                           
 38218                           ;mcc_generated_files/tmr3.c: 167:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr3.c: 170:     PIR6bits.TMR3IF = 0;
 38219  01A1F2  0139               	movlb	57	; () banked
 38220  01A1F4  9DA6               	bcf	166,6,b	;volatile
 38221                           
 38222                           ; BSR set to: 57
 38223                           ;mcc_generated_files/tmr3.c: 171:     TMR3_WriteTimer(timer3ReloadVal);
 38224  01A1F6  0060  F313  FFE6   	movff	_timer3ReloadVal,postinc1
 38225  01A1FC  0060  F317  FFE6   	movff	_timer3ReloadVal+1,postinc1
 38226  01A202  EC73  F0E8         	call	_TMR3_WriteTimer	;wreg free
 38227                           
 38228                           ;mcc_generated_files/tmr3.c: 174:     if (++CountCallBack >= 40)
 38229  01A206  0100               	movlb	0	; () banked
 38230  01A208  4BC2               	infsnz	TMR3_ISR@CountCallBack& (0+255),f,b	;volatile
 38231  01A20A  2BC3               	incf	(TMR3_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 38232  01A20C  51C3               	movf	(TMR3_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 38233  01A20E  E104               	bnz	i1u1401_20
 38234  01A210  0E28               	movlw	40
 38235  01A212  5DC2               	subwf	TMR3_ISR@CountCallBack& (0+255),w,b	;volatile
 38236  01A214  A0D8               	btfss	status,0,c
 38237  01A216  D005               	goto	i1l1209
 38238  01A218                     i1u1401_20:
 38239                           
 38240                           ; BSR set to: 0
 38241                           ;mcc_generated_files/tmr3.c: 175:     {;mcc_generated_files/tmr3.c: 177:         TMR3_Ca
      +                          llBack();
 38242  01A218  ECF0  F0EB         	call	_TMR3_CallBack	;wreg free
 38243                           
 38244                           ;mcc_generated_files/tmr3.c: 180:         CountCallBack = 0;
 38245  01A21C  0100               	movlb	0	; () banked
 38246  01A21E  6BC2               	clrf	TMR3_ISR@CountCallBack& (0+255),b	;volatile
 38247  01A220  6BC3               	clrf	(TMR3_ISR@CountCallBack+1)& (0+255),b	;volatile
 38248  01A222                     i1l1209:
 38249                           
 38250                           ; BSR set to: 0
 38251  01A222  0060  F3C0  F018   	movff	??_TMR3_ISR+24,btemp+23
 38252  01A228  0060  F3BC  F017   	movff	??_TMR3_ISR+23,btemp+22
 38253  01A22E  0060  F3B8  F016   	movff	??_TMR3_ISR+22,btemp+21
 38254  01A234  0060  F3B4  F015   	movff	??_TMR3_ISR+21,btemp+20
 38255  01A23A  0060  F3B0  F014   	movff	??_TMR3_ISR+20,btemp+19
 38256  01A240  0060  F3AC  F013   	movff	??_TMR3_ISR+19,btemp+18
 38257  01A246  0060  F3A8  F012   	movff	??_TMR3_ISR+18,btemp+17
 38258  01A24C  0060  F3A4  F011   	movff	??_TMR3_ISR+17,btemp+16
 38259  01A252  0060  F3A0  F00C   	movff	??_TMR3_ISR+16,btemp+11
 38260  01A258  0060  F39C  F00B   	movff	??_TMR3_ISR+15,btemp+10
 38261  01A25E  0060  F398  F00A   	movff	??_TMR3_ISR+14,btemp+9
 38262  01A264  0060  F394  F009   	movff	??_TMR3_ISR+13,btemp+8
 38263  01A26A  0060  F390  F008   	movff	??_TMR3_ISR+12,btemp+7
 38264  01A270  0060  F38C  F007   	movff	??_TMR3_ISR+11,btemp+6
 38265  01A276  0060  F388  F006   	movff	??_TMR3_ISR+10,btemp+5
 38266  01A27C  0060  F384  F005   	movff	??_TMR3_ISR+9,btemp+4
 38267  01A282  0060  F380  F004   	movff	??_TMR3_ISR+8,btemp+3
 38268  01A288  0060  F37C  F003   	movff	??_TMR3_ISR+7,btemp+2
 38269  01A28E  0060  F378  F002   	movff	??_TMR3_ISR+6,btemp+1
 38270  01A294  0060  F374  F001   	movff	??_TMR3_ISR+5,btemp
 38271  01A29A  0060  F373  FFF5   	movff	??_TMR3_ISR+4,tablat
 38272  01A2A0  0060  F36F  FFF8   	movff	??_TMR3_ISR+3,tblptru
 38273  01A2A6  0060  F36B  FFF7   	movff	??_TMR3_ISR+2,tblptrh
 38274  01A2AC  0060  F367  FFF6   	movff	??_TMR3_ISR+1,tblptrl
 38275  01A2B2  0060  F363  FFD8   	movff	??_TMR3_ISR,status
 38276  01A2B8  0011               	retfie		f
 38277  01A2BA                     __end_of_TMR3_ISR:
 38278                           	opt callstack 0
 38279                           
 38280 ;; *************** function _TMR3_WriteTimer *****************
 38281 ;; Defined at:
 38282 ;;		line 128 in file "mcc_generated_files/tmr3.c"
 38283 ;; Parameters:    Size  Location     Type
 38284 ;;  timerVal        2  [STACK] unsigned short 
 38285 ;; Auto vars:     Size  Location     Type
 38286 ;;		None
 38287 ;; Return value:  Size  Location     Type
 38288 ;;                  1  [STACK] void 
 38289 ;; Registers used:
 38290 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 38291 ;; Tracked objects:
 38292 ;;		On entry : 3F/39
 38293 ;;		On exit  : 0/0
 38294 ;;		Unchanged: 0/0
 38295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38296 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38297 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38298 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38299 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38300 ;;Total ram usage:        0 bytes
 38301 ;; Hardware stack levels used:    1
 38302 ;; Hardware stack levels required when called:    3
 38303 ;; This function calls:
 38304 ;;		Nothing
 38305 ;; This function is called by:
 38306 ;;		_TMR3_ISR
 38307 ;; This function uses a reentrant model
 38308 ;;
 38309                           
 38310                           	psect	text172
 38311  01D0E6                     __ptext172:
 38312                           	opt callstack 0
 38313  01D0E6                     _TMR3_WriteTimer:
 38314                           	opt callstack 12
 38315                           
 38316                           ;mcc_generated_files/tmr3.c: 128: void TMR3_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr3.c: 129: {;mcc_generated_files/tmr3.c: 130:     if (T3CONbits.NOT_SYNC == 1)
 38317                           
 38318                           ; BSR set to: 0
 38319                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38320                           ;incstack = 0
 38321  01D0E6  A4A6               	btfss	166,2,c	;volatile
 38322  01D0E8  D00F               	goto	l11946
 38323                           
 38324                           ;mcc_generated_files/tmr3.c: 131:     {;mcc_generated_files/tmr3.c: 133:         T3CONbi
      +                          ts.TMR3ON = 0;
 38325  01D0EA  90A6               	bcf	166,0,c	;volatile
 38326                           
 38327                           ;mcc_generated_files/tmr3.c: 136:         TMR3H = (timerVal >> 8);
 38328                           ;stkvar	_timerVal @ sp[(0)+-2]
 38329  01D0EC  0EFF               	movlw	255
 38330  01D0EE  24E1               	addwf	fsr1l,w,c
 38331  01D0F0  6ED9               	movwf	fsr2l,c
 38332  01D0F2  0EFF               	movlw	255
 38333  01D0F4  20E2               	addwfc	fsr1h,w,c
 38334  01D0F6  6EDA               	movwf	fsr2h,c
 38335  01D0F8  50DF               	movf	indf2,w,c
 38336  01D0FA  6EA5               	movwf	165,c	;volatile
 38337                           
 38338                           ;mcc_generated_files/tmr3.c: 137:         TMR3L = timerVal;
 38339                           ;stkvar	_timerVal @ sp[(0)+-2]
 38340  01D0FC  0EFE               	movlw	-2
 38341  01D0FE  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 38342                           
 38343                           ;mcc_generated_files/tmr3.c: 140:         T3CONbits.TMR3ON =1;
 38344  01D104  80A6               	bsf	166,0,c	;volatile
 38345                           
 38346                           ;mcc_generated_files/tmr3.c: 141:     }
 38347  01D106  D00C               	goto	l1192
 38348  01D108                     l11946:
 38349                           
 38350                           ;mcc_generated_files/tmr3.c: 143:     {;mcc_generated_files/tmr3.c: 145:         TMR3H =
      +                           (timerVal >> 8);
 38351                           ;stkvar	_timerVal @ sp[(0)+-2]
 38352  01D108  0EFF               	movlw	255
 38353  01D10A  24E1               	addwf	fsr1l,w,c
 38354  01D10C  6ED9               	movwf	fsr2l,c
 38355  01D10E  0EFF               	movlw	255
 38356  01D110  20E2               	addwfc	fsr1h,w,c
 38357  01D112  6EDA               	movwf	fsr2h,c
 38358  01D114  50DF               	movf	indf2,w,c
 38359  01D116  6EA5               	movwf	165,c	;volatile
 38360                           
 38361                           ;mcc_generated_files/tmr3.c: 146:         TMR3L = timerVal;
 38362                           ;stkvar	_timerVal @ sp[(0)+-2]
 38363  01D118  0EFE               	movlw	-2
 38364  01D11A  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 38365  01D120                     l1192:
 38366                           
 38367                           ; _TMR3_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 38368  01D120  52E5               	movf	postdec1,f,c
 38369  01D122  52E5               	movf	postdec1,f,c
 38370  01D124  0012               	return		;funcret
 38371  01D126                     __end_of_TMR3_WriteTimer:
 38372                           	opt callstack 0
 38373                           
 38374 ;; *************** function _TMR3_CallBack *****************
 38375 ;; Defined at:
 38376 ;;		line 184 in file "mcc_generated_files/tmr3.c"
 38377 ;; Parameters:    Size  Location     Type
 38378 ;;		None
 38379 ;; Auto vars:     Size  Location     Type
 38380 ;;		None
 38381 ;; Return value:  Size  Location     Type
 38382 ;;                  1  [STACK] void 
 38383 ;; Registers used:
 38384 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, tosl, tblptrl, tblptrh, tblptru, prodl, prodh
 38385 ;; Tracked objects:
 38386 ;;		On entry : 3F/0
 38387 ;;		On exit  : 0/0
 38388 ;;		Unchanged: 0/0
 38389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38390 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38391 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38392 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38393 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38394 ;;Total ram usage:        0 bytes
 38395 ;; Hardware stack levels used:    1
 38396 ;; Hardware stack levels required when called:   13
 38397 ;; This function calls:
 38398 ;;		Absolute function
 38399 ;;		_TMR3_DefaultInterruptHandler
 38400 ;;		_calc_bsoc
 38401 ;; This function is called by:
 38402 ;;		_TMR3_ISR
 38403 ;; This function uses a reentrant model
 38404 ;;
 38405                           
 38406                           	psect	text173
 38407  01D7E0                     __ptext173:
 38408                           	opt callstack 0
 38409  01D7E0                     _TMR3_CallBack:
 38410                           	opt callstack 2
 38411                           
 38412                           ;mcc_generated_files/tmr3.c: 187:     if(TMR3_InterruptHandler)
 38413                           
 38414                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38415                           ;incstack = 0
 38416  01D7E0  0100               	movlb	0	; () banked
 38417  01D7E2  51A2               	movf	_TMR3_InterruptHandler& (0+255),w,b
 38418  01D7E4  11A3               	iorwf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 38419  01D7E6  11A4               	iorwf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 38420  01D7E8  B4D8               	btfsc	status,2,c
 38421  01D7EA  0012               	return	
 38422                           
 38423                           ; BSR set to: 0
 38424                           ;mcc_generated_files/tmr3.c: 188:     {;mcc_generated_files/tmr3.c: 189:         TMR3_In
      +                          terruptHandler();
 38425  01D7EC  D801               	call	u1380_28
 38426  01D7EE  0012               	return	
 38427  01D7F0                     u1380_28:
 38428  01D7F0  0005               	push	
 38429  01D7F2  6EFA               	movwf	pclath,c
 38430  01D7F4  51A2               	movf	_TMR3_InterruptHandler& (0+255),w,b
 38431  01D7F6  6EFD               	movwf	tosl,c
 38432  01D7F8  51A3               	movf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 38433  01D7FA  6EFE               	movwf	tosh,c
 38434  01D7FC  51A4               	movf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 38435  01D7FE  6EFF               	movwf	tosu,c
 38436  01D800  50FA               	movf	pclath,w,c
 38437  01D802  0012               	return		;indir
 38438  01D804                     __end_of_TMR3_CallBack:
 38439                           	opt callstack 0
 38440                           
 38441 ;; *************** function _TMR3_DefaultInterruptHandler *****************
 38442 ;; Defined at:
 38443 ;;		line 197 in file "mcc_generated_files/tmr3.c"
 38444 ;; Parameters:    Size  Location     Type
 38445 ;;		None
 38446 ;; Auto vars:     Size  Location     Type
 38447 ;;		None
 38448 ;; Return value:  Size  Location     Type
 38449 ;;                  1  [STACK] void 
 38450 ;; Registers used:
 38451 ;;		None
 38452 ;; Tracked objects:
 38453 ;;		On entry : 3F/0
 38454 ;;		On exit  : 0/0
 38455 ;;		Unchanged: 0/0
 38456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38457 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38458 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38459 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38460 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38461 ;;Total ram usage:        0 bytes
 38462 ;; Hardware stack levels used:    1
 38463 ;; Hardware stack levels required when called:    3
 38464 ;; This function calls:
 38465 ;;		Nothing
 38466 ;; This function is called by:
 38467 ;;		_TMR3_Initialize
 38468 ;;		_TMR3_CallBack
 38469 ;; This function uses a reentrant model
 38470 ;;
 38471                           
 38472                           	psect	text174
 38473  01DB94                     __ptext174:
 38474                           	opt callstack 0
 38475  01DB94                     _TMR3_DefaultInterruptHandler:
 38476                           	opt callstack 11
 38477                           
 38478                           ; _TMR3_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 38479                           
 38480                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38481                           ;incstack = 0
 38482  01DB94  0012               	return		;funcret
 38483  01DB96                     __end_of_TMR3_DefaultInterruptHandler:
 38484                           	opt callstack 0
 38485                           
 38486 ;; *************** function _calc_bsoc *****************
 38487 ;; Defined at:
 38488 ;;		line 39 in file "bsoc.c"
 38489 ;; Parameters:    Size  Location     Type
 38490 ;;		None
 38491 ;; Auto vars:     Size  Location     Type
 38492 ;;  adj             4  [STACK] float 
 38493 ;;  log_ptr         2  [STACK] PTR unsigned char 
 38494 ;;		 -> port_data(512), 
 38495 ;; Return value:  Size  Location     Type
 38496 ;;                  1  [STACK] void 
 38497 ;; Registers used:
 38498 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 38499 ;; Tracked objects:
 38500 ;;		On entry : 3F/0
 38501 ;;		On exit  : 6/2
 38502 ;;		Unchanged: 0/0
 38503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38504 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38505 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38506 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38507 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38508 ;;Total ram usage:        0 bytes
 38509 ;; Hardware stack levels used:    1
 38510 ;; Hardware stack levels required when called:   12
 38511 ;; This function calls:
 38512 ;;		_StartTimer
 38513 ;;		___asfladd
 38514 ;;		___fldiv
 38515 ;;		___flge
 38516 ;;		___flmul
 38517 ;;		___flneg
 38518 ;;		___fltol
 38519 ;;		_fabsf
 38520 ;;		_get_ac_charger_relay
 38521 ;;		_port_data_dma_ptr
 38522 ;;		_send_port_data_dma
 38523 ;;		_sprintf
 38524 ;;		_strlen
 38525 ;; This function is called by:
 38526 ;;		_init_bsoc
 38527 ;;		_TMR3_CallBack
 38528 ;; This function uses a reentrant model
 38529 ;;
 38530                           
 38531                           	psect	text175
 38532  014036                     __ptext175:
 38533                           	opt callstack 0
 38534  014036                     _calc_bsoc:
 38535                           	opt callstack 0
 38536                           
 38537                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38538  014036  0E06               	movlw	6
 38539  014038  26E1               	addwf	fsr1l,f,c
 38540  01403A  0E00               	movlw	0
 38541  01403C  22E2               	addwfc	fsr1h,f,c
 38542                           
 38543                           ;bsoc.c: 41:  uint8_t * log_ptr;;bsoc.c: 42:  static uint8_t log_update_wait = 0;;bsoc.c
      +                          : 43:  float adj = 1.0;
 38544                           
 38545                           ;incstack = 0
 38546  01403E  0E00               	movlw	0
 38547  014040  6E09               	movwf	(btemp+8)^0,c
 38548  014042  0E00               	movlw	0
 38549  014044  6E0A               	movwf	(btemp+9)^0,c
 38550  014046  0E80               	movlw	128
 38551  014048  6E0B               	movwf	(btemp+10)^0,c
 38552  01404A  0E3F               	movlw	63
 38553  01404C  6E0C               	movwf	(btemp+11)^0,c
 38554                           
 38555                           ;stkvar	_adj @ sp[(-6)+0]
 38556  01404E  0EFA               	movlw	-6
 38557  014050  0060  F027  FFE3   	movff	btemp+8,plusw1
 38558  014056  0EFB               	movlw	-5
 38559  014058  0060  F02B  FFE3   	movff	btemp+9,plusw1
 38560  01405E  0EFC               	movlw	-4
 38561  014060  0060  F02F  FFE3   	movff	btemp+10,plusw1
 38562  014066  0EFD               	movlw	-3
 38563  014068  0060  F033  FFE3   	movff	btemp+11,plusw1
 38564  01406E  82BE               	bsf	190,1,c	;volatile
 38565                           
 38566                           ;bsoc.c: 47:  C.dynamic_ah += (C.c_bat / 3600.0);
 38567  014070  0E00               	movlw	0
 38568  014072  6EE6               	movwf	postinc1,c
 38569  014074  0E00               	movlw	0
 38570  014076  6EE6               	movwf	postinc1,c
 38571  014078  0E61               	movlw	97
 38572  01407A  6EE6               	movwf	postinc1,c
 38573  01407C  0E45               	movlw	69
 38574  01407E  6EE6               	movwf	postinc1,c
 38575  014080  EE22  F043         	lfsr	2,_C+68	;volatile
 38576  014084  006F FF7B FFE6     	movff	postinc2,postinc1
 38577  01408A  006F FF7B FFE6     	movff	postinc2,postinc1
 38578  014090  006F FF7B FFE6     	movff	postinc2,postinc1
 38579  014096  006F FF7B FFE6     	movff	postinc2,postinc1
 38580  01409C  EC45  F0AD         	call	___fldiv	;wreg free
 38581  0140A0  0060  F007  FFE6   	movff	btemp,postinc1
 38582  0140A6  0060  F00B  FFE6   	movff	btemp+1,postinc1
 38583  0140AC  0060  F00F  FFE6   	movff	btemp+2,postinc1
 38584  0140B2  0060  F013  FFE6   	movff	btemp+3,postinc1
 38585  0140B8  0E8F               	movlw	low (_C+144)
 38586  0140BA  6EE6               	movwf	postinc1,c
 38587  0140BC  0E08               	movlw	high (_C+144)
 38588  0140BE  6EE6               	movwf	postinc1,c
 38589  0140C0  ECE7  F0E2         	call	___asfladd	;wreg free
 38590                           
 38591                           ;bsoc.c: 48:  if (C.dynamic_ah > (C.bank_ah))
 38592  0140C4  EE22  F08F         	lfsr	2,_C+144	;volatile
 38593  0140C8  006F FF7B FFE6     	movff	postinc2,postinc1
 38594  0140CE  006F FF7B FFE6     	movff	postinc2,postinc1
 38595  0140D4  006F FF7B FFE6     	movff	postinc2,postinc1
 38596  0140DA  006F FF7B FFE6     	movff	postinc2,postinc1
 38597  0140E0  EE22  F08B         	lfsr	2,_C+140	;volatile
 38598  0140E4  006F FF7B FFE6     	movff	postinc2,postinc1
 38599  0140EA  006F FF7B FFE6     	movff	postinc2,postinc1
 38600  0140F0  006F FF7B FFE6     	movff	postinc2,postinc1
 38601  0140F6  006F FF7B FFE6     	movff	postinc2,postinc1
 38602  0140FC  ECFB  F0CF         	call	___flge	;wreg free
 38603  014100  B001               	btfsc	btemp& (0+255),0,c
 38604  014102  D00E               	goto	l14292
 38605                           
 38606                           ;bsoc.c: 49:   C.dynamic_ah = C.bank_ah;
 38607  014104  EE22  F08B         	lfsr	2,_C+140	;volatile
 38608  014108  006F FF78  F88F    	movff	postinc2,_C+144	;volatile
 38609  01410E  006F FF78  F890    	movff	postinc2,_C+145	;volatile
 38610  014114  006F FF78  F891    	movff	postinc2,_C+146	;volatile
 38611  01411A  006F FF74  F892    	movff	postdec2,_C+147	;volatile
 38612  014120                     l14292:
 38613                           
 38614                           ;bsoc.c: 50:  if (C.dynamic_ah < 0.1)
 38615  014120  0ECD               	movlw	205
 38616  014122  6EE6               	movwf	postinc1,c
 38617  014124  0ECC               	movlw	204
 38618  014126  6EE6               	movwf	postinc1,c
 38619  014128  0ECC               	movlw	204
 38620  01412A  6EE6               	movwf	postinc1,c
 38621  01412C  0E3D               	movlw	61
 38622  01412E  6EE6               	movwf	postinc1,c
 38623  014130  EE22  F08F         	lfsr	2,_C+144	;volatile
 38624  014134  006F FF7B FFE6     	movff	postinc2,postinc1
 38625  01413A  006F FF7B FFE6     	movff	postinc2,postinc1
 38626  014140  006F FF7B FFE6     	movff	postinc2,postinc1
 38627  014146  006F FF7B FFE6     	movff	postinc2,postinc1
 38628  01414C  ECFB  F0CF         	call	___flge	;wreg free
 38629  014150  B001               	btfsc	btemp& (0+255),0,c
 38630  014152  D010               	goto	l14296
 38631                           
 38632                           ;bsoc.c: 51:   C.dynamic_ah = 0.1;
 38633  014154  0ECD               	movlw	205
 38634  014156  006F FFA0  F88F    	movff	wreg,_C+144	;volatile
 38635  01415C  0ECC               	movlw	204
 38636  01415E  006F FFA0  F890    	movff	wreg,_C+145	;volatile
 38637  014164  0ECC               	movlw	204
 38638  014166  006F FFA0  F891    	movff	wreg,_C+146	;volatile
 38639  01416C  0E3D               	movlw	61
 38640  01416E  006F FFA0  F892    	movff	wreg,_C+147	;volatile
 38641  014174                     l14296:
 38642                           
 38643                           ;bsoc.c: 53:  if (C.c_bat > 0.01)
 38644  014174  EE22  F043         	lfsr	2,_C+68	;volatile
 38645  014178  006F FF7B FFE6     	movff	postinc2,postinc1
 38646  01417E  006F FF7B FFE6     	movff	postinc2,postinc1
 38647  014184  006F FF7B FFE6     	movff	postinc2,postinc1
 38648  01418A  006F FF7B FFE6     	movff	postinc2,postinc1
 38649  014190  0E0A               	movlw	10
 38650  014192  6EE6               	movwf	postinc1,c
 38651  014194  0ED7               	movlw	215
 38652  014196  6EE6               	movwf	postinc1,c
 38653  014198  0E23               	movlw	35
 38654  01419A  6EE6               	movwf	postinc1,c
 38655  01419C  0E3C               	movlw	60
 38656  01419E  6EE6               	movwf	postinc1,c
 38657  0141A0  ECFB  F0CF         	call	___flge	;wreg free
 38658  0141A4  B001               	btfsc	btemp& (0+255),0,c
 38659  0141A6  D01C               	goto	l14300
 38660                           
 38661                           ;bsoc.c: 54:   adj = C.hist[0].cef;
 38662  0141A8  0062  F2F4  F009   	movff	_C+190,btemp+8	;volatile
 38663  0141AE  0062  F2F8  F00A   	movff	_C+191,btemp+9	;volatile
 38664  0141B4  0062  F2FC  F00B   	movff	_C+192,btemp+10	;volatile
 38665  0141BA  0062  F300  F00C   	movff	_C+193,btemp+11	;volatile
 38666                           
 38667                           ;stkvar	_adj @ sp[(-6)+0]
 38668  0141C0  0EFA               	movlw	-6
 38669  0141C2  0060  F027  FFE3   	movff	btemp+8,plusw1
 38670  0141C8  0EFB               	movlw	-5
 38671  0141CA  0060  F02B  FFE3   	movff	btemp+9,plusw1
 38672  0141D0  0EFC               	movlw	-4
 38673  0141D2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 38674  0141D8  0EFD               	movlw	-3
 38675  0141DA  0060  F033  FFE3   	movff	btemp+11,plusw1
 38676  0141E0                     l14300:
 38677                           
 38678                           ;bsoc.c: 55:  if (C.c_bat < 0.01)
 38679  0141E0  0E0A               	movlw	10
 38680  0141E2  6EE6               	movwf	postinc1,c
 38681  0141E4  0ED7               	movlw	215
 38682  0141E6  6EE6               	movwf	postinc1,c
 38683  0141E8  0E23               	movlw	35
 38684  0141EA  6EE6               	movwf	postinc1,c
 38685  0141EC  0E3C               	movlw	60
 38686  0141EE  6EE6               	movwf	postinc1,c
 38687  0141F0  EE22  F043         	lfsr	2,_C+68	;volatile
 38688  0141F4  006F FF7B FFE6     	movff	postinc2,postinc1
 38689  0141FA  006F FF7B FFE6     	movff	postinc2,postinc1
 38690  014200  006F FF7B FFE6     	movff	postinc2,postinc1
 38691  014206  006F FF7B FFE6     	movff	postinc2,postinc1
 38692  01420C  ECFB  F0CF         	call	___flge	;wreg free
 38693  014210  B001               	btfsc	btemp& (0+255),0,c
 38694  014212  D01C               	goto	l14304
 38695                           
 38696                           ;bsoc.c: 56:   adj = C.hist[0].peukert;
 38697  014214  0062  F2E4  F009   	movff	_C+186,btemp+8	;volatile
 38698  01421A  0062  F2E8  F00A   	movff	_C+187,btemp+9	;volatile
 38699  014220  0062  F2EC  F00B   	movff	_C+188,btemp+10	;volatile
 38700  014226  0062  F2F0  F00C   	movff	_C+189,btemp+11	;volatile
 38701                           
 38702                           ;stkvar	_adj @ sp[(-6)+0]
 38703  01422C  0EFA               	movlw	-6
 38704  01422E  0060  F027  FFE3   	movff	btemp+8,plusw1
 38705  014234  0EFB               	movlw	-5
 38706  014236  0060  F02B  FFE3   	movff	btemp+9,plusw1
 38707  01423C  0EFC               	movlw	-4
 38708  01423E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 38709  014244  0EFD               	movlw	-3
 38710  014246  0060  F033  FFE3   	movff	btemp+11,plusw1
 38711  01424C                     l14304:
 38712                           
 38713                           ;bsoc.c: 57:  C.dynamic_ah += ((C.c_bat * adj) / 3600.0);
 38714  01424C  0E00               	movlw	0
 38715  01424E  6EE6               	movwf	postinc1,c
 38716  014250  0E00               	movlw	0
 38717  014252  6EE6               	movwf	postinc1,c
 38718  014254  0E61               	movlw	97
 38719  014256  6EE6               	movwf	postinc1,c
 38720  014258  0E45               	movlw	69
 38721  01425A  6EE6               	movwf	postinc1,c
 38722                           
 38723                           ;stkvar	_adj @ sp[(-10)+0]
 38724  01425C  0EF6               	movlw	-10
 38725  01425E  006F FF8F FFE6     	movff	plusw1,postinc1
 38726  014264  006F FF8F FFE6     	movff	plusw1,postinc1
 38727  01426A  006F FF8F FFE6     	movff	plusw1,postinc1
 38728  014270  006F FF8F FFE6     	movff	plusw1,postinc1
 38729  014276  EE22  F043         	lfsr	2,_C+68	;volatile
 38730  01427A  006F FF7B FFE6     	movff	postinc2,postinc1
 38731  014280  006F FF7B FFE6     	movff	postinc2,postinc1
 38732  014286  006F FF7B FFE6     	movff	postinc2,postinc1
 38733  01428C  006F FF7B FFE6     	movff	postinc2,postinc1
 38734  014292  EC52  F0A5         	call	___flmul	;wreg free
 38735  014296  0060  F007  FFE6   	movff	btemp,postinc1
 38736  01429C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 38737  0142A2  0060  F00F  FFE6   	movff	btemp+2,postinc1
 38738  0142A8  0060  F013  FFE6   	movff	btemp+3,postinc1
 38739  0142AE  EC45  F0AD         	call	___fldiv	;wreg free
 38740  0142B2  0060  F007  FFE6   	movff	btemp,postinc1
 38741  0142B8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 38742  0142BE  0060  F00F  FFE6   	movff	btemp+2,postinc1
 38743  0142C4  0060  F013  FFE6   	movff	btemp+3,postinc1
 38744  0142CA  0E8F               	movlw	low (_C+144)
 38745  0142CC  6EE6               	movwf	postinc1,c
 38746  0142CE  0E08               	movlw	high (_C+144)
 38747  0142D0  6EE6               	movwf	postinc1,c
 38748  0142D2  ECE7  F0E2         	call	___asfladd	;wreg free
 38749                           
 38750                           ;bsoc.c: 59:  C.dynamic_ah_adj = C.dynamic_ah;
 38751  0142D6  EE22  F08F         	lfsr	2,_C+144	;volatile
 38752  0142DA  006F FF78  F89B    	movff	postinc2,_C+156	;volatile
 38753  0142E0  006F FF78  F89C    	movff	postinc2,_C+157	;volatile
 38754  0142E6  006F FF78  F89D    	movff	postinc2,_C+158	;volatile
 38755  0142EC  006F FF74  F89E    	movff	postdec2,_C+159	;volatile
 38756                           
 38757                           ;bsoc.c: 60:  if (C.dynamic_ah_adj > (C.bank_ah))
 38758  0142F2  EE22  F09B         	lfsr	2,_C+156	;volatile
 38759  0142F6  006F FF7B FFE6     	movff	postinc2,postinc1
 38760  0142FC  006F FF7B FFE6     	movff	postinc2,postinc1
 38761  014302  006F FF7B FFE6     	movff	postinc2,postinc1
 38762  014308  006F FF7B FFE6     	movff	postinc2,postinc1
 38763  01430E  EE22  F08B         	lfsr	2,_C+140	;volatile
 38764  014312  006F FF7B FFE6     	movff	postinc2,postinc1
 38765  014318  006F FF7B FFE6     	movff	postinc2,postinc1
 38766  01431E  006F FF7B FFE6     	movff	postinc2,postinc1
 38767  014324  006F FF7B FFE6     	movff	postinc2,postinc1
 38768  01432A  ECFB  F0CF         	call	___flge	;wreg free
 38769  01432E  B001               	btfsc	btemp& (0+255),0,c
 38770  014330  D00E               	goto	l14312
 38771                           
 38772                           ;bsoc.c: 61:   C.dynamic_ah_adj = C.bank_ah;
 38773  014332  EE22  F08B         	lfsr	2,_C+140	;volatile
 38774  014336  006F FF78  F89B    	movff	postinc2,_C+156	;volatile
 38775  01433C  006F FF78  F89C    	movff	postinc2,_C+157	;volatile
 38776  014342  006F FF78  F89D    	movff	postinc2,_C+158	;volatile
 38777  014348  006F FF74  F89E    	movff	postdec2,_C+159	;volatile
 38778  01434E                     l14312:
 38779                           
 38780                           ;bsoc.c: 62:  if (C.dynamic_ah_adj < 0.1)
 38781  01434E  0ECD               	movlw	205
 38782  014350  6EE6               	movwf	postinc1,c
 38783  014352  0ECC               	movlw	204
 38784  014354  6EE6               	movwf	postinc1,c
 38785  014356  0ECC               	movlw	204
 38786  014358  6EE6               	movwf	postinc1,c
 38787  01435A  0E3D               	movlw	61
 38788  01435C  6EE6               	movwf	postinc1,c
 38789  01435E  EE22  F09B         	lfsr	2,_C+156	;volatile
 38790  014362  006F FF7B FFE6     	movff	postinc2,postinc1
 38791  014368  006F FF7B FFE6     	movff	postinc2,postinc1
 38792  01436E  006F FF7B FFE6     	movff	postinc2,postinc1
 38793  014374  006F FF7B FFE6     	movff	postinc2,postinc1
 38794  01437A  ECFB  F0CF         	call	___flge	;wreg free
 38795  01437E  B001               	btfsc	btemp& (0+255),0,c
 38796  014380  D010               	goto	l14316
 38797                           
 38798                           ;bsoc.c: 63:   C.dynamic_ah_adj = 0.1;
 38799  014382  0ECD               	movlw	205
 38800  014384  006F FFA0  F89B    	movff	wreg,_C+156	;volatile
 38801  01438A  0ECC               	movlw	204
 38802  01438C  006F FFA0  F89C    	movff	wreg,_C+157	;volatile
 38803  014392  0ECC               	movlw	204
 38804  014394  006F FFA0  F89D    	movff	wreg,_C+158	;volatile
 38805  01439A  0E3D               	movlw	61
 38806  01439C  006F FFA0  F89E    	movff	wreg,_C+159	;volatile
 38807  0143A2                     l14316:
 38808                           
 38809                           ;bsoc.c: 66:  C.pv_ah += (C.c_pv / 3600.0);
 38810  0143A2  0E00               	movlw	0
 38811  0143A4  6EE6               	movwf	postinc1,c
 38812  0143A6  0E00               	movlw	0
 38813  0143A8  6EE6               	movwf	postinc1,c
 38814  0143AA  0E61               	movlw	97
 38815  0143AC  6EE6               	movwf	postinc1,c
 38816  0143AE  0E45               	movlw	69
 38817  0143B0  6EE6               	movwf	postinc1,c
 38818  0143B2  EE22  F047         	lfsr	2,_C+72	;volatile
 38819  0143B6  006F FF7B FFE6     	movff	postinc2,postinc1
 38820  0143BC  006F FF7B FFE6     	movff	postinc2,postinc1
 38821  0143C2  006F FF7B FFE6     	movff	postinc2,postinc1
 38822  0143C8  006F FF7B FFE6     	movff	postinc2,postinc1
 38823  0143CE  EC45  F0AD         	call	___fldiv	;wreg free
 38824  0143D2  0060  F007  FFE6   	movff	btemp,postinc1
 38825  0143D8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 38826  0143DE  0060  F00F  FFE6   	movff	btemp+2,postinc1
 38827  0143E4  0060  F013  FFE6   	movff	btemp+3,postinc1
 38828  0143EA  0E93               	movlw	low (_C+148)
 38829  0143EC  6EE6               	movwf	postinc1,c
 38830  0143EE  0E08               	movlw	high (_C+148)
 38831  0143F0  6EE6               	movwf	postinc1,c
 38832  0143F2  ECE7  F0E2         	call	___asfladd	;wreg free
 38833                           
 38834                           ;bsoc.c: 67:  C.pvkw += (C.p_pv / 3600.0);
 38835  0143F6  0E00               	movlw	0
 38836  0143F8  6EE6               	movwf	postinc1,c
 38837  0143FA  0E00               	movlw	0
 38838  0143FC  6EE6               	movwf	postinc1,c
 38839  0143FE  0E61               	movlw	97
 38840  014400  6EE6               	movwf	postinc1,c
 38841  014402  0E45               	movlw	69
 38842  014404  6EE6               	movwf	postinc1,c
 38843  014406  EE22  F07B         	lfsr	2,_C+124	;volatile
 38844  01440A  006F FF7B FFE6     	movff	postinc2,postinc1
 38845  014410  006F FF7B FFE6     	movff	postinc2,postinc1
 38846  014416  006F FF7B FFE6     	movff	postinc2,postinc1
 38847  01441C  006F FF7B FFE6     	movff	postinc2,postinc1
 38848  014422  EC45  F0AD         	call	___fldiv	;wreg free
 38849  014426  0060  F007  FFE6   	movff	btemp,postinc1
 38850  01442C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 38851  014432  0060  F00F  FFE6   	movff	btemp+2,postinc1
 38852  014438  0060  F013  FFE6   	movff	btemp+3,postinc1
 38853  01443E  0EA7               	movlw	low (_C+168)
 38854  014440  6EE6               	movwf	postinc1,c
 38855  014442  0E08               	movlw	high (_C+168)
 38856  014444  6EE6               	movwf	postinc1,c
 38857  014446  ECE7  F0E2         	call	___asfladd	;wreg free
 38858                           
 38859                           ;bsoc.c: 68:  C.invkw += (C.p_inverter / 3600.0);
 38860  01444A  0E00               	movlw	0
 38861  01444C  6EE6               	movwf	postinc1,c
 38862  01444E  0E00               	movlw	0
 38863  014450  6EE6               	movwf	postinc1,c
 38864  014452  0E61               	movlw	97
 38865  014454  6EE6               	movwf	postinc1,c
 38866  014456  0E45               	movlw	69
 38867  014458  6EE6               	movwf	postinc1,c
 38868  01445A  EE22  F077         	lfsr	2,_C+120	;volatile
 38869  01445E  006F FF7B FFE6     	movff	postinc2,postinc1
 38870  014464  006F FF7B FFE6     	movff	postinc2,postinc1
 38871  01446A  006F FF7B FFE6     	movff	postinc2,postinc1
 38872  014470  006F FF7B FFE6     	movff	postinc2,postinc1
 38873  014476  EC45  F0AD         	call	___fldiv	;wreg free
 38874  01447A  0060  F007  FFE6   	movff	btemp,postinc1
 38875  014480  0060  F00B  FFE6   	movff	btemp+1,postinc1
 38876  014486  0060  F00F  FFE6   	movff	btemp+2,postinc1
 38877  01448C  0060  F013  FFE6   	movff	btemp+3,postinc1
 38878  014492  0EAB               	movlw	low (_C+172)
 38879  014494  6EE6               	movwf	postinc1,c
 38880  014496  0E08               	movlw	high (_C+172)
 38881  014498  6EE6               	movwf	postinc1,c
 38882  01449A  ECE7  F0E2         	call	___asfladd	;wreg free
 38883                           
 38884                           ;bsoc.c: 69:  C.loadkw += (C.p_load / 3600.0);
 38885  01449E  0E00               	movlw	0
 38886  0144A0  6EE6               	movwf	postinc1,c
 38887  0144A2  0E00               	movlw	0
 38888  0144A4  6EE6               	movwf	postinc1,c
 38889  0144A6  0E61               	movlw	97
 38890  0144A8  6EE6               	movwf	postinc1,c
 38891  0144AA  0E45               	movlw	69
 38892  0144AC  6EE6               	movwf	postinc1,c
 38893  0144AE  EE22  F073         	lfsr	2,_C+116	;volatile
 38894  0144B2  006F FF7B FFE6     	movff	postinc2,postinc1
 38895  0144B8  006F FF7B FFE6     	movff	postinc2,postinc1
 38896  0144BE  006F FF7B FFE6     	movff	postinc2,postinc1
 38897  0144C4  006F FF7B FFE6     	movff	postinc2,postinc1
 38898  0144CA  EC45  F0AD         	call	___fldiv	;wreg free
 38899  0144CE  0060  F007  FFE6   	movff	btemp,postinc1
 38900  0144D4  0060  F00B  FFE6   	movff	btemp+1,postinc1
 38901  0144DA  0060  F00F  FFE6   	movff	btemp+2,postinc1
 38902  0144E0  0060  F013  FFE6   	movff	btemp+3,postinc1
 38903  0144E6  0EAF               	movlw	low (_C+176)
 38904  0144E8  6EE6               	movwf	postinc1,c
 38905  0144EA  0E08               	movlw	high (_C+176)
 38906  0144EC  6EE6               	movwf	postinc1,c
 38907  0144EE  ECE7  F0E2         	call	___asfladd	;wreg free
 38908                           
 38909                           ;bsoc.c: 70:  if (C.p_bat > 0.0)
 38910  0144F2  EE22  F07F         	lfsr	2,_C+128	;volatile
 38911  0144F6  006F FF7B FFE6     	movff	postinc2,postinc1
 38912  0144FC  006F FF7B FFE6     	movff	postinc2,postinc1
 38913  014502  006F FF7B FFE6     	movff	postinc2,postinc1
 38914  014508  006F FF7B FFE6     	movff	postinc2,postinc1
 38915  01450E  0E00               	movlw	0
 38916  014510  6EE6               	movwf	postinc1,c
 38917  014512  0E00               	movlw	0
 38918  014514  6EE6               	movwf	postinc1,c
 38919  014516  0E00               	movlw	0
 38920  014518  6EE6               	movwf	postinc1,c
 38921  01451A  0E00               	movlw	0
 38922  01451C  6EE6               	movwf	postinc1,c
 38923  01451E  ECFB  F0CF         	call	___flge	;wreg free
 38924  014522  B001               	btfsc	btemp& (0+255),0,c
 38925  014524  D02A               	goto	l14322
 38926                           
 38927                           ;bsoc.c: 71:   C.bkwi += (C.p_bat / 3600.0);
 38928  014526  0E00               	movlw	0
 38929  014528  6EE6               	movwf	postinc1,c
 38930  01452A  0E00               	movlw	0
 38931  01452C  6EE6               	movwf	postinc1,c
 38932  01452E  0E61               	movlw	97
 38933  014530  6EE6               	movwf	postinc1,c
 38934  014532  0E45               	movlw	69
 38935  014534  6EE6               	movwf	postinc1,c
 38936  014536  EE22  F07F         	lfsr	2,_C+128	;volatile
 38937  01453A  006F FF7B FFE6     	movff	postinc2,postinc1
 38938  014540  006F FF7B FFE6     	movff	postinc2,postinc1
 38939  014546  006F FF7B FFE6     	movff	postinc2,postinc1
 38940  01454C  006F FF7B FFE6     	movff	postinc2,postinc1
 38941  014552  EC45  F0AD         	call	___fldiv	;wreg free
 38942  014556  0060  F007  FFE6   	movff	btemp,postinc1
 38943  01455C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 38944  014562  0060  F00F  FFE6   	movff	btemp+2,postinc1
 38945  014568  0060  F013  FFE6   	movff	btemp+3,postinc1
 38946  01456E  0E9F               	movlw	low (_C+160)
 38947  014570  6EE6               	movwf	postinc1,c
 38948  014572  0E08               	movlw	high (_C+160)
 38949  014574  6EE6               	movwf	postinc1,c
 38950  014576  ECE7  F0E2         	call	___asfladd	;wreg free
 38951  01457A                     l14322:
 38952                           
 38953                           ;bsoc.c: 72:  if (C.p_bat < 0.0)
 38954  01457A  EE22  F07F         	lfsr	2,_C+128	;volatile
 38955  01457E  0E03               	movlw	3
 38956  014580  AEDB               	btfss	plusw2,7,c
 38957  014582  D038               	goto	l14326
 38958                           
 38959                           ;bsoc.c: 73:   C.bkwo += fabsf(C.p_bat / 3600.0);
 38960  014584  0E00               	movlw	0
 38961  014586  6EE6               	movwf	postinc1,c
 38962  014588  0E00               	movlw	0
 38963  01458A  6EE6               	movwf	postinc1,c
 38964  01458C  0E61               	movlw	97
 38965  01458E  6EE6               	movwf	postinc1,c
 38966  014590  0E45               	movlw	69
 38967  014592  6EE6               	movwf	postinc1,c
 38968  014594  EE22  F07F         	lfsr	2,_C+128	;volatile
 38969  014598  006F FF7B FFE6     	movff	postinc2,postinc1
 38970  01459E  006F FF7B FFE6     	movff	postinc2,postinc1
 38971  0145A4  006F FF7B FFE6     	movff	postinc2,postinc1
 38972  0145AA  006F FF7B FFE6     	movff	postinc2,postinc1
 38973  0145B0  EC45  F0AD         	call	___fldiv	;wreg free
 38974  0145B4  0060  F007  FFE6   	movff	btemp,postinc1
 38975  0145BA  0060  F00B  FFE6   	movff	btemp+1,postinc1
 38976  0145C0  0060  F00F  FFE6   	movff	btemp+2,postinc1
 38977  0145C6  0060  F013  FFE6   	movff	btemp+3,postinc1
 38978  0145CC  ECAC  F0DD         	call	_fabsf	;wreg free
 38979  0145D0  0060  F007  FFE6   	movff	btemp,postinc1
 38980  0145D6  0060  F00B  FFE6   	movff	btemp+1,postinc1
 38981  0145DC  0060  F00F  FFE6   	movff	btemp+2,postinc1
 38982  0145E2  0060  F013  FFE6   	movff	btemp+3,postinc1
 38983  0145E8  0EA3               	movlw	low (_C+164)
 38984  0145EA  6EE6               	movwf	postinc1,c
 38985  0145EC  0E08               	movlw	high (_C+164)
 38986  0145EE  6EE6               	movwf	postinc1,c
 38987  0145F0  ECE7  F0E2         	call	___asfladd	;wreg free
 38988  0145F4                     l14326:
 38989                           
 38990                           ;bsoc.c: 75:  C.soc = ((uint16_t) ((C.dynamic_ah_adj / C.bank_ah)*100.0) + 1);
 38991  0145F4  0E00               	movlw	0
 38992  0145F6  6EE6               	movwf	postinc1,c
 38993  0145F8  0E00               	movlw	0
 38994  0145FA  6EE6               	movwf	postinc1,c
 38995  0145FC  0EC8               	movlw	200
 38996  0145FE  6EE6               	movwf	postinc1,c
 38997  014600  0E42               	movlw	66
 38998  014602  6EE6               	movwf	postinc1,c
 38999  014604  EE22  F08B         	lfsr	2,_C+140	;volatile
 39000  014608  006F FF7B FFE6     	movff	postinc2,postinc1
 39001  01460E  006F FF7B FFE6     	movff	postinc2,postinc1
 39002  014614  006F FF7B FFE6     	movff	postinc2,postinc1
 39003  01461A  006F FF7B FFE6     	movff	postinc2,postinc1
 39004  014620  EE22  F09B         	lfsr	2,_C+156	;volatile
 39005  014624  006F FF7B FFE6     	movff	postinc2,postinc1
 39006  01462A  006F FF7B FFE6     	movff	postinc2,postinc1
 39007  014630  006F FF7B FFE6     	movff	postinc2,postinc1
 39008  014636  006F FF7B FFE6     	movff	postinc2,postinc1
 39009  01463C  EC45  F0AD         	call	___fldiv	;wreg free
 39010  014640  0060  F007  FFE6   	movff	btemp,postinc1
 39011  014646  0060  F00B  FFE6   	movff	btemp+1,postinc1
 39012  01464C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 39013  014652  0060  F013  FFE6   	movff	btemp+3,postinc1
 39014  014658  EC52  F0A5         	call	___flmul	;wreg free
 39015  01465C  0060  F007  FFE6   	movff	btemp,postinc1
 39016  014662  0060  F00B  FFE6   	movff	btemp+1,postinc1
 39017  014668  0060  F00F  FFE6   	movff	btemp+2,postinc1
 39018  01466E  0060  F013  FFE6   	movff	btemp+3,postinc1
 39019  014674  EC42  F0CF         	call	___fltol	;wreg free
 39020  014678  0060  F004  F00B   	movff	btemp,btemp+10
 39021  01467E  0060  F008  F00C   	movff	btemp+1,btemp+11
 39022  014684  0E01               	movlw	1
 39023  014686  260B               	addwf	(btemp+10)^0,f,c
 39024  014688  0E00               	movlw	0
 39025  01468A  220C               	addwfc	(btemp+11)^0,f,c
 39026  01468C  0060  F02C  F8B5   	movff	btemp+10,_C+182	;volatile
 39027  014692  0060  F030  F8B6   	movff	btemp+11,_C+183	;volatile
 39028                           
 39029                           ;bsoc.c: 76:  if (C.soc > 100)
 39030  014698  EE22  F0B5         	lfsr	2,_C+182	;volatile
 39031  01469C  0E01               	movlw	1
 39032  01469E  50DB               	movf	plusw2,w,c
 39033  0146A0  E104               	bnz	u1373_20
 39034  0146A2  0E65               	movlw	101
 39035  0146A4  5CDE               	subwf	postinc2,w,c
 39036  0146A6  A0D8               	btfss	status,0,c
 39037  0146A8  D008               	goto	l14332
 39038  0146AA                     u1373_20:
 39039                           
 39040                           ;bsoc.c: 77:   C.soc = 100;
 39041  0146AA  0E64               	movlw	100
 39042  0146AC  006F FFA0  F8B5    	movff	wreg,_C+182	;volatile
 39043  0146B2  0E00               	movlw	0
 39044  0146B4  006F FFA0  F8B6    	movff	wreg,_C+183	;volatile
 39045  0146BA                     l14332:
 39046                           
 39047                           ;bsoc.c: 79:  if (C.c_bat < 0.0) {
 39048  0146BA  EE22  F043         	lfsr	2,_C+68	;volatile
 39049  0146BE  0E03               	movlw	3
 39050  0146C0  AEDB               	btfss	plusw2,7,c
 39051  0146C2  D047               	goto	l2321
 39052                           
 39053                           ;bsoc.c: 80:   C.runtime = (uint16_t) (-(C.dynamic_ah_adj / C.c_bat));
 39054  0146C4  EE22  F043         	lfsr	2,_C+68	;volatile
 39055  0146C8  006F FF7B FFE6     	movff	postinc2,postinc1
 39056  0146CE  006F FF7B FFE6     	movff	postinc2,postinc1
 39057  0146D4  006F FF7B FFE6     	movff	postinc2,postinc1
 39058  0146DA  006F FF7B FFE6     	movff	postinc2,postinc1
 39059  0146E0  EE22  F09B         	lfsr	2,_C+156	;volatile
 39060  0146E4  006F FF7B FFE6     	movff	postinc2,postinc1
 39061  0146EA  006F FF7B FFE6     	movff	postinc2,postinc1
 39062  0146F0  006F FF7B FFE6     	movff	postinc2,postinc1
 39063  0146F6  006F FF7B FFE6     	movff	postinc2,postinc1
 39064  0146FC  EC45  F0AD         	call	___fldiv	;wreg free
 39065  014700  0060  F007  FFE6   	movff	btemp,postinc1
 39066  014706  0060  F00B  FFE6   	movff	btemp+1,postinc1
 39067  01470C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 39068  014712  0060  F013  FFE6   	movff	btemp+3,postinc1
 39069  014718  ECBA  F0E6         	call	___flneg	;wreg free
 39070  01471C  0060  F007  FFE6   	movff	btemp,postinc1
 39071  014722  0060  F00B  FFE6   	movff	btemp+1,postinc1
 39072  014728  0060  F00F  FFE6   	movff	btemp+2,postinc1
 39073  01472E  0060  F013  FFE6   	movff	btemp+3,postinc1
 39074  014734  EC42  F0CF         	call	___fltol	;wreg free
 39075  014738  0060  F004  F00B   	movff	btemp,btemp+10
 39076  01473E  0060  F008  F00C   	movff	btemp+1,btemp+11
 39077  014744  0060  F02C  F8B3   	movff	btemp+10,_C+180	;volatile
 39078  01474A  0060  F030  F8B4   	movff	btemp+11,_C+181	;volatile
 39079                           
 39080                           ;bsoc.c: 81:  } else {
 39081  014750  D008               	goto	l14336
 39082  014752                     l2321:
 39083                           
 39084                           ;bsoc.c: 82:   C.runtime = 99;
 39085  014752  0E63               	movlw	99
 39086  014754  006F FFA0  F8B3    	movff	wreg,_C+180	;volatile
 39087  01475A  0E00               	movlw	0
 39088  01475C  006F FFA0  F8B4    	movff	wreg,_C+181	;volatile
 39089  014762                     l14336:
 39090                           
 39091                           ;bsoc.c: 84:  if (C.runtime > 99)
 39092  014762  EE22  F0B3         	lfsr	2,_C+180	;volatile
 39093  014766  0E01               	movlw	1
 39094  014768  50DB               	movf	plusw2,w,c
 39095  01476A  E104               	bnz	u1375_20
 39096  01476C  0E64               	movlw	100
 39097  01476E  5CDE               	subwf	postinc2,w,c
 39098  014770  A0D8               	btfss	status,0,c
 39099  014772  D008               	goto	l14340
 39100  014774                     u1375_20:
 39101                           
 39102                           ;bsoc.c: 85:   C.runtime = 99;
 39103  014774  0E63               	movlw	99
 39104  014776  006F FFA0  F8B3    	movff	wreg,_C+180	;volatile
 39105  01477C  0E00               	movlw	0
 39106  01477E  006F FFA0  F8B4    	movff	wreg,_C+181	;volatile
 39107  014784                     l14340:
 39108                           
 39109                           ;bsoc.c: 87:  V.lowint_count++;
 39110  014784  0E01               	movlw	1
 39111  014786  0102               	movlb	2	; () banked
 39112  014788  27B4               	addwf	(_V+180)& (0+255),f,b	;volatile
 39113  01478A  0E00               	movlw	0
 39114  01478C  23B5               	addwfc	(_V+181)& (0+255),f,b	;volatile
 39115  01478E  23B6               	addwfc	(_V+182)& (0+255),f,b	;volatile
 39116  014790  23B7               	addwfc	(_V+183)& (0+255),f,b	;volatile
 39117                           
 39118                           ;bsoc.c: 89:  if (!log_update_wait++ && V.system_stable) {
 39119  014792  2A40               	incf	calc_bsoc@log_update_wait^0,f,c
 39120  014794  0440               	decf	calc_bsoc@log_update_wait^0,w,c
 39121  014796  A4D8               	btfss	status,2,c
 39122  014798  D177               	goto	l14352
 39123                           
 39124                           ; BSR set to: 2
 39125  01479A  51AF               	movf	(_V+175)& (0+255),w,b	;volatile
 39126  01479C  B4D8               	btfsc	status,2,c
 39127  01479E  D174               	goto	l14352
 39128                           
 39129                           ; BSR set to: 2
 39130                           ;bsoc.c: 90:   log_ptr = port_data_dma_ptr();
 39131  0147A0  EC86  F0ED         	call	_port_data_dma_ptr	;wreg free
 39132                           
 39133                           ;stkvar	_log_ptr @ sp[(-6)+4]
 39134  0147A4  0EFF               	movlw	-1
 39135  0147A6  0060  F00B  FFE3   	movff	btemp+1,plusw1
 39136  0147AC  0EFE               	movlw	-2
 39137  0147AE  0060  F007  FFE3   	movff	btemp,plusw1
 39138                           
 39139                           ;bsoc.c: 91:   sprintf((char*) log_ptr, " %c ,%lu,%4.4f,%4.4f,%4.4f,%4.4f,%4.4f,%4.3f,%4
      +                          .3f,%4.3f,%4.3f,%4.3f,%4.3f,%d,%d,%2.6f,%4.3f,%d,%d,%lu,%lu,%4.3f,%4.3f,%4.3f\r\n",
 39140  0147B4  EE22  F0B9         	lfsr	2,_C+186	;volatile
 39141  0147B8  006F FF7B FFE6     	movff	postinc2,postinc1
 39142  0147BE  006F FF7B FFE6     	movff	postinc2,postinc1
 39143  0147C4  006F FF7B FFE6     	movff	postinc2,postinc1
 39144  0147CA  006F FF7B FFE6     	movff	postinc2,postinc1
 39145  0147D0  EE22  F0BD         	lfsr	2,_C+190	;volatile
 39146  0147D4  006F FF7B FFE6     	movff	postinc2,postinc1
 39147  0147DA  006F FF7B FFE6     	movff	postinc2,postinc1
 39148  0147E0  006F FF7B FFE6     	movff	postinc2,postinc1
 39149  0147E6  006F FF7B FFE6     	movff	postinc2,postinc1
 39150  0147EC  EE22  F09B         	lfsr	2,_C+156	;volatile
 39151  0147F0  006F FF7B FFE6     	movff	postinc2,postinc1
 39152  0147F6  006F FF7B FFE6     	movff	postinc2,postinc1
 39153  0147FC  006F FF7B FFE6     	movff	postinc2,postinc1
 39154  014802  006F FF7B FFE6     	movff	postinc2,postinc1
 39155  014808  EE22  F126         	lfsr	2,_C+295	;volatile
 39156  01480C  006F FF7B FFE6     	movff	postinc2,postinc1
 39157  014812  006F FF7B FFE6     	movff	postinc2,postinc1
 39158  014818  006F FF7B FFE6     	movff	postinc2,postinc1
 39159  01481E  006F FF7B FFE6     	movff	postinc2,postinc1
 39160  014824  EE22  F122         	lfsr	2,_C+291	;volatile
 39161  014828  006F FF7B FFE6     	movff	postinc2,postinc1
 39162  01482E  006F FF7B FFE6     	movff	postinc2,postinc1
 39163  014834  006F FF7B FFE6     	movff	postinc2,postinc1
 39164  01483A  006F FF7B FFE6     	movff	postinc2,postinc1
 39165  014840  EE22  F121         	lfsr	2,_C+290	;volatile
 39166  014844  50DF               	movf	indf2,w,c
 39167  014846  6EE6               	movwf	postinc1,c
 39168  014848  0E00               	movlw	0
 39169  01484A  6EE6               	movwf	postinc1,c
 39170  01484C  EC6A  F0ED         	call	_get_ac_charger_relay	;wreg free
 39171  014850  5001               	movf	btemp^0,w,c
 39172  014852  6EE6               	movwf	postinc1,c
 39173  014854  0E00               	movlw	0
 39174  014856  6EE6               	movwf	postinc1,c
 39175  014858  EE22  F067         	lfsr	2,_C+104	;volatile
 39176  01485C  006F FF7B FFE6     	movff	postinc2,postinc1
 39177  014862  006F FF7B FFE6     	movff	postinc2,postinc1
 39178  014868  006F FF7B FFE6     	movff	postinc2,postinc1
 39179  01486E  006F FF7B FFE6     	movff	postinc2,postinc1
 39180  014874  EE22  F087         	lfsr	2,_C+136	;volatile
 39181  014878  006F FF7B FFE6     	movff	postinc2,postinc1
 39182  01487E  006F FF7B FFE6     	movff	postinc2,postinc1
 39183  014884  006F FF7B FFE6     	movff	postinc2,postinc1
 39184  01488A  006F FF7B FFE6     	movff	postinc2,postinc1
 39185  014890  EE22  F0B3         	lfsr	2,_C+180	;volatile
 39186  014894  006F FF78  F00B    	movff	postinc2,btemp+10
 39187  01489A  006F FF74  F00C    	movff	postdec2,btemp+11
 39188  0148A0  0060  F02F  FFE6   	movff	btemp+10,postinc1
 39189  0148A6  0060  F033  FFE6   	movff	btemp+11,postinc1
 39190  0148AC  EE22  F0B5         	lfsr	2,_C+182	;volatile
 39191  0148B0  006F FF78  F00B    	movff	postinc2,btemp+10
 39192  0148B6  006F FF74  F00C    	movff	postdec2,btemp+11
 39193  0148BC  0060  F02F  FFE6   	movff	btemp+10,postinc1
 39194  0148C2  0060  F033  FFE6   	movff	btemp+11,postinc1
 39195  0148C8  EE22  F093         	lfsr	2,_C+148	;volatile
 39196  0148CC  006F FF7B FFE6     	movff	postinc2,postinc1
 39197  0148D2  006F FF7B FFE6     	movff	postinc2,postinc1
 39198  0148D8  006F FF7B FFE6     	movff	postinc2,postinc1
 39199  0148DE  006F FF7B FFE6     	movff	postinc2,postinc1
 39200  0148E4  EE22  F08F         	lfsr	2,_C+144	;volatile
 39201  0148E8  006F FF7B FFE6     	movff	postinc2,postinc1
 39202  0148EE  006F FF7B FFE6     	movff	postinc2,postinc1
 39203  0148F4  006F FF7B FFE6     	movff	postinc2,postinc1
 39204  0148FA  006F FF7B FFE6     	movff	postinc2,postinc1
 39205  014900  EE22  F077         	lfsr	2,_C+120	;volatile
 39206  014904  006F FF7B FFE6     	movff	postinc2,postinc1
 39207  01490A  006F FF7B FFE6     	movff	postinc2,postinc1
 39208  014910  006F FF7B FFE6     	movff	postinc2,postinc1
 39209  014916  006F FF7B FFE6     	movff	postinc2,postinc1
 39210  01491C  EE22  F073         	lfsr	2,_C+116	;volatile
 39211  014920  006F FF7B FFE6     	movff	postinc2,postinc1
 39212  014926  006F FF7B FFE6     	movff	postinc2,postinc1
 39213  01492C  006F FF7B FFE6     	movff	postinc2,postinc1
 39214  014932  006F FF7B FFE6     	movff	postinc2,postinc1
 39215  014938  EE22  F07B         	lfsr	2,_C+124	;volatile
 39216  01493C  006F FF7B FFE6     	movff	postinc2,postinc1
 39217  014942  006F FF7B FFE6     	movff	postinc2,postinc1
 39218  014948  006F FF7B FFE6     	movff	postinc2,postinc1
 39219  01494E  006F FF7B FFE6     	movff	postinc2,postinc1
 39220  014954  EE22  F07F         	lfsr	2,_C+128	;volatile
 39221  014958  006F FF7B FFE6     	movff	postinc2,postinc1
 39222  01495E  006F FF7B FFE6     	movff	postinc2,postinc1
 39223  014964  006F FF7B FFE6     	movff	postinc2,postinc1
 39224  01496A  006F FF7B FFE6     	movff	postinc2,postinc1
 39225  014970  EE22  F047         	lfsr	2,_C+72	;volatile
 39226  014974  006F FF7B FFE6     	movff	postinc2,postinc1
 39227  01497A  006F FF7B FFE6     	movff	postinc2,postinc1
 39228  014980  006F FF7B FFE6     	movff	postinc2,postinc1
 39229  014986  006F FF7B FFE6     	movff	postinc2,postinc1
 39230  01498C  EE22  F043         	lfsr	2,_C+68	;volatile
 39231  014990  006F FF7B FFE6     	movff	postinc2,postinc1
 39232  014996  006F FF7B FFE6     	movff	postinc2,postinc1
 39233  01499C  006F FF7B FFE6     	movff	postinc2,postinc1
 39234  0149A2  006F FF7B FFE6     	movff	postinc2,postinc1
 39235  0149A8  EE22  F063         	lfsr	2,_C+100	;volatile
 39236  0149AC  006F FF7B FFE6     	movff	postinc2,postinc1
 39237  0149B2  006F FF7B FFE6     	movff	postinc2,postinc1
 39238  0149B8  006F FF7B FFE6     	movff	postinc2,postinc1
 39239  0149BE  006F FF7B FFE6     	movff	postinc2,postinc1
 39240  0149C4  EE22  F04B         	lfsr	2,_C+76	;volatile
 39241  0149C8  006F FF7B FFE6     	movff	postinc2,postinc1
 39242  0149CE  006F FF7B FFE6     	movff	postinc2,postinc1
 39243  0149D4  006F FF7B FFE6     	movff	postinc2,postinc1
 39244  0149DA  006F FF7B FFE6     	movff	postinc2,postinc1
 39245  0149E0  EE22  F04F         	lfsr	2,_C+80	;volatile
 39246  0149E4  006F FF7B FFE6     	movff	postinc2,postinc1
 39247  0149EA  006F FF7B FFE6     	movff	postinc2,postinc1
 39248  0149F0  006F FF7B FFE6     	movff	postinc2,postinc1
 39249  0149F6  006F FF7B FFE6     	movff	postinc2,postinc1
 39250  0149FC  EE22  F053         	lfsr	2,_C+84	;volatile
 39251  014A00  006F FF7B FFE6     	movff	postinc2,postinc1
 39252  014A06  006F FF7B FFE6     	movff	postinc2,postinc1
 39253  014A0C  006F FF7B FFE6     	movff	postinc2,postinc1
 39254  014A12  006F FF7B FFE6     	movff	postinc2,postinc1
 39255  014A18  0060  FA07  FFE6   	movff	_V+129,postinc1
 39256  014A1E  0060  FA0B  FFE6   	movff	_V+130,postinc1
 39257  014A24  0060  FA0F  FFE6   	movff	_V+131,postinc1
 39258  014A2A  0060  FA13  FFE6   	movff	_V+132,postinc1
 39259  014A30  0E32               	movlw	50
 39260  014A32  6EE6               	movwf	postinc1,c
 39261  014A34  0E00               	movlw	0
 39262  014A36  6EE6               	movwf	postinc1,c
 39263  014A38  0E69               	movlw	low STR_93
 39264  014A3A  6EE6               	movwf	postinc1,c
 39265  014A3C  0EFA               	movlw	high STR_93
 39266  014A3E  6EE6               	movwf	postinc1,c
 39267                           
 39268                           ;stkvar	_log_ptr @ sp[(-98)+4]
 39269  014A40  0EA2               	movlw	-94
 39270  014A42  006F FF8F FFE6     	movff	plusw1,postinc1
 39271  014A48  006F FF8F FFE6     	movff	plusw1,postinc1
 39272  014A4E  0E5E               	movlw	94
 39273  014A50  6EE6               	movwf	postinc1,c
 39274  014A52  EC5C  F0D8         	call	_sprintf	;wreg free
 39275                           
 39276                           ; BSR set to: 0
 39277                           ;bsoc.c: 98:   StartTimer(TMR_DISPLAY, 125);
 39278  014A56  0E7D               	movlw	125
 39279  014A58  6EE6               	movwf	postinc1,c
 39280  014A5A  0E00               	movlw	0
 39281  014A5C  6EE6               	movwf	postinc1,c
 39282  014A5E  0E0A               	movlw	10
 39283  014A60  6EE6               	movwf	postinc1,c
 39284  014A62  EC13  F0E8         	call	_StartTimer	;wreg free
 39285                           
 39286                           ;bsoc.c: 99:   send_port_data_dma(strlen((char*) log_ptr));
 39287                           ;stkvar	_log_ptr @ sp[(-6)+4]
 39288  014A66  0EFE               	movlw	-2
 39289  014A68  006F FF8F FFE6     	movff	plusw1,postinc1
 39290  014A6E  006F FF8F FFE6     	movff	plusw1,postinc1
 39291  014A74  EC55  F0DF         	call	_strlen	;wreg free
 39292  014A78  0060  F007  FFE6   	movff	btemp,postinc1
 39293  014A7E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 39294  014A84  ECF7  F0E5         	call	_send_port_data_dma	;wreg free
 39295  014A88                     l14352:
 39296                           
 39297                           ;bsoc.c: 101:  if (log_update_wait >= 10)
 39298  014A88  0E09               	movlw	9
 39299  014A8A  6440               	cpfsgt	calc_bsoc@log_update_wait^0,c
 39300  014A8C  D001               	goto	l2325
 39301                           
 39302                           ;bsoc.c: 102:   log_update_wait = 0;
 39303  014A8E  6A40               	clrf	calc_bsoc@log_update_wait^0,c
 39304  014A90                     l2325:
 39305                           
 39306                           ;bsoc.c: 104:  C.update = 0;
 39307  014A90  0E00               	movlw	0
 39308  014A92  006F FFA0  F8B7    	movff	wreg,_C+184	;volatile
 39309                           
 39310                           ;bsoc.c: 106:  do { LATEbits.LATE1 = 0; } while(0);
 39311  014A98  92BE               	bcf	190,1,c	;volatile
 39312                           
 39313                           ; _calc_bsoc: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 39314  014A9A  0EFA               	movlw	250
 39315  014A9C  26E1               	addwf	fsr1l,f,c
 39316  014A9E  0EFF               	movlw	255
 39317  014AA0  22E2               	addwfc	fsr1h,f,c
 39318  014AA2  0012               	return		;funcret
 39319  014AA4                     __end_of_calc_bsoc:
 39320                           	opt callstack 0
 39321                           
 39322 ;; *************** function _send_port_data_dma *****************
 39323 ;; Defined at:
 39324 ;;		line 398 in file "eadog.c"
 39325 ;; Parameters:    Size  Location     Type
 39326 ;;  dsize           2  [STACK] unsigned short 
 39327 ;; Auto vars:     Size  Location     Type
 39328 ;;		None
 39329 ;; Return value:  Size  Location     Type
 39330 ;;                  1  [STACK] void 
 39331 ;; Registers used:
 39332 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 39333 ;; Tracked objects:
 39334 ;;		On entry : 0/0
 39335 ;;		On exit  : 3F/3B
 39336 ;;		Unchanged: 0/0
 39337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39338 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39339 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39341 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39342 ;;Total ram usage:        0 bytes
 39343 ;; Hardware stack levels used:    1
 39344 ;; Hardware stack levels required when called:    3
 39345 ;; This function calls:
 39346 ;;		Nothing
 39347 ;; This function is called by:
 39348 ;;		_calc_bsoc
 39349 ;; This function uses a reentrant model
 39350 ;;
 39351                           
 39352                           	psect	text176
 39353  01CBEE                     __ptext176:
 39354                           	opt callstack 0
 39355  01CBEE                     _send_port_data_dma:
 39356                           	opt callstack 10
 39357                           
 39358                           ;eadog.c: 398: void send_port_data_dma(uint16_t dsize);eadog.c: 399: {;eadog.c: 400:  if
      +                           (dsize > 512)
 39359                           ;stkvar	_dsize @ sp[(0)+-2]
 39360                           
 39361                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 39362                           ;incstack = 0
 39363  01CBEE  0EFE               	movlw	-2
 39364  01CBF0  04E3               	decf	plusw1,w,c
 39365  01CBF2  0EFF               	movlw	-1
 39366  01CBF4  006F FF8C  F001    	movff	plusw1,btemp
 39367  01CBFA  0E02               	movlw	2
 39368  01CBFC  5A01               	subwfb	btemp^0,f,c
 39369  01CBFE  A0D8               	btfss	status,0,c
 39370  01CC00  D00C               	goto	l10932
 39371                           
 39372                           ;eadog.c: 401:   dsize = 512;
 39373  01CC02  0E00               	movlw	0
 39374  01CC04  6E0B               	movwf	(btemp+10)^0,c
 39375  01CC06  0E02               	movlw	2
 39376  01CC08  6E0C               	movwf	(btemp+11)^0,c
 39377                           
 39378                           ;stkvar	_dsize @ sp[(0)+-2]
 39379  01CC0A  0EFE               	movlw	-2
 39380  01CC0C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 39381  01CC12  0EFF               	movlw	-1
 39382  01CC14  0060  F033  FFE3   	movff	btemp+11,plusw1
 39383  01CC1A                     l10932:
 39384                           
 39385                           ;eadog.c: 403:  DMA2CON0bits.EN = 0;
 39386  01CC1A  013B               	movlb	59	; () banked
 39387  01CC1C  9FDC               	bcf	220,7,b	;volatile
 39388                           
 39389                           ; BSR set to: 59
 39390                           ;eadog.c: 404:  DMA2SSZ = dsize;
 39391                           ;stkvar	_dsize @ sp[(0)+-2]
 39392  01CC1E  0EFE               	movlw	-2
 39393  01CC20  006F FF8F FBD7     	movff	plusw1,15319	;volatile
 39394  01CC26  0EFF               	movlw	-1
 39395  01CC28  006F FF8F FBD8     	movff	plusw1,15320	;volatile
 39396                           
 39397                           ; BSR set to: 59
 39398                           ;eadog.c: 405:  DMA2DSZ = 1;
 39399  01CC2E  0E00               	movlw	0
 39400  01CC30  6FCF               	movwf	207,b	;volatile
 39401  01CC32  0E01               	movlw	1
 39402  01CC34  6FCE               	movwf	206,b	;volatile
 39403                           
 39404                           ; BSR set to: 59
 39405                           ;eadog.c: 406:  DMA2CON0bits.EN = 1;
 39406  01CC36  8FDC               	bsf	220,7,b	;volatile
 39407                           
 39408                           ; BSR set to: 59
 39409                           ;eadog.c: 407:  DMA2CON0bits.DMA2SIRQEN = 1;
 39410  01CC38  8DDC               	bsf	220,6,b	;volatile
 39411                           
 39412                           ; BSR set to: 59
 39413                           ; _send_port_data_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 39414  01CC3A  52E5               	movf	postdec1,f,c
 39415  01CC3C  52E5               	movf	postdec1,f,c
 39416  01CC3E  0012               	return		;funcret
 39417  01CC40                     __end_of_send_port_data_dma:
 39418                           	opt callstack 0
 39419                           
 39420 ;; *************** function _port_data_dma_ptr *****************
 39421 ;; Defined at:
 39422 ;;		line 413 in file "eadog.c"
 39423 ;; Parameters:    Size  Location     Type
 39424 ;;		None
 39425 ;; Auto vars:     Size  Location     Type
 39426 ;;		None
 39427 ;; Return value:  Size  Location     Type
 39428 ;;                  2  [STACK] PTR unsigned char 
 39429 ;; Registers used:
 39430 ;;		wreg, status,2, status,0, btemp, btemp+1
 39431 ;; Tracked objects:
 39432 ;;		On entry : 3F/2
 39433 ;;		On exit  : 0/0
 39434 ;;		Unchanged: 0/0
 39435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39436 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39437 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39438 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39439 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39440 ;;Total ram usage:        0 bytes
 39441 ;; Hardware stack levels used:    1
 39442 ;; Hardware stack levels required when called:    3
 39443 ;; This function calls:
 39444 ;;		Nothing
 39445 ;; This function is called by:
 39446 ;;		_calc_bsoc
 39447 ;; This function uses a reentrant model
 39448 ;;
 39449                           
 39450                           	psect	text177
 39451  01DB0C                     __ptext177:
 39452                           	opt callstack 0
 39453  01DB0C                     _port_data_dma_ptr:
 39454                           	opt callstack 10
 39455                           
 39456                           ;eadog.c: 415:  return port_data;
 39457                           
 39458                           ; BSR set to: 59
 39459                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 39460                           ;incstack = 0
 39461  01DB0C  0EFF               	movlw	low _port_data
 39462  01DB0E  6E01               	movwf	btemp^0,c
 39463  01DB10  0E05               	movlw	high _port_data
 39464  01DB12  6E02               	movwf	(btemp+1)^0,c
 39465                           
 39466                           ; _port_data_dma_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 39467  01DB14  0012               	return		;funcret
 39468  01DB16                     __end_of_port_data_dma_ptr:
 39469                           	opt callstack 0
 39470                           
 39471 ;; *************** function ___asfladd *****************
 39472 ;; Defined at:
 39473 ;;		line 6 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/pic18/asfladd.c"
 39474 ;; Parameters:    Size  Location     Type
 39475 ;;  f1p             2  [STACK] PTR 
 39476 ;;		 -> C(299), 
 39477 ;;  f2              4  [STACK] PTR 
 39478 ;; Auto vars:     Size  Location     Type
 39479 ;;		None
 39480 ;; Return value:  Size  Location     Type
 39481 ;;                  4  [STACK] PTR 
 39482 ;; Registers used:
 39483 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 39484 ;; Tracked objects:
 39485 ;;		On entry : 0/0
 39486 ;;		On exit  : 0/0
 39487 ;;		Unchanged: 0/0
 39488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39489 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39490 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39491 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39492 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39493 ;;Total ram usage:        0 bytes
 39494 ;; Hardware stack levels used:    1
 39495 ;; Hardware stack levels required when called:    4
 39496 ;; This function calls:
 39497 ;;		___fladd
 39498 ;; This function is called by:
 39499 ;;		_calc_bsoc
 39500 ;; This function uses a reentrant model
 39501 ;;
 39502                           
 39503                           	psect	text178
 39504  01C5CE                     __ptext178:
 39505                           	opt callstack 0
 39506  01C5CE                     ___asfladd:
 39507                           	opt callstack 9
 39508                           
 39509                           ;	Return value of ___asfladd is never used
 39510                           ;stkvar	_f2 @ sp[(0)+-6]
 39511                           
 39512                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 39513                           ;incstack = 0
 39514  01C5CE  0EFA               	movlw	-6
 39515  01C5D0  006F FF8F FFE6     	movff	plusw1,postinc1
 39516  01C5D6  006F FF8F FFE6     	movff	plusw1,postinc1
 39517  01C5DC  006F FF8F FFE6     	movff	plusw1,postinc1
 39518  01C5E2  006F FF8F FFE6     	movff	plusw1,postinc1
 39519                           
 39520                           ;stkvar	_f1p @ sp[(-4)+-2]
 39521  01C5E8  0EFA               	movlw	-6
 39522  01C5EA  006F FF8F FFD9     	movff	plusw1,fsr2l
 39523  01C5F0  0EFB               	movlw	-5
 39524  01C5F2  006F FF8F FFDA     	movff	plusw1,fsr2h
 39525  01C5F8  006F FF7B FFE6     	movff	postinc2,postinc1
 39526  01C5FE  006F FF7B FFE6     	movff	postinc2,postinc1
 39527  01C604  006F FF7B FFE6     	movff	postinc2,postinc1
 39528  01C60A  006F FF7B FFE6     	movff	postinc2,postinc1
 39529  01C610  EC67  F0A9         	call	___fladd	;wreg free
 39530                           
 39531                           ;stkvar	_f1p @ sp[(0)+-2]
 39532  01C614  0EFE               	movlw	-2
 39533  01C616  006F FF8F FFD9     	movff	plusw1,fsr2l
 39534  01C61C  0EFF               	movlw	-1
 39535  01C61E  006F FF8F FFDA     	movff	plusw1,fsr2h
 39536  01C624  0060  F007  FFDE   	movff	btemp,postinc2
 39537  01C62A  0060  F00B  FFDE   	movff	btemp+1,postinc2
 39538  01C630  0060  F00F  FFDE   	movff	btemp+2,postinc2
 39539  01C636  0060  F013  FFDE   	movff	btemp+3,postinc2
 39540                           
 39541                           ; ___asfladd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
 39542  01C63C  0EFA               	movlw	250
 39543  01C63E  26E1               	addwf	fsr1l,f,c
 39544  01C640  0EFF               	movlw	255
 39545  01C642  22E2               	addwfc	fsr1h,f,c
 39546  01C644  0012               	return		;funcret
 39547  01C646                     __end_of___asfladd:
 39548                           	opt callstack 0
 39549                           
 39550 ;; *************** function _INT0_ISR *****************
 39551 ;; Defined at:
 39552 ;;		line 36 in file "mcc_generated_files/ext_int.c"
 39553 ;; Parameters:    Size  Location     Type
 39554 ;;		None
 39555 ;; Auto vars:     Size  Location     Type
 39556 ;;		None
 39557 ;; Return value:  Size  Location     Type
 39558 ;;                  1    wreg      void 
 39559 ;; Registers used:
 39560 ;;		wreg, status,2, status,0, pclath, tosl
 39561 ;; Tracked objects:
 39562 ;;		On entry : 0/0
 39563 ;;		On exit  : 0/0
 39564 ;;		Unchanged: 0/0
 39565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39566 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39567 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39568 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39569 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39570 ;;Total ram usage:        0 bytes
 39571 ;; Hardware stack levels used:    1
 39572 ;; Hardware stack levels required when called:    2
 39573 ;; This function calls:
 39574 ;;		_INT0_CallBack
 39575 ;; This function is called by:
 39576 ;;		Interrupt level 2
 39577 ;; This function uses a non-reentrant model
 39578 ;;
 39579                           
 39580                           	psect	text179
 39581  01DAE4                     __ptext179:
 39582                           	opt callstack 0
 39583  01DAE4                     _INT0_ISR:
 39584                           	opt callstack 2
 39585                           
 39586                           ;incstack = 0
 39587  01DAE4  EE14  F208         	lfsr	1,___inthi_sp
 39588                           
 39589                           ;mcc_generated_files/ext_int.c: 38:  (PIR1bits.INT0IF = 0);
 39590  01DAE8  0139               	movlb	57	; () banked
 39591  01DAEA  91A1               	bcf	161,0,b	;volatile
 39592                           
 39593                           ; BSR set to: 57
 39594                           ;mcc_generated_files/ext_int.c: 41:  INT0_CallBack();
 39595  01DAEC  EC02  F0EC         	call	_INT0_CallBack	;wreg free
 39596  01DAF0  0011               	retfie		f
 39597  01DAF2                     __end_of_INT0_ISR:
 39598                           	opt callstack 0
 39599                           
 39600 ;; *************** function _INT0_CallBack *****************
 39601 ;; Defined at:
 39602 ;;		line 44 in file "mcc_generated_files/ext_int.c"
 39603 ;; Parameters:    Size  Location     Type
 39604 ;;		None
 39605 ;; Auto vars:     Size  Location     Type
 39606 ;;		None
 39607 ;; Return value:  Size  Location     Type
 39608 ;;                  1  [STACK] void 
 39609 ;; Registers used:
 39610 ;;		wreg, status,2, status,0, pclath, tosl
 39611 ;; Tracked objects:
 39612 ;;		On entry : 3F/39
 39613 ;;		On exit  : 0/0
 39614 ;;		Unchanged: 0/0
 39615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39616 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39617 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39618 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39619 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39620 ;;Total ram usage:        0 bytes
 39621 ;; Hardware stack levels used:    1
 39622 ;; Hardware stack levels required when called:    1
 39623 ;; This function calls:
 39624 ;;		Absolute function
 39625 ;;		_INT0_DefaultInterruptHandler
 39626 ;; This function is called by:
 39627 ;;		_INT0_ISR
 39628 ;; This function uses a reentrant model
 39629 ;;
 39630                           
 39631                           	psect	text180
 39632  01D804                     __ptext180:
 39633                           	opt callstack 0
 39634  01D804                     _INT0_CallBack:
 39635                           	opt callstack 2
 39636                           
 39637                           ;mcc_generated_files/ext_int.c: 47:  if (INT0_InterruptHandler) {
 39638                           
 39639                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 39640                           ;incstack = 0
 39641  01D804  0100               	movlb	0	; () banked
 39642  01D806  51BD               	movf	_INT0_InterruptHandler& (0+255),w,b
 39643  01D808  11BE               	iorwf	(_INT0_InterruptHandler+1)& (0+255),w,b
 39644  01D80A  11BF               	iorwf	(_INT0_InterruptHandler+2)& (0+255),w,b
 39645  01D80C  B4D8               	btfsc	status,2,c
 39646  01D80E  0012               	return	
 39647                           
 39648                           ; BSR set to: 0
 39649                           ;mcc_generated_files/ext_int.c: 48:   INT0_InterruptHandler();
 39650  01D810  D801               	call	u1097_48
 39651  01D812  0012               	return	
 39652  01D814                     u1097_48:
 39653  01D814  0005               	push	
 39654  01D816  6EFA               	movwf	pclath,c
 39655  01D818  51BD               	movf	_INT0_InterruptHandler& (0+255),w,b
 39656  01D81A  6EFD               	movwf	tosl,c
 39657  01D81C  51BE               	movf	(_INT0_InterruptHandler+1)& (0+255),w,b
 39658  01D81E  6EFE               	movwf	tosh,c
 39659  01D820  51BF               	movf	(_INT0_InterruptHandler+2)& (0+255),w,b
 39660  01D822  6EFF               	movwf	tosu,c
 39661  01D824  50FA               	movf	pclath,w,c
 39662  01D826  0012               	return		;indir
 39663  01D828                     __end_of_INT0_CallBack:
 39664                           	opt callstack 0
 39665                           
 39666 ;; *************** function _INT0_DefaultInterruptHandler *****************
 39667 ;; Defined at:
 39668 ;;		line 57 in file "mcc_generated_files/ext_int.c"
 39669 ;; Parameters:    Size  Location     Type
 39670 ;;		None
 39671 ;; Auto vars:     Size  Location     Type
 39672 ;;		None
 39673 ;; Return value:  Size  Location     Type
 39674 ;;                  1  [STACK] void 
 39675 ;; Registers used:
 39676 ;;		None
 39677 ;; Tracked objects:
 39678 ;;		On entry : 3F/0
 39679 ;;		On exit  : 0/0
 39680 ;;		Unchanged: 0/0
 39681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39682 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39683 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39684 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39685 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39686 ;;Total ram usage:        0 bytes
 39687 ;; Hardware stack levels used:    1
 39688 ;; This function calls:
 39689 ;;		Nothing
 39690 ;; This function is called by:
 39691 ;;		_EXT_INT_Initialize
 39692 ;;		_INT0_CallBack
 39693 ;; This function uses a reentrant model
 39694 ;;
 39695                           
 39696                           	psect	text181
 39697  01DB96                     __ptext181:
 39698                           	opt callstack 0
 39699  01DB96                     _INT0_DefaultInterruptHandler:
 39700                           	opt callstack 2
 39701                           
 39702                           ; _INT0_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 39703                           
 39704                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 39705                           ;incstack = 0
 39706  01DB96  0012               	return		;funcret
 39707  01DB98                     __end_of_INT0_DefaultInterruptHandler:
 39708                           	opt callstack 0
 39709                           
 39710 ;; *************** function _Default_ISR *****************
 39711 ;; Defined at:
 39712 ;;		line 88 in file "mcc_generated_files/interrupt_manager.c"
 39713 ;; Parameters:    Size  Location     Type
 39714 ;;		None
 39715 ;; Auto vars:     Size  Location     Type
 39716 ;;		None
 39717 ;; Return value:  Size  Location     Type
 39718 ;;                  1    wreg      void 
 39719 ;; Registers used:
 39720 ;;		None
 39721 ;; Tracked objects:
 39722 ;;		On entry : 0/0
 39723 ;;		On exit  : 0/0
 39724 ;;		Unchanged: 0/0
 39725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39726 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39727 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39728 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39729 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39730 ;;Total ram usage:        0 bytes
 39731 ;; Hardware stack levels used:    1
 39732 ;; This function calls:
 39733 ;;		Nothing
 39734 ;; This function is called by:
 39735 ;;		Interrupt level 2
 39736 ;; This function uses a non-reentrant model
 39737 ;;
 39738                           
 39739                           	psect	text182
 39740  01DB8C                     __ptext182:
 39741                           	opt callstack 0
 39742  01DB8C                     _Default_ISR:
 39743                           	opt callstack 4
 39744                           
 39745                           ;incstack = 0
 39746  01DB8C  EE14  F208         	lfsr	1,___inthi_sp
 39747  01DB90  0011               	retfie		f
 39748  01DB92                     __end_of_Default_ISR:
 39749                           	opt callstack 0
 39750                           
 39751 ;; *************** function _ADCC_ISR *****************
 39752 ;; Defined at:
 39753 ;;		line 314 in file "mcc_generated_files/adcc.c"
 39754 ;; Parameters:    Size  Location     Type
 39755 ;;		None
 39756 ;; Auto vars:     Size  Location     Type
 39757 ;;		None
 39758 ;; Return value:  Size  Location     Type
 39759 ;;                  1    wreg      void 
 39760 ;; Registers used:
 39761 ;;		wreg, status,2, status,0, pclath, tosl
 39762 ;; Tracked objects:
 39763 ;;		On entry : 0/0
 39764 ;;		On exit  : 0/0
 39765 ;;		Unchanged: 0/0
 39766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39767 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39768 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39769 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39770 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39771 ;;Total ram usage:        0 bytes
 39772 ;; Hardware stack levels used:    1
 39773 ;; Hardware stack levels required when called:    1
 39774 ;; This function calls:
 39775 ;;		Absolute function
 39776 ;;		_ADCC_DefaultInterruptHandler
 39777 ;;		_adc_int_handler
 39778 ;; This function is called by:
 39779 ;;		Interrupt level 2
 39780 ;; This function uses a non-reentrant model
 39781 ;;
 39782                           
 39783                           	psect	text183
 39784  01D498                     __ptext183:
 39785                           	opt callstack 0
 39786  01D498                     _ADCC_ISR:
 39787                           	opt callstack 3
 39788                           
 39789                           ;incstack = 0
 39790  01D498  EE14  F208         	lfsr	1,___inthi_sp
 39791                           
 39792                           ;mcc_generated_files/adcc.c: 317:     PIR1bits.ADIF = 0;
 39793  01D49C  0139               	movlb	57	; () banked
 39794  01D49E  95A1               	bcf	161,2,b	;volatile
 39795                           
 39796                           ; BSR set to: 57
 39797                           ;mcc_generated_files/adcc.c: 319:     if (ADCC_ADI_InterruptHandler)
 39798  01D4A0  0100               	movlb	0	; () banked
 39799  01D4A2  51AE               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 39800  01D4A4  11AF               	iorwf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 39801  01D4A6  11B0               	iorwf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 39802  01D4A8  B4D8               	btfsc	status,2,c
 39803  01D4AA  0011               	retfie		f
 39804                           
 39805                           ; BSR set to: 0
 39806                           ;mcc_generated_files/adcc.c: 320:             ADCC_ADI_InterruptHandler();
 39807  01D4AC  D801               	call	i2u1163_48
 39808  01D4AE  0011               	retfie		f
 39809  01D4B0                     i2u1163_48:
 39810  01D4B0  0005               	push	
 39811  01D4B2  6EFA               	movwf	pclath,c
 39812  01D4B4  51AE               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 39813  01D4B6  6EFD               	movwf	tosl,c
 39814  01D4B8  51AF               	movf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 39815  01D4BA  6EFE               	movwf	tosh,c
 39816  01D4BC  51B0               	movf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 39817  01D4BE  6EFF               	movwf	tosu,c
 39818  01D4C0  50FA               	movf	pclath,w,c
 39819  01D4C2  0012               	return		;indir
 39820  01D4C4                     __end_of_ADCC_ISR:
 39821                           	opt callstack 0
 39822                           
 39823 ;; *************** function _adc_int_t_handler *****************
 39824 ;; Defined at:
 39825 ;;		line 181 in file "daq.c"
 39826 ;; Parameters:    Size  Location     Type
 39827 ;;		None
 39828 ;; Auto vars:     Size  Location     Type
 39829 ;;		None
 39830 ;; Return value:  Size  Location     Type
 39831 ;;                  1  [STACK] void 
 39832 ;; Registers used:
 39833 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+11, prodl, prodh
 39834 ;; Tracked objects:
 39835 ;;		On entry : 3F/0
 39836 ;;		On exit  : 0/0
 39837 ;;		Unchanged: 0/0
 39838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39839 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39840 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39841 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39842 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39843 ;;Total ram usage:        0 bytes
 39844 ;; Hardware stack levels used:    1
 39845 ;; Hardware stack levels required when called:    1
 39846 ;; This function calls:
 39847 ;;		_ADCC_DischargeSampleCapacitor
 39848 ;;		_ADCC_StartConversion
 39849 ;; This function is called by:
 39850 ;;		_start_adc_scan
 39851 ;;		_ADCC_ThresholdISR
 39852 ;; This function uses a reentrant model
 39853 ;;
 39854                           
 39855                           	psect	text184
 39856  01C452                     __ptext184:
 39857                           	opt callstack 0
 39858  01C452                     _adc_int_t_handler:
 39859                           	opt callstack 2
 39860                           
 39861                           ;daq.c: 186:  R.raw_adc[R.scan_index] = ((adc_result_t) ((ADFLTRH << 8) + ADFLTRL));
 39862                           
 39863                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 39864                           ;incstack = 0
 39865  01C452  013E               	movlb	62	; () banked
 39866  01C454  51E6               	movf	230,w,b	;volatile
 39867  01C456  006F FB9C  F001    	movff	16103,btemp	;volatile
 39868  01C45C  6A02               	clrf	(btemp+1)^0,c
 39869  01C45E  0060  F004  F002   	movff	btemp,btemp+1
 39870  01C464  6A01               	clrf	btemp^0,c
 39871  01C466  2601               	addwf	btemp^0,f,c
 39872  01C468  0E00               	movlw	0
 39873  01C46A  2202               	addwfc	(btemp+1)^0,f,c
 39874  01C46C  0101               	movlb	1	; () banked
 39875  01C46E  5139               	movf	(_R+50)& (0+255),w,b	;volatile
 39876  01C470  0D02               	mullw	2
 39877  01C472  0E07               	movlw	low _R
 39878  01C474  24F3               	addwf	243,w,c
 39879  01C476  6ED9               	movwf	fsr2l,c
 39880  01C478  0E01               	movlw	high _R
 39881  01C47A  20F4               	addwfc	prodh,w,c
 39882  01C47C  6EDA               	movwf	fsr2h,c
 39883  01C47E  0060  F007  FFDE   	movff	btemp,postinc2
 39884  01C484  0060  F00B  FFDD   	movff	btemp+1,postdec2
 39885  01C48A                     l12562:
 39886                           
 39887                           ;daq.c: 188:   if (++R.scan_index > 0XD) {
 39888  01C48A  0101               	movlb	1	; () banked
 39889  01C48C  2B39               	incf	(_R+50)& (0+255),f,b	;volatile
 39890  01C48E  0E0D               	movlw	13
 39891  01C490  6539               	cpfsgt	(_R+50)& (0+255),b	;volatile
 39892  01C492  D003               	goto	l12568
 39893                           
 39894                           ; BSR set to: 1
 39895                           ;daq.c: 189:    R.done = 1;
 39896  01C494  0E01               	movlw	1
 39897  01C496  6F3C               	movwf	(_R+53)& (0+255),b	;volatile
 39898  01C498  0012               	return	
 39899  01C49A                     l12568:
 39900                           
 39901                           ; BSR set to: 1
 39902                           ;daq.c: 195:  } while (!((R.scan_select >> R.scan_index) &0x1));
 39903  01C49A  0060  F4E4  F00C   	movff	_R+50,btemp+11	;volatile
 39904  01C4A0  EE20  F13A         	lfsr	2,_R+51	;volatile
 39905  01C4A4  006F FF78  F009    	movff	postinc2,btemp+8
 39906  01C4AA  006F FF74  F00A    	movff	postdec2,btemp+9
 39907  01C4B0  2A0C               	incf	(btemp+11)^0,f,c
 39908  01C4B2  D003               	goto	u1160_44
 39909  01C4B4                     u1160_45:
 39910  01C4B4  90D8               	bcf	status,0,c
 39911  01C4B6  320A               	rrcf	(btemp+9)^0,f,c
 39912  01C4B8  3209               	rrcf	(btemp+8)^0,f,c
 39913  01C4BA                     u1160_44:
 39914  01C4BA  2E0C               	decfsz	(btemp+11)^0,f,c
 39915  01C4BC  D7FB               	goto	u1160_45
 39916  01C4BE  A009               	btfss	(btemp+8)^0,0,c
 39917  01C4C0  D7E4               	goto	l12562
 39918                           
 39919                           ;daq.c: 196:  ADCC_DischargeSampleCapacitor();
 39920  01C4C2  ECA6  F0ED         	call	_ADCC_DischargeSampleCapacitor	;wreg free
 39921                           
 39922                           ; BSR set to: 62
 39923                           ;daq.c: 197:  ADCC_StartConversion(R.scan_index & 0xf);
 39924  01C4C6  0101               	movlb	1	; () banked
 39925  01C4C8  5139               	movf	(_R+50)& (0+255),w,b	;volatile
 39926  01C4CA  0B0F               	andlw	15
 39927  01C4CC  6EE6               	movwf	postinc1,c
 39928  01C4CE  EC2B  F0ED         	call	_ADCC_StartConversion	;wreg free
 39929                           
 39930                           ; _adc_int_t_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 39931  01C4D2  0012               	return		;funcret
 39932  01C4D4                     __end_of_adc_int_t_handler:
 39933                           	opt callstack 0
 39934                           
 39935 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 39936 ;; Defined at:
 39937 ;;		line 339 in file "mcc_generated_files/adcc.c"
 39938 ;; Parameters:    Size  Location     Type
 39939 ;;		None
 39940 ;; Auto vars:     Size  Location     Type
 39941 ;;		None
 39942 ;; Return value:  Size  Location     Type
 39943 ;;                  1  [STACK] void 
 39944 ;; Registers used:
 39945 ;;		None
 39946 ;; Tracked objects:
 39947 ;;		On entry : 3F/0
 39948 ;;		On exit  : 0/0
 39949 ;;		Unchanged: 0/0
 39950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39951 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39952 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39953 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39954 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39955 ;;Total ram usage:        0 bytes
 39956 ;; Hardware stack levels used:    1
 39957 ;; This function calls:
 39958 ;;		Nothing
 39959 ;; This function is called by:
 39960 ;;		_ADCC_Initialize
 39961 ;;		_ADCC_ISR
 39962 ;;		_ADCC_ThresholdISR
 39963 ;; This function uses a reentrant model
 39964 ;;
 39965                           
 39966                           	psect	text185
 39967  01DB98                     __ptext185:
 39968                           	opt callstack 0
 39969  01DB98                     _ADCC_DefaultInterruptHandler:
 39970                           	opt callstack 3
 39971                           
 39972                           ; _ADCC_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 39973                           
 39974                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 39975                           ;incstack = 0
 39976  01DB98  0012               	return		;funcret
 39977  01DB9A                     __end_of_ADCC_DefaultInterruptHandler:
 39978                           	opt callstack 0
 39979                           
 39980 ;; *************** function _adc_int_handler *****************
 39981 ;; Defined at:
 39982 ;;		line 171 in file "daq.c"
 39983 ;; Parameters:    Size  Location     Type
 39984 ;;		None
 39985 ;; Auto vars:     Size  Location     Type
 39986 ;;		None
 39987 ;; Return value:  Size  Location     Type
 39988 ;;                  1  [STACK] void 
 39989 ;; Registers used:
 39990 ;;		None
 39991 ;; Tracked objects:
 39992 ;;		On entry : 3F/0
 39993 ;;		On exit  : 0/0
 39994 ;;		Unchanged: 0/0
 39995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39996 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39997 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39998 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39999 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40000 ;;Total ram usage:        0 bytes
 40001 ;; Hardware stack levels used:    1
 40002 ;; This function calls:
 40003 ;;		Nothing
 40004 ;; This function is called by:
 40005 ;;		_start_adc_scan
 40006 ;;		_ADCC_ISR
 40007 ;; This function uses a reentrant model
 40008 ;;
 40009                           
 40010                           	psect	text186
 40011  01DB9A                     __ptext186:
 40012                           	opt callstack 0
 40013  01DB9A                     _adc_int_handler:
 40014                           	opt callstack 3
 40015                           
 40016                           ; _adc_int_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 40017                           
 40018                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 40019                           ;incstack = 0
 40020  01DB9A  0012               	return		;funcret
 40021  01DB9C                     __end_of_adc_int_handler:
 40022                           	opt callstack 0
 40023                           
 40024 ;; *************** function _ADCC_ThresholdISR *****************
 40025 ;; Defined at:
 40026 ;;		line 327 in file "mcc_generated_files/adcc.c"
 40027 ;; Parameters:    Size  Location     Type
 40028 ;;		None
 40029 ;; Auto vars:     Size  Location     Type
 40030 ;;		None
 40031 ;; Return value:  Size  Location     Type
 40032 ;;                  1    wreg      void 
 40033 ;; Registers used:
 40034 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+8, btemp+9, btemp+11, tosl, prod
      +l, prodh
 40035 ;; Tracked objects:
 40036 ;;		On entry : 0/0
 40037 ;;		On exit  : 0/0
 40038 ;;		Unchanged: 0/0
 40039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 40040 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40041 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40042 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40043 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40044 ;;Total ram usage:        5 bytes
 40045 ;; Hardware stack levels used:    1
 40046 ;; Hardware stack levels required when called:    2
 40047 ;; This function calls:
 40048 ;;		Absolute function
 40049 ;;		_ADCC_DefaultInterruptHandler
 40050 ;;		_adc_int_t_handler
 40051 ;; This function is called by:
 40052 ;;		Interrupt level 2
 40053 ;; This function uses a non-reentrant model
 40054 ;;
 40055                           
 40056                           	psect	text187
 40057  01C71C                     __ptext187:
 40058                           	opt callstack 0
 40059  01C71C                     _ADCC_ThresholdISR:
 40060                           	opt callstack 2
 40061                           
 40062                           ;incstack = 0
 40063  01C71C  0060  F004  F021   	movff	btemp,??_ADCC_ThresholdISR
 40064  01C722  0060  F008  F022   	movff	btemp+1,??_ADCC_ThresholdISR+1
 40065  01C728  0060  F024  F023   	movff	btemp+8,??_ADCC_ThresholdISR+2
 40066  01C72E  0060  F028  F024   	movff	btemp+9,??_ADCC_ThresholdISR+3
 40067  01C734  0060  F030  F025   	movff	btemp+11,??_ADCC_ThresholdISR+4
 40068  01C73A  EE14  F208         	lfsr	1,___inthi_sp
 40069                           
 40070                           ;mcc_generated_files/adcc.c: 330:     PIR1bits.ADTIF = 0;
 40071  01C73E  0139               	movlb	57	; () banked
 40072  01C740  97A1               	bcf	161,3,b	;volatile
 40073                           
 40074                           ; BSR set to: 57
 40075                           ;mcc_generated_files/adcc.c: 332:     if (ADCC_ADTI_InterruptHandler)
 40076  01C742  0100               	movlb	0	; () banked
 40077  01C744  51AB               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 40078  01C746  11AC               	iorwf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 40079  01C748  11AD               	iorwf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 40080  01C74A  B4D8               	btfsc	status,2,c
 40081  01C74C  D00C               	goto	i2u1165_49
 40082                           
 40083                           ; BSR set to: 0
 40084                           ;mcc_generated_files/adcc.c: 333:         ADCC_ADTI_InterruptHandler();
 40085  01C74E  D801               	call	i2u1165_48
 40086  01C750  D00A               	goto	i2u1165_49
 40087  01C752                     i2u1165_48:
 40088  01C752  0005               	push	
 40089  01C754  6EFA               	movwf	pclath,c
 40090  01C756  51AB               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 40091  01C758  6EFD               	movwf	tosl,c
 40092  01C75A  51AC               	movf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 40093  01C75C  6EFE               	movwf	tosh,c
 40094  01C75E  51AD               	movf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 40095  01C760  6EFF               	movwf	tosu,c
 40096  01C762  50FA               	movf	pclath,w,c
 40097  01C764  0012               	return		;indir
 40098  01C766                     i2u1165_49:
 40099  01C766  0060  F094  F00C   	movff	??_ADCC_ThresholdISR+4,btemp+11
 40100  01C76C  0060  F090  F00A   	movff	??_ADCC_ThresholdISR+3,btemp+9
 40101  01C772  0060  F08C  F009   	movff	??_ADCC_ThresholdISR+2,btemp+8
 40102  01C778  0060  F088  F002   	movff	??_ADCC_ThresholdISR+1,btemp+1
 40103  01C77E  0060  F084  F001   	movff	??_ADCC_ThresholdISR,btemp
 40104  01C784  0011               	retfie		f
 40105  01C786                     __end_of_ADCC_ThresholdISR:
 40106                           	opt callstack 0
 40107                           
 40108 ;; *************** function _UART1_rx_vect_isr *****************
 40109 ;; Defined at:
 40110 ;;		line 181 in file "mcc_generated_files/uart1.c"
 40111 ;; Parameters:    Size  Location     Type
 40112 ;;		None
 40113 ;; Auto vars:     Size  Location     Type
 40114 ;;		None
 40115 ;; Return value:  Size  Location     Type
 40116 ;;                  1    wreg      void 
 40117 ;; Registers used:
 40118 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 40119 ;; Tracked objects:
 40120 ;;		On entry : 0/0
 40121 ;;		On exit  : 0/0
 40122 ;;		Unchanged: 0/0
 40123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 40124 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40125 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40126 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40127 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40128 ;;Total ram usage:        0 bytes
 40129 ;; Hardware stack levels used:    1
 40130 ;; Hardware stack levels required when called:    1
 40131 ;; This function calls:
 40132 ;;		Absolute function
 40133 ;;		_UART1_Receive_ISR
 40134 ;; This function is called by:
 40135 ;;		Interrupt level 2
 40136 ;; This function uses a non-reentrant model
 40137 ;;
 40138                           
 40139                           	psect	text188
 40140  01D6FC                     __ptext188:
 40141                           	opt callstack 0
 40142  01D6FC                     _UART1_rx_vect_isr:
 40143                           	opt callstack 3
 40144                           
 40145                           ;incstack = 0
 40146  01D6FC  EE14  F208         	lfsr	1,___inthi_sp
 40147                           
 40148                           ;mcc_generated_files/uart1.c: 183:     if(UART1_RxInterruptHandler)
 40149  01D700  0100               	movlb	0	; () banked
 40150  01D702  51B1               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 40151  01D704  11B2               	iorwf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 40152  01D706  11B3               	iorwf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 40153  01D708  B4D8               	btfsc	status,2,c
 40154  01D70A  0011               	retfie		f
 40155                           
 40156                           ; BSR set to: 0
 40157                           ;mcc_generated_files/uart1.c: 184: {;mcc_generated_files/uart1.c: 185:   UART1_RxInterru
      +                          ptHandler();
 40158  01D70C  D801               	call	i2u1167_48
 40159  01D70E  0011               	retfie		f
 40160  01D710                     i2u1167_48:
 40161  01D710  0005               	push	
 40162  01D712  6EFA               	movwf	pclath,c
 40163  01D714  51B1               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 40164  01D716  6EFD               	movwf	tosl,c
 40165  01D718  51B2               	movf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 40166  01D71A  6EFE               	movwf	tosh,c
 40167  01D71C  51B3               	movf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 40168  01D71E  6EFF               	movwf	tosu,c
 40169  01D720  50FA               	movf	pclath,w,c
 40170  01D722  0012               	return		;indir
 40171  01D724                     __end_of_UART1_rx_vect_isr:
 40172                           	opt callstack 0
 40173                           
 40174 ;; *************** function _UART1_Receive_ISR *****************
 40175 ;; Defined at:
 40176 ;;		line 192 in file "mcc_generated_files/uart1.c"
 40177 ;; Parameters:    Size  Location     Type
 40178 ;;		None
 40179 ;; Auto vars:     Size  Location     Type
 40180 ;;		None
 40181 ;; Return value:  Size  Location     Type
 40182 ;;                  1  [STACK] void 
 40183 ;; Registers used:
 40184 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 40185 ;; Tracked objects:
 40186 ;;		On entry : 3F/0
 40187 ;;		On exit  : 3F/0
 40188 ;;		Unchanged: 0/0
 40189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 40190 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40191 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40193 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40194 ;;Total ram usage:        0 bytes
 40195 ;; Hardware stack levels used:    1
 40196 ;; This function calls:
 40197 ;;		Nothing
 40198 ;; This function is called by:
 40199 ;;		_UART1_Initialize
 40200 ;;		_UART1_rx_vect_isr
 40201 ;; This function uses a reentrant model
 40202 ;;
 40203                           
 40204                           	psect	text189
 40205  01D96A                     __ptext189:
 40206                           	opt callstack 0
 40207  01D96A                     _UART1_Receive_ISR:
 40208                           	opt callstack 3
 40209                           
 40210                           ;mcc_generated_files/uart1.c: 195:  uart1RxBuffer[uart1RxHead++] = U1RXB;
 40211                           
 40212                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 40213                           ;incstack = 0
 40214  01D96A  5047               	movf	_uart1RxHead^0,w,c
 40215  01D96C  0F6C               	addlw	low _uart1RxBuffer
 40216  01D96E  6ED9               	movwf	fsr2l,c
 40217  01D970  6ADA               	clrf	fsr2h,c
 40218  01D972  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 40219  01D978  2A47               	incf	_uart1RxHead^0,f,c	;volatile
 40220                           
 40221                           ;mcc_generated_files/uart1.c: 196:     if(sizeof(uart1RxBuffer) <= uart1RxHead)
 40222  01D97A  0E07               	movlw	7
 40223  01D97C  6447               	cpfsgt	_uart1RxHead^0,c
 40224  01D97E  D001               	goto	l11890
 40225                           
 40226                           ;mcc_generated_files/uart1.c: 197:     {;mcc_generated_files/uart1.c: 198:   uart1RxHead
      +                           = 0;
 40227  01D980  6A47               	clrf	_uart1RxHead^0,c	;volatile
 40228  01D982                     l11890:
 40229                           
 40230                           ;mcc_generated_files/uart1.c: 200:  uart1RxCount++;
 40231  01D982  0100               	movlb	0	; () banked
 40232  01D984  2BD3               	incf	_uart1RxCount& (0+255),f,b	;volatile
 40233                           
 40234                           ; BSR set to: 0
 40235                           ; _UART1_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 40236  01D986  0012               	return		;funcret
 40237  01D988                     __end_of_UART1_Receive_ISR:
 40238                           	opt callstack 0
 40239                           
 40240 ;; *************** function _UART2_tx_vect_isr *****************
 40241 ;; Defined at:
 40242 ;;		line 195 in file "mcc_generated_files/uart2.c"
 40243 ;; Parameters:    Size  Location     Type
 40244 ;;		None
 40245 ;; Auto vars:     Size  Location     Type
 40246 ;;		None
 40247 ;; Return value:  Size  Location     Type
 40248 ;;                  1    wreg      void 
 40249 ;; Registers used:
 40250 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 40251 ;; Tracked objects:
 40252 ;;		On entry : 0/0
 40253 ;;		On exit  : 0/0
 40254 ;;		Unchanged: 0/0
 40255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 40256 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40257 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40258 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40259 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40260 ;;Total ram usage:        0 bytes
 40261 ;; Hardware stack levels used:    1
 40262 ;; Hardware stack levels required when called:    1
 40263 ;; This function calls:
 40264 ;;		Absolute function
 40265 ;;		_UART2_Transmit_ISR
 40266 ;; This function is called by:
 40267 ;;		Interrupt level 2
 40268 ;; This function uses a non-reentrant model
 40269 ;;
 40270                           
 40271                           	psect	text190
 40272  01D724                     __ptext190:
 40273                           	opt callstack 0
 40274  01D724                     _UART2_tx_vect_isr:
 40275                           	opt callstack 3
 40276                           
 40277                           ; BSR set to: 0
 40278                           ;incstack = 0
 40279  01D724  EE14  F208         	lfsr	1,___inthi_sp
 40280                           
 40281                           ;mcc_generated_files/uart2.c: 197:     if(UART2_TxInterruptHandler)
 40282  01D728  0100               	movlb	0	; () banked
 40283  01D72A  51B4               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 40284  01D72C  11B5               	iorwf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 40285  01D72E  11B6               	iorwf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 40286  01D730  B4D8               	btfsc	status,2,c
 40287  01D732  0011               	retfie		f
 40288                           
 40289                           ; BSR set to: 0
 40290                           ;mcc_generated_files/uart2.c: 198:     {;mcc_generated_files/uart2.c: 199:         UART2
      +                          _TxInterruptHandler();
 40291  01D734  D801               	call	i2u1169_48
 40292  01D736  0011               	retfie		f
 40293  01D738                     i2u1169_48:
 40294  01D738  0005               	push	
 40295  01D73A  6EFA               	movwf	pclath,c
 40296  01D73C  51B4               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 40297  01D73E  6EFD               	movwf	tosl,c
 40298  01D740  51B5               	movf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 40299  01D742  6EFE               	movwf	tosh,c
 40300  01D744  51B6               	movf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 40301  01D746  6EFF               	movwf	tosu,c
 40302  01D748  50FA               	movf	pclath,w,c
 40303  01D74A  0012               	return		;indir
 40304  01D74C                     __end_of_UART2_tx_vect_isr:
 40305                           	opt callstack 0
 40306                           
 40307 ;; *************** function _UART2_Transmit_ISR *****************
 40308 ;; Defined at:
 40309 ;;		line 213 in file "mcc_generated_files/uart2.c"
 40310 ;; Parameters:    Size  Location     Type
 40311 ;;		None
 40312 ;; Auto vars:     Size  Location     Type
 40313 ;;		None
 40314 ;; Return value:  Size  Location     Type
 40315 ;;                  1  [STACK] void 
 40316 ;; Registers used:
 40317 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 40318 ;; Tracked objects:
 40319 ;;		On entry : 3F/0
 40320 ;;		On exit  : 3B/39
 40321 ;;		Unchanged: 0/0
 40322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 40323 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40324 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40325 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40326 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40327 ;;Total ram usage:        0 bytes
 40328 ;; Hardware stack levels used:    1
 40329 ;; This function calls:
 40330 ;;		Nothing
 40331 ;; This function is called by:
 40332 ;;		_UART2_Initialize
 40333 ;;		_UART2_tx_vect_isr
 40334 ;; This function uses a reentrant model
 40335 ;;
 40336                           
 40337                           	psect	text191
 40338  01D4C4                     __ptext191:
 40339                           	opt callstack 0
 40340  01D4C4                     _UART2_Transmit_ISR:
 40341                           	opt callstack 3
 40342                           
 40343                           ;mcc_generated_files/uart2.c: 216:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
 40344                           
 40345                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 40346                           ;incstack = 0
 40347  01D4C4  0E40               	movlw	64
 40348  01D4C6  6045               	cpfslt	_uart2TxBufferRemaining^0,c
 40349  01D4C8  D010               	goto	l675
 40350                           
 40351                           ;mcc_generated_files/uart2.c: 217:     {;mcc_generated_files/uart2.c: 218:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
 40352  01D4CA  0EC0               	movlw	low _uart2TxBuffer
 40353  01D4CC  2446               	addwf	_uart2TxTail^0,w,c	;volatile
 40354  01D4CE  6ED9               	movwf	fsr2l,c
 40355  01D4D0  6ADA               	clrf	fsr2h,c
 40356  01D4D2  0E02               	movlw	high _uart2TxBuffer
 40357  01D4D4  22DA               	addwfc	fsr2h,f,c
 40358  01D4D6  50DF               	movf	indf2,w,c
 40359  01D4D8  013D               	movlb	61	; () banked
 40360  01D4DA  6FD2               	movwf	210,b	;volatile
 40361                           
 40362                           ; BSR set to: 61
 40363  01D4DC  2A46               	incf	_uart2TxTail^0,f,c	;volatile
 40364                           
 40365                           ; BSR set to: 61
 40366                           ;mcc_generated_files/uart2.c: 219:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
 40367  01D4DE  0E3F               	movlw	63
 40368  01D4E0  6446               	cpfsgt	_uart2TxTail^0,c
 40369  01D4E2  D001               	goto	l11902
 40370                           
 40371                           ; BSR set to: 61
 40372                           ;mcc_generated_files/uart2.c: 220:         {;mcc_generated_files/uart2.c: 221:          
      +                             uart2TxTail = 0;
 40373  01D4E4  6A46               	clrf	_uart2TxTail^0,c	;volatile
 40374  01D4E6                     l11902:
 40375                           
 40376                           ; BSR set to: 61
 40377                           ;mcc_generated_files/uart2.c: 223:         uart2TxBufferRemaining++;
 40378  01D4E6  2A45               	incf	_uart2TxBufferRemaining^0,f,c	;volatile
 40379                           
 40380                           ;mcc_generated_files/uart2.c: 224:     }
 40381  01D4E8  0012               	return	
 40382  01D4EA                     l675:
 40383                           
 40384                           ;mcc_generated_files/uart2.c: 226:     {;mcc_generated_files/uart2.c: 227:         PIE6b
      +                          its.U2TXIE = 0;
 40385  01D4EA  0139               	movlb	57	; () banked
 40386  01D4EC  9796               	bcf	150,3,b	;volatile
 40387                           
 40388                           ; _UART2_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 40389  01D4EE  0012               	return		;funcret
 40390  01D4F0                     __end_of_UART2_Transmit_ISR:
 40391                           	opt callstack 0
 40392                           
 40393 ;; *************** function _UART2_rx_vect_isr *****************
 40394 ;; Defined at:
 40395 ;;		line 203 in file "mcc_generated_files/uart2.c"
 40396 ;; Parameters:    Size  Location     Type
 40397 ;;		None
 40398 ;; Auto vars:     Size  Location     Type
 40399 ;;		None
 40400 ;; Return value:  Size  Location     Type
 40401 ;;                  1    wreg      void 
 40402 ;; Registers used:
 40403 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 40404 ;; Tracked objects:
 40405 ;;		On entry : 0/0
 40406 ;;		On exit  : 0/0
 40407 ;;		Unchanged: 0/0
 40408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 40409 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40410 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40411 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40412 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40413 ;;Total ram usage:        0 bytes
 40414 ;; Hardware stack levels used:    1
 40415 ;; Hardware stack levels required when called:    1
 40416 ;; This function calls:
 40417 ;;		Absolute function
 40418 ;;		_UART2_Receive_ISR
 40419 ;; This function is called by:
 40420 ;;		Interrupt level 2
 40421 ;; This function uses a non-reentrant model
 40422 ;;
 40423                           
 40424                           	psect	text192
 40425  01D74C                     __ptext192:
 40426                           	opt callstack 0
 40427  01D74C                     _UART2_rx_vect_isr:
 40428                           	opt callstack 3
 40429                           
 40430                           ;incstack = 0
 40431  01D74C  EE14  F208         	lfsr	1,___inthi_sp
 40432                           
 40433                           ;mcc_generated_files/uart2.c: 205:     if(UART2_RxInterruptHandler)
 40434  01D750  0100               	movlb	0	; () banked
 40435  01D752  51B7               	movf	_UART2_RxInterruptHandler& (0+255),w,b
 40436  01D754  11B8               	iorwf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
 40437  01D756  11B9               	iorwf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
 40438  01D758  B4D8               	btfsc	status,2,c
 40439  01D75A  0011               	retfie		f
 40440                           
 40441                           ; BSR set to: 0
 40442                           ;mcc_generated_files/uart2.c: 206:     {;mcc_generated_files/uart2.c: 207:         UART2
      +                          _RxInterruptHandler();
 40443  01D75C  D801               	call	i2u1171_48
 40444  01D75E  0011               	retfie		f
 40445  01D760                     i2u1171_48:
 40446  01D760  0005               	push	
 40447  01D762  6EFA               	movwf	pclath,c
 40448  01D764  51B7               	movf	_UART2_RxInterruptHandler& (0+255),w,b
 40449  01D766  6EFD               	movwf	tosl,c
 40450  01D768  51B8               	movf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
 40451  01D76A  6EFE               	movwf	tosh,c
 40452  01D76C  51B9               	movf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
 40453  01D76E  6EFF               	movwf	tosu,c
 40454  01D770  50FA               	movf	pclath,w,c
 40455  01D772  0012               	return		;indir
 40456  01D774                     __end_of_UART2_rx_vect_isr:
 40457                           	opt callstack 0
 40458                           
 40459 ;; *************** function _UART2_Receive_ISR *****************
 40460 ;; Defined at:
 40461 ;;		line 233 in file "mcc_generated_files/uart2.c"
 40462 ;; Parameters:    Size  Location     Type
 40463 ;;		None
 40464 ;; Auto vars:     Size  Location     Type
 40465 ;;		None
 40466 ;; Return value:  Size  Location     Type
 40467 ;;                  1  [STACK] void 
 40468 ;; Registers used:
 40469 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 40470 ;; Tracked objects:
 40471 ;;		On entry : 3F/0
 40472 ;;		On exit  : 3F/0
 40473 ;;		Unchanged: 0/0
 40474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 40475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40476 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40478 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40479 ;;Total ram usage:        0 bytes
 40480 ;; Hardware stack levels used:    1
 40481 ;; This function calls:
 40482 ;;		Nothing
 40483 ;; This function is called by:
 40484 ;;		_UART2_Initialize
 40485 ;;		_UART2_rx_vect_isr
 40486 ;; This function uses a reentrant model
 40487 ;;
 40488                           
 40489                           	psect	text193
 40490  01D8D2                     __ptext193:
 40491                           	opt callstack 0
 40492  01D8D2                     _UART2_Receive_ISR:
 40493                           	opt callstack 3
 40494                           
 40495                           ;mcc_generated_files/uart2.c: 236:     uart2RxBuffer[uart2RxHead++] = U2RXB;
 40496                           
 40497                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 40498                           ;incstack = 0
 40499  01D8D2  0E00               	movlw	low _uart2RxBuffer
 40500  01D8D4  2444               	addwf	_uart2RxHead^0,w,c	;volatile
 40501  01D8D6  6ED9               	movwf	fsr2l,c
 40502  01D8D8  6ADA               	clrf	fsr2h,c
 40503  01D8DA  0E05               	movlw	high _uart2RxBuffer
 40504  01D8DC  22DA               	addwfc	fsr2h,f,c
 40505  01D8DE  006F F743 FFDF     	movff	15824,indf2	;volatile
 40506  01D8E4  2A44               	incf	_uart2RxHead^0,f,c	;volatile
 40507                           
 40508                           ;mcc_generated_files/uart2.c: 237:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
 40509  01D8E6  2844               	incf	_uart2RxHead^0,w,c
 40510  01D8E8  B4D8               	btfsc	status,2,c
 40511                           
 40512                           ;mcc_generated_files/uart2.c: 238:     {;mcc_generated_files/uart2.c: 239:         uart2
      +                          RxHead = 0;
 40513  01D8EA  6A44               	clrf	_uart2RxHead^0,c	;volatile
 40514                           
 40515                           ;mcc_generated_files/uart2.c: 241:     uart2RxCount++;
 40516  01D8EC  0100               	movlb	0	; () banked
 40517  01D8EE  2BD0               	incf	_uart2RxCount& (0+255),f,b	;volatile
 40518                           
 40519                           ; BSR set to: 0
 40520                           ; _UART2_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 40521  01D8F0  0012               	return		;funcret
 40522  01D8F2                     __end_of_UART2_Receive_ISR:
 40523                           	opt callstack 0
 40524                           
 40525 ;; *************** function _TMR6_ISR *****************
 40526 ;; Defined at:
 40527 ;;		line 171 in file "mcc_generated_files/tmr6.c"
 40528 ;; Parameters:    Size  Location     Type
 40529 ;;		None
 40530 ;; Auto vars:     Size  Location     Type
 40531 ;;		None
 40532 ;; Return value:  Size  Location     Type
 40533 ;;                  1    wreg      void 
 40534 ;; Registers used:
 40535 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 40536 ;; Tracked objects:
 40537 ;;		On entry : 0/0
 40538 ;;		On exit  : 0/0
 40539 ;;		Unchanged: 0/0
 40540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 40541 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40542 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40543 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40544 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40545 ;;Total ram usage:        1 bytes
 40546 ;; Hardware stack levels used:    1
 40547 ;; Hardware stack levels required when called:    2
 40548 ;; This function calls:
 40549 ;;		_TMR6_CallBack
 40550 ;; This function is called by:
 40551 ;;		Interrupt level 2
 40552 ;; This function uses a non-reentrant model
 40553 ;;
 40554                           
 40555                           	psect	text194
 40556  01D9A4                     __ptext194:
 40557                           	opt callstack 0
 40558  01D9A4                     _TMR6_ISR:
 40559                           	opt callstack 2
 40560                           
 40561                           ; BSR set to: 0
 40562                           ;incstack = 0
 40563  01D9A4  0060  F004  F026   	movff	btemp,??_TMR6_ISR
 40564  01D9AA  EE14  F208         	lfsr	1,___inthi_sp
 40565                           
 40566                           ;mcc_generated_files/tmr6.c: 175:     PIR9bits.TMR6IF = 0;
 40567  01D9AE  0139               	movlb	57	; () banked
 40568  01D9B0  91A9               	bcf	169,0,b	;volatile
 40569                           
 40570                           ; BSR set to: 57
 40571                           ;mcc_generated_files/tmr6.c: 179:     TMR6_CallBack();
 40572  01D9B2  EC14  F0EC         	call	_TMR6_CallBack	;wreg free
 40573  01D9B6  0060  F098  F001   	movff	??_TMR6_ISR,btemp
 40574  01D9BC  0011               	retfie		f
 40575  01D9BE                     __end_of_TMR6_ISR:
 40576                           	opt callstack 0
 40577                           
 40578 ;; *************** function _TMR6_CallBack *****************
 40579 ;; Defined at:
 40580 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 40581 ;; Parameters:    Size  Location     Type
 40582 ;;		None
 40583 ;; Auto vars:     Size  Location     Type
 40584 ;;		None
 40585 ;; Return value:  Size  Location     Type
 40586 ;;                  1  [STACK] void 
 40587 ;; Registers used:
 40588 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 40589 ;; Tracked objects:
 40590 ;;		On entry : 3F/39
 40591 ;;		On exit  : 0/0
 40592 ;;		Unchanged: 0/0
 40593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 40594 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40595 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40596 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40597 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40598 ;;Total ram usage:        0 bytes
 40599 ;; Hardware stack levels used:    1
 40600 ;; Hardware stack levels required when called:    1
 40601 ;; This function calls:
 40602 ;;		Absolute function
 40603 ;;		_TMR6_DefaultInterruptHandler
 40604 ;; This function is called by:
 40605 ;;		_TMR6_ISR
 40606 ;; This function uses a reentrant model
 40607 ;;
 40608                           
 40609                           	psect	text195
 40610  01D828                     __ptext195:
 40611                           	opt callstack 0
 40612  01D828                     _TMR6_CallBack:
 40613                           	opt callstack 2
 40614                           
 40615                           ;mcc_generated_files/tmr6.c: 186:     if(TMR6_InterruptHandler)
 40616                           
 40617                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 40618                           ;incstack = 0
 40619  01D828  0100               	movlb	0	; () banked
 40620  01D82A  51A8               	movf	_TMR6_InterruptHandler& (0+255),w,b
 40621  01D82C  11A9               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 40622  01D82E  11AA               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 40623  01D830  B4D8               	btfsc	status,2,c
 40624  01D832  0012               	return	
 40625                           
 40626                           ; BSR set to: 0
 40627                           ;mcc_generated_files/tmr6.c: 187:     {;mcc_generated_files/tmr6.c: 188:         TMR6_In
      +                          terruptHandler();
 40628  01D834  D801               	call	u1105_48
 40629  01D836  0012               	return	
 40630  01D838                     u1105_48:
 40631  01D838  0005               	push	
 40632  01D83A  6EFA               	movwf	pclath,c
 40633  01D83C  51A8               	movf	_TMR6_InterruptHandler& (0+255),w,b
 40634  01D83E  6EFD               	movwf	tosl,c
 40635  01D840  51A9               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 40636  01D842  6EFE               	movwf	tosh,c
 40637  01D844  51AA               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 40638  01D846  6EFF               	movwf	tosu,c
 40639  01D848  50FA               	movf	pclath,w,c
 40640  01D84A  0012               	return		;indir
 40641  01D84C                     __end_of_TMR6_CallBack:
 40642                           	opt callstack 0
 40643                           
 40644 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 40645 ;; Defined at:
 40646 ;;		line 196 in file "mcc_generated_files/tmr6.c"
 40647 ;; Parameters:    Size  Location     Type
 40648 ;;		None
 40649 ;; Auto vars:     Size  Location     Type
 40650 ;;  i               1  [STACK] unsigned char 
 40651 ;; Return value:  Size  Location     Type
 40652 ;;                  1  [STACK] void 
 40653 ;; Registers used:
 40654 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 40655 ;; Tracked objects:
 40656 ;;		On entry : 3F/0
 40657 ;;		On exit  : 0/0
 40658 ;;		Unchanged: 0/0
 40659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 40660 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40661 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40663 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40664 ;;Total ram usage:        0 bytes
 40665 ;; Hardware stack levels used:    1
 40666 ;; This function calls:
 40667 ;;		Nothing
 40668 ;; This function is called by:
 40669 ;;		_TMR6_Initialize
 40670 ;;		_TMR6_CallBack
 40671 ;; This function uses a reentrant model
 40672 ;;
 40673                           
 40674                           	psect	text196
 40675  01CCDC                     __ptext196:
 40676                           	opt callstack 0
 40677  01CCDC                     _TMR6_DefaultInterruptHandler:
 40678                           	opt callstack 0
 40679                           
 40680                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 40681  01CCDC  52E6               	movf	postinc1,f,c
 40682                           
 40683                           ;mcc_generated_files/tmr6.c: 198:  uint8_t i;;mcc_generated_files/tmr6.c: 203:  for (i =
      +                           0; i < TMR_COUNT; i++) {
 40684                           ;stkvar	_i @ sp[(-1)+0]
 40685                           
 40686                           ;incstack = 0
 40687  01CCDE  0EFF               	movlw	-1
 40688  01CCE0  6AE3               	clrf	plusw1,c
 40689  01CCE2                     l11338:
 40690                           
 40691                           ;mcc_generated_files/tmr6.c: 204:   if (tickCount[i] != 0) {
 40692                           ;stkvar	_i @ sp[(-1)+0]
 40693  01CCE2  0EFF               	movlw	-1
 40694  01CCE4  50E3               	movf	plusw1,w,c
 40695  01CCE6  0D02               	mullw	2
 40696  01CCE8  0EBF               	movlw	low _tickCount
 40697  01CCEA  24F3               	addwf	243,w,c
 40698  01CCEC  6ED9               	movwf	fsr2l,c
 40699  01CCEE  0E01               	movlw	high _tickCount
 40700  01CCF0  20F4               	addwfc	prodh,w,c
 40701  01CCF2  6EDA               	movwf	fsr2h,c
 40702  01CCF4  50DE               	movf	postinc2,w,c
 40703  01CCF6  10DE               	iorwf	postinc2,w,c
 40704  01CCF8  B4D8               	btfsc	status,2,c
 40705  01CCFA  D00C               	goto	l11342
 40706                           
 40707                           ;mcc_generated_files/tmr6.c: 205:    tickCount[i]--;
 40708                           ;stkvar	_i @ sp[(-1)+0]
 40709  01CCFC  0EFF               	movlw	-1
 40710  01CCFE  50E3               	movf	plusw1,w,c
 40711  01CD00  0D02               	mullw	2
 40712  01CD02  0EBF               	movlw	low _tickCount
 40713  01CD04  24F3               	addwf	243,w,c
 40714  01CD06  6ED9               	movwf	fsr2l,c
 40715  01CD08  0E01               	movlw	high _tickCount
 40716  01CD0A  20F4               	addwfc	prodh,w,c
 40717  01CD0C  6EDA               	movwf	fsr2h,c
 40718  01CD0E  06DE               	decf	postinc2,f,c
 40719  01CD10  0E00               	movlw	0
 40720  01CD12  5ADD               	subwfb	postdec2,f,c
 40721  01CD14                     l11342:
 40722                           
 40723                           ;mcc_generated_files/tmr6.c: 207:  }
 40724                           ;stkvar	_i @ sp[(-1)+0]
 40725  01CD14  0EFF               	movlw	-1
 40726  01CD16  2AE3               	incf	plusw1,f,c
 40727                           
 40728                           ;stkvar	_i @ sp[(-1)+0]
 40729  01CD18  0EFF               	movlw	-1
 40730  01CD1A  006F FF8C  F001    	movff	plusw1,btemp
 40731  01CD20  0E0C               	movlw	12
 40732  01CD22  6401               	cpfsgt	btemp^0,c
 40733  01CD24  D7DE               	goto	l11338
 40734                           
 40735                           ; _TMR6_DefaultInterruptHandler: autosize = 1, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 40736  01CD26  52E5               	movf	postdec1,f,c
 40737  01CD28  0012               	return		;funcret
 40738  01CD2A                     __end_of_TMR6_DefaultInterruptHandler:
 40739                           	opt callstack 0
 40740                           
 40741 ;; *************** function _DMA1_DMASCNT_ISR *****************
 40742 ;; Defined at:
 40743 ;;		line 126 in file "mcc_generated_files/dma1.c"
 40744 ;; Parameters:    Size  Location     Type
 40745 ;;		None
 40746 ;; Auto vars:     Size  Location     Type
 40747 ;;		None
 40748 ;; Return value:  Size  Location     Type
 40749 ;;                  1    wreg      void 
 40750 ;; Registers used:
 40751 ;;		None
 40752 ;; Tracked objects:
 40753 ;;		On entry : 0/0
 40754 ;;		On exit  : 3F/0
 40755 ;;		Unchanged: 0/0
 40756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 40757 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40758 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40759 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40760 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40761 ;;Total ram usage:        0 bytes
 40762 ;; Hardware stack levels used:    1
 40763 ;; This function calls:
 40764 ;;		Nothing
 40765 ;; This function is called by:
 40766 ;;		Interrupt level 2
 40767 ;; This function uses a non-reentrant model
 40768 ;;
 40769                           
 40770                           	psect	text197
 40771  01DAF4                     __ptext197:
 40772                           	opt callstack 0
 40773  01DAF4                     _DMA1_DMASCNT_ISR:
 40774                           	opt callstack 4
 40775                           
 40776                           ;incstack = 0
 40777  01DAF4  EE14  F208         	lfsr	1,___inthi_sp
 40778                           
 40779                           ;mcc_generated_files/dma1.c: 128:  PIR2bits.DMA1SCNTIF = 0;
 40780  01DAF8  0139               	movlb	57	; () banked
 40781  01DAFA  91A2               	bcf	162,0,b	;volatile
 40782                           
 40783                           ;mcc_generated_files/dma1.c: 130:  spi_link.LCD_DATA = 0;
 40784  01DAFC  0100               	movlb	0	; () banked
 40785  01DAFE  9760               	bcf	_spi_link& (0+255),3,b	;volatile
 40786                           
 40787                           ; BSR set to: 0
 40788  01DB00  0011               	retfie		f
 40789  01DB02                     __end_of_DMA1_DMASCNT_ISR:
 40790                           	opt callstack 0
 40791                           
 40792 ;; *************** function _DMA1_DMADCNT_ISR *****************
 40793 ;; Defined at:
 40794 ;;		line 133 in file "mcc_generated_files/dma1.c"
 40795 ;; Parameters:    Size  Location     Type
 40796 ;;		None
 40797 ;; Auto vars:     Size  Location     Type
 40798 ;;		None
 40799 ;; Return value:  Size  Location     Type
 40800 ;;                  1    wreg      void 
 40801 ;; Registers used:
 40802 ;;		None
 40803 ;; Tracked objects:
 40804 ;;		On entry : 0/0
 40805 ;;		On exit  : 3F/39
 40806 ;;		Unchanged: 0/0
 40807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 40808 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40809 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40810 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40811 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40812 ;;Total ram usage:        0 bytes
 40813 ;; Hardware stack levels used:    1
 40814 ;; This function calls:
 40815 ;;		Nothing
 40816 ;; This function is called by:
 40817 ;;		Interrupt level 2
 40818 ;; This function uses a non-reentrant model
 40819 ;;
 40820                           
 40821                           	psect	text198
 40822  01DB18                     __ptext198:
 40823                           	opt callstack 0
 40824  01DB18                     _DMA1_DMADCNT_ISR:
 40825                           	opt callstack 4
 40826                           
 40827                           ; BSR set to: 0
 40828                           ;incstack = 0
 40829  01DB18  EE14  F208         	lfsr	1,___inthi_sp
 40830                           
 40831                           ;mcc_generated_files/dma1.c: 135:  PIR2bits.DMA1DCNTIF = 0;
 40832  01DB1C  0139               	movlb	57	; () banked
 40833  01DB1E  93A2               	bcf	162,1,b	;volatile
 40834                           
 40835                           ; BSR set to: 57
 40836  01DB20  0011               	retfie		f
 40837  01DB22                     __end_of_DMA1_DMADCNT_ISR:
 40838                           	opt callstack 0
 40839                           
 40840 ;; *************** function _DMA1_DMAA_ISR *****************
 40841 ;; Defined at:
 40842 ;;		line 143 in file "mcc_generated_files/dma1.c"
 40843 ;; Parameters:    Size  Location     Type
 40844 ;;		None
 40845 ;; Auto vars:     Size  Location     Type
 40846 ;;		None
 40847 ;; Return value:  Size  Location     Type
 40848 ;;                  1    wreg      void 
 40849 ;; Registers used:
 40850 ;;		None
 40851 ;; Tracked objects:
 40852 ;;		On entry : 0/0
 40853 ;;		On exit  : 3F/39
 40854 ;;		Unchanged: 0/0
 40855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 40856 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40857 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40858 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40859 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40860 ;;Total ram usage:        0 bytes
 40861 ;; Hardware stack levels used:    1
 40862 ;; This function calls:
 40863 ;;		Nothing
 40864 ;; This function is called by:
 40865 ;;		Interrupt level 2
 40866 ;; This function uses a non-reentrant model
 40867 ;;
 40868                           
 40869                           	psect	text199
 40870  01DB24                     __ptext199:
 40871                           	opt callstack 0
 40872  01DB24                     _DMA1_DMAA_ISR:
 40873                           	opt callstack 4
 40874                           
 40875                           ; BSR set to: 57
 40876                           ;incstack = 0
 40877  01DB24  EE14  F208         	lfsr	1,___inthi_sp
 40878                           
 40879                           ;mcc_generated_files/dma1.c: 146:  PIR2bits.DMA1AIF = 0;
 40880  01DB28  0139               	movlb	57	; () banked
 40881  01DB2A  97A2               	bcf	162,3,b	;volatile
 40882                           
 40883                           ; BSR set to: 57
 40884  01DB2C  0011               	retfie		f
 40885  01DB2E                     __end_of_DMA1_DMAA_ISR:
 40886                           	opt callstack 0
 40887                           
 40888 ;; *************** function _DMA1_DMAOR_ISR *****************
 40889 ;; Defined at:
 40890 ;;		line 154 in file "mcc_generated_files/dma1.c"
 40891 ;; Parameters:    Size  Location     Type
 40892 ;;		None
 40893 ;; Auto vars:     Size  Location     Type
 40894 ;;		None
 40895 ;; Return value:  Size  Location     Type
 40896 ;;                  1    wreg      void 
 40897 ;; Registers used:
 40898 ;;		None
 40899 ;; Tracked objects:
 40900 ;;		On entry : 0/0
 40901 ;;		On exit  : 3F/39
 40902 ;;		Unchanged: 0/0
 40903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 40904 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40905 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40906 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40907 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40908 ;;Total ram usage:        0 bytes
 40909 ;; Hardware stack levels used:    1
 40910 ;; This function calls:
 40911 ;;		Nothing
 40912 ;; This function is called by:
 40913 ;;		Interrupt level 2
 40914 ;; This function uses a non-reentrant model
 40915 ;;
 40916                           
 40917                           	psect	text200
 40918  01DB30                     __ptext200:
 40919                           	opt callstack 0
 40920  01DB30                     _DMA1_DMAOR_ISR:
 40921                           	opt callstack 4
 40922                           
 40923                           ; BSR set to: 57
 40924                           ;incstack = 0
 40925  01DB30  EE14  F208         	lfsr	1,___inthi_sp
 40926                           
 40927                           ;mcc_generated_files/dma1.c: 157:  PIR2bits.DMA1ORIF = 0;
 40928  01DB34  0139               	movlb	57	; () banked
 40929  01DB36  95A2               	bcf	162,2,b	;volatile
 40930                           
 40931                           ; BSR set to: 57
 40932  01DB38  0011               	retfie		f
 40933  01DB3A                     __end_of_DMA1_DMAOR_ISR:
 40934                           	opt callstack 0
 40935                           
 40936                           ;
 40937                           ; Interrupt Vector Table @ 0x8
 40938                           ;
 40939                           
 40940                           	psect	ivt0x8
 40941  000008                     __pivt0x8:
 40942                           	opt callstack 0
 40943  000008                     ivt0x8_base:
 40944                           	opt callstack 0
 40945                           
 40946                           ; Vector 0 : SWINT
 40947  000008  76E3               	dw	_Default_ISR shr (0+2)
 40948                           
 40949                           ; Vector 1 : HLVD
 40950  00000A  76E3               	dw	_Default_ISR shr (0+2)
 40951                           
 40952                           ; Vector 2 : OSF
 40953  00000C  76E3               	dw	_Default_ISR shr (0+2)
 40954                           
 40955                           ; Vector 3 : CSW
 40956  00000E  76E3               	dw	_Default_ISR shr (0+2)
 40957                           
 40958                           ; Vector 4 : NVM
 40959  000010  76E3               	dw	_Default_ISR shr (0+2)
 40960                           
 40961                           ; Vector 5 : SCAN
 40962  000012  76E3               	dw	_Default_ISR shr (0+2)
 40963                           
 40964                           ; Vector 6 : CRC
 40965  000014  76E3               	dw	_Default_ISR shr (0+2)
 40966                           
 40967                           ; Vector 7 : IOC
 40968  000016  76E3               	dw	_Default_ISR shr (0+2)
 40969                           
 40970                           ; Vector 8 : INT0
 40971  000018  76B9               	dw	_INT0_ISR shr (0+2)
 40972                           
 40973                           ; Vector 9 : ZCD
 40974  00001A  76E3               	dw	_Default_ISR shr (0+2)
 40975                           
 40976                           ; Vector 10 : AD
 40977  00001C  7526               	dw	_ADCC_ISR shr (0+2)
 40978                           
 40979                           ; Vector 11 : ADT
 40980  00001E  71C7               	dw	_ADCC_ThresholdISR shr (0+2)
 40981                           
 40982                           ; Vector 12 : CMP1
 40983  000020  76E3               	dw	_Default_ISR shr (0+2)
 40984                           
 40985                           ; Vector 13 : SMT1
 40986  000022  76E3               	dw	_Default_ISR shr (0+2)
 40987                           
 40988                           ; Vector 14 : SMT1PRA
 40989  000024  76E3               	dw	_Default_ISR shr (0+2)
 40990                           
 40991                           ; Vector 15 : SMT1PRW
 40992  000026  76E3               	dw	_Default_ISR shr (0+2)
 40993                           
 40994                           ; Vector 16 : DMA1SCNT
 40995  000028  76BD               	dw	_DMA1_DMASCNT_ISR shr (0+2)
 40996                           
 40997                           ; Vector 17 : DMA1DCNT
 40998  00002A  76C6               	dw	_DMA1_DMADCNT_ISR shr (0+2)
 40999                           
 41000                           ; Vector 18 : DMA1OR
 41001  00002C  76CC               	dw	_DMA1_DMAOR_ISR shr (0+2)
 41002                           
 41003                           ; Vector 19 : DMA1A
 41004  00002E  76C9               	dw	_DMA1_DMAA_ISR shr (0+2)
 41005                           
 41006                           ; Vector 20 : SPI1RX
 41007  000030  76E3               	dw	_Default_ISR shr (0+2)
 41008                           
 41009                           ; Vector 21 : SPI1TX
 41010  000032  76E3               	dw	_Default_ISR shr (0+2)
 41011                           
 41012                           ; Vector 22 : SPI1
 41013  000034  76E3               	dw	_Default_ISR shr (0+2)
 41014                           
 41015                           ; Vector 23 : I2C1RX
 41016  000036  76E3               	dw	_Default_ISR shr (0+2)
 41017                           
 41018                           ; Vector 24 : I2C1TX
 41019  000038  76E3               	dw	_Default_ISR shr (0+2)
 41020                           
 41021                           ; Vector 25 : I2C1
 41022  00003A  76E3               	dw	_Default_ISR shr (0+2)
 41023                           
 41024                           ; Vector 26 : I2C1E
 41025  00003C  76E3               	dw	_Default_ISR shr (0+2)
 41026                           
 41027                           ; Vector 27 : U1RX
 41028  00003E  75BF               	dw	_UART1_rx_vect_isr shr (0+2)
 41029                           
 41030                           ; Vector 28 : U1TX
 41031  000040  76E3               	dw	_Default_ISR shr (0+2)
 41032                           
 41033                           ; Vector 29 : U1E
 41034  000042  76E3               	dw	_Default_ISR shr (0+2)
 41035                           
 41036                           ; Vector 30 : U1
 41037  000044  76E3               	dw	_Default_ISR shr (0+2)
 41038                           
 41039                           ; Vector 31 : TMR0
 41040  000046  76E3               	dw	_Default_ISR shr (0+2)
 41041                           
 41042                           ; Vector 32 : TMR1
 41043  000048  76E3               	dw	_Default_ISR shr (0+2)
 41044                           
 41045                           ; Vector 33 : TMR1G
 41046  00004A  76E3               	dw	_Default_ISR shr (0+2)
 41047                           
 41048                           ; Vector 34 : TMR2
 41049  00004C  76E3               	dw	_Default_ISR shr (0+2)
 41050                           
 41051                           ; Vector 35 : CCP1
 41052  00004E  76E3               	dw	_Default_ISR shr (0+2)
 41053                           
 41054                           ; Vector 36 : Undefined
 41055  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 41056                           
 41057                           ; Vector 37 : NCO1
 41058  000052  76E3               	dw	_Default_ISR shr (0+2)
 41059                           
 41060                           ; Vector 38 : CWG1
 41061  000054  76E3               	dw	_Default_ISR shr (0+2)
 41062                           
 41063                           ; Vector 39 : CLC1
 41064  000056  76E3               	dw	_Default_ISR shr (0+2)
 41065                           
 41066                           ; Vector 40 : INT1
 41067  000058  744A               	dw	_INT1_ISR shr (0+2)
 41068                           
 41069                           ; Vector 41 : CMP2
 41070  00005A  76E3               	dw	_Default_ISR shr (0+2)
 41071                           
 41072                           ; Vector 42 : DMA2SCNT
 41073  00005C  76E3               	dw	_Default_ISR shr (0+2)
 41074                           
 41075                           ; Vector 43 : DMA2DCNT
 41076  00005E  76E3               	dw	_Default_ISR shr (0+2)
 41077                           
 41078                           ; Vector 44 : DMA2OR
 41079  000060  76E3               	dw	_Default_ISR shr (0+2)
 41080                           
 41081                           ; Vector 45 : DMA2A
 41082  000062  76E3               	dw	_Default_ISR shr (0+2)
 41083                           
 41084                           ; Vector 46 : I2C2RX
 41085  000064  76E3               	dw	_Default_ISR shr (0+2)
 41086                           
 41087                           ; Vector 47 : I2C2TX
 41088  000066  76E3               	dw	_Default_ISR shr (0+2)
 41089                           
 41090                           ; Vector 48 : I2C2
 41091  000068  76E3               	dw	_Default_ISR shr (0+2)
 41092                           
 41093                           ; Vector 49 : I2C2E
 41094  00006A  76E3               	dw	_Default_ISR shr (0+2)
 41095                           
 41096                           ; Vector 50 : U2RX
 41097  00006C  75D3               	dw	_UART2_rx_vect_isr shr (0+2)
 41098                           
 41099                           ; Vector 51 : U2TX
 41100  00006E  75C9               	dw	_UART2_tx_vect_isr shr (0+2)
 41101                           
 41102                           ; Vector 52 : U2E
 41103  000070  76E3               	dw	_Default_ISR shr (0+2)
 41104                           
 41105                           ; Vector 53 : U2
 41106  000072  76E3               	dw	_Default_ISR shr (0+2)
 41107                           
 41108                           ; Vector 54 : TMR3
 41109  000074  6856               	dw	_TMR3_ISR shr (0+2)
 41110                           
 41111                           ; Vector 55 : TMR3G
 41112  000076  76E3               	dw	_Default_ISR shr (0+2)
 41113                           
 41114                           ; Vector 56 : TMR4
 41115  000078  76E3               	dw	_Default_ISR shr (0+2)
 41116                           
 41117                           ; Vector 57 : CCP2
 41118  00007A  76E3               	dw	_Default_ISR shr (0+2)
 41119                           
 41120                           ; Vector 58 : Undefined
 41121  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 41122                           
 41123                           ; Vector 59 : CWG2
 41124  00007E  76E3               	dw	_Default_ISR shr (0+2)
 41125                           
 41126                           ; Vector 60 : CLC2
 41127  000080  76E3               	dw	_Default_ISR shr (0+2)
 41128                           
 41129                           ; Vector 61 : INT2
 41130  000082  76E3               	dw	_Default_ISR shr (0+2)
 41131                           
 41132                           ; Vector 62 : Undefined
 41133  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 41134                           
 41135                           ; Vector 63 : Undefined
 41136  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 41137                           
 41138                           ; Vector 64 : Undefined
 41139  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 41140                           
 41141                           ; Vector 65 : Undefined
 41142  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 41143                           
 41144                           ; Vector 66 : Undefined
 41145  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 41146                           
 41147                           ; Vector 67 : Undefined
 41148  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 41149                           
 41150                           ; Vector 68 : Undefined
 41151  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 41152                           
 41153                           ; Vector 69 : Undefined
 41154  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 41155                           
 41156                           ; Vector 70 : TMR5
 41157  000094  6CE5               	dw	_TMR5_ISR shr (0+2)
 41158                           
 41159                           ; Vector 71 : TMR5G
 41160  000096  76E3               	dw	_Default_ISR shr (0+2)
 41161                           
 41162                           ; Vector 72 : TMR6
 41163  000098  7669               	dw	_TMR6_ISR shr (0+2)
 41164                           
 41165                           ; Vector 73 : CCP3
 41166  00009A  76E3               	dw	_Default_ISR shr (0+2)
 41167                           
 41168                           ; Vector 74 : CWG3
 41169  00009C  76E3               	dw	_Default_ISR shr (0+2)
 41170                           
 41171                           ; Vector 75 : CLC3
 41172  00009E  76E3               	dw	_Default_ISR shr (0+2)
 41173                           
 41174                           ; Vector 76 : Undefined
 41175  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 41176                           
 41177                           ; Vector 77 : Undefined
 41178  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 41179                           
 41180                           ; Vector 78 : Undefined
 41181  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 41182                           
 41183                           ; Vector 79 : Undefined
 41184  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 41185                           
 41186                           ; Vector 80 : CCP4
 41187  0000A8  76E3               	dw	_Default_ISR shr (0+2)
 41188                           
 41189                           ; Vector 81 : CLC4
 41190  0000AA  76E3               	dw	_Default_ISR shr (0+2)
 41191  0000AC                     ivt0x8_undefint:
 41192                           	opt callstack 0
 41193  0000AC  00FF               	reset	
 41194                           
 41195                           	psect	text201
 41196  000000                     __ptext201:
 41197                           	opt callstack 0
 41198                           
 41199                           	psect	rparam
 41200  0000                     
 41201                           	psect	temp
 41202  000001                     btemp:
 41203                           	opt callstack 0
 41204  000001                     	ds	32
 41205  0000                     wtemp0	set	btemp
 41206  0000                     wtemp1	set	btemp+2
 41207  0000                     wtemp2	set	btemp+4
 41208  0000                     wtemp3	set	btemp+6
 41209  0000                     wtemp4	set	btemp+8
 41210  0000                     wtemp5	set	btemp+10
 41211  0000                     wtemp8	set	btemp+1
 41212  0000                     ttemp0	set	btemp
 41213  0000                     ttemp1	set	btemp+3
 41214  0000                     ttemp2	set	btemp+6
 41215  0000                     ttemp3	set	btemp+9
 41216  0000                     ttemp5	set	btemp+1
 41217  0000                     ttemp6	set	btemp+4
 41218  0000                     ttemp7	set	btemp+8
 41219  0000                     ltemp0	set	btemp
 41220  0000                     ltemp1	set	btemp+4
 41221  0000                     ltemp2	set	btemp+8
 41222  0000                     lltemp0	set	btemp
 41223  0000                     lltemp1	set	btemp+8
 41224  0000                     lltemp2	set	btemp+16
 41225  0000                     lltemp3	set	btemp+24
 41226                           tosu	equ	0x3FFF
 41227                           tosh	equ	0x3FFE
 41228                           tosl	equ	0x3FFD
 41229                           stkptr	equ	0x3FFC
 41230                           pclatu	equ	0x3FFB
 41231                           pclath	equ	0x3FFA
 41232                           pcl	equ	0x3FF9
 41233                           tblptru	equ	0x3FF8
 41234                           tblptrh	equ	0x3FF7
 41235                           tblptrl	equ	0x3FF6
 41236                           tablat	equ	0x3FF5
 41237                           prodh	equ	0x3FF4
 41238                           prodl	equ	0x3FF3
 41239                           indf0	equ	0x3FEF
 41240                           postinc0	equ	0x3FEE
 41241                           postdec0	equ	0x3FED
 41242                           preinc0	equ	0x3FEC
 41243                           plusw0	equ	0x3FEB
 41244                           fsr0h	equ	0x3FEA
 41245                           fsr0l	equ	0x3FE9
 41246                           wreg	equ	0x3FE8
 41247                           indf1	equ	0x3FE7
 41248                           postinc1	equ	0x3FE6
 41249                           postdec1	equ	0x3FE5
 41250                           preinc1	equ	0x3FE4
 41251                           plusw1	equ	0x3FE3
 41252                           fsr1h	equ	0x3FE2
 41253                           fsr1l	equ	0x3FE1
 41254                           bsr	equ	0x3FE0
 41255                           indf2	equ	0x3FDF
 41256                           postinc2	equ	0x3FDE
 41257                           postdec2	equ	0x3FDD
 41258                           preinc2	equ	0x3FDC
 41259                           plusw2	equ	0x3FDB
 41260                           fsr2h	equ	0x3FDA
 41261                           fsr2l	equ	0x3FD9
 41262                           status	equ	0x3FD8


Data Sizes:
    Strings     1430
    Constant    492
    Data        1162
    BSS         1451
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63     25      39
    BANK0           160     25     154
    BANK1           256      0     225
    BANK2           256      0     256
    BANK3           256      0     231
    BANK4           256      0     210
    BANK5           256      0     255
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    s	PTR const unsigned char  size(2) Largest target is 1
		 -> STR_130(CODE[1]), STR_92(CODE[1]), 

    _r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_127(CODE[3]), STR_123(CODE[3]), STR_118(CODE[3]), STR_113(CODE[3]), 
		 -> STR_108(CODE[3]), STR_104(CODE[3]), 

    r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_127(CODE[3]), STR_123(CODE[3]), STR_118(CODE[3]), STR_113(CODE[3]), 
		 -> STR_108(CODE[3]), STR_104(CODE[3]), 

    _l	PTR const unsigned char  size(2) Largest target is 127
		 -> ct(STACK[3]), STR_93(CODE[127]), STR_91(CODE[3]), STR_90(CODE[3]), 
		 -> STR_89(CODE[19]), STR_88(CODE[19]), STR_87(CODE[19]), STR_86(CODE[19]), 
		 -> STR_85(CODE[19]), STR_84(CODE[19]), STR_83(CODE[24]), STR_82(CODE[15]), 
		 -> STR_81(CODE[15]), STR_80(CODE[15]), STR_79(CODE[10]), STR_78(CODE[10]), 
		 -> STR_77(CODE[19]), STR_76(CODE[19]), STR_73(CODE[3]), STR_72(CODE[3]), 
		 -> STR_71(CODE[21]), STR_70(CODE[21]), STR_69(CODE[21]), STR_68(CODE[21]), 
		 -> STR_67(CODE[21]), STR_66(CODE[21]), STR_65(CODE[21]), STR_64(CODE[21]), 
		 -> STR_63(CODE[21]), STR_62(CODE[18]), STR_61(CODE[21]), STR_60(CODE[21]), 
		 -> STR_59(CODE[21]), STR_58(CODE[21]), STR_57(CODE[21]), STR_56(CODE[21]), 
		 -> STR_55(CODE[21]), STR_54(CODE[21]), STR_53(CODE[21]), STR_52(CODE[21]), 
		 -> STR_51(CODE[21]), STR_50(CODE[21]), STR_49(CODE[20]), STR_48(CODE[21]), 
		 -> STR_47(CODE[21]), STR_46(CODE[21]), STR_45(CODE[22]), STR_44(CODE[22]), 
		 -> STR_43(CODE[22]), STR_42(CODE[23]), STR_41(CODE[23]), STR_40(CODE[23]), 
		 -> STR_39(CODE[29]), STR_38(CODE[23]), STR_37(CODE[23]), STR_36(CODE[22]), 
		 -> STR_35(CODE[22]), STR_34(CODE[22]), STR_33(CODE[22]), STR_32(CODE[22]), 
		 -> STR_31(CODE[22]), STR_30(CODE[22]), STR_29(CODE[22]), STR_28(CODE[22]), 
		 -> STR_27(CODE[22]), STR_26(CODE[22]), STR_25(CODE[22]), STR_24(CODE[17]), 
		 -> STR_23(CODE[16]), STR_22(CODE[16]), STR_21(CODE[26]), STR_20(CODE[26]), 
		 -> STR_19(CODE[22]), STR_18(CODE[21]), STR_17(CODE[21]), STR_16(CODE[21]), 
		 -> STR_15(CODE[21]), STR_14(CODE[22]), STR_13(CODE[22]), STR_12(CODE[22]), 
		 -> STR_11(CODE[26]), STR_10(CODE[21]), STR_9(CODE[21]), STR_8(CODE[21]), 
		 -> STR_7(CODE[21]), STR_6(CODE[21]), STR_5(CODE[21]), STR_4(CODE[21]), 
		 -> STR_2(CODE[21]), STR_1(CODE[21]), 

    l	PTR const unsigned char  size(2) Largest target is 127
		 -> ct(STACK[3]), STR_93(CODE[127]), STR_91(CODE[3]), STR_90(CODE[3]), 
		 -> STR_89(CODE[19]), STR_88(CODE[19]), STR_87(CODE[19]), STR_86(CODE[19]), 
		 -> STR_85(CODE[19]), STR_84(CODE[19]), STR_83(CODE[24]), STR_82(CODE[15]), 
		 -> STR_81(CODE[15]), STR_80(CODE[15]), STR_79(CODE[10]), STR_78(CODE[10]), 
		 -> STR_77(CODE[19]), STR_76(CODE[19]), STR_73(CODE[3]), STR_72(CODE[3]), 
		 -> STR_71(CODE[21]), STR_70(CODE[21]), STR_69(CODE[21]), STR_68(CODE[21]), 
		 -> STR_67(CODE[21]), STR_66(CODE[21]), STR_65(CODE[21]), STR_64(CODE[21]), 
		 -> STR_63(CODE[21]), STR_62(CODE[18]), STR_61(CODE[21]), STR_60(CODE[21]), 
		 -> STR_59(CODE[21]), STR_58(CODE[21]), STR_57(CODE[21]), STR_56(CODE[21]), 
		 -> STR_55(CODE[21]), STR_54(CODE[21]), STR_53(CODE[21]), STR_52(CODE[21]), 
		 -> STR_51(CODE[21]), STR_50(CODE[21]), STR_49(CODE[20]), STR_48(CODE[21]), 
		 -> STR_47(CODE[21]), STR_46(CODE[21]), STR_45(CODE[22]), STR_44(CODE[22]), 
		 -> STR_43(CODE[22]), STR_42(CODE[23]), STR_41(CODE[23]), STR_40(CODE[23]), 
		 -> STR_39(CODE[29]), STR_38(CODE[23]), STR_37(CODE[23]), STR_36(CODE[22]), 
		 -> STR_35(CODE[22]), STR_34(CODE[22]), STR_33(CODE[22]), STR_32(CODE[22]), 
		 -> STR_31(CODE[22]), STR_30(CODE[22]), STR_29(CODE[22]), STR_28(CODE[22]), 
		 -> STR_27(CODE[22]), STR_26(CODE[22]), STR_25(CODE[22]), STR_24(CODE[17]), 
		 -> STR_23(CODE[16]), STR_22(CODE[16]), STR_21(CODE[26]), STR_20(CODE[26]), 
		 -> STR_19(CODE[22]), STR_18(CODE[21]), STR_17(CODE[21]), STR_16(CODE[21]), 
		 -> STR_15(CODE[21]), STR_14(CODE[22]), STR_13(CODE[22]), STR_12(CODE[22]), 
		 -> STR_11(CODE[26]), STR_10(CODE[21]), STR_9(CODE[21]), STR_8(CODE[21]), 
		 -> STR_7(CODE[21]), STR_6(CODE[21]), STR_5(CODE[21]), STR_4(CODE[21]), 
		 -> STR_2(CODE[21]), STR_1(CODE[21]), 

    s	PTR const unsigned char  size(2) Largest target is 512
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK3[80]), 
		 -> spin(CODE[120]), STR_75(CODE[9]), STR_74(CODE[12]), D.lcd(BIGRAM[480]), 
		 -> D(BIGRAM[482]), T(CODE[144]), port_data(BIGRAM[512]), cp(STACK[4]), 
		 -> cb(STACK[4]), STR_3(CODE[5]), V(BANK2[192]), 

    a	PTR const unsigned char  size(2) Largest target is 512
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK3[80]), 
		 -> spin(CODE[120]), STR_75(CODE[9]), STR_74(CODE[12]), D.lcd(BIGRAM[480]), 
		 -> D(BIGRAM[482]), T(CODE[144]), port_data(BIGRAM[512]), cp(STACK[4]), 
		 -> cb(STACK[4]), STR_3(CODE[5]), V(BANK2[192]), 

    dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_99(CODE[4]), STR_98(CODE[4]), STR_95(CODE[4]), STR_94(CODE[4]), 
		 -> dbuf(BANK3[80]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_99(CODE[4]), STR_98(CODE[4]), STR_95(CODE[4]), STR_94(CODE[4]), 
		 -> dbuf(BANK3[80]), 

    fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_73(CODE[3]), STR_72(CODE[3]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    fmt	PTR const unsigned char  size(2) Largest target is 127
		 -> STR_93(CODE[127]), STR_91(CODE[3]), STR_90(CODE[3]), STR_89(CODE[19]), 
		 -> STR_88(CODE[19]), STR_87(CODE[19]), STR_86(CODE[19]), STR_85(CODE[19]), 
		 -> STR_84(CODE[19]), STR_83(CODE[24]), STR_82(CODE[15]), STR_81(CODE[15]), 
		 -> STR_80(CODE[15]), STR_79(CODE[10]), STR_78(CODE[10]), STR_77(CODE[19]), 
		 -> STR_76(CODE[19]), STR_71(CODE[21]), STR_70(CODE[21]), STR_69(CODE[21]), 
		 -> STR_68(CODE[21]), STR_67(CODE[21]), STR_66(CODE[21]), STR_65(CODE[21]), 
		 -> STR_64(CODE[21]), STR_63(CODE[21]), STR_62(CODE[18]), STR_61(CODE[21]), 
		 -> STR_60(CODE[21]), STR_59(CODE[21]), STR_58(CODE[21]), STR_57(CODE[21]), 
		 -> STR_56(CODE[21]), STR_55(CODE[21]), STR_54(CODE[21]), STR_53(CODE[21]), 
		 -> STR_52(CODE[21]), STR_51(CODE[21]), STR_50(CODE[21]), STR_49(CODE[20]), 
		 -> STR_48(CODE[21]), STR_47(CODE[21]), STR_46(CODE[21]), STR_45(CODE[22]), 
		 -> STR_44(CODE[22]), STR_43(CODE[22]), STR_42(CODE[23]), STR_41(CODE[23]), 
		 -> STR_40(CODE[23]), STR_39(CODE[29]), STR_38(CODE[23]), STR_37(CODE[23]), 
		 -> STR_36(CODE[22]), STR_35(CODE[22]), STR_34(CODE[22]), STR_33(CODE[22]), 
		 -> STR_32(CODE[22]), STR_31(CODE[22]), STR_30(CODE[22]), STR_29(CODE[22]), 
		 -> STR_28(CODE[22]), STR_27(CODE[22]), STR_26(CODE[22]), STR_25(CODE[22]), 
		 -> STR_24(CODE[17]), STR_23(CODE[16]), STR_22(CODE[16]), STR_21(CODE[26]), 
		 -> STR_20(CODE[26]), STR_19(CODE[22]), STR_18(CODE[21]), STR_17(CODE[21]), 
		 -> STR_16(CODE[21]), STR_15(CODE[21]), STR_14(CODE[22]), STR_13(CODE[22]), 
		 -> STR_12(CODE[22]), STR_11(CODE[26]), STR_10(CODE[21]), STR_9(CODE[21]), 
		 -> STR_8(CODE[21]), STR_7(CODE[21]), STR_6(CODE[21]), STR_5(CODE[21]), 
		 -> STR_4(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 

    s	PTR unsigned char  size(2) Largest target is 512
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK2[192]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK2[192]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    S7162_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK2[192]), 

    fp.buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK2[192]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    dest	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK3[67]), 

    s	PTR unsigned char  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK3[67]), 

    s	PTR const unsigned char  size(2) Largest target is 127
		 -> STR_93(CODE[127]), STR_91(CODE[3]), STR_90(CODE[3]), STR_89(CODE[19]), 
		 -> STR_88(CODE[19]), STR_87(CODE[19]), STR_86(CODE[19]), STR_85(CODE[19]), 
		 -> STR_84(CODE[19]), STR_83(CODE[24]), STR_82(CODE[15]), STR_81(CODE[15]), 
		 -> STR_80(CODE[15]), STR_79(CODE[10]), STR_78(CODE[10]), STR_77(CODE[19]), 
		 -> STR_76(CODE[19]), STR_73(CODE[3]), STR_72(CODE[3]), STR_71(CODE[21]), 
		 -> STR_70(CODE[21]), STR_69(CODE[21]), STR_68(CODE[21]), STR_67(CODE[21]), 
		 -> STR_66(CODE[21]), STR_65(CODE[21]), STR_64(CODE[21]), STR_63(CODE[21]), 
		 -> STR_62(CODE[18]), STR_61(CODE[21]), STR_60(CODE[21]), STR_59(CODE[21]), 
		 -> STR_58(CODE[21]), STR_57(CODE[21]), STR_56(CODE[21]), STR_55(CODE[21]), 
		 -> STR_54(CODE[21]), STR_53(CODE[21]), STR_52(CODE[21]), STR_51(CODE[21]), 
		 -> STR_50(CODE[21]), STR_49(CODE[20]), STR_48(CODE[21]), STR_47(CODE[21]), 
		 -> STR_46(CODE[21]), STR_45(CODE[22]), STR_44(CODE[22]), STR_43(CODE[22]), 
		 -> STR_42(CODE[23]), STR_41(CODE[23]), STR_40(CODE[23]), STR_39(CODE[29]), 
		 -> STR_38(CODE[23]), STR_37(CODE[23]), STR_36(CODE[22]), STR_35(CODE[22]), 
		 -> STR_34(CODE[22]), STR_33(CODE[22]), STR_32(CODE[22]), STR_31(CODE[22]), 
		 -> STR_30(CODE[22]), STR_29(CODE[22]), STR_28(CODE[22]), STR_27(CODE[22]), 
		 -> STR_26(CODE[22]), STR_25(CODE[22]), STR_24(CODE[17]), STR_23(CODE[16]), 
		 -> STR_22(CODE[16]), STR_21(CODE[26]), STR_20(CODE[26]), STR_19(CODE[22]), 
		 -> STR_18(CODE[21]), STR_17(CODE[21]), STR_16(CODE[21]), STR_15(CODE[21]), 
		 -> STR_14(CODE[22]), STR_13(CODE[22]), STR_12(CODE[22]), STR_11(CODE[26]), 
		 -> STR_10(CODE[21]), STR_9(CODE[21]), STR_8(CODE[21]), STR_7(CODE[21]), 
		 -> STR_6(CODE[21]), STR_5(CODE[21]), STR_4(CODE[21]), STR_2(CODE[21]), 
		 -> STR_1(CODE[21]), 

    f1p	PTR  size(2) Largest target is 299
		 -> C(BIGRAM[299]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fmt	PTR const unsigned char  size(2) Largest target is 127
		 -> STR_93(CODE[127]), STR_91(CODE[3]), STR_90(CODE[3]), STR_89(CODE[19]), 
		 -> STR_88(CODE[19]), STR_87(CODE[19]), STR_86(CODE[19]), STR_85(CODE[19]), 
		 -> STR_84(CODE[19]), STR_83(CODE[24]), STR_82(CODE[15]), STR_81(CODE[15]), 
		 -> STR_80(CODE[15]), STR_79(CODE[10]), STR_78(CODE[10]), STR_77(CODE[19]), 
		 -> STR_76(CODE[19]), STR_73(CODE[3]), STR_72(CODE[3]), STR_71(CODE[21]), 
		 -> STR_70(CODE[21]), STR_69(CODE[21]), STR_68(CODE[21]), STR_67(CODE[21]), 
		 -> STR_66(CODE[21]), STR_65(CODE[21]), STR_64(CODE[21]), STR_63(CODE[21]), 
		 -> STR_62(CODE[18]), STR_61(CODE[21]), STR_60(CODE[21]), STR_59(CODE[21]), 
		 -> STR_58(CODE[21]), STR_57(CODE[21]), STR_56(CODE[21]), STR_55(CODE[21]), 
		 -> STR_54(CODE[21]), STR_53(CODE[21]), STR_52(CODE[21]), STR_51(CODE[21]), 
		 -> STR_50(CODE[21]), STR_49(CODE[20]), STR_48(CODE[21]), STR_47(CODE[21]), 
		 -> STR_46(CODE[21]), STR_45(CODE[22]), STR_44(CODE[22]), STR_43(CODE[22]), 
		 -> STR_42(CODE[23]), STR_41(CODE[23]), STR_40(CODE[23]), STR_39(CODE[29]), 
		 -> STR_38(CODE[23]), STR_37(CODE[23]), STR_36(CODE[22]), STR_35(CODE[22]), 
		 -> STR_34(CODE[22]), STR_33(CODE[22]), STR_32(CODE[22]), STR_31(CODE[22]), 
		 -> STR_30(CODE[22]), STR_29(CODE[22]), STR_28(CODE[22]), STR_27(CODE[22]), 
		 -> STR_26(CODE[22]), STR_25(CODE[22]), STR_24(CODE[17]), STR_23(CODE[16]), 
		 -> STR_22(CODE[16]), STR_21(CODE[26]), STR_20(CODE[26]), STR_19(CODE[22]), 
		 -> STR_18(CODE[21]), STR_17(CODE[21]), STR_16(CODE[21]), STR_15(CODE[21]), 
		 -> STR_14(CODE[22]), STR_13(CODE[22]), STR_12(CODE[22]), STR_11(CODE[26]), 
		 -> STR_10(CODE[21]), STR_9(CODE[21]), STR_8(CODE[21]), STR_7(CODE[21]), 
		 -> STR_6(CODE[21]), STR_5(CODE[21]), STR_4(CODE[21]), STR_2(CODE[21]), 
		 -> STR_1(CODE[21]), 

    cfmt	PTR unsigned char  size(2) Largest target is 127
		 -> STR_93(CODE[127]), STR_91(CODE[3]), STR_90(CODE[3]), STR_89(CODE[19]), 
		 -> STR_88(CODE[19]), STR_87(CODE[19]), STR_86(CODE[19]), STR_85(CODE[19]), 
		 -> STR_84(CODE[19]), STR_83(CODE[24]), STR_82(CODE[15]), STR_81(CODE[15]), 
		 -> STR_80(CODE[15]), STR_79(CODE[10]), STR_78(CODE[10]), STR_77(CODE[19]), 
		 -> STR_76(CODE[19]), STR_73(CODE[3]), STR_72(CODE[3]), STR_71(CODE[21]), 
		 -> STR_70(CODE[21]), STR_69(CODE[21]), STR_68(CODE[21]), STR_67(CODE[21]), 
		 -> STR_66(CODE[21]), STR_65(CODE[21]), STR_64(CODE[21]), STR_63(CODE[21]), 
		 -> STR_62(CODE[18]), STR_61(CODE[21]), STR_60(CODE[21]), STR_59(CODE[21]), 
		 -> STR_58(CODE[21]), STR_57(CODE[21]), STR_56(CODE[21]), STR_55(CODE[21]), 
		 -> STR_54(CODE[21]), STR_53(CODE[21]), STR_52(CODE[21]), STR_51(CODE[21]), 
		 -> STR_50(CODE[21]), STR_49(CODE[20]), STR_48(CODE[21]), STR_47(CODE[21]), 
		 -> STR_46(CODE[21]), STR_45(CODE[22]), STR_44(CODE[22]), STR_43(CODE[22]), 
		 -> STR_42(CODE[23]), STR_41(CODE[23]), STR_40(CODE[23]), STR_39(CODE[29]), 
		 -> STR_38(CODE[23]), STR_37(CODE[23]), STR_36(CODE[22]), STR_35(CODE[22]), 
		 -> STR_34(CODE[22]), STR_33(CODE[22]), STR_32(CODE[22]), STR_31(CODE[22]), 
		 -> STR_30(CODE[22]), STR_29(CODE[22]), STR_28(CODE[22]), STR_27(CODE[22]), 
		 -> STR_26(CODE[22]), STR_25(CODE[22]), STR_24(CODE[17]), STR_23(CODE[16]), 
		 -> STR_22(CODE[16]), STR_21(CODE[26]), STR_20(CODE[26]), STR_19(CODE[22]), 
		 -> STR_18(CODE[21]), STR_17(CODE[21]), STR_16(CODE[21]), STR_15(CODE[21]), 
		 -> STR_14(CODE[22]), STR_13(CODE[22]), STR_12(CODE[22]), STR_11(CODE[26]), 
		 -> STR_10(CODE[21]), STR_9(CODE[21]), STR_8(CODE[21]), STR_7(CODE[21]), 
		 -> STR_6(CODE[21]), STR_5(CODE[21]), STR_4(CODE[21]), STR_2(CODE[21]), 
		 -> STR_1(CODE[21]), 

    cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_75(CODE[9]), STR_74(CODE[12]), 
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), T(CODE[144]), cp(STACK[4]), 
		 -> cb(STACK[4]), STR_3(CODE[5]), V(BANK2[192]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> cfmt(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_75(CODE[9]), STR_74(CODE[12]), 
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), T(CODE[144]), cp(STACK[4]), 
		 -> cb(STACK[4]), STR_3(CODE[5]), V(BANK2[192]), 

    cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), STR_75(CODE[9]), 
		 -> STR_74(CODE[12]), D.lcd(BIGRAM[480]), D(BIGRAM[482]), T(CODE[144]), 
		 -> cp(STACK[4]), cb(STACK[4]), STR_3(CODE[5]), V(BANK2[192]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    log_ptr	PTR unsigned char  size(2) Largest target is 512
		 -> port_data(BIGRAM[512]), 

    h	PTR struct H_data size(1) Largest target is 9
		 -> H(BANK0[9]), 

    h	PTR struct H_data size(1) Largest target is 9
		 -> H(BANK0[9]), 

    h	PTR struct H_data size(1) Largest target is 9
		 -> H(BANK0[9]), 

    sp__hid_input	PTR struct H_data size(1) Largest target is 9
		 -> H(BANK0[9]), 

    h	PTR struct H_data size(1) Largest target is 9
		 -> H(BANK0[9]), 

    S5566tm$__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    hist	PTR volatile struct hist_type size(2) Largest target is 299
		 -> C.hist(BIGRAM[85]), C(BIGRAM[299]), 

    r_cal_ptr	PTR unsigned char  size(2) Largest target is 143
		 -> R(BANK1[143]), 

    r_cal_ptr	PTR unsigned char  size(2) Largest target is 143
		 -> r_cal(BANK4[143]), 

    build_time	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_75(CODE[9]), 

    build_date	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_74(CODE[12]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    sp__memset	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK3[67]), 

    _this	PTR volatile struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK3[67]), 

    sp__port_data_dma_ptr	PTR unsigned char  size(2) Largest target is 512
		 -> port_data(BIGRAM[512]), 

    strPtr	PTR unsigned char  size(2) Largest target is 482
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), V(BANK2[192]), 

    strPtr	PTR unsigned char  size(2) Largest target is 482
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), V(BANK2[192]), 

    sp__hid_display	PTR struct H_data size(1) Largest target is 9
		 -> H(BANK0[9]), 

    sp__get_vterm_ptr	PTR unsigned char  size(2) Largest target is 482
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), 

    TMR3_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    S1999spi_link_type$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    spi_link.tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    S1999spi_link_type$tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), 

    spi_link.tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), Absolute function(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    None.

Critical Paths under _TMR3_ISR in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _ADCC_ISR in COMRAM

    None.

Critical Paths under _ADCC_ThresholdISR in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMASCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMADCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAA_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAOR_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _TMR3_ISR in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _ADCC_ThresholdISR in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _TMR3_ISR in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _ADCC_ThresholdISR in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _TMR3_ISR in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _ADCC_ThresholdISR in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _TMR3_ISR in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _ADCC_ThresholdISR in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _TMR3_ISR in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _ADCC_ThresholdISR in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _TMR3_ISR in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _ADCC_ThresholdISR in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _TMR3_ISR in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _ADCC_ThresholdISR in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _TMR3_ISR in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _ADCC_ThresholdISR in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _TMR3_ISR in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _ADCC_ThresholdISR in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _TMR3_ISR in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _ADCC_ThresholdISR in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _TMR3_ISR in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _ADCC_ThresholdISR in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _TMR3_ISR in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _ADCC_ThresholdISR in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _TMR3_ISR in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _ADCC_ThresholdISR in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _TMR3_ISR in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _ADCC_ThresholdISR in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _TMR3_ISR in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _ADCC_ThresholdISR in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _TMR3_ISR in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _ADCC_ThresholdISR in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _TMR3_ISR in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _ADCC_ThresholdISR in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _TMR3_ISR in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _ADCC_ThresholdISR in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _TMR3_ISR in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _ADCC_ThresholdISR in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _TMR3_ISR in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _ADCC_ThresholdISR in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _TMR3_ISR in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _ADCC_ThresholdISR in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _TMR3_ISR in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _ADCC_ThresholdISR in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _TMR3_ISR in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _ADCC_ThresholdISR in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _TMR3_ISR in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _ADCC_ThresholdISR in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _TMR3_ISR in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _ADCC_ThresholdISR in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _TMR3_ISR in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _ADCC_ThresholdISR in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _TMR3_ISR in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _ADCC_ThresholdISR in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _TMR3_ISR in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _ADCC_ThresholdISR in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _TMR3_ISR in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _ADCC_ThresholdISR in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _TMR3_ISR in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _ADCC_ThresholdISR in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _TMR3_ISR in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _ADCC_ThresholdISR in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Critical Paths under _TMR3_ISR in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _ADCC_ThresholdISR in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                17    17      0  604945
                  _SYSTEM_Initialize
                         _StartTimer
                          _TimerDone
                             _WaitMs
                            ___fladd
                             ___flge
                            ___fltol
                    _calc_model_data
                      _calc_ror_data
                     _check_adc_scan
                 _check_enter_button
                         _check_help
                     _clear_adc_scan
                   _clear_hid_pflags
                    _conv_raw_result
                   _convert_adc_data
                 _current_sensor_cal
                _eaDogM_WriteCommand
                          _esr_check
                              _fabsf
                     _get_raw_result
                         _get_switch
                      _get_vterm_ptr
                        _hid_display
                          _init_bsoc
                       _init_display
                      _init_port_dma
                          _lp_filter
                      _mode_lamp_dim
                      _read_cal_data
                            _set_dac
                          _set_dac_a
                          _set_dac_b
                   _set_display_info
                 _set_load_relay_one
                 _set_load_relay_two
                          _set_vterm
                           _spinners
                            _sprintf
                              _srand
                     _start_adc_scan
               _start_switch_handler
                         _static_soc
                    _update_cal_data
                   _update_hist_data
                         _update_lcd
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (1) _update_hist_data                                     3     0      3      66
 ---------------------------------------------------------------------------------
 (1) _update_cal_data                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _static_soc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _start_switch_handler                                 0     0      0      22
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _set_dac_b                                            4     0      4    1600
                    _convert_dac_raw
 ---------------------------------------------------------------------------------
 (1) _set_dac_a                                            4     0      4    1600
                    _convert_dac_raw
 ---------------------------------------------------------------------------------
 (2) _convert_dac_raw                                      4     0      4    1578
                            ___fldiv
                             ___flge
                            ___fltol
 ---------------------------------------------------------------------------------
 (1) _set_dac                                              0     0      0      44
                  _SPI1_Exchange8bit
                    _dac_spi_control
 ---------------------------------------------------------------------------------
 (2) _dac_spi_control                                      1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _read_cal_data                                        7     7      0     615
                  _CRC_8BitDataWrite
            _CRC_CalculatedResultGet
                     _CRC_Initialize
                         _CRC_IsBusy
                          _CRC_Start
                    _DATAEE_ReadByte
 ---------------------------------------------------------------------------------
 (2) _DATAEE_ReadByte                                      2     0      2      45
 ---------------------------------------------------------------------------------
 (1) _init_port_dma                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    1356
                      _ringBufS_init
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                      _send_lcd_data
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_data                                        1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd                                         1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _SPI1_Exchange8bit                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _ringBufS_init                                        2     0      2    1048
                             _memset
 ---------------------------------------------------------------------------------
 (1) _init_bsoc                                            0     0      0    8435
           _TMR3_SetInterruptHandler
                       _Volts_to_SOC
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                    _conv_raw_result
 ---------------------------------------------------------------------------------
 (2) _Volts_to_SOC                                         7     3      4     136
 ---------------------------------------------------------------------------------
 (1) _hid_display                                          1     0      1     562
                          _hid_input
 ---------------------------------------------------------------------------------
 (2) _hid_input                                            1     0      1     182
                         _get_switch
 ---------------------------------------------------------------------------------
 (1) _esr_check                                            1     0      1    8599
                         _StartTimer
                          _TimerDone
                            ___fldiv
                            ___flsub
                    _conv_raw_result
                              _fabsf
                 _set_load_relay_one
                 _set_load_relay_two
                  _update_adc_result
 ---------------------------------------------------------------------------------
 (2) _update_adc_result                                    0     0      0     132
                         _StartTimer
                          _TimerDone
                     _check_adc_scan
                     _clear_adc_scan
                     _start_adc_scan
 ---------------------------------------------------------------------------------
 (3) _check_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _set_load_relay_two                                   1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_load_relay_one                                   1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     0      1   31461
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (1) _current_sensor_cal                                  17    17      0  129346
                             _WaitMs
                            ___fldiv
                           ___xxtofl
                    _cal_current_10A
                   _cal_current_zero
                     _clear_adc_scan
                       _clear_switch
                     _get_raw_result
                         _get_switch
                      _get_vterm_ptr
                           _spinners
                            _sprintf
                     _start_adc_scan
                         _update_lcd
                     _write_cal_data
 ---------------------------------------------------------------------------------
 (2) _write_cal_data                                       7     7      0     593
                  _CRC_8BitDataWrite
            _CRC_CalculatedResultGet
                     _CRC_Initialize
                         _CRC_IsBusy
                          _CRC_Start
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (3) _DATAEE_WriteByte                                     4     1      3      90
 ---------------------------------------------------------------------------------
 (2) _CRC_Start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CRC_IsBusy                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CRC_CalculatedResultGet                              7     4      3     209
                   _CRC_ReverseValue
 ---------------------------------------------------------------------------------
 (3) _CRC_ReverseValue                                     6     4      2      94
 ---------------------------------------------------------------------------------
 (2) _CRC_8BitDataWrite                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _start_adc_scan                                       0     0      0      66
      _ADCC_DischargeSampleCapacitor
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (29) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (29) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _spinners                                             3     1      2     415
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _get_switch                                           1     0      1      44
 ---------------------------------------------------------------------------------
 (2) _clear_switch                                         1     0      1      66
 ---------------------------------------------------------------------------------
 (3) _clear_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _cal_current_zero                                     5     0      5     242
                        _check_range
 ---------------------------------------------------------------------------------
 (2) _cal_current_10A                                     13     0     13     242
                        _check_range
 ---------------------------------------------------------------------------------
 (3) _check_range                                          6     0      6     132
 ---------------------------------------------------------------------------------
 (1) _convert_adc_data                                     1     1      0   10995
                    _conv_raw_result
                          _lp_filter
 ---------------------------------------------------------------------------------
 (1) _clear_hid_pflags                                     1     0      1      66
 ---------------------------------------------------------------------------------
 (1) _check_help                                           2     1      1  250792
                         _StartTimer
                          _TimerDone
                       _display_help
                       _display_info
                      _get_vterm_ptr
                        _help_button
                   _mode_lamp_bright
                      _mode_lamp_dim
                   _set_display_info
              _set_temp_display_help
                          _set_vterm
                            _sprintf
                         _update_lcd
                         _vterm_dump
 ---------------------------------------------------------------------------------
 (2) _vterm_dump                                           0     0      0  125143
                             _WaitMs
            _eaDogM_WriteStringAtPos
                      _get_vterm_ptr
                            _sprintf
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (18) _sprintf                                           104    10     94   30377
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _get_vterm_ptr                                        2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _WaitMs                                               2     0      2      88
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _update_lcd                                           1     0      1   94854
            _eaDogM_WriteStringAtPos
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteStringAtPos                              5     1      4   94590
                 _eaDogM_WriteString
                   _send_lcd_cmd_dma
                  _send_lcd_data_dma
                      _wait_lcd_done
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _send_lcd_cmd_dma                                     1     0      1   31430
                  _send_lcd_data_dma
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (1) _wait_lcd_done                                        0     0      0      44
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _wdtdelay                                             4     0      4      44
 ---------------------------------------------------------------------------------
 (3) _send_lcd_data_dma                                    1     0      1   31355
                             _printf
                     _ringBufS_flush
                          _start_lcd
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (3) _eaDogM_WriteString                                   2     0      2   31578
                             _printf
                     _ringBufS_flush
                          _start_lcd
                             _strlen
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (4) _wait_lcd_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _start_lcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ringBufS_flush                                       3     0      3    1172
                             _memset
 ---------------------------------------------------------------------------------
 (5) _memset                                              10     4      6    1017
 ---------------------------------------------------------------------------------
 (4) _printf                                               8     4      4   30152
                           _vfprintf
 ---------------------------------------------------------------------------------
 (19) _vfprintf                                            8     2      6   29999
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (20) _vfpfcnvrt                                          45    39      6   29607
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (21) _xtoa                                               31    20     11    2704
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (22) _toupper                                             4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (23) _islower                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (22) _isalpha                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _utoa                                               24    14     10    2411
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (22) ___lomod                                            17     1     16     159
 ---------------------------------------------------------------------------------
 (22) ___lodiv                                            25     9     16     162
 ---------------------------------------------------------------------------------
 (21) _strncmp                                            10     4      6     225
 ---------------------------------------------------------------------------------
 (21) _stoa                                               21    17      4    1329
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (21) _efgtoa                                             63    56      7   13817
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (21) _tolower                                             4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (22) _isupper                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (22) _strcpy                                              8     4      4     137
 ---------------------------------------------------------------------------------
 (22) _floorf                                             14    10      4     338
 ---------------------------------------------------------------------------------
 (22) ___fpclassifyf                                      10     6      4     135
 ---------------------------------------------------------------------------------
 (22) ___fltol                                             6     2      4     229
 ---------------------------------------------------------------------------------
 (22) ___flneg                                             4     0      4      45
 ---------------------------------------------------------------------------------
 (22) ___fleq                                              8     0      8      90
 ---------------------------------------------------------------------------------
 (22) ___awmod                                             6     2      4     296
 ---------------------------------------------------------------------------------
 (22) ___awdiv                                             8     4      4     300
 ---------------------------------------------------------------------------------
 (21) _dtoa                                               28    18     10    3018
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (22) _abs                                                 2     0      2      66
 ---------------------------------------------------------------------------------
 (22) ___aomod                                            18     2     16     296
 ---------------------------------------------------------------------------------
 (22) ___aodiv                                            26    10     16     300
 ---------------------------------------------------------------------------------
 (21) _ctoa                                                7     4      3    1790
                                _pad
 ---------------------------------------------------------------------------------
 (22) _pad                                                10     4      6    1691
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (18) _strlen                                              4     2      2     130
 ---------------------------------------------------------------------------------
 (23) _fputs                                               7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (24) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (25) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (26) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (21) _atoi                                               11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (22) _isspace                                             3     1      2      68
 ---------------------------------------------------------------------------------
 (21) _isdigit                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _set_vterm                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _set_temp_display_help                                1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_display_info                                     1     0      1      44
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _mode_lamp_dim                                        2     0      2      66
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _mode_lamp_bright                                     0     0      0      44
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _PWM8_LoadDutyValue                                   2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _help_button                                          0     0      0      66
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (2) _TimerDone                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (18) _StartTimer                                          3     0      3      44
 ---------------------------------------------------------------------------------
 (2) _display_info                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_help                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_enter_button                                   1     0      1      66
 ---------------------------------------------------------------------------------
 (1) _calc_ror_data                                        0     0      0    7418
                             ___flge
                            ___flsub
                    _conv_raw_result
                              _fabsf
 ---------------------------------------------------------------------------------
 (18) _fabsf                                               8     4      4      47
 ---------------------------------------------------------------------------------
 (19) _conv_raw_result                                     2     0      2    5182
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (20) _nanf                                                6     4      2      23
 ---------------------------------------------------------------------------------
 (20) _get_raw_result                                      1     0      1      22
 ---------------------------------------------------------------------------------
 (20) ___xxtofl                                           10     5      5     322
 ---------------------------------------------------------------------------------
 (22) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (22) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (1) _calc_model_data                                      0     0      0   11072
                            ___fladd
                            ___flmul
                            ___flsub
                          _lp_filter
                         _start_bsoc
                          _stop_bsoc
 ---------------------------------------------------------------------------------
 (2) _stop_bsoc                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _start_bsoc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lp_filter                                           10     4      6    5658
                            ___fladd
                            ___flmul
                            ___flsub
 ---------------------------------------------------------------------------------
 (22) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (23) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (22) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     335
                    _ADCC_Initialize
                  _CLKREF_Initialize
                     _CRC_Initialize
                    _DMA1_Initialize
                    _DMA2_Initialize
                 _EXT_INT_Initialize
                     _FVR_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM8_Initialize
                    _SPI1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0      44
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0      22
        _UART1_SetRxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      22
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0      22
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      0     0      0      22
           _TMR3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR3_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      23
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      44
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _INT1_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _DMA2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DMA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CRC_Initialize                                       4     4      0      92
 ---------------------------------------------------------------------------------
 (2) _CLKREF_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0      44
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADTIInterruptHandler                         3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADIInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _INT1_ISR                                            4     4      0     205
                                              6 COMRAM     4     4      0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (16) _INT1_CallBack                                       0     0      0     205
                   Absolute function *
       _INT1_DefaultInterruptHandler *
                     _switch_handler *
 ---------------------------------------------------------------------------------
 (17) _switch_handler                                      2     2      0     205
 ---------------------------------------------------------------------------------
 (17) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _TMR5_ISR                                           15    15      0    5521
                                             10 COMRAM    15    15      0
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (16) _TMR5_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (16) _TMR5_CallBack                                       0     0      0    5431
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (17) _TMR5_DefaultInterruptHandler                        0     0      0    5431
                     _check_day_time
 ---------------------------------------------------------------------------------
 (18) _check_day_time                                      4     4      0    5431
                             ___flge
                    _conv_raw_result
               _get_ac_charger_relay
               _set_ac_charger_relay
 ---------------------------------------------------------------------------------
 (19) _set_ac_charger_relay                                1     0      1      22
 ---------------------------------------------------------------------------------
 (18) _get_ac_charger_relay                                0     0      0       0
 ---------------------------------------------------------------------------------
 (19) _conv_raw_result                                     2     0      2    5182
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (20) _nanf                                                6     4      2      23
 ---------------------------------------------------------------------------------
 (20) _get_raw_result                                      1     0      1      22
 ---------------------------------------------------------------------------------
 (20) ___xxtofl                                           10     5      5     322
 ---------------------------------------------------------------------------------
 (22) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (23) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (22) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (22) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (22) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _TMR3_ISR                                           25    25      0   35866
                                              0 BANK0     25    25      0
                      _TMR3_CallBack
                    _TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (16) _TMR3_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (16) _TMR3_CallBack                                       0     0      0   35776
                   Absolute function *
       _TMR3_DefaultInterruptHandler *
                          _calc_bsoc *
 ---------------------------------------------------------------------------------
 (17) _calc_bsoc                                           6     6      0   35776
                         _StartTimer
                          ___asfladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                            ___fltol
                              _fabsf
               _get_ac_charger_relay
                  _port_data_dma_ptr
                 _send_port_data_dma
                            _sprintf
                             _strlen
 ---------------------------------------------------------------------------------
 (18) _sprintf                                           104    10     94   30377
                           _vfprintf
 ---------------------------------------------------------------------------------
 (19) _vfprintf                                            8     2      6   29999
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (20) _vfpfcnvrt                                          45    39      6   29607
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (21) _xtoa                                               31    20     11    2704
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (22) _toupper                                             4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (23) _islower                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (22) _isalpha                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _utoa                                               24    14     10    2411
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (22) ___lomod                                            17     1     16     159
 ---------------------------------------------------------------------------------
 (22) ___lodiv                                            25     9     16     162
 ---------------------------------------------------------------------------------
 (21) _strncmp                                            10     4      6     225
 ---------------------------------------------------------------------------------
 (21) _stoa                                               21    17      4    1329
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (21) _efgtoa                                             63    56      7   13817
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (21) _tolower                                             4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (22) _isupper                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (22) _strcpy                                              8     4      4     137
 ---------------------------------------------------------------------------------
 (22) _floorf                                             14    10      4     338
 ---------------------------------------------------------------------------------
 (22) ___fpclassifyf                                      10     6      4     135
 ---------------------------------------------------------------------------------
 (22) ___fltol                                             6     2      4     229
 ---------------------------------------------------------------------------------
 (22) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (22) ___flneg                                             4     0      4      45
 ---------------------------------------------------------------------------------
 (22) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (22) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (22) ___fleq                                              8     0      8      90
 ---------------------------------------------------------------------------------
 (22) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (22) ___awmod                                             6     2      4     296
 ---------------------------------------------------------------------------------
 (22) ___awdiv                                             8     4      4     300
 ---------------------------------------------------------------------------------
 (21) _dtoa                                               28    18     10    3018
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (22) _abs                                                 2     0      2      66
 ---------------------------------------------------------------------------------
 (22) ___aomod                                            18     2     16     296
 ---------------------------------------------------------------------------------
 (22) ___aodiv                                            26    10     16     300
 ---------------------------------------------------------------------------------
 (21) _ctoa                                                7     4      3    1790
                                _pad
 ---------------------------------------------------------------------------------
 (22) _pad                                                10     4      6    1691
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (18) _strlen                                              4     2      2     130
 ---------------------------------------------------------------------------------
 (23) _fputs                                               7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (24) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (25) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (26) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (21) _atoi                                               11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (22) _isspace                                             3     1      2      68
 ---------------------------------------------------------------------------------
 (21) _isdigit                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (18) _send_port_data_dma                                  2     0      2      45
 ---------------------------------------------------------------------------------
 (18) _port_data_dma_ptr                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _get_ac_charger_relay                                0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _fabsf                                               8     4      4      47
 ---------------------------------------------------------------------------------
 (18) ___asfladd                                           6     0      6    2028
                            ___fladd
 ---------------------------------------------------------------------------------
 (23) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (18) _StartTimer                                          3     0      3      44
 ---------------------------------------------------------------------------------
 (17) _TMR3_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (28) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (29) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _ADCC_ISR                                            0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                    _adc_int_handler *
 ---------------------------------------------------------------------------------
 (28) _adc_int_handler                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (28) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _ADCC_ThresholdISR                                   5     5      0      22
                                              0 COMRAM     5     5      0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                  _adc_int_t_handler *
 ---------------------------------------------------------------------------------
 (28) _adc_int_t_handler                                   0     0      0      22
      _ADCC_DischargeSampleCapacitor
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (29) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (29) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (28) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (28) _UART1_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _UART2_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (28) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _UART2_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (28) _UART2_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _TMR6_ISR                                            1     1      0      90
                                              5 COMRAM     1     1      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (28) _TMR6_CallBack                                       0     0      0      90
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (29) _TMR6_DefaultInterruptHandler                        1     1      0      90
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _DMA1_DMASCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _DMA1_DMADCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _DMA1_DMAA_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _DMA1_DMAOR_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 27
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
     _CLKREF_Initialize
     _CRC_Initialize
     _DMA1_Initialize
     _DMA2_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
     _FVR_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM8_Initialize
     _SPI1_Initialize
     _TMR2_Initialize
     _TMR3_Initialize
       _TMR3_SetInterruptHandler
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetRxInterruptHandler
     _UART2_Initialize
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _StartTimer
   _TimerDone
   _WaitMs
     _StartTimer
     _TimerDone
   ___fladd
   ___flge
   ___fltol
   _calc_model_data
     ___fladd
     ___flmul
     ___flsub
       ___fladd
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
     _start_bsoc
     _stop_bsoc
   _calc_ror_data
     ___flge
     ___flsub
       ___fladd
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _fabsf
   _check_adc_scan
   _check_enter_button
   _check_help
     _StartTimer
     _TimerDone
     _display_help
     _display_info
     _get_vterm_ptr
     _help_button
       _StartTimer
       _TimerDone
     _mode_lamp_bright
       _PWM8_LoadDutyValue
     _mode_lamp_dim
       _PWM8_LoadDutyValue
     _set_display_info
       _TimerDone
     _set_temp_display_help
     _set_vterm
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _send_lcd_data_dma
             _printf
               _vfprintf
                 _vfpfcnvrt
                   _atoi
                     _isdigit
                     _isspace
                   _ctoa
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _dtoa
                     ___aodiv
                     ___aomod
                     _abs
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _efgtoa
                     ___awdiv
                     ___awmod
                     ___fladd
                     ___fldiv
                     ___fleq
                     ___flge
                     ___flmul
                     ___flneg
                     ___flsub
                       ___fladd
                     ___fltol
                     ___fpclassifyf
                     _floorf
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _strcpy
                     _tolower
                       _isupper
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _isdigit
                   _isupper
                   _stoa
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _strlen
                   _strncmp
                   _tolower
                     _isupper
                   _utoa
                     ___lodiv
                     ___lomod
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _xtoa
                     _isalpha
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _toupper
                       _islower
             _ringBufS_flush
               _memset
             _start_lcd
             _wait_lcd_set
           _wait_lcd_done
             _wdtdelay
         _send_lcd_data_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
           _wdtdelay
         _wdtdelay
       _wait_lcd_done
         _wdtdelay
     _vterm_dump
       _WaitMs
         _StartTimer
         _TimerDone
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _send_lcd_data_dma
             _printf
               _vfprintf
                 _vfpfcnvrt
                   _atoi
                     _isdigit
                     _isspace
                   _ctoa
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _dtoa
                     ___aodiv
                     ___aomod
                     _abs
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _efgtoa
                     ___awdiv
                     ___awmod
                     ___fladd
                     ___fldiv
                     ___fleq
                     ___flge
                     ___flmul
                     ___flneg
                     ___flsub
                       ___fladd
                     ___fltol
                     ___fpclassifyf
                     _floorf
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _strcpy
                     _tolower
                       _isupper
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _isdigit
                   _isupper
                   _stoa
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _strlen
                   _strncmp
                   _tolower
                     _isupper
                   _utoa
                     ___lodiv
                     ___lomod
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _xtoa
                     _isalpha
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _toupper
                       _islower
             _ringBufS_flush
               _memset
             _start_lcd
             _wait_lcd_set
           _wait_lcd_done
             _wdtdelay
         _send_lcd_data_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
           _wdtdelay
         _wdtdelay
       _get_vterm_ptr
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _wait_lcd_done
         _wdtdelay
   _clear_adc_scan
   _clear_hid_pflags
   _conv_raw_result
     ___fldiv
     ___flmul
     ___flsub
       ___fladd
     ___xxtofl
     _get_raw_result
     _nanf
   _convert_adc_data
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
   _current_sensor_cal
     _WaitMs
       _StartTimer
       _TimerDone
     ___fldiv
     ___xxtofl
     _cal_current_10A
       _check_range
     _cal_current_zero
       _check_range
     _clear_adc_scan
     _clear_switch
     _get_raw_result
     _get_switch
     _get_vterm_ptr
     _spinners
       _strlen
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _start_adc_scan
       _ADCC_DischargeSampleCapacitor
       _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
       _ADCC_StartConversion
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _send_lcd_data_dma
             _printf
               _vfprintf
                 _vfpfcnvrt
                   _atoi
                     _isdigit
                     _isspace
                   _ctoa
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _dtoa
                     ___aodiv
                     ___aomod
                     _abs
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _efgtoa
                     ___awdiv
                     ___awmod
                     ___fladd
                     ___fldiv
                     ___fleq
                     ___flge
                     ___flmul
                     ___flneg
                     ___flsub
                       ___fladd
                     ___fltol
                     ___fpclassifyf
                     _floorf
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _strcpy
                     _tolower
                       _isupper
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _isdigit
                   _isupper
                   _stoa
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _strlen
                   _strncmp
                   _tolower
                     _isupper
                   _utoa
                     ___lodiv
                     ___lomod
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _xtoa
                     _isalpha
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _toupper
                       _islower
             _ringBufS_flush
               _memset
             _start_lcd
             _wait_lcd_set
           _wait_lcd_done
             _wdtdelay
         _send_lcd_data_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
           _wdtdelay
         _wdtdelay
       _wait_lcd_done
         _wdtdelay
     _write_cal_data
       _CRC_8BitDataWrite
       _CRC_CalculatedResultGet
         _CRC_ReverseValue
       _CRC_Initialize
       _CRC_IsBusy
       _CRC_Start
       _DATAEE_WriteByte
   _eaDogM_WriteCommand
     _send_lcd_cmd_dma
       _send_lcd_data_dma
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _wait_lcd_set
       _wait_lcd_done
         _wdtdelay
   _esr_check
     _StartTimer
     _TimerDone
     ___fldiv
     ___flsub
       ___fladd
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _fabsf
     _set_load_relay_one
     _set_load_relay_two
     _update_adc_result
       _StartTimer
       _TimerDone
       _check_adc_scan
       _clear_adc_scan
       _start_adc_scan
         _ADCC_DischargeSampleCapacitor
         _ADCC_SetADIInterruptHandler
         _ADCC_SetADTIInterruptHandler
         _ADCC_StartConversion
   _fabsf
   _get_raw_result
   _get_switch
   _get_vterm_ptr
   _hid_display
     _hid_input
       _get_switch
   _init_bsoc
     _TMR3_SetInterruptHandler
     _Volts_to_SOC
     ___fldiv
     ___flmul
     ___fltol
     ___xxtofl
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
   _init_display
     _ringBufS_init
       _memset
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_data
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _init_port_dma
   _lp_filter
     ___fladd
     ___flmul
     ___flsub
       ___fladd
   _mode_lamp_dim
     _PWM8_LoadDutyValue
   _read_cal_data
     _CRC_8BitDataWrite
     _CRC_CalculatedResultGet
       _CRC_ReverseValue
     _CRC_Initialize
     _CRC_IsBusy
     _CRC_Start
     _DATAEE_ReadByte
   _set_dac
     _SPI1_Exchange8bit
     _dac_spi_control
   _set_dac_a
     _convert_dac_raw
       ___fldiv
       ___flge
       ___fltol
   _set_dac_b
     _convert_dac_raw
       ___fldiv
       ___flge
       ___fltol
   _set_display_info
     _TimerDone
   _set_load_relay_one
   _set_load_relay_two
   _set_vterm
   _spinners
     _strlen
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
             ___fladd
           ___fltol
           ___fpclassifyf
           _floorf
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
             _ringBufS_put_dma
         _isdigit
         _isupper
         _stoa
           _fputc
             _putch
               _ringBufS_put_dma
           _strlen
         _strncmp
         _tolower
           _isupper
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _toupper
             _islower
   _srand
   _start_adc_scan
     _ADCC_DischargeSampleCapacitor
     _ADCC_SetADIInterruptHandler
     _ADCC_SetADTIInterruptHandler
     _ADCC_StartConversion
   _start_switch_handler
     _INT1_SetInterruptHandler
   _static_soc
   _update_cal_data
   _update_hist_data
   _update_lcd
     _eaDogM_WriteStringAtPos
       _eaDogM_WriteString
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _strlen
         _wait_lcd_set
       _send_lcd_cmd_dma
         _send_lcd_data_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
           _wdtdelay
       _send_lcd_data_dma
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _wait_lcd_set
       _wait_lcd_done
         _wdtdelay
       _wdtdelay
     _wait_lcd_done
       _wdtdelay
   _wait_lcd_done
     _wdtdelay

 _INT1_ISR (ROOT)
   _INT1_CallBack
     Absolute function(Fake) *
     _INT1_DefaultInterruptHandler *
     _switch_handler *

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
       _check_day_time
         ___flge
         _conv_raw_result
           ___fldiv
           ___flmul
           ___flsub
             ___fladd
           ___xxtofl
           _get_raw_result
           _nanf
         _get_ac_charger_relay
         _set_ac_charger_relay
   _TMR5_WriteTimer

 _TMR3_ISR (ROOT)
   _TMR3_CallBack
     Absolute function(Fake) *
     _TMR3_DefaultInterruptHandler *
     _calc_bsoc *
       _StartTimer
       ___asfladd
         ___fladd
       ___fldiv
       ___flge
       ___flmul
       ___flneg
       ___fltol
       _fabsf
       _get_ac_charger_relay
       _port_data_dma_ptr
       _send_port_data_dma
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _strlen
   _TMR3_WriteTimer

 _INT0_ISR (ROOT)
   _INT0_CallBack
     Absolute function(Fake) *
     _INT0_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_handler *

 _ADCC_ThresholdISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_t_handler *
     _ADCC_DischargeSampleCapacitor
     _ADCC_StartConversion

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *

 _UART2_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Receive_ISR *

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 _DMA1_DMASCNT_ISR (ROOT)

 _DMA1_DMADCNT_ISR (ROOT)

 _DMA1_DMAA_ISR (ROOT)

 _DMA1_DMAOR_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0     50D      69       15.8%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0      FF      15       99.6%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      D2      13       82.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      E7      11       90.2%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0     100       9      100.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      E1       7       87.9%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     19      9A       5       96.2%
BITCOMRAM           3F      0       0       0        0.0%
COMRAM              3F     19      27       1       61.9%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     55A      58        0.0%
DATA                 0      0     A67       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Feb 12 00:52:02 2020

                     _SPI1_Exchange8bit D8F2                __end_of_set_display_info D96A  
                                     _C 07FF                                       _D 092A  
                                     _H 00F1                                       _P 009E  
                                     _R 0107                                       _S 0196  
                                     _T F94D                                       _V 0200  
      __end_of_TMR5_SetInterruptHandler D632            __end_of_start_switch_handler D8D2  
                           __CFG_CP$OFF 000000                 __size_of_ringBufS_flush 0092  
                       _update_cal_data CB46                                      _bp FA55  
                __end_of_FVR_Initialize DB6C                          _check_day_time 96D6  
                           __CFG_LVP$ON 000000                                     l171 DA2A  
                                   l809 D900                                     l675 D4EA  
                                   l942 C7D2                                     _GIE 01FE97  
                                   _abs CE94                                     _pad AD86  
                                   fsr0 003FE9                                     fsr2 003FD9  
               __size_of_PMD_Initialize 0014                         _TMR2_Initialize D9D6  
                                   prod 003FF3                                     tosl 003FFD  
                                   wreg 003FE8                           _INT0_CallBack D804  
                     _update_adc_result D166                           __CFG_BBEN$OFF 000000  
                 __size_of_Volts_to_SOC 00BA                           _INT1_CallBack D798  
                          __CFG_ZCD$OFF 000000                                    l1004 D0E0  
                                  l2001 C5CA                                    l2112 96CC  
                                  l2017 BB46                                    l2042 C102  
                                  l2210 CC8A                                    l1271 DA52  
                                  l1192 D120                                    l2048 B926  
                                  l2321 4752                                    l1505 402C  
                                  l1441 005E                                    l1282 9D40  
                                  l2242 B548                                    l2082 CA30  
                                  l2251 AB52                         _timer3ReloadVal 00C4  
                                  l2172 986C                                    l3220 5A80  
                                  l1284 9D46                                    l1460 07B6  
                                  l2325 4A90                                    l3301 52C4  
                                  l1470 0858                                    l1462 07BC  
                                  l2511 18FC                                    l2159 B2C0  
                                  l1447 0298                                    l2176 9864  
                                  l3232 5910                                    l2600 6DD0  
                                  l1480 0A5E                                    l1481 0C88  
                                  l2426 ADE2                                    l1730 C196  
                                  l3403 888A                                    l1804 D1BC  
                                  l3341 9346                                    l1821 AFA6  
                                  l1813 8FEC                                    l1726 BD54  
                                  l2446 659E                                    l2526 1DAC  
                                  l1814 9148                                    l1486 1252  
                                  l2367 80DE                                    l3265 5FFA  
                                  l1745 D228                                    l2482 24CC  
                                  l2650 3478                                    l3372 CED4  
                                  l3364 9A02                                    l2564 81CC  
                                  l1861 D966                                    l1598 CA9C  
                  _ADCC_StartConversion DA56                                    l3472 AA2A  
                                  l1961 64BA                                    l2585 74F6  
                                  l2942 B7A8                                    l2953 A14E  
                                  l2946 A07A                                    l3754 C448  
                                  l3739 8F30                                    l2980 9FEC  
                                  l3767 C3C4                                    l9102 5CD6  
                                  l9030 8C6C                                    l9022 8BC0  
                                  l9014 8B38                                    l9120 5D9C  
                                  l9112 5D66                                    l9122 5DAE  
                                  l9130 5E06                                    l9050 5AE0  
                                  l9300 50D4                                    l9212 4B3A  
                                  l9060 5B36                                    l9230 4C08  
                                  l9214 4B40                                    l9206 4AFA  
                                  l9142 5E50                                    l9070 5BBE  
                                  l9062 5B66                                    l9304 50FA  
                                  l9232 4C0E                                    l9224 4BC8  
                                  l9216 4B70                                    l9160 5EC6  
                                  l9136 5E34                                    l9128 5E02  
                                  l9080 5C14                                    l9056 5B20  
                                  l9314 5144                                    l9242 4C60  
                                  l9234 4C3E                                    l8602 5454  
                                  l9170 5F3A                                    l9146 5E76  
                                  l9082 5C44                                    l9402 A546  
                                  l9332 5204                                    l9156 5EC0  
                                  l9076 5BFE                                    l9500 9ED6  
                                  l9318 514A                                    l8710 58C0  
                                  l8614 54BC                                    l8606 546A  
                                  l9190 5FDE                                    l9182 5FA6  
                                  l9094 5CBC                                    l9422 ACB8  
                                  l9414 AC8E                                    l9328 51BE  
                                  l8608 549A                                    l9176 5F76  
                                  l9088 5C82                                    l9440 AD6C  
                                  l9432 AD38                                    l9346 5272  
                                  l9338 522E                                    l9418 ACA0  
                                  l9348 528C                                    l8732 5950  
                                  l8708 589A                                    l8660 569E  
                                  l8644 55FA                                    l8572 5324  
                                  l9188 5FCE                                    l9380 A46C  
                                  l9452 B772                                    l9524 9F84  
                                  l9516 9F58                                    l9540 9BE0  
                                  l9294 50B8                                    l8742 5978  
                                  l8726 5932                                    l8718 58F4  
                                  l8654 566C                                    l8590 53E2  
                                  l8582 537A                                    l9470 A0C8  
                                  l9374 A44C                                    l9526 9F9A  
                                  l9518 9F74                                    l8728 5944  
                                  l8664 56A8                                    l8584 53AA  
                                  l9464 A038                                    l9368 A436  
                                  l9456 B7A6                                    l9448 B730  
                                  l8912 7264                                    l9552 9CB2  
                                  l8746 597E                                    l8658 568C  
                                  l8578 5364                                    l9482 A14C  
                                  l9474 A116                                    l9394 A512  
                                  l9490 CD92                                    l8780 5A60  
                                  l8772 5A20                                    l8692 5790  
                                  l8668 56D8                                    l8596 5414  
                                  l8932 741A                                    l9572 A788  
                                  l9564 A6DC                                    l8774 5A30  
                                  l8758 59DC                                    l8686 5774  
                                  l8870 99A0                                    l8926 7382  
                                  l8768 5A08                                    l8688 5786  
                                  l8696 57C2                                    l8856 CEC4  
                                  l8880 99FA                                    l8936 7488  
                                  l8928 73D2                                    l8970 8402  
                                  l8874 99A4                                    l8954 C3B4  
                                  l9588 CBDE                                    l8982 849C  
                                  STR_1 FE65                                    l8976 8456  
                                  STR_2 FE11                                    STR_3 FFD2  
                                  l8994 856E                                    l8898 C438  
                                  STR_4 FDA8                                    STR_5 FBDF  
                                  STR_6 FBDF                                    STR_7 FBDF  
                                  STR_8 FEB9                                    STR_9 FF22  
                                  _LATA 003FBA                                    _LATB 003FBB  
                                  _LATC 003FBC                                    _LATD 003FBD  
                                  _LATE 003FBE                                    _LATF 003FBF  
                                  _T2PR 003FAB                                    u6100 D402  
                                  u6200 5620                                    u7000 84C8  
                                  u6210 5640                                    _T6PR 003F93  
                                  u6211 563A                                    u7020 85A6  
                                  u7100 8BBA                                    _PMD0 0039C0  
                                  _PMD1 0039C1                                    u7110 8BEC  
                                  _PMD2 0039C2                                    _PMD3 0039C3  
                                  u6400 5956                                    u6320 57B8  
                                  u7040 85F8                                    u8000 9CEA  
                                  _PMD4 0039C4                                    _PMD5 0039C5  
                                  u6250 56D0                                    u7130 8CA4  
                                  u6090 D400                                    _PMD6 0039C6  
                                  _PMD7 0039C7                                    u6420 5970  
                                  u6260 56F0                                    u6228 5642  
                                  u8020 A6D6                                    u6325 57A8  
                                  u7150 8CF6                                    u7070 8B32  
                                  u8030 A708                                    u6255 56C0  
                                  u6360 58E2                                    u7330 5EB8  
                                  u7090 8B88                                    u8050 A7C0  
                                  u6530 D3D0                                    u6460 59CC  
                                  u6700 99F2                                    u6540 D3D2  
                                  u8070 CBBA                                    u6710 99F4  
                                  u7600 51D2                                    u8080 CBDA  
                                  u9200 8824                                    u6640 CEA8  
                                  u7505 4EAA                                    u6465 59BC  
                                  u7610 5218                                    u6490 59EC  
                                  u7370 5F14                                    u7290 5E2E  
                                  u9210 8826                                    u6650 9924  
                                  u7515 5072                                    u7380 5F4E  
                                  u6820 7328                                    u6740 C3F6  
                                  u9300 8F04                                    u6900 C374  
                                  u6805 7282                                    u7550 513C  
                                  u7390 5F8A                                    u6806 7288  
                                  u6750 C3F8                                    u9310 D852  
                                  u7375 5F04                                    u6655 991A  
                                  u6807 7296                                    u7480 4C4E  
                                  u6920 D430                                    u6840 7400  
                                  u6825 731E                                    u6930 D432  
                                  u7730 ACE4                                    u6770 71FC  
                                  u9250 8E3C                                    u9307 8EF6  
                                  u9180 86CC                                    u7660 A498  
                                  u6780 7248                                    u6845 73F6  
                                  u7590 5198                                    u6950 83FC  
                                  u7750 AD58                                    u6870 CF58  
                                  u7495 4DE2                                    u6695 99D4  
                                  u6775 71F2                                    u7680 A532  
                                  u6880 CF5A                                    u9257 8E2E  
                                  u6970 8452                                    u7850 CD8E  
                                  u7930 9FA2                                    u9290 8ED6  
                                  u6890 C372                                    u7595 5188  
                                  u9700 92BA                                    u7860 9EB6  
                                  u6981 845C                                    u6990 8496  
                                  u7790 B7A2                                    u7950 9FCC  
                                  u7870 9ECA                                    u9295 8ED0  
                                  u7880 9F04                                    u7865 9EAC  
                                  u9297 8EC2                                    u7961 9BA0  
                                  u7970 9BDA                                    _PLLR 01CEE0  
                                  u7980 9C0C                                    u9740 B662  
                                  u7885 9EFA                                    u9814 6072  
                                  u9815 606C                                    u9745 B65C  
                                  u9834 6258                                    u9835 6252  
                                  u9940 C792                                    u9854 6326  
                                  u9774 6020                                    u9855 6320  
                                  u9775 601A                                    u9880 6350  
                                  u9874 6348                                    u9794 6050  
                                  u9875 6342                                    u9795 604A  
                                  u9948 C794                                    u9965 C7E2  
                                  u9966 C7E4                                    _WPUA 003A41  
                                  _WPUB 003A51                                    _WPUC 003A61  
                                  _WPUD 003A71                                    _WPUE 003A81  
                                  _WPUF 003A91                        __end_of_ADCC_ISR D4C4  
                         __CFG_FCMEN$ON 000000                                    _dbuf 0354  
                    __size_of_CRC_Start 0006                                    _cp_h FA65  
                                  _cp_l FA61                                    _atoi 8620  
                                  _ctoa C2C2                                    _main 0000  
                                  _dtoa 64C0                                    _nanf C91A  
                                  _seed 01D9                                    _prec 003C  
                                  _nout 00C0                                    _spin F9DD  
                                  fsr0h 003FEA                                    fsr1h 003FE2  
                                  indf0 003FEF                                    fsr2h 003FDA  
                                  fsr0l 003FE9                                    indf1 003FE7  
                                  indf2 003FDF                                    fsr1l 003FE1  
                                  fsr2l 003FD9                                    _stoa 80E2  
                                  btemp 0001                                    _utoa 74B2  
                                  _xtoa 6D8C                  __end_of_check_adc_scan DB4C  
                         ___fpclassifyf 9876                                    prodh 003FF4  
                                  prodl 003FF3                                    start 00AE  
                       _timer5ReloadVal 00C8               __end_of_SPI1_Exchange8bit D910  
             __size_of_clear_hid_pflags 0034                         _TMR3_Initialize CE4C  
           __size_of_set_load_relay_one 0010             __size_of_set_load_relay_two 0010  
                         __CFG_CSWEN$ON 000000                          _SPI1STATUSbits 003D17  
                     _UART1_rx_vect_isr D6FC                            ___param_bank 000000  
                __end_of_check_day_time 9876                      ?_UART1_rx_vect_isr 0021  
             __size_of_DATAEE_WriteByte 0068                        _update_hist_data C9DC  
                      __end_of_INT0_ISR DAF2                        __end_of_INT1_ISR D166  
        __size_of_OSCILLATOR_Initialize 0016                __end_of_ringBufS_put_dma BD5C  
         __end_of_OSCILLATOR_Initialize DA30                                   l10204 887A  
                                 l10220 8DA2                                   l10222 8E0E  
                                 l10170 865C                                   l10500 9290  
                                 l10510 92C4                                   l10502 92A6  
                                 l10190 8776                                   l12110 9504  
                                 l12102 9500                                   l10520 9326  
                                 l10184 86FC                                   l10168 863A  
                                 l12200 7F24                                   l10194 87DE  
                                 l10186 8714                                   l10178 86D0  
                                 l12122 CB76                                   l10604 649A  
                                 l10188 8738                                   l12132 CA0C  
                                 l11342 CD14                                   l10550 6006  
                                 l12142 9B6C                                   l10622 D562  
                                 l10534 B670                                   l10542 B6C2  
                                 l12230 80A4                                   l12208 7F4A  
                                 l12232 80CE                                   l11338 CCE2  
                                 l11442 957E                                   l11434 9552  
                                 l10490 9226                                   l10570 623E  
                                 l11530 B8D4                                   l10538 B6AE  
                                 l12162 7E26                                   l12082 9398  
                                 l11700 A5A4                                   l10492 9244  
                                 l10556 6036                                   l14012 2A72  
                                 l14004 2986                                   l11508 CC50  
                                 l11612 D186                                   l12172 7E6C  
                                 l12164 7E36                                   l11702 A5D6  
                                 l11446 9592                                   l10486 9202  
                                 l10478 9196                                   l10590 63EC  
                                 l10582 630C                                   l10566 615C  
                                 l13310 7C74                                   l11518 B89E  
                                 l11470 C0DC                                   l12182 7EA2  
                                 l12166 7E3C                                   l12094 944E  
                                 l12440 6D7E                                   l10488 9210  
                                 l13400 658E                                   l14104 326E  
                                 l14040 2D0C                                   l14016 2AC6  
                                 l13304 7BB6                                   l14200 BD72  
                                 l10840 D232                                   l10824 9E08  
                                 l12192 7ED6                                   l12176 7E78  
                                 l12096 9482                                   l10498 9272  
                                 l10578 6270                                   l11570 D1D2  
                                 l14202 BD80                                   l14210 BDB4  
                                 l11458 C0A6                                   l10932 CC1A  
                                 l14300 41E0                                   l10780 9812  
                                 l11716 A688                                   l11708 A60E  
                                 l10596 6488                                   l13340 ADDA  
                                 l13412 65F6                                   l14124 3400  
                                 l14060 2E6C                                   l14036 2CD8  
                                 l14028 2C20                                   l13324 7D8C  
                                 l13316 7CDE                                   l10828 9E32  
                                 l11492 A310                                   l12188 7ECA  
                                 l11636 C588                                   l11660 AC1A  
                                 PRLOCK 0039EF                                   l11902 D4E6  
                                 l13262 A940                                   l13350 AE72  
                                 l13342 ADEC                                   l13422 6808  
                                 l14118 33A6                                   l14070 2F1A  
                                 l14134 3424                                   l11734 B502  
                                 l12462 AABC                                   l12446 AA40  
                                 l14312 434E                                   l14304 424C  
                                 l10768 97A0                                   l13336 ADB2  
                                 l13408 65D8                                   l14128 3404  
                                 l14080 303C                                   l14152 BE5C  
                                 l14208 BD88                                   l14232 AEBE  
                                 l12392 B9F0                                   l10952 C50C  
                                 l11496 A386                                   l11728 B4BC  
                                 l12472 AB2C                                   l11824 B942  
                                 l11648 C5A0                                   l11656 ABB8  
                                 l12562 C48A                                   l14322 457A  
                                 l11690 A58E                                   l12490 D09E  
                                 l13274 BED0                                   l13346 AE28  
                                 l13442 68BA                                   l13530 1702  
                                 l14090 30F2                                   l14340 4784  
                                 l14332 46BA                                   l14316 43A2  
                                 l11692 A59C                                   l13284 BF5C  
                                 l13276 BEF2                                   l13356 B594  
                                 l13604 1BB8                                   l13524 1628  
                                 l13508 158E                                   l13516 15BC  
                                 l13460 133E                                   l14172 BC32  
                                 l12396 BA2E                                   l14260 B382  
                                 l14500 38E2                                   l11828 B9BE  
                                 l14326 45F4                                   l11686 A578  
                                 l13374 C2E0                                   l13446 68F6  
                                 l13550 180E                                   l13534 1764  
                                 l14174 BC74                                   l10894 D47C  
                                 l14254 B2DC                                   l12568 C49A  
                                 l14352 4A88                                   l14336 4762  
                                 l11928 D0C8                                   l11688 A588  
                                 l13288 BF9A                                   l13376 C30C  
                                 l13704 2268                                   l13552 1820  
                                 l13528 1698                                   l13472 1382  
                                 l13480 13D8                                   l13800 8360  
                                 l14504 38F0                                   l11890 D982  
                                 l11946 D108                                   l13706 2282  
                                 l13642 1EC4                                   l13626 1DA4  
                                 l13618 1CDA                                   l13546 17E6  
                                 l13490 147C                                   l14522 399C  
                                 l14292 4120                                   l13716 2324  
                                 l13628 1DC6                                   l13492 14A8  
                                 l14196 BD60                                   l14604 8FBC  
                                 l14460 35B2                                   l14452 3550  
                                 l13742 242C                                   l13726 2374  
                                 l13654 1F4C                                   l13662 1FB6  
                                 l13670 2022                                   l13566 1888  
                                 l13558 1826                                   l13494 14BE  
                                 l13822 7542                                   l13814 74E6  
                                 l14198 BD68                                   l14518 3988  
                                 l14296 4174                                   l13584 194A  
                                 l13568 1894                                   l13832 7738  
                                 l14448 353A                                   l13690 21CC  
                                 l13594 1A0C                                   l13498 14EA  
                                 l13762 814E                                   l13914 70FC  
                                 l14618 90E4                                   l14538 3A9E  
                                 l13588 1982                                   l13860 6DFA  
                                 l14732 0270                                   l13678 2134  
                                 l13782 823E                                   l13854 6DC0  
                                 l14822 07C0                                   l13792 82F8  
                                 l13952 25B8                                   l14576 3F82  
                                 l14920 117C                                   l14824 07EE  
                                 l14816 07AC                                   l14672 0066  
                                 l13786 826E                                   l13778 8202  
                                 l13890 6F8C                                   l13874 6E96  
                                 l13866 6E36                                   l13954 25F2  
                                 l14498 383A                                   l14930 11BA  
                                 l14738 02B2                                   l14674 0078  
                                 l14666 0040                                   l13796 8324  
                                 l13956 2608                                   l14908 1128  
                                 l14844 0848                                   l14836 0822  
                                 l14668 0048                                   l13974 273A  
                                 l14854 086A                                   l13976 2774  
                                 l14944 1202                                   l14936 11CC  
                                 l13898 7012                                   l13994 28EE  
                                 l13978 278A                                   l14938 11E4  
                                 l14882 0F28                                   l14866 096A  
                                 l14786 0542                                   l14948 1228  
                                 l14892 10AA                                   l14958 127E  
                                 l14878 0EC6                                   l14894 10D6  
                                 l14798 061C                         __end_of___aodiv 8620  
                          _Volts_to_SOC B930                                   _ADCAP 003EF5  
                                 _ADACT 003EFE                         __end_of___fladd 5A8A  
                                 _ADCLK 003EFF                         __end_of___aomod 8D1A  
                                 _ADPCH 003EF1                         __end_of___fldiv 6004  
                                 _ADREF 003EFD                         __end_of___awdiv A560  
                       __end_of___flneg CDBC                                   STR_10 FD93  
                                 STR_11 FB39                                   STR_12 FC0A  
                                 STR_20 FB05                                   STR_13 FCE6  
                                 STR_21 FB1F                                   STR_22 FF94  
                                 STR_30 FC62                                   STR_14 FBDE  
                                 STR_15 FDBD                                   STR_31 FD28  
                                 STR_24 FF83                                   STR_16 FDD2  
                                 STR_32 FCFC                                   STR_40 FB6B  
                                 STR_17 FEE3                                   STR_33 FD12  
                                 STR_25 FCD0                                   STR_41 FB99  
                         __CFG_WDTE$OFF 000000                                   STR_50 FEA4  
                                 STR_18 FE8F                                   STR_26 FCBA  
                                 STR_34 FC20                                   STR_42 FBB0  
                                 STR_51 FD54                                   STR_43 FD3E  
                                 STR_27 FCA4                                   STR_35 FC36  
                                 STR_19 FBF4                                   STR_44 FD3E  
                                 STR_52 FF0D                                   STR_60 FE50  
                                 STR_28 FC8E                                   STR_36 FC4C  
                       __end_of___awmod AD86                                   STR_61 FDE7  
                                 STR_53 FE7A                                   STR_45 FD3E  
                                 STR_29 FC78                                   STR_37 FB82  
                                 STR_70 FD7E                                   STR_62 FF71  
                                 STR_46 FE7A                                   STR_54 FD7E  
                                 STR_38 FBC7                                   STR_63 FEA4  
                                 STR_71 FECE                                   STR_55 FE3B  
                                 STR_47 FDFC                                   STR_39 FAE8  
                                 STR_64 FD54                                   STR_56 FE7A  
                                 STR_72 FFFC                                   STR_80 FFA4  
                                 STR_48 FDE7                                   _ADRPT 003EEC  
                                 STR_57 FD7E                                   STR_81 FFA4  
                                 STR_65 FF0D                                   STR_73 FFF9  
                                 STR_49 FF37                                   STR_66 FE7A  
                                 STR_82 FFA4                                   STR_74 FFB3  
                                 STR_58 FEF8                                   STR_59 FE7A  
                                 STR_75 FFC9                                   STR_67 FD69  
                                 STR_83 FB53                                   STR_92 FAE7  
                                 STR_76 FF4B                                   STR_68 FE26  
                                 STR_77 FF4B                                   STR_69 FE7A  
                                 STR_85 FF5E                                   STR_93 FA69  
                                 STR_94 FFD7                                   STR_78 FFBF  
                                 STR_79 FFBF                                   STR_95 FFDF  
                       __end_of___flmul 52CE                                   STR_98 FFDB  
                                 STR_99 FFE3                         __end_of___flsub CF20  
                       __end_of___fltol 9FF6                                   u10200 C508  
                                 u10230 C7FC                                   u10134 9DB4  
                                 u10150 DA94                                   u10135 9DAE  
                                 u10305 DA82                                   u10410 C0A2  
                                 u10306 DA84                                   u10315 DA72  
                                 u10500 B8CE                                   u10316 DA74  
                                 u10085 CF94                                   u12030 A934  
                                 u10430 C0D6                                   u10255 C830  
                                 u10256 C832                                   u10248 C7FE  
                                 u13000 8386                                   u11241 CA00  
                                 u12050 A9B0                                   u12130 7E00  
                       __end_of___lodiv 9D12                                   u11251 CA22  
                                 u10380 9530                                   u10620 D89C  
                                 u12060 BF20                                   u12300 65C4  
                                 u13020 74CC                                   u13100 6DA6  
                                 u11180 9500                                   u12310 681C  
                                 u12230 64F0                                   u11191 CB50  
                                 u12240 64F2                                   u13200 700E  
                                 u14000 9136                                   u10480 B89A  
                                 u10720 B4A8                                   u12321 684C  
                                 u10626 D89E                                   u12330 6862  
                                 u12410 136C                                   u13210 702E  
                                 u13130 6E8E                                   u10474 CC7E  
                                 _U1P1H 003DED                                   u12067 BF12  
                                 u12331 6860                                   u13051 777A  
                                 u10475 CC7A                                   u12340 6876  
                                 u12260 6562                                   u12180 B60E  
                                 u13060 7790                                   u13140 6EE2  
                                 u13300 2650                                   u14100 0776  
                                 _U1P2H 003DEF                                   u13061 778E  
                                 u13221 705E                                   u13205 6FF0  
                                 u12350 687A                                   u13070 77A4  
                                 u13230 7074                                   u13150 6EE4  
                                 u13310 2652                                   u10750 B4EE  
                                 _U1P1L 003DEC                                   _U1P3H 003DF1  
                                 u13231 7072                                   _T3CLK 003FA9  
                                 u12280 6574                                   u12440 1426  
                                 u13080 77A8                                   u13240 7088  
                                 u13320 2678                                   _T2CON 003FAC  
                                 _U1P2L 003DEE                                   u12370 6890  
                                 u12530 17A0                                   u12450 1428  
                                 u13250 708C                                   u13170 6F42  
                                 u10738 B4AA                                   _U1P3L 003DF0  
                                 u12187 B600                                   u12700 1CAA  
                                 u13180 6F44                                   u13420 29DA  
                                 u10780 B534                                   u14220 1118  
                                 u14060 03CC                                   u12630 18DA  
                                 u13350 27D2                                   u14230 1132  
                                 _U2P1L 003DD4                                   u12800 2176  
                                 u12560 17F4                                   u12480 1538  
                                 u13440 2B4E                                   u13360 27D4  
                                 u10768 B4F0                                   u14240 1144  
                                 u14080 064A                                   _T3CON 003FA6  
                                 _U2P2L 003DD6                                   u12490 153A  
                                 u13370 27FA                                   u14226 111A  
                                 u14090 0774                                   _U2P3L 003DD8  
                                 u13540 3146                                   u14236 1134  
                                 u12590 1858                                   u13470 2DC6  
                                 u10798 B536                                   u14246 1146  
                                 _T5CLK 003F9D                                   u13560 32F6  
                                 u13480 2DC8                         __end_of___lomod A7E2  
                                 u12860 234A                                   u13580 BE3C  
                                 u13900 3BE4                                   _T2HLT 003FAD  
                                 u13910 3C0E                                   u12880 2400  
                                 u12960 8264                                   u13840 36F8  
                                 _T5CON 003F9A                                   u13905 3BD6  
                                 u12890 2402                                   u12970 82AA  
                                 u13850 3722                                   u13915 3C00  
                                 u13845 36EA                                   u13855 3714  
                                 _T6CON 003F94                                   u12977 829C  
                                 u13990 9134                          __CFG_DEBUG$OFF 000000  
                                 _T6HLT 003F95              _ADCC_ADTI_InterruptHandler 00AB  
                                 _T2TMR 003FAA                                   _U1UIR 003DF8  
                                 _T2RST 003FAF                                   _U1RXB 003DE8  
                                 _U2UIR 003DE0                                   _U2RXB 003DD0  
                                 _U2TXB 003DD2                                   _T6TMR 003F92  
                                 _T6RST 003F97                     ??_UART1_rx_vect_isr 0026  
                                 _ISRPR 0039F1                                   _OSCEN 0039DD  
                                 _TMR3H 003FA5                                   _TMR5H 003F99  
                                 _TMR3L 003FA4                                   _TMR5L 003F98  
             __end_of_update_adc_result D1A0                                   _TRISA 003FC2  
                                 _TRISB 003FC3                                   _TRISC 003FC4  
                                 _TRISD 003FC5                                   _TRISE 003FC6  
                                 _TRISF 003FC7                             _Default_ISR DB8C  
                   __size_of_CRC_IsBusy 0010                 __size_of_clear_adc_scan 0006  
                    _current_sensor_cal 3482       __size_of_TMR3_SetInterruptHandler 0028  
     __size_of_TMR6_SetInterruptHandler 0028                           __CFG_WRTB$OFF 000000  
                      __end_of_TMR3_ISR A2BA                           __CFG_WRTC$OFF 000000  
                      _cal_current_zero C07A                           __CFG_WRTD$OFF 000000  
                      __end_of_TMR5_ISR B476                            _DMA1CON0bits 003BFC  
                      __end_of_TMR6_ISR D9BE                            _DMA1CON1bits 003BFD  
            __size_of_send_lcd_data_dma 004A                         _DATAEE_ReadByte D34A  
                                 _fabsf BB58                    __end_of_clear_switch CC8E  
                                 _flags 003E                    __size_of_check_range 0080  
             __size_of_CRC_ReverseValue 00CE                                   _r_cal 0400  
              __size_of_calc_model_data 044C                            _DMA2CON0bits 003BDC  
                          _DMA2CON1bits 003BDD            __end_of_get_ac_charger_relay DAE2  
                                 _fputc A910              __size_of_send_lcd_cmd_long 0040  
                       __end_of_isalpha CF64                                   _fputs BF4C  
                       __end_of_isdigit D43C                         __end_of_ivln2_h FA61  
                    __CFG_MCLRE$EXTMCLR 000000                                   _srand D246  
                                 _width 003A                                   _putch D988  
          __end_of_set_ac_charger_relay DAB8                         __end_of_islower D3DC  
                       __end_of_isspace CBEE                _INT1_SetInterruptHandler D65A  
                       __end_of_set_dac BB58                         __end_of_isupper D40C  
                                 pclath 003FFA                                   tablat 003FF5  
                                 ltemp0 0001                                   ltemp1 0005  
                                 ltemp2 0009                __size_of_DMA1_Initialize 006A  
                                 plusw0 003FEB                                   plusw1 003FE3  
                                 plusw2 003FDB                                   ttemp0 0001  
                                 ttemp1 0004                                   ttemp2 0007  
                                 ttemp3 000A                                   ttemp5 0002  
                                 ttemp6 0005                                   ttemp7 0009  
                                 status 003FD8     __end_of_UART1_SetRxInterruptHandler D5E2  
           _UART1_SetRxInterruptHandler D5BA                                   wtemp0 0001  
                                 wtemp1 0003                                   wtemp2 0005  
                                 wtemp3 0007                                   wtemp4 0009  
                                 wtemp5 000B                                   wtemp8 0002  
                       __end_of_sprintf B1C2                         __end_of_tolower C452  
                       __end_of_strncmp 8F3A                         __end_of_toupper C3CE  
             __size_of_DMA1_DMADCNT_ISR 000A               __end_of_UART1_rx_vect_isr D724  
              __size_of_SPI1_Initialize 0016                 __end_of_update_cal_data CB9C  
                       _TMR5_Initialize CE04                   __end_of_ringBufS_init D542  
                       __initialization AFAA                       _UART2_rx_vect_isr D74C  
                          __end_of_cp_h FA69                            __end_of_cp_l FA65  
                          __end_of_atoi 8894                            __end_of_ctoa C34A  
                          __end_of_main 1292                            __end_of_dtoa 6940  
                          __end_of_nanf C97C                            __end_of_spin FA55  
                          __end_of_stoa 83A0                            __end_of_utoa 77F2  
                          __end_of_xtoa 7146                          __CFG_SAFEN$OFF 000000  
                    ?_UART2_rx_vect_isr 0021                 __end_of_TMR2_Initialize D9EE  
              __size_of_cal_current_10A 00BE                   __end_of_send_lcd_data D798  
              __size_of_DMA2_Initialize 005A              __end_of_check_enter_button D0A6  
                     __end_of_CRC_Start DB72                _TMR5_SetInterruptHandler D60A  
                         __activetblptr 000003               __size_of_DMA1_DMASCNT_ISR 000E  
                 _TMR3_InterruptHandler 00A2                       _port_data_dma_ptr DB0C  
                    esr_check@esr_state 00CA                     ??_UART2_rx_vect_isr 0026  
                                INTCON0 003FD2    __size_of_UART2_SetRxInterruptHandler 0028  
                        __CFG_MVECEN$ON 000000                         _TMR6_Initialize D4F0  
                       _PWM8_Initialize DA04                        _UART1_Initialize CDBC  
                     _UART2_tx_vect_isr D724                      _UART2_Transmit_ISR D4C4  
                                _ADACCU 003EEA                                  _ADACQH 003EF4  
                                _ADACQL 003EF3                                  _ADCON0 003EF8  
                                _ADCON1 003EF9                                  _ADCON2 003EFA  
                                _ADCON3 003EFB                          _start_adc_scan C854  
                                _ADLTHH 003EDF                                  _ADLTHL 003EDE  
                                STR_102 FFEA                                  STR_111 FFED  
                                STR_104 FFEA                                  STR_113 FFED  
                                STR_121 FFF6                                  STR_106 FFF0  
                                STR_123 FFF6                                  STR_108 FFF0  
                                STR_116 FFF3                                  STR_125 FFE7  
                                STR_118 FFF3                                  STR_127 FFE7  
                                _ADPREH 003EF7                                  _ADPREL 003EF6  
                                _DMA1PR 0039F3                                  _DMA2PR 0039F4  
                                _ADSTAT 003EFC                                  _ADUTHH 003EE1  
                                _ADUTHL 003EE0                      _PWM8_LoadDutyValue CF64  
                                _ANSELA 003A40                                  _ANSELB 003A50  
                                _ANSELC 003A60                                  _ANSELD 003A70  
                                _ANSELE 003A80                                  _ANSELF 003A90  
                    ?_UART2_tx_vect_isr 0021                                  _U1CON0 003DF2  
                                _U1CON1 003DF3                                  _U1CON2 003DF4  
                                _T3GATE 003FA8                                  _U1BRGH 003DF6  
                                _U1FIFO 003DF7                                  _T3GCON 003FA7  
                                _U2CON0 003DDA                                  _U2CON1 003DDB  
                                _U1BRGL 003DF5                                  _U2CON2 003DDC  
                                _U2BRGH 003DDE                                  _U2FIFO 003DDF  
                                _U2BRGL 003DDD                                  _T5GATE 003F9C  
                                _T5GCON 003F9B                                  _MAINPR 0039F2  
                                _RC3PPS 003A13                                  _RD1PPS 003A19  
                                i1l1021 B426                                  _RB6PPS 003A0E  
                                i1l1209 A222                    _start_switch_handler D8B2  
                                _RC5PPS 003A15                                  _ODCONA 003A42  
                                _ODCONB 003A52                                  _ODCONC 003A62  
                                _RC6PPS 003A16                                  _ODCOND 003A72  
                                _ODCONE 003A82                                  _ODCONF 003A92  
               __end_of_TMR3_Initialize CE94                          __CFG_WDTCCS$SC 000000  
                                _FVRCON 003EC1                        _mode_lamp_bright DAC6  
                                _SCANPR 0039F7                                  _IVTADH 00389E  
                                _IVTADL 00389D                                  _IVTADU 00389F  
          __size_of_eaDogM_WriteCommand 000E                                  _OSCFRQ 0039DF  
                                _NVMDAT 0039E3                    __size_of_hid_display 0122  
                                u991_25 DAB2                                  u991_26 DAB4  
                                u999_20 972C                        __end_of___xxtofl 9350  
 __end_of_ADCC_DischargeSampleCapacitor DB54  __size_of_ADCC_DischargeSampleCapacitor 0008  
         _ADCC_DischargeSampleCapacitor DB4C                __end_of_send_lcd_cmd_dma D92E  
                       _TMR3_WriteTimer D0E6                     ??_UART2_tx_vect_isr 0026  
             __end_of_UART2_rx_vect_isr D774              __size_of_SPI1_Exchange8bit 001E  
                __size_of_DMA1_DMAA_ISR 000A                          __CFG_XINST$OFF 000000  
                     _CLKREF_Initialize DB02                        _UART2_Initialize C97C  
                                _WaitMs D210                         _conv_raw_result 6004  
                          _CCPTMRS1bits 003F5F    __size_of_ADCC_SetADIInterruptHandler 0028  
                                ___flge 9FF6                                  ___fleq B6EE  
                     _ADCC_ThresholdISR C71C                          __CFG_STVREN$ON 000000  
                                _crcObj 00D5                          _ringBufS_flush C10C  
                                _efgtoa 1292                                  _floorf 7146  
                     dac_spi_control@S0 0042                       dac_spi_control@S1 00CE  
                     dac_spi_control@S2 00CD                       dac_spi_control@SB 00CB  
                     dac_spi_control@SC 00CC                      ?_ADCC_ThresholdISR 0021  
                                _memset 7B1E                    __size_of_help_button 0038  
                                clear_0 B03E                                  clear_1 B052  
                                clear_2 B064                                  clear_3 B070  
                                clear_4 B07C                                  clear_5 B088  
                                clear_6 B094                                  clear_7 B0A0  
             __end_of_port_data_dma_ptr DB16                  __size_of_read_cal_data 01CA  
                                _printf C8B8                      _eaDogM_WriteString BE04  
               __end_of_DATAEE_ReadByte D37C                                  _strcpy B54C  
                             ?_ADCC_ISR 0021                                  _strlen BEAA  
                    __size_of_TimerDone 0028                            __pdataBIGRAM 05FF  
                       _ADCC_Initialize C6B0                          _PMD_Initialize DA30  
            __size_of_update_adc_result 003A               __end_of_UART2_tx_vect_isr D74C  
                                lltemp0 0001                                  lltemp1 0009  
                                lltemp2 0011                                  lltemp3 0019  
                   ??_ADCC_ThresholdISR 0021                  __end_of_start_adc_scan C8B8  
                          __mediumconst F87C                                  preinc2 003FDC  
                __size_of_init_port_dma 0030                                  tblptrh 003FF7  
                                tblptrl 003FF6                                  tblptru 003FF8  
                      __end_of_wdtdelay CAEC                        __end_of_spinners B392  
                      __end_of_vfprintf BCB2                              _StartTimer D026  
                    __size_of___asfladd 0078           __size_of_INTERRUPT_Initialize 0066  
               __end_of_TMR5_Initialize CE4C                       _SYSTEM_Initialize CC8E  
                            __accesstop 0060                 __end_of__initialization B0B2  
                             ?_INT0_ISR 0021                               ?_INT1_ISR 0021  
                  __end_of_display_help DB64                    __end_of_display_info DB5C  
             __end_of_CLKREF_Initialize DB0C                           ___rparam_used 000001  
            __size_of_UART1_rx_vect_isr 0028                         _TMR5_WriteTimer D0A6  
                 _set_temp_display_help DA98                        _clear_hid_pflags D2E2  
                 __end_of_TMR3_CallBack D804               __end_of_ADCC_ThresholdISR C786  
                    __size_of_calc_bsoc 0A6E                  __end_of_ringBufS_flush C19E  
                        __pcstackCOMRAM 0021                              ___inthi_sp 1208  
                            ___intlo_sp 1904                            __pidataBANK0 DB3A  
                          __pidataBANK1 BFE4                            __pidataBANK2 B7B2  
           __size_of_send_port_data_dma 0052                           __end_of_fabsf BC06  
                             ?_TMR3_ISR 0021                               ?_TMR5_ISR 0021  
                             ?_TMR6_ISR 0021                        _DATAEE_WriteByte C786  
                        ivt0x8_undefint 00AC                           __end_of_fputc AA34  
                         __end_of_fputs BFE4                    _get_ac_charger_relay DAD4  
                         __end_of_srand D27A                   __end_of_TMR5_CallBack D7E0  
                         __end_of_putch D9A2                    _set_ac_charger_relay DAA8  
               __end_of_PWM8_Initialize DA1A                 __end_of_TMR6_Initialize D51A  
                     _adc_int_t_handler C452                  __end_of_PMD_Initialize DA44  
                            __end_of_bp FA5D                              ??_ADCC_ISR 0021  
                 __end_of_TMR6_CallBack D84C                   __size_of_clear_switch 004E  
           __size_of_EXT_INT_Initialize 0034                calc_bsoc@log_update_wait 0040  
                __size_of_calc_ror_data 0186                           _DMA1_DMAA_ISR DB24  
                 TMR3_ISR@CountCallBack 00C2                          _clear_adc_scan DB72  
                    __size_of_hid_input 00D6                      __end_of_CRC_IsBusy DA98  
                __size_of_mode_lamp_dim 0018                        _CRC_ReverseValue B620  
              _UART2_RxInterruptHandler 00B7               __end_of_SYSTEM_Initialize CCDC  
                       __CFG_PR1WAY$OFF 000000                         __CFG_IVT1WAY$ON 000000  
               __end_of_TMR3_WriteTimer D126                              __pbssBANK0 0060  
                            __pbssBANK1 0196                              __pbssBANK2 02C0  
                            __pbssBANK3 0300                              __pbssBANK4 0400  
                            __pbssBANK5 0500                __end_of_update_hist_data CA38  
                            _check_help 8F3A                           _read_cal_data 9350  
               __end_of_conv_raw_result 64C0                      __size_of_esr_check 02D8  
                 _INT0_InterruptHandler 00BD                              ??_INT0_ISR 0021  
                            ??_INT1_ISR 0027                       __end_of_TimerDone D56A  
                      _DMA1_DMADCNT_ISR DB18                         _convert_dac_raw AB56  
                    __size_of_init_bsoc 0246              __size_of_UART2_rx_vect_isr 0028  
                               IVTBASEH 003FD6                                 IVTBASEL 003FD5  
                               IVTBASEU 003FD7                      __size_of_lp_filter 01BC  
                         _init_port_dma D37C                   __end_of_wait_lcd_done D86E  
              __end_of_cal_current_zero C10C        __end_of_TMR3_SetInterruptHandler D65A  
                          _clear_switch CC40                         __CFG_PPS1WAY$ON 000000  
      __end_of_TMR6_SetInterruptHandler D60A                              ??_TMR3_ISR 00D8  
               __end_of_ADCC_Initialize C71A                              ??_TMR5_ISR 002B  
             __end_of_adc_int_t_handler C4D4                              ??_TMR6_ISR 0026  
                     __end_of___asfladd C646                                 _ADFLTRH 003EE7  
                               _ADFLTRL 003EE6                                 _DMA1DSA 003BF0  
                               _DMA2DSA 003BD0                                 _DMA1DSZ 003BEE  
                               _DMA2DSZ 003BCE                                 _DMA1SSA 003BF9  
                               _DMA2SSA 003BD9                      __size_of_set_dac_a 0034  
                    __size_of_set_dac_b 0034    __end_of_ADCC_SetADTIInterruptHandler D6D2  
 __size_of_ADCC_SetADTIInterruptHandler 0028            _ADCC_SetADTIInterruptHandler D6AA  
                               _DMA1SSZ 003BF7                                 _DMA2SSZ 003BD7  
            __size_of_port_data_dma_ptr 000A                                 _ADSTPTH 003EE5  
                               _ADSTPTL 003EE4                                 _CRCACCH 003963  
                               _CRCACCL 003962                                 _CRCDATH 003961  
                               _CRCDATL 003960                       _UART1_Receive_ISR D96A  
                               _CRCCON0 003968                                 _CRCCON1 003969  
                               _CLKRCLK 003CE6                                 _CLKRCON 003CE5  
                __end_of_clear_adc_scan DB78                                 u1022_20 DADE  
                               _CRCXORH 003967                                 _CRCXORL 003966  
                               u1105_48 D838                                 u1029_20 D1E0  
                               u1108_28 D7CC                                 u1029_26 D1E2  
                        ?_DMA1_DMAA_ISR 0021                        _DMA1_DMASCNT_ISR DAF4  
                               u1063_28 A57E                                 u1160_44 C4BA  
                               u1065_20 A598                                 u1160_45 C4B4  
                               u1065_21 A592                                 _U1ERRIE 003DFA  
                    __size_of_set_vterm 001E                                 _U1ERRIR 003DF9  
                               u1069_24 A67E                                 u1069_25 A67A  
                               _U2ERRIE 003DE2                                 _U2ERRIR 003DE1  
                               u1097_48 D814                                 u1099_28 D7A8  
                               u1373_20 46AA                                 u1380_28 D7F0  
                               u1375_20 4774                       _CRC_8BitDataWrite DA44  
                               _INT0PPS 003AC0                     __CFG_PWRTS$PWRT_OFF 000000  
                               _INT1PPS 003AC1                            ?_Default_ISR 0021  
            __size_of_UART2_tx_vect_isr 0028                                 _U1RXPPS 003AE5  
                               _U2RXPPS 003AE8                         _dac_spi_control C554  
                               _OSCCON1 0039D9                                 _OSCCON3 0039DB  
                               _IVTLOCK 003FD4                      __size_of_vfpfcnvrt 0FAC  
                               _SPI1CLK 003D1C                                 _SPI1RXB 003D10  
                               _NVMADRH 0039E1                                 _NVMADRL 0039E0  
                     __end_of_calc_bsoc 4AA4                                 _SPI1TXB 003D11  
                               _OSCTUNE 0039DE                                 _NVMCON2 0039E6  
                               _PWM8DCH 003F61                                 _PWM8DCL 003F60  
                               _PWM8CON 003F62                                 _SLRCONA 003A43  
                               _SLRCONB 003A53                                 _SLRCONC 003A63  
                               _SLRCOND 003A73                                 _SLRCONE 003A83  
                               _SLRCONF 003A93                              _get_switch D46A  
                    __size_of_start_lcd 0006                 __end_of_TMR5_WriteTimer D0E6  
               __size_of_switch_handler 0142                      __size_of_stop_bsoc 0006  
            __end_of_set_load_relay_one DA88              __end_of_set_load_relay_two DA78  
     __size_of_INT0_SetInterruptHandler 0028              __size_of_CLKREF_Initialize 000A  
                         _calc_ror_data 9A0C                 __size_of_DMA1_DMAOR_ISR 000A  
                               __Hparam 0000              __size_of_ADCC_ThresholdISR 006A  
                         _mode_lamp_dim D9BE                                 __Lparam 0000  
              __end_of_UART1_Initialize CE04                       __end_of_hid_input B54C  
                       __size_of_WaitMs 0036                         __size_of___flge 0162  
                       __size_of___fleq 00C4                                 ___aodiv 83A0  
                               ___fladd 52CE                                 ___aomod 8ADA  
                               ___fldiv 5A8A                                 ___awdiv A412  
                               ___flneg CD74                                 ___awmod AC6E  
                               ___flmul 4AA4                                 ___flsub CEDA  
                               ___fltol 9E84                                 ___lodiv 9B92  
                               ___lomod A6A2               __end_of_UART1_Receive_ISR D988  
                       __size_of_efgtoa 1244                         __size_of_floorf 036C  
                  __end_of_init_display B2AC                                 __pcinit AFAA  
              __end_of_mode_lamp_bright DAD4                         __size_of_memset 02EC  
              __size_of_adc_int_handler 0002                     _eaDogM_WriteCommand DAB8  
                               __ramtop 2000               __end_of_CRC_8BitDataWrite DA56  
                               __ptext0 0000                                 __ptext1 C9DC  
                               __ptext2 CB46                                 __ptext3 CA38  
                               __ptext4 D8B2                                 __ptext5 D246  
                               __ptext6 D27A                                 __ptext7 D2AE  
                               __ptext8 AB56                                 __ptext9 BAA2  
                     __end_of_esr_check 80E2                       _UART2_Receive_ISR D8D2  
                       __size_of_printf 0062                         __CFG_WRTAPP$OFF 000000  
                       __size_of_strcpy 00D4                         __size_of_strlen 00A2  
                 _OSCILLATOR_Initialize DA1A                            __size_of_abs 0046  
                               us705999 860A                                 us801999 9CFC  
                               us716999 8D08                            __size_of_pad 0114  
                     __end_of_init_bsoc 8ADA                                 us806999 A7D2  
                               _isalpha CF20                                 _isdigit D40C  
                               _ivln2_h FA5D                               _T3CONbits 003FA6  
                               _mode_sw 00CF                       __end_of_lp_filter 96D6  
                               _islower D3AC                                 _isspace CB9C  
                       __CFG_WRTSAF$OFF 000000                               _T5CONbits 003F9A  
                               _set_dac BAA2                __end_of_UART2_Initialize C9DC  
                               _isupper D3DC                               _CRC_Start DB6C  
            __size_of_SYSTEM_Initialize 004E                                 _sprintf B0B8  
                               _tolower C3CE                   __size_of_display_help 0008  
                               _utctime 0096                 __end_of_convert_dac_raw AC6E  
                 __size_of_display_info 0008                                 _strncmp 8D1A  
                               _toupper C34A                    end_of_initialization B0B2  
             __size_of_convert_adc_data 00B8                               _SCANHADRH 00397A  
                             _SCANHADRL 003979                               _SCANHADRU 00397B  
                             _SCANLADRH 003977                               _SCANLADRL 003976  
                    _check_enter_button D066                               _SCANLADRU 003978  
                     __end_of_set_dac_a D2E2                       __end_of_set_dac_b D2AE  
                             i1u1401_20 A218     __end_of_UART2_SetRxInterruptHandler D5BA  
           _UART2_SetRxInterruptHandler D592                               i2u1171_48 D760  
                             i2u1163_48 D4B0                               i2u1165_48 C752  
                             i2u1165_49 C766                 check_day_time@day_delay 0041  
                             i2u1167_48 D710                               i2u1169_48 D738  
                     __end_of_set_vterm D94C                       __end_of_vfpfcnvrt 3482  
                             _SPI1TCNTL 003D12                                 postdec0 003FED  
                               postdec1 003FE5                                 postdec2 003FDD  
                               postinc0 003FEE                                 postinc1 003FE6  
                               postinc2 003FDE              __size_of_adc_int_t_handler 0082  
                   __size_of_StartTimer 0040                       __end_of_start_lcd DB84  
             __end_of_UART2_Receive_ISR D8F2                          wdtdelay@dcount 009A  
               __end_of_dac_spi_control C5CE             __size_of_current_sensor_cal 0BB4  
                 __CFG_WDTCPS$WDTCPS_31 000000                         ??_DMA1_DMAA_ISR 0027  
                 _INT1_InterruptHandler 00BA                               _PORTBbits 003FCB  
                     __end_of_stop_bsoc DB8A                               _PORTDbits 003FCD  
              _TMR3_SetInterruptHandler D632                               _PORTFbits 003FCF  
              _TMR6_SetInterruptHandler D5E2                            _display_help DB5C  
                 _TMR5_InterruptHandler 00A5                            _display_info DB54  
  __size_of_UART2_SetTxInterruptHandler 0028                __end_of_clear_hid_pflags D316  
                     __size_of_ADCC_ISR 002C     __end_of_ADCC_SetADIInterruptHandler D6FA  
           _ADCC_SetADIInterruptHandler D6D2                              _update_lcd AE9A  
                       _calc_model_data 6940                  __size_of_ringBufS_init 0028  
                      __CFG_FEXTOSC$ECH 000000                              _static_soc CA38  
              __end_of_DATAEE_WriteByte C7EE                         _DMA1_Initialize C646  
                   __end_of_check_range C554                              _start_bsoc D890  
                __size_of_send_lcd_data 0024                         _SPI1_Initialize D9EE  
                 __end_of_get_vterm_ptr D46A                       __size_of_INT0_ISR 000E  
                     __size_of_INT1_ISR 003E                __end_of_CRC_ReverseValue B6EE  
                        __end_of_WaitMs D246            __end_of_INTERRUPT_Initialize C854  
                            _vterm_dump A7E2                          __end_of___flge A158  
                        __end_of___fleq B7B2                         _cal_current_10A B872  
  __end_of_INT0_DefaultInterruptHandler DB98   __size_of_INT0_DefaultInterruptHandler 0002  
          _INT0_DefaultInterruptHandler DB96              __size_of_UART1_Receive_ISR 001E  
                       _DMA2_Initialize CAEC                           __pidataBIGRAM 77F2  
                        __end_of_efgtoa 24D6              __size_of_CRC_8BitDataWrite 0012  
                     __size_of_TMR3_ISR 0162                       __size_of_TMR5_ISR 00E2  
                     __size_of_TMR6_ISR 001A                     __size_of_check_help 0212  
                        __end_of_floorf 74B2             __size_of_UART2_Transmit_ISR 002C  
                            floorf@F524 007A                          __end_of_memset 7E0A  
                        __end_of_printf C91A                __end_of_DMA1_DMADCNT_ISR DB22  
           __size_of_PWM8_LoadDutyValue 0042                   __end_of_INT0_CallBack D828  
                        __end_of_strcpy B620                          __end_of_strlen BF4C  
                   start_initialization AFAA                 __size_of_write_cal_data 0158  
  __end_of_TMR5_DefaultInterruptHandler D210   __size_of_TMR5_DefaultInterruptHandler 0038  
          _TMR5_DefaultInterruptHandler D1D8         __size_of_PIN_MANAGER_Initialize 0092  
                           __end_of_abs CEDA                   __end_of_INT1_CallBack D7BC  
             __size_of_set_display_info 001E                             __end_of_pad AE9A  
                  __size_of_Default_ISR 0006                 __size_of_CRC_Initialize 0092  
                  __end_of_send_lcd_cmd D026                          _switch_handler A560  
         __size_of_ADCC_StartConversion 0012                              ivt0x8_base 0008  
                         _uart1RxBuffer 006C                   __end_of___fpclassifyf 9A0C  
                         _uart2RxBuffer 0500                __end_of_DMA1_DMASCNT_ISR DB02  
                         _uart2TxBuffer 02C0                          _DMA1_DMAOR_ISR DB30  
                   __end_of_hid_display AB56              __end_of_send_port_data_dma CC40  
                      __CFG_LPBOREN$OFF 000000                   __size_of_init_display 00EA  
           __size_of_eaDogM_WriteString 00A6         __end_of_CRC_CalculatedResultGet 9E84  
                             _TimerDone D542                           _ringBufS_init D51A  
                           __pdataBANK0 00F1                             __pdataBANK1 0100  
                           __pdataBANK2 0200              __size_of_UART2_Receive_ISR 0020  
                   __size_of_get_switch 002C              __end_of_EXT_INT_Initialize D34A  
              __size_of_update_cal_data 0056                 __end_of_calc_model_data 6D8C  
                         _send_lcd_data D774                     __end_of_help_button D1D8  
       __end_of_eaDogM_WriteStringAtPos BE04                     __end_of_BVSOC_TABLE F94D  
                             ___asfladd C5CE                    calc_model_data@bcror 008E  
                           __pbssBIGRAM 092A                 __end_of_DMA1_Initialize C6B0  
                  calc_model_data@bvror 0092                             __pbssCOMRAM 003A  
                           _check_range C4D4        __end_of_INT0_SetInterruptHandler D6AA  
                         __pcstackBANK0 00D8                __size_of_TMR2_Initialize 0018  
                __size_of_TMR3_CallBack 0024                  __end_of_switch_handler A6A2  
                           _CRCCON0bits 003968                             _CRCCON1bits 003969  
                     __size_of___xxtofl 0204                 __end_of_SPI1_Initialize DA04  
              _UART1_RxInterruptHandler 00B1                _UART2_TxInterruptHandler 00B4  
                             __end_of_T F9DD                        _convert_adc_data B9EA  
                             _calc_bsoc 4036               __size_of_ringBufS_put_dma 00AA  
                          _init_display B1C2                  __end_of_DMA1_DMAOR_ISR DB3A  
                __size_of_TMR5_CallBack 0024                   _TMR6_InterruptHandler 00A8  
                    calc_ror_data@bcror 0086                  __size_of_TMR6_CallBack 0024  
               __end_of_cal_current_10A B930                 __end_of_DMA2_Initialize CB46  
                    calc_ror_data@bvror 008A                  _PIN_MANAGER_Initialize C19E  
              __size_of_TMR3_Initialize 0048                    __end_of_wait_lcd_set DB7E  
                         __pmediumconst F87C                               __ptext100 8620  
                             __ptext101 CB9C                               __ptext110 D542  
                             __ptext102 D40C                               __ptext111 D026  
                             __ptext103 D92E                               __ptext200 DB30  
                             __ptext120 914C                               __ptext112 DB54  
                             __ptext104 DA98                               __ptext201 0000  
                             __ptext121 5A8A                               __ptext113 DB5C  
                             __ptext105 D94C                               __ptext130 CC8E  
                             __ptext122 9FF6                               __ptext114 D066  
                             __ptext106 D9BE                               __ptext131 C97C  
                             __ptext123 6940                               __ptext115 9A0C  
                             __ptext107 DAC6                               __ptext140 CE4C  
                             __ptext132 D56A                               __ptext124 DB84  
                             __ptext116 BB58                               __ptext108 CF64  
                             __ptext141 D632                               __ptext133 D592  
                             __ptext125 D890                               __ptext117 6004  
                             __ptext109 D1A0                               __ptext150 D316  
                             __ptext142 D9D6                               __ptext134 CDBC  
                             __ptext126 951A                               __ptext118 C91A  
                             __ptext151 D65A                               __ptext143 D9EE  
                             __ptext135 D5BA                               __ptext127 CEDA  
                             __ptext119 D86E                               __ptext160 D128  
                             __ptext152 D682                               __ptext144 DA04  
                             __ptext136 D4F0                               __ptext128 52CE  
                             __ptext161 D798                               __ptext153 CAEC  
                             __ptext145 DA30                               __ptext137 D5E2  
                             __ptext129 4AA4                               __ptext170 DAD4  
                             __ptext162 DB92                               __ptext154 C646  
                             __ptext146 C19E                               __ptext138 CE04  
                             __ptext171 A158                               __ptext163 A560  
                             __ptext155 C230                               __ptext147 DA1A  
                             __ptext139 D60A                               __ptext180 D804  
                             __ptext172 D0E6                               __ptext164 B394  
                             __ptext156 DB02                               __ptext148 C7EE  
                             __ptext181 DB96                               __ptext173 D7E0  
                             __ptext165 D0A6                               __ptext157 C6B0  
                             __ptext149 DB64                               __ptext190 D724  
                             __ptext182 DB8C                               __ptext174 DB94  
                             __ptext166 D7BC                               __ptext158 D6AA  
                             __ptext191 D4C4                               __ptext183 D498  
                             __ptext175 4036                               __ptext167 D1D8  
                             __ptext159 D6D2                               __ptext192 D74C  
                             __ptext184 C452                               __ptext176 CBEE  
                             __ptext168 96D6                               __ptext193 D8D2  
                             __ptext185 DB98                               __ptext177 DB0C  
                             __ptext169 DAA8                               __ptext194 D9A4  
                             __ptext186 DB9A                               __ptext178 C5CE  
                             __ptext195 D828                               __ptext187 C71C  
                             __ptext179 DAE4                               __ptext196 CCDC  
                             __ptext188 D6FC                               __ptext197 DAF4  
                             __ptext189 D96A                               __ptext198 DB18  
                             __ptext199 DB24                               _hid_input B476  
                    __end_of_StartTimer D066                      _set_load_relay_one DA78  
                    _set_load_relay_two DA68                       __size_of_wdtdelay 005A  
                     __size_of_spinners 00E6                       __size_of_vfprintf 00AC  
                              _ADCC_ISR D498                  __CFG_BBSIZE$BBSIZE_512 000000  
                             fabsf@F463 007E                                _DMA1CON0 003BFC  
                              _DMA1CON1 003BFD                                _DMA1AIRQ 003BFE  
                              _DMA2CON0 003BDC                                _DMA2CON1 003BDD  
                              _DMA2AIRQ 003BDE                                _DMA1SIRQ 003BFF  
                              _DMA2SIRQ 003BDF                               _esr_check 7E0A  
               __size_of_get_raw_result 0022                          __size_of_fabsf 00AE  
                             _init_bsoc 8894                  __size_of_wait_lcd_done 0022  
                        __size_of_fputc 0124                                _T2CLKCON 003FAE  
                        __size_of_fputs 0098                __size_of_DATAEE_ReadByte 0032  
                             _lp_filter 951A                             _hid_display AA34  
                        __size_of_srand 0034                          __size_of_putch 001A  
                  _INTERRUPT_Initialize C7EE                                _T6CLKCON 003F96  
         __size_of_start_switch_handler 0020                         ?_DMA1_DMAOR_ISR 0021  
                              _INT0_ISR DAE4                                _INT1_ISR D128  
                              _LATCbits 003FBC                                _LATDbits 003FBD  
                              _LATEbits 003FBE                                _LATFbits 003FBF  
     __size_of_INT1_SetInterruptHandler 0028                                _SCANCON0 00397C  
                              _IPR1bits 003981                                _IPR2bits 003982  
                              _PIE1bits 003991                                _IPR3bits 003983  
                              _SCANTRIG 00397D                                _PIE2bits 003992  
                              _IPR5bits 003985                                _PIE3bits 003993  
                             _tickCount 01BF                                _IPR6bits 003986  
                              _PIE5bits 003995                                _IPR8bits 003988  
                              _PIE6bits 003996                                _IPR9bits 003989  
                              _PIE8bits 003998                     __CFG_BORV$VBOR_2P45 000000  
                              _PIE9bits 003999                            _SPI1CON0bits 003D14  
                          _SPI1CON1bits 003D15                               _set_dac_a D2AE  
                             _set_dac_b D27A                               _ring_buf1 03A4  
                             _ring_buf2 048F                                _PIR0bits 0039A0  
                              _PIR1bits 0039A1                                _PIR2bits 0039A2  
                              _SPI1BAUD 003D19                                _PIR4bits 0039A4  
                              _SPI1CON0 003D14                                _SPI1CON1 003D15  
                              _SPI1CON2 003D16                           _TMR3_CallBack D7E0  
                              _PIR5bits 0039A5                                _PIR6bits 0039A6  
                              _PIR8bits 0039A8                                _PIR9bits 0039A9  
              __size_of_TMR5_Initialize 0048                               _set_vterm D92E  
                   __size_of_update_lcd 0110                             _help_button D1A0  
                              _TMR3_ISR A158                             _BVSOC_TABLE F87D  
                              _TMR5_ISR B394                                _TMR6_ISR D9A4  
                             _port_data 05FF                     __size_of_static_soc 005A  
                             _vfpfcnvrt 24D6                            _SPI1INTFbits 003D1A  
                   __size_of_start_bsoc 0022                           _TMR5_CallBack D7BC  
                            _ADCON0bits 003EF8                      __end_of_check_help 914C  
                             _start_lcd DB7E                 __size_of_FVR_Initialize 0008  
             __size_of_send_lcd_cmd_dma 001E                           _TMR6_CallBack D828  
                        _write_cal_data A2BA                   __size_of_send_lcd_cmd 0040  
     __size_of_TMR5_SetInterruptHandler 0028                               _stop_bsoc DB84  
                      _set_display_info D94C                __size_of_PWM8_Initialize 0016  
              __size_of_TMR6_Initialize 002A                          _CRC_Initialize C230  
                           _INTCON0bits 003FD2                               copy_data0 AFBE  
                             copy_data1 AFE4                               copy_data2 B006  
                             copy_data3 B028        __size_of_CRC_CalculatedResultGet 0172  
              _INT0_SetInterruptHandler D682                     __size_of_vterm_dump 012E  
   __end_of_UART2_SetTxInterruptHandler D592             _UART2_SetTxInterruptHandler D56A  
                          _uart1RxCount 00D3                            _uart2RxCount 00D0  
                              __Hrparam 0000        __size_of_eaDogM_WriteStringAtPos 00A8  
               __CFG_RSTOSC$EXTOSC_4PLL 000000                __size_of_TMR3_WriteTimer 0040  
                              __Lrparam 0000                 __size_of_check_adc_scan 0008  
                    __CFG_BOREN$SBORDIS 000000              __end_of_current_sensor_cal 4036  
              __size_of_conv_raw_result 04BC                           _wait_lcd_done D84C  
                          _send_lcd_cmd CFE6                        __size_of___aodiv 0280  
                      __size_of___fladd 07BC           __size_of_get_ac_charger_relay 000E  
                      __size_of___aomod 0240                         _adc_int_handler DB9A  
                      __size_of___fldiv 057A                        __size_of___awdiv 014E  
                      __size_of___flneg 0048                        __size_of___awmod 0118  
                      __size_of___flmul 082A                        __size_of___flsub 0046  
                      __size_of___fltol 0172                        __size_of___lodiv 0180  
                      __size_of___lomod 0140           __size_of_set_ac_charger_relay 0010  
                    __end_of_get_switch D496                 __size_of_check_day_time 01A0  
                __end_of_write_cal_data A412                   __end_of_DMA1_DMAA_ISR DB2E  
                    ___fpclassifyf@F463 0082    __size_of_UART1_SetRxInterruptHandler 0028  
                       lp_filter@smooth 0300                                ___xxtofl 914C  
                __end_of_CRC_Initialize C2C2                       ?_DMA1_DMADCNT_ISR 0021  
           __size_of_check_enter_button 0040                __size_of_ADCC_Initialize 006A  
           __end_of_eaDogM_WriteCommand DAC6                        __size_of_isalpha 0044  
                      __size_of_isdigit 0030                                __pivt0x8 0008  
                      __size_of_islower 0030                        __size_of_isspace 0052  
                    ??_DMA1_DMADCNT_ISR 0027                        __size_of_set_dac 00B6  
                              __ptext10 C554                                __ptext11 9350  
                              __ptext20 8894                                __ptext12 D34A  
                              __ptext21 B930                                __ptext13 D37C  
                              __ptext30 3482                                __ptext22 AA34  
                              __ptext14 B1C2                                __ptext31 A2BA  
                              __ptext23 B476                                __ptext15 D774  
                              __ptext40 DB4C                                __ptext32 C786  
                              __ptext24 7E0A                                __ptext16 CFA6  
                              __ptext41 B2AC                                __ptext33 DB6C  
                              __ptext25 D166                                __ptext17 CFE6  
                              __ptext50 8F3A                                __ptext42 D46A  
                              __ptext34 DA88                                __ptext26 DB44  
                              __ptext18 D8F2                                __ptext51 A7E2  
                              __ptext43 CC40                                __ptext35 9D12  
                              __ptext27 DA68                                __ptext19 D51A  
                              __ptext60 CD2A                                __ptext52 B0B8  
                              __ptext44 DB72                                __ptext36 B620  
                              __ptext28 DA78                                __ptext61 BE04  
                              __ptext53 D43C                                __ptext45 C07A  
                              __ptext37 DA44                                __ptext29 DAB8  
                              __ptext70 C34A                                __ptext62 DB78  
                              __ptext54 D210                                __ptext46 B872  
                              __ptext38 C854                                __ptext71 D3AC  
                              __ptext63 DB7E                                __ptext55 AE9A  
                              __ptext47 C4D4                                __ptext39 DA56  
                              __ptext80 D3DC                                __ptext72 CF20  
                              __ptext64 C10C                                __ptext56 BD5C  
                              __ptext48 B9EA                                __ptext81 B54C  
                              __ptext73 74B2                                __ptext65 7B1E  
                              __ptext57 D910                                __ptext49 D2E2  
                              __ptext90 CE94                                __ptext82 7146  
                              __ptext74 A6A2                                __ptext66 C8B8  
                              __ptext58 D84C                                __ptext91 8ADA  
                              __ptext83 9876                                __ptext75 9B92  
                              __ptext67 BC06                                __ptext59 CA92  
                              __ptext92 83A0                                __ptext84 9E84  
                              __ptext76 8D1A                                __ptext68 24D6  
                              __ptext93 C2C2                                __ptext85 CD74  
                              __ptext77 80E2                                __ptext69 6D8C  
                              __ptext94 AD86                                __ptext86 B6EE  
                              __ptext78 1292                                __ptext95 BEAA  
                              __ptext87 AC6E                                __ptext79 C3CE  
                              __ptext96 BF4C                                __ptext88 A412  
                              __ptext97 A910                                __ptext89 64C0  
                              __ptext98 D988                                __ptext99 BCB2  
                      __size_of_isupper 0030                   __end_of_read_cal_data 951A  
                              us1222999 64DA                                us1303999 7518  
                              us1312999 6E0C                        __size_of_sprintf 010A  
                      __size_of_tolower 0084                                us1291999 80F4  
                      __size_of_strncmp 0220                        __size_of_toupper 0084  
                      _ringBufS_put_dma BCB2                    __end_of_Volts_to_SOC B9EA  
                         __size_of_atoi 0274                           __size_of_ctoa 0088  
                         __size_of_main 1292                           __size_of_dtoa 0480  
                         __size_of_nanf 0062                   __size_of_wait_lcd_set 0006  
                         __size_of_stoa 02BE                           __size_of_utoa 0340  
                         __size_of_xtoa 03BA                     dac_spi_control@init 0043  
                            _CRC_IsBusy DA88                    __CFG_WDTCWS$WDTCWS_7 000000  
                     ?_DMA1_DMASCNT_ISR 0021                   __end_of_init_port_dma D3AC  
                           _IVTLOCKbits 003FD4                __size_of_TMR5_WriteTimer 0040  
             _ADCC_ADI_InterruptHandler 00AE                               stoa@F1166 0100  
                    ??_DMA1_DMASCNT_ISR 0027            __end_of_ADCC_StartConversion DA68  
                              _spi_link 0060                                _wdtdelay CA92  
            __end_of_UART2_Transmit_ISR D4F0                                _spinners B2AC  
                              _vfprintf BC06                __end_of_convert_adc_data BAA2  
             __size_of_update_hist_data 005C              __end_of_PWM8_LoadDutyValue CFA6  
  __end_of_TMR3_DefaultInterruptHandler DB96   __size_of_TMR3_DefaultInterruptHandler 0002  
          _TMR3_DefaultInterruptHandler DB94    __end_of_INT1_DefaultInterruptHandler DB94  
 __size_of_INT1_DefaultInterruptHandler 0002            _INT1_DefaultInterruptHandler DB92  
                    _send_port_data_dma CBEE                           ??_Default_ISR 0021  
                           _uart1RxHead 0047                  __size_of_get_vterm_ptr 002E  
                           _uart2RxHead 0044                             _uart1RxTail 00D4  
                        _get_raw_result D86E                             _NVMCON1bits 0039E5  
                           _uart2TxHead 00D2                             _uart2RxTail 00D1  
                             spinners@s 0074                             _uart2TxTail 0046  
             __size_of_cal_current_zero 0092                            _wait_lcd_set DB78  
                    _EXT_INT_Initialize D316    __end_of_TMR6_DefaultInterruptHandler CD2A  
 __size_of_TMR6_DefaultInterruptHandler 004E            _TMR6_DefaultInterruptHandler CCDC  
                     _send_lcd_data_dma CD2A    __end_of_ADCC_DefaultInterruptHandler DB9A  
 __size_of_ADCC_DefaultInterruptHandler 0002            _ADCC_DefaultInterruptHandler DB98  
                              intlevel1 0000                                intlevel2 0000  
                     _send_lcd_cmd_long CFA6          __size_of_set_temp_display_help 0010  
         __end_of_set_temp_display_help DAA8                   __end_of_calc_ror_data 9B92  
                     __CFG_CLKOUTEN$OFF 000000              __end_of_eaDogM_WriteString BEAA  
                 __end_of_mode_lamp_dim D9D6                 __end_of_adc_int_handler DB9C  
              __size_of_convert_dac_raw 0118                  __size_of_INT0_CallBack 0024  
                            _SPI1SCKPPS 003ADE                              _SPI1SDIPPS 003ADF  
                __size_of_INT1_CallBack 0024                      __end_of_update_lcd AFAA  
                _uart2TxBufferRemaining 0045                      __end_of_static_soc CA92  
                    __end_of_start_bsoc D8B2                          _FVR_Initialize DB64  
                __end_of_get_raw_result D890                        _send_lcd_cmd_dma D910  
                __size_of___fpclassifyf 0196                   TMR5_ISR@CountCallBack 00C6  
      __end_of_INT1_SetInterruptHandler D682               __size_of_UART1_Initialize 0048  
              __size_of_dac_spi_control 007A               __end_of_send_lcd_data_dma CD74  
                      ??_DMA1_DMAOR_ISR 0027                 _CRC_CalculatedResultGet 9D12  
             __end_of_send_lcd_cmd_long CFE6                 __size_of_start_adc_scan 0064  
                   __end_of_Default_ISR DB92          __end_of_PIN_MANAGER_Initialize C230  
             __size_of_mode_lamp_bright 000E                      __end_of_vterm_dump A910  
               _eaDogM_WriteStringAtPos BD5C                           _get_vterm_ptr D43C  
                        _check_adc_scan DB44               __size_of_UART2_Initialize 0060  
