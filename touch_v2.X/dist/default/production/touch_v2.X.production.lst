

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Mon Feb 17 04:26:51 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBIGRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    21                           	psect	dataBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    22                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    23                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    24                           	psect	text0,global,reloc=2,class=CODE,delta=1
    25                           	psect	text1,global,reloc=2,class=CODE,delta=1
    26                           	psect	text2,global,reloc=2,class=CODE,delta=1
    27                           	psect	text3,global,reloc=2,class=CODE,delta=1
    28                           	psect	text4,global,reloc=2,class=CODE,delta=1
    29                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text6,global,reloc=2,class=CODE,delta=1
    31                           	psect	text7,global,reloc=2,class=CODE,delta=1
    32                           	psect	text8,global,reloc=2,class=CODE,delta=1
    33                           	psect	text9,global,reloc=2,class=CODE,delta=1
    34                           	psect	text10,global,reloc=2,class=CODE,delta=1
    35                           	psect	text11,global,reloc=2,class=CODE,delta=1
    36                           	psect	text12,global,reloc=2,class=CODE,delta=1
    37                           	psect	text13,global,reloc=2,class=CODE,delta=1
    38                           	psect	text14,global,reloc=2,class=CODE,delta=1
    39                           	psect	text15,global,reloc=2,class=CODE,delta=1
    40                           	psect	text16,global,reloc=2,class=CODE,delta=1
    41                           	psect	text17,global,reloc=2,class=CODE,delta=1
    42                           	psect	text18,global,reloc=2,class=CODE,delta=1
    43                           	psect	text19,global,reloc=2,class=CODE,delta=1
    44                           	psect	text20,global,reloc=2,class=CODE,delta=1
    45                           	psect	text21,global,reloc=2,class=CODE,delta=1
    46                           	psect	text22,global,reloc=2,class=CODE,delta=1
    47                           	psect	text23,global,reloc=2,class=CODE,delta=1
    48                           	psect	text24,global,reloc=2,class=CODE,delta=1
    49                           	psect	text25,global,reloc=2,class=CODE,delta=1
    50                           	psect	text26,global,reloc=2,class=CODE,delta=1
    51                           	psect	text27,global,reloc=2,class=CODE,delta=1
    52                           	psect	text28,global,reloc=2,class=CODE,delta=1
    53                           	psect	text29,global,reloc=2,class=CODE,delta=1
    54                           	psect	text30,global,reloc=2,class=CODE,delta=1
    55                           	psect	text31,global,reloc=2,class=CODE,delta=1
    56                           	psect	text32,global,reloc=2,class=CODE,delta=1
    57                           	psect	text33,global,reloc=2,class=CODE,delta=1
    58                           	psect	text34,global,reloc=2,class=CODE,delta=1
    59                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    61                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    64                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    66                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    69                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    70                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    71                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    72                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    73                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    74                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=1
    75                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=1
    76                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=1
    77                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=1
    78                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=2
    79                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=2
    80                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=1
    81                           	psect	text57,global,reloc=2,class=CODE,delta=1
    82                           	psect	text58,global,reloc=2,class=CODE,delta=1
    83                           	psect	text59,global,reloc=2,class=CODE,delta=1
    84                           	psect	text60,global,reloc=2,class=CODE,delta=1
    85                           	psect	text61,global,reloc=2,class=CODE,delta=1
    86                           	psect	text62,global,reloc=2,class=CODE,delta=1
    87                           	psect	text63,global,reloc=2,class=CODE,delta=1
    88                           	psect	text64,global,reloc=2,class=CODE,delta=1
    89                           	psect	text65,global,reloc=2,class=CODE,delta=1
    90                           	psect	text66,global,reloc=2,class=CODE,delta=1
    91                           	psect	text67,global,reloc=2,class=CODE,delta=1
    92                           	psect	text68,global,reloc=2,class=CODE,delta=1
    93                           	psect	text69,global,reloc=2,class=CODE,delta=1
    94                           	psect	text70,global,reloc=2,class=CODE,delta=1
    95                           	psect	text71,global,reloc=2,class=CODE,delta=1
    96                           	psect	text72,global,reloc=2,class=CODE,delta=1
    97                           	psect	text73,global,reloc=2,class=CODE,delta=1
    98                           	psect	text74,global,reloc=2,class=CODE,delta=1
    99                           	psect	text75,global,reloc=2,class=CODE,delta=1
   100                           	psect	text76,global,reloc=2,class=CODE,delta=1
   101                           	psect	text77,global,reloc=2,class=CODE,delta=1,group=2
   102                           	psect	text78,global,reloc=2,class=CODE,delta=1
   103                           	psect	text79,global,reloc=2,class=CODE,delta=1
   104                           	psect	text80,global,reloc=2,class=CODE,delta=1
   105                           	psect	text81,global,reloc=2,class=CODE,delta=1
   106                           	psect	text82,global,reloc=2,class=CODE,delta=1
   107                           	psect	text83,global,reloc=2,class=CODE,delta=1
   108                           	psect	text84,global,reloc=2,class=CODE,delta=1
   109                           	psect	text85,global,reloc=2,class=CODE,delta=1
   110                           	psect	text86,global,reloc=2,class=CODE,delta=1
   111                           	psect	text87,global,reloc=2,class=CODE,delta=1
   112                           	psect	text88,global,reloc=2,class=CODE,delta=1
   113                           	psect	text89,global,reloc=2,class=CODE,delta=1
   114                           	psect	text90,global,reloc=2,class=CODE,delta=1,group=2
   115                           	psect	text91,global,reloc=2,class=CODE,delta=1,group=2
   116                           	psect	text92,global,reloc=2,class=CODE,delta=1
   117                           	psect	text93,global,reloc=2,class=CODE,delta=1
   118                           	psect	text94,global,reloc=2,class=CODE,delta=1
   119                           	psect	text95,global,reloc=2,class=CODE,delta=1,group=2
   120                           	psect	text96,global,reloc=2,class=CODE,delta=1,group=2
   121                           	psect	text97,global,reloc=2,class=CODE,delta=1,group=2
   122                           	psect	text98,global,reloc=2,class=CODE,delta=1
   123                           	psect	text99,global,reloc=2,class=CODE,delta=1,group=1
   124                           	psect	text100,global,reloc=2,class=CODE,delta=1,group=1
   125                           	psect	text101,global,reloc=2,class=CODE,delta=1,group=2
   126                           	psect	text102,global,reloc=2,class=CODE,delta=1
   127                           	psect	text103,global,reloc=2,class=CODE,delta=1
   128                           	psect	text104,global,reloc=2,class=CODE,delta=1,group=2
   129                           	psect	text105,global,reloc=2,class=CODE,delta=1,group=2
   130                           	psect	text106,global,reloc=2,class=CODE,delta=1,group=2
   131                           	psect	text107,global,reloc=2,class=CODE,delta=1,group=2
   132                           	psect	text108,global,reloc=2,class=CODE,delta=1,group=2
   133                           	psect	text109,global,reloc=2,class=CODE,delta=1,group=1
   134                           	psect	text110,global,reloc=2,class=CODE,delta=1,group=1
   135                           	psect	text111,global,reloc=2,class=CODE,delta=1,group=1
   136                           	psect	text112,global,reloc=2,class=CODE,delta=1,group=1
   137                           	psect	text113,global,reloc=2,class=CODE,delta=1,group=1
   138                           	psect	text114,global,reloc=2,class=CODE,delta=1
   139                           	psect	text115,global,reloc=2,class=CODE,delta=1,group=2
   140                           	psect	text116,global,reloc=2,class=CODE,delta=1,group=1
   141                           	psect	text117,global,reloc=2,class=CODE,delta=1,group=1
   142                           	psect	text118,global,reloc=2,class=CODE,delta=1
   143                           	psect	text119,global,reloc=2,class=CODE,delta=1
   144                           	psect	text120,global,reloc=2,class=CODE,delta=1,group=2
   145                           	psect	text121,global,reloc=2,class=CODE,delta=1,group=2
   146                           	psect	text122,global,reloc=2,class=CODE,delta=1,group=2
   147                           	psect	text123,global,reloc=2,class=CODE,delta=1
   148                           	psect	text124,global,reloc=2,class=CODE,delta=1
   149                           	psect	text125,global,reloc=2,class=CODE,delta=1,group=2
   150                           	psect	text126,global,reloc=2,class=CODE,delta=1,group=2
   151                           	psect	text127,global,reloc=2,class=CODE,delta=1,group=2
   152                           	psect	text128,global,reloc=2,class=CODE,delta=1
   153                           	psect	text129,global,reloc=2,class=CODE,delta=1
   154                           	psect	text130,global,reloc=2,class=CODE,delta=1
   155                           	psect	text131,global,reloc=2,class=CODE,delta=1
   156                           	psect	text132,global,reloc=2,class=CODE,delta=1
   157                           	psect	text133,global,reloc=2,class=CODE,delta=1
   158                           	psect	text134,global,reloc=2,class=CODE,delta=1
   159                           	psect	text135,global,reloc=2,class=CODE,delta=1
   160                           	psect	text136,global,reloc=2,class=CODE,delta=1
   161                           	psect	text137,global,reloc=2,class=CODE,delta=1,inline
   162                           	psect	text138,global,reloc=2,class=CODE,delta=1,inline
   163                           	psect	text139,global,reloc=2,class=CODE,delta=1
   164                           	psect	text140,global,reloc=2,class=CODE,delta=1
   165                           	psect	text141,global,reloc=2,class=CODE,delta=1,group=2
   166                           	psect	text142,global,reloc=2,class=CODE,delta=1
   167                           	psect	text143,global,reloc=2,class=CODE,delta=1,group=2
   168                           	psect	text144,global,reloc=2,class=CODE,delta=1
   169                           	psect	text145,global,reloc=2,class=CODE,delta=1,group=1
   170                           	psect	text146,global,reloc=2,class=CODE,delta=1,group=1
   171                           	psect	text147,global,reloc=2,class=CODE,delta=1,group=1
   172                           	psect	text148,global,reloc=2,class=CODE,delta=1
   173                           	psect	text149,global,reloc=2,class=CODE,delta=1
   174                           	psect	text150,global,reloc=2,class=CODE,delta=1
   175                           	psect	text151,global,reloc=2,class=CODE,delta=1
   176                           	psect	text152,global,reloc=2,class=CODE,delta=1,group=1
   177                           	psect	text153,global,reloc=2,class=CODE,delta=1,group=1
   178                           	psect	text154,global,reloc=2,class=CODE,delta=1,group=1
   179                           	psect	text155,global,reloc=2,class=CODE,delta=1
   180                           	psect	text156,global,reloc=2,class=CODE,delta=1
   181                           	psect	text157,global,reloc=2,class=CODE,delta=1
   182                           	psect	text158,global,reloc=2,class=CODE,delta=1
   183                           	psect	text159,global,reloc=2,class=CODE,delta=1
   184                           	psect	text160,global,reloc=2,class=CODE,delta=1
   185                           	psect	text161,global,reloc=2,class=CODE,delta=1
   186                           	psect	text162,global,reloc=2,class=CODE,delta=1
   187                           	psect	text163,global,reloc=2,class=CODE,delta=1
   188                           	psect	text164,global,reloc=2,class=CODE,delta=1
   189                           	psect	text165,global,reloc=2,class=CODE,delta=1
   190                           	psect	text166,global,reloc=2,class=CODE,delta=1
   191                           	psect	text167,global,reloc=2,class=CODE,delta=1
   192                           	psect	text168,global,reloc=2,class=CODE,delta=1
   193                           	psect	text169,global,reloc=2,class=CODE,delta=1
   194                           	psect	text170,global,reloc=2,class=CODE,delta=1
   195                           	psect	text171,global,reloc=2,class=CODE,delta=1
   196                           	psect	text172,global,reloc=2,class=CODE,delta=1
   197                           	psect	text173,global,reloc=2,class=CODE,delta=1
   198                           	psect	text174,global,reloc=2,class=CODE,delta=1
   199                           	psect	text175,global,reloc=2,class=CODE,delta=1
   200                           	psect	text176,global,reloc=2,class=CODE,delta=1
   201                           	psect	text177,global,reloc=2,class=CODE,delta=1
   202                           	psect	text178,global,reloc=2,class=CODE,delta=1
   203                           	psect	text179,global,reloc=2,class=CODE,delta=1
   204                           	psect	text180,global,reloc=2,class=CODE,delta=1
   205                           	psect	text181,global,reloc=2,class=CODE,delta=1
   206                           	psect	text182,global,reloc=2,class=CODE,delta=1
   207                           	psect	text183,global,reloc=2,class=CODE,delta=1
   208                           	psect	text184,global,reloc=2,class=CODE,delta=1
   209                           	psect	text185,global,reloc=4,class=CODE,delta=1
   210                           	psect	text186,global,reloc=2,class=CODE,delta=1
   211                           	psect	text187,global,reloc=2,class=CODE,delta=1
   212                           	psect	text188,global,reloc=2,class=CODE,delta=1
   213                           	psect	text189,global,reloc=4,class=CODE,delta=1
   214                           	psect	text190,global,reloc=2,class=CODE,delta=1
   215                           	psect	text191,global,reloc=2,class=CODE,delta=1
   216                           	psect	text192,global,reloc=2,class=CODE,delta=1
   217                           	psect	text193,global,reloc=2,class=CODE,delta=1
   218                           	psect	text194,global,reloc=2,class=CODE,delta=1
   219                           	psect	text195,global,reloc=2,class=CODE,delta=1
   220                           	psect	text196,global,reloc=4,class=CODE,delta=1
   221                           	psect	text197,global,reloc=2,class=CODE,delta=1
   222                           	psect	text198,global,reloc=2,class=CODE,delta=1
   223                           	psect	text199,global,reloc=2,class=CODE,delta=1
   224                           	psect	text200,global,reloc=2,class=CODE,delta=1
   225                           	psect	text201,global,reloc=2,class=CODE,delta=1
   226                           	psect	text202,global,reloc=2,class=CODE,delta=1
   227                           	psect	text203,global,reloc=2,class=CODE,delta=1,group=1
   228                           	psect	text204,global,reloc=4,class=CODE,delta=1
   229                           	psect	text205,global,reloc=2,class=CODE,delta=1
   230                           	psect	text206,global,reloc=2,class=CODE,delta=1
   231                           	psect	text207,global,reloc=4,class=CODE,delta=1
   232                           	psect	text208,global,reloc=4,class=CODE,delta=1
   233                           	psect	text209,global,reloc=2,class=CODE,delta=1
   234                           	psect	text210,global,reloc=2,class=CODE,delta=1
   235                           	psect	text211,global,reloc=2,class=CODE,delta=1
   236                           	psect	text212,global,reloc=4,class=CODE,delta=1
   237                           	psect	text213,global,reloc=4,class=CODE,delta=1
   238                           	psect	text214,global,reloc=2,class=CODE,delta=1
   239                           	psect	text215,global,reloc=4,class=CODE,delta=1
   240                           	psect	text216,global,reloc=2,class=CODE,delta=1
   241                           	psect	text217,global,reloc=4,class=CODE,delta=1
   242                           	psect	text218,global,reloc=2,class=CODE,delta=1
   243                           	psect	text219,global,reloc=4,class=CODE,delta=1
   244                           	psect	text220,global,reloc=2,class=CODE,delta=1
   245                           	psect	text221,global,reloc=2,class=CODE,delta=1
   246                           	psect	text222,global,reloc=4,class=CODE,delta=1
   247                           	psect	text223,global,reloc=4,class=CODE,delta=1
   248                           	psect	text224,global,reloc=4,class=CODE,delta=1
   249                           	psect	text225,global,reloc=4,class=CODE,delta=1
   250                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   251                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   252                           	psect	text226,global,reloc=4,class=CODE,delta=1
   253                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   254                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   255  0000                     
   256                           ; Version 2.10
   257                           ; Generated 31/07/2019 GMT
   258                           ; 
   259                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   260                           ; All rights reserved.
   261                           ; 
   262                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   263                           ; 
   264                           ; Redistribution and use in source and binary forms, with or without modification, are
   265                           ; permitted provided that the following conditions are met:
   266                           ; 
   267                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   268                           ;        conditions and the following disclaimer.
   269                           ; 
   270                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   271                           ;        of conditions and the following disclaimer in the documentation and/or other
   272                           ;        materials provided with the distribution.
   273                           ; 
   274                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   275                           ;        software without specific prior written permission.
   276                           ; 
   277                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   278                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   279                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   280                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   281                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   282                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   283                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   284                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   285                           ; 
   286                           ; 
   287                           ; Code-generator required, PIC18F57K42 Definitions
   288                           ; 
   289                           ; SFR Addresses
   290  0000                     
   291 ;;_main$4035	offset	0
   292 ;;_main$4031	offset	2
   293 ;;_esr_temp	offset	4
   294 ;;_i_esr	offset	8
   295 ;;_shape	offset	10
   296 ;;_inp_index	offset	11
   297 ;;_k	offset	12
   298 ;;_j	offset	13
   299 ;;_i	offset	14
   300 ;;_mode	offset	15
   301 ;;_i_ror	offset	16
   302 ;;_mode	offset=-1 (param)
   303 ;;_hist	offset=-3 (param)
   304 ;;_s	offset=-2 (param)
   305 ;;_t	offset=-8 (param)
   306 ;;_voltage	offset=-4 (param)
   307 ;;_voltage	offset=-4 (param)
   308 ;;_voltage	offset=-4 (param)
   309 ;;_set	offset=-1 (param)
   310 ;;_x	offset	0
   311 ;;_r_cal_ptr	offset	2
   312 ;;_y	offset	4
   313 ;;_crcVal_save	offset	6
   314 ;;_bAdd	offset=-2 (param)
   315 ;;_esr_rescale	offset	0
   316 ;;_data	offset=-1 (param)
   317 ;;_cmd	offset=-1 (param)
   318 ;;_cmd	offset=-1 (param)
   319 ;;_data	offset=-1 (param)
   320 ;;__this	offset=-2 (param)
   321 ;;_soc	offset	0
   322 ;;_slot	offset	2
   323 ;;_cvoltage	offset=-4 (param)
   324 ;;_h	offset=-2 (param)
   325 ;;_h	offset=-2 (param)
   326 ;;_fsm	offset=-1 (param)
   327 ;;_mode	offset=-1 (param)
   328 ;;_mode	offset=-1 (param)
   329 ;;_cmd	offset=-1 (param)
   330 ;;_t	offset=-8 (param)
   331 ;;_t	offset=-1 (param)
   332 ;;_t	offset=-1 (param)
   333 ;;_tm	offset=-3 (param)
   334 ;;_y	offset	0
   335 ;;_t1	offset	8
   336 ;;_t0	offset	16
   337 ;;_t	offset=-8 (param)
   338 ;;_local	offset=-10 (param)
   339 ;;_isdst	offset=-12 (param)
   340 ;;_offset	offset=-14 (param)
   341 ;;_oppoff	offset=-16 (param)
   342 ;;_zonename	offset=-18 (param)
   343 ;;_t	offset=-8 (param)
   344 ;;_local	offset=-10 (param)
   345 ;;_alt	offset=-12 (param)
   346 ;;_z	offset=-2 (param)
   347 ;;_days	offset	0
   348 ;;_wday	offset	2
   349 ;;_t	offset	4
   350 ;;_is_leap	offset	12
   351 ;;_n	offset	14
   352 ;;_x	offset	16
   353 ;;_m	offset	18
   354 ;;_d	offset	20
   355 ;;_rule	offset=-6 (param)
   356 ;;_year	offset=-8 (param)
   357 ;;_m	offset=-2 (param)
   358 ;;_is_leap	offset=-4 (param)
   359 ;;_y	offset	0
   360 ;;_leaps	offset	2
   361 ;;_rem	offset	4
   362 ;;F5	offset	6
   363 ;;_centuries	offset	8
   364 ;;_leaps	offset	10
   365 ;;_cycles	offset	12
   366 ;;_year	offset=-8 (param)
   367 ;;_is_leap	offset=-10 (param)
   368 ;;_t	offset	0
   369 ;;_month	offset=-2 (param)
   370 ;;_is_leap	offset=-4 (param)
   371 ;;_s	offset	0
   372 ;;_r	offset	0
   373 ;;_p	offset=-2 (param)
   374 ;;_rule	offset=-4 (param)
   375 ;;_off	offset	0
   376 ;;_neg	offset	2
   377 ;;_p	offset=-2 (param)
   378 ;;_x	offset	0
   379 ;;_p	offset=-2 (param)
   380 ;;_i	offset	0
   381 ;;_d	offset=-2 (param)
   382 ;;_p	offset=-4 (param)
   383 ;;___secs_to_tm$7621	offset	0
   384 ;;_years	offset	1
   385 ;;_days	offset	9
   386 ;;_secs	offset	17
   387 ;;_remdays	offset	25
   388 ;;_q_cycles	offset	29
   389 ;;_c_cycles	offset	33
   390 ;;_remyears	offset	37
   391 ;;_remsecs	offset	41
   392 ;;_qc_cycles	offset	45
   393 ;;_months	offset	49
   394 ;;_leap	offset	51
   395 ;;_yday	offset	53
   396 ;;_wday	offset	55
   397 ;;_t	offset=-8 (param)
   398 ;;_tm	offset=-10 (param)
   399 ;;_product	offset	0
   400 ;;_multiplier	offset=-8 (param)
   401 ;;_multiplicand	offset=-16 (param)
   402 ;;_product	offset	0
   403 ;;_multiplier	offset=-4 (param)
   404 ;;_multiplicand	offset=-8 (param)
   405 ;;_sign	offset	0
   406 ;;_counter	offset	1
   407 ;;_dividend	offset=-4 (param)
   408 ;;_divisor	offset=-8 (param)
   409 ;;_quotient	offset	0
   410 ;;_sign	offset	4
   411 ;;_counter	offset	5
   412 ;;_dividend	offset=-4 (param)
   413 ;;_divisor	offset=-8 (param)
   414 ;;_cp	offset	0
   415 ;;_s	offset	2
   416 ;;_tim	offset=-2 (param)
   417 ;;_cp	offset=-2 (param)
   418 ;;_i	offset=-3 (param)
   419 ;;_cl	offset=-4 (param)
   420 ;;_ct	offset=-5 (param)
   421 ;;_rem	offset	0
   422 ;;_counter	offset	1
   423 ;;_dividend	offset=-1 (param)
   424 ;;_divisor	offset=-2 (param)
   425 ;;_cp	offset	0
   426 ;;_cb	offset	4
   427 ;;_x	offset	8
   428 ;;_x	offset	0
   429 ;;_r_cal_ptr	offset	2
   430 ;;_y	offset	4
   431 ;;_crcVal	offset	6
   432 ;;_GIEBitValue	offset	0
   433 ;;_bAdd	offset=-2 (param)
   434 ;;_bData	offset=-3 (param)
   435 ;;_result	offset	0
   436 ;;_mask	offset	2
   437 ;;_reverse	offset=-1 (param)
   438 ;;_xorValue	offset=-3 (param)
   439 ;;_mask	offset	0
   440 ;;_reverse	offset	2
   441 ;;_crc	offset=-2 (param)
   442 ;;_data	offset=-1 (param)
   443 ;;_channel	offset=-1 (param)
   444 ;;_c	offset	0
   445 ;;_shape	offset=-1 (param)
   446 ;;_reset	offset=-2 (param)
   447 ;;_i	offset=-1 (param)
   448 ;;_mode	offset=-1 (param)
   449 ;;_cb	offset=-3 (param)
   450 ;;_cp	offset=-5 (param)
   451 ;;_value	offset=-2 (param)
   452 ;;_window	offset=-4 (param)
   453 ;;_standard	offset=-6 (param)
   454 ;;_i	offset	0
   455 ;;_h	offset=-2 (param)
   456 ;;_flipper	offset=-1 (param)
   457 ;;_f	offset	0
   458 ;;_ap	offset	6
   459 ;;_s	offset=-3 (param)
   460 ;;_fmt	offset=-5 (param)
   461 ;;_line	offset=-1 (param)
   462 ;;_vterm	offset=-2 (param)
   463 ;;_numMilliseconds	offset=-2 (param)
   464 ;;_vterm	offset=-1 (param)
   465 ;;_row	offset	0
   466 ;;_r	offset=-1 (param)
   467 ;;_c	offset=-2 (param)
   468 ;;_strPtr	offset=-4 (param)
   469 ;;_strPtr	offset=-1 (param)
   470 ;;_delay	offset=-4 (param)
   471 ;;_strPtr	offset=-1 (param)
   472 ;;_strPtr	offset=-2 (param)
   473 ;;__this	offset=-2 (param)
   474 ;;_clearBuffer	offset=-3 (param)
   475 ;;_s	offset	0
   476 ;;_k	offset	2
   477 ;;_dest	offset=-2 (param)
   478 ;;_c	offset=-4 (param)
   479 ;;_n	offset=-6 (param)
   480 ;;_ap	offset	0
   481 ;;_fmt	offset=-3 (param)
   482 ;;_cfmt	offset	0
   483 ;;_fp	offset=-2 (param)
   484 ;;_fmt	offset=-4 (param)
   485 ;;_ap	offset=-6 (param)
   486 ;;_vfpfcnvrt$6662	offset	0
   487 ;;_vfpfcnvrt$6673	offset	2
   488 ;;_vfpfcnvrt$6661	offset	4
   489 ;;_llu	offset	6
   490 ;;_ll	offset	14
   491 ;;_f	offset	22
   492 ;;_ct	offset	26
   493 ;;_cp	offset	29
   494 ;;_c	offset	31
   495 ;;_fp	offset=-2 (param)
   496 ;;_fmt	offset=-4 (param)
   497 ;;_ap	offset=-6 (param)
   498 ;;_xtoa$6647	offset	0
   499 ;;_xtoa$6646	offset	2
   500 ;;_n	offset	4
   501 ;;_c	offset	12
   502 ;;_i	offset	14
   503 ;;_w	offset	16
   504 ;;_p	offset	18
   505 ;;_fp	offset=-2 (param)
   506 ;;_d	offset=-10 (param)
   507 ;;_x	offset=-11 (param)
   508 ;;_toupper$7588	offset	0
   509 ;;_c	offset=-2 (param)
   510 ;;_c	offset=-2 (param)
   511 ;;_c	offset=-2 (param)
   512 ;;_n	offset	0
   513 ;;_i	offset	8
   514 ;;_w	offset	10
   515 ;;_p	offset	12
   516 ;;_fp	offset=-2 (param)
   517 ;;_d	offset=-10 (param)
   518 ;;_counter	offset	0
   519 ;;_dividend	offset=-8 (param)
   520 ;;_divisor	offset=-16 (param)
   521 ;;_quotient	offset	0
   522 ;;_counter	offset	8
   523 ;;_dividend	offset=-8 (param)
   524 ;;_divisor	offset=-16 (param)
   525 ;;_r	offset	0
   526 ;;_l	offset	2
   527 ;;__l	offset=-2 (param)
   528 ;;__r	offset=-4 (param)
   529 ;;_n	offset=-6 (param)
   530 ;;_nuls	offset	0
   531 ;;_l	offset	7
   532 ;;_p	offset	9
   533 ;;_cp	offset	11
   534 ;;_w	offset	13
   535 ;;_i	offset	15
   536 ;;_fp	offset=-2 (param)
   537 ;;_s	offset=-4 (param)
   538 ;;_efgtoa$6619	offset	0
   539 ;;_efgtoa$6618	offset	2
   540 ;;_efgtoa$6617	offset	4
   541 ;;_efgtoa$6613	offset	6
   542 ;;_efgtoa$6609	offset	8
   543 ;;_efgtoa$6608	offset	10
   544 ;;_u	offset	12
   545 ;;_g	offset	16
   546 ;;_l	offset	20
   547 ;;_h	offset	24
   548 ;;_ou	offset	28
   549 ;;_n	offset	32
   550 ;;_e	offset	34
   551 ;;_i	offset	36
   552 ;;_w	offset	38
   553 ;;_p	offset	40
   554 ;;_sign	offset	42
   555 ;;_d	offset	44
   556 ;;_ne	offset	46
   557 ;;_m	offset	48
   558 ;;_pp	offset	50
   559 ;;_t	offset	52
   560 ;;_mode	offset	54
   561 ;;_nmode	offset	55
   562 ;;_fp	offset=-2 (param)
   563 ;;_f	offset=-6 (param)
   564 ;;_c	offset=-7 (param)
   565 ;;_tolower$7573	offset	0
   566 ;;_c	offset=-2 (param)
   567 ;;_c	offset=-2 (param)
   568 ;;_d	offset	0
   569 ;;_s	offset	2
   570 ;;_dest	offset=-2 (param)
   571 ;;_src	offset=-4 (param)
   572 ;;_u	offset	0
   573 ;;_m	offset	4
   574 ;;_e	offset	8
   575 ;;_x	offset=-4 (param)
   576 ;;_u	offset	0
   577 ;;_e	offset	4
   578 ;;_x	offset=-4 (param)
   579 ;;_exp1	offset	0
   580 ;;_sign1	offset	1
   581 ;;_f1	offset=-4 (param)
   582 ;;_f1	offset=-4 (param)
   583 ;;_ff1	offset=-4 (param)
   584 ;;_ff2	offset=-8 (param)
   585 ;;_sign	offset	0
   586 ;;_counter	offset	1
   587 ;;_dividend	offset=-2 (param)
   588 ;;_divisor	offset=-4 (param)
   589 ;;_quotient	offset	0
   590 ;;_sign	offset	2
   591 ;;_counter	offset	3
   592 ;;_dividend	offset=-2 (param)
   593 ;;_divisor	offset=-4 (param)
   594 ;;_dtoa$6585	offset	0
   595 ;;_n	offset	2
   596 ;;_i	offset	10
   597 ;;_s	offset	12
   598 ;;_w	offset	14
   599 ;;_p	offset	16
   600 ;;_fp	offset=-2 (param)
   601 ;;_d	offset=-10 (param)
   602 ;;_a	offset=-2 (param)
   603 ;;_sign	offset	0
   604 ;;_counter	offset	1
   605 ;;_dividend	offset=-8 (param)
   606 ;;_divisor	offset=-16 (param)
   607 ;;_quotient	offset	0
   608 ;;_sign	offset	8
   609 ;;_counter	offset	9
   610 ;;_dividend	offset=-8 (param)
   611 ;;_divisor	offset=-16 (param)
   612 ;;_w	offset	0
   613 ;;_fp	offset=-2 (param)
   614 ;;_c	offset=-3 (param)
   615 ;;_w	offset	0
   616 ;;_i	offset	2
   617 ;;_fp	offset=-2 (param)
   618 ;;_buf	offset=-4 (param)
   619 ;;_p	offset=-6 (param)
   620 ;;_a	offset	0
   621 ;;_s	offset=-2 (param)
   622 ;;_i	offset	0
   623 ;;_c	offset	2
   624 ;;_s	offset=-2 (param)
   625 ;;_fp	offset=-4 (param)
   626 ;;_c	offset=-2 (param)
   627 ;;_fp	offset=-4 (param)
   628 ;;_c	offset=-1 (param)
   629 ;;__this	offset=-2 (param)
   630 ;;_c	offset=-3 (param)
   631 ;;_atoi$7205	offset	0
   632 ;;_atoi$7203	offset	2
   633 ;;_atoi$7204	offset	4
   634 ;;_n	offset	5
   635 ;;_neg	offset	7
   636 ;;_s	offset=-2 (param)
   637 ;;_isspace$7254	offset	0
   638 ;;_c	offset=-2 (param)
   639 ;;_c	offset=-2 (param)
   640 ;;_vterm	offset=-1 (param)
   641 ;;_new_response_info	offset=-1 (param)
   642 ;;_new_response_info	offset=-1 (param)
   643 ;;_level	offset=-2 (param)
   644 ;;_dutyValue	offset=-2 (param)
   645 ;;_timer	offset=-1 (param)
   646 ;;_timer	offset=-1 (param)
   647 ;;_count	offset=-3 (param)
   648 ;;_h	offset=-2 (param)
   649 ;;_u	offset	0
   650 ;;_x	offset=-4 (param)
   651 ;;_chan	offset=-1 (param)
   652 ;;_to_what	offset=-2 (param)
   653 ;;_u	offset	0
   654 ;;_s	offset=-2 (param)
   655 ;;_index	offset=-1 (param)
   656 ;;_arg	offset	0
   657 ;;_exp	offset	4
   658 ;;_sign	offset=-1 (param)
   659 ;;_val	offset=-5 (param)
   660 ;;_grs	offset	0
   661 ;;_rem	offset	4
   662 ;;_new_exp	offset	8
   663 ;;_aexp	offset	10
   664 ;;_bexp	offset	11
   665 ;;_sign	offset	12
   666 ;;_b	offset=-4 (param)
   667 ;;_a	offset=-8 (param)
   668 ;;_ff1	offset=-4 (param)
   669 ;;_ff2	offset=-8 (param)
   670 ;;_lp_speed	offset	0
   671 ;;_new	offset=-4 (param)
   672 ;;_bn	offset=-5 (param)
   673 ;;_slow	offset=-6 (param)
   674 ;;_b	offset=-4 (param)
   675 ;;_a	offset=-8 (param)
   676 ;;_grs	offset	0
   677 ;;_bexp	offset	1
   678 ;;_aexp	offset	2
   679 ;;_signs	offset	3
   680 ;;_b	offset=-4 (param)
   681 ;;_a	offset=-8 (param)
   682 ;;_prod	offset	0
   683 ;;_grs	offset	4
   684 ;;_temp	offset	8
   685 ;;_bexp	offset	10
   686 ;;_aexp	offset	11
   687 ;;_sign	offset	12
   688 ;;_b	offset=-4 (param)
   689 ;;_a	offset=-8 (param)
   690 ;;_InterruptHandler	offset=-3 (param)
   691 ;;_InterruptHandler	offset=-3 (param)
   692 ;;_InterruptHandler	offset=-3 (param)
   693 ;;_InterruptHandler	offset=-3 (param)
   694 ;;_InterruptHandler	offset=-3 (param)
   695 ;;_InterruptHandler	offset=-3 (param)
   696 ;;_state	offset	0
   697 ;;_InterruptHandler	offset=-3 (param)
   698 ;;_InterruptHandler	offset=-3 (param)
   699 ;;_seed	offset	0
   700 ;;_poly	offset	2
   701 ;;_InterruptHandler	offset=-3 (param)
   702 ;;_InterruptHandler	offset=-3 (param)
   703 ;;_i	offset	0
   704 ;;_sw_value	offset	1
   705 ;;_timerVal	offset=-2 (param)
   706 ;;_light	offset	0
   707 ;;_t	offset=-8 (param)
   708 ;;_mode	offset=-1 (param)
   709 ;;_chan	offset=-1 (param)
   710 ;;_to_what	offset=-2 (param)
   711 ;;_u	offset	0
   712 ;;_s	offset=-2 (param)
   713 ;;_index	offset=-1 (param)
   714 ;;_arg	offset	0
   715 ;;_exp	offset	4
   716 ;;_sign	offset=-1 (param)
   717 ;;_val	offset=-5 (param)
   718 ;;_b	offset=-4 (param)
   719 ;;_a	offset=-8 (param)
   720 ;;_grs	offset	0
   721 ;;_bexp	offset	1
   722 ;;_aexp	offset	2
   723 ;;_signs	offset	3
   724 ;;_b	offset=-4 (param)
   725 ;;_a	offset=-8 (param)
   726 ;;_prod	offset	0
   727 ;;_grs	offset	4
   728 ;;_temp	offset	8
   729 ;;_bexp	offset	10
   730 ;;_aexp	offset	11
   731 ;;_sign	offset	12
   732 ;;_b	offset=-4 (param)
   733 ;;_a	offset=-8 (param)
   734 ;;_grs	offset	0
   735 ;;_rem	offset	4
   736 ;;_new_exp	offset	8
   737 ;;_aexp	offset	10
   738 ;;_bexp	offset	11
   739 ;;_sign	offset	12
   740 ;;_b	offset=-4 (param)
   741 ;;_a	offset=-8 (param)
   742 ;;_ff1	offset=-4 (param)
   743 ;;_ff2	offset=-8 (param)
   744 ;;_timerVal	offset=-2 (param)
   745 ;;_adj	offset	0
   746 ;;_log_ptr	offset	4
   747 ;;_f	offset	0
   748 ;;_ap	offset	6
   749 ;;_s	offset=-3 (param)
   750 ;;_fmt	offset=-5 (param)
   751 ;;_cfmt	offset	0
   752 ;;_fp	offset=-2 (param)
   753 ;;_fmt	offset=-4 (param)
   754 ;;_ap	offset=-6 (param)
   755 ;;_vfpfcnvrt$6662	offset	0
   756 ;;_vfpfcnvrt$6673	offset	2
   757 ;;_vfpfcnvrt$6661	offset	4
   758 ;;_llu	offset	6
   759 ;;_ll	offset	14
   760 ;;_f	offset	22
   761 ;;_ct	offset	26
   762 ;;_cp	offset	29
   763 ;;_c	offset	31
   764 ;;_fp	offset=-2 (param)
   765 ;;_fmt	offset=-4 (param)
   766 ;;_ap	offset=-6 (param)
   767 ;;_xtoa$6647	offset	0
   768 ;;_xtoa$6646	offset	2
   769 ;;_n	offset	4
   770 ;;_c	offset	12
   771 ;;_i	offset	14
   772 ;;_w	offset	16
   773 ;;_p	offset	18
   774 ;;_fp	offset=-2 (param)
   775 ;;_d	offset=-10 (param)
   776 ;;_x	offset=-11 (param)
   777 ;;_toupper$7588	offset	0
   778 ;;_c	offset=-2 (param)
   779 ;;_c	offset=-2 (param)
   780 ;;_c	offset=-2 (param)
   781 ;;_n	offset	0
   782 ;;_i	offset	8
   783 ;;_w	offset	10
   784 ;;_p	offset	12
   785 ;;_fp	offset=-2 (param)
   786 ;;_d	offset=-10 (param)
   787 ;;_counter	offset	0
   788 ;;_dividend	offset=-8 (param)
   789 ;;_divisor	offset=-16 (param)
   790 ;;_quotient	offset	0
   791 ;;_counter	offset	8
   792 ;;_dividend	offset=-8 (param)
   793 ;;_divisor	offset=-16 (param)
   794 ;;_r	offset	0
   795 ;;_l	offset	2
   796 ;;__l	offset=-2 (param)
   797 ;;__r	offset=-4 (param)
   798 ;;_n	offset=-6 (param)
   799 ;;_nuls	offset	0
   800 ;;_l	offset	7
   801 ;;_p	offset	9
   802 ;;_cp	offset	11
   803 ;;_w	offset	13
   804 ;;_i	offset	15
   805 ;;_fp	offset=-2 (param)
   806 ;;_s	offset=-4 (param)
   807 ;;_efgtoa$6619	offset	0
   808 ;;_efgtoa$6618	offset	2
   809 ;;_efgtoa$6617	offset	4
   810 ;;_efgtoa$6613	offset	6
   811 ;;_efgtoa$6609	offset	8
   812 ;;_efgtoa$6608	offset	10
   813 ;;_u	offset	12
   814 ;;_g	offset	16
   815 ;;_l	offset	20
   816 ;;_h	offset	24
   817 ;;_ou	offset	28
   818 ;;_n	offset	32
   819 ;;_e	offset	34
   820 ;;_i	offset	36
   821 ;;_w	offset	38
   822 ;;_p	offset	40
   823 ;;_sign	offset	42
   824 ;;_d	offset	44
   825 ;;_ne	offset	46
   826 ;;_m	offset	48
   827 ;;_pp	offset	50
   828 ;;_t	offset	52
   829 ;;_mode	offset	54
   830 ;;_nmode	offset	55
   831 ;;_fp	offset=-2 (param)
   832 ;;_f	offset=-6 (param)
   833 ;;_c	offset=-7 (param)
   834 ;;_tolower$7573	offset	0
   835 ;;_c	offset=-2 (param)
   836 ;;_c	offset=-2 (param)
   837 ;;_d	offset	0
   838 ;;_s	offset	2
   839 ;;_dest	offset=-2 (param)
   840 ;;_src	offset=-4 (param)
   841 ;;_u	offset	0
   842 ;;_m	offset	4
   843 ;;_e	offset	8
   844 ;;_x	offset=-4 (param)
   845 ;;_u	offset	0
   846 ;;_e	offset	4
   847 ;;_x	offset=-4 (param)
   848 ;;_exp1	offset	0
   849 ;;_sign1	offset	1
   850 ;;_f1	offset=-4 (param)
   851 ;;_f1	offset=-4 (param)
   852 ;;_ff1	offset=-4 (param)
   853 ;;_ff2	offset=-8 (param)
   854 ;;_sign	offset	0
   855 ;;_counter	offset	1
   856 ;;_dividend	offset=-2 (param)
   857 ;;_divisor	offset=-4 (param)
   858 ;;_quotient	offset	0
   859 ;;_sign	offset	2
   860 ;;_counter	offset	3
   861 ;;_dividend	offset=-2 (param)
   862 ;;_divisor	offset=-4 (param)
   863 ;;_dtoa$6585	offset	0
   864 ;;_n	offset	2
   865 ;;_i	offset	10
   866 ;;_s	offset	12
   867 ;;_w	offset	14
   868 ;;_p	offset	16
   869 ;;_fp	offset=-2 (param)
   870 ;;_d	offset=-10 (param)
   871 ;;_a	offset=-2 (param)
   872 ;;_sign	offset	0
   873 ;;_counter	offset	1
   874 ;;_dividend	offset=-8 (param)
   875 ;;_divisor	offset=-16 (param)
   876 ;;_quotient	offset	0
   877 ;;_sign	offset	8
   878 ;;_counter	offset	9
   879 ;;_dividend	offset=-8 (param)
   880 ;;_divisor	offset=-16 (param)
   881 ;;_w	offset	0
   882 ;;_fp	offset=-2 (param)
   883 ;;_c	offset=-3 (param)
   884 ;;_w	offset	0
   885 ;;_i	offset	2
   886 ;;_fp	offset=-2 (param)
   887 ;;_buf	offset=-4 (param)
   888 ;;_p	offset=-6 (param)
   889 ;;_a	offset	0
   890 ;;_s	offset=-2 (param)
   891 ;;_i	offset	0
   892 ;;_c	offset	2
   893 ;;_s	offset=-2 (param)
   894 ;;_fp	offset=-4 (param)
   895 ;;_c	offset=-2 (param)
   896 ;;_fp	offset=-4 (param)
   897 ;;_c	offset=-1 (param)
   898 ;;__this	offset=-2 (param)
   899 ;;_c	offset=-3 (param)
   900 ;;_atoi$7205	offset	0
   901 ;;_atoi$7203	offset	2
   902 ;;_atoi$7204	offset	4
   903 ;;_n	offset	5
   904 ;;_neg	offset	7
   905 ;;_s	offset=-2 (param)
   906 ;;_isspace$7254	offset	0
   907 ;;_c	offset=-2 (param)
   908 ;;_c	offset=-2 (param)
   909 ;;_dsize	offset=-2 (param)
   910 ;;_u	offset	0
   911 ;;_x	offset=-4 (param)
   912 ;;_f1p	offset=-2 (param)
   913 ;;_f2	offset=-6 (param)
   914 ;;_timer	offset=-1 (param)
   915 ;;_count	offset=-3 (param)
   916 ;;_channel	offset=-1 (param)
   917 ;;_i	offset	0
   918                           
   919                           	psect	idataBIGRAM
   920  01A270                     __pidataBIGRAM:
   921                           	opt callstack 0
   922                           
   923                           ;initializer for _port_data
   924  01A270  FF                 	db	255
   925  01A271  00                 	db	0
   926  01A272  FF                 	db	255
   927  01A273  00                 	db	0
   928  01A274  FF                 	db	255
   929  01A275  00                 	db	0
   930  01A276  FF                 	db	255
   931  01A277  00                 	db	0
   932  01A278  FF                 	db	255
   933  01A279  00                 	db	0
   934  01A27A  FF                 	db	255
   935  01A27B  00                 	db	0
   936  01A27C  FF                 	db	255
   937  01A27D  00                 	db	0
   938  01A27E  FF                 	db	255
   939  01A27F  00                 	db	0
   940  01A280  00                 	db	0
   941  01A281  00                 	db	0
   942  01A282  00                 	db	0
   943  01A283  00                 	db	0
   944  01A284  00                 	db	0
   945  01A285  00                 	db	0
   946  01A286  00                 	db	0
   947  01A287  00                 	db	0
   948  01A288  00                 	db	0
   949  01A289  00                 	db	0
   950  01A28A  00                 	db	0
   951  01A28B  00                 	db	0
   952  01A28C  00                 	db	0
   953  01A28D  00                 	db	0
   954  01A28E  00                 	db	0
   955  01A28F  00                 	db	0
   956  01A290  00                 	db	0
   957  01A291  00                 	db	0
   958  01A292  00                 	db	0
   959  01A293  00                 	db	0
   960  01A294  00                 	db	0
   961  01A295  00                 	db	0
   962  01A296  00                 	db	0
   963  01A297  00                 	db	0
   964  01A298  00                 	db	0
   965  01A299  00                 	db	0
   966  01A29A  00                 	db	0
   967  01A29B  00                 	db	0
   968  01A29C  00                 	db	0
   969  01A29D  00                 	db	0
   970  01A29E  00                 	db	0
   971  01A29F  00                 	db	0
   972  01A2A0  00                 	db	0
   973  01A2A1  00                 	db	0
   974  01A2A2  00                 	db	0
   975  01A2A3  00                 	db	0
   976  01A2A4  00                 	db	0
   977  01A2A5  00                 	db	0
   978  01A2A6  00                 	db	0
   979  01A2A7  00                 	db	0
   980  01A2A8  00                 	db	0
   981  01A2A9  00                 	db	0
   982  01A2AA  00                 	db	0
   983  01A2AB  00                 	db	0
   984  01A2AC  00                 	db	0
   985  01A2AD  00                 	db	0
   986  01A2AE  00                 	db	0
   987  01A2AF  00                 	db	0
   988  01A2B0  00                 	db	0
   989  01A2B1  00                 	db	0
   990  01A2B2  00                 	db	0
   991  01A2B3  00                 	db	0
   992  01A2B4  00                 	db	0
   993  01A2B5  00                 	db	0
   994  01A2B6  00                 	db	0
   995  01A2B7  00                 	db	0
   996  01A2B8  00                 	db	0
   997  01A2B9  00                 	db	0
   998  01A2BA  00                 	db	0
   999  01A2BB  00                 	db	0
  1000  01A2BC  00                 	db	0
  1001  01A2BD  00                 	db	0
  1002  01A2BE  00                 	db	0
  1003  01A2BF  00                 	db	0
  1004  01A2C0  00                 	db	0
  1005  01A2C1  00                 	db	0
  1006  01A2C2  00                 	db	0
  1007  01A2C3  00                 	db	0
  1008  01A2C4  00                 	db	0
  1009  01A2C5  00                 	db	0
  1010  01A2C6  00                 	db	0
  1011  01A2C7  00                 	db	0
  1012  01A2C8  00                 	db	0
  1013  01A2C9  00                 	db	0
  1014  01A2CA  00                 	db	0
  1015  01A2CB  00                 	db	0
  1016  01A2CC  00                 	db	0
  1017  01A2CD  00                 	db	0
  1018  01A2CE  00                 	db	0
  1019  01A2CF  00                 	db	0
  1020  01A2D0  00                 	db	0
  1021  01A2D1  00                 	db	0
  1022  01A2D2  00                 	db	0
  1023  01A2D3  00                 	db	0
  1024  01A2D4  00                 	db	0
  1025  01A2D5  00                 	db	0
  1026  01A2D6  00                 	db	0
  1027  01A2D7  00                 	db	0
  1028  01A2D8  00                 	db	0
  1029  01A2D9  00                 	db	0
  1030  01A2DA  00                 	db	0
  1031  01A2DB  00                 	db	0
  1032  01A2DC  00                 	db	0
  1033  01A2DD  00                 	db	0
  1034  01A2DE  00                 	db	0
  1035  01A2DF  00                 	db	0
  1036  01A2E0  00                 	db	0
  1037  01A2E1  00                 	db	0
  1038  01A2E2  00                 	db	0
  1039  01A2E3  00                 	db	0
  1040  01A2E4  00                 	db	0
  1041  01A2E5  00                 	db	0
  1042  01A2E6  00                 	db	0
  1043  01A2E7  00                 	db	0
  1044  01A2E8  00                 	db	0
  1045  01A2E9  00                 	db	0
  1046  01A2EA  00                 	db	0
  1047  01A2EB  00                 	db	0
  1048  01A2EC  00                 	db	0
  1049  01A2ED  00                 	db	0
  1050  01A2EE  00                 	db	0
  1051  01A2EF  00                 	db	0
  1052  01A2F0  00                 	db	0
  1053  01A2F1  00                 	db	0
  1054  01A2F2  00                 	db	0
  1055  01A2F3  00                 	db	0
  1056  01A2F4  00                 	db	0
  1057  01A2F5  00                 	db	0
  1058  01A2F6  00                 	db	0
  1059  01A2F7  00                 	db	0
  1060  01A2F8  00                 	db	0
  1061  01A2F9  00                 	db	0
  1062  01A2FA  00                 	db	0
  1063  01A2FB  00                 	db	0
  1064  01A2FC  00                 	db	0
  1065  01A2FD  00                 	db	0
  1066  01A2FE  00                 	db	0
  1067  01A2FF  00                 	db	0
  1068  01A300  00                 	db	0
  1069  01A301  00                 	db	0
  1070  01A302  00                 	db	0
  1071  01A303  00                 	db	0
  1072  01A304  00                 	db	0
  1073  01A305  00                 	db	0
  1074  01A306  00                 	db	0
  1075  01A307  00                 	db	0
  1076  01A308  00                 	db	0
  1077  01A309  00                 	db	0
  1078  01A30A  00                 	db	0
  1079  01A30B  00                 	db	0
  1080  01A30C  00                 	db	0
  1081  01A30D  00                 	db	0
  1082  01A30E  00                 	db	0
  1083  01A30F  00                 	db	0
  1084  01A310  00                 	db	0
  1085  01A311  00                 	db	0
  1086  01A312  00                 	db	0
  1087  01A313  00                 	db	0
  1088  01A314  00                 	db	0
  1089  01A315  00                 	db	0
  1090  01A316  00                 	db	0
  1091  01A317  00                 	db	0
  1092  01A318  00                 	db	0
  1093  01A319  00                 	db	0
  1094  01A31A  00                 	db	0
  1095  01A31B  00                 	db	0
  1096  01A31C  00                 	db	0
  1097  01A31D  00                 	db	0
  1098  01A31E  00                 	db	0
  1099  01A31F  00                 	db	0
  1100  01A320  00                 	db	0
  1101  01A321  00                 	db	0
  1102  01A322  00                 	db	0
  1103  01A323  00                 	db	0
  1104  01A324  00                 	db	0
  1105  01A325  00                 	db	0
  1106  01A326  00                 	db	0
  1107  01A327  00                 	db	0
  1108  01A328  00                 	db	0
  1109  01A329  00                 	db	0
  1110  01A32A  00                 	db	0
  1111  01A32B  00                 	db	0
  1112  01A32C  00                 	db	0
  1113  01A32D  00                 	db	0
  1114  01A32E  00                 	db	0
  1115  01A32F  00                 	db	0
  1116  01A330  00                 	db	0
  1117  01A331  00                 	db	0
  1118  01A332  00                 	db	0
  1119  01A333  00                 	db	0
  1120  01A334  00                 	db	0
  1121  01A335  00                 	db	0
  1122  01A336  00                 	db	0
  1123  01A337  00                 	db	0
  1124  01A338  00                 	db	0
  1125  01A339  00                 	db	0
  1126  01A33A  00                 	db	0
  1127  01A33B  00                 	db	0
  1128  01A33C  00                 	db	0
  1129  01A33D  00                 	db	0
  1130  01A33E  00                 	db	0
  1131  01A33F  00                 	db	0
  1132  01A340  00                 	db	0
  1133  01A341  00                 	db	0
  1134  01A342  00                 	db	0
  1135  01A343  00                 	db	0
  1136  01A344  00                 	db	0
  1137  01A345  00                 	db	0
  1138  01A346  00                 	db	0
  1139  01A347  00                 	db	0
  1140  01A348  00                 	db	0
  1141  01A349  00                 	db	0
  1142  01A34A  00                 	db	0
  1143  01A34B  00                 	db	0
  1144  01A34C  00                 	db	0
  1145  01A34D  00                 	db	0
  1146  01A34E  00                 	db	0
  1147  01A34F  00                 	db	0
  1148  01A350  00                 	db	0
  1149  01A351  00                 	db	0
  1150  01A352  00                 	db	0
  1151  01A353  00                 	db	0
  1152  01A354  00                 	db	0
  1153  01A355  00                 	db	0
  1154  01A356  00                 	db	0
  1155  01A357  00                 	db	0
  1156  01A358  00                 	db	0
  1157  01A359  00                 	db	0
  1158  01A35A  00                 	db	0
  1159  01A35B  00                 	db	0
  1160  01A35C  00                 	db	0
  1161  01A35D  00                 	db	0
  1162  01A35E  00                 	db	0
  1163  01A35F  00                 	db	0
  1164  01A360  00                 	db	0
  1165  01A361  00                 	db	0
  1166  01A362  00                 	db	0
  1167  01A363  00                 	db	0
  1168  01A364  00                 	db	0
  1169  01A365  00                 	db	0
  1170  01A366  00                 	db	0
  1171  01A367  00                 	db	0
  1172  01A368  00                 	db	0
  1173  01A369  00                 	db	0
  1174  01A36A  00                 	db	0
  1175  01A36B  00                 	db	0
  1176  01A36C  00                 	db	0
  1177  01A36D  00                 	db	0
  1178  01A36E  00                 	db	0
  1179  01A36F  00                 	db	0
  1180  01A370  00                 	db	0
  1181  01A371  00                 	db	0
  1182  01A372  00                 	db	0
  1183  01A373  00                 	db	0
  1184  01A374  00                 	db	0
  1185  01A375  00                 	db	0
  1186  01A376  00                 	db	0
  1187  01A377  00                 	db	0
  1188  01A378  00                 	db	0
  1189  01A379  00                 	db	0
  1190  01A37A  00                 	db	0
  1191  01A37B  00                 	db	0
  1192  01A37C  00                 	db	0
  1193  01A37D  00                 	db	0
  1194  01A37E  00                 	db	0
  1195  01A37F  00                 	db	0
  1196  01A380  00                 	db	0
  1197  01A381  00                 	db	0
  1198  01A382  00                 	db	0
  1199  01A383  00                 	db	0
  1200  01A384  00                 	db	0
  1201  01A385  00                 	db	0
  1202  01A386  00                 	db	0
  1203  01A387  00                 	db	0
  1204  01A388  00                 	db	0
  1205  01A389  00                 	db	0
  1206  01A38A  00                 	db	0
  1207  01A38B  00                 	db	0
  1208  01A38C  00                 	db	0
  1209  01A38D  00                 	db	0
  1210  01A38E  00                 	db	0
  1211  01A38F  00                 	db	0
  1212  01A390  00                 	db	0
  1213  01A391  00                 	db	0
  1214  01A392  00                 	db	0
  1215  01A393  00                 	db	0
  1216  01A394  00                 	db	0
  1217  01A395  00                 	db	0
  1218  01A396  00                 	db	0
  1219  01A397  00                 	db	0
  1220  01A398  00                 	db	0
  1221  01A399  00                 	db	0
  1222  01A39A  00                 	db	0
  1223  01A39B  00                 	db	0
  1224  01A39C  00                 	db	0
  1225  01A39D  00                 	db	0
  1226  01A39E  00                 	db	0
  1227  01A39F  00                 	db	0
  1228  01A3A0  00                 	db	0
  1229  01A3A1  00                 	db	0
  1230  01A3A2  00                 	db	0
  1231  01A3A3  00                 	db	0
  1232  01A3A4  00                 	db	0
  1233  01A3A5  00                 	db	0
  1234  01A3A6  00                 	db	0
  1235  01A3A7  00                 	db	0
  1236  01A3A8  00                 	db	0
  1237  01A3A9  00                 	db	0
  1238  01A3AA  00                 	db	0
  1239  01A3AB  00                 	db	0
  1240  01A3AC  00                 	db	0
  1241  01A3AD  00                 	db	0
  1242  01A3AE  00                 	db	0
  1243  01A3AF  00                 	db	0
  1244  01A3B0  00                 	db	0
  1245  01A3B1  00                 	db	0
  1246  01A3B2  00                 	db	0
  1247  01A3B3  00                 	db	0
  1248  01A3B4  00                 	db	0
  1249  01A3B5  00                 	db	0
  1250  01A3B6  00                 	db	0
  1251  01A3B7  00                 	db	0
  1252  01A3B8  00                 	db	0
  1253  01A3B9  00                 	db	0
  1254  01A3BA  00                 	db	0
  1255  01A3BB  00                 	db	0
  1256  01A3BC  00                 	db	0
  1257  01A3BD  00                 	db	0
  1258  01A3BE  00                 	db	0
  1259  01A3BF  00                 	db	0
  1260  01A3C0  00                 	db	0
  1261  01A3C1  00                 	db	0
  1262  01A3C2  00                 	db	0
  1263  01A3C3  00                 	db	0
  1264  01A3C4  00                 	db	0
  1265  01A3C5  00                 	db	0
  1266  01A3C6  00                 	db	0
  1267  01A3C7  00                 	db	0
  1268  01A3C8  00                 	db	0
  1269  01A3C9  00                 	db	0
  1270  01A3CA  00                 	db	0
  1271  01A3CB  00                 	db	0
  1272  01A3CC  00                 	db	0
  1273  01A3CD  00                 	db	0
  1274  01A3CE  00                 	db	0
  1275  01A3CF  00                 	db	0
  1276  01A3D0  00                 	db	0
  1277  01A3D1  00                 	db	0
  1278  01A3D2  00                 	db	0
  1279  01A3D3  00                 	db	0
  1280  01A3D4  00                 	db	0
  1281  01A3D5  00                 	db	0
  1282  01A3D6  00                 	db	0
  1283  01A3D7  00                 	db	0
  1284  01A3D8  00                 	db	0
  1285  01A3D9  00                 	db	0
  1286  01A3DA  00                 	db	0
  1287  01A3DB  00                 	db	0
  1288  01A3DC  00                 	db	0
  1289  01A3DD  00                 	db	0
  1290  01A3DE  00                 	db	0
  1291  01A3DF  00                 	db	0
  1292  01A3E0  00                 	db	0
  1293  01A3E1  00                 	db	0
  1294  01A3E2  00                 	db	0
  1295  01A3E3  00                 	db	0
  1296  01A3E4  00                 	db	0
  1297  01A3E5  00                 	db	0
  1298  01A3E6  00                 	db	0
  1299  01A3E7  00                 	db	0
  1300  01A3E8  00                 	db	0
  1301  01A3E9  00                 	db	0
  1302  01A3EA  00                 	db	0
  1303  01A3EB  00                 	db	0
  1304  01A3EC  00                 	db	0
  1305  01A3ED  00                 	db	0
  1306  01A3EE  00                 	db	0
  1307  01A3EF  00                 	db	0
  1308  01A3F0  00                 	db	0
  1309  01A3F1  00                 	db	0
  1310  01A3F2  00                 	db	0
  1311  01A3F3  00                 	db	0
  1312  01A3F4  00                 	db	0
  1313  01A3F5  00                 	db	0
  1314  01A3F6  00                 	db	0
  1315  01A3F7  00                 	db	0
  1316  01A3F8  00                 	db	0
  1317  01A3F9  00                 	db	0
  1318  01A3FA  00                 	db	0
  1319  01A3FB  00                 	db	0
  1320  01A3FC  00                 	db	0
  1321  01A3FD  00                 	db	0
  1322  01A3FE  00                 	db	0
  1323  01A3FF  00                 	db	0
  1324  01A400  00                 	db	0
  1325  01A401  00                 	db	0
  1326  01A402  00                 	db	0
  1327  01A403  00                 	db	0
  1328  01A404  00                 	db	0
  1329  01A405  00                 	db	0
  1330  01A406  00                 	db	0
  1331  01A407  00                 	db	0
  1332  01A408  00                 	db	0
  1333  01A409  00                 	db	0
  1334  01A40A  00                 	db	0
  1335  01A40B  00                 	db	0
  1336  01A40C  00                 	db	0
  1337  01A40D  00                 	db	0
  1338  01A40E  00                 	db	0
  1339  01A40F  00                 	db	0
  1340  01A410  00                 	db	0
  1341  01A411  00                 	db	0
  1342  01A412  00                 	db	0
  1343  01A413  00                 	db	0
  1344  01A414  00                 	db	0
  1345  01A415  00                 	db	0
  1346  01A416  00                 	db	0
  1347  01A417  00                 	db	0
  1348  01A418  00                 	db	0
  1349  01A419  00                 	db	0
  1350  01A41A  00                 	db	0
  1351  01A41B  00                 	db	0
  1352  01A41C  00                 	db	0
  1353  01A41D  00                 	db	0
  1354  01A41E  00                 	db	0
  1355  01A41F  00                 	db	0
  1356  01A420  00                 	db	0
  1357  01A421  00                 	db	0
  1358  01A422  00                 	db	0
  1359  01A423  00                 	db	0
  1360  01A424  00                 	db	0
  1361  01A425  00                 	db	0
  1362  01A426  00                 	db	0
  1363  01A427  00                 	db	0
  1364  01A428  00                 	db	0
  1365  01A429  00                 	db	0
  1366  01A42A  00                 	db	0
  1367  01A42B  00                 	db	0
  1368  01A42C  00                 	db	0
  1369  01A42D  00                 	db	0
  1370  01A42E  00                 	db	0
  1371  01A42F  00                 	db	0
  1372  01A430  00                 	db	0
  1373  01A431  00                 	db	0
  1374  01A432  00                 	db	0
  1375  01A433  00                 	db	0
  1376  01A434  00                 	db	0
  1377  01A435  00                 	db	0
  1378  01A436  00                 	db	0
  1379  01A437  00                 	db	0
  1380  01A438  00                 	db	0
  1381  01A439  00                 	db	0
  1382  01A43A  00                 	db	0
  1383  01A43B  00                 	db	0
  1384  01A43C  00                 	db	0
  1385  01A43D  00                 	db	0
  1386  01A43E  00                 	db	0
  1387  01A43F  00                 	db	0
  1388  01A440  00                 	db	0
  1389  01A441  00                 	db	0
  1390  01A442  00                 	db	0
  1391  01A443  00                 	db	0
  1392  01A444  00                 	db	0
  1393  01A445  00                 	db	0
  1394  01A446  00                 	db	0
  1395  01A447  00                 	db	0
  1396  01A448  00                 	db	0
  1397  01A449  00                 	db	0
  1398  01A44A  00                 	db	0
  1399  01A44B  00                 	db	0
  1400  01A44C  00                 	db	0
  1401  01A44D  00                 	db	0
  1402  01A44E  00                 	db	0
  1403  01A44F  00                 	db	0
  1404  01A450  00                 	db	0
  1405  01A451  00                 	db	0
  1406  01A452  00                 	db	0
  1407  01A453  00                 	db	0
  1408  01A454  00                 	db	0
  1409  01A455  00                 	db	0
  1410  01A456  00                 	db	0
  1411  01A457  00                 	db	0
  1412  01A458  00                 	db	0
  1413  01A459  00                 	db	0
  1414  01A45A  00                 	db	0
  1415  01A45B  00                 	db	0
  1416  01A45C  00                 	db	0
  1417  01A45D  00                 	db	0
  1418  01A45E  00                 	db	0
  1419  01A45F  00                 	db	0
  1420  01A460  00                 	db	0
  1421  01A461  00                 	db	0
  1422  01A462  00                 	db	0
  1423  01A463  00                 	db	0
  1424  01A464  00                 	db	0
  1425  01A465  00                 	db	0
  1426  01A466  00                 	db	0
  1427  01A467  00                 	db	0
  1428  01A468  00                 	db	0
  1429  01A469  00                 	db	0
  1430  01A46A  00                 	db	0
  1431  01A46B  00                 	db	0
  1432  01A46C  00                 	db	0
  1433  01A46D  00                 	db	0
  1434  01A46E  00                 	db	0
  1435  01A46F  00                 	db	0
  1436                           
  1437                           ;initializer for _C
  1438  01A470  0000               	dw	0
  1439  01A472  0000               	dw	0
  1440  01A474  0000               	dw	0
  1441  01A476  0000               	dw	0
  1442  01A478  0000               	dw	0
  1443  01A47A  0000               	dw	0
  1444  01A47C  0000               	dw	0
  1445  01A47E  0000               	dw	0
  1446  01A480  0000               	dw	0
  1447  01A482  0000               	dw	0
  1448  01A484  0000               	dw	0
  1449  01A486  0000               	dw	0
  1450  01A488  0000               	dw	0
  1451  01A48A  0000               	dw	0
  1452  01A48C  0000               	dw	0
  1453  01A48E  0000               	dw	0
  1454  01A490  0000               	dw	0
  1455  01A492  0000               	dw	0
  1456  01A494  0000               	dw	0
  1457  01A496  0000               	dw	0
  1458  01A498  0000               	dw	0
  1459  01A49A  0000               	dw	0
  1460  01A49C  0000               	dw	0
  1461  01A49E  0000               	dw	0
  1462  01A4A0  0000               	dw	0
  1463  01A4A2  0000               	dw	0
  1464  01A4A4  0000               	dw	0
  1465  01A4A6  0000               	dw	0
  1466  01A4A8  0000               	dw	0
  1467  01A4AA  0000               	dw	0
  1468  01A4AC  0000               	dw	0
  1469  01A4AE  0000               	dw	0
  1470  01A4B0  0000               	dw	0
  1471  01A4B2  0000               	dw	0
  1472  01A4B4  0000               	dw	0
  1473  01A4B6  0000               	dw	0
  1474  01A4B8  0000               	dw	0
  1475  01A4BA  0000               	dw	0
  1476  01A4BC  0000               	dw	0
  1477  01A4BE  0000               	dw	0
  1478  01A4C0  0000               	dw	0
  1479  01A4C2  0000               	dw	0
  1480  01A4C4  0000               	dw	0
  1481  01A4C6  0000               	dw	0
  1482  01A4C8  0000               	dw	0
  1483  01A4CA  0000               	dw	0
  1484  01A4CC  0000               	dw	0
  1485  01A4CE  0000               	dw	0
  1486  01A4D0  0000               	dw	0
  1487  01A4D2  0000               	dw	0
  1488  01A4D4  0000               	dw	0
  1489  01A4D6  0000               	dw	0
  1490  01A4D8  0000               	dw	0
  1491  01A4DA  0000               	dw	0
  1492  01A4DC  0000               	dw	0
  1493  01A4DE  0000               	dw	0
  1494  01A4E0  0000               	dw	0
  1495  01A4E2  0000               	dw	0
  1496  01A4E4  0000               	dw	0
  1497  01A4E6  0000               	dw	0
  1498  01A4E8  0000               	dw	0
  1499  01A4EA  0000               	dw	0
  1500  01A4EC  0000               	dw	0
  1501  01A4EE  0000               	dw	0
  1502  01A4F0  0000               	dw	0
  1503  01A4F2  0000               	dw	0
  1504  01A4F4  0000               	dw	0
  1505  01A4F6  0000               	dw	0
  1506  01A4F8  0000               	dw	0
  1507  01A4FA  0000               	dw	0
  1508  01A4FC  0000               	dw	0
  1509  01A4FE  42FA               	dw	17146
  1510  01A500  0000               	dw	0
  1511  01A502  0000               	dw	0
  1512  01A504  0000               	dw	0
  1513  01A506  0000               	dw	0
  1514  01A508  0000               	dw	0
  1515  01A50A  0000               	dw	0
  1516  01A50C  0000               	dw	0
  1517  01A50E  0000               	dw	0
  1518  01A510  0000               	dw	0
  1519  01A512  0000               	dw	0
  1520  01A514  0000               	dw	0
  1521  01A516  0000               	dw	0
  1522  01A518  0000               	dw	0
  1523  01A51A  0000               	dw	0
  1524  01A51C  0000               	dw	0
  1525  01A51E  0000               	dw	0
  1526  01A520  0000               	dw	0
  1527  01A522  0000               	dw	0
  1528  01A524  0000               	dw	0
  1529  01A526  0000               	dw	0
  1530  01A528  00                 	db	0
  1531  01A529  01                 	db	1
  1532  01A52A  0000               	dw	0
  1533  01A52C  0000               	dw	0
  1534  01A52E  0000               	dw	0
  1535  01A530  0000               	dw	0
  1536  01A532  0000               	dw	0
  1537  01A534  3F80               	dw	16256
  1538  01A536  0000               	dw	0
  1539  01A538  3F80               	dw	16256
  1540  01A53A  0000               	dw	0
  1541  01A53C  0000               	dw	0
  1542  01A53E  0000               	dw	0
  1543  01A540  0000               	dw	0
  1544  01A542  0000               	dw	0
  1545  01A544  0000               	dw	0
  1546  01A546  0000               	dw	0
  1547  01A548  0000               	dw	0
  1548  01A54A  0000               	dw	0
  1549  01A54C  0000               	dw	0
  1550  01A54E  00                 	db	0
  1551  01A54F  00                 	db	0
  1552  01A550  00                 	db	0
  1553  01A551  00                 	db	0
  1554  01A552  00                 	db	0
  1555  01A553  00                 	db	0
  1556  01A554  00                 	db	0
  1557  01A555  00                 	db	0
  1558  01A556  00                 	db	0
  1559  01A557  00                 	db	0
  1560  01A558  00                 	db	0
  1561  01A559  00                 	db	0
  1562  01A55A  00                 	db	0
  1563  01A55B  00                 	db	0
  1564  01A55C  00                 	db	0
  1565  01A55D  00                 	db	0
  1566  01A55E  00                 	db	0
  1567  01A55F  00                 	db	0
  1568  01A560  00                 	db	0
  1569  01A561  00                 	db	0
  1570  01A562  00                 	db	0
  1571  01A563  00                 	db	0
  1572  01A564  00                 	db	0
  1573  01A565  00                 	db	0
  1574  01A566  00                 	db	0
  1575  01A567  00                 	db	0
  1576  01A568  00                 	db	0
  1577  01A569  00                 	db	0
  1578  01A56A  00                 	db	0
  1579  01A56B  00                 	db	0
  1580  01A56C  00                 	db	0
  1581  01A56D  00                 	db	0
  1582  01A56E  00                 	db	0
  1583  01A56F  00                 	db	0
  1584  01A570  00                 	db	0
  1585  01A571  00                 	db	0
  1586  01A572  00                 	db	0
  1587  01A573  00                 	db	0
  1588  01A574  00                 	db	0
  1589  01A575  00                 	db	0
  1590  01A576  00                 	db	0
  1591  01A577  00                 	db	0
  1592  01A578  00                 	db	0
  1593  01A579  00                 	db	0
  1594  01A57A  00                 	db	0
  1595  01A57B  00                 	db	0
  1596  01A57C  00                 	db	0
  1597  01A57D  00                 	db	0
  1598  01A57E  00                 	db	0
  1599  01A57F  00                 	db	0
  1600  01A580  00                 	db	0
  1601  01A581  00                 	db	0
  1602  01A582  00                 	db	0
  1603  01A583  00                 	db	0
  1604  01A584  00                 	db	0
  1605  01A585  00                 	db	0
  1606  01A586  00                 	db	0
  1607  01A587  00                 	db	0
  1608  01A588  00                 	db	0
  1609  01A589  00                 	db	0
  1610  01A58A  0000               	dw	0
  1611  01A58C  0000               	dw	0
  1612  01A58E  0000               	dw	0
  1613  01A590  0000               	dw	0
  1614  01A592  0000               	dw	0
  1615  01A594  0000               	dw	0
  1616  01A596  0000               	dw	0
  1617  01A598  0000               	dw	0
  1618  01A59A  0000               	dw	0
  1619  01A59C  0000               	dw	0
  1620  01A59E  01                 	db	1
  1621  01A59F  00                 	db	0
  1622  01A5A0  0000               	dw	0
  1623  01A5A2  0000               	dw	0
  1624  01A5A4  0000               	dw	0
  1625  01A5A6  0000               	dw	0
  1626  01A5A8  0000               	dw	0
  1627  01A5AA  0000               	dw	0
  1628  01A5AC  0000               	dw	0
  1629  01A5AE  0000               	dw	0
  1630                           
  1631                           	psect	idataBANK1
  1632  0007D6                     __pidataBANK1:
  1633                           	opt callstack 0
  1634                           
  1635                           ;initializer for _R
  1636  0007D6  0000               	dw	0
  1637  0007D8  0000               	dw	0
  1638  0007DA  0000               	dw	0
  1639  0007DC  0000               	dw	0
  1640  0007DE  0000               	dw	0
  1641  0007E0  0000               	dw	0
  1642  0007E2  0000               	dw	0
  1643  0007E4  0000               	dw	0
  1644  0007E6  0000               	dw	0
  1645  0007E8  0000               	dw	0
  1646  0007EA  0000               	dw	0
  1647  0007EC  0000               	dw	0
  1648  0007EE  0000               	dw	0
  1649  0007F0  0000               	dw	0
  1650  0007F2  0000               	dw	0
  1651  0007F4  0000               	dw	0
  1652  0007F6  0000               	dw	0
  1653  0007F8  0000               	dw	0
  1654  0007FA  0000               	dw	0
  1655  0007FC  0F62               	dw	3938
  1656  0007FE  0FA4               	dw	4004
  1657  000800  89A0               	dw	35232
  1658  000802  3DB0               	dw	15792
  1659  000804  DEA4               	dw	56996
  1660  000806  3D13               	dw	15635
  1661  000808  00                 	db	0
  1662  000809  0000               	dw	0
  1663  00080B  00                 	db	0
  1664  00080C  00                 	db	0
  1665  00080D  0000               	dw	0
  1666  00080F  0000               	dw	0
  1667  000811  0000               	dw	0
  1668  000813  0000               	dw	0
  1669  000815  0000               	dw	0
  1670  000817  0000               	dw	0
  1671  000819  0000               	dw	0
  1672  00081B  0000               	dw	0
  1673  00081D  0000               	dw	0
  1674  00081F  0000               	dw	0
  1675  000821  0000               	dw	0
  1676  000823  0000               	dw	0
  1677  000825  0000               	dw	0
  1678  000827  0000               	dw	0
  1679  000829  0000               	dw	0
  1680  00082B  0000               	dw	0
  1681  00082D  0000               	dw	0
  1682  00082F  0000               	dw	0
  1683  000831  0000               	dw	0
  1684  000833  0000               	dw	0
  1685  000835  0000               	dw	0
  1686  000837  0000               	dw	0
  1687  000839  0000               	dw	0
  1688  00083B  0000               	dw	0
  1689  00083D  0000               	dw	0
  1690  00083F  0000               	dw	0
  1691  000841  0000               	dw	0
  1692  000843  0000               	dw	0
  1693  000845  0000               	dw	0
  1694  000847  0000               	dw	0
  1695  000849  0000               	dw	0
  1696  00084B  0000               	dw	0
  1697  00084D  0000               	dw	0
  1698  00084F  0000               	dw	0
  1699  000851  0000               	dw	0
  1700  000853  0000               	dw	0
  1701  000855  0000               	dw	0
  1702  000857  0000               	dw	0
  1703  000859  0000               	dw	0
  1704  00085B  0000               	dw	0
  1705  00085D  0000               	dw	0
  1706  00085F  0000               	dw	0
  1707  000861  0000               	dw	0
  1708  000863  0000               	dw	0
  1709  000865  0000               	dw	0
  1710  000867  0000               	dw	0
  1711  000869  0000               	dw	0
  1712  00086B  0000               	dw	0
  1713  00086D  00                 	db	0
  1714  00086E  1957               	dw	6487
  1715  000870  42                 	db	66
  1716                           
  1717                           ;initializer for _H
  1718  000871  00                 	db	0
  1719  000872  00                 	db	0
  1720  000873  01                 	db	1
  1721  000874  00                 	db	0
  1722  000875  01                 	db	1
  1723  000876  00                 	db	0
  1724  000877  01                 	db	1
  1725  000878  00                 	db	0
  1726  000879  00                 	db	0
  1727                           
  1728                           	psect	idataBANK2
  1729  000248                     __pidataBANK2:
  1730                           	opt callstack 0
  1731                           
  1732                           ;initializer for stoa@F1166
  1733  000248  28                 	db	40
  1734  000249  6E                 	db	110
  1735  00024A  75                 	db	117
  1736  00024B  6C                 	db	108
  1737  00024C  6C                 	db	108
  1738  00024D  29                 	db	41
  1739  00024E  00                 	db	0
  1740                           
  1741                           ;initializer for _V
  1742  00024F  00                 	db	0
  1743  000250  00                 	db	0
  1744  000251  00                 	db	0
  1745  000252  00                 	db	0
  1746  000253  00                 	db	0
  1747  000254  00                 	db	0
  1748  000255  00                 	db	0
  1749  000256  00                 	db	0
  1750  000257  00                 	db	0
  1751  000258  00                 	db	0
  1752  000259  00                 	db	0
  1753  00025A  00                 	db	0
  1754  00025B  00                 	db	0
  1755  00025C  00                 	db	0
  1756  00025D  00                 	db	0
  1757  00025E  00                 	db	0
  1758  00025F  00                 	db	0
  1759  000260  00                 	db	0
  1760  000261  00                 	db	0
  1761  000262  00                 	db	0
  1762  000263  00                 	db	0
  1763  000264  00                 	db	0
  1764  000265  00                 	db	0
  1765  000266  00                 	db	0
  1766  000267  00                 	db	0
  1767  000268  00                 	db	0
  1768  000269  00                 	db	0
  1769  00026A  00                 	db	0
  1770  00026B  00                 	db	0
  1771  00026C  00                 	db	0
  1772  00026D  00                 	db	0
  1773  00026E  00                 	db	0
  1774  00026F  00                 	db	0
  1775  000270  00                 	db	0
  1776  000271  00                 	db	0
  1777  000272  00                 	db	0
  1778  000273  00                 	db	0
  1779  000274  00                 	db	0
  1780  000275  00                 	db	0
  1781  000276  00                 	db	0
  1782  000277  00                 	db	0
  1783  000278  00                 	db	0
  1784  000279  00                 	db	0
  1785  00027A  00                 	db	0
  1786  00027B  00                 	db	0
  1787  00027C  00                 	db	0
  1788  00027D  00                 	db	0
  1789  00027E  00                 	db	0
  1790  00027F  00                 	db	0
  1791  000280  00                 	db	0
  1792  000281  00                 	db	0
  1793  000282  00                 	db	0
  1794  000283  00                 	db	0
  1795  000284  00                 	db	0
  1796  000285  00                 	db	0
  1797  000286  00                 	db	0
  1798  000287  00                 	db	0
  1799  000288  00                 	db	0
  1800  000289  00                 	db	0
  1801  00028A  00                 	db	0
  1802  00028B  00                 	db	0
  1803  00028C  00                 	db	0
  1804  00028D  00                 	db	0
  1805  00028E  00                 	db	0
  1806  00028F  00                 	db	0
  1807  000290  00                 	db	0
  1808  000291  00                 	db	0
  1809  000292  00                 	db	0
  1810  000293  00                 	db	0
  1811  000294  00                 	db	0
  1812  000295  00                 	db	0
  1813  000296  00                 	db	0
  1814  000297  00                 	db	0
  1815  000298  00                 	db	0
  1816  000299  00                 	db	0
  1817  00029A  00                 	db	0
  1818  00029B  00                 	db	0
  1819  00029C  00                 	db	0
  1820  00029D  00                 	db	0
  1821  00029E  00                 	db	0
  1822  00029F  00                 	db	0
  1823  0002A0  00                 	db	0
  1824  0002A1  00                 	db	0
  1825  0002A2  00                 	db	0
  1826  0002A3  00                 	db	0
  1827  0002A4  00                 	db	0
  1828  0002A5  00                 	db	0
  1829  0002A6  00                 	db	0
  1830  0002A7  00                 	db	0
  1831  0002A8  00                 	db	0
  1832  0002A9  00                 	db	0
  1833  0002AA  00                 	db	0
  1834  0002AB  00                 	db	0
  1835  0002AC  00                 	db	0
  1836  0002AD  00                 	db	0
  1837  0002AE  00                 	db	0
  1838  0002AF  00                 	db	0
  1839  0002B0  00                 	db	0
  1840  0002B1  00                 	db	0
  1841  0002B2  00                 	db	0
  1842  0002B3  00                 	db	0
  1843  0002B4  00                 	db	0
  1844  0002B5  00                 	db	0
  1845  0002B6  00                 	db	0
  1846  0002B7  00                 	db	0
  1847  0002B8  00                 	db	0
  1848  0002B9  00                 	db	0
  1849  0002BA  00                 	db	0
  1850  0002BB  00                 	db	0
  1851  0002BC  00                 	db	0
  1852  0002BD  00                 	db	0
  1853  0002BE  00                 	db	0
  1854  0002BF  00                 	db	0
  1855  0002C0  00                 	db	0
  1856  0002C1  00                 	db	0
  1857  0002C2  00                 	db	0
  1858  0002C3  00                 	db	0
  1859  0002C4  00                 	db	0
  1860  0002C5  00                 	db	0
  1861  0002C6  00                 	db	0
  1862  0002C7  00                 	db	0
  1863  0002C8  00                 	db	0
  1864  0002C9  00                 	db	0
  1865  0002CA  00                 	db	0
  1866  0002CB  00                 	db	0
  1867  0002CC  00                 	db	0
  1868  0002CD  00                 	db	0
  1869  0002CE  00                 	db	0
  1870  0002CF  00                 	db	0
  1871  0002D0  019A               	dw	410
  1872  0002D2  5E48               	dw	24136
  1873  0002D4  00                 	db	0
  1874  0002D5  00                 	db	0
  1875  0002D6  00                 	db	0
  1876  0002D7  00                 	db	0
  1877  0002D8  00                 	db	0
  1878  0002D9  00                 	db	0
  1879  0002DA  00                 	db	0
  1880  0002DB  0000               	dw	0
  1881  0002DD  0000               	dw	0
  1882  0002DF  0000               	dw	0
  1883  0002E1  0000               	dw	0
  1884  0002E3  0000               	dw	0
  1885  0002E5  0000               	dw	0
  1886  0002E7  00                 	db	0
  1887  0002E8  00                 	db	0
  1888  0002E9  00                 	db	0
  1889  0002EA  00                 	db	0
  1890  0002EB  00                 	db	0
  1891  0002EC  00                 	db	0
  1892  0002ED  00                 	db	0
  1893  0002EE  00                 	db	0
  1894  0002EF  00                 	db	0
  1895  0002F0  00                 	db	0
  1896  0002F1  00                 	db	0
  1897  0002F2  0000               	dw	0
  1898  0002F4  0000               	dw	0
  1899  0002F6  2D                 	db	45
  1900  0002F7  00                 	db	0
  1901  0002F8  00                 	db	0
  1902  0002F9  00                 	db	0
  1903  0002FA  00                 	db	0
  1904  0002FB  00                 	db	0
  1905  0002FC  0000               	dw	0
  1906  0002FE  0000               	dw	0
  1907  000300  0000               	dw	0
  1908  000302  0000               	dw	0
  1909                           
  1910                           	psect	mediumconst
  1911  00F7AA                     __pmediumconst:
  1912                           	opt callstack 0
  1913  00F7AA  00                 	db	0
  1914  00F7AB                     _BVSOC_TABLE:
  1915                           	opt callstack 0
  1916  00F7AB  59D8               	dw	23000
  1917  00F7AD  0000               	dw	0
  1918  00F7AF  0005               	dw	5
  1919  00F7B1  0000               	dw	0
  1920  00F7B3  5B68               	dw	23400
  1921  00F7B5  0000               	dw	0
  1922  00F7B7  000A               	dw	10
  1923  00F7B9  0000               	dw	0
  1924  00F7BB  5C30               	dw	23600
  1925  00F7BD  0000               	dw	0
  1926  00F7BF  0014               	dw	20
  1927  00F7C1  0000               	dw	0
  1928  00F7C3  5E38               	dw	24120
  1929  00F7C5  0000               	dw	0
  1930  00F7C7  0019               	dw	25
  1931  00F7C9  0000               	dw	0
  1932  00F7CB  5E88               	dw	24200
  1933  00F7CD  0000               	dw	0
  1934  00F7CF  001E               	dw	30
  1935  00F7D1  0000               	dw	0
  1936  00F7D3  5F78               	dw	24440
  1937  00F7D5  0000               	dw	0
  1938  00F7D7  0028               	dw	40
  1939  00F7D9  0000               	dw	0
  1940  00F7DB  5FDC               	dw	24540
  1941  00F7DD  0000               	dw	0
  1942  00F7DF  002D               	dw	45
  1943  00F7E1  0000               	dw	0
  1944  00F7E3  6018               	dw	24600
  1945  00F7E5  0000               	dw	0
  1946  00F7E7  0032               	dw	50
  1947  00F7E9  0000               	dw	0
  1948  00F7EB  6046               	dw	24646
  1949  00F7ED  0000               	dw	0
  1950  00F7EF  0035               	dw	53
  1951  00F7F1  0000               	dw	0
  1952  00F7F3  607C               	dw	24700
  1953  00F7F5  0000               	dw	0
  1954  00F7F7  0037               	dw	55
  1955  00F7F9  0000               	dw	0
  1956  00F7FB  60AE               	dw	24750
  1957  00F7FD  0000               	dw	0
  1958  00F7FF  0039               	dw	57
  1959  00F801  0000               	dw	0
  1960  00F803  60E0               	dw	24800
  1961  00F805  0000               	dw	0
  1962  00F807  003C               	dw	60
  1963  00F809  0000               	dw	0
  1964  00F80B  6112               	dw	24850
  1965  00F80D  0000               	dw	0
  1966  00F80F  003F               	dw	63
  1967  00F811  0000               	dw	0
  1968  00F813  615D               	dw	24925
  1969  00F815  0000               	dw	0
  1970  00F817  0043               	dw	67
  1971  00F819  0000               	dw	0
  1972  00F81B  61A8               	dw	25000
  1973  00F81D  0000               	dw	0
  1974  00F81F  0046               	dw	70
  1975  00F821  0000               	dw	0
  1976  00F823  61BC               	dw	25020
  1977  00F825  0000               	dw	0
  1978  00F827  0048               	dw	72
  1979  00F829  0000               	dw	0
  1980  00F82B  61D0               	dw	25040
  1981  00F82D  0000               	dw	0
  1982  00F82F  004B               	dw	75
  1983  00F831  0000               	dw	0
  1984  00F833  61DA               	dw	25050
  1985  00F835  0000               	dw	0
  1986  00F837  0050               	dw	80
  1987  00F839  0000               	dw	0
  1988  00F83B  61E4               	dw	25060
  1989  00F83D  0000               	dw	0
  1990  00F83F  0055               	dw	85
  1991  00F841  0000               	dw	0
  1992  00F843  61F8               	dw	25080
  1993  00F845  0000               	dw	0
  1994  00F847  005A               	dw	90
  1995  00F849  0000               	dw	0
  1996  00F84B  6208               	dw	25096
  1997  00F84D  0000               	dw	0
  1998  00F84F  005C               	dw	92
  1999  00F851  0000               	dw	0
  2000  00F853  6222               	dw	25122
  2001  00F855  0000               	dw	0
  2002  00F857  005D               	dw	93
  2003  00F859  0000               	dw	0
  2004  00F85B  6234               	dw	25140
  2005  00F85D  0000               	dw	0
  2006  00F85F  005F               	dw	95
  2007  00F861  0000               	dw	0
  2008  00F863  6248               	dw	25160
  2009  00F865  0000               	dw	0
  2010  00F867  0061               	dw	97
  2011  00F869  0000               	dw	0
  2012  00F86B  625C               	dw	25180
  2013  00F86D  0000               	dw	0
  2014  00F86F  0064               	dw	100
  2015  00F871  0000               	dw	0
  2016  00F873  6784               	dw	26500
  2017  00F875  0000               	dw	0
  2018  00F877  0062               	dw	98
  2019  00F879  0000               	dw	0
  2020  00F87B                     __end_of_BVSOC_TABLE:
  2021                           	opt callstack 0
  2022  00F87B                     ___month_to_secs@secs_through_month:
  2023                           	opt callstack 0
  2024  00F87B  0000               	dw	0
  2025  00F87D  0000               	dw	0
  2026  00F87F  DE80               	dw	56960
  2027  00F881  0028               	dw	40
  2028  00F883  C880               	dw	51328
  2029  00F885  004D               	dw	77
  2030  00F887  A700               	dw	42752
  2031  00F889  0076               	dw	118
  2032  00F88B  3400               	dw	13312
  2033  00F88D  009E               	dw	158
  2034  00F88F  1280               	dw	4736
  2035  00F891  00C7               	dw	199
  2036  00F893  9F80               	dw	40832
  2037  00F895  00EE               	dw	238
  2038  00F897  7E00               	dw	32256
  2039  00F899  0117               	dw	279
  2040  00F89B  5C80               	dw	23680
  2041  00F89D  0140               	dw	320
  2042  00F89F  E980               	dw	59776
  2043  00F8A1  0167               	dw	359
  2044  00F8A3  C800               	dw	51200
  2045  00F8A5  0190               	dw	400
  2046  00F8A7  5500               	dw	21760
  2047  00F8A9  01B8               	dw	440
  2048  00F8AB                     __end_of___month_to_secs@secs_through_month:
  2049                           	opt callstack 0
  2050  00F8AB                     ___secs_to_tm@days_in_month:
  2051                           	opt callstack 0
  2052  00F8AB  1F                 	db	31
  2053  00F8AC  1E                 	db	30
  2054  00F8AD  1F                 	db	31
  2055  00F8AE  1E                 	db	30
  2056  00F8AF  1F                 	db	31
  2057  00F8B0  1F                 	db	31
  2058  00F8B1  1E                 	db	30
  2059  00F8B2  1F                 	db	31
  2060  00F8B3  1E                 	db	30
  2061  00F8B4  1F                 	db	31
  2062  00F8B5  1F                 	db	31
  2063  00F8B6  1D                 	db	29
  2064  00F8B7                     __end_of___secs_to_tm@days_in_month:
  2065                           	opt callstack 0
  2066  00F8B7                     _T:
  2067                           	opt callstack 0
  2068  00F8B7  63                 	db	99
  2069  00F8B8  6F                 	db	111
  2070  00F8B9  6D                 	db	109
  2071  00F8BA  6D                 	db	109
  2072  00F8BB  61                 	db	97
  2073  00F8BC  6E                 	db	110
  2074  00F8BD  64                 	db	100
  2075  00F8BE  73                 	db	115
  2076  00F8BF  20                 	db	32
  2077  00F8C0  31                 	db	49
  2078  00F8C1  00                 	db	0
  2079  00F8C2  00                 	db	0
  2080  00F8C3  00                 	db	0
  2081  00F8C4  00                 	db	0
  2082  00F8C5  00                 	db	0
  2083  00F8C6  00                 	db	0
  2084  00F8C7  00                 	db	0
  2085  00F8C8  00                 	db	0
  2086  00F8C9  00                 	db	0
  2087  00F8CA  00                 	db	0
  2088  00F8CB  00                 	db	0
  2089  00F8CC  00                 	db	0
  2090  00F8CD  64                 	db	100
  2091  00F8CE  69                 	db	105
  2092  00F8CF  73                 	db	115
  2093  00F8D0  70                 	db	112
  2094  00F8D1  6C                 	db	108
  2095  00F8D2  61                 	db	97
  2096  00F8D3  79                 	db	121
  2097  00F8D4  73                 	db	115
  2098  00F8D5  20                 	db	32
  2099  00F8D6  31                 	db	49
  2100  00F8D7  00                 	db	0
  2101  00F8D8  00                 	db	0
  2102  00F8D9  00                 	db	0
  2103  00F8DA  00                 	db	0
  2104  00F8DB  00                 	db	0
  2105  00F8DC  00                 	db	0
  2106  00F8DD  00                 	db	0
  2107  00F8DE  00                 	db	0
  2108  00F8DF  00                 	db	0
  2109  00F8E0  00                 	db	0
  2110  00F8E1  00                 	db	0
  2111  00F8E2  00                 	db	0
  2112  00F8E3  63                 	db	99
  2113  00F8E4  6F                 	db	111
  2114  00F8E5  6D                 	db	109
  2115  00F8E6  6D                 	db	109
  2116  00F8E7  61                 	db	97
  2117  00F8E8  6E                 	db	110
  2118  00F8E9  64                 	db	100
  2119  00F8EA  73                 	db	115
  2120  00F8EB  20                 	db	32
  2121  00F8EC  32                 	db	50
  2122  00F8ED  00                 	db	0
  2123  00F8EE  00                 	db	0
  2124  00F8EF  00                 	db	0
  2125  00F8F0  00                 	db	0
  2126  00F8F1  00                 	db	0
  2127  00F8F2  00                 	db	0
  2128  00F8F3  00                 	db	0
  2129  00F8F4  00                 	db	0
  2130  00F8F5  00                 	db	0
  2131  00F8F6  00                 	db	0
  2132  00F8F7  00                 	db	0
  2133  00F8F8  00                 	db	0
  2134  00F8F9  64                 	db	100
  2135  00F8FA  69                 	db	105
  2136  00F8FB  73                 	db	115
  2137  00F8FC  70                 	db	112
  2138  00F8FD  6C                 	db	108
  2139  00F8FE  61                 	db	97
  2140  00F8FF  79                 	db	121
  2141  00F900  73                 	db	115
  2142  00F901  20                 	db	32
  2143  00F902  32                 	db	50
  2144  00F903  00                 	db	0
  2145  00F904  00                 	db	0
  2146  00F905  00                 	db	0
  2147  00F906  00                 	db	0
  2148  00F907  00                 	db	0
  2149  00F908  00                 	db	0
  2150  00F909  00                 	db	0
  2151  00F90A  00                 	db	0
  2152  00F90B  00                 	db	0
  2153  00F90C  00                 	db	0
  2154  00F90D  00                 	db	0
  2155  00F90E  00                 	db	0
  2156  00F90F  63                 	db	99
  2157  00F910  6F                 	db	111
  2158  00F911  6D                 	db	109
  2159  00F912  6D                 	db	109
  2160  00F913  61                 	db	97
  2161  00F914  6E                 	db	110
  2162  00F915  64                 	db	100
  2163  00F916  73                 	db	115
  2164  00F917  20                 	db	32
  2165  00F918  33                 	db	51
  2166  00F919  00                 	db	0
  2167  00F91A  00                 	db	0
  2168  00F91B  00                 	db	0
  2169  00F91C  00                 	db	0
  2170  00F91D  00                 	db	0
  2171  00F91E  00                 	db	0
  2172  00F91F  00                 	db	0
  2173  00F920  00                 	db	0
  2174  00F921  00                 	db	0
  2175  00F922  00                 	db	0
  2176  00F923  00                 	db	0
  2177  00F924  00                 	db	0
  2178  00F925  64                 	db	100
  2179  00F926  69                 	db	105
  2180  00F927  73                 	db	115
  2181  00F928  70                 	db	112
  2182  00F929  6C                 	db	108
  2183  00F92A  61                 	db	97
  2184  00F92B  79                 	db	121
  2185  00F92C  73                 	db	115
  2186  00F92D  20                 	db	32
  2187  00F92E  33                 	db	51
  2188  00F92F  00                 	db	0
  2189  00F930  00                 	db	0
  2190  00F931  00                 	db	0
  2191  00F932  00                 	db	0
  2192  00F933  00                 	db	0
  2193  00F934  00                 	db	0
  2194  00F935  00                 	db	0
  2195  00F936  00                 	db	0
  2196  00F937  00                 	db	0
  2197  00F938  00                 	db	0
  2198  00F939  00                 	db	0
  2199  00F93A  00                 	db	0
  2200  00F93B  63                 	db	99
  2201  00F93C  6F                 	db	111
  2202  00F93D  6D                 	db	109
  2203  00F93E  6D                 	db	109
  2204  00F93F  61                 	db	97
  2205  00F940  6E                 	db	110
  2206  00F941  64                 	db	100
  2207  00F942  73                 	db	115
  2208  00F943  20                 	db	32
  2209  00F944  34                 	db	52
  2210  00F945  00                 	db	0
  2211  00F946  00                 	db	0
  2212  00F947  00                 	db	0
  2213  00F948  00                 	db	0
  2214  00F949  00                 	db	0
  2215  00F94A  00                 	db	0
  2216  00F94B  00                 	db	0
  2217  00F94C  00                 	db	0
  2218  00F94D  00                 	db	0
  2219  00F94E  00                 	db	0
  2220  00F94F  00                 	db	0
  2221  00F950  00                 	db	0
  2222  00F951  64                 	db	100
  2223  00F952  69                 	db	105
  2224  00F953  73                 	db	115
  2225  00F954  70                 	db	112
  2226  00F955  6C                 	db	108
  2227  00F956  61                 	db	97
  2228  00F957  79                 	db	121
  2229  00F958  73                 	db	115
  2230  00F959  20                 	db	32
  2231  00F95A  34                 	db	52
  2232  00F95B  00                 	db	0
  2233  00F95C  00                 	db	0
  2234  00F95D  00                 	db	0
  2235  00F95E  00                 	db	0
  2236  00F95F  00                 	db	0
  2237  00F960  00                 	db	0
  2238  00F961  00                 	db	0
  2239  00F962  00                 	db	0
  2240  00F963  00                 	db	0
  2241  00F964  00                 	db	0
  2242  00F965  00                 	db	0
  2243  00F966  00                 	db	0
  2244  00F967                     __end_of_T:
  2245                           	opt callstack 0
  2246  00F967                     _spin:
  2247                           	opt callstack 0
  2248  00F967  7C                 	db	124
  2249  00F968  7C                 	db	124
  2250  00F969  2F                 	db	47
  2251  00F96A  2F                 	db	47
  2252  00F96B  2D                 	db	45
  2253  00F96C  2D                 	db	45
  2254  00F96D  00                 	db	0
  2255  00F96E  00                 	db	0
  2256  00F96F  00                 	db	0
  2257  00F970  00                 	db	0
  2258  00F971  00                 	db	0
  2259  00F972  00                 	db	0
  2260  00F973  00                 	db	0
  2261  00F974  00                 	db	0
  2262  00F975  00                 	db	0
  2263  00F976  00                 	db	0
  2264  00F977  00                 	db	0
  2265  00F978  00                 	db	0
  2266  00F979  00                 	db	0
  2267  00F97A  00                 	db	0
  2268  00F97B  7C                 	db	124
  2269  00F97C  7C                 	db	124
  2270  00F97D  2F                 	db	47
  2271  00F97E  2F                 	db	47
  2272  00F97F  2D                 	db	45
  2273  00F980  2D                 	db	45
  2274  00F981  5C                 	db	92
  2275  00F982  5C                 	db	92
  2276  00F983  00                 	db	0
  2277  00F984  00                 	db	0
  2278  00F985  00                 	db	0
  2279  00F986  00                 	db	0
  2280  00F987  00                 	db	0
  2281  00F988  00                 	db	0
  2282  00F989  00                 	db	0
  2283  00F98A  00                 	db	0
  2284  00F98B  00                 	db	0
  2285  00F98C  00                 	db	0
  2286  00F98D  00                 	db	0
  2287  00F98E  00                 	db	0
  2288  00F98F  4F                 	db	79
  2289  00F990  4F                 	db	79
  2290  00F991  4F                 	db	79
  2291  00F992  4F                 	db	79
  2292  00F993  4F                 	db	79
  2293  00F994  4F                 	db	79
  2294  00F995  2D                 	db	45
  2295  00F996  2D                 	db	45
  2296  00F997  5F                 	db	95
  2297  00F998  5F                 	db	95
  2298  00F999  2D                 	db	45
  2299  00F99A  00                 	db	0
  2300  00F99B  00                 	db	0
  2301  00F99C  00                 	db	0
  2302  00F99D  00                 	db	0
  2303  00F99E  00                 	db	0
  2304  00F99F  00                 	db	0
  2305  00F9A0  00                 	db	0
  2306  00F9A1  00                 	db	0
  2307  00F9A2  00                 	db	0
  2308  00F9A3  76                 	db	118
  2309  00F9A4  76                 	db	118
  2310  00F9A5  3C                 	db	60
  2311  00F9A6  3C                 	db	60
  2312  00F9A7  5E                 	db	94
  2313  00F9A8  5E                 	db	94
  2314  00F9A9  3E                 	db	62
  2315  00F9AA  3E                 	db	62
  2316  00F9AB  00                 	db	0
  2317  00F9AC  00                 	db	0
  2318  00F9AD  00                 	db	0
  2319  00F9AE  00                 	db	0
  2320  00F9AF  00                 	db	0
  2321  00F9B0  00                 	db	0
  2322  00F9B1  00                 	db	0
  2323  00F9B2  00                 	db	0
  2324  00F9B3  00                 	db	0
  2325  00F9B4  00                 	db	0
  2326  00F9B5  00                 	db	0
  2327  00F9B6  00                 	db	0
  2328  00F9B7  2E                 	db	46
  2329  00F9B8  2E                 	db	46
  2330  00F9B9  2A                 	db	42
  2331  00F9BA  2A                 	db	42
  2332  00F9BB  78                 	db	120
  2333  00F9BC  23                 	db	35
  2334  00F9BD  78                 	db	120
  2335  00F9BE  23                 	db	35
  2336  00F9BF  58                 	db	88
  2337  00F9C0  58                 	db	88
  2338  00F9C1  7C                 	db	124
  2339  00F9C2  7C                 	db	124
  2340  00F9C3  2D                 	db	45
  2341  00F9C4  2D                 	db	45
  2342  00F9C5  00                 	db	0
  2343  00F9C6  00                 	db	0
  2344  00F9C7  00                 	db	0
  2345  00F9C8  00                 	db	0
  2346  00F9C9  00                 	db	0
  2347  00F9CA  00                 	db	0
  2348  00F9CB  2E                 	db	46
  2349  00F9CC  2E                 	db	46
  2350  00F9CD  6F                 	db	111
  2351  00F9CE  6F                 	db	111
  2352  00F9CF  4F                 	db	79
  2353  00F9D0  4F                 	db	79
  2354  00F9D1  6F                 	db	111
  2355  00F9D2  6F                 	db	111
  2356  00F9D3  00                 	db	0
  2357  00F9D4  00                 	db	0
  2358  00F9D5  00                 	db	0
  2359  00F9D6  00                 	db	0
  2360  00F9D7  00                 	db	0
  2361  00F9D8  00                 	db	0
  2362  00F9D9  00                 	db	0
  2363  00F9DA  00                 	db	0
  2364  00F9DB  00                 	db	0
  2365  00F9DC  00                 	db	0
  2366  00F9DD  00                 	db	0
  2367  00F9DE  00                 	db	0
  2368  00F9DF                     __end_of_spin:
  2369                           	opt callstack 0
  2370  00F9DF  0000               	dw	0
  2371  00F9E1  3F80               	dw	16256
  2372  00F9E3  0000               	dw	0
  2373  00F9E5  3FC0               	dw	16320
  2374  00F9E7                     __end_of_bp:
  2375                           	opt callstack 0
  2376  00F9E7                     ___gmt:
  2377                           	opt callstack 0
  2378  00F9E7  47                 	db	71
  2379  00F9E8  4D                 	db	77
  2380  00F9E9  54                 	db	84
  2381  00F9EA  00                 	db	0
  2382  00F9EB                     __end_of___gmt:
  2383                           	opt callstack 0
  2384  00F9EB  AA00               	dw	43520
  2385  00F9ED  3FB8               	dw	16312
  2386  00F9EF                     __end_of_ivln2_h:
  2387                           	opt callstack 0
  2388  00F9EF  23C6               	dw	9158
  2389  00F9F1  B8F6               	dw	47350
  2390  00F9F3                     __end_of_cp_l:
  2391                           	opt callstack 0
  2392  00F9F3  4000               	dw	16384
  2393  00F9F5  3F76               	dw	16246
  2394  00F9F7                     __end_of_cp_h:
  2395                           	opt callstack 0
  2396  0000                     _IVTADL	set	14493
  2397  0000                     _IVTADH	set	14494
  2398  0000                     _IVTADU	set	14495
  2399  0000                     _CRCDATH	set	14689
  2400  0000                     _CRCDATL	set	14688
  2401  0000                     _CRCCON0bits	set	14696
  2402  0000                     _CRCCON1bits	set	14697
  2403  0000                     _CRCXORL	set	14694
  2404  0000                     _CRCXORH	set	14695
  2405  0000                     _SCANTRIG	set	14717
  2406  0000                     _SCANHADRL	set	14713
  2407  0000                     _SCANHADRH	set	14714
  2408  0000                     _SCANHADRU	set	14715
  2409  0000                     _SCANLADRL	set	14710
  2410  0000                     _SCANLADRH	set	14711
  2411  0000                     _SCANLADRU	set	14712
  2412  0000                     _SCANCON0	set	14716
  2413  0000                     _CRCACCH	set	14691
  2414  0000                     _CRCACCL	set	14690
  2415  0000                     _CRCCON1	set	14697
  2416  0000                     _CRCCON0	set	14696
  2417  0000                     _PIR6bits	set	14758
  2418  0000                     _PIR4bits	set	14756
  2419  0000                     _PIE8bits	set	14744
  2420  0000                     _PIR8bits	set	14760
  2421  0000                     _PIR0bits	set	14752
  2422  0000                     _NVMCON2	set	14822
  2423  0000                     _NVMDAT	set	14819
  2424  0000                     _NVMADRL	set	14816
  2425  0000                     _NVMADRH	set	14817
  2426  0000                     _NVMCON1bits	set	14821
  2427  0000                     _SCANPR	set	14839
  2428  0000                     _DMA2PR	set	14836
  2429  0000                     _DMA1PR	set	14835
  2430  0000                     _MAINPR	set	14834
  2431  0000                     _ISRPR	set	14833
  2432  0000                     _PIE2bits	set	14738
  2433  0000                     _PIR2bits	set	14754
  2434  0000                     _PIE9bits	set	14745
  2435  0000                     _PIR9bits	set	14761
  2436  0000                     _PIE6bits	set	14742
  2437  0000                     _PIE3bits	set	14739
  2438  0000                     _PMD7	set	14791
  2439  0000                     _PMD6	set	14790
  2440  0000                     _PMD5	set	14789
  2441  0000                     _PMD4	set	14788
  2442  0000                     _PMD3	set	14787
  2443  0000                     _PMD2	set	14786
  2444  0000                     _PMD1	set	14785
  2445  0000                     _PMD0	set	14784
  2446  0000                     _OSCTUNE	set	14814
  2447  0000                     _OSCFRQ	set	14815
  2448  0000                     _OSCEN	set	14813
  2449  0000                     _OSCCON3	set	14811
  2450  0000                     _OSCCON1	set	14809
  2451  0000                     _IPR8bits	set	14728
  2452  0000                     _IPR9bits	set	14729
  2453  0000                     _IPR5bits	set	14725
  2454  0000                     _IPR1bits	set	14721
  2455  0000                     _IPR3bits	set	14723
  2456  0000                     _IPR6bits	set	14726
  2457  0000                     _IPR2bits	set	14722
  2458  0000                     _PIE5bits	set	14741
  2459  0000                     _PIE1bits	set	14737
  2460  0000                     _PIR5bits	set	14757
  2461  0000                     _PIR1bits	set	14753
  2462  0000                     _PLLR	set	118496
  2463  0000                     _SPI1SDIPPS	set	15071
  2464  0000                     _U1RXPPS	set	15077
  2465  0000                     _RC6PPS	set	14870
  2466  0000                     _RC5PPS	set	14869
  2467  0000                     _INT1PPS	set	15041
  2468  0000                     _RD1PPS	set	14873
  2469  0000                     _INT0PPS	set	15040
  2470  0000                     _RC3PPS	set	14867
  2471  0000                     _RB6PPS	set	14862
  2472  0000                     _SPI1SCKPPS	set	15070
  2473  0000                     _U2RXPPS	set	15080
  2474  0000                     _SLRCONF	set	14995
  2475  0000                     _SLRCONE	set	14979
  2476  0000                     _SLRCOND	set	14963
  2477  0000                     _SLRCONC	set	14947
  2478  0000                     _SLRCONB	set	14931
  2479  0000                     _SLRCONA	set	14915
  2480  0000                     _ODCOND	set	14962
  2481  0000                     _ODCONC	set	14946
  2482  0000                     _ODCONB	set	14930
  2483  0000                     _ODCONA	set	14914
  2484  0000                     _ODCONF	set	14994
  2485  0000                     _ODCONE	set	14978
  2486  0000                     _WPUC	set	14945
  2487  0000                     _WPUA	set	14913
  2488  0000                     _WPUB	set	14929
  2489  0000                     _WPUE	set	14977
  2490  0000                     _WPUF	set	14993
  2491  0000                     _WPUD	set	14961
  2492  0000                     _ANSELA	set	14912
  2493  0000                     _ANSELF	set	14992
  2494  0000                     _ANSELE	set	14976
  2495  0000                     _ANSELB	set	14928
  2496  0000                     _ANSELC	set	14944
  2497  0000                     _ANSELD	set	14960
  2498  0000                     _DMA2SSA	set	15321
  2499  0000                     _DMA1SSA	set	15353
  2500  0000                     _DMA2DSZ	set	15310
  2501  0000                     _DMA2SSZ	set	15319
  2502  0000                     _DMA2DSA	set	15312
  2503  0000                     _DMA1DSZ	set	15342
  2504  0000                     _DMA1SSZ	set	15351
  2505  0000                     _DMA1DSA	set	15344
  2506  0000                     _DMA2CON0bits	set	15324
  2507  0000                     _DMA2CON1bits	set	15325
  2508  0000                     _DMA1CON0bits	set	15356
  2509  0000                     _DMA1CON1bits	set	15357
  2510  0000                     _DMA2CON0	set	15324
  2511  0000                     _DMA2AIRQ	set	15326
  2512  0000                     _DMA2SIRQ	set	15327
  2513  0000                     _DMA2CON1	set	15325
  2514  0000                     _DMA1CON0	set	15356
  2515  0000                     _DMA1AIRQ	set	15358
  2516  0000                     _DMA1SIRQ	set	15359
  2517  0000                     _DMA1CON1	set	15357
  2518  0000                     _CLKRCON	set	15589
  2519  0000                     _CLKRCLK	set	15590
  2520  0000                     _SPI1CON1bits	set	15637
  2521  0000                     _SPI1STATUSbits	set	15639
  2522  0000                     _SPI1INTFbits	set	15642
  2523  0000                     _SPI1CON0bits	set	15636
  2524  0000                     _SPI1RXB	set	15632
  2525  0000                     _SPI1TXB	set	15633
  2526  0000                     _SPI1TCNTL	set	15634
  2527  0000                     _SPI1CON0	set	15636
  2528  0000                     _SPI1CLK	set	15644
  2529  0000                     _SPI1BAUD	set	15641
  2530  0000                     _SPI1CON2	set	15638
  2531  0000                     _SPI1CON1	set	15637
  2532  0000                     _U2RXB	set	15824
  2533  0000                     _U2TXB	set	15826
  2534  0000                     _U2ERRIE	set	15842
  2535  0000                     _U2ERRIR	set	15841
  2536  0000                     _U2UIR	set	15840
  2537  0000                     _U2FIFO	set	15839
  2538  0000                     _U2BRGH	set	15838
  2539  0000                     _U2BRGL	set	15837
  2540  0000                     _U2CON2	set	15836
  2541  0000                     _U2CON1	set	15835
  2542  0000                     _U2CON0	set	15834
  2543  0000                     _U2P3L	set	15832
  2544  0000                     _U2P2L	set	15830
  2545  0000                     _U2P1L	set	15828
  2546  0000                     _U1RXB	set	15848
  2547  0000                     _U1ERRIE	set	15866
  2548  0000                     _U1ERRIR	set	15865
  2549  0000                     _U1UIR	set	15864
  2550  0000                     _U1FIFO	set	15863
  2551  0000                     _U1BRGH	set	15862
  2552  0000                     _U1BRGL	set	15861
  2553  0000                     _U1CON2	set	15860
  2554  0000                     _U1CON1	set	15859
  2555  0000                     _U1CON0	set	15858
  2556  0000                     _U1P3H	set	15857
  2557  0000                     _U1P3L	set	15856
  2558  0000                     _U1P2H	set	15855
  2559  0000                     _U1P2L	set	15854
  2560  0000                     _U1P1H	set	15853
  2561  0000                     _U1P1L	set	15852
  2562  0000                     _FVRCON	set	16065
  2563  0000                     _ADFLTRL	set	16102
  2564  0000                     _ADFLTRH	set	16103
  2565  0000                     _ADCON0bits	set	16120
  2566  0000                     _ADCON0	set	16120
  2567  0000                     _ADCLK	set	16127
  2568  0000                     _ADACT	set	16126
  2569  0000                     _ADREF	set	16125
  2570  0000                     _ADSTAT	set	16124
  2571  0000                     _ADCON3	set	16123
  2572  0000                     _ADCON2	set	16122
  2573  0000                     _ADCON1	set	16121
  2574  0000                     _ADPREH	set	16119
  2575  0000                     _ADPREL	set	16118
  2576  0000                     _ADCAP	set	16117
  2577  0000                     _ADACQH	set	16116
  2578  0000                     _ADACQL	set	16115
  2579  0000                     _ADPCH	set	16113
  2580  0000                     _ADRPT	set	16108
  2581  0000                     _ADACCU	set	16106
  2582  0000                     _ADSTPTH	set	16101
  2583  0000                     _ADSTPTL	set	16100
  2584  0000                     _ADUTHH	set	16097
  2585  0000                     _ADUTHL	set	16096
  2586  0000                     _ADLTHH	set	16095
  2587  0000                     _ADLTHL	set	16094
  2588  0000                     _CCPTMRS1bits	set	16223
  2589  0000                     _PORTDbits	set	16333
  2590  0000                     _PORTFbits	set	16335
  2591  0000                     _LATFbits	set	16319
  2592  0000                     _LATCbits	set	16316
  2593  0000                     _LATDbits	set	16317
  2594  0000                     _PORTBbits	set	16331
  2595  0000                     _T3CONbits	set	16294
  2596  0000                     _T3CON	set	16294
  2597  0000                     _TMR3L	set	16292
  2598  0000                     _TMR3H	set	16293
  2599  0000                     _T3CLK	set	16297
  2600  0000                     _T3GATE	set	16296
  2601  0000                     _T3GCON	set	16295
  2602  0000                     _T2CON	set	16300
  2603  0000                     _T2TMR	set	16298
  2604  0000                     _T2PR	set	16299
  2605  0000                     _T2RST	set	16303
  2606  0000                     _T2HLT	set	16301
  2607  0000                     _T2CLKCON	set	16302
  2608  0000                     _PWM8DCL	set	16224
  2609  0000                     _PWM8DCH	set	16225
  2610  0000                     _PWM8CON	set	16226
  2611  0000                     _LATEbits	set	16318
  2612  0000                     _T5CONbits	set	16282
  2613  0000                     _T5CON	set	16282
  2614  0000                     _TMR5L	set	16280
  2615  0000                     _TMR5H	set	16281
  2616  0000                     _T5CLK	set	16285
  2617  0000                     _T5GATE	set	16284
  2618  0000                     _T5GCON	set	16283
  2619  0000                     _T6CON	set	16276
  2620  0000                     _T6TMR	set	16274
  2621  0000                     _T6PR	set	16275
  2622  0000                     _T6RST	set	16279
  2623  0000                     _T6HLT	set	16277
  2624  0000                     _T6CLKCON	set	16278
  2625  0000                     _TRISD	set	16325
  2626  0000                     _TRISC	set	16324
  2627  0000                     _TRISB	set	16323
  2628  0000                     _TRISA	set	16322
  2629  0000                     _TRISF	set	16327
  2630  0000                     _TRISE	set	16326
  2631  0000                     _LATC	set	16316
  2632  0000                     _LATB	set	16315
  2633  0000                     _LATF	set	16319
  2634  0000                     _LATA	set	16314
  2635  0000                     _LATD	set	16317
  2636  0000                     _LATE	set	16318
  2637  0000                     _IVTLOCKbits	set	16340
  2638  0000                     _IVTLOCK	set	16340
  2639  0000                     _INTCON0bits	set	16338
  2640  0000                     _GIE	set	130711
  2641  00F9F7                     STR_90:
  2642                           
  2643                           ; BSR set to: 57
  2644  00F9F7  20                 	db	32
  2645  00F9F8  25                 	db	37
  2646  00F9F9  63                 	db	99	;'c'
  2647  00F9FA  20                 	db	32
  2648  00F9FB  2C                 	db	44
  2649  00F9FC  25                 	db	37
  2650  00F9FD  6C                 	db	108	;'l'
  2651  00F9FE  75                 	db	117	;'u'
  2652  00F9FF  2C                 	db	44
  2653  00FA00  25                 	db	37
  2654  00FA01  34                 	db	52	;'4'
  2655  00FA02  2E                 	db	46
  2656  00FA03  34                 	db	52	;'4'
  2657  00FA04  66                 	db	102	;'f'
  2658  00FA05  2C                 	db	44
  2659  00FA06  25                 	db	37
  2660  00FA07  34                 	db	52	;'4'
  2661  00FA08  2E                 	db	46
  2662  00FA09  34                 	db	52	;'4'
  2663  00FA0A  66                 	db	102	;'f'
  2664  00FA0B  2C                 	db	44
  2665  00FA0C  25                 	db	37
  2666  00FA0D  34                 	db	52	;'4'
  2667  00FA0E  2E                 	db	46
  2668  00FA0F  34                 	db	52	;'4'
  2669  00FA10  66                 	db	102	;'f'
  2670  00FA11  2C                 	db	44
  2671  00FA12  25                 	db	37
  2672  00FA13  34                 	db	52	;'4'
  2673  00FA14  2E                 	db	46
  2674  00FA15  34                 	db	52	;'4'
  2675  00FA16  66                 	db	102	;'f'
  2676  00FA17  2C                 	db	44
  2677  00FA18  25                 	db	37
  2678  00FA19  34                 	db	52	;'4'
  2679  00FA1A  2E                 	db	46
  2680  00FA1B  34                 	db	52	;'4'
  2681  00FA1C  66                 	db	102	;'f'
  2682  00FA1D  2C                 	db	44
  2683  00FA1E  25                 	db	37
  2684  00FA1F  34                 	db	52	;'4'
  2685  00FA20  2E                 	db	46
  2686  00FA21  33                 	db	51	;'3'
  2687  00FA22  66                 	db	102	;'f'
  2688  00FA23  2C                 	db	44
  2689  00FA24  25                 	db	37
  2690  00FA25  34                 	db	52	;'4'
  2691  00FA26  2E                 	db	46
  2692  00FA27  33                 	db	51	;'3'
  2693  00FA28  66                 	db	102	;'f'
  2694  00FA29  2C                 	db	44
  2695  00FA2A  25                 	db	37
  2696  00FA2B  34                 	db	52	;'4'
  2697  00FA2C  2E                 	db	46
  2698  00FA2D  33                 	db	51	;'3'
  2699  00FA2E  66                 	db	102	;'f'
  2700  00FA2F  2C                 	db	44
  2701  00FA30  25                 	db	37
  2702  00FA31  34                 	db	52	;'4'
  2703  00FA32  2E                 	db	46
  2704  00FA33  33                 	db	51	;'3'
  2705  00FA34  66                 	db	102	;'f'
  2706  00FA35  2C                 	db	44
  2707  00FA36  25                 	db	37
  2708  00FA37  34                 	db	52	;'4'
  2709  00FA38  2E                 	db	46
  2710  00FA39  33                 	db	51	;'3'
  2711  00FA3A  66                 	db	102	;'f'
  2712  00FA3B  2C                 	db	44
  2713  00FA3C  25                 	db	37
  2714  00FA3D  34                 	db	52	;'4'
  2715  00FA3E  2E                 	db	46
  2716  00FA3F  33                 	db	51	;'3'
  2717  00FA40  66                 	db	102	;'f'
  2718  00FA41  2C                 	db	44
  2719  00FA42  25                 	db	37
  2720  00FA43  64                 	db	100	;'d'
  2721  00FA44  2C                 	db	44
  2722  00FA45  25                 	db	37
  2723  00FA46  64                 	db	100	;'d'
  2724  00FA47  2C                 	db	44
  2725  00FA48  25                 	db	37
  2726  00FA49  32                 	db	50	;'2'
  2727  00FA4A  2E                 	db	46
  2728  00FA4B  36                 	db	54	;'6'
  2729  00FA4C  66                 	db	102	;'f'
  2730  00FA4D  2C                 	db	44
  2731  00FA4E  25                 	db	37
  2732  00FA4F  34                 	db	52	;'4'
  2733  00FA50  2E                 	db	46
  2734  00FA51  33                 	db	51	;'3'
  2735  00FA52  66                 	db	102	;'f'
  2736  00FA53  2C                 	db	44
  2737  00FA54  25                 	db	37
  2738  00FA55  64                 	db	100	;'d'
  2739  00FA56  2C                 	db	44
  2740  00FA57  25                 	db	37
  2741  00FA58  64                 	db	100	;'d'
  2742  00FA59  2C                 	db	44
  2743  00FA5A  25                 	db	37
  2744  00FA5B  6C                 	db	108	;'l'
  2745  00FA5C  75                 	db	117	;'u'
  2746  00FA5D  2C                 	db	44
  2747  00FA5E  25                 	db	37
  2748  00FA5F  6C                 	db	108	;'l'
  2749  00FA60  75                 	db	117	;'u'
  2750  00FA61  2C                 	db	44
  2751  00FA62  25                 	db	37
  2752  00FA63  34                 	db	52	;'4'
  2753  00FA64  2E                 	db	46
  2754  00FA65  33                 	db	51	;'3'
  2755  00FA66  66                 	db	102	;'f'
  2756  00FA67  2C                 	db	44
  2757  00FA68  25                 	db	37
  2758  00FA69  34                 	db	52	;'4'
  2759  00FA6A  2E                 	db	46
  2760  00FA6B  33                 	db	51	;'3'
  2761  00FA6C  66                 	db	102	;'f'
  2762  00FA6D  2C                 	db	44
  2763  00FA6E  25                 	db	37
  2764  00FA6F  34                 	db	52	;'4'
  2765  00FA70  2E                 	db	46
  2766  00FA71  33                 	db	51	;'3'
  2767  00FA72  66                 	db	102	;'f'
  2768  00FA73  0D                 	db	13
  2769  00FA74  0A                 	db	10
  2770  00FA75  00                 	db	0
  2771  00FA76                     STR_128:
  2772                           
  2773                           ; BSR set to: 57
  2774  00FA76  4A                 	db	74	;'J'
  2775  00FA77  61                 	db	97	;'a'
  2776  00FA78  6E                 	db	110	;'n'
  2777  00FA79  46                 	db	70	;'F'
  2778  00FA7A  65                 	db	101	;'e'
  2779  00FA7B  62                 	db	98	;'b'
  2780  00FA7C  4D                 	db	77	;'M'
  2781  00FA7D  61                 	db	97	;'a'
  2782  00FA7E  72                 	db	114	;'r'
  2783  00FA7F  41                 	db	65	;'A'
  2784  00FA80  70                 	db	112	;'p'
  2785  00FA81  72                 	db	114	;'r'
  2786  00FA82  4D                 	db	77	;'M'
  2787  00FA83  61                 	db	97	;'a'
  2788  00FA84  79                 	db	121	;'y'
  2789  00FA85  4A                 	db	74	;'J'
  2790  00FA86  75                 	db	117	;'u'
  2791  00FA87  6E                 	db	110	;'n'
  2792  00FA88  4A                 	db	74	;'J'
  2793  00FA89  75                 	db	117	;'u'
  2794  00FA8A  6C                 	db	108	;'l'
  2795  00FA8B  41                 	db	65	;'A'
  2796  00FA8C  75                 	db	117	;'u'
  2797  00FA8D  67                 	db	103	;'g'
  2798  00FA8E  53                 	db	83	;'S'
  2799  00FA8F  65                 	db	101	;'e'
  2800  00FA90  70                 	db	112	;'p'
  2801  00FA91  4F                 	db	79	;'O'
  2802  00FA92  63                 	db	99	;'c'
  2803  00FA93  74                 	db	116	;'t'
  2804  00FA94  4E                 	db	78	;'N'
  2805  00FA95  6F                 	db	111	;'o'
  2806  00FA96  76                 	db	118	;'v'
  2807  00FA97  44                 	db	68	;'D'
  2808  00FA98  65                 	db	101	;'e'
  2809  00FA99  63                 	db	99	;'c'
  2810  00FA9A  00                 	db	0
  2811  00FA9B                     STR_45:
  2812                           
  2813                           ; BSR set to: 57
  2814  00FA9B  53                 	db	83	;'S'
  2815  00FA9C  25                 	db	37
  2816  00FA9D  63                 	db	99	;'c'
  2817  00FA9E  43                 	db	67	;'C'
  2818  00FA9F  20                 	db	32
  2819  00FAA0  25                 	db	37
  2820  00FAA1  64                 	db	100	;'d'
  2821  00FAA2  20                 	db	32
  2822  00FAA3  52                 	db	82	;'R'
  2823  00FAA4  55                 	db	85	;'U'
  2824  00FAA5  4E                 	db	78	;'N'
  2825  00FAA6  20                 	db	32
  2826  00FAA7  25                 	db	37
  2827  00FAA8  64                 	db	100	;'d'
  2828  00FAA9  20                 	db	32
  2829  00FAAA  56                 	db	86	;'V'
  2830  00FAAB  25                 	db	37
  2831  00FAAC  32                 	db	50	;'2'
  2832  00FAAD  2E                 	db	46
  2833  00FAAE  32                 	db	50	;'2'
  2834  00FAAF  66                 	db	102	;'f'
  2835  00FAB0  20                 	db	32
  2836  00FAB1  20                 	db	32
  2837  00FAB2  20                 	db	32
  2838  00FAB3  20                 	db	32
  2839  00FAB4  20                 	db	32
  2840  00FAB5  20                 	db	32
  2841  00FAB6  20                 	db	32
  2842  00FAB7  20                 	db	32
  2843  00FAB8  00                 	db	0
  2844  00FAB9                     STR_65:
  2845                           
  2846                           ; BSR set to: 57
  2847  00FAB9  25                 	db	37
  2848  00FABA  64                 	db	100	;'d'
  2849  00FABB  20                 	db	32
  2850  00FABC  25                 	db	37
  2851  00FABD  64                 	db	100	;'d'
  2852  00FABE  20                 	db	32
  2853  00FABF  25                 	db	37
  2854  00FAC0  64                 	db	100	;'d'
  2855  00FAC1  20                 	db	32
  2856  00FAC2  25                 	db	37
  2857  00FAC3  64                 	db	100	;'d'
  2858  00FAC4  20                 	db	32
  2859  00FAC5  20                 	db	32
  2860  00FAC6  20                 	db	32
  2861  00FAC7  20                 	db	32
  2862  00FAC8  20                 	db	32
  2863  00FAC9  20                 	db	32
  2864  00FACA  20                 	db	32
  2865  00FACB  20                 	db	32
  2866  00FACC  20                 	db	32
  2867  00FACD  20                 	db	32
  2868  00FACE  20                 	db	32
  2869  00FACF  20                 	db	32
  2870  00FAD0  20                 	db	32
  2871  00FAD1  20                 	db	32
  2872  00FAD2  20                 	db	32
  2873  00FAD3  20                 	db	32
  2874  00FAD4  00                 	db	0
  2875  00FAD5                     STR_22:
  2876                           
  2877                           ; BSR set to: 57
  2878  00FAD5  52                 	db	82	;'R'
  2879  00FAD6  31                 	db	49	;'1'
  2880  00FAD7  20                 	db	32
  2881  00FAD8  25                 	db	37
  2882  00FAD9  32                 	db	50	;'2'
  2883  00FADA  2E                 	db	46
  2884  00FADB  33                 	db	51	;'3'
  2885  00FADC  66                 	db	102	;'f'
  2886  00FADD  20                 	db	32
  2887  00FADE  25                 	db	37
  2888  00FADF  33                 	db	51	;'3'
  2889  00FAE0  2E                 	db	46
  2890  00FAE1  34                 	db	52	;'4'
  2891  00FAE2  66                 	db	102	;'f'
  2892  00FAE3  20                 	db	32
  2893  00FAE4  20                 	db	32
  2894  00FAE5  20                 	db	32
  2895  00FAE6  20                 	db	32
  2896  00FAE7  20                 	db	32
  2897  00FAE8  20                 	db	32
  2898  00FAE9  20                 	db	32
  2899  00FAEA  20                 	db	32
  2900  00FAEB  20                 	db	32
  2901  00FAEC  20                 	db	32
  2902  00FAED  20                 	db	32
  2903  00FAEE  20                 	db	32
  2904  00FAEF  00                 	db	0
  2905  00FAF0                     STR_23:
  2906                           
  2907                           ; BSR set to: 57
  2908  00FAF0  52                 	db	82	;'R'
  2909  00FAF1  32                 	db	50	;'2'
  2910  00FAF2  20                 	db	32
  2911  00FAF3  25                 	db	37
  2912  00FAF4  32                 	db	50	;'2'
  2913  00FAF5  2E                 	db	46
  2914  00FAF6  33                 	db	51	;'3'
  2915  00FAF7  66                 	db	102	;'f'
  2916  00FAF8  20                 	db	32
  2917  00FAF9  25                 	db	37
  2918  00FAFA  33                 	db	51	;'3'
  2919  00FAFB  2E                 	db	46
  2920  00FAFC  34                 	db	52	;'4'
  2921  00FAFD  66                 	db	102	;'f'
  2922  00FAFE  20                 	db	32
  2923  00FAFF  20                 	db	32
  2924  00FB00  20                 	db	32
  2925  00FB01  20                 	db	32
  2926  00FB02  20                 	db	32
  2927  00FB03  20                 	db	32
  2928  00FB04  20                 	db	32
  2929  00FB05  20                 	db	32
  2930  00FB06  20                 	db	32
  2931  00FB07  20                 	db	32
  2932  00FB08  20                 	db	32
  2933  00FB09  20                 	db	32
  2934  00FB0A  00                 	db	0
  2935  00FB0B                     
  2936                           ; BSR set to: 57
  2937  00FB0B  20                 	db	32
  2938  00FB0C  4D                 	db	77	;'M'
  2939  00FB0D  65                 	db	101	;'e'
  2940  00FB0E  73                 	db	115	;'s'
  2941  00FB0F  67                 	db	103	;'g'
  2942  00FB10  20                 	db	32
  2943  00FB11  25                 	db	37
  2944  00FB12  64                 	db	100	;'d'
  2945  00FB13  20                 	db	32
  2946  00FB14  53                 	db	83	;'S'
  2947  00FB15  74                 	db	116	;'t'
  2948  00FB16  61                 	db	97	;'a'
  2949  00FB17  63                 	db	99	;'c'
  2950  00FB18  6B                 	db	107	;'k'
  2951  00FB19  20                 	db	32
  2952  00FB1A  25                 	db	37
  2953  00FB1B  64                 	db	100	;'d'
  2954  00FB1C  20                 	db	32
  2955  00FB1D  20                 	db	32
  2956  00FB1E  20                 	db	32
  2957  00FB1F  20                 	db	32
  2958  00FB20  20                 	db	32
  2959  00FB21  20                 	db	32
  2960  00FB22  20                 	db	32
  2961  00FB23  20                 	db	32
  2962  00FB24  00                 	db	0
  2963  00FB25                     STR_13:
  2964                           
  2965                           ; BSR set to: 57
  2966  00FB25  53                 	db	83	;'S'
  2967  00FB26  20                 	db	32
  2968  00FB27  53                 	db	83	;'S'
  2969  00FB28  25                 	db	37
  2970  00FB29  63                 	db	99	;'c'
  2971  00FB2A  43                 	db	67	;'C'
  2972  00FB2B  20                 	db	32
  2973  00FB2C  25                 	db	37
  2974  00FB2D  64                 	db	100	;'d'
  2975  00FB2E  20                 	db	32
  2976  00FB2F  25                 	db	37
  2977  00FB30  32                 	db	50	;'2'
  2978  00FB31  2E                 	db	46
  2979  00FB32  34                 	db	52	;'4'
  2980  00FB33  66                 	db	102	;'f'
  2981  00FB34  20                 	db	32
  2982  00FB35  20                 	db	32
  2983  00FB36  20                 	db	32
  2984  00FB37  20                 	db	32
  2985  00FB38  20                 	db	32
  2986  00FB39  20                 	db	32
  2987  00FB3A  20                 	db	32
  2988  00FB3B  20                 	db	32
  2989  00FB3C  20                 	db	32
  2990  00FB3D  20                 	db	32
  2991  00FB3E  00                 	db	0
  2992  00FB3F                     STR_46:
  2993                           
  2994                           ; BSR set to: 57
  2995  00FB3F  45                 	db	69	;'E'
  2996  00FB40  53                 	db	83	;'S'
  2997  00FB41  52                 	db	82	;'R'
  2998  00FB42  20                 	db	32
  2999  00FB43  20                 	db	32
  3000  00FB44  25                 	db	37
  3001  00FB45  32                 	db	50	;'2'
  3002  00FB46  2E                 	db	46
  3003  00FB47  36                 	db	54	;'6'
  3004  00FB48  66                 	db	102	;'f'
  3005  00FB49  20                 	db	32
  3006  00FB4A  20                 	db	32
  3007  00FB4B  20                 	db	32
  3008  00FB4C  20                 	db	32
  3009  00FB4D  20                 	db	32
  3010  00FB4E  20                 	db	32
  3011  00FB4F  20                 	db	32
  3012  00FB50  20                 	db	32
  3013  00FB51  20                 	db	32
  3014  00FB52  20                 	db	32
  3015  00FB53  20                 	db	32
  3016  00FB54  20                 	db	32
  3017  00FB55  20                 	db	32
  3018  00FB56  00                 	db	0
  3019  00FB57                     STR_43:
  3020                           
  3021                           ; BSR set to: 57
  3022  00FB57  42                 	db	66	;'B'
  3023  00FB58  41                 	db	65	;'A'
  3024  00FB59  54                 	db	84	;'T'
  3025  00FB5A  54                 	db	84	;'T'
  3026  00FB5B  20                 	db	32
  3027  00FB5C  50                 	db	80	;'P'
  3028  00FB5D  57                 	db	87	;'W'
  3029  00FB5E  52                 	db	82	;'R'
  3030  00FB5F  20                 	db	32
  3031  00FB60  25                 	db	37
  3032  00FB61  33                 	db	51	;'3'
  3033  00FB62  2E                 	db	46
  3034  00FB63  32                 	db	50	;'2'
  3035  00FB64  66                 	db	102	;'f'
  3036  00FB65  20                 	db	32
  3037  00FB66  20                 	db	32
  3038  00FB67  20                 	db	32
  3039  00FB68  20                 	db	32
  3040  00FB69  20                 	db	32
  3041  00FB6A  20                 	db	32
  3042  00FB6B  20                 	db	32
  3043  00FB6C  20                 	db	32
  3044  00FB6D  20                 	db	32
  3045  00FB6E  00                 	db	0
  3046  00FB6F                     STR_47:
  3047                           
  3048                           ; BSR set to: 57
  3049  00FB6F  52                 	db	82	;'R'
  3050  00FB70  31                 	db	49	;'1'
  3051  00FB71  20                 	db	32
  3052  00FB72  25                 	db	37
  3053  00FB73  32                 	db	50	;'2'
  3054  00FB74  2E                 	db	46
  3055  00FB75  33                 	db	51	;'3'
  3056  00FB76  66                 	db	102	;'f'
  3057  00FB77  20                 	db	32
  3058  00FB78  25                 	db	37
  3059  00FB79  33                 	db	51	;'3'
  3060  00FB7A  2E                 	db	46
  3061  00FB7B  34                 	db	52	;'4'
  3062  00FB7C  66                 	db	102	;'f'
  3063  00FB7D  20                 	db	32
  3064  00FB7E  20                 	db	32
  3065  00FB7F  20                 	db	32
  3066  00FB80  20                 	db	32
  3067  00FB81  20                 	db	32
  3068  00FB82  20                 	db	32
  3069  00FB83  20                 	db	32
  3070  00FB84  20                 	db	32
  3071  00FB85  20                 	db	32
  3072  00FB86  00                 	db	0
  3073  00FB87                     STR_48:
  3074                           
  3075                           ; BSR set to: 57
  3076  00FB87  52                 	db	82	;'R'
  3077  00FB88  32                 	db	50	;'2'
  3078  00FB89  20                 	db	32
  3079  00FB8A  25                 	db	37
  3080  00FB8B  32                 	db	50	;'2'
  3081  00FB8C  2E                 	db	46
  3082  00FB8D  33                 	db	51	;'3'
  3083  00FB8E  66                 	db	102	;'f'
  3084  00FB8F  20                 	db	32
  3085  00FB90  25                 	db	37
  3086  00FB91  33                 	db	51	;'3'
  3087  00FB92  2E                 	db	46
  3088  00FB93  34                 	db	52	;'4'
  3089  00FB94  66                 	db	102	;'f'
  3090  00FB95  20                 	db	32
  3091  00FB96  20                 	db	32
  3092  00FB97  20                 	db	32
  3093  00FB98  20                 	db	32
  3094  00FB99  20                 	db	32
  3095  00FB9A  20                 	db	32
  3096  00FB9B  20                 	db	32
  3097  00FB9C  20                 	db	32
  3098  00FB9D  20                 	db	32
  3099  00FB9E  00                 	db	0
  3100  00FB9F                     STR_44:
  3101                           
  3102                           ; BSR set to: 57
  3103  00FB9F  42                 	db	66	;'B'
  3104  00FBA0  41                 	db	65	;'A'
  3105  00FBA1  48                 	db	72	;'H'
  3106  00FBA2  20                 	db	32
  3107  00FBA3  25                 	db	37
  3108  00FBA4  33                 	db	51	;'3'
  3109  00FBA5  2E                 	db	46
  3110  00FBA6  32                 	db	50	;'2'
  3111  00FBA7  66                 	db	102	;'f'
  3112  00FBA8  20                 	db	32
  3113  00FBA9  50                 	db	80	;'P'
  3114  00FBAA  25                 	db	37
  3115  00FBAB  33                 	db	51	;'3'
  3116  00FBAC  2E                 	db	46
  3117  00FBAD  32                 	db	50	;'2'
  3118  00FBAE  66                 	db	102	;'f'
  3119  00FBAF  20                 	db	32
  3120  00FBB0  20                 	db	32
  3121  00FBB1  20                 	db	32
  3122  00FBB2  20                 	db	32
  3123  00FBB3  20                 	db	32
  3124  00FBB4  20                 	db	32
  3125  00FBB5  20                 	db	32
  3126  00FBB6  00                 	db	0
  3127  00FBB7                     STR_16:
  3128                           
  3129                           ; BSR set to: 57
  3130  00FBB7  20                 	db	32
  3131  00FBB8  20                 	db	32
  3132  00FBB9  20                 	db	32
  3133  00FBBA  20                 	db	32
  3134  00FBBB  20                 	db	32
  3135  00FBBC  20                 	db	32
  3136  00FBBD  20                 	db	32
  3137  00FBBE  20                 	db	32
  3138  00FBBF  20                 	db	32
  3139  00FBC0  20                 	db	32
  3140  00FBC1  20                 	db	32
  3141  00FBC2  20                 	db	32
  3142  00FBC3  20                 	db	32
  3143  00FBC4  20                 	db	32
  3144  00FBC5  20                 	db	32
  3145  00FBC6  20                 	db	32
  3146  00FBC7  20                 	db	32
  3147  00FBC8  20                 	db	32
  3148  00FBC9  20                 	db	32
  3149  00FBCA  20                 	db	32
  3150  00FBCB  20                 	db	32
  3151  00FBCC  20                 	db	32
  3152  00FBCD  00                 	db	0
  3153  00FBCE                     STR_21:
  3154                           
  3155                           ; BSR set to: 57
  3156  00FBCE  45                 	db	69	;'E'
  3157  00FBCF  53                 	db	83	;'S'
  3158  00FBD0  52                 	db	82	;'R'
  3159  00FBD1  20                 	db	32
  3160  00FBD2  20                 	db	32
  3161  00FBD3  25                 	db	37
  3162  00FBD4  32                 	db	50	;'2'
  3163  00FBD5  2E                 	db	46
  3164  00FBD6  36                 	db	54	;'6'
  3165  00FBD7  66                 	db	102	;'f'
  3166  00FBD8  20                 	db	32
  3167  00FBD9  20                 	db	32
  3168  00FBDA  20                 	db	32
  3169  00FBDB  20                 	db	32
  3170  00FBDC  20                 	db	32
  3171  00FBDD  20                 	db	32
  3172  00FBDE  20                 	db	32
  3173  00FBDF  20                 	db	32
  3174  00FBE0  20                 	db	32
  3175  00FBE1  20                 	db	32
  3176  00FBE2  20                 	db	32
  3177  00FBE3  20                 	db	32
  3178  00FBE4  00                 	db	0
  3179  00FBE5                     STR_14:
  3180                           
  3181                           ; BSR set to: 57
  3182  00FBE5  53                 	db	83	;'S'
  3183  00FBE6  74                 	db	116	;'t'
  3184  00FBE7  61                 	db	97	;'a'
  3185  00FBE8  74                 	db	116	;'t'
  3186  00FBE9  69                 	db	105	;'i'
  3187  00FBEA  63                 	db	99	;'c'
  3188  00FBEB  20                 	db	32
  3189  00FBEC  53                 	db	83	;'S'
  3190  00FBED  4F                 	db	79	;'O'
  3191  00FBEE  43                 	db	67	;'C'
  3192  00FBEF  20                 	db	32
  3193  00FBF0  25                 	db	37
  3194  00FBF1  64                 	db	100	;'d'
  3195  00FBF2  20                 	db	32
  3196  00FBF3  20                 	db	32
  3197  00FBF4  20                 	db	32
  3198  00FBF5  20                 	db	32
  3199  00FBF6  20                 	db	32
  3200  00FBF7  20                 	db	32
  3201  00FBF8  20                 	db	32
  3202  00FBF9  20                 	db	32
  3203  00FBFA  20                 	db	32
  3204  00FBFB  00                 	db	0
  3205  00FBFC                     STR_40:
  3206                           
  3207                           ; BSR set to: 57
  3208  00FBFC  42                 	db	66	;'B'
  3209  00FBFD  41                 	db	65	;'A'
  3210  00FBFE  54                 	db	84	;'T'
  3211  00FBFF  20                 	db	32
  3212  00FC00  49                 	db	73	;'I'
  3213  00FC01  57                 	db	87	;'W'
  3214  00FC02  48                 	db	72	;'H'
  3215  00FC03  20                 	db	32
  3216  00FC04  25                 	db	37
  3217  00FC05  34                 	db	52	;'4'
  3218  00FC06  2E                 	db	46
  3219  00FC07  31                 	db	49	;'1'
  3220  00FC08  66                 	db	102	;'f'
  3221  00FC09  20                 	db	32
  3222  00FC0A  20                 	db	32
  3223  00FC0B  20                 	db	32
  3224  00FC0C  20                 	db	32
  3225  00FC0D  20                 	db	32
  3226  00FC0E  20                 	db	32
  3227  00FC0F  20                 	db	32
  3228  00FC10  20                 	db	32
  3229  00FC11  20                 	db	32
  3230  00FC12  00                 	db	0
  3231  00FC13                     STR_41:
  3232                           
  3233                           ; BSR set to: 57
  3234  00FC13  42                 	db	66	;'B'
  3235  00FC14  41                 	db	65	;'A'
  3236  00FC15  54                 	db	84	;'T'
  3237  00FC16  20                 	db	32
  3238  00FC17  4F                 	db	79	;'O'
  3239  00FC18  57                 	db	87	;'W'
  3240  00FC19  48                 	db	72	;'H'
  3241  00FC1A  20                 	db	32
  3242  00FC1B  25                 	db	37
  3243  00FC1C  34                 	db	52	;'4'
  3244  00FC1D  2E                 	db	46
  3245  00FC1E  31                 	db	49	;'1'
  3246  00FC1F  66                 	db	102	;'f'
  3247  00FC20  20                 	db	32
  3248  00FC21  20                 	db	32
  3249  00FC22  20                 	db	32
  3250  00FC23  20                 	db	32
  3251  00FC24  20                 	db	32
  3252  00FC25  20                 	db	32
  3253  00FC26  20                 	db	32
  3254  00FC27  20                 	db	32
  3255  00FC28  20                 	db	32
  3256  00FC29  00                 	db	0
  3257  00FC2A                     STR_42:
  3258                           
  3259                           ; BSR set to: 57
  3260  00FC2A  42                 	db	66	;'B'
  3261  00FC2B  41                 	db	65	;'A'
  3262  00FC2C  54                 	db	84	;'T'
  3263  00FC2D  20                 	db	32
  3264  00FC2E  54                 	db	84	;'T'
  3265  00FC2F  57                 	db	87	;'W'
  3266  00FC30  48                 	db	72	;'H'
  3267  00FC31  20                 	db	32
  3268  00FC32  25                 	db	37
  3269  00FC33  34                 	db	52	;'4'
  3270  00FC34  2E                 	db	46
  3271  00FC35  31                 	db	49	;'1'
  3272  00FC36  66                 	db	102	;'f'
  3273  00FC37  20                 	db	32
  3274  00FC38  20                 	db	32
  3275  00FC39  20                 	db	32
  3276  00FC3A  20                 	db	32
  3277  00FC3B  20                 	db	32
  3278  00FC3C  20                 	db	32
  3279  00FC3D  20                 	db	32
  3280  00FC3E  20                 	db	32
  3281  00FC3F  20                 	db	32
  3282  00FC40  00                 	db	0
  3283  00FC41                     STR_36:
  3284                           
  3285                           ; BSR set to: 57
  3286  00FC41  49                 	db	73	;'I'
  3287  00FC42  4E                 	db	78	;'N'
  3288  00FC43  56                 	db	86	;'V'
  3289  00FC44  20                 	db	32
  3290  00FC45  20                 	db	32
  3291  00FC46  57                 	db	87	;'W'
  3292  00FC47  48                 	db	72	;'H'
  3293  00FC48  20                 	db	32
  3294  00FC49  25                 	db	37
  3295  00FC4A  33                 	db	51	;'3'
  3296  00FC4B  2E                 	db	46
  3297  00FC4C  32                 	db	50	;'2'
  3298  00FC4D  66                 	db	102	;'f'
  3299  00FC4E  20                 	db	32
  3300  00FC4F  20                 	db	32
  3301  00FC50  20                 	db	32
  3302  00FC51  20                 	db	32
  3303  00FC52  20                 	db	32
  3304  00FC53  20                 	db	32
  3305  00FC54  20                 	db	32
  3306  00FC55  20                 	db	32
  3307  00FC56  20                 	db	32
  3308  00FC57  00                 	db	0
  3309  00FC58                     STR_35:
  3310                           
  3311                           ; BSR set to: 57
  3312  00FC58  4C                 	db	76	;'L'
  3313  00FC59  4F                 	db	79	;'O'
  3314  00FC5A  41                 	db	65	;'A'
  3315  00FC5B  44                 	db	68	;'D'
  3316  00FC5C  20                 	db	32
  3317  00FC5D  57                 	db	87	;'W'
  3318  00FC5E  48                 	db	72	;'H'
  3319  00FC5F  20                 	db	32
  3320  00FC60  25                 	db	37
  3321  00FC61  33                 	db	51	;'3'
  3322  00FC62  2E                 	db	46
  3323  00FC63  32                 	db	50	;'2'
  3324  00FC64  66                 	db	102	;'f'
  3325  00FC65  20                 	db	32
  3326  00FC66  20                 	db	32
  3327  00FC67  20                 	db	32
  3328  00FC68  20                 	db	32
  3329  00FC69  20                 	db	32
  3330  00FC6A  20                 	db	32
  3331  00FC6B  20                 	db	32
  3332  00FC6C  20                 	db	32
  3333  00FC6D  20                 	db	32
  3334  00FC6E  00                 	db	0
  3335  00FC6F                     STR_34:
  3336                           
  3337                           ; BSR set to: 57
  3338  00FC6F  50                 	db	80	;'P'
  3339  00FC70  56                 	db	86	;'V'
  3340  00FC71  20                 	db	32
  3341  00FC72  25                 	db	37
  3342  00FC73  63                 	db	99	;'c'
  3343  00FC74  20                 	db	32
  3344  00FC75  57                 	db	87	;'W'
  3345  00FC76  48                 	db	72	;'H'
  3346  00FC77  20                 	db	32
  3347  00FC78  25                 	db	37
  3348  00FC79  33                 	db	51	;'3'
  3349  00FC7A  2E                 	db	46
  3350  00FC7B  32                 	db	50	;'2'
  3351  00FC7C  66                 	db	102	;'f'
  3352  00FC7D  20                 	db	32
  3353  00FC7E  20                 	db	32
  3354  00FC7F  20                 	db	32
  3355  00FC80  20                 	db	32
  3356  00FC81  20                 	db	32
  3357  00FC82  20                 	db	32
  3358  00FC83  20                 	db	32
  3359  00FC84  20                 	db	32
  3360  00FC85  00                 	db	0
  3361  00FC86                     STR_33:
  3362                           
  3363                           ; BSR set to: 57
  3364  00FC86  49                 	db	73	;'I'
  3365  00FC87  4E                 	db	78	;'N'
  3366  00FC88  56                 	db	86	;'V'
  3367  00FC89  20                 	db	32
  3368  00FC8A  20                 	db	32
  3369  00FC8B  50                 	db	80	;'P'
  3370  00FC8C  57                 	db	87	;'W'
  3371  00FC8D  52                 	db	82	;'R'
  3372  00FC8E  20                 	db	32
  3373  00FC8F  25                 	db	37
  3374  00FC90  33                 	db	51	;'3'
  3375  00FC91  2E                 	db	46
  3376  00FC92  32                 	db	50	;'2'
  3377  00FC93  66                 	db	102	;'f'
  3378  00FC94  20                 	db	32
  3379  00FC95  20                 	db	32
  3380  00FC96  20                 	db	32
  3381  00FC97  20                 	db	32
  3382  00FC98  20                 	db	32
  3383  00FC99  20                 	db	32
  3384  00FC9A  20                 	db	32
  3385  00FC9B  20                 	db	32
  3386  00FC9C  00                 	db	0
  3387  00FC9D                     STR_32:
  3388                           
  3389                           ; BSR set to: 57
  3390  00FC9D  4C                 	db	76	;'L'
  3391  00FC9E  4F                 	db	79	;'O'
  3392  00FC9F  41                 	db	65	;'A'
  3393  00FCA0  44                 	db	68	;'D'
  3394  00FCA1  20                 	db	32
  3395  00FCA2  50                 	db	80	;'P'
  3396  00FCA3  57                 	db	87	;'W'
  3397  00FCA4  52                 	db	82	;'R'
  3398  00FCA5  20                 	db	32
  3399  00FCA6  25                 	db	37
  3400  00FCA7  33                 	db	51	;'3'
  3401  00FCA8  2E                 	db	46
  3402  00FCA9  32                 	db	50	;'2'
  3403  00FCAA  66                 	db	102	;'f'
  3404  00FCAB  20                 	db	32
  3405  00FCAC  20                 	db	32
  3406  00FCAD  20                 	db	32
  3407  00FCAE  20                 	db	32
  3408  00FCAF  20                 	db	32
  3409  00FCB0  20                 	db	32
  3410  00FCB1  20                 	db	32
  3411  00FCB2  20                 	db	32
  3412  00FCB3  00                 	db	0
  3413  00FCB4                     STR_31:
  3414                           
  3415                           ; BSR set to: 57
  3416  00FCB4  50                 	db	80	;'P'
  3417  00FCB5  56                 	db	86	;'V'
  3418  00FCB6  20                 	db	32
  3419  00FCB7  25                 	db	37
  3420  00FCB8  63                 	db	99	;'c'
  3421  00FCB9  20                 	db	32
  3422  00FCBA  50                 	db	80	;'P'
  3423  00FCBB  57                 	db	87	;'W'
  3424  00FCBC  52                 	db	82	;'R'
  3425  00FCBD  20                 	db	32
  3426  00FCBE  25                 	db	37
  3427  00FCBF  33                 	db	51	;'3'
  3428  00FCC0  2E                 	db	46
  3429  00FCC1  32                 	db	50	;'2'
  3430  00FCC2  66                 	db	102	;'f'
  3431  00FCC3  20                 	db	32
  3432  00FCC4  20                 	db	32
  3433  00FCC5  20                 	db	32
  3434  00FCC6  20                 	db	32
  3435  00FCC7  20                 	db	32
  3436  00FCC8  20                 	db	32
  3437  00FCC9  20                 	db	32
  3438  00FCCA  00                 	db	0
  3439  00FCCB                     STR_15:
  3440                           
  3441                           ; BSR set to: 57
  3442  00FCCB  42                 	db	66	;'B'
  3443  00FCCC  61                 	db	97	;'a'
  3444  00FCCD  74                 	db	116	;'t'
  3445  00FCCE  74                 	db	116	;'t'
  3446  00FCCF  65                 	db	101	;'e'
  3447  00FCD0  72                 	db	114	;'r'
  3448  00FCD1  79                 	db	121	;'y'
  3449  00FCD2  20                 	db	32
  3450  00FCD3  41                 	db	65	;'A'
  3451  00FCD4  68                 	db	104	;'h'
  3452  00FCD5  20                 	db	32
  3453  00FCD6  25                 	db	37
  3454  00FCD7  33                 	db	51	;'3'
  3455  00FCD8  2E                 	db	46
  3456  00FCD9  32                 	db	50	;'2'
  3457  00FCDA  66                 	db	102	;'f'
  3458  00FCDB  20                 	db	32
  3459  00FCDC  20                 	db	32
  3460  00FCDD  20                 	db	32
  3461  00FCDE  20                 	db	32
  3462  00FCDF  20                 	db	32
  3463  00FCE0  20                 	db	32
  3464  00FCE1  00                 	db	0
  3465  00FCE2                     STR_38:
  3466                           
  3467                           ; BSR set to: 57
  3468  00FCE2  42                 	db	66	;'B'
  3469  00FCE3  56                 	db	86	;'V'
  3470  00FCE4  20                 	db	32
  3471  00FCE5  25                 	db	37
  3472  00FCE6  32                 	db	50	;'2'
  3473  00FCE7  2E                 	db	46
  3474  00FCE8  32                 	db	50	;'2'
  3475  00FCE9  66                 	db	102	;'f'
  3476  00FCEA  20                 	db	32
  3477  00FCEB  42                 	db	66	;'B'
  3478  00FCEC  41                 	db	65	;'A'
  3479  00FCED  20                 	db	32
  3480  00FCEE  25                 	db	37
  3481  00FCEF  32                 	db	50	;'2'
  3482  00FCF0  2E                 	db	46
  3483  00FCF1  32                 	db	50	;'2'
  3484  00FCF2  66                 	db	102	;'f'
  3485  00FCF3  20                 	db	32
  3486  00FCF4  20                 	db	32
  3487  00FCF5  20                 	db	32
  3488  00FCF6  20                 	db	32
  3489  00FCF7  20                 	db	32
  3490  00FCF8  00                 	db	0
  3491  00FCF9                     STR_39:
  3492                           
  3493                           ; BSR set to: 57
  3494  00FCF9  43                 	db	67	;'C'
  3495  00FCFA  56                 	db	86	;'V'
  3496  00FCFB  20                 	db	32
  3497  00FCFC  25                 	db	37
  3498  00FCFD  32                 	db	50	;'2'
  3499  00FCFE  2E                 	db	46
  3500  00FCFF  32                 	db	50	;'2'
  3501  00FD00  66                 	db	102	;'f'
  3502  00FD01  20                 	db	32
  3503  00FD02  4C                 	db	76	;'L'
  3504  00FD03  41                 	db	65	;'A'
  3505  00FD04  20                 	db	32
  3506  00FD05  25                 	db	37
  3507  00FD06  32                 	db	50	;'2'
  3508  00FD07  2E                 	db	46
  3509  00FD08  32                 	db	50	;'2'
  3510  00FD09  66                 	db	102	;'f'
  3511  00FD0A  20                 	db	32
  3512  00FD0B  20                 	db	32
  3513  00FD0C  20                 	db	32
  3514  00FD0D  20                 	db	32
  3515  00FD0E  20                 	db	32
  3516  00FD0F  00                 	db	0
  3517  00FD10                     STR_37:
  3518                           
  3519                           ; BSR set to: 57
  3520  00FD10  50                 	db	80	;'P'
  3521  00FD11  56                 	db	86	;'V'
  3522  00FD12  20                 	db	32
  3523  00FD13  25                 	db	37
  3524  00FD14  32                 	db	50	;'2'
  3525  00FD15  2E                 	db	46
  3526  00FD16  32                 	db	50	;'2'
  3527  00FD17  66                 	db	102	;'f'
  3528  00FD18  20                 	db	32
  3529  00FD19  50                 	db	80	;'P'
  3530  00FD1A  41                 	db	65	;'A'
  3531  00FD1B  20                 	db	32
  3532  00FD1C  25                 	db	37
  3533  00FD1D  32                 	db	50	;'2'
  3534  00FD1E  2E                 	db	46
  3535  00FD1F  32                 	db	50	;'2'
  3536  00FD20  66                 	db	102	;'f'
  3537  00FD21  20                 	db	32
  3538  00FD22  20                 	db	32
  3539  00FD23  20                 	db	32
  3540  00FD24  20                 	db	32
  3541  00FD25  20                 	db	32
  3542  00FD26  00                 	db	0
  3543  00FD27                     STR_127:
  3544                           
  3545                           ; BSR set to: 57
  3546  00FD27  53                 	db	83	;'S'
  3547  00FD28  75                 	db	117	;'u'
  3548  00FD29  6E                 	db	110	;'n'
  3549  00FD2A  4D                 	db	77	;'M'
  3550  00FD2B  6F                 	db	111	;'o'
  3551  00FD2C  6E                 	db	110	;'n'
  3552  00FD2D  54                 	db	84	;'T'
  3553  00FD2E  75                 	db	117	;'u'
  3554  00FD2F  65                 	db	101	;'e'
  3555  00FD30  57                 	db	87	;'W'
  3556  00FD31  65                 	db	101	;'e'
  3557  00FD32  64                 	db	100	;'d'
  3558  00FD33  54                 	db	84	;'T'
  3559  00FD34  68                 	db	104	;'h'
  3560  00FD35  75                 	db	117	;'u'
  3561  00FD36  46                 	db	70	;'F'
  3562  00FD37  72                 	db	114	;'r'
  3563  00FD38  69                 	db	105	;'i'
  3564  00FD39  53                 	db	83	;'S'
  3565  00FD3A  61                 	db	97	;'a'
  3566  00FD3B  74                 	db	116	;'t'
  3567  00FD3C  00                 	db	0
  3568  00FD3D                     STR_57:
  3569                           
  3570                           ; BSR set to: 57
  3571  00FD3D  20                 	db	32
  3572  00FD3E  25                 	db	37
  3573  00FD3F  64                 	db	100	;'d'
  3574  00FD40  20                 	db	32
  3575  00FD41  25                 	db	37
  3576  00FD42  64                 	db	100	;'d'
  3577  00FD43  20                 	db	32
  3578  00FD44  20                 	db	32
  3579  00FD45  20                 	db	32
  3580  00FD46  20                 	db	32
  3581  00FD47  20                 	db	32
  3582  00FD48  20                 	db	32
  3583  00FD49  20                 	db	32
  3584  00FD4A  20                 	db	32
  3585  00FD4B  20                 	db	32
  3586  00FD4C  20                 	db	32
  3587  00FD4D  20                 	db	32
  3588  00FD4E  20                 	db	32
  3589  00FD4F  20                 	db	32
  3590  00FD50  20                 	db	32
  3591  00FD51  20                 	db	32
  3592  00FD52  00                 	db	0
  3593  00FD53                     STR_60:
  3594                           
  3595                           ; BSR set to: 57
  3596  00FD53  20                 	db	32
  3597  00FD54  25                 	db	37
  3598  00FD55  6C                 	db	108	;'l'
  3599  00FD56  64                 	db	100	;'d'
  3600  00FD57  20                 	db	32
  3601  00FD58  25                 	db	37
  3602  00FD59  6C                 	db	108	;'l'
  3603  00FD5A  64                 	db	100	;'d'
  3604  00FD5B  20                 	db	32
  3605  00FD5C  20                 	db	32
  3606  00FD5D  20                 	db	32
  3607  00FD5E  20                 	db	32
  3608  00FD5F  20                 	db	32
  3609  00FD60  20                 	db	32
  3610  00FD61  20                 	db	32
  3611  00FD62  20                 	db	32
  3612  00FD63  20                 	db	32
  3613  00FD64  20                 	db	32
  3614  00FD65  20                 	db	32
  3615  00FD66  20                 	db	32
  3616  00FD67  20                 	db	32
  3617  00FD68  00                 	db	0
  3618  00FD69                     STR_12:
  3619                           
  3620                           ; BSR set to: 57
  3621  00FD69  42                 	db	66	;'B'
  3622  00FD6A  56                 	db	86	;'V'
  3623  00FD6B  20                 	db	32
  3624  00FD6C  25                 	db	37
  3625  00FD6D  32                 	db	50	;'2'
  3626  00FD6E  2E                 	db	46
  3627  00FD6F  34                 	db	52	;'4'
  3628  00FD70  66                 	db	102	;'f'
  3629  00FD71  20                 	db	32
  3630  00FD72  20                 	db	32
  3631  00FD73  20                 	db	32
  3632  00FD74  20                 	db	32
  3633  00FD75  20                 	db	32
  3634  00FD76  20                 	db	32
  3635  00FD77  20                 	db	32
  3636  00FD78  20                 	db	32
  3637  00FD79  20                 	db	32
  3638  00FD7A  20                 	db	32
  3639  00FD7B  20                 	db	32
  3640  00FD7C  20                 	db	32
  3641  00FD7D  20                 	db	32
  3642  00FD7E  00                 	db	0
  3643  00FD7F                     STR_26:
  3644                           
  3645                           ; BSR set to: 57
  3646  00FD7F  54                 	db	84	;'T'
  3647  00FD80  6F                 	db	111	;'o'
  3648  00FD81  20                 	db	32
  3649  00FD82  45                 	db	69	;'E'
  3650  00FD83  45                 	db	69	;'E'
  3651  00FD84  50                 	db	80	;'P'
  3652  00FD85  52                 	db	82	;'R'
  3653  00FD86  4F                 	db	79	;'O'
  3654  00FD87  4D                 	db	77	;'M'
  3655  00FD88  20                 	db	32
  3656  00FD89  20                 	db	32
  3657  00FD8A  20                 	db	32
  3658  00FD8B  20                 	db	32
  3659  00FD8C  20                 	db	32
  3660  00FD8D  20                 	db	32
  3661  00FD8E  20                 	db	32
  3662  00FD8F  20                 	db	32
  3663  00FD90  20                 	db	32
  3664  00FD91  20                 	db	32
  3665  00FD92  20                 	db	32
  3666  00FD93  20                 	db	32
  3667  00FD94  00                 	db	0
  3668  00FD95                     STR_17:
  3669                           
  3670                           ; BSR set to: 57
  3671  00FD95  42                 	db	66	;'B'
  3672  00FD96  61                 	db	97	;'a'
  3673  00FD97  74                 	db	116	;'t'
  3674  00FD98  74                 	db	116	;'t'
  3675  00FD99  65                 	db	101	;'e'
  3676  00FD9A  72                 	db	114	;'r'
  3677  00FD9B  79                 	db	121	;'y'
  3678  00FD9C  20                 	db	32
  3679  00FD9D  45                 	db	69	;'E'
  3680  00FD9E  53                 	db	83	;'S'
  3681  00FD9F  52                 	db	82	;'R'
  3682  00FDA0  20                 	db	32
  3683  00FDA1  20                 	db	32
  3684  00FDA2  20                 	db	32
  3685  00FDA3  20                 	db	32
  3686  00FDA4  20                 	db	32
  3687  00FDA5  20                 	db	32
  3688  00FDA6  20                 	db	32
  3689  00FDA7  20                 	db	32
  3690  00FDA8  20                 	db	32
  3691  00FDA9  20                 	db	32
  3692  00FDAA  00                 	db	0
  3693  00FDAB                     STR_18:
  3694                           
  3695                           ; BSR set to: 57
  3696  00FDAB  43                 	db	67	;'C'
  3697  00FDAC  61                 	db	97	;'a'
  3698  00FDAD  6C                 	db	108	;'l'
  3699  00FDAE  63                 	db	99	;'c'
  3700  00FDAF  75                 	db	117	;'u'
  3701  00FDB0  6C                 	db	108	;'l'
  3702  00FDB1  61                 	db	97	;'a'
  3703  00FDB2  74                 	db	116	;'t'
  3704  00FDB3  69                 	db	105	;'i'
  3705  00FDB4  6F                 	db	111	;'o'
  3706  00FDB5  6E                 	db	110	;'n'
  3707  00FDB6  20                 	db	32
  3708  00FDB7  20                 	db	32
  3709  00FDB8  20                 	db	32
  3710  00FDB9  20                 	db	32
  3711  00FDBA  20                 	db	32
  3712  00FDBB  20                 	db	32
  3713  00FDBC  20                 	db	32
  3714  00FDBD  20                 	db	32
  3715  00FDBE  20                 	db	32
  3716  00FDBF  20                 	db	32
  3717  00FDC0  00                 	db	0
  3718  00FDC1                     STR_54:
  3719                           
  3720                           ; BSR set to: 57
  3721  00FDC1  43                 	db	67	;'C'
  3722  00FDC2  61                 	db	97	;'a'
  3723  00FDC3  6C                 	db	108	;'l'
  3724  00FDC4  69                 	db	105	;'i'
  3725  00FDC5  62                 	db	98	;'b'
  3726  00FDC6  72                 	db	114	;'r'
  3727  00FDC7  61                 	db	97	;'a'
  3728  00FDC8  74                 	db	116	;'t'
  3729  00FDC9  69                 	db	105	;'i'
  3730  00FDCA  6F                 	db	111	;'o'
  3731  00FDCB  6E                 	db	110	;'n'
  3732  00FDCC  20                 	db	32
  3733  00FDCD  20                 	db	32
  3734  00FDCE  20                 	db	32
  3735  00FDCF  20                 	db	32
  3736  00FDD0  20                 	db	32
  3737  00FDD1  20                 	db	32
  3738  00FDD2  20                 	db	32
  3739  00FDD3  20                 	db	32
  3740  00FDD4  20                 	db	32
  3741  00FDD5  20                 	db	32
  3742  00FDD6  00                 	db	0
  3743  00FDD7                     STR_53:
  3744                           
  3745                           ; BSR set to: 57
  3746  00FDD7  53                 	db	83	;'S'
  3747  00FDD8  65                 	db	101	;'e'
  3748  00FDD9  6E                 	db	110	;'n'
  3749  00FDDA  73                 	db	115	;'s'
  3750  00FDDB  6F                 	db	111	;'o'
  3751  00FDDC  72                 	db	114	;'r'
  3752  00FDDD  20                 	db	32
  3753  00FDDE  5A                 	db	90	;'Z'
  3754  00FDDF  65                 	db	101	;'e'
  3755  00FDE0  72                 	db	114	;'r'
  3756  00FDE1  6F                 	db	111	;'o'
  3757  00FDE2  20                 	db	32
  3758  00FDE3  20                 	db	32
  3759  00FDE4  20                 	db	32
  3760  00FDE5  20                 	db	32
  3761  00FDE6  20                 	db	32
  3762  00FDE7  20                 	db	32
  3763  00FDE8  20                 	db	32
  3764  00FDE9  20                 	db	32
  3765  00FDEA  20                 	db	32
  3766  00FDEB  20                 	db	32
  3767  00FDEC  00                 	db	0
  3768  00FDED                     STR_61:
  3769                           
  3770                           ; BSR set to: 57
  3771  00FDED  5A                 	db	90	;'Z'
  3772  00FDEE  65                 	db	101	;'e'
  3773  00FDEF  72                 	db	114	;'r'
  3774  00FDF0  6F                 	db	111	;'o'
  3775  00FDF1  20                 	db	32
  3776  00FDF2  43                 	db	67	;'C'
  3777  00FDF3  61                 	db	97	;'a'
  3778  00FDF4  6C                 	db	108	;'l'
  3779  00FDF5  20                 	db	32
  3780  00FDF6  53                 	db	83	;'S'
  3781  00FDF7  65                 	db	101	;'e'
  3782  00FDF8  74                 	db	116	;'t'
  3783  00FDF9  20                 	db	32
  3784  00FDFA  20                 	db	32
  3785  00FDFB  20                 	db	32
  3786  00FDFC  20                 	db	32
  3787  00FDFD  20                 	db	32
  3788  00FDFE  20                 	db	32
  3789  00FDFF  20                 	db	32
  3790  00FE00  20                 	db	32
  3791  00FE01  20                 	db	32
  3792  00FE02  00                 	db	0
  3793  00FE03                     STR_52:
  3794                           
  3795                           ; BSR set to: 57
  3796  00FE03  42                 	db	66	;'B'
  3797  00FE04  61                 	db	97	;'a'
  3798  00FE05  74                 	db	116	;'t'
  3799  00FE06  74                 	db	116	;'t'
  3800  00FE07  65                 	db	101	;'e'
  3801  00FE08  72                 	db	114	;'r'
  3802  00FE09  79                 	db	121	;'y'
  3803  00FE0A  20                 	db	32
  3804  00FE0B  61                 	db	97	;'a'
  3805  00FE0C  6E                 	db	110	;'n'
  3806  00FE0D  64                 	db	100	;'d'
  3807  00FE0E  20                 	db	32
  3808  00FE0F  50                 	db	80	;'P'
  3809  00FE10  56                 	db	86	;'V'
  3810  00FE11  20                 	db	32
  3811  00FE12  20                 	db	32
  3812  00FE13  20                 	db	32
  3813  00FE14  20                 	db	32
  3814  00FE15  20                 	db	32
  3815  00FE16  20                 	db	32
  3816  00FE17  20                 	db	32
  3817  00FE18  00                 	db	0
  3818  00FE19                     STR_20:
  3819                           
  3820                           ; BSR set to: 57
  3821  00FE19  43                 	db	67	;'C'
  3822  00FE1A  68                 	db	104	;'h'
  3823  00FE1B  65                 	db	101	;'e'
  3824  00FE1C  63                 	db	99	;'c'
  3825  00FE1D  6B                 	db	107	;'k'
  3826  00FE1E  69                 	db	105	;'i'
  3827  00FE1F  6E                 	db	110	;'n'
  3828  00FE20  67                 	db	103	;'g'
  3829  00FE21  20                 	db	32
  3830  00FE22  25                 	db	37
  3831  00FE23  63                 	db	99	;'c'
  3832  00FE24  20                 	db	32
  3833  00FE25  25                 	db	37
  3834  00FE26  63                 	db	99	;'c'
  3835  00FE27  20                 	db	32
  3836  00FE28  20                 	db	32
  3837  00FE29  20                 	db	32
  3838  00FE2A  20                 	db	32
  3839  00FE2B  20                 	db	32
  3840  00FE2C  20                 	db	32
  3841  00FE2D  20                 	db	32
  3842  00FE2E  00                 	db	0
  3843  00FE2F                     STR_27:
  3844                           
  3845                           ; BSR set to: 57
  3846  00FE2F  20                 	db	32
  3847  00FE30  54                 	db	84	;'T'
  3848  00FE31  69                 	db	105	;'i'
  3849  00FE32  6D                 	db	109	;'m'
  3850  00FE33  65                 	db	101	;'e'
  3851  00FE34  20                 	db	32
  3852  00FE35  25                 	db	37
  3853  00FE36  6C                 	db	108	;'l'
  3854  00FE37  75                 	db	117	;'u'
  3855  00FE38  2C                 	db	44
  3856  00FE39  20                 	db	32
  3857  00FE3A  25                 	db	37
  3858  00FE3B  6C                 	db	108	;'l'
  3859  00FE3C  75                 	db	117	;'u'
  3860  00FE3D  20                 	db	32
  3861  00FE3E  20                 	db	32
  3862  00FE3F  20                 	db	32
  3863  00FE40  20                 	db	32
  3864  00FE41  20                 	db	32
  3865  00FE42  20                 	db	32
  3866  00FE43  20                 	db	32
  3867  00FE44  00                 	db	0
  3868  00FE45                     STR_56:
  3869                           
  3870                           ; BSR set to: 57
  3871  00FE45  53                 	db	83	;'S'
  3872  00FE46  65                 	db	101	;'e'
  3873  00FE47  6E                 	db	110	;'n'
  3874  00FE48  73                 	db	115	;'s'
  3875  00FE49  6F                 	db	111	;'o'
  3876  00FE4A  72                 	db	114	;'r'
  3877  00FE4B  20                 	db	32
  3878  00FE4C  52                 	db	82	;'R'
  3879  00FE4D  65                 	db	101	;'e'
  3880  00FE4E  61                 	db	97	;'a'
  3881  00FE4F  64                 	db	100	;'d'
  3882  00FE50  69                 	db	105	;'i'
  3883  00FE51  6E                 	db	110	;'n'
  3884  00FE52  67                 	db	103	;'g'
  3885  00FE53  73                 	db	115	;'s'
  3886  00FE54  20                 	db	32
  3887  00FE55  20                 	db	32
  3888  00FE56  20                 	db	32
  3889  00FE57  20                 	db	32
  3890  00FE58  20                 	db	32
  3891  00FE59  20                 	db	32
  3892  00FE5A  00                 	db	0
  3893  00FE5B                     STR_19:
  3894                           
  3895                           ; BSR set to: 57
  3896  00FE5B  43                 	db	67	;'C'
  3897  00FE5C  68                 	db	104	;'h'
  3898  00FE5D  65                 	db	101	;'e'
  3899  00FE5E  63                 	db	99	;'c'
  3900  00FE5F  6B                 	db	107	;'k'
  3901  00FE60  20                 	db	32
  3902  00FE61  33                 	db	51	;'3'
  3903  00FE62  30                 	db	48	;'0'
  3904  00FE63  20                 	db	32
  3905  00FE64  73                 	db	115	;'s'
  3906  00FE65  65                 	db	101	;'e'
  3907  00FE66  63                 	db	99	;'c'
  3908  00FE67  6F                 	db	111	;'o'
  3909  00FE68  6E                 	db	110	;'n'
  3910  00FE69  64                 	db	100	;'d'
  3911  00FE6A  73                 	db	115	;'s'
  3912  00FE6B  20                 	db	32
  3913  00FE6C  20                 	db	32
  3914  00FE6D  20                 	db	32
  3915  00FE6E  20                 	db	32
  3916  00FE6F  20                 	db	32
  3917  00FE70  00                 	db	0
  3918  00FE71                     STR_64:
  3919                           
  3920                           ; BSR set to: 57
  3921  00FE71  5A                 	db	90	;'Z'
  3922  00FE72  65                 	db	101	;'e'
  3923  00FE73  72                 	db	114	;'r'
  3924  00FE74  6F                 	db	111	;'o'
  3925  00FE75  20                 	db	32
  3926  00FE76  4F                 	db	79	;'O'
  3927  00FE77  75                 	db	117	;'u'
  3928  00FE78  74                 	db	116	;'t'
  3929  00FE79  20                 	db	32
  3930  00FE7A  4F                 	db	79	;'O'
  3931  00FE7B  66                 	db	102	;'f'
  3932  00FE7C  20                 	db	32
  3933  00FE7D  52                 	db	82	;'R'
  3934  00FE7E  61                 	db	97	;'a'
  3935  00FE7F  6E                 	db	110	;'n'
  3936  00FE80  67                 	db	103	;'g'
  3937  00FE81  65                 	db	101	;'e'
  3938  00FE82  20                 	db	32
  3939  00FE83  20                 	db	32
  3940  00FE84  20                 	db	32
  3941  00FE85  20                 	db	32
  3942  00FE86  00                 	db	0
  3943  00FE87                     STR_49:
  3944                           
  3945                           ; BSR set to: 57
  3946  00FE87  25                 	db	37
  3947  00FE88  64                 	db	100	;'d'
  3948  00FE89  20                 	db	32
  3949  00FE8A  25                 	db	37
  3950  00FE8B  32                 	db	50	;'2'
  3951  00FE8C  2E                 	db	46
  3952  00FE8D  34                 	db	52	;'4'
  3953  00FE8E  66                 	db	102	;'f'
  3954  00FE8F  2C                 	db	44
  3955  00FE90  20                 	db	32
  3956  00FE91  25                 	db	37
  3957  00FE92  64                 	db	100	;'d'
  3958  00FE93  20                 	db	32
  3959  00FE94  20                 	db	32
  3960  00FE95  54                 	db	84	;'T'
  3961  00FE96  52                 	db	82	;'R'
  3962  00FE97  49                 	db	73	;'I'
  3963  00FE98  4D                 	db	77	;'M'
  3964  00FE99  20                 	db	32
  3965  00FE9A  20                 	db	32
  3966  00FE9B  20                 	db	32
  3967  00FE9C  00                 	db	0
  3968  00FE9D                     STR_58:
  3969                           
  3970                           ; BSR set to: 57
  3971  00FE9D  53                 	db	83	;'S'
  3972  00FE9E  74                 	db	116	;'t'
  3973  00FE9F  61                 	db	97	;'a'
  3974  00FEA0  62                 	db	98	;'b'
  3975  00FEA1  69                 	db	105	;'i'
  3976  00FEA2  6C                 	db	108	;'l'
  3977  00FEA3  69                 	db	105	;'i'
  3978  00FEA4  74                 	db	116	;'t'
  3979  00FEA5  79                 	db	121	;'y'
  3980  00FEA6  20                 	db	32
  3981  00FEA7  63                 	db	99	;'c'
  3982  00FEA8  6C                 	db	108	;'l'
  3983  00FEA9  6F                 	db	111	;'o'
  3984  00FEAA  63                 	db	99	;'c'
  3985  00FEAB  6B                 	db	107	;'k'
  3986  00FEAC  20                 	db	32
  3987  00FEAD  25                 	db	37
  3988  00FEAE  64                 	db	100	;'d'
  3989  00FEAF  20                 	db	32
  3990  00FEB0  20                 	db	32
  3991  00FEB1  20                 	db	32
  3992  00FEB2  00                 	db	0
  3993  00FEB3                     STR_25:
  3994                           
  3995                           ; BSR set to: 57
  3996  00FEB3  48                 	db	72	;'H'
  3997  00FEB4  69                 	db	105	;'i'
  3998  00FEB5  73                 	db	115	;'s'
  3999  00FEB6  74                 	db	116	;'t'
  4000  00FEB7  6F                 	db	111	;'o'
  4001  00FEB8  72                 	db	114	;'r'
  4002  00FEB9  79                 	db	121	;'y'
  4003  00FEBA  20                 	db	32
  4004  00FEBB  44                 	db	68	;'D'
  4005  00FEBC  61                 	db	97	;'a'
  4006  00FEBD  74                 	db	116	;'t'
  4007  00FEBE  61                 	db	97	;'a'
  4008  00FEBF  20                 	db	32
  4009  00FEC0  20                 	db	32
  4010  00FEC1  53                 	db	83	;'S'
  4011  00FEC2  61                 	db	97	;'a'
  4012  00FEC3  76                 	db	118	;'v'
  4013  00FEC4  65                 	db	101	;'e'
  4014  00FEC5  64                 	db	100	;'d'
  4015  00FEC6  20                 	db	32
  4016  00FEC7  20                 	db	32
  4017  00FEC8  00                 	db	0
  4018  00FEC9                     
  4019                           ; BSR set to: 57
  4020  00FEC9  48                 	db	72	;'H'
  4021  00FECA  45                 	db	69	;'E'
  4022  00FECB  4C                 	db	76	;'L'
  4023  00FECC  50                 	db	80	;'P'
  4024  00FECD  20                 	db	32
  4025  00FECE  25                 	db	37
  4026  00FECF  73                 	db	115	;'s'
  4027  00FED0  20                 	db	32
  4028  00FED1  20                 	db	32
  4029  00FED2  20                 	db	32
  4030  00FED3  20                 	db	32
  4031  00FED4  20                 	db	32
  4032  00FED5  20                 	db	32
  4033  00FED6  20                 	db	32
  4034  00FED7  20                 	db	32
  4035  00FED8  20                 	db	32
  4036  00FED9  20                 	db	32
  4037  00FEDA  20                 	db	32
  4038  00FEDB  20                 	db	32
  4039  00FEDC  20                 	db	32
  4040  00FEDD  00                 	db	0
  4041  00FEDE                     
  4042                           ; BSR set to: 57
  4043  00FEDE  44                 	db	68	;'D'
  4044  00FEDF  49                 	db	73	;'I'
  4045  00FEE0  53                 	db	83	;'S'
  4046  00FEE1  50                 	db	80	;'P'
  4047  00FEE2  4C                 	db	76	;'L'
  4048  00FEE3  41                 	db	65	;'A'
  4049  00FEE4  59                 	db	89	;'Y'
  4050  00FEE5  20                 	db	32
  4051  00FEE6  25                 	db	37
  4052  00FEE7  73                 	db	115	;'s'
  4053  00FEE8  20                 	db	32
  4054  00FEE9  20                 	db	32
  4055  00FEEA  20                 	db	32
  4056  00FEEB  20                 	db	32
  4057  00FEEC  20                 	db	32
  4058  00FEED  20                 	db	32
  4059  00FEEE  20                 	db	32
  4060  00FEEF  20                 	db	32
  4061  00FEF0  20                 	db	32
  4062  00FEF1  20                 	db	32
  4063  00FEF2  00                 	db	0
  4064  00FEF3                     STR_4:
  4065                           
  4066                           ; BSR set to: 57
  4067  00FEF3  20                 	db	32
  4068  00FEF4  4E                 	db	78	;'N'
  4069  00FEF5  53                 	db	83	;'S'
  4070  00FEF6  41                 	db	65	;'A'
  4071  00FEF7  53                 	db	83	;'S'
  4072  00FEF8  50                 	db	80	;'P'
  4073  00FEF9  4F                 	db	79	;'O'
  4074  00FEFA  4F                 	db	79	;'O'
  4075  00FEFB  4B                 	db	75	;'K'
  4076  00FEFC  20                 	db	32
  4077  00FEFD  20                 	db	32
  4078  00FEFE  20                 	db	32
  4079  00FEFF  20                 	db	32
  4080  00FF00  20                 	db	32
  4081  00FF01  20                 	db	32
  4082  00FF02  20                 	db	32
  4083  00FF03  20                 	db	32
  4084  00FF04  20                 	db	32
  4085  00FF05  20                 	db	32
  4086  00FF06  20                 	db	32
  4087  00FF07  00                 	db	0
  4088  00FF08                     STR_2:
  4089                           
  4090                           ; BSR set to: 57
  4091  00FF08  20                 	db	32
  4092  00FF09  56                 	db	86	;'V'
  4093  00FF0A  65                 	db	101	;'e'
  4094  00FF0B  72                 	db	114	;'r'
  4095  00FF0C  73                 	db	115	;'s'
  4096  00FF0D  69                 	db	105	;'i'
  4097  00FF0E  6F                 	db	111	;'o'
  4098  00FF0F  6E                 	db	110	;'n'
  4099  00FF10  20                 	db	32
  4100  00FF11  25                 	db	37
  4101  00FF12  73                 	db	115	;'s'
  4102  00FF13  20                 	db	32
  4103  00FF14  20                 	db	32
  4104  00FF15  20                 	db	32
  4105  00FF16  20                 	db	32
  4106  00FF17  20                 	db	32
  4107  00FF18  20                 	db	32
  4108  00FF19  20                 	db	32
  4109  00FF1A  20                 	db	32
  4110  00FF1B  20                 	db	32
  4111  00FF1C  00                 	db	0
  4112  00FF1D                     STR_1:
  4113                           
  4114                           ; BSR set to: 57
  4115  00FF1D  20                 	db	32
  4116  00FF1E  4D                 	db	77	;'M'
  4117  00FF1F  42                 	db	66	;'B'
  4118  00FF20  4D                 	db	77	;'M'
  4119  00FF21  43                 	db	67	;'C'
  4120  00FF22  20                 	db	32
  4121  00FF23  53                 	db	83	;'S'
  4122  00FF24  4F                 	db	79	;'O'
  4123  00FF25  4C                 	db	76	;'L'
  4124  00FF26  41                 	db	65	;'A'
  4125  00FF27  52                 	db	82	;'R'
  4126  00FF28  4D                 	db	77	;'M'
  4127  00FF29  4F                 	db	79	;'O'
  4128  00FF2A  4E                 	db	78	;'N'
  4129  00FF2B  20                 	db	32
  4130  00FF2C  20                 	db	32
  4131  00FF2D  20                 	db	32
  4132  00FF2E  20                 	db	32
  4133  00FF2F  20                 	db	32
  4134  00FF30  20                 	db	32
  4135  00FF31  00                 	db	0
  4136  00FF32                     STR_10:
  4137                           
  4138                           ; BSR set to: 57
  4139  00FF32  52                 	db	82	;'R'
  4140  00FF33  65                 	db	101	;'e'
  4141  00FF34  61                 	db	97	;'a'
  4142  00FF35  64                 	db	100	;'d'
  4143  00FF36  20                 	db	32
  4144  00FF37  45                 	db	69	;'E'
  4145  00FF38  45                 	db	69	;'E'
  4146  00FF39  50                 	db	80	;'P'
  4147  00FF3A  52                 	db	82	;'R'
  4148  00FF3B  4F                 	db	79	;'O'
  4149  00FF3C  4D                 	db	77	;'M'
  4150  00FF3D  20                 	db	32
  4151  00FF3E  44                 	db	68	;'D'
  4152  00FF3F  41                 	db	65	;'A'
  4153  00FF40  54                 	db	84	;'T'
  4154  00FF41  41                 	db	65	;'A'
  4155  00FF42  20                 	db	32
  4156  00FF43  20                 	db	32
  4157  00FF44  20                 	db	32
  4158  00FF45  20                 	db	32
  4159  00FF46  00                 	db	0
  4160  00FF47                     STR_55:
  4161                           
  4162                           ; BSR set to: 57
  4163  00FF47  52                 	db	82	;'R'
  4164  00FF48  65                 	db	101	;'e'
  4165  00FF49  6C                 	db	108	;'l'
  4166  00FF4A  65                 	db	101	;'e'
  4167  00FF4B  61                 	db	97	;'a'
  4168  00FF4C  73                 	db	115	;'s'
  4169  00FF4D  65                 	db	101	;'e'
  4170  00FF4E  20                 	db	32
  4171  00FF4F  62                 	db	98	;'b'
  4172  00FF50  75                 	db	117	;'u'
  4173  00FF51  74                 	db	116	;'t'
  4174  00FF52  74                 	db	116	;'t'
  4175  00FF53  6F                 	db	111	;'o'
  4176  00FF54  6E                 	db	110	;'n'
  4177  00FF55  20                 	db	32
  4178  00FF56  25                 	db	37
  4179  00FF57  63                 	db	99	;'c'
  4180  00FF58  20                 	db	32
  4181  00FF59  20                 	db	32
  4182  00FF5A  20                 	db	32
  4183  00FF5B  00                 	db	0
  4184  00FF5C                     STR_11:
  4185                           
  4186                           ; BSR set to: 57
  4187  00FF5C  49                 	db	73	;'I'
  4188  00FF5D  6E                 	db	110	;'n'
  4189  00FF5E  76                 	db	118	;'v'
  4190  00FF5F  61                 	db	97	;'a'
  4191  00FF60  6C                 	db	108	;'l'
  4192  00FF61  69                 	db	105	;'i'
  4193  00FF62  64                 	db	100	;'d'
  4194  00FF63  20                 	db	32
  4195  00FF64  45                 	db	69	;'E'
  4196  00FF65  45                 	db	69	;'E'
  4197  00FF66  50                 	db	80	;'P'
  4198  00FF67  52                 	db	82	;'R'
  4199  00FF68  4F                 	db	79	;'O'
  4200  00FF69  4D                 	db	77	;'M'
  4201  00FF6A  20                 	db	32
  4202  00FF6B  44                 	db	68	;'D'
  4203  00FF6C  41                 	db	65	;'A'
  4204  00FF6D  54                 	db	84	;'T'
  4205  00FF6E  41                 	db	65	;'A'
  4206  00FF6F  20                 	db	32
  4207  00FF70  00                 	db	0
  4208  00FF71                     STR_72:
  4209                           
  4210                           ; BSR set to: 57
  4211  00FF71  48                 	db	72	;'H'
  4212  00FF72  45                 	db	69	;'E'
  4213  00FF73  4C                 	db	76	;'L'
  4214  00FF74  50                 	db	80	;'P'
  4215  00FF75  20                 	db	32
  4216  00FF76  25                 	db	37
  4217  00FF77  73                 	db	115	;'s'
  4218  00FF78  20                 	db	32
  4219  00FF79  20                 	db	32
  4220  00FF7A  20                 	db	32
  4221  00FF7B  20                 	db	32
  4222  00FF7C  20                 	db	32
  4223  00FF7D  20                 	db	32
  4224  00FF7E  20                 	db	32
  4225  00FF7F  20                 	db	32
  4226  00FF80  20                 	db	32
  4227  00FF81  20                 	db	32
  4228  00FF82  20                 	db	32
  4229  00FF83  00                 	db	0
  4230  00FF84                     
  4231                           ; BSR set to: 57
  4232  00FF84  25                 	db	37
  4233  00FF85  64                 	db	100	;'d'
  4234  00FF86  20                 	db	32
  4235  00FF87  25                 	db	37
  4236  00FF88  32                 	db	50	;'2'
  4237  00FF89  2E                 	db	46
  4238  00FF8A  34                 	db	52	;'4'
  4239  00FF8B  66                 	db	102	;'f'
  4240  00FF8C  2C                 	db	44
  4241  00FF8D  20                 	db	32
  4242  00FF8E  25                 	db	37
  4243  00FF8F  64                 	db	100	;'d'
  4244  00FF90  20                 	db	32
  4245  00FF91  20                 	db	32
  4246  00FF92  20                 	db	32
  4247  00FF93  23                 	db	35
  4248  00FF94  20                 	db	32
  4249  00FF95  00                 	db	0
  4250  00FF96                     STR_28:
  4251                           
  4252                           ; BSR set to: 57
  4253  00FF96  25                 	db	37
  4254  00FF97  64                 	db	100	;'d'
  4255  00FF98  20                 	db	32
  4256  00FF99  25                 	db	37
  4257  00FF9A  32                 	db	50	;'2'
  4258  00FF9B  2E                 	db	46
  4259  00FF9C  34                 	db	52	;'4'
  4260  00FF9D  66                 	db	102	;'f'
  4261  00FF9E  20                 	db	32
  4262  00FF9F  20                 	db	32
  4263  00FFA0  20                 	db	32
  4264  00FFA1  25                 	db	37
  4265  00FFA2  64                 	db	100	;'d'
  4266  00FFA3  20                 	db	32
  4267  00FFA4  20                 	db	32
  4268  00FFA5  20                 	db	32
  4269  00FFA6  00                 	db	0
  4270  00FFA7                     STR_76:
  4271                           
  4272                           ; BSR set to: 57
  4273  00FFA7  76                 	db	118	;'v'
  4274  00FFA8  74                 	db	116	;'t'
  4275  00FFA9  65                 	db	101	;'e'
  4276  00FFAA  72                 	db	114	;'r'
  4277  00FFAB  6D                 	db	109	;'m'
  4278  00FFAC  20                 	db	32
  4279  00FFAD  25                 	db	37
  4280  00FFAE  78                 	db	120	;'x'
  4281  00FFAF  3A                 	db	58	;':'
  4282  00FFB0  25                 	db	37
  4283  00FFB1  78                 	db	120	;'x'
  4284  00FFB2  20                 	db	32
  4285  00FFB3  20                 	db	32
  4286  00FFB4  20                 	db	32
  4287  00FFB5  00                 	db	0
  4288  00FFB6                     STR_70:
  4289                           
  4290                           ; BSR set to: 57
  4291  00FFB6  46                 	db	70	;'F'
  4292  00FFB7  65                 	db	101	;'e'
  4293  00FFB8  62                 	db	98	;'b'
  4294  00FFB9  20                 	db	32
  4295  00FFBA  31                 	db	49	;'1'
  4296  00FFBB  36                 	db	54	;'6'
  4297  00FFBC  20                 	db	32
  4298  00FFBD  32                 	db	50	;'2'
  4299  00FFBE  30                 	db	48	;'0'
  4300  00FFBF  32                 	db	50	;'2'
  4301  00FFC0  30                 	db	48	;'0'
  4302  00FFC1  00                 	db	0
  4303  00FFC2                     STR_74:
  4304                           
  4305                           ; BSR set to: 57
  4306  00FFC2  25                 	db	37
  4307  00FFC3  73                 	db	115	;'s'
  4308  00FFC4  20                 	db	32
  4309  00FFC5  20                 	db	32
  4310  00FFC6  20                 	db	32
  4311  00FFC7  20                 	db	32
  4312  00FFC8  20                 	db	32
  4313  00FFC9  20                 	db	32
  4314  00FFCA  20                 	db	32
  4315  00FFCB  00                 	db	0
  4316  00FFCC                     STR_71:
  4317                           
  4318                           ; BSR set to: 57
  4319  00FFCC  32                 	db	50	;'2'
  4320  00FFCD  30                 	db	48	;'0'
  4321  00FFCE  3A                 	db	58	;':'
  4322  00FFCF  32                 	db	50	;'2'
  4323  00FFD0  36                 	db	54	;'6'
  4324  00FFD1  3A                 	db	58	;':'
  4325  00FFD2  33                 	db	51	;'3'
  4326  00FFD3  37                 	db	55	;'7'
  4327  00FFD4  00                 	db	0
  4328  00FFD5                     STR_3:
  4329                           
  4330                           ; BSR set to: 57
  4331  00FFD5  31                 	db	49	;'1'
  4332  00FFD6  2E                 	db	46
  4333  00FFD7  32                 	db	50	;'2'
  4334  00FFD8  35                 	db	53	;'5'
  4335  00FFD9  00                 	db	0
  4336  00FFDA                     STR_91:
  4337                           
  4338                           ; BSR set to: 57
  4339  00FFDA  49                 	db	73	;'I'
  4340  00FFDB  4E                 	db	78	;'N'
  4341  00FFDC  46                 	db	70	;'F'
  4342  00FFDD  00                 	db	0
  4343  00FFDE                     STR_95:
  4344                           
  4345                           ; BSR set to: 57
  4346  00FFDE  4E                 	db	78	;'N'
  4347  00FFDF  41                 	db	65	;'A'
  4348  00FFE0  4E                 	db	78	;'N'
  4349  00FFE1  00                 	db	0
  4350  00FFE2                     STR_92:
  4351                           
  4352                           ; BSR set to: 57
  4353  00FFE2  69                 	db	105	;'i'
  4354  00FFE3  6E                 	db	110	;'n'
  4355  00FFE4  66                 	db	102	;'f'
  4356  00FFE5  00                 	db	0
  4357  00FFE6                     STR_96:
  4358                           
  4359                           ; BSR set to: 57
  4360  00FFE6  6E                 	db	110	;'n'
  4361  00FFE7  61                 	db	97	;'a'
  4362  00FFE8  6E                 	db	110	;'n'
  4363  00FFE9  00                 	db	0
  4364  00FFEA                     STR_122:
  4365                           
  4366                           ; BSR set to: 57
  4367  00FFEA  6C                 	db	108	;'l'
  4368  00FFEB  58                 	db	88	;'X'
  4369  00FFEC  00                 	db	0
  4370  00FFED                     STR_99:
  4371                           
  4372                           ; BSR set to: 57
  4373  00FFED  6C                 	db	108	;'l'
  4374  00FFEE  64                 	db	100	;'d'
  4375  00FFEF  00                 	db	0
  4376  00FFF0                     STR_108:
  4377                           
  4378                           ; BSR set to: 57
  4379  00FFF0  6C                 	db	108	;'l'
  4380  00FFF1  66                 	db	102	;'f'
  4381  00FFF2  00                 	db	0
  4382  00FFF3                     STR_103:
  4383                           
  4384                           ; BSR set to: 57
  4385  00FFF3  6C                 	db	108	;'l'
  4386  00FFF4  69                 	db	105	;'i'
  4387  00FFF5  00                 	db	0
  4388  00FFF6                     STR_113:
  4389                           
  4390                           ; BSR set to: 57
  4391  00FFF6  6C                 	db	108	;'l'
  4392  00FFF7  75                 	db	117	;'u'
  4393  00FFF8  00                 	db	0
  4394  00FFF9                     STR_118:
  4395                           
  4396                           ; BSR set to: 57
  4397  00FFF9  6C                 	db	108	;'l'
  4398  00FFFA  78                 	db	120	;'x'
  4399  00FFFB  00                 	db	0
  4400  00FFFC                     STR_69:
  4401                           
  4402                           ; BSR set to: 57
  4403  00FFFC  25                 	db	37
  4404  00FFFD  73                 	db	115	;'s'
  4405  00FFFE  00                 	db	0
  4406  0000                     
  4407                           ; #config settings
  4408  00FFFF  00                 	db	0	; dummy byte at the end
  4409  0000                     
  4410                           	psect	cinit
  4411  01F87C                     __pcinit:
  4412                           	opt callstack 0
  4413  01F87C                     start_initialization:
  4414                           	opt callstack 0
  4415  01F87C                     __initialization:
  4416                           	opt callstack 0
  4417                           
  4418                           ; Initialize objects allocated to BIGRAM (832 bytes)
  4419                           ; load TBLPTR registers with __pidataBIGRAM
  4420  01F87C  0E70               	movlw	low __pidataBIGRAM
  4421  01F87E  6EF6               	movwf	tblptrl,c
  4422  01F880  0EA2               	movlw	high __pidataBIGRAM
  4423  01F882  6EF7               	movwf	tblptrh,c
  4424  01F884  0E01               	movlw	low (__pidataBIGRAM shr (0+16))
  4425  01F886  6EF8               	movwf	tblptru,c
  4426  01F888  EE01  F2FF         	lfsr	0,__pdataBIGRAM
  4427  01F88C  EE20 F340          	lfsr	2,832
  4428  01F890                     copy_data0:
  4429  01F890  0009               	tblrd		*+
  4430  01F892  006F FFD7 FFEE     	movff	tablat,postinc0
  4431  01F898  50DD               	movf	postdec2,w,c
  4432  01F89A  50D9               	movf	fsr2l,w,c
  4433  01F89C  E1F9               	bnz	copy_data0
  4434  01F89E  50DA               	movf	fsr2h,w,c
  4435  01F8A0  E1F7               	bnz	copy_data0
  4436                           
  4437                           ; Initialize objects allocated to BANK2 (188 bytes)
  4438                           ; load TBLPTR registers with __pidataBANK2
  4439  01F8A2  0E48               	movlw	low __pidataBANK2
  4440  01F8A4  6EF6               	movwf	tblptrl,c
  4441  01F8A6  0E02               	movlw	high __pidataBANK2
  4442  01F8A8  6EF7               	movwf	tblptrh,c
  4443  01F8AA  0E00               	movlw	low (__pidataBANK2 shr (0+16))
  4444  01F8AC  6EF8               	movwf	tblptru,c
  4445  01F8AE  EE00  F200         	lfsr	0,__pdataBANK2
  4446  01F8B2  EE20 F0BC          	lfsr	2,188
  4447  01F8B6                     copy_data1:
  4448  01F8B6  0009               	tblrd		*+
  4449  01F8B8  006F FFD7 FFEE     	movff	tablat,postinc0
  4450  01F8BE  50DD               	movf	postdec2,w,c
  4451  01F8C0  50D9               	movf	fsr2l,w,c
  4452  01F8C2  E1F9               	bnz	copy_data1
  4453                           
  4454                           ; Initialize objects allocated to BANK1 (164 bytes)
  4455                           ; load TBLPTR registers with __pidataBANK1
  4456  01F8C4  0ED6               	movlw	low __pidataBANK1
  4457  01F8C6  6EF6               	movwf	tblptrl,c
  4458  01F8C8  0E07               	movlw	high __pidataBANK1
  4459  01F8CA  6EF7               	movwf	tblptrh,c
  4460  01F8CC  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  4461  01F8CE  6EF8               	movwf	tblptru,c
  4462  01F8D0  EE00  F100         	lfsr	0,__pdataBANK1
  4463  01F8D4  EE20 F0A4          	lfsr	2,164
  4464  01F8D8                     copy_data2:
  4465  01F8D8  0009               	tblrd		*+
  4466  01F8DA  006F FFD7 FFEE     	movff	tablat,postinc0
  4467  01F8E0  50DD               	movf	postdec2,w,c
  4468  01F8E2  50D9               	movf	fsr2l,w,c
  4469  01F8E4  E1F9               	bnz	copy_data2
  4470                           
  4471                           ; Clear objects allocated to BIGRAM (642 bytes)
  4472  01F8E6  EE02  F23F         	lfsr	0,__pbssBIGRAM
  4473  01F8EA  EE20 F282          	lfsr	2,642
  4474  01F8EE                     clear_0:
  4475  01F8EE  6AEE               	clrf	postinc0,c
  4476  01F8F0  50DD               	movf	postdec2,w,c
  4477  01F8F2  50D9               	movf	fsr2l,w,c
  4478  01F8F4  E1FC               	bnz	clear_0
  4479  01F8F6  50DA               	movf	fsr2h,w,c
  4480  01F8F8  E1FA               	bnz	clear_0
  4481                           
  4482                           ; Clear objects allocated to BANK6 (255 bytes)
  4483  01F8FA  EE01  F200         	lfsr	0,__pbssBANK6
  4484  01F8FE  EE20 F0FF          	lfsr	2,255
  4485  01F902                     clear_1:
  4486  01F902  6AEE               	clrf	postinc0,c
  4487  01F904  50DD               	movf	postdec2,w,c
  4488  01F906  50D9               	movf	fsr2l,w,c
  4489  01F908  E1FC               	bnz	clear_1
  4490  01F90A  50DA               	movf	fsr2h,w,c
  4491  01F90C  E1FA               	bnz	clear_1
  4492                           
  4493                           ; Clear objects allocated to BANK5 (134 bytes)
  4494  01F90E  EE01  F100         	lfsr	0,__pbssBANK5
  4495  01F912  0E86               	movlw	134
  4496  01F914                     clear_2:
  4497  01F914  6AEE               	clrf	postinc0,c
  4498  01F916  06E8               	decf	wreg,f,c
  4499  01F918  E1FD               	bnz	clear_2
  4500                           
  4501                           ; Clear objects allocated to BANK4 (219 bytes)
  4502  01F91A  EE01  F000         	lfsr	0,__pbssBANK4
  4503  01F91E  0EDB               	movlw	219
  4504  01F920                     clear_3:
  4505  01F920  6AEE               	clrf	postinc0,c
  4506  01F922  06E8               	decf	wreg,f,c
  4507  01F924  E1FD               	bnz	clear_3
  4508                           
  4509                           ; Clear objects allocated to BANK3 (247 bytes)
  4510  01F926  EE00  F300         	lfsr	0,__pbssBANK3
  4511  01F92A  0EF7               	movlw	247
  4512  01F92C                     clear_4:
  4513  01F92C  6AEE               	clrf	postinc0,c
  4514  01F92E  06E8               	decf	wreg,f,c
  4515  01F930  E1FD               	bnz	clear_4
  4516                           
  4517                           ; Clear objects allocated to BANK2 (42 bytes)
  4518  01F932  EE00  F2BC         	lfsr	0,__pbssBANK2
  4519  01F936  0E2A               	movlw	42
  4520  01F938                     clear_5:
  4521  01F938  6AEE               	clrf	postinc0,c
  4522  01F93A  06E8               	decf	wreg,f,c
  4523  01F93C  E1FD               	bnz	clear_5
  4524                           
  4525                           ; Clear objects allocated to BANK1 (89 bytes)
  4526  01F93E  EE00  F1A4         	lfsr	0,__pbssBANK1
  4527  01F942  0E59               	movlw	89
  4528  01F944                     clear_6:
  4529  01F944  6AEE               	clrf	postinc0,c
  4530  01F946  06E8               	decf	wreg,f,c
  4531  01F948  E1FD               	bnz	clear_6
  4532                           
  4533                           ; Clear objects allocated to BANK0 (133 bytes)
  4534  01F94A  EE00  F060         	lfsr	0,__pbssBANK0
  4535  01F94E  0E85               	movlw	133
  4536  01F950                     clear_7:
  4537  01F950  6AEE               	clrf	postinc0,c
  4538  01F952  06E8               	decf	wreg,f,c
  4539  01F954  E1FD               	bnz	clear_7
  4540                           
  4541                           ; Clear objects allocated to COMRAM (14 bytes)
  4542  01F956  EE00  F04A         	lfsr	0,__pbssCOMRAM
  4543  01F95A  0E0E               	movlw	14
  4544  01F95C                     clear_8:
  4545  01F95C  6AEE               	clrf	postinc0,c
  4546  01F95E  06E8               	decf	wreg,f,c
  4547  01F960  E1FD               	bnz	clear_8
  4548                           
  4549                           ;
  4550                           ; Setup IVTBASE
  4551                           ;
  4552  01F962  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  4553  01F964  6ED5               	movwf	213,c
  4554  01F966  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  4555  01F968  6ED6               	movwf	214,c
  4556  01F96A  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  4557  01F96C  6ED7               	movwf	215,c
  4558  01F96E                     end_of_initialization:
  4559                           	opt callstack 0
  4560  01F96E                     __end_of__initialization:
  4561                           	opt callstack 0
  4562  01F96E  0100               	movlb	0
  4563  01F970  EF00  F080         	goto	_main	;jump to C main() function
  4564                           
  4565                           	psect	bssCOMRAM
  4566  00004A                     __pbssCOMRAM:
  4567                           	opt callstack 0
  4568  00004A                     _width:
  4569                           	opt callstack 0
  4570  00004A                     	ds	2
  4571  00004C                     _prec:
  4572                           	opt callstack 0
  4573  00004C                     	ds	2
  4574  00004E                     _flags:
  4575                           	opt callstack 0
  4576  00004E                     	ds	2
  4577  000050                     calc_bsoc@log_update_wait:
  4578                           	opt callstack 0
  4579  000050                     	ds	1
  4580  000051                     check_day_time@day_delay:
  4581                           	opt callstack 0
  4582  000051                     	ds	1
  4583  000052                     dac_spi_control@init:
  4584                           	opt callstack 0
  4585  000052                     	ds	1
  4586  000053                     display_history@bwait:
  4587                           	opt callstack 0
  4588  000053                     	ds	1
  4589  000054                     _uart2RxHead:
  4590                           	opt callstack 0
  4591  000054                     	ds	1
  4592  000055                     _uart2TxBufferRemaining:
  4593                           	opt callstack 0
  4594  000055                     	ds	1
  4595  000056                     _uart2TxTail:
  4596                           	opt callstack 0
  4597  000056                     	ds	1
  4598  000057                     _uart1RxHead:
  4599                           	opt callstack 0
  4600  000057                     	ds	1
  4601                           
  4602                           	psect	bssBANK0
  4603  000060                     __pbssBANK0:
  4604                           	opt callstack 0
  4605  000060                     _spi_link:
  4606                           	opt callstack 0
  4607  000060                     	ds	12
  4608  00006C                     ___tzname:
  4609                           	opt callstack 0
  4610  00006C                     	ds	4
  4611  000070                     ___timezone:
  4612                           	opt callstack 0
  4613  000070                     	ds	4
  4614  000074                     floorf@F524:
  4615                           	opt callstack 0
  4616  000074                     	ds	4
  4617  000078                     fabsf@F463:
  4618                           	opt callstack 0
  4619  000078                     	ds	4
  4620  00007C                     ___fpclassifyf@F463:
  4621                           	opt callstack 0
  4622  00007C                     	ds	4
  4623  000080                     calc_ror_data@bcror:
  4624                           	opt callstack 0
  4625  000080                     	ds	4
  4626  000084                     calc_ror_data@bvror:
  4627                           	opt callstack 0
  4628  000084                     	ds	4
  4629  000088                     calc_model_data@bcror:
  4630                           	opt callstack 0
  4631  000088                     	ds	4
  4632  00008C                     calc_model_data@bvror:
  4633                           	opt callstack 0
  4634  00008C                     	ds	4
  4635  000090                     wdtdelay@dcount:
  4636                           	opt callstack 0
  4637  000090                     	ds	4
  4638  000094                     _P:
  4639                           	opt callstack 0
  4640  000094                     	ds	4
  4641  000098                     _TMR3_InterruptHandler:
  4642                           	opt callstack 0
  4643  000098                     	ds	3
  4644  00009B                     _TMR5_InterruptHandler:
  4645                           	opt callstack 0
  4646  00009B                     	ds	3
  4647  00009E                     _TMR6_InterruptHandler:
  4648                           	opt callstack 0
  4649  00009E                     	ds	3
  4650  0000A1                     _ADCC_ADTI_InterruptHandler:
  4651                           	opt callstack 0
  4652  0000A1                     	ds	3
  4653  0000A4                     _ADCC_ADI_InterruptHandler:
  4654                           	opt callstack 0
  4655  0000A4                     	ds	3
  4656  0000A7                     _UART1_RxInterruptHandler:
  4657                           	opt callstack 0
  4658  0000A7                     	ds	3
  4659  0000AA                     _UART2_TxInterruptHandler:
  4660                           	opt callstack 0
  4661  0000AA                     	ds	3
  4662  0000AD                     _UART2_RxInterruptHandler:
  4663                           	opt callstack 0
  4664  0000AD                     	ds	3
  4665  0000B0                     _INT1_InterruptHandler:
  4666                           	opt callstack 0
  4667  0000B0                     	ds	3
  4668  0000B3                     _INT0_InterruptHandler:
  4669                           	opt callstack 0
  4670  0000B3                     	ds	3
  4671  0000B6                     _dst_off:
  4672                           	opt callstack 0
  4673  0000B6                     	ds	2
  4674  0000B8                     ___daylight:
  4675                           	opt callstack 0
  4676  0000B8                     	ds	2
  4677  0000BA                     _nout:
  4678                           	opt callstack 0
  4679  0000BA                     	ds	2
  4680  0000BC                     _t_mbmc:
  4681                           	opt callstack 0
  4682  0000BC                     	ds	2
  4683  0000BE                     TMR3_ISR@CountCallBack:
  4684                           	opt callstack 0
  4685  0000BE                     	ds	2
  4686  0000C0                     _timer3ReloadVal:
  4687                           	opt callstack 0
  4688  0000C0                     	ds	2
  4689  0000C2                     TMR5_ISR@CountCallBack:
  4690                           	opt callstack 0
  4691  0000C2                     	ds	2
  4692  0000C4                     _timer5ReloadVal:
  4693                           	opt callstack 0
  4694  0000C4                     	ds	2
  4695  0000C6                     esr_check@esr_state:
  4696                           	opt callstack 0
  4697  0000C6                     	ds	1
  4698  0000C7                     dac_spi_control@SB:
  4699                           	opt callstack 0
  4700  0000C7                     	ds	1
  4701  0000C8                     dac_spi_control@SC:
  4702                           	opt callstack 0
  4703  0000C8                     	ds	1
  4704  0000C9                     dac_spi_control@S2:
  4705                           	opt callstack 0
  4706  0000C9                     	ds	1
  4707  0000CA                     dac_spi_control@S1:
  4708                           	opt callstack 0
  4709  0000CA                     	ds	1
  4710  0000CB                     dac_spi_control@S0:
  4711                           	opt callstack 0
  4712  0000CB                     	ds	1
  4713  0000CC                     _mode_sw:
  4714                           	opt callstack 0
  4715  0000CC                     	ds	1
  4716  0000CD                     _uart2RxCount:
  4717                           	opt callstack 0
  4718  0000CD                     	ds	1
  4719  0000CE                     _uart2RxTail:
  4720                           	opt callstack 0
  4721  0000CE                     	ds	1
  4722  0000CF                     _uart2TxHead:
  4723                           	opt callstack 0
  4724  0000CF                     	ds	1
  4725  0000D0                     _uart1RxCount:
  4726                           	opt callstack 0
  4727  0000D0                     	ds	1
  4728  0000D1                     _uart1RxTail:
  4729                           	opt callstack 0
  4730  0000D1                     	ds	1
  4731  0000D2                     time@current_time:
  4732                           	opt callstack 0
  4733  0000D2                     	ds	8
  4734  0000DA                     _pclock:
  4735                           	opt callstack 0
  4736  0000DA                     	ds	8
  4737  0000E2                     _crcObj:
  4738                           	opt callstack 0
  4739  0000E2                     	ds	3
  4740                           
  4741                           	psect	bssBANK1
  4742  0001A4                     __pbssBANK1:
  4743                           	opt callstack 0
  4744  0001A4                     _S:
  4745                           	opt callstack 0
  4746  0001A4                     	ds	41
  4747  0001CD                     spinners@s:
  4748                           	opt callstack 0
  4749  0001CD                     	ds	6
  4750  0001D3                     _lock:
  4751                           	opt callstack 0
  4752  0001D3                     	ds	4
  4753  0001D7                     _utctime:
  4754                           	opt callstack 0
  4755  0001D7                     	ds	4
  4756  0001DB                     _r1:
  4757                           	opt callstack 0
  4758  0001DB                     	ds	10
  4759  0001E5                     _r0:
  4760                           	opt callstack 0
  4761  0001E5                     	ds	10
  4762  0001EF                     _dst_name:
  4763                           	opt callstack 0
  4764  0001EF                     	ds	7
  4765  0001F6                     _std_name:
  4766                           	opt callstack 0
  4767  0001F6                     	ds	7
  4768                           
  4769                           	psect	dataBANK1
  4770  000100                     __pdataBANK1:
  4771                           	opt callstack 0
  4772  000100                     _R:
  4773                           	opt callstack 0
  4774  000100                     	ds	155
  4775  00019B                     _H:
  4776                           	opt callstack 0
  4777  00019B                     	ds	9
  4778                           
  4779                           	psect	bssBANK2
  4780  0002BC                     __pbssBANK2:
  4781                           	opt callstack 0
  4782  0002BC                     _tickCount:
  4783                           	opt callstack 0
  4784  0002BC                     	ds	26
  4785  0002D6                     _uart1RxBuffer:
  4786                           	opt callstack 0
  4787  0002D6                     	ds	8
  4788  0002DE                     _seed:
  4789                           	opt callstack 0
  4790  0002DE                     	ds	8
  4791                           
  4792                           	psect	dataBANK2
  4793  000200                     __pdataBANK2:
  4794                           	opt callstack 0
  4795  000200                     stoa@F1166:
  4796                           	opt callstack 0
  4797  000200                     	ds	7
  4798  000207                     _V:
  4799                           	opt callstack 0
  4800  000207                     	ds	181
  4801                           
  4802                           	psect	bssBANK3
  4803  000300                     __pbssBANK3:
  4804                           	opt callstack 0
  4805  000300                     lp_filter@smooth:
  4806                           	opt callstack 0
  4807  000300                     	ds	84
  4808  000354                     _dbuf:
  4809                           	opt callstack 0
  4810  000354                     	ds	80
  4811  0003A4                     	ds	32
  4812  0003C4                     asctime@buf:
  4813                           	opt callstack 0
  4814  0003C4                     	ds	27
  4815  0003DF                     localtime@tm:
  4816                           	opt callstack 0
  4817  0003DF                     	ds	24
  4818                           
  4819                           	psect	bssBANK4
  4820  000400                     __pbssBANK4:
  4821                           	opt callstack 0
  4822  000400                     _uart2TxBuffer:
  4823                           	opt callstack 0
  4824  000400                     	ds	64
  4825  000440                     _r_cal:
  4826                           	opt callstack 0
  4827  000440                     	ds	155
  4828                           
  4829                           	psect	bssBANK5
  4830  000500                     __pbssBANK5:
  4831                           	opt callstack 0
  4832  000500                     _ring_buf2:
  4833                           	opt callstack 0
  4834  000500                     	ds	67
  4835  000543                     _ring_buf1:
  4836                           	opt callstack 0
  4837  000543                     	ds	67
  4838                           
  4839                           	psect	bssBANK6
  4840  000600                     __pbssBANK6:
  4841                           	opt callstack 0
  4842  000600                     _uart2RxBuffer:
  4843                           	opt callstack 0
  4844  000600                     	ds	255
  4845                           
  4846                           	psect	bssBIGRAM
  4847  000A3F                     __pbssBIGRAM:
  4848                           	opt callstack 0
  4849  000A3F                     _D:
  4850                           	opt callstack 0
  4851  000A3F                     	ds	642
  4852                           
  4853                           	psect	dataBIGRAM
  4854  0006FF                     __pdataBIGRAM:
  4855                           	opt callstack 0
  4856  0006FF                     _port_data:
  4857                           	opt callstack 0
  4858  0006FF                     	ds	512
  4859  0008FF                     _C:
  4860                           	opt callstack 0
  4861  0008FF                     	ds	320
  4862                           
  4863                           	psect	cstackBANK0
  4864  0000E5                     __pcstackBANK0:
  4865                           	opt callstack 0
  4866  0000E5                     ??_TMR3_ISR:
  4867                           
  4868                           ; 1 bytes @ 0x0
  4869  0000E5                     	ds	25
  4870                           
  4871                           	psect	cstackCOMRAM
  4872  000001                     __pcstackCOMRAM:
  4873                           	opt callstack 0
  4874  000001                     ??_ADCC_ThresholdISR:
  4875  000001                     
  4876                           ; 1 bytes @ 0x0
  4877  000001                     	ds	5
  4878  000006                     ??_TMR6_ISR:
  4879                           
  4880                           ; 1 bytes @ 0x5
  4881  000006                     	ds	1
  4882  000007                     ??_INT1_ISR:
  4883  000007                     
  4884                           ; 1 bytes @ 0x6
  4885  000007                     	ds	4
  4886  00000B                     ??_TMR5_ISR:
  4887                           
  4888                           ; 1 bytes @ 0xA
  4889  00000B                     	ds	31
  4890                           
  4891 ;;
  4892 ;;Main: autosize = 17, tempsize = 0, incstack = 0, save=0
  4893 ;;
  4894 ;; *************** function _main *****************
  4895 ;; Defined at:
  4896 ;;		line 198 in file "main.c"
  4897 ;; Parameters:    Size  Location     Type
  4898 ;;		None
  4899 ;; Auto vars:     Size  Location     Type
  4900 ;;  esr_temp        4  [STACK] float 
  4901 ;;  i_esr           2  [STACK] unsigned short 
  4902 ;;  shape           1  [STACK] unsigned char 
  4903 ;;  inp_index       1  [STACK] unsigned char 
  4904 ;;  k               1  [STACK] unsigned char 
  4905 ;;  j               1  [STACK] unsigned char 
  4906 ;;  i               1  [STACK] unsigned char 
  4907 ;;  mode            1  [STACK] enum E17179
  4908 ;;  i_ror           1  [STACK] unsigned char 
  4909 ;; Return value:  Size  Location     Type
  4910 ;;                  1  [STACK] void 
  4911 ;; Registers used:
  4912 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15, btemp+16, btemp+17, 
      +btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, 
      +btemp+30, btemp+31, tblptrl, tblptrh, tblptru, prodl, prodh
  4913 ;; Tracked objects:
  4914 ;;		On entry : 0/0
  4915 ;;		On exit  : 0/0
  4916 ;;		Unchanged: 0/0
  4917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4918 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4919 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4920 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4921 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4922 ;;Total ram usage:        0 bytes
  4923 ;; Hardware stack levels required when called:   28
  4924 ;; This function calls:
  4925 ;;		_SYSTEM_Initialize
  4926 ;;		_StartTimer
  4927 ;;		_TimerDone
  4928 ;;		_WaitMs
  4929 ;;		___fladd
  4930 ;;		___flge
  4931 ;;		___fltol
  4932 ;;		_asctime
  4933 ;;		_calc_model_data
  4934 ;;		_calc_ror_data
  4935 ;;		_check_adc_scan
  4936 ;;		_check_enter_button
  4937 ;;		_check_help
  4938 ;;		_clear_adc_scan
  4939 ;;		_clear_hid_pflags
  4940 ;;		_conv_raw_result
  4941 ;;		_convert_adc_data
  4942 ;;		_current_sensor_cal
  4943 ;;		_display_history
  4944 ;;		_eaDogM_WriteCommand
  4945 ;;		_esr_check
  4946 ;;		_fabsf
  4947 ;;		_get_raw_result
  4948 ;;		_get_switch
  4949 ;;		_get_vterm_ptr
  4950 ;;		_hid_display
  4951 ;;		_init_bsoc
  4952 ;;		_init_display
  4953 ;;		_init_port_dma
  4954 ;;		_load_hist_data
  4955 ;;		_localtime
  4956 ;;		_lp_filter
  4957 ;;		_mode_lamp_dim
  4958 ;;		_read_cal_data
  4959 ;;		_set_dac
  4960 ;;		_set_dac_a
  4961 ;;		_set_dac_b
  4962 ;;		_set_display_info
  4963 ;;		_set_hist_flag
  4964 ;;		_set_load_relay_one
  4965 ;;		_set_load_relay_two
  4966 ;;		_set_time
  4967 ;;		_set_vterm
  4968 ;;		_spinners
  4969 ;;		_sprintf
  4970 ;;		_srand
  4971 ;;		_start_adc_scan
  4972 ;;		_start_switch_handler
  4973 ;;		_static_soc
  4974 ;;		_time
  4975 ;;		_update_cal_data
  4976 ;;		_update_hist_data
  4977 ;;		_update_lcd
  4978 ;;		_wait_lcd_done
  4979 ;;		_write_cal_data
  4980 ;; This function is called by:
  4981 ;;		Startup code after reset
  4982 ;; This function uses a reentrant model
  4983 ;;
  4984                           
  4985                           	psect	text0
  4986  010000                     __ptext0:
  4987                           	opt callstack 0
  4988  010000                     _main:
  4989                           	opt callstack 0
  4990                           
  4991                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  4992  010000  0E11               	movlw	17
  4993  010002  26E1               	addwf	fsr1l,f,c
  4994  010004  0E00               	movlw	0
  4995  010006  22E2               	addwfc	fsr1h,f,c
  4996                           
  4997                           ;main.c: 200:  UI_STATES mode;;main.c: 201:  uint8_t inp_index = 0, i = C_BATT, j = C_PV
      +                          , k = V_CC, i_ror;
  4998                           ;stkvar	_inp_index @ sp[(-17)+11]
  4999                           
  5000                           ;incstack = 0
  5001  010008  0EFA               	movlw	-6
  5002  01000A  6AE3               	clrf	plusw1,c
  5003                           
  5004                           ;stkvar	_i @ sp[(-17)+14]
  5005  01000C  0EFD               	movlw	-3
  5006  01000E  6AE3               	clrf	plusw1,c
  5007                           
  5008                           ;stkvar	_j @ sp[(-17)+13]
  5009  010010  0EFC               	movlw	-4
  5010  010012  6AE3               	clrf	plusw1,c
  5011  010014  2AE3               	incf	plusw1,f,c
  5012                           
  5013                           ;stkvar	_k @ sp[(-17)+12]
  5014  010016  0EFB               	movlw	-5
  5015  010018  6AE3               	clrf	plusw1,c
  5016  01001A  82E3               	bsf	plusw1,1,c
  5017                           
  5018                           ;main.c: 204:  SYSTEM_Initialize();
  5019  01001C  EC30  F00C         	call	_SYSTEM_Initialize	;wreg free
  5020                           
  5021                           ; BSR set to: 60
  5022                           ;main.c: 207:  (INTCON0bits.GIEH = 1);
  5023  010020  8ED2               	bsf	210,7,c	;volatile
  5024                           
  5025                           ; BSR set to: 60
  5026                           ;main.c: 210:  (INTCON0bits.GIEL = 1);
  5027  010022  8CD2               	bsf	210,6,c	;volatile
  5028                           
  5029                           ; BSR set to: 60
  5030                           ;main.c: 212:  V.ui_state = UI_STATE_INIT;
  5031  010024  0102               	movlb	2	; () banked
  5032  010026  6B07               	clrf	_V& (0+255),b	;volatile
  5033                           
  5034                           ; BSR set to: 2
  5035                           ;main.c: 217:  WaitMs(300);
  5036  010028  0E2C               	movlw	44
  5037  01002A  6EE6               	movwf	postinc1,c
  5038  01002C  0E01               	movlw	1
  5039  01002E  6EE6               	movwf	postinc1,c
  5040  010030  EC07  F00F         	call	_WaitMs	;wreg free
  5041                           
  5042                           ;main.c: 218:  if (PORTBbits.RB0) {
  5043  010034  A0CB               	btfss	203,0,c	;volatile
  5044  010036  D004               	goto	l17366
  5045                           
  5046                           ;main.c: 219:   mode = UI_STATE_HOST;
  5047                           ;stkvar	_mode @ sp[(-17)+15]
  5048  010038  0EFE               	movlw	-2
  5049  01003A  6AE3               	clrf	plusw1,c
  5050  01003C  2AE3               	incf	plusw1,f,c
  5051                           
  5052                           ;main.c: 220:  } else {
  5053  01003E  D004               	goto	l17368
  5054  010040                     l17366:
  5055                           
  5056                           ;main.c: 221:   mode = UI_STATE_LOG;
  5057                           ;stkvar	_mode @ sp[(-17)+15]
  5058  010040  0EFE               	movlw	-2
  5059  010042  6AE3               	clrf	plusw1,c
  5060  010044  80E3               	bsf	plusw1,0,c
  5061  010046  82E3               	bsf	plusw1,1,c	;indir
  5062  010048                     l17368:
  5063                           
  5064                           ;main.c: 224:  if (mode == UI_STATE_HOST) {
  5065                           ;stkvar	_mode @ sp[(-17)+15]
  5066  010048  0EFE               	movlw	-2
  5067  01004A  04E3               	decf	plusw1,w,c
  5068  01004C  A4D8               	btfss	status,2,c
  5069  01004E  D007               	goto	l1455
  5070                           
  5071                           ;main.c: 225:   do { LATDbits.LATD0 = 1; } while(0);
  5072  010050  80BD               	bsf	189,0,c	;volatile
  5073                           
  5074                           ;main.c: 226:   V.mode_pwm = 70;
  5075  010052  0E00               	movlw	0
  5076  010054  0102               	movlb	2	; () banked
  5077  010056  6F9A               	movwf	(_V+147)& (0+255),b	;volatile
  5078  010058  0E46               	movlw	70
  5079  01005A  6F99               	movwf	(_V+146)& (0+255),b	;volatile
  5080                           
  5081                           ;main.c: 227:  } else {
  5082  01005C  D004               	goto	l17372
  5083  01005E                     l1455:
  5084  01005E  90BD               	bcf	189,0,c	;volatile
  5085                           
  5086                           ;main.c: 229:   V.mode_pwm = 0;
  5087  010060  0102               	movlb	2	; () banked
  5088  010062  6B99               	clrf	(_V+146)& (0+255),b	;volatile
  5089  010064  6B9A               	clrf	(_V+147)& (0+255),b	;volatile
  5090  010066                     l17372:
  5091                           
  5092                           ; BSR set to: 2
  5093                           ;main.c: 231:  mode_lamp_dim(V.mode_pwm);
  5094  010066  0060  FA67  FFE6   	movff	_V+146,postinc1
  5095  01006C  0060  FA6B  FFE6   	movff	_V+147,postinc1
  5096  010072  ECAF  F012         	call	_mode_lamp_dim	;wreg free
  5097  010076  D3EB               	goto	l17528
  5098  010078                     l17374:
  5099                           
  5100                           ; BSR set to: 2
  5101                           ;main.c: 239:    init_port_dma();
  5102  010078  ECA3  F00F         	call	_init_port_dma	;wreg free
  5103                           
  5104                           ; BSR set to: 59
  5105                           ;main.c: 241:    init_display();
  5106  01007C  EC9F  F0FE         	call	_init_display	;wreg free
  5107                           
  5108                           ; BSR set to: 61
  5109                           ;main.c: 242:    eaDogM_WriteCommand(0b00001100);
  5110  010080  0E0C               	movlw	12
  5111  010082  6EE6               	movwf	postinc1,c
  5112  010084  EC37  F013         	call	_eaDogM_WriteCommand	;wreg free
  5113                           
  5114                           ; BSR set to: 0
  5115                           ;main.c: 243:    set_dac();
  5116  010088  EC3B  F002         	call	_set_dac	;wreg free
  5117                           
  5118                           ;main.c: 247:    set_load_relay_one(1);
  5119  01008C  0E01               	movlw	1
  5120  01008E  6EE6               	movwf	postinc1,c
  5121  010090  EC17  F013         	call	_set_load_relay_one	;wreg free
  5122                           
  5123                           ;main.c: 248:    set_load_relay_two(1);
  5124  010094  0E01               	movlw	1
  5125  010096  6EE6               	movwf	postinc1,c
  5126  010098  EC0F  F013         	call	_set_load_relay_two	;wreg free
  5127                           
  5128                           ;main.c: 250:    V.ui_state = mode;
  5129                           ;stkvar	_mode @ sp[(-17)+15]
  5130  01009C  0EFE               	movlw	-2
  5131  01009E  006F FF8C  F207    	movff	plusw1,_V	;volatile
  5132                           
  5133                           ;main.c: 251:    srand(1957);
  5134  0100A4  0EA5               	movlw	165
  5135  0100A6  6EE6               	movwf	postinc1,c
  5136  0100A8  0E07               	movlw	7
  5137  0100AA  6EE6               	movwf	postinc1,c
  5138  0100AC  EC22  F00F         	call	_srand	;wreg free
  5139                           
  5140                           ; BSR set to: 2
  5141                           ;main.c: 252:    set_vterm(0);
  5142  0100B0  0E00               	movlw	0
  5143  0100B2  6EE6               	movwf	postinc1,c
  5144  0100B4  EC76  F012         	call	_set_vterm	;wreg free
  5145                           
  5146                           ;main.c: 253:    sprintf(get_vterm_ptr(0, 0), " MBMC SOLARMON      ");
  5147  0100B8  0E1D               	movlw	low STR_1
  5148  0100BA  6EE6               	movwf	postinc1,c
  5149  0100BC  0EFF               	movlw	high STR_1
  5150  0100BE  6EE6               	movwf	postinc1,c
  5151  0100C0  0E00               	movlw	0
  5152  0100C2  6EE6               	movwf	postinc1,c
  5153  0100C4  0E00               	movlw	0
  5154  0100C6  6EE6               	movwf	postinc1,c
  5155  0100C8  ECE9  F0FF         	call	_get_vterm_ptr	;wreg free
  5156  0100CC  0060  F0AB  FFE6   	movff	btemp,postinc1
  5157  0100D2  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5158  0100D8  0E04               	movlw	4
  5159  0100DA  6EE6               	movwf	postinc1,c
  5160  0100DC  ECB9  F0FB         	call	_sprintf	;wreg free
  5161                           
  5162                           ; BSR set to: 0
  5163                           ;main.c: 254:    sprintf(get_vterm_ptr(1, 0), " Version %s         ", "1.25");
  5164  0100E0  0ED5               	movlw	low STR_3
  5165  0100E2  6EE6               	movwf	postinc1,c
  5166  0100E4  0EFF               	movlw	high STR_3
  5167  0100E6  6EE6               	movwf	postinc1,c
  5168  0100E8  0E08               	movlw	low STR_2
  5169  0100EA  6EE6               	movwf	postinc1,c
  5170  0100EC  0EFF               	movlw	high STR_2
  5171  0100EE  6EE6               	movwf	postinc1,c
  5172  0100F0  0E00               	movlw	0
  5173  0100F2  6EE6               	movwf	postinc1,c
  5174  0100F4  0E01               	movlw	1
  5175  0100F6  6EE6               	movwf	postinc1,c
  5176  0100F8  ECE9  F0FF         	call	_get_vterm_ptr	;wreg free
  5177  0100FC  0060  F0AB  FFE6   	movff	btemp,postinc1
  5178  010102  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5179  010108  0E06               	movlw	6
  5180  01010A  6EE6               	movwf	postinc1,c
  5181  01010C  ECB9  F0FB         	call	_sprintf	;wreg free
  5182                           
  5183                           ; BSR set to: 0
  5184                           ;main.c: 255:    sprintf(get_vterm_ptr(2, 0), " NSASPOOK           ");
  5185  010110  0EF3               	movlw	low STR_4
  5186  010112  6EE6               	movwf	postinc1,c
  5187  010114  0EFE               	movlw	high STR_4
  5188  010116  6EE6               	movwf	postinc1,c
  5189  010118  0E00               	movlw	0
  5190  01011A  6EE6               	movwf	postinc1,c
  5191  01011C  0E02               	movlw	2
  5192  01011E  6EE6               	movwf	postinc1,c
  5193  010120  ECE9  F0FF         	call	_get_vterm_ptr	;wreg free
  5194  010124  0060  F0AB  FFE6   	movff	btemp,postinc1
  5195  01012A  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5196  010130  0E04               	movlw	4
  5197  010132  6EE6               	movwf	postinc1,c
  5198  010134  ECB9  F0FB         	call	_sprintf	;wreg free
  5199                           
  5200                           ; BSR set to: 0
  5201                           ;main.c: 256:    sprintf(get_vterm_ptr(3, 0), "                    ");
  5202  010138  0EB9               	movlw	low (STR_16+2)
  5203  01013A  6EE6               	movwf	postinc1,c
  5204  01013C  0EFB               	movlw	high (STR_16+2)
  5205  01013E  6EE6               	movwf	postinc1,c
  5206  010140  0E00               	movlw	0
  5207  010142  6EE6               	movwf	postinc1,c
  5208  010144  0E03               	movlw	3
  5209  010146  6EE6               	movwf	postinc1,c
  5210  010148  ECE9  F0FF         	call	_get_vterm_ptr	;wreg free
  5211  01014C  0060  F0AB  FFE6   	movff	btemp,postinc1
  5212  010152  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5213  010158  0E04               	movlw	4
  5214  01015A  6EE6               	movwf	postinc1,c
  5215  01015C  ECB9  F0FB         	call	_sprintf	;wreg free
  5216                           
  5217                           ; BSR set to: 0
  5218                           ;main.c: 257:    sprintf(get_vterm_ptr(0, 2), "                    ");
  5219  010160  0EB9               	movlw	low (STR_16+2)
  5220  010162  6EE6               	movwf	postinc1,c
  5221  010164  0EFB               	movlw	high (STR_16+2)
  5222  010166  6EE6               	movwf	postinc1,c
  5223  010168  0E02               	movlw	2
  5224  01016A  6EE6               	movwf	postinc1,c
  5225  01016C  0E00               	movlw	0
  5226  01016E  6EE6               	movwf	postinc1,c
  5227  010170  ECE9  F0FF         	call	_get_vterm_ptr	;wreg free
  5228  010174  0060  F0AB  FFE6   	movff	btemp,postinc1
  5229  01017A  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5230  010180  0E04               	movlw	4
  5231  010182  6EE6               	movwf	postinc1,c
  5232  010184  ECB9  F0FB         	call	_sprintf	;wreg free
  5233                           
  5234                           ; BSR set to: 0
  5235                           ;main.c: 258:    sprintf(get_vterm_ptr(1, 2), "                    ");
  5236  010188  0EB9               	movlw	low (STR_16+2)
  5237  01018A  6EE6               	movwf	postinc1,c
  5238  01018C  0EFB               	movlw	high (STR_16+2)
  5239  01018E  6EE6               	movwf	postinc1,c
  5240  010190  0E02               	movlw	2
  5241  010192  6EE6               	movwf	postinc1,c
  5242  010194  0E01               	movlw	1
  5243  010196  6EE6               	movwf	postinc1,c
  5244  010198  ECE9  F0FF         	call	_get_vterm_ptr	;wreg free
  5245  01019C  0060  F0AB  FFE6   	movff	btemp,postinc1
  5246  0101A2  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5247  0101A8  0E04               	movlw	4
  5248  0101AA  6EE6               	movwf	postinc1,c
  5249  0101AC  ECB9  F0FB         	call	_sprintf	;wreg free
  5250                           
  5251                           ; BSR set to: 0
  5252                           ;main.c: 259:    sprintf(get_vterm_ptr(2, 2), "                    ");
  5253  0101B0  0EB9               	movlw	low (STR_16+2)
  5254  0101B2  6EE6               	movwf	postinc1,c
  5255  0101B4  0EFB               	movlw	high (STR_16+2)
  5256  0101B6  6EE6               	movwf	postinc1,c
  5257  0101B8  0E02               	movlw	2
  5258  0101BA  6EE6               	movwf	postinc1,c
  5259  0101BC  0E02               	movlw	2
  5260  0101BE  6EE6               	movwf	postinc1,c
  5261  0101C0  ECE9  F0FF         	call	_get_vterm_ptr	;wreg free
  5262  0101C4  0060  F0AB  FFE6   	movff	btemp,postinc1
  5263  0101CA  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5264  0101D0  0E04               	movlw	4
  5265  0101D2  6EE6               	movwf	postinc1,c
  5266  0101D4  ECB9  F0FB         	call	_sprintf	;wreg free
  5267                           
  5268                           ; BSR set to: 0
  5269                           ;main.c: 260:    sprintf(get_vterm_ptr(3, 2), "                    ");
  5270  0101D8  0EB9               	movlw	low (STR_16+2)
  5271  0101DA  6EE6               	movwf	postinc1,c
  5272  0101DC  0EFB               	movlw	high (STR_16+2)
  5273  0101DE  6EE6               	movwf	postinc1,c
  5274  0101E0  0E02               	movlw	2
  5275  0101E2  6EE6               	movwf	postinc1,c
  5276  0101E4  0E03               	movlw	3
  5277  0101E6  6EE6               	movwf	postinc1,c
  5278  0101E8  ECE9  F0FF         	call	_get_vterm_ptr	;wreg free
  5279  0101EC  0060  F0AB  FFE6   	movff	btemp,postinc1
  5280  0101F2  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5281  0101F8  0E04               	movlw	4
  5282  0101FA  6EE6               	movwf	postinc1,c
  5283  0101FC  ECB9  F0FB         	call	_sprintf	;wreg free
  5284                           
  5285                           ; BSR set to: 0
  5286                           ;main.c: 261:    update_lcd(0);
  5287  010200  0E00               	movlw	0
  5288  010202  6EE6               	movwf	postinc1,c
  5289  010204  EC6B  F0F4         	call	_update_lcd	;wreg free
  5290                           
  5291                           ;main.c: 262:    WaitMs(1000);
  5292  010208  0EE8               	movlw	232
  5293  01020A  6EE6               	movwf	postinc1,c
  5294  01020C  0E03               	movlw	3
  5295  01020E  6EE6               	movwf	postinc1,c
  5296  010210  EC07  F00F         	call	_WaitMs	;wreg free
  5297                           
  5298                           ;main.c: 263:    StartTimer(TMR_DISPLAY, 250);
  5299  010214  0EFA               	movlw	250
  5300  010216  6EE6               	movwf	postinc1,c
  5301  010218  0E00               	movlw	0
  5302  01021A  6EE6               	movwf	postinc1,c
  5303  01021C  0E0A               	movlw	10
  5304  01021E  6EE6               	movwf	postinc1,c
  5305  010220  ECFA  F00D         	call	_StartTimer	;wreg free
  5306                           
  5307                           ;main.c: 264:    StartTimer(TMR_ADC, 200);
  5308  010224  0EC8               	movlw	200
  5309  010226  6EE6               	movwf	postinc1,c
  5310  010228  0E00               	movlw	0
  5311  01022A  6EE6               	movwf	postinc1,c
  5312  01022C  0E01               	movlw	1
  5313  01022E  6EE6               	movwf	postinc1,c
  5314  010230  ECFA  F00D         	call	_StartTimer	;wreg free
  5315                           
  5316                           ;main.c: 265:    StartTimer(TMR_INFO, 3000);
  5317  010234  0EB8               	movlw	184
  5318  010236  6EE6               	movwf	postinc1,c
  5319  010238  0E0B               	movlw	11
  5320  01023A  6EE6               	movwf	postinc1,c
  5321  01023C  0E07               	movlw	7
  5322  01023E  6EE6               	movwf	postinc1,c
  5323  010240  ECFA  F00D         	call	_StartTimer	;wreg free
  5324                           
  5325                           ;main.c: 266:    StartTimer(TMR_FLIPPER, 1500);
  5326  010244  0EDC               	movlw	220
  5327  010246  6EE6               	movwf	postinc1,c
  5328  010248  0E05               	movlw	5
  5329  01024A  6EE6               	movwf	postinc1,c
  5330  01024C  0E0B               	movlw	11
  5331  01024E  6EE6               	movwf	postinc1,c
  5332  010250  ECFA  F00D         	call	_StartTimer	;wreg free
  5333                           
  5334                           ;main.c: 267:    StartTimer(TMR_HELPDIS, 3000);
  5335  010254  0EB8               	movlw	184
  5336  010256  6EE6               	movwf	postinc1,c
  5337  010258  0E0B               	movlw	11
  5338  01025A  6EE6               	movwf	postinc1,c
  5339  01025C  0E09               	movlw	9
  5340  01025E  6EE6               	movwf	postinc1,c
  5341  010260  ECFA  F00D         	call	_StartTimer	;wreg free
  5342                           
  5343                           ;main.c: 269:    start_adc_scan();
  5344  010264  EC39  F00A         	call	_start_adc_scan	;wreg free
  5345                           
  5346                           ;main.c: 270:    start_switch_handler();
  5347  010268  EC38  F012         	call	_start_switch_handler	;wreg free
  5348                           
  5349                           ; BSR set to: 57
  5350                           ;main.c: 271:    WaitMs(1000);
  5351  01026C  0EE8               	movlw	232
  5352  01026E  6EE6               	movwf	postinc1,c
  5353  010270  0E03               	movlw	3
  5354  010272  6EE6               	movwf	postinc1,c
  5355  010274  EC07  F00F         	call	_WaitMs	;wreg free
  5356                           
  5357                           ;main.c: 276:    if (read_cal_data()) {
  5358  010278  EC71  F0EA         	call	_read_cal_data	;wreg free
  5359  01027C  502A               	movf	btemp^0,w,c
  5360  01027E  B4D8               	btfsc	status,2,c
  5361  010280  D03E               	goto	l17438
  5362                           
  5363                           ;main.c: 277:     update_cal_data();
  5364  010282  ECB3  F00B         	call	_update_cal_data	;wreg free
  5365                           
  5366                           ; BSR set to: 1
  5367                           ;main.c: 278:     if (update_hist_data(1, &C.hist[0]))
  5368  010286  0EB8               	movlw	low (_C+185)
  5369  010288  6EE6               	movwf	postinc1,c
  5370  01028A  0E09               	movlw	high (_C+185)
  5371  01028C  6EE6               	movwf	postinc1,c
  5372  01028E  0E01               	movlw	1
  5373  010290  6EE6               	movwf	postinc1,c
  5374  010292  ECDD  F007         	call	_update_hist_data	;wreg free
  5375  010296  502A               	movf	btemp^0,w,c
  5376  010298  B4D8               	btfsc	status,2,c
  5377  01029A  D01C               	goto	l17436
  5378                           
  5379                           ;main.c: 279:      set_time(C.hist[0].pclock);
  5380  01029C  EE22  F1B9         	lfsr	2,_C+186	;volatile
  5381  0102A0  006F FF7B FFE6     	movff	postinc2,postinc1
  5382  0102A6  006F FF7B FFE6     	movff	postinc2,postinc1
  5383  0102AC  006F FF7B FFE6     	movff	postinc2,postinc1
  5384  0102B2  006F FF7B FFE6     	movff	postinc2,postinc1
  5385  0102B8  006F FF7B FFE6     	movff	postinc2,postinc1
  5386  0102BE  006F FF7B FFE6     	movff	postinc2,postinc1
  5387  0102C4  006F FF7B FFE6     	movff	postinc2,postinc1
  5388  0102CA  006F FF7B FFE6     	movff	postinc2,postinc1
  5389  0102D0  ECEC  F00E         	call	_set_time	;wreg free
  5390  0102D4                     l17436:
  5391                           
  5392                           ;main.c: 281:     sprintf(get_vterm_ptr(2, 0), "Read EEPROM DATA    ");
  5393  0102D4  0E32               	movlw	low STR_10
  5394  0102D6  6EE6               	movwf	postinc1,c
  5395  0102D8  0EFF               	movlw	high STR_10
  5396  0102DA  6EE6               	movwf	postinc1,c
  5397  0102DC  0E00               	movlw	0
  5398  0102DE  6EE6               	movwf	postinc1,c
  5399  0102E0  0E02               	movlw	2
  5400  0102E2  6EE6               	movwf	postinc1,c
  5401  0102E4  ECE9  F0FF         	call	_get_vterm_ptr	;wreg free
  5402  0102E8  0060  F0AB  FFE6   	movff	btemp,postinc1
  5403  0102EE  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5404  0102F4  0E04               	movlw	4
  5405  0102F6  6EE6               	movwf	postinc1,c
  5406  0102F8  ECB9  F0FB         	call	_sprintf	;wreg free
  5407                           
  5408                           ;main.c: 282:    } else {
  5409  0102FC  D014               	goto	l1462
  5410  0102FE                     l17438:
  5411                           
  5412                           ;main.c: 283:     sprintf(get_vterm_ptr(2, 0), "Invalid EEPROM DATA ");
  5413  0102FE  0E5C               	movlw	low STR_11
  5414  010300  6EE6               	movwf	postinc1,c
  5415  010302  0EFF               	movlw	high STR_11
  5416  010304  6EE6               	movwf	postinc1,c
  5417  010306  0E00               	movlw	0
  5418  010308  6EE6               	movwf	postinc1,c
  5419  01030A  0E02               	movlw	2
  5420  01030C  6EE6               	movwf	postinc1,c
  5421  01030E  ECE9  F0FF         	call	_get_vterm_ptr	;wreg free
  5422  010312  0060  F0AB  FFE6   	movff	btemp,postinc1
  5423  010318  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5424  01031E  0E04               	movlw	4
  5425  010320  6EE6               	movwf	postinc1,c
  5426  010322  ECB9  F0FB         	call	_sprintf	;wreg free
  5427  010326                     l1462:
  5428                           
  5429                           ; BSR set to: 0
  5430                           ;main.c: 285:    update_lcd(0);
  5431  010326  0E00               	movlw	0
  5432  010328  6EE6               	movwf	postinc1,c
  5433  01032A  EC6B  F0F4         	call	_update_lcd	;wreg free
  5434                           
  5435                           ;main.c: 286:    WaitMs(2000);
  5436  01032E  0ED0               	movlw	208
  5437  010330  6EE6               	movwf	postinc1,c
  5438  010332  0E07               	movlw	7
  5439  010334  6EE6               	movwf	postinc1,c
  5440  010336  EC07  F00F         	call	_WaitMs	;wreg free
  5441                           
  5442                           ;main.c: 288:    i_ror = 1;
  5443                           ;stkvar	_i_ror @ sp[(-17)+16]
  5444  01033A  0EFF               	movlw	-1
  5445  01033C  6AE3               	clrf	plusw1,c
  5446  01033E  2AE3               	incf	plusw1,f,c
  5447  010340                     l17444:
  5448                           
  5449                           ;main.c: 290:     calc_ror_data();
  5450  010340  EC61  F0EF         	call	_calc_ror_data	;wreg free
  5451                           
  5452                           ;main.c: 291:     sprintf(get_vterm_ptr(1, 0), "BV %2.4f             ", conv_raw_result(
      +                          V_BAT, CONV));
  5453  010344  0E00               	movlw	0
  5454  010346  6EE6               	movwf	postinc1,c
  5455  010348  0E04               	movlw	4
  5456  01034A  6EE6               	movwf	postinc1,c
  5457  01034C  ECE6  F0C2         	call	_conv_raw_result	;wreg free
  5458  010350  0060  F0AB  FFE6   	movff	btemp,postinc1
  5459  010356  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5460  01035C  0060  F0B3  FFE6   	movff	btemp+2,postinc1
  5461  010362  0060  F0B7  FFE6   	movff	btemp+3,postinc1
  5462  010368  0E69               	movlw	low STR_12
  5463  01036A  6EE6               	movwf	postinc1,c
  5464  01036C  0EFD               	movlw	high STR_12
  5465  01036E  6EE6               	movwf	postinc1,c
  5466  010370  0E00               	movlw	0
  5467  010372  6EE6               	movwf	postinc1,c
  5468  010374  0E01               	movlw	1
  5469  010376  6EE6               	movwf	postinc1,c
  5470  010378  ECE9  F0FF         	call	_get_vterm_ptr	;wreg free
  5471  01037C  0060  F0AB  FFE6   	movff	btemp,postinc1
  5472  010382  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5473  010388  0E08               	movlw	8
  5474  01038A  6EE6               	movwf	postinc1,c
  5475  01038C  ECB9  F0FB         	call	_sprintf	;wreg free
  5476                           
  5477                           ; BSR set to: 0
  5478                           ;main.c: 292:     sprintf(get_vterm_ptr(2, 0), "S S%cC %d %2.4f          ", spinners(5, 
      +                          0), i_ror, C.bv_ror);
  5479  010390  EE22  F16B         	lfsr	2,_C+108	;volatile
  5480  010394  006F FF7B FFE6     	movff	postinc2,postinc1
  5481  01039A  006F FF7B FFE6     	movff	postinc2,postinc1
  5482  0103A0  006F FF7B FFE6     	movff	postinc2,postinc1
  5483  0103A6  006F FF7B FFE6     	movff	postinc2,postinc1
  5484                           
  5485                           ;stkvar	_i_ror @ sp[(-21)+16]
  5486  0103AC  0EFB               	movlw	-5
  5487  0103AE  50E3               	movf	plusw1,w,c
  5488  0103B0  6EE6               	movwf	postinc1,c
  5489  0103B2  0E00               	movlw	0
  5490  0103B4  6EE6               	movwf	postinc1,c
  5491  0103B6  0E00               	movlw	0
  5492  0103B8  6EE6               	movwf	postinc1,c
  5493  0103BA  0E05               	movlw	5
  5494  0103BC  6EE6               	movwf	postinc1,c
  5495  0103BE  EC35  F0FD         	call	_spinners	;wreg free
  5496  0103C2  502A               	movf	btemp^0,w,c
  5497  0103C4  6EE6               	movwf	postinc1,c
  5498  0103C6  0E00               	movlw	0
  5499  0103C8  6EE6               	movwf	postinc1,c
  5500  0103CA  0E25               	movlw	low STR_13
  5501  0103CC  6EE6               	movwf	postinc1,c
  5502  0103CE  0EFB               	movlw	high STR_13
  5503  0103D0  6EE6               	movwf	postinc1,c
  5504  0103D2  0E00               	movlw	0
  5505  0103D4  6EE6               	movwf	postinc1,c
  5506  0103D6  0E02               	movlw	2
  5507  0103D8  6EE6               	movwf	postinc1,c
  5508  0103DA  ECE9  F0FF         	call	_get_vterm_ptr	;wreg free
  5509  0103DE  0060  F0AB  FFE6   	movff	btemp,postinc1
  5510  0103E4  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5511  0103EA  0E0C               	movlw	12
  5512  0103EC  6EE6               	movwf	postinc1,c
  5513  0103EE  ECB9  F0FB         	call	_sprintf	;wreg free
  5514                           
  5515                           ; BSR set to: 0
  5516                           ;main.c: 293:     update_lcd(0);
  5517  0103F2  0E00               	movlw	0
  5518  0103F4  6EE6               	movwf	postinc1,c
  5519  0103F6  EC6B  F0F4         	call	_update_lcd	;wreg free
  5520                           
  5521                           ;main.c: 294:     clear_adc_scan();
  5522  0103FA  EC91  F013         	call	_clear_adc_scan	;wreg free
  5523                           
  5524                           ; BSR set to: 1
  5525                           ;main.c: 295:     start_adc_scan();
  5526  0103FE  EC39  F00A         	call	_start_adc_scan	;wreg free
  5527                           
  5528                           ;main.c: 296:     WaitMs(2000);
  5529  010402  0ED0               	movlw	208
  5530  010404  6EE6               	movwf	postinc1,c
  5531  010406  0E07               	movlw	7
  5532  010408  6EE6               	movwf	postinc1,c
  5533  01040A  EC07  F00F         	call	_WaitMs	;wreg free
  5534                           
  5535                           ;main.c: 299:    } while ((i_ror++ < 30) && (C.bv_ror > 0.0140));
  5536                           ;stkvar	_i_ror @ sp[(-17)+16]
  5537  01040E  0EFF               	movlw	-1
  5538  010410  006F FF8C  F035    	movff	plusw1,btemp+11
  5539  010416  2A35               	incf	(btemp+11)^0,f,c
  5540  010418  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  5541  01041E  0635               	decf	(btemp+11)^0,f,c
  5542  010420  0E1E               	movlw	30
  5543  010422  6035               	cpfslt	(btemp+11)^0,c
  5544  010424  D01A               	goto	u17000
  5545  010426  EE22  F16B         	lfsr	2,_C+108	;volatile
  5546  01042A  006F FF7B FFE6     	movff	postinc2,postinc1
  5547  010430  006F FF7B FFE6     	movff	postinc2,postinc1
  5548  010436  006F FF7B FFE6     	movff	postinc2,postinc1
  5549  01043C  006F FF7B FFE6     	movff	postinc2,postinc1
  5550  010442  0E42               	movlw	66
  5551  010444  6EE6               	movwf	postinc1,c
  5552  010446  0E60               	movlw	96
  5553  010448  6EE6               	movwf	postinc1,c
  5554  01044A  0E65               	movlw	101
  5555  01044C  6EE6               	movwf	postinc1,c
  5556  01044E  0E3C               	movlw	60
  5557  010450  6EE6               	movwf	postinc1,c
  5558  010452  EC09  F0F3         	call	___flge	;wreg free
  5559  010456  A02A               	btfss	btemp& (0+255),0,c
  5560  010458  D773               	goto	l17444
  5561  01045A                     u17000:
  5562                           
  5563                           ;main.c: 301:    static_soc();
  5564  01045A  EC2C  F00B         	call	_static_soc	;wreg free
  5565                           
  5566                           ;main.c: 302:    init_bsoc();
  5567  01045E  ECCB  F0E1         	call	_init_bsoc	;wreg free
  5568                           
  5569                           ;main.c: 303:    set_load_relay_one(0);
  5570  010462  0E00               	movlw	0
  5571  010464  6EE6               	movwf	postinc1,c
  5572  010466  EC17  F013         	call	_set_load_relay_one	;wreg free
  5573                           
  5574                           ;main.c: 304:    set_load_relay_two(0);
  5575  01046A  0E00               	movlw	0
  5576  01046C  6EE6               	movwf	postinc1,c
  5577  01046E  EC0F  F013         	call	_set_load_relay_two	;wreg free
  5578                           
  5579                           ;main.c: 305:    sprintf(get_vterm_ptr(0, 0), "Static SOC %d         ", C.soc);
  5580  010472  EE22  F1B5         	lfsr	2,_C+182	;volatile
  5581  010476  006F FF78  F034    	movff	postinc2,btemp+10
  5582  01047C  006F FF74  F035    	movff	postdec2,btemp+11
  5583  010482  0060  F0D3  FFE6   	movff	btemp+10,postinc1
  5584  010488  0060  F0D7  FFE6   	movff	btemp+11,postinc1
  5585  01048E  0EE5               	movlw	low STR_14
  5586  010490  6EE6               	movwf	postinc1,c
  5587  010492  0EFB               	movlw	high STR_14
  5588  010494  6EE6               	movwf	postinc1,c
  5589  010496  0E00               	movlw	0
  5590  010498  6EE6               	movwf	postinc1,c
  5591  01049A  0E00               	movlw	0
  5592  01049C  6EE6               	movwf	postinc1,c
  5593  01049E  ECE9  F0FF         	call	_get_vterm_ptr	;wreg free
  5594  0104A2  0060  F0AB  FFE6   	movff	btemp,postinc1
  5595  0104A8  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5596  0104AE  0E06               	movlw	6
  5597  0104B0  6EE6               	movwf	postinc1,c
  5598  0104B2  ECB9  F0FB         	call	_sprintf	;wreg free
  5599                           
  5600                           ; BSR set to: 0
  5601                           ;main.c: 306:    sprintf(get_vterm_ptr(1, 0), "Battery Ah %3.2f      ", C.dynamic_ah);
  5602  0104B6  EE22  F18F         	lfsr	2,_C+144	;volatile
  5603  0104BA  006F FF7B FFE6     	movff	postinc2,postinc1
  5604  0104C0  006F FF7B FFE6     	movff	postinc2,postinc1
  5605  0104C6  006F FF7B FFE6     	movff	postinc2,postinc1
  5606  0104CC  006F FF7B FFE6     	movff	postinc2,postinc1
  5607  0104D2  0ECB               	movlw	low STR_15
  5608  0104D4  6EE6               	movwf	postinc1,c
  5609  0104D6  0EFC               	movlw	high STR_15
  5610  0104D8  6EE6               	movwf	postinc1,c
  5611  0104DA  0E00               	movlw	0
  5612  0104DC  6EE6               	movwf	postinc1,c
  5613  0104DE  0E01               	movlw	1
  5614  0104E0  6EE6               	movwf	postinc1,c
  5615  0104E2  ECE9  F0FF         	call	_get_vterm_ptr	;wreg free
  5616  0104E6  0060  F0AB  FFE6   	movff	btemp,postinc1
  5617  0104EC  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5618  0104F2  0E08               	movlw	8
  5619  0104F4  6EE6               	movwf	postinc1,c
  5620  0104F6  ECB9  F0FB         	call	_sprintf	;wreg free
  5621                           
  5622                           ; BSR set to: 0
  5623                           ;main.c: 307:    sprintf(get_vterm_ptr(2, 0), "                      ");
  5624  0104FA  0EB7               	movlw	low STR_16
  5625  0104FC  6EE6               	movwf	postinc1,c
  5626  0104FE  0EFB               	movlw	high STR_16
  5627  010500  6EE6               	movwf	postinc1,c
  5628  010502  0E00               	movlw	0
  5629  010504  6EE6               	movwf	postinc1,c
  5630  010506  0E02               	movlw	2
  5631  010508  6EE6               	movwf	postinc1,c
  5632  01050A  ECE9  F0FF         	call	_get_vterm_ptr	;wreg free
  5633  01050E  0060  F0AB  FFE6   	movff	btemp,postinc1
  5634  010514  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5635  01051A  0E04               	movlw	4
  5636  01051C  6EE6               	movwf	postinc1,c
  5637  01051E  ECB9  F0FB         	call	_sprintf	;wreg free
  5638                           
  5639                           ; BSR set to: 0
  5640                           ;main.c: 308:    update_lcd(0);
  5641  010522  0E00               	movlw	0
  5642  010524  6EE6               	movwf	postinc1,c
  5643  010526  EC6B  F0F4         	call	_update_lcd	;wreg free
  5644                           
  5645                           ;main.c: 309:    WaitMs(2000);
  5646  01052A  0ED0               	movlw	208
  5647  01052C  6EE6               	movwf	postinc1,c
  5648  01052E  0E07               	movlw	7
  5649  010530  6EE6               	movwf	postinc1,c
  5650  010532  EC07  F00F         	call	_WaitMs	;wreg free
  5651                           
  5652                           ;main.c: 310:    sprintf(get_vterm_ptr(0, 0), "Battery ESR          ");
  5653  010536  0E95               	movlw	low STR_17
  5654  010538  6EE6               	movwf	postinc1,c
  5655  01053A  0EFD               	movlw	high STR_17
  5656  01053C  6EE6               	movwf	postinc1,c
  5657  01053E  0E00               	movlw	0
  5658  010540  6EE6               	movwf	postinc1,c
  5659  010542  0E00               	movlw	0
  5660  010544  6EE6               	movwf	postinc1,c
  5661  010546  ECE9  F0FF         	call	_get_vterm_ptr	;wreg free
  5662  01054A  0060  F0AB  FFE6   	movff	btemp,postinc1
  5663  010550  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5664  010556  0E04               	movlw	4
  5665  010558  6EE6               	movwf	postinc1,c
  5666  01055A  ECB9  F0FB         	call	_sprintf	;wreg free
  5667                           
  5668                           ; BSR set to: 0
  5669                           ;main.c: 311:    sprintf(get_vterm_ptr(1, 0), "Calculation          ");
  5670  01055E  0EAB               	movlw	low STR_18
  5671  010560  6EE6               	movwf	postinc1,c
  5672  010562  0EFD               	movlw	high STR_18
  5673  010564  6EE6               	movwf	postinc1,c
  5674  010566  0E00               	movlw	0
  5675  010568  6EE6               	movwf	postinc1,c
  5676  01056A  0E01               	movlw	1
  5677  01056C  6EE6               	movwf	postinc1,c
  5678  01056E  ECE9  F0FF         	call	_get_vterm_ptr	;wreg free
  5679  010572  0060  F0AB  FFE6   	movff	btemp,postinc1
  5680  010578  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5681  01057E  0E04               	movlw	4
  5682  010580  6EE6               	movwf	postinc1,c
  5683  010582  ECB9  F0FB         	call	_sprintf	;wreg free
  5684                           
  5685                           ; BSR set to: 0
  5686                           ;main.c: 312:    sprintf(get_vterm_ptr(2, 0), "Check 30 seconds     ");
  5687  010586  0E5B               	movlw	low STR_19
  5688  010588  6EE6               	movwf	postinc1,c
  5689  01058A  0EFE               	movlw	high STR_19
  5690  01058C  6EE6               	movwf	postinc1,c
  5691  01058E  0E00               	movlw	0
  5692  010590  6EE6               	movwf	postinc1,c
  5693  010592  0E02               	movlw	2
  5694  010594  6EE6               	movwf	postinc1,c
  5695  010596  ECE9  F0FF         	call	_get_vterm_ptr	;wreg free
  5696  01059A  0060  F0AB  FFE6   	movff	btemp,postinc1
  5697  0105A0  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5698  0105A6  0E04               	movlw	4
  5699  0105A8  6EE6               	movwf	postinc1,c
  5700  0105AA  ECB9  F0FB         	call	_sprintf	;wreg free
  5701                           
  5702                           ; BSR set to: 0
  5703                           ;main.c: 313:    update_lcd(0);
  5704  0105AE  0E00               	movlw	0
  5705  0105B0  6EE6               	movwf	postinc1,c
  5706  0105B2  EC6B  F0F4         	call	_update_lcd	;wreg free
  5707                           
  5708                           ;main.c: 314:    uint16_t i_esr = 1;
  5709  0105B6  0E01               	movlw	1
  5710  0105B8  6E34               	movwf	(btemp+10)^0,c
  5711  0105BA  0E00               	movlw	0
  5712  0105BC  6E35               	movwf	(btemp+11)^0,c
  5713                           
  5714                           ;stkvar	_i_esr @ sp[(-17)+8]
  5715  0105BE  0EF7               	movlw	-9
  5716  0105C0  0060  F0D3  FFE3   	movff	btemp+10,plusw1
  5717  0105C6  0EF8               	movlw	-8
  5718  0105C8  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  5719                           
  5720                           ;main.c: 316:    float esr_temp;;main.c: 317:    while ((esr_temp = esr_check(0)) < 0.0)
      +                           {
  5721  0105CE  D06D               	goto	l17504
  5722  0105D0                     l17492:
  5723                           
  5724                           ;main.c: 318:     WaitMs(110);
  5725  0105D0  0E6E               	movlw	110
  5726  0105D2  6EE6               	movwf	postinc1,c
  5727  0105D4  0E00               	movlw	0
  5728  0105D6  6EE6               	movwf	postinc1,c
  5729  0105D8  EC07  F00F         	call	_WaitMs	;wreg free
  5730                           
  5731                           ;main.c: 319:     shape = (uint8_t) fabsf(esr_temp);
  5732                           ;stkvar	_esr_temp @ sp[(-17)+4]
  5733  0105DC  0EF3               	movlw	-13
  5734  0105DE  006F FF8F FFE6     	movff	plusw1,postinc1
  5735  0105E4  006F FF8F FFE6     	movff	plusw1,postinc1
  5736  0105EA  006F FF8F FFE6     	movff	plusw1,postinc1
  5737  0105F0  006F FF8F FFE6     	movff	plusw1,postinc1
  5738  0105F6  EC96  F002         	call	_fabsf	;wreg free
  5739  0105FA  0060  F0AB  FFE6   	movff	btemp,postinc1
  5740  010600  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5741  010606  0060  F0B3  FFE6   	movff	btemp+2,postinc1
  5742  01060C  0060  F0B7  FFE6   	movff	btemp+3,postinc1
  5743  010612  EC9D  F0F1         	call	___fltol	;wreg free
  5744  010616  0060  F0A8  F035   	movff	btemp,btemp+11
  5745                           
  5746                           ;stkvar	_shape @ sp[(-17)+10]
  5747  01061C  0EF9               	movlw	-7
  5748  01061E  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  5749                           
  5750                           ;main.c: 320:     sprintf(get_vterm_ptr(2, 0), "Checking %c %c       ", spinners(0, 0), 
      +                          spinners(shape, 0));
  5751  010624  0E00               	movlw	0
  5752  010626  6EE6               	movwf	postinc1,c
  5753                           
  5754                           ;stkvar	_shape @ sp[(-18)+10]
  5755  010628  0EF8               	movlw	-8
  5756  01062A  50E3               	movf	plusw1,w,c
  5757  01062C  6EE6               	movwf	postinc1,c
  5758  01062E  EC35  F0FD         	call	_spinners	;wreg free
  5759  010632  502A               	movf	btemp^0,w,c
  5760  010634  6EE6               	movwf	postinc1,c
  5761  010636  0E00               	movlw	0
  5762  010638  6EE6               	movwf	postinc1,c
  5763  01063A  0E00               	movlw	0
  5764  01063C  6EE6               	movwf	postinc1,c
  5765  01063E  0E00               	movlw	0
  5766  010640  6EE6               	movwf	postinc1,c
  5767  010642  EC35  F0FD         	call	_spinners	;wreg free
  5768  010646  502A               	movf	btemp^0,w,c
  5769  010648  6EE6               	movwf	postinc1,c
  5770  01064A  0E00               	movlw	0
  5771  01064C  6EE6               	movwf	postinc1,c
  5772  01064E  0E19               	movlw	low STR_20
  5773  010650  6EE6               	movwf	postinc1,c
  5774  010652  0EFE               	movlw	high STR_20
  5775  010654  6EE6               	movwf	postinc1,c
  5776  010656  0E00               	movlw	0
  5777  010658  6EE6               	movwf	postinc1,c
  5778  01065A  0E02               	movlw	2
  5779  01065C  6EE6               	movwf	postinc1,c
  5780  01065E  ECE9  F0FF         	call	_get_vterm_ptr	;wreg free
  5781  010662  0060  F0AB  FFE6   	movff	btemp,postinc1
  5782  010668  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5783  01066E  0E08               	movlw	8
  5784  010670  6EE6               	movwf	postinc1,c
  5785  010672  ECB9  F0FB         	call	_sprintf	;wreg free
  5786                           
  5787                           ; BSR set to: 0
  5788                           ;main.c: 321:     update_lcd(0);
  5789  010676  0E00               	movlw	0
  5790  010678  6EE6               	movwf	postinc1,c
  5791  01067A  EC6B  F0F4         	call	_update_lcd	;wreg free
  5792                           
  5793                           ;main.c: 323:     if (i_esr++ > 512)
  5794                           ;stkvar	_i_esr @ sp[(-17)+8]
  5795  01067E  50E1               	movf	fsr1l,w,c
  5796  010680  0FF7               	addlw	-9
  5797  010682  6ED9               	movwf	fsr2l,c
  5798  010684  50E2               	movf	fsr1h,w,c
  5799  010686  6EDA               	movwf	fsr2h,c
  5800  010688  0EFF               	movlw	255
  5801  01068A  22DA               	addwfc	fsr2h,f,c
  5802  01068C  006F FF7C  F034    	movff	indf2,btemp+10
  5803  010692  0E01               	movlw	1
  5804  010694  26DE               	addwf	postinc2,f,c
  5805  010696  006F FF7C  F035    	movff	indf2,btemp+11
  5806  01069C  0E00               	movlw	0
  5807  01069E  22DD               	addwfc	postdec2,f,c
  5808  0106A0  0434               	decf	(btemp+10)^0,w,c
  5809  0106A2  0E02               	movlw	2
  5810  0106A4  5835               	subwfb	(btemp+11)^0,w,c
  5811  0106A6  B0D8               	btfsc	status,0,c
  5812  0106A8  D017               	goto	u17020
  5813  0106AA                     l17504:
  5814                           
  5815                           ;main.c: 317:    while ((esr_temp = esr_check(0)) < 0.0) {
  5816  0106AA  0E00               	movlw	0
  5817  0106AC  6EE6               	movwf	postinc1,c
  5818  0106AE  ECD9  F0D8         	call	_esr_check	;wreg free
  5819                           
  5820                           ;stkvar	_esr_temp @ sp[(-17)+4]
  5821  0106B2  0EF3               	movlw	-13
  5822  0106B4  0060  F0AB  FFE3   	movff	btemp,plusw1
  5823  0106BA  0EF4               	movlw	-12
  5824  0106BC  0060  F0AF  FFE3   	movff	btemp+1,plusw1
  5825  0106C2  0EF5               	movlw	-11
  5826  0106C4  0060  F0B3  FFE3   	movff	btemp+2,plusw1
  5827  0106CA  0EF6               	movlw	-10
  5828  0106CC  0060  F0B7  FFE3   	movff	btemp+3,plusw1
  5829  0106D2  0EF6               	movlw	-10
  5830  0106D4  BEE3               	btfsc	plusw1,7,c
  5831  0106D6  D77C               	goto	l17492
  5832  0106D8                     u17020:
  5833                           
  5834                           ;main.c: 326:    sprintf(get_vterm_ptr(0, 0), "ESR  %2.6f            ", C.esr);
  5835  0106D8  EE22  F187         	lfsr	2,_C+136	;volatile
  5836  0106DC  006F FF7B FFE6     	movff	postinc2,postinc1
  5837  0106E2  006F FF7B FFE6     	movff	postinc2,postinc1
  5838  0106E8  006F FF7B FFE6     	movff	postinc2,postinc1
  5839  0106EE  006F FF7B FFE6     	movff	postinc2,postinc1
  5840  0106F4  0ECE               	movlw	low STR_21
  5841  0106F6  6EE6               	movwf	postinc1,c
  5842  0106F8  0EFB               	movlw	high STR_21
  5843  0106FA  6EE6               	movwf	postinc1,c
  5844  0106FC  0E00               	movlw	0
  5845  0106FE  6EE6               	movwf	postinc1,c
  5846  010700  0E00               	movlw	0
  5847  010702  6EE6               	movwf	postinc1,c
  5848  010704  ECE9  F0FF         	call	_get_vterm_ptr	;wreg free
  5849  010708  0060  F0AB  FFE6   	movff	btemp,postinc1
  5850  01070E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5851  010714  0E08               	movlw	8
  5852  010716  6EE6               	movwf	postinc1,c
  5853  010718  ECB9  F0FB         	call	_sprintf	;wreg free
  5854                           
  5855                           ;main.c: 327:    sprintf(get_vterm_ptr(1, 0), "R1 %2.3f %3.4f            ", C.bv_one_loa
      +                          d, C.load_i1);
  5856  01071C  EE22  F219         	lfsr	2,_C+282	;volatile
  5857  010720  006F FF7B FFE6     	movff	postinc2,postinc1
  5858  010726  006F FF7B FFE6     	movff	postinc2,postinc1
  5859  01072C  006F FF7B FFE6     	movff	postinc2,postinc1
  5860  010732  006F FF7B FFE6     	movff	postinc2,postinc1
  5861  010738  EE22  F225         	lfsr	2,_C+294	;volatile
  5862  01073C  006F FF7B FFE6     	movff	postinc2,postinc1
  5863  010742  006F FF7B FFE6     	movff	postinc2,postinc1
  5864  010748  006F FF7B FFE6     	movff	postinc2,postinc1
  5865  01074E  006F FF7B FFE6     	movff	postinc2,postinc1
  5866  010754  0ED5               	movlw	low STR_22
  5867  010756  6EE6               	movwf	postinc1,c
  5868  010758  0EFA               	movlw	high STR_22
  5869  01075A  6EE6               	movwf	postinc1,c
  5870  01075C  0E00               	movlw	0
  5871  01075E  6EE6               	movwf	postinc1,c
  5872  010760  0E01               	movlw	1
  5873  010762  6EE6               	movwf	postinc1,c
  5874  010764  ECE9  F0FF         	call	_get_vterm_ptr	;wreg free
  5875  010768  0060  F0AB  FFE6   	movff	btemp,postinc1
  5876  01076E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5877  010774  0E0C               	movlw	12
  5878  010776  6EE6               	movwf	postinc1,c
  5879  010778  ECB9  F0FB         	call	_sprintf	;wreg free
  5880                           
  5881                           ;main.c: 328:    sprintf(get_vterm_ptr(2, 0), "R2 %2.3f %3.4f            ", C.bv_full_lo
      +                          ad, C.load_i2);
  5882  01077C  EE22  F21D         	lfsr	2,_C+286	;volatile
  5883  010780  006F FF7B FFE6     	movff	postinc2,postinc1
  5884  010786  006F FF7B FFE6     	movff	postinc2,postinc1
  5885  01078C  006F FF7B FFE6     	movff	postinc2,postinc1
  5886  010792  006F FF7B FFE6     	movff	postinc2,postinc1
  5887  010798  EE22  F229         	lfsr	2,_C+298	;volatile
  5888  01079C  006F FF7B FFE6     	movff	postinc2,postinc1
  5889  0107A2  006F FF7B FFE6     	movff	postinc2,postinc1
  5890  0107A8  006F FF7B FFE6     	movff	postinc2,postinc1
  5891  0107AE  006F FF7B FFE6     	movff	postinc2,postinc1
  5892  0107B4  0EF0               	movlw	low STR_23
  5893  0107B6  6EE6               	movwf	postinc1,c
  5894  0107B8  0EFA               	movlw	high STR_23
  5895  0107BA  6EE6               	movwf	postinc1,c
  5896  0107BC  0E00               	movlw	0
  5897  0107BE  6EE6               	movwf	postinc1,c
  5898  0107C0  0E02               	movlw	2
  5899  0107C2  6EE6               	movwf	postinc1,c
  5900  0107C4  ECE9  F0FF         	call	_get_vterm_ptr	;wreg free
  5901  0107C8  0060  F0AB  FFE6   	movff	btemp,postinc1
  5902  0107CE  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5903  0107D4  0E0C               	movlw	12
  5904  0107D6  6EE6               	movwf	postinc1,c
  5905  0107D8  ECB9  F0FB         	call	_sprintf	;wreg free
  5906                           
  5907                           ;main.c: 329:    update_lcd(0);
  5908  0107DC  0E00               	movlw	0
  5909  0107DE  6EE6               	movwf	postinc1,c
  5910  0107E0  EC6B  F0F4         	call	_update_lcd	;wreg free
  5911                           
  5912                           ;main.c: 330:    WaitMs(4000);
  5913  0107E4  0EA0               	movlw	160
  5914  0107E6  6EE6               	movwf	postinc1,c
  5915  0107E8  0E0F               	movlw	15
  5916  0107EA  6EE6               	movwf	postinc1,c
  5917  0107EC  EC07  F00F         	call	_WaitMs	;wreg free
  5918                           
  5919                           ;main.c: 331:    V.sensor_set = get_switch(SCALIB);
  5920  0107F0  0E04               	movlw	4
  5921  0107F2  6EE6               	movwf	postinc1,c
  5922  0107F4  EC03  F010         	call	_get_switch	;wreg free
  5923  0107F8  502A               	movf	btemp^0,w,c
  5924  0107FA  B4D8               	btfsc	status,2,c
  5925  0107FC  D002               	goto	u17030
  5926  0107FE  0E01               	movlw	1
  5927  010800  D001               	goto	u17040
  5928  010802                     u17030:
  5929  010802  0E00               	movlw	0
  5930  010804                     u17040:
  5931  010804  0102               	movlb	2	; () banked
  5932  010806  6FB2               	movwf	(_V+171)& (0+255),b	;volatile
  5933                           
  5934                           ; BSR set to: 2
  5935                           ;main.c: 332:    WaitMs(1000);
  5936  010808  0EE8               	movlw	232
  5937  01080A  6EE6               	movwf	postinc1,c
  5938  01080C  0E03               	movlw	3
  5939  01080E  6EE6               	movwf	postinc1,c
  5940  010810  EC07  F00F         	call	_WaitMs	;wreg free
  5941                           
  5942                           ;main.c: 333:    if (V.sensor_set && get_switch(SCALIB)) {
  5943  010814  0102               	movlb	2	; () banked
  5944  010816  51B2               	movf	(_V+171)& (0+255),w,b	;volatile
  5945  010818  B4D8               	btfsc	status,2,c
  5946  01081A  D00F               	goto	l17522
  5947                           
  5948                           ; BSR set to: 2
  5949  01081C  0E04               	movlw	4
  5950  01081E  6EE6               	movwf	postinc1,c
  5951  010820  EC03  F010         	call	_get_switch	;wreg free
  5952  010824  502A               	movf	btemp^0,w,c
  5953  010826  B4D8               	btfsc	status,2,c
  5954  010828  D008               	goto	l17522
  5955                           
  5956                           ;main.c: 334:     current_sensor_cal();
  5957  01082A  EC84  F0C7         	call	_current_sensor_cal	;wreg free
  5958                           
  5959                           ;main.c: 335:     WaitMs(4000);
  5960  01082E  0EA0               	movlw	160
  5961  010830  6EE6               	movwf	postinc1,c
  5962  010832  0E0F               	movlw	15
  5963  010834  6EE6               	movwf	postinc1,c
  5964  010836  EC07  F00F         	call	_WaitMs	;wreg free
  5965  01083A                     l17522:
  5966                           
  5967                           ;main.c: 337:    V.sensor_set = 0;
  5968  01083A  0102               	movlb	2	; () banked
  5969  01083C  6BB2               	clrf	(_V+171)& (0+255),b	;volatile
  5970                           
  5971                           ; BSR set to: 2
  5972                           ;main.c: 338:    V.system_stable = 1;
  5973  01083E  0E01               	movlw	1
  5974  010840  6FB3               	movwf	(_V+172)& (0+255),b	;volatile
  5975                           
  5976                           ;main.c: 339:    break;
  5977  010842  D01C               	goto	l17530
  5978  010844                     l1475:
  5979                           
  5980                           ; BSR set to: 2
  5981                           ;main.c: 345:    P.SYSTEM_STABLE = 1;
  5982  010844  0100               	movlb	0	; () banked
  5983  010846  8195               	bsf	(_P+1)& (0+255),0,b	;volatile
  5984                           
  5985                           ;main.c: 346:    break;
  5986  010848  D019               	goto	l17530
  5987  01084A                     l1477:
  5988                           
  5989                           ; BSR set to: 2
  5990                           ;main.c: 349:    V.ui_state = UI_STATE_INIT;
  5991  01084A  6B07               	clrf	_V& (0+255),b	;volatile
  5992                           
  5993                           ;main.c: 350:    break;
  5994  01084C  D017               	goto	l17530
  5995  01084E                     l17528:
  5996  01084E  0102               	movlb	2	; () banked
  5997  010850  5107               	movf	_V& (0+255),w,b	;volatile
  5998  010852  6E34               	movwf	(btemp+10)^0,c
  5999  010854  6A35               	clrf	(btemp+11)^0,c
  6000                           
  6001                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6002                           ; Switch size 1, requested type "simple"
  6003                           ; Number of cases is 1, Range of values is 0 to 0
  6004                           ; switch strategies available:
  6005                           ; Name         Instructions Cycles
  6006                           ; simple_byte            4     3 (average)
  6007                           ;	Chosen strategy is simple_byte
  6008  010856  5035               	movf	(btemp+11)^0,w,c
  6009  010858  0A00               	xorlw	0	; case 0
  6010  01085A  A4D8               	btfss	status,2,c
  6011  01085C  D7F6               	goto	l1477
  6012                           
  6013                           ; BSR set to: 2
  6014                           ; Switch size 1, requested type "simple"
  6015                           ; Number of cases is 5, Range of values is 0 to 5
  6016                           ; switch strategies available:
  6017                           ; Name         Instructions Cycles
  6018                           ; simple_byte           16     9 (average)
  6019                           ;	Chosen strategy is simple_byte
  6020  01085E  5034               	movf	(btemp+10)^0,w,c
  6021  010860  0A00               	xorlw	0	; case 0
  6022  010862  B4D8               	btfsc	status,2,c
  6023  010864  D409               	goto	l17374
  6024  010866  0A01               	xorlw	1	; case 1
  6025  010868  B4D8               	btfsc	status,2,c
  6026  01086A  D008               	goto	l17530
  6027  01086C  0A02               	xorlw	2	; case 3
  6028  01086E  B4D8               	btfsc	status,2,c
  6029  010870  D005               	goto	l17530
  6030  010872  0A07               	xorlw	7	; case 4
  6031  010874  B4D8               	btfsc	status,2,c
  6032  010876  D7E6               	goto	l1475
  6033  010878  0A01               	xorlw	1	; case 5
  6034  01087A  D7E7               	goto	l1477
  6035  01087C                     l17530:
  6036                           
  6037                           ;main.c: 353:   if (TimerDone(TMR_ADC) && check_adc_scan()) {
  6038  01087C  0E01               	movlw	1
  6039  01087E  6EE6               	movwf	postinc1,c
  6040  010880  EC6F  F010         	call	_TimerDone	;wreg free
  6041  010884  502A               	movf	btemp^0,w,c
  6042  010886  B4D8               	btfsc	status,2,c
  6043  010888  D013               	goto	l17542
  6044  01088A  EC77  F013         	call	_check_adc_scan	;wreg free
  6045  01088E  502A               	movf	btemp^0,w,c
  6046  010890  B4D8               	btfsc	status,2,c
  6047  010892  D00E               	goto	l17542
  6048                           
  6049                           ;main.c: 357:    convert_adc_data();
  6050  010894  ECDF  F001         	call	_convert_adc_data	;wreg free
  6051                           
  6052                           ;main.c: 361:    clear_adc_scan();
  6053  010898  EC91  F013         	call	_clear_adc_scan	;wreg free
  6054                           
  6055                           ; BSR set to: 1
  6056                           ;main.c: 362:    start_adc_scan();
  6057  01089C  EC39  F00A         	call	_start_adc_scan	;wreg free
  6058                           
  6059                           ;main.c: 363:    StartTimer(TMR_ADC, 200);
  6060  0108A0  0EC8               	movlw	200
  6061  0108A2  6EE6               	movwf	postinc1,c
  6062  0108A4  0E00               	movlw	0
  6063  0108A6  6EE6               	movwf	postinc1,c
  6064  0108A8  0E01               	movlw	1
  6065  0108AA  6EE6               	movwf	postinc1,c
  6066  0108AC  ECFA  F00D         	call	_StartTimer	;wreg free
  6067  0108B0                     l17542:
  6068                           
  6069                           ;main.c: 366:   if (TimerDone(TMR_DISPLAY)) {
  6070  0108B0  0E0A               	movlw	10
  6071  0108B2  6EE6               	movwf	postinc1,c
  6072  0108B4  EC6F  F010         	call	_TimerDone	;wreg free
  6073  0108B8  502A               	movf	btemp^0,w,c
  6074  0108BA  B4D8               	btfsc	status,2,c
  6075  0108BC  EF20  F08A         	goto	l17652
  6076                           
  6077                           ;main.c: 367:    if (TimerDone(TMR_HELPDIS)) {
  6078  0108C0  0E09               	movlw	9
  6079  0108C2  6EE6               	movwf	postinc1,c
  6080  0108C4  EC6F  F010         	call	_TimerDone	;wreg free
  6081  0108C8  502A               	movf	btemp^0,w,c
  6082  0108CA  B4D8               	btfsc	status,2,c
  6083  0108CC  D004               	goto	l17548
  6084                           
  6085                           ;main.c: 368:     set_display_info(DIS_STR);
  6086  0108CE  0E00               	movlw	0
  6087  0108D0  6EE6               	movwf	postinc1,c
  6088  0108D2  EC85  F012         	call	_set_display_info	;wreg free
  6089  0108D6                     l17548:
  6090                           
  6091                           ;main.c: 370:    pclock = time(((void*)0));
  6092  0108D6  0E00               	movlw	0
  6093  0108D8  6EE6               	movwf	postinc1,c
  6094  0108DA  0E00               	movlw	0
  6095  0108DC  6EE6               	movwf	postinc1,c
  6096  0108DE  ECFD  F00A         	call	_time	;wreg free
  6097  0108E2  52E5               	movf	postdec1,f,c
  6098  0108E4  006F FF9C  F041    	movff	indf1,btemp+23
  6099  0108EA  52E5               	movf	postdec1,f,c
  6100  0108EC  006F FF9C  F040    	movff	indf1,btemp+22
  6101  0108F2  52E5               	movf	postdec1,f,c
  6102  0108F4  006F FF9C  F03F    	movff	indf1,btemp+21
  6103  0108FA  52E5               	movf	postdec1,f,c
  6104  0108FC  006F FF9C  F03E    	movff	indf1,btemp+20
  6105  010902  52E5               	movf	postdec1,f,c
  6106  010904  006F FF9C  F03D    	movff	indf1,btemp+19
  6107  01090A  52E5               	movf	postdec1,f,c
  6108  01090C  006F FF9C  F03C    	movff	indf1,btemp+18
  6109  010912  52E5               	movf	postdec1,f,c
  6110  010914  006F FF9C  F03B    	movff	indf1,btemp+17
  6111  01091A  52E5               	movf	postdec1,f,c
  6112  01091C  006F FF9C  F03A    	movff	indf1,btemp+16
  6113  010922  0060  F0E8  F0DA   	movff	btemp+16,_pclock
  6114  010928  0060  F0EC  F0DB   	movff	btemp+17,_pclock+1
  6115  01092E  0060  F0F0  F0DC   	movff	btemp+18,_pclock+2
  6116  010934  0060  F0F4  F0DD   	movff	btemp+19,_pclock+3
  6117  01093A  0060  F0F8  F0DE   	movff	btemp+20,_pclock+4
  6118  010940  0060  F0FC  F0DF   	movff	btemp+21,_pclock+5
  6119  010946  0060  F100  F0E0   	movff	btemp+22,_pclock+6
  6120  01094C  0060  F104  F0E1   	movff	btemp+23,_pclock+7
  6121                           
  6122                           ; BSR set to: 57
  6123                           ;main.c: 371:    t_mbmc = localtime(&pclock);
  6124  010952  0EDA               	movlw	_pclock& (0+255)
  6125  010954  6EE6               	movwf	postinc1,c
  6126  010956  ECC7  F012         	call	_localtime	;wreg free
  6127  01095A  0060  F0A8  F0BC   	movff	btemp,_t_mbmc
  6128  010960  0060  F0AC  F0BD   	movff	btemp+1,_t_mbmc+1
  6129                           
  6130                           ;main.c: 372:    sprintf(get_vterm_ptr(3, 0), "%s           ", asctime(t_mbmc));
  6131  010966  0060  F2F3  FFE6   	movff	_t_mbmc,postinc1
  6132  01096C  0060  F2F7  FFE6   	movff	_t_mbmc+1,postinc1
  6133  010972  EC5B  F0C0         	call	_asctime	;wreg free
  6134  010976  0060  F0AB  FFE6   	movff	btemp,postinc1
  6135  01097C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6136  010982  0E76               	movlw	low (STR_72+5)
  6137  010984  6EE6               	movwf	postinc1,c
  6138  010986  0EFF               	movlw	high (STR_72+5)
  6139  010988  6EE6               	movwf	postinc1,c
  6140  01098A  0E00               	movlw	0
  6141  01098C  6EE6               	movwf	postinc1,c
  6142  01098E  0E03               	movlw	3
  6143  010990  6EE6               	movwf	postinc1,c
  6144  010992  ECE9  F0FF         	call	_get_vterm_ptr	;wreg free
  6145  010996  0060  F0AB  FFE6   	movff	btemp,postinc1
  6146  01099C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6147  0109A2  0E06               	movlw	6
  6148  0109A4  6EE6               	movwf	postinc1,c
  6149  0109A6  ECB9  F0FB         	call	_sprintf	;wreg free
  6150                           
  6151                           ; BSR set to: 0
  6152                           ;main.c: 373:    calc_model_data();
  6153  0109AA  ECBE  F0C9         	call	_calc_model_data	;wreg free
  6154                           
  6155                           ; BSR set to: 57
  6156                           ;main.c: 374:    if (C.dupdate) {
  6157  0109AE  EE22  F22E         	lfsr	2,_C+303	;volatile
  6158  0109B2  50DF               	movf	indf2,w,c
  6159  0109B4  B4D8               	btfsc	status,2,c
  6160  0109B6  D0A4               	goto	l17578
  6161                           
  6162                           ; BSR set to: 57
  6163                           ;main.c: 375:     C.dupdate = 0;
  6164  0109B8  0E00               	movlw	0
  6165  0109BA  006F FFA0  FA2E    	movff	wreg,_C+303	;volatile
  6166                           
  6167                           ;main.c: 376:     set_hist_flag();
  6168  0109C0  EC8B  F013         	call	_set_hist_flag	;wreg free
  6169                           
  6170                           ; BSR set to: 1
  6171                           ;main.c: 377:     load_hist_data();
  6172  0109C4  EC9E  F0E0         	call	_load_hist_data	;wreg free
  6173                           
  6174                           ; BSR set to: 57
  6175                           ;main.c: 378:     update_hist_data(0, &C.hist[0]);
  6176  0109C8  0EB8               	movlw	low (_C+185)
  6177  0109CA  6EE6               	movwf	postinc1,c
  6178  0109CC  0E09               	movlw	high (_C+185)
  6179  0109CE  6EE6               	movwf	postinc1,c
  6180  0109D0  0E00               	movlw	0
  6181  0109D2  6EE6               	movwf	postinc1,c
  6182  0109D4  ECDD  F007         	call	_update_hist_data	;wreg free
  6183                           
  6184                           ;main.c: 379:     write_cal_data();
  6185  0109D8  ECC8  F0F5         	call	_write_cal_data	;wreg free
  6186                           
  6187                           ;main.c: 380:     sprintf(get_vterm_ptr(0, 0), "History Data  Saved  ");
  6188  0109DC  0EB3               	movlw	low STR_25
  6189  0109DE  6EE6               	movwf	postinc1,c
  6190  0109E0  0EFE               	movlw	high STR_25
  6191  0109E2  6EE6               	movwf	postinc1,c
  6192  0109E4  0E00               	movlw	0
  6193  0109E6  6EE6               	movwf	postinc1,c
  6194  0109E8  0E00               	movlw	0
  6195  0109EA  6EE6               	movwf	postinc1,c
  6196  0109EC  ECE9  F0FF         	call	_get_vterm_ptr	;wreg free
  6197  0109F0  0060  F0AB  FFE6   	movff	btemp,postinc1
  6198  0109F6  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6199  0109FC  0E04               	movlw	4
  6200  0109FE  6EE6               	movwf	postinc1,c
  6201  010A00  ECB9  F0FB         	call	_sprintf	;wreg free
  6202                           
  6203                           ; BSR set to: 0
  6204                           ;main.c: 381:     sprintf(get_vterm_ptr(1, 0), "To EEPROM            ");
  6205  010A04  0E7F               	movlw	low STR_26
  6206  010A06  6EE6               	movwf	postinc1,c
  6207  010A08  0EFD               	movlw	high STR_26
  6208  010A0A  6EE6               	movwf	postinc1,c
  6209  010A0C  0E00               	movlw	0
  6210  010A0E  6EE6               	movwf	postinc1,c
  6211  010A10  0E01               	movlw	1
  6212  010A12  6EE6               	movwf	postinc1,c
  6213  010A14  ECE9  F0FF         	call	_get_vterm_ptr	;wreg free
  6214  010A18  0060  F0AB  FFE6   	movff	btemp,postinc1
  6215  010A1E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6216  010A24  0E04               	movlw	4
  6217  010A26  6EE6               	movwf	postinc1,c
  6218  010A28  ECB9  F0FB         	call	_sprintf	;wreg free
  6219                           
  6220                           ; BSR set to: 0
  6221                           ;main.c: 382:     sprintf(get_vterm_ptr(2, 0), " Time %lu, %lu       ", time(((void*)0))
      +                          , C.hist[0].updates);
  6222  010A2C  EE22  F1D9         	lfsr	2,_C+218	;volatile
  6223  010A30  006F FF7B FFE6     	movff	postinc2,postinc1
  6224  010A36  006F FF7B FFE6     	movff	postinc2,postinc1
  6225  010A3C  006F FF7B FFE6     	movff	postinc2,postinc1
  6226  010A42  006F FF7B FFE6     	movff	postinc2,postinc1
  6227  010A48  0E00               	movlw	0
  6228  010A4A  6EE6               	movwf	postinc1,c
  6229  010A4C  0E00               	movlw	0
  6230  010A4E  6EE6               	movwf	postinc1,c
  6231  010A50  ECFD  F00A         	call	_time	;wreg free
  6232  010A54  52E5               	movf	postdec1,f,c
  6233  010A56  006F FF9C  F041    	movff	indf1,btemp+23
  6234  010A5C  52E5               	movf	postdec1,f,c
  6235  010A5E  006F FF9C  F040    	movff	indf1,btemp+22
  6236  010A64  52E5               	movf	postdec1,f,c
  6237  010A66  006F FF9C  F03F    	movff	indf1,btemp+21
  6238  010A6C  52E5               	movf	postdec1,f,c
  6239  010A6E  006F FF9C  F03E    	movff	indf1,btemp+20
  6240  010A74  52E5               	movf	postdec1,f,c
  6241  010A76  006F FF9C  F03D    	movff	indf1,btemp+19
  6242  010A7C  52E5               	movf	postdec1,f,c
  6243  010A7E  006F FF9C  F03C    	movff	indf1,btemp+18
  6244  010A84  52E5               	movf	postdec1,f,c
  6245  010A86  006F FF9C  F03B    	movff	indf1,btemp+17
  6246  010A8C  52E5               	movf	postdec1,f,c
  6247  010A8E  006F FF9C  F03A    	movff	indf1,btemp+16
  6248  010A94  0060  F0EB  FFE6   	movff	btemp+16,postinc1
  6249  010A9A  0060  F0EF  FFE6   	movff	btemp+17,postinc1
  6250  010AA0  0060  F0F3  FFE6   	movff	btemp+18,postinc1
  6251  010AA6  0060  F0F7  FFE6   	movff	btemp+19,postinc1
  6252  010AAC  0060  F0FB  FFE6   	movff	btemp+20,postinc1
  6253  010AB2  0060  F0FF  FFE6   	movff	btemp+21,postinc1
  6254  010AB8  0060  F103  FFE6   	movff	btemp+22,postinc1
  6255  010ABE  0060  F107  FFE6   	movff	btemp+23,postinc1
  6256  010AC4  0E2F               	movlw	low STR_27
  6257  010AC6  6EE6               	movwf	postinc1,c
  6258  010AC8  0EFE               	movlw	high STR_27
  6259  010ACA  6EE6               	movwf	postinc1,c
  6260  010ACC  0E00               	movlw	0
  6261  010ACE  6EE6               	movwf	postinc1,c
  6262  010AD0  0E02               	movlw	2
  6263  010AD2  6EE6               	movwf	postinc1,c
  6264  010AD4  ECE9  F0FF         	call	_get_vterm_ptr	;wreg free
  6265  010AD8  0060  F0AB  FFE6   	movff	btemp,postinc1
  6266  010ADE  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6267  010AE4  0E10               	movlw	16
  6268  010AE6  6EE6               	movwf	postinc1,c
  6269  010AE8  ECB9  F0FB         	call	_sprintf	;wreg free
  6270                           
  6271                           ; BSR set to: 0
  6272                           ;main.c: 383:     update_lcd(0);
  6273  010AEC  0E00               	movlw	0
  6274  010AEE  6EE6               	movwf	postinc1,c
  6275  010AF0  EC6B  F0F4         	call	_update_lcd	;wreg free
  6276                           
  6277                           ;main.c: 384:     WaitMs(2000);
  6278  010AF4  0ED0               	movlw	208
  6279  010AF6  6EE6               	movwf	postinc1,c
  6280  010AF8  0E07               	movlw	7
  6281  010AFA  6EE6               	movwf	postinc1,c
  6282  010AFC  EC07  F00F         	call	_WaitMs	;wreg free
  6283  010B00                     l17578:
  6284                           
  6285                           ;main.c: 392:     hid_display(&H);
  6286  010B00  0E9B               	movlw	low _H
  6287  010B02  6EE6               	movwf	postinc1,c
  6288  010B04  0E01               	movlw	high _H
  6289  010B06  6EE6               	movwf	postinc1,c
  6290  010B08  EC58  F0E7         	call	_hid_display	;wreg free
  6291                           
  6292                           ;main.c: 393:     switch (H.hid_display) {
  6293  010B0C  EFB1  F089         	goto	l17622
  6294  010B10                     l1485:
  6295                           
  6296                           ; BSR set to: 1
  6297                           ;main.c: 395:      V.calib = 0;
  6298  010B10  0102               	movlb	2	; () banked
  6299  010B12  6BB0               	clrf	(_V+169)& (0+255),b	;volatile
  6300                           
  6301                           ; BSR set to: 2
  6302                           ;main.c: 396:      sprintf(get_vterm_ptr(0, 0), "PV %c PWR %3.2f       ", (C.day) ? 'D' 
      +                          : ' ', C.p_pv);
  6303  010B14  EE22  F22D         	lfsr	2,_C+302	;volatile
  6304  010B18  50DF               	movf	indf2,w,c
  6305  010B1A  A4D8               	btfss	status,2,c
  6306  010B1C  D002               	goto	l17584
  6307                           
  6308                           ; BSR set to: 2
  6309  010B1E  0E20               	movlw	32
  6310  010B20  D001               	goto	L1
  6311  010B22                     l17584:
  6312                           
  6313                           ; BSR set to: 2
  6314  010B22  0E44               	movlw	68
  6315  010B24                     L1:
  6316  010B24  6E34               	movwf	(btemp+10)^0,c
  6317  010B26  0E00               	movlw	0
  6318  010B28  6E35               	movwf	(btemp+11)^0,c
  6319                           
  6320                           ;stkvar	_main$4031 @ sp[(-17)+2]
  6321  010B2A  0EF1               	movlw	-15
  6322  010B2C  0060  F0D3  FFE3   	movff	btemp+10,plusw1
  6323  010B32  0EF2               	movlw	-14
  6324  010B34  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  6325                           
  6326                           ; BSR set to: 2
  6327  010B3A  EE22  F17B         	lfsr	2,_C+124	;volatile
  6328  010B3E  006F FF7B FFE6     	movff	postinc2,postinc1
  6329  010B44  006F FF7B FFE6     	movff	postinc2,postinc1
  6330  010B4A  006F FF7B FFE6     	movff	postinc2,postinc1
  6331  010B50  006F FF7B FFE6     	movff	postinc2,postinc1
  6332                           
  6333                           ;stkvar	_main$4031 @ sp[(-21)+2]
  6334  010B56  0EED               	movlw	-19
  6335  010B58  006F FF8F FFE6     	movff	plusw1,postinc1
  6336  010B5E  006F FF8F FFE6     	movff	plusw1,postinc1
  6337  010B64  0EB4               	movlw	low STR_31
  6338  010B66  6EE6               	movwf	postinc1,c
  6339  010B68  0EFC               	movlw	high STR_31
  6340  010B6A  6EE6               	movwf	postinc1,c
  6341  010B6C  0E00               	movlw	0
  6342  010B6E  6EE6               	movwf	postinc1,c
  6343  010B70  0E00               	movlw	0
  6344  010B72  6EE6               	movwf	postinc1,c
  6345  010B74  ECE9  F0FF         	call	_get_vterm_ptr	;wreg free
  6346  010B78  0060  F0AB  FFE6   	movff	btemp,postinc1
  6347  010B7E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6348  010B84  0E0A               	movlw	10
  6349  010B86  6EE6               	movwf	postinc1,c
  6350  010B88  ECB9  F0FB         	call	_sprintf	;wreg free
  6351                           
  6352                           ; BSR set to: 0
  6353                           ;main.c: 397:      sprintf(get_vterm_ptr(1, 0), "LOAD PWR %3.2f        ", C.p_load);
  6354  010B8C  EE22  F173         	lfsr	2,_C+116	;volatile
  6355  010B90  006F FF7B FFE6     	movff	postinc2,postinc1
  6356  010B96  006F FF7B FFE6     	movff	postinc2,postinc1
  6357  010B9C  006F FF7B FFE6     	movff	postinc2,postinc1
  6358  010BA2  006F FF7B FFE6     	movff	postinc2,postinc1
  6359  010BA8  0E9D               	movlw	low STR_32
  6360  010BAA  6EE6               	movwf	postinc1,c
  6361  010BAC  0EFC               	movlw	high STR_32
  6362  010BAE  6EE6               	movwf	postinc1,c
  6363  010BB0  0E00               	movlw	0
  6364  010BB2  6EE6               	movwf	postinc1,c
  6365  010BB4  0E01               	movlw	1
  6366  010BB6  6EE6               	movwf	postinc1,c
  6367  010BB8  ECE9  F0FF         	call	_get_vterm_ptr	;wreg free
  6368  010BBC  0060  F0AB  FFE6   	movff	btemp,postinc1
  6369  010BC2  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6370  010BC8  0E08               	movlw	8
  6371  010BCA  6EE6               	movwf	postinc1,c
  6372  010BCC  ECB9  F0FB         	call	_sprintf	;wreg free
  6373                           
  6374                           ; BSR set to: 0
  6375                           ;main.c: 398:      sprintf(get_vterm_ptr(2, 0), "INV  PWR %3.2f        ", C.p_inverter);
  6376  010BD0  EE22  F177         	lfsr	2,_C+120	;volatile
  6377  010BD4  006F FF7B FFE6     	movff	postinc2,postinc1
  6378  010BDA  006F FF7B FFE6     	movff	postinc2,postinc1
  6379  010BE0  006F FF7B FFE6     	movff	postinc2,postinc1
  6380  010BE6  006F FF7B FFE6     	movff	postinc2,postinc1
  6381  010BEC  0E86               	movlw	low STR_33
  6382  010BEE  6EE6               	movwf	postinc1,c
  6383  010BF0  0EFC               	movlw	high STR_33
  6384  010BF2  6EE6               	movwf	postinc1,c
  6385  010BF4  0E00               	movlw	0
  6386  010BF6  6EE6               	movwf	postinc1,c
  6387  010BF8  0E02               	movlw	2
  6388  010BFA  6EE6               	movwf	postinc1,c
  6389  010BFC  ECE9  F0FF         	call	_get_vterm_ptr	;wreg free
  6390  010C00  0060  F0AB  FFE6   	movff	btemp,postinc1
  6391  010C06  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6392  010C0C  0E08               	movlw	8
  6393  010C0E  6EE6               	movwf	postinc1,c
  6394  010C10  ECB9  F0FB         	call	_sprintf	;wreg free
  6395                           
  6396                           ; BSR set to: 0
  6397                           ;main.c: 400:      sprintf(get_vterm_ptr(0, 1), "PV %c WH %3.2f        ", (C.day) ? 'D' 
      +                          : ' ', C.pvkw);
  6398  010C14  EE22  F22D         	lfsr	2,_C+302	;volatile
  6399  010C18  50DF               	movf	indf2,w,c
  6400  010C1A  A4D8               	btfss	status,2,c
  6401  010C1C  D002               	goto	l17596
  6402                           
  6403                           ; BSR set to: 0
  6404  010C1E  0E20               	movlw	32
  6405  010C20  D001               	goto	L2
  6406  010C22                     l17596:
  6407                           
  6408                           ; BSR set to: 0
  6409  010C22  0E44               	movlw	68
  6410  010C24                     L2:
  6411  010C24  6E34               	movwf	(btemp+10)^0,c
  6412  010C26  0E00               	movlw	0
  6413  010C28  6E35               	movwf	(btemp+11)^0,c
  6414                           
  6415                           ;stkvar	_main$4035 @ sp[(-17)+0]
  6416  010C2A  0EEF               	movlw	-17
  6417  010C2C  0060  F0D3  FFE3   	movff	btemp+10,plusw1
  6418  010C32  0EF0               	movlw	-16
  6419  010C34  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  6420                           
  6421                           ; BSR set to: 0
  6422  010C3A  EE22  F1A7         	lfsr	2,_C+168	;volatile
  6423  010C3E  006F FF7B FFE6     	movff	postinc2,postinc1
  6424  010C44  006F FF7B FFE6     	movff	postinc2,postinc1
  6425  010C4A  006F FF7B FFE6     	movff	postinc2,postinc1
  6426  010C50  006F FF7B FFE6     	movff	postinc2,postinc1
  6427                           
  6428                           ;stkvar	_main$4035 @ sp[(-21)+0]
  6429  010C56  0EEB               	movlw	-21
  6430  010C58  006F FF8F FFE6     	movff	plusw1,postinc1
  6431  010C5E  006F FF8F FFE6     	movff	plusw1,postinc1
  6432  010C64  0E6F               	movlw	low STR_34
  6433  010C66  6EE6               	movwf	postinc1,c
  6434  010C68  0EFC               	movlw	high STR_34
  6435  010C6A  6EE6               	movwf	postinc1,c
  6436  010C6C  0E01               	movlw	1
  6437  010C6E  6EE6               	movwf	postinc1,c
  6438  010C70  0E00               	movlw	0
  6439  010C72  6EE6               	movwf	postinc1,c
  6440  010C74  ECE9  F0FF         	call	_get_vterm_ptr	;wreg free
  6441  010C78  0060  F0AB  FFE6   	movff	btemp,postinc1
  6442  010C7E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6443  010C84  0E0A               	movlw	10
  6444  010C86  6EE6               	movwf	postinc1,c
  6445  010C88  ECB9  F0FB         	call	_sprintf	;wreg free
  6446                           
  6447                           ; BSR set to: 0
  6448                           ;main.c: 401:      sprintf(get_vterm_ptr(1, 1), "LOAD WH %3.2f         ", C.loadkw);
  6449  010C8C  EE22  F1AF         	lfsr	2,_C+176	;volatile
  6450  010C90  006F FF7B FFE6     	movff	postinc2,postinc1
  6451  010C96  006F FF7B FFE6     	movff	postinc2,postinc1
  6452  010C9C  006F FF7B FFE6     	movff	postinc2,postinc1
  6453  010CA2  006F FF7B FFE6     	movff	postinc2,postinc1
  6454  010CA8  0E58               	movlw	low STR_35
  6455  010CAA  6EE6               	movwf	postinc1,c
  6456  010CAC  0EFC               	movlw	high STR_35
  6457  010CAE  6EE6               	movwf	postinc1,c
  6458  010CB0  0E01               	movlw	1
  6459  010CB2  6EE6               	movwf	postinc1,c
  6460  010CB4  0E01               	movlw	1
  6461  010CB6  6EE6               	movwf	postinc1,c
  6462  010CB8  ECE9  F0FF         	call	_get_vterm_ptr	;wreg free
  6463  010CBC  0060  F0AB  FFE6   	movff	btemp,postinc1
  6464  010CC2  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6465  010CC8  0E08               	movlw	8
  6466  010CCA  6EE6               	movwf	postinc1,c
  6467  010CCC  ECB9  F0FB         	call	_sprintf	;wreg free
  6468                           
  6469                           ; BSR set to: 0
  6470                           ;main.c: 402:      sprintf(get_vterm_ptr(2, 1), "INV  WH %3.2f         ", C.invkw);
  6471  010CD0  EE22  F1AB         	lfsr	2,_C+172	;volatile
  6472  010CD4  006F FF7B FFE6     	movff	postinc2,postinc1
  6473  010CDA  006F FF7B FFE6     	movff	postinc2,postinc1
  6474  010CE0  006F FF7B FFE6     	movff	postinc2,postinc1
  6475  010CE6  006F FF7B FFE6     	movff	postinc2,postinc1
  6476  010CEC  0E41               	movlw	low STR_36
  6477  010CEE  6EE6               	movwf	postinc1,c
  6478  010CF0  0EFC               	movlw	high STR_36
  6479  010CF2  6EE6               	movwf	postinc1,c
  6480  010CF4  0E01               	movlw	1
  6481  010CF6  6EE6               	movwf	postinc1,c
  6482  010CF8  0E02               	movlw	2
  6483  010CFA  6EE6               	movwf	postinc1,c
  6484  010CFC  ECE9  F0FF         	call	_get_vterm_ptr	;wreg free
  6485  010D00  0060  F0AB  FFE6   	movff	btemp,postinc1
  6486  010D06  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6487  010D0C  0E08               	movlw	8
  6488  010D0E  6EE6               	movwf	postinc1,c
  6489  010D10  ECB9  F0FB         	call	_sprintf	;wreg free
  6490                           
  6491                           ;main.c: 403:      break;
  6492  010D14  D33C               	goto	l17624
  6493  010D16                     l1495:
  6494                           
  6495                           ; BSR set to: 1
  6496                           ;main.c: 405:      V.calib = 0;
  6497  010D16  0102               	movlb	2	; () banked
  6498  010D18  6BB0               	clrf	(_V+169)& (0+255),b	;volatile
  6499                           
  6500                           ; BSR set to: 2
  6501                           ;main.c: 406:      sprintf(get_vterm_ptr(0, 0), "PV %2.2f PA %2.2f     ", C.calc[V_PV], 
      +                          C.calc[C_PV]);
  6502  010D1A  EE22  F103         	lfsr	2,_C+4	;volatile
  6503  010D1E  006F FF7B FFE6     	movff	postinc2,postinc1
  6504  010D24  006F FF7B FFE6     	movff	postinc2,postinc1
  6505  010D2A  006F FF7B FFE6     	movff	postinc2,postinc1
  6506  010D30  006F FF7B FFE6     	movff	postinc2,postinc1
  6507  010D36  EE22  F113         	lfsr	2,_C+20	;volatile
  6508  010D3A  006F FF7B FFE6     	movff	postinc2,postinc1
  6509  010D40  006F FF7B FFE6     	movff	postinc2,postinc1
  6510  010D46  006F FF7B FFE6     	movff	postinc2,postinc1
  6511  010D4C  006F FF7B FFE6     	movff	postinc2,postinc1
  6512  010D52  0E10               	movlw	low STR_37
  6513  010D54  6EE6               	movwf	postinc1,c
  6514  010D56  0EFD               	movlw	high STR_37
  6515  010D58  6EE6               	movwf	postinc1,c
  6516  010D5A  0E00               	movlw	0
  6517  010D5C  6EE6               	movwf	postinc1,c
  6518  010D5E  0E00               	movlw	0
  6519  010D60  6EE6               	movwf	postinc1,c
  6520  010D62  ECE9  F0FF         	call	_get_vterm_ptr	;wreg free
  6521  010D66  0060  F0AB  FFE6   	movff	btemp,postinc1
  6522  010D6C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6523  010D72  0E0C               	movlw	12
  6524  010D74  6EE6               	movwf	postinc1,c
  6525  010D76  ECB9  F0FB         	call	_sprintf	;wreg free
  6526                           
  6527                           ;main.c: 407:      sprintf(get_vterm_ptr(1, 0), "BV %2.2f BA %2.2f     ", C.calc[V_BAT],
      +                           C.calc[C_BATT]);
  6528  010D7A  EE22  F0FF         	lfsr	2,_C
  6529  010D7E  006F FF7B FFE6     	movff	postinc2,postinc1
  6530  010D84  006F FF7B FFE6     	movff	postinc2,postinc1
  6531  010D8A  006F FF7B FFE6     	movff	postinc2,postinc1
  6532  010D90  006F FF7B FFE6     	movff	postinc2,postinc1
  6533  010D96  EE22  F10F         	lfsr	2,_C+16	;volatile
  6534  010D9A  006F FF7B FFE6     	movff	postinc2,postinc1
  6535  010DA0  006F FF7B FFE6     	movff	postinc2,postinc1
  6536  010DA6  006F FF7B FFE6     	movff	postinc2,postinc1
  6537  010DAC  006F FF7B FFE6     	movff	postinc2,postinc1
  6538  010DB2  0EE2               	movlw	low STR_38
  6539  010DB4  6EE6               	movwf	postinc1,c
  6540  010DB6  0EFC               	movlw	high STR_38
  6541  010DB8  6EE6               	movwf	postinc1,c
  6542  010DBA  0E00               	movlw	0
  6543  010DBC  6EE6               	movwf	postinc1,c
  6544  010DBE  0E01               	movlw	1
  6545  010DC0  6EE6               	movwf	postinc1,c
  6546  010DC2  ECE9  F0FF         	call	_get_vterm_ptr	;wreg free
  6547  010DC6  0060  F0AB  FFE6   	movff	btemp,postinc1
  6548  010DCC  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6549  010DD2  0E0C               	movlw	12
  6550  010DD4  6EE6               	movwf	postinc1,c
  6551  010DD6  ECB9  F0FB         	call	_sprintf	;wreg free
  6552                           
  6553                           ;main.c: 408:      sprintf(get_vterm_ptr(2, 0), "CV %2.2f LA %2.2f     ", C.calc[V_CC], 
      +                          C.c_load);
  6554  010DDA  EE22  F13F         	lfsr	2,_C+64	;volatile
  6555  010DDE  006F FF7B FFE6     	movff	postinc2,postinc1
  6556  010DE4  006F FF7B FFE6     	movff	postinc2,postinc1
  6557  010DEA  006F FF7B FFE6     	movff	postinc2,postinc1
  6558  010DF0  006F FF7B FFE6     	movff	postinc2,postinc1
  6559  010DF6  EE22  F107         	lfsr	2,_C+8	;volatile
  6560  010DFA  006F FF7B FFE6     	movff	postinc2,postinc1
  6561  010E00  006F FF7B FFE6     	movff	postinc2,postinc1
  6562  010E06  006F FF7B FFE6     	movff	postinc2,postinc1
  6563  010E0C  006F FF7B FFE6     	movff	postinc2,postinc1
  6564  010E12  0EF9               	movlw	low STR_39
  6565  010E14  6EE6               	movwf	postinc1,c
  6566  010E16  0EFC               	movlw	high STR_39
  6567  010E18  6EE6               	movwf	postinc1,c
  6568  010E1A  0E00               	movlw	0
  6569  010E1C  6EE6               	movwf	postinc1,c
  6570  010E1E  0E02               	movlw	2
  6571  010E20  6EE6               	movwf	postinc1,c
  6572  010E22  ECE9  F0FF         	call	_get_vterm_ptr	;wreg free
  6573  010E26  0060  F0AB  FFE6   	movff	btemp,postinc1
  6574  010E2C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6575  010E32  0E0C               	movlw	12
  6576  010E34  6EE6               	movwf	postinc1,c
  6577  010E36  ECB9  F0FB         	call	_sprintf	;wreg free
  6578                           
  6579                           ;main.c: 410:      sprintf(get_vterm_ptr(0, 1), "BAT IWH %4.1f         ", C.bkwi);
  6580  010E3A  EE22  F19F         	lfsr	2,_C+160	;volatile
  6581  010E3E  006F FF7B FFE6     	movff	postinc2,postinc1
  6582  010E44  006F FF7B FFE6     	movff	postinc2,postinc1
  6583  010E4A  006F FF7B FFE6     	movff	postinc2,postinc1
  6584  010E50  006F FF7B FFE6     	movff	postinc2,postinc1
  6585  010E56  0EFC               	movlw	low STR_40
  6586  010E58  6EE6               	movwf	postinc1,c
  6587  010E5A  0EFB               	movlw	high STR_40
  6588  010E5C  6EE6               	movwf	postinc1,c
  6589  010E5E  0E01               	movlw	1
  6590  010E60  6EE6               	movwf	postinc1,c
  6591  010E62  0E00               	movlw	0
  6592  010E64  6EE6               	movwf	postinc1,c
  6593  010E66  ECE9  F0FF         	call	_get_vterm_ptr	;wreg free
  6594  010E6A  0060  F0AB  FFE6   	movff	btemp,postinc1
  6595  010E70  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6596  010E76  0E08               	movlw	8
  6597  010E78  6EE6               	movwf	postinc1,c
  6598  010E7A  ECB9  F0FB         	call	_sprintf	;wreg free
  6599                           
  6600                           ;main.c: 411:      sprintf(get_vterm_ptr(1, 1), "BAT OWH %4.1f         ", C.bkwo);
  6601  010E7E  EE22  F1A3         	lfsr	2,_C+164	;volatile
  6602  010E82  006F FF7B FFE6     	movff	postinc2,postinc1
  6603  010E88  006F FF7B FFE6     	movff	postinc2,postinc1
  6604  010E8E  006F FF7B FFE6     	movff	postinc2,postinc1
  6605  010E94  006F FF7B FFE6     	movff	postinc2,postinc1
  6606  010E9A  0E13               	movlw	low STR_41
  6607  010E9C  6EE6               	movwf	postinc1,c
  6608  010E9E  0EFC               	movlw	high STR_41
  6609  010EA0  6EE6               	movwf	postinc1,c
  6610  010EA2  0E01               	movlw	1
  6611  010EA4  6EE6               	movwf	postinc1,c
  6612  010EA6  0E01               	movlw	1
  6613  010EA8  6EE6               	movwf	postinc1,c
  6614  010EAA  ECE9  F0FF         	call	_get_vterm_ptr	;wreg free
  6615  010EAE  0060  F0AB  FFE6   	movff	btemp,postinc1
  6616  010EB4  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6617  010EBA  0E08               	movlw	8
  6618  010EBC  6EE6               	movwf	postinc1,c
  6619  010EBE  ECB9  F0FB         	call	_sprintf	;wreg free
  6620                           
  6621                           ;main.c: 412:      sprintf(get_vterm_ptr(2, 1), "BAT TWH %4.1f         ", C.bkwi + C.bkw
      +                          o);
  6622  010EC2  EE22  F1A3         	lfsr	2,_C+164	;volatile
  6623  010EC6  006F FF7B FFE6     	movff	postinc2,postinc1
  6624  010ECC  006F FF7B FFE6     	movff	postinc2,postinc1
  6625  010ED2  006F FF7B FFE6     	movff	postinc2,postinc1
  6626  010ED8  006F FF7B FFE6     	movff	postinc2,postinc1
  6627  010EDE  EE22  F19F         	lfsr	2,_C+160	;volatile
  6628  010EE2  006F FF7B FFE6     	movff	postinc2,postinc1
  6629  010EE8  006F FF7B FFE6     	movff	postinc2,postinc1
  6630  010EEE  006F FF7B FFE6     	movff	postinc2,postinc1
  6631  010EF4  006F FF7B FFE6     	movff	postinc2,postinc1
  6632  010EFA  EC62  F0B6         	call	___fladd	;wreg free
  6633  010EFE  0060  F0AB  FFE6   	movff	btemp,postinc1
  6634  010F04  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6635  010F0A  0060  F0B3  FFE6   	movff	btemp+2,postinc1
  6636  010F10  0060  F0B7  FFE6   	movff	btemp+3,postinc1
  6637  010F16  0E2A               	movlw	low STR_42
  6638  010F18  6EE6               	movwf	postinc1,c
  6639  010F1A  0EFC               	movlw	high STR_42
  6640  010F1C  6EE6               	movwf	postinc1,c
  6641  010F1E  0E01               	movlw	1
  6642  010F20  6EE6               	movwf	postinc1,c
  6643  010F22  0E02               	movlw	2
  6644  010F24  6EE6               	movwf	postinc1,c
  6645  010F26  ECE9  F0FF         	call	_get_vterm_ptr	;wreg free
  6646  010F2A  0060  F0AB  FFE6   	movff	btemp,postinc1
  6647  010F30  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6648  010F36  0E08               	movlw	8
  6649  010F38  6EE6               	movwf	postinc1,c
  6650  010F3A  ECB9  F0FB         	call	_sprintf	;wreg free
  6651                           
  6652                           ;main.c: 413:      break;
  6653  010F3E  D227               	goto	l17624
  6654  010F40                     l1496:
  6655                           
  6656                           ; BSR set to: 1
  6657                           ;main.c: 415:      V.calib = 0;
  6658  010F40  0102               	movlb	2	; () banked
  6659  010F42  6BB0               	clrf	(_V+169)& (0+255),b	;volatile
  6660                           
  6661                           ; BSR set to: 2
  6662                           ;main.c: 416:      sprintf(get_vterm_ptr(0, 0), "BATT PWR %3.2f         ", C.p_bat);
  6663  010F44  EE22  F17F         	lfsr	2,_C+128	;volatile
  6664  010F48  006F FF7B FFE6     	movff	postinc2,postinc1
  6665  010F4E  006F FF7B FFE6     	movff	postinc2,postinc1
  6666  010F54  006F FF7B FFE6     	movff	postinc2,postinc1
  6667  010F5A  006F FF7B FFE6     	movff	postinc2,postinc1
  6668  010F60  0E57               	movlw	low STR_43
  6669  010F62  6EE6               	movwf	postinc1,c
  6670  010F64  0EFB               	movlw	high STR_43
  6671  010F66  6EE6               	movwf	postinc1,c
  6672  010F68  0E00               	movlw	0
  6673  010F6A  6EE6               	movwf	postinc1,c
  6674  010F6C  0E00               	movlw	0
  6675  010F6E  6EE6               	movwf	postinc1,c
  6676  010F70  ECE9  F0FF         	call	_get_vterm_ptr	;wreg free
  6677  010F74  0060  F0AB  FFE6   	movff	btemp,postinc1
  6678  010F7A  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6679  010F80  0E08               	movlw	8
  6680  010F82  6EE6               	movwf	postinc1,c
  6681  010F84  ECB9  F0FB         	call	_sprintf	;wreg free
  6682                           
  6683                           ;main.c: 417:      sprintf(get_vterm_ptr(1, 0), "BAH %3.2f P%3.2f       ", C.dynamic_ah,
      +                           C.pv_ah);
  6684  010F88  EE22  F193         	lfsr	2,_C+148	;volatile
  6685  010F8C  006F FF7B FFE6     	movff	postinc2,postinc1
  6686  010F92  006F FF7B FFE6     	movff	postinc2,postinc1
  6687  010F98  006F FF7B FFE6     	movff	postinc2,postinc1
  6688  010F9E  006F FF7B FFE6     	movff	postinc2,postinc1
  6689  010FA4  EE22  F18F         	lfsr	2,_C+144	;volatile
  6690  010FA8  006F FF7B FFE6     	movff	postinc2,postinc1
  6691  010FAE  006F FF7B FFE6     	movff	postinc2,postinc1
  6692  010FB4  006F FF7B FFE6     	movff	postinc2,postinc1
  6693  010FBA  006F FF7B FFE6     	movff	postinc2,postinc1
  6694  010FC0  0E9F               	movlw	low STR_44
  6695  010FC2  6EE6               	movwf	postinc1,c
  6696  010FC4  0EFB               	movlw	high STR_44
  6697  010FC6  6EE6               	movwf	postinc1,c
  6698  010FC8  0E00               	movlw	0
  6699  010FCA  6EE6               	movwf	postinc1,c
  6700  010FCC  0E01               	movlw	1
  6701  010FCE  6EE6               	movwf	postinc1,c
  6702  010FD0  ECE9  F0FF         	call	_get_vterm_ptr	;wreg free
  6703  010FD4  0060  F0AB  FFE6   	movff	btemp,postinc1
  6704  010FDA  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6705  010FE0  0E0C               	movlw	12
  6706  010FE2  6EE6               	movwf	postinc1,c
  6707  010FE4  ECB9  F0FB         	call	_sprintf	;wreg free
  6708                           
  6709                           ;main.c: 418:      sprintf(get_vterm_ptr(2, 0), "S%cC %d RUN %d V%2.2f        ", spinner
      +                          s(5, 0), C.soc, C.runtime, C.calc[V_BAT]);
  6710  010FE8  EE22  F10F         	lfsr	2,_C+16	;volatile
  6711  010FEC  006F FF7B FFE6     	movff	postinc2,postinc1
  6712  010FF2  006F FF7B FFE6     	movff	postinc2,postinc1
  6713  010FF8  006F FF7B FFE6     	movff	postinc2,postinc1
  6714  010FFE  006F FF7B FFE6     	movff	postinc2,postinc1
  6715  011004  EE22  F1B3         	lfsr	2,_C+180	;volatile
  6716  011008  006F FF78  F034    	movff	postinc2,btemp+10
  6717  01100E  006F FF74  F035    	movff	postdec2,btemp+11
  6718  011014  0060  F0D3  FFE6   	movff	btemp+10,postinc1
  6719  01101A  0060  F0D7  FFE6   	movff	btemp+11,postinc1
  6720  011020  EE22  F1B5         	lfsr	2,_C+182	;volatile
  6721  011024  006F FF78  F034    	movff	postinc2,btemp+10
  6722  01102A  006F FF74  F035    	movff	postdec2,btemp+11
  6723  011030  0060  F0D3  FFE6   	movff	btemp+10,postinc1
  6724  011036  0060  F0D7  FFE6   	movff	btemp+11,postinc1
  6725  01103C  0E00               	movlw	0
  6726  01103E  6EE6               	movwf	postinc1,c
  6727  011040  0E05               	movlw	5
  6728  011042  6EE6               	movwf	postinc1,c
  6729  011044  EC35  F0FD         	call	_spinners	;wreg free
  6730  011048  502A               	movf	btemp^0,w,c
  6731  01104A  6EE6               	movwf	postinc1,c
  6732  01104C  0E00               	movlw	0
  6733  01104E  6EE6               	movwf	postinc1,c
  6734  011050  0E9B               	movlw	low STR_45
  6735  011052  6EE6               	movwf	postinc1,c
  6736  011054  0EFA               	movlw	high STR_45
  6737  011056  6EE6               	movwf	postinc1,c
  6738  011058  0E00               	movlw	0
  6739  01105A  6EE6               	movwf	postinc1,c
  6740  01105C  0E02               	movlw	2
  6741  01105E  6EE6               	movwf	postinc1,c
  6742  011060  ECE9  F0FF         	call	_get_vterm_ptr	;wreg free
  6743  011064  0060  F0AB  FFE6   	movff	btemp,postinc1
  6744  01106A  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6745  011070  0E0E               	movlw	14
  6746  011072  6EE6               	movwf	postinc1,c
  6747  011074  ECB9  F0FB         	call	_sprintf	;wreg free
  6748                           
  6749                           ;main.c: 420:      sprintf(get_vterm_ptr(0, 1), "ESR  %2.6f             ", C.esr);
  6750  011078  EE22  F187         	lfsr	2,_C+136	;volatile
  6751  01107C  006F FF7B FFE6     	movff	postinc2,postinc1
  6752  011082  006F FF7B FFE6     	movff	postinc2,postinc1
  6753  011088  006F FF7B FFE6     	movff	postinc2,postinc1
  6754  01108E  006F FF7B FFE6     	movff	postinc2,postinc1
  6755  011094  0E3F               	movlw	low STR_46
  6756  011096  6EE6               	movwf	postinc1,c
  6757  011098  0EFB               	movlw	high STR_46
  6758  01109A  6EE6               	movwf	postinc1,c
  6759  01109C  0E01               	movlw	1
  6760  01109E  6EE6               	movwf	postinc1,c
  6761  0110A0  0E00               	movlw	0
  6762  0110A2  6EE6               	movwf	postinc1,c
  6763  0110A4  ECE9  F0FF         	call	_get_vterm_ptr	;wreg free
  6764  0110A8  0060  F0AB  FFE6   	movff	btemp,postinc1
  6765  0110AE  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6766  0110B4  0E08               	movlw	8
  6767  0110B6  6EE6               	movwf	postinc1,c
  6768  0110B8  ECB9  F0FB         	call	_sprintf	;wreg free
  6769                           
  6770                           ;main.c: 421:      sprintf(get_vterm_ptr(1, 1), "R1 %2.3f %3.4f         ", C.bv_one_load
      +                          , C.load_i1);
  6771  0110BC  EE22  F219         	lfsr	2,_C+282	;volatile
  6772  0110C0  006F FF7B FFE6     	movff	postinc2,postinc1
  6773  0110C6  006F FF7B FFE6     	movff	postinc2,postinc1
  6774  0110CC  006F FF7B FFE6     	movff	postinc2,postinc1
  6775  0110D2  006F FF7B FFE6     	movff	postinc2,postinc1
  6776  0110D8  EE22  F225         	lfsr	2,_C+294	;volatile
  6777  0110DC  006F FF7B FFE6     	movff	postinc2,postinc1
  6778  0110E2  006F FF7B FFE6     	movff	postinc2,postinc1
  6779  0110E8  006F FF7B FFE6     	movff	postinc2,postinc1
  6780  0110EE  006F FF7B FFE6     	movff	postinc2,postinc1
  6781  0110F4  0E6F               	movlw	low STR_47
  6782  0110F6  6EE6               	movwf	postinc1,c
  6783  0110F8  0EFB               	movlw	high STR_47
  6784  0110FA  6EE6               	movwf	postinc1,c
  6785  0110FC  0E01               	movlw	1
  6786  0110FE  6EE6               	movwf	postinc1,c
  6787  011100  0E01               	movlw	1
  6788  011102  6EE6               	movwf	postinc1,c
  6789  011104  ECE9  F0FF         	call	_get_vterm_ptr	;wreg free
  6790  011108  0060  F0AB  FFE6   	movff	btemp,postinc1
  6791  01110E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6792  011114  0E0C               	movlw	12
  6793  011116  6EE6               	movwf	postinc1,c
  6794  011118  ECB9  F0FB         	call	_sprintf	;wreg free
  6795                           
  6796                           ;main.c: 422:      sprintf(get_vterm_ptr(2, 1), "R2 %2.3f %3.4f         ", C.bv_full_loa
      +                          d, C.load_i2);
  6797  01111C  EE22  F21D         	lfsr	2,_C+286	;volatile
  6798  011120  006F FF7B FFE6     	movff	postinc2,postinc1
  6799  011126  006F FF7B FFE6     	movff	postinc2,postinc1
  6800  01112C  006F FF7B FFE6     	movff	postinc2,postinc1
  6801  011132  006F FF7B FFE6     	movff	postinc2,postinc1
  6802  011138  EE22  F229         	lfsr	2,_C+298	;volatile
  6803  01113C  006F FF7B FFE6     	movff	postinc2,postinc1
  6804  011142  006F FF7B FFE6     	movff	postinc2,postinc1
  6805  011148  006F FF7B FFE6     	movff	postinc2,postinc1
  6806  01114E  006F FF7B FFE6     	movff	postinc2,postinc1
  6807  011154  0E87               	movlw	low STR_48
  6808  011156  6EE6               	movwf	postinc1,c
  6809  011158  0EFB               	movlw	high STR_48
  6810  01115A  6EE6               	movwf	postinc1,c
  6811  01115C  0E01               	movlw	1
  6812  01115E  6EE6               	movwf	postinc1,c
  6813  011160  0E02               	movlw	2
  6814  011162  6EE6               	movwf	postinc1,c
  6815  011164  ECE9  F0FF         	call	_get_vterm_ptr	;wreg free
  6816  011168  0060  F0AB  FFE6   	movff	btemp,postinc1
  6817  01116E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6818  011174  0E0C               	movlw	12
  6819  011176  6EE6               	movwf	postinc1,c
  6820  011178  ECB9  F0FB         	call	_sprintf	;wreg free
  6821                           
  6822                           ;main.c: 423:      break;
  6823  01117C  D108               	goto	l17624
  6824  01117E                     l17608:
  6825                           
  6826                           ; BSR set to: 1
  6827                           ;main.c: 425:      if (!V.calib) {
  6828  01117E  0102               	movlb	2	; () banked
  6829  011180  51B0               	movf	(_V+169)& (0+255),w,b	;volatile
  6830  011182  A4D8               	btfss	status,2,c
  6831  011184  D02D               	goto	l17612
  6832                           
  6833                           ; BSR set to: 2
  6834                           ;main.c: 426:       lp_filter(0.0, i, -1);
  6835  011186  0EFF               	movlw	255
  6836  011188  6EE6               	movwf	postinc1,c
  6837                           
  6838                           ;stkvar	_i @ sp[(-18)+14]
  6839  01118A  0EFC               	movlw	-4
  6840  01118C  50E3               	movf	plusw1,w,c
  6841  01118E  6EE6               	movwf	postinc1,c
  6842  011190  0E00               	movlw	0
  6843  011192  6EE6               	movwf	postinc1,c
  6844  011194  0E00               	movlw	0
  6845  011196  6EE6               	movwf	postinc1,c
  6846  011198  0E00               	movlw	0
  6847  01119A  6EE6               	movwf	postinc1,c
  6848  01119C  0E00               	movlw	0
  6849  01119E  6EE6               	movwf	postinc1,c
  6850  0111A0  EC56  F0EB         	call	_lp_filter	;wreg free
  6851                           
  6852                           ;main.c: 427:       lp_filter(0.0, j, -1);
  6853  0111A4  0EFF               	movlw	255
  6854  0111A6  6EE6               	movwf	postinc1,c
  6855                           
  6856                           ;stkvar	_j @ sp[(-18)+13]
  6857  0111A8  0EFB               	movlw	-5
  6858  0111AA  50E3               	movf	plusw1,w,c
  6859  0111AC  6EE6               	movwf	postinc1,c
  6860  0111AE  0E00               	movlw	0
  6861  0111B0  6EE6               	movwf	postinc1,c
  6862  0111B2  0E00               	movlw	0
  6863  0111B4  6EE6               	movwf	postinc1,c
  6864  0111B6  0E00               	movlw	0
  6865  0111B8  6EE6               	movwf	postinc1,c
  6866  0111BA  0E00               	movlw	0
  6867  0111BC  6EE6               	movwf	postinc1,c
  6868  0111BE  EC56  F0EB         	call	_lp_filter	;wreg free
  6869                           
  6870                           ;main.c: 428:       lp_filter(0.0, k, -1);
  6871  0111C2  0EFF               	movlw	255
  6872  0111C4  6EE6               	movwf	postinc1,c
  6873                           
  6874                           ;stkvar	_k @ sp[(-18)+12]
  6875  0111C6  0EFA               	movlw	-6
  6876  0111C8  50E3               	movf	plusw1,w,c
  6877  0111CA  6EE6               	movwf	postinc1,c
  6878  0111CC  0E00               	movlw	0
  6879  0111CE  6EE6               	movwf	postinc1,c
  6880  0111D0  0E00               	movlw	0
  6881  0111D2  6EE6               	movwf	postinc1,c
  6882  0111D4  0E00               	movlw	0
  6883  0111D6  6EE6               	movwf	postinc1,c
  6884  0111D8  0E00               	movlw	0
  6885  0111DA  6EE6               	movwf	postinc1,c
  6886  0111DC  EC56  F0EB         	call	_lp_filter	;wreg free
  6887  0111E0                     l17612:
  6888                           
  6889                           ;main.c: 430:      V.calib = 1;
  6890  0111E0  0E01               	movlw	1
  6891  0111E2  0102               	movlb	2	; () banked
  6892  0111E4  6FB0               	movwf	(_V+169)& (0+255),b	;volatile
  6893                           
  6894                           ; BSR set to: 2
  6895                           ;main.c: 431:      sprintf(get_vterm_ptr(0, 0), "%d %2.4f, %d  TRIM   ", get_raw_result(
      +                          i), C.calc[i], inp_index);
  6896                           ;stkvar	_inp_index @ sp[(-17)+11]
  6897  0111E6  0EFA               	movlw	-6
  6898  0111E8  50E3               	movf	plusw1,w,c
  6899  0111EA  6EE6               	movwf	postinc1,c
  6900  0111EC  0E00               	movlw	0
  6901  0111EE  6EE6               	movwf	postinc1,c
  6902                           
  6903                           ;stkvar	_i @ sp[(-19)+14]
  6904  0111F0  0EFB               	movlw	-5
  6905  0111F2  50E3               	movf	plusw1,w,c
  6906  0111F4  0D04               	mullw	4
  6907  0111F6  0EFF               	movlw	low _C
  6908  0111F8  24F3               	addwf	243,w,c
  6909  0111FA  6ED9               	movwf	fsr2l,c
  6910  0111FC  0E08               	movlw	high _C
  6911  0111FE  20F4               	addwfc	prodh,w,c
  6912  011200  6EDA               	movwf	fsr2h,c
  6913  011202  006F FF7B FFE6     	movff	postinc2,postinc1
  6914  011208  006F FF7B FFE6     	movff	postinc2,postinc1
  6915  01120E  006F FF7B FFE6     	movff	postinc2,postinc1
  6916  011214  006F FF7B FFE6     	movff	postinc2,postinc1
  6917                           
  6918                           ;stkvar	_i @ sp[(-23)+14]
  6919  01121A  0EF7               	movlw	-9
  6920  01121C  50E3               	movf	plusw1,w,c
  6921  01121E  6EE6               	movwf	postinc1,c
  6922  011220  EC05  F012         	call	_get_raw_result	;wreg free
  6923  011224  0060  F0AB  FFE6   	movff	btemp,postinc1
  6924  01122A  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6925  011230  0E87               	movlw	low STR_49
  6926  011232  6EE6               	movwf	postinc1,c
  6927  011234  0EFE               	movlw	high STR_49
  6928  011236  6EE6               	movwf	postinc1,c
  6929  011238  0E00               	movlw	0
  6930  01123A  6EE6               	movwf	postinc1,c
  6931  01123C  0E00               	movlw	0
  6932  01123E  6EE6               	movwf	postinc1,c
  6933  011240  ECE9  F0FF         	call	_get_vterm_ptr	;wreg free
  6934  011244  0060  F0AB  FFE6   	movff	btemp,postinc1
  6935  01124A  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6936  011250  0E0C               	movlw	12
  6937  011252  6EE6               	movwf	postinc1,c
  6938  011254  ECB9  F0FB         	call	_sprintf	;wreg free
  6939                           
  6940                           ; BSR set to: 0
  6941                           ;main.c: 432:      sprintf(get_vterm_ptr(1, 0), "%d %2.4f, %d  TRIM   ", get_raw_result(
      +                          j), C.calc[j], inp_index + 1);
  6942                           ;stkvar	_inp_index @ sp[(-17)+11]
  6943  011258  0EFA               	movlw	-6
  6944  01125A  50E3               	movf	plusw1,w,c
  6945  01125C  6E34               	movwf	(btemp+10)^0,c
  6946  01125E  6A35               	clrf	(btemp+11)^0,c
  6947  011260  0E01               	movlw	1
  6948  011262  2634               	addwf	(btemp+10)^0,f,c
  6949  011264  0E00               	movlw	0
  6950  011266  2235               	addwfc	(btemp+11)^0,f,c
  6951  011268  0060  F0D3  FFE6   	movff	btemp+10,postinc1
  6952  01126E  0060  F0D7  FFE6   	movff	btemp+11,postinc1
  6953                           
  6954                           ;stkvar	_j @ sp[(-19)+13]
  6955  011274  0EFA               	movlw	-6
  6956  011276  50E3               	movf	plusw1,w,c
  6957  011278  0D04               	mullw	4
  6958  01127A  0EFF               	movlw	low _C
  6959  01127C  24F3               	addwf	243,w,c
  6960  01127E  6ED9               	movwf	fsr2l,c
  6961  011280  0E08               	movlw	high _C
  6962  011282  20F4               	addwfc	prodh,w,c
  6963  011284  6EDA               	movwf	fsr2h,c
  6964  011286  006F FF7B FFE6     	movff	postinc2,postinc1
  6965  01128C  006F FF7B FFE6     	movff	postinc2,postinc1
  6966  011292  006F FF7B FFE6     	movff	postinc2,postinc1
  6967  011298  006F FF7B FFE6     	movff	postinc2,postinc1
  6968                           
  6969                           ;stkvar	_j @ sp[(-23)+13]
  6970  01129E  0EF6               	movlw	-10
  6971  0112A0  50E3               	movf	plusw1,w,c
  6972  0112A2  6EE6               	movwf	postinc1,c
  6973  0112A4  EC05  F012         	call	_get_raw_result	;wreg free
  6974  0112A8  0060  F0AB  FFE6   	movff	btemp,postinc1
  6975  0112AE  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6976  0112B4  0E87               	movlw	low STR_49
  6977  0112B6  6EE6               	movwf	postinc1,c
  6978  0112B8  0EFE               	movlw	high STR_49
  6979  0112BA  6EE6               	movwf	postinc1,c
  6980  0112BC  0E00               	movlw	0
  6981  0112BE  6EE6               	movwf	postinc1,c
  6982  0112C0  0E01               	movlw	1
  6983  0112C2  6EE6               	movwf	postinc1,c
  6984  0112C4  ECE9  F0FF         	call	_get_vterm_ptr	;wreg free
  6985  0112C8  0060  F0AB  FFE6   	movff	btemp,postinc1
  6986  0112CE  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6987  0112D4  0E0C               	movlw	12
  6988  0112D6  6EE6               	movwf	postinc1,c
  6989  0112D8  ECB9  F0FB         	call	_sprintf	;wreg free
  6990                           
  6991                           ; BSR set to: 0
  6992                           ;main.c: 433:      sprintf(get_vterm_ptr(2, 0), "%d %2.4f, %d  TRIM   ", get_raw_result(
      +                          k), C.calc[k], inp_index + 2);
  6993                           ;stkvar	_inp_index @ sp[(-17)+11]
  6994  0112DC  0EFA               	movlw	-6
  6995  0112DE  50E3               	movf	plusw1,w,c
  6996  0112E0  6E34               	movwf	(btemp+10)^0,c
  6997  0112E2  6A35               	clrf	(btemp+11)^0,c
  6998  0112E4  0E02               	movlw	2
  6999  0112E6  2634               	addwf	(btemp+10)^0,f,c
  7000  0112E8  0E00               	movlw	0
  7001  0112EA  2235               	addwfc	(btemp+11)^0,f,c
  7002  0112EC  0060  F0D3  FFE6   	movff	btemp+10,postinc1
  7003  0112F2  0060  F0D7  FFE6   	movff	btemp+11,postinc1
  7004                           
  7005                           ;stkvar	_k @ sp[(-19)+12]
  7006  0112F8  0EF9               	movlw	-7
  7007  0112FA  50E3               	movf	plusw1,w,c
  7008  0112FC  0D04               	mullw	4
  7009  0112FE  0EFF               	movlw	low _C
  7010  011300  24F3               	addwf	243,w,c
  7011  011302  6ED9               	movwf	fsr2l,c
  7012  011304  0E08               	movlw	high _C
  7013  011306  20F4               	addwfc	prodh,w,c
  7014  011308  6EDA               	movwf	fsr2h,c
  7015  01130A  006F FF7B FFE6     	movff	postinc2,postinc1
  7016  011310  006F FF7B FFE6     	movff	postinc2,postinc1
  7017  011316  006F FF7B FFE6     	movff	postinc2,postinc1
  7018  01131C  006F FF7B FFE6     	movff	postinc2,postinc1
  7019                           
  7020                           ;stkvar	_k @ sp[(-23)+12]
  7021  011322  0EF5               	movlw	-11
  7022  011324  50E3               	movf	plusw1,w,c
  7023  011326  6EE6               	movwf	postinc1,c
  7024  011328  EC05  F012         	call	_get_raw_result	;wreg free
  7025  01132C  0060  F0AB  FFE6   	movff	btemp,postinc1
  7026  011332  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  7027  011338  0E87               	movlw	low STR_49
  7028  01133A  6EE6               	movwf	postinc1,c
  7029  01133C  0EFE               	movlw	high STR_49
  7030  01133E  6EE6               	movwf	postinc1,c
  7031  011340  0E00               	movlw	0
  7032  011342  6EE6               	movwf	postinc1,c
  7033  011344  0E02               	movlw	2
  7034  011346  6EE6               	movwf	postinc1,c
  7035  011348  ECE9  F0FF         	call	_get_vterm_ptr	;wreg free
  7036  01134C  0060  F0AB  FFE6   	movff	btemp,postinc1
  7037  011352  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  7038  011358  0E0C               	movlw	12
  7039  01135A  6EE6               	movwf	postinc1,c
  7040  01135C  ECB9  F0FB         	call	_sprintf	;wreg free
  7041                           
  7042                           ;main.c: 434:      break;
  7043  011360  D016               	goto	l17624
  7044  011362                     l17622:
  7045  011362  0101               	movlb	1	; () banked
  7046  011364  519B               	movf	_H& (0+255),w,b
  7047  011366  6E34               	movwf	(btemp+10)^0,c
  7048  011368  6A35               	clrf	(btemp+11)^0,c
  7049                           
  7050                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7051                           ; Switch size 1, requested type "simple"
  7052                           ; Number of cases is 1, Range of values is 0 to 0
  7053                           ; switch strategies available:
  7054                           ; Name         Instructions Cycles
  7055                           ; simple_byte            4     3 (average)
  7056                           ;	Chosen strategy is simple_byte
  7057  01136A  5035               	movf	(btemp+11)^0,w,c
  7058  01136C  0A00               	xorlw	0	; case 0
  7059  01136E  A4D8               	btfss	status,2,c
  7060  011370  D00E               	goto	l17624
  7061                           
  7062                           ; BSR set to: 1
  7063                           ; Switch size 1, requested type "simple"
  7064                           ; Number of cases is 4, Range of values is 0 to 3
  7065                           ; switch strategies available:
  7066                           ; Name         Instructions Cycles
  7067                           ; simple_byte           13     7 (average)
  7068                           ;	Chosen strategy is simple_byte
  7069  011372  5034               	movf	(btemp+10)^0,w,c
  7070  011374  0A00               	xorlw	0	; case 0
  7071  011376  B4D8               	btfsc	status,2,c
  7072  011378  D4CE               	goto	l1495
  7073  01137A  0A01               	xorlw	1	; case 1
  7074  01137C  B4D8               	btfsc	status,2,c
  7075  01137E  EF88  F085         	goto	l1485
  7076  011382  0A03               	xorlw	3	; case 2
  7077  011384  B4D8               	btfsc	status,2,c
  7078  011386  D5DC               	goto	l1496
  7079  011388  0A01               	xorlw	1	; case 3
  7080  01138A  B4D8               	btfsc	status,2,c
  7081  01138C  D6F8               	goto	l17608
  7082  01138E                     l17624:
  7083                           
  7084                           ;main.c: 438:     clear_hid_pflags(&H);
  7085  01138E  0E9B               	movlw	low _H
  7086  011390  6EE6               	movwf	postinc1,c
  7087  011392  0E01               	movlw	high _H
  7088  011394  6EE6               	movwf	postinc1,c
  7089  011396  ECA1  F009         	call	_clear_hid_pflags	;wreg free
  7090                           
  7091                           ;main.c: 440:    StartTimer(TMR_DISPLAY, 250);
  7092  01139A  0EFA               	movlw	250
  7093  01139C  6EE6               	movwf	postinc1,c
  7094  01139E  0E00               	movlw	0
  7095  0113A0  6EE6               	movwf	postinc1,c
  7096  0113A2  0E0A               	movlw	10
  7097  0113A4  6EE6               	movwf	postinc1,c
  7098  0113A6  ECFA  F00D         	call	_StartTimer	;wreg free
  7099                           
  7100                           ;main.c: 441:    V.enter = check_enter_button(&H);
  7101  0113AA  0E9B               	movlw	low _H
  7102  0113AC  6EE6               	movwf	postinc1,c
  7103  0113AE  0E01               	movlw	high _H
  7104  0113B0  6EE6               	movwf	postinc1,c
  7105  0113B2  EC94  F008         	call	_check_enter_button	;wreg free
  7106  0113B6  502A               	movf	btemp^0,w,c
  7107  0113B8  0102               	movlb	2	; () banked
  7108  0113BA  6FB1               	movwf	(_V+170)& (0+255),b	;volatile
  7109                           
  7110                           ; BSR set to: 2
  7111                           ;main.c: 442:    if (V.enter && (H.hid_display != HID_AUX)) {
  7112  0113BC  51B1               	movf	(_V+170)& (0+255),w,b	;volatile
  7113  0113BE  B4D8               	btfsc	status,2,c
  7114  0113C0  D013               	goto	l17638
  7115                           
  7116                           ; BSR set to: 2
  7117  0113C2  0E03               	movlw	3
  7118  0113C4  0101               	movlb	1	; () banked
  7119  0113C6  199B               	xorwf	_H& (0+255),w,b
  7120  0113C8  B4D8               	btfsc	status,2,c
  7121  0113CA  D00E               	goto	l17638
  7122                           
  7123                           ; BSR set to: 1
  7124                           ;main.c: 443:     V.enter = 0;
  7125  0113CC  0102               	movlb	2	; () banked
  7126  0113CE  6BB1               	clrf	(_V+170)& (0+255),b	;volatile
  7127                           
  7128                           ; BSR set to: 2
  7129                           ;main.c: 444:     V.screen = ~V.screen;
  7130  0113D0  A1A0               	btfss	(_V+153)& (0+255),0,b	;volatile
  7131  0113D2  D002               	goto	u17170
  7132  0113D4  0E01               	movlw	1
  7133  0113D6  D001               	goto	u17176
  7134  0113D8                     u17170:
  7135  0113D8  0E00               	movlw	0
  7136  0113DA                     u17176:
  7137  0113DA  0AFF               	xorlw	255
  7138  0113DC  6E35               	movwf	(btemp+11)^0,c
  7139  0113DE  51A0               	movf	(_V+153)& (0+255),w,b	;volatile
  7140  0113E0  1835               	xorwf	(btemp+11)^0,w,c
  7141  0113E2  0BFE               	andlw	-2
  7142  0113E4  1835               	xorwf	(btemp+11)^0,w,c
  7143  0113E6  6FA0               	movwf	(_V+153)& (0+255),b	;volatile
  7144  0113E8                     l17638:
  7145                           
  7146                           ;main.c: 446:    set_vterm(V.screen);
  7147  0113E8  0102               	movlb	2	; () banked
  7148  0113EA  A1A0               	btfss	(_V+153)& (0+255),0,b	;volatile
  7149  0113EC  D002               	goto	u17180
  7150  0113EE  0E01               	movlw	1
  7151  0113F0  D001               	goto	u17186
  7152  0113F2                     u17180:
  7153  0113F2  0E00               	movlw	0
  7154  0113F4                     u17186:
  7155  0113F4  6EE6               	movwf	postinc1,c
  7156  0113F6  EC76  F012         	call	_set_vterm	;wreg free
  7157                           
  7158                           ;main.c: 447:    update_lcd(V.screen);
  7159  0113FA  0102               	movlb	2	; () banked
  7160  0113FC  A1A0               	btfss	(_V+153)& (0+255),0,b	;volatile
  7161  0113FE  D002               	goto	u17190
  7162  011400  0E01               	movlw	1
  7163  011402  D001               	goto	u17196
  7164  011404                     u17190:
  7165  011404  0E00               	movlw	0
  7166  011406                     u17196:
  7167  011406  6EE6               	movwf	postinc1,c
  7168  011408  EC6B  F0F4         	call	_update_lcd	;wreg free
  7169                           
  7170                           ;main.c: 448:    display_history();
  7171  01140C  EC6C  F0D7         	call	_display_history	;wreg free
  7172                           
  7173                           ;main.c: 450:    wait_lcd_done();
  7174  011410  ECF4  F011         	call	_wait_lcd_done	;wreg free
  7175                           
  7176                           ; BSR set to: 0
  7177                           ;main.c: 451:    set_dac_a(3.333);
  7178  011414  0EDF               	movlw	223
  7179  011416  6EE6               	movwf	postinc1,c
  7180  011418  0E4F               	movlw	79
  7181  01141A  6EE6               	movwf	postinc1,c
  7182  01141C  0E55               	movlw	85
  7183  01141E  6EE6               	movwf	postinc1,c
  7184  011420  0E40               	movlw	64
  7185  011422  6EE6               	movwf	postinc1,c
  7186  011424  EC56  F00F         	call	_set_dac_a	;wreg free
  7187                           
  7188                           ;main.c: 452:    set_dac_b(6.666);
  7189  011428  0EDF               	movlw	223
  7190  01142A  6EE6               	movwf	postinc1,c
  7191  01142C  0E4F               	movlw	79
  7192  01142E  6EE6               	movwf	postinc1,c
  7193  011430  0ED5               	movlw	213
  7194  011432  6EE6               	movwf	postinc1,c
  7195  011434  0E40               	movlw	64
  7196  011436  6EE6               	movwf	postinc1,c
  7197  011438  EC3C  F00F         	call	_set_dac_b	;wreg free
  7198                           
  7199                           ;main.c: 453:    set_dac();
  7200  01143C  EC3B  F002         	call	_set_dac	;wreg free
  7201  011440                     l17652:
  7202                           
  7203                           ;main.c: 459:   check_help(V.flipper);
  7204  011440  0102               	movlb	2	; () banked
  7205  011442  51AF               	movf	(_V+168)& (0+255),w,b	;volatile
  7206  011444  6EE6               	movwf	postinc1,c
  7207  011446  EC66  F0E8         	call	_check_help	;wreg free
  7208                           
  7209                           ;main.c: 461:   if (V.enter) {
  7210  01144A  0102               	movlb	2	; () banked
  7211  01144C  51B1               	movf	(_V+170)& (0+255),w,b	;volatile
  7212  01144E  B4D8               	btfsc	status,2,c
  7213  011450  D062               	goto	l1501
  7214                           
  7215                           ; BSR set to: 2
  7216                           ;main.c: 462:    V.enter = 0;
  7217  011452  6BB1               	clrf	(_V+170)& (0+255),b	;volatile
  7218                           
  7219                           ;main.c: 463:    V.calib = 0;
  7220  011454  6BB0               	clrf	(_V+169)& (0+255),b	;volatile
  7221                           
  7222                           ; BSR set to: 2
  7223                           ;main.c: 464:    inp_index += 3;
  7224                           ;stkvar	_inp_index @ sp[(-17)+11]
  7225  011456  0EFA               	movlw	-6
  7226  011458  006F FF8C  F02A    	movff	plusw1,btemp
  7227  01145E  0E03               	movlw	3
  7228  011460  262A               	addwf	btemp^0,f,c
  7229  011462  0EFA               	movlw	-6
  7230  011464  0060  F0AB  FFE3   	movff	btemp,plusw1
  7231                           
  7232                           ;main.c: 465:    if (inp_index > 9)
  7233                           ;stkvar	_inp_index @ sp[(-17)+11]
  7234  01146A  0EFA               	movlw	-6
  7235  01146C  006F FF8C  F02A    	movff	plusw1,btemp
  7236  011472  0E09               	movlw	9
  7237  011474  642A               	cpfsgt	btemp^0,c
  7238  011476  D03A               	goto	l17680
  7239                           
  7240                           ; BSR set to: 2
  7241                           ;main.c: 466:     inp_index = 0;
  7242                           ;stkvar	_inp_index @ sp[(-17)+11]
  7243  011478  0EFA               	movlw	-6
  7244  01147A  6AE3               	clrf	plusw1,c
  7245  01147C  D037               	goto	l17680
  7246  01147E                     l17662:
  7247                           
  7248                           ; BSR set to: 2
  7249                           ;main.c: 469:     i = C_BATT;
  7250                           ;stkvar	_i @ sp[(-17)+14]
  7251  01147E  0EFD               	movlw	-3
  7252  011480  6AE3               	clrf	plusw1,c
  7253                           
  7254                           ; BSR set to: 2
  7255                           ;main.c: 470:     j = C_PV;
  7256                           ;stkvar	_j @ sp[(-17)+13]
  7257  011482  0EFC               	movlw	-4
  7258  011484  6AE3               	clrf	plusw1,c
  7259  011486  2AE3               	incf	plusw1,f,c
  7260                           
  7261                           ; BSR set to: 2
  7262                           ;main.c: 471:     k = V_CC;
  7263                           ;stkvar	_k @ sp[(-17)+12]
  7264  011488  0EFB               	movlw	-5
  7265  01148A  6AE3               	clrf	plusw1,c
  7266  01148C  82E3               	bsf	plusw1,1,c
  7267                           
  7268                           ;main.c: 472:     break;
  7269  01148E  D043               	goto	l1501
  7270  011490                     l17668:
  7271                           
  7272                           ; BSR set to: 2
  7273                           ;main.c: 474:     i = V_BAT;
  7274                           ;stkvar	_i @ sp[(-17)+14]
  7275  011490  0EFD               	movlw	-3
  7276  011492  6AE3               	clrf	plusw1,c
  7277  011494  84E3               	bsf	plusw1,2,c
  7278                           
  7279                           ;main.c: 475:     j = V_PV;
  7280                           ;stkvar	_j @ sp[(-17)+13]
  7281  011496  0EFC               	movlw	-4
  7282  011498  6AE3               	clrf	plusw1,c
  7283  01149A  80E3               	bsf	plusw1,0,c
  7284  01149C  84E3               	bsf	plusw1,2,c	;indir
  7285                           
  7286                           ;main.c: 476:     k = V_CBUS;
  7287                           ;stkvar	_k @ sp[(-17)+12]
  7288  01149E  0EFB               	movlw	-5
  7289  0114A0  6AE3               	clrf	plusw1,c
  7290  0114A2  82E3               	bsf	plusw1,1,c
  7291  0114A4  84E3               	bsf	plusw1,2,c	;indir
  7292                           
  7293                           ;main.c: 477:     break;
  7294  0114A6  D037               	goto	l1501
  7295  0114A8                     l17670:
  7296                           
  7297                           ; BSR set to: 2
  7298                           ;main.c: 479:     i = V_BBAT;
  7299                           ;stkvar	_i @ sp[(-17)+14]
  7300  0114A8  0EFD               	movlw	-3
  7301  0114AA  6AE3               	clrf	plusw1,c
  7302  0114AC  82E3               	bsf	plusw1,1,c
  7303  0114AE  86E3               	bsf	plusw1,3,c	;indir
  7304                           
  7305                           ; BSR set to: 2
  7306                           ;main.c: 480:     j = V_TEMP;
  7307  0114B0  0E0B               	movlw	11
  7308  0114B2  6E35               	movwf	(btemp+11)^0,c
  7309                           
  7310                           ;stkvar	_j @ sp[(-17)+13]
  7311  0114B4  0EFC               	movlw	-4
  7312  0114B6  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  7313                           
  7314                           ; BSR set to: 2
  7315                           ;main.c: 481:     k = V_INVERTER;
  7316                           ;stkvar	_k @ sp[(-17)+12]
  7317  0114BC  0EFB               	movlw	-5
  7318  0114BE  6AE3               	clrf	plusw1,c
  7319  0114C0  84E3               	bsf	plusw1,2,c
  7320  0114C2  86E3               	bsf	plusw1,3,c	;indir
  7321                           
  7322                           ;main.c: 482:     break;
  7323  0114C4  D028               	goto	l1501
  7324  0114C6                     l17676:
  7325                           
  7326                           ; BSR set to: 2
  7327                           ;main.c: 484:     i = V_LIGHT_SENSOR;
  7328  0114C6  0E0D               	movlw	13
  7329  0114C8  6E35               	movwf	(btemp+11)^0,c
  7330                           
  7331                           ;stkvar	_i @ sp[(-17)+14]
  7332  0114CA  0EFD               	movlw	-3
  7333  0114CC  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  7334                           
  7335                           ;main.c: 485:     j = V_LIGHT_SENSOR;
  7336  0114D2  0E0D               	movlw	13
  7337  0114D4  6E35               	movwf	(btemp+11)^0,c
  7338                           
  7339                           ;stkvar	_j @ sp[(-17)+13]
  7340  0114D6  0EFC               	movlw	-4
  7341  0114D8  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  7342                           
  7343                           ;main.c: 486:     k = V_LIGHT_SENSOR;
  7344  0114DE  0E0D               	movlw	13
  7345  0114E0  6E35               	movwf	(btemp+11)^0,c
  7346                           
  7347                           ;stkvar	_k @ sp[(-17)+12]
  7348  0114E2  0EFB               	movlw	-5
  7349  0114E4  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  7350                           
  7351                           ;main.c: 487:     break;
  7352  0114EA  D015               	goto	l1501
  7353  0114EC                     l17680:
  7354                           
  7355                           ; BSR set to: 2
  7356                           ;stkvar	_inp_index @ sp[(-17)+11]
  7357  0114EC  0EFA               	movlw	-6
  7358  0114EE  50E3               	movf	plusw1,w,c
  7359  0114F0  6E34               	movwf	(btemp+10)^0,c
  7360  0114F2  6A35               	clrf	(btemp+11)^0,c
  7361                           
  7362                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7363                           ; Switch size 1, requested type "simple"
  7364                           ; Number of cases is 1, Range of values is 0 to 0
  7365                           ; switch strategies available:
  7366                           ; Name         Instructions Cycles
  7367                           ; simple_byte            4     3 (average)
  7368                           ;	Chosen strategy is simple_byte
  7369  0114F4  5035               	movf	(btemp+11)^0,w,c
  7370  0114F6  0A00               	xorlw	0	; case 0
  7371  0114F8  A4D8               	btfss	status,2,c
  7372  0114FA  D00D               	goto	l1501
  7373                           
  7374                           ; BSR set to: 2
  7375                           ; Switch size 1, requested type "simple"
  7376                           ; Number of cases is 4, Range of values is 0 to 9
  7377                           ; switch strategies available:
  7378                           ; Name         Instructions Cycles
  7379                           ; simple_byte           13     7 (average)
  7380                           ;	Chosen strategy is simple_byte
  7381  0114FC  5034               	movf	(btemp+10)^0,w,c
  7382  0114FE  0A00               	xorlw	0	; case 0
  7383  011500  B4D8               	btfsc	status,2,c
  7384  011502  D7BD               	goto	l17662
  7385  011504  0A03               	xorlw	3	; case 3
  7386  011506  B4D8               	btfsc	status,2,c
  7387  011508  D7C3               	goto	l17668
  7388  01150A  0A05               	xorlw	5	; case 6
  7389  01150C  B4D8               	btfsc	status,2,c
  7390  01150E  D7CC               	goto	l17670
  7391  011510  0A0F               	xorlw	15	; case 9
  7392  011512  B4D8               	btfsc	status,2,c
  7393  011514  D7D8               	goto	l17676
  7394  011516                     l1501:
  7395                           
  7396                           ; BSR set to: 2
  7397                           ;main.c: 496:   if (V.set_sequ) {
  7398  011516  A19F               	btfss	(_V+152)& (0+255),0,b	;volatile
  7399  011518  EF27  F084         	goto	l17528
  7400                           
  7401                           ; BSR set to: 2
  7402                           ;main.c: 497:    if (TimerDone(TMR_INFO)) {
  7403  01151C  0E07               	movlw	7
  7404  01151E  6EE6               	movwf	postinc1,c
  7405  011520  EC6F  F010         	call	_TimerDone	;wreg free
  7406  011524  502A               	movf	btemp^0,w,c
  7407  011526  B4D8               	btfsc	status,2,c
  7408  011528  D00C               	goto	l17690
  7409                           
  7410                           ;main.c: 498:     V.set_sequ = 0;
  7411  01152A  0102               	movlb	2	; () banked
  7412  01152C  919F               	bcf	(_V+152)& (0+255),0,b	;volatile
  7413                           
  7414                           ; BSR set to: 2
  7415                           ;main.c: 499:     set_vterm(0);
  7416  01152E  0E00               	movlw	0
  7417  011530  6EE6               	movwf	postinc1,c
  7418  011532  EC76  F012         	call	_set_vterm	;wreg free
  7419                           
  7420                           ;main.c: 500:     update_lcd(0);
  7421  011536  0E00               	movlw	0
  7422  011538  6EE6               	movwf	postinc1,c
  7423  01153A  EC6B  F0F4         	call	_update_lcd	;wreg free
  7424                           
  7425                           ;main.c: 501:    } else {
  7426  01153E  EF27  F084         	goto	l17528
  7427  011542                     l17690:
  7428                           
  7429                           ;main.c: 502:     set_vterm(2);
  7430  011542  0E02               	movlw	2
  7431  011544  6EE6               	movwf	postinc1,c
  7432  011546  EC76  F012         	call	_set_vterm	;wreg free
  7433                           
  7434                           ;main.c: 503:     update_lcd(2);
  7435  01154A  0E02               	movlw	2
  7436  01154C  6EE6               	movwf	postinc1,c
  7437  01154E  EC6B  F0F4         	call	_update_lcd	;wreg free
  7438  011552  EF27  F084         	goto	l17528
  7439  011556                     __end_of_main:
  7440                           	opt callstack 0
  7441                           
  7442 ;; *************** function _update_hist_data *****************
  7443 ;; Defined at:
  7444 ;;		line 456 in file "daq.c"
  7445 ;; Parameters:    Size  Location     Type
  7446 ;;  mode            1  [STACK] const _Bool 
  7447 ;;  hist            2  [STACK] PTR volatile struct hist
  7448 ;;		 -> C.hist(97), C(320), 
  7449 ;; Auto vars:     Size  Location     Type
  7450 ;;		None
  7451 ;; Return value:  Size  Location     Type
  7452 ;;                  1  [STACK] _Bool 
  7453 ;; Registers used:
  7454 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl
  7455 ;; Tracked objects:
  7456 ;;		On entry : 7/1
  7457 ;;		On exit  : 0/0
  7458 ;;		Unchanged: 0/0
  7459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7460 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7461 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7462 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7463 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7464 ;;Total ram usage:        0 bytes
  7465 ;; Hardware stack levels used:    1
  7466 ;; Hardware stack levels required when called:   15
  7467 ;; This function calls:
  7468 ;;		Nothing
  7469 ;; This function is called by:
  7470 ;;		_main
  7471 ;; This function uses a reentrant model
  7472 ;;
  7473                           
  7474                           	psect	text1
  7475  000FBA                     __ptext1:
  7476                           	opt callstack 0
  7477  000FBA                     _update_hist_data:
  7478                           	opt callstack 15
  7479                           
  7480                           ;daq.c: 456: _Bool update_hist_data(const _Bool mode, volatile hist_type *hist);daq.c: 4
      +                          57: {;daq.c: 458:  if (hist == ((void*)0))
  7481                           ;stkvar	_hist @ sp[(0)+-3]
  7482                           
  7483                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7484                           ;incstack = 0
  7485  000FBA  0EFD               	movlw	-3
  7486  000FBC  006F FF8C  F02A    	movff	plusw1,btemp
  7487  000FC2  0EFE               	movlw	-2
  7488  000FC4  50E3               	movf	plusw1,w,c
  7489  000FC6  102A               	iorwf	btemp^0,w,c
  7490  000FC8  A4D8               	btfss	status,2,c
  7491  000FCA  D002               	goto	l14124
  7492  000FCC                     u13330:
  7493                           
  7494                           ;daq.c: 459:   return 0;
  7495  000FCC  0E00               	movlw	0
  7496  000FCE  D01A               	goto	L3
  7497  000FD0                     l14124:
  7498                           
  7499                           ;daq.c: 461:  if (mode) {
  7500                           ;stkvar	_mode @ sp[(0)+-1]
  7501  000FD0  0EFF               	movlw	-1
  7502  000FD2  50E3               	movf	plusw1,w,c
  7503  000FD4  B4D8               	btfsc	status,2,c
  7504  000FD6  D018               	goto	l14136
  7505                           
  7506                           ;daq.c: 462:   if (R.hist_save) {
  7507  000FD8  0101               	movlb	1	; () banked
  7508  000FDA  A197               	btfss	(_R+151)& (0+255),0,b	;volatile
  7509  000FDC  D7F7               	goto	u13330
  7510                           
  7511                           ; BSR set to: 1
  7512                           ;daq.c: 463:    R.H = *hist;
  7513                           ;stkvar	_hist @ sp[(0)+-3]
  7514  000FDE  0EFD               	movlw	-3
  7515  000FE0  006F FF8F FFD9     	movff	plusw1,fsr2l
  7516  000FE6  0EFE               	movlw	-2
  7517  000FE8  006F FF8F FFDA     	movff	plusw1,fsr2h
  7518  000FEE  EE00  F136         	lfsr	0,_R+54	;volatile
  7519  000FF2  0E60               	movlw	96
  7520  000FF4                     u13361:
  7521  000FF4  006F FF6F FFEB     	movff	plusw2,plusw0
  7522  000FFA  06E8               	decf	wreg,f,c
  7523  000FFC  E2FB               	bc	u13361
  7524                           
  7525                           ; BSR set to: 1
  7526                           ;daq.c: 464:    if (R.hist_update) {
  7527  000FFE  A397               	btfss	(_R+151)& (0+255),1,b	;volatile
  7528  001000  D7E5               	goto	u13330
  7529                           
  7530                           ; BSR set to: 1
  7531                           ;daq.c: 465:     return 1;
  7532  001002  0E01               	movlw	1
  7533  001004                     L3:
  7534  001004  6E2A               	movwf	btemp^0,c
  7535  001006  D013               	goto	l2096
  7536  001008                     l14136:
  7537                           
  7538                           ;daq.c: 469:   *hist = R.H;
  7539  001008  EE20  F136         	lfsr	2,_R+54	;volatile
  7540                           
  7541                           ;stkvar	_hist @ sp[(0)+-3]
  7542  00100C  0EFD               	movlw	-3
  7543  00100E  006F FF8F FFE9     	movff	plusw1,fsr0l
  7544  001014  0EFE               	movlw	-2
  7545  001016  006F FF8F FFEA     	movff	plusw1,fsr0h
  7546  00101C  0E60               	movlw	96
  7547  00101E                     u13381:
  7548  00101E  006F FF6F FFEB     	movff	plusw2,plusw0
  7549  001024  06E8               	decf	wreg,f,c
  7550  001026  E2FB               	bc	u13381
  7551                           
  7552                           ;daq.c: 470:   R.hist_save = 1;
  7553  001028  0101               	movlb	1	; () banked
  7554  00102A  8197               	bsf	(_R+151)& (0+255),0,b	;volatile
  7555  00102C  D7CF               	goto	u13330
  7556  00102E                     l2096:
  7557                           
  7558                           ; _update_hist_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
  7559  00102E  52E5               	movf	postdec1,f,c
  7560  001030  52E5               	movf	postdec1,f,c
  7561  001032  52E5               	movf	postdec1,f,c
  7562  001034  0012               	return		;funcret
  7563  001036                     __end_of_update_hist_data:
  7564                           	opt callstack 0
  7565                           
  7566 ;; *************** function _update_cal_data *****************
  7567 ;; Defined at:
  7568 ;;		line 437 in file "daq.c"
  7569 ;; Parameters:    Size  Location     Type
  7570 ;;		None
  7571 ;; Auto vars:     Size  Location     Type
  7572 ;;		None
  7573 ;; Return value:  Size  Location     Type
  7574 ;;                  1  [STACK] void 
  7575 ;; Registers used:
  7576 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0
  7577 ;; Tracked objects:
  7578 ;;		On entry : 0/39
  7579 ;;		On exit  : 3F/1
  7580 ;;		Unchanged: 0/0
  7581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7582 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7583 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7584 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7585 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7586 ;;Total ram usage:        0 bytes
  7587 ;; Hardware stack levels used:    1
  7588 ;; Hardware stack levels required when called:   15
  7589 ;; This function calls:
  7590 ;;		Nothing
  7591 ;; This function is called by:
  7592 ;;		_main
  7593 ;; This function uses a reentrant model
  7594 ;;
  7595                           
  7596                           	psect	text2
  7597  001766                     __ptext2:
  7598                           	opt callstack 0
  7599  001766                     _update_cal_data:
  7600                           	opt callstack 15
  7601                           
  7602                           ;daq.c: 439:  R = r_cal;
  7603                           
  7604                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7605                           ;incstack = 0
  7606  001766  EE21  F040         	lfsr	2,_r_cal
  7607  00176A  EE00  F100         	lfsr	0,_R	;volatile
  7608  00176E  0E9A               	movlw	154
  7609  001770                     u13301:
  7610  001770  006F FF7B FFEE     	movff	postinc2,postinc0
  7611  001776  06E8               	decf	wreg,f,c
  7612  001778  E2FB               	bc	u13301
  7613  00177A  0E9B               	movlw	155
  7614  00177C  5ED9               	subwf	fsr2l,f,c
  7615  00177E  5EE9               	subwf	fsr0l,f,c
  7616                           
  7617                           ;daq.c: 440:  if (!R.c_zero_cal) {
  7618  001780  0101               	movlb	1	; () banked
  7619  001782  B597               	btfsc	(_R+151)& (0+255),2,b	;volatile
  7620  001784  D008               	goto	l14114
  7621                           
  7622                           ; BSR set to: 1
  7623                           ;daq.c: 441:   R.n_offset[0] = 3938;
  7624  001786  0E0F               	movlw	15
  7625  001788  6F27               	movwf	(_R+39)& (0+255),b	;volatile
  7626  00178A  0E62               	movlw	98
  7627  00178C  6F26               	movwf	(_R+38)& (0+255),b	;volatile
  7628                           
  7629                           ;daq.c: 442:   R.n_offset[1] = 4004;
  7630  00178E  0E0F               	movlw	15
  7631  001790  6F29               	movwf	(_R+41)& (0+255),b	;volatile
  7632  001792  0EA4               	movlw	164
  7633  001794  6F28               	movwf	(_R+40)& (0+255),b	;volatile
  7634  001796                     l14114:
  7635                           
  7636                           ; BSR set to: 1
  7637                           ;daq.c: 446:  if (!R.c_scale_cal) {
  7638  001796  B797               	btfsc	(_R+151)& (0+255),3,b	;volatile
  7639  001798  0012               	return	
  7640                           
  7641                           ; BSR set to: 1
  7642                           ;daq.c: 447:   R.n_scalar[0] = 0.0862000;
  7643  00179A  0EA0               	movlw	160
  7644  00179C  6F2A               	movwf	(_R+42)& (0+255),b	;volatile
  7645  00179E  0E89               	movlw	137
  7646  0017A0  6F2B               	movwf	(_R+43)& (0+255),b	;volatile
  7647  0017A2  0EB0               	movlw	176
  7648  0017A4  6F2C               	movwf	(_R+44)& (0+255),b	;volatile
  7649  0017A6  0E3D               	movlw	61
  7650  0017A8  6F2D               	movwf	(_R+45)& (0+255),b	;volatile
  7651                           
  7652                           ;daq.c: 448:   R.n_scalar[1] = 0.0361010;
  7653  0017AA  0EA4               	movlw	164
  7654  0017AC  6F2E               	movwf	(_R+46)& (0+255),b	;volatile
  7655  0017AE  0EDE               	movlw	222
  7656  0017B0  6F2F               	movwf	(_R+47)& (0+255),b	;volatile
  7657  0017B2  0E13               	movlw	19
  7658  0017B4  6F30               	movwf	(_R+48)& (0+255),b	;volatile
  7659  0017B6  0E3D               	movlw	61
  7660  0017B8  6F31               	movwf	(_R+49)& (0+255),b	;volatile
  7661                           
  7662                           ; BSR set to: 1
  7663                           ; _update_cal_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
  7664  0017BA  0012               	return		;funcret
  7665  0017BC                     __end_of_update_cal_data:
  7666                           	opt callstack 0
  7667                           
  7668 ;; *************** function _static_soc *****************
  7669 ;; Defined at:
  7670 ;;		line 118 in file "mbmc.c"
  7671 ;; Parameters:    Size  Location     Type
  7672 ;;		None
  7673 ;; Auto vars:     Size  Location     Type
  7674 ;;		None
  7675 ;; Return value:  Size  Location     Type
  7676 ;;                  1  [STACK] void 
  7677 ;; Registers used:
  7678 ;;		wreg, fsr2l, fsr2h
  7679 ;; Tracked objects:
  7680 ;;		On entry : 0/1
  7681 ;;		On exit  : 0/0
  7682 ;;		Unchanged: 0/0
  7683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7684 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7685 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7686 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7687 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7688 ;;Total ram usage:        0 bytes
  7689 ;; Hardware stack levels used:    1
  7690 ;; Hardware stack levels required when called:   15
  7691 ;; This function calls:
  7692 ;;		Nothing
  7693 ;; This function is called by:
  7694 ;;		_main
  7695 ;; This function uses a reentrant model
  7696 ;;
  7697                           
  7698                           	psect	text3
  7699  001658                     __ptext3:
  7700                           	opt callstack 0
  7701  001658                     _static_soc:
  7702                           	opt callstack 15
  7703                           
  7704                           ;mbmc.c: 120:  C.runtime = 120;
  7705                           
  7706                           ; BSR set to: 1
  7707                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7708                           ;incstack = 0
  7709  001658  0E78               	movlw	120
  7710  00165A  006F FFA0  F9B3    	movff	wreg,_C+180	;volatile
  7711  001660  0E00               	movlw	0
  7712  001662  006F FFA0  F9B4    	movff	wreg,_C+181	;volatile
  7713                           
  7714                           ;mbmc.c: 121:  C.soc = 100;
  7715  001668  0E64               	movlw	100
  7716  00166A  006F FFA0  F9B5    	movff	wreg,_C+182	;volatile
  7717  001670  0E00               	movlw	0
  7718  001672  006F FFA0  F9B6    	movff	wreg,_C+183	;volatile
  7719                           
  7720                           ;mbmc.c: 122:  C.dynamic_ah = C.bank_ah;
  7721  001678  EE22  F18B         	lfsr	2,_C+140	;volatile
  7722  00167C  006F FF78  F98F    	movff	postinc2,_C+144	;volatile
  7723  001682  006F FF78  F990    	movff	postinc2,_C+145	;volatile
  7724  001688  006F FF78  F991    	movff	postinc2,_C+146	;volatile
  7725  00168E  006F FF74  F992    	movff	postdec2,_C+147	;volatile
  7726                           
  7727                           ;mbmc.c: 123:  C.dynamic_ah_adj = C.dynamic_ah;
  7728  001694  EE22  F18F         	lfsr	2,_C+144	;volatile
  7729  001698  006F FF78  F99B    	movff	postinc2,_C+156	;volatile
  7730  00169E  006F FF78  F99C    	movff	postinc2,_C+157	;volatile
  7731  0016A4  006F FF78  F99D    	movff	postinc2,_C+158	;volatile
  7732  0016AA  006F FF74  F99E    	movff	postdec2,_C+159	;volatile
  7733                           
  7734                           ; _static_soc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  7735  0016B0  0012               	return		;funcret
  7736  0016B2                     __end_of_static_soc:
  7737                           	opt callstack 0
  7738                           
  7739 ;; *************** function _start_switch_handler *****************
  7740 ;; Defined at:
  7741 ;;		line 125 in file "dio.c"
  7742 ;; Parameters:    Size  Location     Type
  7743 ;;		None
  7744 ;; Auto vars:     Size  Location     Type
  7745 ;;		None
  7746 ;; Return value:  Size  Location     Type
  7747 ;;                  1  [STACK] void 
  7748 ;; Registers used:
  7749 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
  7750 ;; Tracked objects:
  7751 ;;		On entry : 0/0
  7752 ;;		On exit  : 3F/39
  7753 ;;		Unchanged: 0/0
  7754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7755 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7756 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7758 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7759 ;;Total ram usage:        0 bytes
  7760 ;; Hardware stack levels used:    1
  7761 ;; Hardware stack levels required when called:   16
  7762 ;; This function calls:
  7763 ;;		_INT1_SetInterruptHandler
  7764 ;; This function is called by:
  7765 ;;		_main
  7766 ;; This function uses a reentrant model
  7767 ;;
  7768                           
  7769                           	psect	text4
  7770  002470                     __ptext4:
  7771                           	opt callstack 0
  7772  002470                     _start_switch_handler:
  7773                           	opt callstack 14
  7774                           
  7775                           ;dio.c: 127:  (PIE5bits.INT1IE = 0);
  7776                           
  7777                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7778                           ;incstack = 0
  7779  002470  0139               	movlb	57	; () banked
  7780  002472  9195               	bcf	149,0,b	;volatile
  7781                           
  7782                           ; BSR set to: 57
  7783                           ;dio.c: 128:  INT1_SetInterruptHandler(switch_handler);
  7784  002474  0E36               	movlw	low _switch_handler
  7785  002476  6EE6               	movwf	postinc1,c
  7786  002478  0EEE               	movlw	high _switch_handler
  7787  00247A  6EE6               	movwf	postinc1,c
  7788  00247C  0E01               	movlw	low (_switch_handler shr (0+16))
  7789  00247E  6EE6               	movwf	postinc1,c
  7790  002480  ECFB  F010         	call	_INT1_SetInterruptHandler	;wreg free
  7791                           
  7792                           ;dio.c: 129:  S.button[SNULL].sw = SW_INVALID;
  7793  002484  0E02               	movlw	2
  7794  002486  0101               	movlb	1	; () banked
  7795  002488  6FC7               	movwf	(_S+35)& (0+255),b	;volatile
  7796                           
  7797                           ; BSR set to: 1
  7798                           ;dio.c: 130:  (PIE5bits.INT1IE = 1);
  7799  00248A  0139               	movlb	57	; () banked
  7800  00248C  8195               	bsf	149,0,b	;volatile
  7801                           
  7802                           ; BSR set to: 57
  7803                           ; _start_switch_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
  7804  00248E  0012               	return		;funcret
  7805  002490                     __end_of_start_switch_handler:
  7806                           	opt callstack 0
  7807                           
  7808 ;; *************** function _srand *****************
  7809 ;; Defined at:
  7810 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/rand.c"
  7811 ;; Parameters:    Size  Location     Type
  7812 ;;  s               2  [STACK] unsigned int 
  7813 ;; Auto vars:     Size  Location     Type
  7814 ;;		None
  7815 ;; Return value:  Size  Location     Type
  7816 ;;                  1  [STACK] void 
  7817 ;; Registers used:
  7818 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+10, btemp+11
  7819 ;; Tracked objects:
  7820 ;;		On entry : 0/0
  7821 ;;		On exit  : 3F/2
  7822 ;;		Unchanged: 0/0
  7823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7825 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7827 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7828 ;;Total ram usage:        0 bytes
  7829 ;; Hardware stack levels used:    1
  7830 ;; Hardware stack levels required when called:   15
  7831 ;; This function calls:
  7832 ;;		Nothing
  7833 ;; This function is called by:
  7834 ;;		_main
  7835 ;; This function uses a reentrant model
  7836 ;;
  7837                           
  7838                           	psect	text5
  7839  001E44                     __ptext5:
  7840                           	opt callstack 0
  7841  001E44                     _srand:
  7842                           	opt callstack 15
  7843                           
  7844                           ;stkvar	_s @ sp[(0)+-2]
  7845                           
  7846                           ; BSR set to: 57
  7847                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7848                           ;incstack = 0
  7849  001E44  0EFE               	movlw	-2
  7850  001E46  50E3               	movf	plusw1,w,c
  7851  001E48  0FFF               	addlw	255
  7852  001E4A  6E34               	movwf	(btemp+10)^0,c
  7853  001E4C  0EFF               	movlw	-1
  7854  001E4E  006F FF8C  F035    	movff	plusw1,btemp+11
  7855  001E54  0EFF               	movlw	255
  7856  001E56  2235               	addwfc	(btemp+11)^0,f,c
  7857  001E58  0060  F0D0  F2DE   	movff	btemp+10,_seed
  7858  001E5E  0060  F0D4  F2DF   	movff	btemp+11,_seed+1
  7859  001E64  0102               	movlb	2	; () banked
  7860  001E66  6BE0               	clrf	(_seed+2)& (0+255),b
  7861  001E68  6BE1               	clrf	(_seed+3)& (0+255),b
  7862  001E6A  6BE2               	clrf	(_seed+4)& (0+255),b
  7863  001E6C  6BE3               	clrf	(_seed+5)& (0+255),b
  7864  001E6E  6BE4               	clrf	(_seed+6)& (0+255),b
  7865  001E70  6BE5               	clrf	(_seed+7)& (0+255),b
  7866                           
  7867                           ; BSR set to: 2
  7868                           ; _srand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize
      +                           = 2, vargsize = 0
  7869  001E72  52E5               	movf	postdec1,f,c
  7870  001E74  52E5               	movf	postdec1,f,c
  7871  001E76  0012               	return		;funcret
  7872  001E78                     __end_of_srand:
  7873                           	opt callstack 0
  7874                           
  7875 ;; *************** function _set_time *****************
  7876 ;; Defined at:
  7877 ;;		line 255 in file "mbmc.c"
  7878 ;; Parameters:    Size  Location     Type
  7879 ;;  t               8  [STACK] long long 
  7880 ;; Auto vars:     Size  Location     Type
  7881 ;;		None
  7882 ;; Return value:  Size  Location     Type
  7883 ;;                  1  [STACK] void 
  7884 ;; Registers used:
  7885 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
  7886 ;; Tracked objects:
  7887 ;;		On entry : 0/1
  7888 ;;		On exit  : 3F/39
  7889 ;;		Unchanged: 0/0
  7890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7891 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7892 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7893 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7894 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7895 ;;Total ram usage:        0 bytes
  7896 ;; Hardware stack levels used:    1
  7897 ;; Hardware stack levels required when called:   15
  7898 ;; This function calls:
  7899 ;;		Nothing
  7900 ;; This function is called by:
  7901 ;;		_main
  7902 ;; This function uses a reentrant model
  7903 ;;
  7904                           
  7905                           	psect	text6
  7906  001DD8                     __ptext6:
  7907                           	opt callstack 0
  7908  001DD8                     _set_time:
  7909                           	opt callstack 15
  7910                           
  7911                           ;mbmc.c: 255: void set_time(time_t t);mbmc.c: 256: {;mbmc.c: 257:  PIE8bits.TMR5IE = 0;
  7912                           
  7913                           ; BSR set to: 2
  7914                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7915                           ;incstack = 0
  7916  001DD8  0139               	movlb	57	; () banked
  7917  001DDA  9D98               	bcf	152,6,b	;volatile
  7918                           
  7919                           ; BSR set to: 57
  7920                           ;mbmc.c: 258:  V.ticks=t;
  7921                           ;stkvar	_t @ sp[(0)+-8]
  7922  001DDC  50E1               	movf	fsr1l,w,c
  7923  001DDE  0FF8               	addlw	-8
  7924  001DE0  6ED9               	movwf	fsr2l,c
  7925  001DE2  50E2               	movf	fsr1h,w,c
  7926  001DE4  6EDA               	movwf	fsr2h,c
  7927  001DE6  0EFF               	movlw	255
  7928  001DE8  22DA               	addwfc	fsr2h,f,c
  7929  001DEA  006F FF78  F288    	movff	postinc2,_V+129	;volatile
  7930  001DF0  006F FF78  F289    	movff	postinc2,_V+130	;volatile
  7931  001DF6  006F FF78  F28A    	movff	postinc2,_V+131	;volatile
  7932  001DFC  006F FF78  F28B    	movff	postinc2,_V+132	;volatile
  7933                           
  7934                           ; BSR set to: 57
  7935                           ;mbmc.c: 259:  PIE8bits.TMR5IE = 1;
  7936  001E02  8D98               	bsf	152,6,b	;volatile
  7937                           
  7938                           ; BSR set to: 57
  7939                           ; _set_time: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
  7940  001E04  0EF8               	movlw	248
  7941  001E06  26E1               	addwf	fsr1l,f,c
  7942  001E08  0EFF               	movlw	255
  7943  001E0A  22E2               	addwfc	fsr1h,f,c
  7944  001E0C  0012               	return		;funcret
  7945  001E0E                     __end_of_set_time:
  7946                           	opt callstack 0
  7947                           
  7948 ;; *************** function _set_hist_flag *****************
  7949 ;; Defined at:
  7950 ;;		line 475 in file "daq.c"
  7951 ;; Parameters:    Size  Location     Type
  7952 ;;		None
  7953 ;; Auto vars:     Size  Location     Type
  7954 ;;		None
  7955 ;; Return value:  Size  Location     Type
  7956 ;;                  1  [STACK] void 
  7957 ;; Registers used:
  7958 ;;		None
  7959 ;; Tracked objects:
  7960 ;;		On entry : 3F/39
  7961 ;;		On exit  : 3F/1
  7962 ;;		Unchanged: 0/0
  7963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7964 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7965 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7967 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7968 ;;Total ram usage:        0 bytes
  7969 ;; Hardware stack levels used:    1
  7970 ;; Hardware stack levels required when called:   15
  7971 ;; This function calls:
  7972 ;;		Nothing
  7973 ;; This function is called by:
  7974 ;;		_main
  7975 ;; This function uses a reentrant model
  7976 ;;
  7977                           
  7978                           	psect	text7
  7979  002716                     __ptext7:
  7980                           	opt callstack 0
  7981  002716                     _set_hist_flag:
  7982                           	opt callstack 15
  7983                           
  7984                           ;daq.c: 477:  R.hist_update=1;
  7985                           
  7986                           ; BSR set to: 57
  7987                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7988                           ;incstack = 0
  7989  002716  0101               	movlb	1	; () banked
  7990  002718  8397               	bsf	(_R+151)& (0+255),1,b	;volatile
  7991                           
  7992                           ; BSR set to: 1
  7993                           ; _set_hist_flag: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  7994  00271A  0012               	return		;funcret
  7995  00271C                     __end_of_set_hist_flag:
  7996                           	opt callstack 0
  7997                           
  7998 ;; *************** function _set_dac_b *****************
  7999 ;; Defined at:
  8000 ;;		line 308 in file "daq.c"
  8001 ;; Parameters:    Size  Location     Type
  8002 ;;  voltage         4  [STACK] const float 
  8003 ;; Auto vars:     Size  Location     Type
  8004 ;;		None
  8005 ;; Return value:  Size  Location     Type
  8006 ;;                  2  [STACK] unsigned short 
  8007 ;; Registers used:
  8008 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
  8009 ;; Tracked objects:
  8010 ;;		On entry : 0/0
  8011 ;;		On exit  : 0/0
  8012 ;;		Unchanged: 0/0
  8013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8014 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8015 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8017 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8018 ;;Total ram usage:        0 bytes
  8019 ;; Hardware stack levels used:    1
  8020 ;; Hardware stack levels required when called:   17
  8021 ;; This function calls:
  8022 ;;		_convert_dac_raw
  8023 ;; This function is called by:
  8024 ;;		_main
  8025 ;; This function uses a reentrant model
  8026 ;;
  8027                           
  8028                           	psect	text8
  8029  001E78                     __ptext8:
  8030                           	opt callstack 0
  8031  001E78                     _set_dac_b:
  8032                           	opt callstack 13
  8033                           
  8034                           ;daq.c: 308: uint16_t set_dac_b(const float voltage);daq.c: 309: {;daq.c: 310:  R.raw_da
      +                          c[1] = convert_dac_raw(voltage);
  8035                           ;stkvar	_voltage @ sp[(0)+-4]
  8036                           
  8037                           ; BSR set to: 1
  8038                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8039                           ;incstack = 0
  8040  001E78  0EFC               	movlw	-4
  8041  001E7A  006F FF8F FFE6     	movff	plusw1,postinc1
  8042  001E80  006F FF8F FFE6     	movff	plusw1,postinc1
  8043  001E86  006F FF8F FFE6     	movff	plusw1,postinc1
  8044  001E8C  006F FF8F FFE6     	movff	plusw1,postinc1
  8045  001E92  EC17  F0FA         	call	_convert_dac_raw	;wreg free
  8046  001E96  0060  F0A8  F122   	movff	btemp,_R+34	;volatile
  8047  001E9C  0060  F0AC  F123   	movff	btemp+1,_R+35	;volatile
  8048                           
  8049                           ; _set_dac_b: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, arg
      +                          size = 4, vargsize = 0
  8050                           
  8051                           ;daq.c: 311:  return R.raw_dac[1];;	Return value of _set_dac_b is never used
  8052  001EA2  52E5               	movf	postdec1,f,c
  8053  001EA4  52E5               	movf	postdec1,f,c
  8054  001EA6  52E5               	movf	postdec1,f,c
  8055  001EA8  52E5               	movf	postdec1,f,c
  8056  001EAA  0012               	return		;funcret
  8057  001EAC                     __end_of_set_dac_b:
  8058                           	opt callstack 0
  8059                           
  8060 ;; *************** function _set_dac_a *****************
  8061 ;; Defined at:
  8062 ;;		line 299 in file "daq.c"
  8063 ;; Parameters:    Size  Location     Type
  8064 ;;  voltage         4  [STACK] const float 
  8065 ;; Auto vars:     Size  Location     Type
  8066 ;;		None
  8067 ;; Return value:  Size  Location     Type
  8068 ;;                  2  [STACK] unsigned short 
  8069 ;; Registers used:
  8070 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
  8071 ;; Tracked objects:
  8072 ;;		On entry : 3F/0
  8073 ;;		On exit  : 0/0
  8074 ;;		Unchanged: 0/0
  8075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8076 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8077 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8078 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8079 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8080 ;;Total ram usage:        0 bytes
  8081 ;; Hardware stack levels used:    1
  8082 ;; Hardware stack levels required when called:   17
  8083 ;; This function calls:
  8084 ;;		_convert_dac_raw
  8085 ;; This function is called by:
  8086 ;;		_main
  8087 ;; This function uses a reentrant model
  8088 ;;
  8089                           
  8090                           	psect	text9
  8091  001EAC                     __ptext9:
  8092                           	opt callstack 0
  8093  001EAC                     _set_dac_a:
  8094                           	opt callstack 13
  8095                           
  8096                           ;daq.c: 299: uint16_t set_dac_a(const float voltage);daq.c: 300: {;daq.c: 301:  R.raw_da
      +                          c[0] = convert_dac_raw(voltage);
  8097                           ;stkvar	_voltage @ sp[(0)+-4]
  8098                           
  8099                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8100                           ;incstack = 0
  8101  001EAC  0EFC               	movlw	-4
  8102  001EAE  006F FF8F FFE6     	movff	plusw1,postinc1
  8103  001EB4  006F FF8F FFE6     	movff	plusw1,postinc1
  8104  001EBA  006F FF8F FFE6     	movff	plusw1,postinc1
  8105  001EC0  006F FF8F FFE6     	movff	plusw1,postinc1
  8106  001EC6  EC17  F0FA         	call	_convert_dac_raw	;wreg free
  8107  001ECA  0060  F0A8  F120   	movff	btemp,_R+32	;volatile
  8108  001ED0  0060  F0AC  F121   	movff	btemp+1,_R+33	;volatile
  8109                           
  8110                           ; _set_dac_a: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, arg
      +                          size = 4, vargsize = 0
  8111                           
  8112                           ;daq.c: 302:  return R.raw_dac[0];;	Return value of _set_dac_a is never used
  8113  001ED6  52E5               	movf	postdec1,f,c
  8114  001ED8  52E5               	movf	postdec1,f,c
  8115  001EDA  52E5               	movf	postdec1,f,c
  8116  001EDC  52E5               	movf	postdec1,f,c
  8117  001EDE  0012               	return		;funcret
  8118  001EE0                     __end_of_set_dac_a:
  8119                           	opt callstack 0
  8120                           
  8121 ;; *************** function _convert_dac_raw *****************
  8122 ;; Defined at:
  8123 ;;		line 281 in file "daq.c"
  8124 ;; Parameters:    Size  Location     Type
  8125 ;;  voltage         4  [STACK] float 
  8126 ;; Auto vars:     Size  Location     Type
  8127 ;;		None
  8128 ;; Return value:  Size  Location     Type
  8129 ;;                  2  [STACK] unsigned short 
  8130 ;; Registers used:
  8131 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
  8132 ;; Tracked objects:
  8133 ;;		On entry : 0/0
  8134 ;;		On exit  : 0/0
  8135 ;;		Unchanged: 0/0
  8136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8137 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8138 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8140 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8141 ;;Total ram usage:        0 bytes
  8142 ;; Hardware stack levels used:    1
  8143 ;; Hardware stack levels required when called:   16
  8144 ;; This function calls:
  8145 ;;		___fldiv
  8146 ;;		___flge
  8147 ;;		___fltol
  8148 ;; This function is called by:
  8149 ;;		_set_dac_a
  8150 ;;		_set_dac_b
  8151 ;; This function uses a reentrant model
  8152 ;;
  8153                           
  8154                           	psect	text10
  8155  01F42E                     __ptext10:
  8156                           	opt callstack 0
  8157  01F42E                     _convert_dac_raw:
  8158                           	opt callstack 13
  8159                           
  8160                           ;daq.c: 281: static uint16_t convert_dac_raw(float voltage);daq.c: 282: {;daq.c: 286:  i
      +                          f (voltage < 0.001)
  8161                           
  8162                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8163                           ;incstack = 0
  8164  01F42E  0E6F               	movlw	111
  8165  01F430  6EE6               	movwf	postinc1,c
  8166  01F432  0E12               	movlw	18
  8167  01F434  6EE6               	movwf	postinc1,c
  8168  01F436  0E83               	movlw	131
  8169  01F438  6EE6               	movwf	postinc1,c
  8170  01F43A  0E3A               	movlw	58
  8171  01F43C  6EE6               	movwf	postinc1,c
  8172                           
  8173                           ;stkvar	_voltage @ sp[(-4)+-4]
  8174  01F43E  0EF8               	movlw	-8
  8175  01F440  006F FF8F FFE6     	movff	plusw1,postinc1
  8176  01F446  006F FF8F FFE6     	movff	plusw1,postinc1
  8177  01F44C  006F FF8F FFE6     	movff	plusw1,postinc1
  8178  01F452  006F FF8F FFE6     	movff	plusw1,postinc1
  8179  01F458  EC09  F0F3         	call	___flge	;wreg free
  8180  01F45C  B02A               	btfsc	btemp& (0+255),0,c
  8181  01F45E  D018               	goto	l13648
  8182                           
  8183                           ;daq.c: 287:   voltage = 0.001;
  8184  01F460  0E6F               	movlw	111
  8185  01F462  6E32               	movwf	(btemp+8)^0,c
  8186  01F464  0E12               	movlw	18
  8187  01F466  6E33               	movwf	(btemp+9)^0,c
  8188  01F468  0E83               	movlw	131
  8189  01F46A  6E34               	movwf	(btemp+10)^0,c
  8190  01F46C  0E3A               	movlw	58
  8191  01F46E  6E35               	movwf	(btemp+11)^0,c
  8192                           
  8193                           ;stkvar	_voltage @ sp[(0)+-4]
  8194  01F470  0EFC               	movlw	-4
  8195  01F472  0060  F0CB  FFE3   	movff	btemp+8,plusw1
  8196  01F478  0EFD               	movlw	-3
  8197  01F47A  0060  F0CF  FFE3   	movff	btemp+9,plusw1
  8198  01F480  0EFE               	movlw	-2
  8199  01F482  0060  F0D3  FFE3   	movff	btemp+10,plusw1
  8200  01F488  0EFF               	movlw	-1
  8201  01F48A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  8202  01F490                     l13648:
  8203                           
  8204                           ;daq.c: 288:  if (voltage > 10.0)
  8205                           ;stkvar	_voltage @ sp[(0)+-4]
  8206  01F490  0EFC               	movlw	-4
  8207  01F492  006F FF8F FFE6     	movff	plusw1,postinc1
  8208  01F498  006F FF8F FFE6     	movff	plusw1,postinc1
  8209  01F49E  006F FF8F FFE6     	movff	plusw1,postinc1
  8210  01F4A4  006F FF8F FFE6     	movff	plusw1,postinc1
  8211  01F4AA  0E00               	movlw	0
  8212  01F4AC  6EE6               	movwf	postinc1,c
  8213  01F4AE  0E00               	movlw	0
  8214  01F4B0  6EE6               	movwf	postinc1,c
  8215  01F4B2  0E20               	movlw	32
  8216  01F4B4  6EE6               	movwf	postinc1,c
  8217  01F4B6  0E41               	movlw	65
  8218  01F4B8  6EE6               	movwf	postinc1,c
  8219  01F4BA  EC09  F0F3         	call	___flge	;wreg free
  8220  01F4BE  B02A               	btfsc	btemp& (0+255),0,c
  8221  01F4C0  D018               	goto	l13652
  8222                           
  8223                           ;daq.c: 289:   voltage = 10.0;
  8224  01F4C2  0E00               	movlw	0
  8225  01F4C4  6E32               	movwf	(btemp+8)^0,c
  8226  01F4C6  0E00               	movlw	0
  8227  01F4C8  6E33               	movwf	(btemp+9)^0,c
  8228  01F4CA  0E20               	movlw	32
  8229  01F4CC  6E34               	movwf	(btemp+10)^0,c
  8230  01F4CE  0E41               	movlw	65
  8231  01F4D0  6E35               	movwf	(btemp+11)^0,c
  8232                           
  8233                           ;stkvar	_voltage @ sp[(0)+-4]
  8234  01F4D2  0EFC               	movlw	-4
  8235  01F4D4  0060  F0CB  FFE3   	movff	btemp+8,plusw1
  8236  01F4DA  0EFD               	movlw	-3
  8237  01F4DC  0060  F0CF  FFE3   	movff	btemp+9,plusw1
  8238  01F4E2  0EFE               	movlw	-2
  8239  01F4E4  0060  F0D3  FFE3   	movff	btemp+10,plusw1
  8240  01F4EA  0EFF               	movlw	-1
  8241  01F4EC  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  8242  01F4F2                     l13652:
  8243                           
  8244                           ;daq.c: 293:  return(uint16_t) (voltage / 0.002442);
  8245  01F4F2  0EF6               	movlw	246
  8246  01F4F4  6EE6               	movwf	postinc1,c
  8247  01F4F6  0E09               	movlw	9
  8248  01F4F8  6EE6               	movwf	postinc1,c
  8249  01F4FA  0E20               	movlw	32
  8250  01F4FC  6EE6               	movwf	postinc1,c
  8251  01F4FE  0E3B               	movlw	59
  8252  01F500  6EE6               	movwf	postinc1,c
  8253                           
  8254                           ;stkvar	_voltage @ sp[(-4)+-4]
  8255  01F502  0EF8               	movlw	-8
  8256  01F504  006F FF8F FFE6     	movff	plusw1,postinc1
  8257  01F50A  006F FF8F FFE6     	movff	plusw1,postinc1
  8258  01F510  006F FF8F FFE6     	movff	plusw1,postinc1
  8259  01F516  006F FF8F FFE6     	movff	plusw1,postinc1
  8260  01F51C  EC9E  F0BD         	call	___fldiv	;wreg free
  8261  01F520  0060  F0AB  FFE6   	movff	btemp,postinc1
  8262  01F526  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  8263  01F52C  0060  F0B3  FFE6   	movff	btemp+2,postinc1
  8264  01F532  0060  F0B7  FFE6   	movff	btemp+3,postinc1
  8265  01F538  EC9D  F0F1         	call	___fltol	;wreg free
  8266                           
  8267                           ; _convert_dac_raw: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          4, argsize = 4, vargsize = 0
  8268  01F53C  52E5               	movf	postdec1,f,c
  8269  01F53E  52E5               	movf	postdec1,f,c
  8270  01F540  52E5               	movf	postdec1,f,c
  8271  01F542  52E5               	movf	postdec1,f,c
  8272  01F544  0012               	return		;funcret
  8273  01F546                     __end_of_convert_dac_raw:
  8274                           	opt callstack 0
  8275                           
  8276 ;; *************** function _set_dac *****************
  8277 ;; Defined at:
  8278 ;;		line 257 in file "daq.c"
  8279 ;; Parameters:    Size  Location     Type
  8280 ;;		None
  8281 ;; Auto vars:     Size  Location     Type
  8282 ;;		None
  8283 ;; Return value:  Size  Location     Type
  8284 ;;                  1  [STACK] void 
  8285 ;; Registers used:
  8286 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11
  8287 ;; Tracked objects:
  8288 ;;		On entry : 0/0
  8289 ;;		On exit  : 0/0
  8290 ;;		Unchanged: 0/0
  8291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8292 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8293 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8294 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8295 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8296 ;;Total ram usage:        0 bytes
  8297 ;; Hardware stack levels used:    1
  8298 ;; Hardware stack levels required when called:   16
  8299 ;; This function calls:
  8300 ;;		_SPI1_Exchange8bit
  8301 ;;		_dac_spi_control
  8302 ;; This function is called by:
  8303 ;;		_main
  8304 ;; This function uses a reentrant model
  8305 ;;
  8306                           
  8307                           	psect	text11
  8308  000476                     __ptext11:
  8309                           	opt callstack 0
  8310  000476                     _set_dac:
  8311                           	opt callstack 14
  8312                           
  8313                           ;daq.c: 259:  while (!SPI1STATUSbits.TXBE);
  8314                           
  8315                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8316                           ;incstack = 0
  8317  000476  013D               	movlb	61	; () banked
  8318  000478  AB17               	btfss	23,5,b	;volatile
  8319  00047A  D7FD               	goto	_set_dac
  8320                           
  8321                           ; BSR set to: 61
  8322                           
  8323                           ;daq.c: 260:  do { LATCbits.LATC2 = 1; } while(0);
  8324  00047C  84BC               	bsf	188,2,c	;volatile
  8325                           
  8326                           ; BSR set to: 61
  8327                           
  8328                           ;daq.c: 261:  do { LATCbits.LATC0 = 1; } while(0);
  8329  00047E  80BC               	bsf	188,0,c	;volatile
  8330                           
  8331                           ; BSR set to: 61
  8332                           ;daq.c: 262:  dac_spi_control(1);
  8333  000480  0E01               	movlw	1
  8334  000482  6EE6               	movwf	postinc1,c
  8335  000484  EC1B  F008         	call	_dac_spi_control	;wreg free
  8336                           
  8337                           ;daq.c: 263:  R.max5322_cmd.map.dac0 = R.raw_dac[0]&0xff;
  8338  000488  C120  F124         	movff	_R+32,_R+36	;volatile
  8339                           
  8340                           ;daq.c: 264:  R.max5322_cmd.map.dac1 = (R.raw_dac[0] >> 8) &0xf;
  8341  00048C  EE20  F120         	lfsr	2,_R+32	;volatile
  8342  000490  006F FF78  F034    	movff	postinc2,btemp+10
  8343  000496  006F FF74  F035    	movff	postdec2,btemp+11
  8344  00049C  0060  F0D4  F034   	movff	btemp+11,btemp+10
  8345  0004A2  6A35               	clrf	(btemp+11)^0,c
  8346  0004A4  0E0F               	movlw	15
  8347  0004A6  1634               	andwf	(btemp+10)^0,f,c
  8348  0004A8  0101               	movlb	1	; () banked
  8349  0004AA  5125               	movf	(_R+37)& (0+255),w,b	;volatile
  8350  0004AC  1834               	xorwf	(btemp+10)^0,w,c
  8351  0004AE  0BF0               	andlw	-16
  8352  0004B0  1834               	xorwf	(btemp+10)^0,w,c
  8353  0004B2  6F25               	movwf	(_R+37)& (0+255),b	;volatile
  8354                           
  8355                           ; BSR set to: 1
  8356                           ;daq.c: 265:  R.max5322_cmd.map.cont = 0b0100;
  8357  0004B4  5125               	movf	(_R+37)& (0+255),w,b	;volatile
  8358  0004B6  0B0F               	andlw	-241
  8359  0004B8  0940               	iorlw	64
  8360  0004BA  6F25               	movwf	(_R+37)& (0+255),b	;volatile
  8361                           
  8362                           ; BSR set to: 1
  8363  0004BC  90BF               	bcf	191,0,c	;volatile
  8364                           
  8365                           ; BSR set to: 1
  8366                           ;daq.c: 267:  SPI1_Exchange8bit(R.max5322_cmd.bd[1]);
  8367  0004BE  5125               	movf	(_R+37)& (0+255),w,b	;volatile
  8368  0004C0  6EE6               	movwf	postinc1,c
  8369  0004C2  EC58  F012         	call	_SPI1_Exchange8bit	;wreg free
  8370                           
  8371                           ; BSR set to: 57
  8372                           ;daq.c: 268:  SPI1_Exchange8bit(R.max5322_cmd.bd[0]);
  8373  0004C6  0101               	movlb	1	; () banked
  8374  0004C8  5124               	movf	(_R+36)& (0+255),w,b	;volatile
  8375  0004CA  6EE6               	movwf	postinc1,c
  8376  0004CC  EC58  F012         	call	_SPI1_Exchange8bit	;wreg free
  8377                           
  8378                           ; BSR set to: 57
  8379  0004D0  80BF               	bsf	191,0,c	;volatile
  8380                           
  8381                           ; BSR set to: 57
  8382                           ;daq.c: 270:  R.max5322_cmd.map.dac0 = R.raw_dac[1]&0xff;
  8383  0004D2  C122  F124         	movff	_R+34,_R+36	;volatile
  8384                           
  8385                           ; BSR set to: 57
  8386                           ;daq.c: 271:  R.max5322_cmd.map.dac1 = (R.raw_dac[1] >> 8) &0xf;
  8387  0004D6  EE20  F122         	lfsr	2,_R+34	;volatile
  8388  0004DA  006F FF78  F034    	movff	postinc2,btemp+10
  8389  0004E0  006F FF74  F035    	movff	postdec2,btemp+11
  8390  0004E6  0060  F0D4  F034   	movff	btemp+11,btemp+10
  8391  0004EC  6A35               	clrf	(btemp+11)^0,c
  8392  0004EE  0E0F               	movlw	15
  8393  0004F0  1634               	andwf	(btemp+10)^0,f,c
  8394  0004F2  0101               	movlb	1	; () banked
  8395  0004F4  5125               	movf	(_R+37)& (0+255),w,b	;volatile
  8396  0004F6  1834               	xorwf	(btemp+10)^0,w,c
  8397  0004F8  0BF0               	andlw	-16
  8398  0004FA  1834               	xorwf	(btemp+10)^0,w,c
  8399  0004FC  6F25               	movwf	(_R+37)& (0+255),b	;volatile
  8400                           
  8401                           ; BSR set to: 1
  8402                           ;daq.c: 272:  R.max5322_cmd.map.cont = 0b0101;
  8403  0004FE  5125               	movf	(_R+37)& (0+255),w,b	;volatile
  8404  000500  0B0F               	andlw	-241
  8405  000502  0950               	iorlw	80
  8406  000504  6F25               	movwf	(_R+37)& (0+255),b	;volatile
  8407                           
  8408                           ; BSR set to: 1
  8409  000506  90BF               	bcf	191,0,c	;volatile
  8410                           
  8411                           ; BSR set to: 1
  8412                           ;daq.c: 274:  SPI1_Exchange8bit(R.max5322_cmd.bd[1]);
  8413  000508  5125               	movf	(_R+37)& (0+255),w,b	;volatile
  8414  00050A  6EE6               	movwf	postinc1,c
  8415  00050C  EC58  F012         	call	_SPI1_Exchange8bit	;wreg free
  8416                           
  8417                           ; BSR set to: 57
  8418                           ;daq.c: 275:  SPI1_Exchange8bit(R.max5322_cmd.bd[0]);
  8419  000510  0101               	movlb	1	; () banked
  8420  000512  5124               	movf	(_R+36)& (0+255),w,b	;volatile
  8421  000514  6EE6               	movwf	postinc1,c
  8422  000516  EC58  F012         	call	_SPI1_Exchange8bit	;wreg free
  8423  00051A                     l2033:
  8424  00051A  013D               	movlb	61	; () banked
  8425  00051C  AB17               	btfss	23,5,b	;volatile
  8426  00051E  D7FD               	goto	l2033
  8427                           
  8428                           ; BSR set to: 61
  8429                           
  8430                           ;daq.c: 277:  do { LATFbits.LATF0 = 1; } while(0);
  8431  000520  80BF               	bsf	191,0,c	;volatile
  8432                           
  8433                           ; BSR set to: 61
  8434                           ;daq.c: 278:  dac_spi_control(0);
  8435  000522  0E00               	movlw	0
  8436  000524  6EE6               	movwf	postinc1,c
  8437  000526  EC1B  F008         	call	_dac_spi_control	;wreg free
  8438                           
  8439                           ; _set_dac: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsi
      +                          ze = 0, vargsize = 0
  8440  00052A  0012               	return		;funcret
  8441  00052C                     __end_of_set_dac:
  8442                           	opt callstack 0
  8443                           
  8444 ;; *************** function _dac_spi_control *****************
  8445 ;; Defined at:
  8446 ;;		line 209 in file "daq.c"
  8447 ;; Parameters:    Size  Location     Type
  8448 ;;  set             1  [STACK] _Bool 
  8449 ;; Auto vars:     Size  Location     Type
  8450 ;;		None
  8451 ;; Return value:  Size  Location     Type
  8452 ;;                  1  [STACK] void 
  8453 ;; Registers used:
  8454 ;;		wreg, fsr1l, fsr1h, status,2
  8455 ;; Tracked objects:
  8456 ;;		On entry : 3F/3D
  8457 ;;		On exit  : 0/0
  8458 ;;		Unchanged: 0/0
  8459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8460 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8461 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8462 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8463 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8464 ;;Total ram usage:        0 bytes
  8465 ;; Hardware stack levels used:    1
  8466 ;; Hardware stack levels required when called:   15
  8467 ;; This function calls:
  8468 ;;		Nothing
  8469 ;; This function is called by:
  8470 ;;		_set_dac
  8471 ;; This function uses a reentrant model
  8472 ;;
  8473                           
  8474                           	psect	text12
  8475  001036                     __ptext12:
  8476                           	opt callstack 0
  8477  001036                     _dac_spi_control:
  8478                           	opt callstack 14
  8479                           
  8480                           ;daq.c: 209: void dac_spi_control(_Bool set);daq.c: 210: {;daq.c: 211:  static _Bool ini
      +                          t = 0;;daq.c: 212:  static uint8_t S0, S1, S2, SC, SB;;daq.c: 214:  if (set) {
  8481                           ;stkvar	_set @ sp[(0)+-1]
  8482                           
  8483                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8484                           ;incstack = 0
  8485  001036  0EFF               	movlw	-1
  8486  001038  50E3               	movf	plusw1,w,c
  8487  00103A  B4D8               	btfsc	status,2,c
  8488  00103C  D022               	goto	l13640
  8489                           
  8490                           ;daq.c: 215:   SPI1CON0bits.EN = 0;
  8491  00103E  013D               	movlb	61	; () banked
  8492  001040  9F14               	bcf	20,7,b	;volatile
  8493                           
  8494                           ; BSR set to: 61
  8495                           ;daq.c: 216:   if (!init) {
  8496  001042  5052               	movf	dac_spi_control@init^0,w,c
  8497  001044  A4D8               	btfss	status,2,c
  8498  001046  D011               	goto	l13628
  8499                           
  8500                           ; BSR set to: 61
  8501                           ;daq.c: 217:    init = 1;
  8502  001048  0E01               	movlw	1
  8503  00104A  6E52               	movwf	dac_spi_control@init^0,c
  8504                           
  8505                           ; BSR set to: 61
  8506                           ;daq.c: 218:    S0 = SPI1CON0;
  8507  00104C  006F F450  F0CB    	movff	15636,dac_spi_control@S0	;volatile
  8508                           
  8509                           ; BSR set to: 61
  8510                           ;daq.c: 219:    S1 = SPI1CON1;
  8511  001052  006F F454  F0CA    	movff	15637,dac_spi_control@S1	;volatile
  8512                           
  8513                           ; BSR set to: 61
  8514                           ;daq.c: 220:    S2 = SPI1CON2;
  8515  001058  006F F458  F0C9    	movff	15638,dac_spi_control@S2	;volatile
  8516                           
  8517                           ; BSR set to: 61
  8518                           ;daq.c: 221:    SC = SPI1CLK;
  8519  00105E  006F F470  F0C8    	movff	15644,dac_spi_control@SC	;volatile
  8520                           
  8521                           ; BSR set to: 61
  8522                           ;daq.c: 222:    SB = SPI1BAUD;
  8523  001064  006F F464  F0C7    	movff	15641,dac_spi_control@SB	;volatile
  8524  00106A                     l13628:
  8525                           
  8526                           ; BSR set to: 61
  8527                           ;daq.c: 228:   SPI1CON1 = 0x00;
  8528  00106A  6B15               	clrf	21,b	;volatile
  8529                           
  8530                           ; BSR set to: 61
  8531                           ;daq.c: 229:   SPI1CON1bits.CKE = 1;
  8532  00106C  8D15               	bsf	21,6,b	;volatile
  8533                           
  8534                           ; BSR set to: 61
  8535                           ;daq.c: 230:   SPI1CON1bits.CKP = 0;
  8536  00106E  9B15               	bcf	21,5,b	;volatile
  8537                           
  8538                           ; BSR set to: 61
  8539                           ;daq.c: 231:   SPI1CON1bits.SMP = 0;
  8540  001070  9F15               	bcf	21,7,b	;volatile
  8541                           
  8542                           ;daq.c: 233:   SPI1CON2 = 0x03;
  8543  001072  0E03               	movlw	3
  8544  001074  6F16               	movwf	22,b	;volatile
  8545                           
  8546                           ;daq.c: 235:   SPI1BAUD = 0x0f;
  8547  001076  0E0F               	movlw	15
  8548  001078  6F19               	movwf	25,b	;volatile
  8549                           
  8550                           ; BSR set to: 61
  8551                           ;daq.c: 237:   SPI1CLK = 0x00;
  8552  00107A  6B1C               	clrf	28,b	;volatile
  8553                           
  8554                           ;daq.c: 239:   SPI1CON0 = 0x83;
  8555  00107C  0E83               	movlw	131
  8556  00107E  6F14               	movwf	20,b	;volatile
  8557  001080  D014               	goto	L4
  8558  001082                     l13640:
  8559                           
  8560                           ;daq.c: 242:   if (init) {
  8561  001082  5052               	movf	dac_spi_control@init^0,w,c
  8562  001084  B4D8               	btfsc	status,2,c
  8563  001086  D012               	goto	l2017
  8564                           
  8565                           ;daq.c: 246:    SPI1CON0bits.EN = 0;
  8566  001088  013D               	movlb	61	; () banked
  8567  00108A  9F14               	bcf	20,7,b	;volatile
  8568                           
  8569                           ;daq.c: 247:    SPI1CON1 = S1;
  8570  00108C  0060  F32B  FD15   	movff	dac_spi_control@S1,15637	;volatile
  8571                           
  8572                           ;daq.c: 248:    SPI1CON2 = S2;
  8573  001092  0060  F327  FD16   	movff	dac_spi_control@S2,15638	;volatile
  8574                           
  8575                           ;daq.c: 249:    SPI1CLK = SC;
  8576  001098  0060  F323  FD1C   	movff	dac_spi_control@SC,15644	;volatile
  8577                           
  8578                           ;daq.c: 250:    SPI1BAUD = SB;
  8579  00109E  0060  F31F  FD19   	movff	dac_spi_control@SB,15641	;volatile
  8580                           
  8581                           ;daq.c: 251:    SPI1CON0 = S0;
  8582  0010A4  0060  F32F  FD14   	movff	dac_spi_control@S0,15636	;volatile
  8583  0010AA                     L4:
  8584                           
  8585                           ;daq.c: 252:    SPI1CON0bits.EN = 1;
  8586  0010AA  8F14               	bsf	20,7,b	;volatile
  8587  0010AC                     l2017:
  8588                           
  8589                           ; _dac_spi_control: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          1, argsize = 1, vargsize = 0
  8590  0010AC  52E5               	movf	postdec1,f,c
  8591  0010AE  0012               	return		;funcret
  8592  0010B0                     __end_of_dac_spi_control:
  8593                           	opt callstack 0
  8594                           
  8595 ;; *************** function _read_cal_data *****************
  8596 ;; Defined at:
  8597 ;;		line 370 in file "daq.c"
  8598 ;; Parameters:    Size  Location     Type
  8599 ;;		None
  8600 ;; Auto vars:     Size  Location     Type
  8601 ;;  x               2  [STACK] unsigned short 
  8602 ;;  r_cal_ptr       2  [STACK] PTR unsigned char 
  8603 ;;		 -> r_cal(155), 
  8604 ;;  y               2  [STACK] unsigned short 
  8605 ;;  crcVal_save     1  [STACK] unsigned char 
  8606 ;; Return value:  Size  Location     Type
  8607 ;;                  1  [STACK] _Bool 
  8608 ;; Registers used:
  8609 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, 
      +btemp+11, prodl
  8610 ;; Tracked objects:
  8611 ;;		On entry : 0/39
  8612 ;;		On exit  : 0/0
  8613 ;;		Unchanged: 0/0
  8614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8615 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8616 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8617 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8618 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8619 ;;Total ram usage:        0 bytes
  8620 ;; Hardware stack levels used:    1
  8621 ;; Hardware stack levels required when called:   17
  8622 ;; This function calls:
  8623 ;;		_CRC_8BitDataWrite
  8624 ;;		_CRC_CalculatedResultGet
  8625 ;;		_CRC_Initialize
  8626 ;;		_CRC_IsBusy
  8627 ;;		_CRC_Start
  8628 ;;		_DATAEE_ReadByte
  8629 ;; This function is called by:
  8630 ;;		_main
  8631 ;; This function uses a reentrant model
  8632 ;;
  8633                           
  8634                           	psect	text13
  8635  01D4E2                     __ptext13:
  8636                           	opt callstack 0
  8637  01D4E2                     _read_cal_data:
  8638                           	opt callstack 0
  8639                           
  8640                           ; autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8641  01D4E2  0E07               	movlw	7
  8642  01D4E4  26E1               	addwf	fsr1l,f,c
  8643  01D4E6  0E00               	movlw	0
  8644  01D4E8  22E2               	addwfc	fsr1h,f,c
  8645                           
  8646                           ;daq.c: 372:  uint16_t x = 0, y;
  8647                           ;stkvar	_x @ sp[(-7)+0]
  8648                           
  8649                           ;incstack = 0
  8650  01D4EA  0EF9               	movlw	-7
  8651  01D4EC  6AE3               	clrf	plusw1,c
  8652  01D4EE  0EFA               	movlw	-6
  8653  01D4F0  6AE3               	clrf	plusw1,c
  8654                           
  8655                           ;daq.c: 373:  uint8_t *r_cal_ptr, crcVal_save;;daq.c: 375:  y = sizeof(r_cal);
  8656  01D4F2  0E9B               	movlw	155
  8657  01D4F4  6E34               	movwf	(btemp+10)^0,c
  8658  01D4F6  0E00               	movlw	0
  8659  01D4F8  6E35               	movwf	(btemp+11)^0,c
  8660                           
  8661                           ;stkvar	_y @ sp[(-7)+4]
  8662  01D4FA  0EFD               	movlw	-3
  8663  01D4FC  0060  F0D3  FFE3   	movff	btemp+10,plusw1
  8664  01D502  0EFE               	movlw	-2
  8665  01D504  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  8666                           
  8667                           ;daq.c: 376:  r_cal_ptr = (uint8_t*) & r_cal;
  8668                           ;stkvar	_r_cal_ptr @ sp[(-7)+2]
  8669  01D50A  0E04               	movlw	high _r_cal
  8670  01D50C  6E2A               	movwf	btemp^0,c
  8671  01D50E  0EFC               	movlw	-4
  8672  01D510  0060  F0AB  FFE3   	movff	btemp,plusw1
  8673  01D516  0E40               	movlw	low _r_cal
  8674  01D518  6E2A               	movwf	btemp^0,c
  8675  01D51A  0EFB               	movlw	-5
  8676  01D51C  0060  F0AB  FFE3   	movff	btemp,plusw1
  8677                           
  8678                           ;daq.c: 378:  CRC_Initialize();
  8679  01D522  EC4B  F006         	call	_CRC_Initialize	;wreg free
  8680                           
  8681                           ; BSR set to: 0
  8682                           ;daq.c: 381:  CRC_Start();
  8683  01D526  EC8E  F013         	call	_CRC_Start	;wreg free
  8684  01D52A                     l14074:
  8685                           
  8686                           ;daq.c: 384:   r_cal_ptr[x] = DATAEE_ReadByte(x);
  8687                           ;stkvar	_x @ sp[(-7)+0]
  8688  01D52A  0EF9               	movlw	-7
  8689  01D52C  006F FF8F FFE6     	movff	plusw1,postinc1
  8690  01D532  006F FF8F FFE6     	movff	plusw1,postinc1
  8691  01D538  EC8A  F00F         	call	_DATAEE_ReadByte	;wreg free
  8692                           
  8693                           ;stkvar	_x @ sp[(-7)+0]
  8694  01D53C  0EF9               	movlw	-7
  8695  01D53E  006F FF8C  F034    	movff	plusw1,btemp+10
  8696  01D544  0EFA               	movlw	-6
  8697  01D546  006F FF8C  F035    	movff	plusw1,btemp+11
  8698                           
  8699                           ;stkvar	_r_cal_ptr @ sp[(-7)+2]
  8700  01D54C  0EFB               	movlw	-5
  8701  01D54E  006F FF8C  F032    	movff	plusw1,btemp+8
  8702  01D554  0EFC               	movlw	-4
  8703  01D556  006F FF8C  F033    	movff	plusw1,btemp+9
  8704  01D55C  5034               	movf	(btemp+10)^0,w,c
  8705  01D55E  2432               	addwf	(btemp+8)^0,w,c
  8706  01D560  6ED9               	movwf	fsr2l,c
  8707  01D562  5035               	movf	(btemp+11)^0,w,c
  8708  01D564  2033               	addwfc	(btemp+9)^0,w,c
  8709  01D566  6EDA               	movwf	fsr2h,c
  8710  01D568  0060  F0AB  FFDF   	movff	btemp,indf2
  8711                           
  8712                           ;daq.c: 385:  } while (++x < y);
  8713                           ;stkvar	_y @ sp[(-7)+4]
  8714  01D56E  0EFD               	movlw	-3
  8715  01D570  006F FF8C  F034    	movff	plusw1,btemp+10
  8716  01D576  0EFE               	movlw	-2
  8717  01D578  006F FF8C  F035    	movff	plusw1,btemp+11
  8718                           
  8719                           ;stkvar	_x @ sp[(-7)+0]
  8720  01D57E  0EF9               	movlw	-7
  8721  01D580  50E3               	movf	plusw1,w,c
  8722  01D582  0F01               	addlw	1
  8723  01D584  6E2A               	movwf	btemp^0,c
  8724  01D586  0EF9               	movlw	-7
  8725  01D588  0060  F0AB  FFE3   	movff	btemp,plusw1
  8726  01D58E  6A2A               	clrf	btemp^0,c
  8727  01D590  0EFA               	movlw	-6
  8728  01D592  50E3               	movf	plusw1,w,c
  8729  01D594  202A               	addwfc	btemp^0,w,c
  8730  01D596  6E2A               	movwf	btemp^0,c
  8731  01D598  0EFA               	movlw	-6
  8732  01D59A  0060  F0AB  FFE3   	movff	btemp,plusw1
  8733  01D5A0  0EF9               	movlw	-7
  8734  01D5A2  006F FF8C  F032    	movff	plusw1,btemp+8
  8735  01D5A8  0EFA               	movlw	-6
  8736  01D5AA  006F FF8C  F033    	movff	plusw1,btemp+9
  8737  01D5B0  5034               	movf	(btemp+10)^0,w,c
  8738  01D5B2  5C32               	subwf	(btemp+8)^0,w,c
  8739  01D5B4  5035               	movf	(btemp+11)^0,w,c
  8740  01D5B6  5833               	subwfb	(btemp+9)^0,w,c
  8741  01D5B8  A0D8               	btfss	status,0,c
  8742  01D5BA  D7B7               	goto	l14074
  8743                           
  8744                           ;daq.c: 386:  crcVal_save = r_cal.crc;
  8745                           ;stkvar	_crcVal_save @ sp[(-7)+6]
  8746  01D5BC  0EFF               	movlw	-1
  8747  01D5BE  0061  F36B  FFE3   	movff	_r_cal+154,plusw1
  8748                           
  8749                           ;daq.c: 388:  if (r_cal.checkmark == 0x1957) {
  8750  01D5C4  0E57               	movlw	87
  8751  01D5C6  0104               	movlb	4	; () banked
  8752  01D5C8  19D8               	xorwf	(_r_cal+152)& (0+255),w,b
  8753  01D5CA  E163               	bnz	l14094
  8754  01D5CC  0E19               	movlw	25
  8755  01D5CE  19D9               	xorwf	(_r_cal+153)& (0+255),w,b
  8756  01D5D0  A4D8               	btfss	status,2,c
  8757  01D5D2  D05F               	goto	u13290
  8758                           
  8759                           ; BSR set to: 4
  8760                           ;daq.c: 389:   r_cal.crc = 0x42;
  8761  01D5D4  0E42               	movlw	66
  8762  01D5D6  6FDA               	movwf	(_r_cal+154)& (0+255),b
  8763                           
  8764                           ; BSR set to: 4
  8765                           ;daq.c: 390:   x = 0;
  8766                           ;stkvar	_x @ sp[(-7)+0]
  8767  01D5D8  0EF9               	movlw	-7
  8768  01D5DA  6AE3               	clrf	plusw1,c
  8769  01D5DC  0EFA               	movlw	-6
  8770  01D5DE  6AE3               	clrf	plusw1,c
  8771  01D5E0                     l14086:
  8772                           
  8773                           ;daq.c: 393:    CRC_8BitDataWrite(r_cal_ptr[x]);
  8774                           ;stkvar	_x @ sp[(-7)+0]
  8775  01D5E0  0EF9               	movlw	-7
  8776  01D5E2  006F FF8C  F034    	movff	plusw1,btemp+10
  8777  01D5E8  0EFA               	movlw	-6
  8778  01D5EA  006F FF8C  F035    	movff	plusw1,btemp+11
  8779                           
  8780                           ;stkvar	_r_cal_ptr @ sp[(-7)+2]
  8781  01D5F0  0EFB               	movlw	-5
  8782  01D5F2  006F FF8C  F032    	movff	plusw1,btemp+8
  8783  01D5F8  0EFC               	movlw	-4
  8784  01D5FA  006F FF8C  F033    	movff	plusw1,btemp+9
  8785  01D600  5034               	movf	(btemp+10)^0,w,c
  8786  01D602  2432               	addwf	(btemp+8)^0,w,c
  8787  01D604  6ED9               	movwf	fsr2l,c
  8788  01D606  5035               	movf	(btemp+11)^0,w,c
  8789  01D608  2033               	addwfc	(btemp+9)^0,w,c
  8790  01D60A  6EDA               	movwf	fsr2h,c
  8791  01D60C  50DF               	movf	indf2,w,c
  8792  01D60E  6EE6               	movwf	postinc1,c
  8793  01D610  ECFD  F012         	call	_CRC_8BitDataWrite	;wreg free
  8794  01D614                     l14088:
  8795  01D614  EC1F  F013         	call	_CRC_IsBusy	;wreg free
  8796  01D618  502A               	movf	btemp^0,w,c
  8797  01D61A  A4D8               	btfss	status,2,c
  8798  01D61C  D7FB               	goto	l14088
  8799                           
  8800                           ;daq.c: 395:   } while (++x < y);
  8801                           ;stkvar	_y @ sp[(-7)+4]
  8802  01D61E  0EFD               	movlw	-3
  8803  01D620  006F FF8C  F034    	movff	plusw1,btemp+10
  8804  01D626  0EFE               	movlw	-2
  8805  01D628  006F FF8C  F035    	movff	plusw1,btemp+11
  8806                           
  8807                           ;stkvar	_x @ sp[(-7)+0]
  8808  01D62E  0EF9               	movlw	-7
  8809  01D630  50E3               	movf	plusw1,w,c
  8810  01D632  0F01               	addlw	1
  8811  01D634  6E2A               	movwf	btemp^0,c
  8812  01D636  0EF9               	movlw	-7
  8813  01D638  0060  F0AB  FFE3   	movff	btemp,plusw1
  8814  01D63E  6A2A               	clrf	btemp^0,c
  8815  01D640  0EFA               	movlw	-6
  8816  01D642  50E3               	movf	plusw1,w,c
  8817  01D644  202A               	addwfc	btemp^0,w,c
  8818  01D646  6E2A               	movwf	btemp^0,c
  8819  01D648  0EFA               	movlw	-6
  8820  01D64A  0060  F0AB  FFE3   	movff	btemp,plusw1
  8821  01D650  0EF9               	movlw	-7
  8822  01D652  006F FF8C  F032    	movff	plusw1,btemp+8
  8823  01D658  0EFA               	movlw	-6
  8824  01D65A  006F FF8C  F033    	movff	plusw1,btemp+9
  8825  01D660  5034               	movf	(btemp+10)^0,w,c
  8826  01D662  5C32               	subwf	(btemp+8)^0,w,c
  8827  01D664  5035               	movf	(btemp+11)^0,w,c
  8828  01D666  5833               	subwfb	(btemp+9)^0,w,c
  8829  01D668  A0D8               	btfss	status,0,c
  8830  01D66A  D7BA               	goto	l14086
  8831                           
  8832                           ;daq.c: 396:   if (CRC_CalculatedResultGet(0, 0x00) != crcVal_save)
  8833  01D66C  0E00               	movlw	0
  8834  01D66E  6EE6               	movwf	postinc1,c
  8835  01D670  0E00               	movlw	0
  8836  01D672  6EE6               	movwf	postinc1,c
  8837  01D674  0E00               	movlw	0
  8838  01D676  6EE6               	movwf	postinc1,c
  8839  01D678  ECE4  F0F0         	call	_CRC_CalculatedResultGet	;wreg free
  8840                           
  8841                           ;stkvar	_crcVal_save @ sp[(-7)+6]
  8842  01D67C  0EFF               	movlw	-1
  8843  01D67E  50E3               	movf	plusw1,w,c
  8844  01D680  6E34               	movwf	(btemp+10)^0,c
  8845  01D682  6A35               	clrf	(btemp+11)^0,c
  8846  01D684  5034               	movf	(btemp+10)^0,w,c
  8847  01D686  182A               	xorwf	btemp^0,w,c
  8848  01D688  E104               	bnz	u13290
  8849  01D68A  5035               	movf	(btemp+11)^0,w,c
  8850  01D68C  182B               	xorwf	(btemp+1)^0,w,c
  8851  01D68E  B4D8               	btfsc	status,2,c
  8852  01D690  D002               	goto	l14102
  8853  01D692                     u13290:
  8854  01D692                     l14094:
  8855                           
  8856                           ;daq.c: 397:    return 0;
  8857  01D692  0E00               	movlw	0
  8858  01D694  D005               	goto	L5
  8859  01D696                     l14102:
  8860                           
  8861                           ;daq.c: 401:  r_cal.crc = crcVal_save;
  8862                           ;stkvar	_crcVal_save @ sp[(-7)+6]
  8863  01D696  0EFF               	movlw	-1
  8864  01D698  006F FF8C  F4DA    	movff	plusw1,_r_cal+154
  8865                           
  8866                           ;daq.c: 402:  return 1;
  8867  01D69E  0E01               	movlw	1
  8868  01D6A0                     L5:
  8869  01D6A0  6E2A               	movwf	btemp^0,c
  8870                           
  8871                           ; _read_cal_data: autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  8872  01D6A2  0EF9               	movlw	249
  8873  01D6A4  26E1               	addwf	fsr1l,f,c
  8874  01D6A6  0EFF               	movlw	255
  8875  01D6A8  22E2               	addwfc	fsr1h,f,c
  8876  01D6AA  0012               	return		;funcret
  8877  01D6AC                     __end_of_read_cal_data:
  8878                           	opt callstack 0
  8879                           
  8880 ;; *************** function _DATAEE_ReadByte *****************
  8881 ;; Defined at:
  8882 ;;		line 194 in file "mcc_generated_files/memory.c"
  8883 ;; Parameters:    Size  Location     Type
  8884 ;;  bAdd            2  [STACK] unsigned short 
  8885 ;; Auto vars:     Size  Location     Type
  8886 ;;		None
  8887 ;; Return value:  Size  Location     Type
  8888 ;;                  1  [STACK] unsigned char 
  8889 ;; Registers used:
  8890 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
  8891 ;; Tracked objects:
  8892 ;;		On entry : 0/39
  8893 ;;		On exit  : 0/0
  8894 ;;		Unchanged: 0/0
  8895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8896 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8897 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8898 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8899 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8900 ;;Total ram usage:        0 bytes
  8901 ;; Hardware stack levels used:    1
  8902 ;; Hardware stack levels required when called:   15
  8903 ;; This function calls:
  8904 ;;		Nothing
  8905 ;; This function is called by:
  8906 ;;		_read_cal_data
  8907 ;; This function uses a reentrant model
  8908 ;;
  8909                           
  8910                           	psect	text14
  8911  001F14                     __ptext14:
  8912                           	opt callstack 0
  8913  001F14                     _DATAEE_ReadByte:
  8914                           	opt callstack 14
  8915                           
  8916                           ;mcc_generated_files/memory.c: 194: uint8_t DATAEE_ReadByte(uint16_t bAdd);mcc_generated
      +                          _files/memory.c: 195: {;mcc_generated_files/memory.c: 196:     NVMADRH = (uint8_t)((bAdd
      +                           >> 8) & 0x03);
  8917                           ;stkvar	_bAdd @ sp[(0)+-2]
  8918                           
  8919                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8920                           ;incstack = 0
  8921  001F14  0EFF               	movlw	255
  8922  001F16  24E1               	addwf	fsr1l,w,c
  8923  001F18  6ED9               	movwf	fsr2l,c
  8924  001F1A  0EFF               	movlw	255
  8925  001F1C  20E2               	addwfc	fsr1h,w,c
  8926  001F1E  6EDA               	movwf	fsr2h,c
  8927  001F20  50DF               	movf	indf2,w,c
  8928  001F22  0B03               	andlw	3
  8929  001F24  0139               	movlb	57	; () banked
  8930  001F26  6FE1               	movwf	225,b	;volatile
  8931                           
  8932                           ; BSR set to: 57
  8933                           ;mcc_generated_files/memory.c: 197:     NVMADRL = (uint8_t)(bAdd & 0xFF);
  8934                           ;stkvar	_bAdd @ sp[(0)+-2]
  8935  001F28  0EFE               	movlw	-2
  8936  001F2A  006F FF8F F9E0     	movff	plusw1,14816	;volatile
  8937                           
  8938                           ; BSR set to: 57
  8939                           ;mcc_generated_files/memory.c: 198:     NVMCON1bits.NVMREG = 0;
  8940  001F30  0E3F               	movlw	-193
  8941  001F32  17E5               	andwf	229,f,b	;volsfr
  8942                           
  8943                           ; BSR set to: 57
  8944                           ;mcc_generated_files/memory.c: 199:     NVMCON1bits.RD = 1;
  8945  001F34  81E5               	bsf	229,0,b	;volsfr
  8946                           
  8947                           ; BSR set to: 57
  8948                           ;mcc_generated_files/memory.c: 200:     __nop();
  8949  001F36  F000               	nop	
  8950                           
  8951                           ;mcc_generated_files/memory.c: 201:     __nop();
  8952  001F38  F000               	nop	
  8953                           
  8954                           ;mcc_generated_files/memory.c: 203:     return (NVMDAT);
  8955  001F3A  006E F78C  F02A    	movff	14819,btemp	;volatile
  8956                           
  8957                           ; _DATAEE_ReadByte: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
  8958  001F40  52E5               	movf	postdec1,f,c
  8959  001F42  52E5               	movf	postdec1,f,c
  8960  001F44  0012               	return		;funcret
  8961  001F46                     __end_of_DATAEE_ReadByte:
  8962                           	opt callstack 0
  8963                           
  8964 ;; *************** function _load_hist_data *****************
  8965 ;; Defined at:
  8966 ;;		line 224 in file "mbmc.c"
  8967 ;; Parameters:    Size  Location     Type
  8968 ;;		None
  8969 ;; Auto vars:     Size  Location     Type
  8970 ;;  esr_rescale     2  [STACK] short 
  8971 ;; Return value:  Size  Location     Type
  8972 ;;                  1  [STACK] void 
  8973 ;; Registers used:
  8974 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, prodl, prodh
  8975 ;; Tracked objects:
  8976 ;;		On entry : 3F/1
  8977 ;;		On exit  : 3F/39
  8978 ;;		Unchanged: 0/0
  8979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8980 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8981 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8982 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8983 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8984 ;;Total ram usage:        0 bytes
  8985 ;; Hardware stack levels used:    1
  8986 ;; Hardware stack levels required when called:   16
  8987 ;; This function calls:
  8988 ;;		___fldiv
  8989 ;;		___flmul
  8990 ;;		___fltol
  8991 ;;		_start_bsoc
  8992 ;;		_stop_bsoc
  8993 ;;		_time
  8994 ;; This function is called by:
  8995 ;;		_main
  8996 ;; This function uses a reentrant model
  8997 ;;
  8998                           
  8999                           	psect	text15
  9000  01C13C                     __ptext15:
  9001                           	opt callstack 0
  9002  01C13C                     _load_hist_data:
  9003                           	opt callstack 0
  9004                           
  9005                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9006  01C13C  52E6               	movf	postinc1,f,c
  9007  01C13E  52E6               	movf	postinc1,f,c
  9008                           
  9009                           ;mbmc.c: 226:  int16_t esr_rescale;;mbmc.c: 228:  stop_bsoc();
  9010                           
  9011                           ;incstack = 0
  9012  01C140  EC9A  F013         	call	_stop_bsoc	;wreg free
  9013                           
  9014                           ; BSR set to: 57
  9015                           ;mbmc.c: 229:  esr_rescale = (int16_t) (C.esr * 1000.0);
  9016  01C144  0E00               	movlw	0
  9017  01C146  6EE6               	movwf	postinc1,c
  9018  01C148  0E00               	movlw	0
  9019  01C14A  6EE6               	movwf	postinc1,c
  9020  01C14C  0E7A               	movlw	122
  9021  01C14E  6EE6               	movwf	postinc1,c
  9022  01C150  0E44               	movlw	68
  9023  01C152  6EE6               	movwf	postinc1,c
  9024  01C154  EE22  F187         	lfsr	2,_C+136	;volatile
  9025  01C158  006F FF7B FFE6     	movff	postinc2,postinc1
  9026  01C15E  006F FF7B FFE6     	movff	postinc2,postinc1
  9027  01C164  006F FF7B FFE6     	movff	postinc2,postinc1
  9028  01C16A  006F FF7B FFE6     	movff	postinc2,postinc1
  9029  01C170  EC4D  F0B2         	call	___flmul	;wreg free
  9030  01C174  0060  F0AB  FFE6   	movff	btemp,postinc1
  9031  01C17A  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  9032  01C180  0060  F0B3  FFE6   	movff	btemp+2,postinc1
  9033  01C186  0060  F0B7  FFE6   	movff	btemp+3,postinc1
  9034  01C18C  EC9D  F0F1         	call	___fltol	;wreg free
  9035  01C190  0060  F0A8  F034   	movff	btemp,btemp+10
  9036  01C196  0060  F0AC  F035   	movff	btemp+1,btemp+11
  9037                           
  9038                           ;stkvar	_esr_rescale @ sp[(-2)+0]
  9039  01C19C  0EFE               	movlw	-2
  9040  01C19E  0060  F0D3  FFE3   	movff	btemp+10,plusw1
  9041  01C1A4  0EFF               	movlw	-1
  9042  01C1A6  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  9043                           
  9044                           ;mbmc.c: 230:  C.hist[0].updates++;
  9045  01C1AC  EE22  F1D9         	lfsr	2,_C+218	;volatile
  9046  01C1B0  2ADE               	incf	postinc2,f,c
  9047  01C1B2  0E00               	movlw	0
  9048  01C1B4  22DE               	addwfc	postinc2,f,c
  9049  01C1B6  22DE               	addwfc	postinc2,f,c
  9050  01C1B8  22DE               	addwfc	postinc2,f,c
  9051                           
  9052                           ;mbmc.c: 231:  C.hist[0].h[12] += (int16_t) (C.pvkw / 10.0);
  9053  01C1BA  0E00               	movlw	0
  9054  01C1BC  6EE6               	movwf	postinc1,c
  9055  01C1BE  0E00               	movlw	0
  9056  01C1C0  6EE6               	movwf	postinc1,c
  9057  01C1C2  0E20               	movlw	32
  9058  01C1C4  6EE6               	movwf	postinc1,c
  9059  01C1C6  0E41               	movlw	65
  9060  01C1C8  6EE6               	movwf	postinc1,c
  9061  01C1CA  EE22  F1A7         	lfsr	2,_C+168	;volatile
  9062  01C1CE  006F FF7B FFE6     	movff	postinc2,postinc1
  9063  01C1D4  006F FF7B FFE6     	movff	postinc2,postinc1
  9064  01C1DA  006F FF7B FFE6     	movff	postinc2,postinc1
  9065  01C1E0  006F FF7B FFE6     	movff	postinc2,postinc1
  9066  01C1E6  EC9E  F0BD         	call	___fldiv	;wreg free
  9067  01C1EA  0060  F0AB  FFE6   	movff	btemp,postinc1
  9068  01C1F0  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  9069  01C1F6  0060  F0B3  FFE6   	movff	btemp+2,postinc1
  9070  01C1FC  0060  F0B7  FFE6   	movff	btemp+3,postinc1
  9071  01C202  EC9D  F0F1         	call	___fltol	;wreg free
  9072  01C206  0060  F0A8  F034   	movff	btemp,btemp+10
  9073  01C20C  0060  F0AC  F035   	movff	btemp+1,btemp+11
  9074  01C212  EE22  F1F5         	lfsr	2,_C+246	;volatile
  9075  01C216  5034               	movf	(btemp+10)^0,w,c
  9076  01C218  26DE               	addwf	postinc2,f,c
  9077  01C21A  5035               	movf	(btemp+11)^0,w,c
  9078  01C21C  22DD               	addwfc	postdec2,f,c
  9079                           
  9080                           ;mbmc.c: 232:  C.hist[0].h[11]++;
  9081  01C21E  EE22  F1F3         	lfsr	2,_C+244	;volatile
  9082  01C222  2ADE               	incf	postinc2,f,c
  9083  01C224  0E00               	movlw	0
  9084  01C226  22DD               	addwfc	postdec2,f,c
  9085                           
  9086                           ;mbmc.c: 233:  C.hist[10].h[10] = esr_rescale;
  9087                           ;stkvar	_esr_rescale @ sp[(-2)+0]
  9088  01C228  50E1               	movf	fsr1l,w,c
  9089  01C22A  0FFE               	addlw	-2
  9090  01C22C  6ED9               	movwf	fsr2l,c
  9091  01C22E  50E2               	movf	fsr1h,w,c
  9092  01C230  6EDA               	movwf	fsr2h,c
  9093  01C232  0EFF               	movlw	255
  9094  01C234  22DA               	addwfc	fsr2h,f,c
  9095  01C236  006F FF78  FDBB    	movff	postinc2,_C+1212	;volatile
  9096  01C23C  006F FF74  FDBC    	movff	postdec2,_C+1213	;volatile
  9097                           
  9098                           ;mbmc.c: 234:  C.hist[10].h[9] = esr_rescale;
  9099                           ;stkvar	_esr_rescale @ sp[(-2)+0]
  9100  01C242  50E1               	movf	fsr1l,w,c
  9101  01C244  0FFE               	addlw	-2
  9102  01C246  6ED9               	movwf	fsr2l,c
  9103  01C248  50E2               	movf	fsr1h,w,c
  9104  01C24A  6EDA               	movwf	fsr2h,c
  9105  01C24C  0EFF               	movlw	255
  9106  01C24E  22DA               	addwfc	fsr2h,f,c
  9107  01C250  006F FF78  FDB9    	movff	postinc2,_C+1210	;volatile
  9108  01C256  006F FF74  FDBA    	movff	postdec2,_C+1211	;volatile
  9109                           
  9110                           ;mbmc.c: 235:  C.hist[0].h[6] = C.dynamic_ah;
  9111  01C25C  EE22  F18F         	lfsr	2,_C+144	;volatile
  9112  01C260  006F FF7B FFE6     	movff	postinc2,postinc1
  9113  01C266  006F FF7B FFE6     	movff	postinc2,postinc1
  9114  01C26C  006F FF7B FFE6     	movff	postinc2,postinc1
  9115  01C272  006F FF7B FFE6     	movff	postinc2,postinc1
  9116  01C278  EC9D  F0F1         	call	___fltol	;wreg free
  9117  01C27C  0060  F0A8  F034   	movff	btemp,btemp+10
  9118  01C282  0060  F0AC  F035   	movff	btemp+1,btemp+11
  9119  01C288  0060  F0D0  F9E9   	movff	btemp+10,_C+234	;volatile
  9120  01C28E  0060  F0D4  F9EA   	movff	btemp+11,_C+235	;volatile
  9121                           
  9122                           ;mbmc.c: 236:  C.hist[0].h[0] = C.dynamic_ah_adj;
  9123  01C294  EE22  F19B         	lfsr	2,_C+156	;volatile
  9124  01C298  006F FF7B FFE6     	movff	postinc2,postinc1
  9125  01C29E  006F FF7B FFE6     	movff	postinc2,postinc1
  9126  01C2A4  006F FF7B FFE6     	movff	postinc2,postinc1
  9127  01C2AA  006F FF7B FFE6     	movff	postinc2,postinc1
  9128  01C2B0  EC9D  F0F1         	call	___fltol	;wreg free
  9129  01C2B4  0060  F0A8  F034   	movff	btemp,btemp+10
  9130  01C2BA  0060  F0AC  F035   	movff	btemp+1,btemp+11
  9131  01C2C0  0060  F0D0  F9DD   	movff	btemp+10,_C+222	;volatile
  9132  01C2C6  0060  F0D4  F9DE   	movff	btemp+11,_C+223	;volatile
  9133                           
  9134                           ;mbmc.c: 237:  C.hist[0].pclock = time(((void*)0));
  9135  01C2CC  0E00               	movlw	0
  9136  01C2CE  6EE6               	movwf	postinc1,c
  9137  01C2D0  0E00               	movlw	0
  9138  01C2D2  6EE6               	movwf	postinc1,c
  9139  01C2D4  ECFD  F00A         	call	_time	;wreg free
  9140  01C2D8  52E5               	movf	postdec1,f,c
  9141  01C2DA  006F FF9C  F041    	movff	indf1,btemp+23
  9142  01C2E0  52E5               	movf	postdec1,f,c
  9143  01C2E2  006F FF9C  F040    	movff	indf1,btemp+22
  9144  01C2E8  52E5               	movf	postdec1,f,c
  9145  01C2EA  006F FF9C  F03F    	movff	indf1,btemp+21
  9146  01C2F0  52E5               	movf	postdec1,f,c
  9147  01C2F2  006F FF9C  F03E    	movff	indf1,btemp+20
  9148  01C2F8  52E5               	movf	postdec1,f,c
  9149  01C2FA  006F FF9C  F03D    	movff	indf1,btemp+19
  9150  01C300  52E5               	movf	postdec1,f,c
  9151  01C302  006F FF9C  F03C    	movff	indf1,btemp+18
  9152  01C308  52E5               	movf	postdec1,f,c
  9153  01C30A  006F FF9C  F03B    	movff	indf1,btemp+17
  9154  01C310  52E5               	movf	postdec1,f,c
  9155  01C312  006F FF9C  F03A    	movff	indf1,btemp+16
  9156  01C318  EE22  F1B9         	lfsr	2,_C+186	;volatile
  9157  01C31C  0060  F0EB  FFDE   	movff	btemp+16,postinc2
  9158  01C322  0060  F0EF  FFDE   	movff	btemp+17,postinc2
  9159  01C328  0060  F0F3  FFDE   	movff	btemp+18,postinc2
  9160  01C32E  0060  F0F7  FFDE   	movff	btemp+19,postinc2
  9161  01C334  0060  F0FB  FFDE   	movff	btemp+20,postinc2
  9162  01C33A  0060  F0FF  FFDE   	movff	btemp+21,postinc2
  9163  01C340  0060  F103  FFDE   	movff	btemp+22,postinc2
  9164  01C346  0060  F107  FFDE   	movff	btemp+23,postinc2
  9165                           
  9166                           ; BSR set to: 57
  9167                           ;mbmc.c: 238:  C.dynamic_ah = 0.0;
  9168  01C34C  0E00               	movlw	0
  9169  01C34E  006F FFA0  F98F    	movff	wreg,_C+144	;volatile
  9170  01C354  0E00               	movlw	0
  9171  01C356  006F FFA0  F990    	movff	wreg,_C+145	;volatile
  9172  01C35C  0E00               	movlw	0
  9173  01C35E  006F FFA0  F991    	movff	wreg,_C+146	;volatile
  9174  01C364  0E00               	movlw	0
  9175  01C366  006F FFA0  F992    	movff	wreg,_C+147	;volatile
  9176                           
  9177                           ; BSR set to: 57
  9178                           ;mbmc.c: 239:  C.dynamic_ah_adj = 0.0;
  9179  01C36C  0E00               	movlw	0
  9180  01C36E  006F FFA0  F99B    	movff	wreg,_C+156	;volatile
  9181  01C374  0E00               	movlw	0
  9182  01C376  006F FFA0  F99C    	movff	wreg,_C+157	;volatile
  9183  01C37C  0E00               	movlw	0
  9184  01C37E  006F FFA0  F99D    	movff	wreg,_C+158	;volatile
  9185  01C384  0E00               	movlw	0
  9186  01C386  006F FFA0  F99E    	movff	wreg,_C+159	;volatile
  9187                           
  9188                           ; BSR set to: 57
  9189                           ;mbmc.c: 240:  start_bsoc();
  9190  01C38C  EC16  F012         	call	_start_bsoc	;wreg free
  9191                           
  9192                           ; BSR set to: 57
  9193                           ; _load_hist_data: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  9194  01C390  52E5               	movf	postdec1,f,c
  9195  01C392  52E5               	movf	postdec1,f,c
  9196  01C394  0012               	return		;funcret
  9197  01C396                     __end_of_load_hist_data:
  9198                           	opt callstack 0
  9199                           
  9200 ;; *************** function _init_port_dma *****************
  9201 ;; Defined at:
  9202 ;;		line 104 in file "eadog.c"
  9203 ;; Parameters:    Size  Location     Type
  9204 ;;		None
  9205 ;; Auto vars:     Size  Location     Type
  9206 ;;		None
  9207 ;; Return value:  Size  Location     Type
  9208 ;;                  1  [STACK] void 
  9209 ;; Registers used:
  9210 ;;		wreg, status,2
  9211 ;; Tracked objects:
  9212 ;;		On entry : 0/2
  9213 ;;		On exit  : 3F/3B
  9214 ;;		Unchanged: 0/0
  9215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9216 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9217 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9218 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9219 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9220 ;;Total ram usage:        0 bytes
  9221 ;; Hardware stack levels used:    1
  9222 ;; Hardware stack levels required when called:   15
  9223 ;; This function calls:
  9224 ;;		Nothing
  9225 ;; This function is called by:
  9226 ;;		_main
  9227 ;; This function uses a reentrant model
  9228 ;;
  9229                           
  9230                           	psect	text16
  9231  001F46                     __ptext16:
  9232                           	opt callstack 0
  9233  001F46                     _init_port_dma:
  9234                           	opt callstack 15
  9235                           
  9236                           ;eadog.c: 106:  DMA2CON1bits.DMODE = 0;
  9237                           
  9238                           ; BSR set to: 57
  9239                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9240                           ;incstack = 0
  9241  001F46  0E3F               	movlw	-193
  9242  001F48  013B               	movlb	59	; () banked
  9243  001F4A  17DD               	andwf	221,f,b	;volatile
  9244                           
  9245                           ; BSR set to: 59
  9246                           ;eadog.c: 107:  DMA2CON1bits.DSTP = 0;
  9247  001F4C  9BDD               	bcf	221,5,b	;volatile
  9248                           
  9249                           ;eadog.c: 108:  DMA2CON1bits.SMODE = 1;
  9250  001F4E  51DD               	movf	221,w,b	;volatile
  9251  001F50  0BF9               	andlw	-7
  9252  001F52  0902               	iorlw	2
  9253  001F54  6FDD               	movwf	221,b	;volatile
  9254                           
  9255                           ;eadog.c: 109:  DMA2CON1bits.SMR = 0;
  9256  001F56  0EE7               	movlw	-25
  9257  001F58  17DD               	andwf	221,f,b	;volatile
  9258                           
  9259                           ; BSR set to: 59
  9260                           ;eadog.c: 110:  DMA2CON1bits.SSTP = 1;
  9261  001F5A  81DD               	bsf	221,0,b	;volatile
  9262                           
  9263                           ; BSR set to: 59
  9264                           ;eadog.c: 111:  DMA2CON0bits.SIRQEN = 0;
  9265  001F5C  9DDC               	bcf	220,6,b	;volatile
  9266                           
  9267                           ;eadog.c: 112:  DMA2DSA = 0x3DEA;
  9268  001F5E  0E3D               	movlw	61
  9269  001F60  6FD1               	movwf	209,b	;volatile
  9270  001F62  0EEA               	movlw	234
  9271  001F64  6FD0               	movwf	208,b	;volatile
  9272                           
  9273                           ;eadog.c: 113:  DMA2SSA = (uint32_t) port_data;
  9274  001F66  0EFF               	movlw	low _port_data
  9275  001F68  6FD9               	movwf	217,b	;volatile
  9276  001F6A  0E06               	movlw	high _port_data
  9277  001F6C  6FDA               	movwf	218,b	;volatile
  9278  001F6E  0E00               	movlw	low (_port_data shr (0+16))
  9279  001F70  6FDB               	movwf	219,b	;volatile
  9280                           
  9281                           ; BSR set to: 59
  9282                           ;eadog.c: 114:  DMA2CON0bits.DGO = 0;
  9283  001F72  9BDC               	bcf	220,5,b	;volatile
  9284                           
  9285                           ; BSR set to: 59
  9286                           ; _init_port_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  9287  001F74  0012               	return		;funcret
  9288  001F76                     __end_of_init_port_dma:
  9289                           	opt callstack 0
  9290                           
  9291 ;; *************** function _init_display *****************
  9292 ;; Defined at:
  9293 ;;		line 38 in file "eadog.c"
  9294 ;; Parameters:    Size  Location     Type
  9295 ;;		None
  9296 ;; Auto vars:     Size  Location     Type
  9297 ;;		None
  9298 ;; Return value:  Size  Location     Type
  9299 ;;                  1  [STACK] void 
  9300 ;; Registers used:
  9301 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  9302 ;; Tracked objects:
  9303 ;;		On entry : 3F/3B
  9304 ;;		On exit  : 3F/3D
  9305 ;;		Unchanged: 0/0
  9306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9307 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9308 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9310 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9311 ;;Total ram usage:        0 bytes
  9312 ;; Hardware stack levels used:    1
  9313 ;; Hardware stack levels required when called:   17
  9314 ;; This function calls:
  9315 ;;		_ringBufS_init
  9316 ;;		_send_lcd_cmd
  9317 ;;		_send_lcd_cmd_long
  9318 ;;		_send_lcd_data
  9319 ;;		_wdtdelay
  9320 ;; This function is called by:
  9321 ;;		_main
  9322 ;; This function uses a reentrant model
  9323 ;;
  9324                           
  9325                           	psect	text17
  9326  01FD3E                     __ptext17:
  9327                           	opt callstack 0
  9328  01FD3E                     _init_display:
  9329                           	opt callstack 13
  9330                           
  9331                           ;eadog.c: 40:  spi_link.tx1a = &ring_buf1;
  9332                           
  9333                           ; BSR set to: 59
  9334                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9335                           ;incstack = 0
  9336  01FD3E  0E43               	movlw	low _ring_buf1
  9337  01FD40  0100               	movlb	0	; () banked
  9338  01FD42  6F66               	movwf	(_spi_link+6)& (0+255),b	;volatile
  9339  01FD44  0E05               	movlw	high _ring_buf1
  9340  01FD46  6F67               	movwf	(_spi_link+7)& (0+255),b	;volatile
  9341                           
  9342                           ;eadog.c: 41:  spi_link.tx1b = &ring_buf2;
  9343  01FD48  0E00               	movlw	low _ring_buf2
  9344  01FD4A  6F64               	movwf	(_spi_link+4)& (0+255),b	;volatile
  9345  01FD4C  0E05               	movlw	high _ring_buf2
  9346  01FD4E  6F65               	movwf	(_spi_link+5)& (0+255),b	;volatile
  9347                           
  9348                           ; BSR set to: 0
  9349                           ;eadog.c: 42:  ringBufS_init(spi_link.tx1a);
  9350  01FD50  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
  9351  01FD56  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
  9352  01FD5C  EC5B  F010         	call	_ringBufS_init	;wreg free
  9353                           
  9354                           ;eadog.c: 43:  ringBufS_init(spi_link.tx1b);
  9355  01FD60  0060  F193  FFE6   	movff	_spi_link+4,postinc1
  9356  01FD66  0060  F197  FFE6   	movff	_spi_link+5,postinc1
  9357  01FD6C  EC5B  F010         	call	_ringBufS_init	;wreg free
  9358                           
  9359                           ;eadog.c: 45:  LATEbits.LATE2 = 1;
  9360  01FD70  84BE               	bsf	190,2,c	;volatile
  9361                           
  9362                           ;eadog.c: 47:  SPI1CON0bits.EN = 0;
  9363  01FD72  013D               	movlb	61	; () banked
  9364  01FD74  9F14               	bcf	20,7,b	;volatile
  9365                           
  9366                           ; BSR set to: 61
  9367                           ;eadog.c: 49:  SPI1CON1 = 0x20;
  9368  01FD76  0E20               	movlw	32
  9369  01FD78  6F15               	movwf	21,b	;volatile
  9370                           
  9371                           ; BSR set to: 61
  9372                           ;eadog.c: 51:  SPI1CON2 = 0x03;
  9373  01FD7A  0E03               	movlw	3
  9374  01FD7C  6F16               	movwf	22,b	;volatile
  9375                           
  9376                           ; BSR set to: 61
  9377                           ;eadog.c: 53:  SPI1BAUD = 0x04;
  9378  01FD7E  0E04               	movlw	4
  9379  01FD80  6F19               	movwf	25,b	;volatile
  9380                           
  9381                           ; BSR set to: 61
  9382                           ;eadog.c: 55:  SPI1CLK = 0x02;
  9383  01FD82  0E02               	movlw	2
  9384  01FD84  6F1C               	movwf	28,b	;volatile
  9385                           
  9386                           ; BSR set to: 61
  9387                           ;eadog.c: 57:  SPI1CON0 = 0x83;
  9388  01FD86  0E83               	movlw	131
  9389  01FD88  6F14               	movwf	20,b	;volatile
  9390                           
  9391                           ; BSR set to: 61
  9392                           ;eadog.c: 58:  SPI1CON0bits.EN = 1;
  9393  01FD8A  8F14               	bsf	20,7,b	;volatile
  9394                           
  9395                           ; BSR set to: 61
  9396                           ;eadog.c: 60:  wdtdelay(350000);
  9397  01FD8C  0E30               	movlw	48
  9398  01FD8E  6EE6               	movwf	postinc1,c
  9399  01FD90  0E57               	movlw	87
  9400  01FD92  6EE6               	movwf	postinc1,c
  9401  01FD94  0E05               	movlw	5
  9402  01FD96  6EE6               	movwf	postinc1,c
  9403  01FD98  0E00               	movlw	0
  9404  01FD9A  6EE6               	movwf	postinc1,c
  9405  01FD9C  EC59  F00B         	call	_wdtdelay	;wreg free
  9406                           
  9407                           ; BSR set to: 0
  9408                           ;eadog.c: 61:  send_lcd_cmd_long(0x46);
  9409  01FDA0  0E46               	movlw	70
  9410  01FDA2  6EE6               	movwf	postinc1,c
  9411  01FDA4  ECBA  F00D         	call	_send_lcd_cmd_long	;wreg free
  9412                           
  9413                           ; BSR set to: 0
  9414                           ;eadog.c: 62:  send_lcd_cmd(0x41);
  9415  01FDA8  0E41               	movlw	65
  9416  01FDAA  6EE6               	movwf	postinc1,c
  9417  01FDAC  ECDA  F00D         	call	_send_lcd_cmd	;wreg free
  9418                           
  9419                           ; BSR set to: 0
  9420                           ;eadog.c: 63:  wdtdelay(80);
  9421  01FDB0  0E50               	movlw	80
  9422  01FDB2  6EE6               	movwf	postinc1,c
  9423  01FDB4  0E00               	movlw	0
  9424  01FDB6  6EE6               	movwf	postinc1,c
  9425  01FDB8  0E00               	movlw	0
  9426  01FDBA  6EE6               	movwf	postinc1,c
  9427  01FDBC  0E00               	movlw	0
  9428  01FDBE  6EE6               	movwf	postinc1,c
  9429  01FDC0  EC59  F00B         	call	_wdtdelay	;wreg free
  9430                           
  9431                           ; BSR set to: 0
  9432                           ;eadog.c: 64:  send_lcd_cmd(0x53);
  9433  01FDC4  0E53               	movlw	83
  9434  01FDC6  6EE6               	movwf	postinc1,c
  9435  01FDC8  ECDA  F00D         	call	_send_lcd_cmd	;wreg free
  9436                           
  9437                           ; BSR set to: 0
  9438                           ;eadog.c: 65:  send_lcd_data(2);
  9439  01FDCC  0E02               	movlw	2
  9440  01FDCE  6EE6               	movwf	postinc1,c
  9441  01FDD0  EC88  F011         	call	_send_lcd_data	;wreg free
  9442                           
  9443                           ; BSR set to: 0
  9444                           ;eadog.c: 66:  wdtdelay(80);
  9445  01FDD4  0E50               	movlw	80
  9446  01FDD6  6EE6               	movwf	postinc1,c
  9447  01FDD8  0E00               	movlw	0
  9448  01FDDA  6EE6               	movwf	postinc1,c
  9449  01FDDC  0E00               	movlw	0
  9450  01FDDE  6EE6               	movwf	postinc1,c
  9451  01FDE0  0E00               	movlw	0
  9452  01FDE2  6EE6               	movwf	postinc1,c
  9453  01FDE4  EC59  F00B         	call	_wdtdelay	;wreg free
  9454                           
  9455                           ; BSR set to: 0
  9456                           ;eadog.c: 67:  send_lcd_cmd_long(0x51);
  9457  01FDE8  0E51               	movlw	81
  9458  01FDEA  6EE6               	movwf	postinc1,c
  9459  01FDEC  ECBA  F00D         	call	_send_lcd_cmd_long	;wreg free
  9460                           
  9461                           ; BSR set to: 0
  9462                           ;eadog.c: 68:  SPI1CON0bits.EN = 0;
  9463  01FDF0  013D               	movlb	61	; () banked
  9464  01FDF2  9F14               	bcf	20,7,b	;volatile
  9465                           
  9466                           ; BSR set to: 61
  9467                           ;eadog.c: 69:  SPI1CON2 = 0x02;
  9468  01FDF4  0E02               	movlw	2
  9469  01FDF6  6F16               	movwf	22,b	;volatile
  9470                           
  9471                           ; BSR set to: 61
  9472                           ;eadog.c: 70:  SPI1CON0bits.EN = 1;
  9473  01FDF8  8F14               	bsf	20,7,b	;volatile
  9474                           
  9475                           ; BSR set to: 61
  9476                           ;eadog.c: 89:  SPI1INTFbits.SPI1TXUIF = 0;
  9477  01FDFA  931A               	bcf	26,1,b	;volatile
  9478                           
  9479                           ; BSR set to: 61
  9480                           ;eadog.c: 90:  DMA1CON1bits.DMODE = 0;
  9481  01FDFC  0E3F               	movlw	-193
  9482  01FDFE  013B               	movlb	59	; () banked
  9483  01FE00  17FD               	andwf	253,f,b	;volatile
  9484                           
  9485                           ; BSR set to: 59
  9486                           ;eadog.c: 91:  DMA1CON1bits.DSTP = 0;
  9487  01FE02  9BFD               	bcf	253,5,b	;volatile
  9488                           
  9489                           ; BSR set to: 59
  9490                           ;eadog.c: 92:  DMA1CON1bits.SMODE = 1;
  9491  01FE04  51FD               	movf	253,w,b	;volatile
  9492  01FE06  0BF9               	andlw	-7
  9493  01FE08  0902               	iorlw	2
  9494  01FE0A  6FFD               	movwf	253,b	;volatile
  9495                           
  9496                           ; BSR set to: 59
  9497                           ;eadog.c: 93:  DMA1CON1bits.SMR = 0;
  9498  01FE0C  0EE7               	movlw	-25
  9499  01FE0E  17FD               	andwf	253,f,b	;volatile
  9500                           
  9501                           ; BSR set to: 59
  9502                           ;eadog.c: 94:  DMA1CON1bits.SSTP = 1;
  9503  01FE10  81FD               	bsf	253,0,b	;volatile
  9504                           
  9505                           ; BSR set to: 59
  9506                           ;eadog.c: 95:  DMA1SSA = (uint32_t) & ring_buf1;
  9507  01FE12  0E43               	movlw	low _ring_buf1
  9508  01FE14  6FF9               	movwf	249,b	;volatile
  9509  01FE16  0E05               	movlw	high _ring_buf1
  9510  01FE18  6FFA               	movwf	250,b	;volatile
  9511  01FE1A  0E00               	movlw	low (_ring_buf1 shr (0+16))
  9512  01FE1C  6FFB               	movwf	251,b	;volatile
  9513                           
  9514                           ; BSR set to: 59
  9515                           ;eadog.c: 96:  DMA1CON0bits.DGO = 0;
  9516  01FE1E  9BFC               	bcf	252,5,b	;volatile
  9517                           
  9518                           ; BSR set to: 59
  9519                           ;eadog.c: 97:  SPI1INTFbits.SPI1TXUIF = 1;
  9520  01FE20  013D               	movlb	61	; () banked
  9521  01FE22  831A               	bsf	26,1,b	;volatile
  9522                           
  9523                           ; BSR set to: 61
  9524                           ;eadog.c: 98:  LATEbits.LATE2 = 0;
  9525  01FE24  94BE               	bcf	190,2,c	;volatile
  9526                           
  9527                           ; BSR set to: 61
  9528                           ; _init_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  9529  01FE26  0012               	return		;funcret
  9530  01FE28                     __end_of_init_display:
  9531                           	opt callstack 0
  9532                           
  9533 ;; *************** function _send_lcd_data *****************
  9534 ;; Defined at:
  9535 ;;		line 123 in file "eadog.c"
  9536 ;; Parameters:    Size  Location     Type
  9537 ;;  data            1  [STACK] const unsigned char 
  9538 ;; Auto vars:     Size  Location     Type
  9539 ;;		None
  9540 ;; Return value:  Size  Location     Type
  9541 ;;                  1  [STACK] void 
  9542 ;; Registers used:
  9543 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  9544 ;; Tracked objects:
  9545 ;;		On entry : 3F/0
  9546 ;;		On exit  : 3F/0
  9547 ;;		Unchanged: 0/0
  9548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9549 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9550 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9551 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9552 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9553 ;;Total ram usage:        0 bytes
  9554 ;; Hardware stack levels used:    1
  9555 ;; Hardware stack levels required when called:   16
  9556 ;; This function calls:
  9557 ;;		_SPI1_Exchange8bit
  9558 ;;		_wdtdelay
  9559 ;; This function is called by:
  9560 ;;		_init_display
  9561 ;; This function uses a reentrant model
  9562 ;;
  9563                           
  9564                           	psect	text18
  9565  002310                     __ptext18:
  9566                           	opt callstack 0
  9567  002310                     _send_lcd_data:
  9568                           	opt callstack 13
  9569                           
  9570                           ; BSR set to: 61
  9571                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9572                           ;incstack = 0
  9573                           ;eadog.c: 123: static void send_lcd_data(const uint8_t data);eadog.c: 124: {;eadog.c: 12
      +                          5:  do { LATCbits.LATC2 = 0; } while(0);
  9574  002310  94BC               	bcf	188,2,c	;volatile
  9575                           
  9576                           ;eadog.c: 126:  SPI1_Exchange8bit(data);
  9577                           ;stkvar	_data @ sp[(0)+-1]
  9578  002312  0EFF               	movlw	-1
  9579  002314  50E3               	movf	plusw1,w,c
  9580  002316  6EE6               	movwf	postinc1,c
  9581  002318  EC58  F012         	call	_SPI1_Exchange8bit	;wreg free
  9582                           
  9583                           ; BSR set to: 57
  9584                           ;eadog.c: 127:  wdtdelay(8);
  9585  00231C  0E08               	movlw	8
  9586  00231E  6EE6               	movwf	postinc1,c
  9587  002320  0E00               	movlw	0
  9588  002322  6EE6               	movwf	postinc1,c
  9589  002324  0E00               	movlw	0
  9590  002326  6EE6               	movwf	postinc1,c
  9591  002328  0E00               	movlw	0
  9592  00232A  6EE6               	movwf	postinc1,c
  9593  00232C  EC59  F00B         	call	_wdtdelay	;wreg free
  9594                           
  9595                           ; BSR set to: 0
  9596                           ; _send_lcd_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1,
      +                           argsize = 1, vargsize = 0
  9597  002330  52E5               	movf	postdec1,f,c
  9598  002332  0012               	return		;funcret
  9599  002334                     __end_of_send_lcd_data:
  9600                           	opt callstack 0
  9601                           
  9602 ;; *************** function _send_lcd_cmd_long *****************
  9603 ;; Defined at:
  9604 ;;		line 139 in file "eadog.c"
  9605 ;; Parameters:    Size  Location     Type
  9606 ;;  cmd             1  [STACK] const unsigned char 
  9607 ;; Auto vars:     Size  Location     Type
  9608 ;;		None
  9609 ;; Return value:  Size  Location     Type
  9610 ;;                  1  [STACK] void 
  9611 ;; Registers used:
  9612 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  9613 ;; Tracked objects:
  9614 ;;		On entry : 3F/0
  9615 ;;		On exit  : 3F/0
  9616 ;;		Unchanged: 0/0
  9617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9618 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9619 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9620 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9621 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9622 ;;Total ram usage:        0 bytes
  9623 ;; Hardware stack levels used:    1
  9624 ;; Hardware stack levels required when called:   16
  9625 ;; This function calls:
  9626 ;;		_SPI1_Exchange8bit
  9627 ;;		_wdtdelay
  9628 ;; This function is called by:
  9629 ;;		_init_display
  9630 ;; This function uses a reentrant model
  9631 ;;
  9632                           
  9633                           	psect	text19
  9634  001B74                     __ptext19:
  9635                           	opt callstack 0
  9636  001B74                     _send_lcd_cmd_long:
  9637                           	opt callstack 13
  9638                           
  9639                           ; BSR set to: 0
  9640                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9641                           ;incstack = 0
  9642                           ;eadog.c: 139: static void send_lcd_cmd_long(const uint8_t cmd);eadog.c: 140: {;eadog.c:
      +                           141:  do { LATCbits.LATC2 = 0; } while(0);
  9643  001B74  94BC               	bcf	188,2,c	;volatile
  9644                           
  9645                           ;eadog.c: 142:  SPI1_Exchange8bit(0xFE);
  9646  001B76  0EFE               	movlw	254
  9647  001B78  6EE6               	movwf	postinc1,c
  9648  001B7A  EC58  F012         	call	_SPI1_Exchange8bit	;wreg free
  9649                           
  9650                           ; BSR set to: 57
  9651                           ;eadog.c: 143:  wdtdelay(8);
  9652  001B7E  0E08               	movlw	8
  9653  001B80  6EE6               	movwf	postinc1,c
  9654  001B82  0E00               	movlw	0
  9655  001B84  6EE6               	movwf	postinc1,c
  9656  001B86  0E00               	movlw	0
  9657  001B88  6EE6               	movwf	postinc1,c
  9658  001B8A  0E00               	movlw	0
  9659  001B8C  6EE6               	movwf	postinc1,c
  9660  001B8E  EC59  F00B         	call	_wdtdelay	;wreg free
  9661                           
  9662                           ; BSR set to: 0
  9663                           ;eadog.c: 144:  SPI1_Exchange8bit(cmd);
  9664                           ;stkvar	_cmd @ sp[(0)+-1]
  9665  001B92  0EFF               	movlw	-1
  9666  001B94  50E3               	movf	plusw1,w,c
  9667  001B96  6EE6               	movwf	postinc1,c
  9668  001B98  EC58  F012         	call	_SPI1_Exchange8bit	;wreg free
  9669                           
  9670                           ;eadog.c: 145:  wdtdelay(800);
  9671  001B9C  0E20               	movlw	32
  9672  001B9E  6EE6               	movwf	postinc1,c
  9673  001BA0  0E03               	movlw	3
  9674  001BA2  6EE6               	movwf	postinc1,c
  9675  001BA4  0E00               	movlw	0
  9676  001BA6  6EE6               	movwf	postinc1,c
  9677  001BA8  0E00               	movlw	0
  9678  001BAA  6EE6               	movwf	postinc1,c
  9679  001BAC  EC59  F00B         	call	_wdtdelay	;wreg free
  9680                           
  9681                           ; BSR set to: 0
  9682                           ; _send_lcd_cmd_long: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  9683  001BB0  52E5               	movf	postdec1,f,c
  9684  001BB2  0012               	return		;funcret
  9685  001BB4                     __end_of_send_lcd_cmd_long:
  9686                           	opt callstack 0
  9687                           
  9688 ;; *************** function _send_lcd_cmd *****************
  9689 ;; Defined at:
  9690 ;;		line 130 in file "eadog.c"
  9691 ;; Parameters:    Size  Location     Type
  9692 ;;  cmd             1  [STACK] const unsigned char 
  9693 ;; Auto vars:     Size  Location     Type
  9694 ;;		None
  9695 ;; Return value:  Size  Location     Type
  9696 ;;                  1  [STACK] void 
  9697 ;; Registers used:
  9698 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  9699 ;; Tracked objects:
  9700 ;;		On entry : 3F/0
  9701 ;;		On exit  : 3F/0
  9702 ;;		Unchanged: 0/0
  9703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9704 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9705 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9706 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9707 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9708 ;;Total ram usage:        0 bytes
  9709 ;; Hardware stack levels used:    1
  9710 ;; Hardware stack levels required when called:   16
  9711 ;; This function calls:
  9712 ;;		_SPI1_Exchange8bit
  9713 ;;		_wdtdelay
  9714 ;; This function is called by:
  9715 ;;		_init_display
  9716 ;; This function uses a reentrant model
  9717 ;;
  9718                           
  9719                           	psect	text20
  9720  001BB4                     __ptext20:
  9721                           	opt callstack 0
  9722  001BB4                     _send_lcd_cmd:
  9723                           	opt callstack 13
  9724                           
  9725                           ; BSR set to: 0
  9726                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9727                           ;incstack = 0
  9728                           ;eadog.c: 130: static void send_lcd_cmd(const uint8_t cmd);eadog.c: 131: {;eadog.c: 132:
      +                            do { LATCbits.LATC2 = 0; } while(0);
  9729  001BB4  94BC               	bcf	188,2,c	;volatile
  9730                           
  9731                           ;eadog.c: 133:  SPI1_Exchange8bit(0xFE);
  9732  001BB6  0EFE               	movlw	254
  9733  001BB8  6EE6               	movwf	postinc1,c
  9734  001BBA  EC58  F012         	call	_SPI1_Exchange8bit	;wreg free
  9735                           
  9736                           ; BSR set to: 57
  9737                           ;eadog.c: 134:  wdtdelay(8);
  9738  001BBE  0E08               	movlw	8
  9739  001BC0  6EE6               	movwf	postinc1,c
  9740  001BC2  0E00               	movlw	0
  9741  001BC4  6EE6               	movwf	postinc1,c
  9742  001BC6  0E00               	movlw	0
  9743  001BC8  6EE6               	movwf	postinc1,c
  9744  001BCA  0E00               	movlw	0
  9745  001BCC  6EE6               	movwf	postinc1,c
  9746  001BCE  EC59  F00B         	call	_wdtdelay	;wreg free
  9747                           
  9748                           ; BSR set to: 0
  9749                           ;eadog.c: 135:  SPI1_Exchange8bit(cmd);
  9750                           ;stkvar	_cmd @ sp[(0)+-1]
  9751  001BD2  0EFF               	movlw	-1
  9752  001BD4  50E3               	movf	plusw1,w,c
  9753  001BD6  6EE6               	movwf	postinc1,c
  9754  001BD8  EC58  F012         	call	_SPI1_Exchange8bit	;wreg free
  9755                           
  9756                           ;eadog.c: 136:  wdtdelay(8);
  9757  001BDC  0E08               	movlw	8
  9758  001BDE  6EE6               	movwf	postinc1,c
  9759  001BE0  0E00               	movlw	0
  9760  001BE2  6EE6               	movwf	postinc1,c
  9761  001BE4  0E00               	movlw	0
  9762  001BE6  6EE6               	movwf	postinc1,c
  9763  001BE8  0E00               	movlw	0
  9764  001BEA  6EE6               	movwf	postinc1,c
  9765  001BEC  EC59  F00B         	call	_wdtdelay	;wreg free
  9766                           
  9767                           ; BSR set to: 0
  9768                           ; _send_lcd_cmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
  9769  001BF0  52E5               	movf	postdec1,f,c
  9770  001BF2  0012               	return		;funcret
  9771  001BF4                     __end_of_send_lcd_cmd:
  9772                           	opt callstack 0
  9773                           
  9774 ;; *************** function _SPI1_Exchange8bit *****************
  9775 ;; Defined at:
  9776 ;;		line 79 in file "mcc_generated_files/spi1.c"
  9777 ;; Parameters:    Size  Location     Type
  9778 ;;  data            1  [STACK] unsigned char 
  9779 ;; Auto vars:     Size  Location     Type
  9780 ;;		None
  9781 ;; Return value:  Size  Location     Type
  9782 ;;                  1  [STACK] unsigned char 
  9783 ;; Registers used:
  9784 ;;		wreg, fsr1l, fsr1h, status,2, btemp
  9785 ;; Tracked objects:
  9786 ;;		On entry : 0/1
  9787 ;;		On exit  : 3F/39
  9788 ;;		Unchanged: 0/0
  9789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9790 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9791 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9793 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9794 ;;Total ram usage:        0 bytes
  9795 ;; Hardware stack levels used:    1
  9796 ;; Hardware stack levels required when called:   15
  9797 ;; This function calls:
  9798 ;;		Nothing
  9799 ;; This function is called by:
  9800 ;;		_send_lcd_data
  9801 ;;		_send_lcd_cmd
  9802 ;;		_send_lcd_cmd_long
  9803 ;;		_set_dac
  9804 ;; This function uses a reentrant model
  9805 ;;
  9806                           
  9807                           	psect	text21
  9808  0024B0                     __ptext21:
  9809                           	opt callstack 0
  9810  0024B0                     _SPI1_Exchange8bit:
  9811                           	opt callstack 14
  9812                           
  9813                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
  9814                           
  9815                           ; BSR set to: 0
  9816                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9817                           ;incstack = 0
  9818  0024B0  0E01               	movlw	1
  9819  0024B2  013D               	movlb	61	; () banked
  9820  0024B4  6F12               	movwf	18,b	;volatile
  9821                           
  9822                           ; BSR set to: 61
  9823                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
  9824                           ;stkvar	_data @ sp[(0)+-1]
  9825  0024B6  0EFF               	movlw	-1
  9826  0024B8  006F FF8F FD11     	movff	plusw1,15633	;volatile
  9827  0024BE                     l809:
  9828                           
  9829                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
  9830  0024BE  0139               	movlb	57	; () banked
  9831  0024C0  A9A2               	btfss	162,4,b	;volatile
  9832  0024C2  D7FD               	goto	l809
  9833                           
  9834                           ; BSR set to: 57
  9835                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
  9836  0024C4  006F F440  F02A    	movff	15632,btemp	;volatile
  9837                           
  9838                           ; BSR set to: 57
  9839                           ; _SPI1_Exchange8bit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  9840  0024CA  52E5               	movf	postdec1,f,c
  9841  0024CC  0012               	return		;funcret
  9842  0024CE                     __end_of_SPI1_Exchange8bit:
  9843                           	opt callstack 0
  9844                           
  9845 ;; *************** function _ringBufS_init *****************
  9846 ;; Defined at:
  9847 ;;		line 22 in file "ringbufs.c"
  9848 ;; Parameters:    Size  Location     Type
  9849 ;;  _this           2  [STACK] PTR volatile struct ring
  9850 ;;		 -> ring_buf2(67), ring_buf1(67), 
  9851 ;; Auto vars:     Size  Location     Type
  9852 ;;		None
  9853 ;; Return value:  Size  Location     Type
  9854 ;;                  1  [STACK] void 
  9855 ;; Registers used:
  9856 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  9857 ;; Tracked objects:
  9858 ;;		On entry : 0/0
  9859 ;;		On exit  : 0/0
  9860 ;;		Unchanged: 0/0
  9861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9862 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9863 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9864 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9865 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9866 ;;Total ram usage:        0 bytes
  9867 ;; Hardware stack levels used:    1
  9868 ;; Hardware stack levels required when called:   16
  9869 ;; This function calls:
  9870 ;;		_memset
  9871 ;; This function is called by:
  9872 ;;		_init_display
  9873 ;; This function uses a reentrant model
  9874 ;;
  9875                           
  9876                           	psect	text22
  9877  0020B6                     __ptext22:
  9878                           	opt callstack 0
  9879  0020B6                     _ringBufS_init:
  9880                           	opt callstack 13
  9881                           
  9882                           ;ringbufs.c: 22: void ringBufS_init(volatile ringBufS_t *_this);ringbufs.c: 23: {;ringbu
      +                          fs.c: 32:  memset((void*)_this, 0, sizeof(*_this));
  9883                           
  9884                           ; BSR set to: 57
  9885                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9886                           ;incstack = 0
  9887  0020B6  0E43               	movlw	67
  9888  0020B8  6EE6               	movwf	postinc1,c
  9889  0020BA  0E00               	movlw	0
  9890  0020BC  6EE6               	movwf	postinc1,c
  9891  0020BE  0E00               	movlw	0
  9892  0020C0  6EE6               	movwf	postinc1,c
  9893  0020C2  0E00               	movlw	0
  9894  0020C4  6EE6               	movwf	postinc1,c
  9895                           
  9896                           ;stkvar	__this @ sp[(-4)+-2]
  9897  0020C6  0EFA               	movlw	-6
  9898  0020C8  006F FF8F FFE6     	movff	plusw1,postinc1
  9899  0020CE  006F FF8F FFE6     	movff	plusw1,postinc1
  9900  0020D4  ECF6  F0D5         	call	_memset	;wreg free
  9901                           
  9902                           ; _ringBufS_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  9903  0020D8  52E5               	movf	postdec1,f,c
  9904  0020DA  52E5               	movf	postdec1,f,c
  9905  0020DC  0012               	return		;funcret
  9906  0020DE                     __end_of_ringBufS_init:
  9907                           	opt callstack 0
  9908                           
  9909 ;; *************** function _init_bsoc *****************
  9910 ;; Defined at:
  9911 ;;		line 110 in file "bsoc.c"
  9912 ;; Parameters:    Size  Location     Type
  9913 ;;		None
  9914 ;; Auto vars:     Size  Location     Type
  9915 ;;		None
  9916 ;; Return value:  Size  Location     Type
  9917 ;;                  1  [STACK] void 
  9918 ;; Registers used:
  9919 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
  9920 ;; Tracked objects:
  9921 ;;		On entry : 0/1
  9922 ;;		On exit  : 0/0
  9923 ;;		Unchanged: 0/0
  9924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9925 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9926 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9928 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9929 ;;Total ram usage:        0 bytes
  9930 ;; Hardware stack levels used:    1
  9931 ;; Hardware stack levels required when called:   18
  9932 ;; This function calls:
  9933 ;;		_TMR3_SetInterruptHandler
  9934 ;;		_Volts_to_SOC
  9935 ;;		___fldiv
  9936 ;;		___flmul
  9937 ;;		___fltol
  9938 ;;		___xxtofl
  9939 ;;		_conv_raw_result
  9940 ;; This function is called by:
  9941 ;;		_main
  9942 ;; This function uses a reentrant model
  9943 ;;
  9944                           
  9945                           	psect	text23
  9946  01C396                     __ptext23:
  9947                           	opt callstack 0
  9948  01C396                     _init_bsoc:
  9949                           	opt callstack 12
  9950                           
  9951                           ;bsoc.c: 115:  C.soc = Volts_to_SOC((uint32_t) conv_raw_result(V_BAT, CONV) * 1000.0);
  9952                           
  9953                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9954                           ;incstack = 0
  9955  01C396  0E00               	movlw	0
  9956  01C398  6EE6               	movwf	postinc1,c
  9957  01C39A  0E00               	movlw	0
  9958  01C39C  6EE6               	movwf	postinc1,c
  9959  01C39E  0E7A               	movlw	122
  9960  01C3A0  6EE6               	movwf	postinc1,c
  9961  01C3A2  0E44               	movlw	68
  9962  01C3A4  6EE6               	movwf	postinc1,c
  9963  01C3A6  0E00               	movlw	0
  9964  01C3A8  6EE6               	movwf	postinc1,c
  9965  01C3AA  0E04               	movlw	4
  9966  01C3AC  6EE6               	movwf	postinc1,c
  9967  01C3AE  ECE6  F0C2         	call	_conv_raw_result	;wreg free
  9968  01C3B2  0060  F0AB  FFE6   	movff	btemp,postinc1
  9969  01C3B8  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  9970  01C3BE  0060  F0B3  FFE6   	movff	btemp+2,postinc1
  9971  01C3C4  0060  F0B7  FFE6   	movff	btemp+3,postinc1
  9972  01C3CA  EC9D  F0F1         	call	___fltol	;wreg free
  9973  01C3CE  0060  F0AB  FFE6   	movff	btemp,postinc1
  9974  01C3D4  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  9975  01C3DA  0060  F0B3  FFE6   	movff	btemp+2,postinc1
  9976  01C3E0  0060  F0B7  FFE6   	movff	btemp+3,postinc1
  9977  01C3E6  0E00               	movlw	0
  9978  01C3E8  6EE6               	movwf	postinc1,c
  9979  01C3EA  EC6F  F0E9         	call	___xxtofl	;wreg free
  9980  01C3EE  0060  F0AB  FFE6   	movff	btemp,postinc1
  9981  01C3F4  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  9982  01C3FA  0060  F0B3  FFE6   	movff	btemp+2,postinc1
  9983  01C400  0060  F0B7  FFE6   	movff	btemp+3,postinc1
  9984  01C406  EC4D  F0B2         	call	___flmul	;wreg free
  9985  01C40A  0060  F0AB  FFE6   	movff	btemp,postinc1
  9986  01C410  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  9987  01C416  0060  F0B3  FFE6   	movff	btemp+2,postinc1
  9988  01C41C  0060  F0B7  FFE6   	movff	btemp+3,postinc1
  9989  01C422  EC9D  F0F1         	call	___fltol	;wreg free
  9990  01C426  0060  F0AB  FFE6   	movff	btemp,postinc1
  9991  01C42C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  9992  01C432  0060  F0B3  FFE6   	movff	btemp+2,postinc1
  9993  01C438  0060  F0B7  FFE6   	movff	btemp+3,postinc1
  9994  01C43E  EC82  F001         	call	_Volts_to_SOC	;wreg free
  9995  01C442  0060  F0A8  F9B5   	movff	btemp,_C+182	;volatile
  9996  01C448  0060  F0AC  F9B6   	movff	btemp+1,_C+183	;volatile
  9997                           
  9998                           ;bsoc.c: 116:  C.dynamic_ah = C.bank_ah * (Volts_to_SOC((uint32_t) conv_raw_result(V_BAT
      +                          , CONV) * 1000.0) / 100.0);
  9999  01C44E  EE22  F18B         	lfsr	2,_C+140	;volatile
 10000  01C452  006F FF7B FFE6     	movff	postinc2,postinc1
 10001  01C458  006F FF7B FFE6     	movff	postinc2,postinc1
 10002  01C45E  006F FF7B FFE6     	movff	postinc2,postinc1
 10003  01C464  006F FF7B FFE6     	movff	postinc2,postinc1
 10004  01C46A  0E00               	movlw	0
 10005  01C46C  6EE6               	movwf	postinc1,c
 10006  01C46E  0E00               	movlw	0
 10007  01C470  6EE6               	movwf	postinc1,c
 10008  01C472  0EC8               	movlw	200
 10009  01C474  6EE6               	movwf	postinc1,c
 10010  01C476  0E42               	movlw	66
 10011  01C478  6EE6               	movwf	postinc1,c
 10012  01C47A  0E00               	movlw	0
 10013  01C47C  6EE6               	movwf	postinc1,c
 10014  01C47E  0E00               	movlw	0
 10015  01C480  6EE6               	movwf	postinc1,c
 10016  01C482  0E7A               	movlw	122
 10017  01C484  6EE6               	movwf	postinc1,c
 10018  01C486  0E44               	movlw	68
 10019  01C488  6EE6               	movwf	postinc1,c
 10020  01C48A  0E00               	movlw	0
 10021  01C48C  6EE6               	movwf	postinc1,c
 10022  01C48E  0E04               	movlw	4
 10023  01C490  6EE6               	movwf	postinc1,c
 10024  01C492  ECE6  F0C2         	call	_conv_raw_result	;wreg free
 10025  01C496  0060  F0AB  FFE6   	movff	btemp,postinc1
 10026  01C49C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 10027  01C4A2  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 10028  01C4A8  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 10029  01C4AE  EC9D  F0F1         	call	___fltol	;wreg free
 10030  01C4B2  0060  F0AB  FFE6   	movff	btemp,postinc1
 10031  01C4B8  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 10032  01C4BE  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 10033  01C4C4  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 10034  01C4CA  0E00               	movlw	0
 10035  01C4CC  6EE6               	movwf	postinc1,c
 10036  01C4CE  EC6F  F0E9         	call	___xxtofl	;wreg free
 10037  01C4D2  0060  F0AB  FFE6   	movff	btemp,postinc1
 10038  01C4D8  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 10039  01C4DE  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 10040  01C4E4  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 10041  01C4EA  EC4D  F0B2         	call	___flmul	;wreg free
 10042  01C4EE  0060  F0AB  FFE6   	movff	btemp,postinc1
 10043  01C4F4  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 10044  01C4FA  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 10045  01C500  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 10046  01C506  EC9D  F0F1         	call	___fltol	;wreg free
 10047  01C50A  0060  F0AB  FFE6   	movff	btemp,postinc1
 10048  01C510  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 10049  01C516  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 10050  01C51C  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 10051  01C522  EC82  F001         	call	_Volts_to_SOC	;wreg free
 10052  01C526  0060  F0A8  F034   	movff	btemp,btemp+10
 10053  01C52C  0060  F0AC  F035   	movff	btemp+1,btemp+11
 10054  01C532  5034               	movf	(btemp+10)^0,w,c
 10055  01C534  6E2E               	movwf	(btemp+4)^0,c
 10056  01C536  5035               	movf	(btemp+11)^0,w,c
 10057  01C538  6E2F               	movwf	(btemp+5)^0,c
 10058  01C53A  6A30               	clrf	(btemp+6)^0,c
 10059  01C53C  6A31               	clrf	(btemp+7)^0,c
 10060  01C53E  0060  F0BB  FFE6   	movff	btemp+4,postinc1
 10061  01C544  0060  F0BF  FFE6   	movff	btemp+5,postinc1
 10062  01C54A  0060  F0C3  FFE6   	movff	btemp+6,postinc1
 10063  01C550  0060  F0C7  FFE6   	movff	btemp+7,postinc1
 10064  01C556  0E00               	movlw	0
 10065  01C558  6EE6               	movwf	postinc1,c
 10066  01C55A  EC6F  F0E9         	call	___xxtofl	;wreg free
 10067  01C55E  0060  F0AB  FFE6   	movff	btemp,postinc1
 10068  01C564  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 10069  01C56A  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 10070  01C570  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 10071  01C576  EC9E  F0BD         	call	___fldiv	;wreg free
 10072  01C57A  0060  F0AB  FFE6   	movff	btemp,postinc1
 10073  01C580  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 10074  01C586  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 10075  01C58C  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 10076  01C592  EC4D  F0B2         	call	___flmul	;wreg free
 10077  01C596  0060  F0A8  F98F   	movff	btemp,_C+144	;volatile
 10078  01C59C  0060  F0AC  F990   	movff	btemp+1,_C+145	;volatile
 10079  01C5A2  0060  F0B0  F991   	movff	btemp+2,_C+146	;volatile
 10080  01C5A8  0060  F0B4  F992   	movff	btemp+3,_C+147	;volatile
 10081                           
 10082                           ;bsoc.c: 117:  C.dynamic_ah_adj = C.dynamic_ah;
 10083  01C5AE  EE22  F18F         	lfsr	2,_C+144	;volatile
 10084  01C5B2  006F FF78  F99B    	movff	postinc2,_C+156	;volatile
 10085  01C5B8  006F FF78  F99C    	movff	postinc2,_C+157	;volatile
 10086  01C5BE  006F FF78  F99D    	movff	postinc2,_C+158	;volatile
 10087  01C5C4  006F FF74  F99E    	movff	postdec2,_C+159	;volatile
 10088                           
 10089                           ;bsoc.c: 118:  TMR3_SetInterruptHandler(calc_bsoc);
 10090  01C5CA  0E18               	movlw	low _calc_bsoc
 10091  01C5CC  6EE6               	movwf	postinc1,c
 10092  01C5CE  0E48               	movlw	high _calc_bsoc
 10093  01C5D0  6EE6               	movwf	postinc1,c
 10094  01C5D2  0E01               	movlw	low (_calc_bsoc shr (0+16))
 10095  01C5D4  6EE6               	movwf	postinc1,c
 10096  01C5D6  ECE7  F010         	call	_TMR3_SetInterruptHandler	;wreg free
 10097                           
 10098                           ; _init_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 10099  01C5DA  0012               	return		;funcret
 10100  01C5DC                     __end_of_init_bsoc:
 10101                           	opt callstack 0
 10102                           
 10103 ;; *************** function _Volts_to_SOC *****************
 10104 ;; Defined at:
 10105 ;;		line 175 in file "bsoc.c"
 10106 ;; Parameters:    Size  Location     Type
 10107 ;;  cvoltage        4  [STACK] const unsigned long 
 10108 ;; Auto vars:     Size  Location     Type
 10109 ;;  soc             2  [STACK] unsigned short 
 10110 ;;  slot            1  [STACK] unsigned char 
 10111 ;; Return value:  Size  Location     Type
 10112 ;;                  2  [STACK] unsigned short 
 10113 ;; Registers used:
 10114 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 10115 ;; Tracked objects:
 10116 ;;		On entry : 0/1
 10117 ;;		On exit  : 0/0
 10118 ;;		Unchanged: 0/0
 10119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10120 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10121 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10122 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10123 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10124 ;;Total ram usage:        0 bytes
 10125 ;; Hardware stack levels used:    1
 10126 ;; Hardware stack levels required when called:   15
 10127 ;; This function calls:
 10128 ;;		Nothing
 10129 ;; This function is called by:
 10130 ;;		_init_bsoc
 10131 ;; This function uses a reentrant model
 10132 ;;
 10133                           
 10134                           	psect	text24
 10135  000304                     __ptext24:
 10136                           	opt callstack 0
 10137  000304                     _Volts_to_SOC:
 10138                           	opt callstack 0
 10139                           
 10140                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10141  000304  52E6               	movf	postinc1,f,c
 10142  000306  52E6               	movf	postinc1,f,c
 10143  000308  52E6               	movf	postinc1,f,c
 10144                           
 10145                           ;bsoc.c: 175: uint16_t Volts_to_SOC(const uint32_t cvoltage);bsoc.c: 176: {;bsoc.c: 177:
      +                            uint8_t slot;;bsoc.c: 178:  uint16_t soc = 0;
 10146                           ;stkvar	_soc @ sp[(-3)+0]
 10147                           
 10148                           ;incstack = 0
 10149  00030A  0EFD               	movlw	-3
 10150  00030C  6AE3               	clrf	plusw1,c
 10151  00030E  0EFE               	movlw	-2
 10152  000310  6AE3               	clrf	plusw1,c
 10153                           
 10154                           ;bsoc.c: 183:  for (slot = 0; slot < 26; slot++) {
 10155                           ;stkvar	_slot @ sp[(-3)+2]
 10156  000312  0EFF               	movlw	-1
 10157  000314  6AE3               	clrf	plusw1,c
 10158  000316                     l13816:
 10159                           
 10160                           ;bsoc.c: 184:   if (cvoltage > BVSOC_TABLE[slot][0]) {
 10161                           ;stkvar	_cvoltage @ sp[(-3)+-4]
 10162                           ;stkvar	_slot @ sp[(-3)+2]
 10163  000316  0EFF               	movlw	-1
 10164  000318  50E3               	movf	plusw1,w,c
 10165  00031A  0D08               	mullw	8
 10166  00031C  0EAB               	movlw	low _BVSOC_TABLE
 10167  00031E  24F3               	addwf	243,w,c
 10168  000320  6EF6               	movwf	tblptrl,c
 10169  000322  0EF7               	movlw	high _BVSOC_TABLE
 10170  000324  20F4               	addwfc	244,w,c
 10171  000326  6EF7               	movwf	tblptrh,c
 10172  000328                     	if	1	;There are 3 active tblptr bytes
 10173  000328  6AF8               	clrf	tblptru,c
 10174  00032A  0E00               	movlw	low (__mediumconst shr (0+16))
 10175  00032C  22F8               	addwfc	tblptru,f,c
 10176  00032E                     	endif
 10177  00032E  0EF9               	movlw	-7
 10178  000330  50E3               	movf	plusw1,w,c
 10179  000332  0009               	tblrd		*+
 10180  000334  5CF5               	subwf	tablat,w,c
 10181  000336  0EFA               	movlw	-6
 10182  000338  50E3               	movf	plusw1,w,c
 10183  00033A  0009               	tblrd		*+
 10184  00033C  58F5               	subwfb	tablat,w,c
 10185  00033E  0EFB               	movlw	-5
 10186  000340  50E3               	movf	plusw1,w,c
 10187  000342  0009               	tblrd		*+
 10188  000344  58F5               	subwfb	tablat,w,c
 10189  000346  0EFC               	movlw	-4
 10190  000348  50E3               	movf	plusw1,w,c
 10191  00034A  0009               	tblrd		*+
 10192  00034C  58F5               	subwfb	tablat,w,c
 10193  00034E  B0D8               	btfsc	status,0,c
 10194  000350  D020               	goto	l13820
 10195                           
 10196                           ;bsoc.c: 185:    soc = BVSOC_TABLE[slot][1];
 10197                           ;stkvar	_slot @ sp[(-3)+2]
 10198  000352  0EFF               	movlw	-1
 10199  000354  50E3               	movf	plusw1,w,c
 10200  000356  0D08               	mullw	8
 10201  000358  0E04               	movlw	4
 10202  00035A  26F3               	addwf	243,f,c
 10203  00035C  0E00               	movlw	0
 10204  00035E  22F4               	addwfc	244,f,c
 10205  000360  0EAB               	movlw	low _BVSOC_TABLE
 10206  000362  24F3               	addwf	243,w,c
 10207  000364  6EF6               	movwf	tblptrl,c
 10208  000366  0EF7               	movlw	high _BVSOC_TABLE
 10209  000368  20F4               	addwfc	244,w,c
 10210  00036A  6EF7               	movwf	tblptrh,c
 10211  00036C                     	if	1	;There are 3 active tblptr bytes
 10212  00036C  6AF8               	clrf	tblptru,c
 10213  00036E  0E00               	movlw	low (__mediumconst shr (0+16))
 10214  000370  22F8               	addwfc	tblptru,f,c
 10215  000372                     	endif
 10216  000372  0009               	tblrd		*+
 10217  000374  006F FFD4  F034    	movff	tablat,btemp+10
 10218  00037A  0009               	tblrd		*+
 10219  00037C  006F FFD4  F035    	movff	tablat,btemp+11
 10220                           
 10221                           ;stkvar	_soc @ sp[(-3)+0]
 10222  000382  0EFD               	movlw	-3
 10223  000384  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 10224  00038A  0EFE               	movlw	-2
 10225  00038C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 10226  000392                     l13820:
 10227                           
 10228                           ;bsoc.c: 187:  }
 10229                           ;stkvar	_slot @ sp[(-3)+2]
 10230  000392  0EFF               	movlw	-1
 10231  000394  2AE3               	incf	plusw1,f,c
 10232                           
 10233                           ;stkvar	_slot @ sp[(-3)+2]
 10234  000396  0EFF               	movlw	-1
 10235  000398  006F FF8C  F02A    	movff	plusw1,btemp
 10236  00039E  0E19               	movlw	25
 10237  0003A0  642A               	cpfsgt	btemp^0,c
 10238  0003A2  D7B9               	goto	l13816
 10239                           
 10240                           ;bsoc.c: 188:  return soc;
 10241                           ;stkvar	_soc @ sp[(-3)+0]
 10242  0003A4  0EFD               	movlw	-3
 10243  0003A6  006F FF8C  F02A    	movff	plusw1,btemp
 10244  0003AC  0EFE               	movlw	-2
 10245  0003AE  006F FF8C  F02B    	movff	plusw1,btemp+1
 10246                           
 10247                           ; _Volts_to_SOC: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, 
      +                          argsize = 4, vargsize = 0
 10248  0003B4  0EF9               	movlw	249
 10249  0003B6  26E1               	addwf	fsr1l,f,c
 10250  0003B8  0EFF               	movlw	255
 10251  0003BA  22E2               	addwfc	fsr1h,f,c
 10252  0003BC  0012               	return		;funcret
 10253  0003BE                     __end_of_Volts_to_SOC:
 10254                           	opt callstack 0
 10255                           
 10256 ;; *************** function _hid_display *****************
 10257 ;; Defined at:
 10258 ;;		line 22 in file "hid.c"
 10259 ;; Parameters:    Size  Location     Type
 10260 ;;  h               2  [STACK] PTR struct H_data
 10261 ;;		 -> H(9), 
 10262 ;; Auto vars:     Size  Location     Type
 10263 ;;		None
 10264 ;; Return value:  Size  Location     Type
 10265 ;;                  2  [STACK] PTR struct H_data
 10266 ;; Registers used:
 10267 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl, prodh
 10268 ;; Tracked objects:
 10269 ;;		On entry : 0/39
 10270 ;;		On exit  : 0/0
 10271 ;;		Unchanged: 0/0
 10272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10273 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10276 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10277 ;;Total ram usage:        0 bytes
 10278 ;; Hardware stack levels used:    1
 10279 ;; Hardware stack levels required when called:   17
 10280 ;; This function calls:
 10281 ;;		_hid_input
 10282 ;; This function is called by:
 10283 ;;		_main
 10284 ;; This function uses a reentrant model
 10285 ;;
 10286                           
 10287                           	psect	text25
 10288  01CEB0                     __ptext25:
 10289                           	opt callstack 0
 10290  01CEB0                     _hid_display:
 10291                           	opt callstack 13
 10292                           
 10293                           ;hid.c: 22: H_data* hid_display(H_data* h);hid.c: 23: {;hid.c: 24:  hid_input(h);
 10294                           ;stkvar	_h @ sp[(0)+-2]
 10295                           
 10296                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10297                           ;incstack = 0
 10298  01CEB0  0EFE               	movlw	-2
 10299  01CEB2  006F FF8F FFE6     	movff	plusw1,postinc1
 10300  01CEB8  006F FF8F FFE6     	movff	plusw1,postinc1
 10301  01CEBE  EC5C  F0F8         	call	_hid_input	;wreg free
 10302                           
 10303                           ;hid.c: 26:  switch (h->h_state) {
 10304  01CEC2  D0E6               	goto	l17230
 10305  01CEC4                     l17204:
 10306                           
 10307                           ;hid.c: 28:   h->h_state = H_STATE_DISPLAY;
 10308                           ;stkvar	_h @ sp[(0)+-2]
 10309  01CEC4  0EFE               	movlw	-2
 10310  01CEC6  006F FF8C  F034    	movff	plusw1,btemp+10
 10311  01CECC  0EFF               	movlw	-1
 10312  01CECE  006F FF8C  F035    	movff	plusw1,btemp+11
 10313  01CED4  0E01               	movlw	1
 10314  01CED6  2434               	addwf	(btemp+10)^0,w,c
 10315  01CED8  6ED9               	movwf	fsr2l,c
 10316  01CEDA  0E00               	movlw	0
 10317  01CEDC  2035               	addwfc	(btemp+11)^0,w,c
 10318  01CEDE  6EDA               	movwf	fsr2h,c
 10319  01CEE0  0E01               	movlw	1
 10320  01CEE2  6EDF               	movwf	indf2,c
 10321                           
 10322                           ;hid.c: 29:   h->hid_display = HID_MAIN;
 10323                           ;stkvar	_h @ sp[(0)+-2]
 10324  01CEE4  0EFE               	movlw	-2
 10325  01CEE6  006F FF8F FFD9     	movff	plusw1,fsr2l
 10326  01CEEC  0EFF               	movlw	-1
 10327  01CEEE  006F FF8F FFDA     	movff	plusw1,fsr2h
 10328  01CEF4  0E00               	movlw	0
 10329  01CEF6  6EDF               	movwf	indf2,c
 10330                           
 10331                           ;hid.c: 30:   h->wait_enter = 1;
 10332                           ;stkvar	_h @ sp[(0)+-2]
 10333  01CEF8  0EFE               	movlw	-2
 10334  01CEFA  006F FF8C  F034    	movff	plusw1,btemp+10
 10335  01CF00  0EFF               	movlw	-1
 10336  01CF02  006F FF8C  F035    	movff	plusw1,btemp+11
 10337  01CF08  0E04               	movlw	4
 10338  01CF0A  2434               	addwf	(btemp+10)^0,w,c
 10339  01CF0C  6ED9               	movwf	fsr2l,c
 10340  01CF0E  0E00               	movlw	0
 10341  01CF10  2035               	addwfc	(btemp+11)^0,w,c
 10342  01CF12  6EDA               	movwf	fsr2h,c
 10343  01CF14  0E01               	movlw	1
 10344  01CF16  6EDF               	movwf	indf2,c
 10345                           
 10346                           ;hid.c: 31:   h->wait_select = 1;
 10347                           ;stkvar	_h @ sp[(0)+-2]
 10348  01CF18  0EFE               	movlw	-2
 10349  01CF1A  006F FF8C  F034    	movff	plusw1,btemp+10
 10350  01CF20  0EFF               	movlw	-1
 10351  01CF22  006F FF8C  F035    	movff	plusw1,btemp+11
 10352  01CF28  0E02               	movlw	2
 10353  01CF2A  2434               	addwf	(btemp+10)^0,w,c
 10354  01CF2C  6ED9               	movwf	fsr2l,c
 10355  01CF2E  0E00               	movlw	0
 10356  01CF30  2035               	addwfc	(btemp+11)^0,w,c
 10357  01CF32  6EDA               	movwf	fsr2h,c
 10358  01CF34  0E01               	movlw	1
 10359  01CF36  6EDF               	movwf	indf2,c
 10360                           
 10361                           ;hid.c: 32:   h->wait_calib = 1;
 10362                           ;stkvar	_h @ sp[(0)+-2]
 10363  01CF38  0EFE               	movlw	-2
 10364  01CF3A  006F FF8C  F034    	movff	plusw1,btemp+10
 10365  01CF40  0EFF               	movlw	-1
 10366  01CF42  006F FF8C  F035    	movff	plusw1,btemp+11
 10367  01CF48  0E06               	movlw	6
 10368  01CF4A  2434               	addwf	(btemp+10)^0,w,c
 10369  01CF4C  6ED9               	movwf	fsr2l,c
 10370  01CF4E  0E00               	movlw	0
 10371  01CF50  2035               	addwfc	(btemp+11)^0,w,c
 10372  01CF52  6EDA               	movwf	fsr2h,c
 10373  01CF54  0E01               	movlw	1
 10374  01CF56  6EDF               	movwf	indf2,c
 10375                           
 10376                           ;hid.c: 33:   h->select_p = SW_OFF;
 10377                           ;stkvar	_h @ sp[(0)+-2]
 10378  01CF58  0EFE               	movlw	-2
 10379  01CF5A  006F FF8C  F034    	movff	plusw1,btemp+10
 10380  01CF60  0EFF               	movlw	-1
 10381  01CF62  006F FF8C  F035    	movff	plusw1,btemp+11
 10382  01CF68  0E03               	movlw	3
 10383  01CF6A  2434               	addwf	(btemp+10)^0,w,c
 10384  01CF6C  6ED9               	movwf	fsr2l,c
 10385  01CF6E  0E00               	movlw	0
 10386  01CF70  2035               	addwfc	(btemp+11)^0,w,c
 10387  01CF72  6EDA               	movwf	fsr2h,c
 10388  01CF74  0E00               	movlw	0
 10389  01CF76  6EDF               	movwf	indf2,c
 10390                           
 10391                           ;hid.c: 34:   h->enter_p = SW_OFF;
 10392                           ;stkvar	_h @ sp[(0)+-2]
 10393  01CF78  0EFE               	movlw	-2
 10394  01CF7A  006F FF8C  F034    	movff	plusw1,btemp+10
 10395  01CF80  0EFF               	movlw	-1
 10396  01CF82  006F FF8C  F035    	movff	plusw1,btemp+11
 10397  01CF88  0E05               	movlw	5
 10398  01CF8A  2434               	addwf	(btemp+10)^0,w,c
 10399  01CF8C  6ED9               	movwf	fsr2l,c
 10400  01CF8E  0E00               	movlw	0
 10401  01CF90  2035               	addwfc	(btemp+11)^0,w,c
 10402  01CF92  6EDA               	movwf	fsr2h,c
 10403  01CF94  0E00               	movlw	0
 10404  01CF96  6EDF               	movwf	indf2,c
 10405                           
 10406                           ;hid.c: 35:   h->calib_p = SW_OFF;
 10407                           ;stkvar	_h @ sp[(0)+-2]
 10408  01CF98  0EFE               	movlw	-2
 10409  01CF9A  006F FF8C  F034    	movff	plusw1,btemp+10
 10410  01CFA0  0EFF               	movlw	-1
 10411  01CFA2  006F FF8C  F035    	movff	plusw1,btemp+11
 10412  01CFA8  0E07               	movlw	7
 10413  01CFAA  2434               	addwf	(btemp+10)^0,w,c
 10414  01CFAC  6ED9               	movwf	fsr2l,c
 10415  01CFAE  0E00               	movlw	0
 10416  01CFB0  2035               	addwfc	(btemp+11)^0,w,c
 10417  01CFB2  6EDA               	movwf	fsr2h,c
 10418  01CFB4  0E00               	movlw	0
 10419  01CFB6  D06A               	goto	L6
 10420  01CFB8                     l17220:
 10421                           
 10422                           ;hid.c: 39:   if (!h->wait_select && (h->select_p == SW_OFF)) {
 10423                           ;stkvar	_h @ sp[(0)+-2]
 10424  01CFB8  0EFE               	movlw	-2
 10425  01CFBA  006F FF8C  F034    	movff	plusw1,btemp+10
 10426  01CFC0  0EFF               	movlw	-1
 10427  01CFC2  006F FF8C  F035    	movff	plusw1,btemp+11
 10428  01CFC8  0E02               	movlw	2
 10429  01CFCA  2434               	addwf	(btemp+10)^0,w,c
 10430  01CFCC  6ED9               	movwf	fsr2l,c
 10431  01CFCE  0E00               	movlw	0
 10432  01CFD0  2035               	addwfc	(btemp+11)^0,w,c
 10433  01CFD2  6EDA               	movwf	fsr2h,c
 10434  01CFD4  50DF               	movf	indf2,w,c
 10435  01CFD6  A4D8               	btfss	status,2,c
 10436  01CFD8  D076               	goto	l2290
 10437                           
 10438                           ;stkvar	_h @ sp[(0)+-2]
 10439  01CFDA  0EFE               	movlw	-2
 10440  01CFDC  006F FF8C  F034    	movff	plusw1,btemp+10
 10441  01CFE2  0EFF               	movlw	-1
 10442  01CFE4  006F FF8C  F035    	movff	plusw1,btemp+11
 10443  01CFEA  0E03               	movlw	3
 10444  01CFEC  2434               	addwf	(btemp+10)^0,w,c
 10445  01CFEE  6ED9               	movwf	fsr2l,c
 10446  01CFF0  0E00               	movlw	0
 10447  01CFF2  2035               	addwfc	(btemp+11)^0,w,c
 10448  01CFF4  6EDA               	movwf	fsr2h,c
 10449  01CFF6  50DF               	movf	indf2,w,c
 10450  01CFF8  A4D8               	btfss	status,2,c
 10451  01CFFA  D065               	goto	l2290
 10452                           
 10453                           ;hid.c: 40:    h->sequence = ++h->sequence & 0x3;
 10454                           ;stkvar	_h @ sp[(0)+-2]
 10455  01CFFC  0EFE               	movlw	-2
 10456  01CFFE  006F FF8C  F034    	movff	plusw1,btemp+10
 10457  01D004  0EFF               	movlw	-1
 10458  01D006  006F FF8C  F035    	movff	plusw1,btemp+11
 10459  01D00C  0E08               	movlw	8
 10460  01D00E  2434               	addwf	(btemp+10)^0,w,c
 10461  01D010  6ED9               	movwf	fsr2l,c
 10462  01D012  0E00               	movlw	0
 10463  01D014  2035               	addwfc	(btemp+11)^0,w,c
 10464  01D016  6EDA               	movwf	fsr2h,c
 10465                           
 10466                           ;stkvar	_h @ sp[(0)+-2]
 10467  01D018  0EFE               	movlw	-2
 10468  01D01A  006F FF8C  F034    	movff	plusw1,btemp+10
 10469  01D020  0EFF               	movlw	-1
 10470  01D022  006F FF8C  F035    	movff	plusw1,btemp+11
 10471  01D028  0E08               	movlw	8
 10472  01D02A  2434               	addwf	(btemp+10)^0,w,c
 10473  01D02C  6EE9               	movwf	fsr0l,c
 10474  01D02E  0E00               	movlw	0
 10475  01D030  2035               	addwfc	(btemp+11)^0,w,c
 10476  01D032  6EEA               	movwf	fsr0h,c
 10477  01D034  2AEF               	incf	indf0,f,c
 10478  01D036  50EF               	movf	indf0,w,c
 10479  01D038  0B03               	andlw	3
 10480  01D03A  6EDF               	movwf	indf2,c
 10481                           
 10482                           ;hid.c: 41:    h->hid_display = h->sequence;
 10483                           ;stkvar	_h @ sp[(0)+-2]
 10484  01D03C  0EFE               	movlw	-2
 10485  01D03E  006F FF8C  F034    	movff	plusw1,btemp+10
 10486  01D044  0EFF               	movlw	-1
 10487  01D046  006F FF8C  F035    	movff	plusw1,btemp+11
 10488  01D04C  0E08               	movlw	8
 10489  01D04E  2434               	addwf	(btemp+10)^0,w,c
 10490  01D050  6ED9               	movwf	fsr2l,c
 10491  01D052  0E00               	movlw	0
 10492  01D054  2035               	addwfc	(btemp+11)^0,w,c
 10493  01D056  6EDA               	movwf	fsr2h,c
 10494                           
 10495                           ;stkvar	_h @ sp[(0)+-2]
 10496  01D058  0EFE               	movlw	-2
 10497  01D05A  006F FF8F FFE9     	movff	plusw1,fsr0l
 10498  01D060  0EFF               	movlw	-1
 10499  01D062  006F FF8F FFEA     	movff	plusw1,fsr0h
 10500  01D068  006F FF7F FFEF     	movff	indf2,indf0
 10501                           
 10502                           ;hid.c: 42:    h->wait_select = 1;
 10503                           ;stkvar	_h @ sp[(0)+-2]
 10504  01D06E  0EFE               	movlw	-2
 10505  01D070  006F FF8C  F034    	movff	plusw1,btemp+10
 10506  01D076  0EFF               	movlw	-1
 10507  01D078  006F FF8C  F035    	movff	plusw1,btemp+11
 10508  01D07E  0E02               	movlw	2
 10509  01D080  2434               	addwf	(btemp+10)^0,w,c
 10510  01D082  6ED9               	movwf	fsr2l,c
 10511  01D084  0E00               	movlw	0
 10512  01D086  2035               	addwfc	(btemp+11)^0,w,c
 10513  01D088  6EDA               	movwf	fsr2h,c
 10514  01D08A  0E01               	movlw	1
 10515  01D08C                     L6:
 10516  01D08C  6EDF               	movwf	indf2,c
 10517  01D08E  D01B               	goto	l2290
 10518  01D090                     l17230:
 10519                           
 10520                           ;stkvar	_h @ sp[(0)+-2]
 10521  01D090  0EFE               	movlw	-2
 10522  01D092  006F FF8C  F034    	movff	plusw1,btemp+10
 10523  01D098  0EFF               	movlw	-1
 10524  01D09A  006F FF8C  F035    	movff	plusw1,btemp+11
 10525  01D0A0  0E01               	movlw	1
 10526  01D0A2  2434               	addwf	(btemp+10)^0,w,c
 10527  01D0A4  6ED9               	movwf	fsr2l,c
 10528  01D0A6  0E00               	movlw	0
 10529  01D0A8  2035               	addwfc	(btemp+11)^0,w,c
 10530  01D0AA  6EDA               	movwf	fsr2h,c
 10531  01D0AC  50DF               	movf	indf2,w,c
 10532  01D0AE  6E34               	movwf	(btemp+10)^0,c
 10533  01D0B0  6A35               	clrf	(btemp+11)^0,c
 10534                           
 10535                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10536                           ; Switch size 1, requested type "simple"
 10537                           ; Number of cases is 1, Range of values is 0 to 0
 10538                           ; switch strategies available:
 10539                           ; Name         Instructions Cycles
 10540                           ; simple_byte            4     3 (average)
 10541                           ;	Chosen strategy is simple_byte
 10542  01D0B2  5035               	movf	(btemp+11)^0,w,c
 10543  01D0B4  0A00               	xorlw	0	; case 0
 10544  01D0B6  A4D8               	btfss	status,2,c
 10545  01D0B8  D77F               	goto	l17220
 10546                           
 10547                           ; Switch size 1, requested type "simple"
 10548                           ; Number of cases is 2, Range of values is 0 to 1
 10549                           ; switch strategies available:
 10550                           ; Name         Instructions Cycles
 10551                           ; simple_byte            7     4 (average)
 10552                           ;	Chosen strategy is simple_byte
 10553  01D0BA  5034               	movf	(btemp+10)^0,w,c
 10554  01D0BC  0A00               	xorlw	0	; case 0
 10555  01D0BE  B4D8               	btfsc	status,2,c
 10556  01D0C0  D701               	goto	l17204
 10557  01D0C2  0A01               	xorlw	1	; case 1
 10558  01D0C4  D779               	goto	l17220
 10559  01D0C6                     l2290:
 10560                           
 10561                           ; _hid_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, a
      +                          rgsize = 2, vargsize = 0
 10562  01D0C6  52E5               	movf	postdec1,f,c
 10563  01D0C8  52E5               	movf	postdec1,f,c
 10564  01D0CA  0012               	return		;funcret
 10565  01D0CC                     __end_of_hid_display:
 10566                           	opt callstack 0
 10567                           
 10568 ;; *************** function _hid_input *****************
 10569 ;; Defined at:
 10570 ;;		line 3 in file "hid.c"
 10571 ;; Parameters:    Size  Location     Type
 10572 ;;  h               2  [STACK] PTR struct H_data
 10573 ;;		 -> H(9), 
 10574 ;; Auto vars:     Size  Location     Type
 10575 ;;		None
 10576 ;; Return value:  Size  Location     Type
 10577 ;;                  2  [STACK] PTR struct H_data
 10578 ;; Registers used:
 10579 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 10580 ;; Tracked objects:
 10581 ;;		On entry : 0/39
 10582 ;;		On exit  : 0/0
 10583 ;;		Unchanged: 0/0
 10584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10585 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10586 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10587 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10588 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10589 ;;Total ram usage:        0 bytes
 10590 ;; Hardware stack levels used:    1
 10591 ;; Hardware stack levels required when called:   16
 10592 ;; This function calls:
 10593 ;;		_get_switch
 10594 ;; This function is called by:
 10595 ;;		_hid_display
 10596 ;; This function uses a reentrant model
 10597 ;;
 10598                           
 10599                           	psect	text26
 10600  01F0B8                     __ptext26:
 10601                           	opt callstack 0
 10602  01F0B8                     _hid_input:
 10603                           	opt callstack 13
 10604                           
 10605                           ;hid.c: 3: H_data* hid_input(H_data* h);hid.c: 4: {;hid.c: 5:  if (get_switch(SSELECT)) 
      +                          {
 10606                           
 10607                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10608                           ;incstack = 0
 10609  01F0B8  0E02               	movlw	2
 10610  01F0BA  6EE6               	movwf	postinc1,c
 10611  01F0BC  EC03  F010         	call	_get_switch	;wreg free
 10612  01F0C0  502A               	movf	btemp^0,w,c
 10613  01F0C2  B4D8               	btfsc	status,2,c
 10614  01F0C4  D02C               	goto	l16966
 10615                           
 10616                           ;hid.c: 6:   h->wait_select = 0;
 10617                           ;stkvar	_h @ sp[(0)+-2]
 10618  01F0C6  0EFE               	movlw	-2
 10619  01F0C8  006F FF8C  F034    	movff	plusw1,btemp+10
 10620  01F0CE  0EFF               	movlw	-1
 10621  01F0D0  006F FF8C  F035    	movff	plusw1,btemp+11
 10622  01F0D6  0E02               	movlw	2
 10623  01F0D8  2434               	addwf	(btemp+10)^0,w,c
 10624  01F0DA  6ED9               	movwf	fsr2l,c
 10625  01F0DC  0E00               	movlw	0
 10626  01F0DE  2035               	addwfc	(btemp+11)^0,w,c
 10627  01F0E0  6EDA               	movwf	fsr2h,c
 10628  01F0E2  0E00               	movlw	0
 10629  01F0E4  6EDF               	movwf	indf2,c
 10630                           
 10631                           ;hid.c: 7:   h->select_p = get_switch(SSELECT);
 10632  01F0E6  0E02               	movlw	2
 10633  01F0E8  6EE6               	movwf	postinc1,c
 10634  01F0EA  EC03  F010         	call	_get_switch	;wreg free
 10635  01F0EE  502A               	movf	btemp^0,w,c
 10636  01F0F0  B4D8               	btfsc	status,2,c
 10637  01F0F2  D003               	goto	u16490
 10638  01F0F4  6A35               	clrf	(btemp+11)^0,c
 10639  01F0F6  2A35               	incf	(btemp+11)^0,f,c
 10640  01F0F8  D001               	goto	u16508
 10641  01F0FA                     u16490:
 10642  01F0FA  6A35               	clrf	(btemp+11)^0,c
 10643  01F0FC                     u16508:
 10644                           
 10645                           ;stkvar	_h @ sp[(0)+-2]
 10646  01F0FC  0EFE               	movlw	-2
 10647  01F0FE  006F FF8C  F032    	movff	plusw1,btemp+8
 10648  01F104  0EFF               	movlw	-1
 10649  01F106  006F FF8C  F033    	movff	plusw1,btemp+9
 10650  01F10C  0E03               	movlw	3
 10651  01F10E  2432               	addwf	(btemp+8)^0,w,c
 10652  01F110  6ED9               	movwf	fsr2l,c
 10653  01F112  0E00               	movlw	0
 10654  01F114  2033               	addwfc	(btemp+9)^0,w,c
 10655  01F116  6EDA               	movwf	fsr2h,c
 10656  01F118  0060  F0D7  FFDF   	movff	btemp+11,indf2
 10657  01F11E                     l16966:
 10658                           
 10659                           ;hid.c: 10:  if (get_switch(SENTER)) {
 10660  01F11E  0E03               	movlw	3
 10661  01F120  6EE6               	movwf	postinc1,c
 10662  01F122  EC03  F010         	call	_get_switch	;wreg free
 10663  01F126  502A               	movf	btemp^0,w,c
 10664  01F128  B4D8               	btfsc	status,2,c
 10665  01F12A  D02C               	goto	l16972
 10666                           
 10667                           ;hid.c: 11:   h->wait_enter = 0;
 10668                           ;stkvar	_h @ sp[(0)+-2]
 10669  01F12C  0EFE               	movlw	-2
 10670  01F12E  006F FF8C  F034    	movff	plusw1,btemp+10
 10671  01F134  0EFF               	movlw	-1
 10672  01F136  006F FF8C  F035    	movff	plusw1,btemp+11
 10673  01F13C  0E04               	movlw	4
 10674  01F13E  2434               	addwf	(btemp+10)^0,w,c
 10675  01F140  6ED9               	movwf	fsr2l,c
 10676  01F142  0E00               	movlw	0
 10677  01F144  2035               	addwfc	(btemp+11)^0,w,c
 10678  01F146  6EDA               	movwf	fsr2h,c
 10679  01F148  0E00               	movlw	0
 10680  01F14A  6EDF               	movwf	indf2,c
 10681                           
 10682                           ;hid.c: 12:   h->enter_p = get_switch(SENTER);
 10683  01F14C  0E03               	movlw	3
 10684  01F14E  6EE6               	movwf	postinc1,c
 10685  01F150  EC03  F010         	call	_get_switch	;wreg free
 10686  01F154  502A               	movf	btemp^0,w,c
 10687  01F156  B4D8               	btfsc	status,2,c
 10688  01F158  D003               	goto	u16520
 10689  01F15A  6A35               	clrf	(btemp+11)^0,c
 10690  01F15C  2A35               	incf	(btemp+11)^0,f,c
 10691  01F15E  D001               	goto	u16538
 10692  01F160                     u16520:
 10693  01F160  6A35               	clrf	(btemp+11)^0,c
 10694  01F162                     u16538:
 10695                           
 10696                           ;stkvar	_h @ sp[(0)+-2]
 10697  01F162  0EFE               	movlw	-2
 10698  01F164  006F FF8C  F032    	movff	plusw1,btemp+8
 10699  01F16A  0EFF               	movlw	-1
 10700  01F16C  006F FF8C  F033    	movff	plusw1,btemp+9
 10701  01F172  0E05               	movlw	5
 10702  01F174  2432               	addwf	(btemp+8)^0,w,c
 10703  01F176  6ED9               	movwf	fsr2l,c
 10704  01F178  0E00               	movlw	0
 10705  01F17A  2033               	addwfc	(btemp+9)^0,w,c
 10706  01F17C  6EDA               	movwf	fsr2h,c
 10707  01F17E  0060  F0D7  FFDF   	movff	btemp+11,indf2
 10708  01F184                     l16972:
 10709                           
 10710                           ;hid.c: 15:  if (get_switch(SCALIB)) {
 10711  01F184  0E04               	movlw	4
 10712  01F186  6EE6               	movwf	postinc1,c
 10713  01F188  EC03  F010         	call	_get_switch	;wreg free
 10714  01F18C  502A               	movf	btemp^0,w,c
 10715  01F18E  B4D8               	btfsc	status,2,c
 10716  01F190  D02C               	goto	l2281
 10717                           
 10718                           ;hid.c: 16:   h->wait_calib = 0;
 10719                           ;stkvar	_h @ sp[(0)+-2]
 10720  01F192  0EFE               	movlw	-2
 10721  01F194  006F FF8C  F034    	movff	plusw1,btemp+10
 10722  01F19A  0EFF               	movlw	-1
 10723  01F19C  006F FF8C  F035    	movff	plusw1,btemp+11
 10724  01F1A2  0E06               	movlw	6
 10725  01F1A4  2434               	addwf	(btemp+10)^0,w,c
 10726  01F1A6  6ED9               	movwf	fsr2l,c
 10727  01F1A8  0E00               	movlw	0
 10728  01F1AA  2035               	addwfc	(btemp+11)^0,w,c
 10729  01F1AC  6EDA               	movwf	fsr2h,c
 10730  01F1AE  0E00               	movlw	0
 10731  01F1B0  6EDF               	movwf	indf2,c
 10732                           
 10733                           ;hid.c: 17:   h->calib_p = get_switch(SCALIB);
 10734  01F1B2  0E04               	movlw	4
 10735  01F1B4  6EE6               	movwf	postinc1,c
 10736  01F1B6  EC03  F010         	call	_get_switch	;wreg free
 10737  01F1BA  502A               	movf	btemp^0,w,c
 10738  01F1BC  B4D8               	btfsc	status,2,c
 10739  01F1BE  D003               	goto	u16550
 10740  01F1C0  6A35               	clrf	(btemp+11)^0,c
 10741  01F1C2  2A35               	incf	(btemp+11)^0,f,c
 10742  01F1C4  D001               	goto	u16568
 10743  01F1C6                     u16550:
 10744  01F1C6  6A35               	clrf	(btemp+11)^0,c
 10745  01F1C8                     u16568:
 10746                           
 10747                           ;stkvar	_h @ sp[(0)+-2]
 10748  01F1C8  0EFE               	movlw	-2
 10749  01F1CA  006F FF8C  F032    	movff	plusw1,btemp+8
 10750  01F1D0  0EFF               	movlw	-1
 10751  01F1D2  006F FF8C  F033    	movff	plusw1,btemp+9
 10752  01F1D8  0E07               	movlw	7
 10753  01F1DA  2432               	addwf	(btemp+8)^0,w,c
 10754  01F1DC  6ED9               	movwf	fsr2l,c
 10755  01F1DE  0E00               	movlw	0
 10756  01F1E0  2033               	addwfc	(btemp+9)^0,w,c
 10757  01F1E2  6EDA               	movwf	fsr2h,c
 10758  01F1E4  0060  F0D7  FFDF   	movff	btemp+11,indf2
 10759  01F1EA                     l2281:
 10760                           
 10761                           ; _hid_input: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, arg
      +                          size = 2, vargsize = 0
 10762  01F1EA  52E5               	movf	postdec1,f,c
 10763  01F1EC  52E5               	movf	postdec1,f,c
 10764  01F1EE  0012               	return		;funcret
 10765  01F1F0                     __end_of_hid_input:
 10766                           	opt callstack 0
 10767                           
 10768 ;; *************** function _esr_check *****************
 10769 ;; Defined at:
 10770 ;;		line 197 in file "bsoc.c"
 10771 ;; Parameters:    Size  Location     Type
 10772 ;;  fsm             1  [STACK] const unsigned char 
 10773 ;; Auto vars:     Size  Location     Type
 10774 ;;		None
 10775 ;; Return value:  Size  Location     Type
 10776 ;;                  4  [STACK] float 
 10777 ;; Registers used:
 10778 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 10779 ;; Tracked objects:
 10780 ;;		On entry : 0/0
 10781 ;;		On exit  : 0/0
 10782 ;;		Unchanged: 0/0
 10783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10784 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10785 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10786 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10787 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10788 ;;Total ram usage:        0 bytes
 10789 ;; Hardware stack levels used:    1
 10790 ;; Hardware stack levels required when called:   18
 10791 ;; This function calls:
 10792 ;;		_StartTimer
 10793 ;;		_TimerDone
 10794 ;;		___fldiv
 10795 ;;		___flsub
 10796 ;;		_conv_raw_result
 10797 ;;		_fabsf
 10798 ;;		_set_load_relay_one
 10799 ;;		_set_load_relay_two
 10800 ;;		_update_adc_result
 10801 ;; This function is called by:
 10802 ;;		_main
 10803 ;; This function uses a reentrant model
 10804 ;;
 10805                           
 10806                           	psect	text27
 10807  01B1B2                     __ptext27:
 10808                           	opt callstack 0
 10809  01B1B2                     _esr_check:
 10810                           	opt callstack 12
 10811                           
 10812                           ;bsoc.c: 197: float esr_check(const uint8_t fsm);bsoc.c: 198: {;bsoc.c: 199:  static uin
      +                          t8_t esr_state = 0;;bsoc.c: 201:  if (fsm) {
 10813                           ;stkvar	_fsm @ sp[(0)+-1]
 10814                           
 10815                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10816                           ;incstack = 0
 10817  01B1B2  0EFF               	movlw	-1
 10818  01B1B4  50E3               	movf	plusw1,w,c
 10819  01B1B6  B4D8               	btfsc	status,2,c
 10820  01B1B8  D149               	goto	l14244
 10821                           
 10822                           ;bsoc.c: 202:   esr_state = 0;
 10823  01B1BA  0100               	movlb	0	; () banked
 10824  01B1BC  6BC6               	clrf	esr_check@esr_state& (0+255),b
 10825                           
 10826                           ; BSR set to: 0
 10827                           ;bsoc.c: 203:   return -10.0;
 10828  01B1BE  0E00               	movlw	0
 10829  01B1C0  6E2A               	movwf	btemp^0,c
 10830  01B1C2  0E00               	movlw	0
 10831  01B1C4  6E2B               	movwf	(btemp+1)^0,c
 10832  01B1C6  0E20               	movlw	32
 10833  01B1C8  6E2C               	movwf	(btemp+2)^0,c
 10834  01B1CA  0EC1               	movlw	193
 10835  01B1CC  D15B               	goto	L7
 10836  01B1CE                     l14176:
 10837                           
 10838                           ; BSR set to: 0
 10839                           ;bsoc.c: 208:   StartTimer(TMR_ESR, 10000);
 10840  01B1CE  0E10               	movlw	16
 10841  01B1D0  6EE6               	movwf	postinc1,c
 10842  01B1D2  0E27               	movlw	39
 10843  01B1D4  6EE6               	movwf	postinc1,c
 10844  01B1D6  0E0C               	movlw	12
 10845  01B1D8  6EE6               	movwf	postinc1,c
 10846  01B1DA  ECFA  F00D         	call	_StartTimer	;wreg free
 10847  01B1DE                     l14178:
 10848                           
 10849                           ;bsoc.c: 209:   esr_state++;
 10850  01B1DE  0100               	movlb	0	; () banked
 10851  01B1E0  2BC6               	incf	esr_check@esr_state& (0+255),f,b
 10852                           
 10853                           ;bsoc.c: 210:   break;
 10854  01B1E2  D149               	goto	l14246
 10855  01B1E4                     l14180:
 10856                           
 10857                           ; BSR set to: 0
 10858                           ;bsoc.c: 215:   set_load_relay_one(0);
 10859  01B1E4  0E00               	movlw	0
 10860  01B1E6  6EE6               	movwf	postinc1,c
 10861  01B1E8  EC17  F013         	call	_set_load_relay_one	;wreg free
 10862                           
 10863                           ;bsoc.c: 216:   set_load_relay_two(0);
 10864  01B1EC  0E00               	movlw	0
 10865  01B1EE  6EE6               	movwf	postinc1,c
 10866  01B1F0  EC0F  F013         	call	_set_load_relay_two	;wreg free
 10867                           
 10868                           ;bsoc.c: 217:   if (TimerDone(TMR_ESR)) {
 10869  01B1F4  0E0C               	movlw	12
 10870  01B1F6  6EE6               	movwf	postinc1,c
 10871  01B1F8  EC6F  F010         	call	_TimerDone	;wreg free
 10872  01B1FC  502A               	movf	btemp^0,w,c
 10873  01B1FE  B4D8               	btfsc	status,2,c
 10874  01B200  D009               	goto	l14186
 10875                           
 10876                           ;bsoc.c: 218:    StartTimer(TMR_ESR, 10000);
 10877  01B202  0E10               	movlw	16
 10878  01B204  6EE6               	movwf	postinc1,c
 10879  01B206  0E27               	movlw	39
 10880  01B208  6EE6               	movwf	postinc1,c
 10881  01B20A  0E0C               	movlw	12
 10882  01B20C  6EE6               	movwf	postinc1,c
 10883  01B20E  ECFA  F00D         	call	_StartTimer	;wreg free
 10884                           
 10885                           ;bsoc.c: 219:   } else {
 10886  01B212  D006               	goto	l14190
 10887  01B214                     l14186:
 10888                           
 10889                           ;bsoc.c: 220:    return -2.0;
 10890  01B214  0E00               	movlw	0
 10891  01B216  6E2A               	movwf	btemp^0,c
 10892  01B218  0E00               	movlw	0
 10893  01B21A  6E2B               	movwf	(btemp+1)^0,c
 10894  01B21C  0E00               	movlw	0
 10895  01B21E  D066               	goto	L9
 10896  01B220                     l14190:
 10897                           
 10898                           ;bsoc.c: 225:   update_adc_result();
 10899  01B220  EC97  F00E         	call	_update_adc_result	;wreg free
 10900                           
 10901                           ;bsoc.c: 226:   C.bv_noload = conv_raw_result(V_BAT, CONV);
 10902  01B224  0E00               	movlw	0
 10903  01B226  6EE6               	movwf	postinc1,c
 10904  01B228  0E04               	movlw	4
 10905  01B22A  6EE6               	movwf	postinc1,c
 10906  01B22C  ECE6  F0C2         	call	_conv_raw_result	;wreg free
 10907  01B230  0060  F0A8  FA21   	movff	btemp,_C+290	;volatile
 10908  01B236  0060  F0AC  FA22   	movff	btemp+1,_C+291	;volatile
 10909  01B23C  0060  F0B0  FA23   	movff	btemp+2,_C+292	;volatile
 10910  01B242  0060  F0B4  FA24   	movff	btemp+3,_C+293	;volatile
 10911  01B248  D7CA               	goto	l14178
 10912  01B24A                     l14196:
 10913                           
 10914                           ; BSR set to: 0
 10915                           ;bsoc.c: 230:   set_load_relay_one(1);
 10916  01B24A  0E01               	movlw	1
 10917  01B24C  6EE6               	movwf	postinc1,c
 10918  01B24E  EC17  F013         	call	_set_load_relay_one	;wreg free
 10919                           
 10920                           ;bsoc.c: 231:   if (TimerDone(TMR_ESR)) {
 10921  01B252  0E0C               	movlw	12
 10922  01B254  6EE6               	movwf	postinc1,c
 10923  01B256  EC6F  F010         	call	_TimerDone	;wreg free
 10924  01B25A  502A               	movf	btemp^0,w,c
 10925  01B25C  B4D8               	btfsc	status,2,c
 10926  01B25E  D009               	goto	l14202
 10927                           
 10928                           ;bsoc.c: 232:    StartTimer(TMR_ESR, 10000);
 10929  01B260  0E10               	movlw	16
 10930  01B262  6EE6               	movwf	postinc1,c
 10931  01B264  0E27               	movlw	39
 10932  01B266  6EE6               	movwf	postinc1,c
 10933  01B268  0E0C               	movlw	12
 10934  01B26A  6EE6               	movwf	postinc1,c
 10935  01B26C  ECFA  F00D         	call	_StartTimer	;wreg free
 10936                           
 10937                           ;bsoc.c: 233:   } else {
 10938  01B270  D006               	goto	l14206
 10939  01B272                     l14202:
 10940                           
 10941                           ;bsoc.c: 234:    return -3.0;
 10942  01B272  0E00               	movlw	0
 10943  01B274  6E2A               	movwf	btemp^0,c
 10944  01B276  0E00               	movlw	0
 10945  01B278  6E2B               	movwf	(btemp+1)^0,c
 10946  01B27A  0E40               	movlw	64
 10947  01B27C  D037               	goto	L9
 10948  01B27E                     l14206:
 10949                           
 10950                           ;bsoc.c: 237:   update_adc_result();
 10951  01B27E  EC97  F00E         	call	_update_adc_result	;wreg free
 10952                           
 10953                           ;bsoc.c: 238:   C.bv_one_load = conv_raw_result(V_BAT, CONV);
 10954  01B282  0E00               	movlw	0
 10955  01B284  6EE6               	movwf	postinc1,c
 10956  01B286  0E04               	movlw	4
 10957  01B288  6EE6               	movwf	postinc1,c
 10958  01B28A  ECE6  F0C2         	call	_conv_raw_result	;wreg free
 10959  01B28E  0060  F0A8  FA25   	movff	btemp,_C+294	;volatile
 10960  01B294  0060  F0AC  FA26   	movff	btemp+1,_C+295	;volatile
 10961  01B29A  0060  F0B0  FA27   	movff	btemp+2,_C+296	;volatile
 10962  01B2A0  0060  F0B4  FA28   	movff	btemp+3,_C+297	;volatile
 10963                           
 10964                           ;bsoc.c: 239:   C.load_i1 = conv_raw_result(C_BATT, CONV);
 10965  01B2A6  0E00               	movlw	0
 10966  01B2A8  6EE6               	movwf	postinc1,c
 10967  01B2AA  0E00               	movlw	0
 10968  01B2AC  6EE6               	movwf	postinc1,c
 10969  01B2AE  ECE6  F0C2         	call	_conv_raw_result	;wreg free
 10970  01B2B2  0060  F0A8  FA19   	movff	btemp,_C+282	;volatile
 10971  01B2B8  0060  F0AC  FA1A   	movff	btemp+1,_C+283	;volatile
 10972  01B2BE  0060  F0B0  FA1B   	movff	btemp+2,_C+284	;volatile
 10973  01B2C4  0060  F0B4  FA1C   	movff	btemp+3,_C+285	;volatile
 10974  01B2CA  D789               	goto	l14178
 10975  01B2CC                     l14214:
 10976                           
 10977                           ; BSR set to: 0
 10978                           ;bsoc.c: 243:   set_load_relay_two(1);
 10979  01B2CC  0E01               	movlw	1
 10980  01B2CE  6EE6               	movwf	postinc1,c
 10981  01B2D0  EC0F  F013         	call	_set_load_relay_two	;wreg free
 10982                           
 10983                           ;bsoc.c: 244:   if (!TimerDone(TMR_ESR))
 10984  01B2D4  0E0C               	movlw	12
 10985  01B2D6  6EE6               	movwf	postinc1,c
 10986  01B2D8  EC6F  F010         	call	_TimerDone	;wreg free
 10987  01B2DC  502A               	movf	btemp^0,w,c
 10988  01B2DE  A4D8               	btfss	status,2,c
 10989  01B2E0  D008               	goto	l14222
 10990                           
 10991                           ;bsoc.c: 245:    return -4.0;
 10992  01B2E2  0E00               	movlw	0
 10993  01B2E4  6E2A               	movwf	btemp^0,c
 10994  01B2E6  0E00               	movlw	0
 10995  01B2E8  6E2B               	movwf	(btemp+1)^0,c
 10996  01B2EA  0E80               	movlw	128
 10997  01B2EC                     L9:
 10998  01B2EC  6E2C               	movwf	(btemp+2)^0,c
 10999  01B2EE  0EC0               	movlw	192
 11000  01B2F0  D0C9               	goto	L7
 11001  01B2F2                     l14222:
 11002                           
 11003                           ;bsoc.c: 247:   update_adc_result();
 11004  01B2F2  EC97  F00E         	call	_update_adc_result	;wreg free
 11005                           
 11006                           ;bsoc.c: 248:   C.bv_full_load = conv_raw_result(V_BAT, CONV);
 11007  01B2F6  0E00               	movlw	0
 11008  01B2F8  6EE6               	movwf	postinc1,c
 11009  01B2FA  0E04               	movlw	4
 11010  01B2FC  6EE6               	movwf	postinc1,c
 11011  01B2FE  ECE6  F0C2         	call	_conv_raw_result	;wreg free
 11012  01B302  0060  F0A8  FA29   	movff	btemp,_C+298	;volatile
 11013  01B308  0060  F0AC  FA2A   	movff	btemp+1,_C+299	;volatile
 11014  01B30E  0060  F0B0  FA2B   	movff	btemp+2,_C+300	;volatile
 11015  01B314  0060  F0B4  FA2C   	movff	btemp+3,_C+301	;volatile
 11016                           
 11017                           ;bsoc.c: 249:   C.load_i2 = conv_raw_result(C_BATT, CONV);
 11018  01B31A  0E00               	movlw	0
 11019  01B31C  6EE6               	movwf	postinc1,c
 11020  01B31E  0E00               	movlw	0
 11021  01B320  6EE6               	movwf	postinc1,c
 11022  01B322  ECE6  F0C2         	call	_conv_raw_result	;wreg free
 11023  01B326  0060  F0A8  FA1D   	movff	btemp,_C+286	;volatile
 11024  01B32C  0060  F0AC  FA1E   	movff	btemp+1,_C+287	;volatile
 11025  01B332  0060  F0B0  FA1F   	movff	btemp+2,_C+288	;volatile
 11026  01B338  0060  F0B4  FA20   	movff	btemp+3,_C+289	;volatile
 11027                           
 11028                           ;bsoc.c: 251:   C.esr = fabsf((C.bv_one_load - C.bv_full_load) / (C.load_i1 - C.load_i2)
      +                          );
 11029  01B33E  EE22  F21D         	lfsr	2,_C+286	;volatile
 11030  01B342  006F FF7B FFE6     	movff	postinc2,postinc1
 11031  01B348  006F FF7B FFE6     	movff	postinc2,postinc1
 11032  01B34E  006F FF7B FFE6     	movff	postinc2,postinc1
 11033  01B354  006F FF7B FFE6     	movff	postinc2,postinc1
 11034  01B35A  EE22  F219         	lfsr	2,_C+282	;volatile
 11035  01B35E  006F FF7B FFE6     	movff	postinc2,postinc1
 11036  01B364  006F FF7B FFE6     	movff	postinc2,postinc1
 11037  01B36A  006F FF7B FFE6     	movff	postinc2,postinc1
 11038  01B370  006F FF7B FFE6     	movff	postinc2,postinc1
 11039  01B376  EC54  F00D         	call	___flsub	;wreg free
 11040  01B37A  0060  F0AB  FFE6   	movff	btemp,postinc1
 11041  01B380  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 11042  01B386  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 11043  01B38C  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 11044  01B392  EE22  F229         	lfsr	2,_C+298	;volatile
 11045  01B396  006F FF7B FFE6     	movff	postinc2,postinc1
 11046  01B39C  006F FF7B FFE6     	movff	postinc2,postinc1
 11047  01B3A2  006F FF7B FFE6     	movff	postinc2,postinc1
 11048  01B3A8  006F FF7B FFE6     	movff	postinc2,postinc1
 11049  01B3AE  EE22  F225         	lfsr	2,_C+294	;volatile
 11050  01B3B2  006F FF7B FFE6     	movff	postinc2,postinc1
 11051  01B3B8  006F FF7B FFE6     	movff	postinc2,postinc1
 11052  01B3BE  006F FF7B FFE6     	movff	postinc2,postinc1
 11053  01B3C4  006F FF7B FFE6     	movff	postinc2,postinc1
 11054  01B3CA  EC54  F00D         	call	___flsub	;wreg free
 11055  01B3CE  0060  F0AB  FFE6   	movff	btemp,postinc1
 11056  01B3D4  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 11057  01B3DA  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 11058  01B3E0  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 11059  01B3E6  EC9E  F0BD         	call	___fldiv	;wreg free
 11060  01B3EA  0060  F0AB  FFE6   	movff	btemp,postinc1
 11061  01B3F0  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 11062  01B3F6  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 11063  01B3FC  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 11064  01B402  EC96  F002         	call	_fabsf	;wreg free
 11065  01B406  0060  F0A8  F987   	movff	btemp,_C+136	;volatile
 11066  01B40C  0060  F0AC  F988   	movff	btemp+1,_C+137	;volatile
 11067  01B412  0060  F0B0  F989   	movff	btemp+2,_C+138	;volatile
 11068  01B418  0060  F0B4  F98A   	movff	btemp+3,_C+139	;volatile
 11069                           
 11070                           ;bsoc.c: 252:   set_load_relay_one(0);
 11071  01B41E  0E00               	movlw	0
 11072  01B420  6EE6               	movwf	postinc1,c
 11073  01B422  EC17  F013         	call	_set_load_relay_one	;wreg free
 11074                           
 11075                           ;bsoc.c: 253:   set_load_relay_two(0);
 11076  01B426  0E00               	movlw	0
 11077  01B428  6EE6               	movwf	postinc1,c
 11078  01B42A  EC0F  F013         	call	_set_load_relay_two	;wreg free
 11079                           
 11080                           ;bsoc.c: 254:   esr_state = 0;
 11081  01B42E  0100               	movlb	0	; () banked
 11082  01B430  6BC6               	clrf	esr_check@esr_state& (0+255),b
 11083                           
 11084                           ; BSR set to: 0
 11085                           ;bsoc.c: 255:   return C.esr;
 11086  01B432  0062  F61C  F02A   	movff	_C+136,btemp	;volatile
 11087  01B438  0062  F620  F02B   	movff	_C+137,btemp+1	;volatile
 11088  01B43E  0062  F624  F02C   	movff	_C+138,btemp+2	;volatile
 11089  01B444  0062  F628  F02D   	movff	_C+139,btemp+3	;volatile
 11090  01B44A  D01D               	goto	l2406
 11091  01B44C                     l14244:
 11092  01B44C  0100               	movlb	0	; () banked
 11093  01B44E  51C6               	movf	esr_check@esr_state& (0+255),w,b
 11094  01B450  6E34               	movwf	(btemp+10)^0,c
 11095  01B452  6A35               	clrf	(btemp+11)^0,c
 11096                           
 11097                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11098                           ; Switch size 1, requested type "simple"
 11099                           ; Number of cases is 1, Range of values is 0 to 0
 11100                           ; switch strategies available:
 11101                           ; Name         Instructions Cycles
 11102                           ; simple_byte            4     3 (average)
 11103                           ;	Chosen strategy is simple_byte
 11104  01B454  5035               	movf	(btemp+11)^0,w,c
 11105  01B456  0A00               	xorlw	0	; case 0
 11106  01B458  A4D8               	btfss	status,2,c
 11107  01B45A  D00D               	goto	l14246
 11108                           
 11109                           ; BSR set to: 0
 11110                           ; Switch size 1, requested type "simple"
 11111                           ; Number of cases is 4, Range of values is 0 to 3
 11112                           ; switch strategies available:
 11113                           ; Name         Instructions Cycles
 11114                           ; simple_byte           13     7 (average)
 11115                           ;	Chosen strategy is simple_byte
 11116  01B45C  5034               	movf	(btemp+10)^0,w,c
 11117  01B45E  0A00               	xorlw	0	; case 0
 11118  01B460  B4D8               	btfsc	status,2,c
 11119  01B462  D6B5               	goto	l14176
 11120  01B464  0A01               	xorlw	1	; case 1
 11121  01B466  B4D8               	btfsc	status,2,c
 11122  01B468  D6BD               	goto	l14180
 11123  01B46A  0A03               	xorlw	3	; case 2
 11124  01B46C  B4D8               	btfsc	status,2,c
 11125  01B46E  D6ED               	goto	l14196
 11126  01B470  0A01               	xorlw	1	; case 3
 11127  01B472  B4D8               	btfsc	status,2,c
 11128  01B474  D72B               	goto	l14214
 11129  01B476                     l14246:
 11130                           
 11131                           ; BSR set to: 0
 11132                           ;bsoc.c: 260:  return -1.0;
 11133  01B476  0E00               	movlw	0
 11134  01B478  6E2A               	movwf	btemp^0,c
 11135  01B47A  0E00               	movlw	0
 11136  01B47C  6E2B               	movwf	(btemp+1)^0,c
 11137  01B47E  0E80               	movlw	128
 11138  01B480  6E2C               	movwf	(btemp+2)^0,c
 11139  01B482  0EBF               	movlw	191
 11140  01B484                     L7:
 11141  01B484  6E2D               	movwf	(btemp+3)^0,c
 11142  01B486                     l2406:
 11143                           
 11144                           ; _esr_check: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 11145  01B486  52E5               	movf	postdec1,f,c
 11146  01B488  0012               	return		;funcret
 11147  01B48A                     __end_of_esr_check:
 11148                           	opt callstack 0
 11149                           
 11150 ;; *************** function _update_adc_result *****************
 11151 ;; Defined at:
 11152 ;;		line 111 in file "daq.c"
 11153 ;; Parameters:    Size  Location     Type
 11154 ;;		None
 11155 ;; Auto vars:     Size  Location     Type
 11156 ;;		None
 11157 ;; Return value:  Size  Location     Type
 11158 ;;                  1  [STACK] _Bool 
 11159 ;; Registers used:
 11160 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl, p
      +rodh
 11161 ;; Tracked objects:
 11162 ;;		On entry : 0/0
 11163 ;;		On exit  : 0/0
 11164 ;;		Unchanged: 0/0
 11165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11166 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11167 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11168 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11169 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11170 ;;Total ram usage:        0 bytes
 11171 ;; Hardware stack levels used:    1
 11172 ;; Hardware stack levels required when called:   17
 11173 ;; This function calls:
 11174 ;;		_StartTimer
 11175 ;;		_TimerDone
 11176 ;;		_check_adc_scan
 11177 ;;		_clear_adc_scan
 11178 ;;		_start_adc_scan
 11179 ;; This function is called by:
 11180 ;;		_esr_check
 11181 ;; This function uses a reentrant model
 11182 ;;
 11183                           
 11184                           	psect	text28
 11185  001D2E                     __ptext28:
 11186                           	opt callstack 0
 11187  001D2E                     _update_adc_result:
 11188                           	opt callstack 12
 11189                           
 11190                           ;daq.c: 113:  if (R.done) {
 11191                           
 11192                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11193                           ;incstack = 0
 11194  001D2E  0101               	movlb	1	; () banked
 11195  001D30  5135               	movf	(_R+53)& (0+255),w,b	;volatile
 11196  001D32  B4D8               	btfsc	status,2,c
 11197  001D34  0012               	return	
 11198                           
 11199                           ; BSR set to: 1
 11200                           ;daq.c: 114:   clear_adc_scan();
 11201  001D36  EC91  F013         	call	_clear_adc_scan	;wreg free
 11202                           
 11203                           ; BSR set to: 1
 11204                           ;daq.c: 115:   start_adc_scan();
 11205  001D3A  EC39  F00A         	call	_start_adc_scan	;wreg free
 11206                           
 11207                           ;daq.c: 116:   StartTimer(TMR_ADC, 200);
 11208  001D3E  0EC8               	movlw	200
 11209  001D40  6EE6               	movwf	postinc1,c
 11210  001D42  0E00               	movlw	0
 11211  001D44  6EE6               	movwf	postinc1,c
 11212  001D46  0E01               	movlw	1
 11213  001D48  6EE6               	movwf	postinc1,c
 11214  001D4A  ECFA  F00D         	call	_StartTimer	;wreg free
 11215  001D4E                     l13604:
 11216  001D4E  0E01               	movlw	1
 11217  001D50  6EE6               	movwf	postinc1,c
 11218  001D52  EC6F  F010         	call	_TimerDone	;wreg free
 11219  001D56  502A               	movf	btemp^0,w,c
 11220  001D58  A4D8               	btfss	status,2,c
 11221  001D5A  0012               	return	
 11222  001D5C  EC77  F013         	call	_check_adc_scan	;wreg free
 11223  001D60  502A               	movf	btemp^0,w,c
 11224  001D62  A4D8               	btfss	status,2,c
 11225  001D64  0012               	return	
 11226  001D66  D7F3               	goto	l13604
 11227  001D68                     __end_of_update_adc_result:
 11228                           	opt callstack 0
 11229                           
 11230 ;; *************** function _check_adc_scan *****************
 11231 ;; Defined at:
 11232 ;;		line 95 in file "daq.c"
 11233 ;; Parameters:    Size  Location     Type
 11234 ;;		None
 11235 ;; Auto vars:     Size  Location     Type
 11236 ;;		None
 11237 ;; Return value:  Size  Location     Type
 11238 ;;                  1  [STACK] _Bool 
 11239 ;; Registers used:
 11240 ;;		btemp
 11241 ;; Tracked objects:
 11242 ;;		On entry : 0/2
 11243 ;;		On exit  : 0/0
 11244 ;;		Unchanged: 0/0
 11245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11246 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11247 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11248 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11249 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11250 ;;Total ram usage:        0 bytes
 11251 ;; Hardware stack levels used:    1
 11252 ;; Hardware stack levels required when called:   15
 11253 ;; This function calls:
 11254 ;;		Nothing
 11255 ;; This function is called by:
 11256 ;;		_main
 11257 ;;		_update_adc_result
 11258 ;; This function uses a reentrant model
 11259 ;;
 11260                           
 11261                           	psect	text29
 11262  0026EE                     __ptext29:
 11263                           	opt callstack 0
 11264  0026EE                     _check_adc_scan:
 11265                           	opt callstack 13
 11266                           
 11267                           ;daq.c: 97:  return R.done;
 11268                           
 11269                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11270                           ;incstack = 0
 11271  0026EE  0060  F4D4  F02A   	movff	_R+53,btemp	;volatile
 11272                           
 11273                           ; _check_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 11274  0026F4  0012               	return		;funcret
 11275  0026F6                     __end_of_check_adc_scan:
 11276                           	opt callstack 0
 11277                           
 11278 ;; *************** function _set_load_relay_two *****************
 11279 ;; Defined at:
 11280 ;;		line 131 in file "mbmc.c"
 11281 ;; Parameters:    Size  Location     Type
 11282 ;;  mode            1  [STACK] const _Bool 
 11283 ;; Auto vars:     Size  Location     Type
 11284 ;;		None
 11285 ;; Return value:  Size  Location     Type
 11286 ;;                  1  [STACK] void 
 11287 ;; Registers used:
 11288 ;;		wreg, fsr1l, fsr1h
 11289 ;; Tracked objects:
 11290 ;;		On entry : 0/0
 11291 ;;		On exit  : 0/0
 11292 ;;		Unchanged: 0/0
 11293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11294 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11295 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11296 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11297 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11298 ;;Total ram usage:        0 bytes
 11299 ;; Hardware stack levels used:    1
 11300 ;; Hardware stack levels required when called:   15
 11301 ;; This function calls:
 11302 ;;		Nothing
 11303 ;; This function is called by:
 11304 ;;		_main
 11305 ;;		_esr_check
 11306 ;; This function uses a reentrant model
 11307 ;;
 11308                           
 11309                           	psect	text30
 11310  00261E                     __ptext30:
 11311                           	opt callstack 0
 11312  00261E                     _set_load_relay_two:
 11313                           	opt callstack 15
 11314                           
 11315                           ;mbmc.c: 131: void set_load_relay_two(const _Bool mode);mbmc.c: 132: {;mbmc.c: 133:  LAT
      +                          Dbits.LATD5 = mode;
 11316                           ;stkvar	_mode @ sp[(0)+-1]
 11317                           
 11318                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11319                           ;incstack = 0
 11320  00261E  0EFF               	movlw	-1
 11321  002620  B0E3               	btfsc	plusw1,0,c
 11322  002622  D002               	bra	u12475
 11323  002624  9ABD               	bcf	189,5,c	;volatile
 11324  002626  D001               	bra	u12476
 11325  002628                     u12475:
 11326  002628  8ABD               	bsf	189,5,c	;volatile
 11327  00262A                     u12476:
 11328                           
 11329                           ; _set_load_relay_two: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
 11330  00262A  52E5               	movf	postdec1,f,c
 11331  00262C  0012               	return		;funcret
 11332  00262E                     __end_of_set_load_relay_two:
 11333                           	opt callstack 0
 11334                           
 11335 ;; *************** function _set_load_relay_one *****************
 11336 ;; Defined at:
 11337 ;;		line 126 in file "mbmc.c"
 11338 ;; Parameters:    Size  Location     Type
 11339 ;;  mode            1  [STACK] const _Bool 
 11340 ;; Auto vars:     Size  Location     Type
 11341 ;;		None
 11342 ;; Return value:  Size  Location     Type
 11343 ;;                  1  [STACK] void 
 11344 ;; Registers used:
 11345 ;;		wreg, fsr1l, fsr1h
 11346 ;; Tracked objects:
 11347 ;;		On entry : 0/0
 11348 ;;		On exit  : 0/0
 11349 ;;		Unchanged: 0/0
 11350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11351 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11352 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11353 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11354 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11355 ;;Total ram usage:        0 bytes
 11356 ;; Hardware stack levels used:    1
 11357 ;; Hardware stack levels required when called:   15
 11358 ;; This function calls:
 11359 ;;		Nothing
 11360 ;; This function is called by:
 11361 ;;		_main
 11362 ;;		_esr_check
 11363 ;; This function uses a reentrant model
 11364 ;;
 11365                           
 11366                           	psect	text31
 11367  00262E                     __ptext31:
 11368                           	opt callstack 0
 11369  00262E                     _set_load_relay_one:
 11370                           	opt callstack 15
 11371                           
 11372                           ;mbmc.c: 126: void set_load_relay_one(const _Bool mode);mbmc.c: 127: {;mbmc.c: 128:  LAT
      +                          Dbits.LATD4 = mode;
 11373                           ;stkvar	_mode @ sp[(0)+-1]
 11374                           
 11375                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11376                           ;incstack = 0
 11377  00262E  0EFF               	movlw	-1
 11378  002630  B0E3               	btfsc	plusw1,0,c
 11379  002632  D002               	bra	u12465
 11380  002634  98BD               	bcf	189,4,c	;volatile
 11381  002636  D001               	bra	u12466
 11382  002638                     u12465:
 11383  002638  88BD               	bsf	189,4,c	;volatile
 11384  00263A                     u12466:
 11385                           
 11386                           ; _set_load_relay_one: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
 11387  00263A  52E5               	movf	postdec1,f,c
 11388  00263C  0012               	return		;funcret
 11389  00263E                     __end_of_set_load_relay_one:
 11390                           	opt callstack 0
 11391                           
 11392 ;; *************** function _eaDogM_WriteCommand *****************
 11393 ;; Defined at:
 11394 ;;		line 384 in file "eadog.c"
 11395 ;; Parameters:    Size  Location     Type
 11396 ;;  cmd             1  [STACK] const unsigned char 
 11397 ;; Auto vars:     Size  Location     Type
 11398 ;;		None
 11399 ;; Return value:  Size  Location     Type
 11400 ;;                  1  [STACK] void 
 11401 ;; Registers used:
 11402 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 11403 ;; Tracked objects:
 11404 ;;		On entry : 3F/3D
 11405 ;;		On exit  : 3F/0
 11406 ;;		Unchanged: 0/0
 11407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11408 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11409 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11410 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11411 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11412 ;;Total ram usage:        0 bytes
 11413 ;; Hardware stack levels used:    1
 11414 ;; Hardware stack levels required when called:   19
 11415 ;; This function calls:
 11416 ;;		_send_lcd_cmd_dma
 11417 ;; This function is called by:
 11418 ;;		_main
 11419 ;; This function uses a reentrant model
 11420 ;;
 11421                           
 11422                           	psect	text32
 11423  00266E                     __ptext32:
 11424                           	opt callstack 0
 11425  00266E                     _eaDogM_WriteCommand:
 11426                           	opt callstack 11
 11427                           
 11428                           ;eadog.c: 384: void eaDogM_WriteCommand(const uint8_t cmd);eadog.c: 385: {;eadog.c: 386:
      +                            send_lcd_cmd_dma(cmd);
 11429                           ;stkvar	_cmd @ sp[(0)+-1]
 11430                           
 11431                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11432                           ;incstack = 0
 11433  00266E  0EFF               	movlw	-1
 11434  002670  50E3               	movf	plusw1,w,c
 11435  002672  6EE6               	movwf	postinc1,c
 11436  002674  EC67  F012         	call	_send_lcd_cmd_dma	;wreg free
 11437                           
 11438                           ; BSR set to: 0
 11439                           ; _eaDogM_WriteCommand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 1, argsize = 1, vargsize = 0
 11440  002678  52E5               	movf	postdec1,f,c
 11441  00267A  0012               	return		;funcret
 11442  00267C                     __end_of_eaDogM_WriteCommand:
 11443                           	opt callstack 0
 11444                           
 11445 ;; *************** function _display_history *****************
 11446 ;; Defined at:
 11447 ;;		line 617 in file "main.c"
 11448 ;; Parameters:    Size  Location     Type
 11449 ;;		None
 11450 ;; Auto vars:     Size  Location     Type
 11451 ;;		None
 11452 ;; Return value:  Size  Location     Type
 11453 ;;                  1  [STACK] _Bool 
 11454 ;; Registers used:
 11455 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15, btemp+16, btemp+17, 
      +btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, 
      +btemp+30, btemp+31, tblptrl, tblptrh, tblptru, prodl, prodh
 11456 ;; Tracked objects:
 11457 ;;		On entry : 0/2
 11458 ;;		On exit  : 0/0
 11459 ;;		Unchanged: 0/0
 11460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11461 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11462 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11463 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11464 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11465 ;;Total ram usage:        0 bytes
 11466 ;; Hardware stack levels used:    1
 11467 ;; Hardware stack levels required when called:   27
 11468 ;; This function calls:
 11469 ;;		_WaitMs
 11470 ;;		_asctime
 11471 ;;		_get_switch
 11472 ;;		_get_vterm_ptr
 11473 ;;		_localtime
 11474 ;;		_sprintf
 11475 ;;		_time
 11476 ;;		_update_lcd
 11477 ;; This function is called by:
 11478 ;;		_main
 11479 ;; This function uses a reentrant model
 11480 ;;
 11481                           
 11482                           	psect	text33
 11483  01AED8                     __ptext33:
 11484                           	opt callstack 0
 11485  01AED8                     _display_history:
 11486                           	opt callstack 3
 11487                           
 11488                           ;main.c: 619:  static uint8_t bwait = 0;;main.c: 621:  if (get_switch(SCALIB) && (++bwai
      +                          t > 5)) {
 11489                           
 11490                           ; BSR set to: 0
 11491                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11492                           ;incstack = 0
 11493  01AED8  0E04               	movlw	4
 11494  01AEDA  6EE6               	movwf	postinc1,c
 11495  01AEDC  EC03  F010         	call	_get_switch	;wreg free
 11496  01AEE0  502A               	movf	btemp^0,w,c
 11497  01AEE2  B4D8               	btfsc	status,2,c
 11498  01AEE4  D15E               	goto	l17278
 11499  01AEE6  2A53               	incf	display_history@bwait^0,f,c
 11500  01AEE8  0E05               	movlw	5
 11501  01AEEA  6453               	cpfsgt	display_history@bwait^0,c
 11502  01AEEC  D15A               	goto	l17278
 11503                           
 11504                           ;main.c: 622:   pclock = time(((void*)0));
 11505  01AEEE  0E00               	movlw	0
 11506  01AEF0  6EE6               	movwf	postinc1,c
 11507  01AEF2  0E00               	movlw	0
 11508  01AEF4  6EE6               	movwf	postinc1,c
 11509  01AEF6  ECFD  F00A         	call	_time	;wreg free
 11510  01AEFA  52E5               	movf	postdec1,f,c
 11511  01AEFC  006F FF9C  F041    	movff	indf1,btemp+23
 11512  01AF02  52E5               	movf	postdec1,f,c
 11513  01AF04  006F FF9C  F040    	movff	indf1,btemp+22
 11514  01AF0A  52E5               	movf	postdec1,f,c
 11515  01AF0C  006F FF9C  F03F    	movff	indf1,btemp+21
 11516  01AF12  52E5               	movf	postdec1,f,c
 11517  01AF14  006F FF9C  F03E    	movff	indf1,btemp+20
 11518  01AF1A  52E5               	movf	postdec1,f,c
 11519  01AF1C  006F FF9C  F03D    	movff	indf1,btemp+19
 11520  01AF22  52E5               	movf	postdec1,f,c
 11521  01AF24  006F FF9C  F03C    	movff	indf1,btemp+18
 11522  01AF2A  52E5               	movf	postdec1,f,c
 11523  01AF2C  006F FF9C  F03B    	movff	indf1,btemp+17
 11524  01AF32  52E5               	movf	postdec1,f,c
 11525  01AF34  006F FF9C  F03A    	movff	indf1,btemp+16
 11526  01AF3A  0060  F0E8  F0DA   	movff	btemp+16,_pclock
 11527  01AF40  0060  F0EC  F0DB   	movff	btemp+17,_pclock+1
 11528  01AF46  0060  F0F0  F0DC   	movff	btemp+18,_pclock+2
 11529  01AF4C  0060  F0F4  F0DD   	movff	btemp+19,_pclock+3
 11530  01AF52  0060  F0F8  F0DE   	movff	btemp+20,_pclock+4
 11531  01AF58  0060  F0FC  F0DF   	movff	btemp+21,_pclock+5
 11532  01AF5E  0060  F100  F0E0   	movff	btemp+22,_pclock+6
 11533  01AF64  0060  F104  F0E1   	movff	btemp+23,_pclock+7
 11534                           
 11535                           ; BSR set to: 57
 11536                           ;main.c: 623:   t_mbmc = localtime(&pclock);
 11537  01AF6A  0EDA               	movlw	_pclock& (0+255)
 11538  01AF6C  6EE6               	movwf	postinc1,c
 11539  01AF6E  ECC7  F012         	call	_localtime	;wreg free
 11540  01AF72  0060  F0A8  F0BC   	movff	btemp,_t_mbmc
 11541  01AF78  0060  F0AC  F0BD   	movff	btemp+1,_t_mbmc+1
 11542                           
 11543                           ;main.c: 624:   sprintf(get_vterm_ptr(0, 0), "%d %d %d %d                ", C.hist[0].h[
      +                          0], C.hist[0].h[1], C.hist[0].h[2], C.hist[0].h[3]);
 11544  01AF7E  EE22  F1E3         	lfsr	2,_C+228	;volatile
 11545  01AF82  006F FF78  F034    	movff	postinc2,btemp+10
 11546  01AF88  006F FF74  F035    	movff	postdec2,btemp+11
 11547  01AF8E  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 11548  01AF94  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 11549  01AF9A  EE22  F1E1         	lfsr	2,_C+226	;volatile
 11550  01AF9E  006F FF78  F034    	movff	postinc2,btemp+10
 11551  01AFA4  006F FF74  F035    	movff	postdec2,btemp+11
 11552  01AFAA  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 11553  01AFB0  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 11554  01AFB6  EE22  F1DF         	lfsr	2,_C+224	;volatile
 11555  01AFBA  006F FF78  F034    	movff	postinc2,btemp+10
 11556  01AFC0  006F FF74  F035    	movff	postdec2,btemp+11
 11557  01AFC6  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 11558  01AFCC  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 11559  01AFD2  EE22  F1DD         	lfsr	2,_C+222	;volatile
 11560  01AFD6  006F FF78  F034    	movff	postinc2,btemp+10
 11561  01AFDC  006F FF74  F035    	movff	postdec2,btemp+11
 11562  01AFE2  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 11563  01AFE8  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 11564  01AFEE  0EB9               	movlw	low STR_65
 11565  01AFF0  6EE6               	movwf	postinc1,c
 11566  01AFF2  0EFA               	movlw	high STR_65
 11567  01AFF4  6EE6               	movwf	postinc1,c
 11568  01AFF6  0E00               	movlw	0
 11569  01AFF8  6EE6               	movwf	postinc1,c
 11570  01AFFA  0E00               	movlw	0
 11571  01AFFC  6EE6               	movwf	postinc1,c
 11572  01AFFE  ECE9  F0FF         	call	_get_vterm_ptr	;wreg free
 11573  01B002  0060  F0AB  FFE6   	movff	btemp,postinc1
 11574  01B008  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 11575  01B00E  0E0C               	movlw	12
 11576  01B010  6EE6               	movwf	postinc1,c
 11577  01B012  ECB9  F0FB         	call	_sprintf	;wreg free
 11578                           
 11579                           ; BSR set to: 0
 11580                           ;main.c: 625:   sprintf(get_vterm_ptr(1, 0), "%d %d %d %d                ", C.hist[0].h[
      +                          4], C.hist[0].h[5], C.hist[0].h[6], C.hist[0].h[7]);
 11581  01B016  EE22  F1EB         	lfsr	2,_C+236	;volatile
 11582  01B01A  006F FF78  F034    	movff	postinc2,btemp+10
 11583  01B020  006F FF74  F035    	movff	postdec2,btemp+11
 11584  01B026  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 11585  01B02C  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 11586  01B032  EE22  F1E9         	lfsr	2,_C+234	;volatile
 11587  01B036  006F FF78  F034    	movff	postinc2,btemp+10
 11588  01B03C  006F FF74  F035    	movff	postdec2,btemp+11
 11589  01B042  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 11590  01B048  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 11591  01B04E  EE22  F1E7         	lfsr	2,_C+232	;volatile
 11592  01B052  006F FF78  F034    	movff	postinc2,btemp+10
 11593  01B058  006F FF74  F035    	movff	postdec2,btemp+11
 11594  01B05E  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 11595  01B064  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 11596  01B06A  EE22  F1E5         	lfsr	2,_C+230	;volatile
 11597  01B06E  006F FF78  F034    	movff	postinc2,btemp+10
 11598  01B074  006F FF74  F035    	movff	postdec2,btemp+11
 11599  01B07A  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 11600  01B080  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 11601  01B086  0EB9               	movlw	low STR_65
 11602  01B088  6EE6               	movwf	postinc1,c
 11603  01B08A  0EFA               	movlw	high STR_65
 11604  01B08C  6EE6               	movwf	postinc1,c
 11605  01B08E  0E00               	movlw	0
 11606  01B090  6EE6               	movwf	postinc1,c
 11607  01B092  0E01               	movlw	1
 11608  01B094  6EE6               	movwf	postinc1,c
 11609  01B096  ECE9  F0FF         	call	_get_vterm_ptr	;wreg free
 11610  01B09A  0060  F0AB  FFE6   	movff	btemp,postinc1
 11611  01B0A0  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 11612  01B0A6  0E0C               	movlw	12
 11613  01B0A8  6EE6               	movwf	postinc1,c
 11614  01B0AA  ECB9  F0FB         	call	_sprintf	;wreg free
 11615                           
 11616                           ; BSR set to: 0
 11617                           ;main.c: 626:   sprintf(get_vterm_ptr(2, 0), "%d %d %d %d                ", C.hist[0].h[
      +                          8], C.hist[0].h[9], C.hist[0].h[10], C.hist[0].h[12]);
 11618  01B0AE  EE22  F1F5         	lfsr	2,_C+246	;volatile
 11619  01B0B2  006F FF78  F034    	movff	postinc2,btemp+10
 11620  01B0B8  006F FF74  F035    	movff	postdec2,btemp+11
 11621  01B0BE  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 11622  01B0C4  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 11623  01B0CA  EE22  F1F1         	lfsr	2,_C+242	;volatile
 11624  01B0CE  006F FF78  F034    	movff	postinc2,btemp+10
 11625  01B0D4  006F FF74  F035    	movff	postdec2,btemp+11
 11626  01B0DA  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 11627  01B0E0  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 11628  01B0E6  EE22  F1EF         	lfsr	2,_C+240	;volatile
 11629  01B0EA  006F FF78  F034    	movff	postinc2,btemp+10
 11630  01B0F0  006F FF74  F035    	movff	postdec2,btemp+11
 11631  01B0F6  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 11632  01B0FC  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 11633  01B102  EE22  F1ED         	lfsr	2,_C+238	;volatile
 11634  01B106  006F FF78  F034    	movff	postinc2,btemp+10
 11635  01B10C  006F FF74  F035    	movff	postdec2,btemp+11
 11636  01B112  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 11637  01B118  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 11638  01B11E  0EB9               	movlw	low STR_65
 11639  01B120  6EE6               	movwf	postinc1,c
 11640  01B122  0EFA               	movlw	high STR_65
 11641  01B124  6EE6               	movwf	postinc1,c
 11642  01B126  0E00               	movlw	0
 11643  01B128  6EE6               	movwf	postinc1,c
 11644  01B12A  0E02               	movlw	2
 11645  01B12C  6EE6               	movwf	postinc1,c
 11646  01B12E  ECE9  F0FF         	call	_get_vterm_ptr	;wreg free
 11647  01B132  0060  F0AB  FFE6   	movff	btemp,postinc1
 11648  01B138  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 11649  01B13E  0E0C               	movlw	12
 11650  01B140  6EE6               	movwf	postinc1,c
 11651  01B142  ECB9  F0FB         	call	_sprintf	;wreg free
 11652                           
 11653                           ; BSR set to: 0
 11654                           ;main.c: 627:   sprintf(get_vterm_ptr(3, 0), "%s           ", asctime(t_mbmc));
 11655  01B146  0060  F2F3  FFE6   	movff	_t_mbmc,postinc1
 11656  01B14C  0060  F2F7  FFE6   	movff	_t_mbmc+1,postinc1
 11657  01B152  EC5B  F0C0         	call	_asctime	;wreg free
 11658  01B156  0060  F0AB  FFE6   	movff	btemp,postinc1
 11659  01B15C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 11660  01B162  0E76               	movlw	low (STR_72+5)
 11661  01B164  6EE6               	movwf	postinc1,c
 11662  01B166  0EFF               	movlw	high (STR_72+5)
 11663  01B168  6EE6               	movwf	postinc1,c
 11664  01B16A  0E00               	movlw	0
 11665  01B16C  6EE6               	movwf	postinc1,c
 11666  01B16E  0E03               	movlw	3
 11667  01B170  6EE6               	movwf	postinc1,c
 11668  01B172  ECE9  F0FF         	call	_get_vterm_ptr	;wreg free
 11669  01B176  0060  F0AB  FFE6   	movff	btemp,postinc1
 11670  01B17C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 11671  01B182  0E06               	movlw	6
 11672  01B184  6EE6               	movwf	postinc1,c
 11673  01B186  ECB9  F0FB         	call	_sprintf	;wreg free
 11674                           
 11675                           ; BSR set to: 0
 11676                           ;main.c: 628:   update_lcd(0);
 11677  01B18A  0E00               	movlw	0
 11678  01B18C  6EE6               	movwf	postinc1,c
 11679  01B18E  EC6B  F0F4         	call	_update_lcd	;wreg free
 11680                           
 11681                           ;main.c: 629:   WaitMs(2000);
 11682  01B192  0ED0               	movlw	208
 11683  01B194  6EE6               	movwf	postinc1,c
 11684  01B196  0E07               	movlw	7
 11685  01B198  6EE6               	movwf	postinc1,c
 11686  01B19A  EC07  F00F         	call	_WaitMs	;wreg free
 11687  01B19E                     l17272:
 11688                           
 11689                           ;main.c: 630:   bwait = 0;
 11690  01B19E  6A53               	clrf	display_history@bwait^0,c
 11691  01B1A0  0012               	return	
 11692  01B1A2                     l17278:
 11693                           
 11694                           ;main.c: 633:   if (!get_switch(SCALIB))
 11695  01B1A2  0E04               	movlw	4
 11696  01B1A4  6EE6               	movwf	postinc1,c
 11697  01B1A6  EC03  F010         	call	_get_switch	;wreg free
 11698  01B1AA  502A               	movf	btemp^0,w,c
 11699  01B1AC  A4D8               	btfss	status,2,c
 11700  01B1AE  0012               	return	
 11701  01B1B0  D7F6               	goto	l17272
 11702  01B1B2                     __end_of_display_history:
 11703                           	opt callstack 0
 11704                           
 11705 ;; *************** function _time *****************
 11706 ;; Defined at:
 11707 ;;		line 243 in file "mbmc.c"
 11708 ;; Parameters:    Size  Location     Type
 11709 ;;  t               2  [STACK] PTR long long 
 11710 ;;		 -> time@current_time(8), NULL(0), 
 11711 ;; Auto vars:     Size  Location     Type
 11712 ;;		None
 11713 ;; Return value:  Size  Location     Type
 11714 ;;                  8  [STACK] long long 
 11715 ;; Registers used:
 11716 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl
 11717 ;; Tracked objects:
 11718 ;;		On entry : 0/2
 11719 ;;		On exit  : 3F/39
 11720 ;;		Unchanged: 0/0
 11721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11722 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11723 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11724 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11725 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11726 ;;Total ram usage:        0 bytes
 11727 ;; Hardware stack levels used:    1
 11728 ;; Hardware stack levels required when called:   15
 11729 ;; This function calls:
 11730 ;;		Nothing
 11731 ;; This function is called by:
 11732 ;;		_main
 11733 ;;		_display_history
 11734 ;;		_check_day_time
 11735 ;;		_load_hist_data
 11736 ;; This function uses a reentrant model
 11737 ;;
 11738                           
 11739                           	psect	text34
 11740  0015FA                     __ptext34:
 11741                           	opt callstack 0
 11742  0015FA                     _time:
 11743                           	opt callstack 0
 11744                           
 11745                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 8 argfudge = 6
 11746  0015FA  0E06               	movlw	6
 11747  0015FC  26E1               	addwf	fsr1l,f,c
 11748  0015FE  0E00               	movlw	0
 11749  001600  22E2               	addwfc	fsr1h,f,c
 11750                           
 11751                           ;mbmc.c: 243: time_t time(time_t * t);mbmc.c: 244: {;mbmc.c: 245:  static time_t current
      +                          _time;;mbmc.c: 246:  PIE8bits.TMR5IE = 0;
 11752                           
 11753                           ;incstack = 0
 11754 ;; hardware stack exceeded
 11755  001602  0139               	movlb	57	; () banked
 11756  001604  9D98               	bcf	152,6,b	;volatile
 11757                           
 11758                           ; BSR set to: 57
 11759                           ;mbmc.c: 247:  current_time = V.ticks;
 11760  001606  0102               	movlb	2	; () banked
 11761  001608  5188               	movf	(_V+129)& (0+255),w,b	;volatile
 11762  00160A  0100               	movlb	0	; () banked
 11763  00160C  6FD2               	movwf	time@current_time& (0+255),b
 11764  00160E  0102               	movlb	2	; () banked
 11765  001610  5189               	movf	(_V+130)& (0+255),w,b	;volatile
 11766  001612  0100               	movlb	0	; () banked
 11767  001614  6FD3               	movwf	(time@current_time+1)& (0+255),b
 11768  001616  0102               	movlb	2	; () banked
 11769  001618  518A               	movf	(_V+131)& (0+255),w,b	;volatile
 11770  00161A  0100               	movlb	0	; () banked
 11771  00161C  6FD4               	movwf	(time@current_time+2)& (0+255),b
 11772  00161E  0102               	movlb	2	; () banked
 11773  001620  518B               	movf	(_V+132)& (0+255),w,b	;volatile
 11774  001622  0100               	movlb	0	; () banked
 11775  001624  6FD5               	movwf	(time@current_time+3)& (0+255),b
 11776  001626  6BD6               	clrf	(time@current_time+4)& (0+255),b
 11777  001628  6BD7               	clrf	(time@current_time+5)& (0+255),b
 11778  00162A  6BD8               	clrf	(time@current_time+6)& (0+255),b
 11779  00162C  6BD9               	clrf	(time@current_time+7)& (0+255),b
 11780                           
 11781                           ; BSR set to: 0
 11782                           ;mbmc.c: 248:  PIE8bits.TMR5IE = 1;
 11783  00162E  0139               	movlb	57	; () banked
 11784  001630  8D98               	bsf	152,6,b	;volatile
 11785                           
 11786                           ; BSR set to: 57
 11787                           ;mbmc.c: 249:  if (t) {
 11788                           ;stkvar	_t @ sp[(0)+-8]
 11789  001632  0EF8               	movlw	-8
 11790  001634  006F FF8C  F02A    	movff	plusw1,btemp
 11791  00163A  0EF9               	movlw	-7
 11792  00163C  50E3               	movf	plusw1,w,c
 11793  00163E  102A               	iorwf	btemp^0,w,c
 11794                           
 11795                           ; BSR set to: 57
 11796                           ;mbmc.c: 252:  return current_time;
 11797                           
 11798                           ; BSR set to: 57
 11799  001640  EE20  F0D2         	lfsr	2,time@current_time
 11800                           
 11801                           ;stkvar	?_time @ sp[(0)+-8]
 11802  001644  0E08               	movlw	8
 11803  001646  6E2A               	movwf	btemp^0,c
 11804  001648  0EF8               	movlw	-8
 11805  00164A                     us1169999:
 11806  00164A  006F FF7B FFE3     	movff	postinc2,plusw1
 11807  001650  28E8               	incf	wreg,w,c
 11808  001652  2E2A               	decfsz	btemp^0,f,c
 11809  001654  D7FA               	bra	us1169999
 11810                           
 11811                           ; BSR set to: 57
 11812                           ; _time: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize 
      +                          = 8, vargsize = 0
 11813  001656  0012               	return		;funcret
 11814  001658                     __end_of_time:
 11815                           	opt callstack 0
 11816                           
 11817 ;; *************** function _localtime *****************
 11818 ;; Defined at:
 11819 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/localtime.c"
 11820 ;; Parameters:    Size  Location     Type
 11821 ;;  t               1  [STACK] PTR const long long 
 11822 ;;		 -> pclock(8), 
 11823 ;; Auto vars:     Size  Location     Type
 11824 ;;		None
 11825 ;; Return value:  Size  Location     Type
 11826 ;;                  2  [STACK] PTR struct tm
 11827 ;; Registers used:
 11828 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15, btemp+16, btemp+17, 
      +btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, 
      +btemp+30, btemp+31, tblptrl, tblptrh, tblptru, prodl, prodh
 11829 ;; Tracked objects:
 11830 ;;		On entry : 3F/39
 11831 ;;		On exit  : 0/0
 11832 ;;		Unchanged: 0/0
 11833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11834 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11835 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11836 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11837 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11838 ;;Total ram usage:        0 bytes
 11839 ;; Hardware stack levels used:    1
 11840 ;; Hardware stack levels required when called:   21
 11841 ;; This function calls:
 11842 ;;		___localtime_r
 11843 ;; This function is called by:
 11844 ;;		_main
 11845 ;;		_display_history
 11846 ;; This function uses a reentrant model
 11847 ;;
 11848                           
 11849                           	psect	text35
 11850  00258E                     __ptext35:
 11851                           	opt callstack 0
 11852  00258E                     _localtime:
 11853                           	opt callstack 9
 11854                           
 11855                           ; BSR set to: 57
 11856                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11857                           ;incstack = 0
 11858  00258E  0EDF               	movlw	low localtime@tm
 11859  002590  6EE6               	movwf	postinc1,c
 11860  002592  0E03               	movlw	high localtime@tm
 11861  002594  6EE6               	movwf	postinc1,c
 11862                           
 11863                           ;stkvar	_t @ sp[(-2)+-1]
 11864  002596  0EFD               	movlw	-3
 11865  002598  50E3               	movf	plusw1,w,c
 11866  00259A  6EE6               	movwf	postinc1,c
 11867  00259C  ECEE  F0E2         	call	___localtime_r	;wreg free
 11868                           
 11869                           ; _localtime: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 11870  0025A0  52E5               	movf	postdec1,f,c
 11871  0025A2  0012               	return		;funcret
 11872  0025A4                     __end_of_localtime:
 11873                           	opt callstack 0
 11874                           
 11875 ;; *************** function ___localtime_r *****************
 11876 ;; Defined at:
 11877 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/localtime_r.c"
 11878 ;; Parameters:    Size  Location     Type
 11879 ;;  t               1  [STACK] PTR const long long 
 11880 ;;		 -> pclock(8), 
 11881 ;;  tm              2  [STACK] PTR struct tm
 11882 ;;		 -> localtime@tm(24), 
 11883 ;; Auto vars:     Size  Location     Type
 11884 ;;		None
 11885 ;; Return value:  Size  Location     Type
 11886 ;;                  2  [STACK] PTR struct tm
 11887 ;; Registers used:
 11888 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15, btemp+16, btemp+17, 
      +btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, 
      +btemp+30, btemp+31, tblptrl, tblptrh, tblptru, prodl, prodh
 11889 ;; Tracked objects:
 11890 ;;		On entry : 0/39
 11891 ;;		On exit  : 0/0
 11892 ;;		Unchanged: 0/0
 11893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11894 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11895 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11896 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11897 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11898 ;;Total ram usage:        0 bytes
 11899 ;; Hardware stack levels used:    1
 11900 ;; Hardware stack levels required when called:   20
 11901 ;; This function calls:
 11902 ;;		___secs_to_tm
 11903 ;;		___secs_to_zone
 11904 ;; This function is called by:
 11905 ;;		_localtime
 11906 ;; This function uses a reentrant model
 11907 ;;
 11908                           
 11909                           	psect	text36
 11910  01C5DC                     __ptext36:
 11911                           	opt callstack 0
 11912  01C5DC                     ___localtime_r:
 11913                           	opt callstack 9
 11914                           
 11915                           ;stkvar	_t @ sp[(0)+-1]
 11916                           
 11917                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11918                           ;incstack = 0
 11919  01C5DC  0EFF               	movlw	-1
 11920  01C5DE  50E3               	movf	plusw1,w,c
 11921  01C5E0  6ED9               	movwf	fsr2l,c
 11922  01C5E2  6ADA               	clrf	fsr2h,c
 11923  01C5E4  0E07               	movlw	7
 11924  01C5E6  AEDB               	btfss	plusw2,7,c
 11925  01C5E8  D010               	goto	u16400
 11926  01C5EA  52DE               	movf	postinc2,f,c
 11927  01C5EC  52DE               	movf	postinc2,f,c
 11928  01C5EE  0E80               	movlw	128
 11929  01C5F0  5CDE               	subwf	postinc2,w,c
 11930  01C5F2  0EBD               	movlw	189
 11931  01C5F4  58DE               	subwfb	postinc2,w,c
 11932  01C5F6  0E0E               	movlw	14
 11933  01C5F8  58DE               	subwfb	postinc2,w,c
 11934  01C5FA  0EFF               	movlw	255
 11935  01C5FC  58DE               	subwfb	postinc2,w,c
 11936  01C5FE  0EFF               	movlw	255
 11937  01C600  58DE               	subwfb	postinc2,w,c
 11938  01C602  0EFF               	movlw	255
 11939  01C604  58DE               	subwfb	postinc2,w,c
 11940  01C606  A0D8               	btfss	status,0,c
 11941  01C608  D01B               	goto	u16410
 11942  01C60A                     u16400:
 11943                           
 11944                           ;stkvar	_t @ sp[(0)+-1]
 11945  01C60A  0EFF               	movlw	-1
 11946  01C60C  50E3               	movf	plusw1,w,c
 11947  01C60E  6ED9               	movwf	fsr2l,c
 11948  01C610  6ADA               	clrf	fsr2h,c
 11949  01C612  0E07               	movlw	7
 11950  01C614  BEDB               	btfsc	plusw2,7,c
 11951  01C616  D019               	goto	l16820
 11952  01C618  0E07               	movlw	7
 11953  01C61A  50DB               	movf	plusw2,w,c
 11954  01C61C  E111               	bnz	u16410
 11955  01C61E  0E06               	movlw	6
 11956  01C620  50DB               	movf	plusw2,w,c
 11957  01C622  E10E               	bnz	u16410
 11958  01C624  0E05               	movlw	5
 11959  01C626  50DB               	movf	plusw2,w,c
 11960  01C628  E10B               	bnz	u16410
 11961  01C62A  04DE               	decf	postinc2,w,c
 11962  01C62C  0E7B               	movlw	123
 11963  01C62E  58DE               	subwfb	postinc2,w,c
 11964  01C630  0E9D               	movlw	157
 11965  01C632  58DE               	subwfb	postinc2,w,c
 11966  01C634  0E40               	movlw	64
 11967  01C636  58DE               	subwfb	postinc2,w,c
 11968  01C638  0EF1               	movlw	241
 11969  01C63A  58DE               	subwfb	postinc2,w,c
 11970  01C63C  A0D8               	btfss	status,0,c
 11971  01C63E  D005               	goto	l16820
 11972  01C640                     u16410:
 11973  01C640  0E00               	movlw	0
 11974  01C642  6E2A               	movwf	btemp^0,c
 11975  01C644  0E00               	movlw	0
 11976  01C646  6E2B               	movwf	(btemp+1)^0,c
 11977  01C648  D0E7               	goto	l3515
 11978  01C64A                     l16820:
 11979                           
 11980                           ;stkvar	_tm @ sp[(0)+-3]
 11981  01C64A  0EFD               	movlw	-3
 11982  01C64C  50E3               	movf	plusw1,w,c
 11983  01C64E  0F16               	addlw	22
 11984  01C650  6E34               	movwf	(btemp+10)^0,c
 11985  01C652  0EFE               	movlw	-2
 11986  01C654  006F FF8C  F035    	movff	plusw1,btemp+11
 11987  01C65A  0E00               	movlw	0
 11988  01C65C  2235               	addwfc	(btemp+11)^0,f,c
 11989  01C65E  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 11990  01C664  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 11991  01C66A  0E00               	movlw	0
 11992  01C66C  6EE6               	movwf	postinc1,c
 11993  01C66E  0E00               	movlw	0
 11994  01C670  6EE6               	movwf	postinc1,c
 11995                           
 11996                           ;stkvar	_tm @ sp[(-4)+-3]
 11997  01C672  0EF9               	movlw	-7
 11998  01C674  50E3               	movf	plusw1,w,c
 11999  01C676  0F12               	addlw	18
 12000  01C678  6E34               	movwf	(btemp+10)^0,c
 12001  01C67A  0EFA               	movlw	-6
 12002  01C67C  006F FF8C  F035    	movff	plusw1,btemp+11
 12003  01C682  0E00               	movlw	0
 12004  01C684  2235               	addwfc	(btemp+11)^0,f,c
 12005  01C686  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 12006  01C68C  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 12007                           
 12008                           ;stkvar	_tm @ sp[(-6)+-3]
 12009  01C692  0EF7               	movlw	-9
 12010  01C694  50E3               	movf	plusw1,w,c
 12011  01C696  0F10               	addlw	16
 12012  01C698  6E34               	movwf	(btemp+10)^0,c
 12013  01C69A  0EF8               	movlw	-8
 12014  01C69C  006F FF8C  F035    	movff	plusw1,btemp+11
 12015  01C6A2  0E00               	movlw	0
 12016  01C6A4  2235               	addwfc	(btemp+11)^0,f,c
 12017  01C6A6  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 12018  01C6AC  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 12019  01C6B2  0E00               	movlw	0
 12020  01C6B4  6EE6               	movwf	postinc1,c
 12021  01C6B6  0E00               	movlw	0
 12022  01C6B8  6EE6               	movwf	postinc1,c
 12023                           
 12024                           ;stkvar	_t @ sp[(-10)+-1]
 12025  01C6BA  0EF5               	movlw	-11
 12026  01C6BC  50E3               	movf	plusw1,w,c
 12027  01C6BE  6ED9               	movwf	fsr2l,c
 12028  01C6C0  6ADA               	clrf	fsr2h,c
 12029  01C6C2  006F FF7B FFE6     	movff	postinc2,postinc1
 12030  01C6C8  006F FF7B FFE6     	movff	postinc2,postinc1
 12031  01C6CE  006F FF7B FFE6     	movff	postinc2,postinc1
 12032  01C6D4  006F FF7B FFE6     	movff	postinc2,postinc1
 12033  01C6DA  006F FF7B FFE6     	movff	postinc2,postinc1
 12034  01C6E0  006F FF7B FFE6     	movff	postinc2,postinc1
 12035  01C6E6  006F FF7B FFE6     	movff	postinc2,postinc1
 12036  01C6EC  006F FF7B FFE6     	movff	postinc2,postinc1
 12037  01C6F2  ECFC  F0AD         	call	___secs_to_zone	;wreg free
 12038                           
 12039                           ;stkvar	_tm @ sp[(0)+-3]
 12040  01C6F6  0EFD               	movlw	-3
 12041  01C6F8  006F FF8F FFE6     	movff	plusw1,postinc1
 12042  01C6FE  006F FF8F FFE6     	movff	plusw1,postinc1
 12043                           
 12044                           ;stkvar	_t @ sp[(-2)+-1]
 12045  01C704  0EFD               	movlw	-3
 12046  01C706  50E3               	movf	plusw1,w,c
 12047  01C708  6ED9               	movwf	fsr2l,c
 12048  01C70A  6ADA               	clrf	fsr2h,c
 12049  01C70C  006F FF78  F03A    	movff	postinc2,btemp+16
 12050  01C712  006F FF78  F03B    	movff	postinc2,btemp+17
 12051  01C718  006F FF78  F03C    	movff	postinc2,btemp+18
 12052  01C71E  006F FF78  F03D    	movff	postinc2,btemp+19
 12053  01C724  006F FF78  F03E    	movff	postinc2,btemp+20
 12054  01C72A  006F FF78  F03F    	movff	postinc2,btemp+21
 12055  01C730  006F FF78  F040    	movff	postinc2,btemp+22
 12056  01C736  006F FF78  F041    	movff	postinc2,btemp+23
 12057                           
 12058                           ;stkvar	_tm @ sp[(-2)+-3]
 12059  01C73C  0EFB               	movlw	-5
 12060  01C73E  006F FF8C  F034    	movff	plusw1,btemp+10
 12061  01C744  0EFC               	movlw	-4
 12062  01C746  006F FF8C  F035    	movff	plusw1,btemp+11
 12063  01C74C  0E12               	movlw	18
 12064  01C74E  2434               	addwf	(btemp+10)^0,w,c
 12065  01C750  6ED9               	movwf	fsr2l,c
 12066  01C752  0E00               	movlw	0
 12067  01C754  2035               	addwfc	(btemp+11)^0,w,c
 12068  01C756  6EDA               	movwf	fsr2h,c
 12069  01C758  006F FF78  F032    	movff	postinc2,btemp+8
 12070  01C75E  006F FF78  F033    	movff	postinc2,btemp+9
 12071  01C764  006F FF78  F034    	movff	postinc2,btemp+10
 12072  01C76A  006F FF78  F035    	movff	postinc2,btemp+11
 12073  01C770  0060  F0C8  F042   	movff	btemp+8,btemp+24
 12074  01C776  0060  F0CC  F043   	movff	btemp+9,btemp+25
 12075  01C77C  0060  F0D0  F044   	movff	btemp+10,btemp+26
 12076  01C782  0060  F0D4  F045   	movff	btemp+11,btemp+27
 12077  01C788  6A46               	clrf	(btemp+28)^0,c
 12078  01C78A  BE45               	btfsc	(btemp+27)^0,7,c
 12079  01C78C  6846               	setf	(btemp+28)^0,c
 12080  01C78E  0060  F118  F047   	movff	btemp+28,btemp+29
 12081  01C794  0060  F118  F048   	movff	btemp+28,btemp+30
 12082  01C79A  0060  F118  F049   	movff	btemp+28,btemp+31
 12083  01C7A0  503A               	movf	(btemp+16)^0,w,c
 12084  01C7A2  2442               	addwf	(btemp+24)^0,w,c
 12085  01C7A4  6E32               	movwf	(btemp+8)^0,c
 12086  01C7A6  503B               	movf	(btemp+17)^0,w,c
 12087  01C7A8  2043               	addwfc	(btemp+25)^0,w,c
 12088  01C7AA  6E33               	movwf	(btemp+9)^0,c
 12089  01C7AC  503C               	movf	(btemp+18)^0,w,c
 12090  01C7AE  2044               	addwfc	(btemp+26)^0,w,c
 12091  01C7B0  6E34               	movwf	(btemp+10)^0,c
 12092  01C7B2  503D               	movf	(btemp+19)^0,w,c
 12093  01C7B4  2045               	addwfc	(btemp+27)^0,w,c
 12094  01C7B6  6E35               	movwf	(btemp+11)^0,c
 12095  01C7B8  503E               	movf	(btemp+20)^0,w,c
 12096  01C7BA  2046               	addwfc	(btemp+28)^0,w,c
 12097  01C7BC  6E36               	movwf	(btemp+12)^0,c
 12098  01C7BE  503F               	movf	(btemp+21)^0,w,c
 12099  01C7C0  2047               	addwfc	(btemp+29)^0,w,c
 12100  01C7C2  6E37               	movwf	(btemp+13)^0,c
 12101  01C7C4  5040               	movf	(btemp+22)^0,w,c
 12102  01C7C6  2048               	addwfc	(btemp+30)^0,w,c
 12103  01C7C8  6E38               	movwf	(btemp+14)^0,c
 12104  01C7CA  5041               	movf	(btemp+23)^0,w,c
 12105  01C7CC  2049               	addwfc	(btemp+31)^0,w,c
 12106  01C7CE  6E39               	movwf	(btemp+15)^0,c
 12107  01C7D0  0060  F0CB  FFE6   	movff	btemp+8,postinc1
 12108  01C7D6  0060  F0CF  FFE6   	movff	btemp+9,postinc1
 12109  01C7DC  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 12110  01C7E2  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 12111  01C7E8  0060  F0DB  FFE6   	movff	btemp+12,postinc1
 12112  01C7EE  0060  F0DF  FFE6   	movff	btemp+13,postinc1
 12113  01C7F4  0060  F0E3  FFE6   	movff	btemp+14,postinc1
 12114  01C7FA  0060  F0E7  FFE6   	movff	btemp+15,postinc1
 12115  01C800  ECCD  F093         	call	___secs_to_tm	;wreg free
 12116  01C804  BE2D               	btfsc	(btemp+3)^0,7,c
 12117  01C806  D71C               	goto	u16410
 12118                           
 12119                           ;stkvar	_tm @ sp[(0)+-3]
 12120  01C808  0EFD               	movlw	-3
 12121  01C80A  006F FF8C  F02A    	movff	plusw1,btemp
 12122  01C810  0EFE               	movlw	-2
 12123  01C812  006F FF8C  F02B    	movff	plusw1,btemp+1
 12124  01C818                     l3515:
 12125                           
 12126                           ; ___localtime_r: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3,
      +                           argsize = 3, vargsize = 0
 12127  01C818  52E5               	movf	postdec1,f,c
 12128  01C81A  52E5               	movf	postdec1,f,c
 12129  01C81C  52E5               	movf	postdec1,f,c
 12130  01C81E  0012               	return		;funcret
 12131  01C820                     __end_of___localtime_r:
 12132                           	opt callstack 0
 12133                           
 12134 ;; *************** function ___secs_to_zone *****************
 12135 ;; Defined at:
 12136 ;;		line 249 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__tz.c"
 12137 ;; Parameters:    Size  Location     Type
 12138 ;;  t               8  [STACK] long long 
 12139 ;;  local           2  [STACK] int 
 12140 ;;  isdst           2  [STACK] PTR int 
 12141 ;;		 -> localtime@tm(24), 
 12142 ;;  offset          2  [STACK] PTR long 
 12143 ;;		 -> localtime@tm(24), 
 12144 ;;  oppoff          2  [STACK] PTR long 
 12145 ;;		 -> NULL(0), 
 12146 ;;  zonename        2  [STACK] PTR PTR const unsigned c
 12147 ;;		 -> localtime@tm(24), 
 12148 ;; Auto vars:     Size  Location     Type
 12149 ;;  alt             2  [STACK] unsigned int 
 12150 ;;  i               2    0        unsigned int 
 12151 ;;  y               8  [STACK] long long 
 12152 ;;  t1              8  [STACK] long long 
 12153 ;;  t0              8  [STACK] long long 
 12154 ;; Return value:  Size  Location     Type
 12155 ;;                  1  [STACK] void 
 12156 ;; Registers used:
 12157 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15, btemp+16, btemp+17, btemp+18, btem
      +p+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, btemp+30, btem
      +p+31, tblptrl, tblptrh, tblptru, prodl, prodh
 12158 ;; Tracked objects:
 12159 ;;		On entry : 0/39
 12160 ;;		On exit  : 0/0
 12161 ;;		Unchanged: 0/0
 12162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12163 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12164 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12166 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12167 ;;Total ram usage:        0 bytes
 12168 ;; Hardware stack levels used:    1
 12169 ;; Hardware stack levels required when called:   19
 12170 ;; This function calls:
 12171 ;;		___aodiv
 12172 ;;		___year_to_secs
 12173 ;;		_do_tzset
 12174 ;;		_rule_to_secs
 12175 ;;		_scan_trans
 12176 ;;		_zi_read32
 12177 ;; This function is called by:
 12178 ;;		___localtime_r
 12179 ;; This function uses a reentrant model
 12180 ;;
 12181                           
 12182                           	psect	text37
 12183  015BF8                     __ptext37:
 12184                           	opt callstack 0
 12185  015BF8                     ___secs_to_zone:
 12186                           	opt callstack 0
 12187                           
 12188                           ; autosize = 24, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 18, argsize = 18 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 12189  015BF8  0E18               	movlw	24
 12190  015BFA  26E1               	addwf	fsr1l,f,c
 12191  015BFC  0E00               	movlw	0
 12192  015BFE  22E2               	addwfc	fsr1h,f,c
 12193                           
 12194                           ;incstack = 0
 12195  015C00  ECA4  F0DB         	call	_do_tzset	;wreg free
 12196  015C04  0100               	movlb	0	; () banked
 12197  015C06  51B8               	movf	___daylight& (0+255),w,b
 12198  015C08  11B9               	iorwf	(___daylight+1)& (0+255),w,b
 12199  015C0A  B4D8               	btfsc	status,2,c
 12200  015C0C  D356               	goto	u16190
 12201                           
 12202                           ; BSR set to: 0
 12203  015C0E  0E58               	movlw	88
 12204  015C10  6EE6               	movwf	postinc1,c
 12205  015C12  0E85               	movlw	133
 12206  015C14  6EE6               	movwf	postinc1,c
 12207  015C16  0EE1               	movlw	225
 12208  015C18  6EE6               	movwf	postinc1,c
 12209  015C1A  0E01               	movlw	1
 12210  015C1C  6EE6               	movwf	postinc1,c
 12211  015C1E  0E00               	movlw	0
 12212  015C20  6EE6               	movwf	postinc1,c
 12213  015C22  0E00               	movlw	0
 12214  015C24  6EE6               	movwf	postinc1,c
 12215  015C26  0E00               	movlw	0
 12216  015C28  6EE6               	movwf	postinc1,c
 12217  015C2A  0E00               	movlw	0
 12218  015C2C  6EE6               	movwf	postinc1,c
 12219                           
 12220                           ;stkvar	_t @ sp[(-32)+-8]
 12221  015C2E  50E1               	movf	fsr1l,w,c
 12222  015C30  0FD8               	addlw	-40
 12223  015C32  6ED9               	movwf	fsr2l,c
 12224  015C34  50E2               	movf	fsr1h,w,c
 12225  015C36  6EDA               	movwf	fsr2h,c
 12226  015C38  0EFF               	movlw	255
 12227  015C3A  22DA               	addwfc	fsr2h,f,c
 12228  015C3C  006F FF7B FFE6     	movff	postinc2,postinc1
 12229  015C42  006F FF7B FFE6     	movff	postinc2,postinc1
 12230  015C48  006F FF7B FFE6     	movff	postinc2,postinc1
 12231  015C4E  006F FF7B FFE6     	movff	postinc2,postinc1
 12232  015C54  006F FF7B FFE6     	movff	postinc2,postinc1
 12233  015C5A  006F FF7B FFE6     	movff	postinc2,postinc1
 12234  015C60  006F FF7B FFE6     	movff	postinc2,postinc1
 12235  015C66  006F FF7B FFE6     	movff	postinc2,postinc1
 12236  015C6C  EC24  F0DE         	call	___aodiv	;wreg free
 12237  015C70  52E5               	movf	postdec1,f,c
 12238  015C72  006F FF9C  F041    	movff	indf1,btemp+23
 12239  015C78  52E5               	movf	postdec1,f,c
 12240  015C7A  006F FF9C  F040    	movff	indf1,btemp+22
 12241  015C80  52E5               	movf	postdec1,f,c
 12242  015C82  006F FF9C  F03F    	movff	indf1,btemp+21
 12243  015C88  52E5               	movf	postdec1,f,c
 12244  015C8A  006F FF9C  F03E    	movff	indf1,btemp+20
 12245  015C90  52E5               	movf	postdec1,f,c
 12246  015C92  006F FF9C  F03D    	movff	indf1,btemp+19
 12247  015C98  52E5               	movf	postdec1,f,c
 12248  015C9A  006F FF9C  F03C    	movff	indf1,btemp+18
 12249  015CA0  52E5               	movf	postdec1,f,c
 12250  015CA2  006F FF9C  F03B    	movff	indf1,btemp+17
 12251  015CA8  52E5               	movf	postdec1,f,c
 12252  015CAA  006F FF9C  F03A    	movff	indf1,btemp+16
 12253  015CB0  0EF8               	movlw	248
 12254  015CB2  26E1               	addwf	fsr1l,f,c
 12255  015CB4  0EFF               	movlw	255
 12256  015CB6  22E2               	addwfc	fsr1h,f,c
 12257  015CB8  0E46               	movlw	70
 12258  015CBA  243A               	addwf	(btemp+16)^0,w,c
 12259  015CBC  6E42               	movwf	(btemp+24)^0,c
 12260  015CBE  0E00               	movlw	0
 12261  015CC0  203B               	addwfc	(btemp+17)^0,w,c
 12262  015CC2  6E43               	movwf	(btemp+25)^0,c
 12263  015CC4  0E00               	movlw	0
 12264  015CC6  203C               	addwfc	(btemp+18)^0,w,c
 12265  015CC8  6E44               	movwf	(btemp+26)^0,c
 12266  015CCA  0E00               	movlw	0
 12267  015CCC  203D               	addwfc	(btemp+19)^0,w,c
 12268  015CCE  6E45               	movwf	(btemp+27)^0,c
 12269  015CD0  0E00               	movlw	0
 12270  015CD2  203E               	addwfc	(btemp+20)^0,w,c
 12271  015CD4  6E46               	movwf	(btemp+28)^0,c
 12272  015CD6  0E00               	movlw	0
 12273  015CD8  203F               	addwfc	(btemp+21)^0,w,c
 12274  015CDA  6E47               	movwf	(btemp+29)^0,c
 12275  015CDC  0E00               	movlw	0
 12276  015CDE  2040               	addwfc	(btemp+22)^0,w,c
 12277  015CE0  6E48               	movwf	(btemp+30)^0,c
 12278  015CE2  0E00               	movlw	0
 12279  015CE4  2041               	addwfc	(btemp+23)^0,w,c
 12280  015CE6  6E49               	movwf	(btemp+31)^0,c
 12281                           
 12282                           ;stkvar	_y @ sp[(-24)+0]
 12283  015CE8  0EE8               	movlw	-24
 12284  015CEA  0060  F10B  FFE3   	movff	btemp+24,plusw1
 12285  015CF0  0EE9               	movlw	-23
 12286  015CF2  0060  F10F  FFE3   	movff	btemp+25,plusw1
 12287  015CF8  0EEA               	movlw	-22
 12288  015CFA  0060  F113  FFE3   	movff	btemp+26,plusw1
 12289  015D00  0EEB               	movlw	-21
 12290  015D02  0060  F117  FFE3   	movff	btemp+27,plusw1
 12291  015D08  0EEC               	movlw	-20
 12292  015D0A  0060  F11B  FFE3   	movff	btemp+28,plusw1
 12293  015D10  0EED               	movlw	-19
 12294  015D12  0060  F11F  FFE3   	movff	btemp+29,plusw1
 12295  015D18  0EEE               	movlw	-18
 12296  015D1A  0060  F123  FFE3   	movff	btemp+30,plusw1
 12297  015D20  0EEF               	movlw	-17
 12298  015D22  0060  F127  FFE3   	movff	btemp+31,plusw1
 12299  015D28  D010               	goto	l16590
 12300  015D2A                     l16588:
 12301                           
 12302                           ;stkvar	_y @ sp[(-24)+0]
 12303  015D2A  50E1               	movf	fsr1l,w,c
 12304  015D2C  0FE8               	addlw	-24
 12305  015D2E  6ED9               	movwf	fsr2l,c
 12306  015D30  50E2               	movf	fsr1h,w,c
 12307  015D32  6EDA               	movwf	fsr2h,c
 12308  015D34  0EFF               	movlw	255
 12309  015D36  22DA               	addwfc	fsr2h,f,c
 12310  015D38  06DE               	decf	postinc2,f,c
 12311  015D3A  0E00               	movlw	0
 12312  015D3C  5ADE               	subwfb	postinc2,f,c
 12313  015D3E  5ADE               	subwfb	postinc2,f,c
 12314  015D40  5ADE               	subwfb	postinc2,f,c
 12315  015D42  5ADE               	subwfb	postinc2,f,c
 12316  015D44  5ADE               	subwfb	postinc2,f,c
 12317  015D46  5ADE               	subwfb	postinc2,f,c
 12318  015D48  5ADE               	subwfb	postinc2,f,c
 12319  015D4A                     l16590:
 12320  015D4A  0E00               	movlw	0
 12321  015D4C  6EE6               	movwf	postinc1,c
 12322  015D4E  0E00               	movlw	0
 12323  015D50  6EE6               	movwf	postinc1,c
 12324                           
 12325                           ;stkvar	_y @ sp[(-26)+0]
 12326  015D52  50E1               	movf	fsr1l,w,c
 12327  015D54  0FE6               	addlw	-26
 12328  015D56  6ED9               	movwf	fsr2l,c
 12329  015D58  50E2               	movf	fsr1h,w,c
 12330  015D5A  6EDA               	movwf	fsr2h,c
 12331  015D5C  0EFF               	movlw	255
 12332  015D5E  22DA               	addwfc	fsr2h,f,c
 12333  015D60  006F FF7B FFE6     	movff	postinc2,postinc1
 12334  015D66  006F FF7B FFE6     	movff	postinc2,postinc1
 12335  015D6C  006F FF7B FFE6     	movff	postinc2,postinc1
 12336  015D72  006F FF7B FFE6     	movff	postinc2,postinc1
 12337  015D78  006F FF7B FFE6     	movff	postinc2,postinc1
 12338  015D7E  006F FF7B FFE6     	movff	postinc2,postinc1
 12339  015D84  006F FF7B FFE6     	movff	postinc2,postinc1
 12340  015D8A  006F FF7B FFE6     	movff	postinc2,postinc1
 12341  015D90  EC43  F0A9         	call	___year_to_secs	;wreg free
 12342  015D94  52E5               	movf	postdec1,f,c
 12343  015D96  006F FF9C  F041    	movff	indf1,btemp+23
 12344  015D9C  52E5               	movf	postdec1,f,c
 12345  015D9E  006F FF9C  F040    	movff	indf1,btemp+22
 12346  015DA4  52E5               	movf	postdec1,f,c
 12347  015DA6  006F FF9C  F03F    	movff	indf1,btemp+21
 12348  015DAC  52E5               	movf	postdec1,f,c
 12349  015DAE  006F FF9C  F03E    	movff	indf1,btemp+20
 12350  015DB4  52E5               	movf	postdec1,f,c
 12351  015DB6  006F FF9C  F03D    	movff	indf1,btemp+19
 12352  015DBC  52E5               	movf	postdec1,f,c
 12353  015DBE  006F FF9C  F03C    	movff	indf1,btemp+18
 12354  015DC4  52E5               	movf	postdec1,f,c
 12355  015DC6  006F FF9C  F03B    	movff	indf1,btemp+17
 12356  015DCC  52E5               	movf	postdec1,f,c
 12357  015DCE  006F FF9C  F03A    	movff	indf1,btemp+16
 12358  015DD4  52E5               	movf	postdec1,f,c
 12359  015DD6  52E5               	movf	postdec1,f,c
 12360                           
 12361                           ;stkvar	_t @ sp[(-24)+-8]
 12362  015DD8  0EE0               	movlw	-32
 12363  015DDA  006F FF8C  F02A    	movff	plusw1,btemp
 12364  015DE0  503A               	movf	(btemp+16)^0,w,c
 12365  015DE2  5C2A               	subwf	btemp^0,w,c
 12366  015DE4  0EE1               	movlw	-31
 12367  015DE6  006F FF8C  F02A    	movff	plusw1,btemp
 12368  015DEC  503B               	movf	(btemp+17)^0,w,c
 12369  015DEE  582A               	subwfb	btemp^0,w,c
 12370  015DF0  0EE2               	movlw	-30
 12371  015DF2  006F FF8C  F02A    	movff	plusw1,btemp
 12372  015DF8  503C               	movf	(btemp+18)^0,w,c
 12373  015DFA  582A               	subwfb	btemp^0,w,c
 12374  015DFC  0EE3               	movlw	-29
 12375  015DFE  006F FF8C  F02A    	movff	plusw1,btemp
 12376  015E04  503D               	movf	(btemp+19)^0,w,c
 12377  015E06  582A               	subwfb	btemp^0,w,c
 12378  015E08  0EE4               	movlw	-28
 12379  015E0A  006F FF8C  F02A    	movff	plusw1,btemp
 12380  015E10  503E               	movf	(btemp+20)^0,w,c
 12381  015E12  582A               	subwfb	btemp^0,w,c
 12382  015E14  0EE5               	movlw	-27
 12383  015E16  006F FF8C  F02A    	movff	plusw1,btemp
 12384  015E1C  503F               	movf	(btemp+21)^0,w,c
 12385  015E1E  582A               	subwfb	btemp^0,w,c
 12386  015E20  0EE6               	movlw	-26
 12387  015E22  006F FF8C  F02A    	movff	plusw1,btemp
 12388  015E28  5040               	movf	(btemp+22)^0,w,c
 12389  015E2A  582A               	subwfb	btemp^0,w,c
 12390  015E2C  0EE7               	movlw	-25
 12391  015E2E  50E3               	movf	plusw1,w,c
 12392  015E30  0A80               	xorlw	128
 12393  015E32  6E2A               	movwf	btemp^0,c
 12394  015E34  5041               	movf	(btemp+23)^0,w,c
 12395  015E36  0A80               	xorlw	128
 12396  015E38  582A               	subwfb	btemp^0,w,c
 12397  015E3A  B0D8               	btfsc	status,0,c
 12398  015E3C  D011               	goto	l16594
 12399  015E3E  D775               	goto	l16588
 12400  015E40                     l16592:
 12401                           
 12402                           ;stkvar	_y @ sp[(-24)+0]
 12403  015E40  50E1               	movf	fsr1l,w,c
 12404  015E42  0FE8               	addlw	-24
 12405  015E44  6ED9               	movwf	fsr2l,c
 12406  015E46  50E2               	movf	fsr1h,w,c
 12407  015E48  6EDA               	movwf	fsr2h,c
 12408  015E4A  0EFF               	movlw	255
 12409  015E4C  22DA               	addwfc	fsr2h,f,c
 12410  015E4E  2ADE               	incf	postinc2,f,c
 12411  015E50  0E00               	movlw	0
 12412  015E52  22DE               	addwfc	postinc2,f,c
 12413  015E54  22DE               	addwfc	postinc2,f,c
 12414  015E56  22DE               	addwfc	postinc2,f,c
 12415  015E58  22DE               	addwfc	postinc2,f,c
 12416  015E5A  22DE               	addwfc	postinc2,f,c
 12417  015E5C  22DE               	addwfc	postinc2,f,c
 12418  015E5E  22DE               	addwfc	postinc2,f,c
 12419  015E60                     l16594:
 12420                           
 12421                           ;stkvar	_t @ sp[(-24)+-8]
 12422  015E60  0E00               	movlw	0
 12423  015E62  6EE6               	movwf	postinc1,c
 12424  015E64  0E00               	movlw	0
 12425  015E66  6EE6               	movwf	postinc1,c
 12426                           
 12427                           ;stkvar	_y @ sp[(-26)+0]
 12428  015E68  0EE6               	movlw	-26
 12429  015E6A  50E3               	movf	plusw1,w,c
 12430  015E6C  0F01               	addlw	1
 12431  015E6E  6E3A               	movwf	(btemp+16)^0,c
 12432  015E70  0EE7               	movlw	-25
 12433  015E72  006F FF8C  F03B    	movff	plusw1,btemp+17
 12434  015E78  0E00               	movlw	0
 12435  015E7A  223B               	addwfc	(btemp+17)^0,f,c
 12436  015E7C  0EE8               	movlw	-24
 12437  015E7E  006F FF8C  F03C    	movff	plusw1,btemp+18
 12438  015E84  0E00               	movlw	0
 12439  015E86  223C               	addwfc	(btemp+18)^0,f,c
 12440  015E88  0EE9               	movlw	-23
 12441  015E8A  006F FF8C  F03D    	movff	plusw1,btemp+19
 12442  015E90  0E00               	movlw	0
 12443  015E92  223D               	addwfc	(btemp+19)^0,f,c
 12444  015E94  0EEA               	movlw	-22
 12445  015E96  006F FF8C  F03E    	movff	plusw1,btemp+20
 12446  015E9C  0E00               	movlw	0
 12447  015E9E  223E               	addwfc	(btemp+20)^0,f,c
 12448  015EA0  0EEB               	movlw	-21
 12449  015EA2  006F FF8C  F03F    	movff	plusw1,btemp+21
 12450  015EA8  0E00               	movlw	0
 12451  015EAA  223F               	addwfc	(btemp+21)^0,f,c
 12452  015EAC  0EEC               	movlw	-20
 12453  015EAE  006F FF8C  F040    	movff	plusw1,btemp+22
 12454  015EB4  0E00               	movlw	0
 12455  015EB6  2240               	addwfc	(btemp+22)^0,f,c
 12456  015EB8  0EED               	movlw	-19
 12457  015EBA  006F FF8C  F041    	movff	plusw1,btemp+23
 12458  015EC0  0E00               	movlw	0
 12459  015EC2  2241               	addwfc	(btemp+23)^0,f,c
 12460  015EC4  0060  F0EB  FFE6   	movff	btemp+16,postinc1
 12461  015ECA  0060  F0EF  FFE6   	movff	btemp+17,postinc1
 12462  015ED0  0060  F0F3  FFE6   	movff	btemp+18,postinc1
 12463  015ED6  0060  F0F7  FFE6   	movff	btemp+19,postinc1
 12464  015EDC  0060  F0FB  FFE6   	movff	btemp+20,postinc1
 12465  015EE2  0060  F0FF  FFE6   	movff	btemp+21,postinc1
 12466  015EE8  0060  F103  FFE6   	movff	btemp+22,postinc1
 12467  015EEE  0060  F107  FFE6   	movff	btemp+23,postinc1
 12468  015EF4  EC43  F0A9         	call	___year_to_secs	;wreg free
 12469  015EF8  52E5               	movf	postdec1,f,c
 12470  015EFA  006F FF9C  F041    	movff	indf1,btemp+23
 12471  015F00  52E5               	movf	postdec1,f,c
 12472  015F02  006F FF9C  F040    	movff	indf1,btemp+22
 12473  015F08  52E5               	movf	postdec1,f,c
 12474  015F0A  006F FF9C  F03F    	movff	indf1,btemp+21
 12475  015F10  52E5               	movf	postdec1,f,c
 12476  015F12  006F FF9C  F03E    	movff	indf1,btemp+20
 12477  015F18  52E5               	movf	postdec1,f,c
 12478  015F1A  006F FF9C  F03D    	movff	indf1,btemp+19
 12479  015F20  52E5               	movf	postdec1,f,c
 12480  015F22  006F FF9C  F03C    	movff	indf1,btemp+18
 12481  015F28  52E5               	movf	postdec1,f,c
 12482  015F2A  006F FF9C  F03B    	movff	indf1,btemp+17
 12483  015F30  52E5               	movf	postdec1,f,c
 12484  015F32  006F FF9C  F03A    	movff	indf1,btemp+16
 12485  015F38  52E5               	movf	postdec1,f,c
 12486  015F3A  52E5               	movf	postdec1,f,c
 12487  015F3C  0EE0               	movlw	-32
 12488  015F3E  50E3               	movf	plusw1,w,c
 12489  015F40  5C3A               	subwf	(btemp+16)^0,w,c
 12490  015F42  0EE1               	movlw	-31
 12491  015F44  50E3               	movf	plusw1,w,c
 12492  015F46  583B               	subwfb	(btemp+17)^0,w,c
 12493  015F48  0EE2               	movlw	-30
 12494  015F4A  50E3               	movf	plusw1,w,c
 12495  015F4C  583C               	subwfb	(btemp+18)^0,w,c
 12496  015F4E  0EE3               	movlw	-29
 12497  015F50  50E3               	movf	plusw1,w,c
 12498  015F52  583D               	subwfb	(btemp+19)^0,w,c
 12499  015F54  0EE4               	movlw	-28
 12500  015F56  50E3               	movf	plusw1,w,c
 12501  015F58  583E               	subwfb	(btemp+20)^0,w,c
 12502  015F5A  0EE5               	movlw	-27
 12503  015F5C  50E3               	movf	plusw1,w,c
 12504  015F5E  583F               	subwfb	(btemp+21)^0,w,c
 12505  015F60  0EE6               	movlw	-26
 12506  015F62  50E3               	movf	plusw1,w,c
 12507  015F64  5840               	subwfb	(btemp+22)^0,w,c
 12508  015F66  5041               	movf	(btemp+23)^0,w,c
 12509  015F68  0A80               	xorlw	128
 12510  015F6A  6E2A               	movwf	btemp^0,c
 12511  015F6C  0EE7               	movlw	-25
 12512  015F6E  50E3               	movf	plusw1,w,c
 12513  015F70  0A80               	xorlw	128
 12514  015F72  582A               	subwfb	btemp^0,w,c
 12515  015F74  A0D8               	btfss	status,0,c
 12516  015F76  D764               	goto	l16592
 12517                           
 12518                           ;stkvar	_y @ sp[(-24)+0]
 12519  015F78  0EE8               	movlw	-24
 12520  015F7A  006F FF8F FFE6     	movff	plusw1,postinc1
 12521  015F80  006F FF8F FFE6     	movff	plusw1,postinc1
 12522  015F86  0EE5               	movlw	low _r0
 12523  015F88  6EE6               	movwf	postinc1,c
 12524  015F8A  0E01               	movlw	high _r0
 12525  015F8C  6EE6               	movwf	postinc1,c
 12526  015F8E  EC40  F0BA         	call	_rule_to_secs	;wreg free
 12527  015F92  52E5               	movf	postdec1,f,c
 12528  015F94  006F FF9C  F041    	movff	indf1,btemp+23
 12529  015F9A  52E5               	movf	postdec1,f,c
 12530  015F9C  006F FF9C  F040    	movff	indf1,btemp+22
 12531  015FA2  52E5               	movf	postdec1,f,c
 12532  015FA4  006F FF9C  F03F    	movff	indf1,btemp+21
 12533  015FAA  52E5               	movf	postdec1,f,c
 12534  015FAC  006F FF9C  F03E    	movff	indf1,btemp+20
 12535  015FB2  52E5               	movf	postdec1,f,c
 12536  015FB4  006F FF9C  F03D    	movff	indf1,btemp+19
 12537  015FBA  52E5               	movf	postdec1,f,c
 12538  015FBC  006F FF9C  F03C    	movff	indf1,btemp+18
 12539  015FC2  52E5               	movf	postdec1,f,c
 12540  015FC4  006F FF9C  F03B    	movff	indf1,btemp+17
 12541  015FCA  52E5               	movf	postdec1,f,c
 12542  015FCC  006F FF9C  F03A    	movff	indf1,btemp+16
 12543                           
 12544                           ;stkvar	_t0 @ sp[(-24)+16]
 12545  015FD2  0EF8               	movlw	-8
 12546  015FD4  0060  F0EB  FFE3   	movff	btemp+16,plusw1
 12547  015FDA  0EF9               	movlw	-7
 12548  015FDC  0060  F0EF  FFE3   	movff	btemp+17,plusw1
 12549  015FE2  0EFA               	movlw	-6
 12550  015FE4  0060  F0F3  FFE3   	movff	btemp+18,plusw1
 12551  015FEA  0EFB               	movlw	-5
 12552  015FEC  0060  F0F7  FFE3   	movff	btemp+19,plusw1
 12553  015FF2  0EFC               	movlw	-4
 12554  015FF4  0060  F0FB  FFE3   	movff	btemp+20,plusw1
 12555  015FFA  0EFD               	movlw	-3
 12556  015FFC  0060  F0FF  FFE3   	movff	btemp+21,plusw1
 12557  016002  0EFE               	movlw	-2
 12558  016004  0060  F103  FFE3   	movff	btemp+22,plusw1
 12559  01600A  0EFF               	movlw	-1
 12560  01600C  0060  F107  FFE3   	movff	btemp+23,plusw1
 12561                           
 12562                           ;stkvar	_y @ sp[(-24)+0]
 12563  016012  0EE8               	movlw	-24
 12564  016014  006F FF8F FFE6     	movff	plusw1,postinc1
 12565  01601A  006F FF8F FFE6     	movff	plusw1,postinc1
 12566  016020  0EDB               	movlw	low _r1
 12567  016022  6EE6               	movwf	postinc1,c
 12568  016024  0E01               	movlw	high _r1
 12569  016026  6EE6               	movwf	postinc1,c
 12570  016028  EC40  F0BA         	call	_rule_to_secs	;wreg free
 12571  01602C  52E5               	movf	postdec1,f,c
 12572  01602E  006F FF9C  F041    	movff	indf1,btemp+23
 12573  016034  52E5               	movf	postdec1,f,c
 12574  016036  006F FF9C  F040    	movff	indf1,btemp+22
 12575  01603C  52E5               	movf	postdec1,f,c
 12576  01603E  006F FF9C  F03F    	movff	indf1,btemp+21
 12577  016044  52E5               	movf	postdec1,f,c
 12578  016046  006F FF9C  F03E    	movff	indf1,btemp+20
 12579  01604C  52E5               	movf	postdec1,f,c
 12580  01604E  006F FF9C  F03D    	movff	indf1,btemp+19
 12581  016054  52E5               	movf	postdec1,f,c
 12582  016056  006F FF9C  F03C    	movff	indf1,btemp+18
 12583  01605C  52E5               	movf	postdec1,f,c
 12584  01605E  006F FF9C  F03B    	movff	indf1,btemp+17
 12585  016064  52E5               	movf	postdec1,f,c
 12586  016066  006F FF9C  F03A    	movff	indf1,btemp+16
 12587                           
 12588                           ;stkvar	_t1 @ sp[(-24)+8]
 12589  01606C  0EF0               	movlw	-16
 12590  01606E  0060  F0EB  FFE3   	movff	btemp+16,plusw1
 12591  016074  0EF1               	movlw	-15
 12592  016076  0060  F0EF  FFE3   	movff	btemp+17,plusw1
 12593  01607C  0EF2               	movlw	-14
 12594  01607E  0060  F0F3  FFE3   	movff	btemp+18,plusw1
 12595  016084  0EF3               	movlw	-13
 12596  016086  0060  F0F7  FFE3   	movff	btemp+19,plusw1
 12597  01608C  0EF4               	movlw	-12
 12598  01608E  0060  F0FB  FFE3   	movff	btemp+20,plusw1
 12599  016094  0EF5               	movlw	-11
 12600  016096  0060  F0FF  FFE3   	movff	btemp+21,plusw1
 12601  01609C  0EF6               	movlw	-10
 12602  01609E  0060  F103  FFE3   	movff	btemp+22,plusw1
 12603  0160A4  0EF7               	movlw	-9
 12604  0160A6  0060  F107  FFE3   	movff	btemp+23,plusw1
 12605                           
 12606                           ;stkvar	_local @ sp[(-24)+-10]
 12607  0160AC  0EDE               	movlw	-34
 12608  0160AE  006F FF8C  F02A    	movff	plusw1,btemp
 12609  0160B4  0EDF               	movlw	-33
 12610  0160B6  50E3               	movf	plusw1,w,c
 12611  0160B8  102A               	iorwf	btemp^0,w,c
 12612  0160BA  A4D8               	btfss	status,2,c
 12613  0160BC  D044               	goto	l16604
 12614  0160BE  0060  F1C0  F03A   	movff	___timezone,btemp+16
 12615  0160C4  0060  F1C4  F03B   	movff	___timezone+1,btemp+17
 12616  0160CA  0060  F1C8  F03C   	movff	___timezone+2,btemp+18
 12617  0160D0  0060  F1CC  F03D   	movff	___timezone+3,btemp+19
 12618  0160D6  6A3E               	clrf	(btemp+20)^0,c
 12619  0160D8  BE3D               	btfsc	(btemp+19)^0,7,c
 12620  0160DA  683E               	setf	(btemp+20)^0,c
 12621  0160DC  0060  F0F8  F03F   	movff	btemp+20,btemp+21
 12622  0160E2  0060  F0F8  F040   	movff	btemp+20,btemp+22
 12623  0160E8  0060  F0F8  F041   	movff	btemp+20,btemp+23
 12624                           
 12625                           ;stkvar	_t0 @ sp[(-24)+16]
 12626  0160EE  50E1               	movf	fsr1l,w,c
 12627  0160F0  0FF8               	addlw	-8
 12628  0160F2  6ED9               	movwf	fsr2l,c
 12629  0160F4  50E2               	movf	fsr1h,w,c
 12630  0160F6  6EDA               	movwf	fsr2h,c
 12631  0160F8  0EFF               	movlw	255
 12632  0160FA  22DA               	addwfc	fsr2h,f,c
 12633  0160FC  503A               	movf	(btemp+16)^0,w,c
 12634  0160FE  26DE               	addwf	postinc2,f,c
 12635  016100  503B               	movf	(btemp+17)^0,w,c
 12636  016102  22DE               	addwfc	postinc2,f,c
 12637  016104  503C               	movf	(btemp+18)^0,w,c
 12638  016106  22DE               	addwfc	postinc2,f,c
 12639  016108  503D               	movf	(btemp+19)^0,w,c
 12640  01610A  22DE               	addwfc	postinc2,f,c
 12641  01610C  503E               	movf	(btemp+20)^0,w,c
 12642  01610E  22DE               	addwfc	postinc2,f,c
 12643  016110  503F               	movf	(btemp+21)^0,w,c
 12644  016112  22DE               	addwfc	postinc2,f,c
 12645  016114  5040               	movf	(btemp+22)^0,w,c
 12646  016116  22DE               	addwfc	postinc2,f,c
 12647  016118  5041               	movf	(btemp+23)^0,w,c
 12648  01611A  22DE               	addwfc	postinc2,f,c
 12649                           
 12650                           ;stkvar	_t1 @ sp[(-24)+8]
 12651  01611C  50E1               	movf	fsr1l,w,c
 12652  01611E  0FF0               	addlw	-16
 12653  016120  6ED9               	movwf	fsr2l,c
 12654  016122  50E2               	movf	fsr1h,w,c
 12655  016124  6EDA               	movwf	fsr2h,c
 12656  016126  0EFF               	movlw	255
 12657  016128  22DA               	addwfc	fsr2h,f,c
 12658  01612A  0100               	movlb	0	; () banked
 12659  01612C  51B6               	movf	_dst_off& (0+255),w,b
 12660  01612E  26DE               	addwf	postinc2,f,c
 12661  016130  51B7               	movf	(_dst_off+1)& (0+255),w,b
 12662  016132  22DE               	addwfc	postinc2,f,c
 12663  016134  0E00               	movlw	0
 12664  016136  BFB7               	btfsc	(_dst_off+1)& (0+255),7,b
 12665  016138  0EFF               	movlw	255
 12666  01613A  22DE               	addwfc	postinc2,f,c
 12667  01613C  22DE               	addwfc	postinc2,f,c
 12668  01613E  22DE               	addwfc	postinc2,f,c
 12669  016140  22DE               	addwfc	postinc2,f,c
 12670  016142  22DE               	addwfc	postinc2,f,c
 12671  016144  22DE               	addwfc	postinc2,f,c
 12672  016146                     l16604:
 12673                           
 12674                           ;stkvar	_t1 @ sp[(-24)+8]
 12675                           ;stkvar	_t0 @ sp[(-24)+16]
 12676  016146  50E1               	movf	fsr1l,w,c
 12677  016148  0FF8               	addlw	-8
 12678  01614A  6ED9               	movwf	fsr2l,c
 12679  01614C  50E2               	movf	fsr1h,w,c
 12680  01614E  6EDA               	movwf	fsr2h,c
 12681  016150  0EFF               	movlw	255
 12682  016152  22DA               	addwfc	fsr2h,f,c
 12683  016154  0EF0               	movlw	-16
 12684  016156  50E3               	movf	plusw1,w,c
 12685  016158  5CDE               	subwf	postinc2,w,c
 12686  01615A  0EF1               	movlw	-15
 12687  01615C  50E3               	movf	plusw1,w,c
 12688  01615E  58DE               	subwfb	postinc2,w,c
 12689  016160  0EF2               	movlw	-14
 12690  016162  50E3               	movf	plusw1,w,c
 12691  016164  58DE               	subwfb	postinc2,w,c
 12692  016166  0EF3               	movlw	-13
 12693  016168  50E3               	movf	plusw1,w,c
 12694  01616A  58DE               	subwfb	postinc2,w,c
 12695  01616C  0EF4               	movlw	-12
 12696  01616E  50E3               	movf	plusw1,w,c
 12697  016170  58DE               	subwfb	postinc2,w,c
 12698  016172  0EF5               	movlw	-11
 12699  016174  50E3               	movf	plusw1,w,c
 12700  016176  58DE               	subwfb	postinc2,w,c
 12701  016178  0EF6               	movlw	-10
 12702  01617A  50E3               	movf	plusw1,w,c
 12703  01617C  58DE               	subwfb	postinc2,w,c
 12704  01617E  50DE               	movf	postinc2,w,c
 12705  016180  0A80               	xorlw	128
 12706  016182  6E2A               	movwf	btemp^0,c
 12707  016184  0EF7               	movlw	-9
 12708  016186  50E3               	movf	plusw1,w,c
 12709  016188  0A80               	xorlw	128
 12710  01618A  582A               	subwfb	btemp^0,w,c
 12711  01618C  B0D8               	btfsc	status,0,c
 12712  01618E  D04B               	goto	l16614
 12713                           
 12714                           ;stkvar	_t0 @ sp[(-24)+16]
 12715                           ;stkvar	_t @ sp[(-24)+-8]
 12716  016190  50E1               	movf	fsr1l,w,c
 12717  016192  0FE0               	addlw	-32
 12718  016194  6ED9               	movwf	fsr2l,c
 12719  016196  50E2               	movf	fsr1h,w,c
 12720  016198  6EDA               	movwf	fsr2h,c
 12721  01619A  0EFF               	movlw	255
 12722  01619C  22DA               	addwfc	fsr2h,f,c
 12723  01619E  0EF8               	movlw	-8
 12724  0161A0  50E3               	movf	plusw1,w,c
 12725  0161A2  5CDE               	subwf	postinc2,w,c
 12726  0161A4  0EF9               	movlw	-7
 12727  0161A6  50E3               	movf	plusw1,w,c
 12728  0161A8  58DE               	subwfb	postinc2,w,c
 12729  0161AA  0EFA               	movlw	-6
 12730  0161AC  50E3               	movf	plusw1,w,c
 12731  0161AE  58DE               	subwfb	postinc2,w,c
 12732  0161B0  0EFB               	movlw	-5
 12733  0161B2  50E3               	movf	plusw1,w,c
 12734  0161B4  58DE               	subwfb	postinc2,w,c
 12735  0161B6  0EFC               	movlw	-4
 12736  0161B8  50E3               	movf	plusw1,w,c
 12737  0161BA  58DE               	subwfb	postinc2,w,c
 12738  0161BC  0EFD               	movlw	-3
 12739  0161BE  50E3               	movf	plusw1,w,c
 12740  0161C0  58DE               	subwfb	postinc2,w,c
 12741  0161C2  0EFE               	movlw	-2
 12742  0161C4  50E3               	movf	plusw1,w,c
 12743  0161C6  58DE               	subwfb	postinc2,w,c
 12744  0161C8  50DE               	movf	postinc2,w,c
 12745  0161CA  0A80               	xorlw	128
 12746  0161CC  6E2A               	movwf	btemp^0,c
 12747  0161CE  0EFF               	movlw	-1
 12748  0161D0  50E3               	movf	plusw1,w,c
 12749  0161D2  0A80               	xorlw	128
 12750  0161D4  582A               	subwfb	btemp^0,w,c
 12751  0161D6  A0D8               	btfss	status,0,c
 12752  0161D8  D070               	goto	u16190
 12753                           
 12754                           ;stkvar	_t1 @ sp[(-24)+8]
 12755                           ;stkvar	_t @ sp[(-24)+-8]
 12756  0161DA  50E1               	movf	fsr1l,w,c
 12757  0161DC  0FE0               	addlw	-32
 12758  0161DE  6ED9               	movwf	fsr2l,c
 12759  0161E0  50E2               	movf	fsr1h,w,c
 12760  0161E2  6EDA               	movwf	fsr2h,c
 12761  0161E4  0EFF               	movlw	255
 12762  0161E6  22DA               	addwfc	fsr2h,f,c
 12763  0161E8  0EF0               	movlw	-16
 12764  0161EA  50E3               	movf	plusw1,w,c
 12765  0161EC  5CDE               	subwf	postinc2,w,c
 12766  0161EE  0EF1               	movlw	-15
 12767  0161F0  50E3               	movf	plusw1,w,c
 12768  0161F2  58DE               	subwfb	postinc2,w,c
 12769  0161F4  0EF2               	movlw	-14
 12770  0161F6  50E3               	movf	plusw1,w,c
 12771  0161F8  58DE               	subwfb	postinc2,w,c
 12772  0161FA  0EF3               	movlw	-13
 12773  0161FC  50E3               	movf	plusw1,w,c
 12774  0161FE  58DE               	subwfb	postinc2,w,c
 12775  016200  0EF4               	movlw	-12
 12776  016202  50E3               	movf	plusw1,w,c
 12777  016204  58DE               	subwfb	postinc2,w,c
 12778  016206  0EF5               	movlw	-11
 12779  016208  50E3               	movf	plusw1,w,c
 12780  01620A  58DE               	subwfb	postinc2,w,c
 12781  01620C  0EF6               	movlw	-10
 12782  01620E  50E3               	movf	plusw1,w,c
 12783  016210  58DE               	subwfb	postinc2,w,c
 12784  016212  50DE               	movf	postinc2,w,c
 12785  016214  0A80               	xorlw	128
 12786  016216  6E2A               	movwf	btemp^0,c
 12787  016218  0EF7               	movlw	-9
 12788  01621A  50E3               	movf	plusw1,w,c
 12789  01621C  0A80               	xorlw	128
 12790  01621E  582A               	subwfb	btemp^0,w,c
 12791  016220  A0D8               	btfss	status,0,c
 12792  016222  D0C1               	goto	l16632
 12793  016224  D04A               	goto	u16190
 12794  016226                     l16614:
 12795                           
 12796                           ;stkvar	_t1 @ sp[(-24)+8]
 12797                           ;stkvar	_t @ sp[(-24)+-8]
 12798  016226  50E1               	movf	fsr1l,w,c
 12799  016228  0FE0               	addlw	-32
 12800  01622A  6ED9               	movwf	fsr2l,c
 12801  01622C  50E2               	movf	fsr1h,w,c
 12802  01622E  6EDA               	movwf	fsr2h,c
 12803  016230  0EFF               	movlw	255
 12804  016232  22DA               	addwfc	fsr2h,f,c
 12805  016234  0EF0               	movlw	-16
 12806  016236  50E3               	movf	plusw1,w,c
 12807  016238  5CDE               	subwf	postinc2,w,c
 12808  01623A  0EF1               	movlw	-15
 12809  01623C  50E3               	movf	plusw1,w,c
 12810  01623E  58DE               	subwfb	postinc2,w,c
 12811  016240  0EF2               	movlw	-14
 12812  016242  50E3               	movf	plusw1,w,c
 12813  016244  58DE               	subwfb	postinc2,w,c
 12814  016246  0EF3               	movlw	-13
 12815  016248  50E3               	movf	plusw1,w,c
 12816  01624A  58DE               	subwfb	postinc2,w,c
 12817  01624C  0EF4               	movlw	-12
 12818  01624E  50E3               	movf	plusw1,w,c
 12819  016250  58DE               	subwfb	postinc2,w,c
 12820  016252  0EF5               	movlw	-11
 12821  016254  50E3               	movf	plusw1,w,c
 12822  016256  58DE               	subwfb	postinc2,w,c
 12823  016258  0EF6               	movlw	-10
 12824  01625A  50E3               	movf	plusw1,w,c
 12825  01625C  58DE               	subwfb	postinc2,w,c
 12826  01625E  50DE               	movf	postinc2,w,c
 12827  016260  0A80               	xorlw	128
 12828  016262  6E2A               	movwf	btemp^0,c
 12829  016264  0EF7               	movlw	-9
 12830  016266  50E3               	movf	plusw1,w,c
 12831  016268  0A80               	xorlw	128
 12832  01626A  582A               	subwfb	btemp^0,w,c
 12833  01626C  A0D8               	btfss	status,0,c
 12834  01626E  D09B               	goto	l16632
 12835                           
 12836                           ;stkvar	_t0 @ sp[(-24)+16]
 12837                           ;stkvar	_t @ sp[(-24)+-8]
 12838  016270  50E1               	movf	fsr1l,w,c
 12839  016272  0FE0               	addlw	-32
 12840  016274  6ED9               	movwf	fsr2l,c
 12841  016276  50E2               	movf	fsr1h,w,c
 12842  016278  6EDA               	movwf	fsr2h,c
 12843  01627A  0EFF               	movlw	255
 12844  01627C  22DA               	addwfc	fsr2h,f,c
 12845  01627E  0EF8               	movlw	-8
 12846  016280  50E3               	movf	plusw1,w,c
 12847  016282  5CDE               	subwf	postinc2,w,c
 12848  016284  0EF9               	movlw	-7
 12849  016286  50E3               	movf	plusw1,w,c
 12850  016288  58DE               	subwfb	postinc2,w,c
 12851  01628A  0EFA               	movlw	-6
 12852  01628C  50E3               	movf	plusw1,w,c
 12853  01628E  58DE               	subwfb	postinc2,w,c
 12854  016290  0EFB               	movlw	-5
 12855  016292  50E3               	movf	plusw1,w,c
 12856  016294  58DE               	subwfb	postinc2,w,c
 12857  016296  0EFC               	movlw	-4
 12858  016298  50E3               	movf	plusw1,w,c
 12859  01629A  58DE               	subwfb	postinc2,w,c
 12860  01629C  0EFD               	movlw	-3
 12861  01629E  50E3               	movf	plusw1,w,c
 12862  0162A0  58DE               	subwfb	postinc2,w,c
 12863  0162A2  0EFE               	movlw	-2
 12864  0162A4  50E3               	movf	plusw1,w,c
 12865  0162A6  58DE               	subwfb	postinc2,w,c
 12866  0162A8  50DE               	movf	postinc2,w,c
 12867  0162AA  0A80               	xorlw	128
 12868  0162AC  6E2A               	movwf	btemp^0,c
 12869  0162AE  0EFF               	movlw	-1
 12870  0162B0  50E3               	movf	plusw1,w,c
 12871  0162B2  0A80               	xorlw	128
 12872  0162B4  582A               	subwfb	btemp^0,w,c
 12873  0162B6  B0D8               	btfsc	status,0,c
 12874  0162B8  D076               	goto	l16632
 12875  0162BA                     u16190:
 12876                           
 12877                           ;stkvar	_isdst @ sp[(-24)+-12]
 12878  0162BA  0EDC               	movlw	-36
 12879  0162BC  006F FF8F FFD9     	movff	plusw1,fsr2l
 12880  0162C2  0EDD               	movlw	-35
 12881  0162C4  006F FF8F FFDA     	movff	plusw1,fsr2h
 12882  0162CA  0E00               	movlw	0
 12883  0162CC  6EDE               	movwf	postinc2,c
 12884  0162CE  0E00               	movlw	0
 12885  0162D0  6EDD               	movwf	postdec2,c
 12886  0162D2  0060  F1C0  F032   	movff	___timezone,btemp+8
 12887  0162D8  0060  F1C4  F033   	movff	___timezone+1,btemp+9
 12888  0162DE  0060  F1C8  F034   	movff	___timezone+2,btemp+10
 12889  0162E4  0060  F1CC  F035   	movff	___timezone+3,btemp+11
 12890  0162EA  1E32               	comf	(btemp+8)^0,f,c
 12891  0162EC  1E33               	comf	(btemp+9)^0,f,c
 12892  0162EE  1E34               	comf	(btemp+10)^0,f,c
 12893  0162F0  1E35               	comf	(btemp+11)^0,f,c
 12894  0162F2  2A32               	incf	(btemp+8)^0,f,c
 12895  0162F4  0E00               	movlw	0
 12896  0162F6  2233               	addwfc	(btemp+9)^0,f,c
 12897  0162F8  2234               	addwfc	(btemp+10)^0,f,c
 12898  0162FA  2235               	addwfc	(btemp+11)^0,f,c
 12899                           
 12900                           ;stkvar	_offset @ sp[(-24)+-14]
 12901  0162FC  0EDA               	movlw	-38
 12902  0162FE  006F FF8F FFD9     	movff	plusw1,fsr2l
 12903  016304  0EDB               	movlw	-37
 12904  016306  006F FF8F FFDA     	movff	plusw1,fsr2h
 12905  01630C  0060  F0CB  FFDE   	movff	btemp+8,postinc2
 12906  016312  0060  F0CF  FFDE   	movff	btemp+9,postinc2
 12907  016318  0060  F0D3  FFDE   	movff	btemp+10,postinc2
 12908  01631E  0060  F0D7  FFDE   	movff	btemp+11,postinc2
 12909                           
 12910                           ;stkvar	_oppoff @ sp[(-24)+-16]
 12911  016324  0ED8               	movlw	-40
 12912  016326  006F FF8C  F02A    	movff	plusw1,btemp
 12913  01632C  0ED9               	movlw	-39
 12914  01632E  50E3               	movf	plusw1,w,c
 12915  016330  102A               	iorwf	btemp^0,w,c
 12916  016332  B4D8               	btfsc	status,2,c
 12917  016334  D029               	goto	l16628
 12918  016336  0060  F2D8  F034   	movff	_dst_off,btemp+10
 12919  01633C  0060  F2DC  F035   	movff	_dst_off+1,btemp+11
 12920  016342  1E34               	comf	(btemp+10)^0,f,c
 12921  016344  1E35               	comf	(btemp+11)^0,f,c
 12922  016346  4A34               	infsnz	(btemp+10)^0,f,c
 12923  016348  2A35               	incf	(btemp+11)^0,f,c
 12924  01634A  0060  F0D0  F02E   	movff	btemp+10,btemp+4
 12925  016350  0060  F0D4  F02F   	movff	btemp+11,btemp+5
 12926  016356  0E00               	movlw	0
 12927  016358  BE2F               	btfsc	(btemp+5)^0,7,c
 12928  01635A  0EFF               	movlw	255
 12929  01635C  6E30               	movwf	(btemp+6)^0,c
 12930  01635E  6E31               	movwf	(btemp+7)^0,c
 12931                           
 12932                           ;stkvar	_oppoff @ sp[(-24)+-16]
 12933  016360  0ED8               	movlw	-40
 12934  016362  006F FF8F FFD9     	movff	plusw1,fsr2l
 12935  016368  0ED9               	movlw	-39
 12936  01636A  006F FF8F FFDA     	movff	plusw1,fsr2h
 12937  016370  0060  F0BB  FFDE   	movff	btemp+4,postinc2
 12938  016376  0060  F0BF  FFDE   	movff	btemp+5,postinc2
 12939  01637C  0060  F0C3  FFDE   	movff	btemp+6,postinc2
 12940  016382  0060  F0C7  FFDE   	movff	btemp+7,postinc2
 12941  016388                     l16628:
 12942                           
 12943                           ;stkvar	_zonename @ sp[(-24)+-18]
 12944  016388  0ED6               	movlw	-42
 12945  01638A  006F FF8F FFD9     	movff	plusw1,fsr2l
 12946  016390  0ED7               	movlw	-41
 12947  016392  006F FF8F FFDA     	movff	plusw1,fsr2h
 12948  016398  0060  F1B3  FFDE   	movff	___tzname,postinc2
 12949  01639E  0060  F1B7  FFDD   	movff	___tzname+1,postdec2
 12950  0163A4  D075               	goto	l4027
 12951  0163A6                     l16632:
 12952                           
 12953                           ;stkvar	_isdst @ sp[(-24)+-12]
 12954  0163A6  0EDC               	movlw	-36
 12955  0163A8  006F FF8F FFD9     	movff	plusw1,fsr2l
 12956  0163AE  0EDD               	movlw	-35
 12957  0163B0  006F FF8F FFDA     	movff	plusw1,fsr2h
 12958  0163B6  0E01               	movlw	1
 12959  0163B8  6EDE               	movwf	postinc2,c
 12960  0163BA  0E00               	movlw	0
 12961  0163BC  6EDD               	movwf	postdec2,c
 12962  0163BE  0060  F2D8  F034   	movff	_dst_off,btemp+10
 12963  0163C4  0060  F2DC  F035   	movff	_dst_off+1,btemp+11
 12964  0163CA  1E34               	comf	(btemp+10)^0,f,c
 12965  0163CC  1E35               	comf	(btemp+11)^0,f,c
 12966  0163CE  4A34               	infsnz	(btemp+10)^0,f,c
 12967  0163D0  2A35               	incf	(btemp+11)^0,f,c
 12968  0163D2  0060  F0D0  F02E   	movff	btemp+10,btemp+4
 12969  0163D8  0060  F0D4  F02F   	movff	btemp+11,btemp+5
 12970  0163DE  0E00               	movlw	0
 12971  0163E0  BE2F               	btfsc	(btemp+5)^0,7,c
 12972  0163E2  0EFF               	movlw	255
 12973  0163E4  6E30               	movwf	(btemp+6)^0,c
 12974  0163E6  6E31               	movwf	(btemp+7)^0,c
 12975                           
 12976                           ;stkvar	_offset @ sp[(-24)+-14]
 12977  0163E8  0EDA               	movlw	-38
 12978  0163EA  006F FF8F FFD9     	movff	plusw1,fsr2l
 12979  0163F0  0EDB               	movlw	-37
 12980  0163F2  006F FF8F FFDA     	movff	plusw1,fsr2h
 12981  0163F8  0060  F0BB  FFDE   	movff	btemp+4,postinc2
 12982  0163FE  0060  F0BF  FFDE   	movff	btemp+5,postinc2
 12983  016404  0060  F0C3  FFDE   	movff	btemp+6,postinc2
 12984  01640A  0060  F0C7  FFDE   	movff	btemp+7,postinc2
 12985                           
 12986                           ;stkvar	_oppoff @ sp[(-24)+-16]
 12987  016410  0ED8               	movlw	-40
 12988  016412  006F FF8C  F02A    	movff	plusw1,btemp
 12989  016418  0ED9               	movlw	-39
 12990  01641A  50E3               	movf	plusw1,w,c
 12991  01641C  102A               	iorwf	btemp^0,w,c
 12992  01641E  B4D8               	btfsc	status,2,c
 12993  016420  D029               	goto	l16640
 12994  016422  0060  F1C0  F032   	movff	___timezone,btemp+8
 12995  016428  0060  F1C4  F033   	movff	___timezone+1,btemp+9
 12996  01642E  0060  F1C8  F034   	movff	___timezone+2,btemp+10
 12997  016434  0060  F1CC  F035   	movff	___timezone+3,btemp+11
 12998  01643A  1E32               	comf	(btemp+8)^0,f,c
 12999  01643C  1E33               	comf	(btemp+9)^0,f,c
 13000  01643E  1E34               	comf	(btemp+10)^0,f,c
 13001  016440  1E35               	comf	(btemp+11)^0,f,c
 13002  016442  2A32               	incf	(btemp+8)^0,f,c
 13003  016444  0E00               	movlw	0
 13004  016446  2233               	addwfc	(btemp+9)^0,f,c
 13005  016448  2234               	addwfc	(btemp+10)^0,f,c
 13006  01644A  2235               	addwfc	(btemp+11)^0,f,c
 13007                           
 13008                           ;stkvar	_oppoff @ sp[(-24)+-16]
 13009  01644C  0ED8               	movlw	-40
 13010  01644E  006F FF8F FFD9     	movff	plusw1,fsr2l
 13011  016454  0ED9               	movlw	-39
 13012  016456  006F FF8F FFDA     	movff	plusw1,fsr2h
 13013  01645C  0060  F0CB  FFDE   	movff	btemp+8,postinc2
 13014  016462  0060  F0CF  FFDE   	movff	btemp+9,postinc2
 13015  016468  0060  F0D3  FFDE   	movff	btemp+10,postinc2
 13016  01646E  0060  F0D7  FFDE   	movff	btemp+11,postinc2
 13017  016474                     l16640:
 13018                           
 13019                           ;stkvar	_zonename @ sp[(-24)+-18]
 13020  016474  0ED6               	movlw	-42
 13021  016476  006F FF8F FFD9     	movff	plusw1,fsr2l
 13022  01647C  0ED7               	movlw	-41
 13023  01647E  006F FF8F FFDA     	movff	plusw1,fsr2h
 13024  016484  0060  F1BB  FFDE   	movff	___tzname+2,postinc2
 13025  01648A  0060  F1BF  FFDD   	movff	___tzname+3,postdec2
 13026  016490                     l4027:
 13027                           
 13028                           ; ___secs_to_zone: autosize = 24, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          18, argsize = 18, vargsize = 0
 13029  016490  0ED6               	movlw	214
 13030  016492  26E1               	addwf	fsr1l,f,c
 13031  016494  0EFF               	movlw	255
 13032  016496  22E2               	addwfc	fsr1h,f,c
 13033  016498  0012               	return		;funcret
 13034  01649A                     __end_of___secs_to_zone:
 13035                           	opt callstack 0
 13036                           
 13037 ;; *************** function _scan_trans *****************
 13038 ;; Defined at:
 13039 ;;		line 145 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__tz.c"
 13040 ;; Parameters:    Size  Location     Type
 13041 ;;  t               8  [STACK] long long 
 13042 ;;  local           2  [STACK] int 
 13043 ;;  alt             2  [STACK] PTR unsigned int 
 13044 ;;		 -> alt(2), 
 13045 ;; Auto vars:     Size  Location     Type
 13046 ;;  x               8    0        unsigned long long 
 13047 ;;  a               2    0        unsigned int 
 13048 ;;  scale           2    0        int 
 13049 ;;  n               2    0        unsigned int 
 13050 ;;  m               2    0        unsigned int 
 13051 ;;  off             2    0        int 
 13052 ;; Return value:  Size  Location     Type
 13053 ;;                  2  [STACK] unsigned int 
 13054 ;; Registers used:
 13055 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 13056 ;; Tracked objects:
 13057 ;;		On entry : 0/0
 13058 ;;		On exit  : 0/0
 13059 ;;		Unchanged: 0/0
 13060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13061 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13062 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13063 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13064 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13065 ;;Total ram usage:        0 bytes
 13066 ;; Hardware stack levels used:    1
 13067 ;; Hardware stack levels required when called:   16
 13068 ;; This function calls:
 13069 ;;		_zi_read32
 13070 ;; This function is called by:
 13071 ;;		___secs_to_zone
 13072 ;; This function uses a reentrant model
 13073 ;;
 13074                           
 13075                           	psect	text38
 13076  001CF2                     __ptext38:
 13077                           	opt callstack 0
 13078  001CF2                     _scan_trans:
 13079                           	opt callstack 11
 13080                           
 13081                           ;stkvar	_alt @ sp[(0)+-12]
 13082                           
 13083                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 12, argsize = 12 v
      +                          argsize = 0, retsize = 0 argfudge = 0
 13084                           ;incstack = 0
 13085  001CF2  0EF4               	movlw	-12
 13086  001CF4  006F FF8C  F02A    	movff	plusw1,btemp
 13087  001CFA  0EF5               	movlw	-11
 13088  001CFC  50E3               	movf	plusw1,w,c
 13089  001CFE  102A               	iorwf	btemp^0,w,c
 13090  001D00  B4D8               	btfsc	status,2,c
 13091  001D02  D00C               	goto	l16368
 13092                           
 13093                           ;stkvar	_alt @ sp[(0)+-12]
 13094  001D04  0EF4               	movlw	-12
 13095  001D06  006F FF8F FFD9     	movff	plusw1,fsr2l
 13096  001D0C  0EF5               	movlw	-11
 13097  001D0E  006F FF8F FFDA     	movff	plusw1,fsr2h
 13098  001D14  0E00               	movlw	0
 13099  001D16  6EDE               	movwf	postinc2,c
 13100  001D18  0E00               	movlw	0
 13101  001D1A  6EDD               	movwf	postdec2,c
 13102  001D1C                     l16368:
 13103  001D1C  0E00               	movlw	0
 13104  001D1E  6E2A               	movwf	btemp^0,c
 13105  001D20  0E00               	movlw	0
 13106  001D22  6E2B               	movwf	(btemp+1)^0,c
 13107                           
 13108                           ; _scan_trans: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 12, a
      +                          rgsize = 12, vargsize = 0
 13109  001D24  0EF4               	movlw	244
 13110  001D26  26E1               	addwf	fsr1l,f,c
 13111  001D28  0EFF               	movlw	255
 13112  001D2A  22E2               	addwfc	fsr1h,f,c
 13113  001D2C  0012               	return		;funcret
 13114  001D2E                     __end_of_scan_trans:
 13115                           	opt callstack 0
 13116                           
 13117 ;; *************** function _zi_read32 *****************
 13118 ;; Defined at:
 13119 ;;		line 100 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__tz.c"
 13120 ;; Parameters:    Size  Location     Type
 13121 ;;  z               2  [STACK] PTR const unsigned char 
 13122 ;;		 -> NULL(0), 
 13123 ;; Auto vars:     Size  Location     Type
 13124 ;;		None
 13125 ;; Return value:  Size  Location     Type
 13126 ;;                  4  [STACK] unsigned long 
 13127 ;; Registers used:
 13128 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 13129 ;; Tracked objects:
 13130 ;;		On entry : 0/0
 13131 ;;		On exit  : 0/0
 13132 ;;		Unchanged: 0/0
 13133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13134 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13135 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13137 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13138 ;;Total ram usage:        0 bytes
 13139 ;; Hardware stack levels used:    1
 13140 ;; Hardware stack levels required when called:   15
 13141 ;; This function calls:
 13142 ;;		Nothing
 13143 ;; This function is called by:
 13144 ;;		_scan_trans
 13145 ;;		___secs_to_zone
 13146 ;; This function uses a reentrant model
 13147 ;;
 13148                           
 13149                           	psect	text39
 13150  01F974                     __ptext39:
 13151                           	opt callstack 0
 13152  01F974                     _zi_read32:
 13153                           	opt callstack 12
 13154                           
 13155                           ;stkvar	_z @ sp[(0)+-2]
 13156                           
 13157                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13158                           ;incstack = 0
 13159  01F974  0EFE               	movlw	-2
 13160  01F976  006F FF8C  F034    	movff	plusw1,btemp+10
 13161  01F97C  0EFF               	movlw	-1
 13162  01F97E  006F FF8C  F035    	movff	plusw1,btemp+11
 13163  01F984  0E02               	movlw	2
 13164  01F986  2434               	addwf	(btemp+10)^0,w,c
 13165  01F988  6ED9               	movwf	fsr2l,c
 13166  01F98A  0E00               	movlw	0
 13167  01F98C  2035               	addwfc	(btemp+11)^0,w,c
 13168  01F98E  6EDA               	movwf	fsr2h,c
 13169  01F990  50DF               	movf	indf2,w,c
 13170  01F992  6E35               	movwf	(btemp+11)^0,c
 13171  01F994  0060  F0D4  F02E   	movff	btemp+11,btemp+4
 13172  01F99A  6A2F               	clrf	(btemp+5)^0,c
 13173  01F99C  6A30               	clrf	(btemp+6)^0,c
 13174  01F99E  6A31               	clrf	(btemp+7)^0,c
 13175  01F9A0  0060  F0C0  F031   	movff	btemp+6,btemp+7
 13176  01F9A6  0060  F0BC  F030   	movff	btemp+5,btemp+6
 13177  01F9AC  0060  F0B8  F02F   	movff	btemp+4,btemp+5
 13178  01F9B2  6A2E               	clrf	(btemp+4)^0,c
 13179                           
 13180                           ;stkvar	_z @ sp[(0)+-2]
 13181  01F9B4  0EFE               	movlw	-2
 13182  01F9B6  006F FF8C  F034    	movff	plusw1,btemp+10
 13183  01F9BC  0EFF               	movlw	-1
 13184  01F9BE  006F FF8C  F035    	movff	plusw1,btemp+11
 13185  01F9C4  0E01               	movlw	1
 13186  01F9C6  2434               	addwf	(btemp+10)^0,w,c
 13187  01F9C8  6ED9               	movwf	fsr2l,c
 13188  01F9CA  0E00               	movlw	0
 13189  01F9CC  2035               	addwfc	(btemp+11)^0,w,c
 13190  01F9CE  6EDA               	movwf	fsr2h,c
 13191  01F9D0  50DF               	movf	indf2,w,c
 13192  01F9D2  6E35               	movwf	(btemp+11)^0,c
 13193  01F9D4  0060  F0D4  F02A   	movff	btemp+11,btemp
 13194  01F9DA  6A2B               	clrf	(btemp+1)^0,c
 13195  01F9DC  6A2C               	clrf	(btemp+2)^0,c
 13196  01F9DE  6A2D               	clrf	(btemp+3)^0,c
 13197  01F9E0  0060  F0AC  F02D   	movff	btemp+1,btemp+3
 13198  01F9E6  0060  F0A8  F02C   	movff	btemp,btemp+2
 13199  01F9EC  6A2B               	clrf	(btemp+1)^0,c
 13200  01F9EE  6A2A               	clrf	btemp^0,c
 13201                           
 13202                           ;stkvar	_z @ sp[(0)+-2]
 13203  01F9F0  0EFE               	movlw	-2
 13204  01F9F2  006F FF8F FFD9     	movff	plusw1,fsr2l
 13205  01F9F8  0EFF               	movlw	-1
 13206  01F9FA  006F FF8F FFDA     	movff	plusw1,fsr2h
 13207  01FA00  50DF               	movf	indf2,w,c
 13208  01FA02  6E32               	movwf	(btemp+8)^0,c
 13209  01FA04  6A33               	clrf	(btemp+9)^0,c
 13210  01FA06  6A34               	clrf	(btemp+10)^0,c
 13211  01FA08  6A35               	clrf	(btemp+11)^0,c
 13212  01FA0A  0060  F0C8  F035   	movff	btemp+8,btemp+11
 13213  01FA10  6A34               	clrf	(btemp+10)^0,c
 13214  01FA12  6A33               	clrf	(btemp+9)^0,c
 13215  01FA14  6A32               	clrf	(btemp+8)^0,c
 13216  01FA16  502A               	movf	btemp^0,w,c
 13217  01FA18  1232               	iorwf	(btemp+8)^0,f,c
 13218  01FA1A  502B               	movf	(btemp+1)^0,w,c
 13219  01FA1C  1233               	iorwf	(btemp+9)^0,f,c
 13220  01FA1E  502C               	movf	(btemp+2)^0,w,c
 13221  01FA20  1234               	iorwf	(btemp+10)^0,f,c
 13222  01FA22  502D               	movf	(btemp+3)^0,w,c
 13223  01FA24  1235               	iorwf	(btemp+11)^0,f,c
 13224  01FA26  502E               	movf	(btemp+4)^0,w,c
 13225  01FA28  1232               	iorwf	(btemp+8)^0,f,c
 13226  01FA2A  502F               	movf	(btemp+5)^0,w,c
 13227  01FA2C  1233               	iorwf	(btemp+9)^0,f,c
 13228  01FA2E  5030               	movf	(btemp+6)^0,w,c
 13229  01FA30  1234               	iorwf	(btemp+10)^0,f,c
 13230  01FA32  5031               	movf	(btemp+7)^0,w,c
 13231  01FA34  1235               	iorwf	(btemp+11)^0,f,c
 13232                           
 13233                           ;stkvar	_z @ sp[(0)+-2]
 13234  01FA36  0EFE               	movlw	-2
 13235  01FA38  006F FF8C  F030    	movff	plusw1,btemp+6
 13236  01FA3E  0EFF               	movlw	-1
 13237  01FA40  006F FF8C  F031    	movff	plusw1,btemp+7
 13238  01FA46  0E03               	movlw	3
 13239  01FA48  2430               	addwf	(btemp+6)^0,w,c
 13240  01FA4A  6ED9               	movwf	fsr2l,c
 13241  01FA4C  0E00               	movlw	0
 13242  01FA4E  2031               	addwfc	(btemp+7)^0,w,c
 13243  01FA50  6EDA               	movwf	fsr2h,c
 13244  01FA52  50DF               	movf	indf2,w,c
 13245  01FA54  1032               	iorwf	(btemp+8)^0,w,c
 13246  01FA56  6E2A               	movwf	btemp^0,c
 13247  01FA58  5033               	movf	(btemp+9)^0,w,c
 13248  01FA5A  6E2B               	movwf	(btemp+1)^0,c
 13249  01FA5C  5034               	movf	(btemp+10)^0,w,c
 13250  01FA5E  6E2C               	movwf	(btemp+2)^0,c
 13251  01FA60  5035               	movf	(btemp+11)^0,w,c
 13252  01FA62  6E2D               	movwf	(btemp+3)^0,c
 13253                           
 13254                           ; _zi_read32: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, arg
      +                          size = 2, vargsize = 0
 13255  01FA64  52E5               	movf	postdec1,f,c
 13256  01FA66  52E5               	movf	postdec1,f,c
 13257  01FA68  0012               	return		;funcret
 13258  01FA6A                     __end_of_zi_read32:
 13259                           	opt callstack 0
 13260                           
 13261 ;; *************** function _rule_to_secs *****************
 13262 ;; Defined at:
 13263 ;;		line 218 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__tz.c"
 13264 ;; Parameters:    Size  Location     Type
 13265 ;;  rule            2  [STACK] PTR const int 
 13266 ;;		 -> r1(10), r0(10), 
 13267 ;;  year            2  [STACK] int 
 13268 ;; Auto vars:     Size  Location     Type
 13269 ;;  days            2  [STACK] int 
 13270 ;;  wday            2  [STACK] int 
 13271 ;;  t               8  [STACK] long long 
 13272 ;;  is_leap         2  [STACK] int 
 13273 ;;  n               2  [STACK] int 
 13274 ;;  x               2  [STACK] int 
 13275 ;;  m               2  [STACK] int 
 13276 ;;  d               2  [STACK] int 
 13277 ;; Return value:  Size  Location     Type
 13278 ;;                  8  [STACK] long long 
 13279 ;; Registers used:
 13280 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15, btemp+16, btemp+17, btemp+18, btem
      +p+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, btemp+30, btem
      +p+31, tblptrl, tblptrh, tblptru, prodl, prodh
 13281 ;; Tracked objects:
 13282 ;;		On entry : 0/0
 13283 ;;		On exit  : 0/0
 13284 ;;		Unchanged: 0/0
 13285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13286 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13287 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13288 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13289 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13290 ;;Total ram usage:        0 bytes
 13291 ;; Hardware stack levels used:    1
 13292 ;; Hardware stack levels required when called:   17
 13293 ;; This function calls:
 13294 ;;		___aldiv
 13295 ;;		___aomod
 13296 ;;		___lmul
 13297 ;;		___month_to_secs
 13298 ;;		___year_to_secs
 13299 ;;		_days_in_month
 13300 ;; This function is called by:
 13301 ;;		___secs_to_zone
 13302 ;; This function uses a reentrant model
 13303 ;;
 13304                           
 13305                           	psect	text40
 13306  017480                     __ptext40:
 13307                           	opt callstack 0
 13308  017480                     _rule_to_secs:
 13309                           	opt callstack 0
 13310                           
 13311                           ; autosize = 22, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 8 argfudge = 4
 13312  017480  0E1A               	movlw	26
 13313  017482  26E1               	addwf	fsr1l,f,c
 13314  017484  0E00               	movlw	0
 13315  017486  22E2               	addwfc	fsr1h,f,c
 13316                           
 13317                           ;stkvar	_is_leap @ sp[(-22)+12]
 13318                           
 13319                           ;incstack = 0
 13320  017488  0EF6               	movlw	246
 13321  01748A  24E1               	addwf	fsr1l,w,c
 13322  01748C  6E2A               	movwf	btemp^0,c
 13323  01748E  0EFF               	movlw	255
 13324  017490  20E2               	addwfc	fsr1h,w,c
 13325  017492  6E2B               	movwf	(btemp+1)^0,c
 13326  017494  0060  F0AB  FFE6   	movff	btemp,postinc1
 13327  01749A  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 13328                           
 13329                           ;stkvar	_year @ sp[(-24)+-8]
 13330  0174A0  0EE0               	movlw	-32
 13331  0174A2  006F FF8C  F03A    	movff	plusw1,btemp+16
 13332  0174A8  0EE1               	movlw	-31
 13333  0174AA  006F FF8C  F03B    	movff	plusw1,btemp+17
 13334  0174B0  6A3C               	clrf	(btemp+18)^0,c
 13335  0174B2  BE3B               	btfsc	(btemp+17)^0,7,c
 13336  0174B4  683C               	setf	(btemp+18)^0,c
 13337  0174B6  0060  F0F0  F03D   	movff	btemp+18,btemp+19
 13338  0174BC  0060  F0F0  F03E   	movff	btemp+18,btemp+20
 13339  0174C2  0060  F0F0  F03F   	movff	btemp+18,btemp+21
 13340  0174C8  0060  F0F0  F040   	movff	btemp+18,btemp+22
 13341  0174CE  0060  F0F0  F041   	movff	btemp+18,btemp+23
 13342  0174D4  0060  F0EB  FFE6   	movff	btemp+16,postinc1
 13343  0174DA  0060  F0EF  FFE6   	movff	btemp+17,postinc1
 13344  0174E0  0060  F0F3  FFE6   	movff	btemp+18,postinc1
 13345  0174E6  0060  F0F7  FFE6   	movff	btemp+19,postinc1
 13346  0174EC  0060  F0FB  FFE6   	movff	btemp+20,postinc1
 13347  0174F2  0060  F0FF  FFE6   	movff	btemp+21,postinc1
 13348  0174F8  0060  F103  FFE6   	movff	btemp+22,postinc1
 13349  0174FE  0060  F107  FFE6   	movff	btemp+23,postinc1
 13350  017504  EC43  F0A9         	call	___year_to_secs	;wreg free
 13351  017508  52E5               	movf	postdec1,f,c
 13352  01750A  006F FF9C  F041    	movff	indf1,btemp+23
 13353  017510  52E5               	movf	postdec1,f,c
 13354  017512  006F FF9C  F040    	movff	indf1,btemp+22
 13355  017518  52E5               	movf	postdec1,f,c
 13356  01751A  006F FF9C  F03F    	movff	indf1,btemp+21
 13357  017520  52E5               	movf	postdec1,f,c
 13358  017522  006F FF9C  F03E    	movff	indf1,btemp+20
 13359  017528  52E5               	movf	postdec1,f,c
 13360  01752A  006F FF9C  F03D    	movff	indf1,btemp+19
 13361  017530  52E5               	movf	postdec1,f,c
 13362  017532  006F FF9C  F03C    	movff	indf1,btemp+18
 13363  017538  52E5               	movf	postdec1,f,c
 13364  01753A  006F FF9C  F03B    	movff	indf1,btemp+17
 13365  017540  52E5               	movf	postdec1,f,c
 13366  017542  006F FF9C  F03A    	movff	indf1,btemp+16
 13367  017548  52E5               	movf	postdec1,f,c
 13368  01754A  52E5               	movf	postdec1,f,c
 13369                           
 13370                           ;stkvar	_t @ sp[(-22)+4]
 13371  01754C  0EEE               	movlw	-18
 13372  01754E  0060  F0EB  FFE3   	movff	btemp+16,plusw1
 13373  017554  0EEF               	movlw	-17
 13374  017556  0060  F0EF  FFE3   	movff	btemp+17,plusw1
 13375  01755C  0EF0               	movlw	-16
 13376  01755E  0060  F0F3  FFE3   	movff	btemp+18,plusw1
 13377  017564  0EF1               	movlw	-15
 13378  017566  0060  F0F7  FFE3   	movff	btemp+19,plusw1
 13379  01756C  0EF2               	movlw	-14
 13380  01756E  0060  F0FB  FFE3   	movff	btemp+20,plusw1
 13381  017574  0EF3               	movlw	-13
 13382  017576  0060  F0FF  FFE3   	movff	btemp+21,plusw1
 13383  01757C  0EF4               	movlw	-12
 13384  01757E  0060  F103  FFE3   	movff	btemp+22,plusw1
 13385  017584  0EF5               	movlw	-11
 13386  017586  0060  F107  FFE3   	movff	btemp+23,plusw1
 13387                           
 13388                           ;stkvar	_rule @ sp[(-22)+-6]
 13389  01758C  0EE4               	movlw	-28
 13390  01758E  006F FF8F FFD9     	movff	plusw1,fsr2l
 13391  017594  0EE5               	movlw	-27
 13392  017596  006F FF8F FFDA     	movff	plusw1,fsr2h
 13393  01759C  0E4D               	movlw	77
 13394  01759E  18DE               	xorwf	postinc2,w,c
 13395  0175A0  10DE               	iorwf	postinc2,w,c
 13396  0175A2  B4D8               	btfsc	status,2,c
 13397  0175A4  D074               	goto	l16484
 13398                           
 13399                           ;stkvar	_rule @ sp[(-22)+-6]
 13400  0175A6  0EE4               	movlw	-28
 13401  0175A8  006F FF8C  F034    	movff	plusw1,btemp+10
 13402  0175AE  0EE5               	movlw	-27
 13403  0175B0  006F FF8C  F035    	movff	plusw1,btemp+11
 13404  0175B6  0E02               	movlw	2
 13405  0175B8  2434               	addwf	(btemp+10)^0,w,c
 13406  0175BA  6ED9               	movwf	fsr2l,c
 13407  0175BC  0E00               	movlw	0
 13408  0175BE  2035               	addwfc	(btemp+11)^0,w,c
 13409  0175C0  6EDA               	movwf	fsr2h,c
 13410  0175C2  006F FF78  F034    	movff	postinc2,btemp+10
 13411  0175C8  006F FF74  F035    	movff	postdec2,btemp+11
 13412                           
 13413                           ;stkvar	_x @ sp[(-22)+16]
 13414  0175CE  0EFA               	movlw	-6
 13415  0175D0  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 13416  0175D6  0EFB               	movlw	-5
 13417  0175D8  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 13418                           
 13419                           ;stkvar	_rule @ sp[(-22)+-6]
 13420  0175DE  0EE4               	movlw	-28
 13421  0175E0  006F FF8F FFD9     	movff	plusw1,fsr2l
 13422  0175E6  0EE5               	movlw	-27
 13423  0175E8  006F FF8F FFDA     	movff	plusw1,fsr2h
 13424  0175EE  0E4A               	movlw	74
 13425  0175F0  18DE               	xorwf	postinc2,w,c
 13426  0175F2  10DE               	iorwf	postinc2,w,c
 13427  0175F4  A4D8               	btfss	status,2,c
 13428  0175F6  D021               	goto	l16482
 13429                           
 13430                           ;stkvar	_x @ sp[(-22)+16]
 13431  0175F8  0EFB               	movlw	-5
 13432  0175FA  BEE3               	btfsc	plusw1,7,c
 13433  0175FC  D014               	goto	u16020
 13434  0175FE  0EFB               	movlw	-5
 13435  017600  50E3               	movf	plusw1,w,c
 13436  017602  E108               	bnz	u16010
 13437  017604  0EFA               	movlw	-6
 13438  017606  006F FF8C  F02A    	movff	plusw1,btemp
 13439  01760C  0E3C               	movlw	60
 13440  01760E  5E2A               	subwf	btemp^0,f,c
 13441  017610  A0D8               	btfss	status,0,c
 13442  017612  D009               	goto	u16020
 13443  017614                     u16010:
 13444                           
 13445                           ;stkvar	_is_leap @ sp[(-22)+12]
 13446  017614  0EF6               	movlw	-10
 13447  017616  006F FF8C  F02A    	movff	plusw1,btemp
 13448  01761C  0EF7               	movlw	-9
 13449  01761E  50E3               	movf	plusw1,w,c
 13450  017620  102A               	iorwf	btemp^0,w,c
 13451  017622  A4D8               	btfss	status,2,c
 13452  017624  D00A               	goto	l16482
 13453  017626                     u16020:
 13454                           
 13455                           ;stkvar	_x @ sp[(-22)+16]
 13456  017626  50E1               	movf	fsr1l,w,c
 13457  017628  0FFA               	addlw	-6
 13458  01762A  6ED9               	movwf	fsr2l,c
 13459  01762C  50E2               	movf	fsr1h,w,c
 13460  01762E  6EDA               	movwf	fsr2h,c
 13461  017630  0EFF               	movlw	255
 13462  017632  22DA               	addwfc	fsr2h,f,c
 13463  017634  06DE               	decf	postinc2,f,c
 13464  017636  0E00               	movlw	0
 13465  017638  5ADD               	subwfb	postdec2,f,c
 13466  01763A                     l16482:
 13467  01763A  0E80               	movlw	128
 13468  01763C  6EE6               	movwf	postinc1,c
 13469  01763E  0E51               	movlw	81
 13470  017640  6EE6               	movwf	postinc1,c
 13471  017642  0E01               	movlw	1
 13472  017644  6EE6               	movwf	postinc1,c
 13473  017646  0E00               	movlw	0
 13474  017648  6EE6               	movwf	postinc1,c
 13475                           
 13476                           ;stkvar	_x @ sp[(-26)+16]
 13477  01764A  0EF6               	movlw	-10
 13478  01764C  006F FF8C  F034    	movff	plusw1,btemp+10
 13479  017652  0EF7               	movlw	-9
 13480  017654  006F FF8C  F035    	movff	plusw1,btemp+11
 13481  01765A  0060  F0D0  F02E   	movff	btemp+10,btemp+4
 13482  017660  0060  F0D4  F02F   	movff	btemp+11,btemp+5
 13483  017666  0E00               	movlw	0
 13484  017668  BE2F               	btfsc	(btemp+5)^0,7,c
 13485  01766A  0EFF               	movlw	255
 13486  01766C  6E30               	movwf	(btemp+6)^0,c
 13487  01766E  6E31               	movwf	(btemp+7)^0,c
 13488  017670  0060  F0BB  FFE6   	movff	btemp+4,postinc1
 13489  017676  0060  F0BF  FFE6   	movff	btemp+5,postinc1
 13490  01767C  0060  F0C3  FFE6   	movff	btemp+6,postinc1
 13491  017682  0060  F0C7  FFE6   	movff	btemp+7,postinc1
 13492  017688  EC14  F0FF         	call	___lmul	;wreg free
 13493  01768C  D1EC               	goto	L10
 13494  01768E                     l16484:
 13495                           
 13496                           ;stkvar	_rule @ sp[(-22)+-6]
 13497  01768E  0EE4               	movlw	-28
 13498  017690  006F FF8C  F034    	movff	plusw1,btemp+10
 13499  017696  0EE5               	movlw	-27
 13500  017698  006F FF8C  F035    	movff	plusw1,btemp+11
 13501  01769E  0E02               	movlw	2
 13502  0176A0  2434               	addwf	(btemp+10)^0,w,c
 13503  0176A2  6ED9               	movwf	fsr2l,c
 13504  0176A4  0E00               	movlw	0
 13505  0176A6  2035               	addwfc	(btemp+11)^0,w,c
 13506  0176A8  6EDA               	movwf	fsr2h,c
 13507  0176AA  006F FF78  F034    	movff	postinc2,btemp+10
 13508  0176B0  006F FF74  F035    	movff	postdec2,btemp+11
 13509                           
 13510                           ;stkvar	_m @ sp[(-22)+18]
 13511  0176B6  0EFC               	movlw	-4
 13512  0176B8  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 13513  0176BE  0EFD               	movlw	-3
 13514  0176C0  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 13515                           
 13516                           ;stkvar	_rule @ sp[(-22)+-6]
 13517  0176C6  0EE4               	movlw	-28
 13518  0176C8  006F FF8C  F034    	movff	plusw1,btemp+10
 13519  0176CE  0EE5               	movlw	-27
 13520  0176D0  006F FF8C  F035    	movff	plusw1,btemp+11
 13521  0176D6  0E04               	movlw	4
 13522  0176D8  2434               	addwf	(btemp+10)^0,w,c
 13523  0176DA  6ED9               	movwf	fsr2l,c
 13524  0176DC  0E00               	movlw	0
 13525  0176DE  2035               	addwfc	(btemp+11)^0,w,c
 13526  0176E0  6EDA               	movwf	fsr2h,c
 13527  0176E2  006F FF78  F034    	movff	postinc2,btemp+10
 13528  0176E8  006F FF74  F035    	movff	postdec2,btemp+11
 13529                           
 13530                           ;stkvar	_n @ sp[(-22)+14]
 13531  0176EE  0EF8               	movlw	-8
 13532  0176F0  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 13533  0176F6  0EF9               	movlw	-7
 13534  0176F8  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 13535                           
 13536                           ;stkvar	_rule @ sp[(-22)+-6]
 13537  0176FE  0EE4               	movlw	-28
 13538  017700  006F FF8C  F034    	movff	plusw1,btemp+10
 13539  017706  0EE5               	movlw	-27
 13540  017708  006F FF8C  F035    	movff	plusw1,btemp+11
 13541  01770E  0E06               	movlw	6
 13542  017710  2434               	addwf	(btemp+10)^0,w,c
 13543  017712  6ED9               	movwf	fsr2l,c
 13544  017714  0E00               	movlw	0
 13545  017716  2035               	addwfc	(btemp+11)^0,w,c
 13546  017718  6EDA               	movwf	fsr2h,c
 13547  01771A  006F FF78  F034    	movff	postinc2,btemp+10
 13548  017720  006F FF74  F035    	movff	postdec2,btemp+11
 13549                           
 13550                           ;stkvar	_d @ sp[(-22)+20]
 13551  017726  0EFE               	movlw	-2
 13552  017728  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 13553  01772E  0EFF               	movlw	-1
 13554  017730  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 13555                           
 13556                           ;stkvar	_is_leap @ sp[(-22)+12]
 13557  017736  0EF6               	movlw	-10
 13558  017738  006F FF8F FFE6     	movff	plusw1,postinc1
 13559  01773E  006F FF8F FFE6     	movff	plusw1,postinc1
 13560                           
 13561                           ;stkvar	_m @ sp[(-24)+18]
 13562  017744  0EFA               	movlw	-6
 13563  017746  50E3               	movf	plusw1,w,c
 13564  017748  0FFF               	addlw	255
 13565  01774A  6E34               	movwf	(btemp+10)^0,c
 13566  01774C  0EFB               	movlw	-5
 13567  01774E  006F FF8C  F035    	movff	plusw1,btemp+11
 13568  017754  0EFF               	movlw	255
 13569  017756  2235               	addwfc	(btemp+11)^0,f,c
 13570  017758  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 13571  01775E  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 13572  017764  EC29  F0FE         	call	___month_to_secs	;wreg free
 13573  017768  0060  F0A8  F03A   	movff	btemp,btemp+16
 13574  01776E  0060  F0AC  F03B   	movff	btemp+1,btemp+17
 13575  017774  0060  F0B0  F03C   	movff	btemp+2,btemp+18
 13576  01777A  0060  F0B4  F03D   	movff	btemp+3,btemp+19
 13577  017780  6A3E               	clrf	(btemp+20)^0,c
 13578  017782  BE3D               	btfsc	(btemp+19)^0,7,c
 13579  017784  683E               	setf	(btemp+20)^0,c
 13580  017786  0060  F0F8  F03F   	movff	btemp+20,btemp+21
 13581  01778C  0060  F0F8  F040   	movff	btemp+20,btemp+22
 13582  017792  0060  F0F8  F041   	movff	btemp+20,btemp+23
 13583                           
 13584                           ;stkvar	_t @ sp[(-22)+4]
 13585  017798  50E1               	movf	fsr1l,w,c
 13586  01779A  0FEE               	addlw	-18
 13587  01779C  6ED9               	movwf	fsr2l,c
 13588  01779E  50E2               	movf	fsr1h,w,c
 13589  0177A0  6EDA               	movwf	fsr2h,c
 13590  0177A2  0EFF               	movlw	255
 13591  0177A4  22DA               	addwfc	fsr2h,f,c
 13592  0177A6  503A               	movf	(btemp+16)^0,w,c
 13593  0177A8  26DE               	addwf	postinc2,f,c
 13594  0177AA  503B               	movf	(btemp+17)^0,w,c
 13595  0177AC  22DE               	addwfc	postinc2,f,c
 13596  0177AE  503C               	movf	(btemp+18)^0,w,c
 13597  0177B0  22DE               	addwfc	postinc2,f,c
 13598  0177B2  503D               	movf	(btemp+19)^0,w,c
 13599  0177B4  22DE               	addwfc	postinc2,f,c
 13600  0177B6  503E               	movf	(btemp+20)^0,w,c
 13601  0177B8  22DE               	addwfc	postinc2,f,c
 13602  0177BA  503F               	movf	(btemp+21)^0,w,c
 13603  0177BC  22DE               	addwfc	postinc2,f,c
 13604  0177BE  5040               	movf	(btemp+22)^0,w,c
 13605  0177C0  22DE               	addwfc	postinc2,f,c
 13606  0177C2  5041               	movf	(btemp+23)^0,w,c
 13607  0177C4  22DE               	addwfc	postinc2,f,c
 13608  0177C6  0E80               	movlw	128
 13609  0177C8  6EE6               	movwf	postinc1,c
 13610  0177CA  0E51               	movlw	81
 13611  0177CC  6EE6               	movwf	postinc1,c
 13612  0177CE  0E01               	movlw	1
 13613  0177D0  6EE6               	movwf	postinc1,c
 13614  0177D2  0E00               	movlw	0
 13615  0177D4  6EE6               	movwf	postinc1,c
 13616  0177D6  0E80               	movlw	128
 13617  0177D8  6EE6               	movwf	postinc1,c
 13618  0177DA  0E3A               	movlw	58
 13619  0177DC  6EE6               	movwf	postinc1,c
 13620  0177DE  0E09               	movlw	9
 13621  0177E0  6EE6               	movwf	postinc1,c
 13622  0177E2  0E00               	movlw	0
 13623  0177E4  6EE6               	movwf	postinc1,c
 13624  0177E6  0E00               	movlw	0
 13625  0177E8  6EE6               	movwf	postinc1,c
 13626  0177EA  0E00               	movlw	0
 13627  0177EC  6EE6               	movwf	postinc1,c
 13628  0177EE  0E00               	movlw	0
 13629  0177F0  6EE6               	movwf	postinc1,c
 13630  0177F2  0E00               	movlw	0
 13631  0177F4  6EE6               	movwf	postinc1,c
 13632                           
 13633                           ;stkvar	_t @ sp[(-34)+4]
 13634  0177F6  0EE2               	movlw	-30
 13635  0177F8  50E3               	movf	plusw1,w,c
 13636  0177FA  0F00               	addlw	0
 13637  0177FC  6E3A               	movwf	(btemp+16)^0,c
 13638  0177FE  0EE3               	movlw	-29
 13639  017800  006F FF8C  F03B    	movff	plusw1,btemp+17
 13640  017806  0E46               	movlw	70
 13641  017808  223B               	addwfc	(btemp+17)^0,f,c
 13642  01780A  0EE4               	movlw	-28
 13643  01780C  006F FF8C  F03C    	movff	plusw1,btemp+18
 13644  017812  0E05               	movlw	5
 13645  017814  223C               	addwfc	(btemp+18)^0,f,c
 13646  017816  0EE5               	movlw	-27
 13647  017818  006F FF8C  F03D    	movff	plusw1,btemp+19
 13648  01781E  0E00               	movlw	0
 13649  017820  223D               	addwfc	(btemp+19)^0,f,c
 13650  017822  0EE6               	movlw	-26
 13651  017824  006F FF8C  F03E    	movff	plusw1,btemp+20
 13652  01782A  0E00               	movlw	0
 13653  01782C  223E               	addwfc	(btemp+20)^0,f,c
 13654  01782E  0EE7               	movlw	-25
 13655  017830  006F FF8C  F03F    	movff	plusw1,btemp+21
 13656  017836  0E00               	movlw	0
 13657  017838  223F               	addwfc	(btemp+21)^0,f,c
 13658  01783A  0EE8               	movlw	-24
 13659  01783C  006F FF8C  F040    	movff	plusw1,btemp+22
 13660  017842  0E00               	movlw	0
 13661  017844  2240               	addwfc	(btemp+22)^0,f,c
 13662  017846  0EE9               	movlw	-23
 13663  017848  006F FF8C  F041    	movff	plusw1,btemp+23
 13664  01784E  0E00               	movlw	0
 13665  017850  2241               	addwfc	(btemp+23)^0,f,c
 13666  017852  0060  F0EB  FFE6   	movff	btemp+16,postinc1
 13667  017858  0060  F0EF  FFE6   	movff	btemp+17,postinc1
 13668  01785E  0060  F0F3  FFE6   	movff	btemp+18,postinc1
 13669  017864  0060  F0F7  FFE6   	movff	btemp+19,postinc1
 13670  01786A  0060  F0FB  FFE6   	movff	btemp+20,postinc1
 13671  017870  0060  F0FF  FFE6   	movff	btemp+21,postinc1
 13672  017876  0060  F103  FFE6   	movff	btemp+22,postinc1
 13673  01787C  0060  F107  FFE6   	movff	btemp+23,postinc1
 13674  017882  EC10  F0E4         	call	___aomod	;wreg free
 13675  017886  52E5               	movf	postdec1,f,c
 13676  017888  006F FF9C  F041    	movff	indf1,btemp+23
 13677  01788E  52E5               	movf	postdec1,f,c
 13678  017890  006F FF9C  F040    	movff	indf1,btemp+22
 13679  017896  52E5               	movf	postdec1,f,c
 13680  017898  006F FF9C  F03F    	movff	indf1,btemp+21
 13681  01789E  52E5               	movf	postdec1,f,c
 13682  0178A0  006F FF9C  F03E    	movff	indf1,btemp+20
 13683  0178A6  52E5               	movf	postdec1,f,c
 13684  0178A8  006F FF9C  F03D    	movff	indf1,btemp+19
 13685  0178AE  52E5               	movf	postdec1,f,c
 13686  0178B0  006F FF9C  F03C    	movff	indf1,btemp+18
 13687  0178B6  52E5               	movf	postdec1,f,c
 13688  0178B8  006F FF9C  F03B    	movff	indf1,btemp+17
 13689  0178BE  52E5               	movf	postdec1,f,c
 13690  0178C0  006F FF9C  F03A    	movff	indf1,btemp+16
 13691  0178C6  0EF8               	movlw	248
 13692  0178C8  26E1               	addwf	fsr1l,f,c
 13693  0178CA  0EFF               	movlw	255
 13694  0178CC  22E2               	addwfc	fsr1h,f,c
 13695  0178CE  0060  F0E8  F034   	movff	btemp+16,btemp+10
 13696  0178D4  0060  F0EC  F035   	movff	btemp+17,btemp+11
 13697  0178DA  0060  F0D0  F02E   	movff	btemp+10,btemp+4
 13698  0178E0  0060  F0D4  F02F   	movff	btemp+11,btemp+5
 13699  0178E6  0E00               	movlw	0
 13700  0178E8  BE2F               	btfsc	(btemp+5)^0,7,c
 13701  0178EA  0EFF               	movlw	255
 13702  0178EC  6E30               	movwf	(btemp+6)^0,c
 13703  0178EE  6E31               	movwf	(btemp+7)^0,c
 13704  0178F0  0060  F0BB  FFE6   	movff	btemp+4,postinc1
 13705  0178F6  0060  F0BF  FFE6   	movff	btemp+5,postinc1
 13706  0178FC  0060  F0C3  FFE6   	movff	btemp+6,postinc1
 13707  017902  0060  F0C7  FFE6   	movff	btemp+7,postinc1
 13708  017908  ECD0  F0ED         	call	___aldiv	;wreg free
 13709  01790C  0060  F0A8  F034   	movff	btemp,btemp+10
 13710  017912  0060  F0AC  F035   	movff	btemp+1,btemp+11
 13711                           
 13712                           ;stkvar	_wday @ sp[(-22)+2]
 13713  017918  0EEC               	movlw	-20
 13714  01791A  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 13715  017920  0EED               	movlw	-19
 13716  017922  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 13717                           
 13718                           ;stkvar	_wday @ sp[(-22)+2]
 13719                           ;stkvar	_d @ sp[(-22)+20]
 13720  017928  0EFE               	movlw	-2
 13721  01792A  006F FF8C  F034    	movff	plusw1,btemp+10
 13722  017930  0EFF               	movlw	-1
 13723  017932  006F FF8C  F035    	movff	plusw1,btemp+11
 13724  017938  0EEC               	movlw	-20
 13725  01793A  50E3               	movf	plusw1,w,c
 13726  01793C  5E34               	subwf	(btemp+10)^0,f,c
 13727  01793E  0EED               	movlw	-19
 13728  017940  50E3               	movf	plusw1,w,c
 13729  017942  5A35               	subwfb	(btemp+11)^0,f,c
 13730                           
 13731                           ;stkvar	_days @ sp[(-22)+0]
 13732  017944  0EEA               	movlw	-22
 13733  017946  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 13734  01794C  0EEB               	movlw	-21
 13735  01794E  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 13736                           
 13737                           ;stkvar	_days @ sp[(-22)+0]
 13738  017954  0EEB               	movlw	-21
 13739  017956  AEE3               	btfss	plusw1,7,c
 13740  017958  D011               	goto	l4019
 13741                           
 13742                           ;stkvar	_days @ sp[(-22)+0]
 13743  01795A  0EEA               	movlw	-22
 13744  01795C  50E3               	movf	plusw1,w,c
 13745  01795E  0F07               	addlw	7
 13746  017960  6E2A               	movwf	btemp^0,c
 13747  017962  0EEA               	movlw	-22
 13748  017964  0060  F0AB  FFE3   	movff	btemp,plusw1
 13749  01796A  6A2A               	clrf	btemp^0,c
 13750  01796C  0EEB               	movlw	-21
 13751  01796E  50E3               	movf	plusw1,w,c
 13752  017970  202A               	addwfc	btemp^0,w,c
 13753  017972  6E2A               	movwf	btemp^0,c
 13754  017974  0EEB               	movlw	-21
 13755  017976  0060  F0AB  FFE3   	movff	btemp,plusw1
 13756  01797C                     l4019:
 13757                           
 13758                           ;stkvar	_n @ sp[(-22)+14]
 13759  01797C  0EF8               	movlw	-8
 13760  01797E  006F FF8C  F02A    	movff	plusw1,btemp
 13761  017984  0E05               	movlw	5
 13762  017986  182A               	xorwf	btemp^0,w,c
 13763  017988  E134               	bnz	l16500
 13764  01798A  0EF9               	movlw	-7
 13765  01798C  50E3               	movf	plusw1,w,c
 13766  01798E  A4D8               	btfss	status,2,c
 13767  017990  D030               	goto	l16500
 13768                           
 13769                           ;stkvar	_is_leap @ sp[(-22)+12]
 13770  017992  0EF6               	movlw	-10
 13771  017994  006F FF8F FFE6     	movff	plusw1,postinc1
 13772  01799A  006F FF8F FFE6     	movff	plusw1,postinc1
 13773                           
 13774                           ;stkvar	_m @ sp[(-24)+18]
 13775  0179A0  0EFA               	movlw	-6
 13776  0179A2  006F FF8F FFE6     	movff	plusw1,postinc1
 13777  0179A8  006F FF8F FFE6     	movff	plusw1,postinc1
 13778  0179AE  EC07  F00A         	call	_days_in_month	;wreg free
 13779                           
 13780                           ;stkvar	_days @ sp[(-22)+0]
 13781  0179B2  0EEA               	movlw	-22
 13782  0179B4  50E3               	movf	plusw1,w,c
 13783  0179B6  0F1C               	addlw	28
 13784  0179B8  6E34               	movwf	(btemp+10)^0,c
 13785  0179BA  0EEB               	movlw	-21
 13786  0179BC  006F FF8C  F035    	movff	plusw1,btemp+11
 13787  0179C2  0E00               	movlw	0
 13788  0179C4  2235               	addwfc	(btemp+11)^0,f,c
 13789  0179C6  502A               	movf	btemp^0,w,c
 13790  0179C8  5C34               	subwf	(btemp+10)^0,w,c
 13791  0179CA  5035               	movf	(btemp+11)^0,w,c
 13792  0179CC  0A80               	xorlw	128
 13793  0179CE  6E2C               	movwf	(btemp+2)^0,c
 13794  0179D0  502B               	movf	(btemp+1)^0,w,c
 13795  0179D2  0A80               	xorlw	128
 13796  0179D4  582C               	subwfb	(btemp+2)^0,w,c
 13797  0179D6  A0D8               	btfss	status,0,c
 13798  0179D8  D00C               	goto	l16500
 13799  0179DA  0E04               	movlw	4
 13800  0179DC  6E34               	movwf	(btemp+10)^0,c
 13801  0179DE  0E00               	movlw	0
 13802  0179E0  6E35               	movwf	(btemp+11)^0,c
 13803                           
 13804                           ;stkvar	_n @ sp[(-22)+14]
 13805  0179E2  0EF8               	movlw	-8
 13806  0179E4  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 13807  0179EA  0EF9               	movlw	-7
 13808  0179EC  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 13809  0179F2                     l16500:
 13810  0179F2  0E80               	movlw	128
 13811  0179F4  6EE6               	movwf	postinc1,c
 13812  0179F6  0E51               	movlw	81
 13813  0179F8  6EE6               	movwf	postinc1,c
 13814  0179FA  0E01               	movlw	1
 13815  0179FC  6EE6               	movwf	postinc1,c
 13816  0179FE  0E00               	movlw	0
 13817  017A00  6EE6               	movwf	postinc1,c
 13818                           
 13819                           ;stkvar	_days @ sp[(-26)+0]
 13820                           ;stkvar	_n @ sp[(-26)+14]
 13821  017A02  0EF4               	movlw	-12
 13822  017A04  006F FF8C  F034    	movff	plusw1,btemp+10
 13823  017A0A  0EF5               	movlw	-11
 13824  017A0C  006F FF8C  F035    	movff	plusw1,btemp+11
 13825  017A12  0E07               	movlw	7
 13826  017A14  0234               	mulwf	(btemp+10)^0,c
 13827  017A16  006F FFCC  F032    	movff	prodl,btemp+8
 13828  017A1C  006F FFD0  F033    	movff	prodh,btemp+9
 13829  017A22  0235               	mulwf	(btemp+11)^0,c
 13830  017A24  50F3               	movf	prodl,w,c
 13831  017A26  2633               	addwf	(btemp+9)^0,f,c
 13832  017A28  0EE6               	movlw	-26
 13833  017A2A  50E3               	movf	plusw1,w,c
 13834  017A2C  2632               	addwf	(btemp+8)^0,f,c
 13835  017A2E  0EE7               	movlw	-25
 13836  017A30  50E3               	movf	plusw1,w,c
 13837  017A32  2233               	addwfc	(btemp+9)^0,f,c
 13838  017A34  0EF9               	movlw	249
 13839  017A36  2432               	addwf	(btemp+8)^0,w,c
 13840  017A38  6E2E               	movwf	(btemp+4)^0,c
 13841  017A3A  0EFF               	movlw	255
 13842  017A3C  2033               	addwfc	(btemp+9)^0,w,c
 13843  017A3E  6E2F               	movwf	(btemp+5)^0,c
 13844  017A40  6A30               	clrf	(btemp+6)^0,c
 13845  017A42  BE2F               	btfsc	(btemp+5)^0,7,c
 13846  017A44  0630               	decf	(btemp+6)^0,f,c
 13847  017A46  5030               	movf	(btemp+6)^0,w,c
 13848  017A48  6E31               	movwf	(btemp+7)^0,c
 13849  017A4A  0060  F0BB  FFE6   	movff	btemp+4,postinc1
 13850  017A50  0060  F0BF  FFE6   	movff	btemp+5,postinc1
 13851  017A56  0060  F0C3  FFE6   	movff	btemp+6,postinc1
 13852  017A5C  0060  F0C7  FFE6   	movff	btemp+7,postinc1
 13853  017A62  EC14  F0FF         	call	___lmul	;wreg free
 13854  017A66                     L10:
 13855  017A66  0060  F0A8  F03A   	movff	btemp,btemp+16
 13856  017A6C  0060  F0AC  F03B   	movff	btemp+1,btemp+17
 13857  017A72  0060  F0B0  F03C   	movff	btemp+2,btemp+18
 13858  017A78  0060  F0B4  F03D   	movff	btemp+3,btemp+19
 13859  017A7E  6A3E               	clrf	(btemp+20)^0,c
 13860  017A80  BE3D               	btfsc	(btemp+19)^0,7,c
 13861  017A82  683E               	setf	(btemp+20)^0,c
 13862  017A84  0060  F0F8  F03F   	movff	btemp+20,btemp+21
 13863  017A8A  0060  F0F8  F040   	movff	btemp+20,btemp+22
 13864  017A90  0060  F0F8  F041   	movff	btemp+20,btemp+23
 13865                           
 13866                           ;stkvar	_t @ sp[(-22)+4]
 13867  017A96  50E1               	movf	fsr1l,w,c
 13868  017A98  0FEE               	addlw	-18
 13869  017A9A  6ED9               	movwf	fsr2l,c
 13870  017A9C  50E2               	movf	fsr1h,w,c
 13871  017A9E  6EDA               	movwf	fsr2h,c
 13872  017AA0  0EFF               	movlw	255
 13873  017AA2  22DA               	addwfc	fsr2h,f,c
 13874  017AA4  503A               	movf	(btemp+16)^0,w,c
 13875  017AA6  26DE               	addwf	postinc2,f,c
 13876  017AA8  503B               	movf	(btemp+17)^0,w,c
 13877  017AAA  22DE               	addwfc	postinc2,f,c
 13878  017AAC  503C               	movf	(btemp+18)^0,w,c
 13879  017AAE  22DE               	addwfc	postinc2,f,c
 13880  017AB0  503D               	movf	(btemp+19)^0,w,c
 13881  017AB2  22DE               	addwfc	postinc2,f,c
 13882  017AB4  503E               	movf	(btemp+20)^0,w,c
 13883  017AB6  22DE               	addwfc	postinc2,f,c
 13884  017AB8  503F               	movf	(btemp+21)^0,w,c
 13885  017ABA  22DE               	addwfc	postinc2,f,c
 13886  017ABC  5040               	movf	(btemp+22)^0,w,c
 13887  017ABE  22DE               	addwfc	postinc2,f,c
 13888  017AC0  5041               	movf	(btemp+23)^0,w,c
 13889  017AC2  22DE               	addwfc	postinc2,f,c
 13890                           
 13891                           ;stkvar	_rule @ sp[(-22)+-6]
 13892  017AC4  0EE4               	movlw	-28
 13893  017AC6  006F FF8C  F034    	movff	plusw1,btemp+10
 13894  017ACC  0EE5               	movlw	-27
 13895  017ACE  006F FF8C  F035    	movff	plusw1,btemp+11
 13896  017AD4  0E08               	movlw	8
 13897  017AD6  2434               	addwf	(btemp+10)^0,w,c
 13898  017AD8  6ED9               	movwf	fsr2l,c
 13899  017ADA  0E00               	movlw	0
 13900  017ADC  2035               	addwfc	(btemp+11)^0,w,c
 13901  017ADE  6EDA               	movwf	fsr2h,c
 13902  017AE0  006F FF78  F034    	movff	postinc2,btemp+10
 13903  017AE6  006F FF74  F035    	movff	postdec2,btemp+11
 13904                           
 13905                           ;stkvar	_t @ sp[(-22)+4]
 13906  017AEC  50E1               	movf	fsr1l,w,c
 13907  017AEE  0FEE               	addlw	-18
 13908  017AF0  6ED9               	movwf	fsr2l,c
 13909  017AF2  50E2               	movf	fsr1h,w,c
 13910  017AF4  6EDA               	movwf	fsr2h,c
 13911  017AF6  0EFF               	movlw	255
 13912  017AF8  22DA               	addwfc	fsr2h,f,c
 13913  017AFA  5034               	movf	(btemp+10)^0,w,c
 13914  017AFC  26DE               	addwf	postinc2,f,c
 13915  017AFE  5035               	movf	(btemp+11)^0,w,c
 13916  017B00  22DE               	addwfc	postinc2,f,c
 13917  017B02  0E00               	movlw	0
 13918  017B04  BE35               	btfsc	(btemp+11)^0,7,c
 13919  017B06  0EFF               	movlw	255
 13920  017B08  22DE               	addwfc	postinc2,f,c
 13921  017B0A  22DE               	addwfc	postinc2,f,c
 13922  017B0C  22DE               	addwfc	postinc2,f,c
 13923  017B0E  22DE               	addwfc	postinc2,f,c
 13924  017B10  22DE               	addwfc	postinc2,f,c
 13925  017B12  22DE               	addwfc	postinc2,f,c
 13926                           
 13927                           ;stkvar	_t @ sp[(-22)+4]
 13928  017B14  0EEE               	movlw	238
 13929  017B16  24E1               	addwf	fsr1l,w,c
 13930  017B18  6ED9               	movwf	fsr2l,c
 13931  017B1A  0EFF               	movlw	255
 13932  017B1C  20E2               	addwfc	fsr1h,w,c
 13933  017B1E  6EDA               	movwf	fsr2h,c
 13934                           
 13935                           ;stkvar	?_rule_to_secs @ sp[(-22)+-8]
 13936  017B20  0E08               	movlw	8
 13937  017B22  6E2A               	movwf	btemp^0,c
 13938  017B24  0EE2               	movlw	-30
 13939  017B26                     us1606999:
 13940  017B26  006F FF7B FFE3     	movff	postinc2,plusw1
 13941  017B2C  28E8               	incf	wreg,w,c
 13942  017B2E  2E2A               	decfsz	btemp^0,f,c
 13943  017B30  D7FA               	bra	us1606999
 13944                           
 13945                           ; _rule_to_secs: autosize = 22, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8,
      +                           argsize = 8, vargsize = 0
 13946  017B32  0EEA               	movlw	234
 13947  017B34  26E1               	addwf	fsr1l,f,c
 13948  017B36  0EFF               	movlw	255
 13949  017B38  22E2               	addwfc	fsr1h,f,c
 13950  017B3A  0012               	return		;funcret
 13951  017B3C                     __end_of_rule_to_secs:
 13952                           	opt callstack 0
 13953                           
 13954 ;; *************** function _days_in_month *****************
 13955 ;; Defined at:
 13956 ;;		line 210 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__tz.c"
 13957 ;; Parameters:    Size  Location     Type
 13958 ;;  m               2  [STACK] int 
 13959 ;;  is_leap         2  [STACK] int 
 13960 ;; Auto vars:     Size  Location     Type
 13961 ;;		None
 13962 ;; Return value:  Size  Location     Type
 13963 ;;                  2  [STACK] int 
 13964 ;; Registers used:
 13965 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 13966 ;; Tracked objects:
 13967 ;;		On entry : 0/0
 13968 ;;		On exit  : 0/0
 13969 ;;		Unchanged: 0/0
 13970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13971 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13972 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13973 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13974 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13975 ;;Total ram usage:        0 bytes
 13976 ;; Hardware stack levels used:    1
 13977 ;; Hardware stack levels required when called:   15
 13978 ;; This function calls:
 13979 ;;		Nothing
 13980 ;; This function is called by:
 13981 ;;		_rule_to_secs
 13982 ;; This function uses a reentrant model
 13983 ;;
 13984                           
 13985                           	psect	text41
 13986  00140E                     __ptext41:
 13987                           	opt callstack 0
 13988  00140E                     _days_in_month:
 13989                           	opt callstack 11
 13990                           
 13991                           ;stkvar	_m @ sp[(0)+-2]
 13992                           
 13993                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13994                           ;incstack = 0
 13995  00140E  0EFE               	movlw	-2
 13996  001410  006F FF8C  F02A    	movff	plusw1,btemp
 13997  001416  0E02               	movlw	2
 13998  001418  182A               	xorwf	btemp^0,w,c
 13999  00141A  E10D               	bnz	l11592
 14000  00141C  0EFF               	movlw	-1
 14001  00141E  50E3               	movf	plusw1,w,c
 14002  001420  A4D8               	btfss	status,2,c
 14003  001422  D009               	goto	l11592
 14004                           
 14005                           ;stkvar	_is_leap @ sp[(0)+-4]
 14006  001424  0EFC               	movlw	-4
 14007  001426  50E3               	movf	plusw1,w,c
 14008  001428  0F1C               	addlw	28
 14009  00142A  6E2A               	movwf	btemp^0,c
 14010  00142C  0EFD               	movlw	-3
 14011  00142E  006F FF8C  F02B    	movff	plusw1,btemp+1
 14012  001434  D017               	goto	L11
 14013  001436                     l11592:
 14014  001436  0EFF               	movlw	255
 14015  001438  6E35               	movwf	(btemp+11)^0,c
 14016                           
 14017                           ;stkvar	_m @ sp[(0)+-2]
 14018  00143A  0EFE               	movlw	-2
 14019  00143C  50E3               	movf	plusw1,w,c
 14020  00143E  2435               	addwf	(btemp+11)^0,w,c
 14021  001440  6E34               	movwf	(btemp+10)^0,c
 14022  001442  0ED5               	movlw	213
 14023  001444  6E2A               	movwf	btemp^0,c
 14024  001446  0E0A               	movlw	10
 14025  001448  6E2B               	movwf	(btemp+1)^0,c
 14026  00144A  2A34               	incf	(btemp+10)^0,f,c
 14027  00144C  D003               	goto	u10684
 14028  00144E                     u10685:
 14029  00144E  342B               	rlcf	(btemp+1)^0,w,c
 14030  001450  322B               	rrcf	(btemp+1)^0,f,c
 14031  001452  322A               	rrcf	btemp^0,f,c
 14032  001454                     u10684:
 14033  001454  2E34               	decfsz	(btemp+10)^0,f,c
 14034  001456  D7FB               	goto	u10685
 14035  001458  0E01               	movlw	1
 14036  00145A  162A               	andwf	btemp^0,f,c
 14037  00145C  0E00               	movlw	0
 14038  00145E  162B               	andwf	(btemp+1)^0,f,c
 14039  001460  0E1E               	movlw	30
 14040  001462  262A               	addwf	btemp^0,f,c
 14041  001464                     L11:
 14042  001464  0E00               	movlw	0
 14043  001466  222B               	addwfc	(btemp+1)^0,f,c
 14044                           
 14045                           ; _days_in_month: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4,
      +                           argsize = 4, vargsize = 0
 14046  001468  52E5               	movf	postdec1,f,c
 14047  00146A  52E5               	movf	postdec1,f,c
 14048  00146C  52E5               	movf	postdec1,f,c
 14049  00146E  52E5               	movf	postdec1,f,c
 14050  001470  0012               	return		;funcret
 14051  001472                     __end_of_days_in_month:
 14052                           	opt callstack 0
 14053                           
 14054 ;; *************** function ___year_to_secs *****************
 14055 ;; Defined at:
 14056 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__year_to_secs.c"
 14057 ;; Parameters:    Size  Location     Type
 14058 ;;  year            8  [STACK] long long 
 14059 ;;  is_leap         2  [STACK] PTR int 
 14060 ;;		 -> F5(2), is_leap(2), NULL(0), 
 14061 ;; Auto vars:     Size  Location     Type
 14062 ;;  y               2  [STACK] int 
 14063 ;;  leaps           2  [STACK] int 
 14064 ;;  rem             2  [STACK] int 
 14065 ;;  5               2  [STACK] int 
 14066 ;;  centuries       2  [STACK] int 
 14067 ;;  leaps           2  [STACK] int 
 14068 ;;  cycles          2  [STACK] int 
 14069 ;; Return value:  Size  Location     Type
 14070 ;;                  8  [STACK] long long 
 14071 ;; Registers used:
 14072 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15, btemp+16, btemp+17, btemp+18, btem
      +p+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, btemp+30, btem
      +p+31, prodl, prodh
 14073 ;; Tracked objects:
 14074 ;;		On entry : 0/0
 14075 ;;		On exit  : 0/0
 14076 ;;		Unchanged: 0/0
 14077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14078 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14079 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14080 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14081 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14082 ;;Total ram usage:        0 bytes
 14083 ;; Hardware stack levels used:    1
 14084 ;; Hardware stack levels required when called:   16
 14085 ;; This function calls:
 14086 ;;		___aodiv
 14087 ;;		___aomod
 14088 ;;		___lmul
 14089 ;;		___omul
 14090 ;; This function is called by:
 14091 ;;		_rule_to_secs
 14092 ;;		___secs_to_zone
 14093 ;; This function uses a reentrant model
 14094 ;;
 14095                           
 14096                           	psect	text42
 14097  015286                     __ptext42:
 14098                           	opt callstack 0
 14099  015286                     ___year_to_secs:
 14100                           	opt callstack 0
 14101                           
 14102                           ; autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 8 argfudge = 0
 14103  015286  0E0E               	movlw	14
 14104  015288  26E1               	addwf	fsr1l,f,c
 14105  01528A  0E00               	movlw	0
 14106  01528C  22E2               	addwfc	fsr1h,f,c
 14107                           
 14108                           ;stkvar	_year @ sp[(-14)+-8]
 14109                           
 14110                           ;incstack = 0
 14111  01528E  0EEA               	movlw	-22
 14112  015290  50E3               	movf	plusw1,w,c
 14113  015292  0FFE               	addlw	254
 14114  015294  6E3A               	movwf	(btemp+16)^0,c
 14115  015296  0EEB               	movlw	-21
 14116  015298  006F FF8C  F03B    	movff	plusw1,btemp+17
 14117  01529E  0EFF               	movlw	255
 14118  0152A0  223B               	addwfc	(btemp+17)^0,f,c
 14119  0152A2  0EEC               	movlw	-20
 14120  0152A4  006F FF8C  F03C    	movff	plusw1,btemp+18
 14121  0152AA  0EFF               	movlw	255
 14122  0152AC  223C               	addwfc	(btemp+18)^0,f,c
 14123  0152AE  0EED               	movlw	-19
 14124  0152B0  006F FF8C  F03D    	movff	plusw1,btemp+19
 14125  0152B6  0EFF               	movlw	255
 14126  0152B8  223D               	addwfc	(btemp+19)^0,f,c
 14127  0152BA  0EEE               	movlw	-18
 14128  0152BC  006F FF8C  F03E    	movff	plusw1,btemp+20
 14129  0152C2  0EFF               	movlw	255
 14130  0152C4  223E               	addwfc	(btemp+20)^0,f,c
 14131  0152C6  0EEF               	movlw	-17
 14132  0152C8  006F FF8C  F03F    	movff	plusw1,btemp+21
 14133  0152CE  0EFF               	movlw	255
 14134  0152D0  223F               	addwfc	(btemp+21)^0,f,c
 14135  0152D2  0EF0               	movlw	-16
 14136  0152D4  006F FF8C  F040    	movff	plusw1,btemp+22
 14137  0152DA  0EFF               	movlw	255
 14138  0152DC  2240               	addwfc	(btemp+22)^0,f,c
 14139  0152DE  0EF1               	movlw	-15
 14140  0152E0  006F FF8C  F041    	movff	plusw1,btemp+23
 14141  0152E6  0EFF               	movlw	255
 14142  0152E8  2241               	addwfc	(btemp+23)^0,f,c
 14143  0152EA  5041               	movf	(btemp+23)^0,w,c
 14144  0152EC  1040               	iorwf	(btemp+22)^0,w,c
 14145  0152EE  103F               	iorwf	(btemp+21)^0,w,c
 14146  0152F0  103E               	iorwf	(btemp+20)^0,w,c
 14147  0152F2  103D               	iorwf	(btemp+19)^0,w,c
 14148  0152F4  103C               	iorwf	(btemp+18)^0,w,c
 14149  0152F6  103B               	iorwf	(btemp+17)^0,w,c
 14150  0152F8  E103               	bnz	u10691
 14151  0152FA  0E89               	movlw	137
 14152  0152FC  5C3A               	subwf	(btemp+16)^0,w,c
 14153  0152FE  B0D8               	btfsc	status,0,c
 14154  015300                     u10691:
 14155  015300  D0E7               	goto	l11618
 14156                           
 14157                           ;stkvar	_year @ sp[(-14)+-8]
 14158                           ;stkvar	_y @ sp[(-14)+0]
 14159  015302  0EEA               	movlw	-22
 14160  015304  006F FF8C  F02A    	movff	plusw1,btemp
 14161  01530A  0EF2               	movlw	-14
 14162  01530C  0060  F0AB  FFE3   	movff	btemp,plusw1
 14163  015312  0EEB               	movlw	-21
 14164  015314  006F FF8C  F02A    	movff	plusw1,btemp
 14165  01531A  0EF3               	movlw	-13
 14166  01531C  0060  F0AB  FFE3   	movff	btemp,plusw1
 14167                           
 14168                           ;stkvar	_y @ sp[(-14)+0]
 14169  015322  0EF2               	movlw	-14
 14170  015324  50E3               	movf	plusw1,w,c
 14171  015326  0FBC               	addlw	188
 14172  015328  6E34               	movwf	(btemp+10)^0,c
 14173  01532A  0EF3               	movlw	-13
 14174  01532C  006F FF8C  F035    	movff	plusw1,btemp+11
 14175  015332  0EFF               	movlw	255
 14176  015334  2235               	addwfc	(btemp+11)^0,f,c
 14177  015336  3435               	rlcf	(btemp+11)^0,w,c
 14178  015338  3235               	rrcf	(btemp+11)^0,f,c
 14179  01533A  3234               	rrcf	(btemp+10)^0,f,c
 14180  01533C  3435               	rlcf	(btemp+11)^0,w,c
 14181  01533E  3235               	rrcf	(btemp+11)^0,f,c
 14182  015340  3234               	rrcf	(btemp+10)^0,f,c
 14183                           
 14184                           ;stkvar	_leaps @ sp[(-14)+2]
 14185  015342  0EF4               	movlw	-12
 14186  015344  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 14187  01534A  0EF5               	movlw	-11
 14188  01534C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 14189  015352  0EBC               	movlw	188
 14190  015354  6E35               	movwf	(btemp+11)^0,c
 14191                           
 14192                           ;stkvar	_y @ sp[(-14)+0]
 14193  015356  0EF2               	movlw	-14
 14194  015358  50E3               	movf	plusw1,w,c
 14195  01535A  2435               	addwf	(btemp+11)^0,w,c
 14196  01535C  6E34               	movwf	(btemp+10)^0,c
 14197  01535E  0E03               	movlw	3
 14198  015360  1634               	andwf	(btemp+10)^0,f,c
 14199  015362  A4D8               	btfss	status,2,c
 14200  015364  D01D               	goto	l11610
 14201                           
 14202                           ;stkvar	_leaps @ sp[(-14)+2]
 14203  015366  50E1               	movf	fsr1l,w,c
 14204  015368  0FF4               	addlw	-12
 14205  01536A  6ED9               	movwf	fsr2l,c
 14206  01536C  50E2               	movf	fsr1h,w,c
 14207  01536E  6EDA               	movwf	fsr2h,c
 14208  015370  0EFF               	movlw	255
 14209  015372  22DA               	addwfc	fsr2h,f,c
 14210  015374  06DE               	decf	postinc2,f,c
 14211  015376  0E00               	movlw	0
 14212  015378  5ADD               	subwfb	postdec2,f,c
 14213                           
 14214                           ;stkvar	_is_leap @ sp[(-14)+-10]
 14215  01537A  0EE8               	movlw	-24
 14216  01537C  006F FF8C  F02A    	movff	plusw1,btemp
 14217  015382  0EE9               	movlw	-23
 14218  015384  50E3               	movf	plusw1,w,c
 14219  015386  102A               	iorwf	btemp^0,w,c
 14220  015388  B4D8               	btfsc	status,2,c
 14221  01538A  D01F               	goto	l11614
 14222                           
 14223                           ;stkvar	_is_leap @ sp[(-14)+-10]
 14224  01538C  0EE8               	movlw	-24
 14225  01538E  006F FF8F FFD9     	movff	plusw1,fsr2l
 14226  015394  0EE9               	movlw	-23
 14227  015396  006F FF8F FFDA     	movff	plusw1,fsr2h
 14228  01539C  0E01               	movlw	1
 14229  01539E  D012               	goto	L12
 14230  0153A0                     l11610:
 14231                           
 14232                           ;stkvar	_is_leap @ sp[(-14)+-10]
 14233  0153A0  0EE8               	movlw	-24
 14234  0153A2  006F FF8C  F02A    	movff	plusw1,btemp
 14235  0153A8  0EE9               	movlw	-23
 14236  0153AA  50E3               	movf	plusw1,w,c
 14237  0153AC  102A               	iorwf	btemp^0,w,c
 14238  0153AE  B4D8               	btfsc	status,2,c
 14239  0153B0  D00C               	goto	l11614
 14240                           
 14241                           ;stkvar	_is_leap @ sp[(-14)+-10]
 14242  0153B2  0EE8               	movlw	-24
 14243  0153B4  006F FF8F FFD9     	movff	plusw1,fsr2l
 14244  0153BA  0EE9               	movlw	-23
 14245  0153BC  006F FF8F FFDA     	movff	plusw1,fsr2h
 14246  0153C2  0E00               	movlw	0
 14247  0153C4                     L12:
 14248  0153C4  6EDE               	movwf	postinc2,c
 14249  0153C6  0E00               	movlw	0
 14250  0153C8  6EDD               	movwf	postdec2,c
 14251  0153CA                     l11614:
 14252  0153CA  0E80               	movlw	128
 14253  0153CC  6EE6               	movwf	postinc1,c
 14254  0153CE  0E33               	movlw	51
 14255  0153D0  6EE6               	movwf	postinc1,c
 14256  0153D2  0EE1               	movlw	225
 14257  0153D4  6EE6               	movwf	postinc1,c
 14258  0153D6  0E01               	movlw	1
 14259  0153D8  6EE6               	movwf	postinc1,c
 14260                           
 14261                           ;stkvar	_y @ sp[(-18)+0]
 14262  0153DA  0EEE               	movlw	-18
 14263  0153DC  006F FF8C  F034    	movff	plusw1,btemp+10
 14264  0153E2  0EEF               	movlw	-17
 14265  0153E4  006F FF8C  F035    	movff	plusw1,btemp+11
 14266  0153EA  0EBA               	movlw	186
 14267  0153EC  2434               	addwf	(btemp+10)^0,w,c
 14268  0153EE  6E2E               	movwf	(btemp+4)^0,c
 14269  0153F0  0EFF               	movlw	255
 14270  0153F2  2035               	addwfc	(btemp+11)^0,w,c
 14271  0153F4  6E2F               	movwf	(btemp+5)^0,c
 14272  0153F6  6A30               	clrf	(btemp+6)^0,c
 14273  0153F8  BE2F               	btfsc	(btemp+5)^0,7,c
 14274  0153FA  0630               	decf	(btemp+6)^0,f,c
 14275  0153FC  5030               	movf	(btemp+6)^0,w,c
 14276  0153FE  6E31               	movwf	(btemp+7)^0,c
 14277  015400  0060  F0BB  FFE6   	movff	btemp+4,postinc1
 14278  015406  0060  F0BF  FFE6   	movff	btemp+5,postinc1
 14279  01540C  0060  F0C3  FFE6   	movff	btemp+6,postinc1
 14280  015412  0060  F0C7  FFE6   	movff	btemp+7,postinc1
 14281  015418  EC14  F0FF         	call	___lmul	;wreg free
 14282  01541C  0060  F0A8  F032   	movff	btemp,btemp+8
 14283  015422  0060  F0AC  F033   	movff	btemp+1,btemp+9
 14284  015428  0060  F0B0  F034   	movff	btemp+2,btemp+10
 14285  01542E  0060  F0B4  F035   	movff	btemp+3,btemp+11
 14286  015434  0E80               	movlw	128
 14287  015436  6EE6               	movwf	postinc1,c
 14288  015438  0E51               	movlw	81
 14289  01543A  6EE6               	movwf	postinc1,c
 14290  01543C  0E01               	movlw	1
 14291  01543E  6EE6               	movwf	postinc1,c
 14292  015440  0E00               	movlw	0
 14293  015442  6EE6               	movwf	postinc1,c
 14294                           
 14295                           ;stkvar	_leaps @ sp[(-18)+2]
 14296  015444  0EF0               	movlw	-16
 14297  015446  006F FF8C  F030    	movff	plusw1,btemp+6
 14298  01544C  0EF1               	movlw	-15
 14299  01544E  006F FF8C  F031    	movff	plusw1,btemp+7
 14300  015454  0060  F0C0  F02A   	movff	btemp+6,btemp
 14301  01545A  0060  F0C4  F02B   	movff	btemp+7,btemp+1
 14302  015460  0E00               	movlw	0
 14303  015462  BE2B               	btfsc	(btemp+1)^0,7,c
 14304  015464  0EFF               	movlw	255
 14305  015466  6E2C               	movwf	(btemp+2)^0,c
 14306  015468  6E2D               	movwf	(btemp+3)^0,c
 14307  01546A  0060  F0AB  FFE6   	movff	btemp,postinc1
 14308  015470  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 14309  015476  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 14310  01547C  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 14311  015482  EC14  F0FF         	call	___lmul	;wreg free
 14312  015486  502A               	movf	btemp^0,w,c
 14313  015488  2432               	addwf	(btemp+8)^0,w,c
 14314  01548A  6E2E               	movwf	(btemp+4)^0,c
 14315  01548C  502B               	movf	(btemp+1)^0,w,c
 14316  01548E  2033               	addwfc	(btemp+9)^0,w,c
 14317  015490  6E2F               	movwf	(btemp+5)^0,c
 14318  015492  502C               	movf	(btemp+2)^0,w,c
 14319  015494  2034               	addwfc	(btemp+10)^0,w,c
 14320  015496  6E30               	movwf	(btemp+6)^0,c
 14321  015498  502D               	movf	(btemp+3)^0,w,c
 14322  01549A  2035               	addwfc	(btemp+11)^0,w,c
 14323  01549C  6E31               	movwf	(btemp+7)^0,c
 14324  01549E  0060  F0B8  F03A   	movff	btemp+4,btemp+16
 14325  0154A4  0060  F0BC  F03B   	movff	btemp+5,btemp+17
 14326  0154AA  0060  F0C0  F03C   	movff	btemp+6,btemp+18
 14327  0154B0  0060  F0C4  F03D   	movff	btemp+7,btemp+19
 14328  0154B6  6A3E               	clrf	(btemp+20)^0,c
 14329  0154B8  BE3D               	btfsc	(btemp+19)^0,7,c
 14330  0154BA  683E               	setf	(btemp+20)^0,c
 14331  0154BC  0060  F0F8  F03F   	movff	btemp+20,btemp+21
 14332  0154C2  0060  F0F8  F040   	movff	btemp+20,btemp+22
 14333  0154C8  0060  F0F8  F041   	movff	btemp+20,btemp+23
 14334  0154CE  D36F               	goto	L13
 14335  0154D0                     l11618:
 14336                           
 14337                           ;stkvar	_is_leap @ sp[(-14)+-10]
 14338  0154D0  0EE8               	movlw	-24
 14339  0154D2  006F FF8C  F02A    	movff	plusw1,btemp
 14340  0154D8  0EE9               	movlw	-23
 14341  0154DA  50E3               	movf	plusw1,w,c
 14342  0154DC  102A               	iorwf	btemp^0,w,c
 14343  0154DE  A4D8               	btfss	status,2,c
 14344  0154E0  D012               	goto	l11624
 14345                           
 14346                           ;stkvar	F5 @ sp[(-14)+6]
 14347  0154E2  0EF8               	movlw	-8
 14348  0154E4  6AE3               	clrf	plusw1,c
 14349  0154E6  0EF9               	movlw	-7
 14350  0154E8  6AE3               	clrf	plusw1,c
 14351                           
 14352                           ;stkvar	F5 @ sp[(-14)+6]
 14353  0154EA  0EF8               	movlw	248
 14354  0154EC  24E1               	addwf	fsr1l,w,c
 14355  0154EE  6E34               	movwf	(btemp+10)^0,c
 14356  0154F0  0EFF               	movlw	255
 14357  0154F2  20E2               	addwfc	fsr1h,w,c
 14358  0154F4  6E35               	movwf	(btemp+11)^0,c
 14359                           
 14360                           ;stkvar	_is_leap @ sp[(-14)+-10]
 14361  0154F6  0EE9               	movlw	-23
 14362  0154F8  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 14363  0154FE  0EE8               	movlw	-24
 14364  015500  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 14365  015506                     l11624:
 14366  015506  0E90               	movlw	144
 14367  015508  6EE6               	movwf	postinc1,c
 14368  01550A  0E01               	movlw	1
 14369  01550C  6EE6               	movwf	postinc1,c
 14370  01550E  0E00               	movlw	0
 14371  015510  6EE6               	movwf	postinc1,c
 14372  015512  0E00               	movlw	0
 14373  015514  6EE6               	movwf	postinc1,c
 14374  015516  0E00               	movlw	0
 14375  015518  6EE6               	movwf	postinc1,c
 14376  01551A  0E00               	movlw	0
 14377  01551C  6EE6               	movwf	postinc1,c
 14378  01551E  0E00               	movlw	0
 14379  015520  6EE6               	movwf	postinc1,c
 14380  015522  0E00               	movlw	0
 14381  015524  6EE6               	movwf	postinc1,c
 14382                           
 14383                           ;stkvar	_year @ sp[(-22)+-8]
 14384  015526  0EE2               	movlw	-30
 14385  015528  50E3               	movf	plusw1,w,c
 14386  01552A  0F9C               	addlw	156
 14387  01552C  6E3A               	movwf	(btemp+16)^0,c
 14388  01552E  0EE3               	movlw	-29
 14389  015530  006F FF8C  F03B    	movff	plusw1,btemp+17
 14390  015536  0EFF               	movlw	255
 14391  015538  223B               	addwfc	(btemp+17)^0,f,c
 14392  01553A  0EE4               	movlw	-28
 14393  01553C  006F FF8C  F03C    	movff	plusw1,btemp+18
 14394  015542  0EFF               	movlw	255
 14395  015544  223C               	addwfc	(btemp+18)^0,f,c
 14396  015546  0EE5               	movlw	-27
 14397  015548  006F FF8C  F03D    	movff	plusw1,btemp+19
 14398  01554E  0EFF               	movlw	255
 14399  015550  223D               	addwfc	(btemp+19)^0,f,c
 14400  015552  0EE6               	movlw	-26
 14401  015554  006F FF8C  F03E    	movff	plusw1,btemp+20
 14402  01555A  0EFF               	movlw	255
 14403  01555C  223E               	addwfc	(btemp+20)^0,f,c
 14404  01555E  0EE7               	movlw	-25
 14405  015560  006F FF8C  F03F    	movff	plusw1,btemp+21
 14406  015566  0EFF               	movlw	255
 14407  015568  223F               	addwfc	(btemp+21)^0,f,c
 14408  01556A  0EE8               	movlw	-24
 14409  01556C  006F FF8C  F040    	movff	plusw1,btemp+22
 14410  015572  0EFF               	movlw	255
 14411  015574  2240               	addwfc	(btemp+22)^0,f,c
 14412  015576  0EE9               	movlw	-23
 14413  015578  006F FF8C  F041    	movff	plusw1,btemp+23
 14414  01557E  0EFF               	movlw	255
 14415  015580  2241               	addwfc	(btemp+23)^0,f,c
 14416  015582  0060  F0EB  FFE6   	movff	btemp+16,postinc1
 14417  015588  0060  F0EF  FFE6   	movff	btemp+17,postinc1
 14418  01558E  0060  F0F3  FFE6   	movff	btemp+18,postinc1
 14419  015594  0060  F0F7  FFE6   	movff	btemp+19,postinc1
 14420  01559A  0060  F0FB  FFE6   	movff	btemp+20,postinc1
 14421  0155A0  0060  F0FF  FFE6   	movff	btemp+21,postinc1
 14422  0155A6  0060  F103  FFE6   	movff	btemp+22,postinc1
 14423  0155AC  0060  F107  FFE6   	movff	btemp+23,postinc1
 14424  0155B2  EC24  F0DE         	call	___aodiv	;wreg free
 14425  0155B6  52E5               	movf	postdec1,f,c
 14426  0155B8  006F FF9C  F041    	movff	indf1,btemp+23
 14427  0155BE  52E5               	movf	postdec1,f,c
 14428  0155C0  006F FF9C  F040    	movff	indf1,btemp+22
 14429  0155C6  52E5               	movf	postdec1,f,c
 14430  0155C8  006F FF9C  F03F    	movff	indf1,btemp+21
 14431  0155CE  52E5               	movf	postdec1,f,c
 14432  0155D0  006F FF9C  F03E    	movff	indf1,btemp+20
 14433  0155D6  52E5               	movf	postdec1,f,c
 14434  0155D8  006F FF9C  F03D    	movff	indf1,btemp+19
 14435  0155DE  52E5               	movf	postdec1,f,c
 14436  0155E0  006F FF9C  F03C    	movff	indf1,btemp+18
 14437  0155E6  52E5               	movf	postdec1,f,c
 14438  0155E8  006F FF9C  F03B    	movff	indf1,btemp+17
 14439  0155EE  52E5               	movf	postdec1,f,c
 14440  0155F0  006F FF9C  F03A    	movff	indf1,btemp+16
 14441  0155F6  0EF8               	movlw	248
 14442  0155F8  26E1               	addwf	fsr1l,f,c
 14443  0155FA  0EFF               	movlw	255
 14444  0155FC  22E2               	addwfc	fsr1h,f,c
 14445  0155FE  0060  F0E8  F034   	movff	btemp+16,btemp+10
 14446  015604  0060  F0EC  F035   	movff	btemp+17,btemp+11
 14447                           
 14448                           ;stkvar	_cycles @ sp[(-14)+12]
 14449  01560A  0EFE               	movlw	-2
 14450  01560C  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 14451  015612  0EFF               	movlw	-1
 14452  015614  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 14453  01561A  0E90               	movlw	144
 14454  01561C  6EE6               	movwf	postinc1,c
 14455  01561E  0E01               	movlw	1
 14456  015620  6EE6               	movwf	postinc1,c
 14457  015622  0E00               	movlw	0
 14458  015624  6EE6               	movwf	postinc1,c
 14459  015626  0E00               	movlw	0
 14460  015628  6EE6               	movwf	postinc1,c
 14461  01562A  0E00               	movlw	0
 14462  01562C  6EE6               	movwf	postinc1,c
 14463  01562E  0E00               	movlw	0
 14464  015630  6EE6               	movwf	postinc1,c
 14465  015632  0E00               	movlw	0
 14466  015634  6EE6               	movwf	postinc1,c
 14467  015636  0E00               	movlw	0
 14468  015638  6EE6               	movwf	postinc1,c
 14469                           
 14470                           ;stkvar	_year @ sp[(-22)+-8]
 14471  01563A  0EE2               	movlw	-30
 14472  01563C  50E3               	movf	plusw1,w,c
 14473  01563E  0F9C               	addlw	156
 14474  015640  6E3A               	movwf	(btemp+16)^0,c
 14475  015642  0EE3               	movlw	-29
 14476  015644  006F FF8C  F03B    	movff	plusw1,btemp+17
 14477  01564A  0EFF               	movlw	255
 14478  01564C  223B               	addwfc	(btemp+17)^0,f,c
 14479  01564E  0EE4               	movlw	-28
 14480  015650  006F FF8C  F03C    	movff	plusw1,btemp+18
 14481  015656  0EFF               	movlw	255
 14482  015658  223C               	addwfc	(btemp+18)^0,f,c
 14483  01565A  0EE5               	movlw	-27
 14484  01565C  006F FF8C  F03D    	movff	plusw1,btemp+19
 14485  015662  0EFF               	movlw	255
 14486  015664  223D               	addwfc	(btemp+19)^0,f,c
 14487  015666  0EE6               	movlw	-26
 14488  015668  006F FF8C  F03E    	movff	plusw1,btemp+20
 14489  01566E  0EFF               	movlw	255
 14490  015670  223E               	addwfc	(btemp+20)^0,f,c
 14491  015672  0EE7               	movlw	-25
 14492  015674  006F FF8C  F03F    	movff	plusw1,btemp+21
 14493  01567A  0EFF               	movlw	255
 14494  01567C  223F               	addwfc	(btemp+21)^0,f,c
 14495  01567E  0EE8               	movlw	-24
 14496  015680  006F FF8C  F040    	movff	plusw1,btemp+22
 14497  015686  0EFF               	movlw	255
 14498  015688  2240               	addwfc	(btemp+22)^0,f,c
 14499  01568A  0EE9               	movlw	-23
 14500  01568C  006F FF8C  F041    	movff	plusw1,btemp+23
 14501  015692  0EFF               	movlw	255
 14502  015694  2241               	addwfc	(btemp+23)^0,f,c
 14503  015696  0060  F0EB  FFE6   	movff	btemp+16,postinc1
 14504  01569C  0060  F0EF  FFE6   	movff	btemp+17,postinc1
 14505  0156A2  0060  F0F3  FFE6   	movff	btemp+18,postinc1
 14506  0156A8  0060  F0F7  FFE6   	movff	btemp+19,postinc1
 14507  0156AE  0060  F0FB  FFE6   	movff	btemp+20,postinc1
 14508  0156B4  0060  F0FF  FFE6   	movff	btemp+21,postinc1
 14509  0156BA  0060  F103  FFE6   	movff	btemp+22,postinc1
 14510  0156C0  0060  F107  FFE6   	movff	btemp+23,postinc1
 14511  0156C6  EC10  F0E4         	call	___aomod	;wreg free
 14512  0156CA  52E5               	movf	postdec1,f,c
 14513  0156CC  006F FF9C  F041    	movff	indf1,btemp+23
 14514  0156D2  52E5               	movf	postdec1,f,c
 14515  0156D4  006F FF9C  F040    	movff	indf1,btemp+22
 14516  0156DA  52E5               	movf	postdec1,f,c
 14517  0156DC  006F FF9C  F03F    	movff	indf1,btemp+21
 14518  0156E2  52E5               	movf	postdec1,f,c
 14519  0156E4  006F FF9C  F03E    	movff	indf1,btemp+20
 14520  0156EA  52E5               	movf	postdec1,f,c
 14521  0156EC  006F FF9C  F03D    	movff	indf1,btemp+19
 14522  0156F2  52E5               	movf	postdec1,f,c
 14523  0156F4  006F FF9C  F03C    	movff	indf1,btemp+18
 14524  0156FA  52E5               	movf	postdec1,f,c
 14525  0156FC  006F FF9C  F03B    	movff	indf1,btemp+17
 14526  015702  52E5               	movf	postdec1,f,c
 14527  015704  006F FF9C  F03A    	movff	indf1,btemp+16
 14528  01570A  0EF8               	movlw	248
 14529  01570C  26E1               	addwf	fsr1l,f,c
 14530  01570E  0EFF               	movlw	255
 14531  015710  22E2               	addwfc	fsr1h,f,c
 14532  015712  0060  F0E8  F034   	movff	btemp+16,btemp+10
 14533  015718  0060  F0EC  F035   	movff	btemp+17,btemp+11
 14534                           
 14535                           ;stkvar	_rem @ sp[(-14)+4]
 14536  01571E  0EF6               	movlw	-10
 14537  015720  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 14538  015726  0EF7               	movlw	-9
 14539  015728  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 14540                           
 14541                           ;stkvar	_rem @ sp[(-14)+4]
 14542  01572E  0EF7               	movlw	-9
 14543  015730  AEE3               	btfss	plusw1,7,c
 14544  015732  D015               	goto	l11634
 14545                           
 14546                           ;stkvar	_cycles @ sp[(-14)+12]
 14547  015734  50E1               	movf	fsr1l,w,c
 14548  015736  0FFE               	addlw	-2
 14549  015738  6ED9               	movwf	fsr2l,c
 14550  01573A  50E2               	movf	fsr1h,w,c
 14551  01573C  6EDA               	movwf	fsr2h,c
 14552  01573E  0EFF               	movlw	255
 14553  015740  22DA               	addwfc	fsr2h,f,c
 14554  015742  06DE               	decf	postinc2,f,c
 14555  015744  0E00               	movlw	0
 14556  015746  5ADD               	subwfb	postdec2,f,c
 14557                           
 14558                           ;stkvar	_rem @ sp[(-14)+4]
 14559  015748  50E1               	movf	fsr1l,w,c
 14560  01574A  0FF6               	addlw	-10
 14561  01574C  6ED9               	movwf	fsr2l,c
 14562  01574E  50E2               	movf	fsr1h,w,c
 14563  015750  6EDA               	movwf	fsr2h,c
 14564  015752  0EFF               	movlw	255
 14565  015754  22DA               	addwfc	fsr2h,f,c
 14566  015756  0E90               	movlw	144
 14567  015758  26DE               	addwf	postinc2,f,c
 14568  01575A  0E01               	movlw	1
 14569  01575C  22DD               	addwfc	postdec2,f,c
 14570  01575E                     l11634:
 14571                           
 14572                           ;stkvar	_rem @ sp[(-14)+4]
 14573  01575E  0EF6               	movlw	-10
 14574  015760  006F FF8C  F02A    	movff	plusw1,btemp
 14575  015766  0EF7               	movlw	-9
 14576  015768  50E3               	movf	plusw1,w,c
 14577  01576A  102A               	iorwf	btemp^0,w,c
 14578  01576C  A4D8               	btfss	status,2,c
 14579  01576E  D015               	goto	l11642
 14580                           
 14581                           ;stkvar	_is_leap @ sp[(-14)+-10]
 14582  015770  0EE8               	movlw	-24
 14583  015772  006F FF8F FFD9     	movff	plusw1,fsr2l
 14584  015778  0EE9               	movlw	-23
 14585  01577A  006F FF8F FFDA     	movff	plusw1,fsr2h
 14586  015780  0E01               	movlw	1
 14587  015782  6EDE               	movwf	postinc2,c
 14588  015784  0E00               	movlw	0
 14589  015786  6EDD               	movwf	postdec2,c
 14590                           
 14591                           ;stkvar	_centuries @ sp[(-14)+8]
 14592  015788  0EFA               	movlw	-6
 14593  01578A  6AE3               	clrf	plusw1,c
 14594  01578C  0EFB               	movlw	-5
 14595  01578E  6AE3               	clrf	plusw1,c
 14596  015790                     l11640:
 14597                           
 14598                           ;stkvar	_leaps @ sp[(-14)+10]
 14599  015790  0EFC               	movlw	-4
 14600  015792  6AE3               	clrf	plusw1,c
 14601  015794  0EFD               	movlw	-3
 14602  015796  6AE3               	clrf	plusw1,c
 14603  015798  D0D6               	goto	l11674
 14604  01579A                     l11642:
 14605                           
 14606                           ;stkvar	_rem @ sp[(-14)+4]
 14607  01579A  0EF7               	movlw	-9
 14608  01579C  BEE3               	btfsc	plusw1,7,c
 14609  01579E  D04A               	goto	l11654
 14610  0157A0  0EF7               	movlw	-9
 14611  0157A2  50E3               	movf	plusw1,w,c
 14612  0157A4  E108               	bnz	u10760
 14613  0157A6  0EF6               	movlw	-10
 14614  0157A8  006F FF8C  F02A    	movff	plusw1,btemp
 14615  0157AE  0EC8               	movlw	200
 14616  0157B0  5E2A               	subwf	btemp^0,f,c
 14617  0157B2  A0D8               	btfss	status,0,c
 14618  0157B4  D03F               	goto	l11654
 14619  0157B6                     u10760:
 14620                           
 14621                           ;stkvar	_rem @ sp[(-14)+4]
 14622  0157B6  0EF7               	movlw	-9
 14623  0157B8  BEE3               	btfsc	plusw1,7,c
 14624  0157BA  D025               	goto	l11650
 14625  0157BC  0EF6               	movlw	-10
 14626  0157BE  006F FF8C  F02A    	movff	plusw1,btemp
 14627  0157C4  0E2C               	movlw	44
 14628  0157C6  5E2A               	subwf	btemp^0,f,c
 14629  0157C8  0EF7               	movlw	-9
 14630  0157CA  006F FF8C  F02A    	movff	plusw1,btemp
 14631  0157D0  0E01               	movlw	1
 14632  0157D2  5A2A               	subwfb	btemp^0,f,c
 14633  0157D4  A0D8               	btfss	status,0,c
 14634  0157D6  D017               	goto	l11650
 14635  0157D8  0E03               	movlw	3
 14636  0157DA  6E34               	movwf	(btemp+10)^0,c
 14637  0157DC  0E00               	movlw	0
 14638  0157DE  6E35               	movwf	(btemp+11)^0,c
 14639                           
 14640                           ;stkvar	_centuries @ sp[(-14)+8]
 14641  0157E0  0EFA               	movlw	-6
 14642  0157E2  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 14643  0157E8  0EFB               	movlw	-5
 14644  0157EA  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 14645                           
 14646                           ;stkvar	_rem @ sp[(-14)+4]
 14647  0157F0  50E1               	movf	fsr1l,w,c
 14648  0157F2  0FF6               	addlw	-10
 14649  0157F4  6ED9               	movwf	fsr2l,c
 14650  0157F6  50E2               	movf	fsr1h,w,c
 14651  0157F8  6EDA               	movwf	fsr2h,c
 14652  0157FA  0EFF               	movlw	255
 14653  0157FC  22DA               	addwfc	fsr2h,f,c
 14654  0157FE  0ED4               	movlw	212
 14655  015800  26DE               	addwf	postinc2,f,c
 14656  015802  0EFE               	movlw	254
 14657  015804  D015               	goto	L14
 14658  015806                     l11650:
 14659  015806  0E02               	movlw	2
 14660  015808  6E34               	movwf	(btemp+10)^0,c
 14661  01580A  0E00               	movlw	0
 14662  01580C  6E35               	movwf	(btemp+11)^0,c
 14663                           
 14664                           ;stkvar	_centuries @ sp[(-14)+8]
 14665  01580E  0EFA               	movlw	-6
 14666  015810  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 14667  015816  0EFB               	movlw	-5
 14668  015818  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 14669                           
 14670                           ;stkvar	_rem @ sp[(-14)+4]
 14671  01581E  50E1               	movf	fsr1l,w,c
 14672  015820  0FF6               	addlw	-10
 14673  015822  6ED9               	movwf	fsr2l,c
 14674  015824  50E2               	movf	fsr1h,w,c
 14675  015826  6EDA               	movwf	fsr2h,c
 14676  015828  0EFF               	movlw	255
 14677  01582A  22DA               	addwfc	fsr2h,f,c
 14678  01582C  0E38               	movlw	56
 14679  01582E  D024               	goto	L15
 14680  015830                     L14:
 14681  015830  22DD               	addwfc	postdec2,f,c
 14682  015832  D029               	goto	l11662
 14683  015834                     l11654:
 14684                           
 14685                           ;stkvar	_rem @ sp[(-14)+4]
 14686  015834  0EF7               	movlw	-9
 14687  015836  BEE3               	btfsc	plusw1,7,c
 14688  015838  D022               	goto	l11660
 14689  01583A  0EF7               	movlw	-9
 14690  01583C  50E3               	movf	plusw1,w,c
 14691  01583E  E108               	bnz	u10780
 14692  015840  0EF6               	movlw	-10
 14693  015842  006F FF8C  F02A    	movff	plusw1,btemp
 14694  015848  0E64               	movlw	100
 14695  01584A  5E2A               	subwf	btemp^0,f,c
 14696  01584C  A0D8               	btfss	status,0,c
 14697  01584E  D017               	goto	l11660
 14698  015850                     u10780:
 14699  015850  0E01               	movlw	1
 14700  015852  6E34               	movwf	(btemp+10)^0,c
 14701  015854  0E00               	movlw	0
 14702  015856  6E35               	movwf	(btemp+11)^0,c
 14703                           
 14704                           ;stkvar	_centuries @ sp[(-14)+8]
 14705  015858  0EFA               	movlw	-6
 14706  01585A  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 14707  015860  0EFB               	movlw	-5
 14708  015862  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 14709                           
 14710                           ;stkvar	_rem @ sp[(-14)+4]
 14711  015868  50E1               	movf	fsr1l,w,c
 14712  01586A  0FF6               	addlw	-10
 14713  01586C  6ED9               	movwf	fsr2l,c
 14714  01586E  50E2               	movf	fsr1h,w,c
 14715  015870  6EDA               	movwf	fsr2h,c
 14716  015872  0EFF               	movlw	255
 14717  015874  22DA               	addwfc	fsr2h,f,c
 14718  015876  0E9C               	movlw	156
 14719  015878                     L15:
 14720  015878  26DE               	addwf	postinc2,f,c
 14721  01587A  0EFF               	movlw	255
 14722  01587C  D7D9               	goto	L14
 14723  01587E                     l11660:
 14724                           
 14725                           ;stkvar	_centuries @ sp[(-14)+8]
 14726  01587E  0EFA               	movlw	-6
 14727  015880  6AE3               	clrf	plusw1,c
 14728  015882  0EFB               	movlw	-5
 14729  015884  6AE3               	clrf	plusw1,c
 14730  015886                     l11662:
 14731                           
 14732                           ;stkvar	_rem @ sp[(-14)+4]
 14733  015886  0EF6               	movlw	-10
 14734  015888  006F FF8C  F02A    	movff	plusw1,btemp
 14735  01588E  0EF7               	movlw	-9
 14736  015890  50E3               	movf	plusw1,w,c
 14737  015892  102A               	iorwf	btemp^0,w,c
 14738  015894  A4D8               	btfss	status,2,c
 14739  015896  D00D               	goto	l11668
 14740                           
 14741                           ;stkvar	_is_leap @ sp[(-14)+-10]
 14742  015898  0EE8               	movlw	-24
 14743  01589A  006F FF8F FFD9     	movff	plusw1,fsr2l
 14744  0158A0  0EE9               	movlw	-23
 14745  0158A2  006F FF8F FFDA     	movff	plusw1,fsr2h
 14746  0158A8  0E00               	movlw	0
 14747  0158AA  6EDE               	movwf	postinc2,c
 14748  0158AC  0E00               	movlw	0
 14749  0158AE  6EDD               	movwf	postdec2,c
 14750  0158B0  D76F               	goto	l11640
 14751  0158B2                     l11668:
 14752                           
 14753                           ;stkvar	_rem @ sp[(-14)+4]
 14754  0158B2  0EF6               	movlw	-10
 14755  0158B4  006F FF8C  F034    	movff	plusw1,btemp+10
 14756  0158BA  0EF7               	movlw	-9
 14757  0158BC  006F FF8C  F035    	movff	plusw1,btemp+11
 14758  0158C2  90D8               	bcf	status,0,c
 14759  0158C4  3235               	rrcf	(btemp+11)^0,f,c
 14760  0158C6  3234               	rrcf	(btemp+10)^0,f,c
 14761  0158C8  90D8               	bcf	status,0,c
 14762  0158CA  3235               	rrcf	(btemp+11)^0,f,c
 14763  0158CC  3234               	rrcf	(btemp+10)^0,f,c
 14764                           
 14765                           ;stkvar	_leaps @ sp[(-14)+10]
 14766  0158CE  0EFC               	movlw	-4
 14767  0158D0  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 14768  0158D6  0EFD               	movlw	-3
 14769  0158D8  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 14770  0158DE  0E03               	movlw	3
 14771  0158E0  6E34               	movwf	(btemp+10)^0,c
 14772  0158E2  0E00               	movlw	0
 14773  0158E4  6E35               	movwf	(btemp+11)^0,c
 14774                           
 14775                           ;stkvar	_rem @ sp[(-14)+4]
 14776  0158E6  0EF6               	movlw	-10
 14777  0158E8  006F FF8C  F02A    	movff	plusw1,btemp
 14778  0158EE  5034               	movf	(btemp+10)^0,w,c
 14779  0158F0  162A               	andwf	btemp^0,f,c
 14780  0158F2  0EF6               	movlw	-10
 14781  0158F4  0060  F0AB  FFE3   	movff	btemp,plusw1
 14782  0158FA  0EF7               	movlw	-9
 14783  0158FC  006F FF8C  F02A    	movff	plusw1,btemp
 14784  015902  5035               	movf	(btemp+11)^0,w,c
 14785  015904  162A               	andwf	btemp^0,f,c
 14786  015906  0EF7               	movlw	-9
 14787  015908  0060  F0AB  FFE3   	movff	btemp,plusw1
 14788                           
 14789                           ;stkvar	_rem @ sp[(-14)+4]
 14790  01590E  0EF6               	movlw	-10
 14791  015910  006F FF8C  F02A    	movff	plusw1,btemp
 14792  015916  0EF7               	movlw	-9
 14793  015918  50E3               	movf	plusw1,w,c
 14794  01591A  102A               	iorwf	btemp^0,w,c
 14795  01591C  A4D8               	btfss	status,2,c
 14796  01591E  D002               	goto	u10800
 14797  015920  0E01               	movlw	1
 14798  015922  D001               	goto	u10810
 14799  015924                     u10800:
 14800  015924  0E00               	movlw	0
 14801  015926                     u10810:
 14802  015926  6E34               	movwf	(btemp+10)^0,c
 14803  015928  6A35               	clrf	(btemp+11)^0,c
 14804                           
 14805                           ;stkvar	_is_leap @ sp[(-14)+-10]
 14806  01592A  0EE8               	movlw	-24
 14807  01592C  006F FF8F FFD9     	movff	plusw1,fsr2l
 14808  015932  0EE9               	movlw	-23
 14809  015934  006F FF8F FFDA     	movff	plusw1,fsr2h
 14810  01593A  0060  F0D3  FFDE   	movff	btemp+10,postinc2
 14811  015940  0060  F0D7  FFDD   	movff	btemp+11,postdec2
 14812  015946                     l11674:
 14813                           
 14814                           ;stkvar	_is_leap @ sp[(-14)+-10]
 14815  015946  0EE8               	movlw	-24
 14816  015948  006F FF8F FFD9     	movff	plusw1,fsr2l
 14817  01594E  0EE9               	movlw	-23
 14818  015950  006F FF8F FFDA     	movff	plusw1,fsr2h
 14819  015956  006F FF78  F034    	movff	postinc2,btemp+10
 14820  01595C  006F FF74  F035    	movff	postdec2,btemp+11
 14821                           
 14822                           ;stkvar	_centuries @ sp[(-14)+8]
 14823  015962  0EFA               	movlw	-6
 14824  015964  006F FF8C  F032    	movff	plusw1,btemp+8
 14825  01596A  0EFB               	movlw	-5
 14826  01596C  006F FF8C  F033    	movff	plusw1,btemp+9
 14827  015972  0E18               	movlw	24
 14828  015974  0232               	mulwf	(btemp+8)^0,c
 14829  015976  006F FFCC  F030    	movff	prodl,btemp+6
 14830  01597C  006F FFD0  F031    	movff	prodh,btemp+7
 14831  015982  0233               	mulwf	(btemp+9)^0,c
 14832  015984  50F3               	movf	prodl,w,c
 14833  015986  2631               	addwf	(btemp+7)^0,f,c
 14834                           
 14835                           ;stkvar	_cycles @ sp[(-14)+12]
 14836  015988  0EFE               	movlw	-2
 14837  01598A  006F FF8C  F032    	movff	plusw1,btemp+8
 14838  015990  0EFF               	movlw	-1
 14839  015992  006F FF8C  F033    	movff	plusw1,btemp+9
 14840  015998  0E61               	movlw	97
 14841  01599A  0232               	mulwf	(btemp+8)^0,c
 14842  01599C  006F FFCC  F02E    	movff	prodl,btemp+4
 14843  0159A2  006F FFD0  F02F    	movff	prodh,btemp+5
 14844  0159A8  0233               	mulwf	(btemp+9)^0,c
 14845  0159AA  50F3               	movf	prodl,w,c
 14846  0159AC  262F               	addwf	(btemp+5)^0,f,c
 14847  0159AE  5030               	movf	(btemp+6)^0,w,c
 14848  0159B0  262E               	addwf	(btemp+4)^0,f,c
 14849  0159B2  5031               	movf	(btemp+7)^0,w,c
 14850  0159B4  222F               	addwfc	(btemp+5)^0,f,c
 14851  0159B6  5034               	movf	(btemp+10)^0,w,c
 14852  0159B8  5E2E               	subwf	(btemp+4)^0,f,c
 14853  0159BA  5035               	movf	(btemp+11)^0,w,c
 14854  0159BC  5A2F               	subwfb	(btemp+5)^0,f,c
 14855                           
 14856                           ;stkvar	_leaps @ sp[(-14)+10]
 14857  0159BE  50E1               	movf	fsr1l,w,c
 14858  0159C0  0FFC               	addlw	-4
 14859  0159C2  6ED9               	movwf	fsr2l,c
 14860  0159C4  50E2               	movf	fsr1h,w,c
 14861  0159C6  6EDA               	movwf	fsr2h,c
 14862  0159C8  0EFF               	movlw	255
 14863  0159CA  22DA               	addwfc	fsr2h,f,c
 14864  0159CC  502E               	movf	(btemp+4)^0,w,c
 14865  0159CE  26DE               	addwf	postinc2,f,c
 14866  0159D0  502F               	movf	(btemp+5)^0,w,c
 14867  0159D2  22DD               	addwfc	postdec2,f,c
 14868  0159D4  0E80               	movlw	128
 14869  0159D6  6EE6               	movwf	postinc1,c
 14870  0159D8  0E51               	movlw	81
 14871  0159DA  6EE6               	movwf	postinc1,c
 14872  0159DC  0E01               	movlw	1
 14873  0159DE  6EE6               	movwf	postinc1,c
 14874  0159E0  0E00               	movlw	0
 14875  0159E2  6EE6               	movwf	postinc1,c
 14876  0159E4  0E00               	movlw	0
 14877  0159E6  6EE6               	movwf	postinc1,c
 14878  0159E8  0E00               	movlw	0
 14879  0159EA  6EE6               	movwf	postinc1,c
 14880  0159EC  0E00               	movlw	0
 14881  0159EE  6EE6               	movwf	postinc1,c
 14882  0159F0  0E00               	movlw	0
 14883  0159F2  6EE6               	movwf	postinc1,c
 14884                           
 14885                           ;stkvar	_leaps @ sp[(-22)+10]
 14886  0159F4  0EF4               	movlw	-12
 14887  0159F6  006F FF8C  F03A    	movff	plusw1,btemp+16
 14888  0159FC  0EF5               	movlw	-11
 14889  0159FE  006F FF8C  F03B    	movff	plusw1,btemp+17
 14890  015A04  6A3C               	clrf	(btemp+18)^0,c
 14891  015A06  BE3B               	btfsc	(btemp+17)^0,7,c
 14892  015A08  683C               	setf	(btemp+18)^0,c
 14893  015A0A  0060  F0F0  F03D   	movff	btemp+18,btemp+19
 14894  015A10  0060  F0F0  F03E   	movff	btemp+18,btemp+20
 14895  015A16  0060  F0F0  F03F   	movff	btemp+18,btemp+21
 14896  015A1C  0060  F0F0  F040   	movff	btemp+18,btemp+22
 14897  015A22  0060  F0F0  F041   	movff	btemp+18,btemp+23
 14898  015A28  0060  F0EB  FFE6   	movff	btemp+16,postinc1
 14899  015A2E  0060  F0EF  FFE6   	movff	btemp+17,postinc1
 14900  015A34  0060  F0F3  FFE6   	movff	btemp+18,postinc1
 14901  015A3A  0060  F0F7  FFE6   	movff	btemp+19,postinc1
 14902  015A40  0060  F0FB  FFE6   	movff	btemp+20,postinc1
 14903  015A46  0060  F0FF  FFE6   	movff	btemp+21,postinc1
 14904  015A4C  0060  F103  FFE6   	movff	btemp+22,postinc1
 14905  015A52  0060  F107  FFE6   	movff	btemp+23,postinc1
 14906  015A58  EC1B  F0F5         	call	___omul	;wreg free
 14907  015A5C  52E5               	movf	postdec1,f,c
 14908  015A5E  006F FF9C  F041    	movff	indf1,btemp+23
 14909  015A64  52E5               	movf	postdec1,f,c
 14910  015A66  006F FF9C  F040    	movff	indf1,btemp+22
 14911  015A6C  52E5               	movf	postdec1,f,c
 14912  015A6E  006F FF9C  F03F    	movff	indf1,btemp+21
 14913  015A74  52E5               	movf	postdec1,f,c
 14914  015A76  006F FF9C  F03E    	movff	indf1,btemp+20
 14915  015A7C  52E5               	movf	postdec1,f,c
 14916  015A7E  006F FF9C  F03D    	movff	indf1,btemp+19
 14917  015A84  52E5               	movf	postdec1,f,c
 14918  015A86  006F FF9C  F03C    	movff	indf1,btemp+18
 14919  015A8C  52E5               	movf	postdec1,f,c
 14920  015A8E  006F FF9C  F03B    	movff	indf1,btemp+17
 14921  015A94  52E5               	movf	postdec1,f,c
 14922  015A96  006F FF9C  F03A    	movff	indf1,btemp+16
 14923  015A9C  0EF8               	movlw	248
 14924  015A9E  26E1               	addwf	fsr1l,f,c
 14925  015AA0  0EFF               	movlw	255
 14926  015AA2  22E2               	addwfc	fsr1h,f,c
 14927  015AA4  0E80               	movlw	128
 14928  015AA6  6EE6               	movwf	postinc1,c
 14929  015AA8  0E33               	movlw	51
 14930  015AAA  6EE6               	movwf	postinc1,c
 14931  015AAC  0EE1               	movlw	225
 14932  015AAE  6EE6               	movwf	postinc1,c
 14933  015AB0  0E01               	movlw	1
 14934  015AB2  6EE6               	movwf	postinc1,c
 14935  015AB4  0E00               	movlw	0
 14936  015AB6  6EE6               	movwf	postinc1,c
 14937  015AB8  0E00               	movlw	0
 14938  015ABA  6EE6               	movwf	postinc1,c
 14939  015ABC  0E00               	movlw	0
 14940  015ABE  6EE6               	movwf	postinc1,c
 14941  015AC0  0E00               	movlw	0
 14942  015AC2  6EE6               	movwf	postinc1,c
 14943                           
 14944                           ;stkvar	_year @ sp[(-22)+-8]
 14945  015AC4  50E1               	movf	fsr1l,w,c
 14946  015AC6  0FE2               	addlw	-30
 14947  015AC8  6ED9               	movwf	fsr2l,c
 14948  015ACA  50E2               	movf	fsr1h,w,c
 14949  015ACC  6EDA               	movwf	fsr2h,c
 14950  015ACE  0EFF               	movlw	255
 14951  015AD0  22DA               	addwfc	fsr2h,f,c
 14952  015AD2  006F FF7B FFE6     	movff	postinc2,postinc1
 14953  015AD8  006F FF7B FFE6     	movff	postinc2,postinc1
 14954  015ADE  006F FF7B FFE6     	movff	postinc2,postinc1
 14955  015AE4  006F FF7B FFE6     	movff	postinc2,postinc1
 14956  015AEA  006F FF7B FFE6     	movff	postinc2,postinc1
 14957  015AF0  006F FF7B FFE6     	movff	postinc2,postinc1
 14958  015AF6  006F FF7B FFE6     	movff	postinc2,postinc1
 14959  015AFC  006F FF7B FFE6     	movff	postinc2,postinc1
 14960  015B02  EC1B  F0F5         	call	___omul	;wreg free
 14961  015B06  52E5               	movf	postdec1,f,c
 14962  015B08  006F FF9C  F049    	movff	indf1,btemp+31
 14963  015B0E  52E5               	movf	postdec1,f,c
 14964  015B10  006F FF9C  F048    	movff	indf1,btemp+30
 14965  015B16  52E5               	movf	postdec1,f,c
 14966  015B18  006F FF9C  F047    	movff	indf1,btemp+29
 14967  015B1E  52E5               	movf	postdec1,f,c
 14968  015B20  006F FF9C  F046    	movff	indf1,btemp+28
 14969  015B26  52E5               	movf	postdec1,f,c
 14970  015B28  006F FF9C  F045    	movff	indf1,btemp+27
 14971  015B2E  52E5               	movf	postdec1,f,c
 14972  015B30  006F FF9C  F044    	movff	indf1,btemp+26
 14973  015B36  52E5               	movf	postdec1,f,c
 14974  015B38  006F FF9C  F043    	movff	indf1,btemp+25
 14975  015B3E  52E5               	movf	postdec1,f,c
 14976  015B40  006F FF9C  F042    	movff	indf1,btemp+24
 14977  015B46  0EF8               	movlw	248
 14978  015B48  26E1               	addwf	fsr1l,f,c
 14979  015B4A  0EFF               	movlw	255
 14980  015B4C  22E2               	addwfc	fsr1h,f,c
 14981  015B4E  503A               	movf	(btemp+16)^0,w,c
 14982  015B50  2442               	addwf	(btemp+24)^0,w,c
 14983  015B52  6E32               	movwf	(btemp+8)^0,c
 14984  015B54  503B               	movf	(btemp+17)^0,w,c
 14985  015B56  2043               	addwfc	(btemp+25)^0,w,c
 14986  015B58  6E33               	movwf	(btemp+9)^0,c
 14987  015B5A  503C               	movf	(btemp+18)^0,w,c
 14988  015B5C  2044               	addwfc	(btemp+26)^0,w,c
 14989  015B5E  6E34               	movwf	(btemp+10)^0,c
 14990  015B60  503D               	movf	(btemp+19)^0,w,c
 14991  015B62  2045               	addwfc	(btemp+27)^0,w,c
 14992  015B64  6E35               	movwf	(btemp+11)^0,c
 14993  015B66  503E               	movf	(btemp+20)^0,w,c
 14994  015B68  2046               	addwfc	(btemp+28)^0,w,c
 14995  015B6A  6E36               	movwf	(btemp+12)^0,c
 14996  015B6C  503F               	movf	(btemp+21)^0,w,c
 14997  015B6E  2047               	addwfc	(btemp+29)^0,w,c
 14998  015B70  6E37               	movwf	(btemp+13)^0,c
 14999  015B72  5040               	movf	(btemp+22)^0,w,c
 15000  015B74  2048               	addwfc	(btemp+30)^0,w,c
 15001  015B76  6E38               	movwf	(btemp+14)^0,c
 15002  015B78  5041               	movf	(btemp+23)^0,w,c
 15003  015B7A  2049               	addwfc	(btemp+31)^0,w,c
 15004  015B7C  6E39               	movwf	(btemp+15)^0,c
 15005  015B7E  0E00               	movlw	0
 15006  015B80  2432               	addwf	(btemp+8)^0,w,c
 15007  015B82  6E3A               	movwf	(btemp+16)^0,c
 15008  015B84  0E77               	movlw	119
 15009  015B86  2033               	addwfc	(btemp+9)^0,w,c
 15010  015B88  6E3B               	movwf	(btemp+17)^0,c
 15011  015B8A  0E76               	movlw	118
 15012  015B8C  2034               	addwfc	(btemp+10)^0,w,c
 15013  015B8E  6E3C               	movwf	(btemp+18)^0,c
 15014  015B90  0E7C               	movlw	124
 15015  015B92  2035               	addwfc	(btemp+11)^0,w,c
 15016  015B94  6E3D               	movwf	(btemp+19)^0,c
 15017  015B96  0EFF               	movlw	255
 15018  015B98  2036               	addwfc	(btemp+12)^0,w,c
 15019  015B9A  6E3E               	movwf	(btemp+20)^0,c
 15020  015B9C  0EFF               	movlw	255
 15021  015B9E  2037               	addwfc	(btemp+13)^0,w,c
 15022  015BA0  6E3F               	movwf	(btemp+21)^0,c
 15023  015BA2  0EFF               	movlw	255
 15024  015BA4  2038               	addwfc	(btemp+14)^0,w,c
 15025  015BA6  6E40               	movwf	(btemp+22)^0,c
 15026  015BA8  0EFF               	movlw	255
 15027  015BAA  2039               	addwfc	(btemp+15)^0,w,c
 15028  015BAC  6E41               	movwf	(btemp+23)^0,c
 15029  015BAE                     L13:
 15030                           
 15031                           ;stkvar	?___year_to_secs @ sp[(-14)+-8]
 15032  015BAE  0EEA               	movlw	-22
 15033  015BB0  0060  F0EB  FFE3   	movff	btemp+16,plusw1
 15034  015BB6  0EEB               	movlw	-21
 15035  015BB8  0060  F0EF  FFE3   	movff	btemp+17,plusw1
 15036  015BBE  0EEC               	movlw	-20
 15037  015BC0  0060  F0F3  FFE3   	movff	btemp+18,plusw1
 15038  015BC6  0EED               	movlw	-19
 15039  015BC8  0060  F0F7  FFE3   	movff	btemp+19,plusw1
 15040  015BCE  0EEE               	movlw	-18
 15041  015BD0  0060  F0FB  FFE3   	movff	btemp+20,plusw1
 15042  015BD6  0EEF               	movlw	-17
 15043  015BD8  0060  F0FF  FFE3   	movff	btemp+21,plusw1
 15044  015BDE  0EF0               	movlw	-16
 15045  015BE0  0060  F103  FFE3   	movff	btemp+22,plusw1
 15046  015BE6  0EF1               	movlw	-15
 15047  015BE8  0060  F107  FFE3   	movff	btemp+23,plusw1
 15048                           
 15049                           ; ___year_to_secs: autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          10, argsize = 10, vargsize = 0
 15050  015BEE  0EF2               	movlw	242
 15051  015BF0  26E1               	addwf	fsr1l,f,c
 15052  015BF2  0EFF               	movlw	255
 15053  015BF4  22E2               	addwfc	fsr1h,f,c
 15054  015BF6  0012               	return		;funcret
 15055  015BF8                     __end_of___year_to_secs:
 15056                           	opt callstack 0
 15057                           
 15058 ;; *************** function ___month_to_secs *****************
 15059 ;; Defined at:
 15060 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__month_to_secs.c"
 15061 ;; Parameters:    Size  Location     Type
 15062 ;;  month           2  [STACK] int 
 15063 ;;  is_leap         2  [STACK] int 
 15064 ;; Auto vars:     Size  Location     Type
 15065 ;;  t               4  [STACK] long 
 15066 ;; Return value:  Size  Location     Type
 15067 ;;                  4  [STACK] long 
 15068 ;; Registers used:
 15069 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11, tblptrl, tblptrh, tblptru, prodl
 15070 ;; Tracked objects:
 15071 ;;		On entry : 0/0
 15072 ;;		On exit  : 0/0
 15073 ;;		Unchanged: 0/0
 15074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15075 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15076 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15077 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15078 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15079 ;;Total ram usage:        0 bytes
 15080 ;; Hardware stack levels used:    1
 15081 ;; Hardware stack levels required when called:   15
 15082 ;; This function calls:
 15083 ;;		Nothing
 15084 ;; This function is called by:
 15085 ;;		_rule_to_secs
 15086 ;; This function uses a reentrant model
 15087 ;;
 15088                           
 15089                           	psect	text43
 15090  01FC52                     __ptext43:
 15091                           	opt callstack 0
 15092  01FC52                     ___month_to_secs:
 15093                           	opt callstack 0
 15094                           
 15095                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15096  01FC52  52E6               	movf	postinc1,f,c
 15097  01FC54  52E6               	movf	postinc1,f,c
 15098  01FC56  52E6               	movf	postinc1,f,c
 15099  01FC58  52E6               	movf	postinc1,f,c
 15100                           
 15101                           ;stkvar	_month @ sp[(-4)+-2]
 15102                           
 15103                           ;incstack = 0
 15104  01FC5A  0EFA               	movlw	-6
 15105  01FC5C  006F FF8C  F034    	movff	plusw1,btemp+10
 15106  01FC62  0EFB               	movlw	-5
 15107  01FC64  006F FF8C  F035    	movff	plusw1,btemp+11
 15108  01FC6A  90D8               	bcf	status,0,c
 15109  01FC6C  3634               	rlcf	(btemp+10)^0,f,c
 15110  01FC6E  3635               	rlcf	(btemp+11)^0,f,c
 15111  01FC70  90D8               	bcf	status,0,c
 15112  01FC72  3634               	rlcf	(btemp+10)^0,f,c
 15113  01FC74  3635               	rlcf	(btemp+11)^0,f,c
 15114  01FC76  0E7B               	movlw	low ___month_to_secs@secs_through_month
 15115  01FC78  2434               	addwf	(btemp+10)^0,w,c
 15116  01FC7A  6EF6               	movwf	tblptrl,c
 15117  01FC7C  0EF8               	movlw	high ___month_to_secs@secs_through_month
 15118  01FC7E  2035               	addwfc	(btemp+11)^0,w,c
 15119  01FC80  6EF7               	movwf	tblptrh,c
 15120  01FC82                     	if	1	;There are 3 active tblptr bytes
 15121  01FC82  6AF8               	clrf	tblptru,c
 15122  01FC84  0E00               	movlw	low (__mediumconst shr (0+16))
 15123  01FC86  22F8               	addwfc	tblptru,f,c
 15124  01FC88                     	endif
 15125  01FC88  0009               	tblrd		*+
 15126  01FC8A  006F FFD4  F032    	movff	tablat,btemp+8
 15127  01FC90  0009               	tblrd		*+
 15128  01FC92  006F FFD4  F033    	movff	tablat,btemp+9
 15129  01FC98  0009               	tblrd		*+
 15130  01FC9A  006F FFD4  F034    	movff	tablat,btemp+10
 15131  01FCA0  0009               	tblrd		*+
 15132  01FCA2  006F FFD4  F035    	movff	tablat,btemp+11
 15133                           
 15134                           ;stkvar	_t @ sp[(-4)+0]
 15135  01FCA8  0EFC               	movlw	-4
 15136  01FCAA  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 15137  01FCB0  0EFD               	movlw	-3
 15138  01FCB2  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 15139  01FCB8  0EFE               	movlw	-2
 15140  01FCBA  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 15141  01FCC0  0EFF               	movlw	-1
 15142  01FCC2  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 15143                           
 15144                           ;stkvar	_is_leap @ sp[(-4)+-4]
 15145  01FCC8  0EF8               	movlw	-8
 15146  01FCCA  006F FF8C  F02A    	movff	plusw1,btemp
 15147  01FCD0  0EF9               	movlw	-7
 15148  01FCD2  50E3               	movf	plusw1,w,c
 15149  01FCD4  102A               	iorwf	btemp^0,w,c
 15150  01FCD6  B4D8               	btfsc	status,2,c
 15151  01FCD8  D01D               	goto	l11688
 15152                           
 15153                           ;stkvar	_month @ sp[(-4)+-2]
 15154  01FCDA  0EFB               	movlw	-5
 15155  01FCDC  BEE3               	btfsc	plusw1,7,c
 15156  01FCDE  D01A               	goto	l11688
 15157  01FCE0  0EFB               	movlw	-5
 15158  01FCE2  50E3               	movf	plusw1,w,c
 15159  01FCE4  E108               	bnz	u10830
 15160  01FCE6  0EFA               	movlw	-6
 15161  01FCE8  006F FF8C  F02A    	movff	plusw1,btemp
 15162  01FCEE  0E02               	movlw	2
 15163  01FCF0  5E2A               	subwf	btemp^0,f,c
 15164  01FCF2  A0D8               	btfss	status,0,c
 15165  01FCF4  D00F               	goto	l11688
 15166  01FCF6                     u10830:
 15167                           
 15168                           ;stkvar	_t @ sp[(-4)+0]
 15169  01FCF6  50E1               	movf	fsr1l,w,c
 15170  01FCF8  0FFC               	addlw	-4
 15171  01FCFA  6ED9               	movwf	fsr2l,c
 15172  01FCFC  50E2               	movf	fsr1h,w,c
 15173  01FCFE  6EDA               	movwf	fsr2h,c
 15174  01FD00  0EFF               	movlw	255
 15175  01FD02  22DA               	addwfc	fsr2h,f,c
 15176  01FD04  0E80               	movlw	128
 15177  01FD06  26DE               	addwf	postinc2,f,c
 15178  01FD08  0E51               	movlw	81
 15179  01FD0A  22DE               	addwfc	postinc2,f,c
 15180  01FD0C  0E01               	movlw	1
 15181  01FD0E  22DE               	addwfc	postinc2,f,c
 15182  01FD10  0E00               	movlw	0
 15183  01FD12  22DE               	addwfc	postinc2,f,c
 15184  01FD14                     l11688:
 15185                           
 15186                           ;stkvar	_t @ sp[(-4)+0]
 15187  01FD14  0EFC               	movlw	-4
 15188  01FD16  006F FF8C  F02A    	movff	plusw1,btemp
 15189  01FD1C  0EFD               	movlw	-3
 15190  01FD1E  006F FF8C  F02B    	movff	plusw1,btemp+1
 15191  01FD24  0EFE               	movlw	-2
 15192  01FD26  006F FF8C  F02C    	movff	plusw1,btemp+2
 15193  01FD2C  0EFF               	movlw	-1
 15194  01FD2E  006F FF8C  F02D    	movff	plusw1,btemp+3
 15195                           
 15196                           ; ___month_to_secs: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          4, argsize = 4, vargsize = 0
 15197  01FD34  0EF8               	movlw	248
 15198  01FD36  26E1               	addwf	fsr1l,f,c
 15199  01FD38  0EFF               	movlw	255
 15200  01FD3A  22E2               	addwfc	fsr1h,f,c
 15201  01FD3C  0012               	return		;funcret
 15202  01FD3E                     __end_of___month_to_secs:
 15203                           	opt callstack 0
 15204                           
 15205 ;; *************** function _do_tzset *****************
 15206 ;; Defined at:
 15207 ;;		line 118 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__tz.c"
 15208 ;; Parameters:    Size  Location     Type
 15209 ;;		None
 15210 ;; Auto vars:     Size  Location     Type
 15211 ;;  s               2  [STACK] PTR const unsigned char 
 15212 ;;		 -> __gmt(4), 
 15213 ;; Return value:  Size  Location     Type
 15214 ;;                  1  [STACK] void 
 15215 ;; Registers used:
 15216 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, 
      +btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 15217 ;; Tracked objects:
 15218 ;;		On entry : 0/39
 15219 ;;		On exit  : 0/0
 15220 ;;		Unchanged: 0/0
 15221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15222 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15223 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15224 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15225 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15226 ;;Total ram usage:        0 bytes
 15227 ;; Hardware stack levels used:    1
 15228 ;; Hardware stack levels required when called:   18
 15229 ;; This function calls:
 15230 ;;		_getname
 15231 ;;		_getoff
 15232 ;;		_getrule
 15233 ;; This function is called by:
 15234 ;;		___secs_to_zone
 15235 ;; This function uses a reentrant model
 15236 ;;
 15237                           
 15238                           	psect	text44
 15239  01B748                     __ptext44:
 15240                           	opt callstack 0
 15241  01B748                     _do_tzset:
 15242                           	opt callstack 0
 15243                           
 15244                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15245  01B748  52E6               	movf	postinc1,f,c
 15246  01B74A  52E6               	movf	postinc1,f,c
 15247                           
 15248                           ;stkvar	_s @ sp[(-2)+0]
 15249                           
 15250                           ;incstack = 0
 15251  01B74C  0EF9               	movlw	high ___gmt
 15252  01B74E  6E2A               	movwf	btemp^0,c
 15253  01B750  0EFF               	movlw	-1
 15254  01B752  0060  F0AB  FFE3   	movff	btemp,plusw1
 15255  01B758  0EE7               	movlw	low ___gmt
 15256  01B75A  6E2A               	movwf	btemp^0,c
 15257  01B75C  0EFE               	movlw	-2
 15258  01B75E  0060  F0AB  FFE3   	movff	btemp,plusw1
 15259                           
 15260                           ;stkvar	_s @ sp[(-2)+0]
 15261  01B764  0EFE               	movlw	254
 15262  01B766  24E1               	addwf	fsr1l,w,c
 15263  01B768  6E2A               	movwf	btemp^0,c
 15264  01B76A  0EFF               	movlw	255
 15265  01B76C  20E2               	addwfc	fsr1h,w,c
 15266  01B76E  6E2B               	movwf	(btemp+1)^0,c
 15267  01B770  0060  F0AB  FFE6   	movff	btemp,postinc1
 15268  01B776  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 15269  01B77C  0EF6               	movlw	low _std_name
 15270  01B77E  6EE6               	movwf	postinc1,c
 15271  01B780  0E01               	movlw	high _std_name
 15272  01B782  6EE6               	movwf	postinc1,c
 15273  01B784  EC78  F0D4         	call	_getname	;wreg free
 15274  01B788  0EF6               	movlw	low _std_name
 15275  01B78A  0100               	movlb	0	; () banked
 15276  01B78C  6F6C               	movwf	___tzname& (0+255),b
 15277  01B78E  0E01               	movlw	high _std_name
 15278  01B790  6F6D               	movwf	(___tzname+1)& (0+255),b
 15279                           
 15280                           ; BSR set to: 0
 15281                           ;stkvar	_s @ sp[(-2)+0]
 15282  01B792  0EFE               	movlw	254
 15283  01B794  24E1               	addwf	fsr1l,w,c
 15284  01B796  6E2A               	movwf	btemp^0,c
 15285  01B798  0EFF               	movlw	255
 15286  01B79A  20E2               	addwfc	fsr1h,w,c
 15287  01B79C  6E2B               	movwf	(btemp+1)^0,c
 15288  01B79E  0060  F0AB  FFE6   	movff	btemp,postinc1
 15289  01B7A4  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 15290  01B7AA  EC30  F0E5         	call	_getoff	;wreg free
 15291  01B7AE  0060  F0A8  F070   	movff	btemp,___timezone
 15292  01B7B4  0060  F0AC  F071   	movff	btemp+1,___timezone+1
 15293  01B7BA  0100               	movlb	0	; () banked
 15294  01B7BC  0E00               	movlw	0
 15295  01B7BE  BF71               	btfsc	(___timezone+1)& (0+255),7,b
 15296  01B7C0  0EFF               	movlw	-1
 15297  01B7C2  6F72               	movwf	(___timezone+2)& (0+255),b
 15298  01B7C4  6F73               	movwf	(___timezone+3)& (0+255),b
 15299                           
 15300                           ; BSR set to: 0
 15301                           ;stkvar	_s @ sp[(-2)+0]
 15302  01B7C6  0EFE               	movlw	254
 15303  01B7C8  24E1               	addwf	fsr1l,w,c
 15304  01B7CA  6E2A               	movwf	btemp^0,c
 15305  01B7CC  0EFF               	movlw	255
 15306  01B7CE  20E2               	addwfc	fsr1h,w,c
 15307  01B7D0  6E2B               	movwf	(btemp+1)^0,c
 15308  01B7D2  0060  F0AB  FFE6   	movff	btemp,postinc1
 15309  01B7D8  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 15310  01B7DE  0EEF               	movlw	low _dst_name
 15311  01B7E0  6EE6               	movwf	postinc1,c
 15312  01B7E2  0E01               	movlw	high _dst_name
 15313  01B7E4  6EE6               	movwf	postinc1,c
 15314  01B7E6  EC78  F0D4         	call	_getname	;wreg free
 15315  01B7EA  0EEF               	movlw	low _dst_name
 15316  01B7EC  0100               	movlb	0	; () banked
 15317  01B7EE  6F6E               	movwf	(___tzname+2)& (0+255),b
 15318  01B7F0  0E01               	movlw	high _dst_name
 15319  01B7F2  6F6F               	movwf	(___tzname+3)& (0+255),b
 15320                           
 15321                           ; BSR set to: 0
 15322  01B7F4  0101               	movlb	1	; () banked
 15323  01B7F6  51EF               	movf	_dst_name& (0+255),w,b
 15324  01B7F8  B4D8               	btfsc	status,2,c
 15325  01B7FA  D070               	goto	l3967
 15326                           
 15327                           ; BSR set to: 1
 15328  01B7FC  0E00               	movlw	0
 15329  01B7FE  0100               	movlb	0	; () banked
 15330  01B800  6FB9               	movwf	(___daylight+1)& (0+255),b
 15331  01B802  0E01               	movlw	1
 15332  01B804  6FB8               	movwf	___daylight& (0+255),b
 15333                           
 15334                           ; BSR set to: 0
 15335                           ;stkvar	_s @ sp[(-2)+0]
 15336  01B806  50E1               	movf	fsr1l,w,c
 15337  01B808  0FFE               	addlw	-2
 15338  01B80A  6ED9               	movwf	fsr2l,c
 15339  01B80C  50E2               	movf	fsr1h,w,c
 15340  01B80E  6EDA               	movwf	fsr2h,c
 15341  01B810  0EFF               	movlw	255
 15342  01B812  22DA               	addwfc	fsr2h,f,c
 15343  01B814  006F FF7B FFF6     	movff	postinc2,tblptrl
 15344  01B81A  006F FF77 FFF7     	movff	postdec2,tblptrh
 15345  01B820                     	if	0	;tblptru may be non-zero
 15346  01B820                     	endif
 15347  01B820                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15348  01B820  0E00               	movlw	low (__mediumconst shr (0+16))
 15349  01B822  6EF8               	movwf	tblptru,c
 15350  01B824                     	endif
 15351  01B824  0008               	tblrd		*
 15352  01B826  50F5               	movf	tablat,w,c
 15353  01B828  0A2B               	xorlw	43
 15354  01B82A  B4D8               	btfsc	status,2,c
 15355  01B82C  D035               	goto	u15950
 15356                           
 15357                           ; BSR set to: 0
 15358                           ;stkvar	_s @ sp[(-2)+0]
 15359  01B82E  50E1               	movf	fsr1l,w,c
 15360  01B830  0FFE               	addlw	-2
 15361  01B832  6ED9               	movwf	fsr2l,c
 15362  01B834  50E2               	movf	fsr1h,w,c
 15363  01B836  6EDA               	movwf	fsr2h,c
 15364  01B838  0EFF               	movlw	255
 15365  01B83A  22DA               	addwfc	fsr2h,f,c
 15366  01B83C  006F FF7B FFF6     	movff	postinc2,tblptrl
 15367  01B842  006F FF77 FFF7     	movff	postdec2,tblptrh
 15368  01B848                     	if	0	;tblptru may be non-zero
 15369  01B848                     	endif
 15370  01B848                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15371  01B848  0E00               	movlw	low (__mediumconst shr (0+16))
 15372  01B84A  6EF8               	movwf	tblptru,c
 15373  01B84C                     	endif
 15374  01B84C  0008               	tblrd		*
 15375  01B84E  50F5               	movf	tablat,w,c
 15376  01B850  0A2D               	xorlw	45
 15377  01B852  B4D8               	btfsc	status,2,c
 15378  01B854  D021               	goto	u15950
 15379                           
 15380                           ; BSR set to: 0
 15381  01B856  0ED0               	movlw	208
 15382  01B858  6E34               	movwf	(btemp+10)^0,c
 15383  01B85A  0EFF               	movlw	255
 15384  01B85C  6E35               	movwf	(btemp+11)^0,c
 15385                           
 15386                           ;stkvar	_s @ sp[(-2)+0]
 15387  01B85E  50E1               	movf	fsr1l,w,c
 15388  01B860  0FFE               	addlw	-2
 15389  01B862  6ED9               	movwf	fsr2l,c
 15390  01B864  50E2               	movf	fsr1h,w,c
 15391  01B866  6EDA               	movwf	fsr2h,c
 15392  01B868  0EFF               	movlw	255
 15393  01B86A  22DA               	addwfc	fsr2h,f,c
 15394  01B86C  006F FF7B FFF6     	movff	postinc2,tblptrl
 15395  01B872  006F FF77 FFF7     	movff	postdec2,tblptrh
 15396  01B878                     	if	0	;tblptru may be non-zero
 15397  01B878                     	endif
 15398  01B878                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15399  01B878  0E00               	movlw	low (__mediumconst shr (0+16))
 15400  01B87A  6EF8               	movwf	tblptru,c
 15401  01B87C                     	endif
 15402  01B87C  0008               	tblrd		*
 15403  01B87E  50F5               	movf	tablat,w,c
 15404  01B880  6E32               	movwf	(btemp+8)^0,c
 15405  01B882  6A33               	clrf	(btemp+9)^0,c
 15406  01B884  5034               	movf	(btemp+10)^0,w,c
 15407  01B886  2632               	addwf	(btemp+8)^0,f,c
 15408  01B888  5035               	movf	(btemp+11)^0,w,c
 15409  01B88A  2233               	addwfc	(btemp+9)^0,f,c
 15410  01B88C  5033               	movf	(btemp+9)^0,w,c
 15411  01B88E  E119               	bnz	l16340
 15412  01B890  0E0A               	movlw	10
 15413  01B892  5C32               	subwf	(btemp+8)^0,w,c
 15414  01B894  B0D8               	btfsc	status,0,c
 15415  01B896  D015               	goto	l16340
 15416  01B898                     u15950:
 15417                           
 15418                           ; BSR set to: 0
 15419                           ;stkvar	_s @ sp[(-2)+0]
 15420  01B898  0EFE               	movlw	254
 15421  01B89A  24E1               	addwf	fsr1l,w,c
 15422  01B89C  6E2A               	movwf	btemp^0,c
 15423  01B89E  0EFF               	movlw	255
 15424  01B8A0  20E2               	addwfc	fsr1h,w,c
 15425  01B8A2  6E2B               	movwf	(btemp+1)^0,c
 15426  01B8A4  0060  F0AB  FFE6   	movff	btemp,postinc1
 15427  01B8AA  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 15428  01B8B0  EC30  F0E5         	call	_getoff	;wreg free
 15429  01B8B4  0060  F0A8  F0B6   	movff	btemp,_dst_off
 15430  01B8BA  0060  F0AC  F0B7   	movff	btemp+1,_dst_off+1
 15431  01B8C0  D012               	goto	l16342
 15432  01B8C2                     l16340:
 15433                           
 15434                           ; BSR set to: 0
 15435  01B8C2  0060  F1C0  F034   	movff	___timezone,btemp+10
 15436  01B8C8  0060  F1C4  F035   	movff	___timezone+1,btemp+11
 15437  01B8CE  0EF0               	movlw	240
 15438  01B8D0  2434               	addwf	(btemp+10)^0,w,c
 15439  01B8D2  6FB6               	movwf	_dst_off& (0+255),b
 15440  01B8D4  0EF1               	movlw	241
 15441  01B8D6  2035               	addwfc	(btemp+11)^0,w,c
 15442  01B8D8  6FB7               	movwf	(_dst_off+1)& (0+255),b
 15443  01B8DA  D005               	goto	l16342
 15444  01B8DC                     l3967:
 15445                           
 15446                           ; BSR set to: 1
 15447  01B8DC  0100               	movlb	0	; () banked
 15448  01B8DE  6BB8               	clrf	___daylight& (0+255),b
 15449  01B8E0  6BB9               	clrf	(___daylight+1)& (0+255),b
 15450  01B8E2  6BB6               	clrf	_dst_off& (0+255),b
 15451  01B8E4  6BB7               	clrf	(_dst_off+1)& (0+255),b
 15452  01B8E6                     l16342:
 15453                           
 15454                           ;stkvar	_s @ sp[(-2)+0]
 15455  01B8E6  50E1               	movf	fsr1l,w,c
 15456  01B8E8  0FFE               	addlw	-2
 15457  01B8EA  6ED9               	movwf	fsr2l,c
 15458  01B8EC  50E2               	movf	fsr1h,w,c
 15459  01B8EE  6EDA               	movwf	fsr2h,c
 15460  01B8F0  0EFF               	movlw	255
 15461  01B8F2  22DA               	addwfc	fsr2h,f,c
 15462  01B8F4  006F FF7B FFF6     	movff	postinc2,tblptrl
 15463  01B8FA  006F FF77 FFF7     	movff	postdec2,tblptrh
 15464  01B900                     	if	0	;tblptru may be non-zero
 15465  01B900                     	endif
 15466  01B900                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15467  01B900  0E00               	movlw	low (__mediumconst shr (0+16))
 15468  01B902  6EF8               	movwf	tblptru,c
 15469  01B904                     	endif
 15470  01B904  0008               	tblrd		*
 15471  01B906  50F5               	movf	tablat,w,c
 15472  01B908  0A2C               	xorlw	44
 15473  01B90A  A4D8               	btfss	status,2,c
 15474  01B90C  D023               	goto	l16348
 15475                           
 15476                           ;stkvar	_s @ sp[(-2)+0]
 15477  01B90E  0EFE               	movlw	-2
 15478  01B910  50E3               	movf	plusw1,w,c
 15479  01B912  0F01               	addlw	1
 15480  01B914  6E2A               	movwf	btemp^0,c
 15481  01B916  0EFE               	movlw	-2
 15482  01B918  0060  F0AB  FFE3   	movff	btemp,plusw1
 15483  01B91E  6A2A               	clrf	btemp^0,c
 15484  01B920  0EFF               	movlw	-1
 15485  01B922  50E3               	movf	plusw1,w,c
 15486  01B924  202A               	addwfc	btemp^0,w,c
 15487  01B926  6E2A               	movwf	btemp^0,c
 15488  01B928  0EFF               	movlw	-1
 15489  01B92A  0060  F0AB  FFE3   	movff	btemp,plusw1
 15490  01B930  0EE5               	movlw	low _r0
 15491  01B932  6EE6               	movwf	postinc1,c
 15492  01B934  0E01               	movlw	high _r0
 15493  01B936  6EE6               	movwf	postinc1,c
 15494                           
 15495                           ;stkvar	_s @ sp[(-4)+0]
 15496  01B938  0EFC               	movlw	252
 15497  01B93A  24E1               	addwf	fsr1l,w,c
 15498  01B93C  6E2A               	movwf	btemp^0,c
 15499  01B93E  0EFF               	movlw	255
 15500  01B940  20E2               	addwfc	fsr1h,w,c
 15501  01B942  6E2B               	movwf	(btemp+1)^0,c
 15502  01B944  0060  F0AB  FFE6   	movff	btemp,postinc1
 15503  01B94A  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 15504  01B950  ECE4  F0DC         	call	_getrule	;wreg free
 15505  01B954                     l16348:
 15506                           
 15507                           ;stkvar	_s @ sp[(-2)+0]
 15508  01B954  50E1               	movf	fsr1l,w,c
 15509  01B956  0FFE               	addlw	-2
 15510  01B958  6ED9               	movwf	fsr2l,c
 15511  01B95A  50E2               	movf	fsr1h,w,c
 15512  01B95C  6EDA               	movwf	fsr2h,c
 15513  01B95E  0EFF               	movlw	255
 15514  01B960  22DA               	addwfc	fsr2h,f,c
 15515  01B962  006F FF7B FFF6     	movff	postinc2,tblptrl
 15516  01B968  006F FF77 FFF7     	movff	postdec2,tblptrh
 15517  01B96E                     	if	0	;tblptru may be non-zero
 15518  01B96E                     	endif
 15519  01B96E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15520  01B96E  0E00               	movlw	low (__mediumconst shr (0+16))
 15521  01B970  6EF8               	movwf	tblptru,c
 15522  01B972                     	endif
 15523  01B972  0008               	tblrd		*
 15524  01B974  50F5               	movf	tablat,w,c
 15525  01B976  0A2C               	xorlw	44
 15526  01B978  A4D8               	btfss	status,2,c
 15527  01B97A  D023               	goto	l3975
 15528                           
 15529                           ;stkvar	_s @ sp[(-2)+0]
 15530  01B97C  0EFE               	movlw	-2
 15531  01B97E  50E3               	movf	plusw1,w,c
 15532  01B980  0F01               	addlw	1
 15533  01B982  6E2A               	movwf	btemp^0,c
 15534  01B984  0EFE               	movlw	-2
 15535  01B986  0060  F0AB  FFE3   	movff	btemp,plusw1
 15536  01B98C  6A2A               	clrf	btemp^0,c
 15537  01B98E  0EFF               	movlw	-1
 15538  01B990  50E3               	movf	plusw1,w,c
 15539  01B992  202A               	addwfc	btemp^0,w,c
 15540  01B994  6E2A               	movwf	btemp^0,c
 15541  01B996  0EFF               	movlw	-1
 15542  01B998  0060  F0AB  FFE3   	movff	btemp,plusw1
 15543  01B99E  0EDB               	movlw	low _r1
 15544  01B9A0  6EE6               	movwf	postinc1,c
 15545  01B9A2  0E01               	movlw	high _r1
 15546  01B9A4  6EE6               	movwf	postinc1,c
 15547                           
 15548                           ;stkvar	_s @ sp[(-4)+0]
 15549  01B9A6  0EFC               	movlw	252
 15550  01B9A8  24E1               	addwf	fsr1l,w,c
 15551  01B9AA  6E2A               	movwf	btemp^0,c
 15552  01B9AC  0EFF               	movlw	255
 15553  01B9AE  20E2               	addwfc	fsr1h,w,c
 15554  01B9B0  6E2B               	movwf	(btemp+1)^0,c
 15555  01B9B2  0060  F0AB  FFE6   	movff	btemp,postinc1
 15556  01B9B8  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 15557  01B9BE  ECE4  F0DC         	call	_getrule	;wreg free
 15558  01B9C2                     l3975:
 15559                           
 15560                           ; _do_tzset: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, args
      +                          ize = 0, vargsize = 0
 15561  01B9C2  52E5               	movf	postdec1,f,c
 15562  01B9C4  52E5               	movf	postdec1,f,c
 15563  01B9C6  0012               	return		;funcret
 15564  01B9C8                     __end_of_do_tzset:
 15565                           	opt callstack 0
 15566                           
 15567 ;; *************** function _getrule *****************
 15568 ;; Defined at:
 15569 ;;		line 60 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__tz.c"
 15570 ;; Parameters:    Size  Location     Type
 15571 ;;  p               2  [STACK] PTR PTR const unsigned c
 15572 ;;		 -> s(2), 
 15573 ;;  rule            2  [STACK] PTR int 
 15574 ;;		 -> r1(10), r0(10), 
 15575 ;; Auto vars:     Size  Location     Type
 15576 ;;  r               2  [STACK] int 
 15577 ;; Return value:  Size  Location     Type
 15578 ;;                  1  [STACK] void 
 15579 ;; Registers used:
 15580 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, 
      +btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 15581 ;; Tracked objects:
 15582 ;;		On entry : 0/0
 15583 ;;		On exit  : 0/0
 15584 ;;		Unchanged: 0/0
 15585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15586 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15587 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15588 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15589 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15590 ;;Total ram usage:        0 bytes
 15591 ;; Hardware stack levels used:    1
 15592 ;; Hardware stack levels required when called:   17
 15593 ;; This function calls:
 15594 ;;		_getint
 15595 ;;		_getoff
 15596 ;; This function is called by:
 15597 ;;		_do_tzset
 15598 ;; This function uses a reentrant model
 15599 ;;
 15600                           
 15601                           	psect	text45
 15602  01B9C8                     __ptext45:
 15603                           	opt callstack 0
 15604  01B9C8                     _getrule:
 15605                           	opt callstack 0
 15606                           
 15607                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15608  01B9C8  52E6               	movf	postinc1,f,c
 15609  01B9CA  52E6               	movf	postinc1,f,c
 15610                           
 15611                           ;stkvar	_p @ sp[(-2)+-2]
 15612                           
 15613                           ;incstack = 0
 15614  01B9CC  0EFC               	movlw	-4
 15615  01B9CE  006F FF8F FFD9     	movff	plusw1,fsr2l
 15616  01B9D4  0EFD               	movlw	-3
 15617  01B9D6  006F FF8F FFDA     	movff	plusw1,fsr2h
 15618  01B9DC  006F FF7B FFF6     	movff	postinc2,tblptrl
 15619  01B9E2  006F FF77 FFF7     	movff	postdec2,tblptrh
 15620  01B9E8                     	if	0	;tblptru may be non-zero
 15621  01B9E8                     	endif
 15622  01B9E8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15623  01B9E8  0E00               	movlw	low (__mediumconst shr (0+16))
 15624  01B9EA  6EF8               	movwf	tblptru,c
 15625  01B9EC                     	endif
 15626  01B9EC  0008               	tblrd		*
 15627  01B9EE  50F5               	movf	tablat,w,c
 15628  01B9F0  6E34               	movwf	(btemp+10)^0,c
 15629  01B9F2  6A35               	clrf	(btemp+11)^0,c
 15630                           
 15631                           ;stkvar	_rule @ sp[(-2)+-4]
 15632  01B9F4  0EFA               	movlw	-6
 15633  01B9F6  006F FF8F FFD9     	movff	plusw1,fsr2l
 15634  01B9FC  0EFB               	movlw	-5
 15635  01B9FE  006F FF8F FFDA     	movff	plusw1,fsr2h
 15636  01BA04  0060  F0D3  FFDE   	movff	btemp+10,postinc2
 15637  01BA0A  0060  F0D7  FFDD   	movff	btemp+11,postdec2
 15638  01BA10  006F FF78  F034    	movff	postinc2,btemp+10
 15639  01BA16  006F FF74  F035    	movff	postdec2,btemp+11
 15640                           
 15641                           ;stkvar	_r @ sp[(-2)+0]
 15642  01BA1C  0EFE               	movlw	-2
 15643  01BA1E  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 15644  01BA24  0EFF               	movlw	-1
 15645  01BA26  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 15646                           
 15647                           ;stkvar	_r @ sp[(-2)+0]
 15648  01BA2C  0EFE               	movlw	-2
 15649  01BA2E  006F FF8C  F02A    	movff	plusw1,btemp
 15650  01BA34  0E4D               	movlw	77
 15651  01BA36  182A               	xorwf	btemp^0,w,c
 15652  01BA38  E104               	bnz	u15530
 15653  01BA3A  0EFF               	movlw	-1
 15654  01BA3C  50E3               	movf	plusw1,w,c
 15655  01BA3E  B4D8               	btfsc	status,2,c
 15656  01BA40  D036               	goto	l16038
 15657  01BA42                     u15530:
 15658                           
 15659                           ;stkvar	_r @ sp[(-2)+0]
 15660  01BA42  0EFE               	movlw	-2
 15661  01BA44  006F FF8C  F02A    	movff	plusw1,btemp
 15662  01BA4A  0E4A               	movlw	74
 15663  01BA4C  182A               	xorwf	btemp^0,w,c
 15664  01BA4E  E110               	bnz	l16034
 15665  01BA50  0EFF               	movlw	-1
 15666  01BA52  50E3               	movf	plusw1,w,c
 15667  01BA54  A4D8               	btfss	status,2,c
 15668  01BA56  D00C               	goto	l16034
 15669                           
 15670                           ;stkvar	_p @ sp[(-2)+-2]
 15671  01BA58  0EFC               	movlw	-4
 15672  01BA5A  006F FF8F FFD9     	movff	plusw1,fsr2l
 15673  01BA60  0EFD               	movlw	-3
 15674  01BA62  006F FF8F FFDA     	movff	plusw1,fsr2h
 15675  01BA68  2ADE               	incf	postinc2,f,c
 15676  01BA6A  0E00               	movlw	0
 15677  01BA6C  22DD               	addwfc	postdec2,f,c
 15678  01BA6E  D00C               	goto	l16036
 15679  01BA70                     l16034:
 15680                           
 15681                           ;stkvar	_rule @ sp[(-2)+-4]
 15682  01BA70  0EFA               	movlw	-6
 15683  01BA72  006F FF8F FFD9     	movff	plusw1,fsr2l
 15684  01BA78  0EFB               	movlw	-5
 15685  01BA7A  006F FF8F FFDA     	movff	plusw1,fsr2h
 15686  01BA80  0E00               	movlw	0
 15687  01BA82  6EDE               	movwf	postinc2,c
 15688  01BA84  0E00               	movlw	0
 15689  01BA86  6EDD               	movwf	postdec2,c
 15690  01BA88                     l16036:
 15691                           
 15692                           ;stkvar	_p @ sp[(-2)+-2]
 15693  01BA88  0EFC               	movlw	-4
 15694  01BA8A  006F FF8F FFE6     	movff	plusw1,postinc1
 15695  01BA90  006F FF8F FFE6     	movff	plusw1,postinc1
 15696  01BA96  ECB0  F0FD         	call	_getint	;wreg free
 15697                           
 15698                           ;stkvar	_rule @ sp[(-2)+-4]
 15699  01BA9A  0EFA               	movlw	-6
 15700  01BA9C  006F FF8C  F034    	movff	plusw1,btemp+10
 15701  01BAA2  0EFB               	movlw	-5
 15702  01BAA4  006F FF8C  F035    	movff	plusw1,btemp+11
 15703  01BAAA  0E02               	movlw	2
 15704  01BAAC  D06D               	goto	L16
 15705  01BAAE                     l16038:
 15706                           
 15707                           ;stkvar	_p @ sp[(-2)+-2]
 15708  01BAAE  0EFC               	movlw	-4
 15709  01BAB0  006F FF8F FFD9     	movff	plusw1,fsr2l
 15710  01BAB6  0EFD               	movlw	-3
 15711  01BAB8  006F FF8F FFDA     	movff	plusw1,fsr2h
 15712  01BABE  2ADE               	incf	postinc2,f,c
 15713  01BAC0  0E00               	movlw	0
 15714  01BAC2  22DD               	addwfc	postdec2,f,c
 15715                           
 15716                           ;stkvar	_p @ sp[(-2)+-2]
 15717  01BAC4  0EFC               	movlw	-4
 15718  01BAC6  006F FF8F FFE6     	movff	plusw1,postinc1
 15719  01BACC  006F FF8F FFE6     	movff	plusw1,postinc1
 15720  01BAD2  ECB0  F0FD         	call	_getint	;wreg free
 15721                           
 15722                           ;stkvar	_rule @ sp[(-2)+-4]
 15723  01BAD6  0EFA               	movlw	-6
 15724  01BAD8  006F FF8C  F034    	movff	plusw1,btemp+10
 15725  01BADE  0EFB               	movlw	-5
 15726  01BAE0  006F FF8C  F035    	movff	plusw1,btemp+11
 15727  01BAE6  0E02               	movlw	2
 15728  01BAE8  2434               	addwf	(btemp+10)^0,w,c
 15729  01BAEA  6ED9               	movwf	fsr2l,c
 15730  01BAEC  0E00               	movlw	0
 15731  01BAEE  2035               	addwfc	(btemp+11)^0,w,c
 15732  01BAF0  6EDA               	movwf	fsr2h,c
 15733  01BAF2  0060  F0AB  FFDE   	movff	btemp,postinc2
 15734  01BAF8  0060  F0AF  FFDD   	movff	btemp+1,postdec2
 15735                           
 15736                           ;stkvar	_p @ sp[(-2)+-2]
 15737  01BAFE  0EFC               	movlw	-4
 15738  01BB00  006F FF8F FFD9     	movff	plusw1,fsr2l
 15739  01BB06  0EFD               	movlw	-3
 15740  01BB08  006F FF8F FFDA     	movff	plusw1,fsr2h
 15741  01BB0E  2ADE               	incf	postinc2,f,c
 15742  01BB10  0E00               	movlw	0
 15743  01BB12  22DD               	addwfc	postdec2,f,c
 15744                           
 15745                           ;stkvar	_p @ sp[(-2)+-2]
 15746  01BB14  0EFC               	movlw	-4
 15747  01BB16  006F FF8F FFE6     	movff	plusw1,postinc1
 15748  01BB1C  006F FF8F FFE6     	movff	plusw1,postinc1
 15749  01BB22  ECB0  F0FD         	call	_getint	;wreg free
 15750                           
 15751                           ;stkvar	_rule @ sp[(-2)+-4]
 15752  01BB26  0EFA               	movlw	-6
 15753  01BB28  006F FF8C  F034    	movff	plusw1,btemp+10
 15754  01BB2E  0EFB               	movlw	-5
 15755  01BB30  006F FF8C  F035    	movff	plusw1,btemp+11
 15756  01BB36  0E04               	movlw	4
 15757  01BB38  2434               	addwf	(btemp+10)^0,w,c
 15758  01BB3A  6ED9               	movwf	fsr2l,c
 15759  01BB3C  0E00               	movlw	0
 15760  01BB3E  2035               	addwfc	(btemp+11)^0,w,c
 15761  01BB40  6EDA               	movwf	fsr2h,c
 15762  01BB42  0060  F0AB  FFDE   	movff	btemp,postinc2
 15763  01BB48  0060  F0AF  FFDD   	movff	btemp+1,postdec2
 15764                           
 15765                           ;stkvar	_p @ sp[(-2)+-2]
 15766  01BB4E  0EFC               	movlw	-4
 15767  01BB50  006F FF8F FFD9     	movff	plusw1,fsr2l
 15768  01BB56  0EFD               	movlw	-3
 15769  01BB58  006F FF8F FFDA     	movff	plusw1,fsr2h
 15770  01BB5E  2ADE               	incf	postinc2,f,c
 15771  01BB60  0E00               	movlw	0
 15772  01BB62  22DD               	addwfc	postdec2,f,c
 15773                           
 15774                           ;stkvar	_p @ sp[(-2)+-2]
 15775  01BB64  0EFC               	movlw	-4
 15776  01BB66  006F FF8F FFE6     	movff	plusw1,postinc1
 15777  01BB6C  006F FF8F FFE6     	movff	plusw1,postinc1
 15778  01BB72  ECB0  F0FD         	call	_getint	;wreg free
 15779                           
 15780                           ;stkvar	_rule @ sp[(-2)+-4]
 15781  01BB76  0EFA               	movlw	-6
 15782  01BB78  006F FF8C  F034    	movff	plusw1,btemp+10
 15783  01BB7E  0EFB               	movlw	-5
 15784  01BB80  006F FF8C  F035    	movff	plusw1,btemp+11
 15785  01BB86  0E06               	movlw	6
 15786  01BB88                     L16:
 15787  01BB88  2434               	addwf	(btemp+10)^0,w,c
 15788  01BB8A  6ED9               	movwf	fsr2l,c
 15789  01BB8C  0E00               	movlw	0
 15790  01BB8E  2035               	addwfc	(btemp+11)^0,w,c
 15791  01BB90  6EDA               	movwf	fsr2h,c
 15792  01BB92  0060  F0AB  FFDE   	movff	btemp,postinc2
 15793  01BB98  0060  F0AF  FFDD   	movff	btemp+1,postdec2
 15794                           
 15795                           ;stkvar	_p @ sp[(-2)+-2]
 15796  01BB9E  0EFC               	movlw	-4
 15797  01BBA0  006F FF8F FFD9     	movff	plusw1,fsr2l
 15798  01BBA6  0EFD               	movlw	-3
 15799  01BBA8  006F FF8F FFDA     	movff	plusw1,fsr2h
 15800  01BBAE  006F FF7B FFF6     	movff	postinc2,tblptrl
 15801  01BBB4  006F FF77 FFF7     	movff	postdec2,tblptrh
 15802  01BBBA                     	if	0	;tblptru may be non-zero
 15803  01BBBA                     	endif
 15804  01BBBA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15805  01BBBA  0E00               	movlw	low (__mediumconst shr (0+16))
 15806  01BBBC  6EF8               	movwf	tblptru,c
 15807  01BBBE                     	endif
 15808  01BBBE  0008               	tblrd		*
 15809  01BBC0  50F5               	movf	tablat,w,c
 15810  01BBC2  0A2F               	xorlw	47
 15811  01BBC4  A4D8               	btfss	status,2,c
 15812  01BBC6  D029               	goto	l16054
 15813                           
 15814                           ;stkvar	_p @ sp[(-2)+-2]
 15815  01BBC8  0EFC               	movlw	-4
 15816  01BBCA  006F FF8F FFD9     	movff	plusw1,fsr2l
 15817  01BBD0  0EFD               	movlw	-3
 15818  01BBD2  006F FF8F FFDA     	movff	plusw1,fsr2h
 15819  01BBD8  2ADE               	incf	postinc2,f,c
 15820  01BBDA  0E00               	movlw	0
 15821  01BBDC  22DD               	addwfc	postdec2,f,c
 15822                           
 15823                           ;stkvar	_p @ sp[(-2)+-2]
 15824  01BBDE  0EFC               	movlw	-4
 15825  01BBE0  006F FF8F FFE6     	movff	plusw1,postinc1
 15826  01BBE6  006F FF8F FFE6     	movff	plusw1,postinc1
 15827  01BBEC  EC30  F0E5         	call	_getoff	;wreg free
 15828                           
 15829                           ;stkvar	_rule @ sp[(-2)+-4]
 15830  01BBF0  0EFA               	movlw	-6
 15831  01BBF2  006F FF8C  F034    	movff	plusw1,btemp+10
 15832  01BBF8  0EFB               	movlw	-5
 15833  01BBFA  006F FF8C  F035    	movff	plusw1,btemp+11
 15834  01BC00  0E08               	movlw	8
 15835  01BC02  2434               	addwf	(btemp+10)^0,w,c
 15836  01BC04  6ED9               	movwf	fsr2l,c
 15837  01BC06  0E00               	movlw	0
 15838  01BC08  2035               	addwfc	(btemp+11)^0,w,c
 15839  01BC0A  6EDA               	movwf	fsr2h,c
 15840  01BC0C  0060  F0AB  FFDE   	movff	btemp,postinc2
 15841  01BC12  0060  F0AF  FFDD   	movff	btemp+1,postdec2
 15842  01BC18  D012               	goto	l3940
 15843  01BC1A                     l16054:
 15844                           
 15845                           ;stkvar	_rule @ sp[(-2)+-4]
 15846  01BC1A  0EFA               	movlw	-6
 15847  01BC1C  006F FF8C  F034    	movff	plusw1,btemp+10
 15848  01BC22  0EFB               	movlw	-5
 15849  01BC24  006F FF8C  F035    	movff	plusw1,btemp+11
 15850  01BC2A  0E08               	movlw	8
 15851  01BC2C  2434               	addwf	(btemp+10)^0,w,c
 15852  01BC2E  6ED9               	movwf	fsr2l,c
 15853  01BC30  0E00               	movlw	0
 15854  01BC32  2035               	addwfc	(btemp+11)^0,w,c
 15855  01BC34  6EDA               	movwf	fsr2h,c
 15856  01BC36  0E20               	movlw	32
 15857  01BC38  6EDE               	movwf	postinc2,c
 15858  01BC3A  0E1C               	movlw	28
 15859  01BC3C  6EDD               	movwf	postdec2,c
 15860  01BC3E                     l3940:
 15861                           
 15862                           ; _getrule: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 15863  01BC3E  0EFA               	movlw	250
 15864  01BC40  26E1               	addwf	fsr1l,f,c
 15865  01BC42  0EFF               	movlw	255
 15866  01BC44  22E2               	addwfc	fsr1h,f,c
 15867  01BC46  0012               	return		;funcret
 15868  01BC48                     __end_of_getrule:
 15869                           	opt callstack 0
 15870                           
 15871 ;; *************** function _getoff *****************
 15872 ;; Defined at:
 15873 ;;		line 39 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__tz.c"
 15874 ;; Parameters:    Size  Location     Type
 15875 ;;  p               2  [STACK] PTR PTR const unsigned c
 15876 ;;		 -> s(2), 
 15877 ;; Auto vars:     Size  Location     Type
 15878 ;;  off             2  [STACK] int 
 15879 ;;  neg             2  [STACK] int 
 15880 ;; Return value:  Size  Location     Type
 15881 ;;                  2  [STACK] int 
 15882 ;; Registers used:
 15883 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, 
      +btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 15884 ;; Tracked objects:
 15885 ;;		On entry : 0/0
 15886 ;;		On exit  : 0/0
 15887 ;;		Unchanged: 0/0
 15888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15889 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15890 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15891 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15892 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15893 ;;Total ram usage:        0 bytes
 15894 ;; Hardware stack levels used:    1
 15895 ;; Hardware stack levels required when called:   16
 15896 ;; This function calls:
 15897 ;;		_getint
 15898 ;; This function is called by:
 15899 ;;		_getrule
 15900 ;;		_do_tzset
 15901 ;; This function uses a reentrant model
 15902 ;;
 15903                           
 15904                           	psect	text46
 15905  01CA60                     __ptext46:
 15906                           	opt callstack 0
 15907  01CA60                     _getoff:
 15908                           	opt callstack 0
 15909                           
 15910                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15911  01CA60  52E6               	movf	postinc1,f,c
 15912  01CA62  52E6               	movf	postinc1,f,c
 15913  01CA64  52E6               	movf	postinc1,f,c
 15914  01CA66  52E6               	movf	postinc1,f,c
 15915                           
 15916                           ;stkvar	_neg @ sp[(-4)+2]
 15917                           
 15918                           ;incstack = 0
 15919  01CA68  0EFE               	movlw	-2
 15920  01CA6A  6AE3               	clrf	plusw1,c
 15921  01CA6C  0EFF               	movlw	-1
 15922  01CA6E  6AE3               	clrf	plusw1,c
 15923                           
 15924                           ;stkvar	_p @ sp[(-4)+-2]
 15925  01CA70  0EFA               	movlw	-6
 15926  01CA72  006F FF8F FFD9     	movff	plusw1,fsr2l
 15927  01CA78  0EFB               	movlw	-5
 15928  01CA7A  006F FF8F FFDA     	movff	plusw1,fsr2h
 15929  01CA80  006F FF7B FFF6     	movff	postinc2,tblptrl
 15930  01CA86  006F FF77 FFF7     	movff	postdec2,tblptrh
 15931  01CA8C                     	if	0	;tblptru may be non-zero
 15932  01CA8C                     	endif
 15933  01CA8C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15934  01CA8C  0E00               	movlw	low (__mediumconst shr (0+16))
 15935  01CA8E  6EF8               	movwf	tblptru,c
 15936  01CA90                     	endif
 15937  01CA90  0008               	tblrd		*
 15938  01CA92  50F5               	movf	tablat,w,c
 15939  01CA94  0A2D               	xorlw	45
 15940  01CA96  A4D8               	btfss	status,2,c
 15941  01CA98  D018               	goto	l10814
 15942                           
 15943                           ;stkvar	_p @ sp[(-4)+-2]
 15944  01CA9A  0EFA               	movlw	-6
 15945  01CA9C  006F FF8F FFD9     	movff	plusw1,fsr2l
 15946  01CAA2  0EFB               	movlw	-5
 15947  01CAA4  006F FF8F FFDA     	movff	plusw1,fsr2h
 15948  01CAAA  2ADE               	incf	postinc2,f,c
 15949  01CAAC  0E00               	movlw	0
 15950  01CAAE  22DD               	addwfc	postdec2,f,c
 15951  01CAB0  0E01               	movlw	1
 15952  01CAB2  6E34               	movwf	(btemp+10)^0,c
 15953  01CAB4  0E00               	movlw	0
 15954  01CAB6  6E35               	movwf	(btemp+11)^0,c
 15955                           
 15956                           ;stkvar	_neg @ sp[(-4)+2]
 15957  01CAB8  0EFE               	movlw	-2
 15958  01CABA  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 15959  01CAC0  0EFF               	movlw	-1
 15960  01CAC2  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 15961  01CAC8  D020               	goto	l10818
 15962  01CACA                     l10814:
 15963                           
 15964                           ;stkvar	_p @ sp[(-4)+-2]
 15965  01CACA  0EFA               	movlw	-6
 15966  01CACC  006F FF8F FFD9     	movff	plusw1,fsr2l
 15967  01CAD2  0EFB               	movlw	-5
 15968  01CAD4  006F FF8F FFDA     	movff	plusw1,fsr2h
 15969  01CADA  006F FF7B FFF6     	movff	postinc2,tblptrl
 15970  01CAE0  006F FF77 FFF7     	movff	postdec2,tblptrh
 15971  01CAE6                     	if	0	;tblptru may be non-zero
 15972  01CAE6                     	endif
 15973  01CAE6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15974  01CAE6  0E00               	movlw	low (__mediumconst shr (0+16))
 15975  01CAE8  6EF8               	movwf	tblptru,c
 15976  01CAEA                     	endif
 15977  01CAEA  0008               	tblrd		*
 15978  01CAEC  50F5               	movf	tablat,w,c
 15979  01CAEE  0A2B               	xorlw	43
 15980  01CAF0  A4D8               	btfss	status,2,c
 15981  01CAF2  D00B               	goto	l10818
 15982                           
 15983                           ;stkvar	_p @ sp[(-4)+-2]
 15984  01CAF4  0EFA               	movlw	-6
 15985  01CAF6  006F FF8F FFD9     	movff	plusw1,fsr2l
 15986  01CAFC  0EFB               	movlw	-5
 15987  01CAFE  006F FF8F FFDA     	movff	plusw1,fsr2h
 15988  01CB04  2ADE               	incf	postinc2,f,c
 15989  01CB06  0E00               	movlw	0
 15990  01CB08  22DD               	addwfc	postdec2,f,c
 15991  01CB0A                     l10818:
 15992                           
 15993                           ;stkvar	_p @ sp[(-4)+-2]
 15994  01CB0A  0EFA               	movlw	-6
 15995  01CB0C  006F FF8F FFE6     	movff	plusw1,postinc1
 15996  01CB12  006F FF8F FFE6     	movff	plusw1,postinc1
 15997  01CB18  ECB0  F0FD         	call	_getint	;wreg free
 15998  01CB1C  0060  F0A8  F034   	movff	btemp,btemp+10
 15999  01CB22  0060  F0AC  F035   	movff	btemp+1,btemp+11
 16000  01CB28  0E10               	movlw	16
 16001  01CB2A  0234               	mulwf	(btemp+10)^0,c
 16002  01CB2C  006F FFCC  F032    	movff	prodl,btemp+8
 16003  01CB32  006F FFD0  F033    	movff	prodh,btemp+9
 16004  01CB38  0235               	mulwf	(btemp+11)^0,c
 16005  01CB3A  50F3               	movf	prodl,w,c
 16006  01CB3C  2633               	addwf	(btemp+9)^0,f,c
 16007  01CB3E  0E0E               	movlw	14
 16008  01CB40  0234               	mulwf	(btemp+10)^0,c
 16009  01CB42  50F3               	movf	prodl,w,c
 16010  01CB44  2633               	addwf	(btemp+9)^0,f,c
 16011                           
 16012                           ;stkvar	_off @ sp[(-4)+0]
 16013  01CB46  0EFC               	movlw	-4
 16014  01CB48  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 16015  01CB4E  0EFD               	movlw	-3
 16016  01CB50  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 16017                           
 16018                           ;stkvar	_p @ sp[(-4)+-2]
 16019  01CB56  0EFA               	movlw	-6
 16020  01CB58  006F FF8F FFD9     	movff	plusw1,fsr2l
 16021  01CB5E  0EFB               	movlw	-5
 16022  01CB60  006F FF8F FFDA     	movff	plusw1,fsr2h
 16023  01CB66  006F FF7B FFF6     	movff	postinc2,tblptrl
 16024  01CB6C  006F FF77 FFF7     	movff	postdec2,tblptrh
 16025  01CB72                     	if	0	;tblptru may be non-zero
 16026  01CB72                     	endif
 16027  01CB72                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16028  01CB72  0E00               	movlw	low (__mediumconst shr (0+16))
 16029  01CB74  6EF8               	movwf	tblptru,c
 16030  01CB76                     	endif
 16031  01CB76  0008               	tblrd		*
 16032  01CB78  50F5               	movf	tablat,w,c
 16033  01CB7A  0A3A               	xorlw	58
 16034  01CB7C  A4D8               	btfss	status,2,c
 16035  01CB7E  D064               	goto	l10832
 16036                           
 16037                           ;stkvar	_p @ sp[(-4)+-2]
 16038  01CB80  0EFA               	movlw	-6
 16039  01CB82  006F FF8F FFD9     	movff	plusw1,fsr2l
 16040  01CB88  0EFB               	movlw	-5
 16041  01CB8A  006F FF8F FFDA     	movff	plusw1,fsr2h
 16042  01CB90  2ADE               	incf	postinc2,f,c
 16043  01CB92  0E00               	movlw	0
 16044  01CB94  22DD               	addwfc	postdec2,f,c
 16045                           
 16046                           ;stkvar	_p @ sp[(-4)+-2]
 16047  01CB96  0EFA               	movlw	-6
 16048  01CB98  006F FF8F FFE6     	movff	plusw1,postinc1
 16049  01CB9E  006F FF8F FFE6     	movff	plusw1,postinc1
 16050  01CBA4  ECB0  F0FD         	call	_getint	;wreg free
 16051  01CBA8  0060  F0A8  F034   	movff	btemp,btemp+10
 16052  01CBAE  0060  F0AC  F035   	movff	btemp+1,btemp+11
 16053  01CBB4  0E3C               	movlw	60
 16054  01CBB6  0234               	mulwf	(btemp+10)^0,c
 16055  01CBB8  006F FFCC  F032    	movff	prodl,btemp+8
 16056  01CBBE  006F FFD0  F033    	movff	prodh,btemp+9
 16057  01CBC4  0235               	mulwf	(btemp+11)^0,c
 16058  01CBC6  50F3               	movf	prodl,w,c
 16059  01CBC8  2633               	addwf	(btemp+9)^0,f,c
 16060                           
 16061                           ;stkvar	_off @ sp[(-4)+0]
 16062  01CBCA  50E1               	movf	fsr1l,w,c
 16063  01CBCC  0FFC               	addlw	-4
 16064  01CBCE  6ED9               	movwf	fsr2l,c
 16065  01CBD0  50E2               	movf	fsr1h,w,c
 16066  01CBD2  6EDA               	movwf	fsr2h,c
 16067  01CBD4  0EFF               	movlw	255
 16068  01CBD6  22DA               	addwfc	fsr2h,f,c
 16069  01CBD8  5032               	movf	(btemp+8)^0,w,c
 16070  01CBDA  26DE               	addwf	postinc2,f,c
 16071  01CBDC  5033               	movf	(btemp+9)^0,w,c
 16072  01CBDE  22DD               	addwfc	postdec2,f,c
 16073                           
 16074                           ;stkvar	_p @ sp[(-4)+-2]
 16075  01CBE0  0EFA               	movlw	-6
 16076  01CBE2  006F FF8F FFD9     	movff	plusw1,fsr2l
 16077  01CBE8  0EFB               	movlw	-5
 16078  01CBEA  006F FF8F FFDA     	movff	plusw1,fsr2h
 16079  01CBF0  006F FF7B FFF6     	movff	postinc2,tblptrl
 16080  01CBF6  006F FF77 FFF7     	movff	postdec2,tblptrh
 16081  01CBFC                     	if	0	;tblptru may be non-zero
 16082  01CBFC                     	endif
 16083  01CBFC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16084  01CBFC  0E00               	movlw	low (__mediumconst shr (0+16))
 16085  01CBFE  6EF8               	movwf	tblptru,c
 16086  01CC00                     	endif
 16087  01CC00  0008               	tblrd		*
 16088  01CC02  50F5               	movf	tablat,w,c
 16089  01CC04  0A3A               	xorlw	58
 16090  01CC06  A4D8               	btfss	status,2,c
 16091  01CC08  D01F               	goto	l10832
 16092                           
 16093                           ;stkvar	_p @ sp[(-4)+-2]
 16094  01CC0A  0EFA               	movlw	-6
 16095  01CC0C  006F FF8F FFD9     	movff	plusw1,fsr2l
 16096  01CC12  0EFB               	movlw	-5
 16097  01CC14  006F FF8F FFDA     	movff	plusw1,fsr2h
 16098  01CC1A  2ADE               	incf	postinc2,f,c
 16099  01CC1C  0E00               	movlw	0
 16100  01CC1E  22DD               	addwfc	postdec2,f,c
 16101                           
 16102                           ;stkvar	_p @ sp[(-4)+-2]
 16103  01CC20  0EFA               	movlw	-6
 16104  01CC22  006F FF8F FFE6     	movff	plusw1,postinc1
 16105  01CC28  006F FF8F FFE6     	movff	plusw1,postinc1
 16106  01CC2E  ECB0  F0FD         	call	_getint	;wreg free
 16107                           
 16108                           ;stkvar	_off @ sp[(-4)+0]
 16109  01CC32  50E1               	movf	fsr1l,w,c
 16110  01CC34  0FFC               	addlw	-4
 16111  01CC36  6ED9               	movwf	fsr2l,c
 16112  01CC38  50E2               	movf	fsr1h,w,c
 16113  01CC3A  6EDA               	movwf	fsr2h,c
 16114  01CC3C  0EFF               	movlw	255
 16115  01CC3E  22DA               	addwfc	fsr2h,f,c
 16116  01CC40  502A               	movf	btemp^0,w,c
 16117  01CC42  26DE               	addwf	postinc2,f,c
 16118  01CC44  502B               	movf	(btemp+1)^0,w,c
 16119  01CC46  22DD               	addwfc	postdec2,f,c
 16120  01CC48                     l10832:
 16121                           
 16122                           ;stkvar	_neg @ sp[(-4)+2]
 16123  01CC48  0EFE               	movlw	-2
 16124  01CC4A  006F FF8C  F02A    	movff	plusw1,btemp
 16125  01CC50  0EFF               	movlw	-1
 16126  01CC52  50E3               	movf	plusw1,w,c
 16127  01CC54  102A               	iorwf	btemp^0,w,c
 16128  01CC56  A4D8               	btfss	status,2,c
 16129  01CC58  D009               	goto	l10836
 16130                           
 16131                           ;stkvar	_off @ sp[(-4)+0]
 16132  01CC5A  0EFC               	movlw	-4
 16133  01CC5C  006F FF8C  F02A    	movff	plusw1,btemp
 16134  01CC62  0EFD               	movlw	-3
 16135  01CC64  006F FF8C  F02B    	movff	plusw1,btemp+1
 16136  01CC6A  D00D               	goto	l3931
 16137  01CC6C                     l10836:
 16138                           
 16139                           ;stkvar	_off @ sp[(-4)+0]
 16140  01CC6C  0EFC               	movlw	-4
 16141  01CC6E  006F FF8C  F02A    	movff	plusw1,btemp
 16142  01CC74  1E2A               	comf	btemp^0,f,c
 16143  01CC76  0EFD               	movlw	-3
 16144  01CC78  006F FF8C  F02B    	movff	plusw1,btemp+1
 16145  01CC7E  1E2B               	comf	(btemp+1)^0,f,c
 16146  01CC80  2A2A               	incf	btemp^0,f,c
 16147  01CC82  B4D8               	btfsc	status,2,c
 16148  01CC84  2A2B               	incf	(btemp+1)^0,f,c
 16149  01CC86                     l3931:
 16150                           
 16151                           ; _getoff: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 16152  01CC86  0EFA               	movlw	250
 16153  01CC88  26E1               	addwf	fsr1l,f,c
 16154  01CC8A  0EFF               	movlw	255
 16155  01CC8C  22E2               	addwfc	fsr1h,f,c
 16156  01CC8E  0012               	return		;funcret
 16157  01CC90                     __end_of_getoff:
 16158                           	opt callstack 0
 16159                           
 16160 ;; *************** function _getint *****************
 16161 ;; Defined at:
 16162 ;;		line 32 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__tz.c"
 16163 ;; Parameters:    Size  Location     Type
 16164 ;;  p               2  [STACK] PTR PTR const unsigned c
 16165 ;;		 -> s(2), 
 16166 ;; Auto vars:     Size  Location     Type
 16167 ;;  x               2  [STACK] unsigned int 
 16168 ;; Return value:  Size  Location     Type
 16169 ;;                  2  [STACK] int 
 16170 ;; Registers used:
 16171 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, 
      +btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 16172 ;; Tracked objects:
 16173 ;;		On entry : 0/0
 16174 ;;		On exit  : 0/0
 16175 ;;		Unchanged: 0/0
 16176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16177 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16178 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16179 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16180 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16181 ;;Total ram usage:        0 bytes
 16182 ;; Hardware stack levels used:    1
 16183 ;; Hardware stack levels required when called:   15
 16184 ;; This function calls:
 16185 ;;		Nothing
 16186 ;; This function is called by:
 16187 ;;		_getoff
 16188 ;;		_getrule
 16189 ;; This function uses a reentrant model
 16190 ;;
 16191                           
 16192                           	psect	text47
 16193  01FB60                     __ptext47:
 16194                           	opt callstack 0
 16195  01FB60                     _getint:
 16196                           	opt callstack 0
 16197                           
 16198                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16199  01FB60  52E6               	movf	postinc1,f,c
 16200  01FB62  52E6               	movf	postinc1,f,c
 16201                           
 16202                           ;stkvar	_x @ sp[(-2)+0]
 16203                           
 16204                           ;incstack = 0
 16205  01FB64  0EFE               	movlw	-2
 16206  01FB66  6AE3               	clrf	plusw1,c
 16207  01FB68  0EFF               	movlw	-1
 16208  01FB6A  6AE3               	clrf	plusw1,c
 16209  01FB6C  D043               	goto	l9970
 16210  01FB6E                     l9966:
 16211  01FB6E  0ED0               	movlw	208
 16212  01FB70  6E34               	movwf	(btemp+10)^0,c
 16213  01FB72  0EFF               	movlw	255
 16214  01FB74  6E35               	movwf	(btemp+11)^0,c
 16215                           
 16216                           ;stkvar	_x @ sp[(-2)+0]
 16217  01FB76  0EFE               	movlw	-2
 16218  01FB78  006F FF8C  F032    	movff	plusw1,btemp+8
 16219  01FB7E  0EFF               	movlw	-1
 16220  01FB80  006F FF8C  F033    	movff	plusw1,btemp+9
 16221  01FB86  0E0A               	movlw	10
 16222  01FB88  0232               	mulwf	(btemp+8)^0,c
 16223  01FB8A  006F FFCC  F030    	movff	prodl,btemp+6
 16224  01FB90  006F FFD0  F031    	movff	prodh,btemp+7
 16225  01FB96  0233               	mulwf	(btemp+9)^0,c
 16226  01FB98  50F3               	movf	prodl,w,c
 16227  01FB9A  2631               	addwf	(btemp+7)^0,f,c
 16228                           
 16229                           ;stkvar	_p @ sp[(-2)+-2]
 16230  01FB9C  0EFC               	movlw	-4
 16231  01FB9E  006F FF8F FFD9     	movff	plusw1,fsr2l
 16232  01FBA4  0EFD               	movlw	-3
 16233  01FBA6  006F FF8F FFDA     	movff	plusw1,fsr2h
 16234  01FBAC  006F FF7B FFF6     	movff	postinc2,tblptrl
 16235  01FBB2  006F FF77 FFF7     	movff	postdec2,tblptrh
 16236  01FBB8                     	if	0	;tblptru may be non-zero
 16237  01FBB8                     	endif
 16238  01FBB8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16239  01FBB8  0E00               	movlw	low (__mediumconst shr (0+16))
 16240  01FBBA  6EF8               	movwf	tblptru,c
 16241  01FBBC                     	endif
 16242  01FBBC  0008               	tblrd		*
 16243  01FBBE  50F5               	movf	tablat,w,c
 16244  01FBC0  2630               	addwf	(btemp+6)^0,f,c
 16245  01FBC2  0E00               	movlw	0
 16246  01FBC4  2231               	addwfc	(btemp+7)^0,f,c
 16247  01FBC6  5034               	movf	(btemp+10)^0,w,c
 16248  01FBC8  2630               	addwf	(btemp+6)^0,f,c
 16249  01FBCA  5035               	movf	(btemp+11)^0,w,c
 16250  01FBCC  2231               	addwfc	(btemp+7)^0,f,c
 16251                           
 16252                           ;stkvar	_x @ sp[(-2)+0]
 16253  01FBCE  0EFE               	movlw	-2
 16254  01FBD0  0060  F0C3  FFE3   	movff	btemp+6,plusw1
 16255  01FBD6  0EFF               	movlw	-1
 16256  01FBD8  0060  F0C7  FFE3   	movff	btemp+7,plusw1
 16257                           
 16258                           ;stkvar	_p @ sp[(-2)+-2]
 16259  01FBDE  0EFC               	movlw	-4
 16260  01FBE0  006F FF8F FFD9     	movff	plusw1,fsr2l
 16261  01FBE6  0EFD               	movlw	-3
 16262  01FBE8  006F FF8F FFDA     	movff	plusw1,fsr2h
 16263  01FBEE  2ADE               	incf	postinc2,f,c
 16264  01FBF0  0E00               	movlw	0
 16265  01FBF2  22DD               	addwfc	postdec2,f,c
 16266  01FBF4                     l9970:
 16267  01FBF4  0ED0               	movlw	208
 16268  01FBF6  6E34               	movwf	(btemp+10)^0,c
 16269  01FBF8  0EFF               	movlw	255
 16270  01FBFA  6E35               	movwf	(btemp+11)^0,c
 16271                           
 16272                           ;stkvar	_p @ sp[(-2)+-2]
 16273  01FBFC  0EFC               	movlw	-4
 16274  01FBFE  006F FF8F FFD9     	movff	plusw1,fsr2l
 16275  01FC04  0EFD               	movlw	-3
 16276  01FC06  006F FF8F FFDA     	movff	plusw1,fsr2h
 16277  01FC0C  006F FF7B FFF6     	movff	postinc2,tblptrl
 16278  01FC12  006F FF77 FFF7     	movff	postdec2,tblptrh
 16279  01FC18                     	if	0	;tblptru may be non-zero
 16280  01FC18                     	endif
 16281  01FC18                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16282  01FC18  0E00               	movlw	low (__mediumconst shr (0+16))
 16283  01FC1A  6EF8               	movwf	tblptru,c
 16284  01FC1C                     	endif
 16285  01FC1C  0008               	tblrd		*
 16286  01FC1E  50F5               	movf	tablat,w,c
 16287  01FC20  6E32               	movwf	(btemp+8)^0,c
 16288  01FC22  6A33               	clrf	(btemp+9)^0,c
 16289  01FC24  5034               	movf	(btemp+10)^0,w,c
 16290  01FC26  2632               	addwf	(btemp+8)^0,f,c
 16291  01FC28  5035               	movf	(btemp+11)^0,w,c
 16292  01FC2A  2233               	addwfc	(btemp+9)^0,f,c
 16293  01FC2C  5033               	movf	(btemp+9)^0,w,c
 16294  01FC2E  E104               	bnz	u7610
 16295  01FC30  0E0A               	movlw	10
 16296  01FC32  5C32               	subwf	(btemp+8)^0,w,c
 16297  01FC34  A0D8               	btfss	status,0,c
 16298  01FC36  D79B               	goto	l9966
 16299  01FC38                     u7610:
 16300                           
 16301                           ;stkvar	_x @ sp[(-2)+0]
 16302  01FC38  0EFE               	movlw	-2
 16303  01FC3A  006F FF8C  F02A    	movff	plusw1,btemp
 16304  01FC40  0EFF               	movlw	-1
 16305  01FC42  006F FF8C  F02B    	movff	plusw1,btemp+1
 16306                           
 16307                           ; _getint: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 16308  01FC48  52E5               	movf	postdec1,f,c
 16309  01FC4A  52E5               	movf	postdec1,f,c
 16310  01FC4C  52E5               	movf	postdec1,f,c
 16311  01FC4E  52E5               	movf	postdec1,f,c
 16312  01FC50  0012               	return		;funcret
 16313  01FC52                     __end_of_getint:
 16314                           	opt callstack 0
 16315                           
 16316 ;; *************** function _getname *****************
 16317 ;; Defined at:
 16318 ;;		line 82 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__tz.c"
 16319 ;; Parameters:    Size  Location     Type
 16320 ;;  d               2  [STACK] PTR unsigned char 
 16321 ;;		 -> dst_name(7), std_name(7), 
 16322 ;;  p               2  [STACK] PTR PTR const unsigned c
 16323 ;;		 -> s(2), 
 16324 ;; Auto vars:     Size  Location     Type
 16325 ;;  i               2  [STACK] int 
 16326 ;; Return value:  Size  Location     Type
 16327 ;;                  1  [STACK] void 
 16328 ;; Registers used:
 16329 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11,
      + tblptrl, tblptrh, tblptru
 16330 ;; Tracked objects:
 16331 ;;		On entry : 0/39
 16332 ;;		On exit  : 0/0
 16333 ;;		Unchanged: 0/0
 16334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16335 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16336 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16337 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16338 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16339 ;;Total ram usage:        0 bytes
 16340 ;; Hardware stack levels used:    1
 16341 ;; Hardware stack levels required when called:   15
 16342 ;; This function calls:
 16343 ;;		Nothing
 16344 ;; This function is called by:
 16345 ;;		_do_tzset
 16346 ;; This function uses a reentrant model
 16347 ;;
 16348                           
 16349                           	psect	text48
 16350  01A8F0                     __ptext48:
 16351                           	opt callstack 0
 16352  01A8F0                     _getname:
 16353                           	opt callstack 0
 16354                           
 16355                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16356  01A8F0  52E6               	movf	postinc1,f,c
 16357  01A8F2  52E6               	movf	postinc1,f,c
 16358                           
 16359                           ;stkvar	_p @ sp[(-2)+-4]
 16360                           
 16361                           ;incstack = 0
 16362  01A8F4  0EFA               	movlw	-6
 16363  01A8F6  006F FF8F FFD9     	movff	plusw1,fsr2l
 16364  01A8FC  0EFB               	movlw	-5
 16365  01A8FE  006F FF8F FFDA     	movff	plusw1,fsr2h
 16366  01A904  006F FF7B FFF6     	movff	postinc2,tblptrl
 16367  01A90A  006F FF77 FFF7     	movff	postdec2,tblptrh
 16368  01A910                     	if	0	;tblptru may be non-zero
 16369  01A910                     	endif
 16370  01A910                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16371  01A910  0E00               	movlw	low (__mediumconst shr (0+16))
 16372  01A912  6EF8               	movwf	tblptru,c
 16373  01A914                     	endif
 16374  01A914  0008               	tblrd		*
 16375  01A916  50F5               	movf	tablat,w,c
 16376  01A918  0A3C               	xorlw	60
 16377  01A91A  A4D8               	btfss	status,2,c
 16378  01A91C  D09E               	goto	l16072
 16379                           
 16380                           ;stkvar	_p @ sp[(-2)+-4]
 16381  01A91E  0EFA               	movlw	-6
 16382  01A920  006F FF8F FFD9     	movff	plusw1,fsr2l
 16383  01A926  0EFB               	movlw	-5
 16384  01A928  006F FF8F FFDA     	movff	plusw1,fsr2h
 16385  01A92E  2ADE               	incf	postinc2,f,c
 16386  01A930  0E00               	movlw	0
 16387  01A932  22DD               	addwfc	postdec2,f,c
 16388                           
 16389                           ;stkvar	_i @ sp[(-2)+0]
 16390  01A934  0EFE               	movlw	-2
 16391  01A936  6AE3               	clrf	plusw1,c
 16392  01A938  0EFF               	movlw	-1
 16393  01A93A  6AE3               	clrf	plusw1,c
 16394  01A93C  D04D               	goto	l16066
 16395  01A93E                     l16062:
 16396                           
 16397                           ;stkvar	_i @ sp[(-2)+0]
 16398  01A93E  0EFE               	movlw	-2
 16399  01A940  006F FF8C  F034    	movff	plusw1,btemp+10
 16400  01A946  0EFF               	movlw	-1
 16401  01A948  006F FF8C  F035    	movff	plusw1,btemp+11
 16402                           
 16403                           ;stkvar	_p @ sp[(-2)+-4]
 16404  01A94E  0EFA               	movlw	-6
 16405  01A950  006F FF8F FFD9     	movff	plusw1,fsr2l
 16406  01A956  0EFB               	movlw	-5
 16407  01A958  006F FF8F FFDA     	movff	plusw1,fsr2h
 16408  01A95E  006F FF78  F032    	movff	postinc2,btemp+8
 16409  01A964  006F FF74  F033    	movff	postdec2,btemp+9
 16410  01A96A  5034               	movf	(btemp+10)^0,w,c
 16411  01A96C  2632               	addwf	(btemp+8)^0,f,c
 16412  01A96E  5035               	movf	(btemp+11)^0,w,c
 16413  01A970  2233               	addwfc	(btemp+9)^0,f,c
 16414  01A972  0060  F0CB  FFF6   	movff	btemp+8,tblptrl
 16415  01A978  0060  F0CF  FFF7   	movff	btemp+9,tblptrh
 16416  01A97E                     	if	0	;tblptru may be non-zero
 16417  01A97E                     	endif
 16418  01A97E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16419  01A97E  0E00               	movlw	low (__mediumconst shr (0+16))
 16420  01A980  6EF8               	movwf	tblptru,c
 16421  01A982                     	endif
 16422                           
 16423                           ;stkvar	_i @ sp[(-2)+0]
 16424  01A982  0EFE               	movlw	-2
 16425  01A984  006F FF8C  F034    	movff	plusw1,btemp+10
 16426  01A98A  0EFF               	movlw	-1
 16427  01A98C  006F FF8C  F035    	movff	plusw1,btemp+11
 16428                           
 16429                           ;stkvar	_d @ sp[(-2)+-2]
 16430  01A992  0EFC               	movlw	-4
 16431  01A994  006F FF8C  F032    	movff	plusw1,btemp+8
 16432  01A99A  0EFD               	movlw	-3
 16433  01A99C  006F FF8C  F033    	movff	plusw1,btemp+9
 16434  01A9A2  5034               	movf	(btemp+10)^0,w,c
 16435  01A9A4  2432               	addwf	(btemp+8)^0,w,c
 16436  01A9A6  6ED9               	movwf	fsr2l,c
 16437  01A9A8  5035               	movf	(btemp+11)^0,w,c
 16438  01A9AA  2033               	addwfc	(btemp+9)^0,w,c
 16439  01A9AC  6EDA               	movwf	fsr2h,c
 16440  01A9AE  0008               	tblrd		*
 16441  01A9B0  006F FFD7 FFDF     	movff	tablat,indf2
 16442                           
 16443                           ;stkvar	_i @ sp[(-2)+0]
 16444  01A9B6  0EFE               	movlw	-2
 16445  01A9B8  50E3               	movf	plusw1,w,c
 16446  01A9BA  0F01               	addlw	1
 16447  01A9BC  6E2A               	movwf	btemp^0,c
 16448  01A9BE  0EFE               	movlw	-2
 16449  01A9C0  0060  F0AB  FFE3   	movff	btemp,plusw1
 16450  01A9C6  6A2A               	clrf	btemp^0,c
 16451  01A9C8  0EFF               	movlw	-1
 16452  01A9CA  50E3               	movf	plusw1,w,c
 16453  01A9CC  202A               	addwfc	btemp^0,w,c
 16454  01A9CE  6E2A               	movwf	btemp^0,c
 16455  01A9D0  0EFF               	movlw	-1
 16456  01A9D2  0060  F0AB  FFE3   	movff	btemp,plusw1
 16457  01A9D8                     l16066:
 16458                           
 16459                           ;stkvar	_i @ sp[(-2)+0]
 16460  01A9D8  0EFE               	movlw	-2
 16461  01A9DA  006F FF8C  F034    	movff	plusw1,btemp+10
 16462  01A9E0  0EFF               	movlw	-1
 16463  01A9E2  006F FF8C  F035    	movff	plusw1,btemp+11
 16464                           
 16465                           ;stkvar	_p @ sp[(-2)+-4]
 16466  01A9E8  0EFA               	movlw	-6
 16467  01A9EA  006F FF8F FFD9     	movff	plusw1,fsr2l
 16468  01A9F0  0EFB               	movlw	-5
 16469  01A9F2  006F FF8F FFDA     	movff	plusw1,fsr2h
 16470  01A9F8  006F FF78  F032    	movff	postinc2,btemp+8
 16471  01A9FE  006F FF74  F033    	movff	postdec2,btemp+9
 16472  01AA04  5034               	movf	(btemp+10)^0,w,c
 16473  01AA06  2632               	addwf	(btemp+8)^0,f,c
 16474  01AA08  5035               	movf	(btemp+11)^0,w,c
 16475  01AA0A  2233               	addwfc	(btemp+9)^0,f,c
 16476  01AA0C  0060  F0CB  FFF6   	movff	btemp+8,tblptrl
 16477  01AA12  0060  F0CF  FFF7   	movff	btemp+9,tblptrh
 16478  01AA18                     	if	0	;tblptru may be non-zero
 16479  01AA18                     	endif
 16480  01AA18                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16481  01AA18  0E00               	movlw	low (__mediumconst shr (0+16))
 16482  01AA1A  6EF8               	movwf	tblptru,c
 16483  01AA1C                     	endif
 16484  01AA1C  0008               	tblrd		*
 16485  01AA1E  50F5               	movf	tablat,w,c
 16486  01AA20  0A3E               	xorlw	62
 16487  01AA22  B4D8               	btfsc	status,2,c
 16488  01AA24  D00E               	goto	u15580
 16489                           
 16490                           ;stkvar	_i @ sp[(-2)+0]
 16491  01AA26  0EFF               	movlw	-1
 16492  01AA28  BEE3               	btfsc	plusw1,7,c
 16493  01AA2A  D789               	goto	l16062
 16494  01AA2C  0EFF               	movlw	-1
 16495  01AA2E  50E3               	movf	plusw1,w,c
 16496  01AA30  E108               	bnz	u15580
 16497  01AA32  0EFE               	movlw	-2
 16498  01AA34  006F FF8C  F02A    	movff	plusw1,btemp
 16499  01AA3A  0E06               	movlw	6
 16500  01AA3C  5E2A               	subwf	btemp^0,f,c
 16501  01AA3E  A0D8               	btfss	status,0,c
 16502  01AA40  D77E               	goto	l16062
 16503  01AA42                     u15580:
 16504                           
 16505                           ;stkvar	_p @ sp[(-2)+-4]
 16506  01AA42  0EFA               	movlw	-6
 16507  01AA44  006F FF8F FFD9     	movff	plusw1,fsr2l
 16508  01AA4A  0EFB               	movlw	-5
 16509  01AA4C  006F FF8F FFDA     	movff	plusw1,fsr2h
 16510  01AA52  2ADE               	incf	postinc2,f,c
 16511  01AA54  0E00               	movlw	0
 16512  01AA56  22DD               	addwfc	postdec2,f,c
 16513  01AA58  D098               	goto	u15600
 16514  01AA5A                     l16072:
 16515                           
 16516                           ;stkvar	_i @ sp[(-2)+0]
 16517  01AA5A  0EFE               	movlw	-2
 16518  01AA5C  6AE3               	clrf	plusw1,c
 16519  01AA5E  0EFF               	movlw	-1
 16520  01AA60  6AE3               	clrf	plusw1,c
 16521  01AA62  D04D               	goto	l16078
 16522  01AA64                     l16074:
 16523                           
 16524                           ;stkvar	_i @ sp[(-2)+0]
 16525  01AA64  0EFE               	movlw	-2
 16526  01AA66  006F FF8C  F034    	movff	plusw1,btemp+10
 16527  01AA6C  0EFF               	movlw	-1
 16528  01AA6E  006F FF8C  F035    	movff	plusw1,btemp+11
 16529                           
 16530                           ;stkvar	_p @ sp[(-2)+-4]
 16531  01AA74  0EFA               	movlw	-6
 16532  01AA76  006F FF8F FFD9     	movff	plusw1,fsr2l
 16533  01AA7C  0EFB               	movlw	-5
 16534  01AA7E  006F FF8F FFDA     	movff	plusw1,fsr2h
 16535  01AA84  006F FF78  F032    	movff	postinc2,btemp+8
 16536  01AA8A  006F FF74  F033    	movff	postdec2,btemp+9
 16537  01AA90  5034               	movf	(btemp+10)^0,w,c
 16538  01AA92  2632               	addwf	(btemp+8)^0,f,c
 16539  01AA94  5035               	movf	(btemp+11)^0,w,c
 16540  01AA96  2233               	addwfc	(btemp+9)^0,f,c
 16541  01AA98  0060  F0CB  FFF6   	movff	btemp+8,tblptrl
 16542  01AA9E  0060  F0CF  FFF7   	movff	btemp+9,tblptrh
 16543  01AAA4                     	if	0	;tblptru may be non-zero
 16544  01AAA4                     	endif
 16545  01AAA4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16546  01AAA4  0E00               	movlw	low (__mediumconst shr (0+16))
 16547  01AAA6  6EF8               	movwf	tblptru,c
 16548  01AAA8                     	endif
 16549                           
 16550                           ;stkvar	_i @ sp[(-2)+0]
 16551  01AAA8  0EFE               	movlw	-2
 16552  01AAAA  006F FF8C  F034    	movff	plusw1,btemp+10
 16553  01AAB0  0EFF               	movlw	-1
 16554  01AAB2  006F FF8C  F035    	movff	plusw1,btemp+11
 16555                           
 16556                           ;stkvar	_d @ sp[(-2)+-2]
 16557  01AAB8  0EFC               	movlw	-4
 16558  01AABA  006F FF8C  F032    	movff	plusw1,btemp+8
 16559  01AAC0  0EFD               	movlw	-3
 16560  01AAC2  006F FF8C  F033    	movff	plusw1,btemp+9
 16561  01AAC8  5034               	movf	(btemp+10)^0,w,c
 16562  01AACA  2432               	addwf	(btemp+8)^0,w,c
 16563  01AACC  6ED9               	movwf	fsr2l,c
 16564  01AACE  5035               	movf	(btemp+11)^0,w,c
 16565  01AAD0  2033               	addwfc	(btemp+9)^0,w,c
 16566  01AAD2  6EDA               	movwf	fsr2h,c
 16567  01AAD4  0008               	tblrd		*
 16568  01AAD6  006F FFD7 FFDF     	movff	tablat,indf2
 16569                           
 16570                           ;stkvar	_i @ sp[(-2)+0]
 16571  01AADC  0EFE               	movlw	-2
 16572  01AADE  50E3               	movf	plusw1,w,c
 16573  01AAE0  0F01               	addlw	1
 16574  01AAE2  6E2A               	movwf	btemp^0,c
 16575  01AAE4  0EFE               	movlw	-2
 16576  01AAE6  0060  F0AB  FFE3   	movff	btemp,plusw1
 16577  01AAEC  6A2A               	clrf	btemp^0,c
 16578  01AAEE  0EFF               	movlw	-1
 16579  01AAF0  50E3               	movf	plusw1,w,c
 16580  01AAF2  202A               	addwfc	btemp^0,w,c
 16581  01AAF4  6E2A               	movwf	btemp^0,c
 16582  01AAF6  0EFF               	movlw	-1
 16583  01AAF8  0060  F0AB  FFE3   	movff	btemp,plusw1
 16584  01AAFE                     l16078:
 16585  01AAFE  0E9F               	movlw	159
 16586  01AB00  6E34               	movwf	(btemp+10)^0,c
 16587  01AB02  0EFF               	movlw	255
 16588  01AB04  6E35               	movwf	(btemp+11)^0,c
 16589                           
 16590                           ;stkvar	_i @ sp[(-2)+0]
 16591  01AB06  0EFE               	movlw	-2
 16592  01AB08  006F FF8C  F032    	movff	plusw1,btemp+8
 16593  01AB0E  0EFF               	movlw	-1
 16594  01AB10  006F FF8C  F033    	movff	plusw1,btemp+9
 16595                           
 16596                           ;stkvar	_p @ sp[(-2)+-4]
 16597  01AB16  0EFA               	movlw	-6
 16598  01AB18  006F FF8F FFD9     	movff	plusw1,fsr2l
 16599  01AB1E  0EFB               	movlw	-5
 16600  01AB20  006F FF8F FFDA     	movff	plusw1,fsr2h
 16601  01AB26  006F FF78  F030    	movff	postinc2,btemp+6
 16602  01AB2C  006F FF74  F031    	movff	postdec2,btemp+7
 16603  01AB32  5032               	movf	(btemp+8)^0,w,c
 16604  01AB34  2630               	addwf	(btemp+6)^0,f,c
 16605  01AB36  5033               	movf	(btemp+9)^0,w,c
 16606  01AB38  2231               	addwfc	(btemp+7)^0,f,c
 16607  01AB3A  0060  F0C3  FFF6   	movff	btemp+6,tblptrl
 16608  01AB40  0060  F0C7  FFF7   	movff	btemp+7,tblptrh
 16609  01AB46                     	if	0	;tblptru may be non-zero
 16610  01AB46                     	endif
 16611  01AB46                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16612  01AB46  0E00               	movlw	low (__mediumconst shr (0+16))
 16613  01AB48  6EF8               	movwf	tblptru,c
 16614  01AB4A                     	endif
 16615  01AB4A  0008               	tblrd		*
 16616  01AB4C  50F5               	movf	tablat,w,c
 16617  01AB4E  6E32               	movwf	(btemp+8)^0,c
 16618  01AB50  6A33               	clrf	(btemp+9)^0,c
 16619  01AB52  0E20               	movlw	32
 16620  01AB54  1232               	iorwf	(btemp+8)^0,f,c
 16621  01AB56  0E00               	movlw	0
 16622  01AB58  1233               	iorwf	(btemp+9)^0,f,c
 16623  01AB5A  5034               	movf	(btemp+10)^0,w,c
 16624  01AB5C  2632               	addwf	(btemp+8)^0,f,c
 16625  01AB5E  5035               	movf	(btemp+11)^0,w,c
 16626  01AB60  2233               	addwfc	(btemp+9)^0,f,c
 16627  01AB62  5033               	movf	(btemp+9)^0,w,c
 16628  01AB64  E112               	bnz	l16082
 16629  01AB66  0E1A               	movlw	26
 16630  01AB68  5C32               	subwf	(btemp+8)^0,w,c
 16631  01AB6A  B0D8               	btfsc	status,0,c
 16632  01AB6C  D00E               	goto	u15600
 16633                           
 16634                           ;stkvar	_i @ sp[(-2)+0]
 16635  01AB6E  0EFF               	movlw	-1
 16636  01AB70  BEE3               	btfsc	plusw1,7,c
 16637  01AB72  D778               	goto	l16074
 16638  01AB74  0EFF               	movlw	-1
 16639  01AB76  50E3               	movf	plusw1,w,c
 16640  01AB78  E108               	bnz	u15600
 16641  01AB7A  0EFE               	movlw	-2
 16642  01AB7C  006F FF8C  F02A    	movff	plusw1,btemp
 16643  01AB82  0E06               	movlw	6
 16644  01AB84  5E2A               	subwf	btemp^0,f,c
 16645  01AB86  A0D8               	btfss	status,0,c
 16646  01AB88  D76D               	goto	l16074
 16647  01AB8A                     u15600:
 16648  01AB8A                     l16082:
 16649                           
 16650                           ;stkvar	_i @ sp[(-2)+0]
 16651  01AB8A  0EFE               	movlw	-2
 16652  01AB8C  006F FF8C  F034    	movff	plusw1,btemp+10
 16653  01AB92  0EFF               	movlw	-1
 16654  01AB94  006F FF8C  F035    	movff	plusw1,btemp+11
 16655                           
 16656                           ;stkvar	_p @ sp[(-2)+-4]
 16657  01AB9A  0EFA               	movlw	-6
 16658  01AB9C  006F FF8F FFD9     	movff	plusw1,fsr2l
 16659  01ABA2  0EFB               	movlw	-5
 16660  01ABA4  006F FF8F FFDA     	movff	plusw1,fsr2h
 16661  01ABAA  5034               	movf	(btemp+10)^0,w,c
 16662  01ABAC  26DE               	addwf	postinc2,f,c
 16663  01ABAE  5035               	movf	(btemp+11)^0,w,c
 16664  01ABB0  22DD               	addwfc	postdec2,f,c
 16665                           
 16666                           ;stkvar	_i @ sp[(-2)+0]
 16667  01ABB2  0EFE               	movlw	-2
 16668  01ABB4  006F FF8C  F034    	movff	plusw1,btemp+10
 16669  01ABBA  0EFF               	movlw	-1
 16670  01ABBC  006F FF8C  F035    	movff	plusw1,btemp+11
 16671                           
 16672                           ;stkvar	_d @ sp[(-2)+-2]
 16673  01ABC2  0EFC               	movlw	-4
 16674  01ABC4  006F FF8C  F032    	movff	plusw1,btemp+8
 16675  01ABCA  0EFD               	movlw	-3
 16676  01ABCC  006F FF8C  F033    	movff	plusw1,btemp+9
 16677  01ABD2  5034               	movf	(btemp+10)^0,w,c
 16678  01ABD4  2432               	addwf	(btemp+8)^0,w,c
 16679  01ABD6  6ED9               	movwf	fsr2l,c
 16680  01ABD8  5035               	movf	(btemp+11)^0,w,c
 16681  01ABDA  2033               	addwfc	(btemp+9)^0,w,c
 16682  01ABDC  6EDA               	movwf	fsr2h,c
 16683  01ABDE  0E00               	movlw	0
 16684  01ABE0  6EDF               	movwf	indf2,c
 16685                           
 16686                           ; _getname: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 16687  01ABE2  0EFA               	movlw	250
 16688  01ABE4  26E1               	addwf	fsr1l,f,c
 16689  01ABE6  0EFF               	movlw	255
 16690  01ABE8  22E2               	addwfc	fsr1h,f,c
 16691  01ABEA  0012               	return		;funcret
 16692  01ABEC                     __end_of_getname:
 16693                           	opt callstack 0
 16694                           
 16695 ;; *************** function ___secs_to_tm *****************
 16696 ;; Defined at:
 16697 ;;		line 11 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__secs_to_tm.c"
 16698 ;; Parameters:    Size  Location     Type
 16699 ;;  t               8  [STACK] long long 
 16700 ;;  tm              2  [STACK] PTR struct tm
 16701 ;;		 -> localtime@tm(24), 
 16702 ;; Auto vars:     Size  Location     Type
 16703 ;;  years           8  [STACK] long long 
 16704 ;;  days            8  [STACK] long long 
 16705 ;;  secs            8  [STACK] long long 
 16706 ;;  remdays         4  [STACK] long 
 16707 ;;  q_cycles        4  [STACK] long 
 16708 ;;  c_cycles        4  [STACK] long 
 16709 ;;  remyears        4  [STACK] long 
 16710 ;;  remsecs         4  [STACK] long 
 16711 ;;  qc_cycles       4  [STACK] long 
 16712 ;;  months          2  [STACK] int 
 16713 ;;  leap            2  [STACK] int 
 16714 ;;  yday            2  [STACK] int 
 16715 ;;  wday            2  [STACK] int 
 16716 ;; Return value:  Size  Location     Type
 16717 ;;                  4  [STACK] long 
 16718 ;; Registers used:
 16719 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15, btemp+16, btemp+17, 
      +btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, 
      +btemp+30, btemp+31, tblptrl, tblptrh, tblptru
 16720 ;; Tracked objects:
 16721 ;;		On entry : 0/39
 16722 ;;		On exit  : 0/0
 16723 ;;		Unchanged: 0/0
 16724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16725 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16726 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16728 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16729 ;;Total ram usage:        0 bytes
 16730 ;; Hardware stack levels used:    1
 16731 ;; Hardware stack levels required when called:   16
 16732 ;; This function calls:
 16733 ;;		___aldiv
 16734 ;;		___almod
 16735 ;;		___aodiv
 16736 ;;		___aomod
 16737 ;;		___lmul
 16738 ;;		___omul
 16739 ;; This function is called by:
 16740 ;;		___localtime_r
 16741 ;; This function uses a reentrant model
 16742 ;;
 16743                           
 16744                           	psect	text49
 16745  01279A                     __ptext49:
 16746                           	opt callstack 0
 16747  01279A                     ___secs_to_tm:
 16748                           	opt callstack 0
 16749                           
 16750                           ; autosize = 57, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 16751  01279A  0E39               	movlw	57
 16752  01279C  26E1               	addwf	fsr1l,f,c
 16753  01279E  0E00               	movlw	0
 16754  0127A0  22E2               	addwfc	fsr1h,f,c
 16755                           
 16756                           ;stkvar	_t @ sp[(-57)+-8]
 16757                           
 16758                           ;incstack = 0
 16759  0127A2  0EC6               	movlw	-58
 16760  0127A4  AEE3               	btfss	plusw1,7,c
 16761  0127A6  D026               	goto	u16220
 16762  0127A8  0EC1               	movlw	-63
 16763  0127AA  006F FF8C  F02A    	movff	plusw1,btemp
 16764  0127B0  0E80               	movlw	128
 16765  0127B2  5E2A               	subwf	btemp^0,f,c
 16766  0127B4  0EC2               	movlw	-62
 16767  0127B6  006F FF8C  F02A    	movff	plusw1,btemp
 16768  0127BC  0EBD               	movlw	189
 16769  0127BE  5A2A               	subwfb	btemp^0,f,c
 16770  0127C0  0EC3               	movlw	-61
 16771  0127C2  006F FF8C  F02A    	movff	plusw1,btemp
 16772  0127C8  0E0E               	movlw	14
 16773  0127CA  5A2A               	subwfb	btemp^0,f,c
 16774  0127CC  0EC4               	movlw	-60
 16775  0127CE  006F FF8C  F02A    	movff	plusw1,btemp
 16776  0127D4  0EFF               	movlw	255
 16777  0127D6  5A2A               	subwfb	btemp^0,f,c
 16778  0127D8  0EC5               	movlw	-59
 16779  0127DA  006F FF8C  F02A    	movff	plusw1,btemp
 16780  0127E0  0EFF               	movlw	255
 16781  0127E2  5A2A               	subwfb	btemp^0,f,c
 16782  0127E4  0EC6               	movlw	-58
 16783  0127E6  006F FF8C  F02A    	movff	plusw1,btemp
 16784  0127EC  0EFF               	movlw	255
 16785  0127EE  5A2A               	subwfb	btemp^0,f,c
 16786  0127F0  A0D8               	btfss	status,0,c
 16787  0127F2  D028               	goto	u16230
 16788  0127F4                     u16220:
 16789                           
 16790                           ;stkvar	_t @ sp[(-57)+-8]
 16791  0127F4  0EC6               	movlw	-58
 16792  0127F6  BEE3               	btfsc	plusw1,7,c
 16793  0127F8  D02F               	goto	l16650
 16794  0127FA  0EC6               	movlw	-58
 16795  0127FC  50E3               	movf	plusw1,w,c
 16796  0127FE  E122               	bnz	u16230
 16797  012800  0EC5               	movlw	-59
 16798  012802  50E3               	movf	plusw1,w,c
 16799  012804  E11F               	bnz	u16230
 16800  012806  0EC4               	movlw	-60
 16801  012808  50E3               	movf	plusw1,w,c
 16802  01280A  E11C               	bnz	u16230
 16803  01280C  0EBF               	movlw	-65
 16804  01280E  04E3               	decf	plusw1,w,c
 16805  012810  0EC0               	movlw	-64
 16806  012812  006F FF8C  F02A    	movff	plusw1,btemp
 16807  012818  0E7B               	movlw	123
 16808  01281A  5A2A               	subwfb	btemp^0,f,c
 16809  01281C  0EC1               	movlw	-63
 16810  01281E  006F FF8C  F02A    	movff	plusw1,btemp
 16811  012824  0E9D               	movlw	157
 16812  012826  5A2A               	subwfb	btemp^0,f,c
 16813  012828  0EC2               	movlw	-62
 16814  01282A  006F FF8C  F02A    	movff	plusw1,btemp
 16815  012830  0E40               	movlw	64
 16816  012832  5A2A               	subwfb	btemp^0,f,c
 16817  012834  0EC3               	movlw	-61
 16818  012836  006F FF8C  F02A    	movff	plusw1,btemp
 16819  01283C  0EF1               	movlw	241
 16820  01283E  5A2A               	subwfb	btemp^0,f,c
 16821  012840  A0D8               	btfss	status,0,c
 16822  012842  D00A               	goto	l16650
 16823  012844                     u16230:
 16824  012844  0EFF               	movlw	255
 16825  012846  6E2A               	movwf	btemp^0,c
 16826  012848  0EFF               	movlw	255
 16827  01284A  6E2B               	movwf	(btemp+1)^0,c
 16828  01284C  0EFF               	movlw	255
 16829  01284E  6E2C               	movwf	(btemp+2)^0,c
 16830  012850  0EFF               	movlw	255
 16831  012852  6E2D               	movwf	(btemp+3)^0,c
 16832  012854  EF31  F09C         	goto	l3847
 16833  012858                     l16650:
 16834                           
 16835                           ;stkvar	_t @ sp[(-57)+-8]
 16836  012858  0EBF               	movlw	-65
 16837  01285A  50E3               	movf	plusw1,w,c
 16838  01285C  0F80               	addlw	128
 16839  01285E  6E3A               	movwf	(btemp+16)^0,c
 16840  012860  0EC0               	movlw	-64
 16841  012862  006F FF8C  F03B    	movff	plusw1,btemp+17
 16842  012868  0EA2               	movlw	162
 16843  01286A  223B               	addwfc	(btemp+17)^0,f,c
 16844  01286C  0EC1               	movlw	-63
 16845  01286E  006F FF8C  F03C    	movff	plusw1,btemp+18
 16846  012874  0E43               	movlw	67
 16847  012876  223C               	addwfc	(btemp+18)^0,f,c
 16848  012878  0EC2               	movlw	-62
 16849  01287A  006F FF8C  F03D    	movff	plusw1,btemp+19
 16850  012880  0EC7               	movlw	199
 16851  012882  223D               	addwfc	(btemp+19)^0,f,c
 16852  012884  0EC3               	movlw	-61
 16853  012886  006F FF8C  F03E    	movff	plusw1,btemp+20
 16854  01288C  0EFF               	movlw	255
 16855  01288E  223E               	addwfc	(btemp+20)^0,f,c
 16856  012890  0EC4               	movlw	-60
 16857  012892  006F FF8C  F03F    	movff	plusw1,btemp+21
 16858  012898  0EFF               	movlw	255
 16859  01289A  223F               	addwfc	(btemp+21)^0,f,c
 16860  01289C  0EC5               	movlw	-59
 16861  01289E  006F FF8C  F040    	movff	plusw1,btemp+22
 16862  0128A4  0EFF               	movlw	255
 16863  0128A6  2240               	addwfc	(btemp+22)^0,f,c
 16864  0128A8  0EC6               	movlw	-58
 16865  0128AA  006F FF8C  F041    	movff	plusw1,btemp+23
 16866  0128B0  0EFF               	movlw	255
 16867  0128B2  2241               	addwfc	(btemp+23)^0,f,c
 16868                           
 16869                           ;stkvar	_secs @ sp[(-57)+17]
 16870  0128B4  0ED8               	movlw	-40
 16871  0128B6  0060  F0EB  FFE3   	movff	btemp+16,plusw1
 16872  0128BC  0ED9               	movlw	-39
 16873  0128BE  0060  F0EF  FFE3   	movff	btemp+17,plusw1
 16874  0128C4  0EDA               	movlw	-38
 16875  0128C6  0060  F0F3  FFE3   	movff	btemp+18,plusw1
 16876  0128CC  0EDB               	movlw	-37
 16877  0128CE  0060  F0F7  FFE3   	movff	btemp+19,plusw1
 16878  0128D4  0EDC               	movlw	-36
 16879  0128D6  0060  F0FB  FFE3   	movff	btemp+20,plusw1
 16880  0128DC  0EDD               	movlw	-35
 16881  0128DE  0060  F0FF  FFE3   	movff	btemp+21,plusw1
 16882  0128E4  0EDE               	movlw	-34
 16883  0128E6  0060  F103  FFE3   	movff	btemp+22,plusw1
 16884  0128EC  0EDF               	movlw	-33
 16885  0128EE  0060  F107  FFE3   	movff	btemp+23,plusw1
 16886  0128F4  0E80               	movlw	128
 16887  0128F6  6EE6               	movwf	postinc1,c
 16888  0128F8  0E51               	movlw	81
 16889  0128FA  6EE6               	movwf	postinc1,c
 16890  0128FC  0E01               	movlw	1
 16891  0128FE  6EE6               	movwf	postinc1,c
 16892  012900  0E00               	movlw	0
 16893  012902  6EE6               	movwf	postinc1,c
 16894  012904  0E00               	movlw	0
 16895  012906  6EE6               	movwf	postinc1,c
 16896  012908  0E00               	movlw	0
 16897  01290A  6EE6               	movwf	postinc1,c
 16898  01290C  0E00               	movlw	0
 16899  01290E  6EE6               	movwf	postinc1,c
 16900  012910  0E00               	movlw	0
 16901  012912  6EE6               	movwf	postinc1,c
 16902                           
 16903                           ;stkvar	_secs @ sp[(-65)+17]
 16904  012914  50E1               	movf	fsr1l,w,c
 16905  012916  0FD0               	addlw	-48
 16906  012918  6ED9               	movwf	fsr2l,c
 16907  01291A  50E2               	movf	fsr1h,w,c
 16908  01291C  6EDA               	movwf	fsr2h,c
 16909  01291E  0EFF               	movlw	255
 16910  012920  22DA               	addwfc	fsr2h,f,c
 16911  012922  006F FF7B FFE6     	movff	postinc2,postinc1
 16912  012928  006F FF7B FFE6     	movff	postinc2,postinc1
 16913  01292E  006F FF7B FFE6     	movff	postinc2,postinc1
 16914  012934  006F FF7B FFE6     	movff	postinc2,postinc1
 16915  01293A  006F FF7B FFE6     	movff	postinc2,postinc1
 16916  012940  006F FF7B FFE6     	movff	postinc2,postinc1
 16917  012946  006F FF7B FFE6     	movff	postinc2,postinc1
 16918  01294C  006F FF7B FFE6     	movff	postinc2,postinc1
 16919  012952  EC24  F0DE         	call	___aodiv	;wreg free
 16920  012956  52E5               	movf	postdec1,f,c
 16921  012958  006F FF9C  F041    	movff	indf1,btemp+23
 16922  01295E  52E5               	movf	postdec1,f,c
 16923  012960  006F FF9C  F040    	movff	indf1,btemp+22
 16924  012966  52E5               	movf	postdec1,f,c
 16925  012968  006F FF9C  F03F    	movff	indf1,btemp+21
 16926  01296E  52E5               	movf	postdec1,f,c
 16927  012970  006F FF9C  F03E    	movff	indf1,btemp+20
 16928  012976  52E5               	movf	postdec1,f,c
 16929  012978  006F FF9C  F03D    	movff	indf1,btemp+19
 16930  01297E  52E5               	movf	postdec1,f,c
 16931  012980  006F FF9C  F03C    	movff	indf1,btemp+18
 16932  012986  52E5               	movf	postdec1,f,c
 16933  012988  006F FF9C  F03B    	movff	indf1,btemp+17
 16934  01298E  52E5               	movf	postdec1,f,c
 16935  012990  006F FF9C  F03A    	movff	indf1,btemp+16
 16936  012996  0EF8               	movlw	248
 16937  012998  26E1               	addwf	fsr1l,f,c
 16938  01299A  0EFF               	movlw	255
 16939  01299C  22E2               	addwfc	fsr1h,f,c
 16940                           
 16941                           ;stkvar	_days @ sp[(-57)+9]
 16942  01299E  0ED0               	movlw	-48
 16943  0129A0  0060  F0EB  FFE3   	movff	btemp+16,plusw1
 16944  0129A6  0ED1               	movlw	-47
 16945  0129A8  0060  F0EF  FFE3   	movff	btemp+17,plusw1
 16946  0129AE  0ED2               	movlw	-46
 16947  0129B0  0060  F0F3  FFE3   	movff	btemp+18,plusw1
 16948  0129B6  0ED3               	movlw	-45
 16949  0129B8  0060  F0F7  FFE3   	movff	btemp+19,plusw1
 16950  0129BE  0ED4               	movlw	-44
 16951  0129C0  0060  F0FB  FFE3   	movff	btemp+20,plusw1
 16952  0129C6  0ED5               	movlw	-43
 16953  0129C8  0060  F0FF  FFE3   	movff	btemp+21,plusw1
 16954  0129CE  0ED6               	movlw	-42
 16955  0129D0  0060  F103  FFE3   	movff	btemp+22,plusw1
 16956  0129D6  0ED7               	movlw	-41
 16957  0129D8  0060  F107  FFE3   	movff	btemp+23,plusw1
 16958  0129DE  0E80               	movlw	128
 16959  0129E0  6EE6               	movwf	postinc1,c
 16960  0129E2  0E51               	movlw	81
 16961  0129E4  6EE6               	movwf	postinc1,c
 16962  0129E6  0E01               	movlw	1
 16963  0129E8  6EE6               	movwf	postinc1,c
 16964  0129EA  0E00               	movlw	0
 16965  0129EC  6EE6               	movwf	postinc1,c
 16966  0129EE  0E00               	movlw	0
 16967  0129F0  6EE6               	movwf	postinc1,c
 16968  0129F2  0E00               	movlw	0
 16969  0129F4  6EE6               	movwf	postinc1,c
 16970  0129F6  0E00               	movlw	0
 16971  0129F8  6EE6               	movwf	postinc1,c
 16972  0129FA  0E00               	movlw	0
 16973  0129FC  6EE6               	movwf	postinc1,c
 16974                           
 16975                           ;stkvar	_secs @ sp[(-65)+17]
 16976  0129FE  50E1               	movf	fsr1l,w,c
 16977  012A00  0FD0               	addlw	-48
 16978  012A02  6ED9               	movwf	fsr2l,c
 16979  012A04  50E2               	movf	fsr1h,w,c
 16980  012A06  6EDA               	movwf	fsr2h,c
 16981  012A08  0EFF               	movlw	255
 16982  012A0A  22DA               	addwfc	fsr2h,f,c
 16983  012A0C  006F FF7B FFE6     	movff	postinc2,postinc1
 16984  012A12  006F FF7B FFE6     	movff	postinc2,postinc1
 16985  012A18  006F FF7B FFE6     	movff	postinc2,postinc1
 16986  012A1E  006F FF7B FFE6     	movff	postinc2,postinc1
 16987  012A24  006F FF7B FFE6     	movff	postinc2,postinc1
 16988  012A2A  006F FF7B FFE6     	movff	postinc2,postinc1
 16989  012A30  006F FF7B FFE6     	movff	postinc2,postinc1
 16990  012A36  006F FF7B FFE6     	movff	postinc2,postinc1
 16991  012A3C  EC10  F0E4         	call	___aomod	;wreg free
 16992  012A40  52E5               	movf	postdec1,f,c
 16993  012A42  006F FF9C  F041    	movff	indf1,btemp+23
 16994  012A48  52E5               	movf	postdec1,f,c
 16995  012A4A  006F FF9C  F040    	movff	indf1,btemp+22
 16996  012A50  52E5               	movf	postdec1,f,c
 16997  012A52  006F FF9C  F03F    	movff	indf1,btemp+21
 16998  012A58  52E5               	movf	postdec1,f,c
 16999  012A5A  006F FF9C  F03E    	movff	indf1,btemp+20
 17000  012A60  52E5               	movf	postdec1,f,c
 17001  012A62  006F FF9C  F03D    	movff	indf1,btemp+19
 17002  012A68  52E5               	movf	postdec1,f,c
 17003  012A6A  006F FF9C  F03C    	movff	indf1,btemp+18
 17004  012A70  52E5               	movf	postdec1,f,c
 17005  012A72  006F FF9C  F03B    	movff	indf1,btemp+17
 17006  012A78  52E5               	movf	postdec1,f,c
 17007  012A7A  006F FF9C  F03A    	movff	indf1,btemp+16
 17008  012A80  0EF8               	movlw	248
 17009  012A82  26E1               	addwf	fsr1l,f,c
 17010  012A84  0EFF               	movlw	255
 17011  012A86  22E2               	addwfc	fsr1h,f,c
 17012  012A88  0060  F0E8  F032   	movff	btemp+16,btemp+8
 17013  012A8E  0060  F0EC  F033   	movff	btemp+17,btemp+9
 17014  012A94  0060  F0F0  F034   	movff	btemp+18,btemp+10
 17015  012A9A  0060  F0F4  F035   	movff	btemp+19,btemp+11
 17016                           
 17017                           ;stkvar	_remsecs @ sp[(-57)+41]
 17018  012AA0  0EF0               	movlw	-16
 17019  012AA2  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 17020  012AA8  0EF1               	movlw	-15
 17021  012AAA  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 17022  012AB0  0EF2               	movlw	-14
 17023  012AB2  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 17024  012AB8  0EF3               	movlw	-13
 17025  012ABA  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 17026                           
 17027                           ;stkvar	_remsecs @ sp[(-57)+41]
 17028  012AC0  0EF3               	movlw	-13
 17029  012AC2  AEE3               	btfss	plusw1,7,c
 17030  012AC4  D01F               	goto	l16662
 17031                           
 17032                           ;stkvar	_remsecs @ sp[(-57)+41]
 17033  012AC6  50E1               	movf	fsr1l,w,c
 17034  012AC8  0FF0               	addlw	-16
 17035  012ACA  6ED9               	movwf	fsr2l,c
 17036  012ACC  50E2               	movf	fsr1h,w,c
 17037  012ACE  6EDA               	movwf	fsr2h,c
 17038  012AD0  0EFF               	movlw	255
 17039  012AD2  22DA               	addwfc	fsr2h,f,c
 17040  012AD4  0E80               	movlw	128
 17041  012AD6  26DE               	addwf	postinc2,f,c
 17042  012AD8  0E51               	movlw	81
 17043  012ADA  22DE               	addwfc	postinc2,f,c
 17044  012ADC  0E01               	movlw	1
 17045  012ADE  22DE               	addwfc	postinc2,f,c
 17046  012AE0  0E00               	movlw	0
 17047  012AE2  22DE               	addwfc	postinc2,f,c
 17048                           
 17049                           ;stkvar	_days @ sp[(-57)+9]
 17050  012AE4  50E1               	movf	fsr1l,w,c
 17051  012AE6  0FD0               	addlw	-48
 17052  012AE8  6ED9               	movwf	fsr2l,c
 17053  012AEA  50E2               	movf	fsr1h,w,c
 17054  012AEC  6EDA               	movwf	fsr2h,c
 17055  012AEE  0EFF               	movlw	255
 17056  012AF0  22DA               	addwfc	fsr2h,f,c
 17057  012AF2  06DE               	decf	postinc2,f,c
 17058  012AF4  0E00               	movlw	0
 17059  012AF6  5ADE               	subwfb	postinc2,f,c
 17060  012AF8  5ADE               	subwfb	postinc2,f,c
 17061  012AFA  5ADE               	subwfb	postinc2,f,c
 17062  012AFC  5ADE               	subwfb	postinc2,f,c
 17063  012AFE  5ADE               	subwfb	postinc2,f,c
 17064  012B00  5ADE               	subwfb	postinc2,f,c
 17065  012B02  5ADE               	subwfb	postinc2,f,c
 17066  012B04                     l16662:
 17067  012B04  0E07               	movlw	7
 17068  012B06  6EE6               	movwf	postinc1,c
 17069  012B08  0E00               	movlw	0
 17070  012B0A  6EE6               	movwf	postinc1,c
 17071  012B0C  0E00               	movlw	0
 17072  012B0E  6EE6               	movwf	postinc1,c
 17073  012B10  0E00               	movlw	0
 17074  012B12  6EE6               	movwf	postinc1,c
 17075  012B14  0E00               	movlw	0
 17076  012B16  6EE6               	movwf	postinc1,c
 17077  012B18  0E00               	movlw	0
 17078  012B1A  6EE6               	movwf	postinc1,c
 17079  012B1C  0E00               	movlw	0
 17080  012B1E  6EE6               	movwf	postinc1,c
 17081  012B20  0E00               	movlw	0
 17082  012B22  6EE6               	movwf	postinc1,c
 17083                           
 17084                           ;stkvar	_days @ sp[(-65)+9]
 17085  012B24  0EC8               	movlw	-56
 17086  012B26  50E3               	movf	plusw1,w,c
 17087  012B28  0F03               	addlw	3
 17088  012B2A  6E3A               	movwf	(btemp+16)^0,c
 17089  012B2C  0EC9               	movlw	-55
 17090  012B2E  006F FF8C  F03B    	movff	plusw1,btemp+17
 17091  012B34  0E00               	movlw	0
 17092  012B36  223B               	addwfc	(btemp+17)^0,f,c
 17093  012B38  0ECA               	movlw	-54
 17094  012B3A  006F FF8C  F03C    	movff	plusw1,btemp+18
 17095  012B40  0E00               	movlw	0
 17096  012B42  223C               	addwfc	(btemp+18)^0,f,c
 17097  012B44  0ECB               	movlw	-53
 17098  012B46  006F FF8C  F03D    	movff	plusw1,btemp+19
 17099  012B4C  0E00               	movlw	0
 17100  012B4E  223D               	addwfc	(btemp+19)^0,f,c
 17101  012B50  0ECC               	movlw	-52
 17102  012B52  006F FF8C  F03E    	movff	plusw1,btemp+20
 17103  012B58  0E00               	movlw	0
 17104  012B5A  223E               	addwfc	(btemp+20)^0,f,c
 17105  012B5C  0ECD               	movlw	-51
 17106  012B5E  006F FF8C  F03F    	movff	plusw1,btemp+21
 17107  012B64  0E00               	movlw	0
 17108  012B66  223F               	addwfc	(btemp+21)^0,f,c
 17109  012B68  0ECE               	movlw	-50
 17110  012B6A  006F FF8C  F040    	movff	plusw1,btemp+22
 17111  012B70  0E00               	movlw	0
 17112  012B72  2240               	addwfc	(btemp+22)^0,f,c
 17113  012B74  0ECF               	movlw	-49
 17114  012B76  006F FF8C  F041    	movff	plusw1,btemp+23
 17115  012B7C  0E00               	movlw	0
 17116  012B7E  2241               	addwfc	(btemp+23)^0,f,c
 17117  012B80  0060  F0EB  FFE6   	movff	btemp+16,postinc1
 17118  012B86  0060  F0EF  FFE6   	movff	btemp+17,postinc1
 17119  012B8C  0060  F0F3  FFE6   	movff	btemp+18,postinc1
 17120  012B92  0060  F0F7  FFE6   	movff	btemp+19,postinc1
 17121  012B98  0060  F0FB  FFE6   	movff	btemp+20,postinc1
 17122  012B9E  0060  F0FF  FFE6   	movff	btemp+21,postinc1
 17123  012BA4  0060  F103  FFE6   	movff	btemp+22,postinc1
 17124  012BAA  0060  F107  FFE6   	movff	btemp+23,postinc1
 17125  012BB0  EC10  F0E4         	call	___aomod	;wreg free
 17126  012BB4  52E5               	movf	postdec1,f,c
 17127  012BB6  006F FF9C  F041    	movff	indf1,btemp+23
 17128  012BBC  52E5               	movf	postdec1,f,c
 17129  012BBE  006F FF9C  F040    	movff	indf1,btemp+22
 17130  012BC4  52E5               	movf	postdec1,f,c
 17131  012BC6  006F FF9C  F03F    	movff	indf1,btemp+21
 17132  012BCC  52E5               	movf	postdec1,f,c
 17133  012BCE  006F FF9C  F03E    	movff	indf1,btemp+20
 17134  012BD4  52E5               	movf	postdec1,f,c
 17135  012BD6  006F FF9C  F03D    	movff	indf1,btemp+19
 17136  012BDC  52E5               	movf	postdec1,f,c
 17137  012BDE  006F FF9C  F03C    	movff	indf1,btemp+18
 17138  012BE4  52E5               	movf	postdec1,f,c
 17139  012BE6  006F FF9C  F03B    	movff	indf1,btemp+17
 17140  012BEC  52E5               	movf	postdec1,f,c
 17141  012BEE  006F FF9C  F03A    	movff	indf1,btemp+16
 17142  012BF4  0EF8               	movlw	248
 17143  012BF6  26E1               	addwf	fsr1l,f,c
 17144  012BF8  0EFF               	movlw	255
 17145  012BFA  22E2               	addwfc	fsr1h,f,c
 17146  012BFC  0060  F0E8  F034   	movff	btemp+16,btemp+10
 17147  012C02  0060  F0EC  F035   	movff	btemp+17,btemp+11
 17148                           
 17149                           ;stkvar	_wday @ sp[(-57)+55]
 17150  012C08  0EFE               	movlw	-2
 17151  012C0A  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 17152  012C10  0EFF               	movlw	-1
 17153  012C12  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 17154                           
 17155                           ;stkvar	_wday @ sp[(-57)+55]
 17156  012C18  0EFF               	movlw	-1
 17157  012C1A  AEE3               	btfss	plusw1,7,c
 17158  012C1C  D011               	goto	l16668
 17159                           
 17160                           ;stkvar	_wday @ sp[(-57)+55]
 17161  012C1E  0EFE               	movlw	-2
 17162  012C20  50E3               	movf	plusw1,w,c
 17163  012C22  0F07               	addlw	7
 17164  012C24  6E2A               	movwf	btemp^0,c
 17165  012C26  0EFE               	movlw	-2
 17166  012C28  0060  F0AB  FFE3   	movff	btemp,plusw1
 17167  012C2E  6A2A               	clrf	btemp^0,c
 17168  012C30  0EFF               	movlw	-1
 17169  012C32  50E3               	movf	plusw1,w,c
 17170  012C34  202A               	addwfc	btemp^0,w,c
 17171  012C36  6E2A               	movwf	btemp^0,c
 17172  012C38  0EFF               	movlw	-1
 17173  012C3A  0060  F0AB  FFE3   	movff	btemp,plusw1
 17174  012C40                     l16668:
 17175  012C40  0EB1               	movlw	177
 17176  012C42  6EE6               	movwf	postinc1,c
 17177  012C44  0E3A               	movlw	58
 17178  012C46  6EE6               	movwf	postinc1,c
 17179  012C48  0E02               	movlw	2
 17180  012C4A  6EE6               	movwf	postinc1,c
 17181  012C4C  0E00               	movlw	0
 17182  012C4E  6EE6               	movwf	postinc1,c
 17183  012C50  0E00               	movlw	0
 17184  012C52  6EE6               	movwf	postinc1,c
 17185  012C54  0E00               	movlw	0
 17186  012C56  6EE6               	movwf	postinc1,c
 17187  012C58  0E00               	movlw	0
 17188  012C5A  6EE6               	movwf	postinc1,c
 17189  012C5C  0E00               	movlw	0
 17190  012C5E  6EE6               	movwf	postinc1,c
 17191                           
 17192                           ;stkvar	_days @ sp[(-65)+9]
 17193  012C60  50E1               	movf	fsr1l,w,c
 17194  012C62  0FC8               	addlw	-56
 17195  012C64  6ED9               	movwf	fsr2l,c
 17196  012C66  50E2               	movf	fsr1h,w,c
 17197  012C68  6EDA               	movwf	fsr2h,c
 17198  012C6A  0EFF               	movlw	255
 17199  012C6C  22DA               	addwfc	fsr2h,f,c
 17200  012C6E  006F FF7B FFE6     	movff	postinc2,postinc1
 17201  012C74  006F FF7B FFE6     	movff	postinc2,postinc1
 17202  012C7A  006F FF7B FFE6     	movff	postinc2,postinc1
 17203  012C80  006F FF7B FFE6     	movff	postinc2,postinc1
 17204  012C86  006F FF7B FFE6     	movff	postinc2,postinc1
 17205  012C8C  006F FF7B FFE6     	movff	postinc2,postinc1
 17206  012C92  006F FF7B FFE6     	movff	postinc2,postinc1
 17207  012C98  006F FF7B FFE6     	movff	postinc2,postinc1
 17208  012C9E  EC24  F0DE         	call	___aodiv	;wreg free
 17209  012CA2  52E5               	movf	postdec1,f,c
 17210  012CA4  006F FF9C  F041    	movff	indf1,btemp+23
 17211  012CAA  52E5               	movf	postdec1,f,c
 17212  012CAC  006F FF9C  F040    	movff	indf1,btemp+22
 17213  012CB2  52E5               	movf	postdec1,f,c
 17214  012CB4  006F FF9C  F03F    	movff	indf1,btemp+21
 17215  012CBA  52E5               	movf	postdec1,f,c
 17216  012CBC  006F FF9C  F03E    	movff	indf1,btemp+20
 17217  012CC2  52E5               	movf	postdec1,f,c
 17218  012CC4  006F FF9C  F03D    	movff	indf1,btemp+19
 17219  012CCA  52E5               	movf	postdec1,f,c
 17220  012CCC  006F FF9C  F03C    	movff	indf1,btemp+18
 17221  012CD2  52E5               	movf	postdec1,f,c
 17222  012CD4  006F FF9C  F03B    	movff	indf1,btemp+17
 17223  012CDA  52E5               	movf	postdec1,f,c
 17224  012CDC  006F FF9C  F03A    	movff	indf1,btemp+16
 17225  012CE2  0EF8               	movlw	248
 17226  012CE4  26E1               	addwf	fsr1l,f,c
 17227  012CE6  0EFF               	movlw	255
 17228  012CE8  22E2               	addwfc	fsr1h,f,c
 17229  012CEA  0060  F0E8  F032   	movff	btemp+16,btemp+8
 17230  012CF0  0060  F0EC  F033   	movff	btemp+17,btemp+9
 17231  012CF6  0060  F0F0  F034   	movff	btemp+18,btemp+10
 17232  012CFC  0060  F0F4  F035   	movff	btemp+19,btemp+11
 17233                           
 17234                           ;stkvar	_qc_cycles @ sp[(-57)+45]
 17235  012D02  0EF4               	movlw	-12
 17236  012D04  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 17237  012D0A  0EF5               	movlw	-11
 17238  012D0C  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 17239  012D12  0EF6               	movlw	-10
 17240  012D14  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 17241  012D1A  0EF7               	movlw	-9
 17242  012D1C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 17243  012D22  0EB1               	movlw	177
 17244  012D24  6EE6               	movwf	postinc1,c
 17245  012D26  0E3A               	movlw	58
 17246  012D28  6EE6               	movwf	postinc1,c
 17247  012D2A  0E02               	movlw	2
 17248  012D2C  6EE6               	movwf	postinc1,c
 17249  012D2E  0E00               	movlw	0
 17250  012D30  6EE6               	movwf	postinc1,c
 17251  012D32  0E00               	movlw	0
 17252  012D34  6EE6               	movwf	postinc1,c
 17253  012D36  0E00               	movlw	0
 17254  012D38  6EE6               	movwf	postinc1,c
 17255  012D3A  0E00               	movlw	0
 17256  012D3C  6EE6               	movwf	postinc1,c
 17257  012D3E  0E00               	movlw	0
 17258  012D40  6EE6               	movwf	postinc1,c
 17259                           
 17260                           ;stkvar	_days @ sp[(-65)+9]
 17261  012D42  50E1               	movf	fsr1l,w,c
 17262  012D44  0FC8               	addlw	-56
 17263  012D46  6ED9               	movwf	fsr2l,c
 17264  012D48  50E2               	movf	fsr1h,w,c
 17265  012D4A  6EDA               	movwf	fsr2h,c
 17266  012D4C  0EFF               	movlw	255
 17267  012D4E  22DA               	addwfc	fsr2h,f,c
 17268  012D50  006F FF7B FFE6     	movff	postinc2,postinc1
 17269  012D56  006F FF7B FFE6     	movff	postinc2,postinc1
 17270  012D5C  006F FF7B FFE6     	movff	postinc2,postinc1
 17271  012D62  006F FF7B FFE6     	movff	postinc2,postinc1
 17272  012D68  006F FF7B FFE6     	movff	postinc2,postinc1
 17273  012D6E  006F FF7B FFE6     	movff	postinc2,postinc1
 17274  012D74  006F FF7B FFE6     	movff	postinc2,postinc1
 17275  012D7A  006F FF7B FFE6     	movff	postinc2,postinc1
 17276  012D80  EC10  F0E4         	call	___aomod	;wreg free
 17277  012D84  52E5               	movf	postdec1,f,c
 17278  012D86  006F FF9C  F041    	movff	indf1,btemp+23
 17279  012D8C  52E5               	movf	postdec1,f,c
 17280  012D8E  006F FF9C  F040    	movff	indf1,btemp+22
 17281  012D94  52E5               	movf	postdec1,f,c
 17282  012D96  006F FF9C  F03F    	movff	indf1,btemp+21
 17283  012D9C  52E5               	movf	postdec1,f,c
 17284  012D9E  006F FF9C  F03E    	movff	indf1,btemp+20
 17285  012DA4  52E5               	movf	postdec1,f,c
 17286  012DA6  006F FF9C  F03D    	movff	indf1,btemp+19
 17287  012DAC  52E5               	movf	postdec1,f,c
 17288  012DAE  006F FF9C  F03C    	movff	indf1,btemp+18
 17289  012DB4  52E5               	movf	postdec1,f,c
 17290  012DB6  006F FF9C  F03B    	movff	indf1,btemp+17
 17291  012DBC  52E5               	movf	postdec1,f,c
 17292  012DBE  006F FF9C  F03A    	movff	indf1,btemp+16
 17293  012DC4  0EF8               	movlw	248
 17294  012DC6  26E1               	addwf	fsr1l,f,c
 17295  012DC8  0EFF               	movlw	255
 17296  012DCA  22E2               	addwfc	fsr1h,f,c
 17297  012DCC  0060  F0E8  F032   	movff	btemp+16,btemp+8
 17298  012DD2  0060  F0EC  F033   	movff	btemp+17,btemp+9
 17299  012DD8  0060  F0F0  F034   	movff	btemp+18,btemp+10
 17300  012DDE  0060  F0F4  F035   	movff	btemp+19,btemp+11
 17301                           
 17302                           ;stkvar	_remdays @ sp[(-57)+25]
 17303  012DE4  0EE0               	movlw	-32
 17304  012DE6  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 17305  012DEC  0EE1               	movlw	-31
 17306  012DEE  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 17307  012DF4  0EE2               	movlw	-30
 17308  012DF6  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 17309  012DFC  0EE3               	movlw	-29
 17310  012DFE  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 17311                           
 17312                           ;stkvar	_remdays @ sp[(-57)+25]
 17313  012E04  0EE3               	movlw	-29
 17314  012E06  AEE3               	btfss	plusw1,7,c
 17315  012E08  D01B               	goto	l16676
 17316                           
 17317                           ;stkvar	_remdays @ sp[(-57)+25]
 17318  012E0A  50E1               	movf	fsr1l,w,c
 17319  012E0C  0FE0               	addlw	-32
 17320  012E0E  6ED9               	movwf	fsr2l,c
 17321  012E10  50E2               	movf	fsr1h,w,c
 17322  012E12  6EDA               	movwf	fsr2h,c
 17323  012E14  0EFF               	movlw	255
 17324  012E16  22DA               	addwfc	fsr2h,f,c
 17325  012E18  0EB1               	movlw	177
 17326  012E1A  26DE               	addwf	postinc2,f,c
 17327  012E1C  0E3A               	movlw	58
 17328  012E1E  22DE               	addwfc	postinc2,f,c
 17329  012E20  0E02               	movlw	2
 17330  012E22  22DE               	addwfc	postinc2,f,c
 17331  012E24  0E00               	movlw	0
 17332  012E26  22DE               	addwfc	postinc2,f,c
 17333                           
 17334                           ;stkvar	_qc_cycles @ sp[(-57)+45]
 17335  012E28  50E1               	movf	fsr1l,w,c
 17336  012E2A  0FF4               	addlw	-12
 17337  012E2C  6ED9               	movwf	fsr2l,c
 17338  012E2E  50E2               	movf	fsr1h,w,c
 17339  012E30  6EDA               	movwf	fsr2h,c
 17340  012E32  0EFF               	movlw	255
 17341  012E34  22DA               	addwfc	fsr2h,f,c
 17342  012E36  06DE               	decf	postinc2,f,c
 17343  012E38  0E00               	movlw	0
 17344  012E3A  5ADE               	subwfb	postinc2,f,c
 17345  012E3C  5ADE               	subwfb	postinc2,f,c
 17346  012E3E  5ADE               	subwfb	postinc2,f,c
 17347  012E40                     l16676:
 17348  012E40  0EAC               	movlw	172
 17349  012E42  6EE6               	movwf	postinc1,c
 17350  012E44  0E8E               	movlw	142
 17351  012E46  6EE6               	movwf	postinc1,c
 17352  012E48  0E00               	movlw	0
 17353  012E4A  6EE6               	movwf	postinc1,c
 17354  012E4C  0E00               	movlw	0
 17355  012E4E  6EE6               	movwf	postinc1,c
 17356                           
 17357                           ;stkvar	_remdays @ sp[(-61)+25]
 17358  012E50  0EDC               	movlw	-36
 17359  012E52  006F FF8F FFE6     	movff	plusw1,postinc1
 17360  012E58  006F FF8F FFE6     	movff	plusw1,postinc1
 17361  012E5E  006F FF8F FFE6     	movff	plusw1,postinc1
 17362  012E64  006F FF8F FFE6     	movff	plusw1,postinc1
 17363  012E6A  ECD0  F0ED         	call	___aldiv	;wreg free
 17364                           
 17365                           ;stkvar	_c_cycles @ sp[(-57)+33]
 17366  012E6E  0EE8               	movlw	-24
 17367  012E70  0060  F0AB  FFE3   	movff	btemp,plusw1
 17368  012E76  0EE9               	movlw	-23
 17369  012E78  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 17370  012E7E  0EEA               	movlw	-22
 17371  012E80  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 17372  012E86  0EEB               	movlw	-21
 17373  012E88  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 17374                           
 17375                           ;stkvar	_c_cycles @ sp[(-57)+33]
 17376  012E8E  0EE8               	movlw	-24
 17377  012E90  006F FF8C  F02A    	movff	plusw1,btemp
 17378  012E96  0E04               	movlw	4
 17379  012E98  182A               	xorwf	btemp^0,w,c
 17380  012E9A  E116               	bnz	l16682
 17381  012E9C  0EE9               	movlw	-23
 17382  012E9E  50E3               	movf	plusw1,w,c
 17383  012EA0  E113               	bnz	l16682
 17384  012EA2  0EEA               	movlw	-22
 17385  012EA4  50E3               	movf	plusw1,w,c
 17386  012EA6  E110               	bnz	l16682
 17387  012EA8  0EEB               	movlw	-21
 17388  012EAA  50E3               	movf	plusw1,w,c
 17389  012EAC  A4D8               	btfss	status,2,c
 17390  012EAE  D00C               	goto	l16682
 17391                           
 17392                           ;stkvar	_c_cycles @ sp[(-57)+33]
 17393  012EB0  50E1               	movf	fsr1l,w,c
 17394  012EB2  0FE8               	addlw	-24
 17395  012EB4  6ED9               	movwf	fsr2l,c
 17396  012EB6  50E2               	movf	fsr1h,w,c
 17397  012EB8  6EDA               	movwf	fsr2h,c
 17398  012EBA  0EFF               	movlw	255
 17399  012EBC  22DA               	addwfc	fsr2h,f,c
 17400  012EBE  06DE               	decf	postinc2,f,c
 17401  012EC0  0E00               	movlw	0
 17402  012EC2  5ADE               	subwfb	postinc2,f,c
 17403  012EC4  5ADE               	subwfb	postinc2,f,c
 17404  012EC6  5ADE               	subwfb	postinc2,f,c
 17405  012EC8                     l16682:
 17406  012EC8  0EAC               	movlw	172
 17407  012ECA  6EE6               	movwf	postinc1,c
 17408  012ECC  0E8E               	movlw	142
 17409  012ECE  6EE6               	movwf	postinc1,c
 17410  012ED0  0E00               	movlw	0
 17411  012ED2  6EE6               	movwf	postinc1,c
 17412  012ED4  0E00               	movlw	0
 17413  012ED6  6EE6               	movwf	postinc1,c
 17414                           
 17415                           ;stkvar	_c_cycles @ sp[(-61)+33]
 17416  012ED8  0EE4               	movlw	-28
 17417  012EDA  006F FF8F FFE6     	movff	plusw1,postinc1
 17418  012EE0  006F FF8F FFE6     	movff	plusw1,postinc1
 17419  012EE6  006F FF8F FFE6     	movff	plusw1,postinc1
 17420  012EEC  006F FF8F FFE6     	movff	plusw1,postinc1
 17421  012EF2  EC14  F0FF         	call	___lmul	;wreg free
 17422                           
 17423                           ;stkvar	_remdays @ sp[(-57)+25]
 17424  012EF6  50E1               	movf	fsr1l,w,c
 17425  012EF8  0FE0               	addlw	-32
 17426  012EFA  6ED9               	movwf	fsr2l,c
 17427  012EFC  50E2               	movf	fsr1h,w,c
 17428  012EFE  6EDA               	movwf	fsr2h,c
 17429  012F00  0EFF               	movlw	255
 17430  012F02  22DA               	addwfc	fsr2h,f,c
 17431  012F04  502A               	movf	btemp^0,w,c
 17432  012F06  5EDE               	subwf	postinc2,f,c
 17433  012F08  502B               	movf	(btemp+1)^0,w,c
 17434  012F0A  5ADE               	subwfb	postinc2,f,c
 17435  012F0C  502C               	movf	(btemp+2)^0,w,c
 17436  012F0E  5ADE               	subwfb	postinc2,f,c
 17437  012F10  502D               	movf	(btemp+3)^0,w,c
 17438  012F12  5ADE               	subwfb	postinc2,f,c
 17439  012F14  0EB5               	movlw	181
 17440  012F16  6EE6               	movwf	postinc1,c
 17441  012F18  0E05               	movlw	5
 17442  012F1A  6EE6               	movwf	postinc1,c
 17443  012F1C  0E00               	movlw	0
 17444  012F1E  6EE6               	movwf	postinc1,c
 17445  012F20  0E00               	movlw	0
 17446  012F22  6EE6               	movwf	postinc1,c
 17447                           
 17448                           ;stkvar	_remdays @ sp[(-61)+25]
 17449  012F24  0EDC               	movlw	-36
 17450  012F26  006F FF8F FFE6     	movff	plusw1,postinc1
 17451  012F2C  006F FF8F FFE6     	movff	plusw1,postinc1
 17452  012F32  006F FF8F FFE6     	movff	plusw1,postinc1
 17453  012F38  006F FF8F FFE6     	movff	plusw1,postinc1
 17454  012F3E  ECD0  F0ED         	call	___aldiv	;wreg free
 17455                           
 17456                           ;stkvar	_q_cycles @ sp[(-57)+29]
 17457  012F42  0EE4               	movlw	-28
 17458  012F44  0060  F0AB  FFE3   	movff	btemp,plusw1
 17459  012F4A  0EE5               	movlw	-27
 17460  012F4C  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 17461  012F52  0EE6               	movlw	-26
 17462  012F54  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 17463  012F5A  0EE7               	movlw	-25
 17464  012F5C  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 17465                           
 17466                           ;stkvar	_q_cycles @ sp[(-57)+29]
 17467  012F62  0EE4               	movlw	-28
 17468  012F64  006F FF8C  F02A    	movff	plusw1,btemp
 17469  012F6A  0E19               	movlw	25
 17470  012F6C  182A               	xorwf	btemp^0,w,c
 17471  012F6E  E116               	bnz	l16690
 17472  012F70  0EE5               	movlw	-27
 17473  012F72  50E3               	movf	plusw1,w,c
 17474  012F74  E113               	bnz	l16690
 17475  012F76  0EE6               	movlw	-26
 17476  012F78  50E3               	movf	plusw1,w,c
 17477  012F7A  E110               	bnz	l16690
 17478  012F7C  0EE7               	movlw	-25
 17479  012F7E  50E3               	movf	plusw1,w,c
 17480  012F80  A4D8               	btfss	status,2,c
 17481  012F82  D00C               	goto	l16690
 17482                           
 17483                           ;stkvar	_q_cycles @ sp[(-57)+29]
 17484  012F84  50E1               	movf	fsr1l,w,c
 17485  012F86  0FE4               	addlw	-28
 17486  012F88  6ED9               	movwf	fsr2l,c
 17487  012F8A  50E2               	movf	fsr1h,w,c
 17488  012F8C  6EDA               	movwf	fsr2h,c
 17489  012F8E  0EFF               	movlw	255
 17490  012F90  22DA               	addwfc	fsr2h,f,c
 17491  012F92  06DE               	decf	postinc2,f,c
 17492  012F94  0E00               	movlw	0
 17493  012F96  5ADE               	subwfb	postinc2,f,c
 17494  012F98  5ADE               	subwfb	postinc2,f,c
 17495  012F9A  5ADE               	subwfb	postinc2,f,c
 17496  012F9C                     l16690:
 17497  012F9C  0EB5               	movlw	181
 17498  012F9E  6EE6               	movwf	postinc1,c
 17499  012FA0  0E05               	movlw	5
 17500  012FA2  6EE6               	movwf	postinc1,c
 17501  012FA4  0E00               	movlw	0
 17502  012FA6  6EE6               	movwf	postinc1,c
 17503  012FA8  0E00               	movlw	0
 17504  012FAA  6EE6               	movwf	postinc1,c
 17505                           
 17506                           ;stkvar	_q_cycles @ sp[(-61)+29]
 17507  012FAC  0EE0               	movlw	-32
 17508  012FAE  006F FF8F FFE6     	movff	plusw1,postinc1
 17509  012FB4  006F FF8F FFE6     	movff	plusw1,postinc1
 17510  012FBA  006F FF8F FFE6     	movff	plusw1,postinc1
 17511  012FC0  006F FF8F FFE6     	movff	plusw1,postinc1
 17512  012FC6  EC14  F0FF         	call	___lmul	;wreg free
 17513                           
 17514                           ;stkvar	_remdays @ sp[(-57)+25]
 17515  012FCA  50E1               	movf	fsr1l,w,c
 17516  012FCC  0FE0               	addlw	-32
 17517  012FCE  6ED9               	movwf	fsr2l,c
 17518  012FD0  50E2               	movf	fsr1h,w,c
 17519  012FD2  6EDA               	movwf	fsr2h,c
 17520  012FD4  0EFF               	movlw	255
 17521  012FD6  22DA               	addwfc	fsr2h,f,c
 17522  012FD8  502A               	movf	btemp^0,w,c
 17523  012FDA  5EDE               	subwf	postinc2,f,c
 17524  012FDC  502B               	movf	(btemp+1)^0,w,c
 17525  012FDE  5ADE               	subwfb	postinc2,f,c
 17526  012FE0  502C               	movf	(btemp+2)^0,w,c
 17527  012FE2  5ADE               	subwfb	postinc2,f,c
 17528  012FE4  502D               	movf	(btemp+3)^0,w,c
 17529  012FE6  5ADE               	subwfb	postinc2,f,c
 17530  012FE8  0E6D               	movlw	109
 17531  012FEA  6EE6               	movwf	postinc1,c
 17532  012FEC  0E01               	movlw	1
 17533  012FEE  6EE6               	movwf	postinc1,c
 17534  012FF0  0E00               	movlw	0
 17535  012FF2  6EE6               	movwf	postinc1,c
 17536  012FF4  0E00               	movlw	0
 17537  012FF6  6EE6               	movwf	postinc1,c
 17538                           
 17539                           ;stkvar	_remdays @ sp[(-61)+25]
 17540  012FF8  0EDC               	movlw	-36
 17541  012FFA  006F FF8F FFE6     	movff	plusw1,postinc1
 17542  013000  006F FF8F FFE6     	movff	plusw1,postinc1
 17543  013006  006F FF8F FFE6     	movff	plusw1,postinc1
 17544  01300C  006F FF8F FFE6     	movff	plusw1,postinc1
 17545  013012  ECD0  F0ED         	call	___aldiv	;wreg free
 17546                           
 17547                           ;stkvar	_remyears @ sp[(-57)+37]
 17548  013016  0EEC               	movlw	-20
 17549  013018  0060  F0AB  FFE3   	movff	btemp,plusw1
 17550  01301E  0EED               	movlw	-19
 17551  013020  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 17552  013026  0EEE               	movlw	-18
 17553  013028  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 17554  01302E  0EEF               	movlw	-17
 17555  013030  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 17556                           
 17557                           ;stkvar	_remyears @ sp[(-57)+37]
 17558  013036  0EEC               	movlw	-20
 17559  013038  006F FF8C  F02A    	movff	plusw1,btemp
 17560  01303E  0E04               	movlw	4
 17561  013040  182A               	xorwf	btemp^0,w,c
 17562  013042  E116               	bnz	l16698
 17563  013044  0EED               	movlw	-19
 17564  013046  50E3               	movf	plusw1,w,c
 17565  013048  E113               	bnz	l16698
 17566  01304A  0EEE               	movlw	-18
 17567  01304C  50E3               	movf	plusw1,w,c
 17568  01304E  E110               	bnz	l16698
 17569  013050  0EEF               	movlw	-17
 17570  013052  50E3               	movf	plusw1,w,c
 17571  013054  A4D8               	btfss	status,2,c
 17572  013056  D00C               	goto	l16698
 17573                           
 17574                           ;stkvar	_remyears @ sp[(-57)+37]
 17575  013058  50E1               	movf	fsr1l,w,c
 17576  01305A  0FEC               	addlw	-20
 17577  01305C  6ED9               	movwf	fsr2l,c
 17578  01305E  50E2               	movf	fsr1h,w,c
 17579  013060  6EDA               	movwf	fsr2h,c
 17580  013062  0EFF               	movlw	255
 17581  013064  22DA               	addwfc	fsr2h,f,c
 17582  013066  06DE               	decf	postinc2,f,c
 17583  013068  0E00               	movlw	0
 17584  01306A  5ADE               	subwfb	postinc2,f,c
 17585  01306C  5ADE               	subwfb	postinc2,f,c
 17586  01306E  5ADE               	subwfb	postinc2,f,c
 17587  013070                     l16698:
 17588  013070  0E6D               	movlw	109
 17589  013072  6EE6               	movwf	postinc1,c
 17590  013074  0E01               	movlw	1
 17591  013076  6EE6               	movwf	postinc1,c
 17592  013078  0E00               	movlw	0
 17593  01307A  6EE6               	movwf	postinc1,c
 17594  01307C  0E00               	movlw	0
 17595  01307E  6EE6               	movwf	postinc1,c
 17596                           
 17597                           ;stkvar	_remyears @ sp[(-61)+37]
 17598  013080  0EE8               	movlw	-24
 17599  013082  006F FF8F FFE6     	movff	plusw1,postinc1
 17600  013088  006F FF8F FFE6     	movff	plusw1,postinc1
 17601  01308E  006F FF8F FFE6     	movff	plusw1,postinc1
 17602  013094  006F FF8F FFE6     	movff	plusw1,postinc1
 17603  01309A  EC14  F0FF         	call	___lmul	;wreg free
 17604                           
 17605                           ;stkvar	_remdays @ sp[(-57)+25]
 17606  01309E  50E1               	movf	fsr1l,w,c
 17607  0130A0  0FE0               	addlw	-32
 17608  0130A2  6ED9               	movwf	fsr2l,c
 17609  0130A4  50E2               	movf	fsr1h,w,c
 17610  0130A6  6EDA               	movwf	fsr2h,c
 17611  0130A8  0EFF               	movlw	255
 17612  0130AA  22DA               	addwfc	fsr2h,f,c
 17613  0130AC  502A               	movf	btemp^0,w,c
 17614  0130AE  5EDE               	subwf	postinc2,f,c
 17615  0130B0  502B               	movf	(btemp+1)^0,w,c
 17616  0130B2  5ADE               	subwfb	postinc2,f,c
 17617  0130B4  502C               	movf	(btemp+2)^0,w,c
 17618  0130B6  5ADE               	subwfb	postinc2,f,c
 17619  0130B8  502D               	movf	(btemp+3)^0,w,c
 17620  0130BA  5ADE               	subwfb	postinc2,f,c
 17621                           
 17622                           ;stkvar	___secs_to_tm$7621 @ sp[(-57)+0]
 17623  0130BC  0EC7               	movlw	-57
 17624  0130BE  6AE3               	clrf	plusw1,c
 17625                           
 17626                           ;stkvar	_remyears @ sp[(-57)+37]
 17627  0130C0  0EEC               	movlw	-20
 17628  0130C2  50E3               	movf	plusw1,w,c
 17629  0130C4  E127               	bnz	l16710
 17630  0130C6  0EED               	movlw	-19
 17631  0130C8  50E3               	movf	plusw1,w,c
 17632  0130CA  E124               	bnz	l16710
 17633  0130CC  0EEE               	movlw	-18
 17634  0130CE  50E3               	movf	plusw1,w,c
 17635  0130D0  E121               	bnz	l16710
 17636  0130D2  0EEF               	movlw	-17
 17637  0130D4  50E3               	movf	plusw1,w,c
 17638  0130D6  A4D8               	btfss	status,2,c
 17639  0130D8  D01D               	goto	l16710
 17640                           
 17641                           ;stkvar	_q_cycles @ sp[(-57)+29]
 17642  0130DA  0EE4               	movlw	-28
 17643  0130DC  50E3               	movf	plusw1,w,c
 17644  0130DE  E117               	bnz	l16708
 17645  0130E0  0EE5               	movlw	-27
 17646  0130E2  50E3               	movf	plusw1,w,c
 17647  0130E4  E114               	bnz	l16708
 17648  0130E6  0EE6               	movlw	-26
 17649  0130E8  50E3               	movf	plusw1,w,c
 17650  0130EA  E111               	bnz	l16708
 17651  0130EC  0EE7               	movlw	-25
 17652  0130EE  50E3               	movf	plusw1,w,c
 17653  0130F0  A4D8               	btfss	status,2,c
 17654  0130F2  D00D               	goto	u16320
 17655                           
 17656                           ;stkvar	_c_cycles @ sp[(-57)+33]
 17657  0130F4  0EE8               	movlw	-24
 17658  0130F6  50E3               	movf	plusw1,w,c
 17659  0130F8  E10D               	bnz	l16710
 17660  0130FA  0EE9               	movlw	-23
 17661  0130FC  50E3               	movf	plusw1,w,c
 17662  0130FE  E10A               	bnz	l16710
 17663  013100  0EEA               	movlw	-22
 17664  013102  50E3               	movf	plusw1,w,c
 17665  013104  E107               	bnz	l16710
 17666  013106  0EEB               	movlw	-21
 17667  013108  50E3               	movf	plusw1,w,c
 17668  01310A  A4D8               	btfss	status,2,c
 17669  01310C  D003               	goto	l16710
 17670  01310E                     u16320:
 17671  01310E                     l16708:
 17672                           
 17673                           ;stkvar	___secs_to_tm$7621 @ sp[(-57)+0]
 17674  01310E  0EC7               	movlw	-57
 17675  013110  6AE3               	clrf	plusw1,c
 17676  013112  2AE3               	incf	plusw1,f,c
 17677  013114                     l16710:
 17678                           
 17679                           ;stkvar	___secs_to_tm$7621 @ sp[(-57)+0]
 17680  013114  0EC7               	movlw	-57
 17681  013116  50E3               	movf	plusw1,w,c
 17682  013118  6E34               	movwf	(btemp+10)^0,c
 17683  01311A  6A35               	clrf	(btemp+11)^0,c
 17684                           
 17685                           ;stkvar	_leap @ sp[(-57)+51]
 17686  01311C  0EFA               	movlw	-6
 17687  01311E  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 17688  013124  0EFB               	movlw	-5
 17689  013126  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 17690                           
 17691                           ;stkvar	_remdays @ sp[(-57)+25]
 17692                           ;stkvar	_leap @ sp[(-57)+51]
 17693  01312C  0EFA               	movlw	-6
 17694  01312E  006F FF8C  F034    	movff	plusw1,btemp+10
 17695  013134  0EFB               	movlw	-5
 17696  013136  006F FF8C  F035    	movff	plusw1,btemp+11
 17697  01313C  0EE0               	movlw	-32
 17698  01313E  50E3               	movf	plusw1,w,c
 17699  013140  2634               	addwf	(btemp+10)^0,f,c
 17700  013142  0EE1               	movlw	-31
 17701  013144  50E3               	movf	plusw1,w,c
 17702  013146  2235               	addwfc	(btemp+11)^0,f,c
 17703  013148  0E3B               	movlw	59
 17704  01314A  2634               	addwf	(btemp+10)^0,f,c
 17705  01314C  0E00               	movlw	0
 17706  01314E  2235               	addwfc	(btemp+11)^0,f,c
 17707                           
 17708                           ;stkvar	_yday @ sp[(-57)+53]
 17709  013150  0EFC               	movlw	-4
 17710  013152  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 17711  013158  0EFD               	movlw	-3
 17712  01315A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 17713                           
 17714                           ;stkvar	_leap @ sp[(-57)+51]
 17715  013160  0EFA               	movlw	-6
 17716  013162  50E3               	movf	plusw1,w,c
 17717  013164  0F6D               	addlw	109
 17718  013166  6E34               	movwf	(btemp+10)^0,c
 17719  013168  0EFB               	movlw	-5
 17720  01316A  006F FF8C  F035    	movff	plusw1,btemp+11
 17721  013170  0E01               	movlw	1
 17722  013172  2235               	addwfc	(btemp+11)^0,f,c
 17723                           
 17724                           ;stkvar	_yday @ sp[(-57)+53]
 17725  013174  0EFC               	movlw	-4
 17726  013176  006F FF8C  F02A    	movff	plusw1,btemp
 17727  01317C  5034               	movf	(btemp+10)^0,w,c
 17728  01317E  5C2A               	subwf	btemp^0,w,c
 17729  013180  0EFD               	movlw	-3
 17730  013182  50E3               	movf	plusw1,w,c
 17731  013184  0A80               	xorlw	128
 17732  013186  6E2A               	movwf	btemp^0,c
 17733  013188  5035               	movf	(btemp+11)^0,w,c
 17734  01318A  0A80               	xorlw	128
 17735  01318C  582A               	subwfb	btemp^0,w,c
 17736  01318E  A0D8               	btfss	status,0,c
 17737  013190  D01E               	goto	l16718
 17738                           
 17739                           ;stkvar	_leap @ sp[(-57)+51]
 17740  013192  0EFA               	movlw	-6
 17741  013194  50E3               	movf	plusw1,w,c
 17742  013196  0F6D               	addlw	109
 17743  013198  6E34               	movwf	(btemp+10)^0,c
 17744  01319A  0EFB               	movlw	-5
 17745  01319C  006F FF8C  F035    	movff	plusw1,btemp+11
 17746  0131A2  0E01               	movlw	1
 17747  0131A4  2235               	addwfc	(btemp+11)^0,f,c
 17748                           
 17749                           ;stkvar	_yday @ sp[(-57)+53]
 17750  0131A6  0EFC               	movlw	-4
 17751  0131A8  006F FF8C  F02A    	movff	plusw1,btemp
 17752  0131AE  5034               	movf	(btemp+10)^0,w,c
 17753  0131B0  5E2A               	subwf	btemp^0,f,c
 17754  0131B2  0EFC               	movlw	-4
 17755  0131B4  0060  F0AB  FFE3   	movff	btemp,plusw1
 17756  0131BA  0EFD               	movlw	-3
 17757  0131BC  006F FF8C  F02A    	movff	plusw1,btemp
 17758  0131C2  5035               	movf	(btemp+11)^0,w,c
 17759  0131C4  5A2A               	subwfb	btemp^0,f,c
 17760  0131C6  0EFD               	movlw	-3
 17761  0131C8  0060  F0AB  FFE3   	movff	btemp,plusw1
 17762  0131CE                     l16718:
 17763                           
 17764                           ;stkvar	_remyears @ sp[(-57)+37]
 17765                           ;stkvar	_q_cycles @ sp[(-57)+29]
 17766  0131CE  0EE4               	movlw	-28
 17767  0131D0  006F FF8C  F032    	movff	plusw1,btemp+8
 17768  0131D6  0EE5               	movlw	-27
 17769  0131D8  006F FF8C  F033    	movff	plusw1,btemp+9
 17770  0131DE  0EE6               	movlw	-26
 17771  0131E0  006F FF8C  F034    	movff	plusw1,btemp+10
 17772  0131E6  0EE7               	movlw	-25
 17773  0131E8  006F FF8C  F035    	movff	plusw1,btemp+11
 17774  0131EE  0E02               	movlw	2
 17775  0131F0                     u16345:
 17776  0131F0  90D8               	bcf	status,0,c
 17777  0131F2  3632               	rlcf	(btemp+8)^0,f,c
 17778  0131F4  3633               	rlcf	(btemp+9)^0,f,c
 17779  0131F6  3634               	rlcf	(btemp+10)^0,f,c
 17780  0131F8  3635               	rlcf	(btemp+11)^0,f,c
 17781  0131FA  2EE8               	decfsz	wreg,f,c
 17782  0131FC  D7F9               	goto	u16345
 17783  0131FE  0E64               	movlw	100
 17784  013200  6EE6               	movwf	postinc1,c
 17785  013202  0E00               	movlw	0
 17786  013204  6EE6               	movwf	postinc1,c
 17787  013206  0E00               	movlw	0
 17788  013208  6EE6               	movwf	postinc1,c
 17789  01320A  0E00               	movlw	0
 17790  01320C  6EE6               	movwf	postinc1,c
 17791                           
 17792                           ;stkvar	_c_cycles @ sp[(-61)+33]
 17793  01320E  0EE4               	movlw	-28
 17794  013210  006F FF8F FFE6     	movff	plusw1,postinc1
 17795  013216  006F FF8F FFE6     	movff	plusw1,postinc1
 17796  01321C  006F FF8F FFE6     	movff	plusw1,postinc1
 17797  013222  006F FF8F FFE6     	movff	plusw1,postinc1
 17798  013228  EC14  F0FF         	call	___lmul	;wreg free
 17799  01322C  5032               	movf	(btemp+8)^0,w,c
 17800  01322E  242A               	addwf	btemp^0,w,c
 17801  013230  6E2E               	movwf	(btemp+4)^0,c
 17802  013232  5033               	movf	(btemp+9)^0,w,c
 17803  013234  202B               	addwfc	(btemp+1)^0,w,c
 17804  013236  6E2F               	movwf	(btemp+5)^0,c
 17805  013238  5034               	movf	(btemp+10)^0,w,c
 17806  01323A  202C               	addwfc	(btemp+2)^0,w,c
 17807  01323C  6E30               	movwf	(btemp+6)^0,c
 17808  01323E  5035               	movf	(btemp+11)^0,w,c
 17809  013240  202D               	addwfc	(btemp+3)^0,w,c
 17810  013242  6E31               	movwf	(btemp+7)^0,c
 17811  013244  0EEC               	movlw	-20
 17812  013246  50E3               	movf	plusw1,w,c
 17813  013248  262E               	addwf	(btemp+4)^0,f,c
 17814  01324A  0EED               	movlw	-19
 17815  01324C  50E3               	movf	plusw1,w,c
 17816  01324E  222F               	addwfc	(btemp+5)^0,f,c
 17817  013250  0EEE               	movlw	-18
 17818  013252  50E3               	movf	plusw1,w,c
 17819  013254  2230               	addwfc	(btemp+6)^0,f,c
 17820  013256  0EEF               	movlw	-17
 17821  013258  50E3               	movf	plusw1,w,c
 17822  01325A  2231               	addwfc	(btemp+7)^0,f,c
 17823  01325C  0060  F0B8  F03A   	movff	btemp+4,btemp+16
 17824  013262  0060  F0BC  F03B   	movff	btemp+5,btemp+17
 17825  013268  0060  F0C0  F03C   	movff	btemp+6,btemp+18
 17826  01326E  0060  F0C4  F03D   	movff	btemp+7,btemp+19
 17827  013274  6A3E               	clrf	(btemp+20)^0,c
 17828  013276  BE3D               	btfsc	(btemp+19)^0,7,c
 17829  013278  683E               	setf	(btemp+20)^0,c
 17830  01327A  0060  F0F8  F03F   	movff	btemp+20,btemp+21
 17831  013280  0060  F0F8  F040   	movff	btemp+20,btemp+22
 17832  013286  0060  F0F8  F041   	movff	btemp+20,btemp+23
 17833  01328C  0E90               	movlw	144
 17834  01328E  6EE6               	movwf	postinc1,c
 17835  013290  0E01               	movlw	1
 17836  013292  6EE6               	movwf	postinc1,c
 17837  013294  0E00               	movlw	0
 17838  013296  6EE6               	movwf	postinc1,c
 17839  013298  0E00               	movlw	0
 17840  01329A  6EE6               	movwf	postinc1,c
 17841  01329C  0E00               	movlw	0
 17842  01329E  6EE6               	movwf	postinc1,c
 17843  0132A0  0E00               	movlw	0
 17844  0132A2  6EE6               	movwf	postinc1,c
 17845  0132A4  0E00               	movlw	0
 17846  0132A6  6EE6               	movwf	postinc1,c
 17847  0132A8  0E00               	movlw	0
 17848  0132AA  6EE6               	movwf	postinc1,c
 17849                           
 17850                           ;stkvar	_qc_cycles @ sp[(-65)+45]
 17851  0132AC  0EEC               	movlw	-20
 17852  0132AE  006F FF8C  F042    	movff	plusw1,btemp+24
 17853  0132B4  0EED               	movlw	-19
 17854  0132B6  006F FF8C  F043    	movff	plusw1,btemp+25
 17855  0132BC  0EEE               	movlw	-18
 17856  0132BE  006F FF8C  F044    	movff	plusw1,btemp+26
 17857  0132C4  0EEF               	movlw	-17
 17858  0132C6  006F FF8C  F045    	movff	plusw1,btemp+27
 17859  0132CC  6A46               	clrf	(btemp+28)^0,c
 17860  0132CE  BE45               	btfsc	(btemp+27)^0,7,c
 17861  0132D0  6846               	setf	(btemp+28)^0,c
 17862  0132D2  0060  F118  F047   	movff	btemp+28,btemp+29
 17863  0132D8  0060  F118  F048   	movff	btemp+28,btemp+30
 17864  0132DE  0060  F118  F049   	movff	btemp+28,btemp+31
 17865  0132E4  0060  F10B  FFE6   	movff	btemp+24,postinc1
 17866  0132EA  0060  F10F  FFE6   	movff	btemp+25,postinc1
 17867  0132F0  0060  F113  FFE6   	movff	btemp+26,postinc1
 17868  0132F6  0060  F117  FFE6   	movff	btemp+27,postinc1
 17869  0132FC  0060  F11B  FFE6   	movff	btemp+28,postinc1
 17870  013302  0060  F11F  FFE6   	movff	btemp+29,postinc1
 17871  013308  0060  F123  FFE6   	movff	btemp+30,postinc1
 17872  01330E  0060  F127  FFE6   	movff	btemp+31,postinc1
 17873  013314  EC1B  F0F5         	call	___omul	;wreg free
 17874  013318  52E5               	movf	postdec1,f,c
 17875  01331A  006F FF9C  F049    	movff	indf1,btemp+31
 17876  013320  52E5               	movf	postdec1,f,c
 17877  013322  006F FF9C  F048    	movff	indf1,btemp+30
 17878  013328  52E5               	movf	postdec1,f,c
 17879  01332A  006F FF9C  F047    	movff	indf1,btemp+29
 17880  013330  52E5               	movf	postdec1,f,c
 17881  013332  006F FF9C  F046    	movff	indf1,btemp+28
 17882  013338  52E5               	movf	postdec1,f,c
 17883  01333A  006F FF9C  F045    	movff	indf1,btemp+27
 17884  013340  52E5               	movf	postdec1,f,c
 17885  013342  006F FF9C  F044    	movff	indf1,btemp+26
 17886  013348  52E5               	movf	postdec1,f,c
 17887  01334A  006F FF9C  F043    	movff	indf1,btemp+25
 17888  013350  52E5               	movf	postdec1,f,c
 17889  013352  006F FF9C  F042    	movff	indf1,btemp+24
 17890  013358  0EF8               	movlw	248
 17891  01335A  26E1               	addwf	fsr1l,f,c
 17892  01335C  0EFF               	movlw	255
 17893  01335E  22E2               	addwfc	fsr1h,f,c
 17894  013360  503A               	movf	(btemp+16)^0,w,c
 17895  013362  2442               	addwf	(btemp+24)^0,w,c
 17896  013364  6E32               	movwf	(btemp+8)^0,c
 17897  013366  503B               	movf	(btemp+17)^0,w,c
 17898  013368  2043               	addwfc	(btemp+25)^0,w,c
 17899  01336A  6E33               	movwf	(btemp+9)^0,c
 17900  01336C  503C               	movf	(btemp+18)^0,w,c
 17901  01336E  2044               	addwfc	(btemp+26)^0,w,c
 17902  013370  6E34               	movwf	(btemp+10)^0,c
 17903  013372  503D               	movf	(btemp+19)^0,w,c
 17904  013374  2045               	addwfc	(btemp+27)^0,w,c
 17905  013376  6E35               	movwf	(btemp+11)^0,c
 17906  013378  503E               	movf	(btemp+20)^0,w,c
 17907  01337A  2046               	addwfc	(btemp+28)^0,w,c
 17908  01337C  6E36               	movwf	(btemp+12)^0,c
 17909  01337E  503F               	movf	(btemp+21)^0,w,c
 17910  013380  2047               	addwfc	(btemp+29)^0,w,c
 17911  013382  6E37               	movwf	(btemp+13)^0,c
 17912  013384  5040               	movf	(btemp+22)^0,w,c
 17913  013386  2048               	addwfc	(btemp+30)^0,w,c
 17914  013388  6E38               	movwf	(btemp+14)^0,c
 17915  01338A  5041               	movf	(btemp+23)^0,w,c
 17916  01338C  2049               	addwfc	(btemp+31)^0,w,c
 17917  01338E  6E39               	movwf	(btemp+15)^0,c
 17918                           
 17919                           ;stkvar	_years @ sp[(-57)+1]
 17920  013390  0EC8               	movlw	-56
 17921  013392  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 17922  013398  0EC9               	movlw	-55
 17923  01339A  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 17924  0133A0  0ECA               	movlw	-54
 17925  0133A2  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 17926  0133A8  0ECB               	movlw	-53
 17927  0133AA  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 17928  0133B0  0ECC               	movlw	-52
 17929  0133B2  0060  F0DB  FFE3   	movff	btemp+12,plusw1
 17930  0133B8  0ECD               	movlw	-51
 17931  0133BA  0060  F0DF  FFE3   	movff	btemp+13,plusw1
 17932  0133C0  0ECE               	movlw	-50
 17933  0133C2  0060  F0E3  FFE3   	movff	btemp+14,plusw1
 17934  0133C8  0ECF               	movlw	-49
 17935  0133CA  0060  F0E7  FFE3   	movff	btemp+15,plusw1
 17936                           
 17937                           ;stkvar	_months @ sp[(-57)+49]
 17938  0133D0  0EF8               	movlw	-8
 17939  0133D2  6AE3               	clrf	plusw1,c
 17940  0133D4  0EF9               	movlw	-7
 17941  0133D6  6AE3               	clrf	plusw1,c
 17942  0133D8  D030               	goto	l16726
 17943  0133DA                     l16722:
 17944                           
 17945                           ;stkvar	_remdays @ sp[(-57)+25]
 17946  0133DA  50E1               	movf	fsr1l,w,c
 17947  0133DC  0FE0               	addlw	-32
 17948  0133DE  6ED9               	movwf	fsr2l,c
 17949  0133E0  50E2               	movf	fsr1h,w,c
 17950  0133E2  6EDA               	movwf	fsr2h,c
 17951  0133E4  0EFF               	movlw	255
 17952  0133E6  22DA               	addwfc	fsr2h,f,c
 17953                           
 17954                           ;stkvar	_months @ sp[(-57)+49]
 17955  0133E8  0EF8               	movlw	-8
 17956  0133EA  006F FF8C  F034    	movff	plusw1,btemp+10
 17957  0133F0  0EF9               	movlw	-7
 17958  0133F2  006F FF8C  F035    	movff	plusw1,btemp+11
 17959  0133F8  0EAB               	movlw	low ___secs_to_tm@days_in_month
 17960  0133FA  2434               	addwf	(btemp+10)^0,w,c
 17961  0133FC  6EF6               	movwf	tblptrl,c
 17962  0133FE  0EF8               	movlw	high ___secs_to_tm@days_in_month
 17963  013400  2035               	addwfc	(btemp+11)^0,w,c
 17964  013402  6EF7               	movwf	tblptrh,c
 17965  013404                     	if	1	;There are 3 active tblptr bytes
 17966  013404  6AF8               	clrf	tblptru,c
 17967  013406  0E00               	movlw	low (__mediumconst shr (0+16))
 17968  013408  22F8               	addwfc	tblptru,f,c
 17969  01340A                     	endif
 17970  01340A  0008               	tblrd		*
 17971  01340C  50F5               	movf	tablat,w,c
 17972  01340E  5EDE               	subwf	postinc2,f,c
 17973  013410  0E00               	movlw	0
 17974  013412  5ADE               	subwfb	postinc2,f,c
 17975  013414  5ADE               	subwfb	postinc2,f,c
 17976  013416  5ADE               	subwfb	postinc2,f,c
 17977                           
 17978                           ;stkvar	_months @ sp[(-57)+49]
 17979  013418  0EF8               	movlw	-8
 17980  01341A  50E3               	movf	plusw1,w,c
 17981  01341C  0F01               	addlw	1
 17982  01341E  6E2A               	movwf	btemp^0,c
 17983  013420  0EF8               	movlw	-8
 17984  013422  0060  F0AB  FFE3   	movff	btemp,plusw1
 17985  013428  6A2A               	clrf	btemp^0,c
 17986  01342A  0EF9               	movlw	-7
 17987  01342C  50E3               	movf	plusw1,w,c
 17988  01342E  202A               	addwfc	btemp^0,w,c
 17989  013430  6E2A               	movwf	btemp^0,c
 17990  013432  0EF9               	movlw	-7
 17991  013434  0060  F0AB  FFE3   	movff	btemp,plusw1
 17992  01343A                     l16726:
 17993                           
 17994                           ;stkvar	_months @ sp[(-57)+49]
 17995  01343A  0EF8               	movlw	-8
 17996  01343C  006F FF8C  F034    	movff	plusw1,btemp+10
 17997  013442  0EF9               	movlw	-7
 17998  013444  006F FF8C  F035    	movff	plusw1,btemp+11
 17999  01344A  0EAB               	movlw	low ___secs_to_tm@days_in_month
 18000  01344C  2434               	addwf	(btemp+10)^0,w,c
 18001  01344E  6EF6               	movwf	tblptrl,c
 18002  013450  0EF8               	movlw	high ___secs_to_tm@days_in_month
 18003  013452  2035               	addwfc	(btemp+11)^0,w,c
 18004  013454  6EF7               	movwf	tblptrh,c
 18005  013456                     	if	1	;There are 3 active tblptr bytes
 18006  013456  6AF8               	clrf	tblptru,c
 18007  013458  0E00               	movlw	low (__mediumconst shr (0+16))
 18008  01345A  22F8               	addwfc	tblptru,f,c
 18009  01345C                     	endif
 18010  01345C  0008               	tblrd		*
 18011  01345E  006F FFD4  F035    	movff	tablat,btemp+11
 18012  013464  0060  F0D4  F02E   	movff	btemp+11,btemp+4
 18013  01346A  6A2F               	clrf	(btemp+5)^0,c
 18014  01346C  6A30               	clrf	(btemp+6)^0,c
 18015  01346E  6A31               	clrf	(btemp+7)^0,c
 18016                           
 18017                           ;stkvar	_remdays @ sp[(-57)+25]
 18018  013470  0EE0               	movlw	-32
 18019  013472  006F FF8C  F02A    	movff	plusw1,btemp
 18020  013478  502E               	movf	(btemp+4)^0,w,c
 18021  01347A  5C2A               	subwf	btemp^0,w,c
 18022  01347C  0EE1               	movlw	-31
 18023  01347E  006F FF8C  F02A    	movff	plusw1,btemp
 18024  013484  502F               	movf	(btemp+5)^0,w,c
 18025  013486  582A               	subwfb	btemp^0,w,c
 18026  013488  0EE2               	movlw	-30
 18027  01348A  006F FF8C  F02A    	movff	plusw1,btemp
 18028  013490  5030               	movf	(btemp+6)^0,w,c
 18029  013492  582A               	subwfb	btemp^0,w,c
 18030  013494  0EE3               	movlw	-29
 18031  013496  50E3               	movf	plusw1,w,c
 18032  013498  0A80               	xorlw	128
 18033  01349A  6E2A               	movwf	btemp^0,c
 18034  01349C  5031               	movf	(btemp+7)^0,w,c
 18035  01349E  0A80               	xorlw	128
 18036  0134A0  582A               	subwfb	btemp^0,w,c
 18037  0134A2  B0D8               	btfsc	status,0,c
 18038  0134A4  D79A               	goto	l16722
 18039                           
 18040                           ;stkvar	_months @ sp[(-57)+49]
 18041  0134A6  0EF9               	movlw	-7
 18042  0134A8  BEE3               	btfsc	plusw1,7,c
 18043  0134AA  D026               	goto	l16734
 18044  0134AC  0EF9               	movlw	-7
 18045  0134AE  50E3               	movf	plusw1,w,c
 18046  0134B0  E108               	bnz	u16360
 18047  0134B2  0EF8               	movlw	-8
 18048  0134B4  006F FF8C  F02A    	movff	plusw1,btemp
 18049  0134BA  0E0A               	movlw	10
 18050  0134BC  5E2A               	subwf	btemp^0,f,c
 18051  0134BE  A0D8               	btfss	status,0,c
 18052  0134C0  D01B               	goto	l16734
 18053  0134C2                     u16360:
 18054                           
 18055                           ;stkvar	_months @ sp[(-57)+49]
 18056  0134C2  50E1               	movf	fsr1l,w,c
 18057  0134C4  0FF8               	addlw	-8
 18058  0134C6  6ED9               	movwf	fsr2l,c
 18059  0134C8  50E2               	movf	fsr1h,w,c
 18060  0134CA  6EDA               	movwf	fsr2h,c
 18061  0134CC  0EFF               	movlw	255
 18062  0134CE  22DA               	addwfc	fsr2h,f,c
 18063  0134D0  0EF4               	movlw	244
 18064  0134D2  26DE               	addwf	postinc2,f,c
 18065  0134D4  0EFF               	movlw	255
 18066  0134D6  22DD               	addwfc	postdec2,f,c
 18067                           
 18068                           ;stkvar	_years @ sp[(-57)+1]
 18069  0134D8  50E1               	movf	fsr1l,w,c
 18070  0134DA  0FC8               	addlw	-56
 18071  0134DC  6ED9               	movwf	fsr2l,c
 18072  0134DE  50E2               	movf	fsr1h,w,c
 18073  0134E0  6EDA               	movwf	fsr2h,c
 18074  0134E2  0EFF               	movlw	255
 18075  0134E4  22DA               	addwfc	fsr2h,f,c
 18076  0134E6  2ADE               	incf	postinc2,f,c
 18077  0134E8  0E00               	movlw	0
 18078  0134EA  22DE               	addwfc	postinc2,f,c
 18079  0134EC  22DE               	addwfc	postinc2,f,c
 18080  0134EE  22DE               	addwfc	postinc2,f,c
 18081  0134F0  22DE               	addwfc	postinc2,f,c
 18082  0134F2  22DE               	addwfc	postinc2,f,c
 18083  0134F4  22DE               	addwfc	postinc2,f,c
 18084  0134F6  22DE               	addwfc	postinc2,f,c
 18085  0134F8                     l16734:
 18086                           
 18087                           ;stkvar	_years @ sp[(-57)+1]
 18088  0134F8  0EC8               	movlw	-56
 18089  0134FA  50E3               	movf	plusw1,w,c
 18090  0134FC  0F64               	addlw	100
 18091  0134FE  6E3A               	movwf	(btemp+16)^0,c
 18092  013500  0EC9               	movlw	-55
 18093  013502  006F FF8C  F03B    	movff	plusw1,btemp+17
 18094  013508  0E00               	movlw	0
 18095  01350A  223B               	addwfc	(btemp+17)^0,f,c
 18096  01350C  0ECA               	movlw	-54
 18097  01350E  006F FF8C  F03C    	movff	plusw1,btemp+18
 18098  013514  0E00               	movlw	0
 18099  013516  223C               	addwfc	(btemp+18)^0,f,c
 18100  013518  0ECB               	movlw	-53
 18101  01351A  006F FF8C  F03D    	movff	plusw1,btemp+19
 18102  013520  0E00               	movlw	0
 18103  013522  223D               	addwfc	(btemp+19)^0,f,c
 18104  013524  0ECC               	movlw	-52
 18105  013526  006F FF8C  F03E    	movff	plusw1,btemp+20
 18106  01352C  0E00               	movlw	0
 18107  01352E  223E               	addwfc	(btemp+20)^0,f,c
 18108  013530  0ECD               	movlw	-51
 18109  013532  006F FF8C  F03F    	movff	plusw1,btemp+21
 18110  013538  0E00               	movlw	0
 18111  01353A  223F               	addwfc	(btemp+21)^0,f,c
 18112  01353C  0ECE               	movlw	-50
 18113  01353E  006F FF8C  F040    	movff	plusw1,btemp+22
 18114  013544  0E00               	movlw	0
 18115  013546  2240               	addwfc	(btemp+22)^0,f,c
 18116  013548  0ECF               	movlw	-49
 18117  01354A  006F FF8C  F041    	movff	plusw1,btemp+23
 18118  013550  0E00               	movlw	0
 18119  013552  2241               	addwfc	(btemp+23)^0,f,c
 18120  013554  BE41               	btfsc	(btemp+23)^0,7,c
 18121  013556  D00C               	goto	u16370
 18122  013558  5041               	movf	(btemp+23)^0,w,c
 18123  01355A  1040               	iorwf	(btemp+22)^0,w,c
 18124  01355C  103F               	iorwf	(btemp+21)^0,w,c
 18125  01355E  103E               	iorwf	(btemp+20)^0,w,c
 18126  013560  103D               	iorwf	(btemp+19)^0,w,c
 18127  013562  103C               	iorwf	(btemp+18)^0,w,c
 18128  013564  E103               	bnz	u16371
 18129  013566  0E80               	movlw	128
 18130  013568  5C3B               	subwf	(btemp+17)^0,w,c
 18131  01356A  B0D8               	btfsc	status,0,c
 18132  01356C                     u16371:
 18133  01356C  EF22  F094         	goto	u16230
 18134  013570                     u16370:
 18135                           
 18136                           ;stkvar	_years @ sp[(-57)+1]
 18137  013570  0EC8               	movlw	-56
 18138  013572  50E3               	movf	plusw1,w,c
 18139  013574  0F64               	addlw	100
 18140  013576  6E3A               	movwf	(btemp+16)^0,c
 18141  013578  0EC9               	movlw	-55
 18142  01357A  006F FF8C  F03B    	movff	plusw1,btemp+17
 18143  013580  0E00               	movlw	0
 18144  013582  223B               	addwfc	(btemp+17)^0,f,c
 18145  013584  0ECA               	movlw	-54
 18146  013586  006F FF8C  F03C    	movff	plusw1,btemp+18
 18147  01358C  0E00               	movlw	0
 18148  01358E  223C               	addwfc	(btemp+18)^0,f,c
 18149  013590  0ECB               	movlw	-53
 18150  013592  006F FF8C  F03D    	movff	plusw1,btemp+19
 18151  013598  0E00               	movlw	0
 18152  01359A  223D               	addwfc	(btemp+19)^0,f,c
 18153  01359C  0ECC               	movlw	-52
 18154  01359E  006F FF8C  F03E    	movff	plusw1,btemp+20
 18155  0135A4  0E00               	movlw	0
 18156  0135A6  223E               	addwfc	(btemp+20)^0,f,c
 18157  0135A8  0ECD               	movlw	-51
 18158  0135AA  006F FF8C  F03F    	movff	plusw1,btemp+21
 18159  0135B0  0E00               	movlw	0
 18160  0135B2  223F               	addwfc	(btemp+21)^0,f,c
 18161  0135B4  0ECE               	movlw	-50
 18162  0135B6  006F FF8C  F040    	movff	plusw1,btemp+22
 18163  0135BC  0E00               	movlw	0
 18164  0135BE  2240               	addwfc	(btemp+22)^0,f,c
 18165  0135C0  0ECF               	movlw	-49
 18166  0135C2  006F FF8C  F041    	movff	plusw1,btemp+23
 18167  0135C8  0E00               	movlw	0
 18168  0135CA  2241               	addwfc	(btemp+23)^0,f,c
 18169  0135CC  AE41               	btfss	(btemp+23)^0,7,c
 18170  0135CE  D011               	goto	l16742
 18171  0135D0  0E80               	movlw	128
 18172  0135D2  5C3B               	subwf	(btemp+17)^0,w,c
 18173  0135D4  0EFF               	movlw	255
 18174  0135D6  583C               	subwfb	(btemp+18)^0,w,c
 18175  0135D8  0EFF               	movlw	255
 18176  0135DA  583D               	subwfb	(btemp+19)^0,w,c
 18177  0135DC  0EFF               	movlw	255
 18178  0135DE  583E               	subwfb	(btemp+20)^0,w,c
 18179  0135E0  0EFF               	movlw	255
 18180  0135E2  583F               	subwfb	(btemp+21)^0,w,c
 18181  0135E4  0EFF               	movlw	255
 18182  0135E6  5840               	subwfb	(btemp+22)^0,w,c
 18183  0135E8  0EFF               	movlw	255
 18184  0135EA  5841               	subwfb	(btemp+23)^0,w,c
 18185  0135EC  A0D8               	btfss	status,0,c
 18186  0135EE  EF22  F094         	goto	u16230
 18187  0135F2                     l16742:
 18188                           
 18189                           ;stkvar	_years @ sp[(-57)+1]
 18190  0135F2  0EC8               	movlw	-56
 18191  0135F4  50E3               	movf	plusw1,w,c
 18192  0135F6  0F64               	addlw	100
 18193  0135F8  6E34               	movwf	(btemp+10)^0,c
 18194  0135FA  0EC9               	movlw	-55
 18195  0135FC  006F FF8C  F035    	movff	plusw1,btemp+11
 18196  013602  0E00               	movlw	0
 18197  013604  2235               	addwfc	(btemp+11)^0,f,c
 18198                           
 18199                           ;stkvar	_tm @ sp[(-57)+-10]
 18200  013606  0EBD               	movlw	-67
 18201  013608  006F FF8C  F032    	movff	plusw1,btemp+8
 18202  01360E  0EBE               	movlw	-66
 18203  013610  006F FF8C  F033    	movff	plusw1,btemp+9
 18204  013616  0E0A               	movlw	10
 18205  013618  2432               	addwf	(btemp+8)^0,w,c
 18206  01361A  6ED9               	movwf	fsr2l,c
 18207  01361C  0E00               	movlw	0
 18208  01361E  2033               	addwfc	(btemp+9)^0,w,c
 18209  013620  6EDA               	movwf	fsr2h,c
 18210  013622  0060  F0D3  FFDE   	movff	btemp+10,postinc2
 18211  013628  0060  F0D7  FFDD   	movff	btemp+11,postdec2
 18212                           
 18213                           ;stkvar	_months @ sp[(-57)+49]
 18214  01362E  0EF8               	movlw	-8
 18215  013630  50E3               	movf	plusw1,w,c
 18216  013632  0F02               	addlw	2
 18217  013634  6E34               	movwf	(btemp+10)^0,c
 18218  013636  0EF9               	movlw	-7
 18219  013638  006F FF8C  F035    	movff	plusw1,btemp+11
 18220  01363E  0E00               	movlw	0
 18221  013640  2235               	addwfc	(btemp+11)^0,f,c
 18222                           
 18223                           ;stkvar	_tm @ sp[(-57)+-10]
 18224  013642  0EBD               	movlw	-67
 18225  013644  006F FF8C  F032    	movff	plusw1,btemp+8
 18226  01364A  0EBE               	movlw	-66
 18227  01364C  006F FF8C  F033    	movff	plusw1,btemp+9
 18228  013652  0E08               	movlw	8
 18229  013654  2432               	addwf	(btemp+8)^0,w,c
 18230  013656  6ED9               	movwf	fsr2l,c
 18231  013658  0E00               	movlw	0
 18232  01365A  2033               	addwfc	(btemp+9)^0,w,c
 18233  01365C  6EDA               	movwf	fsr2h,c
 18234  01365E  0060  F0D3  FFDE   	movff	btemp+10,postinc2
 18235  013664  0060  F0D7  FFDD   	movff	btemp+11,postdec2
 18236                           
 18237                           ;stkvar	_remdays @ sp[(-57)+25]
 18238  01366A  0EE0               	movlw	-32
 18239  01366C  50E3               	movf	plusw1,w,c
 18240  01366E  0F01               	addlw	1
 18241  013670  6E34               	movwf	(btemp+10)^0,c
 18242  013672  0EE1               	movlw	-31
 18243  013674  006F FF8C  F035    	movff	plusw1,btemp+11
 18244  01367A  0E00               	movlw	0
 18245  01367C  2235               	addwfc	(btemp+11)^0,f,c
 18246                           
 18247                           ;stkvar	_tm @ sp[(-57)+-10]
 18248  01367E  0EBD               	movlw	-67
 18249  013680  006F FF8C  F032    	movff	plusw1,btemp+8
 18250  013686  0EBE               	movlw	-66
 18251  013688  006F FF8C  F033    	movff	plusw1,btemp+9
 18252  01368E  0E06               	movlw	6
 18253  013690  2432               	addwf	(btemp+8)^0,w,c
 18254  013692  6ED9               	movwf	fsr2l,c
 18255  013694  0E00               	movlw	0
 18256  013696  2033               	addwfc	(btemp+9)^0,w,c
 18257  013698  6EDA               	movwf	fsr2h,c
 18258  01369A  0060  F0D3  FFDE   	movff	btemp+10,postinc2
 18259  0136A0  0060  F0D7  FFDD   	movff	btemp+11,postdec2
 18260                           
 18261                           ;stkvar	_wday @ sp[(-57)+55]
 18262  0136A6  50E1               	movf	fsr1l,w,c
 18263  0136A8  0FFE               	addlw	-2
 18264  0136AA  6ED9               	movwf	fsr2l,c
 18265  0136AC  50E2               	movf	fsr1h,w,c
 18266  0136AE  6EDA               	movwf	fsr2h,c
 18267  0136B0  0EFF               	movlw	255
 18268  0136B2  22DA               	addwfc	fsr2h,f,c
 18269                           
 18270                           ;stkvar	_tm @ sp[(-57)+-10]
 18271  0136B4  0EBD               	movlw	-67
 18272  0136B6  006F FF8C  F034    	movff	plusw1,btemp+10
 18273  0136BC  0EBE               	movlw	-66
 18274  0136BE  006F FF8C  F035    	movff	plusw1,btemp+11
 18275  0136C4  0E0C               	movlw	12
 18276  0136C6  2434               	addwf	(btemp+10)^0,w,c
 18277  0136C8  6EE9               	movwf	fsr0l,c
 18278  0136CA  0E00               	movlw	0
 18279  0136CC  2035               	addwfc	(btemp+11)^0,w,c
 18280  0136CE  6EEA               	movwf	fsr0h,c
 18281  0136D0  006F FF7B FFEE     	movff	postinc2,postinc0
 18282  0136D6  006F FF77 FFED     	movff	postdec2,postdec0
 18283                           
 18284                           ;stkvar	_yday @ sp[(-57)+53]
 18285  0136DC  50E1               	movf	fsr1l,w,c
 18286  0136DE  0FFC               	addlw	-4
 18287  0136E0  6ED9               	movwf	fsr2l,c
 18288  0136E2  50E2               	movf	fsr1h,w,c
 18289  0136E4  6EDA               	movwf	fsr2h,c
 18290  0136E6  0EFF               	movlw	255
 18291  0136E8  22DA               	addwfc	fsr2h,f,c
 18292                           
 18293                           ;stkvar	_tm @ sp[(-57)+-10]
 18294  0136EA  0EBD               	movlw	-67
 18295  0136EC  006F FF8C  F034    	movff	plusw1,btemp+10
 18296  0136F2  0EBE               	movlw	-66
 18297  0136F4  006F FF8C  F035    	movff	plusw1,btemp+11
 18298  0136FA  0E0E               	movlw	14
 18299  0136FC  2434               	addwf	(btemp+10)^0,w,c
 18300  0136FE  6EE9               	movwf	fsr0l,c
 18301  013700  0E00               	movlw	0
 18302  013702  2035               	addwfc	(btemp+11)^0,w,c
 18303  013704  6EEA               	movwf	fsr0h,c
 18304  013706  006F FF7B FFEE     	movff	postinc2,postinc0
 18305  01370C  006F FF77 FFED     	movff	postdec2,postdec0
 18306  013712  0E10               	movlw	16
 18307  013714  6EE6               	movwf	postinc1,c
 18308  013716  0E0E               	movlw	14
 18309  013718  6EE6               	movwf	postinc1,c
 18310  01371A  0E00               	movlw	0
 18311  01371C  6EE6               	movwf	postinc1,c
 18312  01371E  0E00               	movlw	0
 18313  013720  6EE6               	movwf	postinc1,c
 18314                           
 18315                           ;stkvar	_remsecs @ sp[(-61)+41]
 18316  013722  0EEC               	movlw	-20
 18317  013724  006F FF8F FFE6     	movff	plusw1,postinc1
 18318  01372A  006F FF8F FFE6     	movff	plusw1,postinc1
 18319  013730  006F FF8F FFE6     	movff	plusw1,postinc1
 18320  013736  006F FF8F FFE6     	movff	plusw1,postinc1
 18321  01373C  ECD0  F0ED         	call	___aldiv	;wreg free
 18322  013740  0060  F0A8  F034   	movff	btemp,btemp+10
 18323  013746  0060  F0AC  F035   	movff	btemp+1,btemp+11
 18324                           
 18325                           ;stkvar	_tm @ sp[(-57)+-10]
 18326  01374C  0EBD               	movlw	-67
 18327  01374E  006F FF8C  F032    	movff	plusw1,btemp+8
 18328  013754  0EBE               	movlw	-66
 18329  013756  006F FF8C  F033    	movff	plusw1,btemp+9
 18330  01375C  0E04               	movlw	4
 18331  01375E  2432               	addwf	(btemp+8)^0,w,c
 18332  013760  6ED9               	movwf	fsr2l,c
 18333  013762  0E00               	movlw	0
 18334  013764  2033               	addwfc	(btemp+9)^0,w,c
 18335  013766  6EDA               	movwf	fsr2h,c
 18336  013768  0060  F0D3  FFDE   	movff	btemp+10,postinc2
 18337  01376E  0060  F0D7  FFDD   	movff	btemp+11,postdec2
 18338  013774  0E3C               	movlw	60
 18339  013776  6EE6               	movwf	postinc1,c
 18340  013778  0E00               	movlw	0
 18341  01377A  6EE6               	movwf	postinc1,c
 18342  01377C  0E00               	movlw	0
 18343  01377E  6EE6               	movwf	postinc1,c
 18344  013780  0E00               	movlw	0
 18345  013782  6EE6               	movwf	postinc1,c
 18346  013784  0E3C               	movlw	60
 18347  013786  6EE6               	movwf	postinc1,c
 18348  013788  0E00               	movlw	0
 18349  01378A  6EE6               	movwf	postinc1,c
 18350  01378C  0E00               	movlw	0
 18351  01378E  6EE6               	movwf	postinc1,c
 18352  013790  0E00               	movlw	0
 18353  013792  6EE6               	movwf	postinc1,c
 18354                           
 18355                           ;stkvar	_remsecs @ sp[(-65)+41]
 18356  013794  0EE8               	movlw	-24
 18357  013796  006F FF8F FFE6     	movff	plusw1,postinc1
 18358  01379C  006F FF8F FFE6     	movff	plusw1,postinc1
 18359  0137A2  006F FF8F FFE6     	movff	plusw1,postinc1
 18360  0137A8  006F FF8F FFE6     	movff	plusw1,postinc1
 18361  0137AE  ECD0  F0ED         	call	___aldiv	;wreg free
 18362  0137B2  0060  F0AB  FFE6   	movff	btemp,postinc1
 18363  0137B8  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 18364  0137BE  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 18365  0137C4  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 18366  0137CA  EC56  F0F2         	call	___almod	;wreg free
 18367  0137CE  0060  F0A8  F034   	movff	btemp,btemp+10
 18368  0137D4  0060  F0AC  F035   	movff	btemp+1,btemp+11
 18369                           
 18370                           ;stkvar	_tm @ sp[(-57)+-10]
 18371  0137DA  0EBD               	movlw	-67
 18372  0137DC  006F FF8C  F032    	movff	plusw1,btemp+8
 18373  0137E2  0EBE               	movlw	-66
 18374  0137E4  006F FF8C  F033    	movff	plusw1,btemp+9
 18375  0137EA  0E02               	movlw	2
 18376  0137EC  2432               	addwf	(btemp+8)^0,w,c
 18377  0137EE  6ED9               	movwf	fsr2l,c
 18378  0137F0  0E00               	movlw	0
 18379  0137F2  2033               	addwfc	(btemp+9)^0,w,c
 18380  0137F4  6EDA               	movwf	fsr2h,c
 18381  0137F6  0060  F0D3  FFDE   	movff	btemp+10,postinc2
 18382  0137FC  0060  F0D7  FFDD   	movff	btemp+11,postdec2
 18383  013802  0E3C               	movlw	60
 18384  013804  6EE6               	movwf	postinc1,c
 18385  013806  0E00               	movlw	0
 18386  013808  6EE6               	movwf	postinc1,c
 18387  01380A  0E00               	movlw	0
 18388  01380C  6EE6               	movwf	postinc1,c
 18389  01380E  0E00               	movlw	0
 18390  013810  6EE6               	movwf	postinc1,c
 18391                           
 18392                           ;stkvar	_remsecs @ sp[(-61)+41]
 18393  013812  0EEC               	movlw	-20
 18394  013814  006F FF8F FFE6     	movff	plusw1,postinc1
 18395  01381A  006F FF8F FFE6     	movff	plusw1,postinc1
 18396  013820  006F FF8F FFE6     	movff	plusw1,postinc1
 18397  013826  006F FF8F FFE6     	movff	plusw1,postinc1
 18398  01382C  EC56  F0F2         	call	___almod	;wreg free
 18399  013830  0060  F0A8  F034   	movff	btemp,btemp+10
 18400  013836  0060  F0AC  F035   	movff	btemp+1,btemp+11
 18401                           
 18402                           ;stkvar	_tm @ sp[(-57)+-10]
 18403  01383C  0EBD               	movlw	-67
 18404  01383E  006F FF8F FFD9     	movff	plusw1,fsr2l
 18405  013844  0EBE               	movlw	-66
 18406  013846  006F FF8F FFDA     	movff	plusw1,fsr2h
 18407  01384C  0060  F0D3  FFDE   	movff	btemp+10,postinc2
 18408  013852  0060  F0D7  FFDD   	movff	btemp+11,postdec2
 18409  013858  0E00               	movlw	0
 18410  01385A  6E2A               	movwf	btemp^0,c
 18411  01385C  6A2B               	clrf	(btemp+1)^0,c
 18412  01385E  6A2C               	clrf	(btemp+2)^0,c
 18413  013860  6A2D               	clrf	(btemp+3)^0,c
 18414  013862                     l3847:
 18415                           
 18416                           ; ___secs_to_tm: autosize = 57, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10
      +                          , argsize = 10, vargsize = 0
 18417  013862  0EBD               	movlw	189
 18418  013864  26E1               	addwf	fsr1l,f,c
 18419  013866  0EFF               	movlw	255
 18420  013868  22E2               	addwfc	fsr1h,f,c
 18421  01386A  0012               	return		;funcret
 18422  01386C                     __end_of___secs_to_tm:
 18423                           	opt callstack 0
 18424                           
 18425 ;; *************** function ___omul *****************
 18426 ;; Defined at:
 18427 ;;		line 91 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/Umul64.c"
 18428 ;; Parameters:    Size  Location     Type
 18429 ;;  multiplier      8  [STACK] unsigned long long 
 18430 ;;  multiplicand    8  [STACK] unsigned long long 
 18431 ;; Auto vars:     Size  Location     Type
 18432 ;;  product         8  [STACK] unsigned long long 
 18433 ;; Return value:  Size  Location     Type
 18434 ;;                  8  [STACK] unsigned long long 
 18435 ;; Registers used:
 18436 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 18437 ;; Tracked objects:
 18438 ;;		On entry : 0/0
 18439 ;;		On exit  : 0/0
 18440 ;;		Unchanged: 0/0
 18441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18442 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18443 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18444 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18445 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18446 ;;Total ram usage:        0 bytes
 18447 ;; Hardware stack levels used:    1
 18448 ;; Hardware stack levels required when called:   15
 18449 ;; This function calls:
 18450 ;;		Nothing
 18451 ;; This function is called by:
 18452 ;;		___secs_to_tm
 18453 ;;		___year_to_secs
 18454 ;; This function uses a reentrant model
 18455 ;;
 18456                           
 18457                           	psect	text50
 18458  01EA36                     __ptext50:
 18459                           	opt callstack 0
 18460  01EA36                     ___omul:
 18461                           	opt callstack 0
 18462                           
 18463                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 18464  01EA36  0E08               	movlw	8
 18465  01EA38  26E1               	addwf	fsr1l,f,c
 18466  01EA3A  0E00               	movlw	0
 18467  01EA3C  22E2               	addwfc	fsr1h,f,c
 18468                           
 18469                           ;stkvar	_product @ sp[(-8)+0]
 18470                           
 18471                           ;incstack = 0
 18472  01EA3E  0E07               	movlw	7
 18473  01EA40  6E2A               	movwf	btemp^0,c
 18474  01EA42  0EF8               	movlw	-8
 18475  01EA44                     u8031:
 18476  01EA44  6AE3               	clrf	plusw1,c
 18477  01EA46  2AE8               	incf	wreg,f,c
 18478  01EA48  062A               	decf	btemp^0,f,c
 18479  01EA4A  E2FC               	bc	u8031
 18480  01EA4C                     l10164:
 18481                           
 18482                           ;stkvar	_multiplier @ sp[(-8)+-8]
 18483  01EA4C  0EF0               	movlw	-16
 18484  01EA4E  A0E3               	btfss	plusw1,0,c
 18485  01EA50  D050               	goto	l10168
 18486                           
 18487                           ;stkvar	_multiplicand @ sp[(-8)+-16]
 18488                           ;stkvar	_product @ sp[(-8)+0]
 18489  01EA52  0EF8               	movlw	-8
 18490  01EA54  50E3               	movf	plusw1,w,c
 18491  01EA56  6E2A               	movwf	btemp^0,c
 18492  01EA58  0EE8               	movlw	-24
 18493  01EA5A  50E3               	movf	plusw1,w,c
 18494  01EA5C  262A               	addwf	btemp^0,f,c
 18495  01EA5E  0EF8               	movlw	-8
 18496  01EA60  0060  F0AB  FFE3   	movff	btemp,plusw1
 18497  01EA66  0EF9               	movlw	-7
 18498  01EA68  50E3               	movf	plusw1,w,c
 18499  01EA6A  6E2A               	movwf	btemp^0,c
 18500  01EA6C  0EE9               	movlw	-23
 18501  01EA6E  50E3               	movf	plusw1,w,c
 18502  01EA70  222A               	addwfc	btemp^0,f,c
 18503  01EA72  0EF9               	movlw	-7
 18504  01EA74  0060  F0AB  FFE3   	movff	btemp,plusw1
 18505  01EA7A  0EFA               	movlw	-6
 18506  01EA7C  50E3               	movf	plusw1,w,c
 18507  01EA7E  6E2A               	movwf	btemp^0,c
 18508  01EA80  0EEA               	movlw	-22
 18509  01EA82  50E3               	movf	plusw1,w,c
 18510  01EA84  222A               	addwfc	btemp^0,f,c
 18511  01EA86  0EFA               	movlw	-6
 18512  01EA88  0060  F0AB  FFE3   	movff	btemp,plusw1
 18513  01EA8E  0EFB               	movlw	-5
 18514  01EA90  50E3               	movf	plusw1,w,c
 18515  01EA92  6E2A               	movwf	btemp^0,c
 18516  01EA94  0EEB               	movlw	-21
 18517  01EA96  50E3               	movf	plusw1,w,c
 18518  01EA98  222A               	addwfc	btemp^0,f,c
 18519  01EA9A  0EFB               	movlw	-5
 18520  01EA9C  0060  F0AB  FFE3   	movff	btemp,plusw1
 18521  01EAA2  0EFC               	movlw	-4
 18522  01EAA4  50E3               	movf	plusw1,w,c
 18523  01EAA6  6E2A               	movwf	btemp^0,c
 18524  01EAA8  0EEC               	movlw	-20
 18525  01EAAA  50E3               	movf	plusw1,w,c
 18526  01EAAC  222A               	addwfc	btemp^0,f,c
 18527  01EAAE  0EFC               	movlw	-4
 18528  01EAB0  0060  F0AB  FFE3   	movff	btemp,plusw1
 18529  01EAB6  0EFD               	movlw	-3
 18530  01EAB8  50E3               	movf	plusw1,w,c
 18531  01EABA  6E2A               	movwf	btemp^0,c
 18532  01EABC  0EED               	movlw	-19
 18533  01EABE  50E3               	movf	plusw1,w,c
 18534  01EAC0  222A               	addwfc	btemp^0,f,c
 18535  01EAC2  0EFD               	movlw	-3
 18536  01EAC4  0060  F0AB  FFE3   	movff	btemp,plusw1
 18537  01EACA  0EFE               	movlw	-2
 18538  01EACC  50E3               	movf	plusw1,w,c
 18539  01EACE  6E2A               	movwf	btemp^0,c
 18540  01EAD0  0EEE               	movlw	-18
 18541  01EAD2  50E3               	movf	plusw1,w,c
 18542  01EAD4  222A               	addwfc	btemp^0,f,c
 18543  01EAD6  0EFE               	movlw	-2
 18544  01EAD8  0060  F0AB  FFE3   	movff	btemp,plusw1
 18545  01EADE  0EFF               	movlw	-1
 18546  01EAE0  50E3               	movf	plusw1,w,c
 18547  01EAE2  6E2A               	movwf	btemp^0,c
 18548  01EAE4  0EEF               	movlw	-17
 18549  01EAE6  50E3               	movf	plusw1,w,c
 18550  01EAE8  222A               	addwfc	btemp^0,f,c
 18551  01EAEA  0EFF               	movlw	-1
 18552  01EAEC  0060  F0AB  FFE3   	movff	btemp,plusw1
 18553  01EAF2                     l10168:
 18554                           
 18555                           ;stkvar	_multiplicand @ sp[(-8)+-16]
 18556  01EAF2  90D8               	bcf	status,0,c
 18557  01EAF4  0EE8               	movlw	-24
 18558  01EAF6  36E3               	rlcf	plusw1,f,c
 18559  01EAF8  0EE9               	movlw	-23
 18560  01EAFA  36E3               	rlcf	plusw1,f,c
 18561  01EAFC  0EEA               	movlw	-22
 18562  01EAFE  36E3               	rlcf	plusw1,f,c
 18563  01EB00  0EEB               	movlw	-21
 18564  01EB02  36E3               	rlcf	plusw1,f,c
 18565  01EB04  0EEC               	movlw	-20
 18566  01EB06  36E3               	rlcf	plusw1,f,c
 18567  01EB08  0EED               	movlw	-19
 18568  01EB0A  36E3               	rlcf	plusw1,f,c
 18569  01EB0C  0EEE               	movlw	-18
 18570  01EB0E  36E3               	rlcf	plusw1,f,c
 18571  01EB10  0EEF               	movlw	-17
 18572  01EB12  36E3               	rlcf	plusw1,f,c
 18573                           
 18574                           ;stkvar	_multiplier @ sp[(-8)+-8]
 18575  01EB14  90D8               	bcf	status,0,c
 18576  01EB16  0EF7               	movlw	-9
 18577  01EB18  32E3               	rrcf	plusw1,f,c
 18578  01EB1A  0EF6               	movlw	-10
 18579  01EB1C  32E3               	rrcf	plusw1,f,c
 18580  01EB1E  0EF5               	movlw	-11
 18581  01EB20  32E3               	rrcf	plusw1,f,c
 18582  01EB22  0EF4               	movlw	-12
 18583  01EB24  32E3               	rrcf	plusw1,f,c
 18584  01EB26  0EF3               	movlw	-13
 18585  01EB28  32E3               	rrcf	plusw1,f,c
 18586  01EB2A  0EF2               	movlw	-14
 18587  01EB2C  32E3               	rrcf	plusw1,f,c
 18588  01EB2E  0EF1               	movlw	-15
 18589  01EB30  32E3               	rrcf	plusw1,f,c
 18590  01EB32  0EF0               	movlw	-16
 18591  01EB34  32E3               	rrcf	plusw1,f,c
 18592                           
 18593                           ;stkvar	_multiplier @ sp[(-8)+-8]
 18594  01EB36  0EF0               	movlw	-16
 18595  01EB38  50E3               	movf	plusw1,w,c
 18596  01EB3A  E188               	bnz	l10164
 18597  01EB3C  0EF1               	movlw	-15
 18598  01EB3E  50E3               	movf	plusw1,w,c
 18599  01EB40  E185               	bnz	l10164
 18600  01EB42  0EF2               	movlw	-14
 18601  01EB44  50E3               	movf	plusw1,w,c
 18602  01EB46  E182               	bnz	l10164
 18603  01EB48  0EF3               	movlw	-13
 18604  01EB4A  50E3               	movf	plusw1,w,c
 18605  01EB4C  E10C               	bnz	u8051
 18606  01EB4E  0EF4               	movlw	-12
 18607  01EB50  50E3               	movf	plusw1,w,c
 18608  01EB52  E109               	bnz	u8051
 18609  01EB54  0EF5               	movlw	-11
 18610  01EB56  50E3               	movf	plusw1,w,c
 18611  01EB58  E106               	bnz	u8051
 18612  01EB5A  0EF6               	movlw	-10
 18613  01EB5C  50E3               	movf	plusw1,w,c
 18614  01EB5E  E103               	bnz	u8051
 18615  01EB60  0EF7               	movlw	-9
 18616  01EB62  50E3               	movf	plusw1,w,c
 18617  01EB64  A4D8               	btfss	status,2,c
 18618  01EB66                     u8051:
 18619  01EB66  D772               	goto	l10164
 18620                           
 18621                           ;stkvar	_product @ sp[(-8)+0]
 18622  01EB68  0EF8               	movlw	248
 18623  01EB6A  24E1               	addwf	fsr1l,w,c
 18624  01EB6C  6ED9               	movwf	fsr2l,c
 18625  01EB6E  0EFF               	movlw	255
 18626  01EB70  20E2               	addwfc	fsr1h,w,c
 18627  01EB72  6EDA               	movwf	fsr2h,c
 18628                           
 18629                           ;stkvar	?___omul @ sp[(-8)+-8]
 18630  01EB74  0E08               	movlw	8
 18631  01EB76  6E2A               	movwf	btemp^0,c
 18632  01EB78  0EF0               	movlw	-16
 18633  01EB7A                     us806999:
 18634  01EB7A  006F FF7B FFE3     	movff	postinc2,plusw1
 18635  01EB80  28E8               	incf	wreg,w,c
 18636  01EB82  2E2A               	decfsz	btemp^0,f,c
 18637  01EB84  D7FA               	bra	us806999
 18638                           
 18639                           ; ___omul: autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsi
      +                          ze = 16, vargsize = 0
 18640  01EB86  0EF8               	movlw	248
 18641  01EB88  26E1               	addwf	fsr1l,f,c
 18642  01EB8A  0EFF               	movlw	255
 18643  01EB8C  22E2               	addwfc	fsr1h,f,c
 18644  01EB8E  0012               	return		;funcret
 18645  01EB90                     __end_of___omul:
 18646                           	opt callstack 0
 18647                           
 18648 ;; *************** function ___lmul *****************
 18649 ;; Defined at:
 18650 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/Umul32.c"
 18651 ;; Parameters:    Size  Location     Type
 18652 ;;  multiplier      4  [STACK] unsigned long 
 18653 ;;  multiplicand    4  [STACK] unsigned long 
 18654 ;; Auto vars:     Size  Location     Type
 18655 ;;  product         4  [STACK] unsigned long 
 18656 ;; Return value:  Size  Location     Type
 18657 ;;                  4  [STACK] unsigned long 
 18658 ;; Registers used:
 18659 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 18660 ;; Tracked objects:
 18661 ;;		On entry : 0/0
 18662 ;;		On exit  : 0/0
 18663 ;;		Unchanged: 0/0
 18664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18665 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18666 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18667 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18668 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18669 ;;Total ram usage:        0 bytes
 18670 ;; Hardware stack levels used:    1
 18671 ;; Hardware stack levels required when called:   15
 18672 ;; This function calls:
 18673 ;;		Nothing
 18674 ;; This function is called by:
 18675 ;;		___secs_to_tm
 18676 ;;		_rule_to_secs
 18677 ;;		___year_to_secs
 18678 ;; This function uses a reentrant model
 18679 ;;
 18680                           
 18681                           	psect	text51
 18682  01FE28                     __ptext51:
 18683                           	opt callstack 0
 18684  01FE28                     ___lmul:
 18685                           	opt callstack 0
 18686                           
 18687                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18688  01FE28  52E6               	movf	postinc1,f,c
 18689  01FE2A  52E6               	movf	postinc1,f,c
 18690  01FE2C  52E6               	movf	postinc1,f,c
 18691  01FE2E  52E6               	movf	postinc1,f,c
 18692                           
 18693                           ;stkvar	_product @ sp[(-4)+0]
 18694                           
 18695                           ;incstack = 0
 18696  01FE30  0EFC               	movlw	-4
 18697  01FE32  6AE3               	clrf	plusw1,c
 18698  01FE34  0EFD               	movlw	-3
 18699  01FE36  6AE3               	clrf	plusw1,c
 18700  01FE38  0EFE               	movlw	-2
 18701  01FE3A  6AE3               	clrf	plusw1,c
 18702  01FE3C  0EFF               	movlw	-1
 18703  01FE3E  6AE3               	clrf	plusw1,c
 18704  01FE40                     l2731:
 18705                           
 18706                           ;stkvar	_multiplier @ sp[(-4)+-4]
 18707  01FE40  0EF8               	movlw	-8
 18708  01FE42  A0E3               	btfss	plusw1,0,c
 18709  01FE44  D028               	goto	l10154
 18710                           
 18711                           ;stkvar	_multiplicand @ sp[(-4)+-8]
 18712                           ;stkvar	_product @ sp[(-4)+0]
 18713  01FE46  0EFC               	movlw	-4
 18714  01FE48  50E3               	movf	plusw1,w,c
 18715  01FE4A  6E2A               	movwf	btemp^0,c
 18716  01FE4C  0EF4               	movlw	-12
 18717  01FE4E  50E3               	movf	plusw1,w,c
 18718  01FE50  262A               	addwf	btemp^0,f,c
 18719  01FE52  0EFC               	movlw	-4
 18720  01FE54  0060  F0AB  FFE3   	movff	btemp,plusw1
 18721  01FE5A  0EFD               	movlw	-3
 18722  01FE5C  50E3               	movf	plusw1,w,c
 18723  01FE5E  6E2A               	movwf	btemp^0,c
 18724  01FE60  0EF5               	movlw	-11
 18725  01FE62  50E3               	movf	plusw1,w,c
 18726  01FE64  222A               	addwfc	btemp^0,f,c
 18727  01FE66  0EFD               	movlw	-3
 18728  01FE68  0060  F0AB  FFE3   	movff	btemp,plusw1
 18729  01FE6E  0EFE               	movlw	-2
 18730  01FE70  50E3               	movf	plusw1,w,c
 18731  01FE72  6E2A               	movwf	btemp^0,c
 18732  01FE74  0EF6               	movlw	-10
 18733  01FE76  50E3               	movf	plusw1,w,c
 18734  01FE78  222A               	addwfc	btemp^0,f,c
 18735  01FE7A  0EFE               	movlw	-2
 18736  01FE7C  0060  F0AB  FFE3   	movff	btemp,plusw1
 18737  01FE82  0EFF               	movlw	-1
 18738  01FE84  50E3               	movf	plusw1,w,c
 18739  01FE86  6E2A               	movwf	btemp^0,c
 18740  01FE88  0EF7               	movlw	-9
 18741  01FE8A  50E3               	movf	plusw1,w,c
 18742  01FE8C  222A               	addwfc	btemp^0,f,c
 18743  01FE8E  0EFF               	movlw	-1
 18744  01FE90  0060  F0AB  FFE3   	movff	btemp,plusw1
 18745  01FE96                     l10154:
 18746                           
 18747                           ;stkvar	_multiplicand @ sp[(-4)+-8]
 18748  01FE96  90D8               	bcf	status,0,c
 18749  01FE98  0EF4               	movlw	-12
 18750  01FE9A  36E3               	rlcf	plusw1,f,c
 18751  01FE9C  0EF5               	movlw	-11
 18752  01FE9E  36E3               	rlcf	plusw1,f,c
 18753  01FEA0  0EF6               	movlw	-10
 18754  01FEA2  36E3               	rlcf	plusw1,f,c
 18755  01FEA4  0EF7               	movlw	-9
 18756  01FEA6  36E3               	rlcf	plusw1,f,c
 18757                           
 18758                           ;stkvar	_multiplier @ sp[(-4)+-4]
 18759  01FEA8  90D8               	bcf	status,0,c
 18760  01FEAA  0EFB               	movlw	-5
 18761  01FEAC  32E3               	rrcf	plusw1,f,c
 18762  01FEAE  0EFA               	movlw	-6
 18763  01FEB0  32E3               	rrcf	plusw1,f,c
 18764  01FEB2  0EF9               	movlw	-7
 18765  01FEB4  32E3               	rrcf	plusw1,f,c
 18766  01FEB6  0EF8               	movlw	-8
 18767  01FEB8  32E3               	rrcf	plusw1,f,c
 18768                           
 18769                           ;stkvar	_multiplier @ sp[(-4)+-4]
 18770  01FEBA  0EF8               	movlw	-8
 18771  01FEBC  50E3               	movf	plusw1,w,c
 18772  01FEBE  E1C0               	bnz	l2731
 18773  01FEC0  0EF9               	movlw	-7
 18774  01FEC2  50E3               	movf	plusw1,w,c
 18775  01FEC4  E1BD               	bnz	l2731
 18776  01FEC6  0EFA               	movlw	-6
 18777  01FEC8  50E3               	movf	plusw1,w,c
 18778  01FECA  E1BA               	bnz	l2731
 18779  01FECC  0EFB               	movlw	-5
 18780  01FECE  50E3               	movf	plusw1,w,c
 18781  01FED0  A4D8               	btfss	status,2,c
 18782  01FED2  D7B6               	goto	l2731
 18783                           
 18784                           ;stkvar	_product @ sp[(-4)+0]
 18785  01FED4  0EFC               	movlw	-4
 18786  01FED6  006F FF8C  F02A    	movff	plusw1,btemp
 18787  01FEDC  0EFD               	movlw	-3
 18788  01FEDE  006F FF8C  F02B    	movff	plusw1,btemp+1
 18789  01FEE4  0EFE               	movlw	-2
 18790  01FEE6  006F FF8C  F02C    	movff	plusw1,btemp+2
 18791  01FEEC  0EFF               	movlw	-1
 18792  01FEEE  006F FF8C  F02D    	movff	plusw1,btemp+3
 18793                           
 18794                           ; ___lmul: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 18795  01FEF4  0EF4               	movlw	244
 18796  01FEF6  26E1               	addwf	fsr1l,f,c
 18797  01FEF8  0EFF               	movlw	255
 18798  01FEFA  22E2               	addwfc	fsr1h,f,c
 18799  01FEFC  0012               	return		;funcret
 18800  01FEFE                     __end_of___lmul:
 18801                           	opt callstack 0
 18802                           
 18803 ;; *************** function ___almod *****************
 18804 ;; Defined at:
 18805 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/almod.c"
 18806 ;; Parameters:    Size  Location     Type
 18807 ;;  dividend        4  [STACK] long 
 18808 ;;  divisor         4  [STACK] long 
 18809 ;; Auto vars:     Size  Location     Type
 18810 ;;  sign            1  [STACK] unsigned char 
 18811 ;;  counter         1  [STACK] unsigned char 
 18812 ;; Return value:  Size  Location     Type
 18813 ;;                  4  [STACK] long 
 18814 ;; Registers used:
 18815 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 18816 ;; Tracked objects:
 18817 ;;		On entry : 0/39
 18818 ;;		On exit  : 0/0
 18819 ;;		Unchanged: 0/0
 18820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18821 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18822 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18823 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18824 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18825 ;;Total ram usage:        0 bytes
 18826 ;; Hardware stack levels used:    1
 18827 ;; Hardware stack levels required when called:   15
 18828 ;; This function calls:
 18829 ;;		Nothing
 18830 ;; This function is called by:
 18831 ;;		___secs_to_tm
 18832 ;; This function uses a reentrant model
 18833 ;;
 18834                           
 18835                           	psect	text52
 18836  01E4AC                     __ptext52:
 18837                           	opt callstack 0
 18838  01E4AC                     ___almod:
 18839                           	opt callstack 0
 18840                           
 18841                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18842  01E4AC  52E6               	movf	postinc1,f,c
 18843  01E4AE  52E6               	movf	postinc1,f,c
 18844                           
 18845                           ;stkvar	_sign @ sp[(-2)+0]
 18846                           
 18847                           ;incstack = 0
 18848  01E4B0  0EFE               	movlw	-2
 18849  01E4B2  6AE3               	clrf	plusw1,c
 18850                           
 18851                           ;stkvar	_dividend @ sp[(-2)+-4]
 18852  01E4B4  0EFD               	movlw	-3
 18853  01E4B6  AEE3               	btfss	plusw1,7,c
 18854  01E4B8  D014               	goto	l11944
 18855                           
 18856                           ;stkvar	_dividend @ sp[(-2)+-4]
 18857                           ;stkvar	_dividend @ sp[(-2)+-4]
 18858  01E4BA  0EFA               	movlw	-6
 18859  01E4BC  6CE3               	negf	plusw1,c
 18860  01E4BE  0EFB               	movlw	-5
 18861  01E4C0  1EE3               	comf	plusw1,f,c
 18862  01E4C2  0EFC               	movlw	-4
 18863  01E4C4  1EE3               	comf	plusw1,f,c
 18864  01E4C6  0EFD               	movlw	-3
 18865  01E4C8  1EE3               	comf	plusw1,f,c
 18866  01E4CA  E308               	bnc	u11180
 18867  01E4CC  0EFB               	movlw	-5
 18868  01E4CE  2AE3               	incf	plusw1,f,c
 18869  01E4D0  E305               	bnc	u11180
 18870  01E4D2  0EFC               	movlw	-4
 18871  01E4D4  2AE3               	incf	plusw1,f,c
 18872  01E4D6  E302               	bnc	u11180
 18873  01E4D8  0EFD               	movlw	-3
 18874  01E4DA  2AE3               	incf	plusw1,f,c
 18875  01E4DC                     u11180:
 18876                           
 18877                           ;stkvar	_sign @ sp[(-2)+0]
 18878  01E4DC  0EFE               	movlw	-2
 18879  01E4DE  6AE3               	clrf	plusw1,c
 18880  01E4E0  2AE3               	incf	plusw1,f,c
 18881  01E4E2                     l11944:
 18882                           
 18883                           ;stkvar	_divisor @ sp[(-2)+-8]
 18884  01E4E2  0EF9               	movlw	-7
 18885  01E4E4  AEE3               	btfss	plusw1,7,c
 18886  01E4E6  D011               	goto	u11200
 18887                           
 18888                           ;stkvar	_divisor @ sp[(-2)+-8]
 18889                           ;stkvar	_divisor @ sp[(-2)+-8]
 18890  01E4E8  0EF6               	movlw	-10
 18891  01E4EA  6CE3               	negf	plusw1,c
 18892  01E4EC  0EF7               	movlw	-9
 18893  01E4EE  1EE3               	comf	plusw1,f,c
 18894  01E4F0  0EF8               	movlw	-8
 18895  01E4F2  1EE3               	comf	plusw1,f,c
 18896  01E4F4  0EF9               	movlw	-7
 18897  01E4F6  1EE3               	comf	plusw1,f,c
 18898  01E4F8  E308               	bnc	u11200
 18899  01E4FA  0EF7               	movlw	-9
 18900  01E4FC  2AE3               	incf	plusw1,f,c
 18901  01E4FE  E305               	bnc	u11200
 18902  01E500  0EF8               	movlw	-8
 18903  01E502  2AE3               	incf	plusw1,f,c
 18904  01E504  E302               	bnc	u11200
 18905  01E506  0EF9               	movlw	-7
 18906  01E508  2AE3               	incf	plusw1,f,c
 18907  01E50A                     u11200:
 18908                           
 18909                           ;stkvar	_divisor @ sp[(-2)+-8]
 18910  01E50A  0EF6               	movlw	-10
 18911  01E50C  50E3               	movf	plusw1,w,c
 18912  01E50E  E10A               	bnz	u11210
 18913  01E510  0EF7               	movlw	-9
 18914  01E512  50E3               	movf	plusw1,w,c
 18915  01E514  E107               	bnz	u11210
 18916  01E516  0EF8               	movlw	-8
 18917  01E518  50E3               	movf	plusw1,w,c
 18918  01E51A  E104               	bnz	u11210
 18919  01E51C  0EF9               	movlw	-7
 18920  01E51E  50E3               	movf	plusw1,w,c
 18921  01E520  B4D8               	btfsc	status,2,c
 18922  01E522  D04D               	goto	u11240
 18923  01E524                     u11210:
 18924                           
 18925                           ;stkvar	_counter @ sp[(-2)+1]
 18926  01E524  0EFF               	movlw	-1
 18927  01E526  6AE3               	clrf	plusw1,c
 18928  01E528  D00A               	goto	L17
 18929  01E52A                     l11952:
 18930                           
 18931                           ;stkvar	_divisor @ sp[(-2)+-8]
 18932  01E52A  90D8               	bcf	status,0,c
 18933  01E52C  0EF6               	movlw	-10
 18934  01E52E  36E3               	rlcf	plusw1,f,c
 18935  01E530  0EF7               	movlw	-9
 18936  01E532  36E3               	rlcf	plusw1,f,c
 18937  01E534  0EF8               	movlw	-8
 18938  01E536  36E3               	rlcf	plusw1,f,c
 18939  01E538  0EF9               	movlw	-7
 18940  01E53A  36E3               	rlcf	plusw1,f,c
 18941                           
 18942                           ;stkvar	_counter @ sp[(-2)+1]
 18943  01E53C  0EFF               	movlw	-1
 18944  01E53E                     L17:
 18945  01E53E  2AE3               	incf	plusw1,f,c
 18946                           
 18947                           ;stkvar	_divisor @ sp[(-2)+-8]
 18948  01E540  0EF9               	movlw	-7
 18949  01E542  AEE3               	btfss	plusw1,7,c
 18950  01E544  D7F2               	goto	l11952
 18951  01E546                     u11220:
 18952                           
 18953                           ;stkvar	_divisor @ sp[(-2)+-8]
 18954                           ;stkvar	_dividend @ sp[(-2)+-4]
 18955  01E546  50E1               	movf	fsr1l,w,c
 18956  01E548  0FFA               	addlw	-6
 18957  01E54A  6ED9               	movwf	fsr2l,c
 18958  01E54C  50E2               	movf	fsr1h,w,c
 18959  01E54E  6EDA               	movwf	fsr2h,c
 18960  01E550  0EFF               	movlw	255
 18961  01E552  22DA               	addwfc	fsr2h,f,c
 18962  01E554  0EF6               	movlw	-10
 18963  01E556  50E3               	movf	plusw1,w,c
 18964  01E558  5CDE               	subwf	postinc2,w,c
 18965  01E55A  0EF7               	movlw	-9
 18966  01E55C  50E3               	movf	plusw1,w,c
 18967  01E55E  58DE               	subwfb	postinc2,w,c
 18968  01E560  0EF8               	movlw	-8
 18969  01E562  50E3               	movf	plusw1,w,c
 18970  01E564  58DE               	subwfb	postinc2,w,c
 18971  01E566  0EF9               	movlw	-7
 18972  01E568  50E3               	movf	plusw1,w,c
 18973  01E56A  58DE               	subwfb	postinc2,w,c
 18974  01E56C  A0D8               	btfss	status,0,c
 18975  01E56E  D013               	goto	l11960
 18976                           
 18977                           ;stkvar	_divisor @ sp[(-2)+-8]
 18978                           ;stkvar	_dividend @ sp[(-2)+-4]
 18979  01E570  50E1               	movf	fsr1l,w,c
 18980  01E572  0FFA               	addlw	-6
 18981  01E574  6ED9               	movwf	fsr2l,c
 18982  01E576  50E2               	movf	fsr1h,w,c
 18983  01E578  6EDA               	movwf	fsr2h,c
 18984  01E57A  0EFF               	movlw	255
 18985  01E57C  22DA               	addwfc	fsr2h,f,c
 18986  01E57E  0EF6               	movlw	-10
 18987  01E580  50E3               	movf	plusw1,w,c
 18988  01E582  5EDE               	subwf	postinc2,f,c
 18989  01E584  0EF7               	movlw	-9
 18990  01E586  50E3               	movf	plusw1,w,c
 18991  01E588  5ADE               	subwfb	postinc2,f,c
 18992  01E58A  0EF8               	movlw	-8
 18993  01E58C  50E3               	movf	plusw1,w,c
 18994  01E58E  5ADE               	subwfb	postinc2,f,c
 18995  01E590  0EF9               	movlw	-7
 18996  01E592  50E3               	movf	plusw1,w,c
 18997  01E594  5ADE               	subwfb	postinc2,f,c
 18998  01E596                     l11960:
 18999                           
 19000                           ;stkvar	_divisor @ sp[(-2)+-8]
 19001  01E596  90D8               	bcf	status,0,c
 19002  01E598  0EF9               	movlw	-7
 19003  01E59A  32E3               	rrcf	plusw1,f,c
 19004  01E59C  0EF8               	movlw	-8
 19005  01E59E  32E3               	rrcf	plusw1,f,c
 19006  01E5A0  0EF7               	movlw	-9
 19007  01E5A2  32E3               	rrcf	plusw1,f,c
 19008  01E5A4  0EF6               	movlw	-10
 19009  01E5A6  32E3               	rrcf	plusw1,f,c
 19010                           
 19011                           ;stkvar	_counter @ sp[(-2)+1]
 19012  01E5A8  0EFF               	movlw	-1
 19013  01E5AA  50E3               	movf	plusw1,w,c
 19014  01E5AC  6E2A               	movwf	btemp^0,c
 19015  01E5AE  0E01               	movlw	1
 19016  01E5B0  5E2A               	subwf	btemp^0,f,c
 19017  01E5B2  0EFF               	movlw	-1
 19018  01E5B4  0060  F0AB  FFE3   	movff	btemp,plusw1
 19019  01E5BA  A4D8               	btfss	status,2,c
 19020  01E5BC  D7C4               	goto	u11220
 19021  01E5BE                     u11240:
 19022                           
 19023                           ;stkvar	_sign @ sp[(-2)+0]
 19024  01E5BE  0EFE               	movlw	-2
 19025  01E5C0  50E3               	movf	plusw1,w,c
 19026  01E5C2  B4D8               	btfsc	status,2,c
 19027  01E5C4  D011               	goto	u11260
 19028                           
 19029                           ;stkvar	_dividend @ sp[(-2)+-4]
 19030                           ;stkvar	_dividend @ sp[(-2)+-4]
 19031  01E5C6  0EFA               	movlw	-6
 19032  01E5C8  6CE3               	negf	plusw1,c
 19033  01E5CA  0EFB               	movlw	-5
 19034  01E5CC  1EE3               	comf	plusw1,f,c
 19035  01E5CE  0EFC               	movlw	-4
 19036  01E5D0  1EE3               	comf	plusw1,f,c
 19037  01E5D2  0EFD               	movlw	-3
 19038  01E5D4  1EE3               	comf	plusw1,f,c
 19039  01E5D6  E308               	bnc	u11260
 19040  01E5D8  0EFB               	movlw	-5
 19041  01E5DA  2AE3               	incf	plusw1,f,c
 19042  01E5DC  E305               	bnc	u11260
 19043  01E5DE  0EFC               	movlw	-4
 19044  01E5E0  2AE3               	incf	plusw1,f,c
 19045  01E5E2  E302               	bnc	u11260
 19046  01E5E4  0EFD               	movlw	-3
 19047  01E5E6  2AE3               	incf	plusw1,f,c
 19048  01E5E8                     u11260:
 19049                           
 19050                           ;stkvar	_dividend @ sp[(-2)+-4]
 19051  01E5E8  0EFA               	movlw	-6
 19052  01E5EA  006F FF8C  F02A    	movff	plusw1,btemp
 19053  01E5F0  0EFB               	movlw	-5
 19054  01E5F2  006F FF8C  F02B    	movff	plusw1,btemp+1
 19055  01E5F8  0EFC               	movlw	-4
 19056  01E5FA  006F FF8C  F02C    	movff	plusw1,btemp+2
 19057  01E600  0EFD               	movlw	-3
 19058  01E602  006F FF8C  F02D    	movff	plusw1,btemp+3
 19059                           
 19060                           ; ___almod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 19061  01E608  0EF6               	movlw	246
 19062  01E60A  26E1               	addwf	fsr1l,f,c
 19063  01E60C  0EFF               	movlw	255
 19064  01E60E  22E2               	addwfc	fsr1h,f,c
 19065  01E610  0012               	return		;funcret
 19066  01E612                     __end_of___almod:
 19067                           	opt callstack 0
 19068                           
 19069 ;; *************** function ___aldiv *****************
 19070 ;; Defined at:
 19071 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aldiv.c"
 19072 ;; Parameters:    Size  Location     Type
 19073 ;;  dividend        4  [STACK] long 
 19074 ;;  divisor         4  [STACK] long 
 19075 ;; Auto vars:     Size  Location     Type
 19076 ;;  quotient        4  [STACK] long 
 19077 ;;  sign            1  [STACK] unsigned char 
 19078 ;;  counter         1  [STACK] unsigned char 
 19079 ;; Return value:  Size  Location     Type
 19080 ;;                  4  [STACK] long 
 19081 ;; Registers used:
 19082 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 19083 ;; Tracked objects:
 19084 ;;		On entry : 0/0
 19085 ;;		On exit  : 0/0
 19086 ;;		Unchanged: 0/0
 19087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19088 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19089 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19091 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19092 ;;Total ram usage:        0 bytes
 19093 ;; Hardware stack levels used:    1
 19094 ;; Hardware stack levels required when called:   15
 19095 ;; This function calls:
 19096 ;;		Nothing
 19097 ;; This function is called by:
 19098 ;;		___secs_to_tm
 19099 ;;		_rule_to_secs
 19100 ;; This function uses a reentrant model
 19101 ;;
 19102                           
 19103                           	psect	text53
 19104  01DBA0                     __ptext53:
 19105                           	opt callstack 0
 19106  01DBA0                     ___aldiv:
 19107                           	opt callstack 0
 19108                           
 19109                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19110  01DBA0  0E06               	movlw	6
 19111  01DBA2  26E1               	addwf	fsr1l,f,c
 19112  01DBA4  0E00               	movlw	0
 19113  01DBA6  22E2               	addwfc	fsr1h,f,c
 19114                           
 19115                           ;stkvar	_sign @ sp[(-6)+4]
 19116                           
 19117                           ;incstack = 0
 19118  01DBA8  0EFE               	movlw	-2
 19119  01DBAA  6AE3               	clrf	plusw1,c
 19120                           
 19121                           ;stkvar	_divisor @ sp[(-6)+-8]
 19122  01DBAC  0EF5               	movlw	-11
 19123  01DBAE  AEE3               	btfss	plusw1,7,c
 19124  01DBB0  D014               	goto	l11484
 19125                           
 19126                           ;stkvar	_divisor @ sp[(-6)+-8]
 19127                           ;stkvar	_divisor @ sp[(-6)+-8]
 19128  01DBB2  0EF2               	movlw	-14
 19129  01DBB4  6CE3               	negf	plusw1,c
 19130  01DBB6  0EF3               	movlw	-13
 19131  01DBB8  1EE3               	comf	plusw1,f,c
 19132  01DBBA  0EF4               	movlw	-12
 19133  01DBBC  1EE3               	comf	plusw1,f,c
 19134  01DBBE  0EF5               	movlw	-11
 19135  01DBC0  1EE3               	comf	plusw1,f,c
 19136  01DBC2  E308               	bnc	u10500
 19137  01DBC4  0EF3               	movlw	-13
 19138  01DBC6  2AE3               	incf	plusw1,f,c
 19139  01DBC8  E305               	bnc	u10500
 19140  01DBCA  0EF4               	movlw	-12
 19141  01DBCC  2AE3               	incf	plusw1,f,c
 19142  01DBCE  E302               	bnc	u10500
 19143  01DBD0  0EF5               	movlw	-11
 19144  01DBD2  2AE3               	incf	plusw1,f,c
 19145  01DBD4                     u10500:
 19146                           
 19147                           ;stkvar	_sign @ sp[(-6)+4]
 19148  01DBD4  0EFE               	movlw	-2
 19149  01DBD6  6AE3               	clrf	plusw1,c
 19150  01DBD8  2AE3               	incf	plusw1,f,c
 19151  01DBDA                     l11484:
 19152                           
 19153                           ;stkvar	_dividend @ sp[(-6)+-4]
 19154  01DBDA  0EF9               	movlw	-7
 19155  01DBDC  AEE3               	btfss	plusw1,7,c
 19156  01DBDE  D013               	goto	l11490
 19157                           
 19158                           ;stkvar	_dividend @ sp[(-6)+-4]
 19159                           ;stkvar	_dividend @ sp[(-6)+-4]
 19160  01DBE0  0EF6               	movlw	-10
 19161  01DBE2  6CE3               	negf	plusw1,c
 19162  01DBE4  0EF7               	movlw	-9
 19163  01DBE6  1EE3               	comf	plusw1,f,c
 19164  01DBE8  0EF8               	movlw	-8
 19165  01DBEA  1EE3               	comf	plusw1,f,c
 19166  01DBEC  0EF9               	movlw	-7
 19167  01DBEE  1EE3               	comf	plusw1,f,c
 19168  01DBF0  E308               	bnc	u10520
 19169  01DBF2  0EF7               	movlw	-9
 19170  01DBF4  2AE3               	incf	plusw1,f,c
 19171  01DBF6  E305               	bnc	u10520
 19172  01DBF8  0EF8               	movlw	-8
 19173  01DBFA  2AE3               	incf	plusw1,f,c
 19174  01DBFC  E302               	bnc	u10520
 19175  01DBFE  0EF9               	movlw	-7
 19176  01DC00  2AE3               	incf	plusw1,f,c
 19177  01DC02                     u10520:
 19178                           
 19179                           ;stkvar	_sign @ sp[(-6)+4]
 19180  01DC02  0EFE               	movlw	-2
 19181  01DC04  70E3               	btg	plusw1,0,c
 19182  01DC06                     l11490:
 19183                           
 19184                           ;stkvar	_quotient @ sp[(-6)+0]
 19185  01DC06  0EFA               	movlw	-6
 19186  01DC08  6AE3               	clrf	plusw1,c
 19187  01DC0A  0EFB               	movlw	-5
 19188  01DC0C  6AE3               	clrf	plusw1,c
 19189  01DC0E  0EFC               	movlw	-4
 19190  01DC10  6AE3               	clrf	plusw1,c
 19191  01DC12  0EFD               	movlw	-3
 19192  01DC14  6AE3               	clrf	plusw1,c
 19193                           
 19194                           ;stkvar	_divisor @ sp[(-6)+-8]
 19195  01DC16  0EF2               	movlw	-14
 19196  01DC18  50E3               	movf	plusw1,w,c
 19197  01DC1A  E10A               	bnz	u10530
 19198  01DC1C  0EF3               	movlw	-13
 19199  01DC1E  50E3               	movf	plusw1,w,c
 19200  01DC20  E107               	bnz	u10530
 19201  01DC22  0EF4               	movlw	-12
 19202  01DC24  50E3               	movf	plusw1,w,c
 19203  01DC26  E104               	bnz	u10530
 19204  01DC28  0EF5               	movlw	-11
 19205  01DC2A  50E3               	movf	plusw1,w,c
 19206  01DC2C  B4D8               	btfsc	status,2,c
 19207  01DC2E  D058               	goto	u10560
 19208  01DC30                     u10530:
 19209                           
 19210                           ;stkvar	_counter @ sp[(-6)+5]
 19211  01DC30  0EFF               	movlw	-1
 19212  01DC32  6AE3               	clrf	plusw1,c
 19213  01DC34  D00A               	goto	L18
 19214  01DC36                     l11496:
 19215                           
 19216                           ;stkvar	_divisor @ sp[(-6)+-8]
 19217  01DC36  90D8               	bcf	status,0,c
 19218  01DC38  0EF2               	movlw	-14
 19219  01DC3A  36E3               	rlcf	plusw1,f,c
 19220  01DC3C  0EF3               	movlw	-13
 19221  01DC3E  36E3               	rlcf	plusw1,f,c
 19222  01DC40  0EF4               	movlw	-12
 19223  01DC42  36E3               	rlcf	plusw1,f,c
 19224  01DC44  0EF5               	movlw	-11
 19225  01DC46  36E3               	rlcf	plusw1,f,c
 19226                           
 19227                           ;stkvar	_counter @ sp[(-6)+5]
 19228  01DC48  0EFF               	movlw	-1
 19229  01DC4A                     L18:
 19230  01DC4A  2AE3               	incf	plusw1,f,c
 19231                           
 19232                           ;stkvar	_divisor @ sp[(-6)+-8]
 19233  01DC4C  0EF5               	movlw	-11
 19234  01DC4E  AEE3               	btfss	plusw1,7,c
 19235  01DC50  D7F2               	goto	l11496
 19236  01DC52                     u10540:
 19237                           
 19238                           ;stkvar	_quotient @ sp[(-6)+0]
 19239  01DC52  90D8               	bcf	status,0,c
 19240  01DC54  0EFA               	movlw	-6
 19241  01DC56  36E3               	rlcf	plusw1,f,c
 19242  01DC58  0EFB               	movlw	-5
 19243  01DC5A  36E3               	rlcf	plusw1,f,c
 19244  01DC5C  0EFC               	movlw	-4
 19245  01DC5E  36E3               	rlcf	plusw1,f,c
 19246  01DC60  0EFD               	movlw	-3
 19247  01DC62  36E3               	rlcf	plusw1,f,c
 19248                           
 19249                           ;stkvar	_divisor @ sp[(-6)+-8]
 19250                           ;stkvar	_dividend @ sp[(-6)+-4]
 19251  01DC64  50E1               	movf	fsr1l,w,c
 19252  01DC66  0FF6               	addlw	-10
 19253  01DC68  6ED9               	movwf	fsr2l,c
 19254  01DC6A  50E2               	movf	fsr1h,w,c
 19255  01DC6C  6EDA               	movwf	fsr2h,c
 19256  01DC6E  0EFF               	movlw	255
 19257  01DC70  22DA               	addwfc	fsr2h,f,c
 19258  01DC72  0EF2               	movlw	-14
 19259  01DC74  50E3               	movf	plusw1,w,c
 19260  01DC76  5CDE               	subwf	postinc2,w,c
 19261  01DC78  0EF3               	movlw	-13
 19262  01DC7A  50E3               	movf	plusw1,w,c
 19263  01DC7C  58DE               	subwfb	postinc2,w,c
 19264  01DC7E  0EF4               	movlw	-12
 19265  01DC80  50E3               	movf	plusw1,w,c
 19266  01DC82  58DE               	subwfb	postinc2,w,c
 19267  01DC84  0EF5               	movlw	-11
 19268  01DC86  50E3               	movf	plusw1,w,c
 19269  01DC88  58DE               	subwfb	postinc2,w,c
 19270  01DC8A  A0D8               	btfss	status,0,c
 19271  01DC8C  D015               	goto	l11508
 19272                           
 19273                           ;stkvar	_divisor @ sp[(-6)+-8]
 19274                           ;stkvar	_dividend @ sp[(-6)+-4]
 19275  01DC8E  50E1               	movf	fsr1l,w,c
 19276  01DC90  0FF6               	addlw	-10
 19277  01DC92  6ED9               	movwf	fsr2l,c
 19278  01DC94  50E2               	movf	fsr1h,w,c
 19279  01DC96  6EDA               	movwf	fsr2h,c
 19280  01DC98  0EFF               	movlw	255
 19281  01DC9A  22DA               	addwfc	fsr2h,f,c
 19282  01DC9C  0EF2               	movlw	-14
 19283  01DC9E  50E3               	movf	plusw1,w,c
 19284  01DCA0  5EDE               	subwf	postinc2,f,c
 19285  01DCA2  0EF3               	movlw	-13
 19286  01DCA4  50E3               	movf	plusw1,w,c
 19287  01DCA6  5ADE               	subwfb	postinc2,f,c
 19288  01DCA8  0EF4               	movlw	-12
 19289  01DCAA  50E3               	movf	plusw1,w,c
 19290  01DCAC  5ADE               	subwfb	postinc2,f,c
 19291  01DCAE  0EF5               	movlw	-11
 19292  01DCB0  50E3               	movf	plusw1,w,c
 19293  01DCB2  5ADE               	subwfb	postinc2,f,c
 19294                           
 19295                           ;stkvar	_quotient @ sp[(-6)+0]
 19296  01DCB4  0EFA               	movlw	-6
 19297  01DCB6  80E3               	bsf	plusw1,0,c
 19298  01DCB8                     l11508:
 19299                           
 19300                           ;stkvar	_divisor @ sp[(-6)+-8]
 19301  01DCB8  90D8               	bcf	status,0,c
 19302  01DCBA  0EF5               	movlw	-11
 19303  01DCBC  32E3               	rrcf	plusw1,f,c
 19304  01DCBE  0EF4               	movlw	-12
 19305  01DCC0  32E3               	rrcf	plusw1,f,c
 19306  01DCC2  0EF3               	movlw	-13
 19307  01DCC4  32E3               	rrcf	plusw1,f,c
 19308  01DCC6  0EF2               	movlw	-14
 19309  01DCC8  32E3               	rrcf	plusw1,f,c
 19310                           
 19311                           ;stkvar	_counter @ sp[(-6)+5]
 19312  01DCCA  0EFF               	movlw	-1
 19313  01DCCC  50E3               	movf	plusw1,w,c
 19314  01DCCE  6E2A               	movwf	btemp^0,c
 19315  01DCD0  0E01               	movlw	1
 19316  01DCD2  5E2A               	subwf	btemp^0,f,c
 19317  01DCD4  0EFF               	movlw	-1
 19318  01DCD6  0060  F0AB  FFE3   	movff	btemp,plusw1
 19319  01DCDC  A4D8               	btfss	status,2,c
 19320  01DCDE  D7B9               	goto	u10540
 19321  01DCE0                     u10560:
 19322                           
 19323                           ;stkvar	_sign @ sp[(-6)+4]
 19324  01DCE0  0EFE               	movlw	-2
 19325  01DCE2  50E3               	movf	plusw1,w,c
 19326  01DCE4  B4D8               	btfsc	status,2,c
 19327  01DCE6  D011               	goto	u10580
 19328                           
 19329                           ;stkvar	_quotient @ sp[(-6)+0]
 19330                           ;stkvar	_quotient @ sp[(-6)+0]
 19331  01DCE8  0EFA               	movlw	-6
 19332  01DCEA  6CE3               	negf	plusw1,c
 19333  01DCEC  0EFB               	movlw	-5
 19334  01DCEE  1EE3               	comf	plusw1,f,c
 19335  01DCF0  0EFC               	movlw	-4
 19336  01DCF2  1EE3               	comf	plusw1,f,c
 19337  01DCF4  0EFD               	movlw	-3
 19338  01DCF6  1EE3               	comf	plusw1,f,c
 19339  01DCF8  E308               	bnc	u10580
 19340  01DCFA  0EFB               	movlw	-5
 19341  01DCFC  2AE3               	incf	plusw1,f,c
 19342  01DCFE  E305               	bnc	u10580
 19343  01DD00  0EFC               	movlw	-4
 19344  01DD02  2AE3               	incf	plusw1,f,c
 19345  01DD04  E302               	bnc	u10580
 19346  01DD06  0EFD               	movlw	-3
 19347  01DD08  2AE3               	incf	plusw1,f,c
 19348  01DD0A                     u10580:
 19349                           
 19350                           ;stkvar	_quotient @ sp[(-6)+0]
 19351  01DD0A  0EFA               	movlw	-6
 19352  01DD0C  006F FF8C  F02A    	movff	plusw1,btemp
 19353  01DD12  0EFB               	movlw	-5
 19354  01DD14  006F FF8C  F02B    	movff	plusw1,btemp+1
 19355  01DD1A  0EFC               	movlw	-4
 19356  01DD1C  006F FF8C  F02C    	movff	plusw1,btemp+2
 19357  01DD22  0EFD               	movlw	-3
 19358  01DD24  006F FF8C  F02D    	movff	plusw1,btemp+3
 19359                           
 19360                           ; ___aldiv: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 19361  01DD2A  0EF2               	movlw	242
 19362  01DD2C  26E1               	addwf	fsr1l,f,c
 19363  01DD2E  0EFF               	movlw	255
 19364  01DD30  22E2               	addwfc	fsr1h,f,c
 19365  01DD32  0012               	return		;funcret
 19366  01DD34                     __end_of___aldiv:
 19367                           	opt callstack 0
 19368                           
 19369 ;; *************** function _asctime *****************
 19370 ;; Defined at:
 19371 ;;		line 19 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/asctime.c"
 19372 ;; Parameters:    Size  Location     Type
 19373 ;;  tim             2  [STACK] PTR const struct tm
 19374 ;;		 -> localtime@tm(24), NULL(0), 
 19375 ;; Auto vars:     Size  Location     Type
 19376 ;;  cp              2  [STACK] PTR unsigned char 
 19377 ;;		 -> asctime@buf(27), 
 19378 ;;  s               2  [STACK] PTR const unsigned char 
 19379 ;;		 -> STR_128(37), STR_127(22), 
 19380 ;; Return value:  Size  Location     Type
 19381 ;;                  2  [STACK] PTR unsigned char 
 19382 ;; Registers used:
 19383 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl,
      + tblptrh, tblptru, prodl, prodh
 19384 ;; Tracked objects:
 19385 ;;		On entry : 0/39
 19386 ;;		On exit  : 0/0
 19387 ;;		Unchanged: 0/0
 19388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19389 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19390 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19391 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19392 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19393 ;;Total ram usage:        0 bytes
 19394 ;; Hardware stack levels used:    1
 19395 ;; Hardware stack levels required when called:   17
 19396 ;; This function calls:
 19397 ;;		___awdiv
 19398 ;;		___awmod
 19399 ;;		_put2d
 19400 ;; This function is called by:
 19401 ;;		_main
 19402 ;;		_display_history
 19403 ;; This function uses a reentrant model
 19404 ;;
 19405                           
 19406                           	psect	text54
 19407  0180B6                     __ptext54:
 19408                           	opt callstack 0
 19409  0180B6                     _asctime:
 19410                           	opt callstack 0
 19411                           
 19412                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19413  0180B6  52E6               	movf	postinc1,f,c
 19414  0180B8  52E6               	movf	postinc1,f,c
 19415  0180BA  52E6               	movf	postinc1,f,c
 19416  0180BC  52E6               	movf	postinc1,f,c
 19417                           
 19418                           ;stkvar	_tim @ sp[(-4)+-2]
 19419                           
 19420                           ;incstack = 0
 19421  0180BE  0EFA               	movlw	-6
 19422  0180C0  006F FF8C  F034    	movff	plusw1,btemp+10
 19423  0180C6  0EFB               	movlw	-5
 19424  0180C8  006F FF8C  F035    	movff	plusw1,btemp+11
 19425  0180CE  0E0C               	movlw	12
 19426  0180D0  2434               	addwf	(btemp+10)^0,w,c
 19427  0180D2  6ED9               	movwf	fsr2l,c
 19428  0180D4  0E00               	movlw	0
 19429  0180D6  2035               	addwfc	(btemp+11)^0,w,c
 19430  0180D8  6EDA               	movwf	fsr2h,c
 19431  0180DA  006F FF78  F034    	movff	postinc2,btemp+10
 19432  0180E0  006F FF74  F035    	movff	postdec2,btemp+11
 19433  0180E6  0E03               	movlw	3
 19434  0180E8  0234               	mulwf	(btemp+10)^0,c
 19435  0180EA  006F FFCC  F032    	movff	prodl,btemp+8
 19436  0180F0  006F FFD0  F033    	movff	prodh,btemp+9
 19437  0180F6  0235               	mulwf	(btemp+11)^0,c
 19438  0180F8  50F3               	movf	prodl,w,c
 19439  0180FA  2633               	addwf	(btemp+9)^0,f,c
 19440  0180FC  0E27               	movlw	low STR_127
 19441  0180FE  6E34               	movwf	(btemp+10)^0,c
 19442  018100  0EFD               	movlw	high STR_127
 19443  018102  6E35               	movwf	(btemp+11)^0,c
 19444  018104  5032               	movf	(btemp+8)^0,w,c
 19445  018106  2634               	addwf	(btemp+10)^0,f,c
 19446  018108  5033               	movf	(btemp+9)^0,w,c
 19447  01810A  2235               	addwfc	(btemp+11)^0,f,c
 19448                           
 19449                           ;stkvar	_s @ sp[(-4)+2]
 19450  01810C  0EFF               	movlw	-1
 19451  01810E  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 19452  018114  0EFE               	movlw	-2
 19453  018116  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 19454                           
 19455                           ;stkvar	_cp @ sp[(-4)+0]
 19456  01811C  0E03               	movlw	high asctime@buf
 19457  01811E  6E2A               	movwf	btemp^0,c
 19458  018120  0EFD               	movlw	-3
 19459  018122  0060  F0AB  FFE3   	movff	btemp,plusw1
 19460  018128  0EC4               	movlw	low asctime@buf
 19461  01812A  6E2A               	movwf	btemp^0,c
 19462  01812C  0EFC               	movlw	-4
 19463  01812E  0060  F0AB  FFE3   	movff	btemp,plusw1
 19464                           
 19465                           ;stkvar	_s @ sp[(-4)+2]
 19466  018134  50E1               	movf	fsr1l,w,c
 19467  018136  0FFE               	addlw	-2
 19468  018138  6ED9               	movwf	fsr2l,c
 19469  01813A  50E2               	movf	fsr1h,w,c
 19470  01813C  6EDA               	movwf	fsr2h,c
 19471  01813E  0EFF               	movlw	255
 19472  018140  22DA               	addwfc	fsr2h,f,c
 19473  018142  006F FF7B FFF6     	movff	postinc2,tblptrl
 19474  018148  006F FF77 FFF7     	movff	postdec2,tblptrh
 19475  01814E                     	if	0	;tblptru may be non-zero
 19476  01814E                     	endif
 19477  01814E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19478  01814E  0E00               	movlw	low (__mediumconst shr (0+16))
 19479  018150  6EF8               	movwf	tblptru,c
 19480  018152                     	endif
 19481                           
 19482                           ;stkvar	_cp @ sp[(-4)+0]
 19483  018152  0EFC               	movlw	-4
 19484  018154  006F FF8F FFD9     	movff	plusw1,fsr2l
 19485  01815A  0EFD               	movlw	-3
 19486  01815C  006F FF8F FFDA     	movff	plusw1,fsr2h
 19487  018162  0008               	tblrd		*
 19488  018164  006F FFD7 FFDF     	movff	tablat,indf2
 19489                           
 19490                           ;stkvar	_s @ sp[(-4)+2]
 19491  01816A  0EFE               	movlw	-2
 19492  01816C  50E3               	movf	plusw1,w,c
 19493  01816E  0F01               	addlw	1
 19494  018170  6E2A               	movwf	btemp^0,c
 19495  018172  0EFE               	movlw	-2
 19496  018174  0060  F0AB  FFE3   	movff	btemp,plusw1
 19497  01817A  6A2A               	clrf	btemp^0,c
 19498  01817C  0EFF               	movlw	-1
 19499  01817E  50E3               	movf	plusw1,w,c
 19500  018180  202A               	addwfc	btemp^0,w,c
 19501  018182  6E2A               	movwf	btemp^0,c
 19502  018184  0EFF               	movlw	-1
 19503  018186  0060  F0AB  FFE3   	movff	btemp,plusw1
 19504                           
 19505                           ;stkvar	_cp @ sp[(-4)+0]
 19506  01818C  0EFC               	movlw	-4
 19507  01818E  50E3               	movf	plusw1,w,c
 19508  018190  0F01               	addlw	1
 19509  018192  6E2A               	movwf	btemp^0,c
 19510  018194  0EFC               	movlw	-4
 19511  018196  0060  F0AB  FFE3   	movff	btemp,plusw1
 19512  01819C  6A2A               	clrf	btemp^0,c
 19513  01819E  0EFD               	movlw	-3
 19514  0181A0  50E3               	movf	plusw1,w,c
 19515  0181A2  202A               	addwfc	btemp^0,w,c
 19516  0181A4  6E2A               	movwf	btemp^0,c
 19517  0181A6  0EFD               	movlw	-3
 19518  0181A8  0060  F0AB  FFE3   	movff	btemp,plusw1
 19519                           
 19520                           ;stkvar	_s @ sp[(-4)+2]
 19521  0181AE  50E1               	movf	fsr1l,w,c
 19522  0181B0  0FFE               	addlw	-2
 19523  0181B2  6ED9               	movwf	fsr2l,c
 19524  0181B4  50E2               	movf	fsr1h,w,c
 19525  0181B6  6EDA               	movwf	fsr2h,c
 19526  0181B8  0EFF               	movlw	255
 19527  0181BA  22DA               	addwfc	fsr2h,f,c
 19528  0181BC  006F FF7B FFF6     	movff	postinc2,tblptrl
 19529  0181C2  006F FF77 FFF7     	movff	postdec2,tblptrh
 19530  0181C8                     	if	0	;tblptru may be non-zero
 19531  0181C8                     	endif
 19532  0181C8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19533  0181C8  0E00               	movlw	low (__mediumconst shr (0+16))
 19534  0181CA  6EF8               	movwf	tblptru,c
 19535  0181CC                     	endif
 19536                           
 19537                           ;stkvar	_cp @ sp[(-4)+0]
 19538  0181CC  0EFC               	movlw	-4
 19539  0181CE  006F FF8F FFD9     	movff	plusw1,fsr2l
 19540  0181D4  0EFD               	movlw	-3
 19541  0181D6  006F FF8F FFDA     	movff	plusw1,fsr2h
 19542  0181DC  0008               	tblrd		*
 19543  0181DE  006F FFD7 FFDF     	movff	tablat,indf2
 19544                           
 19545                           ;stkvar	_s @ sp[(-4)+2]
 19546  0181E4  0EFE               	movlw	-2
 19547  0181E6  50E3               	movf	plusw1,w,c
 19548  0181E8  0F01               	addlw	1
 19549  0181EA  6E2A               	movwf	btemp^0,c
 19550  0181EC  0EFE               	movlw	-2
 19551  0181EE  0060  F0AB  FFE3   	movff	btemp,plusw1
 19552  0181F4  6A2A               	clrf	btemp^0,c
 19553  0181F6  0EFF               	movlw	-1
 19554  0181F8  50E3               	movf	plusw1,w,c
 19555  0181FA  202A               	addwfc	btemp^0,w,c
 19556  0181FC  6E2A               	movwf	btemp^0,c
 19557  0181FE  0EFF               	movlw	-1
 19558  018200  0060  F0AB  FFE3   	movff	btemp,plusw1
 19559                           
 19560                           ;stkvar	_cp @ sp[(-4)+0]
 19561  018206  0EFC               	movlw	-4
 19562  018208  50E3               	movf	plusw1,w,c
 19563  01820A  0F01               	addlw	1
 19564  01820C  6E2A               	movwf	btemp^0,c
 19565  01820E  0EFC               	movlw	-4
 19566  018210  0060  F0AB  FFE3   	movff	btemp,plusw1
 19567  018216  6A2A               	clrf	btemp^0,c
 19568  018218  0EFD               	movlw	-3
 19569  01821A  50E3               	movf	plusw1,w,c
 19570  01821C  202A               	addwfc	btemp^0,w,c
 19571  01821E  6E2A               	movwf	btemp^0,c
 19572  018220  0EFD               	movlw	-3
 19573  018222  0060  F0AB  FFE3   	movff	btemp,plusw1
 19574                           
 19575                           ;stkvar	_s @ sp[(-4)+2]
 19576  018228  50E1               	movf	fsr1l,w,c
 19577  01822A  0FFE               	addlw	-2
 19578  01822C  6ED9               	movwf	fsr2l,c
 19579  01822E  50E2               	movf	fsr1h,w,c
 19580  018230  6EDA               	movwf	fsr2h,c
 19581  018232  0EFF               	movlw	255
 19582  018234  22DA               	addwfc	fsr2h,f,c
 19583  018236  006F FF7B FFF6     	movff	postinc2,tblptrl
 19584  01823C  006F FF77 FFF7     	movff	postdec2,tblptrh
 19585  018242                     	if	0	;tblptru may be non-zero
 19586  018242                     	endif
 19587  018242                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19588  018242  0E00               	movlw	low (__mediumconst shr (0+16))
 19589  018244  6EF8               	movwf	tblptru,c
 19590  018246                     	endif
 19591                           
 19592                           ;stkvar	_cp @ sp[(-4)+0]
 19593  018246  0EFC               	movlw	-4
 19594  018248  006F FF8F FFD9     	movff	plusw1,fsr2l
 19595  01824E  0EFD               	movlw	-3
 19596  018250  006F FF8F FFDA     	movff	plusw1,fsr2h
 19597  018256  0008               	tblrd		*
 19598  018258  006F FFD7 FFDF     	movff	tablat,indf2
 19599                           
 19600                           ;stkvar	_cp @ sp[(-4)+0]
 19601  01825E  0EFC               	movlw	-4
 19602  018260  50E3               	movf	plusw1,w,c
 19603  018262  0F01               	addlw	1
 19604  018264  6E2A               	movwf	btemp^0,c
 19605  018266  0EFC               	movlw	-4
 19606  018268  0060  F0AB  FFE3   	movff	btemp,plusw1
 19607  01826E  6A2A               	clrf	btemp^0,c
 19608  018270  0EFD               	movlw	-3
 19609  018272  50E3               	movf	plusw1,w,c
 19610  018274  202A               	addwfc	btemp^0,w,c
 19611  018276  6E2A               	movwf	btemp^0,c
 19612  018278  0EFD               	movlw	-3
 19613  01827A  0060  F0AB  FFE3   	movff	btemp,plusw1
 19614                           
 19615                           ;stkvar	_cp @ sp[(-4)+0]
 19616  018280  0EFC               	movlw	-4
 19617  018282  006F FF8F FFD9     	movff	plusw1,fsr2l
 19618  018288  0EFD               	movlw	-3
 19619  01828A  006F FF8F FFDA     	movff	plusw1,fsr2h
 19620  018290  0E20               	movlw	32
 19621  018292  6EDF               	movwf	indf2,c
 19622                           
 19623                           ;stkvar	_cp @ sp[(-4)+0]
 19624  018294  0EFC               	movlw	-4
 19625  018296  50E3               	movf	plusw1,w,c
 19626  018298  0F01               	addlw	1
 19627  01829A  6E2A               	movwf	btemp^0,c
 19628  01829C  0EFC               	movlw	-4
 19629  01829E  0060  F0AB  FFE3   	movff	btemp,plusw1
 19630  0182A4  6A2A               	clrf	btemp^0,c
 19631  0182A6  0EFD               	movlw	-3
 19632  0182A8  50E3               	movf	plusw1,w,c
 19633  0182AA  202A               	addwfc	btemp^0,w,c
 19634  0182AC  6E2A               	movwf	btemp^0,c
 19635  0182AE  0EFD               	movlw	-3
 19636  0182B0  0060  F0AB  FFE3   	movff	btemp,plusw1
 19637                           
 19638                           ;stkvar	_tim @ sp[(-4)+-2]
 19639  0182B6  0EFA               	movlw	-6
 19640  0182B8  006F FF8C  F034    	movff	plusw1,btemp+10
 19641  0182BE  0EFB               	movlw	-5
 19642  0182C0  006F FF8C  F035    	movff	plusw1,btemp+11
 19643  0182C6  0E08               	movlw	8
 19644  0182C8  2434               	addwf	(btemp+10)^0,w,c
 19645  0182CA  6ED9               	movwf	fsr2l,c
 19646  0182CC  0E00               	movlw	0
 19647  0182CE  2035               	addwfc	(btemp+11)^0,w,c
 19648  0182D0  6EDA               	movwf	fsr2h,c
 19649  0182D2  006F FF78  F034    	movff	postinc2,btemp+10
 19650  0182D8  006F FF74  F035    	movff	postdec2,btemp+11
 19651  0182DE  0E03               	movlw	3
 19652  0182E0  0234               	mulwf	(btemp+10)^0,c
 19653  0182E2  006F FFCC  F032    	movff	prodl,btemp+8
 19654  0182E8  006F FFD0  F033    	movff	prodh,btemp+9
 19655  0182EE  0235               	mulwf	(btemp+11)^0,c
 19656  0182F0  50F3               	movf	prodl,w,c
 19657  0182F2  2633               	addwf	(btemp+9)^0,f,c
 19658  0182F4  0E76               	movlw	low STR_128
 19659  0182F6  6E34               	movwf	(btemp+10)^0,c
 19660  0182F8  0EFA               	movlw	high STR_128
 19661  0182FA  6E35               	movwf	(btemp+11)^0,c
 19662  0182FC  5032               	movf	(btemp+8)^0,w,c
 19663  0182FE  2634               	addwf	(btemp+10)^0,f,c
 19664  018300  5033               	movf	(btemp+9)^0,w,c
 19665  018302  2235               	addwfc	(btemp+11)^0,f,c
 19666                           
 19667                           ;stkvar	_s @ sp[(-4)+2]
 19668  018304  0EFF               	movlw	-1
 19669  018306  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 19670  01830C  0EFE               	movlw	-2
 19671  01830E  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 19672                           
 19673                           ;stkvar	_s @ sp[(-4)+2]
 19674  018314  50E1               	movf	fsr1l,w,c
 19675  018316  0FFE               	addlw	-2
 19676  018318  6ED9               	movwf	fsr2l,c
 19677  01831A  50E2               	movf	fsr1h,w,c
 19678  01831C  6EDA               	movwf	fsr2h,c
 19679  01831E  0EFF               	movlw	255
 19680  018320  22DA               	addwfc	fsr2h,f,c
 19681  018322  006F FF7B FFF6     	movff	postinc2,tblptrl
 19682  018328  006F FF77 FFF7     	movff	postdec2,tblptrh
 19683  01832E                     	if	0	;tblptru may be non-zero
 19684  01832E                     	endif
 19685  01832E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19686  01832E  0E00               	movlw	low (__mediumconst shr (0+16))
 19687  018330  6EF8               	movwf	tblptru,c
 19688  018332                     	endif
 19689                           
 19690                           ;stkvar	_cp @ sp[(-4)+0]
 19691  018332  0EFC               	movlw	-4
 19692  018334  006F FF8F FFD9     	movff	plusw1,fsr2l
 19693  01833A  0EFD               	movlw	-3
 19694  01833C  006F FF8F FFDA     	movff	plusw1,fsr2h
 19695  018342  0008               	tblrd		*
 19696  018344  006F FFD7 FFDF     	movff	tablat,indf2
 19697                           
 19698                           ;stkvar	_s @ sp[(-4)+2]
 19699  01834A  0EFE               	movlw	-2
 19700  01834C  50E3               	movf	plusw1,w,c
 19701  01834E  0F01               	addlw	1
 19702  018350  6E2A               	movwf	btemp^0,c
 19703  018352  0EFE               	movlw	-2
 19704  018354  0060  F0AB  FFE3   	movff	btemp,plusw1
 19705  01835A  6A2A               	clrf	btemp^0,c
 19706  01835C  0EFF               	movlw	-1
 19707  01835E  50E3               	movf	plusw1,w,c
 19708  018360  202A               	addwfc	btemp^0,w,c
 19709  018362  6E2A               	movwf	btemp^0,c
 19710  018364  0EFF               	movlw	-1
 19711  018366  0060  F0AB  FFE3   	movff	btemp,plusw1
 19712                           
 19713                           ;stkvar	_cp @ sp[(-4)+0]
 19714  01836C  0EFC               	movlw	-4
 19715  01836E  50E3               	movf	plusw1,w,c
 19716  018370  0F01               	addlw	1
 19717  018372  6E2A               	movwf	btemp^0,c
 19718  018374  0EFC               	movlw	-4
 19719  018376  0060  F0AB  FFE3   	movff	btemp,plusw1
 19720  01837C  6A2A               	clrf	btemp^0,c
 19721  01837E  0EFD               	movlw	-3
 19722  018380  50E3               	movf	plusw1,w,c
 19723  018382  202A               	addwfc	btemp^0,w,c
 19724  018384  6E2A               	movwf	btemp^0,c
 19725  018386  0EFD               	movlw	-3
 19726  018388  0060  F0AB  FFE3   	movff	btemp,plusw1
 19727                           
 19728                           ;stkvar	_s @ sp[(-4)+2]
 19729  01838E  50E1               	movf	fsr1l,w,c
 19730  018390  0FFE               	addlw	-2
 19731  018392  6ED9               	movwf	fsr2l,c
 19732  018394  50E2               	movf	fsr1h,w,c
 19733  018396  6EDA               	movwf	fsr2h,c
 19734  018398  0EFF               	movlw	255
 19735  01839A  22DA               	addwfc	fsr2h,f,c
 19736  01839C  006F FF7B FFF6     	movff	postinc2,tblptrl
 19737  0183A2  006F FF77 FFF7     	movff	postdec2,tblptrh
 19738  0183A8                     	if	0	;tblptru may be non-zero
 19739  0183A8                     	endif
 19740  0183A8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19741  0183A8  0E00               	movlw	low (__mediumconst shr (0+16))
 19742  0183AA  6EF8               	movwf	tblptru,c
 19743  0183AC                     	endif
 19744                           
 19745                           ;stkvar	_cp @ sp[(-4)+0]
 19746  0183AC  0EFC               	movlw	-4
 19747  0183AE  006F FF8F FFD9     	movff	plusw1,fsr2l
 19748  0183B4  0EFD               	movlw	-3
 19749  0183B6  006F FF8F FFDA     	movff	plusw1,fsr2h
 19750  0183BC  0008               	tblrd		*
 19751  0183BE  006F FFD7 FFDF     	movff	tablat,indf2
 19752                           
 19753                           ;stkvar	_s @ sp[(-4)+2]
 19754  0183C4  0EFE               	movlw	-2
 19755  0183C6  50E3               	movf	plusw1,w,c
 19756  0183C8  0F01               	addlw	1
 19757  0183CA  6E2A               	movwf	btemp^0,c
 19758  0183CC  0EFE               	movlw	-2
 19759  0183CE  0060  F0AB  FFE3   	movff	btemp,plusw1
 19760  0183D4  6A2A               	clrf	btemp^0,c
 19761  0183D6  0EFF               	movlw	-1
 19762  0183D8  50E3               	movf	plusw1,w,c
 19763  0183DA  202A               	addwfc	btemp^0,w,c
 19764  0183DC  6E2A               	movwf	btemp^0,c
 19765  0183DE  0EFF               	movlw	-1
 19766  0183E0  0060  F0AB  FFE3   	movff	btemp,plusw1
 19767                           
 19768                           ;stkvar	_cp @ sp[(-4)+0]
 19769  0183E6  0EFC               	movlw	-4
 19770  0183E8  50E3               	movf	plusw1,w,c
 19771  0183EA  0F01               	addlw	1
 19772  0183EC  6E2A               	movwf	btemp^0,c
 19773  0183EE  0EFC               	movlw	-4
 19774  0183F0  0060  F0AB  FFE3   	movff	btemp,plusw1
 19775  0183F6  6A2A               	clrf	btemp^0,c
 19776  0183F8  0EFD               	movlw	-3
 19777  0183FA  50E3               	movf	plusw1,w,c
 19778  0183FC  202A               	addwfc	btemp^0,w,c
 19779  0183FE  6E2A               	movwf	btemp^0,c
 19780  018400  0EFD               	movlw	-3
 19781  018402  0060  F0AB  FFE3   	movff	btemp,plusw1
 19782                           
 19783                           ;stkvar	_s @ sp[(-4)+2]
 19784  018408  50E1               	movf	fsr1l,w,c
 19785  01840A  0FFE               	addlw	-2
 19786  01840C  6ED9               	movwf	fsr2l,c
 19787  01840E  50E2               	movf	fsr1h,w,c
 19788  018410  6EDA               	movwf	fsr2h,c
 19789  018412  0EFF               	movlw	255
 19790  018414  22DA               	addwfc	fsr2h,f,c
 19791  018416  006F FF7B FFF6     	movff	postinc2,tblptrl
 19792  01841C  006F FF77 FFF7     	movff	postdec2,tblptrh
 19793  018422                     	if	0	;tblptru may be non-zero
 19794  018422                     	endif
 19795  018422                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19796  018422  0E00               	movlw	low (__mediumconst shr (0+16))
 19797  018424  6EF8               	movwf	tblptru,c
 19798  018426                     	endif
 19799                           
 19800                           ;stkvar	_cp @ sp[(-4)+0]
 19801  018426  0EFC               	movlw	-4
 19802  018428  006F FF8F FFD9     	movff	plusw1,fsr2l
 19803  01842E  0EFD               	movlw	-3
 19804  018430  006F FF8F FFDA     	movff	plusw1,fsr2h
 19805  018436  0008               	tblrd		*
 19806  018438  006F FFD7 FFDF     	movff	tablat,indf2
 19807  01843E  0E20               	movlw	32
 19808  018440  0103               	movlb	3	; () banked
 19809  018442  6FCB               	movwf	(asctime@buf+7)& (0+255),b
 19810                           
 19811                           ; BSR set to: 3
 19812  018444  0E20               	movlw	32
 19813  018446  6EE6               	movwf	postinc1,c
 19814  018448  0E20               	movlw	32
 19815  01844A  6EE6               	movwf	postinc1,c
 19816                           
 19817                           ;stkvar	_tim @ sp[(-6)+-2]
 19818  01844C  0EF8               	movlw	-8
 19819  01844E  006F FF8C  F034    	movff	plusw1,btemp+10
 19820  018454  0EF9               	movlw	-7
 19821  018456  006F FF8C  F035    	movff	plusw1,btemp+11
 19822  01845C  0E06               	movlw	6
 19823  01845E  2434               	addwf	(btemp+10)^0,w,c
 19824  018460  6ED9               	movwf	fsr2l,c
 19825  018462  0E00               	movlw	0
 19826  018464  2035               	addwfc	(btemp+11)^0,w,c
 19827  018466  6EDA               	movwf	fsr2h,c
 19828  018468  50DF               	movf	indf2,w,c
 19829  01846A  6EE6               	movwf	postinc1,c
 19830  01846C  0ECE               	movlw	low (asctime@buf+10)
 19831  01846E  6EE6               	movwf	postinc1,c
 19832  018470  0E03               	movlw	high (asctime@buf+10)
 19833  018472  6EE6               	movwf	postinc1,c
 19834  018474  EC8A  F0F9         	call	_put2d	;wreg free
 19835  018478  0E3A               	movlw	58
 19836  01847A  6EE6               	movwf	postinc1,c
 19837  01847C  0E30               	movlw	48
 19838  01847E  6EE6               	movwf	postinc1,c
 19839                           
 19840                           ;stkvar	_tim @ sp[(-6)+-2]
 19841  018480  0EF8               	movlw	-8
 19842  018482  006F FF8C  F034    	movff	plusw1,btemp+10
 19843  018488  0EF9               	movlw	-7
 19844  01848A  006F FF8C  F035    	movff	plusw1,btemp+11
 19845  018490  0E04               	movlw	4
 19846  018492  2434               	addwf	(btemp+10)^0,w,c
 19847  018494  6ED9               	movwf	fsr2l,c
 19848  018496  0E00               	movlw	0
 19849  018498  2035               	addwfc	(btemp+11)^0,w,c
 19850  01849A  6EDA               	movwf	fsr2h,c
 19851  01849C  50DF               	movf	indf2,w,c
 19852  01849E  6EE6               	movwf	postinc1,c
 19853  0184A0  0ED1               	movlw	low (asctime@buf+13)
 19854  0184A2  6EE6               	movwf	postinc1,c
 19855  0184A4  0E03               	movlw	high (asctime@buf+13)
 19856  0184A6  6EE6               	movwf	postinc1,c
 19857  0184A8  EC8A  F0F9         	call	_put2d	;wreg free
 19858  0184AC  0E3A               	movlw	58
 19859  0184AE  6EE6               	movwf	postinc1,c
 19860  0184B0  0E30               	movlw	48
 19861  0184B2  6EE6               	movwf	postinc1,c
 19862                           
 19863                           ;stkvar	_tim @ sp[(-6)+-2]
 19864  0184B4  0EF8               	movlw	-8
 19865  0184B6  006F FF8C  F034    	movff	plusw1,btemp+10
 19866  0184BC  0EF9               	movlw	-7
 19867  0184BE  006F FF8C  F035    	movff	plusw1,btemp+11
 19868  0184C4  0E02               	movlw	2
 19869  0184C6  2434               	addwf	(btemp+10)^0,w,c
 19870  0184C8  6ED9               	movwf	fsr2l,c
 19871  0184CA  0E00               	movlw	0
 19872  0184CC  2035               	addwfc	(btemp+11)^0,w,c
 19873  0184CE  6EDA               	movwf	fsr2h,c
 19874  0184D0  50DF               	movf	indf2,w,c
 19875  0184D2  6EE6               	movwf	postinc1,c
 19876  0184D4  0ED4               	movlw	low (asctime@buf+16)
 19877  0184D6  6EE6               	movwf	postinc1,c
 19878  0184D8  0E03               	movlw	high (asctime@buf+16)
 19879  0184DA  6EE6               	movwf	postinc1,c
 19880  0184DC  EC8A  F0F9         	call	_put2d	;wreg free
 19881  0184E0  0E20               	movlw	32
 19882  0184E2  6EE6               	movwf	postinc1,c
 19883  0184E4  0E30               	movlw	48
 19884  0184E6  6EE6               	movwf	postinc1,c
 19885                           
 19886                           ;stkvar	_tim @ sp[(-6)+-2]
 19887  0184E8  0EF8               	movlw	-8
 19888  0184EA  006F FF8F FFD9     	movff	plusw1,fsr2l
 19889  0184F0  0EF9               	movlw	-7
 19890  0184F2  006F FF8F FFDA     	movff	plusw1,fsr2h
 19891  0184F8  50DF               	movf	indf2,w,c
 19892  0184FA  6EE6               	movwf	postinc1,c
 19893  0184FC  0ED7               	movlw	low (asctime@buf+19)
 19894  0184FE  6EE6               	movwf	postinc1,c
 19895  018500  0E03               	movlw	high (asctime@buf+19)
 19896  018502  6EE6               	movwf	postinc1,c
 19897  018504  EC8A  F0F9         	call	_put2d	;wreg free
 19898  018508  0E00               	movlw	0
 19899  01850A  6EE6               	movwf	postinc1,c
 19900  01850C  0E20               	movlw	32
 19901  01850E  6EE6               	movwf	postinc1,c
 19902  018510  0E64               	movlw	100
 19903  018512  6EE6               	movwf	postinc1,c
 19904  018514  0E00               	movlw	0
 19905  018516  6EE6               	movwf	postinc1,c
 19906                           
 19907                           ;stkvar	_tim @ sp[(-8)+-2]
 19908  018518  0EF6               	movlw	-10
 19909  01851A  006F FF8C  F034    	movff	plusw1,btemp+10
 19910  018520  0EF7               	movlw	-9
 19911  018522  006F FF8C  F035    	movff	plusw1,btemp+11
 19912  018528  0E0A               	movlw	10
 19913  01852A  2434               	addwf	(btemp+10)^0,w,c
 19914  01852C  6ED9               	movwf	fsr2l,c
 19915  01852E  0E00               	movlw	0
 19916  018530  2035               	addwfc	(btemp+11)^0,w,c
 19917  018532  6EDA               	movwf	fsr2h,c
 19918  018534  006F FF78  F034    	movff	postinc2,btemp+10
 19919  01853A  006F FF74  F035    	movff	postdec2,btemp+11
 19920  018540  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 19921  018546  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 19922  01854C  EC74  F0F6         	call	___awdiv	;wreg free
 19923  018550  502A               	movf	btemp^0,w,c
 19924  018552  0F13               	addlw	19
 19925  018554  6EE6               	movwf	postinc1,c
 19926  018556  0EDA               	movlw	low (asctime@buf+22)
 19927  018558  6EE6               	movwf	postinc1,c
 19928  01855A  0E03               	movlw	high (asctime@buf+22)
 19929  01855C  6EE6               	movwf	postinc1,c
 19930  01855E  EC8A  F0F9         	call	_put2d	;wreg free
 19931  018562  0E0A               	movlw	10
 19932  018564  6EE6               	movwf	postinc1,c
 19933  018566  0E30               	movlw	48
 19934  018568  6EE6               	movwf	postinc1,c
 19935  01856A  0E64               	movlw	100
 19936  01856C  6EE6               	movwf	postinc1,c
 19937  01856E  0E00               	movlw	0
 19938  018570  6EE6               	movwf	postinc1,c
 19939                           
 19940                           ;stkvar	_tim @ sp[(-8)+-2]
 19941  018572  0EF6               	movlw	-10
 19942  018574  006F FF8C  F034    	movff	plusw1,btemp+10
 19943  01857A  0EF7               	movlw	-9
 19944  01857C  006F FF8C  F035    	movff	plusw1,btemp+11
 19945  018582  0E0A               	movlw	10
 19946  018584  2434               	addwf	(btemp+10)^0,w,c
 19947  018586  6ED9               	movwf	fsr2l,c
 19948  018588  0E00               	movlw	0
 19949  01858A  2035               	addwfc	(btemp+11)^0,w,c
 19950  01858C  6EDA               	movwf	fsr2h,c
 19951  01858E  006F FF78  F034    	movff	postinc2,btemp+10
 19952  018594  006F FF74  F035    	movff	postdec2,btemp+11
 19953  01859A  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 19954  0185A0  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 19955  0185A6  ECA3  F0FA         	call	___awmod	;wreg free
 19956  0185AA  502A               	movf	btemp^0,w,c
 19957  0185AC  6EE6               	movwf	postinc1,c
 19958  0185AE  0EDC               	movlw	low (asctime@buf+24)
 19959  0185B0  6EE6               	movwf	postinc1,c
 19960  0185B2  0E03               	movlw	high (asctime@buf+24)
 19961  0185B4  6EE6               	movwf	postinc1,c
 19962  0185B6  EC8A  F0F9         	call	_put2d	;wreg free
 19963  0185BA  0EC4               	movlw	low asctime@buf
 19964  0185BC  6E2A               	movwf	btemp^0,c
 19965  0185BE  0E03               	movlw	high asctime@buf
 19966  0185C0  6E2B               	movwf	(btemp+1)^0,c
 19967                           
 19968                           ; _asctime: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 19969  0185C2  0EFA               	movlw	250
 19970  0185C4  26E1               	addwf	fsr1l,f,c
 19971  0185C6  0EFF               	movlw	255
 19972  0185C8  22E2               	addwfc	fsr1h,f,c
 19973  0185CA  0012               	return		;funcret
 19974  0185CC                     __end_of_asctime:
 19975                           	opt callstack 0
 19976                           
 19977 ;; *************** function _put2d *****************
 19978 ;; Defined at:
 19979 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/asctime.c"
 19980 ;; Parameters:    Size  Location     Type
 19981 ;;  cp              2  [STACK] PTR unsigned char 
 19982 ;;		 -> asctime@buf(27), 
 19983 ;;  i               1  [STACK] unsigned char 
 19984 ;;  cl              1  [STACK] unsigned char 
 19985 ;;  ct              1  [STACK] unsigned char 
 19986 ;; Auto vars:     Size  Location     Type
 19987 ;;		None
 19988 ;; Return value:  Size  Location     Type
 19989 ;;                  1  [STACK] void 
 19990 ;; Registers used:
 19991 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 19992 ;; Tracked objects:
 19993 ;;		On entry : 0/3
 19994 ;;		On exit  : 0/0
 19995 ;;		Unchanged: 0/0
 19996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19997 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19998 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20000 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20001 ;;Total ram usage:        0 bytes
 20002 ;; Hardware stack levels used:    1
 20003 ;; Hardware stack levels required when called:   16
 20004 ;; This function calls:
 20005 ;;		___awdiv
 20006 ;;		___lbmod
 20007 ;; This function is called by:
 20008 ;;		_asctime
 20009 ;; This function uses a reentrant model
 20010 ;;
 20011                           
 20012                           	psect	text55
 20013  01F314                     __ptext55:
 20014                           	opt callstack 0
 20015  01F314                     _put2d:
 20016                           	opt callstack 12
 20017                           
 20018                           ;stkvar	_ct @ sp[(0)+-5]
 20019                           ;stkvar	_cp @ sp[(0)+-2]
 20020                           
 20021                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20022                           ;incstack = 0
 20023  01F314  0EFE               	movlw	-2
 20024  01F316  006F FF8F FFD9     	movff	plusw1,fsr2l
 20025  01F31C  0EFF               	movlw	-1
 20026  01F31E  006F FF8F FFDA     	movff	plusw1,fsr2h
 20027  01F324  0EFB               	movlw	-5
 20028  01F326  006F FF8F FFDF     	movff	plusw1,indf2
 20029  01F32C  0E0A               	movlw	10
 20030  01F32E  6EE6               	movwf	postinc1,c
 20031                           
 20032                           ;stkvar	_i @ sp[(-1)+-3]
 20033  01F330  0EFC               	movlw	-4
 20034  01F332  50E3               	movf	plusw1,w,c
 20035  01F334  6EE6               	movwf	postinc1,c
 20036  01F336  EC8E  F004         	call	___lbmod	;wreg free
 20037  01F33A  0E30               	movlw	48
 20038  01F33C  262A               	addwf	btemp^0,f,c
 20039                           
 20040                           ;stkvar	_cp @ sp[(0)+-2]
 20041  01F33E  0EFE               	movlw	-2
 20042  01F340  006F FF8C  F02B    	movff	plusw1,btemp+1
 20043  01F346  0E01               	movlw	1
 20044  01F348  5E2B               	subwf	(btemp+1)^0,f,c
 20045  01F34A  0EFE               	movlw	-2
 20046  01F34C  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 20047  01F352  0EFF               	movlw	-1
 20048  01F354  006F FF8C  F02B    	movff	plusw1,btemp+1
 20049  01F35A  0E00               	movlw	0
 20050  01F35C  5A2B               	subwfb	(btemp+1)^0,f,c
 20051  01F35E  0EFF               	movlw	-1
 20052  01F360  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 20053  01F366  0EFE               	movlw	-2
 20054  01F368  006F FF8F FFD9     	movff	plusw1,fsr2l
 20055  01F36E  0EFF               	movlw	-1
 20056  01F370  006F FF8F FFDA     	movff	plusw1,fsr2h
 20057  01F376  0060  F0AB  FFDF   	movff	btemp,indf2
 20058  01F37C  0E0A               	movlw	10
 20059  01F37E  6EE6               	movwf	postinc1,c
 20060  01F380  0E00               	movlw	0
 20061  01F382  6EE6               	movwf	postinc1,c
 20062                           
 20063                           ;stkvar	_i @ sp[(-2)+-3]
 20064  01F384  0EFB               	movlw	-5
 20065  01F386  50E3               	movf	plusw1,w,c
 20066  01F388  6EE6               	movwf	postinc1,c
 20067  01F38A  0E00               	movlw	0
 20068  01F38C  6EE6               	movwf	postinc1,c
 20069  01F38E  EC74  F0F6         	call	___awdiv	;wreg free
 20070                           
 20071                           ;stkvar	_i @ sp[(0)+-3]
 20072  01F392  0EFD               	movlw	-3
 20073  01F394  0060  F0AB  FFE3   	movff	btemp,plusw1
 20074  01F39A  0EFD               	movlw	-3
 20075  01F39C  50E3               	movf	plusw1,w,c
 20076  01F39E  B4D8               	btfsc	status,2,c
 20077  01F3A0  D021               	goto	l16810
 20078                           
 20079                           ;stkvar	_cp @ sp[(0)+-2]
 20080  01F3A2  0EFE               	movlw	-2
 20081  01F3A4  006F FF8C  F02A    	movff	plusw1,btemp
 20082  01F3AA  0E01               	movlw	1
 20083  01F3AC  5E2A               	subwf	btemp^0,f,c
 20084  01F3AE  0EFE               	movlw	-2
 20085  01F3B0  0060  F0AB  FFE3   	movff	btemp,plusw1
 20086  01F3B6  0EFF               	movlw	-1
 20087  01F3B8  006F FF8C  F02A    	movff	plusw1,btemp
 20088  01F3BE  0E00               	movlw	0
 20089  01F3C0  5A2A               	subwfb	btemp^0,f,c
 20090  01F3C2  0EFF               	movlw	-1
 20091  01F3C4  0060  F0AB  FFE3   	movff	btemp,plusw1
 20092  01F3CA  0EFE               	movlw	-2
 20093  01F3CC  006F FF8F FFD9     	movff	plusw1,fsr2l
 20094  01F3D2  0EFF               	movlw	-1
 20095  01F3D4  006F FF8F FFDA     	movff	plusw1,fsr2h
 20096                           
 20097                           ;stkvar	_i @ sp[(0)+-3]
 20098  01F3DA  0EFD               	movlw	-3
 20099  01F3DC  50E3               	movf	plusw1,w,c
 20100  01F3DE  0F30               	addlw	48
 20101  01F3E0  6EDF               	movwf	indf2,c
 20102  01F3E2  D020               	goto	l3416
 20103  01F3E4                     l16810:
 20104                           
 20105                           ;stkvar	_cl @ sp[(0)+-4]
 20106                           ;stkvar	_cp @ sp[(0)+-2]
 20107  01F3E4  0EFE               	movlw	-2
 20108  01F3E6  006F FF8C  F02A    	movff	plusw1,btemp
 20109  01F3EC  0E01               	movlw	1
 20110  01F3EE  5E2A               	subwf	btemp^0,f,c
 20111  01F3F0  0EFE               	movlw	-2
 20112  01F3F2  0060  F0AB  FFE3   	movff	btemp,plusw1
 20113  01F3F8  0EFF               	movlw	-1
 20114  01F3FA  006F FF8C  F02A    	movff	plusw1,btemp
 20115  01F400  0E00               	movlw	0
 20116  01F402  5A2A               	subwfb	btemp^0,f,c
 20117  01F404  0EFF               	movlw	-1
 20118  01F406  0060  F0AB  FFE3   	movff	btemp,plusw1
 20119  01F40C  0EFE               	movlw	-2
 20120  01F40E  006F FF8F FFD9     	movff	plusw1,fsr2l
 20121  01F414  0EFF               	movlw	-1
 20122  01F416  006F FF8F FFDA     	movff	plusw1,fsr2h
 20123  01F41C  0EFC               	movlw	-4
 20124  01F41E  006F FF8F FFDF     	movff	plusw1,indf2
 20125  01F424                     l3416:
 20126                           
 20127                           ; _put2d: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize
      +                           = 5, vargsize = 0
 20128  01F424  0EFB               	movlw	251
 20129  01F426  26E1               	addwf	fsr1l,f,c
 20130  01F428  0EFF               	movlw	255
 20131  01F42A  22E2               	addwfc	fsr1h,f,c
 20132  01F42C  0012               	return		;funcret
 20133  01F42E                     __end_of_put2d:
 20134                           	opt callstack 0
 20135                           
 20136 ;; *************** function ___lbmod *****************
 20137 ;; Defined at:
 20138 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lbmod.c"
 20139 ;; Parameters:    Size  Location     Type
 20140 ;;  dividend        1  [STACK] unsigned char 
 20141 ;;  divisor         1  [STACK] unsigned char 
 20142 ;; Auto vars:     Size  Location     Type
 20143 ;;  rem             1  [STACK] unsigned char 
 20144 ;;  counter         1  [STACK] unsigned char 
 20145 ;; Return value:  Size  Location     Type
 20146 ;;                  1  [STACK] unsigned char 
 20147 ;; Registers used:
 20148 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11
 20149 ;; Tracked objects:
 20150 ;;		On entry : 0/3
 20151 ;;		On exit  : 0/0
 20152 ;;		Unchanged: 0/0
 20153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20154 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20155 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20156 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20157 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20158 ;;Total ram usage:        0 bytes
 20159 ;; Hardware stack levels used:    1
 20160 ;; Hardware stack levels required when called:   15
 20161 ;; This function calls:
 20162 ;;		Nothing
 20163 ;; This function is called by:
 20164 ;;		_put2d
 20165 ;; This function uses a reentrant model
 20166 ;;
 20167                           
 20168                           	psect	text56
 20169  00091C                     __ptext56:
 20170                           	opt callstack 0
 20171  00091C                     ___lbmod:
 20172                           	opt callstack 0
 20173                           
 20174                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20175  00091C  52E6               	movf	postinc1,f,c
 20176  00091E  52E6               	movf	postinc1,f,c
 20177                           
 20178                           ;stkvar	_counter @ sp[(-2)+1]
 20179                           
 20180                           ;incstack = 0
 20181  000920  0EFF               	movlw	-1
 20182  000922  6AE3               	clrf	plusw1,c
 20183  000924  86E3               	bsf	plusw1,3,c
 20184                           
 20185                           ;stkvar	_rem @ sp[(-2)+0]
 20186  000926  0EFE               	movlw	-2
 20187  000928  6AE3               	clrf	plusw1,c
 20188  00092A                     l16550:
 20189                           
 20190                           ;stkvar	_dividend @ sp[(-2)+-1]
 20191  00092A  0EFD               	movlw	-3
 20192  00092C  006F FF8C  F035    	movff	plusw1,btemp+11
 20193                           
 20194                           ;stkvar	_rem @ sp[(-2)+0]
 20195  000932  0EFE               	movlw	-2
 20196  000934  006F FF8C  F034    	movff	plusw1,btemp+10
 20197  00093A  90D8               	bcf	status,0,c
 20198  00093C  3435               	rlcf	(btemp+11)^0,w,c
 20199  00093E  3434               	rlcf	(btemp+10)^0,w,c
 20200  000940  6E35               	movwf	(btemp+11)^0,c
 20201                           
 20202                           ;stkvar	_rem @ sp[(-2)+0]
 20203  000942  0EFE               	movlw	-2
 20204  000944  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 20205                           
 20206                           ;stkvar	_dividend @ sp[(-2)+-1]
 20207  00094A  50E1               	movf	fsr1l,w,c
 20208  00094C  0FFD               	addlw	-3
 20209  00094E  6ED9               	movwf	fsr2l,c
 20210  000950  50E2               	movf	fsr1h,w,c
 20211  000952  6EDA               	movwf	fsr2h,c
 20212  000954  0EFF               	movlw	255
 20213  000956  22DA               	addwfc	fsr2h,f,c
 20214  000958  90D8               	bcf	status,0,c
 20215  00095A  36DF               	rlcf	indf2,f,c
 20216                           
 20217                           ;stkvar	_divisor @ sp[(-2)+-2]
 20218                           ;stkvar	_rem @ sp[(-2)+0]
 20219  00095C  50E1               	movf	fsr1l,w,c
 20220  00095E  0FFE               	addlw	-2
 20221  000960  6ED9               	movwf	fsr2l,c
 20222  000962  50E2               	movf	fsr1h,w,c
 20223  000964  6EDA               	movwf	fsr2h,c
 20224  000966  0EFF               	movlw	255
 20225  000968  22DA               	addwfc	fsr2h,f,c
 20226  00096A  0EFC               	movlw	-4
 20227  00096C  50E3               	movf	plusw1,w,c
 20228  00096E  5CDE               	subwf	postinc2,w,c
 20229  000970  A0D8               	btfss	status,0,c
 20230  000972  D00D               	goto	l16558
 20231                           
 20232                           ;stkvar	_divisor @ sp[(-2)+-2]
 20233  000974  0EFC               	movlw	-4
 20234  000976  006F FF8C  F035    	movff	plusw1,btemp+11
 20235                           
 20236                           ;stkvar	_rem @ sp[(-2)+0]
 20237  00097C  50E1               	movf	fsr1l,w,c
 20238  00097E  0FFE               	addlw	-2
 20239  000980  6ED9               	movwf	fsr2l,c
 20240  000982  50E2               	movf	fsr1h,w,c
 20241  000984  6EDA               	movwf	fsr2h,c
 20242  000986  0EFF               	movlw	255
 20243  000988  22DA               	addwfc	fsr2h,f,c
 20244  00098A  5035               	movf	(btemp+11)^0,w,c
 20245  00098C  5EDF               	subwf	indf2,f,c
 20246  00098E                     l16558:
 20247                           
 20248                           ;stkvar	_counter @ sp[(-2)+1]
 20249  00098E  0EFF               	movlw	-1
 20250  000990  50E3               	movf	plusw1,w,c
 20251  000992  6E2A               	movwf	btemp^0,c
 20252  000994  0E01               	movlw	1
 20253  000996  5E2A               	subwf	btemp^0,f,c
 20254  000998  0EFF               	movlw	-1
 20255  00099A  0060  F0AB  FFE3   	movff	btemp,plusw1
 20256  0009A0  A4D8               	btfss	status,2,c
 20257  0009A2  D7C3               	goto	l16550
 20258                           
 20259                           ;stkvar	_rem @ sp[(-2)+0]
 20260  0009A4  0EFE               	movlw	-2
 20261  0009A6  006F FF8C  F02A    	movff	plusw1,btemp
 20262                           
 20263                           ; ___lbmod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 20264  0009AC  52E5               	movf	postdec1,f,c
 20265  0009AE  52E5               	movf	postdec1,f,c
 20266  0009B0  52E5               	movf	postdec1,f,c
 20267  0009B2  52E5               	movf	postdec1,f,c
 20268  0009B4  0012               	return		;funcret
 20269  0009B6                     __end_of___lbmod:
 20270                           	opt callstack 0
 20271                           
 20272 ;; *************** function _current_sensor_cal *****************
 20273 ;; Defined at:
 20274 ;;		line 509 in file "main.c"
 20275 ;; Parameters:    Size  Location     Type
 20276 ;;		None
 20277 ;; Auto vars:     Size  Location     Type
 20278 ;;  cp              4  [STACK] unsigned long 
 20279 ;;  cb              4  [STACK] unsigned long 
 20280 ;;  x               1  [STACK] unsigned char 
 20281 ;; Return value:  Size  Location     Type
 20282 ;;                  1  [STACK] _Bool 
 20283 ;; Registers used:
 20284 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 20285 ;; Tracked objects:
 20286 ;;		On entry : 0/2
 20287 ;;		On exit  : 0/0
 20288 ;;		Unchanged: 0/0
 20289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20290 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20291 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20293 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20294 ;;Total ram usage:        0 bytes
 20295 ;; Hardware stack levels used:    1
 20296 ;; Hardware stack levels required when called:   27
 20297 ;; This function calls:
 20298 ;;		_WaitMs
 20299 ;;		_cal_current_zero
 20300 ;;		_clear_adc_scan
 20301 ;;		_get_raw_result
 20302 ;;		_get_switch
 20303 ;;		_get_vterm_ptr
 20304 ;;		_spinners
 20305 ;;		_sprintf
 20306 ;;		_start_adc_scan
 20307 ;;		_update_lcd
 20308 ;;		_write_cal_data
 20309 ;; This function is called by:
 20310 ;;		_main
 20311 ;; This function uses a reentrant model
 20312 ;;
 20313                           
 20314                           	psect	text57
 20315  018F08                     __ptext57:
 20316                           	opt callstack 0
 20317  018F08                     _current_sensor_cal:
 20318                           	opt callstack 0
 20319                           
 20320                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20321  018F08  0E09               	movlw	9
 20322  018F0A  26E1               	addwf	fsr1l,f,c
 20323  018F0C  0E00               	movlw	0
 20324  018F0E  22E2               	addwfc	fsr1h,f,c
 20325                           
 20326                           ;main.c: 511:  uint8_t x = 0;
 20327                           ;stkvar	_x @ sp[(-9)+8]
 20328                           
 20329                           ;incstack = 0
 20330  018F10  0EFF               	movlw	-1
 20331  018F12  6AE3               	clrf	plusw1,c
 20332                           
 20333                           ;main.c: 512:  uint32_t cb = 0, cp = 0;
 20334                           ;stkvar	_cb @ sp[(-9)+4]
 20335  018F14  0EFB               	movlw	-5
 20336  018F16  6AE3               	clrf	plusw1,c
 20337  018F18  0EFC               	movlw	-4
 20338  018F1A  6AE3               	clrf	plusw1,c
 20339  018F1C  0EFD               	movlw	-3
 20340  018F1E  6AE3               	clrf	plusw1,c
 20341  018F20  0EFE               	movlw	-2
 20342  018F22  6AE3               	clrf	plusw1,c
 20343                           
 20344                           ;stkvar	_cp @ sp[(-9)+0]
 20345  018F24  0EF7               	movlw	-9
 20346  018F26  6AE3               	clrf	plusw1,c
 20347  018F28  0EF8               	movlw	-8
 20348  018F2A  6AE3               	clrf	plusw1,c
 20349  018F2C  0EF9               	movlw	-7
 20350  018F2E  6AE3               	clrf	plusw1,c
 20351  018F30  0EFA               	movlw	-6
 20352  018F32  6AE3               	clrf	plusw1,c
 20353                           
 20354                           ;main.c: 514:  sprintf(get_vterm_ptr(0, 0), "Battery and PV       ");
 20355  018F34  0E03               	movlw	low STR_52
 20356  018F36  6EE6               	movwf	postinc1,c
 20357  018F38  0EFE               	movlw	high STR_52
 20358  018F3A  6EE6               	movwf	postinc1,c
 20359  018F3C  0E00               	movlw	0
 20360  018F3E  6EE6               	movwf	postinc1,c
 20361  018F40  0E00               	movlw	0
 20362  018F42  6EE6               	movwf	postinc1,c
 20363  018F44  ECE9  F0FF         	call	_get_vterm_ptr	;wreg free
 20364  018F48  0060  F0AB  FFE6   	movff	btemp,postinc1
 20365  018F4E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 20366  018F54  0E04               	movlw	4
 20367  018F56  6EE6               	movwf	postinc1,c
 20368  018F58  ECB9  F0FB         	call	_sprintf	;wreg free
 20369                           
 20370                           ; BSR set to: 0
 20371                           ;main.c: 515:  sprintf(get_vterm_ptr(1, 0), "Sensor Zero          ");
 20372  018F5C  0ED7               	movlw	low STR_53
 20373  018F5E  6EE6               	movwf	postinc1,c
 20374  018F60  0EFD               	movlw	high STR_53
 20375  018F62  6EE6               	movwf	postinc1,c
 20376  018F64  0E00               	movlw	0
 20377  018F66  6EE6               	movwf	postinc1,c
 20378  018F68  0E01               	movlw	1
 20379  018F6A  6EE6               	movwf	postinc1,c
 20380  018F6C  ECE9  F0FF         	call	_get_vterm_ptr	;wreg free
 20381  018F70  0060  F0AB  FFE6   	movff	btemp,postinc1
 20382  018F76  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 20383  018F7C  0E04               	movlw	4
 20384  018F7E  6EE6               	movwf	postinc1,c
 20385  018F80  ECB9  F0FB         	call	_sprintf	;wreg free
 20386                           
 20387                           ; BSR set to: 0
 20388                           ;main.c: 516:  sprintf(get_vterm_ptr(2, 0), "Calibration          ");
 20389  018F84  0EC1               	movlw	low STR_54
 20390  018F86  6EE6               	movwf	postinc1,c
 20391  018F88  0EFD               	movlw	high STR_54
 20392  018F8A  6EE6               	movwf	postinc1,c
 20393  018F8C  0E00               	movlw	0
 20394  018F8E  6EE6               	movwf	postinc1,c
 20395  018F90  0E02               	movlw	2
 20396  018F92  6EE6               	movwf	postinc1,c
 20397  018F94  ECE9  F0FF         	call	_get_vterm_ptr	;wreg free
 20398  018F98  0060  F0AB  FFE6   	movff	btemp,postinc1
 20399  018F9E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 20400  018FA4  0E04               	movlw	4
 20401  018FA6  6EE6               	movwf	postinc1,c
 20402  018FA8  ECB9  F0FB         	call	_sprintf	;wreg free
 20403                           
 20404                           ; BSR set to: 0
 20405                           ;main.c: 517:  update_lcd(0);
 20406  018FAC  0E00               	movlw	0
 20407  018FAE  6EE6               	movwf	postinc1,c
 20408  018FB0  EC6B  F0F4         	call	_update_lcd	;wreg free
 20409                           
 20410                           ;main.c: 518:  WaitMs(2000);
 20411  018FB4  0ED0               	movlw	208
 20412  018FB6  6EE6               	movwf	postinc1,c
 20413  018FB8  0E07               	movlw	7
 20414  018FBA  6EE6               	movwf	postinc1,c
 20415  018FBC  EC07  F00F         	call	_WaitMs	;wreg free
 20416  018FC0                     l17146:
 20417                           
 20418                           ;main.c: 520:   if (++x > 64)
 20419                           ;stkvar	_x @ sp[(-9)+8]
 20420  018FC0  0EFF               	movlw	-1
 20421  018FC2  2AE3               	incf	plusw1,f,c
 20422  018FC4  0EFF               	movlw	-1
 20423  018FC6  006F FF8C  F02A    	movff	plusw1,btemp
 20424  018FCC  0E40               	movlw	64
 20425  018FCE  642A               	cpfsgt	btemp^0,c
 20426  018FD0  D001               	goto	l17150
 20427  018FD2  D1CF               	goto	l1520
 20428  018FD4                     l17150:
 20429                           
 20430                           ;main.c: 522:   sprintf(get_vterm_ptr(2, 0), "Release button %c   ", spinners(4, 0));
 20431  018FD4  0E00               	movlw	0
 20432  018FD6  6EE6               	movwf	postinc1,c
 20433  018FD8  0E04               	movlw	4
 20434  018FDA  6EE6               	movwf	postinc1,c
 20435  018FDC  EC35  F0FD         	call	_spinners	;wreg free
 20436  018FE0  502A               	movf	btemp^0,w,c
 20437  018FE2  6EE6               	movwf	postinc1,c
 20438  018FE4  0E00               	movlw	0
 20439  018FE6  6EE6               	movwf	postinc1,c
 20440  018FE8  0E47               	movlw	low STR_55
 20441  018FEA  6EE6               	movwf	postinc1,c
 20442  018FEC  0EFF               	movlw	high STR_55
 20443  018FEE  6EE6               	movwf	postinc1,c
 20444  018FF0  0E00               	movlw	0
 20445  018FF2  6EE6               	movwf	postinc1,c
 20446  018FF4  0E02               	movlw	2
 20447  018FF6  6EE6               	movwf	postinc1,c
 20448  018FF8  ECE9  F0FF         	call	_get_vterm_ptr	;wreg free
 20449  018FFC  0060  F0AB  FFE6   	movff	btemp,postinc1
 20450  019002  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 20451  019008  0E06               	movlw	6
 20452  01900A  6EE6               	movwf	postinc1,c
 20453  01900C  ECB9  F0FB         	call	_sprintf	;wreg free
 20454                           
 20455                           ;main.c: 523:   update_lcd(0);
 20456  019010  0E00               	movlw	0
 20457  019012  6EE6               	movwf	postinc1,c
 20458  019014  EC6B  F0F4         	call	_update_lcd	;wreg free
 20459                           
 20460                           ;main.c: 524:   WaitMs(100);
 20461  019018  0E64               	movlw	100
 20462  01901A  6EE6               	movwf	postinc1,c
 20463  01901C  0E00               	movlw	0
 20464  01901E  6EE6               	movwf	postinc1,c
 20465  019020  EC07  F00F         	call	_WaitMs	;wreg free
 20466                           
 20467                           ;main.c: 525:  } while (get_switch(SCALIB));
 20468  019024  0E04               	movlw	4
 20469  019026  6EE6               	movwf	postinc1,c
 20470  019028  EC03  F010         	call	_get_switch	;wreg free
 20471  01902C  502A               	movf	btemp^0,w,c
 20472  01902E  A4D8               	btfss	status,2,c
 20473  019030  D7C7               	goto	l17146
 20474                           
 20475                           ;main.c: 527:  x = 0;
 20476                           ;stkvar	_x @ sp[(-9)+8]
 20477  019032  0EFF               	movlw	-1
 20478  019034  6AE3               	clrf	plusw1,c
 20479  019036                     l17158:
 20480                           
 20481                           ;main.c: 529:   cb += get_raw_result(C_BATT);
 20482  019036  0E00               	movlw	0
 20483  019038  6EE6               	movwf	postinc1,c
 20484  01903A  EC05  F012         	call	_get_raw_result	;wreg free
 20485                           
 20486                           ;stkvar	_cb @ sp[(-9)+4]
 20487  01903E  50E1               	movf	fsr1l,w,c
 20488  019040  0FFB               	addlw	-5
 20489  019042  6ED9               	movwf	fsr2l,c
 20490  019044  50E2               	movf	fsr1h,w,c
 20491  019046  6EDA               	movwf	fsr2h,c
 20492  019048  0EFF               	movlw	255
 20493  01904A  22DA               	addwfc	fsr2h,f,c
 20494  01904C  502A               	movf	btemp^0,w,c
 20495  01904E  26DE               	addwf	postinc2,f,c
 20496  019050  502B               	movf	(btemp+1)^0,w,c
 20497  019052  22DE               	addwfc	postinc2,f,c
 20498  019054  0E00               	movlw	0
 20499  019056  22DE               	addwfc	postinc2,f,c
 20500  019058  22DE               	addwfc	postinc2,f,c
 20501                           
 20502                           ;main.c: 530:   cp += get_raw_result(C_PV);
 20503  01905A  0E01               	movlw	1
 20504  01905C  6EE6               	movwf	postinc1,c
 20505  01905E  EC05  F012         	call	_get_raw_result	;wreg free
 20506                           
 20507                           ;stkvar	_cp @ sp[(-9)+0]
 20508  019062  50E1               	movf	fsr1l,w,c
 20509  019064  0FF7               	addlw	-9
 20510  019066  6ED9               	movwf	fsr2l,c
 20511  019068  50E2               	movf	fsr1h,w,c
 20512  01906A  6EDA               	movwf	fsr2h,c
 20513  01906C  0EFF               	movlw	255
 20514  01906E  22DA               	addwfc	fsr2h,f,c
 20515  019070  502A               	movf	btemp^0,w,c
 20516  019072  26DE               	addwf	postinc2,f,c
 20517  019074  502B               	movf	(btemp+1)^0,w,c
 20518  019076  22DE               	addwfc	postinc2,f,c
 20519  019078  0E00               	movlw	0
 20520  01907A  22DE               	addwfc	postinc2,f,c
 20521  01907C  22DE               	addwfc	postinc2,f,c
 20522                           
 20523                           ;main.c: 531:   sprintf(get_vterm_ptr(0, 0), "Sensor Readings      ");
 20524  01907E  0E45               	movlw	low STR_56
 20525  019080  6EE6               	movwf	postinc1,c
 20526  019082  0EFE               	movlw	high STR_56
 20527  019084  6EE6               	movwf	postinc1,c
 20528  019086  0E00               	movlw	0
 20529  019088  6EE6               	movwf	postinc1,c
 20530  01908A  0E00               	movlw	0
 20531  01908C  6EE6               	movwf	postinc1,c
 20532  01908E  ECE9  F0FF         	call	_get_vterm_ptr	;wreg free
 20533  019092  0060  F0AB  FFE6   	movff	btemp,postinc1
 20534  019098  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 20535  01909E  0E04               	movlw	4
 20536  0190A0  6EE6               	movwf	postinc1,c
 20537  0190A2  ECB9  F0FB         	call	_sprintf	;wreg free
 20538                           
 20539                           ; BSR set to: 0
 20540                           ;main.c: 532:   sprintf(get_vterm_ptr(1, 0), " %d %d               ", get_raw_result(C_B
      +                          ATT), get_raw_result(C_PV));
 20541  0190A6  0E01               	movlw	1
 20542  0190A8  6EE6               	movwf	postinc1,c
 20543  0190AA  EC05  F012         	call	_get_raw_result	;wreg free
 20544  0190AE  0060  F0AB  FFE6   	movff	btemp,postinc1
 20545  0190B4  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 20546  0190BA  0E00               	movlw	0
 20547  0190BC  6EE6               	movwf	postinc1,c
 20548  0190BE  EC05  F012         	call	_get_raw_result	;wreg free
 20549  0190C2  0060  F0AB  FFE6   	movff	btemp,postinc1
 20550  0190C8  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 20551  0190CE  0E3D               	movlw	low STR_57
 20552  0190D0  6EE6               	movwf	postinc1,c
 20553  0190D2  0EFD               	movlw	high STR_57
 20554  0190D4  6EE6               	movwf	postinc1,c
 20555  0190D6  0E00               	movlw	0
 20556  0190D8  6EE6               	movwf	postinc1,c
 20557  0190DA  0E01               	movlw	1
 20558  0190DC  6EE6               	movwf	postinc1,c
 20559  0190DE  ECE9  F0FF         	call	_get_vterm_ptr	;wreg free
 20560  0190E2  0060  F0AB  FFE6   	movff	btemp,postinc1
 20561  0190E8  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 20562  0190EE  0E08               	movlw	8
 20563  0190F0  6EE6               	movwf	postinc1,c
 20564  0190F2  ECB9  F0FB         	call	_sprintf	;wreg free
 20565                           
 20566                           ; BSR set to: 0
 20567                           ;main.c: 533:   sprintf(get_vterm_ptr(2, 0), "Stability clock %d   ", x);
 20568                           ;stkvar	_x @ sp[(-9)+8]
 20569  0190F6  0EFF               	movlw	-1
 20570  0190F8  50E3               	movf	plusw1,w,c
 20571  0190FA  6EE6               	movwf	postinc1,c
 20572  0190FC  0E00               	movlw	0
 20573  0190FE  6EE6               	movwf	postinc1,c
 20574  019100  0E9D               	movlw	low STR_58
 20575  019102  6EE6               	movwf	postinc1,c
 20576  019104  0EFE               	movlw	high STR_58
 20577  019106  6EE6               	movwf	postinc1,c
 20578  019108  0E00               	movlw	0
 20579  01910A  6EE6               	movwf	postinc1,c
 20580  01910C  0E02               	movlw	2
 20581  01910E  6EE6               	movwf	postinc1,c
 20582  019110  ECE9  F0FF         	call	_get_vterm_ptr	;wreg free
 20583  019114  0060  F0AB  FFE6   	movff	btemp,postinc1
 20584  01911A  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 20585  019120  0E06               	movlw	6
 20586  019122  6EE6               	movwf	postinc1,c
 20587  019124  ECB9  F0FB         	call	_sprintf	;wreg free
 20588                           
 20589                           ; BSR set to: 0
 20590                           ;main.c: 534:   update_lcd(0);
 20591  019128  0E00               	movlw	0
 20592  01912A  6EE6               	movwf	postinc1,c
 20593  01912C  EC6B  F0F4         	call	_update_lcd	;wreg free
 20594                           
 20595                           ;main.c: 535:   clear_adc_scan();
 20596  019130  EC91  F013         	call	_clear_adc_scan	;wreg free
 20597                           
 20598                           ; BSR set to: 1
 20599                           ;main.c: 536:   start_adc_scan();
 20600  019134  EC39  F00A         	call	_start_adc_scan	;wreg free
 20601                           
 20602                           ;main.c: 537:   WaitMs(100);
 20603  019138  0E64               	movlw	100
 20604  01913A  6EE6               	movwf	postinc1,c
 20605  01913C  0E00               	movlw	0
 20606  01913E  6EE6               	movwf	postinc1,c
 20607  019140  EC07  F00F         	call	_WaitMs	;wreg free
 20608                           
 20609                           ;main.c: 538:  } while (++x < 64);
 20610                           ;stkvar	_x @ sp[(-9)+8]
 20611  019144  0EFF               	movlw	-1
 20612  019146  2AE3               	incf	plusw1,f,c
 20613  019148  0EFF               	movlw	-1
 20614  01914A  006F FF8C  F02A    	movff	plusw1,btemp
 20615  019150  0E3F               	movlw	63
 20616  019152  642A               	cpfsgt	btemp^0,c
 20617  019154  D770               	goto	l17158
 20618                           
 20619                           ;main.c: 539:  cb = cb >> 6;
 20620  019156  0E06               	movlw	6
 20621  019158  6E35               	movwf	(btemp+11)^0,c
 20622                           
 20623                           ;stkvar	_cb @ sp[(-9)+4]
 20624  01915A  50E1               	movf	fsr1l,w,c
 20625  01915C  0FFB               	addlw	-5
 20626  01915E  6ED9               	movwf	fsr2l,c
 20627  019160  50E2               	movf	fsr1h,w,c
 20628  019162  6EDA               	movwf	fsr2h,c
 20629  019164  0EFF               	movlw	255
 20630  019166  22DA               	addwfc	fsr2h,f,c
 20631  019168  2835               	incf	(btemp+11)^0,w,c
 20632  01916A  52DE               	movf	postinc2,f,c
 20633  01916C  D007               	goto	u16760
 20634  01916E                     u16765:
 20635  01916E  52DE               	movf	postinc2,f,c
 20636  019170  52DE               	movf	postinc2,f,c
 20637  019172  90D8               	bcf	status,0,c
 20638  019174  32DD               	rrcf	postdec2,f,c
 20639  019176  32DD               	rrcf	postdec2,f,c
 20640  019178  32DD               	rrcf	postdec2,f,c
 20641  01917A  32DE               	rrcf	postinc2,f,c
 20642  01917C                     u16760:
 20643  01917C  2EE8               	decfsz	wreg,f,c
 20644  01917E  D7F7               	goto	u16765
 20645                           
 20646                           ;main.c: 540:  cp = cp >> 6;
 20647  019180  0E06               	movlw	6
 20648  019182  6E35               	movwf	(btemp+11)^0,c
 20649                           
 20650                           ;stkvar	_cp @ sp[(-9)+0]
 20651  019184  50E1               	movf	fsr1l,w,c
 20652  019186  0FF7               	addlw	-9
 20653  019188  6ED9               	movwf	fsr2l,c
 20654  01918A  50E2               	movf	fsr1h,w,c
 20655  01918C  6EDA               	movwf	fsr2h,c
 20656  01918E  0EFF               	movlw	255
 20657  019190  22DA               	addwfc	fsr2h,f,c
 20658  019192  2835               	incf	(btemp+11)^0,w,c
 20659  019194  52DE               	movf	postinc2,f,c
 20660  019196  D007               	goto	u16770
 20661  019198                     u16775:
 20662  019198  52DE               	movf	postinc2,f,c
 20663  01919A  52DE               	movf	postinc2,f,c
 20664  01919C  90D8               	bcf	status,0,c
 20665  01919E  32DD               	rrcf	postdec2,f,c
 20666  0191A0  32DD               	rrcf	postdec2,f,c
 20667  0191A2  32DD               	rrcf	postdec2,f,c
 20668  0191A4  32DE               	rrcf	postinc2,f,c
 20669  0191A6                     u16770:
 20670  0191A6  2EE8               	decfsz	wreg,f,c
 20671  0191A8  D7F7               	goto	u16775
 20672                           
 20673                           ;main.c: 542:  if (cal_current_zero(0, cb, cp)) {
 20674                           ;stkvar	_cp @ sp[(-9)+0]
 20675  0191AA  0EF7               	movlw	-9
 20676  0191AC  006F FF8F FFE6     	movff	plusw1,postinc1
 20677  0191B2  006F FF8F FFE6     	movff	plusw1,postinc1
 20678                           
 20679                           ;stkvar	_cb @ sp[(-11)+4]
 20680  0191B8  0EF9               	movlw	-7
 20681  0191BA  006F FF8F FFE6     	movff	plusw1,postinc1
 20682  0191C0  006F FF8F FFE6     	movff	plusw1,postinc1
 20683  0191C6  0E00               	movlw	0
 20684  0191C8  6EE6               	movwf	postinc1,c
 20685  0191CA  EC27  F005         	call	_cal_current_zero	;wreg free
 20686  0191CE  502A               	movf	btemp^0,w,c
 20687  0191D0  B4D8               	btfsc	status,2,c
 20688  0191D2  D075               	goto	l17196
 20689                           
 20690                           ;main.c: 543:   cal_current_zero(1, cb, cp);
 20691                           ;stkvar	_cp @ sp[(-9)+0]
 20692  0191D4  0EF7               	movlw	-9
 20693  0191D6  006F FF8F FFE6     	movff	plusw1,postinc1
 20694  0191DC  006F FF8F FFE6     	movff	plusw1,postinc1
 20695                           
 20696                           ;stkvar	_cb @ sp[(-11)+4]
 20697  0191E2  0EF9               	movlw	-7
 20698  0191E4  006F FF8F FFE6     	movff	plusw1,postinc1
 20699  0191EA  006F FF8F FFE6     	movff	plusw1,postinc1
 20700  0191F0  0E01               	movlw	1
 20701  0191F2  6EE6               	movwf	postinc1,c
 20702  0191F4  EC27  F005         	call	_cal_current_zero	;wreg free
 20703                           
 20704                           ;main.c: 544:   sprintf(get_vterm_ptr(0, 0), "Battery and PV       ");
 20705  0191F8  0E03               	movlw	low STR_52
 20706  0191FA  6EE6               	movwf	postinc1,c
 20707  0191FC  0EFE               	movlw	high STR_52
 20708  0191FE  6EE6               	movwf	postinc1,c
 20709  019200  0E00               	movlw	0
 20710  019202  6EE6               	movwf	postinc1,c
 20711  019204  0E00               	movlw	0
 20712  019206  6EE6               	movwf	postinc1,c
 20713  019208  ECE9  F0FF         	call	_get_vterm_ptr	;wreg free
 20714  01920C  0060  F0AB  FFE6   	movff	btemp,postinc1
 20715  019212  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 20716  019218  0E04               	movlw	4
 20717  01921A  6EE6               	movwf	postinc1,c
 20718  01921C  ECB9  F0FB         	call	_sprintf	;wreg free
 20719                           
 20720                           ; BSR set to: 0
 20721                           ;main.c: 545:   sprintf(get_vterm_ptr(1, 0), " %ld %ld             ", cb, cp);
 20722                           ;stkvar	_cp @ sp[(-9)+0]
 20723  019220  0EF7               	movlw	-9
 20724  019222  006F FF8F FFE6     	movff	plusw1,postinc1
 20725  019228  006F FF8F FFE6     	movff	plusw1,postinc1
 20726  01922E  006F FF8F FFE6     	movff	plusw1,postinc1
 20727  019234  006F FF8F FFE6     	movff	plusw1,postinc1
 20728                           
 20729                           ;stkvar	_cb @ sp[(-13)+4]
 20730  01923A  0EF7               	movlw	-9
 20731  01923C  006F FF8F FFE6     	movff	plusw1,postinc1
 20732  019242  006F FF8F FFE6     	movff	plusw1,postinc1
 20733  019248  006F FF8F FFE6     	movff	plusw1,postinc1
 20734  01924E  006F FF8F FFE6     	movff	plusw1,postinc1
 20735  019254  0E53               	movlw	low STR_60
 20736  019256  6EE6               	movwf	postinc1,c
 20737  019258  0EFD               	movlw	high STR_60
 20738  01925A  6EE6               	movwf	postinc1,c
 20739  01925C  0E00               	movlw	0
 20740  01925E  6EE6               	movwf	postinc1,c
 20741  019260  0E01               	movlw	1
 20742  019262  6EE6               	movwf	postinc1,c
 20743  019264  ECE9  F0FF         	call	_get_vterm_ptr	;wreg free
 20744  019268  0060  F0AB  FFE6   	movff	btemp,postinc1
 20745  01926E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 20746  019274  0E0C               	movlw	12
 20747  019276  6EE6               	movwf	postinc1,c
 20748  019278  ECB9  F0FB         	call	_sprintf	;wreg free
 20749                           
 20750                           ; BSR set to: 0
 20751                           ;main.c: 546:   sprintf(get_vterm_ptr(2, 0), "Zero Cal Set         ");
 20752  01927C  0EED               	movlw	low STR_61
 20753  01927E  6EE6               	movwf	postinc1,c
 20754  019280  0EFD               	movlw	high STR_61
 20755  019282  6EE6               	movwf	postinc1,c
 20756  019284  0E00               	movlw	0
 20757  019286  6EE6               	movwf	postinc1,c
 20758  019288  0E02               	movlw	2
 20759  01928A  6EE6               	movwf	postinc1,c
 20760  01928C  ECE9  F0FF         	call	_get_vterm_ptr	;wreg free
 20761  019290  0060  F0AB  FFE6   	movff	btemp,postinc1
 20762  019296  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 20763  01929C  0E04               	movlw	4
 20764  01929E  6EE6               	movwf	postinc1,c
 20765  0192A0  ECB9  F0FB         	call	_sprintf	;wreg free
 20766                           
 20767                           ; BSR set to: 0
 20768                           ;main.c: 547:   update_lcd(0);
 20769  0192A4  0E00               	movlw	0
 20770  0192A6  6EE6               	movwf	postinc1,c
 20771  0192A8  EC6B  F0F4         	call	_update_lcd	;wreg free
 20772                           
 20773                           ;main.c: 548:   WaitMs(2000);
 20774  0192AC  0ED0               	movlw	208
 20775  0192AE  6EE6               	movwf	postinc1,c
 20776  0192B0  0E07               	movlw	7
 20777  0192B2  6EE6               	movwf	postinc1,c
 20778  0192B4  EC07  F00F         	call	_WaitMs	;wreg free
 20779                           
 20780                           ;main.c: 549:   write_cal_data();
 20781  0192B8  ECC8  F0F5         	call	_write_cal_data	;wreg free
 20782                           
 20783                           ;main.c: 550:  } else {
 20784  0192BC  D05A               	goto	l1520
 20785  0192BE                     l17196:
 20786                           
 20787                           ;main.c: 551:   sprintf(get_vterm_ptr(0, 0), "Battery and PV       ");
 20788  0192BE  0E03               	movlw	low STR_52
 20789  0192C0  6EE6               	movwf	postinc1,c
 20790  0192C2  0EFE               	movlw	high STR_52
 20791  0192C4  6EE6               	movwf	postinc1,c
 20792  0192C6  0E00               	movlw	0
 20793  0192C8  6EE6               	movwf	postinc1,c
 20794  0192CA  0E00               	movlw	0
 20795  0192CC  6EE6               	movwf	postinc1,c
 20796  0192CE  ECE9  F0FF         	call	_get_vterm_ptr	;wreg free
 20797  0192D2  0060  F0AB  FFE6   	movff	btemp,postinc1
 20798  0192D8  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 20799  0192DE  0E04               	movlw	4
 20800  0192E0  6EE6               	movwf	postinc1,c
 20801  0192E2  ECB9  F0FB         	call	_sprintf	;wreg free
 20802                           
 20803                           ;main.c: 552:   sprintf(get_vterm_ptr(1, 0), " %ld %ld             ", get_raw_result(C_B
      +                          ATT), get_raw_result(C_PV));
 20804  0192E6  0E01               	movlw	1
 20805  0192E8  6EE6               	movwf	postinc1,c
 20806  0192EA  EC05  F012         	call	_get_raw_result	;wreg free
 20807  0192EE  0060  F0AB  FFE6   	movff	btemp,postinc1
 20808  0192F4  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 20809  0192FA  0E00               	movlw	0
 20810  0192FC  6EE6               	movwf	postinc1,c
 20811  0192FE  EC05  F012         	call	_get_raw_result	;wreg free
 20812  019302  0060  F0AB  FFE6   	movff	btemp,postinc1
 20813  019308  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 20814  01930E  0E53               	movlw	low STR_60
 20815  019310  6EE6               	movwf	postinc1,c
 20816  019312  0EFD               	movlw	high STR_60
 20817  019314  6EE6               	movwf	postinc1,c
 20818  019316  0E00               	movlw	0
 20819  019318  6EE6               	movwf	postinc1,c
 20820  01931A  0E01               	movlw	1
 20821  01931C  6EE6               	movwf	postinc1,c
 20822  01931E  ECE9  F0FF         	call	_get_vterm_ptr	;wreg free
 20823  019322  0060  F0AB  FFE6   	movff	btemp,postinc1
 20824  019328  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 20825  01932E  0E08               	movlw	8
 20826  019330  6EE6               	movwf	postinc1,c
 20827  019332  ECB9  F0FB         	call	_sprintf	;wreg free
 20828                           
 20829                           ;main.c: 553:   sprintf(get_vterm_ptr(2, 0), "Zero Out Of Range    ");
 20830  019336  0E71               	movlw	low STR_64
 20831  019338  6EE6               	movwf	postinc1,c
 20832  01933A  0EFE               	movlw	high STR_64
 20833  01933C  6EE6               	movwf	postinc1,c
 20834  01933E  0E00               	movlw	0
 20835  019340  6EE6               	movwf	postinc1,c
 20836  019342  0E02               	movlw	2
 20837  019344  6EE6               	movwf	postinc1,c
 20838  019346  ECE9  F0FF         	call	_get_vterm_ptr	;wreg free
 20839  01934A  0060  F0AB  FFE6   	movff	btemp,postinc1
 20840  019350  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 20841  019356  0E04               	movlw	4
 20842  019358  6EE6               	movwf	postinc1,c
 20843  01935A  ECB9  F0FB         	call	_sprintf	;wreg free
 20844                           
 20845                           ;main.c: 554:   update_lcd(0);
 20846  01935E  0E00               	movlw	0
 20847  019360  6EE6               	movwf	postinc1,c
 20848  019362  EC6B  F0F4         	call	_update_lcd	;wreg free
 20849                           
 20850                           ;main.c: 555:   WaitMs(2000);
 20851  019366  0ED0               	movlw	208
 20852  019368  6EE6               	movwf	postinc1,c
 20853  01936A  0E07               	movlw	7
 20854  01936C  6EE6               	movwf	postinc1,c
 20855  01936E  EC07  F00F         	call	_WaitMs	;wreg free
 20856  019372                     l1520:
 20857                           
 20858                           ; _current_sensor_cal: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 20859  019372  0EF7               	movlw	247
 20860  019374  26E1               	addwf	fsr1l,f,c
 20861  019376  0EFF               	movlw	255
 20862  019378  22E2               	addwfc	fsr1h,f,c
 20863  01937A  0012               	return		;funcret
 20864  01937C                     __end_of_current_sensor_cal:
 20865                           	opt callstack 0
 20866                           
 20867 ;; *************** function _write_cal_data *****************
 20868 ;; Defined at:
 20869 ;;		line 408 in file "daq.c"
 20870 ;; Parameters:    Size  Location     Type
 20871 ;;		None
 20872 ;; Auto vars:     Size  Location     Type
 20873 ;;  x               2  [STACK] unsigned short 
 20874 ;;  r_cal_ptr       2  [STACK] PTR unsigned char 
 20875 ;;		 -> R(155), 
 20876 ;;  y               2  [STACK] unsigned short 
 20877 ;;  crcVal          1  [STACK] unsigned char 
 20878 ;; Return value:  Size  Location     Type
 20879 ;;                  1  [STACK] void 
 20880 ;; Registers used:
 20881 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, 
      +btemp+11, prodl
 20882 ;; Tracked objects:
 20883 ;;		On entry : 0/39
 20884 ;;		On exit  : 0/0
 20885 ;;		Unchanged: 0/0
 20886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20887 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20888 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20889 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20890 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20891 ;;Total ram usage:        0 bytes
 20892 ;; Hardware stack levels used:    1
 20893 ;; Hardware stack levels required when called:   17
 20894 ;; This function calls:
 20895 ;;		_CRC_8BitDataWrite
 20896 ;;		_CRC_CalculatedResultGet
 20897 ;;		_CRC_Initialize
 20898 ;;		_CRC_IsBusy
 20899 ;;		_CRC_Start
 20900 ;;		_DATAEE_WriteByte
 20901 ;; This function is called by:
 20902 ;;		_main
 20903 ;;		_current_sensor_cal
 20904 ;; This function uses a reentrant model
 20905 ;;
 20906                           
 20907                           	psect	text58
 20908  01EB90                     __ptext58:
 20909                           	opt callstack 0
 20910  01EB90                     _write_cal_data:
 20911                           	opt callstack 0
 20912                           
 20913                           ; autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20914  01EB90  0E07               	movlw	7
 20915  01EB92  26E1               	addwf	fsr1l,f,c
 20916  01EB94  0E00               	movlw	0
 20917  01EB96  22E2               	addwfc	fsr1h,f,c
 20918                           
 20919                           ;daq.c: 410:  uint16_t x = 0, y;
 20920                           ;stkvar	_x @ sp[(-7)+0]
 20921                           
 20922                           ;incstack = 0
 20923  01EB98  0EF9               	movlw	-7
 20924  01EB9A  6AE3               	clrf	plusw1,c
 20925  01EB9C  0EFA               	movlw	-6
 20926  01EB9E  6AE3               	clrf	plusw1,c
 20927                           
 20928                           ;daq.c: 411:  uint8_t *r_cal_ptr, crcVal;;daq.c: 413:  y = sizeof(R);
 20929  01EBA0  0E9B               	movlw	155
 20930  01EBA2  6E34               	movwf	(btemp+10)^0,c
 20931  01EBA4  0E00               	movlw	0
 20932  01EBA6  6E35               	movwf	(btemp+11)^0,c
 20933                           
 20934                           ;stkvar	_y @ sp[(-7)+4]
 20935  01EBA8  0EFD               	movlw	-3
 20936  01EBAA  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 20937  01EBB0  0EFE               	movlw	-2
 20938  01EBB2  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 20939                           
 20940                           ;daq.c: 414:  R.crc = 0x42;
 20941  01EBB8  0E42               	movlw	66
 20942  01EBBA  0101               	movlb	1	; () banked
 20943  01EBBC  6F9A               	movwf	(_R+154)& (0+255),b	;volatile
 20944                           
 20945                           ; BSR set to: 1
 20946                           ;daq.c: 415:  r_cal_ptr = (uint8_t*) & R;
 20947                           ;stkvar	_r_cal_ptr @ sp[(-7)+2]
 20948  01EBBE  0E01               	movlw	high _R
 20949  01EBC0  6E2A               	movwf	btemp^0,c
 20950  01EBC2  0EFC               	movlw	-4
 20951  01EBC4  0060  F0AB  FFE3   	movff	btemp,plusw1
 20952  01EBCA  0E00               	movlw	low _R
 20953  01EBCC  6E2A               	movwf	btemp^0,c
 20954  01EBCE  0EFB               	movlw	-5
 20955  01EBD0  0060  F0AB  FFE3   	movff	btemp,plusw1
 20956                           
 20957                           ; BSR set to: 1
 20958                           ;daq.c: 416:  R.checkmark = 0x1957;
 20959  01EBD6  0E19               	movlw	25
 20960  01EBD8  6F99               	movwf	(_R+153)& (0+255),b	;volatile
 20961  01EBDA  0E57               	movlw	87
 20962  01EBDC  6F98               	movwf	(_R+152)& (0+255),b	;volatile
 20963                           
 20964                           ; BSR set to: 1
 20965                           ;daq.c: 418:  CRC_Initialize();
 20966  01EBDE  EC4B  F006         	call	_CRC_Initialize	;wreg free
 20967                           
 20968                           ; BSR set to: 0
 20969                           ;daq.c: 421:  CRC_Start();
 20970  01EBE2  EC8E  F013         	call	_CRC_Start	;wreg free
 20971  01EBE6                     l13464:
 20972                           
 20973                           ;daq.c: 424:   DATAEE_WriteByte(x, r_cal_ptr[x]);
 20974                           ;stkvar	_x @ sp[(-7)+0]
 20975  01EBE6  0EF9               	movlw	-7
 20976  01EBE8  006F FF8C  F034    	movff	plusw1,btemp+10
 20977  01EBEE  0EFA               	movlw	-6
 20978  01EBF0  006F FF8C  F035    	movff	plusw1,btemp+11
 20979                           
 20980                           ;stkvar	_r_cal_ptr @ sp[(-7)+2]
 20981  01EBF6  0EFB               	movlw	-5
 20982  01EBF8  006F FF8C  F032    	movff	plusw1,btemp+8
 20983  01EBFE  0EFC               	movlw	-4
 20984  01EC00  006F FF8C  F033    	movff	plusw1,btemp+9
 20985  01EC06  5034               	movf	(btemp+10)^0,w,c
 20986  01EC08  2432               	addwf	(btemp+8)^0,w,c
 20987  01EC0A  6ED9               	movwf	fsr2l,c
 20988  01EC0C  5035               	movf	(btemp+11)^0,w,c
 20989  01EC0E  2033               	addwfc	(btemp+9)^0,w,c
 20990  01EC10  6EDA               	movwf	fsr2h,c
 20991  01EC12  50DF               	movf	indf2,w,c
 20992  01EC14  6EE6               	movwf	postinc1,c
 20993                           
 20994                           ;stkvar	_x @ sp[(-8)+0]
 20995  01EC16  0EF8               	movlw	-8
 20996  01EC18  006F FF8F FFE6     	movff	plusw1,postinc1
 20997  01EC1E  006F FF8F FFE6     	movff	plusw1,postinc1
 20998  01EC24  EC6D  F009         	call	_DATAEE_WriteByte	;wreg free
 20999                           
 21000                           ;daq.c: 425:   CRC_8BitDataWrite(r_cal_ptr[x]);
 21001                           ;stkvar	_x @ sp[(-7)+0]
 21002  01EC28  0EF9               	movlw	-7
 21003  01EC2A  006F FF8C  F034    	movff	plusw1,btemp+10
 21004  01EC30  0EFA               	movlw	-6
 21005  01EC32  006F FF8C  F035    	movff	plusw1,btemp+11
 21006                           
 21007                           ;stkvar	_r_cal_ptr @ sp[(-7)+2]
 21008  01EC38  0EFB               	movlw	-5
 21009  01EC3A  006F FF8C  F032    	movff	plusw1,btemp+8
 21010  01EC40  0EFC               	movlw	-4
 21011  01EC42  006F FF8C  F033    	movff	plusw1,btemp+9
 21012  01EC48  5034               	movf	(btemp+10)^0,w,c
 21013  01EC4A  2432               	addwf	(btemp+8)^0,w,c
 21014  01EC4C  6ED9               	movwf	fsr2l,c
 21015  01EC4E  5035               	movf	(btemp+11)^0,w,c
 21016  01EC50  2033               	addwfc	(btemp+9)^0,w,c
 21017  01EC52  6EDA               	movwf	fsr2h,c
 21018  01EC54  50DF               	movf	indf2,w,c
 21019  01EC56  6EE6               	movwf	postinc1,c
 21020  01EC58  ECFD  F012         	call	_CRC_8BitDataWrite	;wreg free
 21021  01EC5C                     l13468:
 21022  01EC5C  EC1F  F013         	call	_CRC_IsBusy	;wreg free
 21023  01EC60  502A               	movf	btemp^0,w,c
 21024  01EC62  A4D8               	btfss	status,2,c
 21025  01EC64  D7FB               	goto	l13468
 21026                           
 21027                           ;daq.c: 427:  } while (++x < y);
 21028                           ;stkvar	_y @ sp[(-7)+4]
 21029  01EC66  0EFD               	movlw	-3
 21030  01EC68  006F FF8C  F034    	movff	plusw1,btemp+10
 21031  01EC6E  0EFE               	movlw	-2
 21032  01EC70  006F FF8C  F035    	movff	plusw1,btemp+11
 21033                           
 21034                           ;stkvar	_x @ sp[(-7)+0]
 21035  01EC76  0EF9               	movlw	-7
 21036  01EC78  50E3               	movf	plusw1,w,c
 21037  01EC7A  0F01               	addlw	1
 21038  01EC7C  6E2A               	movwf	btemp^0,c
 21039  01EC7E  0EF9               	movlw	-7
 21040  01EC80  0060  F0AB  FFE3   	movff	btemp,plusw1
 21041  01EC86  6A2A               	clrf	btemp^0,c
 21042  01EC88  0EFA               	movlw	-6
 21043  01EC8A  50E3               	movf	plusw1,w,c
 21044  01EC8C  202A               	addwfc	btemp^0,w,c
 21045  01EC8E  6E2A               	movwf	btemp^0,c
 21046  01EC90  0EFA               	movlw	-6
 21047  01EC92  0060  F0AB  FFE3   	movff	btemp,plusw1
 21048  01EC98  0EF9               	movlw	-7
 21049  01EC9A  006F FF8C  F032    	movff	plusw1,btemp+8
 21050  01ECA0  0EFA               	movlw	-6
 21051  01ECA2  006F FF8C  F033    	movff	plusw1,btemp+9
 21052  01ECA8  5034               	movf	(btemp+10)^0,w,c
 21053  01ECAA  5C32               	subwf	(btemp+8)^0,w,c
 21054  01ECAC  5035               	movf	(btemp+11)^0,w,c
 21055  01ECAE  5833               	subwfb	(btemp+9)^0,w,c
 21056  01ECB0  A0D8               	btfss	status,0,c
 21057  01ECB2  D799               	goto	l13464
 21058                           
 21059                           ;daq.c: 429:  crcVal = CRC_CalculatedResultGet(0, 0x00);
 21060  01ECB4  0E00               	movlw	0
 21061  01ECB6  6EE6               	movwf	postinc1,c
 21062  01ECB8  0E00               	movlw	0
 21063  01ECBA  6EE6               	movwf	postinc1,c
 21064  01ECBC  0E00               	movlw	0
 21065  01ECBE  6EE6               	movwf	postinc1,c
 21066  01ECC0  ECE4  F0F0         	call	_CRC_CalculatedResultGet	;wreg free
 21067                           
 21068                           ;stkvar	_crcVal @ sp[(-7)+6]
 21069  01ECC4  0EFF               	movlw	-1
 21070  01ECC6  0060  F0AB  FFE3   	movff	btemp,plusw1
 21071                           
 21072                           ;daq.c: 431:  DATAEE_WriteByte(sizeof(R) - 1, crcVal);
 21073                           ;stkvar	_crcVal @ sp[(-7)+6]
 21074  01ECCC  0EFF               	movlw	-1
 21075  01ECCE  50E3               	movf	plusw1,w,c
 21076  01ECD0  6EE6               	movwf	postinc1,c
 21077  01ECD2  0E9A               	movlw	154
 21078  01ECD4  6EE6               	movwf	postinc1,c
 21079  01ECD6  0E00               	movlw	0
 21080  01ECD8  6EE6               	movwf	postinc1,c
 21081  01ECDA  EC6D  F009         	call	_DATAEE_WriteByte	;wreg free
 21082                           
 21083                           ; _write_cal_data: autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 21084  01ECDE  0EF9               	movlw	249
 21085  01ECE0  26E1               	addwf	fsr1l,f,c
 21086  01ECE2  0EFF               	movlw	255
 21087  01ECE4  22E2               	addwfc	fsr1h,f,c
 21088  01ECE6  0012               	return		;funcret
 21089  01ECE8                     __end_of_write_cal_data:
 21090                           	opt callstack 0
 21091                           
 21092 ;; *************** function _DATAEE_WriteByte *****************
 21093 ;; Defined at:
 21094 ;;		line 172 in file "mcc_generated_files/memory.c"
 21095 ;; Parameters:    Size  Location     Type
 21096 ;;  bAdd            2  [STACK] unsigned short 
 21097 ;;  bData           1  [STACK] unsigned char 
 21098 ;; Auto vars:     Size  Location     Type
 21099 ;;  GIEBitValue     1  [STACK] unsigned char 
 21100 ;; Return value:  Size  Location     Type
 21101 ;;                  1  [STACK] void 
 21102 ;; Registers used:
 21103 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+11
 21104 ;; Tracked objects:
 21105 ;;		On entry : 0/39
 21106 ;;		On exit  : 0/0
 21107 ;;		Unchanged: 0/0
 21108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21109 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21110 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21111 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21112 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21113 ;;Total ram usage:        0 bytes
 21114 ;; Hardware stack levels used:    1
 21115 ;; Hardware stack levels required when called:   15
 21116 ;; This function calls:
 21117 ;;		Nothing
 21118 ;; This function is called by:
 21119 ;;		_write_cal_data
 21120 ;; This function uses a reentrant model
 21121 ;;
 21122                           
 21123                           	psect	text59
 21124  0012DA                     __ptext59:
 21125                           	opt callstack 0
 21126  0012DA                     _DATAEE_WriteByte:
 21127                           	opt callstack 0
 21128                           
 21129                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21130  0012DA  52E6               	movf	postinc1,f,c
 21131                           
 21132                           ;mcc_generated_files/memory.c: 172: void DATAEE_WriteByte(uint16_t bAdd, uint8_t bData);
      +                          mcc_generated_files/memory.c: 173: {;mcc_generated_files/memory.c: 174:     uint8_t GIEB
      +                          itValue = INTCON0bits.GIE;
 21133                           
 21134                           ;incstack = 0
 21135  0012DC  AED2               	btfss	210,7,c	;volatile
 21136  0012DE  D003               	goto	u12040
 21137  0012E0  6A35               	clrf	(btemp+11)^0,c
 21138  0012E2  2A35               	incf	(btemp+11)^0,f,c
 21139  0012E4  D001               	goto	u12048
 21140  0012E6                     u12040:
 21141  0012E6  6A35               	clrf	(btemp+11)^0,c
 21142  0012E8                     u12048:
 21143                           
 21144                           ;stkvar	_GIEBitValue @ sp[(-1)+0]
 21145  0012E8  0EFF               	movlw	-1
 21146  0012EA  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 21147                           
 21148                           ;mcc_generated_files/memory.c: 176:     NVMADRH = (uint8_t)((bAdd >> 8) & 0x03);
 21149                           ;stkvar	_bAdd @ sp[(-1)+-2]
 21150  0012F0  0EFE               	movlw	254
 21151  0012F2  24E1               	addwf	fsr1l,w,c
 21152  0012F4  6ED9               	movwf	fsr2l,c
 21153  0012F6  0EFF               	movlw	255
 21154  0012F8  20E2               	addwfc	fsr1h,w,c
 21155  0012FA  6EDA               	movwf	fsr2h,c
 21156  0012FC  50DF               	movf	indf2,w,c
 21157  0012FE  0B03               	andlw	3
 21158  001300  0139               	movlb	57	; () banked
 21159  001302  6FE1               	movwf	225,b	;volatile
 21160                           
 21161                           ; BSR set to: 57
 21162                           ;mcc_generated_files/memory.c: 177:     NVMADRL = (uint8_t)(bAdd & 0xFF);
 21163                           ;stkvar	_bAdd @ sp[(-1)+-2]
 21164  001304  0EFD               	movlw	-3
 21165  001306  006F FF8F F9E0     	movff	plusw1,14816	;volatile
 21166                           
 21167                           ; BSR set to: 57
 21168                           ;mcc_generated_files/memory.c: 178:     NVMDAT = bData;
 21169                           ;stkvar	_bData @ sp[(-1)+-3]
 21170  00130C  0EFC               	movlw	-4
 21171  00130E  006F FF8F F9E3     	movff	plusw1,14819	;volatile
 21172                           
 21173                           ; BSR set to: 57
 21174                           ;mcc_generated_files/memory.c: 179:     NVMCON1bits.NVMREG = 0;
 21175  001314  0E3F               	movlw	-193
 21176  001316  17E5               	andwf	229,f,b	;volsfr
 21177                           
 21178                           ; BSR set to: 57
 21179                           ;mcc_generated_files/memory.c: 180:     NVMCON1bits.WREN = 1;
 21180  001318  85E5               	bsf	229,2,b	;volsfr
 21181                           
 21182                           ; BSR set to: 57
 21183                           ;mcc_generated_files/memory.c: 181:     INTCON0bits.GIE = 0;
 21184  00131A  9ED2               	bcf	210,7,c	;volatile
 21185                           
 21186                           ; BSR set to: 57
 21187                           ;mcc_generated_files/memory.c: 182:     NVMCON2 = 0x55;
 21188  00131C  0E55               	movlw	85
 21189  00131E  6FE6               	movwf	230,b	;volsfr
 21190                           
 21191                           ; BSR set to: 57
 21192                           ;mcc_generated_files/memory.c: 183:     NVMCON2 = 0xAA;
 21193  001320  0EAA               	movlw	170
 21194  001322  6FE6               	movwf	230,b	;volsfr
 21195                           
 21196                           ; BSR set to: 57
 21197                           ;mcc_generated_files/memory.c: 184:     NVMCON1bits.WR = 1;
 21198  001324  83E5               	bsf	229,1,b	;volsfr
 21199  001326                     l942:
 21200                           
 21201                           ; BSR set to: 57
 21202                           ;mcc_generated_files/memory.c: 186:     while (NVMCON1bits.WR)
 21203  001326  B3E5               	btfsc	229,1,b	;volsfr
 21204  001328  D7FE               	goto	l942
 21205                           
 21206                           ; BSR set to: 57
 21207                           ;mcc_generated_files/memory.c: 190:     NVMCON1bits.WREN = 0;
 21208  00132A  95E5               	bcf	229,2,b	;volsfr
 21209                           
 21210                           ; BSR set to: 57
 21211                           ;mcc_generated_files/memory.c: 191:     INTCON0bits.GIE = GIEBitValue;
 21212                           ;stkvar	_GIEBitValue @ sp[(-1)+0]
 21213  00132C  0EFF               	movlw	-1
 21214  00132E  B0E3               	btfsc	plusw1,0,c
 21215  001330  D002               	bra	u12065
 21216  001332  9ED2               	bcf	210,7,c	;volatile
 21217  001334  D001               	bra	u12066
 21218  001336                     u12065:
 21219  001336  8ED2               	bsf	210,7,c	;volatile
 21220  001338                     u12066:
 21221                           
 21222                           ; _DATAEE_WriteByte: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 21223  001338  52E5               	movf	postdec1,f,c
 21224  00133A  52E5               	movf	postdec1,f,c
 21225  00133C  52E5               	movf	postdec1,f,c
 21226  00133E  52E5               	movf	postdec1,f,c
 21227  001340  0012               	return		;funcret
 21228  001342                     __end_of_DATAEE_WriteByte:
 21229                           	opt callstack 0
 21230                           
 21231 ;; *************** function _CRC_Start *****************
 21232 ;; Defined at:
 21233 ;;		line 119 in file "mcc_generated_files/crc.c"
 21234 ;; Parameters:    Size  Location     Type
 21235 ;;		None
 21236 ;; Auto vars:     Size  Location     Type
 21237 ;;		None
 21238 ;; Return value:  Size  Location     Type
 21239 ;;                  1  [STACK] void 
 21240 ;; Registers used:
 21241 ;;		None
 21242 ;; Tracked objects:
 21243 ;;		On entry : 3F/0
 21244 ;;		On exit  : 3F/39
 21245 ;;		Unchanged: 0/0
 21246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21247 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21248 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21249 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21250 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21251 ;;Total ram usage:        0 bytes
 21252 ;; Hardware stack levels used:    1
 21253 ;; Hardware stack levels required when called:   15
 21254 ;; This function calls:
 21255 ;;		Nothing
 21256 ;; This function is called by:
 21257 ;;		_read_cal_data
 21258 ;;		_write_cal_data
 21259 ;; This function uses a reentrant model
 21260 ;;
 21261                           
 21262                           	psect	text60
 21263  00271C                     __ptext60:
 21264                           	opt callstack 0
 21265  00271C                     _CRC_Start:
 21266                           	opt callstack 14
 21267                           
 21268                           ;mcc_generated_files/crc.c: 122:     CRCCON0bits.CRCGO = 1;
 21269                           
 21270                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21271                           ;incstack = 0
 21272  00271C  0139               	movlb	57	; () banked
 21273  00271E  8D68               	bsf	104,6,b	;volatile
 21274                           
 21275                           ; BSR set to: 57
 21276                           ; _CRC_Start: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 21277  002720  0012               	return		;funcret
 21278  002722                     __end_of_CRC_Start:
 21279                           	opt callstack 0
 21280                           
 21281 ;; *************** function _CRC_IsBusy *****************
 21282 ;; Defined at:
 21283 ;;		line 201 in file "mcc_generated_files/crc.c"
 21284 ;; Parameters:    Size  Location     Type
 21285 ;;		None
 21286 ;; Auto vars:     Size  Location     Type
 21287 ;;		None
 21288 ;; Return value:  Size  Location     Type
 21289 ;;                  1  [STACK] _Bool 
 21290 ;; Registers used:
 21291 ;;		btemp
 21292 ;; Tracked objects:
 21293 ;;		On entry : 0/39
 21294 ;;		On exit  : 0/0
 21295 ;;		Unchanged: 0/0
 21296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21297 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21298 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21299 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21300 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21301 ;;Total ram usage:        0 bytes
 21302 ;; Hardware stack levels used:    1
 21303 ;; Hardware stack levels required when called:   15
 21304 ;; This function calls:
 21305 ;;		Nothing
 21306 ;; This function is called by:
 21307 ;;		_read_cal_data
 21308 ;;		_write_cal_data
 21309 ;; This function uses a reentrant model
 21310 ;;
 21311                           
 21312                           	psect	text61
 21313  00263E                     __ptext61:
 21314                           	opt callstack 0
 21315  00263E                     _CRC_IsBusy:
 21316                           	opt callstack 14
 21317                           
 21318                           ;mcc_generated_files/crc.c: 204:     return(CRCCON0bits.BUSY);
 21319                           
 21320                           ; BSR set to: 57
 21321                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21322                           ;incstack = 0
 21323  00263E  0139               	movlb	57	; () banked
 21324  002640  AB68               	btfss	104,5,b	;volatile
 21325  002642  D003               	goto	u12270
 21326  002644  6A2A               	clrf	btemp^0,c
 21327  002646  2A2A               	incf	btemp^0,f,c
 21328  002648  0012               	return	
 21329  00264A                     u12270:
 21330  00264A  6A2A               	clrf	btemp^0,c
 21331                           
 21332                           ; _CRC_IsBusy: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 21333  00264C  0012               	return		;funcret
 21334  00264E                     __end_of_CRC_IsBusy:
 21335                           	opt callstack 0
 21336                           
 21337 ;; *************** function _CRC_CalculatedResultGet *****************
 21338 ;; Defined at:
 21339 ;;		line 159 in file "mcc_generated_files/crc.c"
 21340 ;; Parameters:    Size  Location     Type
 21341 ;;  reverse         1  [STACK] _Bool 
 21342 ;;  xorValue        2  [STACK] unsigned short 
 21343 ;; Auto vars:     Size  Location     Type
 21344 ;;  result          2  [STACK] unsigned short 
 21345 ;;  mask            2  [STACK] unsigned short 
 21346 ;; Return value:  Size  Location     Type
 21347 ;;                  2  [STACK] unsigned short 
 21348 ;; Registers used:
 21349 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+9, btemp+10, btemp+11,
      + prodl
 21350 ;; Tracked objects:
 21351 ;;		On entry : 0/39
 21352 ;;		On exit  : 0/0
 21353 ;;		Unchanged: 0/0
 21354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21355 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21356 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21357 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21358 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21359 ;;Total ram usage:        0 bytes
 21360 ;; Hardware stack levels used:    1
 21361 ;; Hardware stack levels required when called:   16
 21362 ;; This function calls:
 21363 ;;		_CRC_ReverseValue
 21364 ;; This function is called by:
 21365 ;;		_read_cal_data
 21366 ;;		_write_cal_data
 21367 ;; This function uses a reentrant model
 21368 ;;
 21369                           
 21370                           	psect	text62
 21371  01E1C8                     __ptext62:
 21372                           	opt callstack 0
 21373  01E1C8                     _CRC_CalculatedResultGet:
 21374                           	opt callstack 0
 21375                           
 21376                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21377  01E1C8  52E6               	movf	postinc1,f,c
 21378  01E1CA  52E6               	movf	postinc1,f,c
 21379  01E1CC  52E6               	movf	postinc1,f,c
 21380  01E1CE  52E6               	movf	postinc1,f,c
 21381                           
 21382                           ;mcc_generated_files/crc.c: 159: uint16_t CRC_CalculatedResultGet(_Bool reverse, uint16_
      +                          t xorValue);mcc_generated_files/crc.c: 160: {;mcc_generated_files/crc.c: 161:     uint16
      +                          _t result,mask;;mcc_generated_files/crc.c: 164:      CRCCON0bits.CRCGO = 0;
 21383                           
 21384                           ;incstack = 0
 21385  01E1D0  0139               	movlb	57	; () banked
 21386  01E1D2  9D68               	bcf	104,6,b	;volatile
 21387                           
 21388                           ;mcc_generated_files/crc.c: 165:      PIR0bits.CRCIF = 0;
 21389  01E1D4  9DA0               	bcf	160,6,b	;volatile
 21390                           
 21391                           ; BSR set to: 57
 21392                           ;mcc_generated_files/crc.c: 166:      CRCCON1bits.DLEN= CRCCON1bits.PLEN;
 21393  01E1D6  5169               	movf	105,w,b	;volatile
 21394  01E1D8  0B0F               	andlw	15
 21395  01E1DA  6E35               	movwf	(btemp+11)^0,c
 21396  01E1DC  3A35               	swapf	(btemp+11)^0,f,c
 21397  01E1DE  5169               	movf	105,w,b	;volatile
 21398  01E1E0  1835               	xorwf	(btemp+11)^0,w,c
 21399  01E1E2  0B0F               	andlw	-241
 21400  01E1E4  1835               	xorwf	(btemp+11)^0,w,c
 21401  01E1E6  6F69               	movwf	105,b	;volatile
 21402                           
 21403                           ; BSR set to: 57
 21404                           ;mcc_generated_files/crc.c: 168:      if(crcObj.polyWidth > 8)
 21405  01E1E8  0E08               	movlw	8
 21406  01E1EA  0100               	movlb	0	; () banked
 21407  01E1EC  65E3               	cpfsgt	(_crcObj+1)& (0+255),b
 21408  01E1EE  D003               	goto	l1282
 21409                           
 21410                           ; BSR set to: 0
 21411                           ;mcc_generated_files/crc.c: 169:      {;mcc_generated_files/crc.c: 170:          CRCDATH
      +                           = 0;
 21412  01E1F0  0139               	movlb	57	; () banked
 21413  01E1F2  6B61               	clrf	97,b	;volatile
 21414  01E1F4  D001               	goto	L19
 21415  01E1F6                     l1282:
 21416                           
 21417                           ; BSR set to: 0
 21418                           ;mcc_generated_files/crc.c: 174:      {;mcc_generated_files/crc.c: 175:          CRCDATL
      +                           = 0;
 21419  01E1F6  0139               	movlb	57	; () banked
 21420  01E1F8                     L19:
 21421  01E1F8  6B60               	clrf	96,b	;volatile
 21422                           
 21423                           ; BSR set to: 57
 21424                           ;mcc_generated_files/crc.c: 178:      CRCCON0bits.CRCGO = 1;
 21425                           
 21426                           ;mcc_generated_files/crc.c: 176:      }
 21427  01E1FA  8D68               	bsf	104,6,b	;volatile
 21428  01E1FC                     l1284:
 21429                           
 21430                           ; BSR set to: 57
 21431  01E1FC  ADA0               	btfss	160,6,b	;volatile
 21432  01E1FE  D7FE               	goto	l1284
 21433                           
 21434                           ; BSR set to: 57
 21435                           ;mcc_generated_files/crc.c: 180:      PIR0bits.CRCIF = 0;
 21436  01E200  9DA0               	bcf	160,6,b	;volatile
 21437                           
 21438                           ;mcc_generated_files/crc.c: 182:      CRCCON0bits.CRCGO = 0;
 21439  01E202  9D68               	bcf	104,6,b	;volatile
 21440                           
 21441                           ; BSR set to: 57
 21442                           ;mcc_generated_files/crc.c: 183:      CRCCON1bits.DLEN = (uint8_t)(crcObj.dataWidth - 1)
      +                          ;
 21443  01E204  0060  F388  F035   	movff	_crcObj,btemp+11
 21444  01E20A  0EFF               	movlw	255
 21445  01E20C  2635               	addwf	(btemp+11)^0,f,c
 21446  01E20E  3A35               	swapf	(btemp+11)^0,f,c
 21447  01E210  5169               	movf	105,w,b	;volatile
 21448  01E212  1835               	xorwf	(btemp+11)^0,w,c
 21449  01E214  0B0F               	andlw	-241
 21450  01E216  1835               	xorwf	(btemp+11)^0,w,c
 21451  01E218  6F69               	movwf	105,b	;volatile
 21452                           
 21453                           ; BSR set to: 57
 21454                           ;mcc_generated_files/crc.c: 185:      result = ((uint16_t)CRCACCH << 8)|CRCACCL;
 21455  01E21A  5162               	movf	98,w,b	;volatile
 21456  01E21C  006E F58C  F02A    	movff	14691,btemp	;volatile
 21457  01E222  6A2B               	clrf	(btemp+1)^0,c
 21458  01E224  0060  F0A8  F02B   	movff	btemp,btemp+1
 21459  01E22A  6A2A               	clrf	btemp^0,c
 21460  01E22C  122A               	iorwf	btemp^0,f,c
 21461  01E22E  0E00               	movlw	0
 21462  01E230  122B               	iorwf	(btemp+1)^0,f,c
 21463                           
 21464                           ;stkvar	_result @ sp[(-4)+0]
 21465  01E232  0EFC               	movlw	-4
 21466  01E234  0060  F0AB  FFE3   	movff	btemp,plusw1
 21467  01E23A  0EFD               	movlw	-3
 21468  01E23C  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 21469                           
 21470                           ; BSR set to: 57
 21471                           ;mcc_generated_files/crc.c: 186:      if(crcObj.polyWidth < 16)
 21472  01E242  0E10               	movlw	16
 21473  01E244  0100               	movlb	0	; () banked
 21474  01E246  61E3               	cpfslt	(_crcObj+1)& (0+255),b
 21475  01E248  D03A               	goto	l12750
 21476                           
 21477                           ; BSR set to: 0
 21478                           ;mcc_generated_files/crc.c: 187:      {;mcc_generated_files/crc.c: 189:         mask = (
      +                          uint16_t)((1 << crcObj.polyWidth) - 1);
 21479  01E24A  0EFF               	movlw	255
 21480  01E24C  6E34               	movwf	(btemp+10)^0,c
 21481  01E24E  0EFF               	movlw	255
 21482  01E250  6E35               	movwf	(btemp+11)^0,c
 21483  01E252  0060  F38C  F033   	movff	_crcObj+1,btemp+9
 21484  01E258  0E01               	movlw	1
 21485  01E25A  6E30               	movwf	(btemp+6)^0,c
 21486  01E25C  0E00               	movlw	0
 21487  01E25E  6E31               	movwf	(btemp+7)^0,c
 21488  01E260  2A33               	incf	(btemp+9)^0,f,c
 21489  01E262  D003               	goto	u12254
 21490  01E264                     u12255:
 21491  01E264  90D8               	bcf	status,0,c
 21492  01E266  3630               	rlcf	(btemp+6)^0,f,c
 21493  01E268  3631               	rlcf	(btemp+7)^0,f,c
 21494  01E26A                     u12254:
 21495  01E26A  2E33               	decfsz	(btemp+9)^0,f,c
 21496  01E26C  D7FB               	goto	u12255
 21497  01E26E  5034               	movf	(btemp+10)^0,w,c
 21498  01E270  2630               	addwf	(btemp+6)^0,f,c
 21499  01E272  5035               	movf	(btemp+11)^0,w,c
 21500  01E274  2231               	addwfc	(btemp+7)^0,f,c
 21501                           
 21502                           ;stkvar	_mask @ sp[(-4)+2]
 21503  01E276  0EFE               	movlw	-2
 21504  01E278  0060  F0C3  FFE3   	movff	btemp+6,plusw1
 21505  01E27E  0EFF               	movlw	-1
 21506  01E280  0060  F0C7  FFE3   	movff	btemp+7,plusw1
 21507                           
 21508                           ;mcc_generated_files/crc.c: 190:         result &= mask;
 21509                           ;stkvar	_mask @ sp[(-4)+2]
 21510  01E286  0EFE               	movlw	-2
 21511  01E288  006F FF8C  F034    	movff	plusw1,btemp+10
 21512  01E28E  0EFF               	movlw	-1
 21513  01E290  006F FF8C  F035    	movff	plusw1,btemp+11
 21514                           
 21515                           ;stkvar	_result @ sp[(-4)+0]
 21516  01E296  0EFC               	movlw	-4
 21517  01E298  006F FF8C  F02A    	movff	plusw1,btemp
 21518  01E29E  5034               	movf	(btemp+10)^0,w,c
 21519  01E2A0  162A               	andwf	btemp^0,f,c
 21520  01E2A2  0EFC               	movlw	-4
 21521  01E2A4  0060  F0AB  FFE3   	movff	btemp,plusw1
 21522  01E2AA  0EFD               	movlw	-3
 21523  01E2AC  006F FF8C  F02A    	movff	plusw1,btemp
 21524  01E2B2  5035               	movf	(btemp+11)^0,w,c
 21525  01E2B4  162A               	andwf	btemp^0,f,c
 21526  01E2B6  0EFD               	movlw	-3
 21527  01E2B8  0060  F0AB  FFE3   	movff	btemp,plusw1
 21528  01E2BE                     l12750:
 21529                           
 21530                           ;mcc_generated_files/crc.c: 193:     if(reverse)
 21531                           ;stkvar	_reverse @ sp[(-4)+-1]
 21532  01E2BE  0EFB               	movlw	-5
 21533  01E2C0  50E3               	movf	plusw1,w,c
 21534  01E2C2  B4D8               	btfsc	status,2,c
 21535  01E2C4  D011               	goto	l12754
 21536                           
 21537                           ;mcc_generated_files/crc.c: 194:         result = CRC_ReverseValue(result);
 21538                           ;stkvar	_result @ sp[(-4)+0]
 21539  01E2C6  0EFC               	movlw	-4
 21540  01E2C8  006F FF8F FFE6     	movff	plusw1,postinc1
 21541  01E2CE  006F FF8F FFE6     	movff	plusw1,postinc1
 21542  01E2D4  EC5B  F000         	call	_CRC_ReverseValue	;wreg free
 21543                           
 21544                           ;stkvar	_result @ sp[(-4)+0]
 21545  01E2D8  0EFC               	movlw	-4
 21546  01E2DA  0060  F0AB  FFE3   	movff	btemp,plusw1
 21547  01E2E0  0EFD               	movlw	-3
 21548  01E2E2  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 21549  01E2E8                     l12754:
 21550                           
 21551                           ;mcc_generated_files/crc.c: 196:     result ^= xorValue;
 21552                           ;stkvar	_xorValue @ sp[(-4)+-3]
 21553  01E2E8  0EF9               	movlw	-7
 21554  01E2EA  006F FF8C  F034    	movff	plusw1,btemp+10
 21555  01E2F0  0EFA               	movlw	-6
 21556  01E2F2  006F FF8C  F035    	movff	plusw1,btemp+11
 21557                           
 21558                           ;stkvar	_result @ sp[(-4)+0]
 21559  01E2F8  0EFC               	movlw	-4
 21560  01E2FA  006F FF8C  F02A    	movff	plusw1,btemp
 21561  01E300  5034               	movf	(btemp+10)^0,w,c
 21562  01E302  1A2A               	xorwf	btemp^0,f,c
 21563  01E304  0EFC               	movlw	-4
 21564  01E306  0060  F0AB  FFE3   	movff	btemp,plusw1
 21565  01E30C  0EFD               	movlw	-3
 21566  01E30E  006F FF8C  F02A    	movff	plusw1,btemp
 21567  01E314  5035               	movf	(btemp+11)^0,w,c
 21568  01E316  1A2A               	xorwf	btemp^0,f,c
 21569  01E318  0EFD               	movlw	-3
 21570  01E31A  0060  F0AB  FFE3   	movff	btemp,plusw1
 21571                           
 21572                           ;mcc_generated_files/crc.c: 198:     return result;
 21573                           ;stkvar	_result @ sp[(-4)+0]
 21574  01E320  0EFC               	movlw	-4
 21575  01E322  006F FF8C  F02A    	movff	plusw1,btemp
 21576  01E328  0EFD               	movlw	-3
 21577  01E32A  006F FF8C  F02B    	movff	plusw1,btemp+1
 21578                           
 21579                           ; _CRC_CalculatedResultGet: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 3, argsize = 3, vargsize = 0
 21580  01E330  0EF9               	movlw	249
 21581  01E332  26E1               	addwf	fsr1l,f,c
 21582  01E334  0EFF               	movlw	255
 21583  01E336  22E2               	addwfc	fsr1h,f,c
 21584  01E338  0012               	return		;funcret
 21585  01E33A                     __end_of_CRC_CalculatedResultGet:
 21586                           	opt callstack 0
 21587                           
 21588 ;; *************** function _CRC_ReverseValue *****************
 21589 ;; Defined at:
 21590 ;;		line 138 in file "mcc_generated_files/crc.c"
 21591 ;; Parameters:    Size  Location     Type
 21592 ;;  crc             2  [STACK] unsigned short 
 21593 ;; Auto vars:     Size  Location     Type
 21594 ;;  mask            2  [STACK] unsigned short 
 21595 ;;  reverse         2  [STACK] unsigned short 
 21596 ;; Return value:  Size  Location     Type
 21597 ;;                  2  [STACK] unsigned short 
 21598 ;; Registers used:
 21599 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 21600 ;; Tracked objects:
 21601 ;;		On entry : 0/0
 21602 ;;		On exit  : 0/0
 21603 ;;		Unchanged: 0/0
 21604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21605 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21606 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21607 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21608 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21609 ;;Total ram usage:        0 bytes
 21610 ;; Hardware stack levels used:    1
 21611 ;; Hardware stack levels required when called:   15
 21612 ;; This function calls:
 21613 ;;		Nothing
 21614 ;; This function is called by:
 21615 ;;		_CRC_CalculatedResultGet
 21616 ;; This function uses a reentrant model
 21617 ;;
 21618                           
 21619                           	psect	text63
 21620  0000B6                     __ptext63:
 21621                           	opt callstack 0
 21622  0000B6                     _CRC_ReverseValue:
 21623                           	opt callstack 0
 21624                           
 21625                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21626  0000B6  52E6               	movf	postinc1,f,c
 21627  0000B8  52E6               	movf	postinc1,f,c
 21628  0000BA  52E6               	movf	postinc1,f,c
 21629  0000BC  52E6               	movf	postinc1,f,c
 21630                           
 21631                           ;mcc_generated_files/crc.c: 138: static uint16_t CRC_ReverseValue(uint16_t crc);mcc_gene
      +                          rated_files/crc.c: 139: {;mcc_generated_files/crc.c: 140:     uint16_t mask;;mcc_generat
      +                          ed_files/crc.c: 141:     uint16_t reverse;;mcc_generated_files/crc.c: 143:     mask = 1;
 21632                           
 21633                           ;incstack = 0
 21634  0000BE  0E01               	movlw	1
 21635  0000C0  6E34               	movwf	(btemp+10)^0,c
 21636  0000C2  0E00               	movlw	0
 21637  0000C4  6E35               	movwf	(btemp+11)^0,c
 21638                           
 21639                           ;stkvar	_mask @ sp[(-4)+0]
 21640  0000C6  0EFC               	movlw	-4
 21641  0000C8  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 21642  0000CE  0EFD               	movlw	-3
 21643  0000D0  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 21644                           
 21645                           ;mcc_generated_files/crc.c: 144:     mask <<= crcObj.polyWidth - 1;
 21646  0000D6  0060  F38C  F035   	movff	_crcObj+1,btemp+11
 21647  0000DC  0EFF               	movlw	255
 21648  0000DE  2635               	addwf	(btemp+11)^0,f,c
 21649                           
 21650                           ;stkvar	_mask @ sp[(-4)+0]
 21651  0000E0  50E1               	movf	fsr1l,w,c
 21652  0000E2  0FFC               	addlw	-4
 21653  0000E4  6ED9               	movwf	fsr2l,c
 21654  0000E6  50E2               	movf	fsr1h,w,c
 21655  0000E8  6EDA               	movwf	fsr2h,c
 21656  0000EA  0EFF               	movlw	255
 21657  0000EC  22DA               	addwfc	fsr2h,f,c
 21658  0000EE  2835               	incf	(btemp+11)^0,w,c
 21659  0000F0  D003               	goto	u11520
 21660  0000F2                     u11525:
 21661  0000F2  90D8               	bcf	status,0,c
 21662  0000F4  36DE               	rlcf	postinc2,f,c
 21663  0000F6  36DD               	rlcf	postdec2,f,c
 21664  0000F8                     u11520:
 21665  0000F8  2EE8               	decfsz	wreg,f,c
 21666  0000FA  D7FB               	goto	u11525
 21667                           
 21668                           ;mcc_generated_files/crc.c: 145:     reverse = 0;
 21669                           ;stkvar	_reverse @ sp[(-4)+2]
 21670  0000FC  0EFE               	movlw	-2
 21671  0000FE  6AE3               	clrf	plusw1,c
 21672  000100  0EFF               	movlw	-1
 21673  000102  6AE3               	clrf	plusw1,c
 21674                           
 21675                           ;mcc_generated_files/crc.c: 147:     while(crc)
 21676  000104  D029               	goto	l12234
 21677  000106                     l12226:
 21678                           
 21679                           ;mcc_generated_files/crc.c: 148:     {;mcc_generated_files/crc.c: 149:         if(crc & 
      +                          0x01)
 21680                           ;stkvar	_crc @ sp[(-4)+-2]
 21681  000106  0EFA               	movlw	-6
 21682  000108  A0E3               	btfss	plusw1,0,c
 21683  00010A  D01C               	goto	l12230
 21684                           
 21685                           ;mcc_generated_files/crc.c: 150:         {;mcc_generated_files/crc.c: 151:             r
      +                          everse |= mask;
 21686                           ;stkvar	_mask @ sp[(-4)+0]
 21687  00010C  0EFC               	movlw	-4
 21688  00010E  006F FF8C  F034    	movff	plusw1,btemp+10
 21689  000114  0EFD               	movlw	-3
 21690  000116  006F FF8C  F035    	movff	plusw1,btemp+11
 21691                           
 21692                           ;stkvar	_reverse @ sp[(-4)+2]
 21693  00011C  0EFE               	movlw	-2
 21694  00011E  006F FF8C  F02A    	movff	plusw1,btemp
 21695  000124  5034               	movf	(btemp+10)^0,w,c
 21696  000126  122A               	iorwf	btemp^0,f,c
 21697  000128  0EFE               	movlw	-2
 21698  00012A  0060  F0AB  FFE3   	movff	btemp,plusw1
 21699  000130  0EFF               	movlw	-1
 21700  000132  006F FF8C  F02A    	movff	plusw1,btemp
 21701  000138  5035               	movf	(btemp+11)^0,w,c
 21702  00013A  122A               	iorwf	btemp^0,f,c
 21703  00013C  0EFF               	movlw	-1
 21704  00013E  0060  F0AB  FFE3   	movff	btemp,plusw1
 21705  000144                     l12230:
 21706                           
 21707                           ;mcc_generated_files/crc.c: 153:         mask >>= 1;
 21708                           ;stkvar	_mask @ sp[(-4)+0]
 21709  000144  90D8               	bcf	status,0,c
 21710  000146  0EFD               	movlw	-3
 21711  000148  32E3               	rrcf	plusw1,f,c
 21712  00014A  0EFC               	movlw	-4
 21713  00014C  32E3               	rrcf	plusw1,f,c
 21714                           
 21715                           ;mcc_generated_files/crc.c: 154:         crc >>= 1;
 21716                           ;stkvar	_crc @ sp[(-4)+-2]
 21717  00014E  90D8               	bcf	status,0,c
 21718  000150  0EFB               	movlw	-5
 21719  000152  32E3               	rrcf	plusw1,f,c
 21720  000154  0EFA               	movlw	-6
 21721  000156  32E3               	rrcf	plusw1,f,c
 21722  000158                     l12234:
 21723                           
 21724                           ;mcc_generated_files/crc.c: 147:     while(crc)
 21725                           ;stkvar	_crc @ sp[(-4)+-2]
 21726  000158  0EFA               	movlw	-6
 21727  00015A  006F FF8C  F02A    	movff	plusw1,btemp
 21728  000160  0EFB               	movlw	-5
 21729  000162  50E3               	movf	plusw1,w,c
 21730  000164  102A               	iorwf	btemp^0,w,c
 21731  000166  A4D8               	btfss	status,2,c
 21732  000168  D7CE               	goto	l12226
 21733                           
 21734                           ;mcc_generated_files/crc.c: 156:     return reverse;
 21735                           ;stkvar	_reverse @ sp[(-4)+2]
 21736  00016A  0EFE               	movlw	-2
 21737  00016C  006F FF8C  F02A    	movff	plusw1,btemp
 21738  000172  0EFF               	movlw	-1
 21739  000174  006F FF8C  F02B    	movff	plusw1,btemp+1
 21740                           
 21741                           ; _CRC_ReverseValue: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           2, argsize = 2, vargsize = 0
 21742  00017A  0EFA               	movlw	250
 21743  00017C  26E1               	addwf	fsr1l,f,c
 21744  00017E  0EFF               	movlw	255
 21745  000180  22E2               	addwfc	fsr1h,f,c
 21746  000182  0012               	return		;funcret
 21747  000184                     __end_of_CRC_ReverseValue:
 21748                           	opt callstack 0
 21749                           
 21750 ;; *************** function _CRC_8BitDataWrite *****************
 21751 ;; Defined at:
 21752 ;;		line 125 in file "mcc_generated_files/crc.c"
 21753 ;; Parameters:    Size  Location     Type
 21754 ;;  data            1  [STACK] unsigned char 
 21755 ;; Auto vars:     Size  Location     Type
 21756 ;;		None
 21757 ;; Return value:  Size  Location     Type
 21758 ;;                  1  [STACK] _Bool 
 21759 ;; Registers used:
 21760 ;;		fsr1l, fsr1h
 21761 ;; Tracked objects:
 21762 ;;		On entry : 0/4
 21763 ;;		On exit  : 3F/39
 21764 ;;		Unchanged: 0/0
 21765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21767 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21769 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21770 ;;Total ram usage:        0 bytes
 21771 ;; Hardware stack levels used:    1
 21772 ;; Hardware stack levels required when called:   15
 21773 ;; This function calls:
 21774 ;;		Nothing
 21775 ;; This function is called by:
 21776 ;;		_read_cal_data
 21777 ;;		_write_cal_data
 21778 ;; This function uses a reentrant model
 21779 ;;
 21780                           
 21781                           	psect	text64
 21782  0025FA                     __ptext64:
 21783                           	opt callstack 0
 21784  0025FA                     _CRC_8BitDataWrite:
 21785                           	opt callstack 14
 21786                           
 21787                           ;mcc_generated_files/crc.c: 125: _Bool CRC_8BitDataWrite(uint8_t data);mcc_generated_fil
      +                          es/crc.c: 126: {;mcc_generated_files/crc.c: 127:     if(!CRCCON0bits.FULL)
 21788                           
 21789                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21790                           ;incstack = 0
 21791  0025FA  0139               	movlb	57	; () banked
 21792  0025FC  B168               	btfsc	104,0,b	;volatile
 21793  0025FE  D004               	goto	l1271
 21794                           
 21795                           ; BSR set to: 57
 21796                           ;mcc_generated_files/crc.c: 128:     {;mcc_generated_files/crc.c: 129:         CRCDATL =
      +                           data;
 21797                           ;stkvar	_data @ sp[(0)+-1]
 21798  002600  0EFF               	movlw	-1
 21799  002602  006F FF8F F960     	movff	plusw1,14688	;volatile
 21800  002608                     l1271:
 21801                           
 21802                           ; BSR set to: 57
 21803                           ; _CRC_8BitDataWrite: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
 21804  002608  52E5               	movf	postdec1,f,c
 21805  00260A  0012               	return		;funcret
 21806  00260C                     __end_of_CRC_8BitDataWrite:
 21807                           	opt callstack 0
 21808                           
 21809 ;; *************** function _start_adc_scan *****************
 21810 ;; Defined at:
 21811 ;;		line 72 in file "daq.c"
 21812 ;; Parameters:    Size  Location     Type
 21813 ;;		None
 21814 ;; Auto vars:     Size  Location     Type
 21815 ;;		None
 21816 ;; Return value:  Size  Location     Type
 21817 ;;                  1  [STACK] _Bool 
 21818 ;; Registers used:
 21819 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 21820 ;; Tracked objects:
 21821 ;;		On entry : 0/0
 21822 ;;		On exit  : 0/0
 21823 ;;		Unchanged: 0/0
 21824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21825 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21826 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21828 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21829 ;;Total ram usage:        0 bytes
 21830 ;; Hardware stack levels used:    1
 21831 ;; Hardware stack levels required when called:   16
 21832 ;; This function calls:
 21833 ;;		_ADCC_DischargeSampleCapacitor
 21834 ;;		_ADCC_SetADIInterruptHandler
 21835 ;;		_ADCC_SetADTIInterruptHandler
 21836 ;;		_ADCC_StartConversion
 21837 ;; This function is called by:
 21838 ;;		_main
 21839 ;;		_current_sensor_cal
 21840 ;;		_update_adc_result
 21841 ;; This function uses a reentrant model
 21842 ;;
 21843                           
 21844                           	psect	text65
 21845  001472                     __ptext65:
 21846                           	opt callstack 0
 21847  001472                     _start_adc_scan:
 21848                           	opt callstack 14
 21849                           
 21850                           ;daq.c: 74:  if (R.done)
 21851                           
 21852                           ; BSR set to: 57
 21853                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21854                           ;incstack = 0
 21855  001472  0101               	movlb	1	; () banked
 21856  001474  5135               	movf	(_R+53)& (0+255),w,b	;volatile
 21857  001476  A4D8               	btfss	status,2,c
 21858  001478  0012               	return	
 21859                           
 21860                           ; BSR set to: 1
 21861                           ;daq.c: 77:  R.scan_index = 0;
 21862  00147A  6B32               	clrf	(_R+50)& (0+255),b	;volatile
 21863                           
 21864                           ; BSR set to: 1
 21865                           ;daq.c: 78:  R.scan_select = (uint16_t) ((ANSELB << 8) + ANSELA) & 0b0011110001110111;
 21866  00147C  013A               	movlb	58	; () banked
 21867  00147E  5140               	movf	64,w,b	;volatile
 21868  001480  006E F940  F02A    	movff	14928,btemp	;volatile
 21869  001486  6A2B               	clrf	(btemp+1)^0,c
 21870  001488  0060  F0A8  F02B   	movff	btemp,btemp+1
 21871  00148E  6A2A               	clrf	btemp^0,c
 21872  001490  262A               	addwf	btemp^0,f,c
 21873  001492  0E00               	movlw	0
 21874  001494  222B               	addwfc	(btemp+1)^0,f,c
 21875  001496  0E77               	movlw	119
 21876  001498  142A               	andwf	btemp^0,w,c
 21877  00149A  0101               	movlb	1	; () banked
 21878  00149C  6F33               	movwf	(_R+51)& (0+255),b	;volatile
 21879  00149E  0E3C               	movlw	60
 21880  0014A0  142B               	andwf	(btemp+1)^0,w,c
 21881  0014A2  6F34               	movwf	(_R+52)& (0+255),b	;volatile
 21882                           
 21883                           ; BSR set to: 1
 21884                           ;daq.c: 79:  ADCC_SetADIInterruptHandler(adc_int_handler);
 21885  0014A4  0E4A               	movlw	low _adc_int_handler
 21886  0014A6  6EE6               	movwf	postinc1,c
 21887  0014A8  0E27               	movlw	high _adc_int_handler
 21888  0014AA  6EE6               	movwf	postinc1,c
 21889  0014AC  0E00               	movlw	low (_adc_int_handler shr (0+16))
 21890  0014AE  6EE6               	movwf	postinc1,c
 21891  0014B0  EC37  F011         	call	_ADCC_SetADIInterruptHandler	;wreg free
 21892                           
 21893                           ;daq.c: 80:  ADCC_SetADTIInterruptHandler(adc_int_t_handler);
 21894  0014B4  0EB8               	movlw	low _adc_int_t_handler
 21895  0014B6  6EE6               	movwf	postinc1,c
 21896  0014B8  0E0E               	movlw	high _adc_int_t_handler
 21897  0014BA  6EE6               	movwf	postinc1,c
 21898  0014BC  0E00               	movlw	low (_adc_int_t_handler shr (0+16))
 21899  0014BE  6EE6               	movwf	postinc1,c
 21900  0014C0  EC23  F011         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 21901                           
 21902                           ;daq.c: 81:  ADCC_DischargeSampleCapacitor();
 21903  0014C4  EC7B  F013         	call	_ADCC_DischargeSampleCapacitor	;wreg free
 21904                           
 21905                           ; BSR set to: 62
 21906                           ;daq.c: 82:  ADCC_StartConversion(R.scan_index & 0xf);
 21907  0014C8  0101               	movlb	1	; () banked
 21908  0014CA  5132               	movf	(_R+50)& (0+255),w,b	;volatile
 21909  0014CC  0B0F               	andlw	15
 21910  0014CE  6EE6               	movwf	postinc1,c
 21911  0014D0  EC06  F013         	call	_ADCC_StartConversion	;wreg free
 21912                           
 21913                           ; _start_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 21914  0014D4  0012               	return		;funcret
 21915  0014D6                     __end_of_start_adc_scan:
 21916                           	opt callstack 0
 21917                           
 21918 ;; *************** function _ADCC_StartConversion *****************
 21919 ;; Defined at:
 21920 ;;		line 128 in file "mcc_generated_files/adcc.c"
 21921 ;; Parameters:    Size  Location     Type
 21922 ;;  channel         1  [STACK] enum E16136
 21923 ;; Auto vars:     Size  Location     Type
 21924 ;;		None
 21925 ;; Return value:  Size  Location     Type
 21926 ;;                  1  [STACK] void 
 21927 ;; Registers used:
 21928 ;;		fsr1l, fsr1h
 21929 ;; Tracked objects:
 21930 ;;		On entry : 3F/1
 21931 ;;		On exit  : 3F/3E
 21932 ;;		Unchanged: 0/0
 21933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21934 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21935 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21936 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21937 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21938 ;;Total ram usage:        0 bytes
 21939 ;; Hardware stack levels used:    1
 21940 ;; Hardware stack levels required when called:   15
 21941 ;; This function calls:
 21942 ;;		Nothing
 21943 ;; This function is called by:
 21944 ;;		_start_adc_scan
 21945 ;;		_adc_int_t_handler
 21946 ;; This function uses a reentrant model
 21947 ;;
 21948                           
 21949                           	psect	text66
 21950  00260C                     __ptext66:
 21951                           	opt callstack 0
 21952  00260C                     _ADCC_StartConversion:
 21953                           	opt callstack 0
 21954                           
 21955                           ;mcc_generated_files/adcc.c: 128: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 129: {;mcc_generated_files/adcc.c: 131:     ADPCH = channel;
 21956                           ;stkvar	_channel @ sp[(0)+-1]
 21957                           
 21958                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21959                           ;incstack = 0
 21960 ;; hardware stack exceeded
 21961  00260C  0EFF               	movlw	-1
 21962  00260E  006F FF8F FEF1     	movff	plusw1,16113	;volatile
 21963                           
 21964                           ;mcc_generated_files/adcc.c: 134:     ADCON0bits.ADON = 1;
 21965  002614  013E               	movlb	62	; () banked
 21966  002616  8FF8               	bsf	248,7,b	;volatile
 21967                           
 21968                           ; BSR set to: 62
 21969                           ;mcc_generated_files/adcc.c: 137:     ADCON0bits.ADGO = 1;
 21970  002618  81F8               	bsf	248,0,b	;volatile
 21971                           
 21972                           ; BSR set to: 62
 21973                           ; _ADCC_StartConversion: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
 21974  00261A  52E5               	movf	postdec1,f,c
 21975  00261C  0012               	return		;funcret
 21976  00261E                     __end_of_ADCC_StartConversion:
 21977                           	opt callstack 0
 21978                           
 21979 ;; *************** function _ADCC_DischargeSampleCapacitor *****************
 21980 ;; Defined at:
 21981 ;;		line 189 in file "mcc_generated_files/adcc.c"
 21982 ;; Parameters:    Size  Location     Type
 21983 ;;		None
 21984 ;; Auto vars:     Size  Location     Type
 21985 ;;		None
 21986 ;; Return value:  Size  Location     Type
 21987 ;;                  1  [STACK] void 
 21988 ;; Registers used:
 21989 ;;		wreg, status,2
 21990 ;; Tracked objects:
 21991 ;;		On entry : 0/1
 21992 ;;		On exit  : 3F/3E
 21993 ;;		Unchanged: 0/0
 21994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21995 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21996 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21997 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21998 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21999 ;;Total ram usage:        0 bytes
 22000 ;; Hardware stack levels used:    1
 22001 ;; Hardware stack levels required when called:   15
 22002 ;; This function calls:
 22003 ;;		Nothing
 22004 ;; This function is called by:
 22005 ;;		_start_adc_scan
 22006 ;;		_adc_int_t_handler
 22007 ;; This function uses a reentrant model
 22008 ;;
 22009                           
 22010                           	psect	text67
 22011  0026F6                     __ptext67:
 22012                           	opt callstack 0
 22013  0026F6                     _ADCC_DischargeSampleCapacitor:
 22014                           	opt callstack 0
 22015                           
 22016                           ;mcc_generated_files/adcc.c: 192:     ADPCH = 0x3b;
 22017                           
 22018                           ; BSR set to: 62
 22019                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22020                           ;incstack = 0
 22021 ;; hardware stack exceeded
 22022  0026F6  0E3B               	movlw	59
 22023  0026F8  013E               	movlb	62	; () banked
 22024  0026FA  6FF1               	movwf	241,b	;volatile
 22025                           
 22026                           ; BSR set to: 62
 22027                           ; _ADCC_DischargeSampleCapacitor: autosize = 0, savesize = 0, parsavesize = 0, tempsize 
      +                          = 0 parsize = 0, argsize = 0, vargsize = 0
 22028  0026FC  0012               	return		;funcret
 22029  0026FE                     __end_of_ADCC_DischargeSampleCapacitor:
 22030                           	opt callstack 0
 22031                           
 22032 ;; *************** function _spinners *****************
 22033 ;; Defined at:
 22034 ;;		line 147 in file "mbmc.c"
 22035 ;; Parameters:    Size  Location     Type
 22036 ;;  shape           1  [STACK] unsigned char 
 22037 ;;  reset           1  [STACK] const unsigned char 
 22038 ;; Auto vars:     Size  Location     Type
 22039 ;;  c               1  [STACK] unsigned char 
 22040 ;; Return value:  Size  Location     Type
 22041 ;;                  1  [STACK] unsigned char 
 22042 ;; Registers used:
 22043 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl, prodh
 22044 ;; Tracked objects:
 22045 ;;		On entry : 0/0
 22046 ;;		On exit  : 0/0
 22047 ;;		Unchanged: 0/0
 22048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22049 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22050 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22051 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22052 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22053 ;;Total ram usage:        0 bytes
 22054 ;; Hardware stack levels used:    1
 22055 ;; Hardware stack levels required when called:   16
 22056 ;; This function calls:
 22057 ;;		_strlen
 22058 ;; This function is called by:
 22059 ;;		_main
 22060 ;;		_current_sensor_cal
 22061 ;; This function uses a reentrant model
 22062 ;;
 22063                           
 22064                           	psect	text68
 22065  01FA6A                     __ptext68:
 22066                           	opt callstack 0
 22067  01FA6A                     _spinners:
 22068                           	opt callstack 0
 22069                           
 22070                           ; BSR set to: 62
 22071                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22072  01FA6A  52E6               	movf	postinc1,f,c
 22073                           
 22074                           ;mbmc.c: 147: char spinners(uint8_t shape, const uint8_t reset);mbmc.c: 148: {;mbmc.c: 1
      +                          49:  static uint8_t s[6];;mbmc.c: 150:  char c;;mbmc.c: 152:  if (shape > (6 - 1))
 22075                           ;stkvar	_shape @ sp[(-1)+-1]
 22076                           
 22077                           ;incstack = 0
 22078  01FA6C  0EFE               	movlw	-2
 22079  01FA6E  006F FF8C  F02A    	movff	plusw1,btemp
 22080  01FA74  0E05               	movlw	5
 22081  01FA76  642A               	cpfsgt	btemp^0,c
 22082  01FA78  D002               	goto	l2184
 22083                           
 22084                           ;mbmc.c: 153:   shape = 0;
 22085                           ;stkvar	_shape @ sp[(-1)+-1]
 22086  01FA7A  0EFE               	movlw	-2
 22087  01FA7C  6AE3               	clrf	plusw1,c
 22088  01FA7E                     l2184:
 22089                           
 22090                           ;mbmc.c: 154:  if (reset)
 22091                           ;stkvar	_reset @ sp[(-1)+-2]
 22092  01FA7E  0EFD               	movlw	-3
 22093  01FA80  50E3               	movf	plusw1,w,c
 22094  01FA82  B4D8               	btfsc	status,2,c
 22095  01FA84  D00C               	goto	l16866
 22096                           
 22097                           ;mbmc.c: 155:   s[shape] = 0;
 22098                           ;stkvar	_shape @ sp[(-1)+-1]
 22099  01FA86  0EFE               	movlw	-2
 22100  01FA88  50E3               	movf	plusw1,w,c
 22101  01FA8A  6E34               	movwf	(btemp+10)^0,c
 22102  01FA8C  6A35               	clrf	(btemp+11)^0,c
 22103  01FA8E  0ECD               	movlw	low spinners@s
 22104  01FA90  2434               	addwf	(btemp+10)^0,w,c
 22105  01FA92  6ED9               	movwf	fsr2l,c
 22106  01FA94  0E01               	movlw	high spinners@s
 22107  01FA96  2035               	addwfc	(btemp+11)^0,w,c
 22108  01FA98  6EDA               	movwf	fsr2h,c
 22109  01FA9A  0E00               	movlw	0
 22110  01FA9C  6EDF               	movwf	indf2,c
 22111  01FA9E                     l16866:
 22112                           
 22113                           ;mbmc.c: 156:  c = spin[shape][s[shape]];
 22114                           ;stkvar	_shape @ sp[(-1)+-1]
 22115  01FA9E  0EFE               	movlw	-2
 22116  01FAA0  50E3               	movf	plusw1,w,c
 22117  01FAA2  0D14               	mullw	20
 22118  01FAA4  0E67               	movlw	low _spin
 22119  01FAA6  6E34               	movwf	(btemp+10)^0,c
 22120  01FAA8  0EF9               	movlw	high _spin
 22121  01FAAA  6E35               	movwf	(btemp+11)^0,c
 22122  01FAAC  50F3               	movf	243,w,c
 22123  01FAAE  2634               	addwf	(btemp+10)^0,f,c
 22124  01FAB0  50F4               	movf	244,w,c
 22125  01FAB2  2235               	addwfc	(btemp+11)^0,f,c
 22126                           
 22127                           ;stkvar	_shape @ sp[(-1)+-1]
 22128  01FAB4  0EFE               	movlw	-2
 22129  01FAB6  50E3               	movf	plusw1,w,c
 22130  01FAB8  6E32               	movwf	(btemp+8)^0,c
 22131  01FABA  6A33               	clrf	(btemp+9)^0,c
 22132  01FABC  0ECD               	movlw	low spinners@s
 22133  01FABE  2432               	addwf	(btemp+8)^0,w,c
 22134  01FAC0  6ED9               	movwf	fsr2l,c
 22135  01FAC2  0E01               	movlw	high spinners@s
 22136  01FAC4  2033               	addwfc	(btemp+9)^0,w,c
 22137  01FAC6  6EDA               	movwf	fsr2h,c
 22138  01FAC8  50DF               	movf	indf2,w,c
 22139  01FACA  2634               	addwf	(btemp+10)^0,f,c
 22140  01FACC  0E00               	movlw	0
 22141  01FACE  2235               	addwfc	(btemp+11)^0,f,c
 22142  01FAD0  0060  F0D3  FFF6   	movff	btemp+10,tblptrl
 22143  01FAD6  0060  F0D7  FFF7   	movff	btemp+11,tblptrh
 22144  01FADC                     	if	0	;tblptru may be non-zero
 22145  01FADC                     	endif
 22146  01FADC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 22147  01FADC  0E00               	movlw	low (__mediumconst shr (0+16))
 22148  01FADE  6EF8               	movwf	tblptru,c
 22149  01FAE0                     	endif
 22150                           
 22151                           ;stkvar	_c @ sp[(-1)+0]
 22152  01FAE0  0008               	tblrd		*
 22153  01FAE2  0EFF               	movlw	-1
 22154  01FAE4  006F FFD7 FFE3     	movff	tablat,plusw1
 22155                           
 22156                           ;mbmc.c: 157:  if (++s[shape] >= strlen(spin[shape]))
 22157                           ;stkvar	_shape @ sp[(-1)+-1]
 22158  01FAEA  0EFE               	movlw	-2
 22159  01FAEC  50E3               	movf	plusw1,w,c
 22160  01FAEE  0D14               	mullw	20
 22161  01FAF0  0E67               	movlw	low _spin
 22162  01FAF2  6E34               	movwf	(btemp+10)^0,c
 22163  01FAF4  0EF9               	movlw	high _spin
 22164  01FAF6  6E35               	movwf	(btemp+11)^0,c
 22165  01FAF8  50F3               	movf	243,w,c
 22166  01FAFA  2634               	addwf	(btemp+10)^0,f,c
 22167  01FAFC  50F4               	movf	244,w,c
 22168  01FAFE  2235               	addwfc	(btemp+11)^0,f,c
 22169  01FB00  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 22170  01FB06  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 22171  01FB0C  EC3D  F004         	call	_strlen	;wreg free
 22172                           
 22173                           ;stkvar	_shape @ sp[(-1)+-1]
 22174  01FB10  0EFE               	movlw	-2
 22175  01FB12  50E3               	movf	plusw1,w,c
 22176  01FB14  6E34               	movwf	(btemp+10)^0,c
 22177  01FB16  6A35               	clrf	(btemp+11)^0,c
 22178  01FB18  0ECD               	movlw	low spinners@s
 22179  01FB1A  2434               	addwf	(btemp+10)^0,w,c
 22180  01FB1C  6ED9               	movwf	fsr2l,c
 22181  01FB1E  0E01               	movlw	high spinners@s
 22182  01FB20  2035               	addwfc	(btemp+11)^0,w,c
 22183  01FB22  6EDA               	movwf	fsr2h,c
 22184  01FB24  2ADF               	incf	indf2,f,c
 22185  01FB26  50DF               	movf	indf2,w,c
 22186  01FB28  6E34               	movwf	(btemp+10)^0,c
 22187  01FB2A  6A35               	clrf	(btemp+11)^0,c
 22188  01FB2C  502A               	movf	btemp^0,w,c
 22189  01FB2E  5C34               	subwf	(btemp+10)^0,w,c
 22190  01FB30  502B               	movf	(btemp+1)^0,w,c
 22191  01FB32  5835               	subwfb	(btemp+11)^0,w,c
 22192  01FB34  A0D8               	btfss	status,0,c
 22193  01FB36  D00C               	goto	l16872
 22194                           
 22195                           ;mbmc.c: 158:   s[shape] = 0;
 22196                           ;stkvar	_shape @ sp[(-1)+-1]
 22197  01FB38  0EFE               	movlw	-2
 22198  01FB3A  50E3               	movf	plusw1,w,c
 22199  01FB3C  6E34               	movwf	(btemp+10)^0,c
 22200  01FB3E  6A35               	clrf	(btemp+11)^0,c
 22201  01FB40  0ECD               	movlw	low spinners@s
 22202  01FB42  2434               	addwf	(btemp+10)^0,w,c
 22203  01FB44  6ED9               	movwf	fsr2l,c
 22204  01FB46  0E01               	movlw	high spinners@s
 22205  01FB48  2035               	addwfc	(btemp+11)^0,w,c
 22206  01FB4A  6EDA               	movwf	fsr2h,c
 22207  01FB4C  0E00               	movlw	0
 22208  01FB4E  6EDF               	movwf	indf2,c
 22209  01FB50                     l16872:
 22210                           
 22211                           ;mbmc.c: 159:  return c;
 22212                           ;stkvar	_c @ sp[(-1)+0]
 22213  01FB50  0EFF               	movlw	-1
 22214  01FB52  006F FF8C  F02A    	movff	plusw1,btemp
 22215                           
 22216                           ; _spinners: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, args
      +                          ize = 2, vargsize = 0
 22217  01FB58  52E5               	movf	postdec1,f,c
 22218  01FB5A  52E5               	movf	postdec1,f,c
 22219  01FB5C  52E5               	movf	postdec1,f,c
 22220  01FB5E  0012               	return		;funcret
 22221  01FB60                     __end_of_spinners:
 22222                           	opt callstack 0
 22223                           
 22224 ;; *************** function _get_switch *****************
 22225 ;; Defined at:
 22226 ;;		line 18 in file "dio.c"
 22227 ;; Parameters:    Size  Location     Type
 22228 ;;  i               1  [STACK] const unsigned char 
 22229 ;; Auto vars:     Size  Location     Type
 22230 ;;		None
 22231 ;; Return value:  Size  Location     Type
 22232 ;;                  1  [STACK] enum E17187
 22233 ;; Registers used:
 22234 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 22235 ;; Tracked objects:
 22236 ;;		On entry : 0/0
 22237 ;;		On exit  : 0/0
 22238 ;;		Unchanged: 0/0
 22239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22240 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22241 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22243 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22244 ;;Total ram usage:        0 bytes
 22245 ;; Hardware stack levels used:    1
 22246 ;; Hardware stack levels required when called:   15
 22247 ;; This function calls:
 22248 ;;		Nothing
 22249 ;; This function is called by:
 22250 ;;		_main
 22251 ;;		_current_sensor_cal
 22252 ;;		_display_history
 22253 ;;		_hid_input
 22254 ;; This function uses a reentrant model
 22255 ;;
 22256                           
 22257                           	psect	text69
 22258  002006                     __ptext69:
 22259                           	opt callstack 0
 22260  002006                     _get_switch:
 22261                           	opt callstack 13
 22262                           
 22263                           ;dio.c: 18: SW_STATES get_switch(const uint8_t i);dio.c: 19: {;dio.c: 20:  if (i >= 6)
 22264                           ;stkvar	_i @ sp[(0)+-1]
 22265                           
 22266                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22267                           ;incstack = 0
 22268  002006  0EFF               	movlw	-1
 22269  002008  006F FF8C  F02A    	movff	plusw1,btemp
 22270  00200E  0E05               	movlw	5
 22271  002010  642A               	cpfsgt	btemp^0,c
 22272  002012  D002               	goto	l12820
 22273                           
 22274                           ;dio.c: 21:   return SW_OFF;
 22275  002014  0E00               	movlw	0
 22276  002016  D00A               	goto	L20
 22277  002018                     l12820:
 22278                           
 22279                           ;dio.c: 23:  return S.button[i].sw;
 22280                           ;stkvar	_i @ sp[(0)+-1]
 22281  002018  0EFF               	movlw	-1
 22282  00201A  50E3               	movf	plusw1,w,c
 22283  00201C  0D05               	mullw	5
 22284  00201E  0EA4               	movlw	low _S
 22285  002020  24F3               	addwf	243,w,c
 22286  002022  6ED9               	movwf	fsr2l,c
 22287  002024  0E01               	movlw	high _S
 22288  002026  20F4               	addwfc	prodh,w,c
 22289  002028  6EDA               	movwf	fsr2h,c
 22290  00202A  50DF               	movf	indf2,w,c
 22291  00202C                     L20:
 22292  00202C  6E2A               	movwf	btemp^0,c
 22293                           
 22294                           ; _get_switch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
 22295  00202E  52E5               	movf	postdec1,f,c
 22296  002030  0012               	return		;funcret
 22297  002032                     __end_of_get_switch:
 22298                           	opt callstack 0
 22299                           
 22300 ;; *************** function _clear_adc_scan *****************
 22301 ;; Defined at:
 22302 ;;		line 103 in file "daq.c"
 22303 ;; Parameters:    Size  Location     Type
 22304 ;;		None
 22305 ;; Auto vars:     Size  Location     Type
 22306 ;;		None
 22307 ;; Return value:  Size  Location     Type
 22308 ;;                  1  [STACK] void 
 22309 ;; Registers used:
 22310 ;;		None
 22311 ;; Tracked objects:
 22312 ;;		On entry : 0/0
 22313 ;;		On exit  : 3F/1
 22314 ;;		Unchanged: 0/0
 22315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22316 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22317 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22318 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22319 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22320 ;;Total ram usage:        0 bytes
 22321 ;; Hardware stack levels used:    1
 22322 ;; Hardware stack levels required when called:   15
 22323 ;; This function calls:
 22324 ;;		Nothing
 22325 ;; This function is called by:
 22326 ;;		_main
 22327 ;;		_current_sensor_cal
 22328 ;;		_update_adc_result
 22329 ;; This function uses a reentrant model
 22330 ;;
 22331                           
 22332                           	psect	text70
 22333  002722                     __ptext70:
 22334                           	opt callstack 0
 22335  002722                     _clear_adc_scan:
 22336                           	opt callstack 13
 22337                           
 22338                           ;daq.c: 105:  R.done = 0;
 22339                           
 22340                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22341                           ;incstack = 0
 22342  002722  0101               	movlb	1	; () banked
 22343  002724  6B35               	clrf	(_R+53)& (0+255),b	;volatile
 22344                           
 22345                           ; BSR set to: 1
 22346                           ; _clear_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 22347  002726  0012               	return		;funcret
 22348  002728                     __end_of_clear_adc_scan:
 22349                           	opt callstack 0
 22350                           
 22351 ;; *************** function _cal_current_zero *****************
 22352 ;; Defined at:
 22353 ;;		line 329 in file "daq.c"
 22354 ;; Parameters:    Size  Location     Type
 22355 ;;  mode            1  [STACK] const _Bool 
 22356 ;;  cb              2  [STACK] const short 
 22357 ;;  cp              2  [STACK] const short 
 22358 ;; Auto vars:     Size  Location     Type
 22359 ;;		None
 22360 ;; Return value:  Size  Location     Type
 22361 ;;                  1  [STACK] _Bool 
 22362 ;; Registers used:
 22363 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 22364 ;; Tracked objects:
 22365 ;;		On entry : 0/1
 22366 ;;		On exit  : 0/0
 22367 ;;		Unchanged: 0/0
 22368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22369 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22370 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22371 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22372 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22373 ;;Total ram usage:        0 bytes
 22374 ;; Hardware stack levels used:    1
 22375 ;; Hardware stack levels required when called:   16
 22376 ;; This function calls:
 22377 ;;		_check_range
 22378 ;; This function is called by:
 22379 ;;		_current_sensor_cal
 22380 ;; This function uses a reentrant model
 22381 ;;
 22382                           
 22383                           	psect	text71
 22384  000A4E                     __ptext71:
 22385                           	opt callstack 0
 22386  000A4E                     _cal_current_zero:
 22387                           	opt callstack 13
 22388                           
 22389                           ;daq.c: 329: _Bool cal_current_zero(const _Bool mode, const int16_t cb, const int16_t cp
      +                          );daq.c: 330: {;daq.c: 332:  if (!check_range(cb, 100, 4000))
 22390                           
 22391                           ; BSR set to: 1
 22392                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22393                           ;incstack = 0
 22394  000A4E  0EA0               	movlw	160
 22395  000A50  6EE6               	movwf	postinc1,c
 22396  000A52  0E0F               	movlw	15
 22397  000A54  6EE6               	movwf	postinc1,c
 22398  000A56  0E64               	movlw	100
 22399  000A58  6EE6               	movwf	postinc1,c
 22400  000A5A  0E00               	movlw	0
 22401  000A5C  6EE6               	movwf	postinc1,c
 22402                           
 22403                           ;stkvar	_cb @ sp[(-4)+-3]
 22404  000A5E  0EF9               	movlw	-7
 22405  000A60  006F FF8F FFE6     	movff	plusw1,postinc1
 22406  000A66  006F FF8F FFE6     	movff	plusw1,postinc1
 22407  000A6C  EC9D  F007         	call	_check_range	;wreg free
 22408  000A70  502A               	movf	btemp^0,w,c
 22409  000A72  A4D8               	btfss	status,2,c
 22410  000A74  D002               	goto	l13506
 22411  000A76                     u12590:
 22412                           
 22413                           ;daq.c: 333:   return 0;
 22414  000A76  0E00               	movlw	0
 22415  000A78  D019               	goto	L21
 22416  000A7A                     l13506:
 22417                           
 22418                           ;daq.c: 335:  if (!check_range(cp, 100, 4000))
 22419  000A7A  0EA0               	movlw	160
 22420  000A7C  6EE6               	movwf	postinc1,c
 22421  000A7E  0E0F               	movlw	15
 22422  000A80  6EE6               	movwf	postinc1,c
 22423  000A82  0E64               	movlw	100
 22424  000A84  6EE6               	movwf	postinc1,c
 22425  000A86  0E00               	movlw	0
 22426  000A88  6EE6               	movwf	postinc1,c
 22427                           
 22428                           ;stkvar	_cp @ sp[(-4)+-5]
 22429  000A8A  0EF7               	movlw	-9
 22430  000A8C  006F FF8F FFE6     	movff	plusw1,postinc1
 22431  000A92  006F FF8F FFE6     	movff	plusw1,postinc1
 22432  000A98  EC9D  F007         	call	_check_range	;wreg free
 22433  000A9C  502A               	movf	btemp^0,w,c
 22434  000A9E  B4D8               	btfsc	status,2,c
 22435  000AA0  D7EA               	goto	u12590
 22436                           
 22437                           ;daq.c: 338:  if (!mode)
 22438                           ;stkvar	_mode @ sp[(0)+-1]
 22439  000AA2  0EFF               	movlw	-1
 22440  000AA4  50E3               	movf	plusw1,w,c
 22441  000AA6  A4D8               	btfss	status,2,c
 22442  000AA8  D003               	goto	l13518
 22443  000AAA                     u12610:
 22444                           
 22445                           ;daq.c: 339:   return 1;
 22446  000AAA  0E01               	movlw	1
 22447  000AAC                     L21:
 22448  000AAC  6E2A               	movwf	btemp^0,c
 22449  000AAE  D013               	goto	l2058
 22450  000AB0                     l13518:
 22451                           
 22452                           ;daq.c: 341:  R.n_offset[0] = cb;
 22453                           ;stkvar	_cb @ sp[(0)+-3]
 22454  000AB0  0EFD               	movlw	-3
 22455  000AB2  006F FF8C  F126    	movff	plusw1,_R+38	;volatile
 22456  000AB8  0EFE               	movlw	-2
 22457  000ABA  006F FF8C  F127    	movff	plusw1,_R+39	;volatile
 22458                           
 22459                           ;daq.c: 342:  R.n_offset[1] = cp;
 22460                           ;stkvar	_cp @ sp[(0)+-5]
 22461  000AC0  0EFB               	movlw	-5
 22462  000AC2  006F FF8C  F128    	movff	plusw1,_R+40	;volatile
 22463  000AC8  0EFC               	movlw	-4
 22464  000ACA  006F FF8C  F129    	movff	plusw1,_R+41	;volatile
 22465                           
 22466                           ;daq.c: 343:  R.c_zero_cal = 1;
 22467  000AD0  0101               	movlb	1	; () banked
 22468  000AD2  8597               	bsf	(_R+151)& (0+255),2,b	;volatile
 22469  000AD4  D7EA               	goto	u12610
 22470  000AD6                     l2058:
 22471                           
 22472                           ; _cal_current_zero: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           5, argsize = 5, vargsize = 0
 22473  000AD6  0EFB               	movlw	251
 22474  000AD8  26E1               	addwf	fsr1l,f,c
 22475  000ADA  0EFF               	movlw	255
 22476  000ADC  22E2               	addwfc	fsr1h,f,c
 22477  000ADE  0012               	return		;funcret
 22478  000AE0                     __end_of_cal_current_zero:
 22479                           	opt callstack 0
 22480                           
 22481 ;; *************** function _check_range *****************
 22482 ;; Defined at:
 22483 ;;		line 317 in file "daq.c"
 22484 ;; Parameters:    Size  Location     Type
 22485 ;;  value           2  [STACK] const short 
 22486 ;;  window          2  [STACK] const short 
 22487 ;;  standard        2  [STACK] const short 
 22488 ;; Auto vars:     Size  Location     Type
 22489 ;;		None
 22490 ;; Return value:  Size  Location     Type
 22491 ;;                  1  [STACK] _Bool 
 22492 ;; Registers used:
 22493 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 22494 ;; Tracked objects:
 22495 ;;		On entry : 0/1
 22496 ;;		On exit  : 0/0
 22497 ;;		Unchanged: 0/0
 22498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22499 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22500 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22501 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22502 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22503 ;;Total ram usage:        0 bytes
 22504 ;; Hardware stack levels used:    1
 22505 ;; Hardware stack levels required when called:   15
 22506 ;; This function calls:
 22507 ;;		Nothing
 22508 ;; This function is called by:
 22509 ;;		_cal_current_zero
 22510 ;; This function uses a reentrant model
 22511 ;;
 22512                           
 22513                           	psect	text72
 22514  000F3A                     __ptext72:
 22515                           	opt callstack 0
 22516  000F3A                     _check_range:
 22517                           	opt callstack 13
 22518                           
 22519                           ;daq.c: 317: static _Bool check_range(const int16_t value, const int16_t window, const i
      +                          nt16_t standard);daq.c: 318: {;daq.c: 319:  if (value > (standard + window))
 22520                           ;stkvar	_value @ sp[(0)+-2]
 22521                           ;stkvar	_window @ sp[(0)+-4]
 22522                           ;stkvar	_standard @ sp[(0)+-6]
 22523                           
 22524                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22525                           ;incstack = 0
 22526  000F3A  0EFA               	movlw	-6
 22527  000F3C  006F FF8C  F034    	movff	plusw1,btemp+10
 22528  000F42  0EFB               	movlw	-5
 22529  000F44  006F FF8C  F035    	movff	plusw1,btemp+11
 22530  000F4A  0EFC               	movlw	-4
 22531  000F4C  50E3               	movf	plusw1,w,c
 22532  000F4E  2634               	addwf	(btemp+10)^0,f,c
 22533  000F50  0EFD               	movlw	-3
 22534  000F52  50E3               	movf	plusw1,w,c
 22535  000F54  2235               	addwfc	(btemp+11)^0,f,c
 22536  000F56  0EFE               	movlw	-2
 22537  000F58  50E3               	movf	plusw1,w,c
 22538  000F5A  5C34               	subwf	(btemp+10)^0,w,c
 22539  000F5C  5035               	movf	(btemp+11)^0,w,c
 22540  000F5E  0A80               	xorlw	128
 22541  000F60  6E2A               	movwf	btemp^0,c
 22542  000F62  0EFF               	movlw	-1
 22543  000F64  50E3               	movf	plusw1,w,c
 22544  000F66  0A80               	xorlw	128
 22545  000F68  582A               	subwfb	btemp^0,w,c
 22546  000F6A  B0D8               	btfsc	status,0,c
 22547  000F6C  D002               	goto	l12878
 22548  000F6E                     u12320:
 22549                           
 22550                           ;daq.c: 320:   return 0;
 22551  000F6E  0E00               	movlw	0
 22552  000F70  D01E               	goto	L22
 22553  000F72                     l12878:
 22554                           
 22555                           ;daq.c: 321:  if (value < (standard - window))
 22556                           ;stkvar	_window @ sp[(0)+-4]
 22557                           ;stkvar	_standard @ sp[(0)+-6]
 22558  000F72  0EFA               	movlw	-6
 22559  000F74  006F FF8C  F034    	movff	plusw1,btemp+10
 22560  000F7A  0EFB               	movlw	-5
 22561  000F7C  006F FF8C  F035    	movff	plusw1,btemp+11
 22562  000F82  0EFC               	movlw	-4
 22563  000F84  50E3               	movf	plusw1,w,c
 22564  000F86  5E34               	subwf	(btemp+10)^0,f,c
 22565  000F88  0EFD               	movlw	-3
 22566  000F8A  50E3               	movf	plusw1,w,c
 22567  000F8C  5A35               	subwfb	(btemp+11)^0,f,c
 22568                           
 22569                           ;stkvar	_value @ sp[(0)+-2]
 22570  000F8E  0EFE               	movlw	-2
 22571  000F90  006F FF8C  F02A    	movff	plusw1,btemp
 22572  000F96  5034               	movf	(btemp+10)^0,w,c
 22573  000F98  5C2A               	subwf	btemp^0,w,c
 22574  000F9A  0EFF               	movlw	-1
 22575  000F9C  50E3               	movf	plusw1,w,c
 22576  000F9E  0A80               	xorlw	128
 22577  000FA0  6E2A               	movwf	btemp^0,c
 22578  000FA2  5035               	movf	(btemp+11)^0,w,c
 22579  000FA4  0A80               	xorlw	128
 22580  000FA6  582A               	subwfb	btemp^0,w,c
 22581  000FA8  A0D8               	btfss	status,0,c
 22582  000FAA  D7E1               	goto	u12320
 22583                           
 22584                           ;daq.c: 323:  return 1;
 22585  000FAC  0E01               	movlw	1
 22586  000FAE                     L22:
 22587  000FAE  6E2A               	movwf	btemp^0,c
 22588                           
 22589                           ; _check_range: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, a
      +                          rgsize = 6, vargsize = 0
 22590  000FB0  0EFA               	movlw	250
 22591  000FB2  26E1               	addwf	fsr1l,f,c
 22592  000FB4  0EFF               	movlw	255
 22593  000FB6  22E2               	addwfc	fsr1h,f,c
 22594  000FB8  0012               	return		;funcret
 22595  000FBA                     __end_of_check_range:
 22596                           	opt callstack 0
 22597                           
 22598 ;; *************** function _convert_adc_data *****************
 22599 ;; Defined at:
 22600 ;;		line 51 in file "mbmc.c"
 22601 ;; Parameters:    Size  Location     Type
 22602 ;;		None
 22603 ;; Auto vars:     Size  Location     Type
 22604 ;;  i               1  [STACK] unsigned char 
 22605 ;; Return value:  Size  Location     Type
 22606 ;;                  1  [STACK] void 
 22607 ;; Registers used:
 22608 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 22609 ;; Tracked objects:
 22610 ;;		On entry : 0/2
 22611 ;;		On exit  : 0/0
 22612 ;;		Unchanged: 0/0
 22613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22614 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22615 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22617 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22618 ;;Total ram usage:        0 bytes
 22619 ;; Hardware stack levels used:    1
 22620 ;; Hardware stack levels required when called:   18
 22621 ;; This function calls:
 22622 ;;		_conv_raw_result
 22623 ;;		_lp_filter
 22624 ;; This function is called by:
 22625 ;;		_main
 22626 ;; This function uses a reentrant model
 22627 ;;
 22628                           
 22629                           	psect	text73
 22630  0003BE                     __ptext73:
 22631                           	opt callstack 0
 22632  0003BE                     _convert_adc_data:
 22633                           	opt callstack 0
 22634                           
 22635                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22636  0003BE  52E6               	movf	postinc1,f,c
 22637                           
 22638                           ;mbmc.c: 53:  uint8_t i = 0;
 22639                           ;stkvar	_i @ sp[(-1)+0]
 22640                           
 22641                           ;incstack = 0
 22642  0003C0  0EFF               	movlw	-1
 22643  0003C2  6AE3               	clrf	plusw1,c
 22644  0003C4                     l14328:
 22645                           
 22646                           ;mbmc.c: 56:   if (V.calib) {
 22647  0003C4  0102               	movlb	2	; () banked
 22648  0003C6  51B0               	movf	(_V+169)& (0+255),w,b	;volatile
 22649  0003C8  B4D8               	btfsc	status,2,c
 22650  0003CA  D01B               	goto	l14332
 22651                           
 22652                           ; BSR set to: 2
 22653                           ;mbmc.c: 57:    C.calc[i] = lp_filter(conv_raw_result(i, O_CONV), i, 1);
 22654  0003CC  0E01               	movlw	1
 22655  0003CE  6EE6               	movwf	postinc1,c
 22656                           
 22657                           ;stkvar	_i @ sp[(-2)+0]
 22658  0003D0  0EFE               	movlw	-2
 22659  0003D2  50E3               	movf	plusw1,w,c
 22660  0003D4  6EE6               	movwf	postinc1,c
 22661  0003D6  0E01               	movlw	1
 22662  0003D8  6EE6               	movwf	postinc1,c
 22663                           
 22664                           ;stkvar	_i @ sp[(-4)+0]
 22665  0003DA  0EFC               	movlw	-4
 22666  0003DC  50E3               	movf	plusw1,w,c
 22667  0003DE  6EE6               	movwf	postinc1,c
 22668  0003E0  ECE6  F0C2         	call	_conv_raw_result	;wreg free
 22669  0003E4  0060  F0AB  FFE6   	movff	btemp,postinc1
 22670  0003EA  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 22671  0003F0  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 22672  0003F6  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 22673  0003FC  EC56  F0EB         	call	_lp_filter	;wreg free
 22674  000400  D01A               	goto	L23
 22675  000402                     l14332:
 22676                           
 22677                           ; BSR set to: 2
 22678                           ;mbmc.c: 59:    C.calc[i] = lp_filter(conv_raw_result(i, CONV), i, 0);
 22679  000402  0E00               	movlw	0
 22680  000404  6EE6               	movwf	postinc1,c
 22681                           
 22682                           ;stkvar	_i @ sp[(-2)+0]
 22683  000406  0EFE               	movlw	-2
 22684  000408  50E3               	movf	plusw1,w,c
 22685  00040A  6EE6               	movwf	postinc1,c
 22686  00040C  0E00               	movlw	0
 22687  00040E  6EE6               	movwf	postinc1,c
 22688                           
 22689                           ;stkvar	_i @ sp[(-4)+0]
 22690  000410  0EFC               	movlw	-4
 22691  000412  50E3               	movf	plusw1,w,c
 22692  000414  6EE6               	movwf	postinc1,c
 22693  000416  ECE6  F0C2         	call	_conv_raw_result	;wreg free
 22694  00041A  0060  F0AB  FFE6   	movff	btemp,postinc1
 22695  000420  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 22696  000426  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 22697  00042C  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 22698  000432  EC56  F0EB         	call	_lp_filter	;wreg free
 22699  000436                     L23:
 22700                           
 22701                           ;stkvar	_i @ sp[(-1)+0]
 22702  000436  0EFF               	movlw	-1
 22703  000438  50E3               	movf	plusw1,w,c
 22704  00043A  0D04               	mullw	4
 22705  00043C  0EFF               	movlw	low _C
 22706  00043E  24F3               	addwf	243,w,c
 22707  000440  6ED9               	movwf	fsr2l,c
 22708  000442  0E08               	movlw	high _C
 22709  000444  20F4               	addwfc	prodh,w,c
 22710  000446  6EDA               	movwf	fsr2h,c
 22711  000448  0060  F0AB  FFDE   	movff	btemp,postinc2
 22712  00044E  0060  F0AF  FFDE   	movff	btemp+1,postinc2
 22713  000454  0060  F0B3  FFDE   	movff	btemp+2,postinc2
 22714  00045A  0060  F0B7  FFDE   	movff	btemp+3,postinc2
 22715                           
 22716                           ;mbmc.c: 61:  } while (++i < 16);
 22717                           ;stkvar	_i @ sp[(-1)+0]
 22718  000460  0EFF               	movlw	-1
 22719  000462  2AE3               	incf	plusw1,f,c
 22720  000464  0EFF               	movlw	-1
 22721  000466  006F FF8C  F02A    	movff	plusw1,btemp
 22722  00046C  0E0F               	movlw	15
 22723  00046E  642A               	cpfsgt	btemp^0,c
 22724  000470  D7A9               	goto	l14328
 22725                           
 22726                           ; _convert_adc_data: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 22727  000472  52E5               	movf	postdec1,f,c
 22728  000474  0012               	return		;funcret
 22729  000476                     __end_of_convert_adc_data:
 22730                           	opt callstack 0
 22731                           
 22732 ;; *************** function _clear_hid_pflags *****************
 22733 ;; Defined at:
 22734 ;;		line 67 in file "hid.c"
 22735 ;; Parameters:    Size  Location     Type
 22736 ;;  h               2  [STACK] PTR struct H_data
 22737 ;;		 -> H(9), 
 22738 ;; Auto vars:     Size  Location     Type
 22739 ;;		None
 22740 ;; Return value:  Size  Location     Type
 22741 ;;                  1  [STACK] void 
 22742 ;; Registers used:
 22743 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+10, btemp+11
 22744 ;; Tracked objects:
 22745 ;;		On entry : 3E/0
 22746 ;;		On exit  : 0/0
 22747 ;;		Unchanged: 0/0
 22748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22749 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22750 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22751 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22752 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22753 ;;Total ram usage:        0 bytes
 22754 ;; Hardware stack levels used:    1
 22755 ;; Hardware stack levels required when called:   15
 22756 ;; This function calls:
 22757 ;;		Nothing
 22758 ;; This function is called by:
 22759 ;;		_main
 22760 ;; This function uses a reentrant model
 22761 ;;
 22762                           
 22763                           	psect	text74
 22764  001342                     __ptext74:
 22765                           	opt callstack 0
 22766  001342                     _clear_hid_pflags:
 22767                           	opt callstack 15
 22768                           
 22769                           ;hid.c: 67: void clear_hid_pflags(H_data* h);hid.c: 68: {;hid.c: 69:  h->select_p = SW_O
      +                          FF;
 22770                           ;stkvar	_h @ sp[(0)+-2]
 22771                           
 22772                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22773                           ;incstack = 0
 22774  001342  0EFE               	movlw	-2
 22775  001344  006F FF8C  F034    	movff	plusw1,btemp+10
 22776  00134A  0EFF               	movlw	-1
 22777  00134C  006F FF8C  F035    	movff	plusw1,btemp+11
 22778  001352  0E03               	movlw	3
 22779  001354  2434               	addwf	(btemp+10)^0,w,c
 22780  001356  6ED9               	movwf	fsr2l,c
 22781  001358  0E00               	movlw	0
 22782  00135A  2035               	addwfc	(btemp+11)^0,w,c
 22783  00135C  6EDA               	movwf	fsr2h,c
 22784  00135E  0E00               	movlw	0
 22785  001360  6EDF               	movwf	indf2,c
 22786                           
 22787                           ;hid.c: 70:  h->enter_p = SW_OFF;
 22788                           ;stkvar	_h @ sp[(0)+-2]
 22789  001362  0EFE               	movlw	-2
 22790  001364  006F FF8C  F034    	movff	plusw1,btemp+10
 22791  00136A  0EFF               	movlw	-1
 22792  00136C  006F FF8C  F035    	movff	plusw1,btemp+11
 22793  001372  0E05               	movlw	5
 22794  001374  2434               	addwf	(btemp+10)^0,w,c
 22795  001376  6ED9               	movwf	fsr2l,c
 22796  001378  0E00               	movlw	0
 22797  00137A  2035               	addwfc	(btemp+11)^0,w,c
 22798  00137C  6EDA               	movwf	fsr2h,c
 22799  00137E  0E00               	movlw	0
 22800  001380  6EDF               	movwf	indf2,c
 22801                           
 22802                           ;hid.c: 71:  h->calib_p = SW_OFF;
 22803                           ;stkvar	_h @ sp[(0)+-2]
 22804  001382  0EFE               	movlw	-2
 22805  001384  006F FF8C  F034    	movff	plusw1,btemp+10
 22806  00138A  0EFF               	movlw	-1
 22807  00138C  006F FF8C  F035    	movff	plusw1,btemp+11
 22808  001392  0E07               	movlw	7
 22809  001394  2434               	addwf	(btemp+10)^0,w,c
 22810  001396  6ED9               	movwf	fsr2l,c
 22811  001398  0E00               	movlw	0
 22812  00139A  2035               	addwfc	(btemp+11)^0,w,c
 22813  00139C  6EDA               	movwf	fsr2h,c
 22814  00139E  0E00               	movlw	0
 22815  0013A0  6EDF               	movwf	indf2,c
 22816                           
 22817                           ; _clear_hid_pflags: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           2, argsize = 2, vargsize = 0
 22818  0013A2  52E5               	movf	postdec1,f,c
 22819  0013A4  52E5               	movf	postdec1,f,c
 22820  0013A6  0012               	return		;funcret
 22821  0013A8                     __end_of_clear_hid_pflags:
 22822                           	opt callstack 0
 22823                           
 22824 ;; *************** function _check_help *****************
 22825 ;; Defined at:
 22826 ;;		line 40 in file "mconfig.c"
 22827 ;; Parameters:    Size  Location     Type
 22828 ;;  flipper         1  [STACK] const _Bool 
 22829 ;; Auto vars:     Size  Location     Type
 22830 ;;  estatus         1    0        _Bool 
 22831 ;; Return value:  Size  Location     Type
 22832 ;;                  1  [STACK] _Bool 
 22833 ;; Registers used:
 22834 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 22835 ;; Tracked objects:
 22836 ;;		On entry : 3F/2
 22837 ;;		On exit  : 0/0
 22838 ;;		Unchanged: 0/0
 22839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22840 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22841 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22842 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22843 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22844 ;;Total ram usage:        0 bytes
 22845 ;; Hardware stack levels used:    1
 22846 ;; Hardware stack levels required when called:   27
 22847 ;; This function calls:
 22848 ;;		_StartTimer
 22849 ;;		_TimerDone
 22850 ;;		_display_help
 22851 ;;		_display_info
 22852 ;;		_get_vterm_ptr
 22853 ;;		_help_button
 22854 ;;		_mode_lamp_bright
 22855 ;;		_mode_lamp_dim
 22856 ;;		_set_display_info
 22857 ;;		_set_temp_display_help
 22858 ;;		_set_vterm
 22859 ;;		_sprintf
 22860 ;;		_update_lcd
 22861 ;;		_vterm_dump
 22862 ;; This function is called by:
 22863 ;;		_main
 22864 ;; This function uses a reentrant model
 22865 ;;
 22866                           
 22867                           	psect	text75
 22868  01D0CC                     __ptext75:
 22869                           	opt callstack 0
 22870  01D0CC                     _check_help:
 22871                           	opt callstack 3
 22872                           
 22873                           ;mconfig.c: 46:  if (help_button() && display_info() != DIS_HELP) {
 22874                           
 22875                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22876                           ;incstack = 0
 22877  01D0CC  ECB4  F00E         	call	_help_button	;wreg free
 22878  01D0D0  502A               	movf	btemp^0,w,c
 22879  01D0D2  B4D8               	btfsc	status,2,c
 22880  01D0D4  D0D0               	goto	l17318
 22881  01D0D6  EC7F  F013         	call	_display_info	;wreg free
 22882  01D0DA  042A               	decf	btemp^0,w,c
 22883  01D0DC  B4D8               	btfsc	status,2,c
 22884  01D0DE  D0CB               	goto	l17318
 22885                           
 22886                           ;mconfig.c: 47:   StartTimer(TMR_FLIPPER, 1500);
 22887  01D0E0  0EDC               	movlw	220
 22888  01D0E2  6EE6               	movwf	postinc1,c
 22889  01D0E4  0E05               	movlw	5
 22890  01D0E6  6EE6               	movwf	postinc1,c
 22891  01D0E8  0E0B               	movlw	11
 22892  01D0EA  6EE6               	movwf	postinc1,c
 22893  01D0EC  ECFA  F00D         	call	_StartTimer	;wreg free
 22894                           
 22895                           ;mconfig.c: 48:   if (V.debug)
 22896  01D0F0  0102               	movlb	2	; () banked
 22897  01D0F2  B39F               	btfsc	(_V+152)& (0+255),1,b	;volatile
 22898                           
 22899                           ; BSR set to: 2
 22900                           ;mconfig.c: 49:    vterm_dump();
 22901  01D0F4  EC9A  F0EE         	call	_vterm_dump	;wreg free
 22902                           
 22903                           ;mconfig.c: 51:   set_vterm(1);
 22904  01D0F8  0E01               	movlw	1
 22905  01D0FA  6EE6               	movwf	postinc1,c
 22906  01D0FC  EC76  F012         	call	_set_vterm	;wreg free
 22907                           
 22908                           ;mconfig.c: 52:   set_temp_display_help(display_info());
 22909  01D100  EC7F  F013         	call	_display_info	;wreg free
 22910  01D104  502A               	movf	btemp^0,w,c
 22911  01D106  6EE6               	movwf	postinc1,c
 22912  01D108  EC27  F013         	call	_set_temp_display_help	;wreg free
 22913                           
 22914                           ; BSR set to: 2
 22915                           ;mconfig.c: 53:   set_display_info(DIS_HELP);
 22916  01D10C  0E01               	movlw	1
 22917  01D10E  6EE6               	movwf	postinc1,c
 22918  01D110  EC85  F012         	call	_set_display_info	;wreg free
 22919                           
 22920                           ;mconfig.c: 54:   if (flipper) {
 22921                           ;stkvar	_flipper @ sp[(0)+-1]
 22922  01D114  0EFF               	movlw	-1
 22923  01D116  50E3               	movf	plusw1,w,c
 22924  01D118  B4D8               	btfsc	status,2,c
 22925  01D11A  D019               	goto	l17304
 22926                           
 22927                           ;mconfig.c: 55:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_date);
 22928  01D11C  0EB6               	movlw	low STR_70
 22929  01D11E  6EE6               	movwf	postinc1,c
 22930  01D120  0EFF               	movlw	high STR_70
 22931  01D122  6EE6               	movwf	postinc1,c
 22932  01D124  0E71               	movlw	low STR_72
 22933  01D126  6EE6               	movwf	postinc1,c
 22934  01D128  0EFF               	movlw	high STR_72
 22935  01D12A  6EE6               	movwf	postinc1,c
 22936  01D12C  0E01               	movlw	1
 22937  01D12E  6EE6               	movwf	postinc1,c
 22938  01D130  0E00               	movlw	0
 22939  01D132  6EE6               	movwf	postinc1,c
 22940  01D134  ECE9  F0FF         	call	_get_vterm_ptr	;wreg free
 22941  01D138  0060  F0AB  FFE6   	movff	btemp,postinc1
 22942  01D13E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 22943  01D144  0E06               	movlw	6
 22944  01D146  6EE6               	movwf	postinc1,c
 22945  01D148  ECB9  F0FB         	call	_sprintf	;wreg free
 22946                           
 22947                           ;mconfig.c: 56:   } else {
 22948  01D14C  D018               	goto	l1829
 22949  01D14E                     l17304:
 22950                           
 22951                           ;mconfig.c: 57:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_time);
 22952  01D14E  0ECC               	movlw	low STR_71
 22953  01D150  6EE6               	movwf	postinc1,c
 22954  01D152  0EFF               	movlw	high STR_71
 22955  01D154  6EE6               	movwf	postinc1,c
 22956  01D156  0E71               	movlw	low STR_72
 22957  01D158  6EE6               	movwf	postinc1,c
 22958  01D15A  0EFF               	movlw	high STR_72
 22959  01D15C  6EE6               	movwf	postinc1,c
 22960  01D15E  0E01               	movlw	1
 22961  01D160  6EE6               	movwf	postinc1,c
 22962  01D162  0E00               	movlw	0
 22963  01D164  6EE6               	movwf	postinc1,c
 22964  01D166  ECE9  F0FF         	call	_get_vterm_ptr	;wreg free
 22965  01D16A  0060  F0AB  FFE6   	movff	btemp,postinc1
 22966  01D170  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 22967  01D176  0E06               	movlw	6
 22968  01D178  6EE6               	movwf	postinc1,c
 22969  01D17A  ECB9  F0FB         	call	_sprintf	;wreg free
 22970  01D17E                     l1829:
 22971                           
 22972                           ; BSR set to: 0
 22973                           ;mconfig.c: 59:   sprintf(get_vterm_ptr(1, 1), "%s       ", T[V.help_id].display);
 22974  01D17E  0102               	movlb	2	; () banked
 22975  01D180  399F               	swapf	(_V+152)& (0+255),w,b	;volatile
 22976  01D182  32E8               	rrcf	wreg,f,c
 22977  01D184  32E8               	rrcf	wreg,f,c
 22978  01D186  0B03               	andlw	3
 22979  01D188  0D2C               	mullw	44
 22980  01D18A  0E16               	movlw	22
 22981  01D18C  26F3               	addwf	243,f,c
 22982  01D18E  0E00               	movlw	0
 22983  01D190  22F4               	addwfc	244,f,c
 22984  01D192  0EB7               	movlw	low _T
 22985  01D194  6E34               	movwf	(btemp+10)^0,c
 22986  01D196  0EF8               	movlw	high _T
 22987  01D198  6E35               	movwf	(btemp+11)^0,c
 22988  01D19A  50F3               	movf	243,w,c
 22989  01D19C  2634               	addwf	(btemp+10)^0,f,c
 22990  01D19E  50F4               	movf	244,w,c
 22991  01D1A0  2235               	addwfc	(btemp+11)^0,f,c
 22992  01D1A2  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 22993  01D1A8  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 22994  01D1AE  0EC2               	movlw	low STR_74
 22995  01D1B0  6EE6               	movwf	postinc1,c
 22996  01D1B2  0EFF               	movlw	high STR_74
 22997  01D1B4  6EE6               	movwf	postinc1,c
 22998  01D1B6  0E01               	movlw	1
 22999  01D1B8  6EE6               	movwf	postinc1,c
 23000  01D1BA  0E01               	movlw	1
 23001  01D1BC  6EE6               	movwf	postinc1,c
 23002  01D1BE  ECE9  F0FF         	call	_get_vterm_ptr	;wreg free
 23003  01D1C2  0060  F0AB  FFE6   	movff	btemp,postinc1
 23004  01D1C8  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 23005  01D1CE  0E06               	movlw	6
 23006  01D1D0  6EE6               	movwf	postinc1,c
 23007  01D1D2  ECB9  F0FB         	call	_sprintf	;wreg free
 23008                           
 23009                           ;mconfig.c: 60:   sprintf(get_vterm_ptr(2, 1), "%s       ", T[V.help_id].message);
 23010  01D1D6  0102               	movlb	2	; () banked
 23011  01D1D8  399F               	swapf	(_V+152)& (0+255),w,b	;volatile
 23012  01D1DA  32E8               	rrcf	wreg,f,c
 23013  01D1DC  32E8               	rrcf	wreg,f,c
 23014  01D1DE  0B03               	andlw	3
 23015  01D1E0  0D2C               	mullw	44
 23016  01D1E2  0EB7               	movlw	low _T
 23017  01D1E4  6E34               	movwf	(btemp+10)^0,c
 23018  01D1E6  0EF8               	movlw	high _T
 23019  01D1E8  6E35               	movwf	(btemp+11)^0,c
 23020  01D1EA  50F3               	movf	243,w,c
 23021  01D1EC  2634               	addwf	(btemp+10)^0,f,c
 23022  01D1EE  50F4               	movf	244,w,c
 23023  01D1F0  2235               	addwfc	(btemp+11)^0,f,c
 23024  01D1F2  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 23025  01D1F8  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 23026  01D1FE  0EC2               	movlw	low STR_74
 23027  01D200  6EE6               	movwf	postinc1,c
 23028  01D202  0EFF               	movlw	high STR_74
 23029  01D204  6EE6               	movwf	postinc1,c
 23030  01D206  0E01               	movlw	1
 23031  01D208  6EE6               	movwf	postinc1,c
 23032  01D20A  0E02               	movlw	2
 23033  01D20C  6EE6               	movwf	postinc1,c
 23034  01D20E  ECE9  F0FF         	call	_get_vterm_ptr	;wreg free
 23035  01D212  0060  F0AB  FFE6   	movff	btemp,postinc1
 23036  01D218  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 23037  01D21E  0E06               	movlw	6
 23038  01D220  6EE6               	movwf	postinc1,c
 23039  01D222  ECB9  F0FB         	call	_sprintf	;wreg free
 23040                           
 23041                           ; BSR set to: 0
 23042                           ;mconfig.c: 61:   V.help_id++;
 23043  01D226  EE20  F29F         	lfsr	2,_V+152	;volatile
 23044  01D22A  38DF               	swapf	223,w,c
 23045  01D22C  6E35               	movwf	(btemp+11)^0,c
 23046  01D22E  3235               	rrcf	(btemp+11)^0,f,c
 23047  01D230  3035               	rrcf	(btemp+11)^0,w,c
 23048  01D232  0B03               	andlw	3
 23049  01D234  6E35               	movwf	(btemp+11)^0,c
 23050  01D236  2A35               	incf	(btemp+11)^0,f,c
 23051  01D238  3A35               	swapf	(btemp+11)^0,f,c
 23052  01D23A  3635               	rlcf	(btemp+11)^0,f,c
 23053  01D23C  3635               	rlcf	(btemp+11)^0,f,c
 23054  01D23E  50DF               	movf	223,w,c
 23055  01D240  1835               	xorwf	(btemp+11)^0,w,c
 23056  01D242  0B3F               	andlw	-193
 23057  01D244  1835               	xorwf	(btemp+11)^0,w,c
 23058  01D246  6EDF               	movwf	223,c
 23059                           
 23060                           ; BSR set to: 0
 23061                           ;mconfig.c: 62:   StartTimer(TMR_HELPDIS, 3000);
 23062  01D248  0EB8               	movlw	184
 23063  01D24A  6EE6               	movwf	postinc1,c
 23064  01D24C  0E0B               	movlw	11
 23065  01D24E  6EE6               	movwf	postinc1,c
 23066  01D250  0E09               	movlw	9
 23067  01D252  6EE6               	movwf	postinc1,c
 23068  01D254  ECFA  F00D         	call	_StartTimer	;wreg free
 23069                           
 23070                           ;mconfig.c: 63:   StartTimer(TMR_INFO, 3000);
 23071  01D258  0EB8               	movlw	184
 23072  01D25A  6EE6               	movwf	postinc1,c
 23073  01D25C  0E0B               	movlw	11
 23074  01D25E  6EE6               	movwf	postinc1,c
 23075  01D260  0E07               	movlw	7
 23076  01D262  6EE6               	movwf	postinc1,c
 23077  01D264  ECFA  F00D         	call	_StartTimer	;wreg free
 23078                           
 23079                           ;mconfig.c: 64:   mode_lamp_bright();
 23080  01D268  EC3E  F013         	call	_mode_lamp_bright	;wreg free
 23081                           
 23082                           ;mconfig.c: 65:   update_lcd(1);
 23083  01D26C  0E01               	movlw	1
 23084  01D26E  6EE6               	movwf	postinc1,c
 23085  01D270  EC6B  F0F4         	call	_update_lcd	;wreg free
 23086                           
 23087                           ;mconfig.c: 67:  } else {
 23088  01D274  D032               	goto	l1830
 23089  01D276                     l17318:
 23090                           
 23091                           ;mconfig.c: 68:   if (TimerDone(TMR_HELPDIS)) {
 23092  01D276  0E09               	movlw	9
 23093  01D278  6EE6               	movwf	postinc1,c
 23094  01D27A  EC6F  F010         	call	_TimerDone	;wreg free
 23095  01D27E  502A               	movf	btemp^0,w,c
 23096  01D280  B4D8               	btfsc	status,2,c
 23097  01D282  D02B               	goto	l1830
 23098                           
 23099                           ;mconfig.c: 69:    set_vterm(0);
 23100  01D284  0E00               	movlw	0
 23101  01D286  6EE6               	movwf	postinc1,c
 23102  01D288  EC76  F012         	call	_set_vterm	;wreg free
 23103                           
 23104                           ;mconfig.c: 70:    V.help = 0;
 23105  01D28C  0102               	movlb	2	; () banked
 23106  01D28E  959F               	bcf	(_V+152)& (0+255),2,b	;volatile
 23107                           
 23108                           ; BSR set to: 2
 23109                           ;mconfig.c: 71:    set_display_info(display_help());
 23110  01D290  EC83  F013         	call	_display_help	;wreg free
 23111  01D294  502A               	movf	btemp^0,w,c
 23112  01D296  6EE6               	movwf	postinc1,c
 23113  01D298  EC85  F012         	call	_set_display_info	;wreg free
 23114                           
 23115                           ;mconfig.c: 72:    mode_lamp_dim(V.mode_pwm);
 23116  01D29C  0060  FA67  FFE6   	movff	_V+146,postinc1
 23117  01D2A2  0060  FA6B  FFE6   	movff	_V+147,postinc1
 23118  01D2A8  ECAF  F012         	call	_mode_lamp_dim	;wreg free
 23119                           
 23120                           ;mconfig.c: 73:    if (TimerDone(TMR_FLIPPER)) {
 23121  01D2AC  0E0B               	movlw	11
 23122  01D2AE  6EE6               	movwf	postinc1,c
 23123  01D2B0  EC6F  F010         	call	_TimerDone	;wreg free
 23124  01D2B4  502A               	movf	btemp^0,w,c
 23125  01D2B6  B4D8               	btfsc	status,2,c
 23126  01D2B8  D010               	goto	l1830
 23127                           
 23128                           ;mconfig.c: 74:     V.flipper = !V.flipper;
 23129  01D2BA  0102               	movlb	2	; () banked
 23130  01D2BC  51AF               	movf	(_V+168)& (0+255),w,b	;volatile
 23131  01D2BE  A4D8               	btfss	status,2,c
 23132  01D2C0  D002               	goto	u16920
 23133  01D2C2  0E01               	movlw	1
 23134  01D2C4  D001               	goto	u16930
 23135  01D2C6                     u16920:
 23136  01D2C6  0E00               	movlw	0
 23137  01D2C8                     u16930:
 23138  01D2C8  6FAF               	movwf	(_V+168)& (0+255),b	;volatile
 23139                           
 23140                           ; BSR set to: 2
 23141                           ;mconfig.c: 75:     StartTimer(TMR_FLIPPER, 1500);
 23142  01D2CA  0EDC               	movlw	220
 23143  01D2CC  6EE6               	movwf	postinc1,c
 23144  01D2CE  0E05               	movlw	5
 23145  01D2D0  6EE6               	movwf	postinc1,c
 23146  01D2D2  0E0B               	movlw	11
 23147  01D2D4  6EE6               	movwf	postinc1,c
 23148  01D2D6  ECFA  F00D         	call	_StartTimer	;wreg free
 23149  01D2DA                     l1830:
 23150                           
 23151                           ; _check_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
 23152  01D2DA  52E5               	movf	postdec1,f,c
 23153  01D2DC  0012               	return		;funcret
 23154  01D2DE                     __end_of_check_help:
 23155                           	opt callstack 0
 23156                           
 23157 ;; *************** function _vterm_dump *****************
 23158 ;; Defined at:
 23159 ;;		line 124 in file "mconfig.c"
 23160 ;; Parameters:    Size  Location     Type
 23161 ;;		None
 23162 ;; Auto vars:     Size  Location     Type
 23163 ;;		None
 23164 ;; Return value:  Size  Location     Type
 23165 ;;                  1  [STACK] void 
 23166 ;; Registers used:
 23167 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 23168 ;; Tracked objects:
 23169 ;;		On entry : 3F/2
 23170 ;;		On exit  : 0/0
 23171 ;;		Unchanged: 0/0
 23172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23173 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23174 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23176 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23177 ;;Total ram usage:        0 bytes
 23178 ;; Hardware stack levels used:    1
 23179 ;; Hardware stack levels required when called:   26
 23180 ;; This function calls:
 23181 ;;		_WaitMs
 23182 ;;		_eaDogM_WriteStringAtPos
 23183 ;;		_get_vterm_ptr
 23184 ;;		_sprintf
 23185 ;;		_wait_lcd_done
 23186 ;; This function is called by:
 23187 ;;		_check_help
 23188 ;; This function uses a reentrant model
 23189 ;;
 23190                           
 23191                           	psect	text76
 23192  01DD34                     __ptext76:
 23193                           	opt callstack 0
 23194  01DD34                     _vterm_dump:
 23195                           	opt callstack 3
 23196                           
 23197                           ;mconfig.c: 126:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(0, 0), get_vterm_ptr(0,
      +                           1));
 23198                           
 23199                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23200                           ;incstack = 0
 23201  01DD34  0E01               	movlw	1
 23202  01DD36  6EE6               	movwf	postinc1,c
 23203  01DD38  0E00               	movlw	0
 23204  01DD3A  6EE6               	movwf	postinc1,c
 23205  01DD3C  ECE9  F0FF         	call	_get_vterm_ptr	;wreg free
 23206  01DD40  0060  F0AB  FFE6   	movff	btemp,postinc1
 23207  01DD46  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 23208  01DD4C  0E00               	movlw	0
 23209  01DD4E  6EE6               	movwf	postinc1,c
 23210  01DD50  0E00               	movlw	0
 23211  01DD52  6EE6               	movwf	postinc1,c
 23212  01DD54  ECE9  F0FF         	call	_get_vterm_ptr	;wreg free
 23213  01DD58  0060  F0AB  FFE6   	movff	btemp,postinc1
 23214  01DD5E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 23215  01DD64  0EA7               	movlw	low STR_76
 23216  01DD66  6EE6               	movwf	postinc1,c
 23217  01DD68  0EFF               	movlw	high STR_76
 23218  01DD6A  6EE6               	movwf	postinc1,c
 23219  01DD6C  0E08               	movlw	low (_V+1)
 23220  01DD6E  6EE6               	movwf	postinc1,c
 23221  01DD70  0E02               	movlw	high (_V+1)
 23222  01DD72  6EE6               	movwf	postinc1,c
 23223  01DD74  0E08               	movlw	8
 23224  01DD76  6EE6               	movwf	postinc1,c
 23225  01DD78  ECB9  F0FB         	call	_sprintf	;wreg free
 23226                           
 23227                           ; BSR set to: 0
 23228                           ;mconfig.c: 127:  wait_lcd_done();
 23229  01DD7C  ECF4  F011         	call	_wait_lcd_done	;wreg free
 23230                           
 23231                           ; BSR set to: 0
 23232                           ;mconfig.c: 128:  eaDogM_WriteStringAtPos(0, 0, V.buf);
 23233  01DD80  0E08               	movlw	low (_V+1)
 23234  01DD82  6EE6               	movwf	postinc1,c
 23235  01DD84  0E02               	movlw	high (_V+1)
 23236  01DD86  6EE6               	movwf	postinc1,c
 23237  01DD88  0E00               	movlw	0
 23238  01DD8A  6EE6               	movwf	postinc1,c
 23239  01DD8C  0E00               	movlw	0
 23240  01DD8E  6EE6               	movwf	postinc1,c
 23241  01DD90  EC70  F005         	call	_eaDogM_WriteStringAtPos	;wreg free
 23242                           
 23243                           ; BSR set to: 59
 23244                           ;mconfig.c: 129:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(1, 0), get_vterm_ptr(1,
      +                           1));
 23245  01DD94  0E01               	movlw	1
 23246  01DD96  6EE6               	movwf	postinc1,c
 23247  01DD98  0E01               	movlw	1
 23248  01DD9A  6EE6               	movwf	postinc1,c
 23249  01DD9C  ECE9  F0FF         	call	_get_vterm_ptr	;wreg free
 23250  01DDA0  0060  F0AB  FFE6   	movff	btemp,postinc1
 23251  01DDA6  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 23252  01DDAC  0E00               	movlw	0
 23253  01DDAE  6EE6               	movwf	postinc1,c
 23254  01DDB0  0E01               	movlw	1
 23255  01DDB2  6EE6               	movwf	postinc1,c
 23256  01DDB4  ECE9  F0FF         	call	_get_vterm_ptr	;wreg free
 23257  01DDB8  0060  F0AB  FFE6   	movff	btemp,postinc1
 23258  01DDBE  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 23259  01DDC4  0EA7               	movlw	low STR_76
 23260  01DDC6  6EE6               	movwf	postinc1,c
 23261  01DDC8  0EFF               	movlw	high STR_76
 23262  01DDCA  6EE6               	movwf	postinc1,c
 23263  01DDCC  0E08               	movlw	low (_V+1)
 23264  01DDCE  6EE6               	movwf	postinc1,c
 23265  01DDD0  0E02               	movlw	high (_V+1)
 23266  01DDD2  6EE6               	movwf	postinc1,c
 23267  01DDD4  0E08               	movlw	8
 23268  01DDD6  6EE6               	movwf	postinc1,c
 23269  01DDD8  ECB9  F0FB         	call	_sprintf	;wreg free
 23270                           
 23271                           ; BSR set to: 0
 23272                           ;mconfig.c: 130:  wait_lcd_done();
 23273  01DDDC  ECF4  F011         	call	_wait_lcd_done	;wreg free
 23274                           
 23275                           ;mconfig.c: 131:  eaDogM_WriteStringAtPos(1, 0, V.buf);
 23276  01DDE0  0E08               	movlw	low (_V+1)
 23277  01DDE2  6EE6               	movwf	postinc1,c
 23278  01DDE4  0E02               	movlw	high (_V+1)
 23279  01DDE6  6EE6               	movwf	postinc1,c
 23280  01DDE8  0E00               	movlw	0
 23281  01DDEA  6EE6               	movwf	postinc1,c
 23282  01DDEC  0E01               	movlw	1
 23283  01DDEE  6EE6               	movwf	postinc1,c
 23284  01DDF0  EC70  F005         	call	_eaDogM_WriteStringAtPos	;wreg free
 23285                           
 23286                           ;mconfig.c: 132:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(2, 0), get_vterm_ptr(2,
      +                           1));
 23287  01DDF4  0E01               	movlw	1
 23288  01DDF6  6EE6               	movwf	postinc1,c
 23289  01DDF8  0E02               	movlw	2
 23290  01DDFA  6EE6               	movwf	postinc1,c
 23291  01DDFC  ECE9  F0FF         	call	_get_vterm_ptr	;wreg free
 23292  01DE00  0060  F0AB  FFE6   	movff	btemp,postinc1
 23293  01DE06  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 23294  01DE0C  0E00               	movlw	0
 23295  01DE0E  6EE6               	movwf	postinc1,c
 23296  01DE10  0E02               	movlw	2
 23297  01DE12  6EE6               	movwf	postinc1,c
 23298  01DE14  ECE9  F0FF         	call	_get_vterm_ptr	;wreg free
 23299  01DE18  0060  F0AB  FFE6   	movff	btemp,postinc1
 23300  01DE1E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 23301  01DE24  0EA7               	movlw	low STR_76
 23302  01DE26  6EE6               	movwf	postinc1,c
 23303  01DE28  0EFF               	movlw	high STR_76
 23304  01DE2A  6EE6               	movwf	postinc1,c
 23305  01DE2C  0E08               	movlw	low (_V+1)
 23306  01DE2E  6EE6               	movwf	postinc1,c
 23307  01DE30  0E02               	movlw	high (_V+1)
 23308  01DE32  6EE6               	movwf	postinc1,c
 23309  01DE34  0E08               	movlw	8
 23310  01DE36  6EE6               	movwf	postinc1,c
 23311  01DE38  ECB9  F0FB         	call	_sprintf	;wreg free
 23312                           
 23313                           ; BSR set to: 0
 23314                           ;mconfig.c: 133:  wait_lcd_done();
 23315  01DE3C  ECF4  F011         	call	_wait_lcd_done	;wreg free
 23316                           
 23317                           ; BSR set to: 0
 23318                           ;mconfig.c: 134:  eaDogM_WriteStringAtPos(2, 0, V.buf);
 23319  01DE40  0E08               	movlw	low (_V+1)
 23320  01DE42  6EE6               	movwf	postinc1,c
 23321  01DE44  0E02               	movlw	high (_V+1)
 23322  01DE46  6EE6               	movwf	postinc1,c
 23323  01DE48  0E00               	movlw	0
 23324  01DE4A  6EE6               	movwf	postinc1,c
 23325  01DE4C  0E02               	movlw	2
 23326  01DE4E  6EE6               	movwf	postinc1,c
 23327  01DE50  EC70  F005         	call	_eaDogM_WriteStringAtPos	;wreg free
 23328                           
 23329                           ; BSR set to: 59
 23330                           ;mconfig.c: 135:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(3, 0), get_vterm_ptr(3,
      +                           1));
 23331  01DE54  0E01               	movlw	1
 23332  01DE56  6EE6               	movwf	postinc1,c
 23333  01DE58  0E03               	movlw	3
 23334  01DE5A  6EE6               	movwf	postinc1,c
 23335  01DE5C  ECE9  F0FF         	call	_get_vterm_ptr	;wreg free
 23336  01DE60  0060  F0AB  FFE6   	movff	btemp,postinc1
 23337  01DE66  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 23338  01DE6C  0E00               	movlw	0
 23339  01DE6E  6EE6               	movwf	postinc1,c
 23340  01DE70  0E03               	movlw	3
 23341  01DE72  6EE6               	movwf	postinc1,c
 23342  01DE74  ECE9  F0FF         	call	_get_vterm_ptr	;wreg free
 23343  01DE78  0060  F0AB  FFE6   	movff	btemp,postinc1
 23344  01DE7E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 23345  01DE84  0EA7               	movlw	low STR_76
 23346  01DE86  6EE6               	movwf	postinc1,c
 23347  01DE88  0EFF               	movlw	high STR_76
 23348  01DE8A  6EE6               	movwf	postinc1,c
 23349  01DE8C  0E08               	movlw	low (_V+1)
 23350  01DE8E  6EE6               	movwf	postinc1,c
 23351  01DE90  0E02               	movlw	high (_V+1)
 23352  01DE92  6EE6               	movwf	postinc1,c
 23353  01DE94  0E08               	movlw	8
 23354  01DE96  6EE6               	movwf	postinc1,c
 23355  01DE98  ECB9  F0FB         	call	_sprintf	;wreg free
 23356                           
 23357                           ; BSR set to: 0
 23358                           ;mconfig.c: 136:  wait_lcd_done();
 23359  01DE9C  ECF4  F011         	call	_wait_lcd_done	;wreg free
 23360                           
 23361                           ;mconfig.c: 137:  eaDogM_WriteStringAtPos(3, 0, V.buf);
 23362  01DEA0  0E08               	movlw	low (_V+1)
 23363  01DEA2  6EE6               	movwf	postinc1,c
 23364  01DEA4  0E02               	movlw	high (_V+1)
 23365  01DEA6  6EE6               	movwf	postinc1,c
 23366  01DEA8  0E00               	movlw	0
 23367  01DEAA  6EE6               	movwf	postinc1,c
 23368  01DEAC  0E03               	movlw	3
 23369  01DEAE  6EE6               	movwf	postinc1,c
 23370  01DEB0  EC70  F005         	call	_eaDogM_WriteStringAtPos	;wreg free
 23371                           
 23372                           ; BSR set to: 59
 23373                           ;mconfig.c: 138:  WaitMs(3000);
 23374  01DEB4  0EB8               	movlw	184
 23375  01DEB6  6EE6               	movwf	postinc1,c
 23376  01DEB8  0E0B               	movlw	11
 23377  01DEBA  6EE6               	movwf	postinc1,c
 23378  01DEBC  EC07  F00F         	call	_WaitMs	;wreg free
 23379                           
 23380                           ; _vterm_dump: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 23381  01DEC0  0012               	return		;funcret
 23382  01DEC2                     __end_of_vterm_dump:
 23383                           	opt callstack 0
 23384                           
 23385 ;; *************** function _sprintf *****************
 23386 ;; Defined at:
 23387 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_sprintf.c"
 23388 ;; Parameters:    Size  Location     Type
 23389 ;;  s               2  [STACK] PTR unsigned char 
 23390 ;;		 -> D.lcd(640), D(642), port_data(512), V(181), 
 23391 ;;  fmt             2  [STACK] PTR const unsigned char 
 23392 ;;		 -> STR_90(127), STR_88(3), STR_87(3), STR_86(21), 
 23393 ;;		 -> STR_85(21), STR_84(21), STR_83(21), STR_82(21), 
 23394 ;;		 -> STR_81(21), STR_80(26), STR_79(15), STR_78(15), 
 23395 ;;		 -> STR_77(15), STR_76(15), STR_75(10), STR_74(10), 
 23396 ;;		 -> STR_73(19), STR_72(19), STR_68(14), STR_67(28), 
 23397 ;;		 -> STR_66(28), STR_65(28), STR_64(22), STR_63(22), 
 23398 ;;		 -> STR_62(22), STR_61(22), STR_60(22), STR_59(22), 
 23399 ;;		 -> STR_58(22), STR_57(22), STR_56(22), STR_55(21), 
 23400 ;;		 -> STR_54(22), STR_53(22), STR_52(22), STR_51(22), 
 23401 ;;		 -> STR_50(22), STR_49(22), STR_48(24), STR_47(24), 
 23402 ;;		 -> STR_46(24), STR_45(30), STR_44(24), STR_43(24), 
 23403 ;;		 -> STR_42(23), STR_41(23), STR_40(23), STR_39(23), 
 23404 ;;		 -> STR_38(23), STR_37(23), STR_36(23), STR_35(23), 
 23405 ;;		 -> STR_34(23), STR_33(23), STR_32(23), STR_31(23), 
 23406 ;;		 -> STR_30(18), STR_29(17), STR_28(17), STR_27(22), 
 23407 ;;		 -> STR_26(22), STR_25(22), STR_24(14), STR_23(27), 
 23408 ;;		 -> STR_22(27), STR_21(23), STR_20(22), STR_19(22), 
 23409 ;;		 -> STR_18(22), STR_17(22), STR_16(23), STR_15(23), 
 23410 ;;		 -> STR_14(23), STR_13(26), STR_12(22), STR_11(21), 
 23411 ;;		 -> STR_10(21), STR_9(21), STR_8(21), STR_7(21), 
 23412 ;;		 -> STR_6(21), STR_5(21), STR_4(21), STR_2(21), 
 23413 ;;		 -> STR_1(21), 
 23414 ;; Auto vars:     Size  Location     Type
 23415 ;;  f               6  [STACK] struct _IO_FILE
 23416 ;;  ap              2  [STACK] PTR void [1]
 23417 ;;		 -> ?_printf(2), ?_sprintf(2), 
 23418 ;;  ret             2    0        int 
 23419 ;; Return value:  Size  Location     Type
 23420 ;;                  2  [STACK] int 
 23421 ;; Registers used:
 23422 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 23423 ;; Tracked objects:
 23424 ;;		On entry : 0/2
 23425 ;;		On exit  : 3F/0
 23426 ;;		Unchanged: 0/0
 23427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23428 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23429 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23430 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23431 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23432 ;;Total ram usage:        0 bytes
 23433 ;; Hardware stack levels used:    1
 23434 ;; Hardware stack levels required when called:   23
 23435 ;; This function calls:
 23436 ;;		_vfprintf
 23437 ;; This function is called by:
 23438 ;;		_main
 23439 ;;		_current_sensor_cal
 23440 ;;		_display_history
 23441 ;;		_check_help
 23442 ;;		_vterm_dump
 23443 ;;		_calc_bsoc
 23444 ;; This function uses a reentrant model
 23445 ;;
 23446                           
 23447                           	psect	text77
 23448  01F772                     __ptext77:
 23449                           	opt callstack 0
 23450  01F772                     _sprintf:
 23451                           	opt callstack 0
 23452                           
 23453                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 94, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 23454  01F772  0E08               	movlw	8
 23455  01F774  26E1               	addwf	fsr1l,f,c
 23456  01F776  0E00               	movlw	0
 23457  01F778  22E2               	addwfc	fsr1h,f,c
 23458                           
 23459                           ;incstack = 0
 23460 ;; hardware stack exceeded
 23461  01F77A  0EFE               	movlw	254
 23462  01F77C  6E34               	movwf	(btemp+10)^0,c
 23463  01F77E  0EFF               	movlw	255
 23464  01F780  6E35               	movwf	(btemp+11)^0,c
 23465                           
 23466                           ;stkvar	?_sprintf @ sp[(-8)+-3]
 23467  01F782  0EF5               	movlw	245
 23468  01F784  24E1               	addwf	fsr1l,w,c
 23469  01F786  6E32               	movwf	(btemp+8)^0,c
 23470  01F788  0EFF               	movlw	255
 23471  01F78A  20E2               	addwfc	fsr1h,w,c
 23472  01F78C  6E33               	movwf	(btemp+9)^0,c
 23473  01F78E  5034               	movf	(btemp+10)^0,w,c
 23474  01F790  2632               	addwf	(btemp+8)^0,f,c
 23475  01F792  5035               	movf	(btemp+11)^0,w,c
 23476  01F794  2233               	addwfc	(btemp+9)^0,f,c
 23477                           
 23478                           ;stkvar	_ap @ sp[(-8)+6]
 23479  01F796  0EFF               	movlw	-1
 23480  01F798  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 23481  01F79E  0EFE               	movlw	-2
 23482  01F7A0  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 23483                           
 23484                           ;stkvar	_s @ sp[(-8)+-3]
 23485  01F7A6  0EF5               	movlw	-11
 23486  01F7A8  006F FF8C  F034    	movff	plusw1,btemp+10
 23487  01F7AE  0EF6               	movlw	-10
 23488  01F7B0  006F FF8C  F035    	movff	plusw1,btemp+11
 23489                           
 23490                           ;stkvar	_f @ sp[(-8)+0]
 23491  01F7B6  0EF9               	movlw	-7
 23492  01F7B8  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 23493  01F7BE  0EF8               	movlw	-8
 23494  01F7C0  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 23495                           
 23496                           ;stkvar	_f @ sp[(-8)+0]
 23497  01F7C6  0EFA               	movlw	250
 23498  01F7C8  24E1               	addwf	fsr1l,w,c
 23499  01F7CA  6ED9               	movwf	fsr2l,c
 23500  01F7CC  0EFF               	movlw	255
 23501  01F7CE  20E2               	addwfc	fsr1h,w,c
 23502  01F7D0  6EDA               	movwf	fsr2h,c
 23503  01F7D2  0E00               	movlw	0
 23504  01F7D4  6EDE               	movwf	postinc2,c
 23505  01F7D6  0E00               	movlw	0
 23506  01F7D8  6EDD               	movwf	postdec2,c
 23507                           
 23508                           ;stkvar	_f @ sp[(-8)+0]
 23509  01F7DA  0EFC               	movlw	252
 23510  01F7DC  24E1               	addwf	fsr1l,w,c
 23511  01F7DE  6ED9               	movwf	fsr2l,c
 23512  01F7E0  0EFF               	movlw	255
 23513  01F7E2  20E2               	addwfc	fsr1h,w,c
 23514  01F7E4  6EDA               	movwf	fsr2h,c
 23515  01F7E6  0E00               	movlw	0
 23516  01F7E8  6EDE               	movwf	postinc2,c
 23517  01F7EA  0E00               	movlw	0
 23518  01F7EC  6EDD               	movwf	postdec2,c
 23519                           
 23520                           ;stkvar	_ap @ sp[(-8)+6]
 23521  01F7EE  0EFE               	movlw	254
 23522  01F7F0  24E1               	addwf	fsr1l,w,c
 23523  01F7F2  6E2A               	movwf	btemp^0,c
 23524  01F7F4  0EFF               	movlw	255
 23525  01F7F6  20E2               	addwfc	fsr1h,w,c
 23526  01F7F8  6E2B               	movwf	(btemp+1)^0,c
 23527  01F7FA  0060  F0AB  FFE6   	movff	btemp,postinc1
 23528  01F800  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 23529                           
 23530                           ;stkvar	_fmt @ sp[(-10)+-5]
 23531  01F806  0EF1               	movlw	-15
 23532  01F808  006F FF8F FFE6     	movff	plusw1,postinc1
 23533  01F80E  006F FF8F FFE6     	movff	plusw1,postinc1
 23534                           
 23535                           ;stkvar	_f @ sp[(-12)+0]
 23536  01F814  0EF4               	movlw	244
 23537  01F816  24E1               	addwf	fsr1l,w,c
 23538  01F818  6E2A               	movwf	btemp^0,c
 23539  01F81A  0EFF               	movlw	255
 23540  01F81C  20E2               	addwfc	fsr1h,w,c
 23541  01F81E  6E2B               	movwf	(btemp+1)^0,c
 23542  01F820  0060  F0AB  FFE6   	movff	btemp,postinc1
 23543  01F826  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 23544  01F82C  ECED  F002         	call	_vfprintf	;wreg free
 23545                           
 23546                           ; BSR set to: 0
 23547                           ;stkvar	_f @ sp[(-8)+0]
 23548  01F830  0EFA               	movlw	250
 23549  01F832  24E1               	addwf	fsr1l,w,c
 23550  01F834  6ED9               	movwf	fsr2l,c
 23551  01F836  0EFF               	movlw	255
 23552  01F838  20E2               	addwfc	fsr1h,w,c
 23553  01F83A  6EDA               	movwf	fsr2h,c
 23554  01F83C  006F FF78  F034    	movff	postinc2,btemp+10
 23555  01F842  006F FF74  F035    	movff	postdec2,btemp+11
 23556                           
 23557                           ;stkvar	_s @ sp[(-8)+-3]
 23558  01F848  0EF5               	movlw	-11
 23559  01F84A  006F FF8C  F032    	movff	plusw1,btemp+8
 23560  01F850  0EF6               	movlw	-10
 23561  01F852  006F FF8C  F033    	movff	plusw1,btemp+9
 23562  01F858  5034               	movf	(btemp+10)^0,w,c
 23563  01F85A  2432               	addwf	(btemp+8)^0,w,c
 23564  01F85C  6ED9               	movwf	fsr2l,c
 23565  01F85E  5035               	movf	(btemp+11)^0,w,c
 23566  01F860  2033               	addwfc	(btemp+9)^0,w,c
 23567  01F862  6EDA               	movwf	fsr2h,c
 23568  01F864  0E00               	movlw	0
 23569  01F866  6EDF               	movwf	indf2,c
 23570                           
 23571                           ; BSR set to: 0
 23572                           ; _sprintf: autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 94, args
      +                          ize = 4, vargsize = 0
 23573  01F868  0EF8               	movlw	248
 23574  01F86A  26E1               	addwf	fsr1l,f,c
 23575  01F86C  0EFF               	movlw	255
 23576  01F86E  22E2               	addwfc	fsr1h,f,c
 23577  01F870  52E5               	movf	postdec1,f,c
 23578  01F872  50E7               	movf	indf1,w,c
 23579  01F874  5EE1               	subwf	fsr1l,f,c
 23580  01F876  0E00               	movlw	0
 23581  01F878  5AE2               	subwfb	fsr1h,f,c
 23582  01F87A  0012               	return		;funcret
 23583  01F87C                     __end_of_sprintf:
 23584                           	opt callstack 0
 23585                           
 23586 ;; *************** function _get_vterm_ptr *****************
 23587 ;; Defined at:
 23588 ;;		line 119 in file "mconfig.c"
 23589 ;; Parameters:    Size  Location     Type
 23590 ;;  line            1  [STACK] const unsigned char 
 23591 ;;  vterm           1  [STACK] const unsigned char 
 23592 ;; Auto vars:     Size  Location     Type
 23593 ;;		None
 23594 ;; Return value:  Size  Location     Type
 23595 ;;                  2  [STACK] PTR unsigned char 
 23596 ;; Registers used:
 23597 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, prodl, prodh
 23598 ;; Tracked objects:
 23599 ;;		On entry : 0/2
 23600 ;;		On exit  : 0/0
 23601 ;;		Unchanged: 0/0
 23602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23603 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23604 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23605 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23606 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23607 ;;Total ram usage:        0 bytes
 23608 ;; Hardware stack levels used:    1
 23609 ;; Hardware stack levels required when called:   15
 23610 ;; This function calls:
 23611 ;;		Nothing
 23612 ;; This function is called by:
 23613 ;;		_main
 23614 ;;		_current_sensor_cal
 23615 ;;		_display_history
 23616 ;;		_check_help
 23617 ;;		_vterm_dump
 23618 ;; This function uses a reentrant model
 23619 ;;
 23620                           
 23621                           	psect	text78
 23622  01FFD2                     __ptext78:
 23623                           	opt callstack 0
 23624  01FFD2                     _get_vterm_ptr:
 23625                           	opt callstack 15
 23626                           
 23627                           ;mconfig.c: 119: char * get_vterm_ptr(const uint8_t line, const uint8_t vterm);mconfig.c
      +                          : 120: {;mconfig.c: 121:  return D.lcd[vterm & 0x03][line & 0x03];
 23628                           ;stkvar	_vterm @ sp[(0)+-2]
 23629                           
 23630                           ; BSR set to: 0
 23631                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23632                           ;incstack = 0
 23633  01FFD2  0EFE               	movlw	-2
 23634  01FFD4  50E3               	movf	plusw1,w,c
 23635  01FFD6  0B03               	andlw	3
 23636  01FFD8  0DA0               	mullw	160
 23637  01FFDA  0E3F               	movlw	low _D
 23638  01FFDC  6E2A               	movwf	btemp^0,c
 23639  01FFDE  0E0A               	movlw	high _D
 23640  01FFE0  6E2B               	movwf	(btemp+1)^0,c
 23641  01FFE2  50F3               	movf	243,w,c
 23642  01FFE4  262A               	addwf	btemp^0,f,c
 23643  01FFE6  50F4               	movf	244,w,c
 23644  01FFE8  222B               	addwfc	(btemp+1)^0,f,c
 23645                           
 23646                           ;stkvar	_line @ sp[(0)+-1]
 23647  01FFEA  0EFF               	movlw	-1
 23648  01FFEC  50E3               	movf	plusw1,w,c
 23649  01FFEE  0B03               	andlw	3
 23650  01FFF0  0D28               	mullw	40
 23651  01FFF2  50F3               	movf	243,w,c
 23652  01FFF4  262A               	addwf	btemp^0,f,c
 23653  01FFF6  50F4               	movf	244,w,c
 23654  01FFF8  222B               	addwfc	(btemp+1)^0,f,c
 23655                           
 23656                           ; _get_vterm_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 23657  01FFFA  52E5               	movf	postdec1,f,c
 23658  01FFFC  52E5               	movf	postdec1,f,c
 23659  01FFFE  0012               	return		;funcret
 23660  020000                     __end_of_get_vterm_ptr:
 23661                           	opt callstack 0
 23662                           
 23663 ;; *************** function _WaitMs *****************
 23664 ;; Defined at:
 23665 ;;		line 32 in file "timers.c"
 23666 ;; Parameters:    Size  Location     Type
 23667 ;;  numMilliseco    2  [STACK] const unsigned short 
 23668 ;; Auto vars:     Size  Location     Type
 23669 ;;		None
 23670 ;; Return value:  Size  Location     Type
 23671 ;;                  1  [STACK] void 
 23672 ;; Registers used:
 23673 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 23674 ;; Tracked objects:
 23675 ;;		On entry : 0/2
 23676 ;;		On exit  : 0/0
 23677 ;;		Unchanged: 0/0
 23678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23679 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23680 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23681 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23682 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23683 ;;Total ram usage:        0 bytes
 23684 ;; Hardware stack levels used:    1
 23685 ;; Hardware stack levels required when called:   16
 23686 ;; This function calls:
 23687 ;;		_StartTimer
 23688 ;;		_TimerDone
 23689 ;; This function is called by:
 23690 ;;		_main
 23691 ;;		_current_sensor_cal
 23692 ;;		_display_history
 23693 ;;		_vterm_dump
 23694 ;; This function uses a reentrant model
 23695 ;;
 23696                           
 23697                           	psect	text79
 23698  001E0E                     __ptext79:
 23699                           	opt callstack 0
 23700  001E0E                     _WaitMs:
 23701                           	opt callstack 13
 23702                           
 23703                           ;timers.c: 32: void WaitMs(const uint16_t numMilliseconds);timers.c: 33: {;timers.c: 34:
      +                            StartTimer(TMR_INTERNAL, numMilliseconds);
 23704                           ;stkvar	_numMilliseconds @ sp[(0)+-2]
 23705                           
 23706                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23707                           ;incstack = 0
 23708  001E0E  0EFE               	movlw	-2
 23709  001E10  006F FF8F FFE6     	movff	plusw1,postinc1
 23710  001E16  006F FF8F FFE6     	movff	plusw1,postinc1
 23711  001E1C  0E00               	movlw	0
 23712  001E1E  6EE6               	movwf	postinc1,c
 23713  001E20  ECFA  F00D         	call	_StartTimer	;wreg free
 23714                           
 23715                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
 23716  001E24  D005               	goto	l12766
 23717  001E26                     l1761:
 23718                           
 23719                           ;timers.c: 36:   __nop();
 23720  001E26  F000               	nop	
 23721                           
 23722                           ;timers.c: 37:   __nop();
 23723  001E28  F000               	nop	
 23724                           
 23725                           ;timers.c: 38:   __nop();
 23726  001E2A  F000               	nop	
 23727                           
 23728                           ;timers.c: 39:   __nop();
 23729  001E2C  F000               	nop	
 23730  001E2E  0004               	clrwdt		;# 
 23731  001E30                     l12766:
 23732                           
 23733                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
 23734  001E30  0E00               	movlw	0
 23735  001E32  6EE6               	movwf	postinc1,c
 23736  001E34  EC6F  F010         	call	_TimerDone	;wreg free
 23737  001E38  502A               	movf	btemp^0,w,c
 23738  001E3A  B4D8               	btfsc	status,2,c
 23739  001E3C  D7F4               	goto	l1761
 23740                           
 23741                           ; _WaitMs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 23742  001E3E  52E5               	movf	postdec1,f,c
 23743  001E40  52E5               	movf	postdec1,f,c
 23744  001E42  0012               	return		;funcret
 23745  001E44                     __end_of_WaitMs:
 23746                           	opt callstack 0
 23747                           
 23748 ;; *************** function _update_lcd *****************
 23749 ;; Defined at:
 23750 ;;		line 85 in file "mconfig.c"
 23751 ;; Parameters:    Size  Location     Type
 23752 ;;  vterm           1  [STACK] unsigned char 
 23753 ;; Auto vars:     Size  Location     Type
 23754 ;;		None
 23755 ;; Return value:  Size  Location     Type
 23756 ;;                  1  [STACK] unsigned char 
 23757 ;; Registers used:
 23758 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 23759 ;; Tracked objects:
 23760 ;;		On entry : 0/0
 23761 ;;		On exit  : 0/0
 23762 ;;		Unchanged: 0/0
 23763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23764 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23765 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23766 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23767 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23768 ;;Total ram usage:        0 bytes
 23769 ;; Hardware stack levels used:    1
 23770 ;; Hardware stack levels required when called:   26
 23771 ;; This function calls:
 23772 ;;		_eaDogM_WriteStringAtPos
 23773 ;;		_wait_lcd_done
 23774 ;; This function is called by:
 23775 ;;		_main
 23776 ;;		_current_sensor_cal
 23777 ;;		_display_history
 23778 ;;		_check_help
 23779 ;; This function uses a reentrant model
 23780 ;;
 23781                           
 23782                           	psect	text80
 23783  01E8D6                     __ptext80:
 23784                           	opt callstack 0
 23785  01E8D6                     _update_lcd:
 23786                           	opt callstack 4
 23787                           
 23788                           ;mconfig.c: 85: uint8_t update_lcd(uint8_t vterm);mconfig.c: 86: {;mconfig.c: 87:  vterm
      +                           = vterm & 0x03;
 23789                           ;stkvar	_vterm @ sp[(0)+-1]
 23790                           
 23791                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23792                           ;incstack = 0
 23793  01E8D6  0EFF               	movlw	-1
 23794  01E8D8  006F FF8C  F02A    	movff	plusw1,btemp
 23795  01E8DE  0E03               	movlw	3
 23796  01E8E0  162A               	andwf	btemp^0,f,c
 23797  01E8E2  0EFF               	movlw	-1
 23798  01E8E4  0060  F0AB  FFE3   	movff	btemp,plusw1
 23799                           
 23800                           ;mconfig.c: 89:  if (D.vterm >= 1 && vterm == 0)
 23801  01E8EA  EE23  F0BF         	lfsr	2,_D+640
 23802  01E8EE  A0DF               	btfss	indf2,0,c
 23803  01E8F0  D004               	goto	l16840
 23804                           
 23805                           ;stkvar	_vterm @ sp[(0)+-1]
 23806  01E8F2  0EFF               	movlw	-1
 23807  01E8F4  50E3               	movf	plusw1,w,c
 23808  01E8F6  B4D8               	btfsc	status,2,c
 23809  01E8F8  D09C               	goto	l1837
 23810  01E8FA                     l16840:
 23811                           
 23812                           ;mconfig.c: 92:  D.lcd[vterm][0][20] = 0;
 23813                           ;stkvar	_vterm @ sp[(0)+-1]
 23814  01E8FA  0EFF               	movlw	-1
 23815  01E8FC  50E3               	movf	plusw1,w,c
 23816  01E8FE  0DA0               	mullw	160
 23817  01E900  0E53               	movlw	low (_D+20)
 23818  01E902  24F3               	addwf	243,w,c
 23819  01E904  6ED9               	movwf	fsr2l,c
 23820  01E906  0E0A               	movlw	high (_D+20)
 23821  01E908  20F4               	addwfc	prodh,w,c
 23822  01E90A  6EDA               	movwf	fsr2h,c
 23823  01E90C  0E00               	movlw	0
 23824  01E90E  6EDF               	movwf	indf2,c
 23825                           
 23826                           ;mconfig.c: 93:  D.lcd[vterm][1][20] = 0;
 23827                           ;stkvar	_vterm @ sp[(0)+-1]
 23828  01E910  0EFF               	movlw	-1
 23829  01E912  50E3               	movf	plusw1,w,c
 23830  01E914  0DA0               	mullw	160
 23831  01E916  0E7B               	movlw	low (_D+60)
 23832  01E918  24F3               	addwf	243,w,c
 23833  01E91A  6ED9               	movwf	fsr2l,c
 23834  01E91C  0E0A               	movlw	high (_D+60)
 23835  01E91E  20F4               	addwfc	prodh,w,c
 23836  01E920  6EDA               	movwf	fsr2h,c
 23837  01E922  0E00               	movlw	0
 23838  01E924  6EDF               	movwf	indf2,c
 23839                           
 23840                           ;mconfig.c: 94:  D.lcd[vterm][2][20] = 0;
 23841                           ;stkvar	_vterm @ sp[(0)+-1]
 23842  01E926  0EFF               	movlw	-1
 23843  01E928  50E3               	movf	plusw1,w,c
 23844  01E92A  0DA0               	mullw	160
 23845  01E92C  0EA3               	movlw	low (_D+100)
 23846  01E92E  24F3               	addwf	243,w,c
 23847  01E930  6ED9               	movwf	fsr2l,c
 23848  01E932  0E0A               	movlw	high (_D+100)
 23849  01E934  20F4               	addwfc	prodh,w,c
 23850  01E936  6EDA               	movwf	fsr2h,c
 23851  01E938  0E00               	movlw	0
 23852  01E93A  6EDF               	movwf	indf2,c
 23853                           
 23854                           ;mconfig.c: 95:  D.lcd[vterm][3][20] = 0;
 23855                           ;stkvar	_vterm @ sp[(0)+-1]
 23856  01E93C  0EFF               	movlw	-1
 23857  01E93E  50E3               	movf	plusw1,w,c
 23858  01E940  0DA0               	mullw	160
 23859  01E942  0ECB               	movlw	low (_D+140)
 23860  01E944  24F3               	addwf	243,w,c
 23861  01E946  6ED9               	movwf	fsr2l,c
 23862  01E948  0E0A               	movlw	high (_D+140)
 23863  01E94A  20F4               	addwfc	prodh,w,c
 23864  01E94C  6EDA               	movwf	fsr2h,c
 23865  01E94E  0E00               	movlw	0
 23866  01E950  6EDF               	movwf	indf2,c
 23867                           
 23868                           ;mconfig.c: 96:  wait_lcd_done();
 23869  01E952  ECF4  F011         	call	_wait_lcd_done	;wreg free
 23870                           
 23871                           ; BSR set to: 0
 23872                           ;mconfig.c: 97:  eaDogM_WriteStringAtPos(0, 0, D.lcd[vterm][0]);
 23873                           ;stkvar	_vterm @ sp[(0)+-1]
 23874  01E956  0EFF               	movlw	-1
 23875  01E958  50E3               	movf	plusw1,w,c
 23876  01E95A  0DA0               	mullw	160
 23877  01E95C  0E3F               	movlw	low _D
 23878  01E95E  6E34               	movwf	(btemp+10)^0,c
 23879  01E960  0E0A               	movlw	high _D
 23880  01E962  6E35               	movwf	(btemp+11)^0,c
 23881  01E964  50F3               	movf	243,w,c
 23882  01E966  2634               	addwf	(btemp+10)^0,f,c
 23883  01E968  50F4               	movf	244,w,c
 23884  01E96A  2235               	addwfc	(btemp+11)^0,f,c
 23885  01E96C  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 23886  01E972  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 23887  01E978  0E00               	movlw	0
 23888  01E97A  6EE6               	movwf	postinc1,c
 23889  01E97C  0E00               	movlw	0
 23890  01E97E  6EE6               	movwf	postinc1,c
 23891  01E980  EC70  F005         	call	_eaDogM_WriteStringAtPos	;wreg free
 23892                           
 23893                           ; BSR set to: 59
 23894                           ;mconfig.c: 98:  wait_lcd_done();
 23895  01E984  ECF4  F011         	call	_wait_lcd_done	;wreg free
 23896                           
 23897                           ; BSR set to: 0
 23898                           ;mconfig.c: 99:  eaDogM_WriteStringAtPos(1, 0, D.lcd[vterm][1]);
 23899                           ;stkvar	_vterm @ sp[(0)+-1]
 23900  01E988  0EFF               	movlw	-1
 23901  01E98A  50E3               	movf	plusw1,w,c
 23902  01E98C  0DA0               	mullw	160
 23903  01E98E  0E3F               	movlw	low _D
 23904  01E990  6E34               	movwf	(btemp+10)^0,c
 23905  01E992  0E0A               	movlw	high _D
 23906  01E994  6E35               	movwf	(btemp+11)^0,c
 23907  01E996  0E28               	movlw	40
 23908  01E998  2634               	addwf	(btemp+10)^0,f,c
 23909  01E99A  0E00               	movlw	0
 23910  01E99C  2235               	addwfc	(btemp+11)^0,f,c
 23911  01E99E  50F3               	movf	243,w,c
 23912  01E9A0  2634               	addwf	(btemp+10)^0,f,c
 23913  01E9A2  50F4               	movf	244,w,c
 23914  01E9A4  2235               	addwfc	(btemp+11)^0,f,c
 23915  01E9A6  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 23916  01E9AC  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 23917  01E9B2  0E00               	movlw	0
 23918  01E9B4  6EE6               	movwf	postinc1,c
 23919  01E9B6  0E01               	movlw	1
 23920  01E9B8  6EE6               	movwf	postinc1,c
 23921  01E9BA  EC70  F005         	call	_eaDogM_WriteStringAtPos	;wreg free
 23922                           
 23923                           ; BSR set to: 59
 23924                           ;mconfig.c: 100:  wait_lcd_done();
 23925  01E9BE  ECF4  F011         	call	_wait_lcd_done	;wreg free
 23926                           
 23927                           ; BSR set to: 0
 23928                           ;mconfig.c: 101:  eaDogM_WriteStringAtPos(2, 0, D.lcd[vterm][2]);
 23929                           ;stkvar	_vterm @ sp[(0)+-1]
 23930  01E9C2  0EFF               	movlw	-1
 23931  01E9C4  50E3               	movf	plusw1,w,c
 23932  01E9C6  0DA0               	mullw	160
 23933  01E9C8  0E3F               	movlw	low _D
 23934  01E9CA  6E34               	movwf	(btemp+10)^0,c
 23935  01E9CC  0E0A               	movlw	high _D
 23936  01E9CE  6E35               	movwf	(btemp+11)^0,c
 23937  01E9D0  0E50               	movlw	80
 23938  01E9D2  2634               	addwf	(btemp+10)^0,f,c
 23939  01E9D4  0E00               	movlw	0
 23940  01E9D6  2235               	addwfc	(btemp+11)^0,f,c
 23941  01E9D8  50F3               	movf	243,w,c
 23942  01E9DA  2634               	addwf	(btemp+10)^0,f,c
 23943  01E9DC  50F4               	movf	244,w,c
 23944  01E9DE  2235               	addwfc	(btemp+11)^0,f,c
 23945  01E9E0  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 23946  01E9E6  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 23947  01E9EC  0E00               	movlw	0
 23948  01E9EE  6EE6               	movwf	postinc1,c
 23949  01E9F0  0E02               	movlw	2
 23950  01E9F2  6EE6               	movwf	postinc1,c
 23951  01E9F4  EC70  F005         	call	_eaDogM_WriteStringAtPos	;wreg free
 23952                           
 23953                           ; BSR set to: 59
 23954                           ;mconfig.c: 102:  wait_lcd_done();
 23955  01E9F8  ECF4  F011         	call	_wait_lcd_done	;wreg free
 23956                           
 23957                           ; BSR set to: 0
 23958                           ;mconfig.c: 103:  eaDogM_WriteStringAtPos(3, 0, D.lcd[vterm][3]);
 23959                           ;stkvar	_vterm @ sp[(0)+-1]
 23960  01E9FC  0EFF               	movlw	-1
 23961  01E9FE  50E3               	movf	plusw1,w,c
 23962  01EA00  0DA0               	mullw	160
 23963  01EA02  0E3F               	movlw	low _D
 23964  01EA04  6E34               	movwf	(btemp+10)^0,c
 23965  01EA06  0E0A               	movlw	high _D
 23966  01EA08  6E35               	movwf	(btemp+11)^0,c
 23967  01EA0A  0E78               	movlw	120
 23968  01EA0C  2634               	addwf	(btemp+10)^0,f,c
 23969  01EA0E  0E00               	movlw	0
 23970  01EA10  2235               	addwfc	(btemp+11)^0,f,c
 23971  01EA12  50F3               	movf	243,w,c
 23972  01EA14  2634               	addwf	(btemp+10)^0,f,c
 23973  01EA16  50F4               	movf	244,w,c
 23974  01EA18  2235               	addwfc	(btemp+11)^0,f,c
 23975  01EA1A  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 23976  01EA20  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 23977  01EA26  0E00               	movlw	0
 23978  01EA28  6EE6               	movwf	postinc1,c
 23979  01EA2A  0E03               	movlw	3
 23980  01EA2C  6EE6               	movwf	postinc1,c
 23981  01EA2E  EC70  F005         	call	_eaDogM_WriteStringAtPos	;wreg free
 23982  01EA32                     l1837:
 23983                           
 23984                           ; _update_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
 23985  01EA32  52E5               	movf	postdec1,f,c
 23986  01EA34  0012               	return		;funcret
 23987  01EA36                     __end_of_update_lcd:
 23988                           	opt callstack 0
 23989                           
 23990 ;; *************** function _eaDogM_WriteStringAtPos *****************
 23991 ;; Defined at:
 23992 ;;		line 195 in file "eadog.c"
 23993 ;; Parameters:    Size  Location     Type
 23994 ;;  r               1  [STACK] const unsigned char 
 23995 ;;  c               1  [STACK] const unsigned char 
 23996 ;;  strPtr          2  [STACK] PTR unsigned char 
 23997 ;;		 -> D.lcd(640), D(642), V(181), 
 23998 ;; Auto vars:     Size  Location     Type
 23999 ;;  row             1  [STACK] unsigned char 
 24000 ;; Return value:  Size  Location     Type
 24001 ;;                  1  [STACK] void 
 24002 ;; Registers used:
 24003 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 24004 ;; Tracked objects:
 24005 ;;		On entry : 3F/0
 24006 ;;		On exit  : 3F/3B
 24007 ;;		Unchanged: 0/0
 24008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24009 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24010 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24011 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24012 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24013 ;;Total ram usage:        0 bytes
 24014 ;; Hardware stack levels used:    1
 24015 ;; Hardware stack levels required when called:   25
 24016 ;; This function calls:
 24017 ;;		_eaDogM_WriteString
 24018 ;;		_send_lcd_cmd_dma
 24019 ;;		_send_lcd_data_dma
 24020 ;;		_wait_lcd_done
 24021 ;; This function is called by:
 24022 ;;		_update_lcd
 24023 ;;		_vterm_dump
 24024 ;; This function uses a reentrant model
 24025 ;;
 24026                           
 24027                           	psect	text81
 24028  000AE0                     __ptext81:
 24029                           	opt callstack 0
 24030  000AE0                     _eaDogM_WriteStringAtPos:
 24031                           	opt callstack 0
 24032                           
 24033                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24034  000AE0  52E6               	movf	postinc1,f,c
 24035                           
 24036                           ;eadog.c: 195: void eaDogM_WriteStringAtPos(const uint8_t r, const uint8_t c, char *strP
      +                          tr);eadog.c: 196: {;eadog.c: 197:  uint8_t row;;eadog.c: 199:  switch (r) {
 24037                           
 24038                           ;incstack = 0
 24039  000AE2  D013               	goto	l16786
 24040  000AE4                     l16774:
 24041                           
 24042                           ;eadog.c: 201:   row = 0x40;
 24043                           ;stkvar	_row @ sp[(-1)+0]
 24044  000AE4  0EFF               	movlw	-1
 24045  000AE6  6AE3               	clrf	plusw1,c
 24046  000AE8  8CE3               	bsf	plusw1,6,c
 24047                           
 24048                           ;eadog.c: 202:   break;
 24049  000AEA  D025               	goto	l16788
 24050  000AEC                     l16776:
 24051                           
 24052                           ;eadog.c: 204:   row = 0x14;
 24053                           ;stkvar	_row @ sp[(-1)+0]
 24054  000AEC  0EFF               	movlw	-1
 24055  000AEE  6AE3               	clrf	plusw1,c
 24056  000AF0  84E3               	bsf	plusw1,2,c
 24057  000AF2  88E3               	bsf	plusw1,4,c	;indir
 24058                           
 24059                           ;eadog.c: 205:   break;
 24060  000AF4  D020               	goto	l16788
 24061  000AF6                     l16778:
 24062                           
 24063                           ;eadog.c: 207:   row = 0x54;
 24064  000AF6  0E54               	movlw	84
 24065  000AF8  6E35               	movwf	(btemp+11)^0,c
 24066                           
 24067                           ;stkvar	_row @ sp[(-1)+0]
 24068  000AFA  0EFF               	movlw	-1
 24069  000AFC  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 24070                           
 24071                           ;eadog.c: 208:   break;
 24072  000B02  D019               	goto	l16788
 24073  000B04                     l16780:
 24074                           
 24075                           ;eadog.c: 210:   row = 0x00;
 24076                           ;stkvar	_row @ sp[(-1)+0]
 24077  000B04  0EFF               	movlw	-1
 24078  000B06  6AE3               	clrf	plusw1,c
 24079                           
 24080                           ;eadog.c: 211:   break;
 24081  000B08  D016               	goto	l16788
 24082  000B0A                     l16786:
 24083                           
 24084                           ;stkvar	_r @ sp[(-1)+-1]
 24085  000B0A  0EFE               	movlw	-2
 24086  000B0C  50E3               	movf	plusw1,w,c
 24087  000B0E  6E34               	movwf	(btemp+10)^0,c
 24088  000B10  6A35               	clrf	(btemp+11)^0,c
 24089                           
 24090                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 24091                           ; Switch size 1, requested type "simple"
 24092                           ; Number of cases is 1, Range of values is 0 to 0
 24093                           ; switch strategies available:
 24094                           ; Name         Instructions Cycles
 24095                           ; simple_byte            4     3 (average)
 24096                           ;	Chosen strategy is simple_byte
 24097  000B12  5035               	movf	(btemp+11)^0,w,c
 24098  000B14  0A00               	xorlw	0	; case 0
 24099  000B16  A4D8               	btfss	status,2,c
 24100  000B18  D7E5               	goto	l16774
 24101                           
 24102                           ; Switch size 1, requested type "simple"
 24103                           ; Number of cases is 4, Range of values is 0 to 3
 24104                           ; switch strategies available:
 24105                           ; Name         Instructions Cycles
 24106                           ; simple_byte           13     7 (average)
 24107                           ;	Chosen strategy is simple_byte
 24108  000B1A  5034               	movf	(btemp+10)^0,w,c
 24109  000B1C  0A00               	xorlw	0	; case 0
 24110  000B1E  B4D8               	btfsc	status,2,c
 24111  000B20  D7E1               	goto	l16774
 24112  000B22  0A01               	xorlw	1	; case 1
 24113  000B24  B4D8               	btfsc	status,2,c
 24114  000B26  D7E2               	goto	l16776
 24115  000B28  0A03               	xorlw	3	; case 2
 24116  000B2A  B4D8               	btfsc	status,2,c
 24117  000B2C  D7E4               	goto	l16778
 24118  000B2E  0A01               	xorlw	1	; case 3
 24119  000B30  B4D8               	btfsc	status,2,c
 24120  000B32  D7E8               	goto	l16780
 24121  000B34  D7D7               	goto	l16774
 24122  000B36                     l16788:
 24123                           
 24124                           ;eadog.c: 216:  send_lcd_cmd_dma(0x45);
 24125  000B36  0E45               	movlw	69
 24126  000B38  6EE6               	movwf	postinc1,c
 24127  000B3A  EC67  F012         	call	_send_lcd_cmd_dma	;wreg free
 24128                           
 24129                           ;eadog.c: 217:  send_lcd_data_dma(row + c);
 24130                           ;stkvar	_c @ sp[(-1)+-2]
 24131  000B3E  0EFD               	movlw	-3
 24132  000B40  006F FF8C  F035    	movff	plusw1,btemp+11
 24133                           
 24134                           ;stkvar	_row @ sp[(-1)+0]
 24135  000B46  0EFF               	movlw	-1
 24136  000B48  50E3               	movf	plusw1,w,c
 24137  000B4A  2435               	addwf	(btemp+11)^0,w,c
 24138  000B4C  6EE6               	movwf	postinc1,c
 24139  000B4E  EC0E  F00D         	call	_send_lcd_data_dma	;wreg free
 24140                           
 24141                           ; BSR set to: 59
 24142                           ;eadog.c: 218:  wait_lcd_done();
 24143  000B52  ECF4  F011         	call	_wait_lcd_done	;wreg free
 24144                           
 24145                           ; BSR set to: 0
 24146                           ;eadog.c: 219:  eaDogM_WriteString(strPtr);
 24147                           ;stkvar	_strPtr @ sp[(-1)+-4]
 24148  000B56  0EFB               	movlw	-5
 24149  000B58  006F FF8F FFE6     	movff	plusw1,postinc1
 24150  000B5E  006F FF8F FFE6     	movff	plusw1,postinc1
 24151  000B64  EC98  F003         	call	_eaDogM_WriteString	;wreg free
 24152                           
 24153                           ; BSR set to: 59
 24154                           ; _eaDogM_WriteStringAtPos: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 4, argsize = 4, vargsize = 0
 24155  000B68  0EFB               	movlw	251
 24156  000B6A  26E1               	addwf	fsr1l,f,c
 24157  000B6C  0EFF               	movlw	255
 24158  000B6E  22E2               	addwfc	fsr1h,f,c
 24159  000B70  0012               	return		;funcret
 24160  000B72                     __end_of_eaDogM_WriteStringAtPos:
 24161                           	opt callstack 0
 24162                           
 24163 ;; *************** function _send_lcd_cmd_dma *****************
 24164 ;; Defined at:
 24165 ;;		line 171 in file "eadog.c"
 24166 ;; Parameters:    Size  Location     Type
 24167 ;;  strPtr          1  [STACK] const unsigned char 
 24168 ;; Auto vars:     Size  Location     Type
 24169 ;;		None
 24170 ;; Return value:  Size  Location     Type
 24171 ;;                  1  [STACK] void 
 24172 ;; Registers used:
 24173 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 24174 ;; Tracked objects:
 24175 ;;		On entry : 0/3D
 24176 ;;		On exit  : 3F/0
 24177 ;;		Unchanged: 0/0
 24178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24179 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24180 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24181 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24182 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24183 ;;Total ram usage:        0 bytes
 24184 ;; Hardware stack levels used:    1
 24185 ;; Hardware stack levels required when called:   18
 24186 ;; This function calls:
 24187 ;;		_send_lcd_data_dma
 24188 ;;		_wait_lcd_done
 24189 ;; This function is called by:
 24190 ;;		_eaDogM_WriteStringAtPos
 24191 ;;		_eaDogM_WriteCommand
 24192 ;; This function uses a reentrant model
 24193 ;;
 24194                           
 24195                           	psect	text82
 24196  0024CE                     __ptext82:
 24197                           	opt callstack 0
 24198  0024CE                     _send_lcd_cmd_dma:
 24199                           	opt callstack 10
 24200                           
 24201                           ;eadog.c: 171: void send_lcd_cmd_dma(const uint8_t strPtr);eadog.c: 172: {;eadog.c: 173:
      +                            send_lcd_data_dma(0xFE);
 24202                           
 24203                           ; BSR set to: 59
 24204                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24205                           ;incstack = 0
 24206  0024CE  0EFE               	movlw	254
 24207  0024D0  6EE6               	movwf	postinc1,c
 24208  0024D2  EC0E  F00D         	call	_send_lcd_data_dma	;wreg free
 24209                           
 24210                           ; BSR set to: 59
 24211                           ;eadog.c: 174:  wait_lcd_done();
 24212  0024D6  ECF4  F011         	call	_wait_lcd_done	;wreg free
 24213                           
 24214                           ; BSR set to: 0
 24215                           ;eadog.c: 175:  send_lcd_data_dma(strPtr);
 24216                           ;stkvar	_strPtr @ sp[(0)+-1]
 24217  0024DA  0EFF               	movlw	-1
 24218  0024DC  50E3               	movf	plusw1,w,c
 24219  0024DE  6EE6               	movwf	postinc1,c
 24220  0024E0  EC0E  F00D         	call	_send_lcd_data_dma	;wreg free
 24221                           
 24222                           ;eadog.c: 176:  wait_lcd_done();
 24223  0024E4  ECF4  F011         	call	_wait_lcd_done	;wreg free
 24224                           
 24225                           ; BSR set to: 0
 24226                           ; _send_lcd_cmd_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 24227  0024E8  52E5               	movf	postdec1,f,c
 24228  0024EA  0012               	return		;funcret
 24229  0024EC                     __end_of_send_lcd_cmd_dma:
 24230                           	opt callstack 0
 24231                           
 24232 ;; *************** function _wait_lcd_done *****************
 24233 ;; Defined at:
 24234 ;;		line 443 in file "eadog.c"
 24235 ;; Parameters:    Size  Location     Type
 24236 ;;		None
 24237 ;; Auto vars:     Size  Location     Type
 24238 ;;		None
 24239 ;; Return value:  Size  Location     Type
 24240 ;;                  1  [STACK] void 
 24241 ;; Registers used:
 24242 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
 24243 ;; Tracked objects:
 24244 ;;		On entry : 0/2
 24245 ;;		On exit  : 3F/0
 24246 ;;		Unchanged: 0/0
 24247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24248 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24249 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24251 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24252 ;;Total ram usage:        0 bytes
 24253 ;; Hardware stack levels used:    1
 24254 ;; Hardware stack levels required when called:   16
 24255 ;; This function calls:
 24256 ;;		_wdtdelay
 24257 ;; This function is called by:
 24258 ;;		_main
 24259 ;;		_send_lcd_cmd_dma
 24260 ;;		_eaDogM_WriteStringAtPos
 24261 ;;		_update_lcd
 24262 ;;		_vterm_dump
 24263 ;; This function uses a reentrant model
 24264 ;;
 24265                           
 24266                           	psect	text83
 24267  0023E8                     __ptext83:
 24268                           	opt callstack 0
 24269  0023E8                     _wait_lcd_done:
 24270                           	opt callstack 14
 24271                           
 24272                           ;eadog.c: 445:  while (spi_link.LCD_DATA);
 24273                           
 24274                           ; BSR set to: 0
 24275                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24276                           ;incstack = 0
 24277  0023E8  0100               	movlb	0	; () banked
 24278  0023EA  B760               	btfsc	_spi_link& (0+255),3,b	;volatile
 24279  0023EC  D7FD               	goto	_wait_lcd_done
 24280  0023EE                     u10840:
 24281  0023EE  013D               	movlb	61	; () banked
 24282  0023F0  AB17               	btfss	23,5,b	;volatile
 24283  0023F2  D7FD               	goto	u10840
 24284                           
 24285                           ; BSR set to: 61
 24286                           ;eadog.c: 447:  wdtdelay(50);
 24287  0023F4  0E32               	movlw	50
 24288  0023F6  6EE6               	movwf	postinc1,c
 24289  0023F8  0E00               	movlw	0
 24290  0023FA  6EE6               	movwf	postinc1,c
 24291  0023FC  0E00               	movlw	0
 24292  0023FE  6EE6               	movwf	postinc1,c
 24293  002400  0E00               	movlw	0
 24294  002402  6EE6               	movwf	postinc1,c
 24295  002404  EC59  F00B         	call	_wdtdelay	;wreg free
 24296                           
 24297                           ; BSR set to: 0
 24298                           ; _wait_lcd_done: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
 24299  002408  0012               	return		;funcret
 24300  00240A                     __end_of_wait_lcd_done:
 24301                           	opt callstack 0
 24302                           
 24303 ;; *************** function _wdtdelay *****************
 24304 ;; Defined at:
 24305 ;;		line 23 in file "eadog.c"
 24306 ;; Parameters:    Size  Location     Type
 24307 ;;  delay           4  [STACK] const unsigned long 
 24308 ;; Auto vars:     Size  Location     Type
 24309 ;;		None
 24310 ;; Return value:  Size  Location     Type
 24311 ;;                  1  [STACK] void 
 24312 ;; Registers used:
 24313 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
 24314 ;; Tracked objects:
 24315 ;;		On entry : 2/3D
 24316 ;;		On exit  : 3F/0
 24317 ;;		Unchanged: 0/0
 24318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24319 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24320 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24322 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24323 ;;Total ram usage:        0 bytes
 24324 ;; Hardware stack levels used:    1
 24325 ;; Hardware stack levels required when called:   15
 24326 ;; This function calls:
 24327 ;;		Nothing
 24328 ;; This function is called by:
 24329 ;;		_init_display
 24330 ;;		_send_lcd_data
 24331 ;;		_send_lcd_cmd
 24332 ;;		_send_lcd_cmd_long
 24333 ;;		_wait_lcd_done
 24334 ;; This function uses a reentrant model
 24335 ;;
 24336                           
 24337                           	psect	text84
 24338  0016B2                     __ptext84:
 24339                           	opt callstack 0
 24340  0016B2                     _wdtdelay:
 24341                           	opt callstack 14
 24342                           
 24343                           ;eadog.c: 23: void wdtdelay(const uint32_t delay);eadog.c: 24: {;eadog.c: 25:  static ui
      +                          nt32_t dcount;;eadog.c: 27:  for (dcount = 0; dcount <= delay; dcount++) {
 24344                           
 24345                           ; BSR set to: 0
 24346                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24347                           ;incstack = 0
 24348  0016B2  0100               	movlb	0	; () banked
 24349  0016B4  6B90               	clrf	wdtdelay@dcount& (0+255),b
 24350  0016B6  6B91               	clrf	(wdtdelay@dcount+1)& (0+255),b
 24351  0016B8  6B92               	clrf	(wdtdelay@dcount+2)& (0+255),b
 24352  0016BA  6B93               	clrf	(wdtdelay@dcount+3)& (0+255),b
 24353  0016BC                     l1614:
 24354                           
 24355                           ; BSR set to: 0
 24356                           ;eadog.c: 28:   __nop();
 24357  0016BC  F000               	nop	
 24358  0016BE  0004               	clrwdt		;# 
 24359                           
 24360                           ;eadog.c: 30:  };
 24361  0016C0  0E01               	movlw	1
 24362  0016C2  0100               	movlb	0	; () banked
 24363  0016C4  2790               	addwf	wdtdelay@dcount& (0+255),f,b
 24364  0016C6  0E00               	movlw	0
 24365  0016C8  2391               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
 24366  0016CA  2392               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
 24367  0016CC  2393               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
 24368                           
 24369                           ; BSR set to: 0
 24370                           ;stkvar	_delay @ sp[(0)+-4]
 24371  0016CE  0EFC               	movlw	-4
 24372  0016D0  006F FF8C  F02A    	movff	plusw1,btemp
 24373  0016D6  5190               	movf	wdtdelay@dcount& (0+255),w,b
 24374  0016D8  5C2A               	subwf	btemp^0,w,c
 24375  0016DA  0EFD               	movlw	-3
 24376  0016DC  006F FF8C  F02A    	movff	plusw1,btemp
 24377  0016E2  5191               	movf	(wdtdelay@dcount+1)& (0+255),w,b
 24378  0016E4  582A               	subwfb	btemp^0,w,c
 24379  0016E6  0EFE               	movlw	-2
 24380  0016E8  006F FF8C  F02A    	movff	plusw1,btemp
 24381  0016EE  5192               	movf	(wdtdelay@dcount+2)& (0+255),w,b
 24382  0016F0  582A               	subwfb	btemp^0,w,c
 24383  0016F2  0EFF               	movlw	-1
 24384  0016F4  006F FF8C  F02A    	movff	plusw1,btemp
 24385  0016FA  5193               	movf	(wdtdelay@dcount+3)& (0+255),w,b
 24386  0016FC  582A               	subwfb	btemp^0,w,c
 24387  0016FE  B0D8               	btfsc	status,0,c
 24388  001700  D7DD               	goto	l1614
 24389                           
 24390                           ; BSR set to: 0
 24391                           ; _wdtdelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
 24392  001702  52E5               	movf	postdec1,f,c
 24393  001704  52E5               	movf	postdec1,f,c
 24394  001706  52E5               	movf	postdec1,f,c
 24395  001708  52E5               	movf	postdec1,f,c
 24396  00170A  0012               	return		;funcret
 24397  00170C                     __end_of_wdtdelay:
 24398                           	opt callstack 0
 24399                           
 24400 ;; *************** function _send_lcd_data_dma *****************
 24401 ;; Defined at:
 24402 ;;		line 182 in file "eadog.c"
 24403 ;; Parameters:    Size  Location     Type
 24404 ;;  strPtr          1  [STACK] const unsigned char 
 24405 ;; Auto vars:     Size  Location     Type
 24406 ;;		None
 24407 ;; Return value:  Size  Location     Type
 24408 ;;                  1  [STACK] void 
 24409 ;; Registers used:
 24410 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 24411 ;; Tracked objects:
 24412 ;;		On entry : 0/0
 24413 ;;		On exit  : 3F/3B
 24414 ;;		Unchanged: 0/0
 24415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24416 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24417 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24419 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24420 ;;Total ram usage:        0 bytes
 24421 ;; Hardware stack levels used:    1
 24422 ;; Hardware stack levels required when called:   17
 24423 ;; This function calls:
 24424 ;;		_ringBufS_flush
 24425 ;;		_ringBufS_put_dma
 24426 ;;		_start_lcd
 24427 ;;		_wait_lcd_set
 24428 ;; This function is called by:
 24429 ;;		_send_lcd_cmd_dma
 24430 ;;		_eaDogM_WriteStringAtPos
 24431 ;; This function uses a reentrant model
 24432 ;;
 24433                           
 24434                           	psect	text85
 24435  001A1C                     __ptext85:
 24436                           	opt callstack 0
 24437  001A1C                     _send_lcd_data_dma:
 24438                           	opt callstack 11
 24439                           
 24440                           ;eadog.c: 182: void send_lcd_data_dma(const uint8_t strPtr);eadog.c: 183: {;eadog.c: 184
      +                          :  wait_lcd_set();
 24441                           
 24442                           ; BSR set to: 0
 24443                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24444                           ;incstack = 0
 24445  001A1C  EC94  F013         	call	_wait_lcd_set	;wreg free
 24446                           
 24447                           ; BSR set to: 0
 24448                           ;eadog.c: 186:  ringBufS_flush(spi_link.tx1a, 0);
 24449  001A20  0E00               	movlw	0
 24450  001A22  6EE6               	movwf	postinc1,c
 24451  001A24  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
 24452  001A2A  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
 24453  001A30  ECB9  F005         	call	_ringBufS_flush	;wreg free
 24454  001A34  94BC               	bcf	188,2,c	;volatile
 24455                           
 24456                           ;eadog.c: 188:  DMA1CON0bits.EN = 0;
 24457  001A36  013B               	movlb	59	; () banked
 24458  001A38  9FFC               	bcf	252,7,b	;volatile
 24459                           
 24460                           ; BSR set to: 59
 24461                           ;eadog.c: 189:  DMA1SSZ = 1;
 24462  001A3A  0E00               	movlw	0
 24463  001A3C  6FF8               	movwf	248,b	;volatile
 24464  001A3E  0E01               	movlw	1
 24465  001A40  6FF7               	movwf	247,b	;volatile
 24466                           
 24467                           ; BSR set to: 59
 24468                           ;eadog.c: 190:  DMA1CON0bits.EN = 1;
 24469  001A42  8FFC               	bsf	252,7,b	;volatile
 24470                           
 24471                           ; BSR set to: 59
 24472                           ;eadog.c: 191:  ringBufS_put_dma(spi_link.tx1a, strPtr);
 24473                           ;stkvar	_strPtr @ sp[(0)+-1]
 24474  001A44  0EFF               	movlw	-1
 24475  001A46  50E3               	movf	plusw1,w,c
 24476  001A48  6EE6               	movwf	postinc1,c
 24477  001A4A  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
 24478  001A50  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
 24479  001A56  EC43  F003         	call	_ringBufS_put_dma	;wreg free
 24480                           
 24481                           ;eadog.c: 192:  start_lcd();
 24482  001A5A  EC97  F013         	call	_start_lcd	;wreg free
 24483                           
 24484                           ; BSR set to: 59
 24485                           ; _send_lcd_data_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
 24486  001A5E  52E5               	movf	postdec1,f,c
 24487  001A60  0012               	return		;funcret
 24488  001A62                     __end_of_send_lcd_data_dma:
 24489                           	opt callstack 0
 24490                           
 24491 ;; *************** function _eaDogM_WriteString *****************
 24492 ;; Defined at:
 24493 ;;		line 151 in file "eadog.c"
 24494 ;; Parameters:    Size  Location     Type
 24495 ;;  strPtr          2  [STACK] PTR unsigned char 
 24496 ;;		 -> D.lcd(640), D(642), V(181), 
 24497 ;; Auto vars:     Size  Location     Type
 24498 ;;		None
 24499 ;; Return value:  Size  Location     Type
 24500 ;;                  1  [STACK] void 
 24501 ;; Registers used:
 24502 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 24503 ;; Tracked objects:
 24504 ;;		On entry : 3F/0
 24505 ;;		On exit  : 3F/3B
 24506 ;;		Unchanged: 0/0
 24507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24508 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24509 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24510 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24511 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24512 ;;Total ram usage:        0 bytes
 24513 ;; Hardware stack levels used:    1
 24514 ;; Hardware stack levels required when called:   24
 24515 ;; This function calls:
 24516 ;;		_printf
 24517 ;;		_ringBufS_flush
 24518 ;;		_start_lcd
 24519 ;;		_strlen
 24520 ;;		_wait_lcd_set
 24521 ;; This function is called by:
 24522 ;;		_eaDogM_WriteStringAtPos
 24523 ;; This function uses a reentrant model
 24524 ;;
 24525                           
 24526                           	psect	text86
 24527  000730                     __ptext86:
 24528                           	opt callstack 0
 24529  000730                     _eaDogM_WriteString:
 24530                           	opt callstack 4
 24531                           
 24532                           ;eadog.c: 151: void eaDogM_WriteString(char *strPtr);eadog.c: 152: {;eadog.c: 153:  wait
      +                          _lcd_set();
 24533                           
 24534                           ; BSR set to: 59
 24535                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24536                           ;incstack = 0
 24537  000730  EC94  F013         	call	_wait_lcd_set	;wreg free
 24538                           
 24539                           ; BSR set to: 0
 24540                           ;eadog.c: 155:  ringBufS_flush(spi_link.tx1a, 0);
 24541  000734  0E00               	movlw	0
 24542  000736  6EE6               	movwf	postinc1,c
 24543  000738  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
 24544  00073E  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
 24545  000744  ECB9  F005         	call	_ringBufS_flush	;wreg free
 24546  000748  94BC               	bcf	188,2,c	;volatile
 24547                           
 24548                           ;eadog.c: 157:  if (strlen(strPtr) > 64) strPtr[64] = 0;
 24549                           ;stkvar	_strPtr @ sp[(0)+-2]
 24550  00074A  0EFE               	movlw	-2
 24551  00074C  006F FF8F FFE6     	movff	plusw1,postinc1
 24552  000752  006F FF8F FFE6     	movff	plusw1,postinc1
 24553  000758  EC3D  F004         	call	_strlen	;wreg free
 24554  00075C  502B               	movf	(btemp+1)^0,w,c
 24555  00075E  E104               	bnz	u16070
 24556  000760  0E41               	movlw	65
 24557  000762  5C2A               	subwf	btemp^0,w,c
 24558  000764  A0D8               	btfss	status,0,c
 24559  000766  D010               	goto	l16518
 24560  000768                     u16070:
 24561                           
 24562                           ;stkvar	_strPtr @ sp[(0)+-2]
 24563  000768  0EFE               	movlw	-2
 24564  00076A  006F FF8C  F034    	movff	plusw1,btemp+10
 24565  000770  0EFF               	movlw	-1
 24566  000772  006F FF8C  F035    	movff	plusw1,btemp+11
 24567  000778  0E40               	movlw	64
 24568  00077A  2434               	addwf	(btemp+10)^0,w,c
 24569  00077C  6ED9               	movwf	fsr2l,c
 24570  00077E  0E00               	movlw	0
 24571  000780  2035               	addwfc	(btemp+11)^0,w,c
 24572  000782  6EDA               	movwf	fsr2h,c
 24573  000784  0E00               	movlw	0
 24574  000786  6EDF               	movwf	indf2,c
 24575  000788                     l16518:
 24576                           
 24577                           ;eadog.c: 158:  DMA1CON0bits.EN = 0;
 24578  000788  013B               	movlb	59	; () banked
 24579  00078A  9FFC               	bcf	252,7,b	;volatile
 24580                           
 24581                           ; BSR set to: 59
 24582                           ;eadog.c: 159:  DMA1SSZ = strlen(strPtr);
 24583                           ;stkvar	_strPtr @ sp[(0)+-2]
 24584  00078C  0EFE               	movlw	-2
 24585  00078E  006F FF8F FFE6     	movff	plusw1,postinc1
 24586  000794  006F FF8F FFE6     	movff	plusw1,postinc1
 24587  00079A  EC3D  F004         	call	_strlen	;wreg free
 24588  00079E  0060  F0AB  FBF7   	movff	btemp,15351	;volatile
 24589  0007A4  0060  F0AF  FBF8   	movff	btemp+1,15352	;volatile
 24590                           
 24591                           ;eadog.c: 160:  DMA1CON0bits.EN = 1;
 24592  0007AA  013B               	movlb	59	; () banked
 24593  0007AC  8FFC               	bsf	252,7,b	;volatile
 24594                           
 24595                           ; BSR set to: 59
 24596                           ;eadog.c: 161:  printf("%s", strPtr);
 24597                           ;stkvar	_strPtr @ sp[(0)+-2]
 24598  0007AE  0EFE               	movlw	-2
 24599  0007B0  006F FF8F FFE6     	movff	plusw1,postinc1
 24600  0007B6  006F FF8F FFE6     	movff	plusw1,postinc1
 24601  0007BC  0EFC               	movlw	low STR_69
 24602  0007BE  6EE6               	movwf	postinc1,c
 24603  0007C0  0EFF               	movlw	high STR_69
 24604  0007C2  6EE6               	movwf	postinc1,c
 24605  0007C4  0E04               	movlw	4
 24606  0007C6  6EE6               	movwf	postinc1,c
 24607  0007C8  EC6B  F00A         	call	_printf	;wreg free
 24608                           
 24609                           ; BSR set to: 0
 24610                           ;eadog.c: 162:  start_lcd();
 24611  0007CC  EC97  F013         	call	_start_lcd	;wreg free
 24612                           
 24613                           ; BSR set to: 59
 24614                           ; _eaDogM_WriteString: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 24615  0007D0  52E5               	movf	postdec1,f,c
 24616  0007D2  52E5               	movf	postdec1,f,c
 24617  0007D4  0012               	return		;funcret
 24618  0007D6                     __end_of_eaDogM_WriteString:
 24619                           	opt callstack 0
 24620                           
 24621 ;; *************** function _wait_lcd_set *****************
 24622 ;; Defined at:
 24623 ;;		line 433 in file "eadog.c"
 24624 ;; Parameters:    Size  Location     Type
 24625 ;;		None
 24626 ;; Auto vars:     Size  Location     Type
 24627 ;;		None
 24628 ;; Return value:  Size  Location     Type
 24629 ;;                  1  [STACK] void 
 24630 ;; Registers used:
 24631 ;;		None
 24632 ;; Tracked objects:
 24633 ;;		On entry : 0/0
 24634 ;;		On exit  : 3F/0
 24635 ;;		Unchanged: 0/0
 24636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24637 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24638 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24639 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24640 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24641 ;;Total ram usage:        0 bytes
 24642 ;; Hardware stack levels used:    1
 24643 ;; Hardware stack levels required when called:   15
 24644 ;; This function calls:
 24645 ;;		Nothing
 24646 ;; This function is called by:
 24647 ;;		_eaDogM_WriteString
 24648 ;;		_send_lcd_data_dma
 24649 ;; This function uses a reentrant model
 24650 ;;
 24651                           
 24652                           	psect	text87
 24653  002728                     __ptext87:
 24654                           	opt callstack 0
 24655  002728                     _wait_lcd_set:
 24656                           	opt callstack 12
 24657                           
 24658                           ;eadog.c: 435:  spi_link.LCD_DATA = 1;
 24659                           
 24660                           ; BSR set to: 59
 24661                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24662                           ;incstack = 0
 24663  002728  0100               	movlb	0	; () banked
 24664  00272A  8760               	bsf	_spi_link& (0+255),3,b	;volatile
 24665                           
 24666                           ; BSR set to: 0
 24667                           ; _wait_lcd_set: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 24668  00272C  0012               	return		;funcret
 24669  00272E                     __end_of_wait_lcd_set:
 24670                           	opt callstack 0
 24671                           
 24672 ;; *************** function _start_lcd *****************
 24673 ;; Defined at:
 24674 ;;		line 428 in file "eadog.c"
 24675 ;; Parameters:    Size  Location     Type
 24676 ;;		None
 24677 ;; Auto vars:     Size  Location     Type
 24678 ;;		None
 24679 ;; Return value:  Size  Location     Type
 24680 ;;                  1  [STACK] void 
 24681 ;; Registers used:
 24682 ;;		None
 24683 ;; Tracked objects:
 24684 ;;		On entry : 0/3B
 24685 ;;		On exit  : 3F/3B
 24686 ;;		Unchanged: 0/0
 24687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24688 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24689 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24690 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24691 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24692 ;;Total ram usage:        0 bytes
 24693 ;; Hardware stack levels used:    1
 24694 ;; Hardware stack levels required when called:   15
 24695 ;; This function calls:
 24696 ;;		Nothing
 24697 ;; This function is called by:
 24698 ;;		_eaDogM_WriteString
 24699 ;;		_send_lcd_data_dma
 24700 ;; This function uses a reentrant model
 24701 ;;
 24702                           
 24703                           	psect	text88
 24704  00272E                     __ptext88:
 24705                           	opt callstack 0
 24706  00272E                     _start_lcd:
 24707                           	opt callstack 12
 24708                           
 24709                           ;eadog.c: 430:  DMA1CON0bits.DMA1SIRQEN = 1;
 24710                           
 24711                           ; BSR set to: 0
 24712                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24713                           ;incstack = 0
 24714  00272E  013B               	movlb	59	; () banked
 24715  002730  8DFC               	bsf	252,6,b	;volatile
 24716                           
 24717                           ; BSR set to: 59
 24718                           ; _start_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 24719  002732  0012               	return		;funcret
 24720  002734                     __end_of_start_lcd:
 24721                           	opt callstack 0
 24722                           
 24723 ;; *************** function _ringBufS_flush *****************
 24724 ;; Defined at:
 24725 ;;		line 76 in file "ringbufs.c"
 24726 ;; Parameters:    Size  Location     Type
 24727 ;;  _this           2  [STACK] PTR struct ringBufS_t
 24728 ;;		 -> ring_buf1(67), 
 24729 ;;  clearBuffer     1  [STACK] const char 
 24730 ;; Auto vars:     Size  Location     Type
 24731 ;;		None
 24732 ;; Return value:  Size  Location     Type
 24733 ;;                  1  [STACK] void 
 24734 ;; Registers used:
 24735 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
 24736 ;; Tracked objects:
 24737 ;;		On entry : 3F/0
 24738 ;;		On exit  : 0/0
 24739 ;;		Unchanged: 0/0
 24740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24741 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24742 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24744 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24745 ;;Total ram usage:        0 bytes
 24746 ;; Hardware stack levels used:    1
 24747 ;; Hardware stack levels required when called:   16
 24748 ;; This function calls:
 24749 ;;		_memset
 24750 ;; This function is called by:
 24751 ;;		_eaDogM_WriteString
 24752 ;;		_send_lcd_data_dma
 24753 ;; This function uses a reentrant model
 24754 ;;
 24755                           
 24756                           	psect	text89
 24757  000B72                     __ptext89:
 24758                           	opt callstack 0
 24759  000B72                     _ringBufS_flush:
 24760                           	opt callstack 11
 24761                           
 24762                           ;ringbufs.c: 76: void ringBufS_flush(ringBufS_t *_this, const int8_t clearBuffer);ringbu
      +                          fs.c: 77: {;ringbufs.c: 78:  _this->count = 0;
 24763                           ;stkvar	__this @ sp[(0)+-2]
 24764                           
 24765                           ; BSR set to: 59
 24766                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24767                           ;incstack = 0
 24768  000B72  0EFE               	movlw	-2
 24769  000B74  006F FF8C  F034    	movff	plusw1,btemp+10
 24770  000B7A  0EFF               	movlw	-1
 24771  000B7C  006F FF8C  F035    	movff	plusw1,btemp+11
 24772  000B82  0E42               	movlw	66
 24773  000B84  2434               	addwf	(btemp+10)^0,w,c
 24774  000B86  6ED9               	movwf	fsr2l,c
 24775  000B88  0E00               	movlw	0
 24776  000B8A  2035               	addwfc	(btemp+11)^0,w,c
 24777  000B8C  6EDA               	movwf	fsr2h,c
 24778  000B8E  0E00               	movlw	0
 24779  000B90  6EDF               	movwf	indf2,c
 24780                           
 24781                           ;ringbufs.c: 79:  _this->head = 0;
 24782                           ;stkvar	__this @ sp[(0)+-2]
 24783  000B92  0EFE               	movlw	-2
 24784  000B94  006F FF8C  F034    	movff	plusw1,btemp+10
 24785  000B9A  0EFF               	movlw	-1
 24786  000B9C  006F FF8C  F035    	movff	plusw1,btemp+11
 24787  000BA2  0E40               	movlw	64
 24788  000BA4  2434               	addwf	(btemp+10)^0,w,c
 24789  000BA6  6ED9               	movwf	fsr2l,c
 24790  000BA8  0E00               	movlw	0
 24791  000BAA  2035               	addwfc	(btemp+11)^0,w,c
 24792  000BAC  6EDA               	movwf	fsr2h,c
 24793  000BAE  0E00               	movlw	0
 24794  000BB0  6EDF               	movwf	indf2,c
 24795                           
 24796                           ;ringbufs.c: 80:  _this->tail = 0;
 24797                           ;stkvar	__this @ sp[(0)+-2]
 24798  000BB2  0EFE               	movlw	-2
 24799  000BB4  006F FF8C  F034    	movff	plusw1,btemp+10
 24800  000BBA  0EFF               	movlw	-1
 24801  000BBC  006F FF8C  F035    	movff	plusw1,btemp+11
 24802  000BC2  0E41               	movlw	65
 24803  000BC4  2434               	addwf	(btemp+10)^0,w,c
 24804  000BC6  6ED9               	movwf	fsr2l,c
 24805  000BC8  0E00               	movlw	0
 24806  000BCA  2035               	addwfc	(btemp+11)^0,w,c
 24807  000BCC  6EDA               	movwf	fsr2h,c
 24808  000BCE  0E00               	movlw	0
 24809  000BD0  6EDF               	movwf	indf2,c
 24810                           
 24811                           ;ringbufs.c: 81:  if (clearBuffer) {
 24812                           ;stkvar	_clearBuffer @ sp[(0)+-3]
 24813  000BD2  0EFD               	movlw	-3
 24814  000BD4  50E3               	movf	plusw1,w,c
 24815  000BD6  B4D8               	btfsc	status,2,c
 24816  000BD8  D011               	goto	l1746
 24817                           
 24818                           ;ringbufs.c: 82:   memset(_this->buf, 0, sizeof(_this->buf));
 24819  000BDA  0E40               	movlw	64
 24820  000BDC  6EE6               	movwf	postinc1,c
 24821  000BDE  0E00               	movlw	0
 24822  000BE0  6EE6               	movwf	postinc1,c
 24823  000BE2  0E00               	movlw	0
 24824  000BE4  6EE6               	movwf	postinc1,c
 24825  000BE6  0E00               	movlw	0
 24826  000BE8  6EE6               	movwf	postinc1,c
 24827                           
 24828                           ;stkvar	__this @ sp[(-4)+-2]
 24829  000BEA  0EFA               	movlw	-6
 24830  000BEC  006F FF8F FFE6     	movff	plusw1,postinc1
 24831  000BF2  006F FF8F FFE6     	movff	plusw1,postinc1
 24832  000BF8  ECF6  F0D5         	call	_memset	;wreg free
 24833  000BFC                     l1746:
 24834                           
 24835                           ; _ringBufS_flush: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3
      +                          , argsize = 3, vargsize = 0
 24836  000BFC  52E5               	movf	postdec1,f,c
 24837  000BFE  52E5               	movf	postdec1,f,c
 24838  000C00  52E5               	movf	postdec1,f,c
 24839  000C02  0012               	return		;funcret
 24840  000C04                     __end_of_ringBufS_flush:
 24841                           	opt callstack 0
 24842                           
 24843 ;; *************** function _memset *****************
 24844 ;; Defined at:
 24845 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/memset.c"
 24846 ;; Parameters:    Size  Location     Type
 24847 ;;  dest            2  [STACK] PTR void 
 24848 ;;		 -> ring_buf2(67), ring_buf1(67), 
 24849 ;;  c               2  [STACK] int 
 24850 ;;  n               2  [STACK] unsigned int 
 24851 ;; Auto vars:     Size  Location     Type
 24852 ;;  s               2  [STACK] PTR unsigned char 
 24853 ;;		 -> ring_buf2(67), ring_buf1(67), 
 24854 ;;  k               2  [STACK] unsigned int 
 24855 ;; Return value:  Size  Location     Type
 24856 ;;                  2  [STACK] PTR void 
 24857 ;; Registers used:
 24858 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
 24859 ;; Tracked objects:
 24860 ;;		On entry : 0/0
 24861 ;;		On exit  : 0/0
 24862 ;;		Unchanged: 0/0
 24863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24864 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24865 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24866 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24867 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24868 ;;Total ram usage:        0 bytes
 24869 ;; Hardware stack levels used:    1
 24870 ;; Hardware stack levels required when called:   15
 24871 ;; This function calls:
 24872 ;;		Nothing
 24873 ;; This function is called by:
 24874 ;;		_ringBufS_init
 24875 ;;		_ringBufS_flush
 24876 ;; This function uses a reentrant model
 24877 ;;
 24878                           
 24879                           	psect	text90
 24880  01ABEC                     __ptext90:
 24881                           	opt callstack 0
 24882  01ABEC                     _memset:
 24883                           	opt callstack 0
 24884                           
 24885                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24886  01ABEC  52E6               	movf	postinc1,f,c
 24887  01ABEE  52E6               	movf	postinc1,f,c
 24888  01ABF0  52E6               	movf	postinc1,f,c
 24889  01ABF2  52E6               	movf	postinc1,f,c
 24890                           
 24891                           ;stkvar	_dest @ sp[(-4)+-2]
 24892                           
 24893                           ;incstack = 0
 24894  01ABF4  0EFA               	movlw	-6
 24895  01ABF6  006F FF8C  F034    	movff	plusw1,btemp+10
 24896  01ABFC  0EFB               	movlw	-5
 24897  01ABFE  006F FF8C  F035    	movff	plusw1,btemp+11
 24898                           
 24899                           ;stkvar	_s @ sp[(-4)+0]
 24900  01AC04  0EFD               	movlw	-3
 24901  01AC06  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 24902  01AC0C  0EFC               	movlw	-4
 24903  01AC0E  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 24904                           
 24905                           ;stkvar	_n @ sp[(-4)+-6]
 24906  01AC14  0EF6               	movlw	-10
 24907  01AC16  006F FF8C  F02A    	movff	plusw1,btemp
 24908  01AC1C  0EF7               	movlw	-9
 24909  01AC1E  50E3               	movf	plusw1,w,c
 24910  01AC20  102A               	iorwf	btemp^0,w,c
 24911  01AC22  B4D8               	btfsc	status,2,c
 24912  01AC24  D154               	goto	u14250
 24913                           
 24914                           ;stkvar	_c @ sp[(-4)+-4]
 24915                           ;stkvar	_s @ sp[(-4)+0]
 24916  01AC26  0EFC               	movlw	-4
 24917  01AC28  006F FF8F FFD9     	movff	plusw1,fsr2l
 24918  01AC2E  0EFD               	movlw	-3
 24919  01AC30  006F FF8F FFDA     	movff	plusw1,fsr2h
 24920  01AC36  0EF8               	movlw	-8
 24921  01AC38  006F FF8F FFDF     	movff	plusw1,indf2
 24922                           
 24923                           ;stkvar	_c @ sp[(-4)+-4]
 24924                           ;stkvar	_n @ sp[(-4)+-6]
 24925                           ;stkvar	_s @ sp[(-4)+0]
 24926  01AC3E  0EFC               	movlw	-4
 24927  01AC40  006F FF8C  F034    	movff	plusw1,btemp+10
 24928  01AC46  0EFD               	movlw	-3
 24929  01AC48  006F FF8C  F035    	movff	plusw1,btemp+11
 24930  01AC4E  0EF6               	movlw	-10
 24931  01AC50  50E3               	movf	plusw1,w,c
 24932  01AC52  2634               	addwf	(btemp+10)^0,f,c
 24933  01AC54  0EF7               	movlw	-9
 24934  01AC56  50E3               	movf	plusw1,w,c
 24935  01AC58  2235               	addwfc	(btemp+11)^0,f,c
 24936  01AC5A  0EFF               	movlw	255
 24937  01AC5C  2434               	addwf	(btemp+10)^0,w,c
 24938  01AC5E  6ED9               	movwf	fsr2l,c
 24939  01AC60  0EFF               	movlw	255
 24940  01AC62  2035               	addwfc	(btemp+11)^0,w,c
 24941  01AC64  6EDA               	movwf	fsr2h,c
 24942  01AC66  0EF8               	movlw	-8
 24943  01AC68  006F FF8F FFDF     	movff	plusw1,indf2
 24944                           
 24945                           ;stkvar	_n @ sp[(-4)+-6]
 24946  01AC6E  0EF7               	movlw	-9
 24947  01AC70  50E3               	movf	plusw1,w,c
 24948  01AC72  E108               	bnz	l15334
 24949  01AC74  0EF6               	movlw	-10
 24950  01AC76  006F FF8C  F02A    	movff	plusw1,btemp
 24951  01AC7C  0E03               	movlw	3
 24952  01AC7E  5E2A               	subwf	btemp^0,f,c
 24953  01AC80  A0D8               	btfss	status,0,c
 24954  01AC82  D125               	goto	u14250
 24955  01AC84                     l15334:
 24956                           
 24957                           ;stkvar	_c @ sp[(-4)+-4]
 24958                           ;stkvar	_s @ sp[(-4)+0]
 24959  01AC84  0EFC               	movlw	-4
 24960  01AC86  006F FF8C  F034    	movff	plusw1,btemp+10
 24961  01AC8C  0EFD               	movlw	-3
 24962  01AC8E  006F FF8C  F035    	movff	plusw1,btemp+11
 24963  01AC94  0E01               	movlw	1
 24964  01AC96  2434               	addwf	(btemp+10)^0,w,c
 24965  01AC98  6ED9               	movwf	fsr2l,c
 24966  01AC9A  0E00               	movlw	0
 24967  01AC9C  2035               	addwfc	(btemp+11)^0,w,c
 24968  01AC9E  6EDA               	movwf	fsr2h,c
 24969  01ACA0  0EF8               	movlw	-8
 24970  01ACA2  006F FF8F FFDF     	movff	plusw1,indf2
 24971                           
 24972                           ;stkvar	_c @ sp[(-4)+-4]
 24973                           ;stkvar	_s @ sp[(-4)+0]
 24974  01ACA8  0EFC               	movlw	-4
 24975  01ACAA  006F FF8C  F034    	movff	plusw1,btemp+10
 24976  01ACB0  0EFD               	movlw	-3
 24977  01ACB2  006F FF8C  F035    	movff	plusw1,btemp+11
 24978  01ACB8  0E02               	movlw	2
 24979  01ACBA  2434               	addwf	(btemp+10)^0,w,c
 24980  01ACBC  6ED9               	movwf	fsr2l,c
 24981  01ACBE  0E00               	movlw	0
 24982  01ACC0  2035               	addwfc	(btemp+11)^0,w,c
 24983  01ACC2  6EDA               	movwf	fsr2h,c
 24984  01ACC4  0EF8               	movlw	-8
 24985  01ACC6  006F FF8F FFDF     	movff	plusw1,indf2
 24986                           
 24987                           ;stkvar	_c @ sp[(-4)+-4]
 24988                           ;stkvar	_n @ sp[(-4)+-6]
 24989                           ;stkvar	_s @ sp[(-4)+0]
 24990  01ACCC  0EFC               	movlw	-4
 24991  01ACCE  006F FF8C  F034    	movff	plusw1,btemp+10
 24992  01ACD4  0EFD               	movlw	-3
 24993  01ACD6  006F FF8C  F035    	movff	plusw1,btemp+11
 24994  01ACDC  0EF6               	movlw	-10
 24995  01ACDE  50E3               	movf	plusw1,w,c
 24996  01ACE0  2634               	addwf	(btemp+10)^0,f,c
 24997  01ACE2  0EF7               	movlw	-9
 24998  01ACE4  50E3               	movf	plusw1,w,c
 24999  01ACE6  2235               	addwfc	(btemp+11)^0,f,c
 25000  01ACE8  0EFE               	movlw	254
 25001  01ACEA  2434               	addwf	(btemp+10)^0,w,c
 25002  01ACEC  6ED9               	movwf	fsr2l,c
 25003  01ACEE  0EFF               	movlw	255
 25004  01ACF0  2035               	addwfc	(btemp+11)^0,w,c
 25005  01ACF2  6EDA               	movwf	fsr2h,c
 25006  01ACF4  0EF8               	movlw	-8
 25007  01ACF6  006F FF8F FFDF     	movff	plusw1,indf2
 25008                           
 25009                           ;stkvar	_c @ sp[(-4)+-4]
 25010                           ;stkvar	_n @ sp[(-4)+-6]
 25011                           ;stkvar	_s @ sp[(-4)+0]
 25012  01ACFC  0EFC               	movlw	-4
 25013  01ACFE  006F FF8C  F034    	movff	plusw1,btemp+10
 25014  01AD04  0EFD               	movlw	-3
 25015  01AD06  006F FF8C  F035    	movff	plusw1,btemp+11
 25016  01AD0C  0EF6               	movlw	-10
 25017  01AD0E  50E3               	movf	plusw1,w,c
 25018  01AD10  2634               	addwf	(btemp+10)^0,f,c
 25019  01AD12  0EF7               	movlw	-9
 25020  01AD14  50E3               	movf	plusw1,w,c
 25021  01AD16  2235               	addwfc	(btemp+11)^0,f,c
 25022  01AD18  0EFD               	movlw	253
 25023  01AD1A  2434               	addwf	(btemp+10)^0,w,c
 25024  01AD1C  6ED9               	movwf	fsr2l,c
 25025  01AD1E  0EFF               	movlw	255
 25026  01AD20  2035               	addwfc	(btemp+11)^0,w,c
 25027  01AD22  6EDA               	movwf	fsr2h,c
 25028  01AD24  0EF8               	movlw	-8
 25029  01AD26  006F FF8F FFDF     	movff	plusw1,indf2
 25030                           
 25031                           ;stkvar	_n @ sp[(-4)+-6]
 25032  01AD2C  0EF7               	movlw	-9
 25033  01AD2E  50E3               	movf	plusw1,w,c
 25034  01AD30  E108               	bnz	l15340
 25035  01AD32  0EF6               	movlw	-10
 25036  01AD34  006F FF8C  F02A    	movff	plusw1,btemp
 25037  01AD3A  0E07               	movlw	7
 25038  01AD3C  5E2A               	subwf	btemp^0,f,c
 25039  01AD3E  A0D8               	btfss	status,0,c
 25040  01AD40  D0C6               	goto	u14250
 25041  01AD42                     l15340:
 25042                           
 25043                           ;stkvar	_c @ sp[(-4)+-4]
 25044                           ;stkvar	_s @ sp[(-4)+0]
 25045  01AD42  0EFC               	movlw	-4
 25046  01AD44  006F FF8C  F034    	movff	plusw1,btemp+10
 25047  01AD4A  0EFD               	movlw	-3
 25048  01AD4C  006F FF8C  F035    	movff	plusw1,btemp+11
 25049  01AD52  0E03               	movlw	3
 25050  01AD54  2434               	addwf	(btemp+10)^0,w,c
 25051  01AD56  6ED9               	movwf	fsr2l,c
 25052  01AD58  0E00               	movlw	0
 25053  01AD5A  2035               	addwfc	(btemp+11)^0,w,c
 25054  01AD5C  6EDA               	movwf	fsr2h,c
 25055  01AD5E  0EF8               	movlw	-8
 25056  01AD60  006F FF8F FFDF     	movff	plusw1,indf2
 25057                           
 25058                           ;stkvar	_c @ sp[(-4)+-4]
 25059                           ;stkvar	_n @ sp[(-4)+-6]
 25060                           ;stkvar	_s @ sp[(-4)+0]
 25061  01AD66  0EFC               	movlw	-4
 25062  01AD68  006F FF8C  F034    	movff	plusw1,btemp+10
 25063  01AD6E  0EFD               	movlw	-3
 25064  01AD70  006F FF8C  F035    	movff	plusw1,btemp+11
 25065  01AD76  0EF6               	movlw	-10
 25066  01AD78  50E3               	movf	plusw1,w,c
 25067  01AD7A  2634               	addwf	(btemp+10)^0,f,c
 25068  01AD7C  0EF7               	movlw	-9
 25069  01AD7E  50E3               	movf	plusw1,w,c
 25070  01AD80  2235               	addwfc	(btemp+11)^0,f,c
 25071  01AD82  0EFC               	movlw	252
 25072  01AD84  2434               	addwf	(btemp+10)^0,w,c
 25073  01AD86  6ED9               	movwf	fsr2l,c
 25074  01AD88  0EFF               	movlw	255
 25075  01AD8A  2035               	addwfc	(btemp+11)^0,w,c
 25076  01AD8C  6EDA               	movwf	fsr2h,c
 25077  01AD8E  0EF8               	movlw	-8
 25078  01AD90  006F FF8F FFDF     	movff	plusw1,indf2
 25079                           
 25080                           ;stkvar	_n @ sp[(-4)+-6]
 25081  01AD96  0EF7               	movlw	-9
 25082  01AD98  50E3               	movf	plusw1,w,c
 25083  01AD9A  E108               	bnz	l15346
 25084  01AD9C  0EF6               	movlw	-10
 25085  01AD9E  006F FF8C  F02A    	movff	plusw1,btemp
 25086  01ADA4  0E09               	movlw	9
 25087  01ADA6  5E2A               	subwf	btemp^0,f,c
 25088  01ADA8  A0D8               	btfss	status,0,c
 25089  01ADAA  D091               	goto	u14250
 25090  01ADAC                     l15346:
 25091                           
 25092                           ;stkvar	_s @ sp[(-4)+0]
 25093  01ADAC  0EFC               	movlw	-4
 25094  01ADAE  006F FF8C  F034    	movff	plusw1,btemp+10
 25095  01ADB4  1E34               	comf	(btemp+10)^0,f,c
 25096  01ADB6  0EFD               	movlw	-3
 25097  01ADB8  006F FF8C  F035    	movff	plusw1,btemp+11
 25098  01ADBE  1E35               	comf	(btemp+11)^0,f,c
 25099  01ADC0  2A34               	incf	(btemp+10)^0,f,c
 25100  01ADC2  B4D8               	btfsc	status,2,c
 25101  01ADC4  2A35               	incf	(btemp+11)^0,f,c
 25102  01ADC6  0E03               	movlw	3
 25103  01ADC8  1634               	andwf	(btemp+10)^0,f,c
 25104  01ADCA  0E00               	movlw	0
 25105  01ADCC  1635               	andwf	(btemp+11)^0,f,c
 25106                           
 25107                           ;stkvar	_k @ sp[(-4)+2]
 25108  01ADCE  0EFE               	movlw	-2
 25109  01ADD0  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 25110  01ADD6  0EFF               	movlw	-1
 25111  01ADD8  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 25112                           
 25113                           ;stkvar	_k @ sp[(-4)+2]
 25114                           ;stkvar	_s @ sp[(-4)+0]
 25115  01ADDE  0EFC               	movlw	-4
 25116  01ADE0  50E3               	movf	plusw1,w,c
 25117  01ADE2  6E2A               	movwf	btemp^0,c
 25118  01ADE4  0EFE               	movlw	-2
 25119  01ADE6  50E3               	movf	plusw1,w,c
 25120  01ADE8  262A               	addwf	btemp^0,f,c
 25121  01ADEA  0EFC               	movlw	-4
 25122  01ADEC  0060  F0AB  FFE3   	movff	btemp,plusw1
 25123  01ADF2  0EFD               	movlw	-3
 25124  01ADF4  50E3               	movf	plusw1,w,c
 25125  01ADF6  6E2A               	movwf	btemp^0,c
 25126  01ADF8  0EFF               	movlw	-1
 25127  01ADFA  50E3               	movf	plusw1,w,c
 25128  01ADFC  222A               	addwfc	btemp^0,f,c
 25129  01ADFE  0EFD               	movlw	-3
 25130  01AE00  0060  F0AB  FFE3   	movff	btemp,plusw1
 25131                           
 25132                           ;stkvar	_k @ sp[(-4)+2]
 25133                           ;stkvar	_n @ sp[(-4)+-6]
 25134  01AE06  0EF6               	movlw	-10
 25135  01AE08  50E3               	movf	plusw1,w,c
 25136  01AE0A  6E2A               	movwf	btemp^0,c
 25137  01AE0C  0EFE               	movlw	-2
 25138  01AE0E  50E3               	movf	plusw1,w,c
 25139  01AE10  5E2A               	subwf	btemp^0,f,c
 25140  01AE12  0EF6               	movlw	-10
 25141  01AE14  0060  F0AB  FFE3   	movff	btemp,plusw1
 25142  01AE1A  0EF7               	movlw	-9
 25143  01AE1C  50E3               	movf	plusw1,w,c
 25144  01AE1E  6E2A               	movwf	btemp^0,c
 25145  01AE20  0EFF               	movlw	-1
 25146  01AE22  50E3               	movf	plusw1,w,c
 25147  01AE24  5A2A               	subwfb	btemp^0,f,c
 25148  01AE26  0EF7               	movlw	-9
 25149  01AE28  0060  F0AB  FFE3   	movff	btemp,plusw1
 25150  01AE2E  0EFC               	movlw	252
 25151  01AE30  6E34               	movwf	(btemp+10)^0,c
 25152  01AE32  0EFF               	movlw	255
 25153  01AE34  6E35               	movwf	(btemp+11)^0,c
 25154                           
 25155                           ;stkvar	_n @ sp[(-4)+-6]
 25156  01AE36  0EF6               	movlw	-10
 25157  01AE38  006F FF8C  F02A    	movff	plusw1,btemp
 25158  01AE3E  5034               	movf	(btemp+10)^0,w,c
 25159  01AE40  162A               	andwf	btemp^0,f,c
 25160  01AE42  0EF6               	movlw	-10
 25161  01AE44  0060  F0AB  FFE3   	movff	btemp,plusw1
 25162  01AE4A  0EF7               	movlw	-9
 25163  01AE4C  006F FF8C  F02A    	movff	plusw1,btemp
 25164  01AE52  5035               	movf	(btemp+11)^0,w,c
 25165  01AE54  162A               	andwf	btemp^0,f,c
 25166  01AE56  0EF7               	movlw	-9
 25167  01AE58  D02E               	goto	L24
 25168  01AE5A                     l15354:
 25169                           
 25170                           ;stkvar	_c @ sp[(-4)+-4]
 25171                           ;stkvar	_s @ sp[(-4)+0]
 25172  01AE5A  0EFC               	movlw	-4
 25173  01AE5C  006F FF8F FFD9     	movff	plusw1,fsr2l
 25174  01AE62  0EFD               	movlw	-3
 25175  01AE64  006F FF8F FFDA     	movff	plusw1,fsr2h
 25176  01AE6A  0EF8               	movlw	-8
 25177  01AE6C  006F FF8F FFDF     	movff	plusw1,indf2
 25178                           
 25179                           ;stkvar	_n @ sp[(-4)+-6]
 25180  01AE72  0EF6               	movlw	-10
 25181  01AE74  006F FF8C  F02A    	movff	plusw1,btemp
 25182  01AE7A  0E01               	movlw	1
 25183  01AE7C  5E2A               	subwf	btemp^0,f,c
 25184  01AE7E  0EF6               	movlw	-10
 25185  01AE80  0060  F0AB  FFE3   	movff	btemp,plusw1
 25186  01AE86  0EF7               	movlw	-9
 25187  01AE88  006F FF8C  F02A    	movff	plusw1,btemp
 25188  01AE8E  0E00               	movlw	0
 25189  01AE90  5A2A               	subwfb	btemp^0,f,c
 25190  01AE92  0EF7               	movlw	-9
 25191  01AE94  0060  F0AB  FFE3   	movff	btemp,plusw1
 25192                           
 25193                           ;stkvar	_s @ sp[(-4)+0]
 25194  01AE9A  0EFC               	movlw	-4
 25195  01AE9C  50E3               	movf	plusw1,w,c
 25196  01AE9E  0F01               	addlw	1
 25197  01AEA0  6E2A               	movwf	btemp^0,c
 25198  01AEA2  0EFC               	movlw	-4
 25199  01AEA4  0060  F0AB  FFE3   	movff	btemp,plusw1
 25200  01AEAA  6A2A               	clrf	btemp^0,c
 25201  01AEAC  0EFD               	movlw	-3
 25202  01AEAE  50E3               	movf	plusw1,w,c
 25203  01AEB0  202A               	addwfc	btemp^0,w,c
 25204  01AEB2  6E2A               	movwf	btemp^0,c
 25205  01AEB4  0EFD               	movlw	-3
 25206  01AEB6                     L24:
 25207  01AEB6  0060  F0AB  FFE3   	movff	btemp,plusw1
 25208                           
 25209                           ;stkvar	_n @ sp[(-4)+-6]
 25210  01AEBC  0EF6               	movlw	-10
 25211  01AEBE  006F FF8C  F02A    	movff	plusw1,btemp
 25212  01AEC4  0EF7               	movlw	-9
 25213  01AEC6  50E3               	movf	plusw1,w,c
 25214  01AEC8  102A               	iorwf	btemp^0,w,c
 25215  01AECA  A4D8               	btfss	status,2,c
 25216  01AECC  D7C6               	goto	l15354
 25217  01AECE                     u14250:
 25218                           
 25219                           ; _memset: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsiz
      +                          e = 6, vargsize = 0
 25220  01AECE  0EF6               	movlw	246
 25221  01AED0  26E1               	addwf	fsr1l,f,c
 25222  01AED2  0EFF               	movlw	255
 25223  01AED4  22E2               	addwfc	fsr1h,f,c
 25224  01AED6  0012               	return		;funcret
 25225  01AED8                     __end_of_memset:
 25226                           	opt callstack 0
 25227                           
 25228 ;; *************** function _printf *****************
 25229 ;; Defined at:
 25230 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/printf.c"
 25231 ;; Parameters:    Size  Location     Type
 25232 ;;  fmt             2  [STACK] PTR const unsigned char 
 25233 ;;		 -> STR_69(3), 
 25234 ;; Auto vars:     Size  Location     Type
 25235 ;;  ap              2  [STACK] PTR void [1]
 25236 ;;		 -> ?_printf(2), ?_sprintf(2), 
 25237 ;;  ret             2    0        int 
 25238 ;; Return value:  Size  Location     Type
 25239 ;;                  2  [STACK] int 
 25240 ;; Registers used:
 25241 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 25242 ;; Tracked objects:
 25243 ;;		On entry : 3F/3B
 25244 ;;		On exit  : 3F/0
 25245 ;;		Unchanged: 0/0
 25246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25247 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25248 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25249 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25250 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25251 ;;Total ram usage:        0 bytes
 25252 ;; Hardware stack levels used:    1
 25253 ;; Hardware stack levels required when called:   23
 25254 ;; This function calls:
 25255 ;;		_vfprintf
 25256 ;; This function is called by:
 25257 ;;		_eaDogM_WriteString
 25258 ;; This function uses a reentrant model
 25259 ;;
 25260                           
 25261                           	psect	text91
 25262  0014D6                     __ptext91:
 25263                           	opt callstack 0
 25264  0014D6                     _printf:
 25265                           	opt callstack 0
 25266                           
 25267                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25268  0014D6  52E6               	movf	postinc1,f,c
 25269  0014D8  52E6               	movf	postinc1,f,c
 25270                           
 25271                           ;stkvar	?_printf @ sp[(-2)+-3]
 25272                           
 25273                           ;incstack = 0
 25274  0014DA  0EFB               	movlw	251
 25275  0014DC  24E1               	addwf	fsr1l,w,c
 25276  0014DE  6E34               	movwf	(btemp+10)^0,c
 25277  0014E0  0EFF               	movlw	255
 25278  0014E2  20E2               	addwfc	fsr1h,w,c
 25279  0014E4  6E35               	movwf	(btemp+11)^0,c
 25280                           
 25281                           ;stkvar	_ap @ sp[(-2)+0]
 25282  0014E6  0EFF               	movlw	-1
 25283  0014E8  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 25284  0014EE  0EFE               	movlw	-2
 25285  0014F0  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 25286                           
 25287                           ;stkvar	_ap @ sp[(-2)+0]
 25288  0014F6  0EFE               	movlw	254
 25289  0014F8  24E1               	addwf	fsr1l,w,c
 25290  0014FA  6E2A               	movwf	btemp^0,c
 25291  0014FC  0EFF               	movlw	255
 25292  0014FE  20E2               	addwfc	fsr1h,w,c
 25293  001500  6E2B               	movwf	(btemp+1)^0,c
 25294  001502  0060  F0AB  FFE6   	movff	btemp,postinc1
 25295  001508  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 25296                           
 25297                           ;stkvar	_fmt @ sp[(-4)+-3]
 25298  00150E  0EF9               	movlw	-7
 25299  001510  006F FF8F FFE6     	movff	plusw1,postinc1
 25300  001516  006F FF8F FFE6     	movff	plusw1,postinc1
 25301  00151C  0E00               	movlw	0
 25302  00151E  6EE6               	movwf	postinc1,c
 25303  001520  0E00               	movlw	0
 25304  001522  6EE6               	movwf	postinc1,c
 25305  001524  ECED  F002         	call	_vfprintf	;wreg free
 25306                           
 25307                           ; BSR set to: 0
 25308                           ; _printf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 2, vargsize = 0
 25309  001528  52E5               	movf	postdec1,f,c
 25310  00152A  52E5               	movf	postdec1,f,c
 25311  00152C  52E5               	movf	postdec1,f,c
 25312  00152E  50E7               	movf	indf1,w,c
 25313  001530  5EE1               	subwf	fsr1l,f,c
 25314  001532  0E00               	movlw	0
 25315  001534  5AE2               	subwfb	fsr1h,f,c
 25316  001536  0012               	return		;funcret
 25317  001538                     __end_of_printf:
 25318                           	opt callstack 0
 25319                           
 25320 ;; *************** function _vfprintf *****************
 25321 ;; Defined at:
 25322 ;;		line 1368 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 25323 ;; Parameters:    Size  Location     Type
 25324 ;;  fp              2  [STACK] PTR struct _IO_FILE
 25325 ;;		 -> f(6), NULL(0), 
 25326 ;;  fmt             2  [STACK] PTR const unsigned char 
 25327 ;;		 -> STR_90(127), STR_88(3), STR_87(3), STR_86(21), 
 25328 ;;		 -> STR_85(21), STR_84(21), STR_83(21), STR_82(21), 
 25329 ;;		 -> STR_81(21), STR_80(26), STR_79(15), STR_78(15), 
 25330 ;;		 -> STR_77(15), STR_76(15), STR_75(10), STR_74(10), 
 25331 ;;		 -> STR_73(19), STR_72(19), STR_69(3), STR_68(14), 
 25332 ;;		 -> STR_67(28), STR_66(28), STR_65(28), STR_64(22), 
 25333 ;;		 -> STR_63(22), STR_62(22), STR_61(22), STR_60(22), 
 25334 ;;		 -> STR_59(22), STR_58(22), STR_57(22), STR_56(22), 
 25335 ;;		 -> STR_55(21), STR_54(22), STR_53(22), STR_52(22), 
 25336 ;;		 -> STR_51(22), STR_50(22), STR_49(22), STR_48(24), 
 25337 ;;		 -> STR_47(24), STR_46(24), STR_45(30), STR_44(24), 
 25338 ;;		 -> STR_43(24), STR_42(23), STR_41(23), STR_40(23), 
 25339 ;;		 -> STR_39(23), STR_38(23), STR_37(23), STR_36(23), 
 25340 ;;		 -> STR_35(23), STR_34(23), STR_33(23), STR_32(23), 
 25341 ;;		 -> STR_31(23), STR_30(18), STR_29(17), STR_28(17), 
 25342 ;;		 -> STR_27(22), STR_26(22), STR_25(22), STR_24(14), 
 25343 ;;		 -> STR_23(27), STR_22(27), STR_21(23), STR_20(22), 
 25344 ;;		 -> STR_19(22), STR_18(22), STR_17(22), STR_16(23), 
 25345 ;;		 -> STR_15(23), STR_14(23), STR_13(26), STR_12(22), 
 25346 ;;		 -> STR_11(21), STR_10(21), STR_9(21), STR_8(21), 
 25347 ;;		 -> STR_7(21), STR_6(21), STR_5(21), STR_4(21), 
 25348 ;;		 -> STR_2(21), STR_1(21), 
 25349 ;;  ap              2  [STACK] PTR PTR void 
 25350 ;;		 -> ap(2), ap(2), 
 25351 ;; Auto vars:     Size  Location     Type
 25352 ;;  cfmt            2  [STACK] PTR unsigned char 
 25353 ;;		 -> STR_90(127), STR_88(3), STR_87(3), STR_86(21), 
 25354 ;;		 -> STR_85(21), STR_84(21), STR_83(21), STR_82(21), 
 25355 ;;		 -> STR_81(21), STR_80(26), STR_79(15), STR_78(15), 
 25356 ;;		 -> STR_77(15), STR_76(15), STR_75(10), STR_74(10), 
 25357 ;;		 -> STR_73(19), STR_72(19), STR_69(3), STR_68(14), 
 25358 ;;		 -> STR_67(28), STR_66(28), STR_65(28), STR_64(22), 
 25359 ;;		 -> STR_63(22), STR_62(22), STR_61(22), STR_60(22), 
 25360 ;;		 -> STR_59(22), STR_58(22), STR_57(22), STR_56(22), 
 25361 ;;		 -> STR_55(21), STR_54(22), STR_53(22), STR_52(22), 
 25362 ;;		 -> STR_51(22), STR_50(22), STR_49(22), STR_48(24), 
 25363 ;;		 -> STR_47(24), STR_46(24), STR_45(30), STR_44(24), 
 25364 ;;		 -> STR_43(24), STR_42(23), STR_41(23), STR_40(23), 
 25365 ;;		 -> STR_39(23), STR_38(23), STR_37(23), STR_36(23), 
 25366 ;;		 -> STR_35(23), STR_34(23), STR_33(23), STR_32(23), 
 25367 ;;		 -> STR_31(23), STR_30(18), STR_29(17), STR_28(17), 
 25368 ;;		 -> STR_27(22), STR_26(22), STR_25(22), STR_24(14), 
 25369 ;;		 -> STR_23(27), STR_22(27), STR_21(23), STR_20(22), 
 25370 ;;		 -> STR_19(22), STR_18(22), STR_17(22), STR_16(23), 
 25371 ;;		 -> STR_15(23), STR_14(23), STR_13(26), STR_12(22), 
 25372 ;;		 -> STR_11(21), STR_10(21), STR_9(21), STR_8(21), 
 25373 ;;		 -> STR_7(21), STR_6(21), STR_5(21), STR_4(21), 
 25374 ;;		 -> STR_2(21), STR_1(21), 
 25375 ;; Return value:  Size  Location     Type
 25376 ;;                  2  [STACK] int 
 25377 ;; Registers used:
 25378 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 25379 ;; Tracked objects:
 25380 ;;		On entry : 0/2
 25381 ;;		On exit  : 3F/0
 25382 ;;		Unchanged: 0/0
 25383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25384 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25385 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25386 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25387 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25388 ;;Total ram usage:        0 bytes
 25389 ;; Hardware stack levels used:    1
 25390 ;; Hardware stack levels required when called:   22
 25391 ;; This function calls:
 25392 ;;		_vfpfcnvrt
 25393 ;; This function is called by:
 25394 ;;		_sprintf
 25395 ;;		_printf
 25396 ;; This function uses a reentrant model
 25397 ;;
 25398                           
 25399                           	psect	text92
 25400  0005DA                     __ptext92:
 25401                           	opt callstack 0
 25402  0005DA                     _vfprintf:
 25403                           	opt callstack 0
 25404                           
 25405                           ; BSR set to: 0
 25406                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25407  0005DA  52E6               	movf	postinc1,f,c
 25408  0005DC  52E6               	movf	postinc1,f,c
 25409                           
 25410                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
 25411                           ;stkvar	_fmt @ sp[(-2)+-4]
 25412                           
 25413                           ;incstack = 0
 25414 ;; hardware stack exceeded
 25415  0005DE  0EFA               	movlw	-6
 25416  0005E0  006F FF8C  F034    	movff	plusw1,btemp+10
 25417  0005E6  0EFB               	movlw	-5
 25418  0005E8  006F FF8C  F035    	movff	plusw1,btemp+11
 25419                           
 25420                           ;stkvar	_cfmt @ sp[(-2)+0]
 25421  0005EE  0EFF               	movlw	-1
 25422  0005F0  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 25423  0005F6  0EFE               	movlw	-2
 25424  0005F8  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 25425                           
 25426                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
 25427  0005FE  0100               	movlb	0	; () banked
 25428  000600  6BBA               	clrf	_nout& (0+255),b
 25429  000602  6BBB               	clrf	(_nout+1)& (0+255),b
 25430                           
 25431                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 25432  000604  D021               	goto	l16540
 25433  000606                     l16538:
 25434                           
 25435                           ; BSR set to: 0
 25436                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
 25437                           ;stkvar	_ap @ sp[(-2)+-6]
 25438  000606  0EF8               	movlw	-8
 25439  000608  006F FF8F FFE6     	movff	plusw1,postinc1
 25440  00060E  006F FF8F FFE6     	movff	plusw1,postinc1
 25441                           
 25442                           ;stkvar	_cfmt @ sp[(-4)+0]
 25443  000614  0EFC               	movlw	252
 25444  000616  24E1               	addwf	fsr1l,w,c
 25445  000618  6E2A               	movwf	btemp^0,c
 25446  00061A  0EFF               	movlw	255
 25447  00061C  20E2               	addwfc	fsr1h,w,c
 25448  00061E  6E2B               	movwf	(btemp+1)^0,c
 25449  000620  0060  F0AB  FFE6   	movff	btemp,postinc1
 25450  000626  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 25451                           
 25452                           ;stkvar	_fp @ sp[(-6)+-2]
 25453  00062C  0EF8               	movlw	-8
 25454  00062E  006F FF8F FFE6     	movff	plusw1,postinc1
 25455  000634  006F FF8F FFE6     	movff	plusw1,postinc1
 25456  00063A  EC36  F09C         	call	_vfpfcnvrt	;wreg free
 25457  00063E  502A               	movf	btemp^0,w,c
 25458  000640  0100               	movlb	0	; () banked
 25459  000642  27BA               	addwf	_nout& (0+255),f,b
 25460  000644  502B               	movf	(btemp+1)^0,w,c
 25461  000646  23BB               	addwfc	(_nout+1)& (0+255),f,b
 25462  000648                     l16540:
 25463                           
 25464                           ; BSR set to: 0
 25465                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 25466                           ;stkvar	_cfmt @ sp[(-2)+0]
 25467  000648  50E1               	movf	fsr1l,w,c
 25468  00064A  0FFE               	addlw	-2
 25469  00064C  6ED9               	movwf	fsr2l,c
 25470  00064E  50E2               	movf	fsr1h,w,c
 25471  000650  6EDA               	movwf	fsr2h,c
 25472  000652  0EFF               	movlw	255
 25473  000654  22DA               	addwfc	fsr2h,f,c
 25474  000656  006F FF7B FFF6     	movff	postinc2,tblptrl
 25475  00065C  006F FF77 FFF7     	movff	postdec2,tblptrh
 25476  000662                     	if	0	;tblptru may be non-zero
 25477  000662                     	endif
 25478  000662                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 25479  000662  0E00               	movlw	low (__mediumconst shr (0+16))
 25480  000664  6EF8               	movwf	tblptru,c
 25481  000666                     	endif
 25482  000666  0008               	tblrd		*
 25483  000668  50F5               	movf	tablat,w,c
 25484  00066A  0900               	iorlw	0
 25485  00066C  A4D8               	btfss	status,2,c
 25486  00066E  D7CB               	goto	l16538
 25487                           
 25488                           ; BSR set to: 0
 25489                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1378:     return nout;
 25490  000670  0060  F2E8  F02A   	movff	_nout,btemp
 25491  000676  0060  F2EC  F02B   	movff	_nout+1,btemp+1
 25492                           
 25493                           ; BSR set to: 0
 25494                           ; _vfprintf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, args
      +                          ize = 6, vargsize = 0
 25495  00067C  0EF8               	movlw	248
 25496  00067E  26E1               	addwf	fsr1l,f,c
 25497  000680  0EFF               	movlw	255
 25498  000682  22E2               	addwfc	fsr1h,f,c
 25499  000684  0012               	return		;funcret
 25500  000686                     __end_of_vfprintf:
 25501                           	opt callstack 0
 25502                           
 25503 ;; *************** function _vfpfcnvrt *****************
 25504 ;; Defined at:
 25505 ;;		line 670 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 25506 ;; Parameters:    Size  Location     Type
 25507 ;;  fp              2  [STACK] PTR struct _IO_FILE
 25508 ;;		 -> f(6), NULL(0), 
 25509 ;;  fmt             2  [STACK] PTR PTR unsigned char 
 25510 ;;		 -> cfmt(2), 
 25511 ;;  ap              2  [STACK] PTR PTR void 
 25512 ;;		 -> ap(2), ap(2), 
 25513 ;; Auto vars:     Size  Location     Type
 25514 ;;  llu             8  [STACK] unsigned long long 
 25515 ;;  ll              8  [STACK] long long 
 25516 ;;  f               4  [STACK] long long 
 25517 ;;  ct              3  [STACK] unsigned char [3]
 25518 ;;  vp              3    0        PTR void 
 25519 ;;  cp              2  [STACK] PTR unsigned char 
 25520 ;;		 -> ?_printf(2), ?_sprintf(2), asctime@buf(27), STR_71(9), 
 25521 ;;		 -> STR_70(12), D.lcd(640), D(642), T(176), 
 25522 ;;		 -> STR_3(5), V(181), 
 25523 ;;  i               2    0        int 
 25524 ;;  done            2    0        int 
 25525 ;;  c               1  [STACK] unsigned char 
 25526 ;; Return value:  Size  Location     Type
 25527 ;;                  2  [STACK] int 
 25528 ;; Registers used:
 25529 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 25530 ;; Tracked objects:
 25531 ;;		On entry : 0/0
 25532 ;;		On exit  : 0/0
 25533 ;;		Unchanged: 0/0
 25534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25535 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25536 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25537 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25538 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25539 ;;Total ram usage:        0 bytes
 25540 ;; Hardware stack levels used:    1
 25541 ;; Hardware stack levels required when called:   21
 25542 ;; This function calls:
 25543 ;;		_atoi
 25544 ;;		_ctoa
 25545 ;;		_dtoa
 25546 ;;		_efgtoa
 25547 ;;		_fputc
 25548 ;;		_isdigit
 25549 ;;		_isupper
 25550 ;;		_stoa
 25551 ;;		_strncmp
 25552 ;;		_tolower
 25553 ;;		_utoa
 25554 ;;		_xtoa
 25555 ;; This function is called by:
 25556 ;;		_vfprintf
 25557 ;; This function uses a reentrant model
 25558 ;;
 25559                           
 25560                           	psect	text93
 25561  01386C                     __ptext93:
 25562                           	opt callstack 0
 25563  01386C                     _vfpfcnvrt:
 25564                           	opt callstack 0
 25565                           
 25566                           ; BSR set to: 0
 25567                           ; autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 25568  01386C  0E20               	movlw	32
 25569  01386E  26E1               	addwf	fsr1l,f,c
 25570  013870  0E00               	movlw	0
 25571  013872  22E2               	addwfc	fsr1h,f,c
 25572                           
 25573                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
 25574                           ;stkvar	_fmt @ sp[(-32)+-4]
 25575                           
 25576                           ;incstack = 0
 25577 ;; hardware stack exceeded
 25578  013874  0EDC               	movlw	-36
 25579  013876  006F FF8F FFD9     	movff	plusw1,fsr2l
 25580  01387C  0EDD               	movlw	-35
 25581  01387E  006F FF8F FFDA     	movff	plusw1,fsr2h
 25582  013884  006F FF7B FFF6     	movff	postinc2,tblptrl
 25583  01388A  006F FF77 FFF7     	movff	postdec2,tblptrh
 25584  013890                     	if	0	;tblptru may be non-zero
 25585  013890                     	endif
 25586  013890                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 25587  013890  0E00               	movlw	low (__mediumconst shr (0+16))
 25588  013892  6EF8               	movwf	tblptru,c
 25589  013894                     	endif
 25590  013894  0008               	tblrd		*
 25591  013896  50F5               	movf	tablat,w,c
 25592  013898  0A25               	xorlw	37
 25593  01389A  A4D8               	btfss	status,2,c
 25594  01389C  EFDD  F0A3         	goto	l16308
 25595                           
 25596                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
 25597                           ;stkvar	_fmt @ sp[(-32)+-4]
 25598  0138A0  0EDC               	movlw	-36
 25599  0138A2  006F FF8F FFD9     	movff	plusw1,fsr2l
 25600  0138A8  0EDD               	movlw	-35
 25601  0138AA  006F FF8F FFDA     	movff	plusw1,fsr2h
 25602  0138B0  2ADE               	incf	postinc2,f,c
 25603  0138B2  0E00               	movlw	0
 25604  0138B4  22DD               	addwfc	postdec2,f,c
 25605                           
 25606                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
 25607  0138B6  6A4A               	clrf	_width^0,c
 25608  0138B8  6A4B               	clrf	(_width+1)^0,c
 25609  0138BA  6A4E               	clrf	_flags^0,c
 25610  0138BC  6A4F               	clrf	(_flags+1)^0,c
 25611                           
 25612                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
 25613  0138BE  684C               	setf	_prec^0,c
 25614  0138C0  684D               	setf	(_prec+1)^0,c
 25615                           
 25616                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 723:         if ((*fmt)[0] ==
      +                           '*') {
 25617                           ;stkvar	_fmt @ sp[(-32)+-4]
 25618  0138C2  0EDC               	movlw	-36
 25619  0138C4  006F FF8F FFD9     	movff	plusw1,fsr2l
 25620  0138CA  0EDD               	movlw	-35
 25621  0138CC  006F FF8F FFDA     	movff	plusw1,fsr2h
 25622  0138D2  006F FF7B FFF6     	movff	postinc2,tblptrl
 25623  0138D8  006F FF77 FFF7     	movff	postdec2,tblptrh
 25624  0138DE                     	if	0	;tblptru may be non-zero
 25625  0138DE                     	endif
 25626  0138DE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 25627  0138DE  0E00               	movlw	low (__mediumconst shr (0+16))
 25628  0138E0  6EF8               	movwf	tblptru,c
 25629  0138E2                     	endif
 25630  0138E2  0008               	tblrd		*
 25631  0138E4  50F5               	movf	tablat,w,c
 25632  0138E6  0A2A               	xorlw	42
 25633  0138E8  A4D8               	btfss	status,2,c
 25634  0138EA  D031               	goto	l16126
 25635                           
 25636                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 724:             ++*fmt;
 25637                           ;stkvar	_fmt @ sp[(-32)+-4]
 25638  0138EC  0EDC               	movlw	-36
 25639  0138EE  006F FF8F FFD9     	movff	plusw1,fsr2l
 25640  0138F4  0EDD               	movlw	-35
 25641  0138F6  006F FF8F FFDA     	movff	plusw1,fsr2h
 25642  0138FC  2ADE               	incf	postinc2,f,c
 25643  0138FE  0E00               	movlw	0
 25644  013900  22DD               	addwfc	postdec2,f,c
 25645                           
 25646                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 725:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
 25647                           ;stkvar	_ap @ sp[(-32)+-6]
 25648  013902  0EDA               	movlw	-38
 25649  013904  006F FF8F FFD9     	movff	plusw1,fsr2l
 25650  01390A  0EDB               	movlw	-37
 25651  01390C  006F FF8F FFDA     	movff	plusw1,fsr2h
 25652  013912  0E02               	movlw	2
 25653  013914  5EDE               	subwf	postinc2,f,c
 25654  013916  0E00               	movlw	0
 25655  013918  5ADD               	subwfb	postdec2,f,c
 25656  01391A  006F FF78  F034    	movff	postinc2,btemp+10
 25657  013920  006F FF74  F035    	movff	postdec2,btemp+11
 25658  013926  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 25659  01392C  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 25660  013932  006F FF78  F04A    	movff	postinc2,_width
 25661  013938  006F FF74  F04B    	movff	postdec2,_width+1
 25662                           
 25663                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 726:             if (width < 
      +                          0) {
 25664  01393E  AE4B               	btfss	(_width+1)^0,7,c
 25665  013940  D066               	goto	u15660
 25666                           
 25667                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 727:                 flags |=
      +                           (1 << 0);
 25668  013942  804E               	bsf	_flags^0,0,c
 25669                           
 25670                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 728:                 width = 
      +                          -width;
 25671  013944  6C4A               	negf	_width^0,c
 25672  013946  1E4B               	comf	(_width+1)^0,f,c
 25673  013948  B0D8               	btfsc	status,0,c
 25674  01394A  2A4B               	incf	(_width+1)^0,f,c
 25675  01394C  D060               	goto	u15660
 25676  01394E                     l16126:
 25677                           
 25678                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 731:             width = atoi
      +                          (*fmt);
 25679                           ;stkvar	_fmt @ sp[(-32)+-4]
 25680  01394E  0EDC               	movlw	-36
 25681  013950  006F FF8F FFD9     	movff	plusw1,fsr2l
 25682  013956  0EDD               	movlw	-35
 25683  013958  006F FF8F FFDA     	movff	plusw1,fsr2h
 25684  01395E  006F FF78  F034    	movff	postinc2,btemp+10
 25685  013964  006F FF74  F035    	movff	postdec2,btemp+11
 25686  01396A  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 25687  013970  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 25688  013976  EC64  F0DF         	call	_atoi	;wreg free
 25689  01397A  0060  F0A8  F04A   	movff	btemp,_width
 25690  013980  0060  F0AC  F04B   	movff	btemp+1,_width+1
 25691                           
 25692                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 732:             while ((0 ? 
      +                          isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 25693  013986  D00B               	goto	l16130
 25694  013988                     l16128:
 25695                           
 25696                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 733:                 ++*fmt;
 25697                           ;stkvar	_fmt @ sp[(-32)+-4]
 25698  013988  0EDC               	movlw	-36
 25699  01398A  006F FF8F FFD9     	movff	plusw1,fsr2l
 25700  013990  0EDD               	movlw	-35
 25701  013992  006F FF8F FFDA     	movff	plusw1,fsr2h
 25702  013998  2ADE               	incf	postinc2,f,c
 25703  01399A  0E00               	movlw	0
 25704  01399C  22DD               	addwfc	postdec2,f,c
 25705  01399E                     l16130:
 25706  01399E  0ED0               	movlw	208
 25707  0139A0  6E34               	movwf	(btemp+10)^0,c
 25708  0139A2  0EFF               	movlw	255
 25709  0139A4  6E35               	movwf	(btemp+11)^0,c
 25710                           
 25711                           ;stkvar	_fmt @ sp[(-32)+-4]
 25712  0139A6  0EDC               	movlw	-36
 25713  0139A8  006F FF8F FFD9     	movff	plusw1,fsr2l
 25714  0139AE  0EDD               	movlw	-35
 25715  0139B0  006F FF8F FFDA     	movff	plusw1,fsr2h
 25716  0139B6  006F FF7B FFF6     	movff	postinc2,tblptrl
 25717  0139BC  006F FF77 FFF7     	movff	postdec2,tblptrh
 25718  0139C2                     	if	0	;tblptru may be non-zero
 25719  0139C2                     	endif
 25720  0139C2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 25721  0139C2  0E00               	movlw	low (__mediumconst shr (0+16))
 25722  0139C4  6EF8               	movwf	tblptru,c
 25723  0139C6                     	endif
 25724  0139C6  0008               	tblrd		*
 25725  0139C8  50F5               	movf	tablat,w,c
 25726  0139CA  6E32               	movwf	(btemp+8)^0,c
 25727  0139CC  6A33               	clrf	(btemp+9)^0,c
 25728  0139CE  5034               	movf	(btemp+10)^0,w,c
 25729  0139D0  2632               	addwf	(btemp+8)^0,f,c
 25730  0139D2  5035               	movf	(btemp+11)^0,w,c
 25731  0139D4  2233               	addwfc	(btemp+9)^0,f,c
 25732  0139D6  5033               	movf	(btemp+9)^0,w,c
 25733  0139D8  E106               	bnz	u15640
 25734  0139DA  0E0A               	movlw	10
 25735  0139DC  5C32               	subwf	(btemp+8)^0,w,c
 25736  0139DE  B0D8               	btfsc	status,0,c
 25737  0139E0  D002               	goto	u15640
 25738  0139E2  0E01               	movlw	1
 25739  0139E4  D001               	goto	u15650
 25740  0139E6                     u15640:
 25741  0139E6  0E00               	movlw	0
 25742  0139E8                     u15650:
 25743  0139E8  6E34               	movwf	(btemp+10)^0,c
 25744  0139EA  6A35               	clrf	(btemp+11)^0,c
 25745                           
 25746                           ;stkvar	_vfpfcnvrt$6661 @ sp[(-32)+4]
 25747  0139EC  0EE4               	movlw	-28
 25748  0139EE  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 25749  0139F4  0EE5               	movlw	-27
 25750  0139F6  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 25751                           
 25752                           ;stkvar	_vfpfcnvrt$6661 @ sp[(-32)+4]
 25753  0139FC  0EE4               	movlw	-28
 25754  0139FE  006F FF8C  F02A    	movff	plusw1,btemp
 25755  013A04  0EE5               	movlw	-27
 25756  013A06  50E3               	movf	plusw1,w,c
 25757  013A08  102A               	iorwf	btemp^0,w,c
 25758  013A0A  A4D8               	btfss	status,2,c
 25759  013A0C  D7BD               	goto	l16128
 25760  013A0E                     u15660:
 25761                           
 25762                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 740:         if ((*fmt)[0] ==
      +                           '.') {
 25763                           ;stkvar	_fmt @ sp[(-32)+-4]
 25764  013A0E  0EDC               	movlw	-36
 25765  013A10  006F FF8F FFD9     	movff	plusw1,fsr2l
 25766  013A16  0EDD               	movlw	-35
 25767  013A18  006F FF8F FFDA     	movff	plusw1,fsr2h
 25768  013A1E  006F FF7B FFF6     	movff	postinc2,tblptrl
 25769  013A24  006F FF77 FFF7     	movff	postdec2,tblptrh
 25770  013A2A                     	if	0	;tblptru may be non-zero
 25771  013A2A                     	endif
 25772  013A2A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 25773  013A2A  0E00               	movlw	low (__mediumconst shr (0+16))
 25774  013A2C  6EF8               	movwf	tblptru,c
 25775  013A2E                     	endif
 25776  013A2E  0008               	tblrd		*
 25777  013A30  50F5               	movf	tablat,w,c
 25778  013A32  0A2E               	xorlw	46
 25779  013A34  A4D8               	btfss	status,2,c
 25780  013A36  D0AC               	goto	u15710
 25781                           
 25782                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 741:             prec = 0;
 25783  013A38  6A4C               	clrf	_prec^0,c
 25784  013A3A  6A4D               	clrf	(_prec+1)^0,c
 25785                           
 25786                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 742:             ++*fmt;
 25787                           ;stkvar	_fmt @ sp[(-32)+-4]
 25788  013A3C  0EDC               	movlw	-36
 25789  013A3E  006F FF8F FFD9     	movff	plusw1,fsr2l
 25790  013A44  0EDD               	movlw	-35
 25791  013A46  006F FF8F FFDA     	movff	plusw1,fsr2h
 25792  013A4C  2ADE               	incf	postinc2,f,c
 25793  013A4E  0E00               	movlw	0
 25794  013A50  22DD               	addwfc	postdec2,f,c
 25795                           
 25796                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 743:             if ((*fmt)[0
      +                          ] == '*') {
 25797                           ;stkvar	_fmt @ sp[(-32)+-4]
 25798  013A52  0EDC               	movlw	-36
 25799  013A54  006F FF8F FFD9     	movff	plusw1,fsr2l
 25800  013A5A  0EDD               	movlw	-35
 25801  013A5C  006F FF8F FFDA     	movff	plusw1,fsr2h
 25802  013A62  006F FF7B FFF6     	movff	postinc2,tblptrl
 25803  013A68  006F FF77 FFF7     	movff	postdec2,tblptrh
 25804  013A6E                     	if	0	;tblptru may be non-zero
 25805  013A6E                     	endif
 25806  013A6E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 25807  013A6E  0E00               	movlw	low (__mediumconst shr (0+16))
 25808  013A70  6EF8               	movwf	tblptru,c
 25809  013A72                     	endif
 25810  013A72  0008               	tblrd		*
 25811  013A74  50F5               	movf	tablat,w,c
 25812  013A76  0A2A               	xorlw	42
 25813  013A78  A4D8               	btfss	status,2,c
 25814  013A7A  D02A               	goto	l16148
 25815                           
 25816                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 744:                 ++*fmt;
 25817                           ;stkvar	_fmt @ sp[(-32)+-4]
 25818  013A7C  0EDC               	movlw	-36
 25819  013A7E  006F FF8F FFD9     	movff	plusw1,fsr2l
 25820  013A84  0EDD               	movlw	-35
 25821  013A86  006F FF8F FFDA     	movff	plusw1,fsr2h
 25822  013A8C  2ADE               	incf	postinc2,f,c
 25823  013A8E  0E00               	movlw	0
 25824  013A90  22DD               	addwfc	postdec2,f,c
 25825                           
 25826                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 745:                 prec = (
      +                          *(int *)__va_arg(*(int **)ap, (int)0));
 25827                           ;stkvar	_ap @ sp[(-32)+-6]
 25828  013A92  0EDA               	movlw	-38
 25829  013A94  006F FF8F FFD9     	movff	plusw1,fsr2l
 25830  013A9A  0EDB               	movlw	-37
 25831  013A9C  006F FF8F FFDA     	movff	plusw1,fsr2h
 25832  013AA2  0E02               	movlw	2
 25833  013AA4  5EDE               	subwf	postinc2,f,c
 25834  013AA6  0E00               	movlw	0
 25835  013AA8  5ADD               	subwfb	postdec2,f,c
 25836  013AAA  006F FF78  F034    	movff	postinc2,btemp+10
 25837  013AB0  006F FF74  F035    	movff	postdec2,btemp+11
 25838  013AB6  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 25839  013ABC  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 25840  013AC2  006F FF78  F04C    	movff	postinc2,_prec
 25841  013AC8  006F FF74  F04D    	movff	postdec2,_prec+1
 25842                           
 25843                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 746:             } else {
 25844  013ACE  D060               	goto	u15710
 25845  013AD0                     l16148:
 25846                           
 25847                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 747:                 prec = a
      +                          toi(*fmt);
 25848                           ;stkvar	_fmt @ sp[(-32)+-4]
 25849  013AD0  0EDC               	movlw	-36
 25850  013AD2  006F FF8F FFD9     	movff	plusw1,fsr2l
 25851  013AD8  0EDD               	movlw	-35
 25852  013ADA  006F FF8F FFDA     	movff	plusw1,fsr2h
 25853  013AE0  006F FF78  F034    	movff	postinc2,btemp+10
 25854  013AE6  006F FF74  F035    	movff	postdec2,btemp+11
 25855  013AEC  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 25856  013AF2  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 25857  013AF8  EC64  F0DF         	call	_atoi	;wreg free
 25858  013AFC  0060  F0A8  F04C   	movff	btemp,_prec
 25859  013B02  0060  F0AC  F04D   	movff	btemp+1,_prec+1
 25860                           
 25861                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 748:                 while ((
      +                          0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 25862  013B08  D00B               	goto	l16152
 25863  013B0A                     l16150:
 25864                           
 25865                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 749:                     ++*f
      +                          mt;
 25866                           ;stkvar	_fmt @ sp[(-32)+-4]
 25867  013B0A  0EDC               	movlw	-36
 25868  013B0C  006F FF8F FFD9     	movff	plusw1,fsr2l
 25869  013B12  0EDD               	movlw	-35
 25870  013B14  006F FF8F FFDA     	movff	plusw1,fsr2h
 25871  013B1A  2ADE               	incf	postinc2,f,c
 25872  013B1C  0E00               	movlw	0
 25873  013B1E  22DD               	addwfc	postdec2,f,c
 25874  013B20                     l16152:
 25875  013B20  0ED0               	movlw	208
 25876  013B22  6E34               	movwf	(btemp+10)^0,c
 25877  013B24  0EFF               	movlw	255
 25878  013B26  6E35               	movwf	(btemp+11)^0,c
 25879                           
 25880                           ;stkvar	_fmt @ sp[(-32)+-4]
 25881  013B28  0EDC               	movlw	-36
 25882  013B2A  006F FF8F FFD9     	movff	plusw1,fsr2l
 25883  013B30  0EDD               	movlw	-35
 25884  013B32  006F FF8F FFDA     	movff	plusw1,fsr2h
 25885  013B38  006F FF7B FFF6     	movff	postinc2,tblptrl
 25886  013B3E  006F FF77 FFF7     	movff	postdec2,tblptrh
 25887  013B44                     	if	0	;tblptru may be non-zero
 25888  013B44                     	endif
 25889  013B44                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 25890  013B44  0E00               	movlw	low (__mediumconst shr (0+16))
 25891  013B46  6EF8               	movwf	tblptru,c
 25892  013B48                     	endif
 25893  013B48  0008               	tblrd		*
 25894  013B4A  50F5               	movf	tablat,w,c
 25895  013B4C  6E32               	movwf	(btemp+8)^0,c
 25896  013B4E  6A33               	clrf	(btemp+9)^0,c
 25897  013B50  5034               	movf	(btemp+10)^0,w,c
 25898  013B52  2632               	addwf	(btemp+8)^0,f,c
 25899  013B54  5035               	movf	(btemp+11)^0,w,c
 25900  013B56  2233               	addwfc	(btemp+9)^0,f,c
 25901  013B58  5033               	movf	(btemp+9)^0,w,c
 25902  013B5A  E106               	bnz	u15690
 25903  013B5C  0E0A               	movlw	10
 25904  013B5E  5C32               	subwf	(btemp+8)^0,w,c
 25905  013B60  B0D8               	btfsc	status,0,c
 25906  013B62  D002               	goto	u15690
 25907  013B64  0E01               	movlw	1
 25908  013B66  D001               	goto	u15700
 25909  013B68                     u15690:
 25910  013B68  0E00               	movlw	0
 25911  013B6A                     u15700:
 25912  013B6A  6E34               	movwf	(btemp+10)^0,c
 25913  013B6C  6A35               	clrf	(btemp+11)^0,c
 25914                           
 25915                           ;stkvar	_vfpfcnvrt$6662 @ sp[(-32)+0]
 25916  013B6E  0EE0               	movlw	-32
 25917  013B70  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 25918  013B76  0EE1               	movlw	-31
 25919  013B78  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 25920                           
 25921                           ;stkvar	_vfpfcnvrt$6662 @ sp[(-32)+0]
 25922  013B7E  0EE0               	movlw	-32
 25923  013B80  006F FF8C  F02A    	movff	plusw1,btemp
 25924  013B86  0EE1               	movlw	-31
 25925  013B88  50E3               	movf	plusw1,w,c
 25926  013B8A  102A               	iorwf	btemp^0,w,c
 25927  013B8C  A4D8               	btfss	status,2,c
 25928  013B8E  D7BD               	goto	l16150
 25929  013B90                     u15710:
 25930                           
 25931                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 757:         ct[0] = tolower(
      +                          (int)(*fmt)[0]);
 25932                           ;stkvar	_fmt @ sp[(-32)+-4]
 25933  013B90  0EDC               	movlw	-36
 25934  013B92  006F FF8F FFD9     	movff	plusw1,fsr2l
 25935  013B98  0EDD               	movlw	-35
 25936  013B9A  006F FF8F FFDA     	movff	plusw1,fsr2h
 25937  013BA0  006F FF7B FFF6     	movff	postinc2,tblptrl
 25938  013BA6  006F FF77 FFF7     	movff	postdec2,tblptrh
 25939  013BAC                     	if	0	;tblptru may be non-zero
 25940  013BAC                     	endif
 25941  013BAC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 25942  013BAC  0E00               	movlw	low (__mediumconst shr (0+16))
 25943  013BAE  6EF8               	movwf	tblptru,c
 25944  013BB0                     	endif
 25945  013BB0  0008               	tblrd		*
 25946  013BB2  50F5               	movf	tablat,w,c
 25947  013BB4  6EE6               	movwf	postinc1,c
 25948  013BB6  0E00               	movlw	0
 25949  013BB8  6EE6               	movwf	postinc1,c
 25950  013BBA  EC1A  F007         	call	_tolower	;wreg free
 25951                           
 25952                           ;stkvar	_ct @ sp[(-32)+26]
 25953  013BBE  0EFA               	movlw	-6
 25954  013BC0  0060  F0AB  FFE3   	movff	btemp,plusw1
 25955                           
 25956                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 758:         if (ct[0]) {
 25957                           ;stkvar	_ct @ sp[(-32)+26]
 25958  013BC6  0EFA               	movlw	-6
 25959  013BC8  50E3               	movf	plusw1,w,c
 25960  013BCA  B4D8               	btfsc	status,2,c
 25961  013BCC  D05B               	goto	l16168
 25962                           
 25963                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 759:             ct[1] = tolo
      +                          wer((int)(*fmt)[1]);
 25964                           ;stkvar	_ct @ sp[(-32)+26]
 25965  013BCE  0EFB               	movlw	251
 25966  013BD0  24E1               	addwf	fsr1l,w,c
 25967  013BD2  6ED9               	movwf	fsr2l,c
 25968  013BD4  0EFF               	movlw	255
 25969  013BD6  20E2               	addwfc	fsr1h,w,c
 25970  013BD8  6EDA               	movwf	fsr2h,c
 25971                           
 25972                           ;stkvar	_fmt @ sp[(-32)+-4]
 25973  013BDA  0EDC               	movlw	-36
 25974  013BDC  006F FF8F FFE9     	movff	plusw1,fsr0l
 25975  013BE2  0EDD               	movlw	-35
 25976  013BE4  006F FF8F FFEA     	movff	plusw1,fsr0h
 25977  013BEA  006F FFB8  F034    	movff	postinc0,btemp+10
 25978  013BF0  006F FFB4  F035    	movff	postdec0,btemp+11
 25979  013BF6  0E01               	movlw	1
 25980  013BF8  2634               	addwf	(btemp+10)^0,f,c
 25981  013BFA  0E00               	movlw	0
 25982  013BFC  2235               	addwfc	(btemp+11)^0,f,c
 25983  013BFE  0060  F0D3  FFF6   	movff	btemp+10,tblptrl
 25984  013C04  0060  F0D7  FFF7   	movff	btemp+11,tblptrh
 25985  013C0A                     	if	0	;tblptru may be non-zero
 25986  013C0A                     	endif
 25987  013C0A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 25988  013C0A  0E00               	movlw	low (__mediumconst shr (0+16))
 25989  013C0C  6EF8               	movwf	tblptru,c
 25990  013C0E                     	endif
 25991  013C0E  0008               	tblrd		*
 25992  013C10  50F5               	movf	tablat,w,c
 25993  013C12  6EE6               	movwf	postinc1,c
 25994  013C14  0E00               	movlw	0
 25995  013C16  6EE6               	movwf	postinc1,c
 25996  013C18  EC1A  F007         	call	_tolower	;wreg free
 25997  013C1C  502A               	movf	btemp^0,w,c
 25998  013C1E  6EDF               	movwf	indf2,c
 25999                           
 26000                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 760:             if (ct[1]) {
 26001                           ;stkvar	_ct @ sp[(-32)+26]
 26002  013C20  0EFB               	movlw	251
 26003  013C22  24E1               	addwf	fsr1l,w,c
 26004  013C24  6ED9               	movwf	fsr2l,c
 26005  013C26  0EFF               	movlw	255
 26006  013C28  20E2               	addwfc	fsr1h,w,c
 26007  013C2A  6EDA               	movwf	fsr2h,c
 26008  013C2C  50DF               	movf	indf2,w,c
 26009  013C2E  B4D8               	btfsc	status,2,c
 26010  013C30  D029               	goto	l16168
 26011                           
 26012                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 761:                 ct[2] = 
      +                          tolower((int)(*fmt)[2]);
 26013                           ;stkvar	_ct @ sp[(-32)+26]
 26014  013C32  0EFC               	movlw	252
 26015  013C34  24E1               	addwf	fsr1l,w,c
 26016  013C36  6ED9               	movwf	fsr2l,c
 26017  013C38  0EFF               	movlw	255
 26018  013C3A  20E2               	addwfc	fsr1h,w,c
 26019  013C3C  6EDA               	movwf	fsr2h,c
 26020                           
 26021                           ;stkvar	_fmt @ sp[(-32)+-4]
 26022  013C3E  0EDC               	movlw	-36
 26023  013C40  006F FF8F FFE9     	movff	plusw1,fsr0l
 26024  013C46  0EDD               	movlw	-35
 26025  013C48  006F FF8F FFEA     	movff	plusw1,fsr0h
 26026  013C4E  006F FFB8  F034    	movff	postinc0,btemp+10
 26027  013C54  006F FFB4  F035    	movff	postdec0,btemp+11
 26028  013C5A  0E02               	movlw	2
 26029  013C5C  2634               	addwf	(btemp+10)^0,f,c
 26030  013C5E  0E00               	movlw	0
 26031  013C60  2235               	addwfc	(btemp+11)^0,f,c
 26032  013C62  0060  F0D3  FFF6   	movff	btemp+10,tblptrl
 26033  013C68  0060  F0D7  FFF7   	movff	btemp+11,tblptrh
 26034  013C6E                     	if	0	;tblptru may be non-zero
 26035  013C6E                     	endif
 26036  013C6E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26037  013C6E  0E00               	movlw	low (__mediumconst shr (0+16))
 26038  013C70  6EF8               	movwf	tblptru,c
 26039  013C72                     	endif
 26040  013C72  0008               	tblrd		*
 26041  013C74  50F5               	movf	tablat,w,c
 26042  013C76  6EE6               	movwf	postinc1,c
 26043  013C78  0E00               	movlw	0
 26044  013C7A  6EE6               	movwf	postinc1,c
 26045  013C7C  EC1A  F007         	call	_tolower	;wreg free
 26046  013C80  502A               	movf	btemp^0,w,c
 26047  013C82  6EDF               	movwf	indf2,c
 26048  013C84                     l16168:
 26049                           
 26050                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
 26051                           ;stkvar	_fmt @ sp[(-32)+-4]
 26052  013C84  0EDC               	movlw	-36
 26053  013C86  006F FF8F FFD9     	movff	plusw1,fsr2l
 26054  013C8C  0EDD               	movlw	-35
 26055  013C8E  006F FF8F FFDA     	movff	plusw1,fsr2h
 26056  013C94  006F FF7B FFF6     	movff	postinc2,tblptrl
 26057  013C9A  006F FF77 FFF7     	movff	postdec2,tblptrh
 26058  013CA0                     	if	0	;tblptru may be non-zero
 26059  013CA0                     	endif
 26060  013CA0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26061  013CA0  0E00               	movlw	low (__mediumconst shr (0+16))
 26062  013CA2  6EF8               	movwf	tblptru,c
 26063  013CA4                     	endif
 26064  013CA4  0008               	tblrd		*
 26065  013CA6  50F5               	movf	tablat,w,c
 26066  013CA8  0A63               	xorlw	99
 26067  013CAA  A4D8               	btfss	status,2,c
 26068  013CAC  D037               	goto	l16178
 26069                           
 26070                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
 26071                           ;stkvar	_fmt @ sp[(-32)+-4]
 26072  013CAE  0EDC               	movlw	-36
 26073  013CB0  006F FF8F FFD9     	movff	plusw1,fsr2l
 26074  013CB6  0EDD               	movlw	-35
 26075  013CB8  006F FF8F FFDA     	movff	plusw1,fsr2h
 26076  013CBE  2ADE               	incf	postinc2,f,c
 26077  013CC0  0E00               	movlw	0
 26078  013CC2  22DD               	addwfc	postdec2,f,c
 26079                           
 26080                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
 26081                           ;stkvar	_ap @ sp[(-32)+-6]
 26082  013CC4  0EDA               	movlw	-38
 26083  013CC6  006F FF8F FFD9     	movff	plusw1,fsr2l
 26084  013CCC  0EDB               	movlw	-37
 26085  013CCE  006F FF8F FFDA     	movff	plusw1,fsr2h
 26086  013CD4  0E02               	movlw	2
 26087  013CD6  5EDE               	subwf	postinc2,f,c
 26088  013CD8  0E00               	movlw	0
 26089  013CDA  5ADD               	subwfb	postdec2,f,c
 26090  013CDC  006F FF78  F034    	movff	postinc2,btemp+10
 26091  013CE2  006F FF74  F035    	movff	postdec2,btemp+11
 26092  013CE8  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 26093  013CEE  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 26094  013CF4  50DF               	movf	indf2,w,c
 26095  013CF6  6E35               	movwf	(btemp+11)^0,c
 26096                           
 26097                           ;stkvar	_c @ sp[(-32)+31]
 26098  013CF8  0EFF               	movlw	-1
 26099  013CFA  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 26100                           
 26101                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
 26102                           ;stkvar	_c @ sp[(-32)+31]
 26103  013D00  0EFF               	movlw	-1
 26104  013D02  50E3               	movf	plusw1,w,c
 26105  013D04  6EE6               	movwf	postinc1,c
 26106                           
 26107                           ;stkvar	_fp @ sp[(-33)+-2]
 26108  013D06  0EDD               	movlw	-35
 26109  013D08  006F FF8F FFE6     	movff	plusw1,postinc1
 26110  013D0E  006F FF8F FFE6     	movff	plusw1,postinc1
 26111  013D14  EC94  F006         	call	_ctoa	;wreg free
 26112  013D18  EF07  F0A4         	goto	l2689
 26113  013D1C                     l16178:
 26114                           
 26115                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
 26116                           ;stkvar	_fmt @ sp[(-32)+-4]
 26117  013D1C  0EDC               	movlw	-36
 26118  013D1E  006F FF8F FFD9     	movff	plusw1,fsr2l
 26119  013D24  0EDD               	movlw	-35
 26120  013D26  006F FF8F FFDA     	movff	plusw1,fsr2h
 26121  013D2C  006F FF7B FFF6     	movff	postinc2,tblptrl
 26122  013D32  006F FF77 FFF7     	movff	postdec2,tblptrh
 26123  013D38                     	if	0	;tblptru may be non-zero
 26124  013D38                     	endif
 26125  013D38                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26126  013D38  0E00               	movlw	low (__mediumconst shr (0+16))
 26127  013D3A  6EF8               	movwf	tblptru,c
 26128  013D3C                     	endif
 26129  013D3C  0008               	tblrd		*
 26130  013D3E  50F5               	movf	tablat,w,c
 26131  013D40  0A64               	xorlw	100
 26132  013D42  B4D8               	btfsc	status,2,c
 26133  013D44  D015               	goto	u15760
 26134                           
 26135                           ;stkvar	_fmt @ sp[(-32)+-4]
 26136  013D46  0EDC               	movlw	-36
 26137  013D48  006F FF8F FFD9     	movff	plusw1,fsr2l
 26138  013D4E  0EDD               	movlw	-35
 26139  013D50  006F FF8F FFDA     	movff	plusw1,fsr2h
 26140  013D56  006F FF7B FFF6     	movff	postinc2,tblptrl
 26141  013D5C  006F FF77 FFF7     	movff	postdec2,tblptrh
 26142  013D62                     	if	0	;tblptru may be non-zero
 26143  013D62                     	endif
 26144  013D62                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26145  013D62  0E00               	movlw	low (__mediumconst shr (0+16))
 26146  013D64  6EF8               	movwf	tblptru,c
 26147  013D66                     	endif
 26148  013D66  0008               	tblrd		*
 26149  013D68  50F5               	movf	tablat,w,c
 26150  013D6A  0A69               	xorlw	105
 26151  013D6C  A4D8               	btfss	status,2,c
 26152  013D6E  D076               	goto	l16190
 26153  013D70                     u15760:
 26154                           
 26155                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
 26156                           ;stkvar	_fmt @ sp[(-32)+-4]
 26157  013D70  0EDC               	movlw	-36
 26158  013D72  006F FF8F FFD9     	movff	plusw1,fsr2l
 26159  013D78  0EDD               	movlw	-35
 26160  013D7A  006F FF8F FFDA     	movff	plusw1,fsr2h
 26161  013D80  2ADE               	incf	postinc2,f,c
 26162  013D82  0E00               	movlw	0
 26163  013D84  22DD               	addwfc	postdec2,f,c
 26164                           
 26165                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
 26166                           ;stkvar	_ap @ sp[(-32)+-6]
 26167  013D86  0EDA               	movlw	-38
 26168  013D88  006F FF8F FFD9     	movff	plusw1,fsr2l
 26169  013D8E  0EDB               	movlw	-37
 26170  013D90  006F FF8F FFDA     	movff	plusw1,fsr2h
 26171  013D96  0E02               	movlw	2
 26172  013D98  5EDE               	subwf	postinc2,f,c
 26173  013D9A  0E00               	movlw	0
 26174  013D9C  5ADD               	subwfb	postdec2,f,c
 26175  013D9E  006F FF78  F034    	movff	postinc2,btemp+10
 26176  013DA4  006F FF74  F035    	movff	postdec2,btemp+11
 26177  013DAA  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 26178  013DB0  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 26179  013DB6  006F FF78  F034    	movff	postinc2,btemp+10
 26180  013DBC  006F FF74  F035    	movff	postdec2,btemp+11
 26181                           
 26182                           ;stkvar	_ll @ sp[(-32)+14]
 26183  013DC2  0EEE               	movlw	-18
 26184  013DC4  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 26185  013DCA  0EEF               	movlw	-17
 26186  013DCC  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 26187  013DD2  6A2A               	clrf	btemp^0,c
 26188  013DD4  BEE3               	btfsc	plusw1,7,c
 26189  013DD6  682A               	setf	btemp^0,c
 26190  013DD8  0EF0               	movlw	-16
 26191  013DDA  0060  F0AB  FFE3   	movff	btemp,plusw1
 26192  013DE0  0EF1               	movlw	-15
 26193  013DE2  0060  F0AB  FFE3   	movff	btemp,plusw1
 26194  013DE8  0EF2               	movlw	-14
 26195  013DEA  0060  F0AB  FFE3   	movff	btemp,plusw1
 26196  013DF0  0EF3               	movlw	-13
 26197  013DF2  0060  F0AB  FFE3   	movff	btemp,plusw1
 26198  013DF8  0EF4               	movlw	-12
 26199  013DFA  0060  F0AB  FFE3   	movff	btemp,plusw1
 26200  013E00  0EF5               	movlw	-11
 26201  013E02  0060  F0AB  FFE3   	movff	btemp,plusw1
 26202  013E08                     l16186:
 26203                           
 26204                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
 26205                           ;stkvar	_ll @ sp[(-32)+14]
 26206  013E08  50E1               	movf	fsr1l,w,c
 26207  013E0A  0FEE               	addlw	-18
 26208  013E0C  6ED9               	movwf	fsr2l,c
 26209  013E0E  50E2               	movf	fsr1h,w,c
 26210  013E10  6EDA               	movwf	fsr2h,c
 26211  013E12  0EFF               	movlw	255
 26212  013E14  22DA               	addwfc	fsr2h,f,c
 26213  013E16  006F FF7B FFE6     	movff	postinc2,postinc1
 26214  013E1C  006F FF7B FFE6     	movff	postinc2,postinc1
 26215  013E22  006F FF7B FFE6     	movff	postinc2,postinc1
 26216  013E28  006F FF7B FFE6     	movff	postinc2,postinc1
 26217  013E2E  006F FF7B FFE6     	movff	postinc2,postinc1
 26218  013E34  006F FF7B FFE6     	movff	postinc2,postinc1
 26219  013E3A  006F FF7B FFE6     	movff	postinc2,postinc1
 26220  013E40  006F FF7B FFE6     	movff	postinc2,postinc1
 26221                           
 26222                           ;stkvar	_fp @ sp[(-40)+-2]
 26223  013E46  0ED6               	movlw	-42
 26224  013E48  006F FF8F FFE6     	movff	plusw1,postinc1
 26225  013E4E  006F FF8F FFE6     	movff	plusw1,postinc1
 26226  013E54  EC44  F0C5         	call	_dtoa	;wreg free
 26227  013E58  EF07  F0A4         	goto	l2689
 26228  013E5C                     l16190:
 26229                           
 26230                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 835:         if (!strncmp(*fm
      +                          t, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", ((sizeof("li")/size
      +                          of("li"[0]))-1))) {
 26231  013E5C  0E02               	movlw	2
 26232  013E5E  6EE6               	movwf	postinc1,c
 26233  013E60  0E00               	movlw	0
 26234  013E62  6EE6               	movwf	postinc1,c
 26235  013E64  0EED               	movlw	low STR_99
 26236  013E66  6EE6               	movwf	postinc1,c
 26237  013E68  0EFF               	movlw	high STR_99
 26238  013E6A  6EE6               	movwf	postinc1,c
 26239                           
 26240                           ;stkvar	_fmt @ sp[(-36)+-4]
 26241  013E6C  0ED8               	movlw	-40
 26242  013E6E  006F FF8F FFD9     	movff	plusw1,fsr2l
 26243  013E74  0ED9               	movlw	-39
 26244  013E76  006F FF8F FFDA     	movff	plusw1,fsr2h
 26245  013E7C  006F FF78  F034    	movff	postinc2,btemp+10
 26246  013E82  006F FF74  F035    	movff	postdec2,btemp+11
 26247  013E88  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 26248  013E8E  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 26249  013E94  EC48  F0E6         	call	_strncmp	;wreg free
 26250  013E98  502A               	movf	btemp^0,w,c
 26251  013E9A  102B               	iorwf	(btemp+1)^0,w,c
 26252  013E9C  B4D8               	btfsc	status,2,c
 26253  013E9E  D022               	goto	u15780
 26254  013EA0  0E02               	movlw	2
 26255  013EA2  6EE6               	movwf	postinc1,c
 26256  013EA4  0E00               	movlw	0
 26257  013EA6  6EE6               	movwf	postinc1,c
 26258  013EA8  0EF3               	movlw	low STR_103
 26259  013EAA  6EE6               	movwf	postinc1,c
 26260  013EAC  0EFF               	movlw	high STR_103
 26261  013EAE  6EE6               	movwf	postinc1,c
 26262                           
 26263                           ;stkvar	_fmt @ sp[(-36)+-4]
 26264  013EB0  0ED8               	movlw	-40
 26265  013EB2  006F FF8F FFD9     	movff	plusw1,fsr2l
 26266  013EB8  0ED9               	movlw	-39
 26267  013EBA  006F FF8F FFDA     	movff	plusw1,fsr2h
 26268  013EC0  006F FF78  F034    	movff	postinc2,btemp+10
 26269  013EC6  006F FF74  F035    	movff	postdec2,btemp+11
 26270  013ECC  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 26271  013ED2  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 26272  013ED8  EC48  F0E6         	call	_strncmp	;wreg free
 26273  013EDC  502A               	movf	btemp^0,w,c
 26274  013EDE  102B               	iorwf	(btemp+1)^0,w,c
 26275  013EE0  A4D8               	btfss	status,2,c
 26276  013EE2  D069               	goto	l16202
 26277  013EE4                     u15780:
 26278                           
 26279                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 836: ;/opt/microchip/xc8/v2.1
      +                          0/pic/sources/c99/common/doprnt.c: 838:             *fmt += ((sizeof("ld")/sizeof("ld"[0
      +                          ]))-1);
 26280                           ;stkvar	_fmt @ sp[(-32)+-4]
 26281  013EE4  0EDC               	movlw	-36
 26282  013EE6  006F FF8F FFD9     	movff	plusw1,fsr2l
 26283  013EEC  0EDD               	movlw	-35
 26284  013EEE  006F FF8F FFDA     	movff	plusw1,fsr2h
 26285  013EF4  0E02               	movlw	2
 26286  013EF6  26DE               	addwf	postinc2,f,c
 26287  013EF8  0E00               	movlw	0
 26288  013EFA  22DD               	addwfc	postdec2,f,c
 26289                           
 26290                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 839:             ll = (long l
      +                          ong)(*(long *)__va_arg(*(long **)ap, (long)0));
 26291                           ;stkvar	_ap @ sp[(-32)+-6]
 26292  013EFC  0EDA               	movlw	-38
 26293  013EFE  006F FF8F FFD9     	movff	plusw1,fsr2l
 26294  013F04  0EDB               	movlw	-37
 26295  013F06  006F FF8F FFDA     	movff	plusw1,fsr2h
 26296  013F0C  0E04               	movlw	4
 26297  013F0E  5EDE               	subwf	postinc2,f,c
 26298  013F10  0E00               	movlw	0
 26299  013F12  5ADD               	subwfb	postdec2,f,c
 26300  013F14  006F FF78  F034    	movff	postinc2,btemp+10
 26301  013F1A  006F FF74  F035    	movff	postdec2,btemp+11
 26302  013F20  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 26303  013F26  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 26304  013F2C  006F FF78  F032    	movff	postinc2,btemp+8
 26305  013F32  006F FF78  F033    	movff	postinc2,btemp+9
 26306  013F38  006F FF78  F034    	movff	postinc2,btemp+10
 26307  013F3E  006F FF78  F035    	movff	postinc2,btemp+11
 26308  013F44  0060  F0C8  F03A   	movff	btemp+8,btemp+16
 26309  013F4A  0060  F0CC  F03B   	movff	btemp+9,btemp+17
 26310  013F50  0060  F0D0  F03C   	movff	btemp+10,btemp+18
 26311  013F56  0060  F0D4  F03D   	movff	btemp+11,btemp+19
 26312  013F5C  6A3E               	clrf	(btemp+20)^0,c
 26313  013F5E  BE3D               	btfsc	(btemp+19)^0,7,c
 26314  013F60  683E               	setf	(btemp+20)^0,c
 26315  013F62  0060  F0F8  F03F   	movff	btemp+20,btemp+21
 26316  013F68  0060  F0F8  F040   	movff	btemp+20,btemp+22
 26317  013F6E  0060  F0F8  F041   	movff	btemp+20,btemp+23
 26318                           
 26319                           ;stkvar	_ll @ sp[(-32)+14]
 26320  013F74  0EEE               	movlw	-18
 26321  013F76  0060  F0EB  FFE3   	movff	btemp+16,plusw1
 26322  013F7C  0EEF               	movlw	-17
 26323  013F7E  0060  F0EF  FFE3   	movff	btemp+17,plusw1
 26324  013F84  0EF0               	movlw	-16
 26325  013F86  0060  F0F3  FFE3   	movff	btemp+18,plusw1
 26326  013F8C  0EF1               	movlw	-15
 26327  013F8E  0060  F0F7  FFE3   	movff	btemp+19,plusw1
 26328  013F94  0EF2               	movlw	-14
 26329  013F96  0060  F0FB  FFE3   	movff	btemp+20,plusw1
 26330  013F9C  0EF3               	movlw	-13
 26331  013F9E  0060  F0FF  FFE3   	movff	btemp+21,plusw1
 26332  013FA4  0EF4               	movlw	-12
 26333  013FA6  0060  F103  FFE3   	movff	btemp+22,plusw1
 26334  013FAC  0EF5               	movlw	-11
 26335  013FAE  0060  F107  FFE3   	movff	btemp+23,plusw1
 26336  013FB4  D729               	goto	l16186
 26337  013FB6                     l16202:
 26338                           
 26339                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 920:         if (ct[0] == 'f'
      +                          ) {
 26340                           ;stkvar	_ct @ sp[(-32)+26]
 26341  013FB6  0EFA               	movlw	-6
 26342  013FB8  006F FF8C  F02A    	movff	plusw1,btemp
 26343  013FBE  0E66               	movlw	102
 26344  013FC0  182A               	xorwf	btemp^0,w,c
 26345  013FC2  A4D8               	btfss	status,2,c
 26346  013FC4  D06E               	goto	l16214
 26347                           
 26348                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 922:             c = (*fmt)[0
      +                          ];
 26349                           ;stkvar	_fmt @ sp[(-32)+-4]
 26350  013FC6  0EDC               	movlw	-36
 26351  013FC8  006F FF8F FFD9     	movff	plusw1,fsr2l
 26352  013FCE  0EDD               	movlw	-35
 26353  013FD0  006F FF8F FFDA     	movff	plusw1,fsr2h
 26354  013FD6  006F FF7B FFF6     	movff	postinc2,tblptrl
 26355  013FDC  006F FF77 FFF7     	movff	postdec2,tblptrh
 26356  013FE2                     	if	0	;tblptru may be non-zero
 26357  013FE2                     	endif
 26358  013FE2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26359  013FE2  0E00               	movlw	low (__mediumconst shr (0+16))
 26360  013FE4  6EF8               	movwf	tblptru,c
 26361  013FE6                     	endif
 26362                           
 26363                           ;stkvar	_c @ sp[(-32)+31]
 26364  013FE6  0008               	tblrd		*
 26365  013FE8  0EFF               	movlw	-1
 26366  013FEA  006F FFD7 FFE3     	movff	tablat,plusw1
 26367                           
 26368                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 923:             ++*fmt;
 26369                           ;stkvar	_fmt @ sp[(-32)+-4]
 26370  013FF0  0EDC               	movlw	-36
 26371  013FF2  006F FF8F FFD9     	movff	plusw1,fsr2l
 26372  013FF8  0EDD               	movlw	-35
 26373  013FFA  006F FF8F FFDA     	movff	plusw1,fsr2h
 26374  014000  2ADE               	incf	postinc2,f,c
 26375  014002  0E00               	movlw	0
 26376  014004  22DD               	addwfc	postdec2,f,c
 26377                           
 26378                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 924:             f = (long do
      +                          uble)(*(double *)__va_arg(*(double **)ap, (double)0));
 26379                           ;stkvar	_ap @ sp[(-32)+-6]
 26380  014006  0EDA               	movlw	-38
 26381  014008  006F FF8F FFD9     	movff	plusw1,fsr2l
 26382  01400E  0EDB               	movlw	-37
 26383  014010  006F FF8F FFDA     	movff	plusw1,fsr2h
 26384  014016  0E04               	movlw	4
 26385  014018  5EDE               	subwf	postinc2,f,c
 26386  01401A  0E00               	movlw	0
 26387  01401C  5ADD               	subwfb	postdec2,f,c
 26388  01401E  006F FF78  F034    	movff	postinc2,btemp+10
 26389  014024  006F FF74  F035    	movff	postdec2,btemp+11
 26390  01402A  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 26391  014030  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 26392  014036  006F FF78  F032    	movff	postinc2,btemp+8
 26393  01403C  006F FF78  F033    	movff	postinc2,btemp+9
 26394  014042  006F FF78  F034    	movff	postinc2,btemp+10
 26395  014048  006F FF78  F035    	movff	postinc2,btemp+11
 26396                           
 26397                           ;stkvar	_f @ sp[(-32)+22]
 26398  01404E  0EF6               	movlw	-10
 26399  014050  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 26400  014056  0EF7               	movlw	-9
 26401  014058  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 26402  01405E  0EF8               	movlw	-8
 26403  014060  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 26404  014066  0EF9               	movlw	-7
 26405  014068  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 26406  01406E                     l16210:
 26407                           
 26408                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 926:             return efgto
      +                          a(fp, f, c);
 26409                           ;stkvar	_c @ sp[(-32)+31]
 26410  01406E  0EFF               	movlw	-1
 26411  014070  50E3               	movf	plusw1,w,c
 26412  014072  6EE6               	movwf	postinc1,c
 26413                           
 26414                           ;stkvar	_f @ sp[(-33)+22]
 26415  014074  0EF5               	movlw	-11
 26416  014076  006F FF8F FFE6     	movff	plusw1,postinc1
 26417  01407C  006F FF8F FFE6     	movff	plusw1,postinc1
 26418  014082  006F FF8F FFE6     	movff	plusw1,postinc1
 26419  014088  006F FF8F FFE6     	movff	plusw1,postinc1
 26420                           
 26421                           ;stkvar	_fp @ sp[(-37)+-2]
 26422  01408E  0ED9               	movlw	-39
 26423  014090  006F FF8F FFE6     	movff	plusw1,postinc1
 26424  014096  006F FF8F FFE6     	movff	plusw1,postinc1
 26425  01409C  ECAB  F08A         	call	_efgtoa	;wreg free
 26426  0140A0  D3B6               	goto	l2689
 26427  0140A2                     l16214:
 26428                           
 26429                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 928:         if (!strncmp(ct,
      +                           "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
 26430  0140A2  0E02               	movlw	2
 26431  0140A4  6EE6               	movwf	postinc1,c
 26432  0140A6  0E00               	movlw	0
 26433  0140A8  6EE6               	movwf	postinc1,c
 26434  0140AA  0EF0               	movlw	low STR_108
 26435  0140AC  6EE6               	movwf	postinc1,c
 26436  0140AE  0EFF               	movlw	high STR_108
 26437  0140B0  6EE6               	movwf	postinc1,c
 26438                           
 26439                           ;stkvar	_ct @ sp[(-36)+26]
 26440  0140B2  0EF6               	movlw	246
 26441  0140B4  24E1               	addwf	fsr1l,w,c
 26442  0140B6  6E2A               	movwf	btemp^0,c
 26443  0140B8  0EFF               	movlw	255
 26444  0140BA  20E2               	addwfc	fsr1h,w,c
 26445  0140BC  6E2B               	movwf	(btemp+1)^0,c
 26446  0140BE  0060  F0AB  FFE6   	movff	btemp,postinc1
 26447  0140C4  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 26448  0140CA  EC48  F0E6         	call	_strncmp	;wreg free
 26449  0140CE  502A               	movf	btemp^0,w,c
 26450  0140D0  102B               	iorwf	(btemp+1)^0,w,c
 26451  0140D2  A4D8               	btfss	status,2,c
 26452  0140D4  D096               	goto	l16234
 26453                           
 26454                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 931:             if ((0 ? isu
      +                          pper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
 26455                           ;stkvar	_fmt @ sp[(-32)+-4]
 26456  0140D6  0EDC               	movlw	-36
 26457  0140D8  006F FF8F FFD9     	movff	plusw1,fsr2l
 26458  0140DE  0EDD               	movlw	-35
 26459  0140E0  006F FF8F FFDA     	movff	plusw1,fsr2h
 26460  0140E6  006F FF78  F034    	movff	postinc2,btemp+10
 26461  0140EC  006F FF74  F035    	movff	postdec2,btemp+11
 26462  0140F2  0E01               	movlw	1
 26463  0140F4  2634               	addwf	(btemp+10)^0,f,c
 26464  0140F6  0E00               	movlw	0
 26465  0140F8  2235               	addwfc	(btemp+11)^0,f,c
 26466  0140FA  0060  F0D3  FFF6   	movff	btemp+10,tblptrl
 26467  014100  0060  F0D7  FFF7   	movff	btemp+11,tblptrh
 26468  014106                     	if	0	;tblptru may be non-zero
 26469  014106                     	endif
 26470  014106                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26471  014106  0E00               	movlw	low (__mediumconst shr (0+16))
 26472  014108  6EF8               	movwf	tblptru,c
 26473  01410A                     	endif
 26474                           
 26475                           ;stkvar	_c @ sp[(-32)+31]
 26476  01410A  0008               	tblrd		*
 26477  01410C  0EFF               	movlw	-1
 26478  01410E  006F FFD7 FFE3     	movff	tablat,plusw1
 26479  014114  0EBF               	movlw	191
 26480  014116  6E34               	movwf	(btemp+10)^0,c
 26481  014118  0EFF               	movlw	255
 26482  01411A  6E35               	movwf	(btemp+11)^0,c
 26483                           
 26484                           ;stkvar	_fmt @ sp[(-32)+-4]
 26485  01411C  0EDC               	movlw	-36
 26486  01411E  006F FF8F FFD9     	movff	plusw1,fsr2l
 26487  014124  0EDD               	movlw	-35
 26488  014126  006F FF8F FFDA     	movff	plusw1,fsr2h
 26489  01412C  006F FF7B FFF6     	movff	postinc2,tblptrl
 26490  014132  006F FF77 FFF7     	movff	postdec2,tblptrh
 26491  014138                     	if	0	;tblptru may be non-zero
 26492  014138                     	endif
 26493  014138                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26494  014138  0E00               	movlw	low (__mediumconst shr (0+16))
 26495  01413A  6EF8               	movwf	tblptru,c
 26496  01413C                     	endif
 26497  01413C  0008               	tblrd		*
 26498  01413E  50F5               	movf	tablat,w,c
 26499  014140  6E32               	movwf	(btemp+8)^0,c
 26500  014142  6A33               	clrf	(btemp+9)^0,c
 26501  014144  5034               	movf	(btemp+10)^0,w,c
 26502  014146  2632               	addwf	(btemp+8)^0,f,c
 26503  014148  5035               	movf	(btemp+11)^0,w,c
 26504  01414A  2233               	addwfc	(btemp+9)^0,f,c
 26505  01414C  5033               	movf	(btemp+9)^0,w,c
 26506  01414E  E106               	bnz	u15810
 26507  014150  0E1A               	movlw	26
 26508  014152  5C32               	subwf	(btemp+8)^0,w,c
 26509  014154  B0D8               	btfsc	status,0,c
 26510  014156  D002               	goto	u15810
 26511  014158  0E01               	movlw	1
 26512  01415A  D001               	goto	u15820
 26513  01415C                     u15810:
 26514  01415C  0E00               	movlw	0
 26515  01415E                     u15820:
 26516  01415E  6E34               	movwf	(btemp+10)^0,c
 26517  014160  6A35               	clrf	(btemp+11)^0,c
 26518                           
 26519                           ;stkvar	_vfpfcnvrt$6673 @ sp[(-32)+2]
 26520  014162  0EE2               	movlw	-30
 26521  014164  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 26522  01416A  0EE3               	movlw	-29
 26523  01416C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 26524                           
 26525                           ;stkvar	_vfpfcnvrt$6673 @ sp[(-32)+2]
 26526  014172  0EE2               	movlw	-30
 26527  014174  006F FF8C  F02A    	movff	plusw1,btemp
 26528  01417A  0EE3               	movlw	-29
 26529  01417C  50E3               	movf	plusw1,w,c
 26530  01417E  102A               	iorwf	btemp^0,w,c
 26531                           
 26532                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 934:                 f = (lon
      +                          g double)(*(double *)__va_arg(*(double **)ap, (double)0));
 26533                           ;stkvar	_ap @ sp[(-32)+-6]
 26534                           
 26535                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 933:             } else {
 26536                           
 26537                           ;stkvar	_f @ sp[(-32)+22]
 26538                           
 26539                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 932:                 f = (*(l
      +                          ong double *)__va_arg(*(long double **)ap, (long double)0));
 26540                           ;stkvar	_ap @ sp[(-32)+-6]
 26541  014180  0EDA               	movlw	-38
 26542  014182  006F FF8F FFD9     	movff	plusw1,fsr2l
 26543  014188  0EDB               	movlw	-37
 26544  01418A  006F FF8F FFDA     	movff	plusw1,fsr2h
 26545  014190  0E04               	movlw	4
 26546  014192  5EDE               	subwf	postinc2,f,c
 26547  014194  0E00               	movlw	0
 26548  014196  5ADD               	subwfb	postdec2,f,c
 26549  014198  006F FF78  F034    	movff	postinc2,btemp+10
 26550  01419E  006F FF74  F035    	movff	postdec2,btemp+11
 26551  0141A4  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 26552  0141AA  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 26553  0141B0  006F FF78  F032    	movff	postinc2,btemp+8
 26554  0141B6  006F FF78  F033    	movff	postinc2,btemp+9
 26555  0141BC  006F FF78  F034    	movff	postinc2,btemp+10
 26556  0141C2  006F FF78  F035    	movff	postinc2,btemp+11
 26557                           
 26558                           ;stkvar	_f @ sp[(-32)+22]
 26559  0141C8  0EF6               	movlw	-10
 26560  0141CA  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 26561  0141D0  0EF7               	movlw	-9
 26562  0141D2  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 26563  0141D8  0EF8               	movlw	-8
 26564  0141DA  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 26565  0141E0  0EF9               	movlw	-7
 26566  0141E2  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 26567                           
 26568                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 936:             *fmt += ((si
      +                          zeof("lf")/sizeof("lf"[0]))-1);
 26569                           ;stkvar	_fmt @ sp[(-32)+-4]
 26570  0141E8  0EDC               	movlw	-36
 26571  0141EA  006F FF8F FFD9     	movff	plusw1,fsr2l
 26572  0141F0  0EDD               	movlw	-35
 26573  0141F2  006F FF8F FFDA     	movff	plusw1,fsr2h
 26574  0141F8  0E02               	movlw	2
 26575  0141FA  26DE               	addwf	postinc2,f,c
 26576  0141FC  0E00               	movlw	0
 26577  0141FE  22DD               	addwfc	postdec2,f,c
 26578  014200  D736               	goto	l16210
 26579  014202                     l16234:
 26580                           
 26581                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
 26582                           ;stkvar	_fmt @ sp[(-32)+-4]
 26583  014202  0EDC               	movlw	-36
 26584  014204  006F FF8F FFD9     	movff	plusw1,fsr2l
 26585  01420A  0EDD               	movlw	-35
 26586  01420C  006F FF8F FFDA     	movff	plusw1,fsr2h
 26587  014212  006F FF7B FFF6     	movff	postinc2,tblptrl
 26588  014218  006F FF77 FFF7     	movff	postdec2,tblptrh
 26589  01421E                     	if	0	;tblptru may be non-zero
 26590  01421E                     	endif
 26591  01421E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26592  01421E  0E00               	movlw	low (__mediumconst shr (0+16))
 26593  014220  6EF8               	movwf	tblptru,c
 26594  014222                     	endif
 26595  014222  0008               	tblrd		*
 26596  014224  50F5               	movf	tablat,w,c
 26597  014226  0A73               	xorlw	115
 26598  014228  A4D8               	btfss	status,2,c
 26599  01422A  D042               	goto	l16244
 26600                           
 26601                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
 26602                           ;stkvar	_fmt @ sp[(-32)+-4]
 26603  01422C  0EDC               	movlw	-36
 26604  01422E  006F FF8F FFD9     	movff	plusw1,fsr2l
 26605  014234  0EDD               	movlw	-35
 26606  014236  006F FF8F FFDA     	movff	plusw1,fsr2h
 26607  01423C  2ADE               	incf	postinc2,f,c
 26608  01423E  0E00               	movlw	0
 26609  014240  22DD               	addwfc	postdec2,f,c
 26610                           
 26611                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
 26612                           ;stkvar	_ap @ sp[(-32)+-6]
 26613  014242  0EDA               	movlw	-38
 26614  014244  006F FF8F FFD9     	movff	plusw1,fsr2l
 26615  01424A  0EDB               	movlw	-37
 26616  01424C  006F FF8F FFDA     	movff	plusw1,fsr2h
 26617  014252  0E02               	movlw	2
 26618  014254  5EDE               	subwf	postinc2,f,c
 26619  014256  0E00               	movlw	0
 26620  014258  5ADD               	subwfb	postdec2,f,c
 26621  01425A  006F FF78  F034    	movff	postinc2,btemp+10
 26622  014260  006F FF74  F035    	movff	postdec2,btemp+11
 26623  014266  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 26624  01426C  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 26625  014272  006F FF78  F034    	movff	postinc2,btemp+10
 26626  014278  006F FF74  F035    	movff	postdec2,btemp+11
 26627                           
 26628                           ;stkvar	_cp @ sp[(-32)+29]
 26629  01427E  0EFE               	movlw	-2
 26630  014280  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 26631  014286  0EFD               	movlw	-3
 26632  014288  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 26633                           
 26634                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
 26635                           ;stkvar	_cp @ sp[(-32)+29]
 26636  01428E  0EFD               	movlw	-3
 26637  014290  006F FF8F FFE6     	movff	plusw1,postinc1
 26638  014296  006F FF8F FFE6     	movff	plusw1,postinc1
 26639                           
 26640                           ;stkvar	_fp @ sp[(-34)+-2]
 26641  01429C  0EDC               	movlw	-36
 26642  01429E  006F FF8F FFE6     	movff	plusw1,postinc1
 26643  0142A4  006F FF8F FFE6     	movff	plusw1,postinc1
 26644  0142AA  EC45  F0DA         	call	_stoa	;wreg free
 26645  0142AE  D2AF               	goto	l2689
 26646  0142B0                     l16244:
 26647                           
 26648                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1182:         if (*fmt[0] == 
      +                          'u') {
 26649                           ;stkvar	_fmt @ sp[(-32)+-4]
 26650  0142B0  0EDC               	movlw	-36
 26651  0142B2  006F FF8F FFD9     	movff	plusw1,fsr2l
 26652  0142B8  0EDD               	movlw	-35
 26653  0142BA  006F FF8F FFDA     	movff	plusw1,fsr2h
 26654  0142C0  006F FF7B FFF6     	movff	postinc2,tblptrl
 26655  0142C6  006F FF77 FFF7     	movff	postdec2,tblptrh
 26656  0142CC                     	if	0	;tblptru may be non-zero
 26657  0142CC                     	endif
 26658  0142CC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26659  0142CC  0E00               	movlw	low (__mediumconst shr (0+16))
 26660  0142CE  6EF8               	movwf	tblptru,c
 26661  0142D0                     	endif
 26662  0142D0  0008               	tblrd		*
 26663  0142D2  50F5               	movf	tablat,w,c
 26664  0142D4  0A75               	xorlw	117
 26665  0142D6  A4D8               	btfss	status,2,c
 26666  0142D8  D07C               	goto	l16254
 26667                           
 26668                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1184:             ++*fmt;
 26669                           ;stkvar	_fmt @ sp[(-32)+-4]
 26670  0142DA  0EDC               	movlw	-36
 26671  0142DC  006F FF8F FFD9     	movff	plusw1,fsr2l
 26672  0142E2  0EDD               	movlw	-35
 26673  0142E4  006F FF8F FFDA     	movff	plusw1,fsr2h
 26674  0142EA  2ADE               	incf	postinc2,f,c
 26675  0142EC  0E00               	movlw	0
 26676  0142EE  22DD               	addwfc	postdec2,f,c
 26677                           
 26678                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1185:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
 26679                           ;stkvar	_ap @ sp[(-32)+-6]
 26680  0142F0  0EDA               	movlw	-38
 26681  0142F2  006F FF8F FFD9     	movff	plusw1,fsr2l
 26682  0142F8  0EDB               	movlw	-37
 26683  0142FA  006F FF8F FFDA     	movff	plusw1,fsr2h
 26684  014300  0E02               	movlw	2
 26685  014302  5EDE               	subwf	postinc2,f,c
 26686  014304  0E00               	movlw	0
 26687  014306  5ADD               	subwfb	postdec2,f,c
 26688  014308  006F FF78  F034    	movff	postinc2,btemp+10
 26689  01430E  006F FF74  F035    	movff	postdec2,btemp+11
 26690  014314  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 26691  01431A  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 26692  014320  006F FF78  F034    	movff	postinc2,btemp+10
 26693  014326  006F FF74  F035    	movff	postdec2,btemp+11
 26694  01432C  5034               	movf	(btemp+10)^0,w,c
 26695  01432E  6E3A               	movwf	(btemp+16)^0,c
 26696  014330  5035               	movf	(btemp+11)^0,w,c
 26697  014332  6E3B               	movwf	(btemp+17)^0,c
 26698  014334  6A3C               	clrf	(btemp+18)^0,c
 26699  014336  6A3D               	clrf	(btemp+19)^0,c
 26700  014338  6A3E               	clrf	(btemp+20)^0,c
 26701  01433A  6A3F               	clrf	(btemp+21)^0,c
 26702  01433C  6A40               	clrf	(btemp+22)^0,c
 26703  01433E  6A41               	clrf	(btemp+23)^0,c
 26704                           
 26705                           ;stkvar	_llu @ sp[(-32)+6]
 26706  014340  0EE6               	movlw	-26
 26707  014342  0060  F0EB  FFE3   	movff	btemp+16,plusw1
 26708  014348  0EE7               	movlw	-25
 26709  01434A  0060  F0EF  FFE3   	movff	btemp+17,plusw1
 26710  014350  0EE8               	movlw	-24
 26711  014352  0060  F0F3  FFE3   	movff	btemp+18,plusw1
 26712  014358  0EE9               	movlw	-23
 26713  01435A  0060  F0F7  FFE3   	movff	btemp+19,plusw1
 26714  014360  0EEA               	movlw	-22
 26715  014362  0060  F0FB  FFE3   	movff	btemp+20,plusw1
 26716  014368  0EEB               	movlw	-21
 26717  01436A  0060  F0FF  FFE3   	movff	btemp+21,plusw1
 26718  014370  0EEC               	movlw	-20
 26719  014372  0060  F103  FFE3   	movff	btemp+22,plusw1
 26720  014378  0EED               	movlw	-19
 26721  01437A  0060  F107  FFE3   	movff	btemp+23,plusw1
 26722                           
 26723                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1187:             return utoa
      +                          (fp, llu);
 26724                           ;stkvar	_llu @ sp[(-32)+6]
 26725  014380  50E1               	movf	fsr1l,w,c
 26726  014382  0FE6               	addlw	-26
 26727  014384  6ED9               	movwf	fsr2l,c
 26728  014386  50E2               	movf	fsr1h,w,c
 26729  014388  6EDA               	movwf	fsr2h,c
 26730  01438A  0EFF               	movlw	255
 26731  01438C  22DA               	addwfc	fsr2h,f,c
 26732  01438E  006F FF7B FFE6     	movff	postinc2,postinc1
 26733  014394  006F FF7B FFE6     	movff	postinc2,postinc1
 26734  01439A  006F FF7B FFE6     	movff	postinc2,postinc1
 26735  0143A0  006F FF7B FFE6     	movff	postinc2,postinc1
 26736  0143A6  006F FF7B FFE6     	movff	postinc2,postinc1
 26737  0143AC  006F FF7B FFE6     	movff	postinc2,postinc1
 26738  0143B2  006F FF7B FFE6     	movff	postinc2,postinc1
 26739  0143B8  006F FF7B FFE6     	movff	postinc2,postinc1
 26740                           
 26741                           ;stkvar	_fp @ sp[(-40)+-2]
 26742  0143BE  0ED6               	movlw	-42
 26743  0143C0  006F FF8F FFE6     	movff	plusw1,postinc1
 26744  0143C6  006F FF8F FFE6     	movff	plusw1,postinc1
 26745  0143CC  ECD8  F0D2         	call	_utoa	;wreg free
 26746  0143D0  D21E               	goto	l2689
 26747  0143D2                     l16254:
 26748                           
 26749                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1192:         if (!strncmp(*f
      +                          mt, "lu", ((sizeof("lu")/sizeof("lu"[0]))-1))) {
 26750  0143D2  0E02               	movlw	2
 26751  0143D4  6EE6               	movwf	postinc1,c
 26752  0143D6  0E00               	movlw	0
 26753  0143D8  6EE6               	movwf	postinc1,c
 26754  0143DA  0EF6               	movlw	low STR_113
 26755  0143DC  6EE6               	movwf	postinc1,c
 26756  0143DE  0EFF               	movlw	high STR_113
 26757  0143E0  6EE6               	movwf	postinc1,c
 26758                           
 26759                           ;stkvar	_fmt @ sp[(-36)+-4]
 26760  0143E2  0ED8               	movlw	-40
 26761  0143E4  006F FF8F FFD9     	movff	plusw1,fsr2l
 26762  0143EA  0ED9               	movlw	-39
 26763  0143EC  006F FF8F FFDA     	movff	plusw1,fsr2h
 26764  0143F2  006F FF78  F034    	movff	postinc2,btemp+10
 26765  0143F8  006F FF74  F035    	movff	postdec2,btemp+11
 26766  0143FE  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 26767  014404  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 26768  01440A  EC48  F0E6         	call	_strncmp	;wreg free
 26769  01440E  502A               	movf	btemp^0,w,c
 26770  014410  102B               	iorwf	(btemp+1)^0,w,c
 26771  014412  A4D8               	btfss	status,2,c
 26772  014414  D039               	goto	l16264
 26773                           
 26774                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1194:             *fmt += ((s
      +                          izeof("lu")/sizeof("lu"[0]))-1);
 26775                           ;stkvar	_fmt @ sp[(-32)+-4]
 26776  014416  0EDC               	movlw	-36
 26777  014418  006F FF8F FFD9     	movff	plusw1,fsr2l
 26778  01441E  0EDD               	movlw	-35
 26779  014420  006F FF8F FFDA     	movff	plusw1,fsr2h
 26780  014426  0E02               	movlw	2
 26781  014428  26DE               	addwf	postinc2,f,c
 26782  01442A  0E00               	movlw	0
 26783  01442C  22DD               	addwfc	postdec2,f,c
 26784                           
 26785                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1195:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
 26786                           ;stkvar	_ap @ sp[(-32)+-6]
 26787  01442E  0EDA               	movlw	-38
 26788  014430  006F FF8F FFD9     	movff	plusw1,fsr2l
 26789  014436  0EDB               	movlw	-37
 26790  014438  006F FF8F FFDA     	movff	plusw1,fsr2h
 26791  01443E  0E04               	movlw	4
 26792  014440  5EDE               	subwf	postinc2,f,c
 26793  014442  0E00               	movlw	0
 26794  014444  5ADD               	subwfb	postdec2,f,c
 26795  014446  006F FF78  F034    	movff	postinc2,btemp+10
 26796  01444C  006F FF74  F035    	movff	postdec2,btemp+11
 26797  014452  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 26798  014458  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 26799  01445E  006F FF78  F032    	movff	postinc2,btemp+8
 26800  014464  006F FF78  F033    	movff	postinc2,btemp+9
 26801  01446A  006F FF78  F034    	movff	postinc2,btemp+10
 26802  014470  006F FF78  F035    	movff	postinc2,btemp+11
 26803  014476  5032               	movf	(btemp+8)^0,w,c
 26804  014478  6E3A               	movwf	(btemp+16)^0,c
 26805  01447A  5033               	movf	(btemp+9)^0,w,c
 26806  01447C  6E3B               	movwf	(btemp+17)^0,c
 26807  01447E  5034               	movf	(btemp+10)^0,w,c
 26808  014480  6E3C               	movwf	(btemp+18)^0,c
 26809  014482  5035               	movf	(btemp+11)^0,w,c
 26810  014484  6E3D               	movwf	(btemp+19)^0,c
 26811  014486  D758               	goto	L25
 26812  014488                     l16264:
 26813                           
 26814                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1274:         if ((*fmt[0] ==
      +                           'x') || (*fmt[0] == 'X')) {
 26815                           ;stkvar	_fmt @ sp[(-32)+-4]
 26816  014488  0EDC               	movlw	-36
 26817  01448A  006F FF8F FFD9     	movff	plusw1,fsr2l
 26818  014490  0EDD               	movlw	-35
 26819  014492  006F FF8F FFDA     	movff	plusw1,fsr2h
 26820  014498  006F FF7B FFF6     	movff	postinc2,tblptrl
 26821  01449E  006F FF77 FFF7     	movff	postdec2,tblptrh
 26822  0144A4                     	if	0	;tblptru may be non-zero
 26823  0144A4                     	endif
 26824  0144A4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26825  0144A4  0E00               	movlw	low (__mediumconst shr (0+16))
 26826  0144A6  6EF8               	movwf	tblptru,c
 26827  0144A8                     	endif
 26828  0144A8  0008               	tblrd		*
 26829  0144AA  50F5               	movf	tablat,w,c
 26830  0144AC  0A78               	xorlw	120
 26831  0144AE  B4D8               	btfsc	status,2,c
 26832  0144B0  D015               	goto	u15880
 26833                           
 26834                           ;stkvar	_fmt @ sp[(-32)+-4]
 26835  0144B2  0EDC               	movlw	-36
 26836  0144B4  006F FF8F FFD9     	movff	plusw1,fsr2l
 26837  0144BA  0EDD               	movlw	-35
 26838  0144BC  006F FF8F FFDA     	movff	plusw1,fsr2h
 26839  0144C2  006F FF7B FFF6     	movff	postinc2,tblptrl
 26840  0144C8  006F FF77 FFF7     	movff	postdec2,tblptrh
 26841  0144CE                     	if	0	;tblptru may be non-zero
 26842  0144CE                     	endif
 26843  0144CE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26844  0144CE  0E00               	movlw	low (__mediumconst shr (0+16))
 26845  0144D0  6EF8               	movwf	tblptru,c
 26846  0144D2                     	endif
 26847  0144D2  0008               	tblrd		*
 26848  0144D4  50F5               	movf	tablat,w,c
 26849  0144D6  0A58               	xorlw	88
 26850  0144D8  A4D8               	btfss	status,2,c
 26851  0144DA  D094               	goto	l16278
 26852  0144DC                     u15880:
 26853                           
 26854                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1276:             c = (*fmt)[
      +                          0];
 26855                           ;stkvar	_fmt @ sp[(-32)+-4]
 26856  0144DC  0EDC               	movlw	-36
 26857  0144DE  006F FF8F FFD9     	movff	plusw1,fsr2l
 26858  0144E4  0EDD               	movlw	-35
 26859  0144E6  006F FF8F FFDA     	movff	plusw1,fsr2h
 26860  0144EC  006F FF7B FFF6     	movff	postinc2,tblptrl
 26861  0144F2  006F FF77 FFF7     	movff	postdec2,tblptrh
 26862  0144F8                     	if	0	;tblptru may be non-zero
 26863  0144F8                     	endif
 26864  0144F8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26865  0144F8  0E00               	movlw	low (__mediumconst shr (0+16))
 26866  0144FA  6EF8               	movwf	tblptru,c
 26867  0144FC                     	endif
 26868                           
 26869                           ;stkvar	_c @ sp[(-32)+31]
 26870  0144FC  0008               	tblrd		*
 26871  0144FE  0EFF               	movlw	-1
 26872  014500  006F FFD7 FFE3     	movff	tablat,plusw1
 26873                           
 26874                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1277:             ++*fmt;
 26875                           ;stkvar	_fmt @ sp[(-32)+-4]
 26876  014506  0EDC               	movlw	-36
 26877  014508  006F FF8F FFD9     	movff	plusw1,fsr2l
 26878  01450E  0EDD               	movlw	-35
 26879  014510  006F FF8F FFDA     	movff	plusw1,fsr2h
 26880  014516  2ADE               	incf	postinc2,f,c
 26881  014518  0E00               	movlw	0
 26882  01451A  22DD               	addwfc	postdec2,f,c
 26883                           
 26884                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1278:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
 26885                           ;stkvar	_ap @ sp[(-32)+-6]
 26886  01451C  0EDA               	movlw	-38
 26887  01451E  006F FF8F FFD9     	movff	plusw1,fsr2l
 26888  014524  0EDB               	movlw	-37
 26889  014526  006F FF8F FFDA     	movff	plusw1,fsr2h
 26890  01452C  0E02               	movlw	2
 26891  01452E  5EDE               	subwf	postinc2,f,c
 26892  014530  0E00               	movlw	0
 26893  014532  5ADD               	subwfb	postdec2,f,c
 26894  014534  006F FF78  F034    	movff	postinc2,btemp+10
 26895  01453A  006F FF74  F035    	movff	postdec2,btemp+11
 26896  014540  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 26897  014546  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 26898  01454C  006F FF78  F034    	movff	postinc2,btemp+10
 26899  014552  006F FF74  F035    	movff	postdec2,btemp+11
 26900  014558  5034               	movf	(btemp+10)^0,w,c
 26901  01455A  6E3A               	movwf	(btemp+16)^0,c
 26902  01455C  5035               	movf	(btemp+11)^0,w,c
 26903  01455E  6E3B               	movwf	(btemp+17)^0,c
 26904  014560  6A3C               	clrf	(btemp+18)^0,c
 26905  014562  6A3D               	clrf	(btemp+19)^0,c
 26906  014564  6A3E               	clrf	(btemp+20)^0,c
 26907  014566  6A3F               	clrf	(btemp+21)^0,c
 26908  014568  6A40               	clrf	(btemp+22)^0,c
 26909  01456A  6A41               	clrf	(btemp+23)^0,c
 26910                           
 26911                           ;stkvar	_llu @ sp[(-32)+6]
 26912  01456C  0EE6               	movlw	-26
 26913  01456E  0060  F0EB  FFE3   	movff	btemp+16,plusw1
 26914  014574  0EE7               	movlw	-25
 26915  014576  0060  F0EF  FFE3   	movff	btemp+17,plusw1
 26916  01457C  0EE8               	movlw	-24
 26917  01457E  0060  F0F3  FFE3   	movff	btemp+18,plusw1
 26918  014584  0EE9               	movlw	-23
 26919  014586  0060  F0F7  FFE3   	movff	btemp+19,plusw1
 26920  01458C  0EEA               	movlw	-22
 26921  01458E  0060  F0FB  FFE3   	movff	btemp+20,plusw1
 26922  014594  0EEB               	movlw	-21
 26923  014596  0060  F0FF  FFE3   	movff	btemp+21,plusw1
 26924  01459C  0EEC               	movlw	-20
 26925  01459E  0060  F103  FFE3   	movff	btemp+22,plusw1
 26926  0145A4  0EED               	movlw	-19
 26927  0145A6  0060  F107  FFE3   	movff	btemp+23,plusw1
 26928                           
 26929                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1280:             return xtoa
      +                          (fp, llu, c);
 26930                           ;stkvar	_c @ sp[(-32)+31]
 26931  0145AC  0EFF               	movlw	-1
 26932  0145AE  50E3               	movf	plusw1,w,c
 26933  0145B0  6EE6               	movwf	postinc1,c
 26934                           
 26935                           ;stkvar	_llu @ sp[(-33)+6]
 26936  0145B2  50E1               	movf	fsr1l,w,c
 26937  0145B4  0FE5               	addlw	-27
 26938  0145B6  6ED9               	movwf	fsr2l,c
 26939  0145B8  50E2               	movf	fsr1h,w,c
 26940  0145BA  6EDA               	movwf	fsr2h,c
 26941  0145BC  0EFF               	movlw	255
 26942  0145BE  22DA               	addwfc	fsr2h,f,c
 26943  0145C0  006F FF7B FFE6     	movff	postinc2,postinc1
 26944  0145C6  006F FF7B FFE6     	movff	postinc2,postinc1
 26945  0145CC  006F FF7B FFE6     	movff	postinc2,postinc1
 26946  0145D2  006F FF7B FFE6     	movff	postinc2,postinc1
 26947  0145D8  006F FF7B FFE6     	movff	postinc2,postinc1
 26948  0145DE  006F FF7B FFE6     	movff	postinc2,postinc1
 26949  0145E4  006F FF7B FFE6     	movff	postinc2,postinc1
 26950  0145EA  006F FF7B FFE6     	movff	postinc2,postinc1
 26951                           
 26952                           ;stkvar	_fp @ sp[(-41)+-2]
 26953  0145F0  0ED5               	movlw	-43
 26954  0145F2  006F FF8F FFE6     	movff	plusw1,postinc1
 26955  0145F8  006F FF8F FFE6     	movff	plusw1,postinc1
 26956  0145FE  ECEB  F0CB         	call	_xtoa	;wreg free
 26957  014602  D105               	goto	l2689
 26958  014604                     l16278:
 26959                           
 26960                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1285:         if (!strncmp(*f
      +                          mt, "lx", ((sizeof("lx")/sizeof("lx"[0]))-1)) || !strncmp(*fmt, "lX", ((sizeof("lX")/siz
      +                          eof("lX"[0]))-1))) {
 26961  014604  0E02               	movlw	2
 26962  014606  6EE6               	movwf	postinc1,c
 26963  014608  0E00               	movlw	0
 26964  01460A  6EE6               	movwf	postinc1,c
 26965  01460C  0EF9               	movlw	low STR_118
 26966  01460E  6EE6               	movwf	postinc1,c
 26967  014610  0EFF               	movlw	high STR_118
 26968  014612  6EE6               	movwf	postinc1,c
 26969                           
 26970                           ;stkvar	_fmt @ sp[(-36)+-4]
 26971  014614  0ED8               	movlw	-40
 26972  014616  006F FF8F FFD9     	movff	plusw1,fsr2l
 26973  01461C  0ED9               	movlw	-39
 26974  01461E  006F FF8F FFDA     	movff	plusw1,fsr2h
 26975  014624  006F FF78  F034    	movff	postinc2,btemp+10
 26976  01462A  006F FF74  F035    	movff	postdec2,btemp+11
 26977  014630  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 26978  014636  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 26979  01463C  EC48  F0E6         	call	_strncmp	;wreg free
 26980  014640  502A               	movf	btemp^0,w,c
 26981  014642  102B               	iorwf	(btemp+1)^0,w,c
 26982  014644  B4D8               	btfsc	status,2,c
 26983  014646  D022               	goto	u15900
 26984  014648  0E02               	movlw	2
 26985  01464A  6EE6               	movwf	postinc1,c
 26986  01464C  0E00               	movlw	0
 26987  01464E  6EE6               	movwf	postinc1,c
 26988  014650  0EEA               	movlw	low STR_122
 26989  014652  6EE6               	movwf	postinc1,c
 26990  014654  0EFF               	movlw	high STR_122
 26991  014656  6EE6               	movwf	postinc1,c
 26992                           
 26993                           ;stkvar	_fmt @ sp[(-36)+-4]
 26994  014658  0ED8               	movlw	-40
 26995  01465A  006F FF8F FFD9     	movff	plusw1,fsr2l
 26996  014660  0ED9               	movlw	-39
 26997  014662  006F FF8F FFDA     	movff	plusw1,fsr2h
 26998  014668  006F FF78  F034    	movff	postinc2,btemp+10
 26999  01466E  006F FF74  F035    	movff	postdec2,btemp+11
 27000  014674  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 27001  01467A  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 27002  014680  EC48  F0E6         	call	_strncmp	;wreg free
 27003  014684  502A               	movf	btemp^0,w,c
 27004  014686  102B               	iorwf	(btemp+1)^0,w,c
 27005  014688  A4D8               	btfss	status,2,c
 27006  01468A  D058               	goto	l16292
 27007  01468C                     u15900:
 27008                           
 27009                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1286: ;/opt/microchip/xc8/v2.
      +                          10/pic/sources/c99/common/doprnt.c: 1288:             c = (*fmt)[1];
 27010                           ;stkvar	_fmt @ sp[(-32)+-4]
 27011  01468C  0EDC               	movlw	-36
 27012  01468E  006F FF8F FFD9     	movff	plusw1,fsr2l
 27013  014694  0EDD               	movlw	-35
 27014  014696  006F FF8F FFDA     	movff	plusw1,fsr2h
 27015  01469C  006F FF78  F034    	movff	postinc2,btemp+10
 27016  0146A2  006F FF74  F035    	movff	postdec2,btemp+11
 27017  0146A8  0E01               	movlw	1
 27018  0146AA  2634               	addwf	(btemp+10)^0,f,c
 27019  0146AC  0E00               	movlw	0
 27020  0146AE  2235               	addwfc	(btemp+11)^0,f,c
 27021  0146B0  0060  F0D3  FFF6   	movff	btemp+10,tblptrl
 27022  0146B6  0060  F0D7  FFF7   	movff	btemp+11,tblptrh
 27023  0146BC                     	if	0	;tblptru may be non-zero
 27024  0146BC                     	endif
 27025  0146BC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 27026  0146BC  0E00               	movlw	low (__mediumconst shr (0+16))
 27027  0146BE  6EF8               	movwf	tblptru,c
 27028  0146C0                     	endif
 27029                           
 27030                           ;stkvar	_c @ sp[(-32)+31]
 27031  0146C0  0008               	tblrd		*
 27032  0146C2  0EFF               	movlw	-1
 27033  0146C4  006F FFD7 FFE3     	movff	tablat,plusw1
 27034                           
 27035                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1289:             *fmt += ((s
      +                          izeof("lx")/sizeof("lx"[0]))-1);
 27036                           ;stkvar	_fmt @ sp[(-32)+-4]
 27037  0146CA  0EDC               	movlw	-36
 27038  0146CC  006F FF8F FFD9     	movff	plusw1,fsr2l
 27039  0146D2  0EDD               	movlw	-35
 27040  0146D4  006F FF8F FFDA     	movff	plusw1,fsr2h
 27041  0146DA  0E02               	movlw	2
 27042  0146DC  26DE               	addwf	postinc2,f,c
 27043  0146DE  0E00               	movlw	0
 27044  0146E0  22DD               	addwfc	postdec2,f,c
 27045                           
 27046                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1290:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
 27047                           ;stkvar	_ap @ sp[(-32)+-6]
 27048  0146E2  0EDA               	movlw	-38
 27049  0146E4  006F FF8F FFD9     	movff	plusw1,fsr2l
 27050  0146EA  0EDB               	movlw	-37
 27051  0146EC  006F FF8F FFDA     	movff	plusw1,fsr2h
 27052  0146F2  0E04               	movlw	4
 27053  0146F4  5EDE               	subwf	postinc2,f,c
 27054  0146F6  0E00               	movlw	0
 27055  0146F8  5ADD               	subwfb	postdec2,f,c
 27056  0146FA  006F FF78  F034    	movff	postinc2,btemp+10
 27057  014700  006F FF74  F035    	movff	postdec2,btemp+11
 27058  014706  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 27059  01470C  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 27060  014712  006F FF78  F032    	movff	postinc2,btemp+8
 27061  014718  006F FF78  F033    	movff	postinc2,btemp+9
 27062  01471E  006F FF78  F034    	movff	postinc2,btemp+10
 27063  014724  006F FF78  F035    	movff	postinc2,btemp+11
 27064  01472A  5032               	movf	(btemp+8)^0,w,c
 27065  01472C  6E3A               	movwf	(btemp+16)^0,c
 27066  01472E  5033               	movf	(btemp+9)^0,w,c
 27067  014730  6E3B               	movwf	(btemp+17)^0,c
 27068  014732  5034               	movf	(btemp+10)^0,w,c
 27069  014734  6E3C               	movwf	(btemp+18)^0,c
 27070  014736  5035               	movf	(btemp+11)^0,w,c
 27071  014738  6E3D               	movwf	(btemp+19)^0,c
 27072  01473A  D714               	goto	L26
 27073  01473C                     l16292:
 27074                           
 27075                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
 27076                           ;stkvar	_fmt @ sp[(-32)+-4]
 27077  01473C  0EDC               	movlw	-36
 27078  01473E  006F FF8F FFD9     	movff	plusw1,fsr2l
 27079  014744  0EDD               	movlw	-35
 27080  014746  006F FF8F FFDA     	movff	plusw1,fsr2h
 27081  01474C  006F FF7B FFF6     	movff	postinc2,tblptrl
 27082  014752  006F FF77 FFF7     	movff	postdec2,tblptrh
 27083  014758                     	if	0	;tblptru may be non-zero
 27084  014758                     	endif
 27085  014758                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 27086  014758  0E00               	movlw	low (__mediumconst shr (0+16))
 27087  01475A  6EF8               	movwf	tblptru,c
 27088  01475C                     	endif
 27089  01475C  0008               	tblrd		*
 27090  01475E  50F5               	movf	tablat,w,c
 27091  014760  0A25               	xorlw	37
 27092  014762  A4D8               	btfss	status,2,c
 27093  014764  D01A               	goto	l16302
 27094                           
 27095                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
 27096                           ;stkvar	_fmt @ sp[(-32)+-4]
 27097  014766  0EDC               	movlw	-36
 27098  014768  006F FF8F FFD9     	movff	plusw1,fsr2l
 27099  01476E  0EDD               	movlw	-35
 27100  014770  006F FF8F FFDA     	movff	plusw1,fsr2h
 27101  014776  2ADE               	incf	postinc2,f,c
 27102  014778  0E00               	movlw	0
 27103  01477A  22DD               	addwfc	postdec2,f,c
 27104                           
 27105                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
 27106                           ;stkvar	_fp @ sp[(-32)+-2]
 27107  01477C  0EDE               	movlw	-34
 27108  01477E  006F FF8F FFE6     	movff	plusw1,postinc1
 27109  014784  006F FF8F FFE6     	movff	plusw1,postinc1
 27110  01478A  0E25               	movlw	37
 27111  01478C  6EE6               	movwf	postinc1,c
 27112  01478E  0E00               	movlw	0
 27113  014790  6EE6               	movwf	postinc1,c
 27114  014792  ECF8  F0F8         	call	_fputc	;wreg free
 27115  014796                     l16298:
 27116                           
 27117                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1353:             return 1;
 27118  014796  0E01               	movlw	1
 27119  014798  D00C               	goto	L27
 27120  01479A                     l16302:
 27121                           
 27122                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
 27123                           ;stkvar	_fmt @ sp[(-32)+-4]
 27124  01479A  0EDC               	movlw	-36
 27125  01479C  006F FF8F FFD9     	movff	plusw1,fsr2l
 27126  0147A2  0EDD               	movlw	-35
 27127  0147A4  006F FF8F FFDA     	movff	plusw1,fsr2h
 27128  0147AA  2ADE               	incf	postinc2,f,c
 27129  0147AC  0E00               	movlw	0
 27130  0147AE  22DD               	addwfc	postdec2,f,c
 27131                           
 27132                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1358:         return 0;
 27133  0147B0  0E00               	movlw	0
 27134  0147B2                     L27:
 27135  0147B2  6E2A               	movwf	btemp^0,c
 27136  0147B4  0E00               	movlw	0
 27137  0147B6  6E2B               	movwf	(btemp+1)^0,c
 27138  0147B8  D02A               	goto	l2689
 27139  0147BA                     l16308:
 27140                           
 27141                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
 27142                           ;stkvar	_fp @ sp[(-32)+-2]
 27143  0147BA  0EDE               	movlw	-34
 27144  0147BC  006F FF8F FFE6     	movff	plusw1,postinc1
 27145  0147C2  006F FF8F FFE6     	movff	plusw1,postinc1
 27146                           
 27147                           ;stkvar	_fmt @ sp[(-34)+-4]
 27148  0147C8  0EDA               	movlw	-38
 27149  0147CA  006F FF8F FFD9     	movff	plusw1,fsr2l
 27150  0147D0  0EDB               	movlw	-37
 27151  0147D2  006F FF8F FFDA     	movff	plusw1,fsr2h
 27152  0147D8  006F FF7B FFF6     	movff	postinc2,tblptrl
 27153  0147DE  006F FF77 FFF7     	movff	postdec2,tblptrh
 27154  0147E4                     	if	0	;tblptru may be non-zero
 27155  0147E4                     	endif
 27156  0147E4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 27157  0147E4  0E00               	movlw	low (__mediumconst shr (0+16))
 27158  0147E6  6EF8               	movwf	tblptru,c
 27159  0147E8                     	endif
 27160  0147E8  0008               	tblrd		*
 27161  0147EA  50F5               	movf	tablat,w,c
 27162  0147EC  6EE6               	movwf	postinc1,c
 27163  0147EE  0E00               	movlw	0
 27164  0147F0  6EE6               	movwf	postinc1,c
 27165  0147F2  ECF8  F0F8         	call	_fputc	;wreg free
 27166                           
 27167                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
 27168                           ;stkvar	_fmt @ sp[(-32)+-4]
 27169  0147F6  0EDC               	movlw	-36
 27170  0147F8  006F FF8F FFD9     	movff	plusw1,fsr2l
 27171  0147FE  0EDD               	movlw	-35
 27172  014800  006F FF8F FFDA     	movff	plusw1,fsr2h
 27173  014806  2ADE               	incf	postinc2,f,c
 27174  014808  0E00               	movlw	0
 27175  01480A  22DD               	addwfc	postdec2,f,c
 27176  01480C  D7C4               	goto	l16298
 27177  01480E                     l2689:
 27178                           
 27179                           ; _vfpfcnvrt: autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, ar
      +                          gsize = 6, vargsize = 0
 27180  01480E  0EDA               	movlw	218
 27181  014810  26E1               	addwf	fsr1l,f,c
 27182  014812  0EFF               	movlw	255
 27183  014814  22E2               	addwfc	fsr1h,f,c
 27184  014816  0012               	return		;funcret
 27185  014818                     __end_of_vfpfcnvrt:
 27186                           	opt callstack 0
 27187                           
 27188 ;; *************** function _xtoa *****************
 27189 ;; Defined at:
 27190 ;;		line 623 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 27191 ;; Parameters:    Size  Location     Type
 27192 ;;  fp              2  [STACK] PTR struct _IO_FILE
 27193 ;;		 -> f(6), NULL(0), 
 27194 ;;  d               8  [STACK] unsigned long long 
 27195 ;;  x               1  [STACK] unsigned char 
 27196 ;; Auto vars:     Size  Location     Type
 27197 ;;  n               8  [STACK] unsigned long long 
 27198 ;;  c               2  [STACK] int 
 27199 ;;  i               2  [STACK] int 
 27200 ;;  w               2  [STACK] int 
 27201 ;;  p               2  [STACK] int 
 27202 ;; Return value:  Size  Location     Type
 27203 ;;                  2  [STACK] int 
 27204 ;; Registers used:
 27205 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 27206 ;; Tracked objects:
 27207 ;;		On entry : 0/0
 27208 ;;		On exit  : 0/0
 27209 ;;		Unchanged: 0/0
 27210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27211 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27212 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27214 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27215 ;;Total ram usage:        0 bytes
 27216 ;; Hardware stack levels used:    1
 27217 ;; Hardware stack levels required when called:   20
 27218 ;; This function calls:
 27219 ;;		_isalpha
 27220 ;;		_isupper
 27221 ;;		_pad
 27222 ;;		_toupper
 27223 ;; This function is called by:
 27224 ;;		_vfpfcnvrt
 27225 ;; This function uses a reentrant model
 27226 ;;
 27227                           
 27228                           	psect	text94
 27229  0197D6                     __ptext94:
 27230                           	opt callstack 0
 27231  0197D6                     _xtoa:
 27232                           	opt callstack 0
 27233                           
 27234                           ; autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsize = 11 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 27235  0197D6  0E14               	movlw	20
 27236  0197D8  26E1               	addwf	fsr1l,f,c
 27237  0197DA  0E00               	movlw	0
 27238  0197DC  22E2               	addwfc	fsr1h,f,c
 27239                           
 27240                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 623: static int xtoa(FILE *fp
      +                          , unsigned long long d, char x);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 624: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 625:     int c, i, p,
      +                           w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 626:     unsigned long lon
      +                          g n;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 629:     if (!(prec < 0))
      +                           {
 27241                           
 27242                           ;incstack = 0
 27243 ;; hardware stack exceeded
 27244  0197DE  AE4D               	btfss	(_prec+1)^0,7,c
 27245                           
 27246                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 630:         flags &= ~(1 << 
      +                          1);
 27247  0197E0  924E               	bcf	_flags^0,1,c
 27248                           
 27249                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 632:     p = (0 < prec) ? pre
      +                          c : 1;
 27250  0197E2  BE4D               	btfsc	(_prec+1)^0,7,c
 27251  0197E4  D005               	goto	u15360
 27252  0197E6  504D               	movf	(_prec+1)^0,w,c
 27253  0197E8  E110               	bnz	l15962
 27254  0197EA  044C               	decf	_prec^0,w,c
 27255  0197EC  B0D8               	btfsc	status,0,c
 27256  0197EE  D00D               	goto	l15962
 27257  0197F0                     u15360:
 27258  0197F0  0E01               	movlw	1
 27259  0197F2  6E34               	movwf	(btemp+10)^0,c
 27260  0197F4  0E00               	movlw	0
 27261  0197F6  6E35               	movwf	(btemp+11)^0,c
 27262                           
 27263                           ;stkvar	_p @ sp[(-20)+18]
 27264  0197F8  0EFE               	movlw	-2
 27265  0197FA  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 27266  019800  0EFF               	movlw	-1
 27267  019802  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 27268  019808  D008               	goto	l2639
 27269  01980A                     l15962:
 27270                           
 27271                           ;stkvar	_p @ sp[(-20)+18]
 27272  01980A  0EFE               	movlw	-2
 27273  01980C  0060  F133  FFE3   	movff	_prec,plusw1
 27274  019812  0EFF               	movlw	-1
 27275  019814  0060  F137  FFE3   	movff	_prec+1,plusw1
 27276  01981A                     l2639:
 27277                           
 27278                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 633:     w = width;
 27279                           ;stkvar	_w @ sp[(-20)+16]
 27280  01981A  0EFC               	movlw	-4
 27281  01981C  0060  F12B  FFE3   	movff	_width,plusw1
 27282  019822  0EFD               	movlw	-3
 27283  019824  0060  F12F  FFE3   	movff	_width+1,plusw1
 27284                           
 27285                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 634:     if (flags & (1 << 4)
      +                          ) {
 27286  01982A  A84E               	btfss	_flags^0,4,c
 27287  01982C  D00B               	goto	l15968
 27288                           
 27289                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
 27290                           ;stkvar	_w @ sp[(-20)+16]
 27291  01982E  50E1               	movf	fsr1l,w,c
 27292  019830  0FFC               	addlw	-4
 27293  019832  6ED9               	movwf	fsr2l,c
 27294  019834  50E2               	movf	fsr1h,w,c
 27295  019836  6EDA               	movwf	fsr2h,c
 27296  019838  0EFF               	movlw	255
 27297  01983A  22DA               	addwfc	fsr2h,f,c
 27298  01983C  0EFE               	movlw	254
 27299  01983E  26DE               	addwf	postinc2,f,c
 27300  019840  0EFF               	movlw	255
 27301  019842  22DD               	addwfc	postdec2,f,c
 27302  019844                     l15968:
 27303                           
 27304                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 639:     n = d;
 27305                           ;stkvar	_d @ sp[(-20)+-10]
 27306  019844  0EE2               	movlw	226
 27307  019846  24E1               	addwf	fsr1l,w,c
 27308  019848  6ED9               	movwf	fsr2l,c
 27309  01984A  0EFF               	movlw	255
 27310  01984C  20E2               	addwfc	fsr1h,w,c
 27311  01984E  6EDA               	movwf	fsr2h,c
 27312                           
 27313                           ;stkvar	_n @ sp[(-20)+4]
 27314  019850  0E08               	movlw	8
 27315  019852  6E2A               	movwf	btemp^0,c
 27316  019854  0EF0               	movlw	-16
 27317  019856                     us1538999:
 27318  019856  006F FF7B FFE3     	movff	postinc2,plusw1
 27319  01985C  28E8               	incf	wreg,w,c
 27320  01985E  2E2A               	decfsz	btemp^0,f,c
 27321  019860  D7FA               	bra	us1538999
 27322                           
 27323                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(dbuf) - 1
      +                          ;
 27324  019862  0E4F               	movlw	79
 27325  019864  6E34               	movwf	(btemp+10)^0,c
 27326  019866  0E00               	movlw	0
 27327  019868  6E35               	movwf	(btemp+11)^0,c
 27328                           
 27329                           ;stkvar	_i @ sp[(-20)+14]
 27330  01986A  0EFA               	movlw	-6
 27331  01986C  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 27332  019872  0EFB               	movlw	-5
 27333  019874  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 27334                           
 27335                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '\0';
 27336  01987A  0103               	movlb	3	; () banked
 27337  01987C  6BA3               	clrf	(_dbuf+79)& (0+255),b
 27338                           
 27339                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 27340  01987E  D0EE               	goto	l16006
 27341  019880                     l15974:
 27342                           
 27343                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 643:         --i;
 27344                           ;stkvar	_i @ sp[(-20)+14]
 27345  019880  50E1               	movf	fsr1l,w,c
 27346  019882  0FFA               	addlw	-6
 27347  019884  6ED9               	movwf	fsr2l,c
 27348  019886  50E2               	movf	fsr1h,w,c
 27349  019888  6EDA               	movwf	fsr2h,c
 27350  01988A  0EFF               	movlw	255
 27351  01988C  22DA               	addwfc	fsr2h,f,c
 27352  01988E  06DE               	decf	postinc2,f,c
 27353  019890  0E00               	movlw	0
 27354  019892  5ADD               	subwfb	postdec2,f,c
 27355                           
 27356                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 644:         c = n & 0x0f;
 27357                           ;stkvar	_n @ sp[(-20)+4]
 27358  019894  0EF0               	movlw	-16
 27359  019896  006F FF8C  F034    	movff	plusw1,btemp+10
 27360  01989C  0EF1               	movlw	-15
 27361  01989E  006F FF8C  F035    	movff	plusw1,btemp+11
 27362  0198A4  0E0F               	movlw	15
 27363  0198A6  1634               	andwf	(btemp+10)^0,f,c
 27364  0198A8  0E00               	movlw	0
 27365  0198AA  1635               	andwf	(btemp+11)^0,f,c
 27366                           
 27367                           ;stkvar	_c @ sp[(-20)+12]
 27368  0198AC  0EF8               	movlw	-8
 27369  0198AE  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 27370  0198B4  0EF9               	movlw	-7
 27371  0198B6  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 27372                           
 27373                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 645:         c = (c < 10) ? '
      +                          0' + c : 'a' + (c - 10);
 27374                           ;stkvar	_c @ sp[(-20)+12]
 27375  0198BC  0EF9               	movlw	-7
 27376  0198BE  BEE3               	btfsc	plusw1,7,c
 27377  0198C0  D00F               	goto	l15982
 27378  0198C2  0EF9               	movlw	-7
 27379  0198C4  50E3               	movf	plusw1,w,c
 27380  0198C6  E108               	bnz	u15390
 27381  0198C8  0EF8               	movlw	-8
 27382  0198CA  006F FF8C  F02A    	movff	plusw1,btemp
 27383  0198D0  0E0A               	movlw	10
 27384  0198D2  5E2A               	subwf	btemp^0,f,c
 27385  0198D4  A0D8               	btfss	status,0,c
 27386  0198D6  D004               	goto	l15982
 27387  0198D8                     u15390:
 27388                           
 27389                           ;stkvar	_c @ sp[(-20)+12]
 27390  0198D8  0EF8               	movlw	-8
 27391  0198DA  50E3               	movf	plusw1,w,c
 27392  0198DC  0F57               	addlw	87
 27393  0198DE  D003               	goto	L28
 27394  0198E0                     l15982:
 27395                           
 27396                           ;stkvar	_c @ sp[(-20)+12]
 27397  0198E0  0EF8               	movlw	-8
 27398  0198E2  50E3               	movf	plusw1,w,c
 27399  0198E4  0F30               	addlw	48
 27400  0198E6                     L28:
 27401  0198E6  6E34               	movwf	(btemp+10)^0,c
 27402  0198E8  0EF9               	movlw	-7
 27403  0198EA  006F FF8C  F035    	movff	plusw1,btemp+11
 27404  0198F0  0E00               	movlw	0
 27405  0198F2  2235               	addwfc	(btemp+11)^0,f,c
 27406                           
 27407                           ;stkvar	_c @ sp[(-20)+12]
 27408  0198F4  0EF8               	movlw	-8
 27409  0198F6  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 27410  0198FC  0EF9               	movlw	-7
 27411  0198FE  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 27412  019904  0EBF               	movlw	191
 27413  019906  6E34               	movwf	(btemp+10)^0,c
 27414  019908  0EFF               	movlw	255
 27415  01990A  6E35               	movwf	(btemp+11)^0,c
 27416                           
 27417                           ;stkvar	_x @ sp[(-20)+-11]
 27418  01990C  0EE1               	movlw	-31
 27419  01990E  50E3               	movf	plusw1,w,c
 27420  019910  6E32               	movwf	(btemp+8)^0,c
 27421  019912  6A33               	clrf	(btemp+9)^0,c
 27422  019914  5034               	movf	(btemp+10)^0,w,c
 27423  019916  2632               	addwf	(btemp+8)^0,f,c
 27424  019918  5035               	movf	(btemp+11)^0,w,c
 27425  01991A  2233               	addwfc	(btemp+9)^0,f,c
 27426  01991C  5033               	movf	(btemp+9)^0,w,c
 27427  01991E  E106               	bnz	u15400
 27428  019920  0E1A               	movlw	26
 27429  019922  5C32               	subwf	(btemp+8)^0,w,c
 27430  019924  B0D8               	btfsc	status,0,c
 27431  019926  D002               	goto	u15400
 27432  019928  0E01               	movlw	1
 27433  01992A  D001               	goto	u15410
 27434  01992C                     u15400:
 27435  01992C  0E00               	movlw	0
 27436  01992E                     u15410:
 27437  01992E  6E34               	movwf	(btemp+10)^0,c
 27438  019930  6A35               	clrf	(btemp+11)^0,c
 27439                           
 27440                           ;stkvar	_xtoa$6646 @ sp[(-20)+2]
 27441  019932  0EEE               	movlw	-18
 27442  019934  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 27443  01993A  0EEF               	movlw	-17
 27444  01993C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 27445                           
 27446                           ;stkvar	_xtoa$6646 @ sp[(-20)+2]
 27447  019942  0EEE               	movlw	-18
 27448  019944  006F FF8C  F02A    	movff	plusw1,btemp
 27449  01994A  0EEF               	movlw	-17
 27450  01994C  50E3               	movf	plusw1,w,c
 27451  01994E  102A               	iorwf	btemp^0,w,c
 27452  019950  B4D8               	btfsc	status,2,c
 27453  019952  D041               	goto	l15998
 27454  019954  0E9F               	movlw	159
 27455  019956  6E34               	movwf	(btemp+10)^0,c
 27456  019958  0EFF               	movlw	255
 27457  01995A  6E35               	movwf	(btemp+11)^0,c
 27458                           
 27459                           ;stkvar	_c @ sp[(-20)+12]
 27460  01995C  0EF8               	movlw	-8
 27461  01995E  006F FF8C  F032    	movff	plusw1,btemp+8
 27462  019964  0EF9               	movlw	-7
 27463  019966  006F FF8C  F033    	movff	plusw1,btemp+9
 27464  01996C  0E20               	movlw	32
 27465  01996E  1232               	iorwf	(btemp+8)^0,f,c
 27466  019970  0E00               	movlw	0
 27467  019972  1233               	iorwf	(btemp+9)^0,f,c
 27468  019974  5034               	movf	(btemp+10)^0,w,c
 27469  019976  2632               	addwf	(btemp+8)^0,f,c
 27470  019978  5035               	movf	(btemp+11)^0,w,c
 27471  01997A  2233               	addwfc	(btemp+9)^0,f,c
 27472  01997C  5033               	movf	(btemp+9)^0,w,c
 27473  01997E  E106               	bnz	u15430
 27474  019980  0E1A               	movlw	26
 27475  019982  5C32               	subwf	(btemp+8)^0,w,c
 27476  019984  B0D8               	btfsc	status,0,c
 27477  019986  D002               	goto	u15430
 27478  019988  0E01               	movlw	1
 27479  01998A  D001               	goto	u15440
 27480  01998C                     u15430:
 27481  01998C  0E00               	movlw	0
 27482  01998E                     u15440:
 27483  01998E  6E34               	movwf	(btemp+10)^0,c
 27484  019990  6A35               	clrf	(btemp+11)^0,c
 27485                           
 27486                           ;stkvar	_xtoa$6647 @ sp[(-20)+0]
 27487  019992  0EEC               	movlw	-20
 27488  019994  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 27489  01999A  0EED               	movlw	-19
 27490  01999C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 27491                           
 27492                           ;stkvar	_xtoa$6647 @ sp[(-20)+0]
 27493  0199A2  0EEC               	movlw	-20
 27494  0199A4  006F FF8C  F02A    	movff	plusw1,btemp
 27495  0199AA  0EED               	movlw	-19
 27496  0199AC  50E3               	movf	plusw1,w,c
 27497  0199AE  102A               	iorwf	btemp^0,w,c
 27498  0199B0  B4D8               	btfsc	status,2,c
 27499  0199B2  D011               	goto	l15998
 27500                           
 27501                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 647:             c = toupper(
      +                          c);
 27502                           ;stkvar	_c @ sp[(-20)+12]
 27503  0199B4  0EF8               	movlw	-8
 27504  0199B6  006F FF8F FFE6     	movff	plusw1,postinc1
 27505  0199BC  006F FF8F FFE6     	movff	plusw1,postinc1
 27506  0199C2  ECD8  F006         	call	_toupper	;wreg free
 27507                           
 27508                           ;stkvar	_c @ sp[(-20)+12]
 27509  0199C6  0EF8               	movlw	-8
 27510  0199C8  0060  F0AB  FFE3   	movff	btemp,plusw1
 27511  0199CE  0EF9               	movlw	-7
 27512  0199D0  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 27513  0199D6                     l15998:
 27514                           
 27515                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 649:         dbuf[i] = (char)
      +                          c;
 27516                           ;stkvar	_c @ sp[(-20)+12]
 27517                           ;stkvar	_i @ sp[(-20)+14]
 27518  0199D6  0EFA               	movlw	-6
 27519  0199D8  006F FF8C  F034    	movff	plusw1,btemp+10
 27520  0199DE  0EFB               	movlw	-5
 27521  0199E0  006F FF8C  F035    	movff	plusw1,btemp+11
 27522  0199E6  0E54               	movlw	low _dbuf
 27523  0199E8  2434               	addwf	(btemp+10)^0,w,c
 27524  0199EA  6ED9               	movwf	fsr2l,c
 27525  0199EC  0E03               	movlw	high _dbuf
 27526  0199EE  2035               	addwfc	(btemp+11)^0,w,c
 27527  0199F0  6EDA               	movwf	fsr2h,c
 27528  0199F2  0EF8               	movlw	-8
 27529  0199F4  006F FF8F FFDF     	movff	plusw1,indf2
 27530                           
 27531                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 650:         --p;
 27532                           ;stkvar	_p @ sp[(-20)+18]
 27533  0199FA  50E1               	movf	fsr1l,w,c
 27534  0199FC  0FFE               	addlw	-2
 27535  0199FE  6ED9               	movwf	fsr2l,c
 27536  019A00  50E2               	movf	fsr1h,w,c
 27537  019A02  6EDA               	movwf	fsr2h,c
 27538  019A04  0EFF               	movlw	255
 27539  019A06  22DA               	addwfc	fsr2h,f,c
 27540  019A08  06DE               	decf	postinc2,f,c
 27541  019A0A  0E00               	movlw	0
 27542  019A0C  5ADD               	subwfb	postdec2,f,c
 27543                           
 27544                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 651:         --w;
 27545                           ;stkvar	_w @ sp[(-20)+16]
 27546  019A0E  50E1               	movf	fsr1l,w,c
 27547  019A10  0FFC               	addlw	-4
 27548  019A12  6ED9               	movwf	fsr2l,c
 27549  019A14  50E2               	movf	fsr1h,w,c
 27550  019A16  6EDA               	movwf	fsr2h,c
 27551  019A18  0EFF               	movlw	255
 27552  019A1A  22DA               	addwfc	fsr2h,f,c
 27553  019A1C  06DE               	decf	postinc2,f,c
 27554  019A1E  0E00               	movlw	0
 27555  019A20  5ADD               	subwfb	postdec2,f,c
 27556                           
 27557                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 652:         n = n >> 4;
 27558  019A22  0E04               	movlw	4
 27559  019A24  6E35               	movwf	(btemp+11)^0,c
 27560                           
 27561                           ;stkvar	_n @ sp[(-20)+4]
 27562  019A26  50E1               	movf	fsr1l,w,c
 27563  019A28  0FF0               	addlw	-16
 27564  019A2A  6ED9               	movwf	fsr2l,c
 27565  019A2C  50E2               	movf	fsr1h,w,c
 27566  019A2E  6EDA               	movwf	fsr2h,c
 27567  019A30  0EFF               	movlw	255
 27568  019A32  22DA               	addwfc	fsr2h,f,c
 27569  019A34  2835               	incf	(btemp+11)^0,w,c
 27570  019A36  52DE               	movf	postinc2,f,c
 27571  019A38  D00F               	goto	u15460
 27572  019A3A                     u15465:
 27573  019A3A  52DE               	movf	postinc2,f,c
 27574  019A3C  52DE               	movf	postinc2,f,c
 27575  019A3E  52DE               	movf	postinc2,f,c
 27576  019A40  52DE               	movf	postinc2,f,c
 27577  019A42  52DE               	movf	postinc2,f,c
 27578  019A44  52DE               	movf	postinc2,f,c
 27579  019A46  90D8               	bcf	status,0,c
 27580  019A48  32DD               	rrcf	postdec2,f,c
 27581  019A4A  32DD               	rrcf	postdec2,f,c
 27582  019A4C  32DD               	rrcf	postdec2,f,c
 27583  019A4E  32DD               	rrcf	postdec2,f,c
 27584  019A50  32DD               	rrcf	postdec2,f,c
 27585  019A52  32DD               	rrcf	postdec2,f,c
 27586  019A54  32DD               	rrcf	postdec2,f,c
 27587  019A56  32DE               	rrcf	postinc2,f,c
 27588  019A58                     u15460:
 27589  019A58  2EE8               	decfsz	wreg,f,c
 27590  019A5A  D7EF               	goto	u15465
 27591  019A5C                     l16006:
 27592                           
 27593                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 27594                           ;stkvar	_i @ sp[(-20)+14]
 27595  019A5C  0EFB               	movlw	-5
 27596  019A5E  BEE3               	btfsc	plusw1,7,c
 27597  019A60  D03A               	goto	u15510
 27598  019A62  0EFB               	movlw	-5
 27599  019A64  50E3               	movf	plusw1,w,c
 27600  019A66  E108               	bnz	u15470
 27601  019A68  0EFA               	movlw	-6
 27602  019A6A  006F FF8C  F02A    	movff	plusw1,btemp
 27603  019A70  0E02               	movlw	2
 27604  019A72  5E2A               	subwf	btemp^0,f,c
 27605  019A74  A0D8               	btfss	status,0,c
 27606  019A76  D02F               	goto	u15510
 27607  019A78                     u15470:
 27608                           
 27609                           ;stkvar	_n @ sp[(-20)+4]
 27610  019A78  0EF0               	movlw	-16
 27611  019A7A  50E3               	movf	plusw1,w,c
 27612  019A7C  E115               	bnz	u15481
 27613  019A7E  0EF1               	movlw	-15
 27614  019A80  50E3               	movf	plusw1,w,c
 27615  019A82  E112               	bnz	u15481
 27616  019A84  0EF2               	movlw	-14
 27617  019A86  50E3               	movf	plusw1,w,c
 27618  019A88  E10F               	bnz	u15481
 27619  019A8A  0EF3               	movlw	-13
 27620  019A8C  50E3               	movf	plusw1,w,c
 27621  019A8E  E10C               	bnz	u15481
 27622  019A90  0EF4               	movlw	-12
 27623  019A92  50E3               	movf	plusw1,w,c
 27624  019A94  E109               	bnz	u15481
 27625  019A96  0EF5               	movlw	-11
 27626  019A98  50E3               	movf	plusw1,w,c
 27627  019A9A  E106               	bnz	u15481
 27628  019A9C  0EF6               	movlw	-10
 27629  019A9E  50E3               	movf	plusw1,w,c
 27630  019AA0  E103               	bnz	u15481
 27631  019AA2  0EF7               	movlw	-9
 27632  019AA4  50E3               	movf	plusw1,w,c
 27633  019AA6  A4D8               	btfss	status,2,c
 27634  019AA8                     u15481:
 27635  019AA8  D6EB               	goto	l15974
 27636                           
 27637                           ;stkvar	_p @ sp[(-20)+18]
 27638  019AAA  0EFF               	movlw	-1
 27639  019AAC  BEE3               	btfsc	plusw1,7,c
 27640  019AAE  D007               	goto	u15490
 27641  019AB0  0EFF               	movlw	-1
 27642  019AB2  50E3               	movf	plusw1,w,c
 27643  019AB4  E103               	bnz	u15491
 27644  019AB6  0EFE               	movlw	-2
 27645  019AB8  04E3               	decf	plusw1,w,c
 27646  019ABA  B0D8               	btfsc	status,0,c
 27647  019ABC                     u15491:
 27648  019ABC  D6E1               	goto	l15974
 27649  019ABE                     u15490:
 27650                           
 27651                           ;stkvar	_w @ sp[(-20)+16]
 27652  019ABE  0EFD               	movlw	-3
 27653  019AC0  BEE3               	btfsc	plusw1,7,c
 27654  019AC2  D009               	goto	u15510
 27655  019AC4  0EFD               	movlw	-3
 27656  019AC6  50E3               	movf	plusw1,w,c
 27657  019AC8  E104               	bnz	u15500
 27658  019ACA  0EFC               	movlw	-4
 27659  019ACC  04E3               	decf	plusw1,w,c
 27660  019ACE  A0D8               	btfss	status,0,c
 27661  019AD0  D002               	goto	u15510
 27662  019AD2                     u15500:
 27663  019AD2  B24E               	btfsc	_flags^0,1,c
 27664  019AD4  D6D5               	goto	l15974
 27665  019AD6                     u15510:
 27666                           
 27667                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 656:     if (flags & (1 << 4)
      +                          ) {
 27668  019AD6  A84E               	btfss	_flags^0,4,c
 27669  019AD8  D036               	goto	l16022
 27670                           
 27671                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 657:         --i;
 27672                           ;stkvar	_i @ sp[(-20)+14]
 27673  019ADA  50E1               	movf	fsr1l,w,c
 27674  019ADC  0FFA               	addlw	-6
 27675  019ADE  6ED9               	movwf	fsr2l,c
 27676  019AE0  50E2               	movf	fsr1h,w,c
 27677  019AE2  6EDA               	movwf	fsr2h,c
 27678  019AE4  0EFF               	movlw	255
 27679  019AE6  22DA               	addwfc	fsr2h,f,c
 27680  019AE8  06DE               	decf	postinc2,f,c
 27681  019AEA  0E00               	movlw	0
 27682  019AEC  5ADD               	subwfb	postdec2,f,c
 27683                           
 27684                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 658:         dbuf[i] = x;
 27685                           ;stkvar	_x @ sp[(-20)+-11]
 27686                           ;stkvar	_i @ sp[(-20)+14]
 27687  019AEE  0EFA               	movlw	-6
 27688  019AF0  006F FF8C  F034    	movff	plusw1,btemp+10
 27689  019AF6  0EFB               	movlw	-5
 27690  019AF8  006F FF8C  F035    	movff	plusw1,btemp+11
 27691  019AFE  0E54               	movlw	low _dbuf
 27692  019B00  2434               	addwf	(btemp+10)^0,w,c
 27693  019B02  6ED9               	movwf	fsr2l,c
 27694  019B04  0E03               	movlw	high _dbuf
 27695  019B06  2035               	addwfc	(btemp+11)^0,w,c
 27696  019B08  6EDA               	movwf	fsr2h,c
 27697  019B0A  0EE1               	movlw	-31
 27698  019B0C  006F FF8F FFDF     	movff	plusw1,indf2
 27699                           
 27700                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 659:         --i;
 27701                           ;stkvar	_i @ sp[(-20)+14]
 27702  019B12  50E1               	movf	fsr1l,w,c
 27703  019B14  0FFA               	addlw	-6
 27704  019B16  6ED9               	movwf	fsr2l,c
 27705  019B18  50E2               	movf	fsr1h,w,c
 27706  019B1A  6EDA               	movwf	fsr2h,c
 27707  019B1C  0EFF               	movlw	255
 27708  019B1E  22DA               	addwfc	fsr2h,f,c
 27709  019B20  06DE               	decf	postinc2,f,c
 27710  019B22  0E00               	movlw	0
 27711  019B24  5ADD               	subwfb	postdec2,f,c
 27712                           
 27713                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 660:         dbuf[i] = '0';
 27714                           ;stkvar	_i @ sp[(-20)+14]
 27715  019B26  0EFA               	movlw	-6
 27716  019B28  006F FF8C  F034    	movff	plusw1,btemp+10
 27717  019B2E  0EFB               	movlw	-5
 27718  019B30  006F FF8C  F035    	movff	plusw1,btemp+11
 27719  019B36  0E54               	movlw	low _dbuf
 27720  019B38  2434               	addwf	(btemp+10)^0,w,c
 27721  019B3A  6ED9               	movwf	fsr2l,c
 27722  019B3C  0E03               	movlw	high _dbuf
 27723  019B3E  2035               	addwfc	(btemp+11)^0,w,c
 27724  019B40  6EDA               	movwf	fsr2h,c
 27725  019B42  0E30               	movlw	48
 27726  019B44  6EDF               	movwf	indf2,c
 27727  019B46                     l16022:
 27728                           
 27729                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 664:     return pad(fp, &dbuf
      +                          [i], w);
 27730                           ;stkvar	_w @ sp[(-20)+16]
 27731  019B46  0EFC               	movlw	-4
 27732  019B48  006F FF8F FFE6     	movff	plusw1,postinc1
 27733  019B4E  006F FF8F FFE6     	movff	plusw1,postinc1
 27734                           
 27735                           ;stkvar	_i @ sp[(-22)+14]
 27736  019B54  0E54               	movlw	low _dbuf
 27737  019B56  6E34               	movwf	(btemp+10)^0,c
 27738  019B58  0E03               	movlw	high _dbuf
 27739  019B5A  6E35               	movwf	(btemp+11)^0,c
 27740  019B5C  0EF8               	movlw	-8
 27741  019B5E  50E3               	movf	plusw1,w,c
 27742  019B60  2634               	addwf	(btemp+10)^0,f,c
 27743  019B62  0EF9               	movlw	-7
 27744  019B64  50E3               	movf	plusw1,w,c
 27745  019B66  2235               	addwfc	(btemp+11)^0,f,c
 27746  019B68  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 27747  019B6E  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 27748                           
 27749                           ;stkvar	_fp @ sp[(-24)+-2]
 27750  019B74  0EE6               	movlw	-26
 27751  019B76  006F FF8F FFE6     	movff	plusw1,postinc1
 27752  019B7C  006F FF8F FFE6     	movff	plusw1,postinc1
 27753  019B82  EC2F  F0FB         	call	_pad	;wreg free
 27754                           
 27755                           ; _xtoa: autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsiz
      +                          e = 11, vargsize = 0
 27756  019B86  0EE1               	movlw	225
 27757  019B88  26E1               	addwf	fsr1l,f,c
 27758  019B8A  0EFF               	movlw	255
 27759  019B8C  22E2               	addwfc	fsr1h,f,c
 27760  019B8E  0012               	return		;funcret
 27761  019B90                     __end_of_xtoa:
 27762                           	opt callstack 0
 27763                           
 27764 ;; *************** function _toupper *****************
 27765 ;; Defined at:
 27766 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/toupper.c"
 27767 ;; Parameters:    Size  Location     Type
 27768 ;;  c               2  [STACK] int 
 27769 ;; Auto vars:     Size  Location     Type
 27770 ;;		None
 27771 ;; Return value:  Size  Location     Type
 27772 ;;                  2  [STACK] int 
 27773 ;; Registers used:
 27774 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 27775 ;; Tracked objects:
 27776 ;;		On entry : 0/3
 27777 ;;		On exit  : 0/0
 27778 ;;		Unchanged: 0/0
 27779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27780 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27781 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27782 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27783 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27784 ;;Total ram usage:        0 bytes
 27785 ;; Hardware stack levels used:    1
 27786 ;; Hardware stack levels required when called:   16
 27787 ;; This function calls:
 27788 ;;		_islower
 27789 ;; This function is called by:
 27790 ;;		_xtoa
 27791 ;; This function uses a reentrant model
 27792 ;;
 27793                           
 27794                           	psect	text95
 27795  000DB0                     __ptext95:
 27796                           	opt callstack 0
 27797  000DB0                     _toupper:
 27798                           	opt callstack 0
 27799                           
 27800                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27801  000DB0  52E6               	movf	postinc1,f,c
 27802  000DB2  52E6               	movf	postinc1,f,c
 27803                           
 27804                           ;stkvar	_c @ sp[(-2)+-2]
 27805                           
 27806                           ;incstack = 0
 27807 ;; hardware stack exceeded
 27808  000DB4  0EFC               	movlw	-4
 27809  000DB6  50E3               	movf	plusw1,w,c
 27810  000DB8  0F9F               	addlw	159
 27811  000DBA  6E34               	movwf	(btemp+10)^0,c
 27812  000DBC  0EFD               	movlw	-3
 27813  000DBE  006F FF8C  F035    	movff	plusw1,btemp+11
 27814  000DC4  0EFF               	movlw	255
 27815  000DC6  2235               	addwfc	(btemp+11)^0,f,c
 27816  000DC8  5035               	movf	(btemp+11)^0,w,c
 27817  000DCA  E106               	bnz	u7960
 27818  000DCC  0E1A               	movlw	26
 27819  000DCE  5C34               	subwf	(btemp+10)^0,w,c
 27820  000DD0  B0D8               	btfsc	status,0,c
 27821  000DD2  D002               	goto	u7960
 27822  000DD4  0E01               	movlw	1
 27823  000DD6  D001               	goto	u7970
 27824  000DD8                     u7960:
 27825  000DD8  0E00               	movlw	0
 27826  000DDA                     u7970:
 27827  000DDA  6E34               	movwf	(btemp+10)^0,c
 27828  000DDC  6A35               	clrf	(btemp+11)^0,c
 27829                           
 27830                           ;stkvar	_toupper$7588 @ sp[(-2)+0]
 27831  000DDE  0EFE               	movlw	-2
 27832  000DE0  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 27833  000DE6  0EFF               	movlw	-1
 27834  000DE8  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 27835                           
 27836                           ;stkvar	_toupper$7588 @ sp[(-2)+0]
 27837  000DEE  0EFE               	movlw	-2
 27838  000DF0  006F FF8C  F02A    	movff	plusw1,btemp
 27839  000DF6  0EFF               	movlw	-1
 27840  000DF8  50E3               	movf	plusw1,w,c
 27841  000DFA  102A               	iorwf	btemp^0,w,c
 27842  000DFC  B4D8               	btfsc	status,2,c
 27843  000DFE  D00D               	goto	l10142
 27844                           
 27845                           ;stkvar	_c @ sp[(-2)+-2]
 27846  000E00  0EFC               	movlw	-4
 27847  000E02  006F FF8C  F02A    	movff	plusw1,btemp
 27848  000E08  0EFD               	movlw	-3
 27849  000E0A  006F FF8C  F02B    	movff	plusw1,btemp+1
 27850  000E10  0E5F               	movlw	95
 27851  000E12  162A               	andwf	btemp^0,f,c
 27852  000E14  0E00               	movlw	0
 27853  000E16  162B               	andwf	(btemp+1)^0,f,c
 27854  000E18  D008               	goto	l3836
 27855  000E1A                     l10142:
 27856                           
 27857                           ;stkvar	_c @ sp[(-2)+-2]
 27858  000E1A  0EFC               	movlw	-4
 27859  000E1C  006F FF8C  F02A    	movff	plusw1,btemp
 27860  000E22  0EFD               	movlw	-3
 27861  000E24  006F FF8C  F02B    	movff	plusw1,btemp+1
 27862  000E2A                     l3836:
 27863                           
 27864                           ; _toupper: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 27865  000E2A  52E5               	movf	postdec1,f,c
 27866  000E2C  52E5               	movf	postdec1,f,c
 27867  000E2E  52E5               	movf	postdec1,f,c
 27868  000E30  52E5               	movf	postdec1,f,c
 27869  000E32  0012               	return		;funcret
 27870  000E34                     __end_of_toupper:
 27871                           	opt callstack 0
 27872                           
 27873 ;; *************** function _islower *****************
 27874 ;; Defined at:
 27875 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/islower.c"
 27876 ;; Parameters:    Size  Location     Type
 27877 ;;  c               2  [STACK] int 
 27878 ;; Auto vars:     Size  Location     Type
 27879 ;;		None
 27880 ;; Return value:  Size  Location     Type
 27881 ;;                  2  [STACK] int 
 27882 ;; Registers used:
 27883 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 27884 ;; Tracked objects:
 27885 ;;		On entry : 0/0
 27886 ;;		On exit  : 0/0
 27887 ;;		Unchanged: 0/0
 27888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27889 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27890 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27891 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27892 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27893 ;;Total ram usage:        0 bytes
 27894 ;; Hardware stack levels used:    1
 27895 ;; Hardware stack levels required when called:   15
 27896 ;; This function calls:
 27897 ;;		Nothing
 27898 ;; This function is called by:
 27899 ;;		_toupper
 27900 ;; This function uses a reentrant model
 27901 ;;
 27902                           
 27903                           	psect	text96
 27904  001F76                     __ptext96:
 27905                           	opt callstack 0
 27906  001F76                     _islower:
 27907                           	opt callstack 0
 27908                           
 27909                           ;stkvar	_c @ sp[(0)+-2]
 27910                           
 27911                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27912                           ;incstack = 0
 27913 ;; hardware stack exceeded
 27914  001F76  0EFE               	movlw	-2
 27915  001F78  50E3               	movf	plusw1,w,c
 27916  001F7A  0F9F               	addlw	159
 27917  001F7C  6E34               	movwf	(btemp+10)^0,c
 27918  001F7E  0EFF               	movlw	-1
 27919  001F80  006F FF8C  F035    	movff	plusw1,btemp+11
 27920  001F86  0EFF               	movlw	255
 27921  001F88  2235               	addwfc	(btemp+11)^0,f,c
 27922  001F8A  5035               	movf	(btemp+11)^0,w,c
 27923  001F8C  E106               	bnz	u7590
 27924  001F8E  0E1A               	movlw	26
 27925  001F90  5C34               	subwf	(btemp+10)^0,w,c
 27926  001F92  B0D8               	btfsc	status,0,c
 27927  001F94  D002               	goto	u7590
 27928  001F96  0E01               	movlw	1
 27929  001F98  D001               	goto	u7600
 27930  001F9A                     u7590:
 27931  001F9A  0E00               	movlw	0
 27932  001F9C                     u7600:
 27933  001F9C  6E2A               	movwf	btemp^0,c
 27934  001F9E  6A2B               	clrf	(btemp+1)^0,c
 27935                           
 27936                           ; _islower: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 27937  001FA0  52E5               	movf	postdec1,f,c
 27938  001FA2  52E5               	movf	postdec1,f,c
 27939  001FA4  0012               	return		;funcret
 27940  001FA6                     __end_of_islower:
 27941                           	opt callstack 0
 27942                           
 27943 ;; *************** function _isalpha *****************
 27944 ;; Defined at:
 27945 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isalpha.c"
 27946 ;; Parameters:    Size  Location     Type
 27947 ;;  c               2  [STACK] int 
 27948 ;; Auto vars:     Size  Location     Type
 27949 ;;		None
 27950 ;; Return value:  Size  Location     Type
 27951 ;;                  2  [STACK] int 
 27952 ;; Registers used:
 27953 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11
 27954 ;; Tracked objects:
 27955 ;;		On entry : 0/0
 27956 ;;		On exit  : 0/0
 27957 ;;		Unchanged: 0/0
 27958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27959 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27960 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27961 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27962 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27963 ;;Total ram usage:        0 bytes
 27964 ;; Hardware stack levels used:    1
 27965 ;; Hardware stack levels required when called:   15
 27966 ;; This function calls:
 27967 ;;		Nothing
 27968 ;; This function is called by:
 27969 ;;		_xtoa
 27970 ;; This function uses a reentrant model
 27971 ;;
 27972                           
 27973                           	psect	text97
 27974  001AEE                     __ptext97:
 27975                           	opt callstack 0
 27976  001AEE                     _isalpha:
 27977                           	opt callstack 0
 27978                           
 27979                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27980                           ;incstack = 0
 27981 ;; hardware stack exceeded
 27982  001AEE  0E9F               	movlw	159
 27983  001AF0  6E34               	movwf	(btemp+10)^0,c
 27984  001AF2  0EFF               	movlw	255
 27985  001AF4  6E35               	movwf	(btemp+11)^0,c
 27986                           
 27987                           ;stkvar	_c @ sp[(0)+-2]
 27988  001AF6  0EFE               	movlw	-2
 27989  001AF8  006F FF8C  F032    	movff	plusw1,btemp+8
 27990  001AFE  0EFF               	movlw	-1
 27991  001B00  006F FF8C  F033    	movff	plusw1,btemp+9
 27992  001B06  0E20               	movlw	32
 27993  001B08  1232               	iorwf	(btemp+8)^0,f,c
 27994  001B0A  0E00               	movlw	0
 27995  001B0C  1233               	iorwf	(btemp+9)^0,f,c
 27996  001B0E  5034               	movf	(btemp+10)^0,w,c
 27997  001B10  2632               	addwf	(btemp+8)^0,f,c
 27998  001B12  5035               	movf	(btemp+11)^0,w,c
 27999  001B14  2233               	addwfc	(btemp+9)^0,f,c
 28000  001B16  5033               	movf	(btemp+9)^0,w,c
 28001  001B18  E106               	bnz	u7940
 28002  001B1A  0E1A               	movlw	26
 28003  001B1C  5C32               	subwf	(btemp+8)^0,w,c
 28004  001B1E  B0D8               	btfsc	status,0,c
 28005  001B20  D002               	goto	u7940
 28006  001B22  0E01               	movlw	1
 28007  001B24  D001               	goto	u7950
 28008  001B26                     u7940:
 28009  001B26  0E00               	movlw	0
 28010  001B28                     u7950:
 28011  001B28  6E2A               	movwf	btemp^0,c
 28012  001B2A  6A2B               	clrf	(btemp+1)^0,c
 28013                           
 28014                           ; _isalpha: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 28015  001B2C  52E5               	movf	postdec1,f,c
 28016  001B2E  52E5               	movf	postdec1,f,c
 28017  001B30  0012               	return		;funcret
 28018  001B32                     __end_of_isalpha:
 28019                           	opt callstack 0
 28020                           
 28021 ;; *************** function _utoa *****************
 28022 ;; Defined at:
 28023 ;;		line 593 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 28024 ;; Parameters:    Size  Location     Type
 28025 ;;  fp              2  [STACK] PTR struct _IO_FILE
 28026 ;;		 -> f(6), NULL(0), 
 28027 ;;  d               8  [STACK] unsigned long long 
 28028 ;; Auto vars:     Size  Location     Type
 28029 ;;  n               8  [STACK] unsigned long long 
 28030 ;;  i               2  [STACK] int 
 28031 ;;  w               2  [STACK] int 
 28032 ;;  p               2  [STACK] int 
 28033 ;; Return value:  Size  Location     Type
 28034 ;;                  2  [STACK] int 
 28035 ;; Registers used:
 28036 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 28037 ;; Tracked objects:
 28038 ;;		On entry : 0/0
 28039 ;;		On exit  : 0/0
 28040 ;;		Unchanged: 0/0
 28041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28042 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28043 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28044 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28045 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28046 ;;Total ram usage:        0 bytes
 28047 ;; Hardware stack levels used:    1
 28048 ;; Hardware stack levels required when called:   20
 28049 ;; This function calls:
 28050 ;;		___lodiv
 28051 ;;		___lomod
 28052 ;;		_pad
 28053 ;; This function is called by:
 28054 ;;		_vfpfcnvrt
 28055 ;; This function uses a reentrant model
 28056 ;;
 28057                           
 28058                           	psect	text98
 28059  01A5B0                     __ptext98:
 28060                           	opt callstack 0
 28061  01A5B0                     _utoa:
 28062                           	opt callstack 0
 28063                           
 28064                           ; autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 28065  01A5B0  0E0E               	movlw	14
 28066  01A5B2  26E1               	addwf	fsr1l,f,c
 28067  01A5B4  0E00               	movlw	0
 28068  01A5B6  22E2               	addwfc	fsr1h,f,c
 28069                           
 28070                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 593: static int utoa(FILE *fp
      +                          , unsigned long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 594: {
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 595:     int i, p, w;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 596:     unsigned long long n;;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 599:     if (!(prec < 0)) {
 28071                           
 28072                           ;incstack = 0
 28073 ;; hardware stack exceeded
 28074  01A5B8  AE4D               	btfss	(_prec+1)^0,7,c
 28075                           
 28076                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 600:         flags &= ~(1 << 
      +                          1);
 28077  01A5BA  924E               	bcf	_flags^0,1,c
 28078                           
 28079                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 602:     p = (0 < prec) ? pre
      +                          c : 1;
 28080  01A5BC  BE4D               	btfsc	(_prec+1)^0,7,c
 28081  01A5BE  D005               	goto	u15280
 28082  01A5C0  504D               	movf	(_prec+1)^0,w,c
 28083  01A5C2  E110               	bnz	l15922
 28084  01A5C4  044C               	decf	_prec^0,w,c
 28085  01A5C6  B0D8               	btfsc	status,0,c
 28086  01A5C8  D00D               	goto	l15922
 28087  01A5CA                     u15280:
 28088  01A5CA  0E01               	movlw	1
 28089  01A5CC  6E34               	movwf	(btemp+10)^0,c
 28090  01A5CE  0E00               	movlw	0
 28091  01A5D0  6E35               	movwf	(btemp+11)^0,c
 28092                           
 28093                           ;stkvar	_p @ sp[(-14)+12]
 28094  01A5D2  0EFE               	movlw	-2
 28095  01A5D4  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 28096  01A5DA  0EFF               	movlw	-1
 28097  01A5DC  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 28098  01A5E2  D008               	goto	l2624
 28099  01A5E4                     l15922:
 28100                           
 28101                           ;stkvar	_p @ sp[(-14)+12]
 28102  01A5E4  0EFE               	movlw	-2
 28103  01A5E6  0060  F133  FFE3   	movff	_prec,plusw1
 28104  01A5EC  0EFF               	movlw	-1
 28105  01A5EE  0060  F137  FFE3   	movff	_prec+1,plusw1
 28106  01A5F4                     l2624:
 28107                           
 28108                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 603:     w = width;
 28109                           ;stkvar	_w @ sp[(-14)+10]
 28110  01A5F4  0EFC               	movlw	-4
 28111  01A5F6  0060  F12B  FFE3   	movff	_width,plusw1
 28112  01A5FC  0EFD               	movlw	-3
 28113  01A5FE  0060  F12F  FFE3   	movff	_width+1,plusw1
 28114                           
 28115                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 606:     n = d;
 28116                           ;stkvar	_d @ sp[(-14)+-10]
 28117  01A604  0EE8               	movlw	232
 28118  01A606  24E1               	addwf	fsr1l,w,c
 28119  01A608  6ED9               	movwf	fsr2l,c
 28120  01A60A  0EFF               	movlw	255
 28121  01A60C  20E2               	addwfc	fsr1h,w,c
 28122  01A60E  6EDA               	movwf	fsr2h,c
 28123                           
 28124                           ;stkvar	_n @ sp[(-14)+0]
 28125  01A610  0E08               	movlw	8
 28126  01A612  6E2A               	movwf	btemp^0,c
 28127  01A614  0EF2               	movlw	-14
 28128  01A616                     us1529999:
 28129  01A616  006F FF7B FFE3     	movff	postinc2,plusw1
 28130  01A61C  28E8               	incf	wreg,w,c
 28131  01A61E  2E2A               	decfsz	btemp^0,f,c
 28132  01A620  D7FA               	bra	us1529999
 28133                           
 28134                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 607:     i = sizeof(dbuf) - 1
      +                          ;
 28135  01A622  0E4F               	movlw	79
 28136  01A624  6E34               	movwf	(btemp+10)^0,c
 28137  01A626  0E00               	movlw	0
 28138  01A628  6E35               	movwf	(btemp+11)^0,c
 28139                           
 28140                           ;stkvar	_i @ sp[(-14)+8]
 28141  01A62A  0EFA               	movlw	-6
 28142  01A62C  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 28143  01A632  0EFB               	movlw	-5
 28144  01A634  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 28145                           
 28146                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 608:     dbuf[i] = '\0';
 28147  01A63A  0103               	movlb	3	; () banked
 28148  01A63C  6BA3               	clrf	(_dbuf+79)& (0+255),b
 28149                           
 28150                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
 28151  01A63E  D0FB               	goto	l15940
 28152  01A640                     l15930:
 28153                           
 28154                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 610:         --i;
 28155                           ;stkvar	_i @ sp[(-14)+8]
 28156  01A640  50E1               	movf	fsr1l,w,c
 28157  01A642  0FFA               	addlw	-6
 28158  01A644  6ED9               	movwf	fsr2l,c
 28159  01A646  50E2               	movf	fsr1h,w,c
 28160  01A648  6EDA               	movwf	fsr2h,c
 28161  01A64A  0EFF               	movlw	255
 28162  01A64C  22DA               	addwfc	fsr2h,f,c
 28163  01A64E  06DE               	decf	postinc2,f,c
 28164  01A650  0E00               	movlw	0
 28165  01A652  5ADD               	subwfb	postdec2,f,c
 28166                           
 28167                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 611:         dbuf[i] = '0' + 
      +                          (n % 10);
 28168  01A654  0E0A               	movlw	10
 28169  01A656  6EE6               	movwf	postinc1,c
 28170  01A658  0E00               	movlw	0
 28171  01A65A  6EE6               	movwf	postinc1,c
 28172  01A65C  0E00               	movlw	0
 28173  01A65E  6EE6               	movwf	postinc1,c
 28174  01A660  0E00               	movlw	0
 28175  01A662  6EE6               	movwf	postinc1,c
 28176  01A664  0E00               	movlw	0
 28177  01A666  6EE6               	movwf	postinc1,c
 28178  01A668  0E00               	movlw	0
 28179  01A66A  6EE6               	movwf	postinc1,c
 28180  01A66C  0E00               	movlw	0
 28181  01A66E  6EE6               	movwf	postinc1,c
 28182  01A670  0E00               	movlw	0
 28183  01A672  6EE6               	movwf	postinc1,c
 28184                           
 28185                           ;stkvar	_n @ sp[(-22)+0]
 28186  01A674  50E1               	movf	fsr1l,w,c
 28187  01A676  0FEA               	addlw	-22
 28188  01A678  6ED9               	movwf	fsr2l,c
 28189  01A67A  50E2               	movf	fsr1h,w,c
 28190  01A67C  6EDA               	movwf	fsr2h,c
 28191  01A67E  0EFF               	movlw	255
 28192  01A680  22DA               	addwfc	fsr2h,f,c
 28193  01A682  006F FF7B FFE6     	movff	postinc2,postinc1
 28194  01A688  006F FF7B FFE6     	movff	postinc2,postinc1
 28195  01A68E  006F FF7B FFE6     	movff	postinc2,postinc1
 28196  01A694  006F FF7B FFE6     	movff	postinc2,postinc1
 28197  01A69A  006F FF7B FFE6     	movff	postinc2,postinc1
 28198  01A6A0  006F FF7B FFE6     	movff	postinc2,postinc1
 28199  01A6A6  006F FF7B FFE6     	movff	postinc2,postinc1
 28200  01A6AC  006F FF7B FFE6     	movff	postinc2,postinc1
 28201  01A6B2  ECBC  F0F7         	call	___lomod	;wreg free
 28202  01A6B6  52E5               	movf	postdec1,f,c
 28203  01A6B8  006F FF9C  F041    	movff	indf1,btemp+23
 28204  01A6BE  52E5               	movf	postdec1,f,c
 28205  01A6C0  006F FF9C  F040    	movff	indf1,btemp+22
 28206  01A6C6  52E5               	movf	postdec1,f,c
 28207  01A6C8  006F FF9C  F03F    	movff	indf1,btemp+21
 28208  01A6CE  52E5               	movf	postdec1,f,c
 28209  01A6D0  006F FF9C  F03E    	movff	indf1,btemp+20
 28210  01A6D6  52E5               	movf	postdec1,f,c
 28211  01A6D8  006F FF9C  F03D    	movff	indf1,btemp+19
 28212  01A6DE  52E5               	movf	postdec1,f,c
 28213  01A6E0  006F FF9C  F03C    	movff	indf1,btemp+18
 28214  01A6E6  52E5               	movf	postdec1,f,c
 28215  01A6E8  006F FF9C  F03B    	movff	indf1,btemp+17
 28216  01A6EE  52E5               	movf	postdec1,f,c
 28217  01A6F0  006F FF9C  F03A    	movff	indf1,btemp+16
 28218  01A6F6  0EF8               	movlw	248
 28219  01A6F8  26E1               	addwf	fsr1l,f,c
 28220  01A6FA  0EFF               	movlw	255
 28221  01A6FC  22E2               	addwfc	fsr1h,f,c
 28222  01A6FE  0E30               	movlw	48
 28223  01A700  263A               	addwf	(btemp+16)^0,f,c
 28224                           
 28225                           ;stkvar	_i @ sp[(-14)+8]
 28226  01A702  0EFA               	movlw	-6
 28227  01A704  006F FF8C  F034    	movff	plusw1,btemp+10
 28228  01A70A  0EFB               	movlw	-5
 28229  01A70C  006F FF8C  F035    	movff	plusw1,btemp+11
 28230  01A712  0E54               	movlw	low _dbuf
 28231  01A714  2434               	addwf	(btemp+10)^0,w,c
 28232  01A716  6ED9               	movwf	fsr2l,c
 28233  01A718  0E03               	movlw	high _dbuf
 28234  01A71A  2035               	addwfc	(btemp+11)^0,w,c
 28235  01A71C  6EDA               	movwf	fsr2h,c
 28236  01A71E  0060  F0EB  FFDF   	movff	btemp+16,indf2
 28237                           
 28238                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 612:         --p;
 28239                           ;stkvar	_p @ sp[(-14)+12]
 28240  01A724  50E1               	movf	fsr1l,w,c
 28241  01A726  0FFE               	addlw	-2
 28242  01A728  6ED9               	movwf	fsr2l,c
 28243  01A72A  50E2               	movf	fsr1h,w,c
 28244  01A72C  6EDA               	movwf	fsr2h,c
 28245  01A72E  0EFF               	movlw	255
 28246  01A730  22DA               	addwfc	fsr2h,f,c
 28247  01A732  06DE               	decf	postinc2,f,c
 28248  01A734  0E00               	movlw	0
 28249  01A736  5ADD               	subwfb	postdec2,f,c
 28250                           
 28251                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 613:         --w;
 28252                           ;stkvar	_w @ sp[(-14)+10]
 28253  01A738  50E1               	movf	fsr1l,w,c
 28254  01A73A  0FFC               	addlw	-4
 28255  01A73C  6ED9               	movwf	fsr2l,c
 28256  01A73E  50E2               	movf	fsr1h,w,c
 28257  01A740  6EDA               	movwf	fsr2h,c
 28258  01A742  0EFF               	movlw	255
 28259  01A744  22DA               	addwfc	fsr2h,f,c
 28260  01A746  06DE               	decf	postinc2,f,c
 28261  01A748  0E00               	movlw	0
 28262  01A74A  5ADD               	subwfb	postdec2,f,c
 28263                           
 28264                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 614:         n = n / 10;
 28265  01A74C  0E0A               	movlw	10
 28266  01A74E  6EE6               	movwf	postinc1,c
 28267  01A750  0E00               	movlw	0
 28268  01A752  6EE6               	movwf	postinc1,c
 28269  01A754  0E00               	movlw	0
 28270  01A756  6EE6               	movwf	postinc1,c
 28271  01A758  0E00               	movlw	0
 28272  01A75A  6EE6               	movwf	postinc1,c
 28273  01A75C  0E00               	movlw	0
 28274  01A75E  6EE6               	movwf	postinc1,c
 28275  01A760  0E00               	movlw	0
 28276  01A762  6EE6               	movwf	postinc1,c
 28277  01A764  0E00               	movlw	0
 28278  01A766  6EE6               	movwf	postinc1,c
 28279  01A768  0E00               	movlw	0
 28280  01A76A  6EE6               	movwf	postinc1,c
 28281                           
 28282                           ;stkvar	_n @ sp[(-22)+0]
 28283  01A76C  50E1               	movf	fsr1l,w,c
 28284  01A76E  0FEA               	addlw	-22
 28285  01A770  6ED9               	movwf	fsr2l,c
 28286  01A772  50E2               	movf	fsr1h,w,c
 28287  01A774  6EDA               	movwf	fsr2h,c
 28288  01A776  0EFF               	movlw	255
 28289  01A778  22DA               	addwfc	fsr2h,f,c
 28290  01A77A  006F FF7B FFE6     	movff	postinc2,postinc1
 28291  01A780  006F FF7B FFE6     	movff	postinc2,postinc1
 28292  01A786  006F FF7B FFE6     	movff	postinc2,postinc1
 28293  01A78C  006F FF7B FFE6     	movff	postinc2,postinc1
 28294  01A792  006F FF7B FFE6     	movff	postinc2,postinc1
 28295  01A798  006F FF7B FFE6     	movff	postinc2,postinc1
 28296  01A79E  006F FF7B FFE6     	movff	postinc2,postinc1
 28297  01A7A4  006F FF7B FFE6     	movff	postinc2,postinc1
 28298  01A7AA  EC24  F0F0         	call	___lodiv	;wreg free
 28299  01A7AE  52E5               	movf	postdec1,f,c
 28300  01A7B0  006F FF9C  F041    	movff	indf1,btemp+23
 28301  01A7B6  52E5               	movf	postdec1,f,c
 28302  01A7B8  006F FF9C  F040    	movff	indf1,btemp+22
 28303  01A7BE  52E5               	movf	postdec1,f,c
 28304  01A7C0  006F FF9C  F03F    	movff	indf1,btemp+21
 28305  01A7C6  52E5               	movf	postdec1,f,c
 28306  01A7C8  006F FF9C  F03E    	movff	indf1,btemp+20
 28307  01A7CE  52E5               	movf	postdec1,f,c
 28308  01A7D0  006F FF9C  F03D    	movff	indf1,btemp+19
 28309  01A7D6  52E5               	movf	postdec1,f,c
 28310  01A7D8  006F FF9C  F03C    	movff	indf1,btemp+18
 28311  01A7DE  52E5               	movf	postdec1,f,c
 28312  01A7E0  006F FF9C  F03B    	movff	indf1,btemp+17
 28313  01A7E6  52E5               	movf	postdec1,f,c
 28314  01A7E8  006F FF9C  F03A    	movff	indf1,btemp+16
 28315  01A7EE  0EF8               	movlw	248
 28316  01A7F0  26E1               	addwf	fsr1l,f,c
 28317  01A7F2  0EFF               	movlw	255
 28318  01A7F4  22E2               	addwfc	fsr1h,f,c
 28319                           
 28320                           ;stkvar	_n @ sp[(-14)+0]
 28321  01A7F6  0EF2               	movlw	-14
 28322  01A7F8  0060  F0EB  FFE3   	movff	btemp+16,plusw1
 28323  01A7FE  0EF3               	movlw	-13
 28324  01A800  0060  F0EF  FFE3   	movff	btemp+17,plusw1
 28325  01A806  0EF4               	movlw	-12
 28326  01A808  0060  F0F3  FFE3   	movff	btemp+18,plusw1
 28327  01A80E  0EF5               	movlw	-11
 28328  01A810  0060  F0F7  FFE3   	movff	btemp+19,plusw1
 28329  01A816  0EF6               	movlw	-10
 28330  01A818  0060  F0FB  FFE3   	movff	btemp+20,plusw1
 28331  01A81E  0EF7               	movlw	-9
 28332  01A820  0060  F0FF  FFE3   	movff	btemp+21,plusw1
 28333  01A826  0EF8               	movlw	-8
 28334  01A828  0060  F103  FFE3   	movff	btemp+22,plusw1
 28335  01A82E  0EF9               	movlw	-7
 28336  01A830  0060  F107  FFE3   	movff	btemp+23,plusw1
 28337  01A836                     l15940:
 28338                           
 28339                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
 28340                           ;stkvar	_i @ sp[(-14)+8]
 28341  01A836  0EFA               	movlw	-6
 28342  01A838  006F FF8C  F02A    	movff	plusw1,btemp
 28343  01A83E  0EFB               	movlw	-5
 28344  01A840  50E3               	movf	plusw1,w,c
 28345  01A842  102A               	iorwf	btemp^0,w,c
 28346  01A844  B4D8               	btfsc	status,2,c
 28347  01A846  D02F               	goto	u15340
 28348                           
 28349                           ;stkvar	_n @ sp[(-14)+0]
 28350  01A848  0EF2               	movlw	-14
 28351  01A84A  50E3               	movf	plusw1,w,c
 28352  01A84C  E115               	bnz	u15311
 28353  01A84E  0EF3               	movlw	-13
 28354  01A850  50E3               	movf	plusw1,w,c
 28355  01A852  E112               	bnz	u15311
 28356  01A854  0EF4               	movlw	-12
 28357  01A856  50E3               	movf	plusw1,w,c
 28358  01A858  E10F               	bnz	u15311
 28359  01A85A  0EF5               	movlw	-11
 28360  01A85C  50E3               	movf	plusw1,w,c
 28361  01A85E  E10C               	bnz	u15311
 28362  01A860  0EF6               	movlw	-10
 28363  01A862  50E3               	movf	plusw1,w,c
 28364  01A864  E109               	bnz	u15311
 28365  01A866  0EF7               	movlw	-9
 28366  01A868  50E3               	movf	plusw1,w,c
 28367  01A86A  E106               	bnz	u15311
 28368  01A86C  0EF8               	movlw	-8
 28369  01A86E  50E3               	movf	plusw1,w,c
 28370  01A870  E103               	bnz	u15311
 28371  01A872  0EF9               	movlw	-7
 28372  01A874  50E3               	movf	plusw1,w,c
 28373  01A876  A4D8               	btfss	status,2,c
 28374  01A878                     u15311:
 28375  01A878  D6E3               	goto	l15930
 28376                           
 28377                           ;stkvar	_p @ sp[(-14)+12]
 28378  01A87A  0EFF               	movlw	-1
 28379  01A87C  BEE3               	btfsc	plusw1,7,c
 28380  01A87E  D007               	goto	u15320
 28381  01A880  0EFF               	movlw	-1
 28382  01A882  50E3               	movf	plusw1,w,c
 28383  01A884  E103               	bnz	u15321
 28384  01A886  0EFE               	movlw	-2
 28385  01A888  04E3               	decf	plusw1,w,c
 28386  01A88A  B0D8               	btfsc	status,0,c
 28387  01A88C                     u15321:
 28388  01A88C  D6D9               	goto	l15930
 28389  01A88E                     u15320:
 28390                           
 28391                           ;stkvar	_w @ sp[(-14)+10]
 28392  01A88E  0EFD               	movlw	-3
 28393  01A890  BEE3               	btfsc	plusw1,7,c
 28394  01A892  D009               	goto	u15340
 28395  01A894  0EFD               	movlw	-3
 28396  01A896  50E3               	movf	plusw1,w,c
 28397  01A898  E104               	bnz	u15330
 28398  01A89A  0EFC               	movlw	-4
 28399  01A89C  04E3               	decf	plusw1,w,c
 28400  01A89E  A0D8               	btfss	status,0,c
 28401  01A8A0  D002               	goto	u15340
 28402  01A8A2                     u15330:
 28403  01A8A2  B24E               	btfsc	_flags^0,1,c
 28404  01A8A4  D6CD               	goto	l15930
 28405  01A8A6                     u15340:
 28406                           
 28407                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 618:     return pad(fp, &dbuf
      +                          [i], w);
 28408                           ;stkvar	_w @ sp[(-14)+10]
 28409  01A8A6  0EFC               	movlw	-4
 28410  01A8A8  006F FF8F FFE6     	movff	plusw1,postinc1
 28411  01A8AE  006F FF8F FFE6     	movff	plusw1,postinc1
 28412                           
 28413                           ;stkvar	_i @ sp[(-16)+8]
 28414  01A8B4  0E54               	movlw	low _dbuf
 28415  01A8B6  6E34               	movwf	(btemp+10)^0,c
 28416  01A8B8  0E03               	movlw	high _dbuf
 28417  01A8BA  6E35               	movwf	(btemp+11)^0,c
 28418  01A8BC  0EF8               	movlw	-8
 28419  01A8BE  50E3               	movf	plusw1,w,c
 28420  01A8C0  2634               	addwf	(btemp+10)^0,f,c
 28421  01A8C2  0EF9               	movlw	-7
 28422  01A8C4  50E3               	movf	plusw1,w,c
 28423  01A8C6  2235               	addwfc	(btemp+11)^0,f,c
 28424  01A8C8  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 28425  01A8CE  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 28426                           
 28427                           ;stkvar	_fp @ sp[(-18)+-2]
 28428  01A8D4  0EEC               	movlw	-20
 28429  01A8D6  006F FF8F FFE6     	movff	plusw1,postinc1
 28430  01A8DC  006F FF8F FFE6     	movff	plusw1,postinc1
 28431  01A8E2  EC2F  F0FB         	call	_pad	;wreg free
 28432                           
 28433                           ; _utoa: autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 28434  01A8E6  0EE8               	movlw	232
 28435  01A8E8  26E1               	addwf	fsr1l,f,c
 28436  01A8EA  0EFF               	movlw	255
 28437  01A8EC  22E2               	addwfc	fsr1h,f,c
 28438  01A8EE  0012               	return		;funcret
 28439  01A8F0                     __end_of_utoa:
 28440                           	opt callstack 0
 28441                           
 28442 ;; *************** function ___lomod *****************
 28443 ;; Defined at:
 28444 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lomod.c"
 28445 ;; Parameters:    Size  Location     Type
 28446 ;;  dividend        8  [STACK] unsigned long long 
 28447 ;;  divisor         8  [STACK] unsigned long long 
 28448 ;; Auto vars:     Size  Location     Type
 28449 ;;  counter         1  [STACK] unsigned char 
 28450 ;; Return value:  Size  Location     Type
 28451 ;;                  8  [STACK] unsigned long long 
 28452 ;; Registers used:
 28453 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 28454 ;; Tracked objects:
 28455 ;;		On entry : 0/3
 28456 ;;		On exit  : 0/0
 28457 ;;		Unchanged: 0/0
 28458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28459 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28460 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28461 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28462 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28463 ;;Total ram usage:        0 bytes
 28464 ;; Hardware stack levels used:    1
 28465 ;; Hardware stack levels required when called:   15
 28466 ;; This function calls:
 28467 ;;		Nothing
 28468 ;; This function is called by:
 28469 ;;		_utoa
 28470 ;; This function uses a reentrant model
 28471 ;;
 28472                           
 28473                           	psect	text99
 28474  01EF78                     __ptext99:
 28475                           	opt callstack 0
 28476  01EF78                     ___lomod:
 28477                           	opt callstack 0
 28478                           
 28479                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 28480  01EF78  52E6               	movf	postinc1,f,c
 28481                           
 28482                           ;stkvar	_divisor @ sp[(-1)+-16]
 28483                           
 28484                           ;incstack = 0
 28485 ;; hardware stack exceeded
 28486  01EF7A  0EEF               	movlw	-17
 28487  01EF7C  50E3               	movf	plusw1,w,c
 28488  01EF7E  E116               	bnz	u9150
 28489  01EF80  0EF0               	movlw	-16
 28490  01EF82  50E3               	movf	plusw1,w,c
 28491  01EF84  E113               	bnz	u9150
 28492  01EF86  0EF1               	movlw	-15
 28493  01EF88  50E3               	movf	plusw1,w,c
 28494  01EF8A  E110               	bnz	u9150
 28495  01EF8C  0EF2               	movlw	-14
 28496  01EF8E  50E3               	movf	plusw1,w,c
 28497  01EF90  E10D               	bnz	u9150
 28498  01EF92  0EF3               	movlw	-13
 28499  01EF94  50E3               	movf	plusw1,w,c
 28500  01EF96  E10A               	bnz	u9150
 28501  01EF98  0EF4               	movlw	-12
 28502  01EF9A  50E3               	movf	plusw1,w,c
 28503  01EF9C  E107               	bnz	u9150
 28504  01EF9E  0EF5               	movlw	-11
 28505  01EFA0  50E3               	movf	plusw1,w,c
 28506  01EFA2  E104               	bnz	u9150
 28507  01EFA4  0EF6               	movlw	-10
 28508  01EFA6  50E3               	movf	plusw1,w,c
 28509  01EFA8  B4D8               	btfsc	status,2,c
 28510  01EFAA  D075               	goto	u9180
 28511  01EFAC                     u9150:
 28512                           
 28513                           ;stkvar	_counter @ sp[(-1)+0]
 28514  01EFAC  0EFF               	movlw	-1
 28515  01EFAE  6AE3               	clrf	plusw1,c
 28516  01EFB0  D012               	goto	L29
 28517  01EFB2                     l10778:
 28518                           
 28519                           ;stkvar	_divisor @ sp[(-1)+-16]
 28520  01EFB2  90D8               	bcf	status,0,c
 28521  01EFB4  0EEF               	movlw	-17
 28522  01EFB6  36E3               	rlcf	plusw1,f,c
 28523  01EFB8  0EF0               	movlw	-16
 28524  01EFBA  36E3               	rlcf	plusw1,f,c
 28525  01EFBC  0EF1               	movlw	-15
 28526  01EFBE  36E3               	rlcf	plusw1,f,c
 28527  01EFC0  0EF2               	movlw	-14
 28528  01EFC2  36E3               	rlcf	plusw1,f,c
 28529  01EFC4  0EF3               	movlw	-13
 28530  01EFC6  36E3               	rlcf	plusw1,f,c
 28531  01EFC8  0EF4               	movlw	-12
 28532  01EFCA  36E3               	rlcf	plusw1,f,c
 28533  01EFCC  0EF5               	movlw	-11
 28534  01EFCE  36E3               	rlcf	plusw1,f,c
 28535  01EFD0  0EF6               	movlw	-10
 28536  01EFD2  36E3               	rlcf	plusw1,f,c
 28537                           
 28538                           ;stkvar	_counter @ sp[(-1)+0]
 28539  01EFD4  0EFF               	movlw	-1
 28540  01EFD6                     L29:
 28541  01EFD6  2AE3               	incf	plusw1,f,c
 28542                           
 28543                           ;stkvar	_divisor @ sp[(-1)+-16]
 28544  01EFD8  0EF6               	movlw	-10
 28545  01EFDA  AEE3               	btfss	plusw1,7,c
 28546  01EFDC  D7EA               	goto	l10778
 28547  01EFDE                     u9160:
 28548                           
 28549                           ;stkvar	_divisor @ sp[(-1)+-16]
 28550                           ;stkvar	_dividend @ sp[(-1)+-8]
 28551  01EFDE  50E1               	movf	fsr1l,w,c
 28552  01EFE0  0FF7               	addlw	-9
 28553  01EFE2  6ED9               	movwf	fsr2l,c
 28554  01EFE4  50E2               	movf	fsr1h,w,c
 28555  01EFE6  6EDA               	movwf	fsr2h,c
 28556  01EFE8  0EFF               	movlw	255
 28557  01EFEA  22DA               	addwfc	fsr2h,f,c
 28558  01EFEC  0EEF               	movlw	-17
 28559  01EFEE  50E3               	movf	plusw1,w,c
 28560  01EFF0  5CDE               	subwf	postinc2,w,c
 28561  01EFF2  0EF0               	movlw	-16
 28562  01EFF4  50E3               	movf	plusw1,w,c
 28563  01EFF6  58DE               	subwfb	postinc2,w,c
 28564  01EFF8  0EF1               	movlw	-15
 28565  01EFFA  50E3               	movf	plusw1,w,c
 28566  01EFFC  58DE               	subwfb	postinc2,w,c
 28567  01EFFE  0EF2               	movlw	-14
 28568  01F000  50E3               	movf	plusw1,w,c
 28569  01F002  58DE               	subwfb	postinc2,w,c
 28570  01F004  0EF3               	movlw	-13
 28571  01F006  50E3               	movf	plusw1,w,c
 28572  01F008  58DE               	subwfb	postinc2,w,c
 28573  01F00A  0EF4               	movlw	-12
 28574  01F00C  50E3               	movf	plusw1,w,c
 28575  01F00E  58DE               	subwfb	postinc2,w,c
 28576  01F010  0EF5               	movlw	-11
 28577  01F012  50E3               	movf	plusw1,w,c
 28578  01F014  58DE               	subwfb	postinc2,w,c
 28579  01F016  0EF6               	movlw	-10
 28580  01F018  50E3               	movf	plusw1,w,c
 28581  01F01A  58DE               	subwfb	postinc2,w,c
 28582  01F01C  A0D8               	btfss	status,0,c
 28583  01F01E  D01F               	goto	l10786
 28584                           
 28585                           ;stkvar	_divisor @ sp[(-1)+-16]
 28586                           ;stkvar	_dividend @ sp[(-1)+-8]
 28587  01F020  50E1               	movf	fsr1l,w,c
 28588  01F022  0FF7               	addlw	-9
 28589  01F024  6ED9               	movwf	fsr2l,c
 28590  01F026  50E2               	movf	fsr1h,w,c
 28591  01F028  6EDA               	movwf	fsr2h,c
 28592  01F02A  0EFF               	movlw	255
 28593  01F02C  22DA               	addwfc	fsr2h,f,c
 28594  01F02E  0EEF               	movlw	-17
 28595  01F030  50E3               	movf	plusw1,w,c
 28596  01F032  5EDE               	subwf	postinc2,f,c
 28597  01F034  0EF0               	movlw	-16
 28598  01F036  50E3               	movf	plusw1,w,c
 28599  01F038  5ADE               	subwfb	postinc2,f,c
 28600  01F03A  0EF1               	movlw	-15
 28601  01F03C  50E3               	movf	plusw1,w,c
 28602  01F03E  5ADE               	subwfb	postinc2,f,c
 28603  01F040  0EF2               	movlw	-14
 28604  01F042  50E3               	movf	plusw1,w,c
 28605  01F044  5ADE               	subwfb	postinc2,f,c
 28606  01F046  0EF3               	movlw	-13
 28607  01F048  50E3               	movf	plusw1,w,c
 28608  01F04A  5ADE               	subwfb	postinc2,f,c
 28609  01F04C  0EF4               	movlw	-12
 28610  01F04E  50E3               	movf	plusw1,w,c
 28611  01F050  5ADE               	subwfb	postinc2,f,c
 28612  01F052  0EF5               	movlw	-11
 28613  01F054  50E3               	movf	plusw1,w,c
 28614  01F056  5ADE               	subwfb	postinc2,f,c
 28615  01F058  0EF6               	movlw	-10
 28616  01F05A  50E3               	movf	plusw1,w,c
 28617  01F05C  5ADE               	subwfb	postinc2,f,c
 28618  01F05E                     l10786:
 28619                           
 28620                           ;stkvar	_divisor @ sp[(-1)+-16]
 28621  01F05E  90D8               	bcf	status,0,c
 28622  01F060  0EF6               	movlw	-10
 28623  01F062  32E3               	rrcf	plusw1,f,c
 28624  01F064  0EF5               	movlw	-11
 28625  01F066  32E3               	rrcf	plusw1,f,c
 28626  01F068  0EF4               	movlw	-12
 28627  01F06A  32E3               	rrcf	plusw1,f,c
 28628  01F06C  0EF3               	movlw	-13
 28629  01F06E  32E3               	rrcf	plusw1,f,c
 28630  01F070  0EF2               	movlw	-14
 28631  01F072  32E3               	rrcf	plusw1,f,c
 28632  01F074  0EF1               	movlw	-15
 28633  01F076  32E3               	rrcf	plusw1,f,c
 28634  01F078  0EF0               	movlw	-16
 28635  01F07A  32E3               	rrcf	plusw1,f,c
 28636  01F07C  0EEF               	movlw	-17
 28637  01F07E  32E3               	rrcf	plusw1,f,c
 28638                           
 28639                           ;stkvar	_counter @ sp[(-1)+0]
 28640  01F080  0EFF               	movlw	-1
 28641  01F082  50E3               	movf	plusw1,w,c
 28642  01F084  6E2A               	movwf	btemp^0,c
 28643  01F086  0E01               	movlw	1
 28644  01F088  5E2A               	subwf	btemp^0,f,c
 28645  01F08A  0EFF               	movlw	-1
 28646  01F08C  0060  F0AB  FFE3   	movff	btemp,plusw1
 28647  01F092  A4D8               	btfss	status,2,c
 28648  01F094  D7A4               	goto	u9160
 28649  01F096                     u9180:
 28650                           
 28651                           ;stkvar	_dividend @ sp[(-1)+-8]
 28652  01F096  0EF7               	movlw	247
 28653  01F098  24E1               	addwf	fsr1l,w,c
 28654  01F09A  6ED9               	movwf	fsr2l,c
 28655  01F09C  0EFF               	movlw	255
 28656  01F09E  20E2               	addwfc	fsr1h,w,c
 28657  01F0A0  6EDA               	movwf	fsr2h,c
 28658                           
 28659                           ;stkvar	?___lomod @ sp[(-1)+-8]
 28660  01F0A2  0E08               	movlw	8
 28661  01F0A4  6E2A               	movwf	btemp^0,c
 28662  01F0A6  0EF7               	movlw	-9
 28663  01F0A8                     us919999:
 28664  01F0A8  006F FF7B FFE3     	movff	postinc2,plusw1
 28665  01F0AE  28E8               	incf	wreg,w,c
 28666  01F0B0  2E2A               	decfsz	btemp^0,f,c
 28667  01F0B2  D7FA               	bra	us919999
 28668                           
 28669                           ; ___lomod: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 28670  01F0B4  52E5               	movf	postdec1,f,c
 28671  01F0B6  0012               	return		;funcret
 28672  01F0B8                     __end_of___lomod:
 28673                           	opt callstack 0
 28674                           
 28675 ;; *************** function ___lodiv *****************
 28676 ;; Defined at:
 28677 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lodiv.c"
 28678 ;; Parameters:    Size  Location     Type
 28679 ;;  dividend        8  [STACK] unsigned long long 
 28680 ;;  divisor         8  [STACK] unsigned long long 
 28681 ;; Auto vars:     Size  Location     Type
 28682 ;;  quotient        8  [STACK] unsigned long long 
 28683 ;;  counter         1  [STACK] unsigned char 
 28684 ;; Return value:  Size  Location     Type
 28685 ;;                  8  [STACK] unsigned long long 
 28686 ;; Registers used:
 28687 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 28688 ;; Tracked objects:
 28689 ;;		On entry : 0/3
 28690 ;;		On exit  : 0/0
 28691 ;;		Unchanged: 0/0
 28692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28693 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28694 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28695 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28696 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28697 ;;Total ram usage:        0 bytes
 28698 ;; Hardware stack levels used:    1
 28699 ;; Hardware stack levels required when called:   15
 28700 ;; This function calls:
 28701 ;;		Nothing
 28702 ;; This function is called by:
 28703 ;;		_utoa
 28704 ;; This function uses a reentrant model
 28705 ;;
 28706                           
 28707                           	psect	text100
 28708  01E048                     __ptext100:
 28709                           	opt callstack 0
 28710  01E048                     ___lodiv:
 28711                           	opt callstack 0
 28712                           
 28713                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 28714  01E048  0E09               	movlw	9
 28715  01E04A  26E1               	addwf	fsr1l,f,c
 28716  01E04C  0E00               	movlw	0
 28717  01E04E  22E2               	addwfc	fsr1h,f,c
 28718                           
 28719                           ;stkvar	_quotient @ sp[(-9)+0]
 28720                           
 28721                           ;incstack = 0
 28722 ;; hardware stack exceeded
 28723  01E050  0E07               	movlw	7
 28724  01E052  6E2A               	movwf	btemp^0,c
 28725  01E054  0EF7               	movlw	-9
 28726  01E056                     u9091:
 28727  01E056  6AE3               	clrf	plusw1,c
 28728  01E058  2AE8               	incf	wreg,f,c
 28729  01E05A  062A               	decf	btemp^0,f,c
 28730  01E05C  E2FC               	bc	u9091
 28731                           
 28732                           ;stkvar	_divisor @ sp[(-9)+-16]
 28733  01E05E  0EE7               	movlw	-25
 28734  01E060  50E3               	movf	plusw1,w,c
 28735  01E062  E116               	bnz	u9100
 28736  01E064  0EE8               	movlw	-24
 28737  01E066  50E3               	movf	plusw1,w,c
 28738  01E068  E113               	bnz	u9100
 28739  01E06A  0EE9               	movlw	-23
 28740  01E06C  50E3               	movf	plusw1,w,c
 28741  01E06E  E110               	bnz	u9100
 28742  01E070  0EEA               	movlw	-22
 28743  01E072  50E3               	movf	plusw1,w,c
 28744  01E074  E10D               	bnz	u9100
 28745  01E076  0EEB               	movlw	-21
 28746  01E078  50E3               	movf	plusw1,w,c
 28747  01E07A  E10A               	bnz	u9100
 28748  01E07C  0EEC               	movlw	-20
 28749  01E07E  50E3               	movf	plusw1,w,c
 28750  01E080  E107               	bnz	u9100
 28751  01E082  0EED               	movlw	-19
 28752  01E084  50E3               	movf	plusw1,w,c
 28753  01E086  E104               	bnz	u9100
 28754  01E088  0EEE               	movlw	-18
 28755  01E08A  50E3               	movf	plusw1,w,c
 28756  01E08C  B4D8               	btfsc	status,2,c
 28757  01E08E  D088               	goto	u9130
 28758  01E090                     u9100:
 28759                           
 28760                           ;stkvar	_counter @ sp[(-9)+8]
 28761  01E090  0EFF               	movlw	-1
 28762  01E092  6AE3               	clrf	plusw1,c
 28763  01E094  D012               	goto	L30
 28764  01E096                     l10754:
 28765                           
 28766                           ;stkvar	_divisor @ sp[(-9)+-16]
 28767  01E096  90D8               	bcf	status,0,c
 28768  01E098  0EE7               	movlw	-25
 28769  01E09A  36E3               	rlcf	plusw1,f,c
 28770  01E09C  0EE8               	movlw	-24
 28771  01E09E  36E3               	rlcf	plusw1,f,c
 28772  01E0A0  0EE9               	movlw	-23
 28773  01E0A2  36E3               	rlcf	plusw1,f,c
 28774  01E0A4  0EEA               	movlw	-22
 28775  01E0A6  36E3               	rlcf	plusw1,f,c
 28776  01E0A8  0EEB               	movlw	-21
 28777  01E0AA  36E3               	rlcf	plusw1,f,c
 28778  01E0AC  0EEC               	movlw	-20
 28779  01E0AE  36E3               	rlcf	plusw1,f,c
 28780  01E0B0  0EED               	movlw	-19
 28781  01E0B2  36E3               	rlcf	plusw1,f,c
 28782  01E0B4  0EEE               	movlw	-18
 28783  01E0B6  36E3               	rlcf	plusw1,f,c
 28784                           
 28785                           ;stkvar	_counter @ sp[(-9)+8]
 28786  01E0B8  0EFF               	movlw	-1
 28787  01E0BA                     L30:
 28788  01E0BA  2AE3               	incf	plusw1,f,c
 28789                           
 28790                           ;stkvar	_divisor @ sp[(-9)+-16]
 28791  01E0BC  0EEE               	movlw	-18
 28792  01E0BE  AEE3               	btfss	plusw1,7,c
 28793  01E0C0  D7EA               	goto	l10754
 28794  01E0C2                     u9110:
 28795                           
 28796                           ;stkvar	_quotient @ sp[(-9)+0]
 28797  01E0C2  90D8               	bcf	status,0,c
 28798  01E0C4  0EF7               	movlw	-9
 28799  01E0C6  36E3               	rlcf	plusw1,f,c
 28800  01E0C8  0EF8               	movlw	-8
 28801  01E0CA  36E3               	rlcf	plusw1,f,c
 28802  01E0CC  0EF9               	movlw	-7
 28803  01E0CE  36E3               	rlcf	plusw1,f,c
 28804  01E0D0  0EFA               	movlw	-6
 28805  01E0D2  36E3               	rlcf	plusw1,f,c
 28806  01E0D4  0EFB               	movlw	-5
 28807  01E0D6  36E3               	rlcf	plusw1,f,c
 28808  01E0D8  0EFC               	movlw	-4
 28809  01E0DA  36E3               	rlcf	plusw1,f,c
 28810  01E0DC  0EFD               	movlw	-3
 28811  01E0DE  36E3               	rlcf	plusw1,f,c
 28812  01E0E0  0EFE               	movlw	-2
 28813  01E0E2  36E3               	rlcf	plusw1,f,c
 28814                           
 28815                           ;stkvar	_divisor @ sp[(-9)+-16]
 28816                           ;stkvar	_dividend @ sp[(-9)+-8]
 28817  01E0E4  50E1               	movf	fsr1l,w,c
 28818  01E0E6  0FEF               	addlw	-17
 28819  01E0E8  6ED9               	movwf	fsr2l,c
 28820  01E0EA  50E2               	movf	fsr1h,w,c
 28821  01E0EC  6EDA               	movwf	fsr2h,c
 28822  01E0EE  0EFF               	movlw	255
 28823  01E0F0  22DA               	addwfc	fsr2h,f,c
 28824  01E0F2  0EE7               	movlw	-25
 28825  01E0F4  50E3               	movf	plusw1,w,c
 28826  01E0F6  5CDE               	subwf	postinc2,w,c
 28827  01E0F8  0EE8               	movlw	-24
 28828  01E0FA  50E3               	movf	plusw1,w,c
 28829  01E0FC  58DE               	subwfb	postinc2,w,c
 28830  01E0FE  0EE9               	movlw	-23
 28831  01E100  50E3               	movf	plusw1,w,c
 28832  01E102  58DE               	subwfb	postinc2,w,c
 28833  01E104  0EEA               	movlw	-22
 28834  01E106  50E3               	movf	plusw1,w,c
 28835  01E108  58DE               	subwfb	postinc2,w,c
 28836  01E10A  0EEB               	movlw	-21
 28837  01E10C  50E3               	movf	plusw1,w,c
 28838  01E10E  58DE               	subwfb	postinc2,w,c
 28839  01E110  0EEC               	movlw	-20
 28840  01E112  50E3               	movf	plusw1,w,c
 28841  01E114  58DE               	subwfb	postinc2,w,c
 28842  01E116  0EED               	movlw	-19
 28843  01E118  50E3               	movf	plusw1,w,c
 28844  01E11A  58DE               	subwfb	postinc2,w,c
 28845  01E11C  0EEE               	movlw	-18
 28846  01E11E  50E3               	movf	plusw1,w,c
 28847  01E120  58DE               	subwfb	postinc2,w,c
 28848  01E122  A0D8               	btfss	status,0,c
 28849  01E124  D021               	goto	l10766
 28850                           
 28851                           ;stkvar	_divisor @ sp[(-9)+-16]
 28852                           ;stkvar	_dividend @ sp[(-9)+-8]
 28853  01E126  50E1               	movf	fsr1l,w,c
 28854  01E128  0FEF               	addlw	-17
 28855  01E12A  6ED9               	movwf	fsr2l,c
 28856  01E12C  50E2               	movf	fsr1h,w,c
 28857  01E12E  6EDA               	movwf	fsr2h,c
 28858  01E130  0EFF               	movlw	255
 28859  01E132  22DA               	addwfc	fsr2h,f,c
 28860  01E134  0EE7               	movlw	-25
 28861  01E136  50E3               	movf	plusw1,w,c
 28862  01E138  5EDE               	subwf	postinc2,f,c
 28863  01E13A  0EE8               	movlw	-24
 28864  01E13C  50E3               	movf	plusw1,w,c
 28865  01E13E  5ADE               	subwfb	postinc2,f,c
 28866  01E140  0EE9               	movlw	-23
 28867  01E142  50E3               	movf	plusw1,w,c
 28868  01E144  5ADE               	subwfb	postinc2,f,c
 28869  01E146  0EEA               	movlw	-22
 28870  01E148  50E3               	movf	plusw1,w,c
 28871  01E14A  5ADE               	subwfb	postinc2,f,c
 28872  01E14C  0EEB               	movlw	-21
 28873  01E14E  50E3               	movf	plusw1,w,c
 28874  01E150  5ADE               	subwfb	postinc2,f,c
 28875  01E152  0EEC               	movlw	-20
 28876  01E154  50E3               	movf	plusw1,w,c
 28877  01E156  5ADE               	subwfb	postinc2,f,c
 28878  01E158  0EED               	movlw	-19
 28879  01E15A  50E3               	movf	plusw1,w,c
 28880  01E15C  5ADE               	subwfb	postinc2,f,c
 28881  01E15E  0EEE               	movlw	-18
 28882  01E160  50E3               	movf	plusw1,w,c
 28883  01E162  5ADE               	subwfb	postinc2,f,c
 28884                           
 28885                           ;stkvar	_quotient @ sp[(-9)+0]
 28886  01E164  0EF7               	movlw	-9
 28887  01E166  80E3               	bsf	plusw1,0,c
 28888  01E168                     l10766:
 28889                           
 28890                           ;stkvar	_divisor @ sp[(-9)+-16]
 28891  01E168  90D8               	bcf	status,0,c
 28892  01E16A  0EEE               	movlw	-18
 28893  01E16C  32E3               	rrcf	plusw1,f,c
 28894  01E16E  0EED               	movlw	-19
 28895  01E170  32E3               	rrcf	plusw1,f,c
 28896  01E172  0EEC               	movlw	-20
 28897  01E174  32E3               	rrcf	plusw1,f,c
 28898  01E176  0EEB               	movlw	-21
 28899  01E178  32E3               	rrcf	plusw1,f,c
 28900  01E17A  0EEA               	movlw	-22
 28901  01E17C  32E3               	rrcf	plusw1,f,c
 28902  01E17E  0EE9               	movlw	-23
 28903  01E180  32E3               	rrcf	plusw1,f,c
 28904  01E182  0EE8               	movlw	-24
 28905  01E184  32E3               	rrcf	plusw1,f,c
 28906  01E186  0EE7               	movlw	-25
 28907  01E188  32E3               	rrcf	plusw1,f,c
 28908                           
 28909                           ;stkvar	_counter @ sp[(-9)+8]
 28910  01E18A  0EFF               	movlw	-1
 28911  01E18C  50E3               	movf	plusw1,w,c
 28912  01E18E  6E2A               	movwf	btemp^0,c
 28913  01E190  0E01               	movlw	1
 28914  01E192  5E2A               	subwf	btemp^0,f,c
 28915  01E194  0EFF               	movlw	-1
 28916  01E196  0060  F0AB  FFE3   	movff	btemp,plusw1
 28917  01E19C  A4D8               	btfss	status,2,c
 28918  01E19E  D791               	goto	u9110
 28919  01E1A0                     u9130:
 28920                           
 28921                           ;stkvar	_quotient @ sp[(-9)+0]
 28922  01E1A0  0EF7               	movlw	247
 28923  01E1A2  24E1               	addwf	fsr1l,w,c
 28924  01E1A4  6ED9               	movwf	fsr2l,c
 28925  01E1A6  0EFF               	movlw	255
 28926  01E1A8  20E2               	addwfc	fsr1h,w,c
 28927  01E1AA  6EDA               	movwf	fsr2h,c
 28928                           
 28929                           ;stkvar	?___lodiv @ sp[(-9)+-8]
 28930  01E1AC  0E08               	movlw	8
 28931  01E1AE  6E2A               	movwf	btemp^0,c
 28932  01E1B0  0EEF               	movlw	-17
 28933  01E1B2                     us914999:
 28934  01E1B2  006F FF7B FFE3     	movff	postinc2,plusw1
 28935  01E1B8  28E8               	incf	wreg,w,c
 28936  01E1BA  2E2A               	decfsz	btemp^0,f,c
 28937  01E1BC  D7FA               	bra	us914999
 28938                           
 28939                           ; ___lodiv: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 28940  01E1BE  0EF7               	movlw	247
 28941  01E1C0  26E1               	addwf	fsr1l,f,c
 28942  01E1C2  0EFF               	movlw	255
 28943  01E1C4  22E2               	addwfc	fsr1h,f,c
 28944  01E1C6  0012               	return		;funcret
 28945  01E1C8                     __end_of___lodiv:
 28946                           	opt callstack 0
 28947                           
 28948 ;; *************** function _strncmp *****************
 28949 ;; Defined at:
 28950 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strncmp.c"
 28951 ;; Parameters:    Size  Location     Type
 28952 ;;  _l              2  [STACK] PTR const unsigned char 
 28953 ;;		 -> ct(3), STR_90(127), STR_88(3), STR_87(3), 
 28954 ;;		 -> STR_86(21), STR_85(21), STR_84(21), STR_83(21), 
 28955 ;;		 -> STR_82(21), STR_81(21), STR_80(26), STR_79(15), 
 28956 ;;		 -> STR_78(15), STR_77(15), STR_76(15), STR_75(10), 
 28957 ;;		 -> STR_74(10), STR_73(19), STR_72(19), STR_69(3), 
 28958 ;;		 -> STR_68(14), STR_67(28), STR_66(28), STR_65(28), 
 28959 ;;		 -> STR_64(22), STR_63(22), STR_62(22), STR_61(22), 
 28960 ;;		 -> STR_60(22), STR_59(22), STR_58(22), STR_57(22), 
 28961 ;;		 -> STR_56(22), STR_55(21), STR_54(22), STR_53(22), 
 28962 ;;		 -> STR_52(22), STR_51(22), STR_50(22), STR_49(22), 
 28963 ;;		 -> STR_48(24), STR_47(24), STR_46(24), STR_45(30), 
 28964 ;;		 -> STR_44(24), STR_43(24), STR_42(23), STR_41(23), 
 28965 ;;		 -> STR_40(23), STR_39(23), STR_38(23), STR_37(23), 
 28966 ;;		 -> STR_36(23), STR_35(23), STR_34(23), STR_33(23), 
 28967 ;;		 -> STR_32(23), STR_31(23), STR_30(18), STR_29(17), 
 28968 ;;		 -> STR_28(17), STR_27(22), STR_26(22), STR_25(22), 
 28969 ;;		 -> STR_24(14), STR_23(27), STR_22(27), STR_21(23), 
 28970 ;;		 -> STR_20(22), STR_19(22), STR_18(22), STR_17(22), 
 28971 ;;		 -> STR_16(23), STR_15(23), STR_14(23), STR_13(26), 
 28972 ;;		 -> STR_12(22), STR_11(21), STR_10(21), STR_9(21), 
 28973 ;;		 -> STR_8(21), STR_7(21), STR_6(21), STR_5(21), 
 28974 ;;		 -> STR_4(21), STR_2(21), STR_1(21), 
 28975 ;;  _r              2  [STACK] PTR const unsigned char 
 28976 ;;		 -> STR_124(3), STR_120(3), STR_115(3), STR_110(3), 
 28977 ;;		 -> STR_105(3), STR_101(3), 
 28978 ;;  n               2  [STACK] unsigned int 
 28979 ;; Auto vars:     Size  Location     Type
 28980 ;;  r               2  [STACK] PTR const unsigned char 
 28981 ;;		 -> STR_124(3), STR_120(3), STR_115(3), STR_110(3), 
 28982 ;;		 -> STR_105(3), STR_101(3), 
 28983 ;;  l               2  [STACK] PTR const unsigned char 
 28984 ;;		 -> ct(3), STR_90(127), STR_88(3), STR_87(3), 
 28985 ;;		 -> STR_86(21), STR_85(21), STR_84(21), STR_83(21), 
 28986 ;;		 -> STR_82(21), STR_81(21), STR_80(26), STR_79(15), 
 28987 ;;		 -> STR_78(15), STR_77(15), STR_76(15), STR_75(10), 
 28988 ;;		 -> STR_74(10), STR_73(19), STR_72(19), STR_69(3), 
 28989 ;;		 -> STR_68(14), STR_67(28), STR_66(28), STR_65(28), 
 28990 ;;		 -> STR_64(22), STR_63(22), STR_62(22), STR_61(22), 
 28991 ;;		 -> STR_60(22), STR_59(22), STR_58(22), STR_57(22), 
 28992 ;;		 -> STR_56(22), STR_55(21), STR_54(22), STR_53(22), 
 28993 ;;		 -> STR_52(22), STR_51(22), STR_50(22), STR_49(22), 
 28994 ;;		 -> STR_48(24), STR_47(24), STR_46(24), STR_45(30), 
 28995 ;;		 -> STR_44(24), STR_43(24), STR_42(23), STR_41(23), 
 28996 ;;		 -> STR_40(23), STR_39(23), STR_38(23), STR_37(23), 
 28997 ;;		 -> STR_36(23), STR_35(23), STR_34(23), STR_33(23), 
 28998 ;;		 -> STR_32(23), STR_31(23), STR_30(18), STR_29(17), 
 28999 ;;		 -> STR_28(17), STR_27(22), STR_26(22), STR_25(22), 
 29000 ;;		 -> STR_24(14), STR_23(27), STR_22(27), STR_21(23), 
 29001 ;;		 -> STR_20(22), STR_19(22), STR_18(22), STR_17(22), 
 29002 ;;		 -> STR_16(23), STR_15(23), STR_14(23), STR_13(26), 
 29003 ;;		 -> STR_12(22), STR_11(21), STR_10(21), STR_9(21), 
 29004 ;;		 -> STR_8(21), STR_7(21), STR_6(21), STR_5(21), 
 29005 ;;		 -> STR_4(21), STR_2(21), STR_1(21), 
 29006 ;; Return value:  Size  Location     Type
 29007 ;;                  2  [STACK] int 
 29008 ;; Registers used:
 29009 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tbl
      +ptrh, tblptru, prodl
 29010 ;; Tracked objects:
 29011 ;;		On entry : 0/0
 29012 ;;		On exit  : 0/0
 29013 ;;		Unchanged: 0/0
 29014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29015 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29016 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29017 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29018 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29019 ;;Total ram usage:        0 bytes
 29020 ;; Hardware stack levels used:    1
 29021 ;; Hardware stack levels required when called:   15
 29022 ;; This function calls:
 29023 ;;		Nothing
 29024 ;; This function is called by:
 29025 ;;		_vfpfcnvrt
 29026 ;; This function uses a reentrant model
 29027 ;;
 29028                           
 29029                           	psect	text101
 29030  01CC90                     __ptext101:
 29031                           	opt callstack 0
 29032  01CC90                     _strncmp:
 29033                           	opt callstack 0
 29034                           
 29035                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29036  01CC90  52E6               	movf	postinc1,f,c
 29037  01CC92  52E6               	movf	postinc1,f,c
 29038  01CC94  52E6               	movf	postinc1,f,c
 29039  01CC96  52E6               	movf	postinc1,f,c
 29040                           
 29041                           ;stkvar	__l @ sp[(-4)+-2]
 29042                           
 29043                           ;incstack = 0
 29044 ;; hardware stack exceeded
 29045  01CC98  0EFA               	movlw	-6
 29046  01CC9A  006F FF8C  F034    	movff	plusw1,btemp+10
 29047  01CCA0  0EFB               	movlw	-5
 29048  01CCA2  006F FF8C  F035    	movff	plusw1,btemp+11
 29049                           
 29050                           ;stkvar	_l @ sp[(-4)+2]
 29051  01CCA8  0EFF               	movlw	-1
 29052  01CCAA  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 29053  01CCB0  0EFE               	movlw	-2
 29054  01CCB2  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 29055                           
 29056                           ;stkvar	__r @ sp[(-4)+-4]
 29057  01CCB8  0EF8               	movlw	-8
 29058  01CCBA  006F FF8C  F034    	movff	plusw1,btemp+10
 29059  01CCC0  0EF9               	movlw	-7
 29060  01CCC2  006F FF8C  F035    	movff	plusw1,btemp+11
 29061                           
 29062                           ;stkvar	_r @ sp[(-4)+0]
 29063  01CCC8  0EFD               	movlw	-3
 29064  01CCCA  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 29065  01CCD0  0EFC               	movlw	-4
 29066  01CCD2  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 29067                           
 29068                           ;stkvar	_n @ sp[(-4)+-6]
 29069  01CCD8  0EF6               	movlw	-10
 29070  01CCDA  006F FF8C  F02A    	movff	plusw1,btemp
 29071  01CCE0  0E01               	movlw	1
 29072  01CCE2  5E2A               	subwf	btemp^0,f,c
 29073  01CCE4  0EF6               	movlw	-10
 29074  01CCE6  0060  F0AB  FFE3   	movff	btemp,plusw1
 29075  01CCEC  0EF7               	movlw	-9
 29076  01CCEE  006F FF8C  F02A    	movff	plusw1,btemp
 29077  01CCF4  0E00               	movlw	0
 29078  01CCF6  5A2A               	subwfb	btemp^0,f,c
 29079  01CCF8  0EF7               	movlw	-9
 29080  01CCFA  0060  F0AB  FFE3   	movff	btemp,plusw1
 29081  01CD00  0EF6               	movlw	-10
 29082  01CD02  28E3               	incf	plusw1,w,c
 29083  01CD04  E13F               	bnz	l11464
 29084  01CD06  0EF7               	movlw	-9
 29085  01CD08  28E3               	incf	plusw1,w,c
 29086  01CD0A  A4D8               	btfss	status,2,c
 29087  01CD0C  D03B               	goto	l11464
 29088  01CD0E  0E00               	movlw	0
 29089  01CD10  6E2A               	movwf	btemp^0,c
 29090  01CD12  0E00               	movlw	0
 29091  01CD14  6E2B               	movwf	(btemp+1)^0,c
 29092  01CD16  D0C7               	goto	l3808
 29093  01CD18                     l11462:
 29094                           
 29095                           ;stkvar	_l @ sp[(-4)+2]
 29096  01CD18  0EFE               	movlw	-2
 29097  01CD1A  50E3               	movf	plusw1,w,c
 29098  01CD1C  0F01               	addlw	1
 29099  01CD1E  6E2A               	movwf	btemp^0,c
 29100  01CD20  0EFE               	movlw	-2
 29101  01CD22  0060  F0AB  FFE3   	movff	btemp,plusw1
 29102  01CD28  6A2A               	clrf	btemp^0,c
 29103  01CD2A  0EFF               	movlw	-1
 29104  01CD2C  50E3               	movf	plusw1,w,c
 29105  01CD2E  202A               	addwfc	btemp^0,w,c
 29106  01CD30  6E2A               	movwf	btemp^0,c
 29107  01CD32  0EFF               	movlw	-1
 29108  01CD34  0060  F0AB  FFE3   	movff	btemp,plusw1
 29109                           
 29110                           ;stkvar	_r @ sp[(-4)+0]
 29111  01CD3A  0EFC               	movlw	-4
 29112  01CD3C  50E3               	movf	plusw1,w,c
 29113  01CD3E  0F01               	addlw	1
 29114  01CD40  6E2A               	movwf	btemp^0,c
 29115  01CD42  0EFC               	movlw	-4
 29116  01CD44  0060  F0AB  FFE3   	movff	btemp,plusw1
 29117  01CD4A  6A2A               	clrf	btemp^0,c
 29118  01CD4C  0EFD               	movlw	-3
 29119  01CD4E  50E3               	movf	plusw1,w,c
 29120  01CD50  202A               	addwfc	btemp^0,w,c
 29121  01CD52  6E2A               	movwf	btemp^0,c
 29122  01CD54  0EFD               	movlw	-3
 29123  01CD56  0060  F0AB  FFE3   	movff	btemp,plusw1
 29124                           
 29125                           ;stkvar	_n @ sp[(-4)+-6]
 29126  01CD5C  0EF6               	movlw	-10
 29127  01CD5E  006F FF8C  F02A    	movff	plusw1,btemp
 29128  01CD64  0E01               	movlw	1
 29129  01CD66  5E2A               	subwf	btemp^0,f,c
 29130  01CD68  0EF6               	movlw	-10
 29131  01CD6A  0060  F0AB  FFE3   	movff	btemp,plusw1
 29132  01CD70  0EF7               	movlw	-9
 29133  01CD72  006F FF8C  F02A    	movff	plusw1,btemp
 29134  01CD78  0E00               	movlw	0
 29135  01CD7A  5A2A               	subwfb	btemp^0,f,c
 29136  01CD7C  0EF7               	movlw	-9
 29137  01CD7E  0060  F0AB  FFE3   	movff	btemp,plusw1
 29138  01CD84                     l11464:
 29139                           
 29140                           ;stkvar	_l @ sp[(-4)+2]
 29141  01CD84  0EFE               	movlw	-2
 29142  01CD86  006F FF8F FFF6     	movff	plusw1,tblptrl
 29143  01CD8C  0EFF               	movlw	-1
 29144  01CD8E  006F FF8F FFF7     	movff	plusw1,tblptrh
 29145  01CD94  0E00               	movlw	low (__mediumconst shr (0+16))
 29146  01CD96  6EF8               	movwf	tblptru,c
 29147  01CD98  0E1F               	movlw	(high __ramtop+-1)
 29148  01CD9A  64F7               	cpfsgt	tblptrh,c
 29149  01CD9C  D003               	bra	u10437
 29150  01CD9E  0008               	tblrd		*
 29151  01CDA0  50F5               	movf	tablat,w,c
 29152  01CDA2  D007               	bra	u10430
 29153  01CDA4                     u10437:
 29154  01CDA4  006F FFDB FFE9     	movff	tblptrl,fsr0l
 29155  01CDAA  006F FFDF FFEA     	movff	tblptrh,fsr0h
 29156  01CDB0  50EF               	movf	indf0,w,c
 29157  01CDB2                     u10430:
 29158  01CDB2  0900               	iorlw	0
 29159  01CDB4  B4D8               	btfsc	status,2,c
 29160  01CDB6  D04A               	goto	u10470
 29161                           
 29162                           ;stkvar	_r @ sp[(-4)+0]
 29163  01CDB8  50E1               	movf	fsr1l,w,c
 29164  01CDBA  0FFC               	addlw	-4
 29165  01CDBC  6ED9               	movwf	fsr2l,c
 29166  01CDBE  50E2               	movf	fsr1h,w,c
 29167  01CDC0  6EDA               	movwf	fsr2h,c
 29168  01CDC2  0EFF               	movlw	255
 29169  01CDC4  22DA               	addwfc	fsr2h,f,c
 29170  01CDC6  006F FF7B FFF6     	movff	postinc2,tblptrl
 29171  01CDCC  006F FF77 FFF7     	movff	postdec2,tblptrh
 29172  01CDD2                     	if	0	;tblptru may be non-zero
 29173  01CDD2                     	endif
 29174  01CDD2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 29175  01CDD2  0E00               	movlw	low (__mediumconst shr (0+16))
 29176  01CDD4  6EF8               	movwf	tblptru,c
 29177  01CDD6                     	endif
 29178  01CDD6  0008               	tblrd		*
 29179  01CDD8  50F5               	movf	tablat,w,c
 29180  01CDDA  0900               	iorlw	0
 29181  01CDDC  B4D8               	btfsc	status,2,c
 29182  01CDDE  D036               	goto	u10470
 29183                           
 29184                           ;stkvar	_n @ sp[(-4)+-6]
 29185  01CDE0  0EF6               	movlw	-10
 29186  01CDE2  006F FF8C  F02A    	movff	plusw1,btemp
 29187  01CDE8  0EF7               	movlw	-9
 29188  01CDEA  50E3               	movf	plusw1,w,c
 29189  01CDEC  102A               	iorwf	btemp^0,w,c
 29190  01CDEE  B4D8               	btfsc	status,2,c
 29191  01CDF0  D02D               	goto	u10470
 29192                           
 29193                           ;stkvar	_r @ sp[(-4)+0]
 29194  01CDF2  50E1               	movf	fsr1l,w,c
 29195  01CDF4  0FFC               	addlw	-4
 29196  01CDF6  6ED9               	movwf	fsr2l,c
 29197  01CDF8  50E2               	movf	fsr1h,w,c
 29198  01CDFA  6EDA               	movwf	fsr2h,c
 29199  01CDFC  0EFF               	movlw	255
 29200  01CDFE  22DA               	addwfc	fsr2h,f,c
 29201  01CE00  006F FF7B FFF6     	movff	postinc2,tblptrl
 29202  01CE06  006F FF77 FFF7     	movff	postdec2,tblptrh
 29203  01CE0C                     	if	0	;tblptru may be non-zero
 29204  01CE0C                     	endif
 29205  01CE0C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 29206  01CE0C  0E00               	movlw	low (__mediumconst shr (0+16))
 29207  01CE0E  6EF8               	movwf	tblptru,c
 29208  01CE10                     	endif
 29209  01CE10  0008               	tblrd		*
 29210  01CE12  006F FFD4  F035    	movff	tablat,btemp+11
 29211                           
 29212                           ;stkvar	_l @ sp[(-4)+2]
 29213  01CE18  0EFE               	movlw	-2
 29214  01CE1A  006F FF8F FFF6     	movff	plusw1,tblptrl
 29215  01CE20  0EFF               	movlw	-1
 29216  01CE22  006F FF8F FFF7     	movff	plusw1,tblptrh
 29217  01CE28  0E00               	movlw	low (__mediumconst shr (0+16))
 29218  01CE2A  6EF8               	movwf	tblptru,c
 29219  01CE2C  0E1F               	movlw	(high __ramtop+-1)
 29220  01CE2E  64F7               	cpfsgt	tblptrh,c
 29221  01CE30  D003               	bra	u10477
 29222  01CE32  0008               	tblrd		*
 29223  01CE34  50F5               	movf	tablat,w,c
 29224  01CE36  D007               	bra	u10475
 29225  01CE38                     u10477:
 29226  01CE38  006F FFDB FFE9     	movff	tblptrl,fsr0l
 29227  01CE3E  006F FFDF FFEA     	movff	tblptrh,fsr0h
 29228  01CE44  50EF               	movf	indf0,w,c
 29229  01CE46                     u10475:
 29230  01CE46  1835               	xorwf	(btemp+11)^0,w,c
 29231  01CE48  B4D8               	btfsc	status,2,c
 29232  01CE4A  D766               	goto	l11462
 29233  01CE4C                     u10470:
 29234                           
 29235                           ;stkvar	_l @ sp[(-4)+2]
 29236  01CE4C  0EFE               	movlw	-2
 29237  01CE4E  006F FF8F FFF6     	movff	plusw1,tblptrl
 29238  01CE54  0EFF               	movlw	-1
 29239  01CE56  006F FF8F FFF7     	movff	plusw1,tblptrh
 29240  01CE5C  0E00               	movlw	low (__mediumconst shr (0+16))
 29241  01CE5E  6EF8               	movwf	tblptru,c
 29242  01CE60  0E1F               	movlw	(high __ramtop+-1)
 29243  01CE62  64F7               	cpfsgt	tblptrh,c
 29244  01CE64  D003               	bra	u10487
 29245  01CE66  0008               	tblrd		*
 29246  01CE68  50F5               	movf	tablat,w,c
 29247  01CE6A  D007               	bra	u10480
 29248  01CE6C                     u10487:
 29249  01CE6C  006F FFDB FFE9     	movff	tblptrl,fsr0l
 29250  01CE72  006F FFDF FFEA     	movff	tblptrh,fsr0h
 29251  01CE78  50EF               	movf	indf0,w,c
 29252  01CE7A                     u10480:
 29253  01CE7A  6E2A               	movwf	btemp^0,c
 29254  01CE7C  6A2B               	clrf	(btemp+1)^0,c
 29255                           
 29256                           ;stkvar	_r @ sp[(-4)+0]
 29257  01CE7E  50E1               	movf	fsr1l,w,c
 29258  01CE80  0FFC               	addlw	-4
 29259  01CE82  6ED9               	movwf	fsr2l,c
 29260  01CE84  50E2               	movf	fsr1h,w,c
 29261  01CE86  6EDA               	movwf	fsr2h,c
 29262  01CE88  0EFF               	movlw	255
 29263  01CE8A  22DA               	addwfc	fsr2h,f,c
 29264  01CE8C  006F FF7B FFF6     	movff	postinc2,tblptrl
 29265  01CE92  006F FF77 FFF7     	movff	postdec2,tblptrh
 29266  01CE98                     	if	0	;tblptru may be non-zero
 29267  01CE98                     	endif
 29268  01CE98                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 29269  01CE98  0E00               	movlw	low (__mediumconst shr (0+16))
 29270  01CE9A  6EF8               	movwf	tblptru,c
 29271  01CE9C                     	endif
 29272  01CE9C  0008               	tblrd		*
 29273  01CE9E  50F5               	movf	tablat,w,c
 29274  01CEA0  5E2A               	subwf	btemp^0,f,c
 29275  01CEA2  0E00               	movlw	0
 29276  01CEA4  5A2B               	subwfb	(btemp+1)^0,f,c
 29277  01CEA6                     l3808:
 29278                           
 29279                           ; _strncmp: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsi
      +                          ze = 6, vargsize = 0
 29280  01CEA6  0EF6               	movlw	246
 29281  01CEA8  26E1               	addwf	fsr1l,f,c
 29282  01CEAA  0EFF               	movlw	255
 29283  01CEAC  22E2               	addwfc	fsr1h,f,c
 29284  01CEAE  0012               	return		;funcret
 29285  01CEB0                     __end_of_strncmp:
 29286                           	opt callstack 0
 29287                           
 29288 ;; *************** function _stoa *****************
 29289 ;; Defined at:
 29290 ;;		line 546 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 29291 ;; Parameters:    Size  Location     Type
 29292 ;;  fp              2  [STACK] PTR struct _IO_FILE
 29293 ;;		 -> f(6), NULL(0), 
 29294 ;;  s               2  [STACK] PTR unsigned char 
 29295 ;;		 -> ?_printf(2), ?_sprintf(2), asctime@buf(27), STR_71(9), 
 29296 ;;		 -> STR_70(12), D.lcd(640), D(642), T(176), 
 29297 ;;		 -> STR_3(5), V(181), 
 29298 ;; Auto vars:     Size  Location     Type
 29299 ;;  nuls            7  [STACK] unsigned char [7]
 29300 ;;  l               2  [STACK] int 
 29301 ;;  p               2  [STACK] int 
 29302 ;;  cp              2  [STACK] PTR unsigned char 
 29303 ;;		 -> ?_printf(2), ?_sprintf(2), asctime@buf(27), nuls(7), 
 29304 ;;		 -> STR_71(9), STR_70(12), D.lcd(640), D(642), 
 29305 ;;		 -> T(176), STR_3(5), V(181), 
 29306 ;;  w               2  [STACK] int 
 29307 ;;  i               2  [STACK] int 
 29308 ;; Return value:  Size  Location     Type
 29309 ;;                  2  [STACK] int 
 29310 ;; Registers used:
 29311 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 29312 ;; Tracked objects:
 29313 ;;		On entry : 0/0
 29314 ;;		On exit  : 0/0
 29315 ;;		Unchanged: 0/0
 29316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29317 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29318 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29320 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29321 ;;Total ram usage:        0 bytes
 29322 ;; Hardware stack levels used:    1
 29323 ;; Hardware stack levels required when called:   18
 29324 ;; This function calls:
 29325 ;;		_fputc
 29326 ;;		_strlen
 29327 ;; This function is called by:
 29328 ;;		_vfpfcnvrt
 29329 ;; This function uses a reentrant model
 29330 ;;
 29331                           
 29332                           	psect	text102
 29333  01B48A                     __ptext102:
 29334                           	opt callstack 0
 29335  01B48A                     _stoa:
 29336                           	opt callstack 0
 29337                           
 29338                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 29339  01B48A  0E11               	movlw	17
 29340  01B48C  26E1               	addwf	fsr1l,f,c
 29341  01B48E  0E00               	movlw	0
 29342  01B490  22E2               	addwfc	fsr1h,f,c
 29343                           
 29344                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
 29345                           
 29346                           ;incstack = 0
 29347 ;; hardware stack exceeded
 29348  01B492  EE20  F200         	lfsr	2,stoa@F1166
 29349                           
 29350                           ;stkvar	_nuls @ sp[(-17)+0]
 29351  01B496  0E07               	movlw	7
 29352  01B498  6E2A               	movwf	btemp^0,c
 29353  01B49A  0EEF               	movlw	-17
 29354  01B49C                     us1517999:
 29355  01B49C  006F FF7B FFE3     	movff	postinc2,plusw1
 29356  01B4A2  28E8               	incf	wreg,w,c
 29357  01B4A4  2E2A               	decfsz	btemp^0,f,c
 29358  01B4A6  D7FA               	bra	us1517999
 29359                           
 29360                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 552:     cp = s;
 29361                           ;stkvar	_s @ sp[(-17)+-4]
 29362  01B4A8  0EEB               	movlw	-21
 29363  01B4AA  006F FF8C  F034    	movff	plusw1,btemp+10
 29364  01B4B0  0EEC               	movlw	-20
 29365  01B4B2  006F FF8C  F035    	movff	plusw1,btemp+11
 29366                           
 29367                           ;stkvar	_cp @ sp[(-17)+11]
 29368  01B4B8  0EFB               	movlw	-5
 29369  01B4BA  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 29370  01B4C0  0EFA               	movlw	-6
 29371  01B4C2  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 29372                           
 29373                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
 29374                           ;stkvar	_cp @ sp[(-17)+11]
 29375  01B4C8  0EFA               	movlw	-6
 29376  01B4CA  006F FF8C  F02A    	movff	plusw1,btemp
 29377  01B4D0  0EFB               	movlw	-5
 29378  01B4D2  50E3               	movf	plusw1,w,c
 29379  01B4D4  102A               	iorwf	btemp^0,w,c
 29380  01B4D6  A4D8               	btfss	status,2,c
 29381  01B4D8  D00E               	goto	l15870
 29382                           
 29383                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
 29384                           ;stkvar	_nuls @ sp[(-17)+0]
 29385  01B4DA  0EEF               	movlw	239
 29386  01B4DC  24E1               	addwf	fsr1l,w,c
 29387  01B4DE  6E34               	movwf	(btemp+10)^0,c
 29388  01B4E0  0EFF               	movlw	255
 29389  01B4E2  20E2               	addwfc	fsr1h,w,c
 29390  01B4E4  6E35               	movwf	(btemp+11)^0,c
 29391                           
 29392                           ;stkvar	_cp @ sp[(-17)+11]
 29393  01B4E6  0EFB               	movlw	-5
 29394  01B4E8  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 29395  01B4EE  0EFA               	movlw	-6
 29396  01B4F0  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 29397  01B4F6                     l15870:
 29398                           
 29399                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
 29400                           ;stkvar	_cp @ sp[(-17)+11]
 29401  01B4F6  0EFA               	movlw	-6
 29402  01B4F8  006F FF8F FFE6     	movff	plusw1,postinc1
 29403  01B4FE  006F FF8F FFE6     	movff	plusw1,postinc1
 29404  01B504  EC3D  F004         	call	_strlen	;wreg free
 29405                           
 29406                           ;stkvar	_l @ sp[(-17)+7]
 29407  01B508  0EF6               	movlw	-10
 29408  01B50A  0060  F0AB  FFE3   	movff	btemp,plusw1
 29409  01B510  0EF7               	movlw	-9
 29410  01B512  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 29411                           
 29412                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 559:     p = prec;
 29413                           ;stkvar	_p @ sp[(-17)+9]
 29414  01B518  0EF8               	movlw	-8
 29415  01B51A  0060  F133  FFE3   	movff	_prec,plusw1
 29416  01B520  0EF9               	movlw	-7
 29417  01B522  0060  F137  FFE3   	movff	_prec+1,plusw1
 29418                           
 29419                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
 29420                           ;stkvar	_p @ sp[(-17)+9]
 29421  01B528  0EF9               	movlw	-7
 29422  01B52A  BEE3               	btfsc	plusw1,7,c
 29423  01B52C  D023               	goto	l2603
 29424                           
 29425                           ;stkvar	_l @ sp[(-17)+7]
 29426                           ;stkvar	_p @ sp[(-17)+9]
 29427  01B52E  50E1               	movf	fsr1l,w,c
 29428  01B530  0FF8               	addlw	-8
 29429  01B532  6ED9               	movwf	fsr2l,c
 29430  01B534  50E2               	movf	fsr1h,w,c
 29431  01B536  6EDA               	movwf	fsr2h,c
 29432  01B538  0EFF               	movlw	255
 29433  01B53A  22DA               	addwfc	fsr2h,f,c
 29434  01B53C  0EF6               	movlw	-10
 29435  01B53E  50E3               	movf	plusw1,w,c
 29436  01B540  5CDE               	subwf	postinc2,w,c
 29437  01B542  50DE               	movf	postinc2,w,c
 29438  01B544  0A80               	xorlw	128
 29439  01B546  6E2A               	movwf	btemp^0,c
 29440  01B548  0EF7               	movlw	-9
 29441  01B54A  50E3               	movf	plusw1,w,c
 29442  01B54C  0A80               	xorlw	128
 29443  01B54E  582A               	subwfb	btemp^0,w,c
 29444  01B550  B0D8               	btfsc	status,0,c
 29445  01B552  D010               	goto	l2603
 29446                           
 29447                           ;stkvar	_p @ sp[(-17)+9]
 29448                           ;stkvar	_l @ sp[(-17)+7]
 29449  01B554  0EF8               	movlw	-8
 29450  01B556  006F FF8C  F02A    	movff	plusw1,btemp
 29451  01B55C  0EF6               	movlw	-10
 29452  01B55E  0060  F0AB  FFE3   	movff	btemp,plusw1
 29453  01B564  0EF9               	movlw	-7
 29454  01B566  006F FF8C  F02A    	movff	plusw1,btemp
 29455  01B56C  0EF7               	movlw	-9
 29456  01B56E  0060  F0AB  FFE3   	movff	btemp,plusw1
 29457  01B574                     l2603:
 29458                           
 29459                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 561:     p = l;
 29460                           ;stkvar	_l @ sp[(-17)+7]
 29461                           ;stkvar	_p @ sp[(-17)+9]
 29462  01B574  0EF6               	movlw	-10
 29463  01B576  006F FF8C  F02A    	movff	plusw1,btemp
 29464  01B57C  0EF8               	movlw	-8
 29465  01B57E  0060  F0AB  FFE3   	movff	btemp,plusw1
 29466  01B584  0EF7               	movlw	-9
 29467  01B586  006F FF8C  F02A    	movff	plusw1,btemp
 29468  01B58C  0EF9               	movlw	-7
 29469  01B58E  0060  F0AB  FFE3   	movff	btemp,plusw1
 29470                           
 29471                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 562:     w = width;
 29472                           ;stkvar	_w @ sp[(-17)+13]
 29473  01B594  0EFC               	movlw	-4
 29474  01B596  0060  F12B  FFE3   	movff	_width,plusw1
 29475  01B59C  0EFD               	movlw	-3
 29476  01B59E  0060  F12F  FFE3   	movff	_width+1,plusw1
 29477                           
 29478                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
 29479  01B5A4  A04E               	btfss	_flags^0,0,c
 29480  01B5A6  D01F               	goto	l15890
 29481  01B5A8  D031               	goto	u15220
 29482  01B5AA                     l15886:
 29483                           
 29484                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
 29485                           ;stkvar	_fp @ sp[(-17)+-2]
 29486  01B5AA  0EED               	movlw	-19
 29487  01B5AC  006F FF8F FFE6     	movff	plusw1,postinc1
 29488  01B5B2  006F FF8F FFE6     	movff	plusw1,postinc1
 29489  01B5B8  0E20               	movlw	32
 29490  01B5BA  6EE6               	movwf	postinc1,c
 29491  01B5BC  0E00               	movlw	0
 29492  01B5BE  6EE6               	movwf	postinc1,c
 29493  01B5C0  ECF8  F0F8         	call	_fputc	;wreg free
 29494                           
 29495                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 568:             ++l;
 29496                           ;stkvar	_l @ sp[(-17)+7]
 29497  01B5C4  0EF6               	movlw	-10
 29498  01B5C6  50E3               	movf	plusw1,w,c
 29499  01B5C8  0F01               	addlw	1
 29500  01B5CA  6E2A               	movwf	btemp^0,c
 29501  01B5CC  0EF6               	movlw	-10
 29502  01B5CE  0060  F0AB  FFE3   	movff	btemp,plusw1
 29503  01B5D4  6A2A               	clrf	btemp^0,c
 29504  01B5D6  0EF7               	movlw	-9
 29505  01B5D8  50E3               	movf	plusw1,w,c
 29506  01B5DA  202A               	addwfc	btemp^0,w,c
 29507  01B5DC  6E2A               	movwf	btemp^0,c
 29508  01B5DE  0EF7               	movlw	-9
 29509  01B5E0  0060  F0AB  FFE3   	movff	btemp,plusw1
 29510  01B5E6                     l15890:
 29511                           
 29512                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
 29513                           ;stkvar	_w @ sp[(-17)+13]
 29514                           ;stkvar	_l @ sp[(-17)+7]
 29515  01B5E6  50E1               	movf	fsr1l,w,c
 29516  01B5E8  0FF6               	addlw	-10
 29517  01B5EA  6ED9               	movwf	fsr2l,c
 29518  01B5EC  50E2               	movf	fsr1h,w,c
 29519  01B5EE  6EDA               	movwf	fsr2h,c
 29520  01B5F0  0EFF               	movlw	255
 29521  01B5F2  22DA               	addwfc	fsr2h,f,c
 29522  01B5F4  0EFC               	movlw	-4
 29523  01B5F6  50E3               	movf	plusw1,w,c
 29524  01B5F8  5CDE               	subwf	postinc2,w,c
 29525  01B5FA  50DE               	movf	postinc2,w,c
 29526  01B5FC  0A80               	xorlw	128
 29527  01B5FE  6E2A               	movwf	btemp^0,c
 29528  01B600  0EFD               	movlw	-3
 29529  01B602  50E3               	movf	plusw1,w,c
 29530  01B604  0A80               	xorlw	128
 29531  01B606  582A               	subwfb	btemp^0,w,c
 29532  01B608  A0D8               	btfss	status,0,c
 29533  01B60A  D7CF               	goto	l15886
 29534  01B60C                     u15220:
 29535                           
 29536                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 573:     i = 0;
 29537                           ;stkvar	_i @ sp[(-17)+15]
 29538  01B60C  0EFE               	movlw	-2
 29539  01B60E  6AE3               	clrf	plusw1,c
 29540  01B610  0EFF               	movlw	-1
 29541  01B612  6AE3               	clrf	plusw1,c
 29542                           
 29543                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 29544  01B614  D045               	goto	l15900
 29545  01B616                     l15894:
 29546                           
 29547                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
 29548                           ;stkvar	_fp @ sp[(-17)+-2]
 29549  01B616  0EED               	movlw	-19
 29550  01B618  006F FF8F FFE6     	movff	plusw1,postinc1
 29551  01B61E  006F FF8F FFE6     	movff	plusw1,postinc1
 29552                           
 29553                           ;stkvar	_cp @ sp[(-19)+11]
 29554  01B624  0EF8               	movlw	-8
 29555  01B626  006F FF8F FFF6     	movff	plusw1,tblptrl
 29556  01B62C  0EF9               	movlw	-7
 29557  01B62E  006F FF8F FFF7     	movff	plusw1,tblptrh
 29558  01B634  0E00               	movlw	low (__mediumconst shr (0+16))
 29559  01B636  6EF8               	movwf	tblptru,c
 29560  01B638  0E1F               	movlw	(high __ramtop+-1)
 29561  01B63A  64F7               	cpfsgt	tblptrh,c
 29562  01B63C  D003               	bra	u15237
 29563  01B63E  0008               	tblrd		*
 29564  01B640  50F5               	movf	tablat,w,c
 29565  01B642  D007               	bra	u15230
 29566  01B644                     u15237:
 29567  01B644  006F FFDB FFE9     	movff	tblptrl,fsr0l
 29568  01B64A  006F FFDF FFEA     	movff	tblptrh,fsr0h
 29569  01B650  50EF               	movf	indf0,w,c
 29570  01B652                     u15230:
 29571  01B652  6EE6               	movwf	postinc1,c
 29572  01B654  0E00               	movlw	0
 29573  01B656  6EE6               	movwf	postinc1,c
 29574  01B658  ECF8  F0F8         	call	_fputc	;wreg free
 29575                           
 29576                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 576:         ++cp;
 29577                           ;stkvar	_cp @ sp[(-17)+11]
 29578  01B65C  0EFA               	movlw	-6
 29579  01B65E  50E3               	movf	plusw1,w,c
 29580  01B660  0F01               	addlw	1
 29581  01B662  6E2A               	movwf	btemp^0,c
 29582  01B664  0EFA               	movlw	-6
 29583  01B666  0060  F0AB  FFE3   	movff	btemp,plusw1
 29584  01B66C  6A2A               	clrf	btemp^0,c
 29585  01B66E  0EFB               	movlw	-5
 29586  01B670  50E3               	movf	plusw1,w,c
 29587  01B672  202A               	addwfc	btemp^0,w,c
 29588  01B674  6E2A               	movwf	btemp^0,c
 29589  01B676  0EFB               	movlw	-5
 29590  01B678  0060  F0AB  FFE3   	movff	btemp,plusw1
 29591                           
 29592                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 577:         ++i;
 29593                           ;stkvar	_i @ sp[(-17)+15]
 29594  01B67E  0EFE               	movlw	-2
 29595  01B680  50E3               	movf	plusw1,w,c
 29596  01B682  0F01               	addlw	1
 29597  01B684  6E2A               	movwf	btemp^0,c
 29598  01B686  0EFE               	movlw	-2
 29599  01B688  0060  F0AB  FFE3   	movff	btemp,plusw1
 29600  01B68E  6A2A               	clrf	btemp^0,c
 29601  01B690  0EFF               	movlw	-1
 29602  01B692  50E3               	movf	plusw1,w,c
 29603  01B694  202A               	addwfc	btemp^0,w,c
 29604  01B696  6E2A               	movwf	btemp^0,c
 29605  01B698  0EFF               	movlw	-1
 29606  01B69A  0060  F0AB  FFE3   	movff	btemp,plusw1
 29607  01B6A0                     l15900:
 29608                           
 29609                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 29610                           ;stkvar	_p @ sp[(-17)+9]
 29611                           ;stkvar	_i @ sp[(-17)+15]
 29612  01B6A0  50E1               	movf	fsr1l,w,c
 29613  01B6A2  0FFE               	addlw	-2
 29614  01B6A4  6ED9               	movwf	fsr2l,c
 29615  01B6A6  50E2               	movf	fsr1h,w,c
 29616  01B6A8  6EDA               	movwf	fsr2h,c
 29617  01B6AA  0EFF               	movlw	255
 29618  01B6AC  22DA               	addwfc	fsr2h,f,c
 29619  01B6AE  0EF8               	movlw	-8
 29620  01B6B0  50E3               	movf	plusw1,w,c
 29621  01B6B2  5CDE               	subwf	postinc2,w,c
 29622  01B6B4  50DE               	movf	postinc2,w,c
 29623  01B6B6  0A80               	xorlw	128
 29624  01B6B8  6E2A               	movwf	btemp^0,c
 29625  01B6BA  0EF9               	movlw	-7
 29626  01B6BC  50E3               	movf	plusw1,w,c
 29627  01B6BE  0A80               	xorlw	128
 29628  01B6C0  582A               	subwfb	btemp^0,w,c
 29629  01B6C2  A0D8               	btfss	status,0,c
 29630  01B6C4  D7A8               	goto	l15894
 29631                           
 29632                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
 29633  01B6C6  B04E               	btfsc	_flags^0,0,c
 29634  01B6C8  D01F               	goto	l15908
 29635  01B6CA  D031               	goto	u15260
 29636  01B6CC                     l15904:
 29637                           
 29638                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
 29639                           ;stkvar	_fp @ sp[(-17)+-2]
 29640  01B6CC  0EED               	movlw	-19
 29641  01B6CE  006F FF8F FFE6     	movff	plusw1,postinc1
 29642  01B6D4  006F FF8F FFE6     	movff	plusw1,postinc1
 29643  01B6DA  0E20               	movlw	32
 29644  01B6DC  6EE6               	movwf	postinc1,c
 29645  01B6DE  0E00               	movlw	0
 29646  01B6E0  6EE6               	movwf	postinc1,c
 29647  01B6E2  ECF8  F0F8         	call	_fputc	;wreg free
 29648                           
 29649                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 584:             ++l;
 29650                           ;stkvar	_l @ sp[(-17)+7]
 29651  01B6E6  0EF6               	movlw	-10
 29652  01B6E8  50E3               	movf	plusw1,w,c
 29653  01B6EA  0F01               	addlw	1
 29654  01B6EC  6E2A               	movwf	btemp^0,c
 29655  01B6EE  0EF6               	movlw	-10
 29656  01B6F0  0060  F0AB  FFE3   	movff	btemp,plusw1
 29657  01B6F6  6A2A               	clrf	btemp^0,c
 29658  01B6F8  0EF7               	movlw	-9
 29659  01B6FA  50E3               	movf	plusw1,w,c
 29660  01B6FC  202A               	addwfc	btemp^0,w,c
 29661  01B6FE  6E2A               	movwf	btemp^0,c
 29662  01B700  0EF7               	movlw	-9
 29663  01B702  0060  F0AB  FFE3   	movff	btemp,plusw1
 29664  01B708                     l15908:
 29665                           
 29666                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
 29667                           ;stkvar	_w @ sp[(-17)+13]
 29668                           ;stkvar	_l @ sp[(-17)+7]
 29669  01B708  50E1               	movf	fsr1l,w,c
 29670  01B70A  0FF6               	addlw	-10
 29671  01B70C  6ED9               	movwf	fsr2l,c
 29672  01B70E  50E2               	movf	fsr1h,w,c
 29673  01B710  6EDA               	movwf	fsr2h,c
 29674  01B712  0EFF               	movlw	255
 29675  01B714  22DA               	addwfc	fsr2h,f,c
 29676  01B716  0EFC               	movlw	-4
 29677  01B718  50E3               	movf	plusw1,w,c
 29678  01B71A  5CDE               	subwf	postinc2,w,c
 29679  01B71C  50DE               	movf	postinc2,w,c
 29680  01B71E  0A80               	xorlw	128
 29681  01B720  6E2A               	movwf	btemp^0,c
 29682  01B722  0EFD               	movlw	-3
 29683  01B724  50E3               	movf	plusw1,w,c
 29684  01B726  0A80               	xorlw	128
 29685  01B728  582A               	subwfb	btemp^0,w,c
 29686  01B72A  A0D8               	btfss	status,0,c
 29687  01B72C  D7CF               	goto	l15904
 29688  01B72E                     u15260:
 29689                           
 29690                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 588:     return l;
 29691                           ;stkvar	_l @ sp[(-17)+7]
 29692  01B72E  0EF6               	movlw	-10
 29693  01B730  006F FF8C  F02A    	movff	plusw1,btemp
 29694  01B736  0EF7               	movlw	-9
 29695  01B738  006F FF8C  F02B    	movff	plusw1,btemp+1
 29696                           
 29697                           ; _stoa: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 29698  01B73E  0EEB               	movlw	235
 29699  01B740  26E1               	addwf	fsr1l,f,c
 29700  01B742  0EFF               	movlw	255
 29701  01B744  22E2               	addwfc	fsr1h,f,c
 29702  01B746  0012               	return		;funcret
 29703  01B748                     __end_of_stoa:
 29704                           	opt callstack 0
 29705                           
 29706 ;; *************** function _efgtoa *****************
 29707 ;; Defined at:
 29708 ;;		line 319 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 29709 ;; Parameters:    Size  Location     Type
 29710 ;;  fp              2  [STACK] PTR struct _IO_FILE
 29711 ;;		 -> f(6), NULL(0), 
 29712 ;;  f               4  [STACK] PTR struct _IO_FILE
 29713 ;;  c               1  [STACK] unsigned char 
 29714 ;; Auto vars:     Size  Location     Type
 29715 ;;  u               4  [STACK] unsigned char 
 29716 ;;  g               4  [STACK] unsigned char 
 29717 ;;  l               4  [STACK] unsigned char 
 29718 ;;  h               4  [STACK] unsigned char 
 29719 ;;  ou              4  [STACK] unsigned char 
 29720 ;;  n               2  [STACK] int 
 29721 ;;  e               2  [STACK] int 
 29722 ;;  i               2  [STACK] int 
 29723 ;;  w               2  [STACK] int 
 29724 ;;  p               2  [STACK] int 
 29725 ;;  sign            2  [STACK] int 
 29726 ;;  d               2  [STACK] int 
 29727 ;;  ne              2  [STACK] int 
 29728 ;;  m               2  [STACK] int 
 29729 ;;  pp              2  [STACK] int 
 29730 ;;  t               2  [STACK] int 
 29731 ;;  mode            1  [STACK] unsigned char 
 29732 ;;  nmode           1  [STACK] unsigned char 
 29733 ;; Return value:  Size  Location     Type
 29734 ;;                  2  [STACK] int 
 29735 ;; Registers used:
 29736 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 29737 ;; Tracked objects:
 29738 ;;		On entry : 0/0
 29739 ;;		On exit  : 0/0
 29740 ;;		Unchanged: 0/0
 29741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29742 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29743 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29744 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29745 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29746 ;;Total ram usage:        0 bytes
 29747 ;; Hardware stack levels used:    1
 29748 ;; Hardware stack levels required when called:   20
 29749 ;; This function calls:
 29750 ;;		___awdiv
 29751 ;;		___awmod
 29752 ;;		___fladd
 29753 ;;		___fldiv
 29754 ;;		___fleq
 29755 ;;		___flge
 29756 ;;		___flmul
 29757 ;;		___flneg
 29758 ;;		___flsub
 29759 ;;		___fltol
 29760 ;;		___fpclassifyf
 29761 ;;		_floorf
 29762 ;;		_isupper
 29763 ;;		_pad
 29764 ;;		_strcpy
 29765 ;;		_tolower
 29766 ;; This function is called by:
 29767 ;;		_vfpfcnvrt
 29768 ;; This function uses a reentrant model
 29769 ;;
 29770                           
 29771                           	psect	text103
 29772  011556                     __ptext103:
 29773                           	opt callstack 0
 29774  011556                     _efgtoa:
 29775                           	opt callstack 0
 29776                           
 29777                           ; autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsize = 7 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 29778  011556  0E38               	movlw	56
 29779  011558  26E1               	addwf	fsr1l,f,c
 29780  01155A  0E00               	movlw	0
 29781  01155C  22E2               	addwfc	fsr1h,f,c
 29782                           
 29783                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 319: static int efgtoa(FILE *
      +                          fp, long double f, char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 320
      +                          : {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 321:     char mode, nmode;
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 322:     int d, e, i, m, n, n
      +                          e, p, pp, sign, t, w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 323:    
      +                           long double g, h, l, ou, u;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 3
      +                          26:     sign = 0;
 29784                           ;stkvar	_sign @ sp[(-56)+42]
 29785                           
 29786                           ;incstack = 0
 29787 ;; hardware stack exceeded
 29788  01155E  0EF2               	movlw	-14
 29789  011560  6AE3               	clrf	plusw1,c
 29790  011562  0EF3               	movlw	-13
 29791  011564  6AE3               	clrf	plusw1,c
 29792                           
 29793                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 327:     g = f;
 29794                           ;stkvar	_f @ sp[(-56)+-6]
 29795  011566  0EC2               	movlw	-62
 29796  011568  006F FF8C  F032    	movff	plusw1,btemp+8
 29797  01156E  0EC3               	movlw	-61
 29798  011570  006F FF8C  F033    	movff	plusw1,btemp+9
 29799  011576  0EC4               	movlw	-60
 29800  011578  006F FF8C  F034    	movff	plusw1,btemp+10
 29801  01157E  0EC5               	movlw	-59
 29802  011580  006F FF8C  F035    	movff	plusw1,btemp+11
 29803                           
 29804                           ;stkvar	_g @ sp[(-56)+16]
 29805  011586  0ED8               	movlw	-40
 29806  011588  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 29807  01158E  0ED9               	movlw	-39
 29808  011590  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 29809  011596  0EDA               	movlw	-38
 29810  011598  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 29811  01159E  0EDB               	movlw	-37
 29812  0115A0  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 29813                           
 29814                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 328:     if (g < 0.0) {
 29815                           ;stkvar	_g @ sp[(-56)+16]
 29816  0115A6  0EDB               	movlw	-37
 29817  0115A8  AEE3               	btfss	plusw1,7,c
 29818  0115AA  D02B               	goto	l15568
 29819                           
 29820                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 329:         sign = 1;
 29821  0115AC  0E01               	movlw	1
 29822  0115AE  6E34               	movwf	(btemp+10)^0,c
 29823  0115B0  0E00               	movlw	0
 29824  0115B2  6E35               	movwf	(btemp+11)^0,c
 29825                           
 29826                           ;stkvar	_sign @ sp[(-56)+42]
 29827  0115B4  0EF2               	movlw	-14
 29828  0115B6  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 29829  0115BC  0EF3               	movlw	-13
 29830  0115BE  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 29831                           
 29832                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 330:         g = -g;
 29833                           ;stkvar	_g @ sp[(-56)+16]
 29834  0115C4  0ED8               	movlw	-40
 29835  0115C6  006F FF8F FFE6     	movff	plusw1,postinc1
 29836  0115CC  006F FF8F FFE6     	movff	plusw1,postinc1
 29837  0115D2  006F FF8F FFE6     	movff	plusw1,postinc1
 29838  0115D8  006F FF8F FFE6     	movff	plusw1,postinc1
 29839  0115DE  EC7E  F00C         	call	___flneg	;wreg free
 29840                           
 29841                           ;stkvar	_g @ sp[(-56)+16]
 29842  0115E2  0ED8               	movlw	-40
 29843  0115E4  0060  F0AB  FFE3   	movff	btemp,plusw1
 29844  0115EA  0ED9               	movlw	-39
 29845  0115EC  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 29846  0115F2  0EDA               	movlw	-38
 29847  0115F4  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 29848  0115FA  0EDB               	movlw	-37
 29849  0115FC  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 29850  011602                     l15568:
 29851                           
 29852                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 334:     n = 0;
 29853                           ;stkvar	_n @ sp[(-56)+32]
 29854  011602  0EE8               	movlw	-24
 29855  011604  6AE3               	clrf	plusw1,c
 29856  011606  0EE9               	movlw	-23
 29857  011608  6AE3               	clrf	plusw1,c
 29858                           
 29859                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 335:     w = width;
 29860                           ;stkvar	_w @ sp[(-56)+38]
 29861  01160A  0EEE               	movlw	-18
 29862  01160C  0060  F12B  FFE3   	movff	_width,plusw1
 29863  011612  0EEF               	movlw	-17
 29864  011614  0060  F12F  FFE3   	movff	_width+1,plusw1
 29865                           
 29866                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 336:     if (sign || (flags &
      +                           (1 << 2))) {
 29867                           ;stkvar	_sign @ sp[(-56)+42]
 29868  01161A  0EF2               	movlw	-14
 29869  01161C  006F FF8C  F02A    	movff	plusw1,btemp
 29870  011622  0EF3               	movlw	-13
 29871  011624  50E3               	movf	plusw1,w,c
 29872  011626  102A               	iorwf	btemp^0,w,c
 29873  011628  A4D8               	btfss	status,2,c
 29874  01162A  D002               	goto	u14670
 29875  01162C  A44E               	btfss	_flags^0,2,c
 29876  01162E  D036               	goto	l15588
 29877  011630                     u14670:
 29878                           
 29879                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 337:         dbuf[n] = sign ?
      +                           '-' : '+';
 29880                           ;stkvar	_sign @ sp[(-56)+42]
 29881  011630  0EF2               	movlw	-14
 29882  011632  006F FF8C  F02A    	movff	plusw1,btemp
 29883  011638  0EF3               	movlw	-13
 29884  01163A  50E3               	movf	plusw1,w,c
 29885  01163C  102A               	iorwf	btemp^0,w,c
 29886  01163E  A4D8               	btfss	status,2,c
 29887  011640  D002               	goto	l15580
 29888  011642  0E2B               	movlw	43
 29889  011644  D001               	goto	L31
 29890  011646                     l15580:
 29891  011646  0E2D               	movlw	45
 29892  011648                     L31:
 29893  011648  6E34               	movwf	(btemp+10)^0,c
 29894  01164A  0E00               	movlw	0
 29895  01164C  6E35               	movwf	(btemp+11)^0,c
 29896                           
 29897                           ;stkvar	_efgtoa$6608 @ sp[(-56)+10]
 29898  01164E  0ED2               	movlw	-46
 29899  011650  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 29900  011656  0ED3               	movlw	-45
 29901  011658  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 29902                           
 29903                           ;stkvar	_efgtoa$6608 @ sp[(-56)+10]
 29904  01165E  0ED2               	movlw	-46
 29905  011660  006F FF8C  F354    	movff	plusw1,_dbuf
 29906                           
 29907                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 338:         ++n;
 29908                           ;stkvar	_n @ sp[(-56)+32]
 29909  011666  0EE8               	movlw	-24
 29910  011668  50E3               	movf	plusw1,w,c
 29911  01166A  0F01               	addlw	1
 29912  01166C  6E2A               	movwf	btemp^0,c
 29913  01166E  0EE8               	movlw	-24
 29914  011670  0060  F0AB  FFE3   	movff	btemp,plusw1
 29915  011676  6A2A               	clrf	btemp^0,c
 29916  011678  0EE9               	movlw	-23
 29917  01167A  50E3               	movf	plusw1,w,c
 29918  01167C  202A               	addwfc	btemp^0,w,c
 29919  01167E  6E2A               	movwf	btemp^0,c
 29920  011680  0EE9               	movlw	-23
 29921  011682  0060  F0AB  FFE3   	movff	btemp,plusw1
 29922                           
 29923                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 339:         --w;
 29924                           ;stkvar	_w @ sp[(-56)+38]
 29925  011688  50E1               	movf	fsr1l,w,c
 29926  01168A  0FEE               	addlw	-18
 29927  01168C  6ED9               	movwf	fsr2l,c
 29928  01168E  50E2               	movf	fsr1h,w,c
 29929  011690  6EDA               	movwf	fsr2h,c
 29930  011692  0EFF               	movlw	255
 29931  011694  22DA               	addwfc	fsr2h,f,c
 29932  011696  06DE               	decf	postinc2,f,c
 29933  011698  0E00               	movlw	0
 29934  01169A  5ADD               	subwfb	postdec2,f,c
 29935  01169C                     l15588:
 29936                           
 29937                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 344:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 29938                           ;stkvar	_g @ sp[(-56)+16]
 29939  01169C  0ED8               	movlw	-40
 29940  01169E  006F FF8F FFE6     	movff	plusw1,postinc1
 29941  0116A4  006F FF8F FFE6     	movff	plusw1,postinc1
 29942  0116AA  006F FF8F FFE6     	movff	plusw1,postinc1
 29943  0116B0  006F FF8F FFE6     	movff	plusw1,postinc1
 29944  0116B6  EC05  F0ED         	call	___fpclassifyf	;wreg free
 29945  0116BA  042A               	decf	btemp^0,w,c
 29946  0116BC  102B               	iorwf	(btemp+1)^0,w,c
 29947  0116BE  A4D8               	btfss	status,2,c
 29948  0116C0  D076               	goto	l15606
 29949  0116C2  0EBF               	movlw	191
 29950  0116C4  6E34               	movwf	(btemp+10)^0,c
 29951  0116C6  0EFF               	movlw	255
 29952  0116C8  6E35               	movwf	(btemp+11)^0,c
 29953                           
 29954                           ;stkvar	_c @ sp[(-56)+-7]
 29955  0116CA  0EC1               	movlw	-63
 29956  0116CC  50E3               	movf	plusw1,w,c
 29957  0116CE  6E32               	movwf	(btemp+8)^0,c
 29958  0116D0  6A33               	clrf	(btemp+9)^0,c
 29959  0116D2  5034               	movf	(btemp+10)^0,w,c
 29960  0116D4  2632               	addwf	(btemp+8)^0,f,c
 29961  0116D6  5035               	movf	(btemp+11)^0,w,c
 29962  0116D8  2233               	addwfc	(btemp+9)^0,f,c
 29963  0116DA  5033               	movf	(btemp+9)^0,w,c
 29964  0116DC  E106               	bnz	u14700
 29965  0116DE  0E1A               	movlw	26
 29966  0116E0  5C32               	subwf	(btemp+8)^0,w,c
 29967  0116E2  B0D8               	btfsc	status,0,c
 29968  0116E4  D002               	goto	u14700
 29969  0116E6  0E01               	movlw	1
 29970  0116E8  D001               	goto	u14710
 29971  0116EA                     u14700:
 29972  0116EA  0E00               	movlw	0
 29973  0116EC                     u14710:
 29974  0116EC  6E34               	movwf	(btemp+10)^0,c
 29975  0116EE  6A35               	clrf	(btemp+11)^0,c
 29976                           
 29977                           ;stkvar	_efgtoa$6609 @ sp[(-56)+8]
 29978  0116F0  0ED0               	movlw	-48
 29979  0116F2  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 29980  0116F8  0ED1               	movlw	-47
 29981  0116FA  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 29982                           
 29983                           ;stkvar	_efgtoa$6609 @ sp[(-56)+8]
 29984  011700  0ED0               	movlw	-48
 29985  011702  006F FF8C  F02A    	movff	plusw1,btemp
 29986  011708  0ED1               	movlw	-47
 29987  01170A  50E3               	movf	plusw1,w,c
 29988  01170C  102A               	iorwf	btemp^0,w,c
 29989  01170E  B4D8               	btfsc	status,2,c
 29990  011710  D017               	goto	l15598
 29991                           
 29992                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 345:             strcpy(&dbuf
      +                          [n], "INF");
 29993  011712  0EDA               	movlw	low STR_91
 29994  011714  6EE6               	movwf	postinc1,c
 29995  011716  0EFF               	movlw	high STR_91
 29996  011718  6EE6               	movwf	postinc1,c
 29997                           
 29998                           ;stkvar	_n @ sp[(-58)+32]
 29999  01171A  0E54               	movlw	low _dbuf
 30000  01171C  6E34               	movwf	(btemp+10)^0,c
 30001  01171E  0E03               	movlw	high _dbuf
 30002  011720  6E35               	movwf	(btemp+11)^0,c
 30003  011722  0EE6               	movlw	-26
 30004  011724  50E3               	movf	plusw1,w,c
 30005  011726  2634               	addwf	(btemp+10)^0,f,c
 30006  011728  0EE7               	movlw	-25
 30007  01172A  50E3               	movf	plusw1,w,c
 30008  01172C  2235               	addwfc	(btemp+11)^0,f,c
 30009  01172E  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 30010  011734  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 30011  01173A  EC7F  F0FF         	call	_strcpy	;wreg free
 30012                           
 30013                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 346:         } else {
 30014  01173E  D016               	goto	l15600
 30015  011740                     l15598:
 30016                           
 30017                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 347:             strcpy(&dbuf
      +                          [n], "inf");
 30018  011740  0EE2               	movlw	low STR_92
 30019  011742  6EE6               	movwf	postinc1,c
 30020  011744  0EFF               	movlw	high STR_92
 30021  011746  6EE6               	movwf	postinc1,c
 30022                           
 30023                           ;stkvar	_n @ sp[(-58)+32]
 30024  011748  0E54               	movlw	low _dbuf
 30025  01174A  6E34               	movwf	(btemp+10)^0,c
 30026  01174C  0E03               	movlw	high _dbuf
 30027  01174E  6E35               	movwf	(btemp+11)^0,c
 30028  011750  0EE6               	movlw	-26
 30029  011752  50E3               	movf	plusw1,w,c
 30030  011754  2634               	addwf	(btemp+10)^0,f,c
 30031  011756  0EE7               	movlw	-25
 30032  011758  50E3               	movf	plusw1,w,c
 30033  01175A  2235               	addwfc	(btemp+11)^0,f,c
 30034  01175C  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 30035  011762  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 30036  011768  EC7F  F0FF         	call	_strcpy	;wreg free
 30037  01176C                     l15600:
 30038                           
 30039                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 349:         w -= ((sizeof("i
      +                          nf")/sizeof("inf"[0]))-1);
 30040                           ;stkvar	_w @ sp[(-56)+38]
 30041  01176C  50E1               	movf	fsr1l,w,c
 30042  01176E  0FEE               	addlw	-18
 30043  011770  6ED9               	movwf	fsr2l,c
 30044  011772  50E2               	movf	fsr1h,w,c
 30045  011774  6EDA               	movwf	fsr2h,c
 30046  011776  0EFF               	movlw	255
 30047  011778  22DA               	addwfc	fsr2h,f,c
 30048  01177A  0EFD               	movlw	253
 30049  01177C  26DE               	addwf	postinc2,f,c
 30050  01177E  0EFF               	movlw	255
 30051  011780  22DD               	addwfc	postdec2,f,c
 30052  011782                     l15602:
 30053                           
 30054                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 350:         return pad(fp, &
      +                          dbuf[0], w);
 30055                           ;stkvar	_w @ sp[(-56)+38]
 30056  011782  0EEE               	movlw	-18
 30057  011784  006F FF8F FFE6     	movff	plusw1,postinc1
 30058  01178A  006F FF8F FFE6     	movff	plusw1,postinc1
 30059  011790  0E54               	movlw	low _dbuf
 30060  011792  6EE6               	movwf	postinc1,c
 30061  011794  0E03               	movlw	high _dbuf
 30062  011796  6EE6               	movwf	postinc1,c
 30063                           
 30064                           ;stkvar	_fp @ sp[(-60)+-2]
 30065  011798  0EC2               	movlw	-62
 30066  01179A  006F FF8F FFE6     	movff	plusw1,postinc1
 30067  0117A0  006F FF8F FFE6     	movff	plusw1,postinc1
 30068  0117A6  EC2F  F0FB         	call	_pad	;wreg free
 30069  0117AA  EFC8  F093         	goto	l2521
 30070  0117AE                     l15606:
 30071                           
 30072                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 353:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 30073                           ;stkvar	_g @ sp[(-56)+16]
 30074  0117AE  0ED8               	movlw	-40
 30075  0117B0  006F FF8F FFE6     	movff	plusw1,postinc1
 30076  0117B6  006F FF8F FFE6     	movff	plusw1,postinc1
 30077  0117BC  006F FF8F FFE6     	movff	plusw1,postinc1
 30078  0117C2  006F FF8F FFE6     	movff	plusw1,postinc1
 30079  0117C8  EC05  F0ED         	call	___fpclassifyf	;wreg free
 30080  0117CC  502A               	movf	btemp^0,w,c
 30081  0117CE  102B               	iorwf	(btemp+1)^0,w,c
 30082  0117D0  A4D8               	btfss	status,2,c
 30083  0117D2  D056               	goto	l15624
 30084  0117D4  0EBF               	movlw	191
 30085  0117D6  6E34               	movwf	(btemp+10)^0,c
 30086  0117D8  0EFF               	movlw	255
 30087  0117DA  6E35               	movwf	(btemp+11)^0,c
 30088                           
 30089                           ;stkvar	_c @ sp[(-56)+-7]
 30090  0117DC  0EC1               	movlw	-63
 30091  0117DE  50E3               	movf	plusw1,w,c
 30092  0117E0  6E32               	movwf	(btemp+8)^0,c
 30093  0117E2  6A33               	clrf	(btemp+9)^0,c
 30094  0117E4  5034               	movf	(btemp+10)^0,w,c
 30095  0117E6  2632               	addwf	(btemp+8)^0,f,c
 30096  0117E8  5035               	movf	(btemp+11)^0,w,c
 30097  0117EA  2233               	addwfc	(btemp+9)^0,f,c
 30098  0117EC  5033               	movf	(btemp+9)^0,w,c
 30099  0117EE  E106               	bnz	u14740
 30100  0117F0  0E1A               	movlw	26
 30101  0117F2  5C32               	subwf	(btemp+8)^0,w,c
 30102  0117F4  B0D8               	btfsc	status,0,c
 30103  0117F6  D002               	goto	u14740
 30104  0117F8  0E01               	movlw	1
 30105  0117FA  D001               	goto	u14750
 30106  0117FC                     u14740:
 30107  0117FC  0E00               	movlw	0
 30108  0117FE                     u14750:
 30109  0117FE  6E34               	movwf	(btemp+10)^0,c
 30110  011800  6A35               	clrf	(btemp+11)^0,c
 30111                           
 30112                           ;stkvar	_efgtoa$6613 @ sp[(-56)+6]
 30113  011802  0ECE               	movlw	-50
 30114  011804  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 30115  01180A  0ECF               	movlw	-49
 30116  01180C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 30117                           
 30118                           ;stkvar	_efgtoa$6613 @ sp[(-56)+6]
 30119  011812  0ECE               	movlw	-50
 30120  011814  006F FF8C  F02A    	movff	plusw1,btemp
 30121  01181A  0ECF               	movlw	-49
 30122  01181C  50E3               	movf	plusw1,w,c
 30123  01181E  102A               	iorwf	btemp^0,w,c
 30124  011820  B4D8               	btfsc	status,2,c
 30125  011822  D017               	goto	l15616
 30126                           
 30127                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 354:             strcpy(&dbuf
      +                          [n], "NAN");
 30128  011824  0EDE               	movlw	low STR_95
 30129  011826  6EE6               	movwf	postinc1,c
 30130  011828  0EFF               	movlw	high STR_95
 30131  01182A  6EE6               	movwf	postinc1,c
 30132                           
 30133                           ;stkvar	_n @ sp[(-58)+32]
 30134  01182C  0E54               	movlw	low _dbuf
 30135  01182E  6E34               	movwf	(btemp+10)^0,c
 30136  011830  0E03               	movlw	high _dbuf
 30137  011832  6E35               	movwf	(btemp+11)^0,c
 30138  011834  0EE6               	movlw	-26
 30139  011836  50E3               	movf	plusw1,w,c
 30140  011838  2634               	addwf	(btemp+10)^0,f,c
 30141  01183A  0EE7               	movlw	-25
 30142  01183C  50E3               	movf	plusw1,w,c
 30143  01183E  2235               	addwfc	(btemp+11)^0,f,c
 30144  011840  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 30145  011846  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 30146  01184C  EC7F  F0FF         	call	_strcpy	;wreg free
 30147                           
 30148                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 355:         } else {
 30149  011850  D78D               	goto	l15600
 30150  011852                     l15616:
 30151                           
 30152                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 356:             strcpy(&dbuf
      +                          [n], "nan");
 30153  011852  0EE6               	movlw	low STR_96
 30154  011854  6EE6               	movwf	postinc1,c
 30155  011856  0EFF               	movlw	high STR_96
 30156  011858  6EE6               	movwf	postinc1,c
 30157                           
 30158                           ;stkvar	_n @ sp[(-58)+32]
 30159  01185A  0E54               	movlw	low _dbuf
 30160  01185C  6E34               	movwf	(btemp+10)^0,c
 30161  01185E  0E03               	movlw	high _dbuf
 30162  011860  6E35               	movwf	(btemp+11)^0,c
 30163  011862  0EE6               	movlw	-26
 30164  011864  50E3               	movf	plusw1,w,c
 30165  011866  2634               	addwf	(btemp+10)^0,f,c
 30166  011868  0EE7               	movlw	-25
 30167  01186A  50E3               	movf	plusw1,w,c
 30168  01186C  2235               	addwfc	(btemp+11)^0,f,c
 30169  01186E  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 30170  011874  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 30171  01187A  EC7F  F0FF         	call	_strcpy	;wreg free
 30172  01187E  D776               	goto	l15600
 30173  011880                     l15624:
 30174                           
 30175                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 363:     u = 1.0;
 30176  011880  0E00               	movlw	0
 30177  011882  6E32               	movwf	(btemp+8)^0,c
 30178  011884  0E00               	movlw	0
 30179  011886  6E33               	movwf	(btemp+9)^0,c
 30180  011888  0E80               	movlw	128
 30181  01188A  6E34               	movwf	(btemp+10)^0,c
 30182  01188C  0E3F               	movlw	63
 30183  01188E  6E35               	movwf	(btemp+11)^0,c
 30184                           
 30185                           ;stkvar	_u @ sp[(-56)+12]
 30186  011890  0ED4               	movlw	-44
 30187  011892  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 30188  011898  0ED5               	movlw	-43
 30189  01189A  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 30190  0118A0  0ED6               	movlw	-42
 30191  0118A2  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 30192  0118A8  0ED7               	movlw	-41
 30193  0118AA  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 30194                           
 30195                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 364:     e = 0;
 30196                           ;stkvar	_e @ sp[(-56)+34]
 30197  0118B0  0EEA               	movlw	-22
 30198  0118B2  6AE3               	clrf	plusw1,c
 30199  0118B4  0EEB               	movlw	-21
 30200  0118B6  6AE3               	clrf	plusw1,c
 30201                           
 30202                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 365:     if (!(g == 0.0)) {
 30203  0118B8  0E00               	movlw	0
 30204  0118BA  6EE6               	movwf	postinc1,c
 30205  0118BC  0E00               	movlw	0
 30206  0118BE  6EE6               	movwf	postinc1,c
 30207  0118C0  0E00               	movlw	0
 30208  0118C2  6EE6               	movwf	postinc1,c
 30209  0118C4  0E00               	movlw	0
 30210  0118C6  6EE6               	movwf	postinc1,c
 30211                           
 30212                           ;stkvar	_g @ sp[(-60)+16]
 30213  0118C8  0ED4               	movlw	-44
 30214  0118CA  006F FF8F FFE6     	movff	plusw1,postinc1
 30215  0118D0  006F FF8F FFE6     	movff	plusw1,postinc1
 30216  0118D6  006F FF8F FFE6     	movff	plusw1,postinc1
 30217  0118DC  006F FF8F FFE6     	movff	plusw1,postinc1
 30218  0118E2  ECC2  F000         	call	___fleq	;wreg free
 30219  0118E6  A02A               	btfss	btemp& (0+255),0,c
 30220  0118E8  D039               	goto	l15636
 30221  0118EA  D0BC               	goto	u14790
 30222  0118EC                     l15632:
 30223                           
 30224                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 367:             u = u*10.0;
 30225  0118EC  0E00               	movlw	0
 30226  0118EE  6EE6               	movwf	postinc1,c
 30227  0118F0  0E00               	movlw	0
 30228  0118F2  6EE6               	movwf	postinc1,c
 30229  0118F4  0E20               	movlw	32
 30230  0118F6  6EE6               	movwf	postinc1,c
 30231  0118F8  0E41               	movlw	65
 30232  0118FA  6EE6               	movwf	postinc1,c
 30233                           
 30234                           ;stkvar	_u @ sp[(-60)+12]
 30235  0118FC  0ED0               	movlw	-48
 30236  0118FE  006F FF8F FFE6     	movff	plusw1,postinc1
 30237  011904  006F FF8F FFE6     	movff	plusw1,postinc1
 30238  01190A  006F FF8F FFE6     	movff	plusw1,postinc1
 30239  011910  006F FF8F FFE6     	movff	plusw1,postinc1
 30240  011916  EC4D  F0B2         	call	___flmul	;wreg free
 30241                           
 30242                           ;stkvar	_u @ sp[(-56)+12]
 30243  01191A  0ED4               	movlw	-44
 30244  01191C  0060  F0AB  FFE3   	movff	btemp,plusw1
 30245  011922  0ED5               	movlw	-43
 30246  011924  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 30247  01192A  0ED6               	movlw	-42
 30248  01192C  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 30249  011932  0ED7               	movlw	-41
 30250  011934  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 30251                           
 30252                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 368:             ++e;
 30253                           ;stkvar	_e @ sp[(-56)+34]
 30254  01193A  0EEA               	movlw	-22
 30255  01193C  50E3               	movf	plusw1,w,c
 30256  01193E  0F01               	addlw	1
 30257  011940  6E2A               	movwf	btemp^0,c
 30258  011942  0EEA               	movlw	-22
 30259  011944  0060  F0AB  FFE3   	movff	btemp,plusw1
 30260  01194A  6A2A               	clrf	btemp^0,c
 30261  01194C  0EEB               	movlw	-21
 30262  01194E  50E3               	movf	plusw1,w,c
 30263  011950  202A               	addwfc	btemp^0,w,c
 30264  011952  6E2A               	movwf	btemp^0,c
 30265  011954  0EEB               	movlw	-21
 30266  011956  0060  F0AB  FFE3   	movff	btemp,plusw1
 30267  01195C                     l15636:
 30268                           
 30269                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 366:         while (!(g < (u*
      +                          10.0))) {
 30270  01195C  0E00               	movlw	0
 30271  01195E  6EE6               	movwf	postinc1,c
 30272  011960  0E00               	movlw	0
 30273  011962  6EE6               	movwf	postinc1,c
 30274  011964  0E20               	movlw	32
 30275  011966  6EE6               	movwf	postinc1,c
 30276  011968  0E41               	movlw	65
 30277  01196A  6EE6               	movwf	postinc1,c
 30278                           
 30279                           ;stkvar	_u @ sp[(-60)+12]
 30280  01196C  0ED0               	movlw	-48
 30281  01196E  006F FF8F FFE6     	movff	plusw1,postinc1
 30282  011974  006F FF8F FFE6     	movff	plusw1,postinc1
 30283  01197A  006F FF8F FFE6     	movff	plusw1,postinc1
 30284  011980  006F FF8F FFE6     	movff	plusw1,postinc1
 30285  011986  EC4D  F0B2         	call	___flmul	;wreg free
 30286  01198A  0060  F0AB  FFE6   	movff	btemp,postinc1
 30287  011990  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 30288  011996  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 30289  01199C  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 30290                           
 30291                           ;stkvar	_g @ sp[(-60)+16]
 30292  0119A2  0ED4               	movlw	-44
 30293  0119A4  006F FF8F FFE6     	movff	plusw1,postinc1
 30294  0119AA  006F FF8F FFE6     	movff	plusw1,postinc1
 30295  0119B0  006F FF8F FFE6     	movff	plusw1,postinc1
 30296  0119B6  006F FF8F FFE6     	movff	plusw1,postinc1
 30297  0119BC  EC09  F0F3         	call	___flge	;wreg free
 30298  0119C0  A02A               	btfss	btemp& (0+255),0,c
 30299  0119C2  D032               	goto	l15642
 30300  0119C4  D793               	goto	l15632
 30301  0119C6                     l15638:
 30302                           
 30303                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 371:             u = u/10.0;
 30304  0119C6  0E00               	movlw	0
 30305  0119C8  6EE6               	movwf	postinc1,c
 30306  0119CA  0E00               	movlw	0
 30307  0119CC  6EE6               	movwf	postinc1,c
 30308  0119CE  0E20               	movlw	32
 30309  0119D0  6EE6               	movwf	postinc1,c
 30310  0119D2  0E41               	movlw	65
 30311  0119D4  6EE6               	movwf	postinc1,c
 30312                           
 30313                           ;stkvar	_u @ sp[(-60)+12]
 30314  0119D6  0ED0               	movlw	-48
 30315  0119D8  006F FF8F FFE6     	movff	plusw1,postinc1
 30316  0119DE  006F FF8F FFE6     	movff	plusw1,postinc1
 30317  0119E4  006F FF8F FFE6     	movff	plusw1,postinc1
 30318  0119EA  006F FF8F FFE6     	movff	plusw1,postinc1
 30319  0119F0  EC9E  F0BD         	call	___fldiv	;wreg free
 30320                           
 30321                           ;stkvar	_u @ sp[(-56)+12]
 30322  0119F4  0ED4               	movlw	-44
 30323  0119F6  0060  F0AB  FFE3   	movff	btemp,plusw1
 30324  0119FC  0ED5               	movlw	-43
 30325  0119FE  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 30326  011A04  0ED6               	movlw	-42
 30327  011A06  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 30328  011A0C  0ED7               	movlw	-41
 30329  011A0E  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 30330                           
 30331                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 372:             --e;
 30332                           ;stkvar	_e @ sp[(-56)+34]
 30333  011A14  50E1               	movf	fsr1l,w,c
 30334  011A16  0FEA               	addlw	-22
 30335  011A18  6ED9               	movwf	fsr2l,c
 30336  011A1A  50E2               	movf	fsr1h,w,c
 30337  011A1C  6EDA               	movwf	fsr2h,c
 30338  011A1E  0EFF               	movlw	255
 30339  011A20  22DA               	addwfc	fsr2h,f,c
 30340  011A22  06DE               	decf	postinc2,f,c
 30341  011A24  0E00               	movlw	0
 30342  011A26  5ADD               	subwfb	postdec2,f,c
 30343  011A28                     l15642:
 30344                           
 30345                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 370:         while (g < u) {
 30346                           ;stkvar	_u @ sp[(-56)+12]
 30347  011A28  0ED4               	movlw	-44
 30348  011A2A  006F FF8F FFE6     	movff	plusw1,postinc1
 30349  011A30  006F FF8F FFE6     	movff	plusw1,postinc1
 30350  011A36  006F FF8F FFE6     	movff	plusw1,postinc1
 30351  011A3C  006F FF8F FFE6     	movff	plusw1,postinc1
 30352                           
 30353                           ;stkvar	_g @ sp[(-60)+16]
 30354  011A42  0ED4               	movlw	-44
 30355  011A44  006F FF8F FFE6     	movff	plusw1,postinc1
 30356  011A4A  006F FF8F FFE6     	movff	plusw1,postinc1
 30357  011A50  006F FF8F FFE6     	movff	plusw1,postinc1
 30358  011A56  006F FF8F FFE6     	movff	plusw1,postinc1
 30359  011A5C  EC09  F0F3         	call	___flge	;wreg free
 30360  011A60  A02A               	btfss	btemp& (0+255),0,c
 30361  011A62  D7B1               	goto	l15638
 30362  011A64                     u14790:
 30363                           
 30364                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 377:     mode = tolower((int)
      +                          c);
 30365                           ;stkvar	_c @ sp[(-56)+-7]
 30366  011A64  0EC1               	movlw	-63
 30367  011A66  50E3               	movf	plusw1,w,c
 30368  011A68  6EE6               	movwf	postinc1,c
 30369  011A6A  0E00               	movlw	0
 30370  011A6C  6EE6               	movwf	postinc1,c
 30371  011A6E  EC1A  F007         	call	_tolower	;wreg free
 30372                           
 30373                           ;stkvar	_mode @ sp[(-56)+54]
 30374  011A72  0EFE               	movlw	-2
 30375  011A74  0060  F0AB  FFE3   	movff	btemp,plusw1
 30376                           
 30377                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 378:     nmode = mode;
 30378                           ;stkvar	_mode @ sp[(-56)+54]
 30379                           ;stkvar	_nmode @ sp[(-56)+55]
 30380  011A7A  0EFE               	movlw	-2
 30381  011A7C  006F FF8C  F02A    	movff	plusw1,btemp
 30382  011A82  0EFF               	movlw	-1
 30383  011A84  0060  F0AB  FFE3   	movff	btemp,plusw1
 30384                           
 30385                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 379:     if (mode == 'g') {
 30386                           ;stkvar	_mode @ sp[(-56)+54]
 30387  011A8A  0EFE               	movlw	-2
 30388  011A8C  006F FF8C  F02A    	movff	plusw1,btemp
 30389  011A92  0E67               	movlw	103
 30390  011A94  182A               	xorwf	btemp^0,w,c
 30391  011A96  A4D8               	btfss	status,2,c
 30392  011A98  D025               	goto	l15660
 30393                           
 30394                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 380:   if (prec == 0) {
 30395  011A9A  504C               	movf	_prec^0,w,c
 30396  011A9C  104D               	iorwf	(_prec+1)^0,w,c
 30397  011A9E  A4D8               	btfss	status,2,c
 30398  011AA0  D004               	goto	l15654
 30399                           
 30400                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 381:    prec = 1;
 30401  011AA2  0E00               	movlw	0
 30402  011AA4  6E4D               	movwf	(_prec+1)^0,c
 30403  011AA6  0E01               	movlw	1
 30404  011AA8  6E4C               	movwf	_prec^0,c
 30405  011AAA                     l15654:
 30406                           
 30407                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 383:         p = (0 < prec) ?
      +                           prec : 6;
 30408  011AAA  BE4D               	btfsc	(_prec+1)^0,7,c
 30409  011AAC  D005               	goto	u14820
 30410  011AAE  504D               	movf	(_prec+1)^0,w,c
 30411  011AB0  E110               	bnz	l15658
 30412  011AB2  044C               	decf	_prec^0,w,c
 30413  011AB4  B0D8               	btfsc	status,0,c
 30414  011AB6  D00D               	goto	l15658
 30415  011AB8                     u14820:
 30416  011AB8  0E06               	movlw	6
 30417  011ABA  6E34               	movwf	(btemp+10)^0,c
 30418  011ABC  0E00               	movlw	0
 30419  011ABE  6E35               	movwf	(btemp+11)^0,c
 30420                           
 30421                           ;stkvar	_p @ sp[(-56)+40]
 30422  011AC0  0EF0               	movlw	-16
 30423  011AC2  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 30424  011AC8  0EF1               	movlw	-15
 30425  011ACA  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 30426  011AD0  D00C               	goto	l15666
 30427  011AD2                     l15658:
 30428                           
 30429                           ;stkvar	_p @ sp[(-56)+40]
 30430  011AD2  0EF0               	movlw	-16
 30431  011AD4  0060  F133  FFE3   	movff	_prec,plusw1
 30432  011ADA  0EF1               	movlw	-15
 30433  011ADC  0060  F137  FFE3   	movff	_prec+1,plusw1
 30434  011AE2  D003               	goto	l15666
 30435  011AE4                     l15660:
 30436                           
 30437                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 385:         p = (prec < 0) ?
      +                           6 : prec;
 30438  011AE4  AE4D               	btfss	(_prec+1)^0,7,c
 30439  011AE6  D7F5               	goto	l15658
 30440  011AE8  D7E7               	goto	u14820
 30441  011AEA                     l15666:
 30442                           
 30443                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 389:     if (mode == 'g') {
 30444                           ;stkvar	_mode @ sp[(-56)+54]
 30445  011AEA  0EFE               	movlw	-2
 30446  011AEC  006F FF8C  F02A    	movff	plusw1,btemp
 30447  011AF2  0E67               	movlw	103
 30448  011AF4  182A               	xorwf	btemp^0,w,c
 30449  011AF6  A4D8               	btfss	status,2,c
 30450  011AF8  D02F               	goto	l15676
 30451                           
 30452                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 390:         if (!(e < -4) &&
      +                           !((p - 1) < e)) {
 30453                           ;stkvar	_e @ sp[(-56)+34]
 30454  011AFA  0EEB               	movlw	-21
 30455  011AFC  AEE3               	btfss	plusw1,7,c
 30456  011AFE  D00E               	goto	u14850
 30457  011B00  0EEA               	movlw	-22
 30458  011B02  006F FF8C  F02A    	movff	plusw1,btemp
 30459  011B08  0EFC               	movlw	252
 30460  011B0A  5E2A               	subwf	btemp^0,f,c
 30461  011B0C  0EEB               	movlw	-21
 30462  011B0E  006F FF8C  F02A    	movff	plusw1,btemp
 30463  011B14  0EFF               	movlw	255
 30464  011B16  5A2A               	subwfb	btemp^0,f,c
 30465  011B18  A0D8               	btfss	status,0,c
 30466  011B1A  D018               	goto	l15674
 30467  011B1C                     u14850:
 30468                           
 30469                           ;stkvar	_e @ sp[(-56)+34]
 30470                           ;stkvar	_p @ sp[(-56)+40]
 30471  011B1C  0EF0               	movlw	-16
 30472  011B1E  50E3               	movf	plusw1,w,c
 30473  011B20  0FFF               	addlw	255
 30474  011B22  6E34               	movwf	(btemp+10)^0,c
 30475  011B24  0EF1               	movlw	-15
 30476  011B26  006F FF8C  F035    	movff	plusw1,btemp+11
 30477  011B2C  0EFF               	movlw	255
 30478  011B2E  2235               	addwfc	(btemp+11)^0,f,c
 30479  011B30  0EEA               	movlw	-22
 30480  011B32  50E3               	movf	plusw1,w,c
 30481  011B34  5C34               	subwf	(btemp+10)^0,w,c
 30482  011B36  5035               	movf	(btemp+11)^0,w,c
 30483  011B38  0A80               	xorlw	128
 30484  011B3A  6E2A               	movwf	btemp^0,c
 30485  011B3C  0EEB               	movlw	-21
 30486  011B3E  50E3               	movf	plusw1,w,c
 30487  011B40  0A80               	xorlw	128
 30488  011B42  582A               	subwfb	btemp^0,w,c
 30489  011B44  A0D8               	btfss	status,0,c
 30490  011B46  D002               	goto	l15674
 30491                           
 30492                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 391:             nmode = 'f';
 30493  011B48  0E66               	movlw	102
 30494  011B4A  D001               	goto	L32
 30495  011B4C                     l15674:
 30496                           
 30497                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 393:             nmode = 'e';
 30498  011B4C  0E65               	movlw	101
 30499  011B4E                     L32:
 30500  011B4E  6E35               	movwf	(btemp+11)^0,c
 30501                           
 30502                           ;stkvar	_nmode @ sp[(-56)+55]
 30503  011B50  0EFF               	movlw	-1
 30504  011B52  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 30505  011B58                     l15676:
 30506                           
 30507                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 398:     m = p;
 30508                           ;stkvar	_p @ sp[(-56)+40]
 30509                           ;stkvar	_m @ sp[(-56)+48]
 30510  011B58  0EF0               	movlw	-16
 30511  011B5A  006F FF8C  F02A    	movff	plusw1,btemp
 30512  011B60  0EF8               	movlw	-8
 30513  011B62  0060  F0AB  FFE3   	movff	btemp,plusw1
 30514  011B68  0EF1               	movlw	-15
 30515  011B6A  006F FF8C  F02A    	movff	plusw1,btemp
 30516  011B70  0EF9               	movlw	-7
 30517  011B72  0060  F0AB  FFE3   	movff	btemp,plusw1
 30518                           
 30519                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 399:     if (!(mode == 'g') |
      +                          | ((nmode == 'f') && (e < 0))) {
 30520                           ;stkvar	_mode @ sp[(-56)+54]
 30521  011B78  0EFE               	movlw	-2
 30522  011B7A  006F FF8C  F02A    	movff	plusw1,btemp
 30523  011B80  0E67               	movlw	103
 30524  011B82  182A               	xorwf	btemp^0,w,c
 30525  011B84  A4D8               	btfss	status,2,c
 30526  011B86  D00B               	goto	u14890
 30527                           
 30528                           ;stkvar	_nmode @ sp[(-56)+55]
 30529  011B88  0EFF               	movlw	-1
 30530  011B8A  006F FF8C  F02A    	movff	plusw1,btemp
 30531  011B90  0E66               	movlw	102
 30532  011B92  182A               	xorwf	btemp^0,w,c
 30533  011B94  A4D8               	btfss	status,2,c
 30534  011B96  D014               	goto	l2550
 30535                           
 30536                           ;stkvar	_e @ sp[(-56)+34]
 30537  011B98  0EEB               	movlw	-21
 30538  011B9A  AEE3               	btfss	plusw1,7,c
 30539  011B9C  D011               	goto	l2550
 30540  011B9E                     u14890:
 30541                           
 30542                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 400:         ++m;
 30543                           ;stkvar	_m @ sp[(-56)+48]
 30544  011B9E  0EF8               	movlw	-8
 30545  011BA0  50E3               	movf	plusw1,w,c
 30546  011BA2  0F01               	addlw	1
 30547  011BA4  6E2A               	movwf	btemp^0,c
 30548  011BA6  0EF8               	movlw	-8
 30549  011BA8  0060  F0AB  FFE3   	movff	btemp,plusw1
 30550  011BAE  6A2A               	clrf	btemp^0,c
 30551  011BB0  0EF9               	movlw	-7
 30552  011BB2  50E3               	movf	plusw1,w,c
 30553  011BB4  202A               	addwfc	btemp^0,w,c
 30554  011BB6  6E2A               	movwf	btemp^0,c
 30555  011BB8  0EF9               	movlw	-7
 30556  011BBA  0060  F0AB  FFE3   	movff	btemp,plusw1
 30557  011BC0                     l2550:
 30558                           
 30559                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 404:     if (nmode == 'f') {
 30560                           ;stkvar	_nmode @ sp[(-56)+55]
 30561  011BC0  0EFF               	movlw	-1
 30562  011BC2  006F FF8C  F02A    	movff	plusw1,btemp
 30563  011BC8  0E66               	movlw	102
 30564  011BCA  182A               	xorwf	btemp^0,w,c
 30565  011BCC  A4D8               	btfss	status,2,c
 30566  011BCE  D03B               	goto	l15696
 30567                           
 30568                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 405:         if (e < 0) {
 30569                           ;stkvar	_e @ sp[(-56)+34]
 30570  011BD0  0EEB               	movlw	-21
 30571  011BD2  AEE3               	btfss	plusw1,7,c
 30572  011BD4  D01C               	goto	l15692
 30573                           
 30574                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 406:             u = 1.0;
 30575  011BD6  0E00               	movlw	0
 30576  011BD8  6E32               	movwf	(btemp+8)^0,c
 30577  011BDA  0E00               	movlw	0
 30578  011BDC  6E33               	movwf	(btemp+9)^0,c
 30579  011BDE  0E80               	movlw	128
 30580  011BE0  6E34               	movwf	(btemp+10)^0,c
 30581  011BE2  0E3F               	movlw	63
 30582  011BE4  6E35               	movwf	(btemp+11)^0,c
 30583                           
 30584                           ;stkvar	_u @ sp[(-56)+12]
 30585  011BE6  0ED4               	movlw	-44
 30586  011BE8  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 30587  011BEE  0ED5               	movlw	-43
 30588  011BF0  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 30589  011BF6  0ED6               	movlw	-42
 30590  011BF8  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 30591  011BFE  0ED7               	movlw	-41
 30592  011C00  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 30593                           
 30594                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 407:             e = 0;
 30595                           ;stkvar	_e @ sp[(-56)+34]
 30596  011C06  0EEA               	movlw	-22
 30597  011C08  6AE3               	clrf	plusw1,c
 30598  011C0A  0EEB               	movlw	-21
 30599  011C0C  6AE3               	clrf	plusw1,c
 30600  011C0E                     l15692:
 30601                           
 30602                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 409:         if (!(mode == 'g
      +                          ')) {
 30603                           ;stkvar	_mode @ sp[(-56)+54]
 30604  011C0E  0EFE               	movlw	-2
 30605  011C10  006F FF8C  F02A    	movff	plusw1,btemp
 30606  011C16  0E67               	movlw	103
 30607  011C18  182A               	xorwf	btemp^0,w,c
 30608  011C1A  B4D8               	btfsc	status,2,c
 30609  011C1C  D014               	goto	l15696
 30610                           
 30611                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 410:             m += e;
 30612                           ;stkvar	_e @ sp[(-56)+34]
 30613                           ;stkvar	_m @ sp[(-56)+48]
 30614  011C1E  0EF8               	movlw	-8
 30615  011C20  50E3               	movf	plusw1,w,c
 30616  011C22  6E2A               	movwf	btemp^0,c
 30617  011C24  0EEA               	movlw	-22
 30618  011C26  50E3               	movf	plusw1,w,c
 30619  011C28  262A               	addwf	btemp^0,f,c
 30620  011C2A  0EF8               	movlw	-8
 30621  011C2C  0060  F0AB  FFE3   	movff	btemp,plusw1
 30622  011C32  0EF9               	movlw	-7
 30623  011C34  50E3               	movf	plusw1,w,c
 30624  011C36  6E2A               	movwf	btemp^0,c
 30625  011C38  0EEB               	movlw	-21
 30626  011C3A  50E3               	movf	plusw1,w,c
 30627  011C3C  222A               	addwfc	btemp^0,f,c
 30628  011C3E  0EF9               	movlw	-7
 30629  011C40  0060  F0AB  FFE3   	movff	btemp,plusw1
 30630  011C46                     l15696:
 30631                           
 30632                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 415:     i = 0;
 30633                           ;stkvar	_i @ sp[(-56)+36]
 30634  011C46  0EEC               	movlw	-20
 30635  011C48  6AE3               	clrf	plusw1,c
 30636  011C4A  0EED               	movlw	-19
 30637  011C4C  6AE3               	clrf	plusw1,c
 30638                           
 30639                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 416:     h = g;
 30640                           ;stkvar	_g @ sp[(-56)+16]
 30641  011C4E  0ED8               	movlw	-40
 30642  011C50  006F FF8C  F032    	movff	plusw1,btemp+8
 30643  011C56  0ED9               	movlw	-39
 30644  011C58  006F FF8C  F033    	movff	plusw1,btemp+9
 30645  011C5E  0EDA               	movlw	-38
 30646  011C60  006F FF8C  F034    	movff	plusw1,btemp+10
 30647  011C66  0EDB               	movlw	-37
 30648  011C68  006F FF8C  F035    	movff	plusw1,btemp+11
 30649                           
 30650                           ;stkvar	_h @ sp[(-56)+24]
 30651  011C6E  0EE0               	movlw	-32
 30652  011C70  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 30653  011C76  0EE1               	movlw	-31
 30654  011C78  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 30655  011C7E  0EE2               	movlw	-30
 30656  011C80  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 30657  011C86  0EE3               	movlw	-29
 30658  011C88  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 30659                           
 30660                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 417:     ou = u;
 30661                           ;stkvar	_u @ sp[(-56)+12]
 30662  011C8E  0ED4               	movlw	-44
 30663  011C90  006F FF8C  F032    	movff	plusw1,btemp+8
 30664  011C96  0ED5               	movlw	-43
 30665  011C98  006F FF8C  F033    	movff	plusw1,btemp+9
 30666  011C9E  0ED6               	movlw	-42
 30667  011CA0  006F FF8C  F034    	movff	plusw1,btemp+10
 30668  011CA6  0ED7               	movlw	-41
 30669  011CA8  006F FF8C  F035    	movff	plusw1,btemp+11
 30670                           
 30671                           ;stkvar	_ou @ sp[(-56)+28]
 30672  011CAE  0EE4               	movlw	-28
 30673  011CB0  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 30674  011CB6  0EE5               	movlw	-27
 30675  011CB8  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 30676  011CBE  0EE6               	movlw	-26
 30677  011CC0  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 30678  011CC6  0EE7               	movlw	-25
 30679  011CC8  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 30680                           
 30681                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 30682  011CCE  D0D6               	goto	l15712
 30683  011CD0                     l15702:
 30684                           
 30685                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 419:         l = floorf(h/u);
 30686                           ;stkvar	_u @ sp[(-56)+12]
 30687  011CD0  0ED4               	movlw	-44
 30688  011CD2  006F FF8F FFE6     	movff	plusw1,postinc1
 30689  011CD8  006F FF8F FFE6     	movff	plusw1,postinc1
 30690  011CDE  006F FF8F FFE6     	movff	plusw1,postinc1
 30691  011CE4  006F FF8F FFE6     	movff	plusw1,postinc1
 30692                           
 30693                           ;stkvar	_h @ sp[(-60)+24]
 30694  011CEA  0EDC               	movlw	-36
 30695  011CEC  006F FF8F FFE6     	movff	plusw1,postinc1
 30696  011CF2  006F FF8F FFE6     	movff	plusw1,postinc1
 30697  011CF8  006F FF8F FFE6     	movff	plusw1,postinc1
 30698  011CFE  006F FF8F FFE6     	movff	plusw1,postinc1
 30699  011D04  EC9E  F0BD         	call	___fldiv	;wreg free
 30700  011D08  0060  F0AB  FFE6   	movff	btemp,postinc1
 30701  011D0E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 30702  011D14  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 30703  011D1A  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 30704  011D20  EC82  F0CF         	call	_floorf	;wreg free
 30705                           
 30706                           ;stkvar	_l @ sp[(-56)+20]
 30707  011D24  0EDC               	movlw	-36
 30708  011D26  0060  F0AB  FFE3   	movff	btemp,plusw1
 30709  011D2C  0EDD               	movlw	-35
 30710  011D2E  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 30711  011D34  0EDE               	movlw	-34
 30712  011D36  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 30713  011D3C  0EDF               	movlw	-33
 30714  011D3E  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 30715                           
 30716                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 420:         d = (int)l;
 30717                           ;stkvar	_l @ sp[(-56)+20]
 30718  011D44  0EDC               	movlw	-36
 30719  011D46  006F FF8F FFE6     	movff	plusw1,postinc1
 30720  011D4C  006F FF8F FFE6     	movff	plusw1,postinc1
 30721  011D52  006F FF8F FFE6     	movff	plusw1,postinc1
 30722  011D58  006F FF8F FFE6     	movff	plusw1,postinc1
 30723  011D5E  EC9D  F0F1         	call	___fltol	;wreg free
 30724  011D62  0060  F0A8  F034   	movff	btemp,btemp+10
 30725  011D68  0060  F0AC  F035   	movff	btemp+1,btemp+11
 30726                           
 30727                           ;stkvar	_d @ sp[(-56)+44]
 30728  011D6E  0EF4               	movlw	-12
 30729  011D70  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 30730  011D76  0EF5               	movlw	-11
 30731  011D78  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 30732                           
 30733                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 421:         h -= l*u;
 30734                           ;stkvar	_u @ sp[(-56)+12]
 30735  011D7E  0ED4               	movlw	-44
 30736  011D80  006F FF8F FFE6     	movff	plusw1,postinc1
 30737  011D86  006F FF8F FFE6     	movff	plusw1,postinc1
 30738  011D8C  006F FF8F FFE6     	movff	plusw1,postinc1
 30739  011D92  006F FF8F FFE6     	movff	plusw1,postinc1
 30740                           
 30741                           ;stkvar	_l @ sp[(-60)+20]
 30742  011D98  0ED8               	movlw	-40
 30743  011D9A  006F FF8F FFE6     	movff	plusw1,postinc1
 30744  011DA0  006F FF8F FFE6     	movff	plusw1,postinc1
 30745  011DA6  006F FF8F FFE6     	movff	plusw1,postinc1
 30746  011DAC  006F FF8F FFE6     	movff	plusw1,postinc1
 30747  011DB2  EC4D  F0B2         	call	___flmul	;wreg free
 30748  011DB6  0060  F0AB  FFE6   	movff	btemp,postinc1
 30749  011DBC  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 30750  011DC2  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 30751  011DC8  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 30752                           
 30753                           ;stkvar	_h @ sp[(-60)+24]
 30754  011DCE  0EDC               	movlw	-36
 30755  011DD0  006F FF8F FFE6     	movff	plusw1,postinc1
 30756  011DD6  006F FF8F FFE6     	movff	plusw1,postinc1
 30757  011DDC  006F FF8F FFE6     	movff	plusw1,postinc1
 30758  011DE2  006F FF8F FFE6     	movff	plusw1,postinc1
 30759  011DE8  EC54  F00D         	call	___flsub	;wreg free
 30760                           
 30761                           ;stkvar	_h @ sp[(-56)+24]
 30762  011DEC  0EE0               	movlw	-32
 30763  011DEE  0060  F0AB  FFE3   	movff	btemp,plusw1
 30764  011DF4  0EE1               	movlw	-31
 30765  011DF6  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 30766  011DFC  0EE2               	movlw	-30
 30767  011DFE  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 30768  011E04  0EE3               	movlw	-29
 30769  011E06  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 30770                           
 30771                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 422:         u = u/10.0;
 30772  011E0C  0E00               	movlw	0
 30773  011E0E  6EE6               	movwf	postinc1,c
 30774  011E10  0E00               	movlw	0
 30775  011E12  6EE6               	movwf	postinc1,c
 30776  011E14  0E20               	movlw	32
 30777  011E16  6EE6               	movwf	postinc1,c
 30778  011E18  0E41               	movlw	65
 30779  011E1A  6EE6               	movwf	postinc1,c
 30780                           
 30781                           ;stkvar	_u @ sp[(-60)+12]
 30782  011E1C  0ED0               	movlw	-48
 30783  011E1E  006F FF8F FFE6     	movff	plusw1,postinc1
 30784  011E24  006F FF8F FFE6     	movff	plusw1,postinc1
 30785  011E2A  006F FF8F FFE6     	movff	plusw1,postinc1
 30786  011E30  006F FF8F FFE6     	movff	plusw1,postinc1
 30787  011E36  EC9E  F0BD         	call	___fldiv	;wreg free
 30788                           
 30789                           ;stkvar	_u @ sp[(-56)+12]
 30790  011E3A  0ED4               	movlw	-44
 30791  011E3C  0060  F0AB  FFE3   	movff	btemp,plusw1
 30792  011E42  0ED5               	movlw	-43
 30793  011E44  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 30794  011E4A  0ED6               	movlw	-42
 30795  011E4C  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 30796  011E52  0ED7               	movlw	-41
 30797  011E54  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 30798                           
 30799                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 423:         ++i;
 30800                           ;stkvar	_i @ sp[(-56)+36]
 30801  011E5A  0EEC               	movlw	-20
 30802  011E5C  50E3               	movf	plusw1,w,c
 30803  011E5E  0F01               	addlw	1
 30804  011E60  6E2A               	movwf	btemp^0,c
 30805  011E62  0EEC               	movlw	-20
 30806  011E64  0060  F0AB  FFE3   	movff	btemp,plusw1
 30807  011E6A  6A2A               	clrf	btemp^0,c
 30808  011E6C  0EED               	movlw	-19
 30809  011E6E  50E3               	movf	plusw1,w,c
 30810  011E70  202A               	addwfc	btemp^0,w,c
 30811  011E72  6E2A               	movwf	btemp^0,c
 30812  011E74  0EED               	movlw	-19
 30813  011E76  0060  F0AB  FFE3   	movff	btemp,plusw1
 30814  011E7C                     l15712:
 30815                           
 30816                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 30817                           ;stkvar	_m @ sp[(-56)+48]
 30818                           ;stkvar	_i @ sp[(-56)+36]
 30819  011E7C  50E1               	movf	fsr1l,w,c
 30820  011E7E  0FEC               	addlw	-20
 30821  011E80  6ED9               	movwf	fsr2l,c
 30822  011E82  50E2               	movf	fsr1h,w,c
 30823  011E84  6EDA               	movwf	fsr2h,c
 30824  011E86  0EFF               	movlw	255
 30825  011E88  22DA               	addwfc	fsr2h,f,c
 30826  011E8A  0EF8               	movlw	-8
 30827  011E8C  50E3               	movf	plusw1,w,c
 30828  011E8E  5CDE               	subwf	postinc2,w,c
 30829  011E90  50DE               	movf	postinc2,w,c
 30830  011E92  0A80               	xorlw	128
 30831  011E94  6E2A               	movwf	btemp^0,c
 30832  011E96  0EF9               	movlw	-7
 30833  011E98  50E3               	movf	plusw1,w,c
 30834  011E9A  0A80               	xorlw	128
 30835  011E9C  582A               	subwfb	btemp^0,w,c
 30836  011E9E  A0D8               	btfss	status,0,c
 30837  011EA0  D717               	goto	l15702
 30838                           
 30839                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 427:     l = u*5.0;
 30840  011EA2  0E00               	movlw	0
 30841  011EA4  6EE6               	movwf	postinc1,c
 30842  011EA6  0E00               	movlw	0
 30843  011EA8  6EE6               	movwf	postinc1,c
 30844  011EAA  0EA0               	movlw	160
 30845  011EAC  6EE6               	movwf	postinc1,c
 30846  011EAE  0E40               	movlw	64
 30847  011EB0  6EE6               	movwf	postinc1,c
 30848                           
 30849                           ;stkvar	_u @ sp[(-60)+12]
 30850  011EB2  0ED0               	movlw	-48
 30851  011EB4  006F FF8F FFE6     	movff	plusw1,postinc1
 30852  011EBA  006F FF8F FFE6     	movff	plusw1,postinc1
 30853  011EC0  006F FF8F FFE6     	movff	plusw1,postinc1
 30854  011EC6  006F FF8F FFE6     	movff	plusw1,postinc1
 30855  011ECC  EC4D  F0B2         	call	___flmul	;wreg free
 30856                           
 30857                           ;stkvar	_l @ sp[(-56)+20]
 30858  011ED0  0EDC               	movlw	-36
 30859  011ED2  0060  F0AB  FFE3   	movff	btemp,plusw1
 30860  011ED8  0EDD               	movlw	-35
 30861  011EDA  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 30862  011EE0  0EDE               	movlw	-34
 30863  011EE2  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 30864  011EE8  0EDF               	movlw	-33
 30865  011EEA  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 30866                           
 30867                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 428:     if (h < l) {
 30868                           ;stkvar	_l @ sp[(-56)+20]
 30869  011EF0  0EDC               	movlw	-36
 30870  011EF2  006F FF8F FFE6     	movff	plusw1,postinc1
 30871  011EF8  006F FF8F FFE6     	movff	plusw1,postinc1
 30872  011EFE  006F FF8F FFE6     	movff	plusw1,postinc1
 30873  011F04  006F FF8F FFE6     	movff	plusw1,postinc1
 30874                           
 30875                           ;stkvar	_h @ sp[(-60)+24]
 30876  011F0A  0EDC               	movlw	-36
 30877  011F0C  006F FF8F FFE6     	movff	plusw1,postinc1
 30878  011F12  006F FF8F FFE6     	movff	plusw1,postinc1
 30879  011F18  006F FF8F FFE6     	movff	plusw1,postinc1
 30880  011F1E  006F FF8F FFE6     	movff	plusw1,postinc1
 30881  011F24  EC09  F0F3         	call	___flge	;wreg free
 30882  011F28  A02A               	btfss	btemp& (0+255),0,c
 30883  011F2A  D021               	goto	u14960
 30884                           
 30885                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 432:         if ((h == l) && 
      +                          !(d % 2)) {
 30886                           ;stkvar	_l @ sp[(-56)+20]
 30887                           
 30888                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 430:     } else {
 30889                           
 30890                           ;stkvar	_l @ sp[(-56)+20]
 30891                           
 30892                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 429:         l = 0.0;
 30893  011F2C  0EDC               	movlw	-36
 30894  011F2E  006F FF8F FFE6     	movff	plusw1,postinc1
 30895  011F34  006F FF8F FFE6     	movff	plusw1,postinc1
 30896  011F3A  006F FF8F FFE6     	movff	plusw1,postinc1
 30897  011F40  006F FF8F FFE6     	movff	plusw1,postinc1
 30898                           
 30899                           ;stkvar	_h @ sp[(-60)+24]
 30900  011F46  0EDC               	movlw	-36
 30901  011F48  006F FF8F FFE6     	movff	plusw1,postinc1
 30902  011F4E  006F FF8F FFE6     	movff	plusw1,postinc1
 30903  011F54  006F FF8F FFE6     	movff	plusw1,postinc1
 30904  011F5A  006F FF8F FFE6     	movff	plusw1,postinc1
 30905  011F60  ECC2  F000         	call	___fleq	;wreg free
 30906  011F64  A02A               	btfss	btemp& (0+255),0,c
 30907  011F66  D01B               	goto	l15726
 30908                           
 30909                           ;stkvar	_d @ sp[(-56)+44]
 30910  011F68  0EF4               	movlw	-12
 30911  011F6A  B0E3               	btfsc	plusw1,0,c
 30912  011F6C  D018               	goto	l15726
 30913  011F6E                     u14960:
 30914                           
 30915                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 433:             l = 0.0;
 30916  011F6E  0E00               	movlw	0
 30917  011F70  6E32               	movwf	(btemp+8)^0,c
 30918  011F72  0E00               	movlw	0
 30919  011F74  6E33               	movwf	(btemp+9)^0,c
 30920  011F76  0E00               	movlw	0
 30921  011F78  6E34               	movwf	(btemp+10)^0,c
 30922  011F7A  0E00               	movlw	0
 30923  011F7C  6E35               	movwf	(btemp+11)^0,c
 30924                           
 30925                           ;stkvar	_l @ sp[(-56)+20]
 30926  011F7E  0EDC               	movlw	-36
 30927  011F80  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 30928  011F86  0EDD               	movlw	-35
 30929  011F88  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 30930  011F8E  0EDE               	movlw	-34
 30931  011F90  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 30932  011F96  0EDF               	movlw	-33
 30933  011F98  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 30934  011F9E                     l15726:
 30935                           
 30936                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 438:     h = g + l;
 30937                           ;stkvar	_l @ sp[(-56)+20]
 30938  011F9E  0EDC               	movlw	-36
 30939  011FA0  006F FF8F FFE6     	movff	plusw1,postinc1
 30940  011FA6  006F FF8F FFE6     	movff	plusw1,postinc1
 30941  011FAC  006F FF8F FFE6     	movff	plusw1,postinc1
 30942  011FB2  006F FF8F FFE6     	movff	plusw1,postinc1
 30943                           
 30944                           ;stkvar	_g @ sp[(-60)+16]
 30945  011FB8  0ED4               	movlw	-44
 30946  011FBA  006F FF8F FFE6     	movff	plusw1,postinc1
 30947  011FC0  006F FF8F FFE6     	movff	plusw1,postinc1
 30948  011FC6  006F FF8F FFE6     	movff	plusw1,postinc1
 30949  011FCC  006F FF8F FFE6     	movff	plusw1,postinc1
 30950  011FD2  EC62  F0B6         	call	___fladd	;wreg free
 30951                           
 30952                           ;stkvar	_h @ sp[(-56)+24]
 30953  011FD6  0EE0               	movlw	-32
 30954  011FD8  0060  F0AB  FFE3   	movff	btemp,plusw1
 30955  011FDE  0EE1               	movlw	-31
 30956  011FE0  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 30957  011FE6  0EE2               	movlw	-30
 30958  011FE8  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 30959  011FEE  0EE3               	movlw	-29
 30960  011FF0  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 30961                           
 30962                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 441:     u = ou;
 30963                           ;stkvar	_ou @ sp[(-56)+28]
 30964  011FF6  0EE4               	movlw	-28
 30965  011FF8  006F FF8C  F032    	movff	plusw1,btemp+8
 30966  011FFE  0EE5               	movlw	-27
 30967  012000  006F FF8C  F033    	movff	plusw1,btemp+9
 30968  012006  0EE6               	movlw	-26
 30969  012008  006F FF8C  F034    	movff	plusw1,btemp+10
 30970  01200E  0EE7               	movlw	-25
 30971  012010  006F FF8C  F035    	movff	plusw1,btemp+11
 30972                           
 30973                           ;stkvar	_u @ sp[(-56)+12]
 30974  012016  0ED4               	movlw	-44
 30975  012018  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 30976  01201E  0ED5               	movlw	-43
 30977  012020  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 30978  012026  0ED6               	movlw	-42
 30979  012028  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 30980  01202E  0ED7               	movlw	-41
 30981  012030  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 30982                           
 30983                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 442:     ne = (nmode == 'e') 
      +                          ? 0 : e;
 30984                           ;stkvar	_nmode @ sp[(-56)+55]
 30985  012036  0EFF               	movlw	-1
 30986  012038  006F FF8C  F02A    	movff	plusw1,btemp
 30987  01203E  0E65               	movlw	101
 30988  012040  182A               	xorwf	btemp^0,w,c
 30989  012042  B4D8               	btfsc	status,2,c
 30990  012044  D011               	goto	l15734
 30991                           
 30992                           ;stkvar	_e @ sp[(-56)+34]
 30993                           ;stkvar	_ne @ sp[(-56)+46]
 30994  012046  0EEA               	movlw	-22
 30995  012048  006F FF8C  F02A    	movff	plusw1,btemp
 30996  01204E  0EF6               	movlw	-10
 30997  012050  0060  F0AB  FFE3   	movff	btemp,plusw1
 30998  012056  0EEB               	movlw	-21
 30999  012058  006F FF8C  F02A    	movff	plusw1,btemp
 31000  01205E  0EF7               	movlw	-9
 31001  012060  0060  F0AB  FFE3   	movff	btemp,plusw1
 31002  012066  D004               	goto	l2565
 31003  012068                     l15734:
 31004                           
 31005                           ;stkvar	_ne @ sp[(-56)+46]
 31006  012068  0EF6               	movlw	-10
 31007  01206A  6AE3               	clrf	plusw1,c
 31008  01206C  0EF7               	movlw	-9
 31009  01206E  6AE3               	clrf	plusw1,c
 31010  012070                     l2565:
 31011                           
 31012                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 443:     pp = 0;
 31013                           ;stkvar	_pp @ sp[(-56)+50]
 31014  012070  0EFA               	movlw	-6
 31015  012072  6AE3               	clrf	plusw1,c
 31016  012074  0EFB               	movlw	-5
 31017  012076  6AE3               	clrf	plusw1,c
 31018                           
 31019                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 444:     t = 0;
 31020                           ;stkvar	_t @ sp[(-56)+52]
 31021  012078  0EFC               	movlw	-4
 31022  01207A  6AE3               	clrf	plusw1,c
 31023  01207C  0EFD               	movlw	-3
 31024  01207E  6AE3               	clrf	plusw1,c
 31025                           
 31026                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 445:     i = 0;
 31027                           ;stkvar	_i @ sp[(-56)+36]
 31028  012080  0EEC               	movlw	-20
 31029  012082  6AE3               	clrf	plusw1,c
 31030  012084  0EED               	movlw	-19
 31031  012086  6AE3               	clrf	plusw1,c
 31032                           
 31033                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 31034  012088  D1B7               	goto	l15786
 31035  01208A                     l15736:
 31036                           
 31037                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 447:         l = floorf(h/u);
 31038                           ;stkvar	_u @ sp[(-56)+12]
 31039  01208A  0ED4               	movlw	-44
 31040  01208C  006F FF8F FFE6     	movff	plusw1,postinc1
 31041  012092  006F FF8F FFE6     	movff	plusw1,postinc1
 31042  012098  006F FF8F FFE6     	movff	plusw1,postinc1
 31043  01209E  006F FF8F FFE6     	movff	plusw1,postinc1
 31044                           
 31045                           ;stkvar	_h @ sp[(-60)+24]
 31046  0120A4  0EDC               	movlw	-36
 31047  0120A6  006F FF8F FFE6     	movff	plusw1,postinc1
 31048  0120AC  006F FF8F FFE6     	movff	plusw1,postinc1
 31049  0120B2  006F FF8F FFE6     	movff	plusw1,postinc1
 31050  0120B8  006F FF8F FFE6     	movff	plusw1,postinc1
 31051  0120BE  EC9E  F0BD         	call	___fldiv	;wreg free
 31052  0120C2  0060  F0AB  FFE6   	movff	btemp,postinc1
 31053  0120C8  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 31054  0120CE  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 31055  0120D4  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 31056  0120DA  EC82  F0CF         	call	_floorf	;wreg free
 31057                           
 31058                           ;stkvar	_l @ sp[(-56)+20]
 31059  0120DE  0EDC               	movlw	-36
 31060  0120E0  0060  F0AB  FFE3   	movff	btemp,plusw1
 31061  0120E6  0EDD               	movlw	-35
 31062  0120E8  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 31063  0120EE  0EDE               	movlw	-34
 31064  0120F0  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 31065  0120F6  0EDF               	movlw	-33
 31066  0120F8  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 31067                           
 31068                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 448:         d = (int)l;
 31069                           ;stkvar	_l @ sp[(-56)+20]
 31070  0120FE  0EDC               	movlw	-36
 31071  012100  006F FF8F FFE6     	movff	plusw1,postinc1
 31072  012106  006F FF8F FFE6     	movff	plusw1,postinc1
 31073  01210C  006F FF8F FFE6     	movff	plusw1,postinc1
 31074  012112  006F FF8F FFE6     	movff	plusw1,postinc1
 31075  012118  EC9D  F0F1         	call	___fltol	;wreg free
 31076  01211C  0060  F0A8  F034   	movff	btemp,btemp+10
 31077  012122  0060  F0AC  F035   	movff	btemp+1,btemp+11
 31078                           
 31079                           ;stkvar	_d @ sp[(-56)+44]
 31080  012128  0EF4               	movlw	-12
 31081  01212A  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 31082  012130  0EF5               	movlw	-11
 31083  012132  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 31084                           
 31085                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 449:         if (!(flags & (1
      +                           << 4)) && !d && (mode == 'g') && (ne < 0)) {
 31086  012138  B84E               	btfsc	_flags^0,4,c
 31087  01213A  D026               	goto	l15750
 31088                           
 31089                           ;stkvar	_d @ sp[(-56)+44]
 31090  01213C  0EF4               	movlw	-12
 31091  01213E  006F FF8C  F02A    	movff	plusw1,btemp
 31092  012144  0EF5               	movlw	-11
 31093  012146  50E3               	movf	plusw1,w,c
 31094  012148  102A               	iorwf	btemp^0,w,c
 31095  01214A  A4D8               	btfss	status,2,c
 31096  01214C  D01D               	goto	l15750
 31097                           
 31098                           ;stkvar	_mode @ sp[(-56)+54]
 31099  01214E  0EFE               	movlw	-2
 31100  012150  006F FF8C  F02A    	movff	plusw1,btemp
 31101  012156  0E67               	movlw	103
 31102  012158  182A               	xorwf	btemp^0,w,c
 31103  01215A  A4D8               	btfss	status,2,c
 31104  01215C  D015               	goto	l15750
 31105                           
 31106                           ;stkvar	_ne @ sp[(-56)+46]
 31107  01215E  0EF7               	movlw	-9
 31108  012160  AEE3               	btfss	plusw1,7,c
 31109  012162  D012               	goto	l15750
 31110                           
 31111                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 450:             ++t;
 31112                           ;stkvar	_t @ sp[(-56)+52]
 31113  012164  0EFC               	movlw	-4
 31114  012166  50E3               	movf	plusw1,w,c
 31115  012168  0F01               	addlw	1
 31116  01216A  6E2A               	movwf	btemp^0,c
 31117  01216C  0EFC               	movlw	-4
 31118  01216E  0060  F0AB  FFE3   	movff	btemp,plusw1
 31119  012174  6A2A               	clrf	btemp^0,c
 31120  012176  0EFD               	movlw	-3
 31121  012178  50E3               	movf	plusw1,w,c
 31122  01217A  202A               	addwfc	btemp^0,w,c
 31123  01217C  6E2A               	movwf	btemp^0,c
 31124  01217E  0EFD               	movlw	-3
 31125  012180  0060  F0AB  FFE3   	movff	btemp,plusw1
 31126                           
 31127                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 451:         } else {
 31128  012186  D0AF               	goto	l15778
 31129  012188                     l15750:
 31130                           
 31131                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 452:             if (!pp && (
      +                          ne < 0)) {
 31132                           ;stkvar	_pp @ sp[(-56)+50]
 31133  012188  0EFA               	movlw	-6
 31134  01218A  006F FF8C  F02A    	movff	plusw1,btemp
 31135  012190  0EFB               	movlw	-5
 31136  012192  50E3               	movf	plusw1,w,c
 31137  012194  102A               	iorwf	btemp^0,w,c
 31138  012196  A4D8               	btfss	status,2,c
 31139  012198  D070               	goto	l15770
 31140                           
 31141                           ;stkvar	_ne @ sp[(-56)+46]
 31142  01219A  0EF7               	movlw	-9
 31143  01219C  AEE3               	btfss	plusw1,7,c
 31144  01219E  D06D               	goto	l15770
 31145                           
 31146                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 453:                 dbuf[n++
      +                          ] = '.';
 31147                           ;stkvar	_n @ sp[(-56)+32]
 31148  0121A0  0EE8               	movlw	-24
 31149  0121A2  006F FF8C  F034    	movff	plusw1,btemp+10
 31150  0121A8  0EE9               	movlw	-23
 31151  0121AA  006F FF8C  F035    	movff	plusw1,btemp+11
 31152  0121B0  0E54               	movlw	low _dbuf
 31153  0121B2  2434               	addwf	(btemp+10)^0,w,c
 31154  0121B4  6ED9               	movwf	fsr2l,c
 31155  0121B6  0E03               	movlw	high _dbuf
 31156  0121B8  2035               	addwfc	(btemp+11)^0,w,c
 31157  0121BA  6EDA               	movwf	fsr2h,c
 31158  0121BC  0E2E               	movlw	46
 31159  0121BE  6EDF               	movwf	indf2,c
 31160                           
 31161                           ;stkvar	_n @ sp[(-56)+32]
 31162  0121C0  0EE8               	movlw	-24
 31163  0121C2  50E3               	movf	plusw1,w,c
 31164  0121C4  0F01               	addlw	1
 31165  0121C6  6E2A               	movwf	btemp^0,c
 31166  0121C8  0EE8               	movlw	-24
 31167  0121CA  0060  F0AB  FFE3   	movff	btemp,plusw1
 31168  0121D0  6A2A               	clrf	btemp^0,c
 31169  0121D2  0EE9               	movlw	-23
 31170  0121D4  50E3               	movf	plusw1,w,c
 31171  0121D6  202A               	addwfc	btemp^0,w,c
 31172  0121D8  6E2A               	movwf	btemp^0,c
 31173  0121DA  0EE9               	movlw	-23
 31174  0121DC  0060  F0AB  FFE3   	movff	btemp,plusw1
 31175                           
 31176                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 454:                 --w;
 31177                           ;stkvar	_w @ sp[(-56)+38]
 31178  0121E2  50E1               	movf	fsr1l,w,c
 31179  0121E4  0FEE               	addlw	-18
 31180  0121E6  6ED9               	movwf	fsr2l,c
 31181  0121E8  50E2               	movf	fsr1h,w,c
 31182  0121EA  6EDA               	movwf	fsr2h,c
 31183  0121EC  0EFF               	movlw	255
 31184  0121EE  22DA               	addwfc	fsr2h,f,c
 31185  0121F0  06DE               	decf	postinc2,f,c
 31186  0121F2  0E00               	movlw	0
 31187  0121F4  5ADD               	subwfb	postdec2,f,c
 31188                           
 31189                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 455:                 pp = 1;
 31190  0121F6  0E01               	movlw	1
 31191  0121F8  6E34               	movwf	(btemp+10)^0,c
 31192  0121FA  0E00               	movlw	0
 31193  0121FC  6E35               	movwf	(btemp+11)^0,c
 31194                           
 31195                           ;stkvar	_pp @ sp[(-56)+50]
 31196  0121FE  0EFA               	movlw	-6
 31197  012200  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 31198  012206  0EFB               	movlw	-5
 31199  012208  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 31200  01220E  D035               	goto	l15770
 31201  012210                     l15762:
 31202                           
 31203                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 458:                 dbuf[n++
      +                          ] = '0';
 31204                           ;stkvar	_n @ sp[(-56)+32]
 31205  012210  0EE8               	movlw	-24
 31206  012212  006F FF8C  F034    	movff	plusw1,btemp+10
 31207  012218  0EE9               	movlw	-23
 31208  01221A  006F FF8C  F035    	movff	plusw1,btemp+11
 31209  012220  0E54               	movlw	low _dbuf
 31210  012222  2434               	addwf	(btemp+10)^0,w,c
 31211  012224  6ED9               	movwf	fsr2l,c
 31212  012226  0E03               	movlw	high _dbuf
 31213  012228  2035               	addwfc	(btemp+11)^0,w,c
 31214  01222A  6EDA               	movwf	fsr2h,c
 31215  01222C  0E30               	movlw	48
 31216  01222E  6EDF               	movwf	indf2,c
 31217                           
 31218                           ;stkvar	_n @ sp[(-56)+32]
 31219  012230  0EE8               	movlw	-24
 31220  012232  50E3               	movf	plusw1,w,c
 31221  012234  0F01               	addlw	1
 31222  012236  6E2A               	movwf	btemp^0,c
 31223  012238  0EE8               	movlw	-24
 31224  01223A  0060  F0AB  FFE3   	movff	btemp,plusw1
 31225  012240  6A2A               	clrf	btemp^0,c
 31226  012242  0EE9               	movlw	-23
 31227  012244  50E3               	movf	plusw1,w,c
 31228  012246  202A               	addwfc	btemp^0,w,c
 31229  012248  6E2A               	movwf	btemp^0,c
 31230  01224A  0EE9               	movlw	-23
 31231  01224C  0060  F0AB  FFE3   	movff	btemp,plusw1
 31232                           
 31233                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 459:                 --w;
 31234                           ;stkvar	_w @ sp[(-56)+38]
 31235  012252  50E1               	movf	fsr1l,w,c
 31236  012254  0FEE               	addlw	-18
 31237  012256  6ED9               	movwf	fsr2l,c
 31238  012258  50E2               	movf	fsr1h,w,c
 31239  01225A  6EDA               	movwf	fsr2h,c
 31240  01225C  0EFF               	movlw	255
 31241  01225E  22DA               	addwfc	fsr2h,f,c
 31242  012260  06DE               	decf	postinc2,f,c
 31243  012262  0E00               	movlw	0
 31244  012264  5ADD               	subwfb	postdec2,f,c
 31245                           
 31246                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 460:                 --t;
 31247                           ;stkvar	_t @ sp[(-56)+52]
 31248  012266  50E1               	movf	fsr1l,w,c
 31249  012268  0FFC               	addlw	-4
 31250  01226A  6ED9               	movwf	fsr2l,c
 31251  01226C  50E2               	movf	fsr1h,w,c
 31252  01226E  6EDA               	movwf	fsr2h,c
 31253  012270  0EFF               	movlw	255
 31254  012272  22DA               	addwfc	fsr2h,f,c
 31255  012274  06DE               	decf	postinc2,f,c
 31256  012276  0E00               	movlw	0
 31257  012278  5ADD               	subwfb	postdec2,f,c
 31258  01227A                     l15770:
 31259                           
 31260                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 457:             while (t) {
 31261                           ;stkvar	_t @ sp[(-56)+52]
 31262  01227A  0EFC               	movlw	-4
 31263  01227C  006F FF8C  F02A    	movff	plusw1,btemp
 31264  012282  0EFD               	movlw	-3
 31265  012284  50E3               	movf	plusw1,w,c
 31266  012286  102A               	iorwf	btemp^0,w,c
 31267  012288  A4D8               	btfss	status,2,c
 31268  01228A  D7C2               	goto	l15762
 31269                           
 31270                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 462:             dbuf[n++] = 
      +                          '0' + d;
 31271                           ;stkvar	_n @ sp[(-56)+32]
 31272  01228C  0EE8               	movlw	-24
 31273  01228E  006F FF8C  F034    	movff	plusw1,btemp+10
 31274  012294  0EE9               	movlw	-23
 31275  012296  006F FF8C  F035    	movff	plusw1,btemp+11
 31276  01229C  0E54               	movlw	low _dbuf
 31277  01229E  2434               	addwf	(btemp+10)^0,w,c
 31278  0122A0  6ED9               	movwf	fsr2l,c
 31279  0122A2  0E03               	movlw	high _dbuf
 31280  0122A4  2035               	addwfc	(btemp+11)^0,w,c
 31281  0122A6  6EDA               	movwf	fsr2h,c
 31282                           
 31283                           ;stkvar	_d @ sp[(-56)+44]
 31284  0122A8  0EF4               	movlw	-12
 31285  0122AA  50E3               	movf	plusw1,w,c
 31286  0122AC  0F30               	addlw	48
 31287  0122AE  6EDF               	movwf	indf2,c
 31288                           
 31289                           ;stkvar	_n @ sp[(-56)+32]
 31290  0122B0  0EE8               	movlw	-24
 31291  0122B2  50E3               	movf	plusw1,w,c
 31292  0122B4  0F01               	addlw	1
 31293  0122B6  6E2A               	movwf	btemp^0,c
 31294  0122B8  0EE8               	movlw	-24
 31295  0122BA  0060  F0AB  FFE3   	movff	btemp,plusw1
 31296  0122C0  6A2A               	clrf	btemp^0,c
 31297  0122C2  0EE9               	movlw	-23
 31298  0122C4  50E3               	movf	plusw1,w,c
 31299  0122C6  202A               	addwfc	btemp^0,w,c
 31300  0122C8  6E2A               	movwf	btemp^0,c
 31301  0122CA  0EE9               	movlw	-23
 31302  0122CC  0060  F0AB  FFE3   	movff	btemp,plusw1
 31303                           
 31304                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 463:             --w;
 31305                           ;stkvar	_w @ sp[(-56)+38]
 31306  0122D2  50E1               	movf	fsr1l,w,c
 31307  0122D4  0FEE               	addlw	-18
 31308  0122D6  6ED9               	movwf	fsr2l,c
 31309  0122D8  50E2               	movf	fsr1h,w,c
 31310  0122DA  6EDA               	movwf	fsr2h,c
 31311  0122DC  0EFF               	movlw	255
 31312  0122DE  22DA               	addwfc	fsr2h,f,c
 31313  0122E0  06DE               	decf	postinc2,f,c
 31314  0122E2  0E00               	movlw	0
 31315  0122E4  5ADD               	subwfb	postdec2,f,c
 31316  0122E6                     l15778:
 31317                           
 31318                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 465:         h -= l*u;
 31319                           ;stkvar	_u @ sp[(-56)+12]
 31320  0122E6  0ED4               	movlw	-44
 31321  0122E8  006F FF8F FFE6     	movff	plusw1,postinc1
 31322  0122EE  006F FF8F FFE6     	movff	plusw1,postinc1
 31323  0122F4  006F FF8F FFE6     	movff	plusw1,postinc1
 31324  0122FA  006F FF8F FFE6     	movff	plusw1,postinc1
 31325                           
 31326                           ;stkvar	_l @ sp[(-60)+20]
 31327  012300  0ED8               	movlw	-40
 31328  012302  006F FF8F FFE6     	movff	plusw1,postinc1
 31329  012308  006F FF8F FFE6     	movff	plusw1,postinc1
 31330  01230E  006F FF8F FFE6     	movff	plusw1,postinc1
 31331  012314  006F FF8F FFE6     	movff	plusw1,postinc1
 31332  01231A  EC4D  F0B2         	call	___flmul	;wreg free
 31333  01231E  0060  F0AB  FFE6   	movff	btemp,postinc1
 31334  012324  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 31335  01232A  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 31336  012330  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 31337                           
 31338                           ;stkvar	_h @ sp[(-60)+24]
 31339  012336  0EDC               	movlw	-36
 31340  012338  006F FF8F FFE6     	movff	plusw1,postinc1
 31341  01233E  006F FF8F FFE6     	movff	plusw1,postinc1
 31342  012344  006F FF8F FFE6     	movff	plusw1,postinc1
 31343  01234A  006F FF8F FFE6     	movff	plusw1,postinc1
 31344  012350  EC54  F00D         	call	___flsub	;wreg free
 31345                           
 31346                           ;stkvar	_h @ sp[(-56)+24]
 31347  012354  0EE0               	movlw	-32
 31348  012356  0060  F0AB  FFE3   	movff	btemp,plusw1
 31349  01235C  0EE1               	movlw	-31
 31350  01235E  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 31351  012364  0EE2               	movlw	-30
 31352  012366  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 31353  01236C  0EE3               	movlw	-29
 31354  01236E  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 31355                           
 31356                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 466:         u = u/10.0;
 31357  012374  0E00               	movlw	0
 31358  012376  6EE6               	movwf	postinc1,c
 31359  012378  0E00               	movlw	0
 31360  01237A  6EE6               	movwf	postinc1,c
 31361  01237C  0E20               	movlw	32
 31362  01237E  6EE6               	movwf	postinc1,c
 31363  012380  0E41               	movlw	65
 31364  012382  6EE6               	movwf	postinc1,c
 31365                           
 31366                           ;stkvar	_u @ sp[(-60)+12]
 31367  012384  0ED0               	movlw	-48
 31368  012386  006F FF8F FFE6     	movff	plusw1,postinc1
 31369  01238C  006F FF8F FFE6     	movff	plusw1,postinc1
 31370  012392  006F FF8F FFE6     	movff	plusw1,postinc1
 31371  012398  006F FF8F FFE6     	movff	plusw1,postinc1
 31372  01239E  EC9E  F0BD         	call	___fldiv	;wreg free
 31373                           
 31374                           ;stkvar	_u @ sp[(-56)+12]
 31375  0123A2  0ED4               	movlw	-44
 31376  0123A4  0060  F0AB  FFE3   	movff	btemp,plusw1
 31377  0123AA  0ED5               	movlw	-43
 31378  0123AC  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 31379  0123B2  0ED6               	movlw	-42
 31380  0123B4  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 31381  0123BA  0ED7               	movlw	-41
 31382  0123BC  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 31383                           
 31384                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 467:         --ne;
 31385                           ;stkvar	_ne @ sp[(-56)+46]
 31386  0123C2  50E1               	movf	fsr1l,w,c
 31387  0123C4  0FF6               	addlw	-10
 31388  0123C6  6ED9               	movwf	fsr2l,c
 31389  0123C8  50E2               	movf	fsr1h,w,c
 31390  0123CA  6EDA               	movwf	fsr2h,c
 31391  0123CC  0EFF               	movlw	255
 31392  0123CE  22DA               	addwfc	fsr2h,f,c
 31393  0123D0  06DE               	decf	postinc2,f,c
 31394  0123D2  0E00               	movlw	0
 31395  0123D4  5ADD               	subwfb	postdec2,f,c
 31396                           
 31397                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 468:         ++i;
 31398                           ;stkvar	_i @ sp[(-56)+36]
 31399  0123D6  0EEC               	movlw	-20
 31400  0123D8  50E3               	movf	plusw1,w,c
 31401  0123DA  0F01               	addlw	1
 31402  0123DC  6E2A               	movwf	btemp^0,c
 31403  0123DE  0EEC               	movlw	-20
 31404  0123E0  0060  F0AB  FFE3   	movff	btemp,plusw1
 31405  0123E6  6A2A               	clrf	btemp^0,c
 31406  0123E8  0EED               	movlw	-19
 31407  0123EA  50E3               	movf	plusw1,w,c
 31408  0123EC  202A               	addwfc	btemp^0,w,c
 31409  0123EE  6E2A               	movwf	btemp^0,c
 31410  0123F0  0EED               	movlw	-19
 31411  0123F2  0060  F0AB  FFE3   	movff	btemp,plusw1
 31412  0123F8                     l15786:
 31413                           
 31414                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 31415                           ;stkvar	_m @ sp[(-56)+48]
 31416                           ;stkvar	_i @ sp[(-56)+36]
 31417  0123F8  50E1               	movf	fsr1l,w,c
 31418  0123FA  0FEC               	addlw	-20
 31419  0123FC  6ED9               	movwf	fsr2l,c
 31420  0123FE  50E2               	movf	fsr1h,w,c
 31421  012400  6EDA               	movwf	fsr2h,c
 31422  012402  0EFF               	movlw	255
 31423  012404  22DA               	addwfc	fsr2h,f,c
 31424  012406  0EF8               	movlw	-8
 31425  012408  50E3               	movf	plusw1,w,c
 31426  01240A  5CDE               	subwf	postinc2,w,c
 31427  01240C  50DE               	movf	postinc2,w,c
 31428  01240E  0A80               	xorlw	128
 31429  012410  6E2A               	movwf	btemp^0,c
 31430  012412  0EF9               	movlw	-7
 31431  012414  50E3               	movf	plusw1,w,c
 31432  012416  0A80               	xorlw	128
 31433  012418  582A               	subwfb	btemp^0,w,c
 31434  01241A  B0D8               	btfsc	status,0,c
 31435  01241C  D00E               	goto	u15060
 31436                           
 31437                           ;stkvar	_n @ sp[(-56)+32]
 31438  01241E  0EE9               	movlw	-23
 31439  012420  BEE3               	btfsc	plusw1,7,c
 31440  012422  D633               	goto	l15736
 31441  012424  0EE9               	movlw	-23
 31442  012426  50E3               	movf	plusw1,w,c
 31443  012428  E108               	bnz	u15060
 31444  01242A  0EE8               	movlw	-24
 31445  01242C  006F FF8C  F02A    	movff	plusw1,btemp
 31446  012432  0E4B               	movlw	75
 31447  012434  5E2A               	subwf	btemp^0,f,c
 31448  012436  A0D8               	btfss	status,0,c
 31449  012438  D628               	goto	l15736
 31450  01243A                     u15060:
 31451                           
 31452                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 470:     if (!pp && (flags & 
      +                          (1 << 4))) {
 31453                           ;stkvar	_pp @ sp[(-56)+50]
 31454  01243A  0EFA               	movlw	-6
 31455  01243C  006F FF8C  F02A    	movff	plusw1,btemp
 31456  012442  0EFB               	movlw	-5
 31457  012444  50E3               	movf	plusw1,w,c
 31458  012446  102A               	iorwf	btemp^0,w,c
 31459  012448  B4D8               	btfsc	status,2,c
 31460  01244A  A84E               	btfss	_flags^0,4,c
 31461  01244C  D021               	goto	l15798
 31462                           
 31463                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 471:         dbuf[n++] = '.';
 31464                           ;stkvar	_n @ sp[(-56)+32]
 31465  01244E  0EE8               	movlw	-24
 31466  012450  006F FF8C  F034    	movff	plusw1,btemp+10
 31467  012456  0EE9               	movlw	-23
 31468  012458  006F FF8C  F035    	movff	plusw1,btemp+11
 31469  01245E  0E54               	movlw	low _dbuf
 31470  012460  2434               	addwf	(btemp+10)^0,w,c
 31471  012462  6ED9               	movwf	fsr2l,c
 31472  012464  0E03               	movlw	high _dbuf
 31473  012466  2035               	addwfc	(btemp+11)^0,w,c
 31474  012468  6EDA               	movwf	fsr2h,c
 31475  01246A  0E2E               	movlw	46
 31476  01246C  6EDF               	movwf	indf2,c
 31477                           
 31478                           ;stkvar	_n @ sp[(-56)+32]
 31479  01246E  0EE8               	movlw	-24
 31480  012470  50E3               	movf	plusw1,w,c
 31481  012472  0F01               	addlw	1
 31482  012474  6E2A               	movwf	btemp^0,c
 31483  012476  0EE8               	movlw	-24
 31484  012478  0060  F0AB  FFE3   	movff	btemp,plusw1
 31485  01247E  6A2A               	clrf	btemp^0,c
 31486  012480  0EE9               	movlw	-23
 31487  012482  50E3               	movf	plusw1,w,c
 31488  012484  202A               	addwfc	btemp^0,w,c
 31489  012486  6E2A               	movwf	btemp^0,c
 31490  012488  0EE9               	movlw	-23
 31491  01248A  0060  F0AB  FFE3   	movff	btemp,plusw1
 31492  012490                     l15798:
 31493                           
 31494                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 473:     dbuf[n] = '\0';
 31495                           ;stkvar	_n @ sp[(-56)+32]
 31496  012490  0EE8               	movlw	-24
 31497  012492  006F FF8C  F034    	movff	plusw1,btemp+10
 31498  012498  0EE9               	movlw	-23
 31499  01249A  006F FF8C  F035    	movff	plusw1,btemp+11
 31500  0124A0  0E54               	movlw	low _dbuf
 31501  0124A2  2434               	addwf	(btemp+10)^0,w,c
 31502  0124A4  6ED9               	movwf	fsr2l,c
 31503  0124A6  0E03               	movlw	high _dbuf
 31504  0124A8  2035               	addwfc	(btemp+11)^0,w,c
 31505  0124AA  6EDA               	movwf	fsr2h,c
 31506  0124AC  0E00               	movlw	0
 31507  0124AE  6EDF               	movwf	indf2,c
 31508                           
 31509                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 476:     if (nmode == 'e') {
 31510                           ;stkvar	_nmode @ sp[(-56)+55]
 31511  0124B0  0EFF               	movlw	-1
 31512  0124B2  006F FF8C  F02A    	movff	plusw1,btemp
 31513  0124B8  0E65               	movlw	101
 31514  0124BA  182A               	xorwf	btemp^0,w,c
 31515  0124BC  A4D8               	btfss	status,2,c
 31516  0124BE  EFC1  F08B         	goto	l15602
 31517                           
 31518                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 477:         i = sizeof(dbuf)
      +                           - 1;
 31519  0124C2  0E4F               	movlw	79
 31520  0124C4  6E34               	movwf	(btemp+10)^0,c
 31521  0124C6  0E00               	movlw	0
 31522  0124C8  6E35               	movwf	(btemp+11)^0,c
 31523                           
 31524                           ;stkvar	_i @ sp[(-56)+36]
 31525  0124CA  0EEC               	movlw	-20
 31526  0124CC  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 31527  0124D2  0EED               	movlw	-19
 31528  0124D4  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 31529                           
 31530                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 478:         dbuf[i] = '\0';
 31531                           ;stkvar	_i @ sp[(-56)+36]
 31532  0124DA  0EEC               	movlw	-20
 31533  0124DC  006F FF8C  F034    	movff	plusw1,btemp+10
 31534  0124E2  0EED               	movlw	-19
 31535  0124E4  006F FF8C  F035    	movff	plusw1,btemp+11
 31536  0124EA  0E54               	movlw	low _dbuf
 31537  0124EC  2434               	addwf	(btemp+10)^0,w,c
 31538  0124EE  6ED9               	movwf	fsr2l,c
 31539  0124F0  0E03               	movlw	high _dbuf
 31540  0124F2  2035               	addwfc	(btemp+11)^0,w,c
 31541  0124F4  6EDA               	movwf	fsr2h,c
 31542  0124F6  0E00               	movlw	0
 31543  0124F8  6EDF               	movwf	indf2,c
 31544                           
 31545                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 479:         sign = 0;
 31546                           ;stkvar	_sign @ sp[(-56)+42]
 31547  0124FA  0EF2               	movlw	-14
 31548  0124FC  6AE3               	clrf	plusw1,c
 31549  0124FE  0EF3               	movlw	-13
 31550  012500  6AE3               	clrf	plusw1,c
 31551                           
 31552                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 480:         if (e < 0) {
 31553                           ;stkvar	_e @ sp[(-56)+34]
 31554  012502  0EEB               	movlw	-21
 31555  012504  AEE3               	btfss	plusw1,7,c
 31556  012506  D012               	goto	l15812
 31557                           
 31558                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 481:             sign = 1;
 31559  012508  0E01               	movlw	1
 31560  01250A  6E34               	movwf	(btemp+10)^0,c
 31561  01250C  0E00               	movlw	0
 31562  01250E  6E35               	movwf	(btemp+11)^0,c
 31563                           
 31564                           ;stkvar	_sign @ sp[(-56)+42]
 31565  012510  0EF2               	movlw	-14
 31566  012512  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 31567  012518  0EF3               	movlw	-13
 31568  01251A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 31569                           
 31570                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 482:             e = -e;
 31571                           ;stkvar	_e @ sp[(-56)+34]
 31572                           ;stkvar	_e @ sp[(-56)+34]
 31573  012520  0EEA               	movlw	-22
 31574  012522  6CE3               	negf	plusw1,c
 31575  012524  0EEB               	movlw	-21
 31576  012526  1EE3               	comf	plusw1,f,c
 31577  012528  B0D8               	btfsc	status,0,c
 31578  01252A  2AE3               	incf	plusw1,f,c
 31579  01252C                     l15812:
 31580                           
 31581                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 484:         p = 2;
 31582  01252C  0E02               	movlw	2
 31583  01252E  6E34               	movwf	(btemp+10)^0,c
 31584  012530  0E00               	movlw	0
 31585  012532  6E35               	movwf	(btemp+11)^0,c
 31586                           
 31587                           ;stkvar	_p @ sp[(-56)+40]
 31588  012534  0EF0               	movlw	-16
 31589  012536  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 31590  01253C  0EF1               	movlw	-15
 31591  01253E  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 31592                           
 31593                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 31594  012544  D051               	goto	l15824
 31595  012546                     l15814:
 31596                           
 31597                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 486:             --i;
 31598                           ;stkvar	_i @ sp[(-56)+36]
 31599  012546  50E1               	movf	fsr1l,w,c
 31600  012548  0FEC               	addlw	-20
 31601  01254A  6ED9               	movwf	fsr2l,c
 31602  01254C  50E2               	movf	fsr1h,w,c
 31603  01254E  6EDA               	movwf	fsr2h,c
 31604  012550  0EFF               	movlw	255
 31605  012552  22DA               	addwfc	fsr2h,f,c
 31606  012554  06DE               	decf	postinc2,f,c
 31607  012556  0E00               	movlw	0
 31608  012558  5ADD               	subwfb	postdec2,f,c
 31609                           
 31610                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 487:             dbuf[i] = '0
      +                          ' + (e % 10);
 31611                           ;stkvar	_i @ sp[(-56)+36]
 31612  01255A  0EEC               	movlw	-20
 31613  01255C  006F FF8C  F034    	movff	plusw1,btemp+10
 31614  012562  0EED               	movlw	-19
 31615  012564  006F FF8C  F035    	movff	plusw1,btemp+11
 31616  01256A  0E54               	movlw	low _dbuf
 31617  01256C  2434               	addwf	(btemp+10)^0,w,c
 31618  01256E  6ED9               	movwf	fsr2l,c
 31619  012570  0E03               	movlw	high _dbuf
 31620  012572  2035               	addwfc	(btemp+11)^0,w,c
 31621  012574  6EDA               	movwf	fsr2h,c
 31622  012576  0E0A               	movlw	10
 31623  012578  6EE6               	movwf	postinc1,c
 31624  01257A  0E00               	movlw	0
 31625  01257C  6EE6               	movwf	postinc1,c
 31626                           
 31627                           ;stkvar	_e @ sp[(-58)+34]
 31628  01257E  0EE8               	movlw	-24
 31629  012580  006F FF8F FFE6     	movff	plusw1,postinc1
 31630  012586  006F FF8F FFE6     	movff	plusw1,postinc1
 31631  01258C  ECA3  F0FA         	call	___awmod	;wreg free
 31632  012590  502A               	movf	btemp^0,w,c
 31633  012592  0F30               	addlw	48
 31634  012594  6EDF               	movwf	indf2,c
 31635                           
 31636                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 488:             e = e / 10;
 31637  012596  0E0A               	movlw	10
 31638  012598  6EE6               	movwf	postinc1,c
 31639  01259A  0E00               	movlw	0
 31640  01259C  6EE6               	movwf	postinc1,c
 31641                           
 31642                           ;stkvar	_e @ sp[(-58)+34]
 31643  01259E  0EE8               	movlw	-24
 31644  0125A0  006F FF8F FFE6     	movff	plusw1,postinc1
 31645  0125A6  006F FF8F FFE6     	movff	plusw1,postinc1
 31646  0125AC  EC74  F0F6         	call	___awdiv	;wreg free
 31647                           
 31648                           ;stkvar	_e @ sp[(-56)+34]
 31649  0125B0  0EEA               	movlw	-22
 31650  0125B2  0060  F0AB  FFE3   	movff	btemp,plusw1
 31651  0125B8  0EEB               	movlw	-21
 31652  0125BA  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 31653                           
 31654                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 489:             --p;
 31655                           ;stkvar	_p @ sp[(-56)+40]
 31656  0125C0  50E1               	movf	fsr1l,w,c
 31657  0125C2  0FF0               	addlw	-16
 31658  0125C4  6ED9               	movwf	fsr2l,c
 31659  0125C6  50E2               	movf	fsr1h,w,c
 31660  0125C8  6EDA               	movwf	fsr2h,c
 31661  0125CA  0EFF               	movlw	255
 31662  0125CC  22DA               	addwfc	fsr2h,f,c
 31663  0125CE  06DE               	decf	postinc2,f,c
 31664  0125D0  0E00               	movlw	0
 31665  0125D2  5ADD               	subwfb	postdec2,f,c
 31666                           
 31667                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 490:             --w;
 31668                           ;stkvar	_w @ sp[(-56)+38]
 31669  0125D4  50E1               	movf	fsr1l,w,c
 31670  0125D6  0FEE               	addlw	-18
 31671  0125D8  6ED9               	movwf	fsr2l,c
 31672  0125DA  50E2               	movf	fsr1h,w,c
 31673  0125DC  6EDA               	movwf	fsr2h,c
 31674  0125DE  0EFF               	movlw	255
 31675  0125E0  22DA               	addwfc	fsr2h,f,c
 31676  0125E2  06DE               	decf	postinc2,f,c
 31677  0125E4  0E00               	movlw	0
 31678  0125E6  5ADD               	subwfb	postdec2,f,c
 31679  0125E8                     l15824:
 31680                           
 31681                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 31682                           ;stkvar	_e @ sp[(-56)+34]
 31683  0125E8  0EEA               	movlw	-22
 31684  0125EA  006F FF8C  F02A    	movff	plusw1,btemp
 31685  0125F0  0EEB               	movlw	-21
 31686  0125F2  50E3               	movf	plusw1,w,c
 31687  0125F4  102A               	iorwf	btemp^0,w,c
 31688  0125F6  A4D8               	btfss	status,2,c
 31689  0125F8  D7A6               	goto	l15814
 31690                           
 31691                           ;stkvar	_p @ sp[(-56)+40]
 31692  0125FA  0EF1               	movlw	-15
 31693  0125FC  BEE3               	btfsc	plusw1,7,c
 31694  0125FE  D007               	goto	u15120
 31695  012600  0EF1               	movlw	-15
 31696  012602  50E3               	movf	plusw1,w,c
 31697  012604  E1A0               	bnz	l15814
 31698  012606  0EF0               	movlw	-16
 31699  012608  04E3               	decf	plusw1,w,c
 31700  01260A  B0D8               	btfsc	status,0,c
 31701  01260C  D79C               	goto	l15814
 31702  01260E                     u15120:
 31703                           
 31704                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 492:         --i;
 31705                           ;stkvar	_i @ sp[(-56)+36]
 31706  01260E  50E1               	movf	fsr1l,w,c
 31707  012610  0FEC               	addlw	-20
 31708  012612  6ED9               	movwf	fsr2l,c
 31709  012614  50E2               	movf	fsr1h,w,c
 31710  012616  6EDA               	movwf	fsr2h,c
 31711  012618  0EFF               	movlw	255
 31712  01261A  22DA               	addwfc	fsr2h,f,c
 31713  01261C  06DE               	decf	postinc2,f,c
 31714  01261E  0E00               	movlw	0
 31715  012620  5ADD               	subwfb	postdec2,f,c
 31716                           
 31717                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 493:         dbuf[i] = sign ?
      +                           '-' : '+';
 31718                           ;stkvar	_sign @ sp[(-56)+42]
 31719  012622  0EF2               	movlw	-14
 31720  012624  006F FF8C  F02A    	movff	plusw1,btemp
 31721  01262A  0EF3               	movlw	-13
 31722  01262C  50E3               	movf	plusw1,w,c
 31723  01262E  102A               	iorwf	btemp^0,w,c
 31724  012630  A4D8               	btfss	status,2,c
 31725  012632  D002               	goto	l15834
 31726  012634  0E2B               	movlw	43
 31727  012636  D001               	goto	L33
 31728  012638                     l15834:
 31729  012638  0E2D               	movlw	45
 31730  01263A                     L33:
 31731  01263A  6E34               	movwf	(btemp+10)^0,c
 31732  01263C  0E00               	movlw	0
 31733  01263E  6E35               	movwf	(btemp+11)^0,c
 31734                           
 31735                           ;stkvar	_efgtoa$6617 @ sp[(-56)+4]
 31736  012640  0ECC               	movlw	-52
 31737  012642  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 31738  012648  0ECD               	movlw	-51
 31739  01264A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 31740                           
 31741                           ;stkvar	_efgtoa$6617 @ sp[(-56)+4]
 31742                           ;stkvar	_i @ sp[(-56)+36]
 31743  012650  0EEC               	movlw	-20
 31744  012652  006F FF8C  F034    	movff	plusw1,btemp+10
 31745  012658  0EED               	movlw	-19
 31746  01265A  006F FF8C  F035    	movff	plusw1,btemp+11
 31747  012660  0E54               	movlw	low _dbuf
 31748  012662  2434               	addwf	(btemp+10)^0,w,c
 31749  012664  6ED9               	movwf	fsr2l,c
 31750  012666  0E03               	movlw	high _dbuf
 31751  012668  2035               	addwfc	(btemp+11)^0,w,c
 31752  01266A  6EDA               	movwf	fsr2h,c
 31753  01266C  0ECC               	movlw	-52
 31754  01266E  006F FF8F FFDF     	movff	plusw1,indf2
 31755                           
 31756                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 494:         --w;
 31757                           ;stkvar	_w @ sp[(-56)+38]
 31758  012674  50E1               	movf	fsr1l,w,c
 31759  012676  0FEE               	addlw	-18
 31760  012678  6ED9               	movwf	fsr2l,c
 31761  01267A  50E2               	movf	fsr1h,w,c
 31762  01267C  6EDA               	movwf	fsr2h,c
 31763  01267E  0EFF               	movlw	255
 31764  012680  22DA               	addwfc	fsr2h,f,c
 31765  012682  06DE               	decf	postinc2,f,c
 31766  012684  0E00               	movlw	0
 31767  012686  5ADD               	subwfb	postdec2,f,c
 31768                           
 31769                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 496:         dbuf[i] = (0 ? i
      +                          supper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
 31770                           ;stkvar	_i @ sp[(-56)+36]
 31771  012688  50E1               	movf	fsr1l,w,c
 31772  01268A  0FEC               	addlw	-20
 31773  01268C  6ED9               	movwf	fsr2l,c
 31774  01268E  50E2               	movf	fsr1h,w,c
 31775  012690  6EDA               	movwf	fsr2h,c
 31776  012692  0EFF               	movlw	255
 31777  012694  22DA               	addwfc	fsr2h,f,c
 31778  012696  06DE               	decf	postinc2,f,c
 31779  012698  0E00               	movlw	0
 31780  01269A  5ADD               	subwfb	postdec2,f,c
 31781  01269C  0EBF               	movlw	191
 31782  01269E  6E34               	movwf	(btemp+10)^0,c
 31783  0126A0  0EFF               	movlw	255
 31784  0126A2  6E35               	movwf	(btemp+11)^0,c
 31785                           
 31786                           ;stkvar	_c @ sp[(-56)+-7]
 31787  0126A4  0EC1               	movlw	-63
 31788  0126A6  50E3               	movf	plusw1,w,c
 31789  0126A8  6E32               	movwf	(btemp+8)^0,c
 31790  0126AA  6A33               	clrf	(btemp+9)^0,c
 31791  0126AC  5034               	movf	(btemp+10)^0,w,c
 31792  0126AE  2632               	addwf	(btemp+8)^0,f,c
 31793  0126B0  5035               	movf	(btemp+11)^0,w,c
 31794  0126B2  2233               	addwfc	(btemp+9)^0,f,c
 31795  0126B4  5033               	movf	(btemp+9)^0,w,c
 31796  0126B6  E106               	bnz	u15140
 31797  0126B8  0E1A               	movlw	26
 31798  0126BA  5C32               	subwf	(btemp+8)^0,w,c
 31799  0126BC  B0D8               	btfsc	status,0,c
 31800  0126BE  D002               	goto	u15140
 31801  0126C0  0E01               	movlw	1
 31802  0126C2  D001               	goto	u15150
 31803  0126C4                     u15140:
 31804  0126C4  0E00               	movlw	0
 31805  0126C6                     u15150:
 31806  0126C6  6E34               	movwf	(btemp+10)^0,c
 31807  0126C8  6A35               	clrf	(btemp+11)^0,c
 31808                           
 31809                           ;stkvar	_efgtoa$6619 @ sp[(-56)+0]
 31810  0126CA  0EC8               	movlw	-56
 31811  0126CC  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 31812  0126D2  0EC9               	movlw	-55
 31813  0126D4  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 31814                           
 31815                           ;stkvar	_efgtoa$6619 @ sp[(-56)+0]
 31816  0126DA  0EC8               	movlw	-56
 31817  0126DC  006F FF8C  F02A    	movff	plusw1,btemp
 31818  0126E2  0EC9               	movlw	-55
 31819  0126E4  50E3               	movf	plusw1,w,c
 31820  0126E6  102A               	iorwf	btemp^0,w,c
 31821  0126E8  A4D8               	btfss	status,2,c
 31822  0126EA  D002               	goto	l15850
 31823  0126EC  0E65               	movlw	101
 31824  0126EE  D001               	goto	L34
 31825  0126F0                     l15850:
 31826  0126F0  0E45               	movlw	69
 31827  0126F2                     L34:
 31828  0126F2  6E34               	movwf	(btemp+10)^0,c
 31829  0126F4  0E00               	movlw	0
 31830  0126F6  6E35               	movwf	(btemp+11)^0,c
 31831                           
 31832                           ;stkvar	_efgtoa$6618 @ sp[(-56)+2]
 31833  0126F8  0ECA               	movlw	-54
 31834  0126FA  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 31835  012700  0ECB               	movlw	-53
 31836  012702  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 31837                           
 31838                           ;stkvar	_efgtoa$6618 @ sp[(-56)+2]
 31839                           ;stkvar	_i @ sp[(-56)+36]
 31840  012708  0EEC               	movlw	-20
 31841  01270A  006F FF8C  F034    	movff	plusw1,btemp+10
 31842  012710  0EED               	movlw	-19
 31843  012712  006F FF8C  F035    	movff	plusw1,btemp+11
 31844  012718  0E54               	movlw	low _dbuf
 31845  01271A  2434               	addwf	(btemp+10)^0,w,c
 31846  01271C  6ED9               	movwf	fsr2l,c
 31847  01271E  0E03               	movlw	high _dbuf
 31848  012720  2035               	addwfc	(btemp+11)^0,w,c
 31849  012722  6EDA               	movwf	fsr2h,c
 31850  012724  0ECA               	movlw	-54
 31851  012726  006F FF8F FFDF     	movff	plusw1,indf2
 31852                           
 31853                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 497:         --w;
 31854                           ;stkvar	_w @ sp[(-56)+38]
 31855  01272C  50E1               	movf	fsr1l,w,c
 31856  01272E  0FEE               	addlw	-18
 31857  012730  6ED9               	movwf	fsr2l,c
 31858  012732  50E2               	movf	fsr1h,w,c
 31859  012734  6EDA               	movwf	fsr2h,c
 31860  012736  0EFF               	movlw	255
 31861  012738  22DA               	addwfc	fsr2h,f,c
 31862  01273A  06DE               	decf	postinc2,f,c
 31863  01273C  0E00               	movlw	0
 31864  01273E  5ADD               	subwfb	postdec2,f,c
 31865                           
 31866                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 498:         strcpy(&dbuf[n],
      +                           &dbuf[i]);
 31867                           ;stkvar	_i @ sp[(-56)+36]
 31868  012740  0EEC               	movlw	-20
 31869  012742  006F FF8C  F034    	movff	plusw1,btemp+10
 31870  012748  0EED               	movlw	-19
 31871  01274A  006F FF8C  F035    	movff	plusw1,btemp+11
 31872  012750  0E54               	movlw	low _dbuf
 31873  012752  2434               	addwf	(btemp+10)^0,w,c
 31874  012754  6E32               	movwf	(btemp+8)^0,c
 31875  012756  0E03               	movlw	high _dbuf
 31876  012758  2035               	addwfc	(btemp+11)^0,w,c
 31877  01275A  6E33               	movwf	(btemp+9)^0,c
 31878  01275C  0060  F0CB  FFE6   	movff	btemp+8,postinc1
 31879  012762  0060  F0CF  FFE6   	movff	btemp+9,postinc1
 31880                           
 31881                           ;stkvar	_n @ sp[(-58)+32]
 31882  012768  0E54               	movlw	low _dbuf
 31883  01276A  6E34               	movwf	(btemp+10)^0,c
 31884  01276C  0E03               	movlw	high _dbuf
 31885  01276E  6E35               	movwf	(btemp+11)^0,c
 31886  012770  0EE6               	movlw	-26
 31887  012772  50E3               	movf	plusw1,w,c
 31888  012774  2634               	addwf	(btemp+10)^0,f,c
 31889  012776  0EE7               	movlw	-25
 31890  012778  50E3               	movf	plusw1,w,c
 31891  01277A  2235               	addwfc	(btemp+11)^0,f,c
 31892  01277C  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 31893  012782  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 31894  012788  EC7F  F0FF         	call	_strcpy	;wreg free
 31895  01278C  EFC1  F08B         	goto	l15602
 31896  012790                     l2521:
 31897                           
 31898                           ; _efgtoa: autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsi
      +                          ze = 7, vargsize = 0
 31899  012790  0EC1               	movlw	193
 31900  012792  26E1               	addwf	fsr1l,f,c
 31901  012794  0EFF               	movlw	255
 31902  012796  22E2               	addwfc	fsr1h,f,c
 31903  012798  0012               	return		;funcret
 31904  01279A                     __end_of_efgtoa:
 31905                           	opt callstack 0
 31906                           
 31907 ;; *************** function _tolower *****************
 31908 ;; Defined at:
 31909 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/tolower.c"
 31910 ;; Parameters:    Size  Location     Type
 31911 ;;  c               2  [STACK] int 
 31912 ;; Auto vars:     Size  Location     Type
 31913 ;;		None
 31914 ;; Return value:  Size  Location     Type
 31915 ;;                  2  [STACK] int 
 31916 ;; Registers used:
 31917 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 31918 ;; Tracked objects:
 31919 ;;		On entry : 0/0
 31920 ;;		On exit  : 0/0
 31921 ;;		Unchanged: 0/0
 31922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31923 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31924 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31925 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31926 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31927 ;;Total ram usage:        0 bytes
 31928 ;; Hardware stack levels used:    1
 31929 ;; Hardware stack levels required when called:   16
 31930 ;; This function calls:
 31931 ;;		_isupper
 31932 ;; This function is called by:
 31933 ;;		_efgtoa
 31934 ;;		_vfpfcnvrt
 31935 ;; This function uses a reentrant model
 31936 ;;
 31937                           
 31938                           	psect	text104
 31939  000E34                     __ptext104:
 31940                           	opt callstack 0
 31941  000E34                     _tolower:
 31942                           	opt callstack 0
 31943                           
 31944                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31945  000E34  52E6               	movf	postinc1,f,c
 31946  000E36  52E6               	movf	postinc1,f,c
 31947                           
 31948                           ;stkvar	_c @ sp[(-2)+-2]
 31949                           
 31950                           ;incstack = 0
 31951 ;; hardware stack exceeded
 31952  000E38  0EFC               	movlw	-4
 31953  000E3A  50E3               	movf	plusw1,w,c
 31954  000E3C  0FBF               	addlw	191
 31955  000E3E  6E34               	movwf	(btemp+10)^0,c
 31956  000E40  0EFD               	movlw	-3
 31957  000E42  006F FF8C  F035    	movff	plusw1,btemp+11
 31958  000E48  0EFF               	movlw	255
 31959  000E4A  2235               	addwfc	(btemp+11)^0,f,c
 31960  000E4C  5035               	movf	(btemp+11)^0,w,c
 31961  000E4E  E106               	bnz	u7810
 31962  000E50  0E1A               	movlw	26
 31963  000E52  5C34               	subwf	(btemp+10)^0,w,c
 31964  000E54  B0D8               	btfsc	status,0,c
 31965  000E56  D002               	goto	u7810
 31966  000E58  0E01               	movlw	1
 31967  000E5A  D001               	goto	u7820
 31968  000E5C                     u7810:
 31969  000E5C  0E00               	movlw	0
 31970  000E5E                     u7820:
 31971  000E5E  6E34               	movwf	(btemp+10)^0,c
 31972  000E60  6A35               	clrf	(btemp+11)^0,c
 31973                           
 31974                           ;stkvar	_tolower$7573 @ sp[(-2)+0]
 31975  000E62  0EFE               	movlw	-2
 31976  000E64  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 31977  000E6A  0EFF               	movlw	-1
 31978  000E6C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 31979                           
 31980                           ;stkvar	_tolower$7573 @ sp[(-2)+0]
 31981  000E72  0EFE               	movlw	-2
 31982  000E74  006F FF8C  F02A    	movff	plusw1,btemp
 31983  000E7A  0EFF               	movlw	-1
 31984  000E7C  50E3               	movf	plusw1,w,c
 31985  000E7E  102A               	iorwf	btemp^0,w,c
 31986  000E80  B4D8               	btfsc	status,2,c
 31987  000E82  D00D               	goto	l10086
 31988                           
 31989                           ;stkvar	_c @ sp[(-2)+-2]
 31990  000E84  0EFC               	movlw	-4
 31991  000E86  006F FF8C  F02A    	movff	plusw1,btemp
 31992  000E8C  0EFD               	movlw	-3
 31993  000E8E  006F FF8C  F02B    	movff	plusw1,btemp+1
 31994  000E94  0E20               	movlw	32
 31995  000E96  122A               	iorwf	btemp^0,f,c
 31996  000E98  0E00               	movlw	0
 31997  000E9A  122B               	iorwf	(btemp+1)^0,f,c
 31998  000E9C  D008               	goto	l3823
 31999  000E9E                     l10086:
 32000                           
 32001                           ;stkvar	_c @ sp[(-2)+-2]
 32002  000E9E  0EFC               	movlw	-4
 32003  000EA0  006F FF8C  F02A    	movff	plusw1,btemp
 32004  000EA6  0EFD               	movlw	-3
 32005  000EA8  006F FF8C  F02B    	movff	plusw1,btemp+1
 32006  000EAE                     l3823:
 32007                           
 32008                           ; _tolower: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 32009  000EAE  52E5               	movf	postdec1,f,c
 32010  000EB0  52E5               	movf	postdec1,f,c
 32011  000EB2  52E5               	movf	postdec1,f,c
 32012  000EB4  52E5               	movf	postdec1,f,c
 32013  000EB6  0012               	return		;funcret
 32014  000EB8                     __end_of_tolower:
 32015                           	opt callstack 0
 32016                           
 32017 ;; *************** function _isupper *****************
 32018 ;; Defined at:
 32019 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isupper.c"
 32020 ;; Parameters:    Size  Location     Type
 32021 ;;  c               2  [STACK] int 
 32022 ;; Auto vars:     Size  Location     Type
 32023 ;;		None
 32024 ;; Return value:  Size  Location     Type
 32025 ;;                  2  [STACK] int 
 32026 ;; Registers used:
 32027 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 32028 ;; Tracked objects:
 32029 ;;		On entry : 0/0
 32030 ;;		On exit  : 0/0
 32031 ;;		Unchanged: 0/0
 32032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32033 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32034 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32035 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32036 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32037 ;;Total ram usage:        0 bytes
 32038 ;; Hardware stack levels used:    1
 32039 ;; Hardware stack levels required when called:   15
 32040 ;; This function calls:
 32041 ;;		Nothing
 32042 ;; This function is called by:
 32043 ;;		_efgtoa
 32044 ;;		_xtoa
 32045 ;;		_vfpfcnvrt
 32046 ;;		_tolower
 32047 ;; This function uses a reentrant model
 32048 ;;
 32049                           
 32050                           	psect	text105
 32051  001FA6                     __ptext105:
 32052                           	opt callstack 0
 32053  001FA6                     _isupper:
 32054                           	opt callstack 0
 32055                           
 32056                           ;stkvar	_c @ sp[(0)+-2]
 32057                           
 32058                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32059                           ;incstack = 0
 32060 ;; hardware stack exceeded
 32061  001FA6  0EFE               	movlw	-2
 32062  001FA8  50E3               	movf	plusw1,w,c
 32063  001FAA  0FBF               	addlw	191
 32064  001FAC  6E34               	movwf	(btemp+10)^0,c
 32065  001FAE  0EFF               	movlw	-1
 32066  001FB0  006F FF8C  F035    	movff	plusw1,btemp+11
 32067  001FB6  0EFF               	movlw	255
 32068  001FB8  2235               	addwfc	(btemp+11)^0,f,c
 32069  001FBA  5035               	movf	(btemp+11)^0,w,c
 32070  001FBC  E106               	bnz	u7150
 32071  001FBE  0E1A               	movlw	26
 32072  001FC0  5C34               	subwf	(btemp+10)^0,w,c
 32073  001FC2  B0D8               	btfsc	status,0,c
 32074  001FC4  D002               	goto	u7150
 32075  001FC6  0E01               	movlw	1
 32076  001FC8  D001               	goto	u7160
 32077  001FCA                     u7150:
 32078  001FCA  0E00               	movlw	0
 32079  001FCC                     u7160:
 32080  001FCC  6E2A               	movwf	btemp^0,c
 32081  001FCE  6A2B               	clrf	(btemp+1)^0,c
 32082                           
 32083                           ; _isupper: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 32084  001FD0  52E5               	movf	postdec1,f,c
 32085  001FD2  52E5               	movf	postdec1,f,c
 32086  001FD4  0012               	return		;funcret
 32087  001FD6                     __end_of_isupper:
 32088                           	opt callstack 0
 32089                           
 32090 ;; *************** function _strcpy *****************
 32091 ;; Defined at:
 32092 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strcpy.c"
 32093 ;; Parameters:    Size  Location     Type
 32094 ;;  dest            2  [STACK] PTR unsigned char 
 32095 ;;		 -> dbuf(80), 
 32096 ;;  src             2  [STACK] PTR const unsigned char 
 32097 ;;		 -> STR_96(4), STR_95(4), STR_92(4), STR_91(4), 
 32098 ;;		 -> dbuf(80), 
 32099 ;; Auto vars:     Size  Location     Type
 32100 ;;  d               2  [STACK] PTR unsigned char 
 32101 ;;		 -> dbuf(80), 
 32102 ;;  s               2  [STACK] PTR const unsigned char 
 32103 ;;		 -> STR_96(4), STR_95(4), STR_92(4), STR_91(4), 
 32104 ;;		 -> dbuf(80), 
 32105 ;; Return value:  Size  Location     Type
 32106 ;;                  2  [STACK] PTR unsigned char 
 32107 ;; Registers used:
 32108 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, tblptrl, tblptrh, tbl
      +ptru
 32109 ;; Tracked objects:
 32110 ;;		On entry : 0/0
 32111 ;;		On exit  : 0/0
 32112 ;;		Unchanged: 0/0
 32113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32114 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32115 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32116 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32117 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32118 ;;Total ram usage:        0 bytes
 32119 ;; Hardware stack levels used:    1
 32120 ;; Hardware stack levels required when called:   15
 32121 ;; This function calls:
 32122 ;;		Nothing
 32123 ;; This function is called by:
 32124 ;;		_efgtoa
 32125 ;; This function uses a reentrant model
 32126 ;;
 32127                           
 32128                           	psect	text106
 32129  01FEFE                     __ptext106:
 32130                           	opt callstack 0
 32131  01FEFE                     _strcpy:
 32132                           	opt callstack 0
 32133                           
 32134                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32135  01FEFE  52E6               	movf	postinc1,f,c
 32136  01FF00  52E6               	movf	postinc1,f,c
 32137  01FF02  52E6               	movf	postinc1,f,c
 32138  01FF04  52E6               	movf	postinc1,f,c
 32139                           
 32140                           ;stkvar	_src @ sp[(-4)+-4]
 32141                           
 32142                           ;incstack = 0
 32143 ;; hardware stack exceeded
 32144  01FF06  0EF8               	movlw	-8
 32145  01FF08  006F FF8C  F034    	movff	plusw1,btemp+10
 32146  01FF0E  0EF9               	movlw	-7
 32147  01FF10  006F FF8C  F035    	movff	plusw1,btemp+11
 32148                           
 32149                           ;stkvar	_s @ sp[(-4)+2]
 32150  01FF16  0EFF               	movlw	-1
 32151  01FF18  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 32152  01FF1E  0EFE               	movlw	-2
 32153  01FF20  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 32154                           
 32155                           ;stkvar	_dest @ sp[(-4)+-2]
 32156  01FF26  0EFA               	movlw	-6
 32157  01FF28  006F FF8C  F034    	movff	plusw1,btemp+10
 32158  01FF2E  0EFB               	movlw	-5
 32159  01FF30  006F FF8C  F035    	movff	plusw1,btemp+11
 32160                           
 32161                           ;stkvar	_d @ sp[(-4)+0]
 32162  01FF36  0EFD               	movlw	-3
 32163  01FF38  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 32164  01FF3E  0EFC               	movlw	-4
 32165  01FF40  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 32166  01FF46                     l15386:
 32167                           
 32168                           ;stkvar	_s @ sp[(-4)+2]
 32169  01FF46  50E1               	movf	fsr1l,w,c
 32170  01FF48  0FFE               	addlw	-2
 32171  01FF4A  6ED9               	movwf	fsr2l,c
 32172  01FF4C  50E2               	movf	fsr1h,w,c
 32173  01FF4E  6EDA               	movwf	fsr2h,c
 32174  01FF50  0EFF               	movlw	255
 32175  01FF52  22DA               	addwfc	fsr2h,f,c
 32176  01FF54  006F FF7C  F034    	movff	indf2,btemp+10
 32177  01FF5A  0E01               	movlw	1
 32178  01FF5C  26DE               	addwf	postinc2,f,c
 32179  01FF5E  006F FF7C  F035    	movff	indf2,btemp+11
 32180  01FF64  0E00               	movlw	0
 32181  01FF66  22DD               	addwfc	postdec2,f,c
 32182  01FF68  0060  F0D3  FFF6   	movff	btemp+10,tblptrl
 32183  01FF6E  0060  F0D7  FFF7   	movff	btemp+11,tblptrh
 32184  01FF74  0E00               	movlw	low (__mediumconst shr (0+16))
 32185  01FF76  6EF8               	movwf	tblptru,c
 32186                           
 32187                           ;stkvar	_d @ sp[(-4)+0]
 32188  01FF78  50E1               	movf	fsr1l,w,c
 32189  01FF7A  0FFC               	addlw	-4
 32190  01FF7C  6ED9               	movwf	fsr2l,c
 32191  01FF7E  50E2               	movf	fsr1h,w,c
 32192  01FF80  6EDA               	movwf	fsr2h,c
 32193  01FF82  0EFF               	movlw	255
 32194  01FF84  22DA               	addwfc	fsr2h,f,c
 32195  01FF86  006F FF7C  F034    	movff	indf2,btemp+10
 32196  01FF8C  0E01               	movlw	1
 32197  01FF8E  26DE               	addwf	postinc2,f,c
 32198  01FF90  006F FF7C  F035    	movff	indf2,btemp+11
 32199  01FF96  0E00               	movlw	0
 32200  01FF98  22DD               	addwfc	postdec2,f,c
 32201  01FF9A  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 32202  01FFA0  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 32203  01FFA6  0E1F               	movlw	(high __ramtop+-1)
 32204  01FFA8  64F7               	cpfsgt	tblptrh,c
 32205  01FFAA  D003               	bra	u14307
 32206  01FFAC  0008               	tblrd		*
 32207  01FFAE  50F5               	movf	tablat,w,c
 32208  01FFB0  D007               	bra	u14300
 32209  01FFB2                     u14307:
 32210  01FFB2  006F FFDB FFE9     	movff	tblptrl,fsr0l
 32211  01FFB8  006F FFDF FFEA     	movff	tblptrh,fsr0h
 32212  01FFBE  50EF               	movf	indf0,w,c
 32213  01FFC0                     u14300:
 32214  01FFC0  6EDF               	movwf	indf2,c
 32215  01FFC2  50DF               	movf	indf2,w,c
 32216  01FFC4  A4D8               	btfss	status,2,c
 32217  01FFC6  D7BF               	goto	l15386
 32218                           
 32219                           ; _strcpy: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 4, vargsize = 0
 32220  01FFC8  0EF8               	movlw	248
 32221  01FFCA  26E1               	addwf	fsr1l,f,c
 32222  01FFCC  0EFF               	movlw	255
 32223  01FFCE  22E2               	addwfc	fsr1h,f,c
 32224  01FFD0  0012               	return		;funcret
 32225  01FFD2                     __end_of_strcpy:
 32226                           	opt callstack 0
 32227                           
 32228 ;; *************** function _floorf *****************
 32229 ;; Defined at:
 32230 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/floorf.c"
 32231 ;; Parameters:    Size  Location     Type
 32232 ;;  x               4  [STACK] float 
 32233 ;; Auto vars:     Size  Location     Type
 32234 ;;  u               4  [STACK] struct .
 32235 ;;  m               4  [STACK] unsigned long 
 32236 ;;  e               2  [STACK] int 
 32237 ;; Return value:  Size  Location     Type
 32238 ;;                  4  [STACK] float 
 32239 ;; Registers used:
 32240 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 32241 ;; Tracked objects:
 32242 ;;		On entry : 0/0
 32243 ;;		On exit  : 0/0
 32244 ;;		Unchanged: 0/0
 32245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32246 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32247 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32248 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32249 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32250 ;;Total ram usage:        0 bytes
 32251 ;; Hardware stack levels used:    1
 32252 ;; Hardware stack levels required when called:   15
 32253 ;; This function calls:
 32254 ;;		Nothing
 32255 ;; This function is called by:
 32256 ;;		_efgtoa
 32257 ;; This function uses a reentrant model
 32258 ;;
 32259                           
 32260                           	psect	text107
 32261  019F04                     __ptext107:
 32262                           	opt callstack 0
 32263  019F04                     _floorf:
 32264                           	opt callstack 0
 32265                           
 32266                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 32267  019F04  0E0A               	movlw	10
 32268  019F06  26E1               	addwf	fsr1l,f,c
 32269  019F08  0E00               	movlw	0
 32270  019F0A  22E2               	addwfc	fsr1h,f,c
 32271                           
 32272                           ;incstack = 0
 32273 ;; hardware stack exceeded
 32274  019F0C  0060  F1D0  F032   	movff	floorf@F524,btemp+8
 32275  019F12  0060  F1D4  F033   	movff	floorf@F524+1,btemp+9
 32276  019F18  0060  F1D8  F034   	movff	floorf@F524+2,btemp+10
 32277  019F1E  0060  F1DC  F035   	movff	floorf@F524+3,btemp+11
 32278                           
 32279                           ;stkvar	_u @ sp[(-10)+0]
 32280  019F24  0EF6               	movlw	-10
 32281  019F26  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 32282  019F2C  0EF7               	movlw	-9
 32283  019F2E  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 32284  019F34  0EF8               	movlw	-8
 32285  019F36  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 32286  019F3C  0EF9               	movlw	-7
 32287  019F3E  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 32288                           
 32289                           ;stkvar	_x @ sp[(-10)+-4]
 32290  019F44  0EF2               	movlw	-14
 32291  019F46  006F FF8C  F032    	movff	plusw1,btemp+8
 32292  019F4C  0EF3               	movlw	-13
 32293  019F4E  006F FF8C  F033    	movff	plusw1,btemp+9
 32294  019F54  0EF4               	movlw	-12
 32295  019F56  006F FF8C  F034    	movff	plusw1,btemp+10
 32296  019F5C  0EF5               	movlw	-11
 32297  019F5E  006F FF8C  F035    	movff	plusw1,btemp+11
 32298                           
 32299                           ;stkvar	_u @ sp[(-10)+0]
 32300  019F64  0EF6               	movlw	-10
 32301  019F66  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 32302  019F6C  0EF7               	movlw	-9
 32303  019F6E  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 32304  019F74  0EF8               	movlw	-8
 32305  019F76  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 32306  019F7C  0EF9               	movlw	-7
 32307  019F7E  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 32308  019F84  0E81               	movlw	129
 32309  019F86  6E34               	movwf	(btemp+10)^0,c
 32310  019F88  0EFF               	movlw	255
 32311  019F8A  6E35               	movwf	(btemp+11)^0,c
 32312                           
 32313                           ;stkvar	_u @ sp[(-10)+0]
 32314  019F8C  0EF6               	movlw	-10
 32315  019F8E  006F FF8C  F02E    	movff	plusw1,btemp+4
 32316  019F94  0EF7               	movlw	-9
 32317  019F96  006F FF8C  F02F    	movff	plusw1,btemp+5
 32318  019F9C  0EF8               	movlw	-8
 32319  019F9E  006F FF8C  F030    	movff	plusw1,btemp+6
 32320  019FA4  0EF9               	movlw	-7
 32321  019FA6  006F FF8C  F031    	movff	plusw1,btemp+7
 32322  019FAC  0E18               	movlw	24
 32323  019FAE  D005               	goto	u7840
 32324  019FB0                     u7845:
 32325  019FB0  90D8               	bcf	status,0,c
 32326  019FB2  3231               	rrcf	(btemp+7)^0,f,c
 32327  019FB4  3230               	rrcf	(btemp+6)^0,f,c
 32328  019FB6  322F               	rrcf	(btemp+5)^0,f,c
 32329  019FB8  322E               	rrcf	(btemp+4)^0,f,c
 32330  019FBA                     u7840:
 32331  019FBA  2EE8               	decfsz	wreg,f,c
 32332  019FBC  D7F9               	goto	u7845
 32333  019FBE  0060  F0B8  F032   	movff	btemp+4,btemp+8
 32334  019FC4  0060  F0BC  F033   	movff	btemp+5,btemp+9
 32335  019FCA  0EFF               	movlw	255
 32336  019FCC  1632               	andwf	(btemp+8)^0,f,c
 32337  019FCE  0E00               	movlw	0
 32338  019FD0  1633               	andwf	(btemp+9)^0,f,c
 32339  019FD2  5034               	movf	(btemp+10)^0,w,c
 32340  019FD4  2632               	addwf	(btemp+8)^0,f,c
 32341  019FD6  5035               	movf	(btemp+11)^0,w,c
 32342  019FD8  2233               	addwfc	(btemp+9)^0,f,c
 32343                           
 32344                           ;stkvar	_e @ sp[(-10)+8]
 32345  019FDA  0EFE               	movlw	-2
 32346  019FDC  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 32347  019FE2  0EFF               	movlw	-1
 32348  019FE4  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 32349                           
 32350                           ;stkvar	_e @ sp[(-10)+8]
 32351  019FEA  0EFF               	movlw	-1
 32352  019FEC  BEE3               	btfsc	plusw1,7,c
 32353  019FEE  D019               	goto	l10100
 32354  019FF0  0EFF               	movlw	-1
 32355  019FF2  50E3               	movf	plusw1,w,c
 32356  019FF4  E108               	bnz	u7850
 32357  019FF6  0EFE               	movlw	-2
 32358  019FF8  006F FF8C  F02A    	movff	plusw1,btemp
 32359  019FFE  0E17               	movlw	23
 32360  01A000  5E2A               	subwf	btemp^0,f,c
 32361  01A002  A0D8               	btfss	status,0,c
 32362  01A004  D00E               	goto	l10100
 32363  01A006                     u7850:
 32364                           
 32365                           ;stkvar	_x @ sp[(-10)+-4]
 32366  01A006  0EF2               	movlw	-14
 32367  01A008  006F FF8C  F02A    	movff	plusw1,btemp
 32368  01A00E  0EF3               	movlw	-13
 32369  01A010  006F FF8C  F02B    	movff	plusw1,btemp+1
 32370  01A016  0EF4               	movlw	-12
 32371  01A018  006F FF8C  F02C    	movff	plusw1,btemp+2
 32372  01A01E  0EF5               	movlw	-11
 32373  01A020  D11F               	goto	L35
 32374  01A022                     l10100:
 32375                           
 32376                           ;stkvar	_e @ sp[(-10)+8]
 32377  01A022  0EFF               	movlw	-1
 32378  01A024  BEE3               	btfsc	plusw1,7,c
 32379  01A026  D0B4               	goto	l10116
 32380                           
 32381                           ;stkvar	_e @ sp[(-10)+8]
 32382  01A028  0EFE               	movlw	-2
 32383  01A02A  006F FF8C  F035    	movff	plusw1,btemp+11
 32384  01A030  0EFF               	movlw	255
 32385  01A032  6E2E               	movwf	(btemp+4)^0,c
 32386  01A034  0EFF               	movlw	255
 32387  01A036  6E2F               	movwf	(btemp+5)^0,c
 32388  01A038  0E7F               	movlw	127
 32389  01A03A  6E30               	movwf	(btemp+6)^0,c
 32390  01A03C  0E00               	movlw	0
 32391  01A03E  6E31               	movwf	(btemp+7)^0,c
 32392  01A040                     u7875:
 32393  01A040  6635               	tstfsz	(btemp+11)^0,c
 32394  01A042  D001               	goto	u7876
 32395  01A044  D007               	goto	u7877
 32396  01A046                     u7876:
 32397  01A046  3431               	rlcf	(btemp+7)^0,w,c
 32398  01A048  3231               	rrcf	(btemp+7)^0,f,c
 32399  01A04A  3230               	rrcf	(btemp+6)^0,f,c
 32400  01A04C  322F               	rrcf	(btemp+5)^0,f,c
 32401  01A04E  322E               	rrcf	(btemp+4)^0,f,c
 32402  01A050  2E35               	decfsz	(btemp+11)^0,f,c
 32403  01A052  D7F6               	goto	u7875
 32404  01A054                     u7877:
 32405                           
 32406                           ;stkvar	_m @ sp[(-10)+4]
 32407  01A054  0EFA               	movlw	-6
 32408  01A056  0060  F0BB  FFE3   	movff	btemp+4,plusw1
 32409  01A05C  0EFB               	movlw	-5
 32410  01A05E  0060  F0BF  FFE3   	movff	btemp+5,plusw1
 32411  01A064  0EFC               	movlw	-4
 32412  01A066  0060  F0C3  FFE3   	movff	btemp+6,plusw1
 32413  01A06C  0EFD               	movlw	-3
 32414  01A06E  0060  F0C7  FFE3   	movff	btemp+7,plusw1
 32415                           
 32416                           ;stkvar	_m @ sp[(-10)+4]
 32417                           ;stkvar	_u @ sp[(-10)+0]
 32418  01A074  0EF6               	movlw	-10
 32419  01A076  006F FF8C  F032    	movff	plusw1,btemp+8
 32420  01A07C  0EF7               	movlw	-9
 32421  01A07E  006F FF8C  F033    	movff	plusw1,btemp+9
 32422  01A084  0EF8               	movlw	-8
 32423  01A086  006F FF8C  F034    	movff	plusw1,btemp+10
 32424  01A08C  0EF9               	movlw	-7
 32425  01A08E  006F FF8C  F035    	movff	plusw1,btemp+11
 32426  01A094  0EFA               	movlw	-6
 32427  01A096  50E3               	movf	plusw1,w,c
 32428  01A098  1632               	andwf	(btemp+8)^0,f,c
 32429  01A09A  0EFB               	movlw	-5
 32430  01A09C  50E3               	movf	plusw1,w,c
 32431  01A09E  1633               	andwf	(btemp+9)^0,f,c
 32432  01A0A0  0EFC               	movlw	-4
 32433  01A0A2  50E3               	movf	plusw1,w,c
 32434  01A0A4  1634               	andwf	(btemp+10)^0,f,c
 32435  01A0A6  0EFD               	movlw	-3
 32436  01A0A8  50E3               	movf	plusw1,w,c
 32437  01A0AA  1635               	andwf	(btemp+11)^0,f,c
 32438  01A0AC  5032               	movf	(btemp+8)^0,w,c
 32439  01A0AE  1033               	iorwf	(btemp+9)^0,w,c
 32440  01A0B0  1034               	iorwf	(btemp+10)^0,w,c
 32441  01A0B2  1035               	iorwf	(btemp+11)^0,w,c
 32442  01A0B4  B4D8               	btfsc	status,2,c
 32443  01A0B6  D7A7               	goto	u7850
 32444                           
 32445                           ;stkvar	_u @ sp[(-10)+0]
 32446  01A0B8  0EF6               	movlw	-10
 32447  01A0BA  006F FF8C  F032    	movff	plusw1,btemp+8
 32448  01A0C0  0EF7               	movlw	-9
 32449  01A0C2  006F FF8C  F033    	movff	plusw1,btemp+9
 32450  01A0C8  0EF8               	movlw	-8
 32451  01A0CA  006F FF8C  F034    	movff	plusw1,btemp+10
 32452  01A0D0  0EF9               	movlw	-7
 32453  01A0D2  006F FF8C  F035    	movff	plusw1,btemp+11
 32454  01A0D8  0E20               	movlw	32
 32455  01A0DA  D005               	goto	u7890
 32456  01A0DC                     u7895:
 32457  01A0DC  90D8               	bcf	status,0,c
 32458  01A0DE  3235               	rrcf	(btemp+11)^0,f,c
 32459  01A0E0  3234               	rrcf	(btemp+10)^0,f,c
 32460  01A0E2  3233               	rrcf	(btemp+9)^0,f,c
 32461  01A0E4  3232               	rrcf	(btemp+8)^0,f,c
 32462  01A0E6                     u7890:
 32463  01A0E6  2EE8               	decfsz	wreg,f,c
 32464  01A0E8  D7F9               	goto	u7895
 32465  01A0EA  5032               	movf	(btemp+8)^0,w,c
 32466  01A0EC  B4D8               	btfsc	status,2,c
 32467  01A0EE  D028               	goto	l10114
 32468                           
 32469                           ;stkvar	_m @ sp[(-10)+4]
 32470                           ;stkvar	_u @ sp[(-10)+0]
 32471  01A0F0  0EF6               	movlw	-10
 32472  01A0F2  50E3               	movf	plusw1,w,c
 32473  01A0F4  6E2A               	movwf	btemp^0,c
 32474  01A0F6  0EFA               	movlw	-6
 32475  01A0F8  50E3               	movf	plusw1,w,c
 32476  01A0FA  262A               	addwf	btemp^0,f,c
 32477  01A0FC  0EF6               	movlw	-10
 32478  01A0FE  0060  F0AB  FFE3   	movff	btemp,plusw1
 32479  01A104  0EF7               	movlw	-9
 32480  01A106  50E3               	movf	plusw1,w,c
 32481  01A108  6E2A               	movwf	btemp^0,c
 32482  01A10A  0EFB               	movlw	-5
 32483  01A10C  50E3               	movf	plusw1,w,c
 32484  01A10E  222A               	addwfc	btemp^0,f,c
 32485  01A110  0EF7               	movlw	-9
 32486  01A112  0060  F0AB  FFE3   	movff	btemp,plusw1
 32487  01A118  0EF8               	movlw	-8
 32488  01A11A  50E3               	movf	plusw1,w,c
 32489  01A11C  6E2A               	movwf	btemp^0,c
 32490  01A11E  0EFC               	movlw	-4
 32491  01A120  50E3               	movf	plusw1,w,c
 32492  01A122  222A               	addwfc	btemp^0,f,c
 32493  01A124  0EF8               	movlw	-8
 32494  01A126  0060  F0AB  FFE3   	movff	btemp,plusw1
 32495  01A12C  0EF9               	movlw	-7
 32496  01A12E  50E3               	movf	plusw1,w,c
 32497  01A130  6E2A               	movwf	btemp^0,c
 32498  01A132  0EFD               	movlw	-3
 32499  01A134  50E3               	movf	plusw1,w,c
 32500  01A136  222A               	addwfc	btemp^0,f,c
 32501  01A138  0EF9               	movlw	-7
 32502  01A13A  0060  F0AB  FFE3   	movff	btemp,plusw1
 32503  01A140                     l10114:
 32504                           
 32505                           ;stkvar	_m @ sp[(-10)+4]
 32506  01A140  0EFA               	movlw	-6
 32507  01A142  006F FF8C  F032    	movff	plusw1,btemp+8
 32508  01A148  0EFB               	movlw	-5
 32509  01A14A  006F FF8C  F033    	movff	plusw1,btemp+9
 32510  01A150  0EFC               	movlw	-4
 32511  01A152  006F FF8C  F034    	movff	plusw1,btemp+10
 32512  01A158  0EFD               	movlw	-3
 32513  01A15A  006F FF8C  F035    	movff	plusw1,btemp+11
 32514  01A160  1C32               	comf	(btemp+8)^0,w,c
 32515  01A162  6E2E               	movwf	(btemp+4)^0,c
 32516  01A164  1C33               	comf	(btemp+9)^0,w,c
 32517  01A166  6E2F               	movwf	(btemp+5)^0,c
 32518  01A168  1C34               	comf	(btemp+10)^0,w,c
 32519  01A16A  6E30               	movwf	(btemp+6)^0,c
 32520  01A16C  1C35               	comf	(btemp+11)^0,w,c
 32521  01A16E  6E31               	movwf	(btemp+7)^0,c
 32522                           
 32523                           ;stkvar	_u @ sp[(-10)+0]
 32524  01A170  50E1               	movf	fsr1l,w,c
 32525  01A172  0FF6               	addlw	-10
 32526  01A174  6ED9               	movwf	fsr2l,c
 32527  01A176  50E2               	movf	fsr1h,w,c
 32528  01A178  6EDA               	movwf	fsr2h,c
 32529  01A17A  0EFF               	movlw	255
 32530  01A17C  22DA               	addwfc	fsr2h,f,c
 32531  01A17E  502E               	movf	(btemp+4)^0,w,c
 32532  01A180  16DE               	andwf	postinc2,f,c
 32533  01A182  502F               	movf	(btemp+5)^0,w,c
 32534  01A184  16DE               	andwf	postinc2,f,c
 32535  01A186  5030               	movf	(btemp+6)^0,w,c
 32536  01A188  16DE               	andwf	postinc2,f,c
 32537  01A18A  5031               	movf	(btemp+7)^0,w,c
 32538  01A18C  16DE               	andwf	postinc2,f,c
 32539  01A18E  D05B               	goto	l10124
 32540  01A190                     l10116:
 32541                           
 32542                           ;stkvar	_u @ sp[(-10)+0]
 32543  01A190  0EF6               	movlw	-10
 32544  01A192  006F FF8C  F032    	movff	plusw1,btemp+8
 32545  01A198  0EF7               	movlw	-9
 32546  01A19A  006F FF8C  F033    	movff	plusw1,btemp+9
 32547  01A1A0  0EF8               	movlw	-8
 32548  01A1A2  006F FF8C  F034    	movff	plusw1,btemp+10
 32549  01A1A8  0EF9               	movlw	-7
 32550  01A1AA  006F FF8C  F035    	movff	plusw1,btemp+11
 32551  01A1B0  0E20               	movlw	32
 32552  01A1B2  D005               	goto	u7910
 32553  01A1B4                     u7915:
 32554  01A1B4  90D8               	bcf	status,0,c
 32555  01A1B6  3235               	rrcf	(btemp+11)^0,f,c
 32556  01A1B8  3234               	rrcf	(btemp+10)^0,f,c
 32557  01A1BA  3233               	rrcf	(btemp+9)^0,f,c
 32558  01A1BC  3232               	rrcf	(btemp+8)^0,f,c
 32559  01A1BE                     u7910:
 32560  01A1BE  2EE8               	decfsz	wreg,f,c
 32561  01A1C0  D7F9               	goto	u7915
 32562  01A1C2  6632               	tstfsz	(btemp+8)^0,c
 32563  01A1C4  D009               	goto	l10120
 32564                           
 32565                           ;stkvar	_u @ sp[(-10)+0]
 32566  01A1C6  0EF6               	movlw	-10
 32567  01A1C8  6AE3               	clrf	plusw1,c
 32568  01A1CA  0EF7               	movlw	-9
 32569  01A1CC  6AE3               	clrf	plusw1,c
 32570  01A1CE  0EF8               	movlw	-8
 32571  01A1D0  6AE3               	clrf	plusw1,c
 32572  01A1D2  0EF9               	movlw	-7
 32573  01A1D4  6AE3               	clrf	plusw1,c
 32574  01A1D6  D037               	goto	l10124
 32575  01A1D8                     l10120:
 32576                           
 32577                           ;stkvar	_u @ sp[(-10)+0]
 32578  01A1D8  0EF6               	movlw	-10
 32579  01A1DA  006F FF8C  F032    	movff	plusw1,btemp+8
 32580  01A1E0  0EF7               	movlw	-9
 32581  01A1E2  006F FF8C  F033    	movff	plusw1,btemp+9
 32582  01A1E8  0EF8               	movlw	-8
 32583  01A1EA  006F FF8C  F034    	movff	plusw1,btemp+10
 32584  01A1F0  0EF9               	movlw	-7
 32585  01A1F2  006F FF8C  F035    	movff	plusw1,btemp+11
 32586  01A1F8  90D8               	bcf	status,0,c
 32587  01A1FA  3432               	rlcf	(btemp+8)^0,w,c
 32588  01A1FC  6E2E               	movwf	(btemp+4)^0,c
 32589  01A1FE  3433               	rlcf	(btemp+9)^0,w,c
 32590  01A200  6E2F               	movwf	(btemp+5)^0,c
 32591  01A202  3434               	rlcf	(btemp+10)^0,w,c
 32592  01A204  6E30               	movwf	(btemp+6)^0,c
 32593  01A206  3435               	rlcf	(btemp+11)^0,w,c
 32594  01A208  6E31               	movwf	(btemp+7)^0,c
 32595  01A20A  502E               	movf	(btemp+4)^0,w,c
 32596  01A20C  102F               	iorwf	(btemp+5)^0,w,c
 32597  01A20E  1030               	iorwf	(btemp+6)^0,w,c
 32598  01A210  1031               	iorwf	(btemp+7)^0,w,c
 32599  01A212  B4D8               	btfsc	status,2,c
 32600  01A214  D018               	goto	l10124
 32601  01A216  0E00               	movlw	0
 32602  01A218  6E32               	movwf	(btemp+8)^0,c
 32603  01A21A  0E00               	movlw	0
 32604  01A21C  6E33               	movwf	(btemp+9)^0,c
 32605  01A21E  0E80               	movlw	128
 32606  01A220  6E34               	movwf	(btemp+10)^0,c
 32607  01A222  0EBF               	movlw	191
 32608  01A224  6E35               	movwf	(btemp+11)^0,c
 32609                           
 32610                           ;stkvar	_u @ sp[(-10)+0]
 32611  01A226  0EF6               	movlw	-10
 32612  01A228  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 32613  01A22E  0EF7               	movlw	-9
 32614  01A230  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 32615  01A236  0EF8               	movlw	-8
 32616  01A238  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 32617  01A23E  0EF9               	movlw	-7
 32618  01A240  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 32619  01A246                     l10124:
 32620                           
 32621                           ;stkvar	_u @ sp[(-10)+0]
 32622  01A246  0EF6               	movlw	-10
 32623  01A248  006F FF8C  F02A    	movff	plusw1,btemp
 32624  01A24E  0EF7               	movlw	-9
 32625  01A250  006F FF8C  F02B    	movff	plusw1,btemp+1
 32626  01A256  0EF8               	movlw	-8
 32627  01A258  006F FF8C  F02C    	movff	plusw1,btemp+2
 32628  01A25E  0EF9               	movlw	-7
 32629  01A260                     L35:
 32630  01A260  006F FF8C  F02D    	movff	plusw1,btemp+3
 32631                           
 32632                           ; _floorf: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 32633  01A266  0EF2               	movlw	242
 32634  01A268  26E1               	addwf	fsr1l,f,c
 32635  01A26A  0EFF               	movlw	255
 32636  01A26C  22E2               	addwfc	fsr1h,f,c
 32637  01A26E  0012               	return		;funcret
 32638  01A270                     __end_of_floorf:
 32639                           	opt callstack 0
 32640                           
 32641 ;; *************** function ___fpclassifyf *****************
 32642 ;; Defined at:
 32643 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__fpclassifyf.c"
 32644 ;; Parameters:    Size  Location     Type
 32645 ;;  x               4  [STACK] float 
 32646 ;; Auto vars:     Size  Location     Type
 32647 ;;  u               4  [STACK] struct .
 32648 ;;  e               2  [STACK] int 
 32649 ;; Return value:  Size  Location     Type
 32650 ;;                  2  [STACK] int 
 32651 ;; Registers used:
 32652 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+
      +10, btemp+11, prodl
 32653 ;; Tracked objects:
 32654 ;;		On entry : 0/0
 32655 ;;		On exit  : 0/0
 32656 ;;		Unchanged: 0/0
 32657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32658 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32659 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32660 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32661 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32662 ;;Total ram usage:        0 bytes
 32663 ;; Hardware stack levels used:    1
 32664 ;; Hardware stack levels required when called:   15
 32665 ;; This function calls:
 32666 ;;		Nothing
 32667 ;; This function is called by:
 32668 ;;		_efgtoa
 32669 ;; This function uses a reentrant model
 32670 ;;
 32671                           
 32672                           	psect	text108
 32673  01DA0A                     __ptext108:
 32674                           	opt callstack 0
 32675  01DA0A                     ___fpclassifyf:
 32676                           	opt callstack 0
 32677                           
 32678                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32679  01DA0A  0E06               	movlw	6
 32680  01DA0C  26E1               	addwf	fsr1l,f,c
 32681  01DA0E  0E00               	movlw	0
 32682  01DA10  22E2               	addwfc	fsr1h,f,c
 32683                           
 32684                           ;incstack = 0
 32685 ;; hardware stack exceeded
 32686  01DA12  0060  F1F0  F032   	movff	___fpclassifyf@F463,btemp+8
 32687  01DA18  0060  F1F4  F033   	movff	___fpclassifyf@F463+1,btemp+9
 32688  01DA1E  0060  F1F8  F034   	movff	___fpclassifyf@F463+2,btemp+10
 32689  01DA24  0060  F1FC  F035   	movff	___fpclassifyf@F463+3,btemp+11
 32690                           
 32691                           ;stkvar	_u @ sp[(-6)+0]
 32692  01DA2A  0EFA               	movlw	-6
 32693  01DA2C  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 32694  01DA32  0EFB               	movlw	-5
 32695  01DA34  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 32696  01DA3A  0EFC               	movlw	-4
 32697  01DA3C  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 32698  01DA42  0EFD               	movlw	-3
 32699  01DA44  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 32700                           
 32701                           ;stkvar	_x @ sp[(-6)+-4]
 32702  01DA4A  0EF6               	movlw	-10
 32703  01DA4C  006F FF8C  F032    	movff	plusw1,btemp+8
 32704  01DA52  0EF7               	movlw	-9
 32705  01DA54  006F FF8C  F033    	movff	plusw1,btemp+9
 32706  01DA5A  0EF8               	movlw	-8
 32707  01DA5C  006F FF8C  F034    	movff	plusw1,btemp+10
 32708  01DA62  0EF9               	movlw	-7
 32709  01DA64  006F FF8C  F035    	movff	plusw1,btemp+11
 32710                           
 32711                           ;stkvar	_u @ sp[(-6)+0]
 32712  01DA6A  0EFA               	movlw	-6
 32713  01DA6C  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 32714  01DA72  0EFB               	movlw	-5
 32715  01DA74  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 32716  01DA7A  0EFC               	movlw	-4
 32717  01DA7C  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 32718  01DA82  0EFD               	movlw	-3
 32719  01DA84  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 32720                           
 32721                           ;stkvar	_u @ sp[(-6)+0]
 32722  01DA8A  0EFA               	movlw	-6
 32723  01DA8C  006F FF8C  F032    	movff	plusw1,btemp+8
 32724  01DA92  0EFB               	movlw	-5
 32725  01DA94  006F FF8C  F033    	movff	plusw1,btemp+9
 32726  01DA9A  0EFC               	movlw	-4
 32727  01DA9C  006F FF8C  F034    	movff	plusw1,btemp+10
 32728  01DAA2  0EFD               	movlw	-3
 32729  01DAA4  006F FF8C  F035    	movff	plusw1,btemp+11
 32730  01DAAA  0E18               	movlw	24
 32731  01DAAC  D005               	goto	u7720
 32732  01DAAE                     u7725:
 32733  01DAAE  90D8               	bcf	status,0,c
 32734  01DAB0  3235               	rrcf	(btemp+11)^0,f,c
 32735  01DAB2  3234               	rrcf	(btemp+10)^0,f,c
 32736  01DAB4  3233               	rrcf	(btemp+9)^0,f,c
 32737  01DAB6  3232               	rrcf	(btemp+8)^0,f,c
 32738  01DAB8                     u7720:
 32739  01DAB8  2EE8               	decfsz	wreg,f,c
 32740  01DABA  D7F9               	goto	u7725
 32741  01DABC  0060  F0C8  F030   	movff	btemp+8,btemp+6
 32742  01DAC2  0060  F0CC  F031   	movff	btemp+9,btemp+7
 32743  01DAC8  0EFF               	movlw	255
 32744  01DACA  1630               	andwf	(btemp+6)^0,f,c
 32745  01DACC  0E00               	movlw	0
 32746  01DACE  1631               	andwf	(btemp+7)^0,f,c
 32747                           
 32748                           ;stkvar	_e @ sp[(-6)+4]
 32749  01DAD0  0EFE               	movlw	-2
 32750  01DAD2  0060  F0C3  FFE3   	movff	btemp+6,plusw1
 32751  01DAD8  0EFF               	movlw	-1
 32752  01DADA  0060  F0C7  FFE3   	movff	btemp+7,plusw1
 32753                           
 32754                           ;stkvar	_e @ sp[(-6)+4]
 32755  01DAE0  0EFE               	movlw	-2
 32756  01DAE2  006F FF8C  F02A    	movff	plusw1,btemp
 32757  01DAE8  0EFF               	movlw	-1
 32758  01DAEA  50E3               	movf	plusw1,w,c
 32759  01DAEC  102A               	iorwf	btemp^0,w,c
 32760  01DAEE  A4D8               	btfss	status,2,c
 32761  01DAF0  D023               	goto	l10062
 32762                           
 32763                           ;stkvar	_u @ sp[(-6)+0]
 32764  01DAF2  0EFA               	movlw	-6
 32765  01DAF4  006F FF8C  F032    	movff	plusw1,btemp+8
 32766  01DAFA  0EFB               	movlw	-5
 32767  01DAFC  006F FF8C  F033    	movff	plusw1,btemp+9
 32768  01DB02  0EFC               	movlw	-4
 32769  01DB04  006F FF8C  F034    	movff	plusw1,btemp+10
 32770  01DB0A  0EFD               	movlw	-3
 32771  01DB0C  006F FF8C  F035    	movff	plusw1,btemp+11
 32772  01DB12  90D8               	bcf	status,0,c
 32773  01DB14  3432               	rlcf	(btemp+8)^0,w,c
 32774  01DB16  6E2E               	movwf	(btemp+4)^0,c
 32775  01DB18  3433               	rlcf	(btemp+9)^0,w,c
 32776  01DB1A  6E2F               	movwf	(btemp+5)^0,c
 32777  01DB1C  3434               	rlcf	(btemp+10)^0,w,c
 32778  01DB1E  6E30               	movwf	(btemp+6)^0,c
 32779  01DB20  3435               	rlcf	(btemp+11)^0,w,c
 32780  01DB22  6E31               	movwf	(btemp+7)^0,c
 32781  01DB24  502E               	movf	(btemp+4)^0,w,c
 32782  01DB26  102F               	iorwf	(btemp+5)^0,w,c
 32783  01DB28  1030               	iorwf	(btemp+6)^0,w,c
 32784  01DB2A  1031               	iorwf	(btemp+7)^0,w,c
 32785  01DB2C  A4D8               	btfss	status,2,c
 32786  01DB2E  D002               	goto	l10058
 32787  01DB30  0E02               	movlw	2
 32788  01DB32  D02E               	goto	L36
 32789  01DB34                     l10058:
 32790  01DB34  0E03               	movlw	3
 32791  01DB36  D02C               	goto	L36
 32792  01DB38                     l10062:
 32793                           
 32794                           ;stkvar	_e @ sp[(-6)+4]
 32795  01DB38  0EFE               	movlw	-2
 32796  01DB3A  28E3               	incf	plusw1,w,c
 32797  01DB3C  E128               	bnz	l10068
 32798  01DB3E  0EFF               	movlw	-1
 32799  01DB40  50E3               	movf	plusw1,w,c
 32800  01DB42  A4D8               	btfss	status,2,c
 32801  01DB44  D024               	goto	l10068
 32802                           
 32803                           ;stkvar	_u @ sp[(-6)+0]
 32804  01DB46  0EFA               	movlw	-6
 32805  01DB48  006F FF8C  F032    	movff	plusw1,btemp+8
 32806  01DB4E  0EFB               	movlw	-5
 32807  01DB50  006F FF8C  F033    	movff	plusw1,btemp+9
 32808  01DB56  0EFC               	movlw	-4
 32809  01DB58  006F FF8C  F034    	movff	plusw1,btemp+10
 32810  01DB5E  0EFD               	movlw	-3
 32811  01DB60  006F FF8C  F035    	movff	plusw1,btemp+11
 32812  01DB66  0E09               	movlw	9
 32813  01DB68                     u7765:
 32814  01DB68  90D8               	bcf	status,0,c
 32815  01DB6A  3632               	rlcf	(btemp+8)^0,f,c
 32816  01DB6C  3633               	rlcf	(btemp+9)^0,f,c
 32817  01DB6E  3634               	rlcf	(btemp+10)^0,f,c
 32818  01DB70  3635               	rlcf	(btemp+11)^0,f,c
 32819  01DB72  2EE8               	decfsz	wreg,f,c
 32820  01DB74  D7F9               	goto	u7765
 32821  01DB76  5032               	movf	(btemp+8)^0,w,c
 32822  01DB78  1033               	iorwf	(btemp+9)^0,w,c
 32823  01DB7A  1034               	iorwf	(btemp+10)^0,w,c
 32824  01DB7C  1035               	iorwf	(btemp+11)^0,w,c
 32825  01DB7E  A4D8               	btfss	status,2,c
 32826  01DB80  D002               	goto	u7770
 32827  01DB82  0E01               	movlw	1
 32828  01DB84  D001               	goto	u7780
 32829  01DB86                     u7770:
 32830  01DB86  0E00               	movlw	0
 32831  01DB88                     u7780:
 32832  01DB88  6E2A               	movwf	btemp^0,c
 32833  01DB8A  6A2B               	clrf	(btemp+1)^0,c
 32834  01DB8C  D004               	goto	l3403
 32835  01DB8E                     l10068:
 32836  01DB8E  0E04               	movlw	4
 32837  01DB90                     L36:
 32838  01DB90  6E2A               	movwf	btemp^0,c
 32839  01DB92  0E00               	movlw	0
 32840  01DB94  6E2B               	movwf	(btemp+1)^0,c
 32841  01DB96                     l3403:
 32842                           
 32843                           ; ___fpclassifyf: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4,
      +                           argsize = 4, vargsize = 0
 32844  01DB96  0EF6               	movlw	246
 32845  01DB98  26E1               	addwf	fsr1l,f,c
 32846  01DB9A  0EFF               	movlw	255
 32847  01DB9C  22E2               	addwfc	fsr1h,f,c
 32848  01DB9E  0012               	return		;funcret
 32849  01DBA0                     __end_of___fpclassifyf:
 32850                           	opt callstack 0
 32851                           
 32852 ;; *************** function ___fltol *****************
 32853 ;; Defined at:
 32854 ;;		line 43 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fltol.c"
 32855 ;; Parameters:    Size  Location     Type
 32856 ;;  f1              4  [STACK] int 
 32857 ;; Auto vars:     Size  Location     Type
 32858 ;;  exp1            1  [STACK] unsigned char 
 32859 ;;  sign1           1  [STACK] unsigned char 
 32860 ;; Return value:  Size  Location     Type
 32861 ;;                  4  [STACK] long 
 32862 ;; Registers used:
 32863 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 32864 ;; Tracked objects:
 32865 ;;		On entry : 0/0
 32866 ;;		On exit  : 0/0
 32867 ;;		Unchanged: 0/0
 32868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32869 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32870 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32871 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32872 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32873 ;;Total ram usage:        0 bytes
 32874 ;; Hardware stack levels used:    1
 32875 ;; Hardware stack levels required when called:   15
 32876 ;; This function calls:
 32877 ;;		Nothing
 32878 ;; This function is called by:
 32879 ;;		_main
 32880 ;;		_convert_dac_raw
 32881 ;;		_load_hist_data
 32882 ;;		_calc_bsoc
 32883 ;;		_init_bsoc
 32884 ;;		_efgtoa
 32885 ;; This function uses a reentrant model
 32886 ;;
 32887                           
 32888                           	psect	text109
 32889  01E33A                     __ptext109:
 32890                           	opt callstack 0
 32891  01E33A                     ___fltol:
 32892                           	opt callstack 0
 32893                           
 32894                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32895  01E33A  52E6               	movf	postinc1,f,c
 32896  01E33C  52E6               	movf	postinc1,f,c
 32897                           
 32898                           ;stkvar	_f1 @ sp[(-2)+-4]
 32899                           
 32900                           ;incstack = 0
 32901 ;; hardware stack exceeded
 32902  01E33E  0EFA               	movlw	-6
 32903  01E340  006F FF8C  F032    	movff	plusw1,btemp+8
 32904  01E346  0EFB               	movlw	-5
 32905  01E348  006F FF8C  F033    	movff	plusw1,btemp+9
 32906  01E34E  0EFC               	movlw	-4
 32907  01E350  006F FF8C  F034    	movff	plusw1,btemp+10
 32908  01E356  0EFD               	movlw	-3
 32909  01E358  006F FF8C  F035    	movff	plusw1,btemp+11
 32910  01E35E  0E18               	movlw	24
 32911  01E360  D005               	goto	u8990
 32912  01E362                     u8995:
 32913  01E362  90D8               	bcf	status,0,c
 32914  01E364  3235               	rrcf	(btemp+11)^0,f,c
 32915  01E366  3234               	rrcf	(btemp+10)^0,f,c
 32916  01E368  3233               	rrcf	(btemp+9)^0,f,c
 32917  01E36A  3232               	rrcf	(btemp+8)^0,f,c
 32918  01E36C                     u8990:
 32919  01E36C  2EE8               	decfsz	wreg,f,c
 32920  01E36E  D7F9               	goto	u8995
 32921                           
 32922                           ;stkvar	_exp1 @ sp[(-2)+0]
 32923  01E370  0EFE               	movlw	-2
 32924  01E372  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 32925  01E378  0EFE               	movlw	-2
 32926  01E37A  50E3               	movf	plusw1,w,c
 32927  01E37C  A4D8               	btfss	status,2,c
 32928  01E37E  D006               	goto	l10714
 32929  01E380                     u9000:
 32930  01E380  0E00               	movlw	0
 32931  01E382  6E2A               	movwf	btemp^0,c
 32932  01E384  6A2B               	clrf	(btemp+1)^0,c
 32933  01E386  6A2C               	clrf	(btemp+2)^0,c
 32934  01E388  6A2D               	clrf	(btemp+3)^0,c
 32935  01E38A  D08B               	goto	l3019
 32936  01E38C                     l10714:
 32937                           
 32938                           ;stkvar	_f1 @ sp[(-2)+-4]
 32939  01E38C  0EFA               	movlw	-6
 32940  01E38E  006F FF8C  F032    	movff	plusw1,btemp+8
 32941  01E394  0EFB               	movlw	-5
 32942  01E396  006F FF8C  F033    	movff	plusw1,btemp+9
 32943  01E39C  0EFC               	movlw	-4
 32944  01E39E  006F FF8C  F034    	movff	plusw1,btemp+10
 32945  01E3A4  0EFD               	movlw	-3
 32946  01E3A6  006F FF8C  F035    	movff	plusw1,btemp+11
 32947  01E3AC  0E20               	movlw	32
 32948  01E3AE  D005               	goto	u9010
 32949  01E3B0                     u9015:
 32950  01E3B0  90D8               	bcf	status,0,c
 32951  01E3B2  3235               	rrcf	(btemp+11)^0,f,c
 32952  01E3B4  3234               	rrcf	(btemp+10)^0,f,c
 32953  01E3B6  3233               	rrcf	(btemp+9)^0,f,c
 32954  01E3B8  3232               	rrcf	(btemp+8)^0,f,c
 32955  01E3BA                     u9010:
 32956  01E3BA  2EE8               	decfsz	wreg,f,c
 32957  01E3BC  D7F9               	goto	u9015
 32958                           
 32959                           ;stkvar	_sign1 @ sp[(-2)+1]
 32960  01E3BE  0EFF               	movlw	-1
 32961  01E3C0  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 32962                           
 32963                           ;stkvar	_f1 @ sp[(-2)+-4]
 32964  01E3C6  0EFC               	movlw	-4
 32965  01E3C8  8EE3               	bsf	plusw1,7,c
 32966                           
 32967                           ;stkvar	_f1 @ sp[(-2)+-4]
 32968  01E3CA  50E1               	movf	fsr1l,w,c
 32969  01E3CC  0FFA               	addlw	-6
 32970  01E3CE  6ED9               	movwf	fsr2l,c
 32971  01E3D0  50E2               	movf	fsr1h,w,c
 32972  01E3D2  6EDA               	movwf	fsr2h,c
 32973  01E3D4  0EFF               	movlw	255
 32974  01E3D6  22DA               	addwfc	fsr2h,f,c
 32975  01E3D8  0EFF               	movlw	255
 32976  01E3DA  16DE               	andwf	postinc2,f,c
 32977  01E3DC  0EFF               	movlw	255
 32978  01E3DE  16DE               	andwf	postinc2,f,c
 32979  01E3E0  0EFF               	movlw	255
 32980  01E3E2  16DE               	andwf	postinc2,f,c
 32981  01E3E4  0E00               	movlw	0
 32982  01E3E6  16DE               	andwf	postinc2,f,c
 32983                           
 32984                           ;stkvar	_exp1 @ sp[(-2)+0]
 32985  01E3E8  0EFE               	movlw	-2
 32986  01E3EA  006F FF8C  F02A    	movff	plusw1,btemp
 32987  01E3F0  0E96               	movlw	150
 32988  01E3F2  5E2A               	subwf	btemp^0,f,c
 32989  01E3F4  0EFE               	movlw	-2
 32990  01E3F6  0060  F0AB  FFE3   	movff	btemp,plusw1
 32991                           
 32992                           ;stkvar	_exp1 @ sp[(-2)+0]
 32993  01E3FC  0EFE               	movlw	-2
 32994  01E3FE  AEE3               	btfss	plusw1,7,c
 32995  01E400  D014               	goto	l10732
 32996                           
 32997                           ;stkvar	_exp1 @ sp[(-2)+0]
 32998  01E402  0EFE               	movlw	-2
 32999  01E404  50E3               	movf	plusw1,w,c
 33000  01E406  0A80               	xorlw	128
 33001  01E408  0F97               	addlw	151
 33002  01E40A  A0D8               	btfss	status,0,c
 33003  01E40C  D7B9               	goto	u9000
 33004  01E40E                     l10730:
 33005                           
 33006                           ;stkvar	_f1 @ sp[(-2)+-4]
 33007  01E40E  90D8               	bcf	status,0,c
 33008  01E410  0EFD               	movlw	-3
 33009  01E412  32E3               	rrcf	plusw1,f,c
 33010  01E414  0EFC               	movlw	-4
 33011  01E416  32E3               	rrcf	plusw1,f,c
 33012  01E418  0EFB               	movlw	-5
 33013  01E41A  32E3               	rrcf	plusw1,f,c
 33014  01E41C  0EFA               	movlw	-6
 33015  01E41E  32E3               	rrcf	plusw1,f,c
 33016                           
 33017                           ;stkvar	_exp1 @ sp[(-2)+0]
 33018  01E420  0EFE               	movlw	-2
 33019  01E422  2AE3               	incf	plusw1,f,c
 33020  01E424  B4D8               	btfsc	status,2,c
 33021  01E426  D018               	goto	u9060
 33022  01E428  D7F2               	goto	l10730
 33023  01E42A                     l10732:
 33024                           
 33025                           ;stkvar	_exp1 @ sp[(-2)+0]
 33026  01E42A  0EFE               	movlw	-2
 33027  01E42C  006F FF8C  F02A    	movff	plusw1,btemp
 33028  01E432  0E1F               	movlw	31
 33029  01E434  642A               	cpfsgt	btemp^0,c
 33030  01E436  D00C               	goto	l10740
 33031  01E438  D7A3               	goto	u9000
 33032  01E43A                     l10738:
 33033                           
 33034                           ;stkvar	_f1 @ sp[(-2)+-4]
 33035  01E43A  90D8               	bcf	status,0,c
 33036  01E43C  0EFA               	movlw	-6
 33037  01E43E  36E3               	rlcf	plusw1,f,c
 33038  01E440  0EFB               	movlw	-5
 33039  01E442  36E3               	rlcf	plusw1,f,c
 33040  01E444  0EFC               	movlw	-4
 33041  01E446  36E3               	rlcf	plusw1,f,c
 33042  01E448  0EFD               	movlw	-3
 33043  01E44A  36E3               	rlcf	plusw1,f,c
 33044                           
 33045                           ;stkvar	_exp1 @ sp[(-2)+0]
 33046  01E44C  0EFE               	movlw	-2
 33047  01E44E  06E3               	decf	plusw1,f,c
 33048  01E450                     l10740:
 33049                           
 33050                           ;stkvar	_exp1 @ sp[(-2)+0]
 33051  01E450  0EFE               	movlw	-2
 33052  01E452  50E3               	movf	plusw1,w,c
 33053  01E454  A4D8               	btfss	status,2,c
 33054  01E456  D7F1               	goto	l10738
 33055  01E458                     u9060:
 33056                           
 33057                           ;stkvar	_sign1 @ sp[(-2)+1]
 33058  01E458  0EFF               	movlw	-1
 33059  01E45A  50E3               	movf	plusw1,w,c
 33060  01E45C  B4D8               	btfsc	status,2,c
 33061  01E45E  D011               	goto	u9080
 33062                           
 33063                           ;stkvar	_f1 @ sp[(-2)+-4]
 33064                           ;stkvar	_f1 @ sp[(-2)+-4]
 33065  01E460  0EFA               	movlw	-6
 33066  01E462  6CE3               	negf	plusw1,c
 33067  01E464  0EFB               	movlw	-5
 33068  01E466  1EE3               	comf	plusw1,f,c
 33069  01E468  0EFC               	movlw	-4
 33070  01E46A  1EE3               	comf	plusw1,f,c
 33071  01E46C  0EFD               	movlw	-3
 33072  01E46E  1EE3               	comf	plusw1,f,c
 33073  01E470  E308               	bnc	u9080
 33074  01E472  0EFB               	movlw	-5
 33075  01E474  2AE3               	incf	plusw1,f,c
 33076  01E476  E305               	bnc	u9080
 33077  01E478  0EFC               	movlw	-4
 33078  01E47A  2AE3               	incf	plusw1,f,c
 33079  01E47C  E302               	bnc	u9080
 33080  01E47E  0EFD               	movlw	-3
 33081  01E480  2AE3               	incf	plusw1,f,c
 33082  01E482                     u9080:
 33083                           
 33084                           ;stkvar	_f1 @ sp[(-2)+-4]
 33085  01E482  0EFA               	movlw	-6
 33086  01E484  006F FF8C  F02A    	movff	plusw1,btemp
 33087  01E48A  0EFB               	movlw	-5
 33088  01E48C  006F FF8C  F02B    	movff	plusw1,btemp+1
 33089  01E492  0EFC               	movlw	-4
 33090  01E494  006F FF8C  F02C    	movff	plusw1,btemp+2
 33091  01E49A  0EFD               	movlw	-3
 33092  01E49C  006F FF8C  F02D    	movff	plusw1,btemp+3
 33093  01E4A2                     l3019:
 33094                           
 33095                           ; ___fltol: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 33096  01E4A2  0EFA               	movlw	250
 33097  01E4A4  26E1               	addwf	fsr1l,f,c
 33098  01E4A6  0EFF               	movlw	255
 33099  01E4A8  22E2               	addwfc	fsr1h,f,c
 33100  01E4AA  0012               	return		;funcret
 33101  01E4AC                     __end_of___fltol:
 33102                           	opt callstack 0
 33103                           
 33104 ;; *************** function ___flneg *****************
 33105 ;; Defined at:
 33106 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flneg.c"
 33107 ;; Parameters:    Size  Location     Type
 33108 ;;  f1              4  [STACK] long 
 33109 ;; Auto vars:     Size  Location     Type
 33110 ;;		None
 33111 ;; Return value:  Size  Location     Type
 33112 ;;                  4  [STACK] long 
 33113 ;; Registers used:
 33114 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 33115 ;; Tracked objects:
 33116 ;;		On entry : 0/0
 33117 ;;		On exit  : 0/0
 33118 ;;		Unchanged: 0/0
 33119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33120 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33121 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33122 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33123 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33124 ;;Total ram usage:        0 bytes
 33125 ;; Hardware stack levels used:    1
 33126 ;; Hardware stack levels required when called:   15
 33127 ;; This function calls:
 33128 ;;		Nothing
 33129 ;; This function is called by:
 33130 ;;		_calc_bsoc
 33131 ;;		_efgtoa
 33132 ;; This function uses a reentrant model
 33133 ;;
 33134                           
 33135                           	psect	text110
 33136  0018FC                     __ptext110:
 33137                           	opt callstack 0
 33138  0018FC                     ___flneg:
 33139                           	opt callstack 0
 33140                           
 33141                           ;stkvar	_f1 @ sp[(0)+-4]
 33142                           
 33143                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33144                           ;incstack = 0
 33145 ;; hardware stack exceeded
 33146  0018FC  0EFC               	movlw	-4
 33147  0018FE  50E3               	movf	plusw1,w,c
 33148  001900  E10A               	bnz	u8980
 33149  001902  0EFD               	movlw	-3
 33150  001904  50E3               	movf	plusw1,w,c
 33151  001906  E107               	bnz	u8980
 33152  001908  0EFE               	movlw	-2
 33153  00190A  50E3               	movf	plusw1,w,c
 33154  00190C  E104               	bnz	u8980
 33155  00190E  0EFF               	movlw	-1
 33156  001910  50E3               	movf	plusw1,w,c
 33157  001912  B4D8               	btfsc	status,2,c
 33158  001914  D002               	goto	l10704
 33159  001916                     u8980:
 33160                           
 33161                           ;stkvar	_f1 @ sp[(0)+-4]
 33162  001916  0EFF               	movlw	-1
 33163  001918  7EE3               	btg	plusw1,7,c
 33164  00191A                     l10704:
 33165                           
 33166                           ;stkvar	_f1 @ sp[(0)+-4]
 33167  00191A  0EFC               	movlw	-4
 33168  00191C  006F FF8C  F02A    	movff	plusw1,btemp
 33169  001922  0EFD               	movlw	-3
 33170  001924  006F FF8C  F02B    	movff	plusw1,btemp+1
 33171  00192A  0EFE               	movlw	-2
 33172  00192C  006F FF8C  F02C    	movff	plusw1,btemp+2
 33173  001932  0EFF               	movlw	-1
 33174  001934  006F FF8C  F02D    	movff	plusw1,btemp+3
 33175                           
 33176                           ; ___flneg: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 33177  00193A  52E5               	movf	postdec1,f,c
 33178  00193C  52E5               	movf	postdec1,f,c
 33179  00193E  52E5               	movf	postdec1,f,c
 33180  001940  52E5               	movf	postdec1,f,c
 33181  001942  0012               	return		;funcret
 33182  001944                     __end_of___flneg:
 33183                           	opt callstack 0
 33184                           
 33185 ;; *************** function ___fleq *****************
 33186 ;; Defined at:
 33187 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fleq.c"
 33188 ;; Parameters:    Size  Location     Type
 33189 ;;  ff1             4  [STACK] long 
 33190 ;;  ff2             4  [STACK] long 
 33191 ;; Auto vars:     Size  Location     Type
 33192 ;;		None
 33193 ;; Return value:  Size  Location     Type
 33194 ;;		None               void
 33195 ;; Registers used:
 33196 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 33197 ;; Tracked objects:
 33198 ;;		On entry : 0/0
 33199 ;;		On exit  : 0/0
 33200 ;;		Unchanged: 0/0
 33201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33202 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33203 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33204 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33205 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33206 ;;Total ram usage:        0 bytes
 33207 ;; Hardware stack levels used:    1
 33208 ;; Hardware stack levels required when called:   15
 33209 ;; This function calls:
 33210 ;;		Nothing
 33211 ;; This function is called by:
 33212 ;;		_efgtoa
 33213 ;; This function uses a reentrant model
 33214 ;;
 33215                           
 33216                           	psect	text111
 33217  000184                     __ptext111:
 33218                           	opt callstack 0
 33219  000184                     ___fleq:
 33220                           	opt callstack 0
 33221                           
 33222                           ;stkvar	_ff1 @ sp[(0)+-4]
 33223                           
 33224                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33225                           ;incstack = 0
 33226 ;; hardware stack exceeded
 33227  000184  50E1               	movf	fsr1l,w,c
 33228  000186  0FFC               	addlw	-4
 33229  000188  6ED9               	movwf	fsr2l,c
 33230  00018A  50E2               	movf	fsr1h,w,c
 33231  00018C  6EDA               	movwf	fsr2h,c
 33232  00018E  0EFF               	movlw	255
 33233  000190  22DA               	addwfc	fsr2h,f,c
 33234  000192  0E00               	movlw	0
 33235  000194  14DE               	andwf	postinc2,w,c
 33236  000196  6E32               	movwf	(btemp+8)^0,c
 33237  000198  0E00               	movlw	0
 33238  00019A  14DE               	andwf	postinc2,w,c
 33239  00019C  6E33               	movwf	(btemp+9)^0,c
 33240  00019E  0E80               	movlw	128
 33241  0001A0  14DE               	andwf	postinc2,w,c
 33242  0001A2  6E34               	movwf	(btemp+10)^0,c
 33243  0001A4  0E7F               	movlw	127
 33244  0001A6  14DE               	andwf	postinc2,w,c
 33245  0001A8  6E35               	movwf	(btemp+11)^0,c
 33246  0001AA  5032               	movf	(btemp+8)^0,w,c
 33247  0001AC  1033               	iorwf	(btemp+9)^0,w,c
 33248  0001AE  1034               	iorwf	(btemp+10)^0,w,c
 33249  0001B0  1035               	iorwf	(btemp+11)^0,w,c
 33250  0001B2  A4D8               	btfss	status,2,c
 33251  0001B4  D008               	goto	l10662
 33252                           
 33253                           ;stkvar	_ff1 @ sp[(0)+-4]
 33254  0001B6  0EFC               	movlw	-4
 33255  0001B8  6AE3               	clrf	plusw1,c
 33256  0001BA  0EFD               	movlw	-3
 33257  0001BC  6AE3               	clrf	plusw1,c
 33258  0001BE  0EFE               	movlw	-2
 33259  0001C0  6AE3               	clrf	plusw1,c
 33260  0001C2  0EFF               	movlw	-1
 33261  0001C4  6AE3               	clrf	plusw1,c
 33262  0001C6                     l10662:
 33263                           
 33264                           ;stkvar	_ff2 @ sp[(0)+-8]
 33265  0001C6  50E1               	movf	fsr1l,w,c
 33266  0001C8  0FF8               	addlw	-8
 33267  0001CA  6ED9               	movwf	fsr2l,c
 33268  0001CC  50E2               	movf	fsr1h,w,c
 33269  0001CE  6EDA               	movwf	fsr2h,c
 33270  0001D0  0EFF               	movlw	255
 33271  0001D2  22DA               	addwfc	fsr2h,f,c
 33272  0001D4  0E00               	movlw	0
 33273  0001D6  14DE               	andwf	postinc2,w,c
 33274  0001D8  6E32               	movwf	(btemp+8)^0,c
 33275  0001DA  0E00               	movlw	0
 33276  0001DC  14DE               	andwf	postinc2,w,c
 33277  0001DE  6E33               	movwf	(btemp+9)^0,c
 33278  0001E0  0E80               	movlw	128
 33279  0001E2  14DE               	andwf	postinc2,w,c
 33280  0001E4  6E34               	movwf	(btemp+10)^0,c
 33281  0001E6  0E7F               	movlw	127
 33282  0001E8  14DE               	andwf	postinc2,w,c
 33283  0001EA  6E35               	movwf	(btemp+11)^0,c
 33284  0001EC  5032               	movf	(btemp+8)^0,w,c
 33285  0001EE  1033               	iorwf	(btemp+9)^0,w,c
 33286  0001F0  1034               	iorwf	(btemp+10)^0,w,c
 33287  0001F2  1035               	iorwf	(btemp+11)^0,w,c
 33288  0001F4  A4D8               	btfss	status,2,c
 33289  0001F6  D008               	goto	l10666
 33290                           
 33291                           ;stkvar	_ff2 @ sp[(0)+-8]
 33292  0001F8  0EF8               	movlw	-8
 33293  0001FA  6AE3               	clrf	plusw1,c
 33294  0001FC  0EF9               	movlw	-7
 33295  0001FE  6AE3               	clrf	plusw1,c
 33296  000200  0EFA               	movlw	-6
 33297  000202  6AE3               	clrf	plusw1,c
 33298  000204  0EFB               	movlw	-5
 33299  000206  6AE3               	clrf	plusw1,c
 33300  000208                     l10666:
 33301                           
 33302                           ;stkvar	_ff2 @ sp[(0)+-8]
 33303                           ;stkvar	_ff1 @ sp[(0)+-4]
 33304  000208  50E1               	movf	fsr1l,w,c
 33305  00020A  0FFC               	addlw	-4
 33306  00020C  6ED9               	movwf	fsr2l,c
 33307  00020E  50E2               	movf	fsr1h,w,c
 33308  000210  6EDA               	movwf	fsr2h,c
 33309  000212  0EFF               	movlw	255
 33310  000214  22DA               	addwfc	fsr2h,f,c
 33311  000216  0EF8               	movlw	-8
 33312  000218  50E3               	movf	plusw1,w,c
 33313  00021A  18DE               	xorwf	postinc2,w,c
 33314  00021C  E10D               	bnz	u8920
 33315  00021E  0EF9               	movlw	-7
 33316  000220  50E3               	movf	plusw1,w,c
 33317  000222  18DE               	xorwf	postinc2,w,c
 33318  000224  E109               	bnz	u8920
 33319  000226  0EFA               	movlw	-6
 33320  000228  50E3               	movf	plusw1,w,c
 33321  00022A  18DE               	xorwf	postinc2,w,c
 33322  00022C  E105               	bnz	u8920
 33323  00022E  0EFB               	movlw	-5
 33324  000230  50E3               	movf	plusw1,w,c
 33325  000232  18DE               	xorwf	postinc2,w,c
 33326  000234  B4D8               	btfsc	status,2,c
 33327  000236  D002               	goto	l10670
 33328  000238                     u8920:
 33329  000238  902A               	bcf	btemp& (0+255),0,c
 33330  00023A  D001               	goto	l2981
 33331  00023C                     l10670:
 33332  00023C  802A               	bsf	btemp& (0+255),0,c
 33333  00023E                     l2981:
 33334                           
 33335                           ; ___fleq: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 33336  00023E  0EF8               	movlw	248
 33337  000240  26E1               	addwf	fsr1l,f,c
 33338  000242  0EFF               	movlw	255
 33339  000244  22E2               	addwfc	fsr1h,f,c
 33340  000246  0012               	return		;funcret
 33341  000248                     __end_of___fleq:
 33342                           	opt callstack 0
 33343                           
 33344 ;; *************** function ___awmod *****************
 33345 ;; Defined at:
 33346 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awmod.c"
 33347 ;; Parameters:    Size  Location     Type
 33348 ;;  dividend        2  [STACK] int 
 33349 ;;  divisor         2  [STACK] int 
 33350 ;; Auto vars:     Size  Location     Type
 33351 ;;  sign            1  [STACK] unsigned char 
 33352 ;;  counter         1  [STACK] unsigned char 
 33353 ;; Return value:  Size  Location     Type
 33354 ;;                  2  [STACK] int 
 33355 ;; Registers used:
 33356 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 33357 ;; Tracked objects:
 33358 ;;		On entry : 0/3
 33359 ;;		On exit  : 0/0
 33360 ;;		Unchanged: 0/0
 33361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33363 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33365 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33366 ;;Total ram usage:        0 bytes
 33367 ;; Hardware stack levels used:    1
 33368 ;; Hardware stack levels required when called:   15
 33369 ;; This function calls:
 33370 ;;		Nothing
 33371 ;; This function is called by:
 33372 ;;		_efgtoa
 33373 ;;		_asctime
 33374 ;; This function uses a reentrant model
 33375 ;;
 33376                           
 33377                           	psect	text112
 33378  01F546                     __ptext112:
 33379                           	opt callstack 0
 33380  01F546                     ___awmod:
 33381                           	opt callstack 0
 33382                           
 33383                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33384  01F546  52E6               	movf	postinc1,f,c
 33385  01F548  52E6               	movf	postinc1,f,c
 33386                           
 33387                           ;stkvar	_sign @ sp[(-2)+0]
 33388                           
 33389                           ;incstack = 0
 33390 ;; hardware stack exceeded
 33391  01F54A  0EFE               	movlw	-2
 33392  01F54C  6AE3               	clrf	plusw1,c
 33393                           
 33394                           ;stkvar	_dividend @ sp[(-2)+-2]
 33395  01F54E  0EFD               	movlw	-3
 33396  01F550  AEE3               	btfss	plusw1,7,c
 33397  01F552  D009               	goto	l15442
 33398                           
 33399                           ;stkvar	_dividend @ sp[(-2)+-2]
 33400                           ;stkvar	_dividend @ sp[(-2)+-2]
 33401  01F554  0EFC               	movlw	-4
 33402  01F556  6CE3               	negf	plusw1,c
 33403  01F558  0EFD               	movlw	-3
 33404  01F55A  1EE3               	comf	plusw1,f,c
 33405  01F55C  B0D8               	btfsc	status,0,c
 33406  01F55E  2AE3               	incf	plusw1,f,c
 33407                           
 33408                           ;stkvar	_sign @ sp[(-2)+0]
 33409  01F560  0EFE               	movlw	-2
 33410  01F562  6AE3               	clrf	plusw1,c
 33411  01F564  2AE3               	incf	plusw1,f,c
 33412  01F566                     l15442:
 33413                           
 33414                           ;stkvar	_divisor @ sp[(-2)+-4]
 33415  01F566  0EFB               	movlw	-5
 33416  01F568  AEE3               	btfss	plusw1,7,c
 33417  01F56A  D006               	goto	l15446
 33418                           
 33419                           ;stkvar	_divisor @ sp[(-2)+-4]
 33420                           ;stkvar	_divisor @ sp[(-2)+-4]
 33421  01F56C  0EFA               	movlw	-6
 33422  01F56E  6CE3               	negf	plusw1,c
 33423  01F570  0EFB               	movlw	-5
 33424  01F572  1EE3               	comf	plusw1,f,c
 33425  01F574  B0D8               	btfsc	status,0,c
 33426  01F576  2AE3               	incf	plusw1,f,c
 33427  01F578                     l15446:
 33428                           
 33429                           ;stkvar	_divisor @ sp[(-2)+-4]
 33430  01F578  0EFA               	movlw	-6
 33431  01F57A  006F FF8C  F02A    	movff	plusw1,btemp
 33432  01F580  0EFB               	movlw	-5
 33433  01F582  50E3               	movf	plusw1,w,c
 33434  01F584  102A               	iorwf	btemp^0,w,c
 33435  01F586  B4D8               	btfsc	status,2,c
 33436  01F588  D053               	goto	u14440
 33437                           
 33438                           ;stkvar	_counter @ sp[(-2)+1]
 33439  01F58A  0EFF               	movlw	-1
 33440  01F58C  6AE3               	clrf	plusw1,c
 33441  01F58E  D012               	goto	L37
 33442  01F590                     l15450:
 33443                           
 33444                           ;stkvar	_divisor @ sp[(-2)+-4]
 33445  01F590  0EFA               	movlw	-6
 33446  01F592  50E3               	movf	plusw1,w,c
 33447  01F594  90D8               	bcf	status,0,c
 33448  01F596  34E8               	rlcf	wreg,w,c
 33449  01F598  6E2A               	movwf	btemp^0,c
 33450  01F59A  0EFA               	movlw	-6
 33451  01F59C  0060  F0AB  FFE3   	movff	btemp,plusw1
 33452  01F5A2  0EFB               	movlw	-5
 33453  01F5A4  50E3               	movf	plusw1,w,c
 33454  01F5A6  34E8               	rlcf	wreg,w,c
 33455  01F5A8  6E2A               	movwf	btemp^0,c
 33456  01F5AA  0EFB               	movlw	-5
 33457  01F5AC  0060  F0AB  FFE3   	movff	btemp,plusw1
 33458                           
 33459                           ;stkvar	_counter @ sp[(-2)+1]
 33460  01F5B2  0EFF               	movlw	-1
 33461  01F5B4                     L37:
 33462  01F5B4  2AE3               	incf	plusw1,f,c
 33463                           
 33464                           ;stkvar	_divisor @ sp[(-2)+-4]
 33465  01F5B6  0EFB               	movlw	-5
 33466  01F5B8  AEE3               	btfss	plusw1,7,c
 33467  01F5BA  D7EA               	goto	l15450
 33468  01F5BC                     u14420:
 33469                           
 33470                           ;stkvar	_divisor @ sp[(-2)+-4]
 33471  01F5BC  0EFA               	movlw	-6
 33472  01F5BE  006F FF8C  F034    	movff	plusw1,btemp+10
 33473  01F5C4  0EFB               	movlw	-5
 33474  01F5C6  006F FF8C  F035    	movff	plusw1,btemp+11
 33475                           
 33476                           ;stkvar	_dividend @ sp[(-2)+-2]
 33477  01F5CC  0EFC               	movlw	-4
 33478  01F5CE  006F FF8C  F032    	movff	plusw1,btemp+8
 33479  01F5D4  0EFD               	movlw	-3
 33480  01F5D6  006F FF8C  F033    	movff	plusw1,btemp+9
 33481  01F5DC  5034               	movf	(btemp+10)^0,w,c
 33482  01F5DE  5C32               	subwf	(btemp+8)^0,w,c
 33483  01F5E0  5035               	movf	(btemp+11)^0,w,c
 33484  01F5E2  5833               	subwfb	(btemp+9)^0,w,c
 33485  01F5E4  A0D8               	btfss	status,0,c
 33486  01F5E6  D014               	goto	l15460
 33487                           
 33488                           ;stkvar	_divisor @ sp[(-2)+-4]
 33489                           ;stkvar	_dividend @ sp[(-2)+-2]
 33490  01F5E8  0EFC               	movlw	-4
 33491  01F5EA  50E3               	movf	plusw1,w,c
 33492  01F5EC  6E2A               	movwf	btemp^0,c
 33493  01F5EE  0EFA               	movlw	-6
 33494  01F5F0  50E3               	movf	plusw1,w,c
 33495  01F5F2  5E2A               	subwf	btemp^0,f,c
 33496  01F5F4  0EFC               	movlw	-4
 33497  01F5F6  0060  F0AB  FFE3   	movff	btemp,plusw1
 33498  01F5FC  0EFD               	movlw	-3
 33499  01F5FE  50E3               	movf	plusw1,w,c
 33500  01F600  6E2A               	movwf	btemp^0,c
 33501  01F602  0EFB               	movlw	-5
 33502  01F604  50E3               	movf	plusw1,w,c
 33503  01F606  5A2A               	subwfb	btemp^0,f,c
 33504  01F608  0EFD               	movlw	-3
 33505  01F60A  0060  F0AB  FFE3   	movff	btemp,plusw1
 33506  01F610                     l15460:
 33507                           
 33508                           ;stkvar	_divisor @ sp[(-2)+-4]
 33509  01F610  90D8               	bcf	status,0,c
 33510  01F612  0EFB               	movlw	-5
 33511  01F614  32E3               	rrcf	plusw1,f,c
 33512  01F616  0EFA               	movlw	-6
 33513  01F618  32E3               	rrcf	plusw1,f,c
 33514                           
 33515                           ;stkvar	_counter @ sp[(-2)+1]
 33516  01F61A  0EFF               	movlw	-1
 33517  01F61C  50E3               	movf	plusw1,w,c
 33518  01F61E  6E2A               	movwf	btemp^0,c
 33519  01F620  0E01               	movlw	1
 33520  01F622  5E2A               	subwf	btemp^0,f,c
 33521  01F624  0EFF               	movlw	-1
 33522  01F626  0060  F0AB  FFE3   	movff	btemp,plusw1
 33523  01F62C  A4D8               	btfss	status,2,c
 33524  01F62E  D7C6               	goto	u14420
 33525  01F630                     u14440:
 33526                           
 33527                           ;stkvar	_sign @ sp[(-2)+0]
 33528  01F630  0EFE               	movlw	-2
 33529  01F632  50E3               	movf	plusw1,w,c
 33530  01F634  B4D8               	btfsc	status,2,c
 33531  01F636  D006               	goto	l15468
 33532                           
 33533                           ;stkvar	_dividend @ sp[(-2)+-2]
 33534                           ;stkvar	_dividend @ sp[(-2)+-2]
 33535  01F638  0EFC               	movlw	-4
 33536  01F63A  6CE3               	negf	plusw1,c
 33537  01F63C  0EFD               	movlw	-3
 33538  01F63E  1EE3               	comf	plusw1,f,c
 33539  01F640  B0D8               	btfsc	status,0,c
 33540  01F642  2AE3               	incf	plusw1,f,c
 33541  01F644                     l15468:
 33542                           
 33543                           ;stkvar	_dividend @ sp[(-2)+-2]
 33544  01F644  0EFC               	movlw	-4
 33545  01F646  006F FF8C  F02A    	movff	plusw1,btemp
 33546  01F64C  0EFD               	movlw	-3
 33547  01F64E  006F FF8C  F02B    	movff	plusw1,btemp+1
 33548                           
 33549                           ; ___awmod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 33550  01F654  0EFA               	movlw	250
 33551  01F656  26E1               	addwf	fsr1l,f,c
 33552  01F658  0EFF               	movlw	255
 33553  01F65A  22E2               	addwfc	fsr1h,f,c
 33554  01F65C  0012               	return		;funcret
 33555  01F65E                     __end_of___awmod:
 33556                           	opt callstack 0
 33557                           
 33558 ;; *************** function ___awdiv *****************
 33559 ;; Defined at:
 33560 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awdiv.c"
 33561 ;; Parameters:    Size  Location     Type
 33562 ;;  dividend        2  [STACK] int 
 33563 ;;  divisor         2  [STACK] int 
 33564 ;; Auto vars:     Size  Location     Type
 33565 ;;  quotient        2  [STACK] int 
 33566 ;;  sign            1  [STACK] unsigned char 
 33567 ;;  counter         1  [STACK] unsigned char 
 33568 ;; Return value:  Size  Location     Type
 33569 ;;                  2  [STACK] int 
 33570 ;; Registers used:
 33571 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 33572 ;; Tracked objects:
 33573 ;;		On entry : 0/3
 33574 ;;		On exit  : 0/0
 33575 ;;		Unchanged: 0/0
 33576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33577 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33578 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33580 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33581 ;;Total ram usage:        0 bytes
 33582 ;; Hardware stack levels used:    1
 33583 ;; Hardware stack levels required when called:   15
 33584 ;; This function calls:
 33585 ;;		Nothing
 33586 ;; This function is called by:
 33587 ;;		_efgtoa
 33588 ;;		_put2d
 33589 ;;		_asctime
 33590 ;;		_scan_trans
 33591 ;; This function uses a reentrant model
 33592 ;;
 33593                           
 33594                           	psect	text113
 33595  01ECE8                     __ptext113:
 33596                           	opt callstack 0
 33597  01ECE8                     ___awdiv:
 33598                           	opt callstack 0
 33599                           
 33600                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33601  01ECE8  52E6               	movf	postinc1,f,c
 33602  01ECEA  52E6               	movf	postinc1,f,c
 33603  01ECEC  52E6               	movf	postinc1,f,c
 33604  01ECEE  52E6               	movf	postinc1,f,c
 33605                           
 33606                           ;stkvar	_sign @ sp[(-4)+2]
 33607                           
 33608                           ;incstack = 0
 33609 ;; hardware stack exceeded
 33610  01ECF0  0EFE               	movlw	-2
 33611  01ECF2  6AE3               	clrf	plusw1,c
 33612                           
 33613                           ;stkvar	_divisor @ sp[(-4)+-4]
 33614  01ECF4  0EF9               	movlw	-7
 33615  01ECF6  AEE3               	btfss	plusw1,7,c
 33616  01ECF8  D009               	goto	l15396
 33617                           
 33618                           ;stkvar	_divisor @ sp[(-4)+-4]
 33619                           ;stkvar	_divisor @ sp[(-4)+-4]
 33620  01ECFA  0EF8               	movlw	-8
 33621  01ECFC  6CE3               	negf	plusw1,c
 33622  01ECFE  0EF9               	movlw	-7
 33623  01ED00  1EE3               	comf	plusw1,f,c
 33624  01ED02  B0D8               	btfsc	status,0,c
 33625  01ED04  2AE3               	incf	plusw1,f,c
 33626                           
 33627                           ;stkvar	_sign @ sp[(-4)+2]
 33628  01ED06  0EFE               	movlw	-2
 33629  01ED08  6AE3               	clrf	plusw1,c
 33630  01ED0A  2AE3               	incf	plusw1,f,c
 33631  01ED0C                     l15396:
 33632                           
 33633                           ;stkvar	_dividend @ sp[(-4)+-2]
 33634  01ED0C  0EFB               	movlw	-5
 33635  01ED0E  AEE3               	btfss	plusw1,7,c
 33636  01ED10  D008               	goto	l15402
 33637                           
 33638                           ;stkvar	_dividend @ sp[(-4)+-2]
 33639                           ;stkvar	_dividend @ sp[(-4)+-2]
 33640  01ED12  0EFA               	movlw	-6
 33641  01ED14  6CE3               	negf	plusw1,c
 33642  01ED16  0EFB               	movlw	-5
 33643  01ED18  1EE3               	comf	plusw1,f,c
 33644  01ED1A  B0D8               	btfsc	status,0,c
 33645  01ED1C  2AE3               	incf	plusw1,f,c
 33646                           
 33647                           ;stkvar	_sign @ sp[(-4)+2]
 33648  01ED1E  0EFE               	movlw	-2
 33649  01ED20  70E3               	btg	plusw1,0,c
 33650  01ED22                     l15402:
 33651                           
 33652                           ;stkvar	_quotient @ sp[(-4)+0]
 33653  01ED22  0EFC               	movlw	-4
 33654  01ED24  6AE3               	clrf	plusw1,c
 33655  01ED26  0EFD               	movlw	-3
 33656  01ED28  6AE3               	clrf	plusw1,c
 33657                           
 33658                           ;stkvar	_divisor @ sp[(-4)+-4]
 33659  01ED2A  0EF8               	movlw	-8
 33660  01ED2C  006F FF8C  F02A    	movff	plusw1,btemp
 33661  01ED32  0EF9               	movlw	-7
 33662  01ED34  50E3               	movf	plusw1,w,c
 33663  01ED36  102A               	iorwf	btemp^0,w,c
 33664  01ED38  B4D8               	btfsc	status,2,c
 33665  01ED3A  D066               	goto	u14370
 33666                           
 33667                           ;stkvar	_counter @ sp[(-4)+3]
 33668  01ED3C  0EFF               	movlw	-1
 33669  01ED3E  6AE3               	clrf	plusw1,c
 33670  01ED40  D012               	goto	L38
 33671  01ED42                     l15408:
 33672                           
 33673                           ;stkvar	_divisor @ sp[(-4)+-4]
 33674  01ED42  0EF8               	movlw	-8
 33675  01ED44  50E3               	movf	plusw1,w,c
 33676  01ED46  90D8               	bcf	status,0,c
 33677  01ED48  34E8               	rlcf	wreg,w,c
 33678  01ED4A  6E2A               	movwf	btemp^0,c
 33679  01ED4C  0EF8               	movlw	-8
 33680  01ED4E  0060  F0AB  FFE3   	movff	btemp,plusw1
 33681  01ED54  0EF9               	movlw	-7
 33682  01ED56  50E3               	movf	plusw1,w,c
 33683  01ED58  34E8               	rlcf	wreg,w,c
 33684  01ED5A  6E2A               	movwf	btemp^0,c
 33685  01ED5C  0EF9               	movlw	-7
 33686  01ED5E  0060  F0AB  FFE3   	movff	btemp,plusw1
 33687                           
 33688                           ;stkvar	_counter @ sp[(-4)+3]
 33689  01ED64  0EFF               	movlw	-1
 33690  01ED66                     L38:
 33691  01ED66  2AE3               	incf	plusw1,f,c
 33692                           
 33693                           ;stkvar	_divisor @ sp[(-4)+-4]
 33694  01ED68  0EF9               	movlw	-7
 33695  01ED6A  AEE3               	btfss	plusw1,7,c
 33696  01ED6C  D7EA               	goto	l15408
 33697  01ED6E                     u14350:
 33698                           
 33699                           ;stkvar	_quotient @ sp[(-4)+0]
 33700  01ED6E  0EFC               	movlw	-4
 33701  01ED70  50E3               	movf	plusw1,w,c
 33702  01ED72  90D8               	bcf	status,0,c
 33703  01ED74  34E8               	rlcf	wreg,w,c
 33704  01ED76  6E2A               	movwf	btemp^0,c
 33705  01ED78  0EFC               	movlw	-4
 33706  01ED7A  0060  F0AB  FFE3   	movff	btemp,plusw1
 33707  01ED80  0EFD               	movlw	-3
 33708  01ED82  50E3               	movf	plusw1,w,c
 33709  01ED84  34E8               	rlcf	wreg,w,c
 33710  01ED86  6E2A               	movwf	btemp^0,c
 33711  01ED88  0EFD               	movlw	-3
 33712  01ED8A  0060  F0AB  FFE3   	movff	btemp,plusw1
 33713                           
 33714                           ;stkvar	_divisor @ sp[(-4)+-4]
 33715  01ED90  0EF8               	movlw	-8
 33716  01ED92  006F FF8C  F034    	movff	plusw1,btemp+10
 33717  01ED98  0EF9               	movlw	-7
 33718  01ED9A  006F FF8C  F035    	movff	plusw1,btemp+11
 33719                           
 33720                           ;stkvar	_dividend @ sp[(-4)+-2]
 33721  01EDA0  0EFA               	movlw	-6
 33722  01EDA2  006F FF8C  F032    	movff	plusw1,btemp+8
 33723  01EDA8  0EFB               	movlw	-5
 33724  01EDAA  006F FF8C  F033    	movff	plusw1,btemp+9
 33725  01EDB0  5034               	movf	(btemp+10)^0,w,c
 33726  01EDB2  5C32               	subwf	(btemp+8)^0,w,c
 33727  01EDB4  5035               	movf	(btemp+11)^0,w,c
 33728  01EDB6  5833               	subwfb	(btemp+9)^0,w,c
 33729  01EDB8  A0D8               	btfss	status,0,c
 33730  01EDBA  D016               	goto	l15422
 33731                           
 33732                           ;stkvar	_divisor @ sp[(-4)+-4]
 33733                           ;stkvar	_dividend @ sp[(-4)+-2]
 33734  01EDBC  0EFA               	movlw	-6
 33735  01EDBE  50E3               	movf	plusw1,w,c
 33736  01EDC0  6E2A               	movwf	btemp^0,c
 33737  01EDC2  0EF8               	movlw	-8
 33738  01EDC4  50E3               	movf	plusw1,w,c
 33739  01EDC6  5E2A               	subwf	btemp^0,f,c
 33740  01EDC8  0EFA               	movlw	-6
 33741  01EDCA  0060  F0AB  FFE3   	movff	btemp,plusw1
 33742  01EDD0  0EFB               	movlw	-5
 33743  01EDD2  50E3               	movf	plusw1,w,c
 33744  01EDD4  6E2A               	movwf	btemp^0,c
 33745  01EDD6  0EF9               	movlw	-7
 33746  01EDD8  50E3               	movf	plusw1,w,c
 33747  01EDDA  5A2A               	subwfb	btemp^0,f,c
 33748  01EDDC  0EFB               	movlw	-5
 33749  01EDDE  0060  F0AB  FFE3   	movff	btemp,plusw1
 33750                           
 33751                           ;stkvar	_quotient @ sp[(-4)+0]
 33752  01EDE4  0EFC               	movlw	-4
 33753  01EDE6  80E3               	bsf	plusw1,0,c
 33754  01EDE8                     l15422:
 33755                           
 33756                           ;stkvar	_divisor @ sp[(-4)+-4]
 33757  01EDE8  90D8               	bcf	status,0,c
 33758  01EDEA  0EF9               	movlw	-7
 33759  01EDEC  32E3               	rrcf	plusw1,f,c
 33760  01EDEE  0EF8               	movlw	-8
 33761  01EDF0  32E3               	rrcf	plusw1,f,c
 33762                           
 33763                           ;stkvar	_counter @ sp[(-4)+3]
 33764  01EDF2  0EFF               	movlw	-1
 33765  01EDF4  50E3               	movf	plusw1,w,c
 33766  01EDF6  6E2A               	movwf	btemp^0,c
 33767  01EDF8  0E01               	movlw	1
 33768  01EDFA  5E2A               	subwf	btemp^0,f,c
 33769  01EDFC  0EFF               	movlw	-1
 33770  01EDFE  0060  F0AB  FFE3   	movff	btemp,plusw1
 33771  01EE04  A4D8               	btfss	status,2,c
 33772  01EE06  D7B3               	goto	u14350
 33773  01EE08                     u14370:
 33774                           
 33775                           ;stkvar	_sign @ sp[(-4)+2]
 33776  01EE08  0EFE               	movlw	-2
 33777  01EE0A  50E3               	movf	plusw1,w,c
 33778  01EE0C  B4D8               	btfsc	status,2,c
 33779  01EE0E  D006               	goto	l15430
 33780                           
 33781                           ;stkvar	_quotient @ sp[(-4)+0]
 33782                           ;stkvar	_quotient @ sp[(-4)+0]
 33783  01EE10  0EFC               	movlw	-4
 33784  01EE12  6CE3               	negf	plusw1,c
 33785  01EE14  0EFD               	movlw	-3
 33786  01EE16  1EE3               	comf	plusw1,f,c
 33787  01EE18  B0D8               	btfsc	status,0,c
 33788  01EE1A  2AE3               	incf	plusw1,f,c
 33789  01EE1C                     l15430:
 33790                           
 33791                           ;stkvar	_quotient @ sp[(-4)+0]
 33792  01EE1C  0EFC               	movlw	-4
 33793  01EE1E  006F FF8C  F02A    	movff	plusw1,btemp
 33794  01EE24  0EFD               	movlw	-3
 33795  01EE26  006F FF8C  F02B    	movff	plusw1,btemp+1
 33796                           
 33797                           ; ___awdiv: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 33798  01EE2C  0EF8               	movlw	248
 33799  01EE2E  26E1               	addwf	fsr1l,f,c
 33800  01EE30  0EFF               	movlw	255
 33801  01EE32  22E2               	addwfc	fsr1h,f,c
 33802  01EE34  0012               	return		;funcret
 33803  01EE36                     __end_of___awdiv:
 33804                           	opt callstack 0
 33805                           
 33806 ;; *************** function _dtoa *****************
 33807 ;; Defined at:
 33808 ;;		line 274 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 33809 ;; Parameters:    Size  Location     Type
 33810 ;;  fp              2  [STACK] PTR struct _IO_FILE
 33811 ;;		 -> f(6), NULL(0), 
 33812 ;;  d               8  [STACK] long long 
 33813 ;; Auto vars:     Size  Location     Type
 33814 ;;  n               8  [STACK] long long 
 33815 ;;  i               2  [STACK] int 
 33816 ;;  s               2  [STACK] int 
 33817 ;;  w               2  [STACK] int 
 33818 ;;  p               2  [STACK] int 
 33819 ;; Return value:  Size  Location     Type
 33820 ;;                  2  [STACK] int 
 33821 ;; Registers used:
 33822 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 33823 ;; Tracked objects:
 33824 ;;		On entry : 0/0
 33825 ;;		On exit  : 0/0
 33826 ;;		Unchanged: 0/0
 33827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33828 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33829 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33830 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33831 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33832 ;;Total ram usage:        0 bytes
 33833 ;; Hardware stack levels used:    1
 33834 ;; Hardware stack levels required when called:   20
 33835 ;; This function calls:
 33836 ;;		___aodiv
 33837 ;;		___aomod
 33838 ;;		_abs
 33839 ;;		_pad
 33840 ;; This function is called by:
 33841 ;;		_vfpfcnvrt
 33842 ;; This function uses a reentrant model
 33843 ;;
 33844                           
 33845                           	psect	text114
 33846  018A88                     __ptext114:
 33847                           	opt callstack 0
 33848  018A88                     _dtoa:
 33849                           	opt callstack 0
 33850                           
 33851                           ; autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 33852  018A88  0E12               	movlw	18
 33853  018A8A  26E1               	addwf	fsr1l,f,c
 33854  018A8C  0E00               	movlw	0
 33855  018A8E  22E2               	addwfc	fsr1h,f,c
 33856                           
 33857                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .10/pic/sources/c99/common/doprnt.c: 280:     n = d;
 33858                           ;stkvar	_d @ sp[(-18)+-10]
 33859                           
 33860                           ;incstack = 0
 33861 ;; hardware stack exceeded
 33862  018A90  0EE4               	movlw	228
 33863  018A92  24E1               	addwf	fsr1l,w,c
 33864  018A94  6ED9               	movwf	fsr2l,c
 33865  018A96  0EFF               	movlw	255
 33866  018A98  20E2               	addwfc	fsr1h,w,c
 33867  018A9A  6EDA               	movwf	fsr2h,c
 33868                           
 33869                           ;stkvar	_n @ sp[(-18)+2]
 33870  018A9C  0E08               	movlw	8
 33871  018A9E  6E2A               	movwf	btemp^0,c
 33872  018AA0  0EF0               	movlw	-16
 33873  018AA2                     us1448999:
 33874  018AA2  006F FF7B FFE3     	movff	postinc2,plusw1
 33875  018AA8  28E8               	incf	wreg,w,c
 33876  018AAA  2E2A               	decfsz	btemp^0,f,c
 33877  018AAC  D7FA               	bra	us1448999
 33878                           
 33879                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
 33880                           ;stkvar	_n @ sp[(-18)+2]
 33881  018AAE  0EF7               	movlw	-9
 33882  018AB0  AEE3               	btfss	plusw1,7,c
 33883  018AB2  D002               	goto	u14490
 33884  018AB4  0E01               	movlw	1
 33885  018AB6  D001               	goto	u14500
 33886  018AB8                     u14490:
 33887  018AB8  0E00               	movlw	0
 33888  018ABA                     u14500:
 33889  018ABA  6E34               	movwf	(btemp+10)^0,c
 33890  018ABC  6A35               	clrf	(btemp+11)^0,c
 33891                           
 33892                           ;stkvar	_s @ sp[(-18)+12]
 33893  018ABE  0EFA               	movlw	-6
 33894  018AC0  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 33895  018AC6  0EFB               	movlw	-5
 33896  018AC8  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 33897                           
 33898                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 282:     if (s) {
 33899                           ;stkvar	_s @ sp[(-18)+12]
 33900  018ACE  0EFA               	movlw	-6
 33901  018AD0  006F FF8C  F02A    	movff	plusw1,btemp
 33902  018AD6  0EFB               	movlw	-5
 33903  018AD8  50E3               	movf	plusw1,w,c
 33904  018ADA  102A               	iorwf	btemp^0,w,c
 33905  018ADC  B4D8               	btfsc	status,2,c
 33906  018ADE  D025               	goto	u14520
 33907                           
 33908                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 283:         n = -n;
 33909                           ;stkvar	_n @ sp[(-18)+2]
 33910                           ;stkvar	_n @ sp[(-18)+2]
 33911  018AE0  0EF0               	movlw	-16
 33912  018AE2  6CE3               	negf	plusw1,c
 33913  018AE4  0EF1               	movlw	-15
 33914  018AE6  1EE3               	comf	plusw1,f,c
 33915  018AE8  0EF2               	movlw	-14
 33916  018AEA  1EE3               	comf	plusw1,f,c
 33917  018AEC  0EF3               	movlw	-13
 33918  018AEE  1EE3               	comf	plusw1,f,c
 33919  018AF0  0EF4               	movlw	-12
 33920  018AF2  1EE3               	comf	plusw1,f,c
 33921  018AF4  0EF5               	movlw	-11
 33922  018AF6  1EE3               	comf	plusw1,f,c
 33923  018AF8  0EF6               	movlw	-10
 33924  018AFA  1EE3               	comf	plusw1,f,c
 33925  018AFC  0EF7               	movlw	-9
 33926  018AFE  1EE3               	comf	plusw1,f,c
 33927  018B00  E314               	bnc	u14520
 33928  018B02  0EF1               	movlw	-15
 33929  018B04  2AE3               	incf	plusw1,f,c
 33930  018B06  E311               	bnc	u14520
 33931  018B08  0EF2               	movlw	-14
 33932  018B0A  2AE3               	incf	plusw1,f,c
 33933  018B0C  E30E               	bnc	u14520
 33934  018B0E  0EF3               	movlw	-13
 33935  018B10  2AE3               	incf	plusw1,f,c
 33936  018B12  E30B               	bnc	u14520
 33937  018B14  0EF4               	movlw	-12
 33938  018B16  2AE3               	incf	plusw1,f,c
 33939  018B18  E308               	bnc	u14520
 33940  018B1A  0EF5               	movlw	-11
 33941  018B1C  2AE3               	incf	plusw1,f,c
 33942  018B1E  E305               	bnc	u14520
 33943  018B20  0EF6               	movlw	-10
 33944  018B22  2AE3               	incf	plusw1,f,c
 33945  018B24  E302               	bnc	u14520
 33946  018B26  0EF7               	movlw	-9
 33947  018B28  2AE3               	incf	plusw1,f,c
 33948  018B2A                     u14520:
 33949                           
 33950                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
 33951  018B2A  AE4D               	btfss	(_prec+1)^0,7,c
 33952                           
 33953                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
 33954  018B2C  924E               	bcf	_flags^0,1,c
 33955                           
 33956                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
 33957  018B2E  BE4D               	btfsc	(_prec+1)^0,7,c
 33958  018B30  D005               	goto	u14540
 33959  018B32  504D               	movf	(_prec+1)^0,w,c
 33960  018B34  E110               	bnz	l15508
 33961  018B36  044C               	decf	_prec^0,w,c
 33962  018B38  B0D8               	btfsc	status,0,c
 33963  018B3A  D00D               	goto	l15508
 33964  018B3C                     u14540:
 33965  018B3C  0E01               	movlw	1
 33966  018B3E  6E34               	movwf	(btemp+10)^0,c
 33967  018B40  0E00               	movlw	0
 33968  018B42  6E35               	movwf	(btemp+11)^0,c
 33969                           
 33970                           ;stkvar	_p @ sp[(-18)+16]
 33971  018B44  0EFE               	movlw	-2
 33972  018B46  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 33973  018B4C  0EFF               	movlw	-1
 33974  018B4E  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 33975  018B54  D008               	goto	l2485
 33976  018B56                     l15508:
 33977                           
 33978                           ;stkvar	_p @ sp[(-18)+16]
 33979  018B56  0EFE               	movlw	-2
 33980  018B58  0060  F133  FFE3   	movff	_prec,plusw1
 33981  018B5E  0EFF               	movlw	-1
 33982  018B60  0060  F137  FFE3   	movff	_prec+1,plusw1
 33983  018B66                     l2485:
 33984                           
 33985                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 291:     w = width;
 33986                           ;stkvar	_w @ sp[(-18)+14]
 33987  018B66  0EFC               	movlw	-4
 33988  018B68  0060  F12B  FFE3   	movff	_width,plusw1
 33989  018B6E  0EFD               	movlw	-3
 33990  018B70  0060  F12F  FFE3   	movff	_width+1,plusw1
 33991                           
 33992                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
 33993                           ;stkvar	_s @ sp[(-18)+12]
 33994  018B76  0EFA               	movlw	-6
 33995  018B78  006F FF8C  F02A    	movff	plusw1,btemp
 33996  018B7E  0EFB               	movlw	-5
 33997  018B80  50E3               	movf	plusw1,w,c
 33998  018B82  102A               	iorwf	btemp^0,w,c
 33999  018B84  A4D8               	btfss	status,2,c
 34000  018B86  D002               	goto	u14560
 34001  018B88  A44E               	btfss	_flags^0,2,c
 34002  018B8A  D00A               	goto	l15516
 34003  018B8C                     u14560:
 34004                           
 34005                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 293:         --w;
 34006                           ;stkvar	_w @ sp[(-18)+14]
 34007  018B8C  50E1               	movf	fsr1l,w,c
 34008  018B8E  0FFC               	addlw	-4
 34009  018B90  6ED9               	movwf	fsr2l,c
 34010  018B92  50E2               	movf	fsr1h,w,c
 34011  018B94  6EDA               	movwf	fsr2h,c
 34012  018B96  0EFF               	movlw	255
 34013  018B98  22DA               	addwfc	fsr2h,f,c
 34014  018B9A  06DE               	decf	postinc2,f,c
 34015  018B9C  0E00               	movlw	0
 34016  018B9E  5ADD               	subwfb	postdec2,f,c
 34017  018BA0                     l15516:
 34018                           
 34019                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
 34020  018BA0  0E4F               	movlw	79
 34021  018BA2  6E34               	movwf	(btemp+10)^0,c
 34022  018BA4  0E00               	movlw	0
 34023  018BA6  6E35               	movwf	(btemp+11)^0,c
 34024                           
 34025                           ;stkvar	_i @ sp[(-18)+10]
 34026  018BA8  0EF8               	movlw	-8
 34027  018BAA  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 34028  018BB0  0EF9               	movlw	-7
 34029  018BB2  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 34030                           
 34031                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
 34032  018BB8  0103               	movlb	3	; () banked
 34033  018BBA  6BA3               	clrf	(_dbuf+79)& (0+255),b
 34034                           
 34035                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 34036  018BBC  D109               	goto	l15530
 34037  018BBE                     l15520:
 34038                           
 34039                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 300:         --i;
 34040                           ;stkvar	_i @ sp[(-18)+10]
 34041  018BBE  50E1               	movf	fsr1l,w,c
 34042  018BC0  0FF8               	addlw	-8
 34043  018BC2  6ED9               	movwf	fsr2l,c
 34044  018BC4  50E2               	movf	fsr1h,w,c
 34045  018BC6  6EDA               	movwf	fsr2h,c
 34046  018BC8  0EFF               	movlw	255
 34047  018BCA  22DA               	addwfc	fsr2h,f,c
 34048  018BCC  06DE               	decf	postinc2,f,c
 34049  018BCE  0E00               	movlw	0
 34050  018BD0  5ADD               	subwfb	postdec2,f,c
 34051                           
 34052                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
 34053  018BD2  0E0A               	movlw	10
 34054  018BD4  6EE6               	movwf	postinc1,c
 34055  018BD6  0E00               	movlw	0
 34056  018BD8  6EE6               	movwf	postinc1,c
 34057  018BDA  0E00               	movlw	0
 34058  018BDC  6EE6               	movwf	postinc1,c
 34059  018BDE  0E00               	movlw	0
 34060  018BE0  6EE6               	movwf	postinc1,c
 34061  018BE2  0E00               	movlw	0
 34062  018BE4  6EE6               	movwf	postinc1,c
 34063  018BE6  0E00               	movlw	0
 34064  018BE8  6EE6               	movwf	postinc1,c
 34065  018BEA  0E00               	movlw	0
 34066  018BEC  6EE6               	movwf	postinc1,c
 34067  018BEE  0E00               	movlw	0
 34068  018BF0  6EE6               	movwf	postinc1,c
 34069                           
 34070                           ;stkvar	_n @ sp[(-26)+2]
 34071  018BF2  50E1               	movf	fsr1l,w,c
 34072  018BF4  0FE8               	addlw	-24
 34073  018BF6  6ED9               	movwf	fsr2l,c
 34074  018BF8  50E2               	movf	fsr1h,w,c
 34075  018BFA  6EDA               	movwf	fsr2h,c
 34076  018BFC  0EFF               	movlw	255
 34077  018BFE  22DA               	addwfc	fsr2h,f,c
 34078  018C00  006F FF7B FFE6     	movff	postinc2,postinc1
 34079  018C06  006F FF7B FFE6     	movff	postinc2,postinc1
 34080  018C0C  006F FF7B FFE6     	movff	postinc2,postinc1
 34081  018C12  006F FF7B FFE6     	movff	postinc2,postinc1
 34082  018C18  006F FF7B FFE6     	movff	postinc2,postinc1
 34083  018C1E  006F FF7B FFE6     	movff	postinc2,postinc1
 34084  018C24  006F FF7B FFE6     	movff	postinc2,postinc1
 34085  018C2A  006F FF7B FFE6     	movff	postinc2,postinc1
 34086  018C30  EC10  F0E4         	call	___aomod	;wreg free
 34087  018C34  52E5               	movf	postdec1,f,c
 34088  018C36  006F FF9C  F041    	movff	indf1,btemp+23
 34089  018C3C  52E5               	movf	postdec1,f,c
 34090  018C3E  006F FF9C  F040    	movff	indf1,btemp+22
 34091  018C44  52E5               	movf	postdec1,f,c
 34092  018C46  006F FF9C  F03F    	movff	indf1,btemp+21
 34093  018C4C  52E5               	movf	postdec1,f,c
 34094  018C4E  006F FF9C  F03E    	movff	indf1,btemp+20
 34095  018C54  52E5               	movf	postdec1,f,c
 34096  018C56  006F FF9C  F03D    	movff	indf1,btemp+19
 34097  018C5C  52E5               	movf	postdec1,f,c
 34098  018C5E  006F FF9C  F03C    	movff	indf1,btemp+18
 34099  018C64  52E5               	movf	postdec1,f,c
 34100  018C66  006F FF9C  F03B    	movff	indf1,btemp+17
 34101  018C6C  52E5               	movf	postdec1,f,c
 34102  018C6E  006F FF9C  F03A    	movff	indf1,btemp+16
 34103  018C74  0EF8               	movlw	248
 34104  018C76  26E1               	addwf	fsr1l,f,c
 34105  018C78  0EFF               	movlw	255
 34106  018C7A  22E2               	addwfc	fsr1h,f,c
 34107  018C7C  0060  F0E8  F034   	movff	btemp+16,btemp+10
 34108  018C82  0060  F0EC  F035   	movff	btemp+17,btemp+11
 34109  018C88  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 34110  018C8E  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 34111  018C94  EC31  F00D         	call	_abs	;wreg free
 34112  018C98  0E30               	movlw	48
 34113  018C9A  262A               	addwf	btemp^0,f,c
 34114                           
 34115                           ;stkvar	_i @ sp[(-18)+10]
 34116  018C9C  0EF8               	movlw	-8
 34117  018C9E  006F FF8C  F034    	movff	plusw1,btemp+10
 34118  018CA4  0EF9               	movlw	-7
 34119  018CA6  006F FF8C  F035    	movff	plusw1,btemp+11
 34120  018CAC  0E54               	movlw	low _dbuf
 34121  018CAE  2434               	addwf	(btemp+10)^0,w,c
 34122  018CB0  6ED9               	movwf	fsr2l,c
 34123  018CB2  0E03               	movlw	high _dbuf
 34124  018CB4  2035               	addwfc	(btemp+11)^0,w,c
 34125  018CB6  6EDA               	movwf	fsr2h,c
 34126  018CB8  0060  F0AB  FFDF   	movff	btemp,indf2
 34127                           
 34128                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 302:         --p;
 34129                           ;stkvar	_p @ sp[(-18)+16]
 34130  018CBE  50E1               	movf	fsr1l,w,c
 34131  018CC0  0FFE               	addlw	-2
 34132  018CC2  6ED9               	movwf	fsr2l,c
 34133  018CC4  50E2               	movf	fsr1h,w,c
 34134  018CC6  6EDA               	movwf	fsr2h,c
 34135  018CC8  0EFF               	movlw	255
 34136  018CCA  22DA               	addwfc	fsr2h,f,c
 34137  018CCC  06DE               	decf	postinc2,f,c
 34138  018CCE  0E00               	movlw	0
 34139  018CD0  5ADD               	subwfb	postdec2,f,c
 34140                           
 34141                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 303:         --w;
 34142                           ;stkvar	_w @ sp[(-18)+14]
 34143  018CD2  50E1               	movf	fsr1l,w,c
 34144  018CD4  0FFC               	addlw	-4
 34145  018CD6  6ED9               	movwf	fsr2l,c
 34146  018CD8  50E2               	movf	fsr1h,w,c
 34147  018CDA  6EDA               	movwf	fsr2h,c
 34148  018CDC  0EFF               	movlw	255
 34149  018CDE  22DA               	addwfc	fsr2h,f,c
 34150  018CE0  06DE               	decf	postinc2,f,c
 34151  018CE2  0E00               	movlw	0
 34152  018CE4  5ADD               	subwfb	postdec2,f,c
 34153                           
 34154                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
 34155  018CE6  0E0A               	movlw	10
 34156  018CE8  6EE6               	movwf	postinc1,c
 34157  018CEA  0E00               	movlw	0
 34158  018CEC  6EE6               	movwf	postinc1,c
 34159  018CEE  0E00               	movlw	0
 34160  018CF0  6EE6               	movwf	postinc1,c
 34161  018CF2  0E00               	movlw	0
 34162  018CF4  6EE6               	movwf	postinc1,c
 34163  018CF6  0E00               	movlw	0
 34164  018CF8  6EE6               	movwf	postinc1,c
 34165  018CFA  0E00               	movlw	0
 34166  018CFC  6EE6               	movwf	postinc1,c
 34167  018CFE  0E00               	movlw	0
 34168  018D00  6EE6               	movwf	postinc1,c
 34169  018D02  0E00               	movlw	0
 34170  018D04  6EE6               	movwf	postinc1,c
 34171                           
 34172                           ;stkvar	_n @ sp[(-26)+2]
 34173  018D06  50E1               	movf	fsr1l,w,c
 34174  018D08  0FE8               	addlw	-24
 34175  018D0A  6ED9               	movwf	fsr2l,c
 34176  018D0C  50E2               	movf	fsr1h,w,c
 34177  018D0E  6EDA               	movwf	fsr2h,c
 34178  018D10  0EFF               	movlw	255
 34179  018D12  22DA               	addwfc	fsr2h,f,c
 34180  018D14  006F FF7B FFE6     	movff	postinc2,postinc1
 34181  018D1A  006F FF7B FFE6     	movff	postinc2,postinc1
 34182  018D20  006F FF7B FFE6     	movff	postinc2,postinc1
 34183  018D26  006F FF7B FFE6     	movff	postinc2,postinc1
 34184  018D2C  006F FF7B FFE6     	movff	postinc2,postinc1
 34185  018D32  006F FF7B FFE6     	movff	postinc2,postinc1
 34186  018D38  006F FF7B FFE6     	movff	postinc2,postinc1
 34187  018D3E  006F FF7B FFE6     	movff	postinc2,postinc1
 34188  018D44  EC24  F0DE         	call	___aodiv	;wreg free
 34189  018D48  52E5               	movf	postdec1,f,c
 34190  018D4A  006F FF9C  F041    	movff	indf1,btemp+23
 34191  018D50  52E5               	movf	postdec1,f,c
 34192  018D52  006F FF9C  F040    	movff	indf1,btemp+22
 34193  018D58  52E5               	movf	postdec1,f,c
 34194  018D5A  006F FF9C  F03F    	movff	indf1,btemp+21
 34195  018D60  52E5               	movf	postdec1,f,c
 34196  018D62  006F FF9C  F03E    	movff	indf1,btemp+20
 34197  018D68  52E5               	movf	postdec1,f,c
 34198  018D6A  006F FF9C  F03D    	movff	indf1,btemp+19
 34199  018D70  52E5               	movf	postdec1,f,c
 34200  018D72  006F FF9C  F03C    	movff	indf1,btemp+18
 34201  018D78  52E5               	movf	postdec1,f,c
 34202  018D7A  006F FF9C  F03B    	movff	indf1,btemp+17
 34203  018D80  52E5               	movf	postdec1,f,c
 34204  018D82  006F FF9C  F03A    	movff	indf1,btemp+16
 34205  018D88  0EF8               	movlw	248
 34206  018D8A  26E1               	addwf	fsr1l,f,c
 34207  018D8C  0EFF               	movlw	255
 34208  018D8E  22E2               	addwfc	fsr1h,f,c
 34209                           
 34210                           ;stkvar	_n @ sp[(-18)+2]
 34211  018D90  0EF0               	movlw	-16
 34212  018D92  0060  F0EB  FFE3   	movff	btemp+16,plusw1
 34213  018D98  0EF1               	movlw	-15
 34214  018D9A  0060  F0EF  FFE3   	movff	btemp+17,plusw1
 34215  018DA0  0EF2               	movlw	-14
 34216  018DA2  0060  F0F3  FFE3   	movff	btemp+18,plusw1
 34217  018DA8  0EF3               	movlw	-13
 34218  018DAA  0060  F0F7  FFE3   	movff	btemp+19,plusw1
 34219  018DB0  0EF4               	movlw	-12
 34220  018DB2  0060  F0FB  FFE3   	movff	btemp+20,plusw1
 34221  018DB8  0EF5               	movlw	-11
 34222  018DBA  0060  F0FF  FFE3   	movff	btemp+21,plusw1
 34223  018DC0  0EF6               	movlw	-10
 34224  018DC2  0060  F103  FFE3   	movff	btemp+22,plusw1
 34225  018DC8  0EF7               	movlw	-9
 34226  018DCA  0060  F107  FFE3   	movff	btemp+23,plusw1
 34227  018DD0                     l15530:
 34228                           
 34229                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 34230                           ;stkvar	_i @ sp[(-18)+10]
 34231  018DD0  0EF9               	movlw	-7
 34232  018DD2  BEE3               	btfsc	plusw1,7,c
 34233  018DD4  D036               	goto	u14610
 34234  018DD6  0EF9               	movlw	-7
 34235  018DD8  50E3               	movf	plusw1,w,c
 34236  018DDA  E104               	bnz	u14570
 34237  018DDC  0EF8               	movlw	-8
 34238  018DDE  04E3               	decf	plusw1,w,c
 34239  018DE0  A0D8               	btfss	status,0,c
 34240  018DE2  D02F               	goto	u14610
 34241  018DE4                     u14570:
 34242                           
 34243                           ;stkvar	_n @ sp[(-18)+2]
 34244  018DE4  0EF0               	movlw	-16
 34245  018DE6  50E3               	movf	plusw1,w,c
 34246  018DE8  E115               	bnz	u14581
 34247  018DEA  0EF1               	movlw	-15
 34248  018DEC  50E3               	movf	plusw1,w,c
 34249  018DEE  E112               	bnz	u14581
 34250  018DF0  0EF2               	movlw	-14
 34251  018DF2  50E3               	movf	plusw1,w,c
 34252  018DF4  E10F               	bnz	u14581
 34253  018DF6  0EF3               	movlw	-13
 34254  018DF8  50E3               	movf	plusw1,w,c
 34255  018DFA  E10C               	bnz	u14581
 34256  018DFC  0EF4               	movlw	-12
 34257  018DFE  50E3               	movf	plusw1,w,c
 34258  018E00  E109               	bnz	u14581
 34259  018E02  0EF5               	movlw	-11
 34260  018E04  50E3               	movf	plusw1,w,c
 34261  018E06  E106               	bnz	u14581
 34262  018E08  0EF6               	movlw	-10
 34263  018E0A  50E3               	movf	plusw1,w,c
 34264  018E0C  E103               	bnz	u14581
 34265  018E0E  0EF7               	movlw	-9
 34266  018E10  50E3               	movf	plusw1,w,c
 34267  018E12  A4D8               	btfss	status,2,c
 34268  018E14                     u14581:
 34269  018E14  D6D4               	goto	l15520
 34270                           
 34271                           ;stkvar	_p @ sp[(-18)+16]
 34272  018E16  0EFF               	movlw	-1
 34273  018E18  BEE3               	btfsc	plusw1,7,c
 34274  018E1A  D007               	goto	u14590
 34275  018E1C  0EFF               	movlw	-1
 34276  018E1E  50E3               	movf	plusw1,w,c
 34277  018E20  E103               	bnz	u14591
 34278  018E22  0EFE               	movlw	-2
 34279  018E24  04E3               	decf	plusw1,w,c
 34280  018E26  B0D8               	btfsc	status,0,c
 34281  018E28                     u14591:
 34282  018E28  D6CA               	goto	l15520
 34283  018E2A                     u14590:
 34284                           
 34285                           ;stkvar	_w @ sp[(-18)+14]
 34286  018E2A  0EFD               	movlw	-3
 34287  018E2C  BEE3               	btfsc	plusw1,7,c
 34288  018E2E  D009               	goto	u14610
 34289  018E30  0EFD               	movlw	-3
 34290  018E32  50E3               	movf	plusw1,w,c
 34291  018E34  E104               	bnz	u14600
 34292  018E36  0EFC               	movlw	-4
 34293  018E38  04E3               	decf	plusw1,w,c
 34294  018E3A  A0D8               	btfss	status,0,c
 34295  018E3C  D002               	goto	u14610
 34296  018E3E                     u14600:
 34297  018E3E  B24E               	btfsc	_flags^0,1,c
 34298  018E40  D6BE               	goto	l15520
 34299  018E42                     u14610:
 34300                           
 34301                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
 34302                           ;stkvar	_s @ sp[(-18)+12]
 34303  018E42  0EFA               	movlw	-6
 34304  018E44  006F FF8C  F02A    	movff	plusw1,btemp
 34305  018E4A  0EFB               	movlw	-5
 34306  018E4C  50E3               	movf	plusw1,w,c
 34307  018E4E  102A               	iorwf	btemp^0,w,c
 34308  018E50  A4D8               	btfss	status,2,c
 34309  018E52  D002               	goto	u14630
 34310  018E54  A44E               	btfss	_flags^0,2,c
 34311  018E56  D033               	goto	l15554
 34312  018E58                     u14630:
 34313                           
 34314                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 309:         --i;
 34315                           ;stkvar	_i @ sp[(-18)+10]
 34316  018E58  50E1               	movf	fsr1l,w,c
 34317  018E5A  0FF8               	addlw	-8
 34318  018E5C  6ED9               	movwf	fsr2l,c
 34319  018E5E  50E2               	movf	fsr1h,w,c
 34320  018E60  6EDA               	movwf	fsr2h,c
 34321  018E62  0EFF               	movlw	255
 34322  018E64  22DA               	addwfc	fsr2h,f,c
 34323  018E66  06DE               	decf	postinc2,f,c
 34324  018E68  0E00               	movlw	0
 34325  018E6A  5ADD               	subwfb	postdec2,f,c
 34326                           
 34327                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
 34328                           ;stkvar	_s @ sp[(-18)+12]
 34329  018E6C  0EFA               	movlw	-6
 34330  018E6E  006F FF8C  F02A    	movff	plusw1,btemp
 34331  018E74  0EFB               	movlw	-5
 34332  018E76  50E3               	movf	plusw1,w,c
 34333  018E78  102A               	iorwf	btemp^0,w,c
 34334  018E7A  A4D8               	btfss	status,2,c
 34335  018E7C  D002               	goto	l15550
 34336  018E7E  0E2B               	movlw	43
 34337  018E80  D001               	goto	L39
 34338  018E82                     l15550:
 34339  018E82  0E2D               	movlw	45
 34340  018E84                     L39:
 34341  018E84  6E34               	movwf	(btemp+10)^0,c
 34342  018E86  0E00               	movlw	0
 34343  018E88  6E35               	movwf	(btemp+11)^0,c
 34344                           
 34345                           ;stkvar	_dtoa$6585 @ sp[(-18)+0]
 34346  018E8A  0EEE               	movlw	-18
 34347  018E8C  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 34348  018E92  0EEF               	movlw	-17
 34349  018E94  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 34350                           
 34351                           ;stkvar	_dtoa$6585 @ sp[(-18)+0]
 34352                           ;stkvar	_i @ sp[(-18)+10]
 34353  018E9A  0EF8               	movlw	-8
 34354  018E9C  006F FF8C  F034    	movff	plusw1,btemp+10
 34355  018EA2  0EF9               	movlw	-7
 34356  018EA4  006F FF8C  F035    	movff	plusw1,btemp+11
 34357  018EAA  0E54               	movlw	low _dbuf
 34358  018EAC  2434               	addwf	(btemp+10)^0,w,c
 34359  018EAE  6ED9               	movwf	fsr2l,c
 34360  018EB0  0E03               	movlw	high _dbuf
 34361  018EB2  2035               	addwfc	(btemp+11)^0,w,c
 34362  018EB4  6EDA               	movwf	fsr2h,c
 34363  018EB6  0EEE               	movlw	-18
 34364  018EB8  006F FF8F FFDF     	movff	plusw1,indf2
 34365  018EBE                     l15554:
 34366                           
 34367                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
 34368                           ;stkvar	_w @ sp[(-18)+14]
 34369  018EBE  0EFC               	movlw	-4
 34370  018EC0  006F FF8F FFE6     	movff	plusw1,postinc1
 34371  018EC6  006F FF8F FFE6     	movff	plusw1,postinc1
 34372                           
 34373                           ;stkvar	_i @ sp[(-20)+10]
 34374  018ECC  0E54               	movlw	low _dbuf
 34375  018ECE  6E34               	movwf	(btemp+10)^0,c
 34376  018ED0  0E03               	movlw	high _dbuf
 34377  018ED2  6E35               	movwf	(btemp+11)^0,c
 34378  018ED4  0EF6               	movlw	-10
 34379  018ED6  50E3               	movf	plusw1,w,c
 34380  018ED8  2634               	addwf	(btemp+10)^0,f,c
 34381  018EDA  0EF7               	movlw	-9
 34382  018EDC  50E3               	movf	plusw1,w,c
 34383  018EDE  2235               	addwfc	(btemp+11)^0,f,c
 34384  018EE0  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 34385  018EE6  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 34386                           
 34387                           ;stkvar	_fp @ sp[(-22)+-2]
 34388  018EEC  0EE8               	movlw	-24
 34389  018EEE  006F FF8F FFE6     	movff	plusw1,postinc1
 34390  018EF4  006F FF8F FFE6     	movff	plusw1,postinc1
 34391  018EFA  EC2F  F0FB         	call	_pad	;wreg free
 34392                           
 34393                           ; _dtoa: autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 34394  018EFE  0EE4               	movlw	228
 34395  018F00  26E1               	addwf	fsr1l,f,c
 34396  018F02  0EFF               	movlw	255
 34397  018F04  22E2               	addwfc	fsr1h,f,c
 34398  018F06  0012               	return		;funcret
 34399  018F08                     __end_of_dtoa:
 34400                           	opt callstack 0
 34401                           
 34402 ;; *************** function _abs *****************
 34403 ;; Defined at:
 34404 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/abs.c"
 34405 ;; Parameters:    Size  Location     Type
 34406 ;;  a               2  [STACK] int 
 34407 ;; Auto vars:     Size  Location     Type
 34408 ;;		None
 34409 ;; Return value:  Size  Location     Type
 34410 ;;                  2  [STACK] int 
 34411 ;; Registers used:
 34412 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
 34413 ;; Tracked objects:
 34414 ;;		On entry : 0/3
 34415 ;;		On exit  : 0/0
 34416 ;;		Unchanged: 0/0
 34417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34418 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34419 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34420 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34421 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34422 ;;Total ram usage:        0 bytes
 34423 ;; Hardware stack levels used:    1
 34424 ;; Hardware stack levels required when called:   15
 34425 ;; This function calls:
 34426 ;;		Nothing
 34427 ;; This function is called by:
 34428 ;;		_dtoa
 34429 ;; This function uses a reentrant model
 34430 ;;
 34431                           
 34432                           	psect	text115
 34433  001A62                     __ptext115:
 34434                           	opt callstack 0
 34435  001A62                     _abs:
 34436                           	opt callstack 0
 34437                           
 34438                           ;stkvar	_a @ sp[(0)+-2]
 34439                           
 34440                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34441                           ;incstack = 0
 34442 ;; hardware stack exceeded
 34443  001A62  0EFF               	movlw	-1
 34444  001A64  BEE3               	btfsc	plusw1,7,c
 34445  001A66  D007               	goto	u7710
 34446  001A68  0EFF               	movlw	-1
 34447  001A6A  50E3               	movf	plusw1,w,c
 34448  001A6C  E112               	bnz	l10044
 34449  001A6E  0EFE               	movlw	-2
 34450  001A70  04E3               	decf	plusw1,w,c
 34451  001A72  B0D8               	btfsc	status,0,c
 34452  001A74  D00E               	goto	l10044
 34453  001A76                     u7710:
 34454                           
 34455                           ;stkvar	_a @ sp[(0)+-2]
 34456  001A76  0EFE               	movlw	-2
 34457  001A78  006F FF8C  F02A    	movff	plusw1,btemp
 34458  001A7E  1E2A               	comf	btemp^0,f,c
 34459  001A80  0EFF               	movlw	-1
 34460  001A82  006F FF8C  F02B    	movff	plusw1,btemp+1
 34461  001A88  1E2B               	comf	(btemp+1)^0,f,c
 34462  001A8A  2A2A               	incf	btemp^0,f,c
 34463  001A8C  B4D8               	btfsc	status,2,c
 34464  001A8E  2A2B               	incf	(btemp+1)^0,f,c
 34465  001A90  D008               	goto	l3411
 34466  001A92                     l10044:
 34467                           
 34468                           ;stkvar	_a @ sp[(0)+-2]
 34469  001A92  0EFE               	movlw	-2
 34470  001A94  006F FF8C  F02A    	movff	plusw1,btemp
 34471  001A9A  0EFF               	movlw	-1
 34472  001A9C  006F FF8C  F02B    	movff	plusw1,btemp+1
 34473  001AA2                     l3411:
 34474                           
 34475                           ; _abs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize =
      +                           2, vargsize = 0
 34476  001AA2  52E5               	movf	postdec1,f,c
 34477  001AA4  52E5               	movf	postdec1,f,c
 34478  001AA6  0012               	return		;funcret
 34479  001AA8                     __end_of_abs:
 34480                           	opt callstack 0
 34481                           
 34482 ;; *************** function ___aomod *****************
 34483 ;; Defined at:
 34484 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aomod.c"
 34485 ;; Parameters:    Size  Location     Type
 34486 ;;  dividend        8  [STACK] long long 
 34487 ;;  divisor         8  [STACK] long long 
 34488 ;; Auto vars:     Size  Location     Type
 34489 ;;  sign            1  [STACK] unsigned char 
 34490 ;;  counter         1  [STACK] unsigned char 
 34491 ;; Return value:  Size  Location     Type
 34492 ;;                  8  [STACK] long long 
 34493 ;; Registers used:
 34494 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 34495 ;; Tracked objects:
 34496 ;;		On entry : 0/0
 34497 ;;		On exit  : 0/0
 34498 ;;		Unchanged: 0/0
 34499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34500 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34501 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34502 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34503 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34504 ;;Total ram usage:        0 bytes
 34505 ;; Hardware stack levels used:    1
 34506 ;; Hardware stack levels required when called:   15
 34507 ;; This function calls:
 34508 ;;		Nothing
 34509 ;; This function is called by:
 34510 ;;		_dtoa
 34511 ;;		___secs_to_tm
 34512 ;;		_rule_to_secs
 34513 ;;		___year_to_secs
 34514 ;; This function uses a reentrant model
 34515 ;;
 34516                           
 34517                           	psect	text116
 34518  01C820                     __ptext116:
 34519                           	opt callstack 0
 34520  01C820                     ___aomod:
 34521                           	opt callstack 0
 34522                           
 34523                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 34524  01C820  52E6               	movf	postinc1,f,c
 34525  01C822  52E6               	movf	postinc1,f,c
 34526                           
 34527                           ;stkvar	_sign @ sp[(-2)+0]
 34528                           
 34529                           ;incstack = 0
 34530 ;; hardware stack exceeded
 34531  01C824  0EFE               	movlw	-2
 34532  01C826  6AE3               	clrf	plusw1,c
 34533                           
 34534                           ;stkvar	_dividend @ sp[(-2)+-8]
 34535  01C828  0EFD               	movlw	-3
 34536  01C82A  AEE3               	btfss	plusw1,7,c
 34537  01C82C  D028               	goto	l10228
 34538                           
 34539                           ;stkvar	_dividend @ sp[(-2)+-8]
 34540                           ;stkvar	_dividend @ sp[(-2)+-8]
 34541  01C82E  0EF6               	movlw	-10
 34542  01C830  6CE3               	negf	plusw1,c
 34543  01C832  0EF7               	movlw	-9
 34544  01C834  1EE3               	comf	plusw1,f,c
 34545  01C836  0EF8               	movlw	-8
 34546  01C838  1EE3               	comf	plusw1,f,c
 34547  01C83A  0EF9               	movlw	-7
 34548  01C83C  1EE3               	comf	plusw1,f,c
 34549  01C83E  0EFA               	movlw	-6
 34550  01C840  1EE3               	comf	plusw1,f,c
 34551  01C842  0EFB               	movlw	-5
 34552  01C844  1EE3               	comf	plusw1,f,c
 34553  01C846  0EFC               	movlw	-4
 34554  01C848  1EE3               	comf	plusw1,f,c
 34555  01C84A  0EFD               	movlw	-3
 34556  01C84C  1EE3               	comf	plusw1,f,c
 34557  01C84E  E314               	bnc	u8200
 34558  01C850  0EF7               	movlw	-9
 34559  01C852  2AE3               	incf	plusw1,f,c
 34560  01C854  E311               	bnc	u8200
 34561  01C856  0EF8               	movlw	-8
 34562  01C858  2AE3               	incf	plusw1,f,c
 34563  01C85A  E30E               	bnc	u8200
 34564  01C85C  0EF9               	movlw	-7
 34565  01C85E  2AE3               	incf	plusw1,f,c
 34566  01C860  E30B               	bnc	u8200
 34567  01C862  0EFA               	movlw	-6
 34568  01C864  2AE3               	incf	plusw1,f,c
 34569  01C866  E308               	bnc	u8200
 34570  01C868  0EFB               	movlw	-5
 34571  01C86A  2AE3               	incf	plusw1,f,c
 34572  01C86C  E305               	bnc	u8200
 34573  01C86E  0EFC               	movlw	-4
 34574  01C870  2AE3               	incf	plusw1,f,c
 34575  01C872  E302               	bnc	u8200
 34576  01C874  0EFD               	movlw	-3
 34577  01C876  2AE3               	incf	plusw1,f,c
 34578  01C878                     u8200:
 34579                           
 34580                           ;stkvar	_sign @ sp[(-2)+0]
 34581  01C878  0EFE               	movlw	-2
 34582  01C87A  6AE3               	clrf	plusw1,c
 34583  01C87C  2AE3               	incf	plusw1,f,c
 34584  01C87E                     l10228:
 34585                           
 34586                           ;stkvar	_divisor @ sp[(-2)+-16]
 34587  01C87E  0EF5               	movlw	-11
 34588  01C880  AEE3               	btfss	plusw1,7,c
 34589  01C882  D025               	goto	u8220
 34590                           
 34591                           ;stkvar	_divisor @ sp[(-2)+-16]
 34592                           ;stkvar	_divisor @ sp[(-2)+-16]
 34593  01C884  0EEE               	movlw	-18
 34594  01C886  6CE3               	negf	plusw1,c
 34595  01C888  0EEF               	movlw	-17
 34596  01C88A  1EE3               	comf	plusw1,f,c
 34597  01C88C  0EF0               	movlw	-16
 34598  01C88E  1EE3               	comf	plusw1,f,c
 34599  01C890  0EF1               	movlw	-15
 34600  01C892  1EE3               	comf	plusw1,f,c
 34601  01C894  0EF2               	movlw	-14
 34602  01C896  1EE3               	comf	plusw1,f,c
 34603  01C898  0EF3               	movlw	-13
 34604  01C89A  1EE3               	comf	plusw1,f,c
 34605  01C89C  0EF4               	movlw	-12
 34606  01C89E  1EE3               	comf	plusw1,f,c
 34607  01C8A0  0EF5               	movlw	-11
 34608  01C8A2  1EE3               	comf	plusw1,f,c
 34609  01C8A4  E314               	bnc	u8220
 34610  01C8A6  0EEF               	movlw	-17
 34611  01C8A8  2AE3               	incf	plusw1,f,c
 34612  01C8AA  E311               	bnc	u8220
 34613  01C8AC  0EF0               	movlw	-16
 34614  01C8AE  2AE3               	incf	plusw1,f,c
 34615  01C8B0  E30E               	bnc	u8220
 34616  01C8B2  0EF1               	movlw	-15
 34617  01C8B4  2AE3               	incf	plusw1,f,c
 34618  01C8B6  E30B               	bnc	u8220
 34619  01C8B8  0EF2               	movlw	-14
 34620  01C8BA  2AE3               	incf	plusw1,f,c
 34621  01C8BC  E308               	bnc	u8220
 34622  01C8BE  0EF3               	movlw	-13
 34623  01C8C0  2AE3               	incf	plusw1,f,c
 34624  01C8C2  E305               	bnc	u8220
 34625  01C8C4  0EF4               	movlw	-12
 34626  01C8C6  2AE3               	incf	plusw1,f,c
 34627  01C8C8  E302               	bnc	u8220
 34628  01C8CA  0EF5               	movlw	-11
 34629  01C8CC  2AE3               	incf	plusw1,f,c
 34630  01C8CE                     u8220:
 34631                           
 34632                           ;stkvar	_divisor @ sp[(-2)+-16]
 34633  01C8CE  0EEE               	movlw	-18
 34634  01C8D0  50E3               	movf	plusw1,w,c
 34635  01C8D2  E116               	bnz	u8230
 34636  01C8D4  0EEF               	movlw	-17
 34637  01C8D6  50E3               	movf	plusw1,w,c
 34638  01C8D8  E113               	bnz	u8230
 34639  01C8DA  0EF0               	movlw	-16
 34640  01C8DC  50E3               	movf	plusw1,w,c
 34641  01C8DE  E110               	bnz	u8230
 34642  01C8E0  0EF1               	movlw	-15
 34643  01C8E2  50E3               	movf	plusw1,w,c
 34644  01C8E4  E10D               	bnz	u8230
 34645  01C8E6  0EF2               	movlw	-14
 34646  01C8E8  50E3               	movf	plusw1,w,c
 34647  01C8EA  E10A               	bnz	u8230
 34648  01C8EC  0EF3               	movlw	-13
 34649  01C8EE  50E3               	movf	plusw1,w,c
 34650  01C8F0  E107               	bnz	u8230
 34651  01C8F2  0EF4               	movlw	-12
 34652  01C8F4  50E3               	movf	plusw1,w,c
 34653  01C8F6  E104               	bnz	u8230
 34654  01C8F8  0EF5               	movlw	-11
 34655  01C8FA  50E3               	movf	plusw1,w,c
 34656  01C8FC  B4D8               	btfsc	status,2,c
 34657  01C8FE  D075               	goto	u8260
 34658  01C900                     u8230:
 34659                           
 34660                           ;stkvar	_counter @ sp[(-2)+1]
 34661  01C900  0EFF               	movlw	-1
 34662  01C902  6AE3               	clrf	plusw1,c
 34663  01C904  D012               	goto	L40
 34664  01C906                     l10236:
 34665                           
 34666                           ;stkvar	_divisor @ sp[(-2)+-16]
 34667  01C906  90D8               	bcf	status,0,c
 34668  01C908  0EEE               	movlw	-18
 34669  01C90A  36E3               	rlcf	plusw1,f,c
 34670  01C90C  0EEF               	movlw	-17
 34671  01C90E  36E3               	rlcf	plusw1,f,c
 34672  01C910  0EF0               	movlw	-16
 34673  01C912  36E3               	rlcf	plusw1,f,c
 34674  01C914  0EF1               	movlw	-15
 34675  01C916  36E3               	rlcf	plusw1,f,c
 34676  01C918  0EF2               	movlw	-14
 34677  01C91A  36E3               	rlcf	plusw1,f,c
 34678  01C91C  0EF3               	movlw	-13
 34679  01C91E  36E3               	rlcf	plusw1,f,c
 34680  01C920  0EF4               	movlw	-12
 34681  01C922  36E3               	rlcf	plusw1,f,c
 34682  01C924  0EF5               	movlw	-11
 34683  01C926  36E3               	rlcf	plusw1,f,c
 34684                           
 34685                           ;stkvar	_counter @ sp[(-2)+1]
 34686  01C928  0EFF               	movlw	-1
 34687  01C92A                     L40:
 34688  01C92A  2AE3               	incf	plusw1,f,c
 34689                           
 34690                           ;stkvar	_divisor @ sp[(-2)+-16]
 34691  01C92C  0EF5               	movlw	-11
 34692  01C92E  AEE3               	btfss	plusw1,7,c
 34693  01C930  D7EA               	goto	l10236
 34694  01C932                     u8240:
 34695                           
 34696                           ;stkvar	_divisor @ sp[(-2)+-16]
 34697                           ;stkvar	_dividend @ sp[(-2)+-8]
 34698  01C932  50E1               	movf	fsr1l,w,c
 34699  01C934  0FF6               	addlw	-10
 34700  01C936  6ED9               	movwf	fsr2l,c
 34701  01C938  50E2               	movf	fsr1h,w,c
 34702  01C93A  6EDA               	movwf	fsr2h,c
 34703  01C93C  0EFF               	movlw	255
 34704  01C93E  22DA               	addwfc	fsr2h,f,c
 34705  01C940  0EEE               	movlw	-18
 34706  01C942  50E3               	movf	plusw1,w,c
 34707  01C944  5CDE               	subwf	postinc2,w,c
 34708  01C946  0EEF               	movlw	-17
 34709  01C948  50E3               	movf	plusw1,w,c
 34710  01C94A  58DE               	subwfb	postinc2,w,c
 34711  01C94C  0EF0               	movlw	-16
 34712  01C94E  50E3               	movf	plusw1,w,c
 34713  01C950  58DE               	subwfb	postinc2,w,c
 34714  01C952  0EF1               	movlw	-15
 34715  01C954  50E3               	movf	plusw1,w,c
 34716  01C956  58DE               	subwfb	postinc2,w,c
 34717  01C958  0EF2               	movlw	-14
 34718  01C95A  50E3               	movf	plusw1,w,c
 34719  01C95C  58DE               	subwfb	postinc2,w,c
 34720  01C95E  0EF3               	movlw	-13
 34721  01C960  50E3               	movf	plusw1,w,c
 34722  01C962  58DE               	subwfb	postinc2,w,c
 34723  01C964  0EF4               	movlw	-12
 34724  01C966  50E3               	movf	plusw1,w,c
 34725  01C968  58DE               	subwfb	postinc2,w,c
 34726  01C96A  0EF5               	movlw	-11
 34727  01C96C  50E3               	movf	plusw1,w,c
 34728  01C96E  58DE               	subwfb	postinc2,w,c
 34729  01C970  A0D8               	btfss	status,0,c
 34730  01C972  D01F               	goto	l10244
 34731                           
 34732                           ;stkvar	_divisor @ sp[(-2)+-16]
 34733                           ;stkvar	_dividend @ sp[(-2)+-8]
 34734  01C974  50E1               	movf	fsr1l,w,c
 34735  01C976  0FF6               	addlw	-10
 34736  01C978  6ED9               	movwf	fsr2l,c
 34737  01C97A  50E2               	movf	fsr1h,w,c
 34738  01C97C  6EDA               	movwf	fsr2h,c
 34739  01C97E  0EFF               	movlw	255
 34740  01C980  22DA               	addwfc	fsr2h,f,c
 34741  01C982  0EEE               	movlw	-18
 34742  01C984  50E3               	movf	plusw1,w,c
 34743  01C986  5EDE               	subwf	postinc2,f,c
 34744  01C988  0EEF               	movlw	-17
 34745  01C98A  50E3               	movf	plusw1,w,c
 34746  01C98C  5ADE               	subwfb	postinc2,f,c
 34747  01C98E  0EF0               	movlw	-16
 34748  01C990  50E3               	movf	plusw1,w,c
 34749  01C992  5ADE               	subwfb	postinc2,f,c
 34750  01C994  0EF1               	movlw	-15
 34751  01C996  50E3               	movf	plusw1,w,c
 34752  01C998  5ADE               	subwfb	postinc2,f,c
 34753  01C99A  0EF2               	movlw	-14
 34754  01C99C  50E3               	movf	plusw1,w,c
 34755  01C99E  5ADE               	subwfb	postinc2,f,c
 34756  01C9A0  0EF3               	movlw	-13
 34757  01C9A2  50E3               	movf	plusw1,w,c
 34758  01C9A4  5ADE               	subwfb	postinc2,f,c
 34759  01C9A6  0EF4               	movlw	-12
 34760  01C9A8  50E3               	movf	plusw1,w,c
 34761  01C9AA  5ADE               	subwfb	postinc2,f,c
 34762  01C9AC  0EF5               	movlw	-11
 34763  01C9AE  50E3               	movf	plusw1,w,c
 34764  01C9B0  5ADE               	subwfb	postinc2,f,c
 34765  01C9B2                     l10244:
 34766                           
 34767                           ;stkvar	_divisor @ sp[(-2)+-16]
 34768  01C9B2  90D8               	bcf	status,0,c
 34769  01C9B4  0EF5               	movlw	-11
 34770  01C9B6  32E3               	rrcf	plusw1,f,c
 34771  01C9B8  0EF4               	movlw	-12
 34772  01C9BA  32E3               	rrcf	plusw1,f,c
 34773  01C9BC  0EF3               	movlw	-13
 34774  01C9BE  32E3               	rrcf	plusw1,f,c
 34775  01C9C0  0EF2               	movlw	-14
 34776  01C9C2  32E3               	rrcf	plusw1,f,c
 34777  01C9C4  0EF1               	movlw	-15
 34778  01C9C6  32E3               	rrcf	plusw1,f,c
 34779  01C9C8  0EF0               	movlw	-16
 34780  01C9CA  32E3               	rrcf	plusw1,f,c
 34781  01C9CC  0EEF               	movlw	-17
 34782  01C9CE  32E3               	rrcf	plusw1,f,c
 34783  01C9D0  0EEE               	movlw	-18
 34784  01C9D2  32E3               	rrcf	plusw1,f,c
 34785                           
 34786                           ;stkvar	_counter @ sp[(-2)+1]
 34787  01C9D4  0EFF               	movlw	-1
 34788  01C9D6  50E3               	movf	plusw1,w,c
 34789  01C9D8  6E2A               	movwf	btemp^0,c
 34790  01C9DA  0E01               	movlw	1
 34791  01C9DC  5E2A               	subwf	btemp^0,f,c
 34792  01C9DE  0EFF               	movlw	-1
 34793  01C9E0  0060  F0AB  FFE3   	movff	btemp,plusw1
 34794  01C9E6  A4D8               	btfss	status,2,c
 34795  01C9E8  D7A4               	goto	u8240
 34796  01C9EA                     u8260:
 34797                           
 34798                           ;stkvar	_sign @ sp[(-2)+0]
 34799  01C9EA  0EFE               	movlw	-2
 34800  01C9EC  50E3               	movf	plusw1,w,c
 34801  01C9EE  B4D8               	btfsc	status,2,c
 34802  01C9F0  D025               	goto	u8280
 34803                           
 34804                           ;stkvar	_dividend @ sp[(-2)+-8]
 34805                           ;stkvar	_dividend @ sp[(-2)+-8]
 34806  01C9F2  0EF6               	movlw	-10
 34807  01C9F4  6CE3               	negf	plusw1,c
 34808  01C9F6  0EF7               	movlw	-9
 34809  01C9F8  1EE3               	comf	plusw1,f,c
 34810  01C9FA  0EF8               	movlw	-8
 34811  01C9FC  1EE3               	comf	plusw1,f,c
 34812  01C9FE  0EF9               	movlw	-7
 34813  01CA00  1EE3               	comf	plusw1,f,c
 34814  01CA02  0EFA               	movlw	-6
 34815  01CA04  1EE3               	comf	plusw1,f,c
 34816  01CA06  0EFB               	movlw	-5
 34817  01CA08  1EE3               	comf	plusw1,f,c
 34818  01CA0A  0EFC               	movlw	-4
 34819  01CA0C  1EE3               	comf	plusw1,f,c
 34820  01CA0E  0EFD               	movlw	-3
 34821  01CA10  1EE3               	comf	plusw1,f,c
 34822  01CA12  E314               	bnc	u8280
 34823  01CA14  0EF7               	movlw	-9
 34824  01CA16  2AE3               	incf	plusw1,f,c
 34825  01CA18  E311               	bnc	u8280
 34826  01CA1A  0EF8               	movlw	-8
 34827  01CA1C  2AE3               	incf	plusw1,f,c
 34828  01CA1E  E30E               	bnc	u8280
 34829  01CA20  0EF9               	movlw	-7
 34830  01CA22  2AE3               	incf	plusw1,f,c
 34831  01CA24  E30B               	bnc	u8280
 34832  01CA26  0EFA               	movlw	-6
 34833  01CA28  2AE3               	incf	plusw1,f,c
 34834  01CA2A  E308               	bnc	u8280
 34835  01CA2C  0EFB               	movlw	-5
 34836  01CA2E  2AE3               	incf	plusw1,f,c
 34837  01CA30  E305               	bnc	u8280
 34838  01CA32  0EFC               	movlw	-4
 34839  01CA34  2AE3               	incf	plusw1,f,c
 34840  01CA36  E302               	bnc	u8280
 34841  01CA38  0EFD               	movlw	-3
 34842  01CA3A  2AE3               	incf	plusw1,f,c
 34843  01CA3C                     u8280:
 34844                           
 34845                           ;stkvar	_dividend @ sp[(-2)+-8]
 34846  01CA3C  0EF6               	movlw	246
 34847  01CA3E  24E1               	addwf	fsr1l,w,c
 34848  01CA40  6ED9               	movwf	fsr2l,c
 34849  01CA42  0EFF               	movlw	255
 34850  01CA44  20E2               	addwfc	fsr1h,w,c
 34851  01CA46  6EDA               	movwf	fsr2h,c
 34852                           
 34853                           ;stkvar	?___aomod @ sp[(-2)+-8]
 34854  01CA48  0E08               	movlw	8
 34855  01CA4A  6E2A               	movwf	btemp^0,c
 34856  01CA4C  0EF6               	movlw	-10
 34857  01CA4E                     us829999:
 34858  01CA4E  006F FF7B FFE3     	movff	postinc2,plusw1
 34859  01CA54  28E8               	incf	wreg,w,c
 34860  01CA56  2E2A               	decfsz	btemp^0,f,c
 34861  01CA58  D7FA               	bra	us829999
 34862                           
 34863                           ; ___aomod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 34864  01CA5A  52E5               	movf	postdec1,f,c
 34865  01CA5C  52E5               	movf	postdec1,f,c
 34866  01CA5E  0012               	return		;funcret
 34867  01CA60                     __end_of___aomod:
 34868                           	opt callstack 0
 34869                           
 34870 ;; *************** function ___aodiv *****************
 34871 ;; Defined at:
 34872 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aodiv.c"
 34873 ;; Parameters:    Size  Location     Type
 34874 ;;  dividend        8  [STACK] long long 
 34875 ;;  divisor         8  [STACK] long long 
 34876 ;; Auto vars:     Size  Location     Type
 34877 ;;  quotient        8  [STACK] long long 
 34878 ;;  sign            1  [STACK] unsigned char 
 34879 ;;  counter         1  [STACK] unsigned char 
 34880 ;; Return value:  Size  Location     Type
 34881 ;;                  8  [STACK] long long 
 34882 ;; Registers used:
 34883 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 34884 ;; Tracked objects:
 34885 ;;		On entry : 0/0
 34886 ;;		On exit  : 0/0
 34887 ;;		Unchanged: 0/0
 34888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34889 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34890 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34891 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34892 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34893 ;;Total ram usage:        0 bytes
 34894 ;; Hardware stack levels used:    1
 34895 ;; Hardware stack levels required when called:   15
 34896 ;; This function calls:
 34897 ;;		Nothing
 34898 ;; This function is called by:
 34899 ;;		_dtoa
 34900 ;;		___secs_to_tm
 34901 ;;		___secs_to_zone
 34902 ;;		___year_to_secs
 34903 ;; This function uses a reentrant model
 34904 ;;
 34905                           
 34906                           	psect	text117
 34907  01BC48                     __ptext117:
 34908                           	opt callstack 0
 34909  01BC48                     ___aodiv:
 34910                           	opt callstack 0
 34911                           
 34912                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 
      +                          vargsize = 0, retsize = 8 argfudge = 0
 34913  01BC48  0E0A               	movlw	10
 34914  01BC4A  26E1               	addwf	fsr1l,f,c
 34915  01BC4C  0E00               	movlw	0
 34916  01BC4E  22E2               	addwfc	fsr1h,f,c
 34917                           
 34918                           ;stkvar	_sign @ sp[(-10)+8]
 34919                           
 34920                           ;incstack = 0
 34921 ;; hardware stack exceeded
 34922  01BC50  0EFE               	movlw	-2
 34923  01BC52  6AE3               	clrf	plusw1,c
 34924                           
 34925                           ;stkvar	_divisor @ sp[(-10)+-16]
 34926  01BC54  0EED               	movlw	-19
 34927  01BC56  AEE3               	btfss	plusw1,7,c
 34928  01BC58  D028               	goto	l10184
 34929                           
 34930                           ;stkvar	_divisor @ sp[(-10)+-16]
 34931                           ;stkvar	_divisor @ sp[(-10)+-16]
 34932  01BC5A  0EE6               	movlw	-26
 34933  01BC5C  6CE3               	negf	plusw1,c
 34934  01BC5E  0EE7               	movlw	-25
 34935  01BC60  1EE3               	comf	plusw1,f,c
 34936  01BC62  0EE8               	movlw	-24
 34937  01BC64  1EE3               	comf	plusw1,f,c
 34938  01BC66  0EE9               	movlw	-23
 34939  01BC68  1EE3               	comf	plusw1,f,c
 34940  01BC6A  0EEA               	movlw	-22
 34941  01BC6C  1EE3               	comf	plusw1,f,c
 34942  01BC6E  0EEB               	movlw	-21
 34943  01BC70  1EE3               	comf	plusw1,f,c
 34944  01BC72  0EEC               	movlw	-20
 34945  01BC74  1EE3               	comf	plusw1,f,c
 34946  01BC76  0EED               	movlw	-19
 34947  01BC78  1EE3               	comf	plusw1,f,c
 34948  01BC7A  E314               	bnc	u8080
 34949  01BC7C  0EE7               	movlw	-25
 34950  01BC7E  2AE3               	incf	plusw1,f,c
 34951  01BC80  E311               	bnc	u8080
 34952  01BC82  0EE8               	movlw	-24
 34953  01BC84  2AE3               	incf	plusw1,f,c
 34954  01BC86  E30E               	bnc	u8080
 34955  01BC88  0EE9               	movlw	-23
 34956  01BC8A  2AE3               	incf	plusw1,f,c
 34957  01BC8C  E30B               	bnc	u8080
 34958  01BC8E  0EEA               	movlw	-22
 34959  01BC90  2AE3               	incf	plusw1,f,c
 34960  01BC92  E308               	bnc	u8080
 34961  01BC94  0EEB               	movlw	-21
 34962  01BC96  2AE3               	incf	plusw1,f,c
 34963  01BC98  E305               	bnc	u8080
 34964  01BC9A  0EEC               	movlw	-20
 34965  01BC9C  2AE3               	incf	plusw1,f,c
 34966  01BC9E  E302               	bnc	u8080
 34967  01BCA0  0EED               	movlw	-19
 34968  01BCA2  2AE3               	incf	plusw1,f,c
 34969  01BCA4                     u8080:
 34970                           
 34971                           ;stkvar	_sign @ sp[(-10)+8]
 34972  01BCA4  0EFE               	movlw	-2
 34973  01BCA6  6AE3               	clrf	plusw1,c
 34974  01BCA8  2AE3               	incf	plusw1,f,c
 34975  01BCAA                     l10184:
 34976                           
 34977                           ;stkvar	_dividend @ sp[(-10)+-8]
 34978  01BCAA  0EF5               	movlw	-11
 34979  01BCAC  AEE3               	btfss	plusw1,7,c
 34980  01BCAE  D027               	goto	l10190
 34981                           
 34982                           ;stkvar	_dividend @ sp[(-10)+-8]
 34983                           ;stkvar	_dividend @ sp[(-10)+-8]
 34984  01BCB0  0EEE               	movlw	-18
 34985  01BCB2  6CE3               	negf	plusw1,c
 34986  01BCB4  0EEF               	movlw	-17
 34987  01BCB6  1EE3               	comf	plusw1,f,c
 34988  01BCB8  0EF0               	movlw	-16
 34989  01BCBA  1EE3               	comf	plusw1,f,c
 34990  01BCBC  0EF1               	movlw	-15
 34991  01BCBE  1EE3               	comf	plusw1,f,c
 34992  01BCC0  0EF2               	movlw	-14
 34993  01BCC2  1EE3               	comf	plusw1,f,c
 34994  01BCC4  0EF3               	movlw	-13
 34995  01BCC6  1EE3               	comf	plusw1,f,c
 34996  01BCC8  0EF4               	movlw	-12
 34997  01BCCA  1EE3               	comf	plusw1,f,c
 34998  01BCCC  0EF5               	movlw	-11
 34999  01BCCE  1EE3               	comf	plusw1,f,c
 35000  01BCD0  E314               	bnc	u8100
 35001  01BCD2  0EEF               	movlw	-17
 35002  01BCD4  2AE3               	incf	plusw1,f,c
 35003  01BCD6  E311               	bnc	u8100
 35004  01BCD8  0EF0               	movlw	-16
 35005  01BCDA  2AE3               	incf	plusw1,f,c
 35006  01BCDC  E30E               	bnc	u8100
 35007  01BCDE  0EF1               	movlw	-15
 35008  01BCE0  2AE3               	incf	plusw1,f,c
 35009  01BCE2  E30B               	bnc	u8100
 35010  01BCE4  0EF2               	movlw	-14
 35011  01BCE6  2AE3               	incf	plusw1,f,c
 35012  01BCE8  E308               	bnc	u8100
 35013  01BCEA  0EF3               	movlw	-13
 35014  01BCEC  2AE3               	incf	plusw1,f,c
 35015  01BCEE  E305               	bnc	u8100
 35016  01BCF0  0EF4               	movlw	-12
 35017  01BCF2  2AE3               	incf	plusw1,f,c
 35018  01BCF4  E302               	bnc	u8100
 35019  01BCF6  0EF5               	movlw	-11
 35020  01BCF8  2AE3               	incf	plusw1,f,c
 35021  01BCFA                     u8100:
 35022                           
 35023                           ;stkvar	_sign @ sp[(-10)+8]
 35024  01BCFA  0EFE               	movlw	-2
 35025  01BCFC  70E3               	btg	plusw1,0,c
 35026  01BCFE                     l10190:
 35027                           
 35028                           ;stkvar	_quotient @ sp[(-10)+0]
 35029  01BCFE  0E07               	movlw	7
 35030  01BD00  6E2A               	movwf	btemp^0,c
 35031  01BD02  0EF6               	movlw	-10
 35032  01BD04                     u8111:
 35033  01BD04  6AE3               	clrf	plusw1,c
 35034  01BD06  2AE8               	incf	wreg,f,c
 35035  01BD08  062A               	decf	btemp^0,f,c
 35036  01BD0A  E2FC               	bc	u8111
 35037                           
 35038                           ;stkvar	_divisor @ sp[(-10)+-16]
 35039  01BD0C  0EE6               	movlw	-26
 35040  01BD0E  50E3               	movf	plusw1,w,c
 35041  01BD10  E116               	bnz	u8120
 35042  01BD12  0EE7               	movlw	-25
 35043  01BD14  50E3               	movf	plusw1,w,c
 35044  01BD16  E113               	bnz	u8120
 35045  01BD18  0EE8               	movlw	-24
 35046  01BD1A  50E3               	movf	plusw1,w,c
 35047  01BD1C  E110               	bnz	u8120
 35048  01BD1E  0EE9               	movlw	-23
 35049  01BD20  50E3               	movf	plusw1,w,c
 35050  01BD22  E10D               	bnz	u8120
 35051  01BD24  0EEA               	movlw	-22
 35052  01BD26  50E3               	movf	plusw1,w,c
 35053  01BD28  E10A               	bnz	u8120
 35054  01BD2A  0EEB               	movlw	-21
 35055  01BD2C  50E3               	movf	plusw1,w,c
 35056  01BD2E  E107               	bnz	u8120
 35057  01BD30  0EEC               	movlw	-20
 35058  01BD32  50E3               	movf	plusw1,w,c
 35059  01BD34  E104               	bnz	u8120
 35060  01BD36  0EED               	movlw	-19
 35061  01BD38  50E3               	movf	plusw1,w,c
 35062  01BD3A  B4D8               	btfsc	status,2,c
 35063  01BD3C  D088               	goto	u8150
 35064  01BD3E                     u8120:
 35065                           
 35066                           ;stkvar	_counter @ sp[(-10)+9]
 35067  01BD3E  0EFF               	movlw	-1
 35068  01BD40  6AE3               	clrf	plusw1,c
 35069  01BD42  D012               	goto	L41
 35070  01BD44                     l10196:
 35071                           
 35072                           ;stkvar	_divisor @ sp[(-10)+-16]
 35073  01BD44  90D8               	bcf	status,0,c
 35074  01BD46  0EE6               	movlw	-26
 35075  01BD48  36E3               	rlcf	plusw1,f,c
 35076  01BD4A  0EE7               	movlw	-25
 35077  01BD4C  36E3               	rlcf	plusw1,f,c
 35078  01BD4E  0EE8               	movlw	-24
 35079  01BD50  36E3               	rlcf	plusw1,f,c
 35080  01BD52  0EE9               	movlw	-23
 35081  01BD54  36E3               	rlcf	plusw1,f,c
 35082  01BD56  0EEA               	movlw	-22
 35083  01BD58  36E3               	rlcf	plusw1,f,c
 35084  01BD5A  0EEB               	movlw	-21
 35085  01BD5C  36E3               	rlcf	plusw1,f,c
 35086  01BD5E  0EEC               	movlw	-20
 35087  01BD60  36E3               	rlcf	plusw1,f,c
 35088  01BD62  0EED               	movlw	-19
 35089  01BD64  36E3               	rlcf	plusw1,f,c
 35090                           
 35091                           ;stkvar	_counter @ sp[(-10)+9]
 35092  01BD66  0EFF               	movlw	-1
 35093  01BD68                     L41:
 35094  01BD68  2AE3               	incf	plusw1,f,c
 35095                           
 35096                           ;stkvar	_divisor @ sp[(-10)+-16]
 35097  01BD6A  0EED               	movlw	-19
 35098  01BD6C  AEE3               	btfss	plusw1,7,c
 35099  01BD6E  D7EA               	goto	l10196
 35100  01BD70                     u8130:
 35101                           
 35102                           ;stkvar	_quotient @ sp[(-10)+0]
 35103  01BD70  90D8               	bcf	status,0,c
 35104  01BD72  0EF6               	movlw	-10
 35105  01BD74  36E3               	rlcf	plusw1,f,c
 35106  01BD76  0EF7               	movlw	-9
 35107  01BD78  36E3               	rlcf	plusw1,f,c
 35108  01BD7A  0EF8               	movlw	-8
 35109  01BD7C  36E3               	rlcf	plusw1,f,c
 35110  01BD7E  0EF9               	movlw	-7
 35111  01BD80  36E3               	rlcf	plusw1,f,c
 35112  01BD82  0EFA               	movlw	-6
 35113  01BD84  36E3               	rlcf	plusw1,f,c
 35114  01BD86  0EFB               	movlw	-5
 35115  01BD88  36E3               	rlcf	plusw1,f,c
 35116  01BD8A  0EFC               	movlw	-4
 35117  01BD8C  36E3               	rlcf	plusw1,f,c
 35118  01BD8E  0EFD               	movlw	-3
 35119  01BD90  36E3               	rlcf	plusw1,f,c
 35120                           
 35121                           ;stkvar	_divisor @ sp[(-10)+-16]
 35122                           ;stkvar	_dividend @ sp[(-10)+-8]
 35123  01BD92  50E1               	movf	fsr1l,w,c
 35124  01BD94  0FEE               	addlw	-18
 35125  01BD96  6ED9               	movwf	fsr2l,c
 35126  01BD98  50E2               	movf	fsr1h,w,c
 35127  01BD9A  6EDA               	movwf	fsr2h,c
 35128  01BD9C  0EFF               	movlw	255
 35129  01BD9E  22DA               	addwfc	fsr2h,f,c
 35130  01BDA0  0EE6               	movlw	-26
 35131  01BDA2  50E3               	movf	plusw1,w,c
 35132  01BDA4  5CDE               	subwf	postinc2,w,c
 35133  01BDA6  0EE7               	movlw	-25
 35134  01BDA8  50E3               	movf	plusw1,w,c
 35135  01BDAA  58DE               	subwfb	postinc2,w,c
 35136  01BDAC  0EE8               	movlw	-24
 35137  01BDAE  50E3               	movf	plusw1,w,c
 35138  01BDB0  58DE               	subwfb	postinc2,w,c
 35139  01BDB2  0EE9               	movlw	-23
 35140  01BDB4  50E3               	movf	plusw1,w,c
 35141  01BDB6  58DE               	subwfb	postinc2,w,c
 35142  01BDB8  0EEA               	movlw	-22
 35143  01BDBA  50E3               	movf	plusw1,w,c
 35144  01BDBC  58DE               	subwfb	postinc2,w,c
 35145  01BDBE  0EEB               	movlw	-21
 35146  01BDC0  50E3               	movf	plusw1,w,c
 35147  01BDC2  58DE               	subwfb	postinc2,w,c
 35148  01BDC4  0EEC               	movlw	-20
 35149  01BDC6  50E3               	movf	plusw1,w,c
 35150  01BDC8  58DE               	subwfb	postinc2,w,c
 35151  01BDCA  0EED               	movlw	-19
 35152  01BDCC  50E3               	movf	plusw1,w,c
 35153  01BDCE  58DE               	subwfb	postinc2,w,c
 35154  01BDD0  A0D8               	btfss	status,0,c
 35155  01BDD2  D021               	goto	l10208
 35156                           
 35157                           ;stkvar	_divisor @ sp[(-10)+-16]
 35158                           ;stkvar	_dividend @ sp[(-10)+-8]
 35159  01BDD4  50E1               	movf	fsr1l,w,c
 35160  01BDD6  0FEE               	addlw	-18
 35161  01BDD8  6ED9               	movwf	fsr2l,c
 35162  01BDDA  50E2               	movf	fsr1h,w,c
 35163  01BDDC  6EDA               	movwf	fsr2h,c
 35164  01BDDE  0EFF               	movlw	255
 35165  01BDE0  22DA               	addwfc	fsr2h,f,c
 35166  01BDE2  0EE6               	movlw	-26
 35167  01BDE4  50E3               	movf	plusw1,w,c
 35168  01BDE6  5EDE               	subwf	postinc2,f,c
 35169  01BDE8  0EE7               	movlw	-25
 35170  01BDEA  50E3               	movf	plusw1,w,c
 35171  01BDEC  5ADE               	subwfb	postinc2,f,c
 35172  01BDEE  0EE8               	movlw	-24
 35173  01BDF0  50E3               	movf	plusw1,w,c
 35174  01BDF2  5ADE               	subwfb	postinc2,f,c
 35175  01BDF4  0EE9               	movlw	-23
 35176  01BDF6  50E3               	movf	plusw1,w,c
 35177  01BDF8  5ADE               	subwfb	postinc2,f,c
 35178  01BDFA  0EEA               	movlw	-22
 35179  01BDFC  50E3               	movf	plusw1,w,c
 35180  01BDFE  5ADE               	subwfb	postinc2,f,c
 35181  01BE00  0EEB               	movlw	-21
 35182  01BE02  50E3               	movf	plusw1,w,c
 35183  01BE04  5ADE               	subwfb	postinc2,f,c
 35184  01BE06  0EEC               	movlw	-20
 35185  01BE08  50E3               	movf	plusw1,w,c
 35186  01BE0A  5ADE               	subwfb	postinc2,f,c
 35187  01BE0C  0EED               	movlw	-19
 35188  01BE0E  50E3               	movf	plusw1,w,c
 35189  01BE10  5ADE               	subwfb	postinc2,f,c
 35190                           
 35191                           ;stkvar	_quotient @ sp[(-10)+0]
 35192  01BE12  0EF6               	movlw	-10
 35193  01BE14  80E3               	bsf	plusw1,0,c
 35194  01BE16                     l10208:
 35195                           
 35196                           ;stkvar	_divisor @ sp[(-10)+-16]
 35197  01BE16  90D8               	bcf	status,0,c
 35198  01BE18  0EED               	movlw	-19
 35199  01BE1A  32E3               	rrcf	plusw1,f,c
 35200  01BE1C  0EEC               	movlw	-20
 35201  01BE1E  32E3               	rrcf	plusw1,f,c
 35202  01BE20  0EEB               	movlw	-21
 35203  01BE22  32E3               	rrcf	plusw1,f,c
 35204  01BE24  0EEA               	movlw	-22
 35205  01BE26  32E3               	rrcf	plusw1,f,c
 35206  01BE28  0EE9               	movlw	-23
 35207  01BE2A  32E3               	rrcf	plusw1,f,c
 35208  01BE2C  0EE8               	movlw	-24
 35209  01BE2E  32E3               	rrcf	plusw1,f,c
 35210  01BE30  0EE7               	movlw	-25
 35211  01BE32  32E3               	rrcf	plusw1,f,c
 35212  01BE34  0EE6               	movlw	-26
 35213  01BE36  32E3               	rrcf	plusw1,f,c
 35214                           
 35215                           ;stkvar	_counter @ sp[(-10)+9]
 35216  01BE38  0EFF               	movlw	-1
 35217  01BE3A  50E3               	movf	plusw1,w,c
 35218  01BE3C  6E2A               	movwf	btemp^0,c
 35219  01BE3E  0E01               	movlw	1
 35220  01BE40  5E2A               	subwf	btemp^0,f,c
 35221  01BE42  0EFF               	movlw	-1
 35222  01BE44  0060  F0AB  FFE3   	movff	btemp,plusw1
 35223  01BE4A  A4D8               	btfss	status,2,c
 35224  01BE4C  D791               	goto	u8130
 35225  01BE4E                     u8150:
 35226                           
 35227                           ;stkvar	_sign @ sp[(-10)+8]
 35228  01BE4E  0EFE               	movlw	-2
 35229  01BE50  50E3               	movf	plusw1,w,c
 35230  01BE52  B4D8               	btfsc	status,2,c
 35231  01BE54  D025               	goto	u8170
 35232                           
 35233                           ;stkvar	_quotient @ sp[(-10)+0]
 35234                           ;stkvar	_quotient @ sp[(-10)+0]
 35235  01BE56  0EF6               	movlw	-10
 35236  01BE58  6CE3               	negf	plusw1,c
 35237  01BE5A  0EF7               	movlw	-9
 35238  01BE5C  1EE3               	comf	plusw1,f,c
 35239  01BE5E  0EF8               	movlw	-8
 35240  01BE60  1EE3               	comf	plusw1,f,c
 35241  01BE62  0EF9               	movlw	-7
 35242  01BE64  1EE3               	comf	plusw1,f,c
 35243  01BE66  0EFA               	movlw	-6
 35244  01BE68  1EE3               	comf	plusw1,f,c
 35245  01BE6A  0EFB               	movlw	-5
 35246  01BE6C  1EE3               	comf	plusw1,f,c
 35247  01BE6E  0EFC               	movlw	-4
 35248  01BE70  1EE3               	comf	plusw1,f,c
 35249  01BE72  0EFD               	movlw	-3
 35250  01BE74  1EE3               	comf	plusw1,f,c
 35251  01BE76  E314               	bnc	u8170
 35252  01BE78  0EF7               	movlw	-9
 35253  01BE7A  2AE3               	incf	plusw1,f,c
 35254  01BE7C  E311               	bnc	u8170
 35255  01BE7E  0EF8               	movlw	-8
 35256  01BE80  2AE3               	incf	plusw1,f,c
 35257  01BE82  E30E               	bnc	u8170
 35258  01BE84  0EF9               	movlw	-7
 35259  01BE86  2AE3               	incf	plusw1,f,c
 35260  01BE88  E30B               	bnc	u8170
 35261  01BE8A  0EFA               	movlw	-6
 35262  01BE8C  2AE3               	incf	plusw1,f,c
 35263  01BE8E  E308               	bnc	u8170
 35264  01BE90  0EFB               	movlw	-5
 35265  01BE92  2AE3               	incf	plusw1,f,c
 35266  01BE94  E305               	bnc	u8170
 35267  01BE96  0EFC               	movlw	-4
 35268  01BE98  2AE3               	incf	plusw1,f,c
 35269  01BE9A  E302               	bnc	u8170
 35270  01BE9C  0EFD               	movlw	-3
 35271  01BE9E  2AE3               	incf	plusw1,f,c
 35272  01BEA0                     u8170:
 35273                           
 35274                           ;stkvar	_quotient @ sp[(-10)+0]
 35275  01BEA0  0EF6               	movlw	246
 35276  01BEA2  24E1               	addwf	fsr1l,w,c
 35277  01BEA4  6ED9               	movwf	fsr2l,c
 35278  01BEA6  0EFF               	movlw	255
 35279  01BEA8  20E2               	addwfc	fsr1h,w,c
 35280  01BEAA  6EDA               	movwf	fsr2h,c
 35281                           
 35282                           ;stkvar	?___aodiv @ sp[(-10)+-8]
 35283  01BEAC  0E08               	movlw	8
 35284  01BEAE  6E2A               	movwf	btemp^0,c
 35285  01BEB0  0EEE               	movlw	-18
 35286  01BEB2                     us818999:
 35287  01BEB2  006F FF7B FFE3     	movff	postinc2,plusw1
 35288  01BEB8  28E8               	incf	wreg,w,c
 35289  01BEBA  2E2A               	decfsz	btemp^0,f,c
 35290  01BEBC  D7FA               	bra	us818999
 35291                           
 35292                           ; ___aodiv: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, arg
      +                          size = 16, vargsize = 0
 35293  01BEBE  0EF6               	movlw	246
 35294  01BEC0  26E1               	addwf	fsr1l,f,c
 35295  01BEC2  0EFF               	movlw	255
 35296  01BEC4  22E2               	addwfc	fsr1h,f,c
 35297  01BEC6  0012               	return		;funcret
 35298  01BEC8                     __end_of___aodiv:
 35299                           	opt callstack 0
 35300                           
 35301 ;; *************** function _ctoa *****************
 35302 ;; Defined at:
 35303 ;;		line 259 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 35304 ;; Parameters:    Size  Location     Type
 35305 ;;  fp              2  [STACK] PTR struct _IO_FILE
 35306 ;;		 -> f(6), NULL(0), 
 35307 ;;  c               1  [STACK] unsigned char 
 35308 ;; Auto vars:     Size  Location     Type
 35309 ;;  w               2  [STACK] int 
 35310 ;;  l               2    0        int 
 35311 ;; Return value:  Size  Location     Type
 35312 ;;                  2  [STACK] int 
 35313 ;; Registers used:
 35314 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 35315 ;; Tracked objects:
 35316 ;;		On entry : 0/0
 35317 ;;		On exit  : 0/0
 35318 ;;		Unchanged: 0/0
 35319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35320 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35321 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35323 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35324 ;;Total ram usage:        0 bytes
 35325 ;; Hardware stack levels used:    1
 35326 ;; Hardware stack levels required when called:   20
 35327 ;; This function calls:
 35328 ;;		_pad
 35329 ;; This function is called by:
 35330 ;;		_vfpfcnvrt
 35331 ;; This function uses a reentrant model
 35332 ;;
 35333                           
 35334                           	psect	text118
 35335  000D28                     __ptext118:
 35336                           	opt callstack 0
 35337  000D28                     _ctoa:
 35338                           	opt callstack 0
 35339                           
 35340                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35341  000D28  52E6               	movf	postinc1,f,c
 35342  000D2A  52E6               	movf	postinc1,f,c
 35343                           
 35344                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.10
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
 35345                           
 35346                           ;incstack = 0
 35347 ;; hardware stack exceeded
 35348  000D2C  504A               	movf	_width^0,w,c
 35349  000D2E  104B               	iorwf	(_width+1)^0,w,c
 35350  000D30  A4D8               	btfss	status,2,c
 35351  000D32  D009               	goto	l15482
 35352                           
 35353                           ;stkvar	_w @ sp[(-2)+0]
 35354  000D34  0EFE               	movlw	-2
 35355  000D36  0060  F12B  FFE3   	movff	_width,plusw1
 35356  000D3C  0EFF               	movlw	-1
 35357  000D3E  0060  F12F  FFE3   	movff	_width+1,plusw1
 35358  000D44  D016               	goto	l15484
 35359  000D46                     l15482:
 35360  000D46  0EFF               	movlw	255
 35361  000D48  6E34               	movwf	(btemp+10)^0,c
 35362  000D4A  0EFF               	movlw	255
 35363  000D4C  6E35               	movwf	(btemp+11)^0,c
 35364  000D4E  0060  F128  F032   	movff	_width,btemp+8
 35365  000D54  0060  F12C  F033   	movff	_width+1,btemp+9
 35366  000D5A  5034               	movf	(btemp+10)^0,w,c
 35367  000D5C  2632               	addwf	(btemp+8)^0,f,c
 35368  000D5E  5035               	movf	(btemp+11)^0,w,c
 35369  000D60  2233               	addwfc	(btemp+9)^0,f,c
 35370                           
 35371                           ;stkvar	_w @ sp[(-2)+0]
 35372  000D62  0EFE               	movlw	-2
 35373  000D64  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 35374  000D6A  0EFF               	movlw	-1
 35375  000D6C  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 35376  000D72                     l15484:
 35377                           
 35378                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
 35379                           ;stkvar	_c @ sp[(-2)+-3]
 35380  000D72  0EFB               	movlw	-5
 35381  000D74  006F FF8C  F354    	movff	plusw1,_dbuf
 35382                           
 35383                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
 35384  000D7A  0103               	movlb	3	; () banked
 35385  000D7C  6B55               	clrf	(_dbuf+1)& (0+255),b
 35386                           
 35387                           ; BSR set to: 3
 35388                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
 35389                           ;stkvar	_w @ sp[(-2)+0]
 35390  000D7E  0EFE               	movlw	-2
 35391  000D80  006F FF8F FFE6     	movff	plusw1,postinc1
 35392  000D86  006F FF8F FFE6     	movff	plusw1,postinc1
 35393  000D8C  0E54               	movlw	low _dbuf
 35394  000D8E  6EE6               	movwf	postinc1,c
 35395  000D90  0E03               	movlw	high _dbuf
 35396  000D92  6EE6               	movwf	postinc1,c
 35397                           
 35398                           ;stkvar	_fp @ sp[(-6)+-2]
 35399  000D94  0EF8               	movlw	-8
 35400  000D96  006F FF8F FFE6     	movff	plusw1,postinc1
 35401  000D9C  006F FF8F FFE6     	movff	plusw1,postinc1
 35402  000DA2  EC2F  F0FB         	call	_pad	;wreg free
 35403                           
 35404                           ; _ctoa: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize 
      +                          = 3, vargsize = 0
 35405  000DA6  0EFB               	movlw	251
 35406  000DA8  26E1               	addwf	fsr1l,f,c
 35407  000DAA  0EFF               	movlw	255
 35408  000DAC  22E2               	addwfc	fsr1h,f,c
 35409  000DAE  0012               	return		;funcret
 35410  000DB0                     __end_of_ctoa:
 35411                           	opt callstack 0
 35412                           
 35413 ;; *************** function _pad *****************
 35414 ;; Defined at:
 35415 ;;		line 72 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 35416 ;; Parameters:    Size  Location     Type
 35417 ;;  fp              2  [STACK] PTR struct _IO_FILE
 35418 ;;		 -> f(6), NULL(0), 
 35419 ;;  buf             2  [STACK] PTR unsigned char 
 35420 ;;		 -> dbuf(80), 
 35421 ;;  p               2  [STACK] int 
 35422 ;; Auto vars:     Size  Location     Type
 35423 ;;  w               2  [STACK] int 
 35424 ;;  i               2  [STACK] int 
 35425 ;; Return value:  Size  Location     Type
 35426 ;;                  2  [STACK] int 
 35427 ;; Registers used:
 35428 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 35429 ;; Tracked objects:
 35430 ;;		On entry : 0/3
 35431 ;;		On exit  : 0/0
 35432 ;;		Unchanged: 0/0
 35433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35434 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35435 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35436 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35437 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35438 ;;Total ram usage:        0 bytes
 35439 ;; Hardware stack levels used:    1
 35440 ;; Hardware stack levels required when called:   19
 35441 ;; This function calls:
 35442 ;;		_fputc
 35443 ;;		_fputs
 35444 ;;		_strlen
 35445 ;; This function is called by:
 35446 ;;		_ctoa
 35447 ;;		_dtoa
 35448 ;;		_efgtoa
 35449 ;;		_utoa
 35450 ;;		_xtoa
 35451 ;; This function uses a reentrant model
 35452 ;;
 35453                           
 35454                           	psect	text119
 35455  01F65E                     __ptext119:
 35456                           	opt callstack 0
 35457  01F65E                     _pad:
 35458                           	opt callstack 0
 35459                           
 35460                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35461  01F65E  52E6               	movf	postinc1,f,c
 35462  01F660  52E6               	movf	postinc1,f,c
 35463  01F662  52E6               	movf	postinc1,f,c
 35464  01F664  52E6               	movf	postinc1,f,c
 35465                           
 35466                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.10/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
 35467                           
 35468                           ;incstack = 0
 35469 ;; hardware stack exceeded
 35470  01F666  A04E               	btfss	_flags^0,0,c
 35471  01F668  D010               	goto	l15366
 35472                           
 35473                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
 35474                           ;stkvar	_fp @ sp[(-4)+-2]
 35475  01F66A  0EFA               	movlw	-6
 35476  01F66C  006F FF8F FFE6     	movff	plusw1,postinc1
 35477  01F672  006F FF8F FFE6     	movff	plusw1,postinc1
 35478                           
 35479                           ;stkvar	_buf @ sp[(-6)+-4]
 35480  01F678  0EF6               	movlw	-10
 35481  01F67A  006F FF8F FFE6     	movff	plusw1,postinc1
 35482  01F680  006F FF8F FFE6     	movff	plusw1,postinc1
 35483  01F686  ECDB  F004         	call	_fputs	;wreg free
 35484  01F68A                     l15366:
 35485                           
 35486                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
 35487                           ;stkvar	_p @ sp[(-4)+-6]
 35488  01F68A  0EF7               	movlw	-9
 35489  01F68C  BEE3               	btfsc	plusw1,7,c
 35490  01F68E  D011               	goto	l15370
 35491                           
 35492                           ;stkvar	_p @ sp[(-4)+-6]
 35493                           ;stkvar	_w @ sp[(-4)+0]
 35494  01F690  0EF6               	movlw	-10
 35495  01F692  006F FF8C  F02A    	movff	plusw1,btemp
 35496  01F698  0EFC               	movlw	-4
 35497  01F69A  0060  F0AB  FFE3   	movff	btemp,plusw1
 35498  01F6A0  0EF7               	movlw	-9
 35499  01F6A2  006F FF8C  F02A    	movff	plusw1,btemp
 35500  01F6A8  0EFD               	movlw	-3
 35501  01F6AA  0060  F0AB  FFE3   	movff	btemp,plusw1
 35502  01F6B0  D004               	goto	l2465
 35503  01F6B2                     l15370:
 35504                           
 35505                           ;stkvar	_w @ sp[(-4)+0]
 35506  01F6B2  0EFC               	movlw	-4
 35507  01F6B4  6AE3               	clrf	plusw1,c
 35508  01F6B6  0EFD               	movlw	-3
 35509  01F6B8  6AE3               	clrf	plusw1,c
 35510  01F6BA                     l2465:
 35511                           
 35512                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 35513                           ;stkvar	_i @ sp[(-4)+2]
 35514  01F6BA  0EFE               	movlw	-2
 35515  01F6BC  6AE3               	clrf	plusw1,c
 35516  01F6BE  0EFF               	movlw	-1
 35517  01F6C0  6AE3               	clrf	plusw1,c
 35518                           
 35519                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 35520  01F6C2  D01E               	goto	l15376
 35521  01F6C4                     l15372:
 35522                           
 35523                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
 35524                           ;stkvar	_fp @ sp[(-4)+-2]
 35525  01F6C4  0EFA               	movlw	-6
 35526  01F6C6  006F FF8F FFE6     	movff	plusw1,postinc1
 35527  01F6CC  006F FF8F FFE6     	movff	plusw1,postinc1
 35528  01F6D2  0E20               	movlw	32
 35529  01F6D4  6EE6               	movwf	postinc1,c
 35530  01F6D6  0E00               	movlw	0
 35531  01F6D8  6EE6               	movwf	postinc1,c
 35532  01F6DA  ECF8  F0F8         	call	_fputc	;wreg free
 35533                           
 35534                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 86:         ++i;
 35535                           ;stkvar	_i @ sp[(-4)+2]
 35536  01F6DE  0EFE               	movlw	-2
 35537  01F6E0  50E3               	movf	plusw1,w,c
 35538  01F6E2  0F01               	addlw	1
 35539  01F6E4  6E2A               	movwf	btemp^0,c
 35540  01F6E6  0EFE               	movlw	-2
 35541  01F6E8  0060  F0AB  FFE3   	movff	btemp,plusw1
 35542  01F6EE  6A2A               	clrf	btemp^0,c
 35543  01F6F0  0EFF               	movlw	-1
 35544  01F6F2  50E3               	movf	plusw1,w,c
 35545  01F6F4  202A               	addwfc	btemp^0,w,c
 35546  01F6F6  6E2A               	movwf	btemp^0,c
 35547  01F6F8  0EFF               	movlw	-1
 35548  01F6FA  0060  F0AB  FFE3   	movff	btemp,plusw1
 35549  01F700                     l15376:
 35550                           
 35551                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 35552                           ;stkvar	_w @ sp[(-4)+0]
 35553                           ;stkvar	_i @ sp[(-4)+2]
 35554  01F700  50E1               	movf	fsr1l,w,c
 35555  01F702  0FFE               	addlw	-2
 35556  01F704  6ED9               	movwf	fsr2l,c
 35557  01F706  50E2               	movf	fsr1h,w,c
 35558  01F708  6EDA               	movwf	fsr2h,c
 35559  01F70A  0EFF               	movlw	255
 35560  01F70C  22DA               	addwfc	fsr2h,f,c
 35561  01F70E  0EFC               	movlw	-4
 35562  01F710  50E3               	movf	plusw1,w,c
 35563  01F712  5CDE               	subwf	postinc2,w,c
 35564  01F714  50DE               	movf	postinc2,w,c
 35565  01F716  0A80               	xorlw	128
 35566  01F718  6E2A               	movwf	btemp^0,c
 35567  01F71A  0EFD               	movlw	-3
 35568  01F71C  50E3               	movf	plusw1,w,c
 35569  01F71E  0A80               	xorlw	128
 35570  01F720  582A               	subwfb	btemp^0,w,c
 35571  01F722  A0D8               	btfss	status,0,c
 35572  01F724  D7CF               	goto	l15372
 35573                           
 35574                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
 35575  01F726  B04E               	btfsc	_flags^0,0,c
 35576  01F728  D010               	goto	l15380
 35577                           
 35578                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
 35579                           ;stkvar	_fp @ sp[(-4)+-2]
 35580  01F72A  0EFA               	movlw	-6
 35581  01F72C  006F FF8F FFE6     	movff	plusw1,postinc1
 35582  01F732  006F FF8F FFE6     	movff	plusw1,postinc1
 35583                           
 35584                           ;stkvar	_buf @ sp[(-6)+-4]
 35585  01F738  0EF6               	movlw	-10
 35586  01F73A  006F FF8F FFE6     	movff	plusw1,postinc1
 35587  01F740  006F FF8F FFE6     	movff	plusw1,postinc1
 35588  01F746  ECDB  F004         	call	_fputs	;wreg free
 35589  01F74A                     l15380:
 35590                           
 35591                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
 35592                           ;stkvar	_w @ sp[(-4)+0]
 35593                           ;stkvar	_buf @ sp[(-4)+-4]
 35594  01F74A  0EF8               	movlw	-8
 35595  01F74C  006F FF8F FFE6     	movff	plusw1,postinc1
 35596  01F752  006F FF8F FFE6     	movff	plusw1,postinc1
 35597  01F758  EC3D  F004         	call	_strlen	;wreg free
 35598  01F75C  0EFC               	movlw	-4
 35599  01F75E  50E3               	movf	plusw1,w,c
 35600  01F760  262A               	addwf	btemp^0,f,c
 35601  01F762  0EFD               	movlw	-3
 35602  01F764  50E3               	movf	plusw1,w,c
 35603  01F766  222B               	addwfc	(btemp+1)^0,f,c
 35604                           
 35605                           ; _pad: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize =
      +                           6, vargsize = 0
 35606  01F768  0EF6               	movlw	246
 35607  01F76A  26E1               	addwf	fsr1l,f,c
 35608  01F76C  0EFF               	movlw	255
 35609  01F76E  22E2               	addwfc	fsr1h,f,c
 35610  01F770  0012               	return		;funcret
 35611  01F772                     __end_of_pad:
 35612                           	opt callstack 0
 35613                           
 35614 ;; *************** function _strlen *****************
 35615 ;; Defined at:
 35616 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strlen.c"
 35617 ;; Parameters:    Size  Location     Type
 35618 ;;  s               2  [STACK] PTR const unsigned char 
 35619 ;;		 -> ?_printf(2), ?_sprintf(2), asctime@buf(27), nuls(7), 
 35620 ;;		 -> dbuf(80), spin(120), STR_71(9), STR_70(12), 
 35621 ;;		 -> D.lcd(640), D(642), T(176), port_data(512), 
 35622 ;;		 -> STR_3(5), V(181), 
 35623 ;; Auto vars:     Size  Location     Type
 35624 ;;  a               2  [STACK] PTR const unsigned char 
 35625 ;;		 -> ?_printf(2), ?_sprintf(2), asctime@buf(27), nuls(7), 
 35626 ;;		 -> dbuf(80), spin(120), STR_71(9), STR_70(12), 
 35627 ;;		 -> D.lcd(640), D(642), T(176), port_data(512), 
 35628 ;;		 -> STR_3(5), V(181), 
 35629 ;; Return value:  Size  Location     Type
 35630 ;;                  2  [STACK] unsigned int 
 35631 ;; Registers used:
 35632 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru
 35633 ;; Tracked objects:
 35634 ;;		On entry : 0/0
 35635 ;;		On exit  : 0/0
 35636 ;;		Unchanged: 0/0
 35637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35638 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35639 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35640 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35641 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35642 ;;Total ram usage:        0 bytes
 35643 ;; Hardware stack levels used:    1
 35644 ;; Hardware stack levels required when called:   15
 35645 ;; This function calls:
 35646 ;;		Nothing
 35647 ;; This function is called by:
 35648 ;;		_eaDogM_WriteString
 35649 ;;		_spinners
 35650 ;;		_calc_bsoc
 35651 ;;		_pad
 35652 ;;		_stoa
 35653 ;; This function uses a reentrant model
 35654 ;;
 35655                           
 35656                           	psect	text120
 35657  00087A                     __ptext120:
 35658                           	opt callstack 0
 35659  00087A                     _strlen:
 35660                           	opt callstack 0
 35661                           
 35662                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35663  00087A  52E6               	movf	postinc1,f,c
 35664  00087C  52E6               	movf	postinc1,f,c
 35665                           
 35666                           ;stkvar	_s @ sp[(-2)+-2]
 35667                           
 35668                           ;incstack = 0
 35669 ;; hardware stack exceeded
 35670  00087E  0EFC               	movlw	-4
 35671  000880  006F FF8C  F034    	movff	plusw1,btemp+10
 35672  000886  0EFD               	movlw	-3
 35673  000888  006F FF8C  F035    	movff	plusw1,btemp+11
 35674                           
 35675                           ;stkvar	_a @ sp[(-2)+0]
 35676  00088E  0EFF               	movlw	-1
 35677  000890  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 35678  000896  0EFE               	movlw	-2
 35679  000898  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 35680  00089E  D011               	goto	l15306
 35681  0008A0                     l15304:
 35682                           
 35683                           ;stkvar	_s @ sp[(-2)+-2]
 35684  0008A0  0EFC               	movlw	-4
 35685  0008A2  50E3               	movf	plusw1,w,c
 35686  0008A4  0F01               	addlw	1
 35687  0008A6  6E2A               	movwf	btemp^0,c
 35688  0008A8  0EFC               	movlw	-4
 35689  0008AA  0060  F0AB  FFE3   	movff	btemp,plusw1
 35690  0008B0  6A2A               	clrf	btemp^0,c
 35691  0008B2  0EFD               	movlw	-3
 35692  0008B4  50E3               	movf	plusw1,w,c
 35693  0008B6  202A               	addwfc	btemp^0,w,c
 35694  0008B8  6E2A               	movwf	btemp^0,c
 35695  0008BA  0EFD               	movlw	-3
 35696  0008BC  0060  F0AB  FFE3   	movff	btemp,plusw1
 35697  0008C2                     l15306:
 35698                           
 35699                           ;stkvar	_s @ sp[(-2)+-2]
 35700  0008C2  0EFC               	movlw	-4
 35701  0008C4  006F FF8F FFF6     	movff	plusw1,tblptrl
 35702  0008CA  0EFD               	movlw	-3
 35703  0008CC  006F FF8F FFF7     	movff	plusw1,tblptrh
 35704  0008D2  0E00               	movlw	low (__mediumconst shr (0+16))
 35705  0008D4  6EF8               	movwf	tblptru,c
 35706  0008D6  0E1F               	movlw	(high __ramtop+-1)
 35707  0008D8  64F7               	cpfsgt	tblptrh,c
 35708  0008DA  D003               	bra	u14187
 35709  0008DC  0008               	tblrd		*
 35710  0008DE  50F5               	movf	tablat,w,c
 35711  0008E0  D007               	bra	u14180
 35712  0008E2                     u14187:
 35713  0008E2  006F FFDB FFE9     	movff	tblptrl,fsr0l
 35714  0008E8  006F FFDF FFEA     	movff	tblptrh,fsr0h
 35715  0008EE  50EF               	movf	indf0,w,c
 35716  0008F0                     u14180:
 35717  0008F0  0900               	iorlw	0
 35718  0008F2  A4D8               	btfss	status,2,c
 35719  0008F4  D7D5               	goto	l15304
 35720                           
 35721                           ;stkvar	_a @ sp[(-2)+0]
 35722                           ;stkvar	_s @ sp[(-2)+-2]
 35723  0008F6  0EFC               	movlw	-4
 35724  0008F8  006F FF8C  F02A    	movff	plusw1,btemp
 35725  0008FE  0EFD               	movlw	-3
 35726  000900  006F FF8C  F02B    	movff	plusw1,btemp+1
 35727  000906  0EFE               	movlw	-2
 35728  000908  50E3               	movf	plusw1,w,c
 35729  00090A  5E2A               	subwf	btemp^0,f,c
 35730  00090C  0EFF               	movlw	-1
 35731  00090E  50E3               	movf	plusw1,w,c
 35732  000910  5A2B               	subwfb	(btemp+1)^0,f,c
 35733                           
 35734                           ; _strlen: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 35735  000912  52E5               	movf	postdec1,f,c
 35736  000914  52E5               	movf	postdec1,f,c
 35737  000916  52E5               	movf	postdec1,f,c
 35738  000918  52E5               	movf	postdec1,f,c
 35739  00091A  0012               	return		;funcret
 35740  00091C                     __end_of_strlen:
 35741                           	opt callstack 0
 35742                           
 35743 ;; *************** function _fputs *****************
 35744 ;; Defined at:
 35745 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputs.c"
 35746 ;; Parameters:    Size  Location     Type
 35747 ;;  s               2  [STACK] PTR const unsigned char 
 35748 ;;		 -> dbuf(80), 
 35749 ;;  fp              2  [STACK] PTR struct _IO_FILE
 35750 ;;		 -> f(6), NULL(0), 
 35751 ;; Auto vars:     Size  Location     Type
 35752 ;;  i               2  [STACK] int 
 35753 ;;  c               1  [STACK] unsigned char 
 35754 ;; Return value:  Size  Location     Type
 35755 ;;                  2  [STACK] int 
 35756 ;; Registers used:
 35757 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 35758 ;; Tracked objects:
 35759 ;;		On entry : 0/3
 35760 ;;		On exit  : 0/0
 35761 ;;		Unchanged: 0/0
 35762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35763 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35764 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35765 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35766 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35767 ;;Total ram usage:        0 bytes
 35768 ;; Hardware stack levels used:    1
 35769 ;; Hardware stack levels required when called:   18
 35770 ;; This function calls:
 35771 ;;		_fputc
 35772 ;; This function is called by:
 35773 ;;		_pad
 35774 ;; This function uses a reentrant model
 35775 ;;
 35776                           
 35777                           	psect	text121
 35778  0009B6                     __ptext121:
 35779                           	opt callstack 0
 35780  0009B6                     _fputs:
 35781                           	opt callstack 0
 35782                           
 35783                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35784  0009B6  52E6               	movf	postinc1,f,c
 35785  0009B8  52E6               	movf	postinc1,f,c
 35786  0009BA  52E6               	movf	postinc1,f,c
 35787                           
 35788                           ;stkvar	_i @ sp[(-3)+0]
 35789                           
 35790                           ;incstack = 0
 35791 ;; hardware stack exceeded
 35792  0009BC  0EFD               	movlw	-3
 35793  0009BE  6AE3               	clrf	plusw1,c
 35794  0009C0  0EFE               	movlw	-2
 35795  0009C2  6AE3               	clrf	plusw1,c
 35796  0009C4  D01F               	goto	l15318
 35797  0009C6                     l15314:
 35798                           
 35799                           ;stkvar	_fp @ sp[(-3)+-4]
 35800  0009C6  0EF9               	movlw	-7
 35801  0009C8  006F FF8F FFE6     	movff	plusw1,postinc1
 35802  0009CE  006F FF8F FFE6     	movff	plusw1,postinc1
 35803                           
 35804                           ;stkvar	_c @ sp[(-5)+2]
 35805  0009D4  0EFD               	movlw	-3
 35806  0009D6  50E3               	movf	plusw1,w,c
 35807  0009D8  6EE6               	movwf	postinc1,c
 35808  0009DA  0E00               	movlw	0
 35809  0009DC  6EE6               	movwf	postinc1,c
 35810  0009DE  ECF8  F0F8         	call	_fputc	;wreg free
 35811                           
 35812                           ;stkvar	_i @ sp[(-3)+0]
 35813  0009E2  0EFD               	movlw	-3
 35814  0009E4  50E3               	movf	plusw1,w,c
 35815  0009E6  0F01               	addlw	1
 35816  0009E8  6E2A               	movwf	btemp^0,c
 35817  0009EA  0EFD               	movlw	-3
 35818  0009EC  0060  F0AB  FFE3   	movff	btemp,plusw1
 35819  0009F2  6A2A               	clrf	btemp^0,c
 35820  0009F4  0EFE               	movlw	-2
 35821  0009F6  50E3               	movf	plusw1,w,c
 35822  0009F8  202A               	addwfc	btemp^0,w,c
 35823  0009FA  6E2A               	movwf	btemp^0,c
 35824  0009FC  0EFE               	movlw	-2
 35825  0009FE  0060  F0AB  FFE3   	movff	btemp,plusw1
 35826  000A04                     l15318:
 35827                           
 35828                           ;stkvar	_i @ sp[(-3)+0]
 35829  000A04  0EFD               	movlw	-3
 35830  000A06  006F FF8C  F034    	movff	plusw1,btemp+10
 35831  000A0C  0EFE               	movlw	-2
 35832  000A0E  006F FF8C  F035    	movff	plusw1,btemp+11
 35833                           
 35834                           ;stkvar	_s @ sp[(-3)+-2]
 35835  000A14  0EFB               	movlw	-5
 35836  000A16  006F FF8C  F032    	movff	plusw1,btemp+8
 35837  000A1C  0EFC               	movlw	-4
 35838  000A1E  006F FF8C  F033    	movff	plusw1,btemp+9
 35839  000A24  5034               	movf	(btemp+10)^0,w,c
 35840  000A26  2432               	addwf	(btemp+8)^0,w,c
 35841  000A28  6ED9               	movwf	fsr2l,c
 35842  000A2A  5035               	movf	(btemp+11)^0,w,c
 35843  000A2C  2033               	addwfc	(btemp+9)^0,w,c
 35844  000A2E  6EDA               	movwf	fsr2h,c
 35845  000A30  50DF               	movf	indf2,w,c
 35846  000A32  6E35               	movwf	(btemp+11)^0,c
 35847                           
 35848                           ;stkvar	_c @ sp[(-3)+2]
 35849  000A34  0EFF               	movlw	-1
 35850  000A36  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 35851  000A3C  0EFF               	movlw	-1
 35852  000A3E  50E3               	movf	plusw1,w,c
 35853  000A40  A4D8               	btfss	status,2,c
 35854  000A42  D7C1               	goto	l15314
 35855                           
 35856                           ; _fputs: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 35857  000A44  0EF9               	movlw	249
 35858  000A46  26E1               	addwf	fsr1l,f,c
 35859  000A48  0EFF               	movlw	255
 35860  000A4A  22E2               	addwfc	fsr1h,f,c
 35861  000A4C  0012               	return		;funcret
 35862  000A4E                     __end_of_fputs:
 35863                           	opt callstack 0
 35864                           
 35865 ;; *************** function _fputc *****************
 35866 ;; Defined at:
 35867 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputc.c"
 35868 ;; Parameters:    Size  Location     Type
 35869 ;;  c               2  [STACK] int 
 35870 ;;  fp              2  [STACK] PTR struct _IO_FILE
 35871 ;;		 -> f(6), NULL(0), 
 35872 ;; Auto vars:     Size  Location     Type
 35873 ;;		None
 35874 ;; Return value:  Size  Location     Type
 35875 ;;                  2  [STACK] int 
 35876 ;; Registers used:
 35877 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 35878 ;; Tracked objects:
 35879 ;;		On entry : 0/0
 35880 ;;		On exit  : 0/0
 35881 ;;		Unchanged: 0/0
 35882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35883 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35886 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35887 ;;Total ram usage:        0 bytes
 35888 ;; Hardware stack levels used:    1
 35889 ;; Hardware stack levels required when called:   17
 35890 ;; This function calls:
 35891 ;;		_putch
 35892 ;; This function is called by:
 35893 ;;		_pad
 35894 ;;		_stoa
 35895 ;;		_vfpfcnvrt
 35896 ;;		_fputs
 35897 ;; This function uses a reentrant model
 35898 ;;
 35899                           
 35900                           	psect	text122
 35901  01F1F0                     __ptext122:
 35902                           	opt callstack 0
 35903  01F1F0                     _fputc:
 35904                           	opt callstack 0
 35905                           
 35906                           ;stkvar	_fp @ sp[(0)+-4]
 35907                           
 35908                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35909                           ;incstack = 0
 35910 ;; hardware stack exceeded
 35911  01F1F0  0EFC               	movlw	-4
 35912  01F1F2  006F FF8C  F02A    	movff	plusw1,btemp
 35913  01F1F8  0EFD               	movlw	-3
 35914  01F1FA  50E3               	movf	plusw1,w,c
 35915  01F1FC  102A               	iorwf	btemp^0,w,c
 35916  01F1FE  B4D8               	btfsc	status,2,c
 35917  01F200  D009               	goto	u14150
 35918                           
 35919                           ;stkvar	_fp @ sp[(0)+-4]
 35920  01F202  0EFC               	movlw	-4
 35921  01F204  006F FF8C  F02A    	movff	plusw1,btemp
 35922  01F20A  0EFD               	movlw	-3
 35923  01F20C  50E3               	movf	plusw1,w,c
 35924  01F20E  102A               	iorwf	btemp^0,w,c
 35925  01F210  A4D8               	btfss	status,2,c
 35926  01F212  D006               	goto	l15292
 35927  01F214                     u14150:
 35928                           
 35929                           ;stkvar	_c @ sp[(0)+-2]
 35930  01F214  0EFE               	movlw	-2
 35931  01F216  50E3               	movf	plusw1,w,c
 35932  01F218  6EE6               	movwf	postinc1,c
 35933  01F21A  EC94  F012         	call	_putch	;wreg free
 35934  01F21E  D075               	goto	l3541
 35935  01F220                     l15292:
 35936                           
 35937                           ;stkvar	_fp @ sp[(0)+-4]
 35938  01F220  0EFC               	movlw	-4
 35939  01F222  006F FF8C  F034    	movff	plusw1,btemp+10
 35940  01F228  0EFD               	movlw	-3
 35941  01F22A  006F FF8C  F035    	movff	plusw1,btemp+11
 35942  01F230  0E04               	movlw	4
 35943  01F232  2434               	addwf	(btemp+10)^0,w,c
 35944  01F234  6ED9               	movwf	fsr2l,c
 35945  01F236  0E00               	movlw	0
 35946  01F238  2035               	addwfc	(btemp+11)^0,w,c
 35947  01F23A  6EDA               	movwf	fsr2h,c
 35948  01F23C  50DE               	movf	postinc2,w,c
 35949  01F23E  10DE               	iorwf	postinc2,w,c
 35950  01F240  B4D8               	btfsc	status,2,c
 35951  01F242  D026               	goto	u14170
 35952                           
 35953                           ;stkvar	_fp @ sp[(0)+-4]
 35954  01F244  0EFC               	movlw	-4
 35955  01F246  006F FF8C  F034    	movff	plusw1,btemp+10
 35956  01F24C  0EFD               	movlw	-3
 35957  01F24E  006F FF8C  F035    	movff	plusw1,btemp+11
 35958  01F254  0E04               	movlw	4
 35959  01F256  2434               	addwf	(btemp+10)^0,w,c
 35960  01F258  6ED9               	movwf	fsr2l,c
 35961  01F25A  0E00               	movlw	0
 35962  01F25C  2035               	addwfc	(btemp+11)^0,w,c
 35963  01F25E  6EDA               	movwf	fsr2h,c
 35964                           
 35965                           ;stkvar	_fp @ sp[(0)+-4]
 35966  01F260  0EFC               	movlw	-4
 35967  01F262  006F FF8C  F034    	movff	plusw1,btemp+10
 35968  01F268  0EFD               	movlw	-3
 35969  01F26A  006F FF8C  F035    	movff	plusw1,btemp+11
 35970  01F270  0E02               	movlw	2
 35971  01F272  2434               	addwf	(btemp+10)^0,w,c
 35972  01F274  6EE9               	movwf	fsr0l,c
 35973  01F276  0E00               	movlw	0
 35974  01F278  2035               	addwfc	(btemp+11)^0,w,c
 35975  01F27A  6EEA               	movwf	fsr0h,c
 35976  01F27C  50DE               	movf	postinc2,w,c
 35977  01F27E  5CEE               	subwf	postinc0,w,c
 35978  01F280  50EE               	movf	postinc0,w,c
 35979  01F282  0A80               	xorlw	128
 35980  01F284  6E2A               	movwf	btemp^0,c
 35981  01F286  50DE               	movf	postinc2,w,c
 35982  01F288  0A80               	xorlw	128
 35983  01F28A  582A               	subwfb	btemp^0,w,c
 35984  01F28C  B0D8               	btfsc	status,0,c
 35985  01F28E  D03D               	goto	l3541
 35986  01F290                     u14170:
 35987                           
 35988                           ;stkvar	_c @ sp[(0)+-2]
 35989                           ;stkvar	_fp @ sp[(0)+-4]
 35990  01F290  0EFC               	movlw	-4
 35991  01F292  006F FF8C  F034    	movff	plusw1,btemp+10
 35992  01F298  0EFD               	movlw	-3
 35993  01F29A  006F FF8C  F035    	movff	plusw1,btemp+11
 35994  01F2A0  0E02               	movlw	2
 35995  01F2A2  2434               	addwf	(btemp+10)^0,w,c
 35996  01F2A4  6ED9               	movwf	fsr2l,c
 35997  01F2A6  0E00               	movlw	0
 35998  01F2A8  2035               	addwfc	(btemp+11)^0,w,c
 35999  01F2AA  6EDA               	movwf	fsr2h,c
 36000  01F2AC  006F FF78  F034    	movff	postinc2,btemp+10
 36001  01F2B2  006F FF74  F035    	movff	postdec2,btemp+11
 36002                           
 36003                           ;stkvar	_fp @ sp[(0)+-4]
 36004  01F2B8  0EFC               	movlw	-4
 36005  01F2BA  006F FF8F FFD9     	movff	plusw1,fsr2l
 36006  01F2C0  0EFD               	movlw	-3
 36007  01F2C2  006F FF8F FFDA     	movff	plusw1,fsr2h
 36008  01F2C8  006F FF78  F032    	movff	postinc2,btemp+8
 36009  01F2CE  006F FF74  F033    	movff	postdec2,btemp+9
 36010  01F2D4  5034               	movf	(btemp+10)^0,w,c
 36011  01F2D6  2432               	addwf	(btemp+8)^0,w,c
 36012  01F2D8  6ED9               	movwf	fsr2l,c
 36013  01F2DA  5035               	movf	(btemp+11)^0,w,c
 36014  01F2DC  2033               	addwfc	(btemp+9)^0,w,c
 36015  01F2DE  6EDA               	movwf	fsr2h,c
 36016  01F2E0  0EFE               	movlw	-2
 36017  01F2E2  006F FF8F FFDF     	movff	plusw1,indf2
 36018                           
 36019                           ;stkvar	_fp @ sp[(0)+-4]
 36020  01F2E8  0EFC               	movlw	-4
 36021  01F2EA  006F FF8C  F034    	movff	plusw1,btemp+10
 36022  01F2F0  0EFD               	movlw	-3
 36023  01F2F2  006F FF8C  F035    	movff	plusw1,btemp+11
 36024  01F2F8  0E02               	movlw	2
 36025  01F2FA  2434               	addwf	(btemp+10)^0,w,c
 36026  01F2FC  6ED9               	movwf	fsr2l,c
 36027  01F2FE  0E00               	movlw	0
 36028  01F300  2035               	addwfc	(btemp+11)^0,w,c
 36029  01F302  6EDA               	movwf	fsr2h,c
 36030  01F304  2ADE               	incf	postinc2,f,c
 36031  01F306  0E00               	movlw	0
 36032  01F308  22DD               	addwfc	postdec2,f,c
 36033  01F30A                     l3541:
 36034                           
 36035                           ; _fputc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 36036  01F30A  52E5               	movf	postdec1,f,c
 36037  01F30C  52E5               	movf	postdec1,f,c
 36038  01F30E  52E5               	movf	postdec1,f,c
 36039  01F310  52E5               	movf	postdec1,f,c
 36040  01F312  0012               	return		;funcret
 36041  01F314                     __end_of_fputc:
 36042                           	opt callstack 0
 36043                           
 36044 ;; *************** function _putch *****************
 36045 ;; Defined at:
 36046 ;;		line 420 in file "eadog.c"
 36047 ;; Parameters:    Size  Location     Type
 36048 ;;  c               1  [STACK] unsigned char 
 36049 ;; Auto vars:     Size  Location     Type
 36050 ;;		None
 36051 ;; Return value:  Size  Location     Type
 36052 ;;                  1  [STACK] void 
 36053 ;; Registers used:
 36054 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 36055 ;; Tracked objects:
 36056 ;;		On entry : 0/0
 36057 ;;		On exit  : 0/0
 36058 ;;		Unchanged: 0/0
 36059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36060 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36061 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36062 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36063 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36064 ;;Total ram usage:        0 bytes
 36065 ;; Hardware stack levels used:    1
 36066 ;; Hardware stack levels required when called:   16
 36067 ;; This function calls:
 36068 ;;		_ringBufS_put_dma
 36069 ;; This function is called by:
 36070 ;;		_fputc
 36071 ;; This function uses a reentrant model
 36072 ;;
 36073                           
 36074                           	psect	text123
 36075  002528                     __ptext123:
 36076                           	opt callstack 0
 36077  002528                     _putch:
 36078                           	opt callstack 0
 36079                           
 36080                           ;eadog.c: 420: void putch(char c);eadog.c: 421: {;eadog.c: 422:  ringBufS_put_dma(spi_li
      +                          nk.tx1a, c);
 36081                           ;stkvar	_c @ sp[(0)+-1]
 36082                           
 36083                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36084                           ;incstack = 0
 36085 ;; hardware stack exceeded
 36086  002528  0EFF               	movlw	-1
 36087  00252A  50E3               	movf	plusw1,w,c
 36088  00252C  6EE6               	movwf	postinc1,c
 36089  00252E  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
 36090  002534  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
 36091  00253A  EC43  F003         	call	_ringBufS_put_dma	;wreg free
 36092                           
 36093                           ; _putch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
 36094  00253E  52E5               	movf	postdec1,f,c
 36095  002540  0012               	return		;funcret
 36096  002542                     __end_of_putch:
 36097                           	opt callstack 0
 36098                           
 36099 ;; *************** function _ringBufS_put_dma *****************
 36100 ;; Defined at:
 36101 ;;		line 67 in file "ringbufs.c"
 36102 ;; Parameters:    Size  Location     Type
 36103 ;;  _this           2  [STACK] PTR struct ringBufS_t
 36104 ;;		 -> ring_buf1(67), 
 36105 ;;  c               1  [STACK] const unsigned char 
 36106 ;; Auto vars:     Size  Location     Type
 36107 ;;		None
 36108 ;; Return value:  Size  Location     Type
 36109 ;;                  1  [STACK] void 
 36110 ;; Registers used:
 36111 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 36112 ;; Tracked objects:
 36113 ;;		On entry : 0/3B
 36114 ;;		On exit  : 0/0
 36115 ;;		Unchanged: 0/0
 36116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36118 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36120 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36121 ;;Total ram usage:        0 bytes
 36122 ;; Hardware stack levels used:    1
 36123 ;; Hardware stack levels required when called:   15
 36124 ;; This function calls:
 36125 ;;		Nothing
 36126 ;; This function is called by:
 36127 ;;		_send_lcd_data_dma
 36128 ;;		_putch
 36129 ;; This function uses a reentrant model
 36130 ;;
 36131                           
 36132                           	psect	text124
 36133  000686                     __ptext124:
 36134                           	opt callstack 0
 36135  000686                     _ringBufS_put_dma:
 36136                           	opt callstack 0
 36137                           
 36138                           ;ringbufs.c: 67: void ringBufS_put_dma(ringBufS_t *_this, const uint8_t c);ringbufs.c: 6
      +                          8: {;ringbufs.c: 69:  if (_this->count < 64) {
 36139                           ;stkvar	__this @ sp[(0)+-2]
 36140                           
 36141                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36142                           ;incstack = 0
 36143 ;; hardware stack exceeded
 36144  000686  0EFE               	movlw	-2
 36145  000688  006F FF8C  F034    	movff	plusw1,btemp+10
 36146  00068E  0EFF               	movlw	-1
 36147  000690  006F FF8C  F035    	movff	plusw1,btemp+11
 36148  000696  0E42               	movlw	66
 36149  000698  2434               	addwf	(btemp+10)^0,w,c
 36150  00069A  6ED9               	movwf	fsr2l,c
 36151  00069C  0E00               	movlw	0
 36152  00069E  2035               	addwfc	(btemp+11)^0,w,c
 36153  0006A0  6EDA               	movwf	fsr2h,c
 36154  0006A2  0E40               	movlw	64
 36155  0006A4  60DF               	cpfslt	indf2,c
 36156  0006A6  D040               	goto	l1742
 36157                           
 36158                           ;ringbufs.c: 70:   _this->buf[_this->head] = c;
 36159                           ;stkvar	_c @ sp[(0)+-3]
 36160                           ;stkvar	__this @ sp[(0)+-2]
 36161  0006A8  0EFE               	movlw	-2
 36162  0006AA  006F FF8C  F034    	movff	plusw1,btemp+10
 36163  0006B0  0EFF               	movlw	-1
 36164  0006B2  006F FF8C  F035    	movff	plusw1,btemp+11
 36165  0006B8  0E40               	movlw	64
 36166  0006BA  2434               	addwf	(btemp+10)^0,w,c
 36167  0006BC  6ED9               	movwf	fsr2l,c
 36168  0006BE  0E00               	movlw	0
 36169  0006C0  2035               	addwfc	(btemp+11)^0,w,c
 36170  0006C2  6EDA               	movwf	fsr2h,c
 36171  0006C4  50DF               	movf	indf2,w,c
 36172  0006C6  6E35               	movwf	(btemp+11)^0,c
 36173                           
 36174                           ;stkvar	__this @ sp[(0)+-2]
 36175  0006C8  0EFE               	movlw	-2
 36176  0006CA  006F FF8C  F032    	movff	plusw1,btemp+8
 36177  0006D0  0EFF               	movlw	-1
 36178  0006D2  006F FF8C  F033    	movff	plusw1,btemp+9
 36179  0006D8  5035               	movf	(btemp+11)^0,w,c
 36180  0006DA  2432               	addwf	(btemp+8)^0,w,c
 36181  0006DC  6ED9               	movwf	fsr2l,c
 36182  0006DE  0E00               	movlw	0
 36183  0006E0  2033               	addwfc	(btemp+9)^0,w,c
 36184  0006E2  6EDA               	movwf	fsr2h,c
 36185  0006E4  0EFD               	movlw	-3
 36186  0006E6  006F FF8F FFDF     	movff	plusw1,indf2
 36187                           
 36188                           ;ringbufs.c: 71:   ++_this->head;
 36189                           ;stkvar	__this @ sp[(0)+-2]
 36190  0006EC  0EFE               	movlw	-2
 36191  0006EE  006F FF8C  F034    	movff	plusw1,btemp+10
 36192  0006F4  0EFF               	movlw	-1
 36193  0006F6  006F FF8C  F035    	movff	plusw1,btemp+11
 36194  0006FC  0E40               	movlw	64
 36195  0006FE  2434               	addwf	(btemp+10)^0,w,c
 36196  000700  6ED9               	movwf	fsr2l,c
 36197  000702  0E00               	movlw	0
 36198  000704  2035               	addwfc	(btemp+11)^0,w,c
 36199  000706  6EDA               	movwf	fsr2h,c
 36200  000708  2ADF               	incf	indf2,f,c
 36201                           
 36202                           ;ringbufs.c: 72:   ++_this->count;
 36203                           ;stkvar	__this @ sp[(0)+-2]
 36204  00070A  0EFE               	movlw	-2
 36205  00070C  006F FF8C  F034    	movff	plusw1,btemp+10
 36206  000712  0EFF               	movlw	-1
 36207  000714  006F FF8C  F035    	movff	plusw1,btemp+11
 36208  00071A  0E42               	movlw	66
 36209  00071C  2434               	addwf	(btemp+10)^0,w,c
 36210  00071E  6ED9               	movwf	fsr2l,c
 36211  000720  0E00               	movlw	0
 36212  000722  2035               	addwfc	(btemp+11)^0,w,c
 36213  000724  6EDA               	movwf	fsr2h,c
 36214  000726  2ADF               	incf	indf2,f,c
 36215  000728                     l1742:
 36216                           
 36217                           ; _ringBufS_put_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 36218  000728  52E5               	movf	postdec1,f,c
 36219  00072A  52E5               	movf	postdec1,f,c
 36220  00072C  52E5               	movf	postdec1,f,c
 36221  00072E  0012               	return		;funcret
 36222  000730                     __end_of_ringBufS_put_dma:
 36223                           	opt callstack 0
 36224                           
 36225 ;; *************** function _atoi *****************
 36226 ;; Defined at:
 36227 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/atoi.c"
 36228 ;; Parameters:    Size  Location     Type
 36229 ;;  s               2  [STACK] PTR const unsigned char 
 36230 ;;		 -> STR_90(127), STR_88(3), STR_87(3), STR_86(21), 
 36231 ;;		 -> STR_85(21), STR_84(21), STR_83(21), STR_82(21), 
 36232 ;;		 -> STR_81(21), STR_80(26), STR_79(15), STR_78(15), 
 36233 ;;		 -> STR_77(15), STR_76(15), STR_75(10), STR_74(10), 
 36234 ;;		 -> STR_73(19), STR_72(19), STR_69(3), STR_68(14), 
 36235 ;;		 -> STR_67(28), STR_66(28), STR_65(28), STR_64(22), 
 36236 ;;		 -> STR_63(22), STR_62(22), STR_61(22), STR_60(22), 
 36237 ;;		 -> STR_59(22), STR_58(22), STR_57(22), STR_56(22), 
 36238 ;;		 -> STR_55(21), STR_54(22), STR_53(22), STR_52(22), 
 36239 ;;		 -> STR_51(22), STR_50(22), STR_49(22), STR_48(24), 
 36240 ;;		 -> STR_47(24), STR_46(24), STR_45(30), STR_44(24), 
 36241 ;;		 -> STR_43(24), STR_42(23), STR_41(23), STR_40(23), 
 36242 ;;		 -> STR_39(23), STR_38(23), STR_37(23), STR_36(23), 
 36243 ;;		 -> STR_35(23), STR_34(23), STR_33(23), STR_32(23), 
 36244 ;;		 -> STR_31(23), STR_30(18), STR_29(17), STR_28(17), 
 36245 ;;		 -> STR_27(22), STR_26(22), STR_25(22), STR_24(14), 
 36246 ;;		 -> STR_23(27), STR_22(27), STR_21(23), STR_20(22), 
 36247 ;;		 -> STR_19(22), STR_18(22), STR_17(22), STR_16(23), 
 36248 ;;		 -> STR_15(23), STR_14(23), STR_13(26), STR_12(22), 
 36249 ;;		 -> STR_11(21), STR_10(21), STR_9(21), STR_8(21), 
 36250 ;;		 -> STR_7(21), STR_6(21), STR_5(21), STR_4(21), 
 36251 ;;		 -> STR_2(21), STR_1(21), 
 36252 ;; Auto vars:     Size  Location     Type
 36253 ;;  n               2  [STACK] int 
 36254 ;;  neg             2  [STACK] int 
 36255 ;; Return value:  Size  Location     Type
 36256 ;;                  2  [STACK] int 
 36257 ;; Registers used:
 36258 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl,
      + tblptrh, tblptru, prodl, prodh
 36259 ;; Tracked objects:
 36260 ;;		On entry : 0/0
 36261 ;;		On exit  : 0/0
 36262 ;;		Unchanged: 0/0
 36263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36264 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36265 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36266 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36267 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36268 ;;Total ram usage:        0 bytes
 36269 ;; Hardware stack levels used:    1
 36270 ;; Hardware stack levels required when called:   16
 36271 ;; This function calls:
 36272 ;;		_isdigit
 36273 ;;		_isspace
 36274 ;; This function is called by:
 36275 ;;		_vfpfcnvrt
 36276 ;; This function uses a reentrant model
 36277 ;;
 36278                           
 36279                           	psect	text125
 36280  01BEC8                     __ptext125:
 36281                           	opt callstack 0
 36282  01BEC8                     _atoi:
 36283                           	opt callstack 0
 36284                           
 36285                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36286  01BEC8  0E09               	movlw	9
 36287  01BECA  26E1               	addwf	fsr1l,f,c
 36288  01BECC  0E00               	movlw	0
 36289  01BECE  22E2               	addwfc	fsr1h,f,c
 36290                           
 36291                           ;stkvar	_n @ sp[(-9)+5]
 36292                           
 36293                           ;incstack = 0
 36294 ;; hardware stack exceeded
 36295  01BED0  0EFC               	movlw	-4
 36296  01BED2  6AE3               	clrf	plusw1,c
 36297  01BED4  0EFD               	movlw	-3
 36298  01BED6  6AE3               	clrf	plusw1,c
 36299                           
 36300                           ;stkvar	_neg @ sp[(-9)+7]
 36301  01BED8  0EFE               	movlw	-2
 36302  01BEDA  6AE3               	clrf	plusw1,c
 36303  01BEDC  0EFF               	movlw	-1
 36304  01BEDE  6AE3               	clrf	plusw1,c
 36305  01BEE0  D011               	goto	l11412
 36306  01BEE2                     l11410:
 36307                           
 36308                           ;stkvar	_s @ sp[(-9)+-2]
 36309  01BEE2  0EF5               	movlw	-11
 36310  01BEE4  50E3               	movf	plusw1,w,c
 36311  01BEE6  0F01               	addlw	1
 36312  01BEE8  6E2A               	movwf	btemp^0,c
 36313  01BEEA  0EF5               	movlw	-11
 36314  01BEEC  0060  F0AB  FFE3   	movff	btemp,plusw1
 36315  01BEF2  6A2A               	clrf	btemp^0,c
 36316  01BEF4  0EF6               	movlw	-10
 36317  01BEF6  50E3               	movf	plusw1,w,c
 36318  01BEF8  202A               	addwfc	btemp^0,w,c
 36319  01BEFA  6E2A               	movwf	btemp^0,c
 36320  01BEFC  0EF6               	movlw	-10
 36321  01BEFE  0060  F0AB  FFE3   	movff	btemp,plusw1
 36322  01BF04                     l11412:
 36323                           
 36324                           ;stkvar	_atoi$7204 @ sp[(-9)+4]
 36325  01BF04  0EFB               	movlw	-5
 36326  01BF06  6AE3               	clrf	plusw1,c
 36327  01BF08  2AE3               	incf	plusw1,f,c
 36328                           
 36329                           ;stkvar	_s @ sp[(-9)+-2]
 36330  01BF0A  50E1               	movf	fsr1l,w,c
 36331  01BF0C  0FF5               	addlw	-11
 36332  01BF0E  6ED9               	movwf	fsr2l,c
 36333  01BF10  50E2               	movf	fsr1h,w,c
 36334  01BF12  6EDA               	movwf	fsr2h,c
 36335  01BF14  0EFF               	movlw	255
 36336  01BF16  22DA               	addwfc	fsr2h,f,c
 36337  01BF18  006F FF7B FFF6     	movff	postinc2,tblptrl
 36338  01BF1E  006F FF77 FFF7     	movff	postdec2,tblptrh
 36339  01BF24                     	if	0	;tblptru may be non-zero
 36340  01BF24                     	endif
 36341  01BF24                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 36342  01BF24  0E00               	movlw	low (__mediumconst shr (0+16))
 36343  01BF26  6EF8               	movwf	tblptru,c
 36344  01BF28                     	endif
 36345  01BF28  0008               	tblrd		*
 36346  01BF2A  50F5               	movf	tablat,w,c
 36347  01BF2C  0A20               	xorlw	32
 36348  01BF2E  B4D8               	btfsc	status,2,c
 36349  01BF30  D023               	goto	l11420
 36350  01BF32  0EF7               	movlw	247
 36351  01BF34  6E34               	movwf	(btemp+10)^0,c
 36352  01BF36  0EFF               	movlw	255
 36353  01BF38  6E35               	movwf	(btemp+11)^0,c
 36354                           
 36355                           ;stkvar	_s @ sp[(-9)+-2]
 36356  01BF3A  50E1               	movf	fsr1l,w,c
 36357  01BF3C  0FF5               	addlw	-11
 36358  01BF3E  6ED9               	movwf	fsr2l,c
 36359  01BF40  50E2               	movf	fsr1h,w,c
 36360  01BF42  6EDA               	movwf	fsr2h,c
 36361  01BF44  0EFF               	movlw	255
 36362  01BF46  22DA               	addwfc	fsr2h,f,c
 36363  01BF48  006F FF7B FFF6     	movff	postinc2,tblptrl
 36364  01BF4E  006F FF77 FFF7     	movff	postdec2,tblptrh
 36365  01BF54                     	if	0	;tblptru may be non-zero
 36366  01BF54                     	endif
 36367  01BF54                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 36368  01BF54  0E00               	movlw	low (__mediumconst shr (0+16))
 36369  01BF56  6EF8               	movwf	tblptru,c
 36370  01BF58                     	endif
 36371  01BF58  0008               	tblrd		*
 36372  01BF5A  50F5               	movf	tablat,w,c
 36373  01BF5C  6E32               	movwf	(btemp+8)^0,c
 36374  01BF5E  6A33               	clrf	(btemp+9)^0,c
 36375  01BF60  5034               	movf	(btemp+10)^0,w,c
 36376  01BF62  2632               	addwf	(btemp+8)^0,f,c
 36377  01BF64  5035               	movf	(btemp+11)^0,w,c
 36378  01BF66  2233               	addwfc	(btemp+9)^0,f,c
 36379  01BF68  5033               	movf	(btemp+9)^0,w,c
 36380  01BF6A  E104               	bnz	u10360
 36381  01BF6C  0E05               	movlw	5
 36382  01BF6E  5C32               	subwf	(btemp+8)^0,w,c
 36383  01BF70  A0D8               	btfss	status,0,c
 36384  01BF72  D002               	goto	l11420
 36385  01BF74                     u10360:
 36386                           
 36387                           ;stkvar	_atoi$7204 @ sp[(-9)+4]
 36388  01BF74  0EFB               	movlw	-5
 36389  01BF76  6AE3               	clrf	plusw1,c
 36390  01BF78                     l11420:
 36391                           
 36392                           ;stkvar	_atoi$7204 @ sp[(-9)+4]
 36393  01BF78  0EFB               	movlw	-5
 36394  01BF7A  50E3               	movf	plusw1,w,c
 36395  01BF7C  6E34               	movwf	(btemp+10)^0,c
 36396  01BF7E  6A35               	clrf	(btemp+11)^0,c
 36397                           
 36398                           ;stkvar	_atoi$7203 @ sp[(-9)+2]
 36399  01BF80  0EF9               	movlw	-7
 36400  01BF82  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 36401  01BF88  0EFA               	movlw	-6
 36402  01BF8A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 36403                           
 36404                           ;stkvar	_atoi$7203 @ sp[(-9)+2]
 36405  01BF90  0EF9               	movlw	-7
 36406  01BF92  006F FF8C  F02A    	movff	plusw1,btemp
 36407  01BF98  0EFA               	movlw	-6
 36408  01BF9A  50E3               	movf	plusw1,w,c
 36409  01BF9C  102A               	iorwf	btemp^0,w,c
 36410  01BF9E  B4D8               	btfsc	status,2,c
 36411  01BFA0  D01F               	goto	l11430
 36412  01BFA2  D79F               	goto	l11410
 36413  01BFA4                     l11426:
 36414  01BFA4  0E01               	movlw	1
 36415  01BFA6  6E34               	movwf	(btemp+10)^0,c
 36416  01BFA8  0E00               	movlw	0
 36417  01BFAA  6E35               	movwf	(btemp+11)^0,c
 36418                           
 36419                           ;stkvar	_neg @ sp[(-9)+7]
 36420  01BFAC  0EFE               	movlw	-2
 36421  01BFAE  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 36422  01BFB4  0EFF               	movlw	-1
 36423  01BFB6  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 36424  01BFBC                     l11428:
 36425                           
 36426                           ;stkvar	_s @ sp[(-9)+-2]
 36427  01BFBC  0EF5               	movlw	-11
 36428  01BFBE  50E3               	movf	plusw1,w,c
 36429  01BFC0  0F01               	addlw	1
 36430  01BFC2  6E2A               	movwf	btemp^0,c
 36431  01BFC4  0EF5               	movlw	-11
 36432  01BFC6  0060  F0AB  FFE3   	movff	btemp,plusw1
 36433  01BFCC  6A2A               	clrf	btemp^0,c
 36434  01BFCE  0EF6               	movlw	-10
 36435  01BFD0  50E3               	movf	plusw1,w,c
 36436  01BFD2  202A               	addwfc	btemp^0,w,c
 36437  01BFD4  6E2A               	movwf	btemp^0,c
 36438  01BFD6  0EF6               	movlw	-10
 36439  01BFD8  0060  F0AB  FFE3   	movff	btemp,plusw1
 36440  01BFDE  D053               	goto	l11436
 36441  01BFE0                     l11430:
 36442                           
 36443                           ;stkvar	_s @ sp[(-9)+-2]
 36444  01BFE0  50E1               	movf	fsr1l,w,c
 36445  01BFE2  0FF5               	addlw	-11
 36446  01BFE4  6ED9               	movwf	fsr2l,c
 36447  01BFE6  50E2               	movf	fsr1h,w,c
 36448  01BFE8  6EDA               	movwf	fsr2h,c
 36449  01BFEA  0EFF               	movlw	255
 36450  01BFEC  22DA               	addwfc	fsr2h,f,c
 36451  01BFEE  006F FF7B FFF6     	movff	postinc2,tblptrl
 36452  01BFF4  006F FF77 FFF7     	movff	postdec2,tblptrh
 36453  01BFFA                     	if	0	;tblptru may be non-zero
 36454  01BFFA                     	endif
 36455  01BFFA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 36456  01BFFA  0E00               	movlw	low (__mediumconst shr (0+16))
 36457  01BFFC  6EF8               	movwf	tblptru,c
 36458  01BFFE                     	endif
 36459  01BFFE  0008               	tblrd		*
 36460  01C000  50F5               	movf	tablat,w,c
 36461  01C002  6E34               	movwf	(btemp+10)^0,c
 36462  01C004  6A35               	clrf	(btemp+11)^0,c
 36463                           
 36464                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 36465                           ; Switch size 1, requested type "simple"
 36466                           ; Number of cases is 1, Range of values is 0 to 0
 36467                           ; switch strategies available:
 36468                           ; Name         Instructions Cycles
 36469                           ; simple_byte            4     3 (average)
 36470                           ;	Chosen strategy is simple_byte
 36471  01C006  5035               	movf	(btemp+11)^0,w,c
 36472  01C008  0A00               	xorlw	0	; case 0
 36473  01C00A  A4D8               	btfss	status,2,c
 36474  01C00C  D03C               	goto	l11436
 36475                           
 36476                           ; Switch size 1, requested type "simple"
 36477                           ; Number of cases is 2, Range of values is 43 to 45
 36478                           ; switch strategies available:
 36479                           ; Name         Instructions Cycles
 36480                           ; simple_byte            7     4 (average)
 36481                           ;	Chosen strategy is simple_byte
 36482  01C00E  5034               	movf	(btemp+10)^0,w,c
 36483  01C010  0A2B               	xorlw	43	; case 43
 36484  01C012  B4D8               	btfsc	status,2,c
 36485  01C014  D7D3               	goto	l11428
 36486  01C016  0A06               	xorlw	6	; case 45
 36487  01C018  B4D8               	btfsc	status,2,c
 36488  01C01A  D7C4               	goto	l11426
 36489  01C01C  D034               	goto	l11436
 36490  01C01E                     l11432:
 36491                           
 36492                           ;stkvar	_n @ sp[(-9)+5]
 36493  01C01E  0EFC               	movlw	-4
 36494  01C020  006F FF8C  F034    	movff	plusw1,btemp+10
 36495  01C026  0EFD               	movlw	-3
 36496  01C028  006F FF8C  F035    	movff	plusw1,btemp+11
 36497  01C02E  0E0A               	movlw	10
 36498  01C030  0234               	mulwf	(btemp+10)^0,c
 36499  01C032  006F FFCC  F032    	movff	prodl,btemp+8
 36500  01C038  006F FFD0  F033    	movff	prodh,btemp+9
 36501  01C03E  0235               	mulwf	(btemp+11)^0,c
 36502  01C040  50F3               	movf	prodl,w,c
 36503  01C042  2633               	addwf	(btemp+9)^0,f,c
 36504                           
 36505                           ;stkvar	_s @ sp[(-9)+-2]
 36506  01C044  50E1               	movf	fsr1l,w,c
 36507  01C046  0FF5               	addlw	-11
 36508  01C048  6ED9               	movwf	fsr2l,c
 36509  01C04A  50E2               	movf	fsr1h,w,c
 36510  01C04C  6EDA               	movwf	fsr2h,c
 36511  01C04E  0EFF               	movlw	255
 36512  01C050  22DA               	addwfc	fsr2h,f,c
 36513  01C052  006F FF7B FFF6     	movff	postinc2,tblptrl
 36514  01C058  006F FF77 FFF7     	movff	postdec2,tblptrh
 36515  01C05E                     	if	0	;tblptru may be non-zero
 36516  01C05E                     	endif
 36517  01C05E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 36518  01C05E  0E00               	movlw	low (__mediumconst shr (0+16))
 36519  01C060  6EF8               	movwf	tblptru,c
 36520  01C062                     	endif
 36521  01C062  0008               	tblrd		*
 36522  01C064  50F5               	movf	tablat,w,c
 36523  01C066  5E32               	subwf	(btemp+8)^0,f,c
 36524  01C068  0E00               	movlw	0
 36525  01C06A  5A33               	subwfb	(btemp+9)^0,f,c
 36526  01C06C  0E30               	movlw	48
 36527  01C06E  2632               	addwf	(btemp+8)^0,f,c
 36528  01C070  0E00               	movlw	0
 36529  01C072  2233               	addwfc	(btemp+9)^0,f,c
 36530                           
 36531                           ;stkvar	_n @ sp[(-9)+5]
 36532  01C074  0EFC               	movlw	-4
 36533  01C076  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 36534  01C07C  0EFD               	movlw	-3
 36535  01C07E  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 36536  01C084  D79B               	goto	l11428
 36537  01C086                     l11436:
 36538  01C086  0ED0               	movlw	208
 36539  01C088  6E34               	movwf	(btemp+10)^0,c
 36540  01C08A  0EFF               	movlw	255
 36541  01C08C  6E35               	movwf	(btemp+11)^0,c
 36542                           
 36543                           ;stkvar	_s @ sp[(-9)+-2]
 36544  01C08E  50E1               	movf	fsr1l,w,c
 36545  01C090  0FF5               	addlw	-11
 36546  01C092  6ED9               	movwf	fsr2l,c
 36547  01C094  50E2               	movf	fsr1h,w,c
 36548  01C096  6EDA               	movwf	fsr2h,c
 36549  01C098  0EFF               	movlw	255
 36550  01C09A  22DA               	addwfc	fsr2h,f,c
 36551  01C09C  006F FF7B FFF6     	movff	postinc2,tblptrl
 36552  01C0A2  006F FF77 FFF7     	movff	postdec2,tblptrh
 36553  01C0A8                     	if	0	;tblptru may be non-zero
 36554  01C0A8                     	endif
 36555  01C0A8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 36556  01C0A8  0E00               	movlw	low (__mediumconst shr (0+16))
 36557  01C0AA  6EF8               	movwf	tblptru,c
 36558  01C0AC                     	endif
 36559  01C0AC  0008               	tblrd		*
 36560  01C0AE  50F5               	movf	tablat,w,c
 36561  01C0B0  6E32               	movwf	(btemp+8)^0,c
 36562  01C0B2  6A33               	clrf	(btemp+9)^0,c
 36563  01C0B4  5034               	movf	(btemp+10)^0,w,c
 36564  01C0B6  2632               	addwf	(btemp+8)^0,f,c
 36565  01C0B8  5035               	movf	(btemp+11)^0,w,c
 36566  01C0BA  2233               	addwfc	(btemp+9)^0,f,c
 36567  01C0BC  5033               	movf	(btemp+9)^0,w,c
 36568  01C0BE  E106               	bnz	u10380
 36569  01C0C0  0E0A               	movlw	10
 36570  01C0C2  5C32               	subwf	(btemp+8)^0,w,c
 36571  01C0C4  B0D8               	btfsc	status,0,c
 36572  01C0C6  D002               	goto	u10380
 36573  01C0C8  0E01               	movlw	1
 36574  01C0CA  D001               	goto	u10390
 36575  01C0CC                     u10380:
 36576  01C0CC  0E00               	movlw	0
 36577  01C0CE                     u10390:
 36578  01C0CE  6E34               	movwf	(btemp+10)^0,c
 36579  01C0D0  6A35               	clrf	(btemp+11)^0,c
 36580                           
 36581                           ;stkvar	_atoi$7205 @ sp[(-9)+0]
 36582  01C0D2  0EF7               	movlw	-9
 36583  01C0D4  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 36584  01C0DA  0EF8               	movlw	-8
 36585  01C0DC  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 36586                           
 36587                           ;stkvar	_atoi$7205 @ sp[(-9)+0]
 36588  01C0E2  0EF7               	movlw	-9
 36589  01C0E4  006F FF8C  F02A    	movff	plusw1,btemp
 36590  01C0EA  0EF8               	movlw	-8
 36591  01C0EC  50E3               	movf	plusw1,w,c
 36592  01C0EE  102A               	iorwf	btemp^0,w,c
 36593  01C0F0  A4D8               	btfss	status,2,c
 36594  01C0F2  D795               	goto	l11432
 36595                           
 36596                           ;stkvar	_neg @ sp[(-9)+7]
 36597  01C0F4  0EFE               	movlw	-2
 36598  01C0F6  006F FF8C  F02A    	movff	plusw1,btemp
 36599  01C0FC  0EFF               	movlw	-1
 36600  01C0FE  50E3               	movf	plusw1,w,c
 36601  01C100  102A               	iorwf	btemp^0,w,c
 36602  01C102  A4D8               	btfss	status,2,c
 36603  01C104  D00E               	goto	l11446
 36604                           
 36605                           ;stkvar	_n @ sp[(-9)+5]
 36606  01C106  0EFC               	movlw	-4
 36607  01C108  006F FF8C  F02A    	movff	plusw1,btemp
 36608  01C10E  1E2A               	comf	btemp^0,f,c
 36609  01C110  0EFD               	movlw	-3
 36610  01C112  006F FF8C  F02B    	movff	plusw1,btemp+1
 36611  01C118  1E2B               	comf	(btemp+1)^0,f,c
 36612  01C11A  2A2A               	incf	btemp^0,f,c
 36613  01C11C  B4D8               	btfsc	status,2,c
 36614  01C11E  2A2B               	incf	(btemp+1)^0,f,c
 36615  01C120  D008               	goto	l3452
 36616  01C122                     l11446:
 36617                           
 36618                           ;stkvar	_n @ sp[(-9)+5]
 36619  01C122  0EFC               	movlw	-4
 36620  01C124  006F FF8C  F02A    	movff	plusw1,btemp
 36621  01C12A  0EFD               	movlw	-3
 36622  01C12C  006F FF8C  F02B    	movff	plusw1,btemp+1
 36623  01C132                     l3452:
 36624                           
 36625                           ; _atoi: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 36626  01C132  0EF5               	movlw	245
 36627  01C134  26E1               	addwf	fsr1l,f,c
 36628  01C136  0EFF               	movlw	255
 36629  01C138  22E2               	addwfc	fsr1h,f,c
 36630  01C13A  0012               	return		;funcret
 36631  01C13C                     __end_of_atoi:
 36632                           	opt callstack 0
 36633                           
 36634 ;; *************** function _isspace *****************
 36635 ;; Defined at:
 36636 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isspace.c"
 36637 ;; Parameters:    Size  Location     Type
 36638 ;;  c               2  [STACK] int 
 36639 ;; Auto vars:     Size  Location     Type
 36640 ;;		None
 36641 ;; Return value:  Size  Location     Type
 36642 ;;                  2  [STACK] int 
 36643 ;; Registers used:
 36644 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 36645 ;; Tracked objects:
 36646 ;;		On entry : 0/0
 36647 ;;		On exit  : 0/0
 36648 ;;		Unchanged: 0/0
 36649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36650 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36651 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36652 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36653 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36654 ;;Total ram usage:        0 bytes
 36655 ;; Hardware stack levels used:    1
 36656 ;; Hardware stack levels required when called:   15
 36657 ;; This function calls:
 36658 ;;		Nothing
 36659 ;; This function is called by:
 36660 ;;		_atoi
 36661 ;; This function uses a reentrant model
 36662 ;;
 36663                           
 36664                           	psect	text126
 36665  0017BC                     __ptext126:
 36666                           	opt callstack 0
 36667  0017BC                     _isspace:
 36668                           	opt callstack 0
 36669                           
 36670                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36671  0017BC  52E6               	movf	postinc1,f,c
 36672                           
 36673                           ;stkvar	_isspace$7254 @ sp[(-1)+0]
 36674                           
 36675                           ;incstack = 0
 36676 ;; hardware stack exceeded
 36677  0017BE  0EFF               	movlw	-1
 36678  0017C0  6AE3               	clrf	plusw1,c
 36679  0017C2  2AE3               	incf	plusw1,f,c
 36680                           
 36681                           ;stkvar	_c @ sp[(-1)+-2]
 36682  0017C4  0EFD               	movlw	-3
 36683  0017C6  006F FF8C  F02A    	movff	plusw1,btemp
 36684  0017CC  0E20               	movlw	32
 36685  0017CE  182A               	xorwf	btemp^0,w,c
 36686  0017D0  E104               	bnz	u9200
 36687  0017D2  0EFE               	movlw	-2
 36688  0017D4  50E3               	movf	plusw1,w,c
 36689  0017D6  B4D8               	btfsc	status,2,c
 36690  0017D8  D012               	goto	l10802
 36691  0017DA                     u9200:
 36692                           
 36693                           ;stkvar	_c @ sp[(-1)+-2]
 36694  0017DA  0EFD               	movlw	-3
 36695  0017DC  50E3               	movf	plusw1,w,c
 36696  0017DE  0FF7               	addlw	247
 36697  0017E0  6E34               	movwf	(btemp+10)^0,c
 36698  0017E2  0EFE               	movlw	-2
 36699  0017E4  006F FF8C  F035    	movff	plusw1,btemp+11
 36700  0017EA  0EFF               	movlw	255
 36701  0017EC  2235               	addwfc	(btemp+11)^0,f,c
 36702  0017EE  5035               	movf	(btemp+11)^0,w,c
 36703  0017F0  E104               	bnz	u9210
 36704  0017F2  0E05               	movlw	5
 36705  0017F4  5C34               	subwf	(btemp+10)^0,w,c
 36706  0017F6  A0D8               	btfss	status,0,c
 36707  0017F8  D002               	goto	l10802
 36708  0017FA                     u9210:
 36709                           
 36710                           ;stkvar	_isspace$7254 @ sp[(-1)+0]
 36711  0017FA  0EFF               	movlw	-1
 36712  0017FC  6AE3               	clrf	plusw1,c
 36713  0017FE                     l10802:
 36714                           
 36715                           ;stkvar	_isspace$7254 @ sp[(-1)+0]
 36716  0017FE  0EFF               	movlw	-1
 36717  001800  50E3               	movf	plusw1,w,c
 36718  001802  6E2A               	movwf	btemp^0,c
 36719  001804  6A2B               	clrf	(btemp+1)^0,c
 36720                           
 36721                           ; _isspace: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 36722  001806  52E5               	movf	postdec1,f,c
 36723  001808  52E5               	movf	postdec1,f,c
 36724  00180A  52E5               	movf	postdec1,f,c
 36725  00180C  0012               	return		;funcret
 36726  00180E                     __end_of_isspace:
 36727                           	opt callstack 0
 36728                           
 36729 ;; *************** function _isdigit *****************
 36730 ;; Defined at:
 36731 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isdigit.c"
 36732 ;; Parameters:    Size  Location     Type
 36733 ;;  c               2  [STACK] int 
 36734 ;; Auto vars:     Size  Location     Type
 36735 ;;		None
 36736 ;; Return value:  Size  Location     Type
 36737 ;;                  2  [STACK] int 
 36738 ;; Registers used:
 36739 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 36740 ;; Tracked objects:
 36741 ;;		On entry : 0/0
 36742 ;;		On exit  : 0/0
 36743 ;;		Unchanged: 0/0
 36744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36745 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36746 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36747 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36748 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36749 ;;Total ram usage:        0 bytes
 36750 ;; Hardware stack levels used:    1
 36751 ;; Hardware stack levels required when called:   15
 36752 ;; This function calls:
 36753 ;;		Nothing
 36754 ;; This function is called by:
 36755 ;;		_vfpfcnvrt
 36756 ;;		_atoi
 36757 ;; This function uses a reentrant model
 36758 ;;
 36759                           
 36760                           	psect	text127
 36761  001FD6                     __ptext127:
 36762                           	opt callstack 0
 36763  001FD6                     _isdigit:
 36764                           	opt callstack 0
 36765                           
 36766                           ;stkvar	_c @ sp[(0)+-2]
 36767                           
 36768                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36769                           ;incstack = 0
 36770 ;; hardware stack exceeded
 36771  001FD6  0EFE               	movlw	-2
 36772  001FD8  50E3               	movf	plusw1,w,c
 36773  001FDA  0FD0               	addlw	208
 36774  001FDC  6E34               	movwf	(btemp+10)^0,c
 36775  001FDE  0EFF               	movlw	-1
 36776  001FE0  006F FF8C  F035    	movff	plusw1,btemp+11
 36777  001FE6  0EFF               	movlw	255
 36778  001FE8  2235               	addwfc	(btemp+11)^0,f,c
 36779  001FEA  5035               	movf	(btemp+11)^0,w,c
 36780  001FEC  E106               	bnz	u7990
 36781  001FEE  0E0A               	movlw	10
 36782  001FF0  5C34               	subwf	(btemp+10)^0,w,c
 36783  001FF2  B0D8               	btfsc	status,0,c
 36784  001FF4  D002               	goto	u7990
 36785  001FF6  0E01               	movlw	1
 36786  001FF8  D001               	goto	u8000
 36787  001FFA                     u7990:
 36788  001FFA  0E00               	movlw	0
 36789  001FFC                     u8000:
 36790  001FFC  6E2A               	movwf	btemp^0,c
 36791  001FFE  6A2B               	clrf	(btemp+1)^0,c
 36792                           
 36793                           ; _isdigit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 36794  002000  52E5               	movf	postdec1,f,c
 36795  002002  52E5               	movf	postdec1,f,c
 36796  002004  0012               	return		;funcret
 36797  002006                     __end_of_isdigit:
 36798                           	opt callstack 0
 36799                           
 36800 ;; *************** function _set_vterm *****************
 36801 ;; Defined at:
 36802 ;;		line 110 in file "mconfig.c"
 36803 ;; Parameters:    Size  Location     Type
 36804 ;;  vterm           1  [STACK] const unsigned char 
 36805 ;; Auto vars:     Size  Location     Type
 36806 ;;		None
 36807 ;; Return value:  Size  Location     Type
 36808 ;;                  1  [STACK] unsigned char 
 36809 ;; Registers used:
 36810 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+11
 36811 ;; Tracked objects:
 36812 ;;		On entry : 0/2
 36813 ;;		On exit  : 0/0
 36814 ;;		Unchanged: 0/0
 36815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36816 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36817 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36818 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36819 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36820 ;;Total ram usage:        0 bytes
 36821 ;; Hardware stack levels used:    1
 36822 ;; Hardware stack levels required when called:   15
 36823 ;; This function calls:
 36824 ;;		Nothing
 36825 ;; This function is called by:
 36826 ;;		_main
 36827 ;;		_check_help
 36828 ;; This function uses a reentrant model
 36829 ;;
 36830                           
 36831                           	psect	text128
 36832  0024EC                     __ptext128:
 36833                           	opt callstack 0
 36834  0024EC                     _set_vterm:
 36835                           	opt callstack 15
 36836                           
 36837                           ;mconfig.c: 110: uint8_t set_vterm(const uint8_t vterm);mconfig.c: 111: {;mconfig.c: 112
      +                          :  D.vterm = vterm & 0x03;
 36838                           ;stkvar	_vterm @ sp[(0)+-1]
 36839                           
 36840                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36841                           ;incstack = 0
 36842  0024EC  0EFF               	movlw	-1
 36843  0024EE  006F FF8C  F035    	movff	plusw1,btemp+11
 36844  0024F4  0E03               	movlw	3
 36845  0024F6  1635               	andwf	(btemp+11)^0,f,c
 36846  0024F8  EE23  F0BF         	lfsr	2,_D+640
 36847  0024FC  50DF               	movf	223,w,c
 36848  0024FE  1835               	xorwf	(btemp+11)^0,w,c
 36849  002500  0BFE               	andlw	-2
 36850  002502  1835               	xorwf	(btemp+11)^0,w,c
 36851  002504  6EDF               	movwf	223,c
 36852                           
 36853                           ; _set_vterm: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 36854  002506  52E5               	movf	postdec1,f,c
 36855  002508  0012               	return		;funcret
 36856  00250A                     __end_of_set_vterm:
 36857                           	opt callstack 0
 36858                           
 36859 ;; *************** function _set_temp_display_help *****************
 36860 ;; Defined at:
 36861 ;;		line 217 in file "mconfig.c"
 36862 ;; Parameters:    Size  Location     Type
 36863 ;;  new_response    1  [STACK] const enum E16677
 36864 ;; Auto vars:     Size  Location     Type
 36865 ;;		None
 36866 ;; Return value:  Size  Location     Type
 36867 ;;                  1  [STACK] enum E16677
 36868 ;; Registers used:
 36869 ;;		wreg, fsr1l, fsr1h
 36870 ;; Tracked objects:
 36871 ;;		On entry : 0/2
 36872 ;;		On exit  : 3F/2
 36873 ;;		Unchanged: 0/0
 36874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36875 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36876 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36877 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36878 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36879 ;;Total ram usage:        0 bytes
 36880 ;; Hardware stack levels used:    1
 36881 ;; Hardware stack levels required when called:   15
 36882 ;; This function calls:
 36883 ;;		Nothing
 36884 ;; This function is called by:
 36885 ;;		_check_help
 36886 ;; This function uses a reentrant model
 36887 ;;
 36888                           
 36889                           	psect	text129
 36890  00264E                     __ptext129:
 36891                           	opt callstack 0
 36892  00264E                     _set_temp_display_help:
 36893                           	opt callstack 14
 36894                           
 36895                           ;mconfig.c: 217: D_CODES set_temp_display_help(const D_CODES new_response_info);mconfig.
      +                          c: 218: {;mconfig.c: 219:  static D_CODES old_info;;mconfig.c: 221:  old_info = V.respon
      +                          se.help_temp;
 36896                           
 36897                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36898                           ;incstack = 0
 36899  00264E  0102               	movlb	2	; () banked
 36900  002650  51A9               	movf	(_V+162)& (0+255),w,b	;volatile
 36901                           
 36902                           ; BSR set to: 2
 36903                           ;mconfig.c: 222:  V.response.help_temp = new_response_info;
 36904                           ;stkvar	_new_response_info @ sp[(0)+-1]
 36905  002652  0EFF               	movlw	-1
 36906  002654  006F FF8C  F2A9    	movff	plusw1,_V+162	;volatile
 36907                           
 36908                           ; BSR set to: 2
 36909                           ; _set_temp_display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 1, argsize = 1, vargsize = 0
 36910  00265A  52E5               	movf	postdec1,f,c
 36911  00265C  0012               	return		;funcret
 36912  00265E                     __end_of_set_temp_display_help:
 36913                           	opt callstack 0
 36914                           
 36915 ;; *************** function _set_display_info *****************
 36916 ;; Defined at:
 36917 ;;		line 206 in file "mconfig.c"
 36918 ;; Parameters:    Size  Location     Type
 36919 ;;  new_response    1  [STACK] const enum E16677
 36920 ;; Auto vars:     Size  Location     Type
 36921 ;;		None
 36922 ;; Return value:  Size  Location     Type
 36923 ;;                  1  [STACK] enum E17160
 36924 ;; Registers used:
 36925 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 36926 ;; Tracked objects:
 36927 ;;		On entry : 0/2
 36928 ;;		On exit  : 0/0
 36929 ;;		Unchanged: 0/0
 36930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36931 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36932 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36933 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36934 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36935 ;;Total ram usage:        0 bytes
 36936 ;; Hardware stack levels used:    1
 36937 ;; Hardware stack levels required when called:   16
 36938 ;; This function calls:
 36939 ;;		_TimerDone
 36940 ;; This function is called by:
 36941 ;;		_main
 36942 ;;		_check_help
 36943 ;; This function uses a reentrant model
 36944 ;;
 36945                           
 36946                           	psect	text130
 36947  00250A                     __ptext130:
 36948                           	opt callstack 0
 36949  00250A                     _set_display_info:
 36950                           	opt callstack 14
 36951                           
 36952                           ;mconfig.c: 206: D_CODES set_display_info(const D_CODES new_response_info);mconfig.c: 20
      +                          7: {;mconfig.c: 208:  static D_CODES old_info = DIS_STR;;mconfig.c: 210:  if (TimerDone(
      +                          TMR_INFO)) {
 36953                           
 36954                           ; BSR set to: 2
 36955                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36956                           ;incstack = 0
 36957  00250A  0E07               	movlw	7
 36958  00250C  6EE6               	movwf	postinc1,c
 36959  00250E  EC6F  F010         	call	_TimerDone	;wreg free
 36960  002512  502A               	movf	btemp^0,w,c
 36961  002514  B4D8               	btfsc	status,2,c
 36962  002516  D006               	goto	l1877
 36963                           
 36964                           ;mconfig.c: 211:   old_info = V.response.info;
 36965  002518  0102               	movlb	2	; () banked
 36966  00251A  51A8               	movf	(_V+161)& (0+255),w,b	;volatile
 36967                           
 36968                           ; BSR set to: 2
 36969                           ;mconfig.c: 212:   V.response.info = new_response_info;
 36970                           ;stkvar	_new_response_info @ sp[(0)+-1]
 36971  00251C  0EFF               	movlw	-1
 36972  00251E  006F FF8C  F2A8    	movff	plusw1,_V+161	;volatile
 36973  002524                     l1877:
 36974                           
 36975                           ; _set_display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 36976  002524  52E5               	movf	postdec1,f,c
 36977  002526  0012               	return		;funcret
 36978  002528                     __end_of_set_display_info:
 36979                           	opt callstack 0
 36980                           
 36981 ;; *************** function _mode_lamp_dim *****************
 36982 ;; Defined at:
 36983 ;;		line 13 in file "mconfig.c"
 36984 ;; Parameters:    Size  Location     Type
 36985 ;;  level           2  [STACK] const unsigned short 
 36986 ;; Auto vars:     Size  Location     Type
 36987 ;;		None
 36988 ;; Return value:  Size  Location     Type
 36989 ;;                  1  [STACK] void 
 36990 ;; Registers used:
 36991 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 36992 ;; Tracked objects:
 36993 ;;		On entry : 0/2
 36994 ;;		On exit  : 0/0
 36995 ;;		Unchanged: 0/0
 36996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36997 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36998 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37000 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37001 ;;Total ram usage:        0 bytes
 37002 ;; Hardware stack levels used:    1
 37003 ;; Hardware stack levels required when called:   16
 37004 ;; This function calls:
 37005 ;;		_PWM8_LoadDutyValue
 37006 ;; This function is called by:
 37007 ;;		_main
 37008 ;;		_check_help
 37009 ;; This function uses a reentrant model
 37010 ;;
 37011                           
 37012                           	psect	text131
 37013  00255E                     __ptext131:
 37014                           	opt callstack 0
 37015  00255E                     _mode_lamp_dim:
 37016                           	opt callstack 14
 37017                           
 37018                           ;mconfig.c: 13: void mode_lamp_dim(const uint16_t level);mconfig.c: 14: {;mconfig.c: 15:
      +                            PWM8_LoadDutyValue(level);
 37019                           ;stkvar	_level @ sp[(0)+-2]
 37020                           
 37021                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37022                           ;incstack = 0
 37023  00255E  0EFE               	movlw	-2
 37024  002560  006F FF8F FFE6     	movff	plusw1,postinc1
 37025  002566  006F FF8F FFE6     	movff	plusw1,postinc1
 37026  00256C  EC99  F00D         	call	_PWM8_LoadDutyValue	;wreg free
 37027                           
 37028                           ; _mode_lamp_dim: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 37029  002570  52E5               	movf	postdec1,f,c
 37030  002572  52E5               	movf	postdec1,f,c
 37031  002574  0012               	return		;funcret
 37032  002576                     __end_of_mode_lamp_dim:
 37033                           	opt callstack 0
 37034                           
 37035 ;; *************** function _mode_lamp_bright *****************
 37036 ;; Defined at:
 37037 ;;		line 18 in file "mconfig.c"
 37038 ;; Parameters:    Size  Location     Type
 37039 ;;		None
 37040 ;; Auto vars:     Size  Location     Type
 37041 ;;		None
 37042 ;; Return value:  Size  Location     Type
 37043 ;;                  1  [STACK] void 
 37044 ;; Registers used:
 37045 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 37046 ;; Tracked objects:
 37047 ;;		On entry : 0/0
 37048 ;;		On exit  : 0/0
 37049 ;;		Unchanged: 0/0
 37050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37051 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37052 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37053 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37054 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37055 ;;Total ram usage:        0 bytes
 37056 ;; Hardware stack levels used:    1
 37057 ;; Hardware stack levels required when called:   16
 37058 ;; This function calls:
 37059 ;;		_PWM8_LoadDutyValue
 37060 ;; This function is called by:
 37061 ;;		_check_help
 37062 ;; This function uses a reentrant model
 37063 ;;
 37064                           
 37065                           	psect	text132
 37066  00267C                     __ptext132:
 37067                           	opt callstack 0
 37068  00267C                     _mode_lamp_bright:
 37069                           	opt callstack 13
 37070                           
 37071                           ;mconfig.c: 20:  PWM8_LoadDutyValue(300);
 37072                           
 37073                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37074                           ;incstack = 0
 37075  00267C  0E2C               	movlw	44
 37076  00267E  6EE6               	movwf	postinc1,c
 37077  002680  0E01               	movlw	1
 37078  002682  6EE6               	movwf	postinc1,c
 37079  002684  EC99  F00D         	call	_PWM8_LoadDutyValue	;wreg free
 37080                           
 37081                           ; _mode_lamp_bright: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 37082  002688  0012               	return		;funcret
 37083  00268A                     __end_of_mode_lamp_bright:
 37084                           	opt callstack 0
 37085                           
 37086 ;; *************** function _PWM8_LoadDutyValue *****************
 37087 ;; Defined at:
 37088 ;;		line 74 in file "mcc_generated_files/pwm8.c"
 37089 ;; Parameters:    Size  Location     Type
 37090 ;;  dutyValue       2  [STACK] unsigned short 
 37091 ;; Auto vars:     Size  Location     Type
 37092 ;;		None
 37093 ;; Return value:  Size  Location     Type
 37094 ;;                  1  [STACK] void 
 37095 ;; Registers used:
 37096 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 37097 ;; Tracked objects:
 37098 ;;		On entry : 0/2
 37099 ;;		On exit  : 0/0
 37100 ;;		Unchanged: 0/0
 37101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37102 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37103 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37105 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37106 ;;Total ram usage:        0 bytes
 37107 ;; Hardware stack levels used:    1
 37108 ;; Hardware stack levels required when called:   15
 37109 ;; This function calls:
 37110 ;;		Nothing
 37111 ;; This function is called by:
 37112 ;;		_mode_lamp_dim
 37113 ;;		_mode_lamp_bright
 37114 ;; This function uses a reentrant model
 37115 ;;
 37116                           
 37117                           	psect	text133
 37118  001B32                     __ptext133:
 37119                           	opt callstack 0
 37120  001B32                     _PWM8_LoadDutyValue:
 37121                           	opt callstack 14
 37122                           
 37123                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 37124                           ;stkvar	_dutyValue @ sp[(0)+-2]
 37125                           
 37126                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37127                           ;incstack = 0
 37128  001B32  0EFE               	movlw	-2
 37129  001B34  006F FF8C  F034    	movff	plusw1,btemp+10
 37130  001B3A  0EFF               	movlw	-1
 37131  001B3C  006F FF8C  F035    	movff	plusw1,btemp+11
 37132  001B42  90D8               	bcf	status,0,c
 37133  001B44  3235               	rrcf	(btemp+11)^0,f,c
 37134  001B46  3234               	rrcf	(btemp+10)^0,f,c
 37135  001B48  90D8               	bcf	status,0,c
 37136  001B4A  3235               	rrcf	(btemp+11)^0,f,c
 37137  001B4C  3234               	rrcf	(btemp+10)^0,f,c
 37138  001B4E  5034               	movf	(btemp+10)^0,w,c
 37139  001B50  6E61               	movwf	97,c	;volatile
 37140                           
 37141                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
 37142                           ;stkvar	_dutyValue @ sp[(0)+-2]
 37143  001B52  0EFE               	movlw	-2
 37144  001B54  006F FF8C  F035    	movff	plusw1,btemp+11
 37145  001B5A  0E03               	movlw	3
 37146  001B5C  1635               	andwf	(btemp+11)^0,f,c
 37147  001B5E  0E06               	movlw	6
 37148  001B60  6E2A               	movwf	btemp^0,c
 37149  001B62                     u12205:
 37150  001B62  90D8               	bcf	status,0,c
 37151  001B64  3635               	rlcf	(btemp+11)^0,f,c
 37152  001B66  2E2A               	decfsz	btemp^0,f,c
 37153  001B68  D7FC               	goto	u12205
 37154  001B6A  5035               	movf	(btemp+11)^0,w,c
 37155  001B6C  6E60               	movwf	96,c	;volatile
 37156                           
 37157                           ; _PWM8_LoadDutyValue: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 37158  001B6E  52E5               	movf	postdec1,f,c
 37159  001B70  52E5               	movf	postdec1,f,c
 37160  001B72  0012               	return		;funcret
 37161  001B74                     __end_of_PWM8_LoadDutyValue:
 37162                           	opt callstack 0
 37163                           
 37164 ;; *************** function _help_button *****************
 37165 ;; Defined at:
 37166 ;;		line 26 in file "mconfig.c"
 37167 ;; Parameters:    Size  Location     Type
 37168 ;;		None
 37169 ;; Auto vars:     Size  Location     Type
 37170 ;;		None
 37171 ;; Return value:  Size  Location     Type
 37172 ;;                  1  [STACK] _Bool 
 37173 ;; Registers used:
 37174 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 37175 ;; Tracked objects:
 37176 ;;		On entry : 0/2
 37177 ;;		On exit  : 0/0
 37178 ;;		Unchanged: 0/0
 37179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37180 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37181 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37182 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37183 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37184 ;;Total ram usage:        0 bytes
 37185 ;; Hardware stack levels used:    1
 37186 ;; Hardware stack levels required when called:   16
 37187 ;; This function calls:
 37188 ;;		_StartTimer
 37189 ;;		_TimerDone
 37190 ;; This function is called by:
 37191 ;;		_check_help
 37192 ;; This function uses a reentrant model
 37193 ;;
 37194                           
 37195                           	psect	text134
 37196  001D68                     __ptext134:
 37197                           	opt callstack 0
 37198  001D68                     _help_button:
 37199                           	opt callstack 13
 37200                           
 37201                           ;mconfig.c: 28:  if (!PORTBbits.RB0) {
 37202                           
 37203                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37204                           ;incstack = 0
 37205  001D68  B0CB               	btfsc	203,0,c	;volatile
 37206  001D6A  D00C               	goto	l1820
 37207                           
 37208                           ;mconfig.c: 29:   V.help = 1;
 37209  001D6C  0102               	movlb	2	; () banked
 37210  001D6E  859F               	bsf	(_V+152)& (0+255),2,b	;volatile
 37211                           
 37212                           ; BSR set to: 2
 37213                           ;mconfig.c: 30:   if (TimerDone(TMR_HELP))
 37214  001D70  0E08               	movlw	8
 37215  001D72  6EE6               	movwf	postinc1,c
 37216  001D74  EC6F  F010         	call	_TimerDone	;wreg free
 37217  001D78  502A               	movf	btemp^0,w,c
 37218  001D7A  B4D8               	btfsc	status,2,c
 37219  001D7C  D003               	goto	l1820
 37220                           
 37221                           ;mconfig.c: 31:    return 1;
 37222  001D7E  0E01               	movlw	1
 37223  001D80  6E2A               	movwf	btemp^0,c
 37224  001D82  0012               	return	
 37225  001D84                     l1820:
 37226                           
 37227                           ;mconfig.c: 34:  if (!V.help)
 37228  001D84  0102               	movlb	2	; () banked
 37229  001D86  B59F               	btfsc	(_V+152)& (0+255),2,b	;volatile
 37230  001D88  D008               	goto	l13558
 37231                           
 37232                           ; BSR set to: 2
 37233                           ;mconfig.c: 35:   StartTimer(TMR_HELP, 300);
 37234  001D8A  0E2C               	movlw	44
 37235  001D8C  6EE6               	movwf	postinc1,c
 37236  001D8E  0E01               	movlw	1
 37237  001D90  6EE6               	movwf	postinc1,c
 37238  001D92  0E08               	movlw	8
 37239  001D94  6EE6               	movwf	postinc1,c
 37240  001D96  ECFA  F00D         	call	_StartTimer	;wreg free
 37241  001D9A                     l13558:
 37242                           
 37243                           ;mconfig.c: 37:  return 0;
 37244  001D9A  0E00               	movlw	0
 37245  001D9C  6E2A               	movwf	btemp^0,c
 37246                           
 37247                           ; _help_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
 37248  001D9E  0012               	return		;funcret
 37249  001DA0                     __end_of_help_button:
 37250                           	opt callstack 0
 37251                           
 37252 ;; *************** function _TimerDone *****************
 37253 ;; Defined at:
 37254 ;;		line 20 in file "timers.c"
 37255 ;; Parameters:    Size  Location     Type
 37256 ;;  timer           1  [STACK] const unsigned char 
 37257 ;; Auto vars:     Size  Location     Type
 37258 ;;		None
 37259 ;; Return value:  Size  Location     Type
 37260 ;;                  1  [STACK] _Bool 
 37261 ;; Registers used:
 37262 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 37263 ;; Tracked objects:
 37264 ;;		On entry : 0/2
 37265 ;;		On exit  : 0/0
 37266 ;;		Unchanged: 0/0
 37267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37268 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37269 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37270 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37271 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37272 ;;Total ram usage:        0 bytes
 37273 ;; Hardware stack levels used:    1
 37274 ;; Hardware stack levels required when called:   15
 37275 ;; This function calls:
 37276 ;;		Nothing
 37277 ;; This function is called by:
 37278 ;;		_main
 37279 ;;		_WaitMs
 37280 ;;		_help_button
 37281 ;;		_check_help
 37282 ;;		_set_display_info
 37283 ;;		_update_adc_result
 37284 ;;		_esr_check
 37285 ;; This function uses a reentrant model
 37286 ;;
 37287                           
 37288                           	psect	text135
 37289  0020DE                     __ptext135:
 37290                           	opt callstack 0
 37291  0020DE                     _TimerDone:
 37292                           	opt callstack 14
 37293                           
 37294                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37295                           ;incstack = 0
 37296  0020DE  0004               	clrwdt		;# 
 37297                           
 37298                           ;timers.c: 23:  if (tickCount[timer] == 0) {
 37299                           ;stkvar	_timer @ sp[(0)+-1]
 37300  0020E0  0EFF               	movlw	-1
 37301  0020E2  50E3               	movf	plusw1,w,c
 37302  0020E4  0D02               	mullw	2
 37303  0020E6  0EBC               	movlw	low _tickCount
 37304  0020E8  24F3               	addwf	243,w,c
 37305  0020EA  6ED9               	movwf	fsr2l,c
 37306  0020EC  0E02               	movlw	high _tickCount
 37307  0020EE  20F4               	addwfc	prodh,w,c
 37308  0020F0  6EDA               	movwf	fsr2h,c
 37309  0020F2  50DE               	movf	postinc2,w,c
 37310  0020F4  10DE               	iorwf	postinc2,w,c
 37311  0020F6  A4D8               	btfss	status,2,c
 37312  0020F8  D002               	goto	l12314
 37313                           
 37314                           ;timers.c: 24:   return 1;
 37315  0020FA  0E01               	movlw	1
 37316  0020FC  D001               	goto	L42
 37317  0020FE                     l12314:
 37318                           
 37319                           ;timers.c: 26:  return 0;
 37320  0020FE  0E00               	movlw	0
 37321  002100                     L42:
 37322  002100  6E2A               	movwf	btemp^0,c
 37323                           
 37324                           ; _TimerDone: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 37325  002102  52E5               	movf	postdec1,f,c
 37326  002104  0012               	return		;funcret
 37327  002106                     __end_of_TimerDone:
 37328                           	opt callstack 0
 37329                           
 37330 ;; *************** function _StartTimer *****************
 37331 ;; Defined at:
 37332 ;;		line 12 in file "timers.c"
 37333 ;; Parameters:    Size  Location     Type
 37334 ;;  timer           1  [STACK] const unsigned char 
 37335 ;;  count           2  [STACK] const unsigned short 
 37336 ;; Auto vars:     Size  Location     Type
 37337 ;;		None
 37338 ;; Return value:  Size  Location     Type
 37339 ;;                  1  [STACK] void 
 37340 ;; Registers used:
 37341 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 37342 ;; Tracked objects:
 37343 ;;		On entry : 0/0
 37344 ;;		On exit  : 0/0
 37345 ;;		Unchanged: 0/0
 37346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37347 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37348 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37349 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37350 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37351 ;;Total ram usage:        0 bytes
 37352 ;; Hardware stack levels used:    1
 37353 ;; Hardware stack levels required when called:   15
 37354 ;; This function calls:
 37355 ;;		Nothing
 37356 ;; This function is called by:
 37357 ;;		_main
 37358 ;;		_WaitMs
 37359 ;;		_help_button
 37360 ;;		_check_help
 37361 ;;		_update_adc_result
 37362 ;;		_calc_bsoc
 37363 ;;		_esr_check
 37364 ;; This function uses a reentrant model
 37365 ;;
 37366                           
 37367                           	psect	text136
 37368  001BF4                     __ptext136:
 37369                           	opt callstack 0
 37370  001BF4                     _StartTimer:
 37371                           	opt callstack 0
 37372                           
 37373                           ;timers.c: 12: void StartTimer(const uint8_t timer, const uint16_t count);timers.c: 13: 
      +                          {;timers.c: 14:  tickCount[timer] = count << 1;
 37374                           ;stkvar	_count @ sp[(0)+-3]
 37375                           
 37376                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37377                           ;incstack = 0
 37378 ;; hardware stack exceeded
 37379  001BF4  0EFD               	movlw	-3
 37380  001BF6  006F FF8C  F034    	movff	plusw1,btemp+10
 37381  001BFC  0EFE               	movlw	-2
 37382  001BFE  006F FF8C  F035    	movff	plusw1,btemp+11
 37383  001C04  90D8               	bcf	status,0,c
 37384  001C06  3434               	rlcf	(btemp+10)^0,w,c
 37385  001C08  6E32               	movwf	(btemp+8)^0,c
 37386  001C0A  3435               	rlcf	(btemp+11)^0,w,c
 37387  001C0C  6E33               	movwf	(btemp+9)^0,c
 37388                           
 37389                           ;stkvar	_timer @ sp[(0)+-1]
 37390  001C0E  0EFF               	movlw	-1
 37391  001C10  50E3               	movf	plusw1,w,c
 37392  001C12  0D02               	mullw	2
 37393  001C14  0EBC               	movlw	low _tickCount
 37394  001C16  24F3               	addwf	243,w,c
 37395  001C18  6ED9               	movwf	fsr2l,c
 37396  001C1A  0E02               	movlw	high _tickCount
 37397  001C1C  20F4               	addwfc	prodh,w,c
 37398  001C1E  6EDA               	movwf	fsr2h,c
 37399  001C20  0060  F0CB  FFDE   	movff	btemp+8,postinc2
 37400  001C26  0060  F0CF  FFDD   	movff	btemp+9,postdec2
 37401                           
 37402                           ; _StartTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
 37403  001C2C  52E5               	movf	postdec1,f,c
 37404  001C2E  52E5               	movf	postdec1,f,c
 37405  001C30  52E5               	movf	postdec1,f,c
 37406  001C32  0012               	return		;funcret
 37407  001C34                     __end_of_StartTimer:
 37408                           	opt callstack 0
 37409                           
 37410 ;; *************** function _display_info *****************
 37411 ;; Defined at:
 37412 ;;		line 196 in file "mconfig.c"
 37413 ;; Parameters:    Size  Location     Type
 37414 ;;		None
 37415 ;; Auto vars:     Size  Location     Type
 37416 ;;		None
 37417 ;; Return value:  Size  Location     Type
 37418 ;;                  1  [STACK] enum E16677
 37419 ;; Registers used:
 37420 ;;		btemp
 37421 ;; Tracked objects:
 37422 ;;		On entry : 0/2
 37423 ;;		On exit  : 0/0
 37424 ;;		Unchanged: 0/0
 37425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37426 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37427 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37428 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37429 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37430 ;;Total ram usage:        0 bytes
 37431 ;; Hardware stack levels used:    1
 37432 ;; Hardware stack levels required when called:   15
 37433 ;; This function calls:
 37434 ;;		Nothing
 37435 ;; This function is called by:
 37436 ;;		_check_help
 37437 ;; This function uses a reentrant model
 37438 ;;
 37439                           
 37440                           	psect	text137
 37441  0026FE                     __ptext137:
 37442                           	opt callstack 0
 37443  0026FE                     _display_info:
 37444                           	opt callstack 14
 37445                           
 37446                           ;mconfig.c: 198:  return V.response.info;
 37447                           
 37448                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37449                           ;incstack = 0
 37450  0026FE  0060  FAA0  F02A   	movff	_V+161,btemp	;volatile
 37451                           
 37452                           ; _display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 37453  002704  0012               	return		;funcret
 37454  002706                     __end_of_display_info:
 37455                           	opt callstack 0
 37456                           
 37457 ;; *************** function _display_help *****************
 37458 ;; Defined at:
 37459 ;;		line 201 in file "mconfig.c"
 37460 ;; Parameters:    Size  Location     Type
 37461 ;;		None
 37462 ;; Auto vars:     Size  Location     Type
 37463 ;;		None
 37464 ;; Return value:  Size  Location     Type
 37465 ;;                  1  [STACK] enum E16677
 37466 ;; Registers used:
 37467 ;;		btemp
 37468 ;; Tracked objects:
 37469 ;;		On entry : 3F/2
 37470 ;;		On exit  : 0/0
 37471 ;;		Unchanged: 0/0
 37472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37473 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37474 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37475 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37476 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37477 ;;Total ram usage:        0 bytes
 37478 ;; Hardware stack levels used:    1
 37479 ;; Hardware stack levels required when called:   15
 37480 ;; This function calls:
 37481 ;;		Nothing
 37482 ;; This function is called by:
 37483 ;;		_check_help
 37484 ;; This function uses a reentrant model
 37485 ;;
 37486                           
 37487                           	psect	text138
 37488  002706                     __ptext138:
 37489                           	opt callstack 0
 37490  002706                     _display_help:
 37491                           	opt callstack 14
 37492                           
 37493                           ;mconfig.c: 203:  return V.response.help_temp;
 37494                           
 37495                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37496                           ;incstack = 0
 37497  002706  0060  FAA4  F02A   	movff	_V+162,btemp	;volatile
 37498                           
 37499                           ; _display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 37500  00270C  0012               	return		;funcret
 37501  00270E                     __end_of_display_help:
 37502                           	opt callstack 0
 37503                           
 37504 ;; *************** function _check_enter_button *****************
 37505 ;; Defined at:
 37506 ;;		line 49 in file "hid.c"
 37507 ;; Parameters:    Size  Location     Type
 37508 ;;  h               2  [STACK] PTR struct H_data
 37509 ;;		 -> H(9), 
 37510 ;; Auto vars:     Size  Location     Type
 37511 ;;		None
 37512 ;; Return value:  Size  Location     Type
 37513 ;;                  1  [STACK] _Bool 
 37514 ;; Registers used:
 37515 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11
 37516 ;; Tracked objects:
 37517 ;;		On entry : 0/0
 37518 ;;		On exit  : 0/0
 37519 ;;		Unchanged: 0/0
 37520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37521 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37522 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37524 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37525 ;;Total ram usage:        0 bytes
 37526 ;; Hardware stack levels used:    1
 37527 ;; Hardware stack levels required when called:   15
 37528 ;; This function calls:
 37529 ;;		Nothing
 37530 ;; This function is called by:
 37531 ;;		_main
 37532 ;; This function uses a reentrant model
 37533 ;;
 37534                           
 37535                           	psect	text139
 37536  001128                     __ptext139:
 37537                           	opt callstack 0
 37538  001128                     _check_enter_button:
 37539                           	opt callstack 15
 37540                           
 37541                           ;hid.c: 49: _Bool check_enter_button(H_data* h);hid.c: 50: {;hid.c: 51:  if (!h->wait_en
      +                          ter && (h->enter_p == SW_OFF)) {
 37542                           ;stkvar	_h @ sp[(0)+-2]
 37543                           
 37544                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37545                           ;incstack = 0
 37546  001128  0EFE               	movlw	-2
 37547  00112A  006F FF8C  F034    	movff	plusw1,btemp+10
 37548  001130  0EFF               	movlw	-1
 37549  001132  006F FF8C  F035    	movff	plusw1,btemp+11
 37550  001138  0E04               	movlw	4
 37551  00113A  2434               	addwf	(btemp+10)^0,w,c
 37552  00113C  6ED9               	movwf	fsr2l,c
 37553  00113E  0E00               	movlw	0
 37554  001140  2035               	addwfc	(btemp+11)^0,w,c
 37555  001142  6EDA               	movwf	fsr2h,c
 37556  001144  50DF               	movf	indf2,w,c
 37557  001146  A4D8               	btfss	status,2,c
 37558  001148  D023               	goto	l17248
 37559                           
 37560                           ;stkvar	_h @ sp[(0)+-2]
 37561  00114A  0EFE               	movlw	-2
 37562  00114C  006F FF8C  F034    	movff	plusw1,btemp+10
 37563  001152  0EFF               	movlw	-1
 37564  001154  006F FF8C  F035    	movff	plusw1,btemp+11
 37565  00115A  0E05               	movlw	5
 37566  00115C  2434               	addwf	(btemp+10)^0,w,c
 37567  00115E  6ED9               	movwf	fsr2l,c
 37568  001160  0E00               	movlw	0
 37569  001162  2035               	addwfc	(btemp+11)^0,w,c
 37570  001164  6EDA               	movwf	fsr2h,c
 37571  001166  50DF               	movf	indf2,w,c
 37572  001168  A4D8               	btfss	status,2,c
 37573  00116A  D012               	goto	l17248
 37574                           
 37575                           ;hid.c: 52:   h->wait_enter = 1;
 37576                           ;stkvar	_h @ sp[(0)+-2]
 37577  00116C  0EFE               	movlw	-2
 37578  00116E  006F FF8C  F034    	movff	plusw1,btemp+10
 37579  001174  0EFF               	movlw	-1
 37580  001176  006F FF8C  F035    	movff	plusw1,btemp+11
 37581  00117C  0E04               	movlw	4
 37582  00117E  2434               	addwf	(btemp+10)^0,w,c
 37583  001180  6ED9               	movwf	fsr2l,c
 37584  001182  0E00               	movlw	0
 37585  001184  2035               	addwfc	(btemp+11)^0,w,c
 37586  001186  6EDA               	movwf	fsr2h,c
 37587  001188  0E01               	movlw	1
 37588  00118A  6EDF               	movwf	indf2,c
 37589                           
 37590                           ;hid.c: 53:   return 1;
 37591  00118C  0E01               	movlw	1
 37592  00118E  D001               	goto	L43
 37593  001190                     l17248:
 37594                           
 37595                           ;hid.c: 55:  return 0;
 37596  001190  0E00               	movlw	0
 37597  001192                     L43:
 37598  001192  6E2A               	movwf	btemp^0,c
 37599                           
 37600                           ; _check_enter_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 37601  001194  52E5               	movf	postdec1,f,c
 37602  001196  52E5               	movf	postdec1,f,c
 37603  001198  0012               	return		;funcret
 37604  00119A                     __end_of_check_enter_button:
 37605                           	opt callstack 0
 37606                           
 37607 ;; *************** function _calc_ror_data *****************
 37608 ;; Defined at:
 37609 ;;		line 103 in file "mbmc.c"
 37610 ;; Parameters:    Size  Location     Type
 37611 ;;		None
 37612 ;; Auto vars:     Size  Location     Type
 37613 ;;		None
 37614 ;; Return value:  Size  Location     Type
 37615 ;;                  1  [STACK] void 
 37616 ;; Registers used:
 37617 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 37618 ;; Tracked objects:
 37619 ;;		On entry : 0/0
 37620 ;;		On exit  : 0/0
 37621 ;;		Unchanged: 0/0
 37622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37623 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37624 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37625 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37626 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37627 ;;Total ram usage:        0 bytes
 37628 ;; Hardware stack levels used:    1
 37629 ;; Hardware stack levels required when called:   18
 37630 ;; This function calls:
 37631 ;;		___flge
 37632 ;;		___flsub
 37633 ;;		_conv_raw_result
 37634 ;;		_fabsf
 37635 ;; This function is called by:
 37636 ;;		_main
 37637 ;; This function uses a reentrant model
 37638 ;;
 37639                           
 37640                           	psect	text140
 37641  01DEC2                     __ptext140:
 37642                           	opt callstack 0
 37643  01DEC2                     _calc_ror_data:
 37644                           	opt callstack 12
 37645                           
 37646                           ;mbmc.c: 105:  static float bvror = 0.0, bcror = 0.0;;mbmc.c: 107:  C.bc_ror = fabsf(con
      +                          v_raw_result(C_BATT, CONV) - bcror);
 37647                           
 37648                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37649                           ;incstack = 0
 37650  01DEC2  0060  F203  FFE6   	movff	calc_ror_data@bcror,postinc1
 37651  01DEC8  0060  F207  FFE6   	movff	calc_ror_data@bcror+1,postinc1
 37652  01DECE  0060  F20B  FFE6   	movff	calc_ror_data@bcror+2,postinc1
 37653  01DED4  0060  F20F  FFE6   	movff	calc_ror_data@bcror+3,postinc1
 37654  01DEDA  0E00               	movlw	0
 37655  01DEDC  6EE6               	movwf	postinc1,c
 37656  01DEDE  0E00               	movlw	0
 37657  01DEE0  6EE6               	movwf	postinc1,c
 37658  01DEE2  ECE6  F0C2         	call	_conv_raw_result	;wreg free
 37659  01DEE6  0060  F0AB  FFE6   	movff	btemp,postinc1
 37660  01DEEC  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 37661  01DEF2  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 37662  01DEF8  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 37663  01DEFE  EC54  F00D         	call	___flsub	;wreg free
 37664  01DF02  0060  F0AB  FFE6   	movff	btemp,postinc1
 37665  01DF08  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 37666  01DF0E  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 37667  01DF14  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 37668  01DF1A  EC96  F002         	call	_fabsf	;wreg free
 37669  01DF1E  0060  F0A8  F96F   	movff	btemp,_C+112	;volatile
 37670  01DF24  0060  F0AC  F970   	movff	btemp+1,_C+113	;volatile
 37671  01DF2A  0060  F0B0  F971   	movff	btemp+2,_C+114	;volatile
 37672  01DF30  0060  F0B4  F972   	movff	btemp+3,_C+115	;volatile
 37673                           
 37674                           ;mbmc.c: 108:  bcror = conv_raw_result(C_BATT, CONV);
 37675  01DF36  0E00               	movlw	0
 37676  01DF38  6EE6               	movwf	postinc1,c
 37677  01DF3A  0E00               	movlw	0
 37678  01DF3C  6EE6               	movwf	postinc1,c
 37679  01DF3E  ECE6  F0C2         	call	_conv_raw_result	;wreg free
 37680  01DF42  0060  F0A8  F080   	movff	btemp,calc_ror_data@bcror
 37681  01DF48  0060  F0AC  F081   	movff	btemp+1,calc_ror_data@bcror+1
 37682  01DF4E  0060  F0B0  F082   	movff	btemp+2,calc_ror_data@bcror+2
 37683  01DF54  0060  F0B4  F083   	movff	btemp+3,calc_ror_data@bcror+3
 37684                           
 37685                           ;mbmc.c: 109:  C.bv_ror = fabsf(conv_raw_result(V_BAT, CONV) - bvror);
 37686  01DF5A  0060  F213  FFE6   	movff	calc_ror_data@bvror,postinc1
 37687  01DF60  0060  F217  FFE6   	movff	calc_ror_data@bvror+1,postinc1
 37688  01DF66  0060  F21B  FFE6   	movff	calc_ror_data@bvror+2,postinc1
 37689  01DF6C  0060  F21F  FFE6   	movff	calc_ror_data@bvror+3,postinc1
 37690  01DF72  0E00               	movlw	0
 37691  01DF74  6EE6               	movwf	postinc1,c
 37692  01DF76  0E04               	movlw	4
 37693  01DF78  6EE6               	movwf	postinc1,c
 37694  01DF7A  ECE6  F0C2         	call	_conv_raw_result	;wreg free
 37695  01DF7E  0060  F0AB  FFE6   	movff	btemp,postinc1
 37696  01DF84  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 37697  01DF8A  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 37698  01DF90  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 37699  01DF96  EC54  F00D         	call	___flsub	;wreg free
 37700  01DF9A  0060  F0AB  FFE6   	movff	btemp,postinc1
 37701  01DFA0  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 37702  01DFA6  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 37703  01DFAC  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 37704  01DFB2  EC96  F002         	call	_fabsf	;wreg free
 37705  01DFB6  0060  F0A8  F96B   	movff	btemp,_C+108	;volatile
 37706  01DFBC  0060  F0AC  F96C   	movff	btemp+1,_C+109	;volatile
 37707  01DFC2  0060  F0B0  F96D   	movff	btemp+2,_C+110	;volatile
 37708  01DFC8  0060  F0B4  F96E   	movff	btemp+3,_C+111	;volatile
 37709                           
 37710                           ;mbmc.c: 110:  if (C.bv_ror < 0.0051)
 37711  01DFCE  0EE7               	movlw	231
 37712  01DFD0  6EE6               	movwf	postinc1,c
 37713  01DFD2  0E1D               	movlw	29
 37714  01DFD4  6EE6               	movwf	postinc1,c
 37715  01DFD6  0EA7               	movlw	167
 37716  01DFD8  6EE6               	movwf	postinc1,c
 37717  01DFDA  0E3B               	movlw	59
 37718  01DFDC  6EE6               	movwf	postinc1,c
 37719  01DFDE  EE22  F16B         	lfsr	2,_C+108	;volatile
 37720  01DFE2  006F FF7B FFE6     	movff	postinc2,postinc1
 37721  01DFE8  006F FF7B FFE6     	movff	postinc2,postinc1
 37722  01DFEE  006F FF7B FFE6     	movff	postinc2,postinc1
 37723  01DFF4  006F FF7B FFE6     	movff	postinc2,postinc1
 37724  01DFFA  EC09  F0F3         	call	___flge	;wreg free
 37725  01DFFE  B02A               	btfsc	btemp& (0+255),0,c
 37726  01E000  D010               	goto	l14156
 37727                           
 37728                           ;mbmc.c: 111:   C.bv_ror = 0.0140 + 0.0001;
 37729  01E002  0EB0               	movlw	176
 37730  01E004  006F FFA0  F96B    	movff	wreg,_C+108	;volatile
 37731  01E00A  0E03               	movlw	3
 37732  01E00C  006F FFA0  F96C    	movff	wreg,_C+109	;volatile
 37733  01E012  0E67               	movlw	103
 37734  01E014  006F FFA0  F96D    	movff	wreg,_C+110	;volatile
 37735  01E01A  0E3C               	movlw	60
 37736  01E01C  006F FFA0  F96E    	movff	wreg,_C+111	;volatile
 37737  01E022                     l14156:
 37738                           
 37739                           ;mbmc.c: 112:  bvror = conv_raw_result(V_BAT, CONV);
 37740  01E022  0E00               	movlw	0
 37741  01E024  6EE6               	movwf	postinc1,c
 37742  01E026  0E04               	movlw	4
 37743  01E028  6EE6               	movwf	postinc1,c
 37744  01E02A  ECE6  F0C2         	call	_conv_raw_result	;wreg free
 37745  01E02E  0060  F0A8  F084   	movff	btemp,calc_ror_data@bvror
 37746  01E034  0060  F0AC  F085   	movff	btemp+1,calc_ror_data@bvror+1
 37747  01E03A  0060  F0B0  F086   	movff	btemp+2,calc_ror_data@bvror+2
 37748  01E040  0060  F0B4  F087   	movff	btemp+3,calc_ror_data@bvror+3
 37749                           
 37750                           ; _calc_ror_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
 37751  01E046  0012               	return		;funcret
 37752  01E048                     __end_of_calc_ror_data:
 37753                           	opt callstack 0
 37754                           
 37755 ;; *************** function _fabsf *****************
 37756 ;; Defined at:
 37757 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fabsf.c"
 37758 ;; Parameters:    Size  Location     Type
 37759 ;;  x               4  [STACK] float 
 37760 ;; Auto vars:     Size  Location     Type
 37761 ;;  u               4  [STACK] struct .
 37762 ;; Return value:  Size  Location     Type
 37763 ;;                  4  [STACK] float 
 37764 ;; Registers used:
 37765 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
 37766 ;; Tracked objects:
 37767 ;;		On entry : 0/0
 37768 ;;		On exit  : 0/0
 37769 ;;		Unchanged: 0/0
 37770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37771 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37772 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37773 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37774 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37775 ;;Total ram usage:        0 bytes
 37776 ;; Hardware stack levels used:    1
 37777 ;; Hardware stack levels required when called:   15
 37778 ;; This function calls:
 37779 ;;		Nothing
 37780 ;; This function is called by:
 37781 ;;		_main
 37782 ;;		_calc_ror_data
 37783 ;;		_calc_bsoc
 37784 ;;		_esr_check
 37785 ;; This function uses a reentrant model
 37786 ;;
 37787                           
 37788                           	psect	text141
 37789  00052C                     __ptext141:
 37790                           	opt callstack 0
 37791  00052C                     _fabsf:
 37792                           	opt callstack 0
 37793                           
 37794                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37795  00052C  52E6               	movf	postinc1,f,c
 37796  00052E  52E6               	movf	postinc1,f,c
 37797  000530  52E6               	movf	postinc1,f,c
 37798  000532  52E6               	movf	postinc1,f,c
 37799                           
 37800                           ;incstack = 0
 37801 ;; hardware stack exceeded
 37802  000534  0060  F1E0  F032   	movff	fabsf@F463,btemp+8
 37803  00053A  0060  F1E4  F033   	movff	fabsf@F463+1,btemp+9
 37804  000540  0060  F1E8  F034   	movff	fabsf@F463+2,btemp+10
 37805  000546  0060  F1EC  F035   	movff	fabsf@F463+3,btemp+11
 37806                           
 37807                           ;stkvar	_u @ sp[(-4)+0]
 37808  00054C  0EFC               	movlw	-4
 37809  00054E  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 37810  000554  0EFD               	movlw	-3
 37811  000556  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 37812  00055C  0EFE               	movlw	-2
 37813  00055E  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 37814  000564  0EFF               	movlw	-1
 37815  000566  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 37816                           
 37817                           ;stkvar	_x @ sp[(-4)+-4]
 37818  00056C  0EF8               	movlw	-8
 37819  00056E  006F FF8C  F032    	movff	plusw1,btemp+8
 37820  000574  0EF9               	movlw	-7
 37821  000576  006F FF8C  F033    	movff	plusw1,btemp+9
 37822  00057C  0EFA               	movlw	-6
 37823  00057E  006F FF8C  F034    	movff	plusw1,btemp+10
 37824  000584  0EFB               	movlw	-5
 37825  000586  006F FF8C  F035    	movff	plusw1,btemp+11
 37826                           
 37827                           ;stkvar	_u @ sp[(-4)+0]
 37828  00058C  0EFC               	movlw	-4
 37829  00058E  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 37830  000594  0EFD               	movlw	-3
 37831  000596  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 37832  00059C  0EFE               	movlw	-2
 37833  00059E  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 37834  0005A4  0EFF               	movlw	-1
 37835  0005A6  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 37836                           
 37837                           ;stkvar	_u @ sp[(-4)+0]
 37838  0005AC  0EFF               	movlw	-1
 37839  0005AE  9EE3               	bcf	plusw1,7,c
 37840                           
 37841                           ;stkvar	_u @ sp[(-4)+0]
 37842  0005B0  0EFC               	movlw	-4
 37843  0005B2  006F FF8C  F02A    	movff	plusw1,btemp
 37844  0005B8  0EFD               	movlw	-3
 37845  0005BA  006F FF8C  F02B    	movff	plusw1,btemp+1
 37846  0005C0  0EFE               	movlw	-2
 37847  0005C2  006F FF8C  F02C    	movff	plusw1,btemp+2
 37848  0005C8  0EFF               	movlw	-1
 37849  0005CA  006F FF8C  F02D    	movff	plusw1,btemp+3
 37850                           
 37851                           ; _fabsf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 37852  0005D0  0EF8               	movlw	248
 37853  0005D2  26E1               	addwf	fsr1l,f,c
 37854  0005D4  0EFF               	movlw	255
 37855  0005D6  22E2               	addwfc	fsr1h,f,c
 37856  0005D8  0012               	return		;funcret
 37857  0005DA                     __end_of_fabsf:
 37858                           	opt callstack 0
 37859                           
 37860 ;; *************** function _conv_raw_result *****************
 37861 ;; Defined at:
 37862 ;;		line 135 in file "daq.c"
 37863 ;; Parameters:    Size  Location     Type
 37864 ;;  chan            1  [STACK] const enum E16605
 37865 ;;  to_what         1  [STACK] const enum E16996
 37866 ;; Auto vars:     Size  Location     Type
 37867 ;;		None
 37868 ;; Return value:  Size  Location     Type
 37869 ;;                  4  [STACK] float 
 37870 ;; Registers used:
 37871 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 37872 ;; Tracked objects:
 37873 ;;		On entry : 0/0
 37874 ;;		On exit  : 0/0
 37875 ;;		Unchanged: 0/0
 37876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37877 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37878 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37879 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37880 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37881 ;;Total ram usage:        0 bytes
 37882 ;; Hardware stack levels used:    1
 37883 ;; Hardware stack levels required when called:   17
 37884 ;; This function calls:
 37885 ;;		___fldiv
 37886 ;;		___flmul
 37887 ;;		___flsub
 37888 ;;		___xxtofl
 37889 ;;		_get_raw_result
 37890 ;;		_nanf
 37891 ;; This function is called by:
 37892 ;;		_main
 37893 ;;		_convert_adc_data
 37894 ;;		_calc_ror_data
 37895 ;;		_check_day_time
 37896 ;;		_init_bsoc
 37897 ;;		_esr_check
 37898 ;; This function uses a reentrant model
 37899 ;;
 37900                           
 37901                           	psect	text142
 37902  0185CC                     __ptext142:
 37903                           	opt callstack 0
 37904  0185CC                     _conv_raw_result:
 37905                           	opt callstack 0
 37906                           
 37907                           ;daq.c: 135: float conv_raw_result(const adcc_channel_t chan, const adc_conv_t to_what);
      +                          daq.c: 136: {;daq.c: 138:  switch (to_what) {
 37908                           
 37909                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37910                           ;incstack = 0
 37911 ;; hardware stack exceeded
 37912  0185CC  D24A               	goto	l12296
 37913  0185CE                     l12242:
 37914                           
 37915                           ;daq.c: 140:   if (!(0b0011110001110111 >> chan & 0x1))
 37916                           ;stkvar	_chan @ sp[(0)+-1]
 37917  0185CE  0EFF               	movlw	-1
 37918  0185D0  006F FF8C  F035    	movff	plusw1,btemp+11
 37919  0185D6  0E77               	movlw	119
 37920  0185D8  6E32               	movwf	(btemp+8)^0,c
 37921  0185DA  0E3C               	movlw	60
 37922  0185DC  6E33               	movwf	(btemp+9)^0,c
 37923  0185DE  2A35               	incf	(btemp+11)^0,f,c
 37924  0185E0  D003               	goto	u11554
 37925  0185E2                     u11555:
 37926  0185E2  3433               	rlcf	(btemp+9)^0,w,c
 37927  0185E4  3233               	rrcf	(btemp+9)^0,f,c
 37928  0185E6  3232               	rrcf	(btemp+8)^0,f,c
 37929  0185E8                     u11554:
 37930  0185E8  2E35               	decfsz	(btemp+11)^0,f,c
 37931  0185EA  D7FB               	goto	u11555
 37932  0185EC  B032               	btfsc	(btemp+8)^0,0,c
 37933  0185EE  D007               	goto	l12248
 37934                           
 37935                           ;daq.c: 141:    return nanf("");
 37936  0185F0  0E75               	movlw	low (STR_90+126)
 37937  0185F2  6EE6               	movwf	postinc1,c
 37938  0185F4  0EFA               	movlw	high (STR_90+126)
 37939  0185F6  6EE6               	movwf	postinc1,c
 37940  0185F8  EC9C  F00A         	call	_nanf	;wreg free
 37941  0185FC  D242               	goto	l1977
 37942  0185FE                     l12248:
 37943                           
 37944                           ;daq.c: 143:   if (0b0000000000000011 >> chan & 0x1) {
 37945                           ;stkvar	_chan @ sp[(0)+-1]
 37946  0185FE  0EFF               	movlw	-1
 37947  018600  006F FF8C  F035    	movff	plusw1,btemp+11
 37948  018606  0E03               	movlw	3
 37949  018608  6E32               	movwf	(btemp+8)^0,c
 37950  01860A  0E00               	movlw	0
 37951  01860C  6E33               	movwf	(btemp+9)^0,c
 37952  01860E  2A35               	incf	(btemp+11)^0,f,c
 37953  018610  D003               	goto	u11574
 37954  018612                     u11575:
 37955  018612  3433               	rlcf	(btemp+9)^0,w,c
 37956  018614  3233               	rrcf	(btemp+9)^0,f,c
 37957  018616  3232               	rrcf	(btemp+8)^0,f,c
 37958  018618                     u11574:
 37959  018618  2E35               	decfsz	(btemp+11)^0,f,c
 37960  01861A  D7FB               	goto	u11575
 37961  01861C  A032               	btfss	(btemp+8)^0,0,c
 37962  01861E  D0F3               	goto	l12262
 37963                           
 37964                           ;daq.c: 144:    if (0b0000000000000001 >> chan & 0x1) {
 37965                           ;stkvar	_chan @ sp[(0)+-1]
 37966  018620  0EFF               	movlw	-1
 37967  018622  006F FF8C  F035    	movff	plusw1,btemp+11
 37968  018628  0E01               	movlw	1
 37969  01862A  6E32               	movwf	(btemp+8)^0,c
 37970  01862C  0E00               	movlw	0
 37971  01862E  6E33               	movwf	(btemp+9)^0,c
 37972  018630  2A35               	incf	(btemp+11)^0,f,c
 37973  018632  D003               	goto	u11594
 37974  018634                     u11595:
 37975  018634  3433               	rlcf	(btemp+9)^0,w,c
 37976  018636  3233               	rrcf	(btemp+9)^0,f,c
 37977  018638  3232               	rrcf	(btemp+8)^0,f,c
 37978  01863A                     u11594:
 37979  01863A  2E35               	decfsz	(btemp+11)^0,f,c
 37980  01863C  D7FB               	goto	u11595
 37981  01863E  A032               	btfss	(btemp+8)^0,0,c
 37982  018640  D071               	goto	l12258
 37983                           
 37984                           ;daq.c: 145:     return((float) ((int16_t) get_raw_result(chan)) - R.n_offset[0]) * R.n_
      +                          scalar[0];
 37985  018642  0060  F4AB  FFE6   	movff	_R+42,postinc1
 37986  018648  0060  F4AF  FFE6   	movff	_R+43,postinc1
 37987  01864E  0060  F4B3  FFE6   	movff	_R+44,postinc1
 37988  018654  0060  F4B7  FFE6   	movff	_R+45,postinc1
 37989  01865A  0060  F498  F032   	movff	_R+38,btemp+8	;volatile
 37990  018660  0060  F49C  F033   	movff	_R+39,btemp+9	;volatile
 37991  018666  0E00               	movlw	0
 37992  018668  BE33               	btfsc	(btemp+9)^0,7,c
 37993  01866A  0EFF               	movlw	255
 37994  01866C  6E34               	movwf	(btemp+10)^0,c
 37995  01866E  6E35               	movwf	(btemp+11)^0,c
 37996  018670  0060  F0CB  FFE6   	movff	btemp+8,postinc1
 37997  018676  0060  F0CF  FFE6   	movff	btemp+9,postinc1
 37998  01867C  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 37999  018682  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 38000  018688  0E01               	movlw	1
 38001  01868A  6EE6               	movwf	postinc1,c
 38002  01868C  EC6F  F0E9         	call	___xxtofl	;wreg free
 38003  018690  0060  F0AB  FFE6   	movff	btemp,postinc1
 38004  018696  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 38005  01869C  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 38006  0186A2  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 38007                           
 38008                           ;stkvar	_chan @ sp[(-8)+-1]
 38009  0186A8  0EF7               	movlw	-9
 38010  0186AA  50E3               	movf	plusw1,w,c
 38011  0186AC  6EE6               	movwf	postinc1,c
 38012  0186AE  EC05  F012         	call	_get_raw_result	;wreg free
 38013  0186B2  0060  F0A8  F034   	movff	btemp,btemp+10
 38014  0186B8  0060  F0AC  F035   	movff	btemp+1,btemp+11
 38015  0186BE  5034               	movf	(btemp+10)^0,w,c
 38016  0186C0  6E2E               	movwf	(btemp+4)^0,c
 38017  0186C2  5035               	movf	(btemp+11)^0,w,c
 38018  0186C4  6E2F               	movwf	(btemp+5)^0,c
 38019  0186C6  6A30               	clrf	(btemp+6)^0,c
 38020  0186C8  6A31               	clrf	(btemp+7)^0,c
 38021  0186CA  0060  F0BB  FFE6   	movff	btemp+4,postinc1
 38022  0186D0  0060  F0BF  FFE6   	movff	btemp+5,postinc1
 38023  0186D6  0060  F0C3  FFE6   	movff	btemp+6,postinc1
 38024  0186DC  0060  F0C7  FFE6   	movff	btemp+7,postinc1
 38025  0186E2  0E00               	movlw	0
 38026  0186E4  6EE6               	movwf	postinc1,c
 38027  0186E6  EC6F  F0E9         	call	___xxtofl	;wreg free
 38028  0186EA  0060  F0AB  FFE6   	movff	btemp,postinc1
 38029  0186F0  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 38030  0186F6  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 38031  0186FC  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 38032  018702  EC54  F00D         	call	___flsub	;wreg free
 38033  018706  0060  F0AB  FFE6   	movff	btemp,postinc1
 38034  01870C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 38035  018712  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 38036  018718  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 38037  01871E  EC4D  F0B2         	call	___flmul	;wreg free
 38038  018722  D1AF               	goto	l1977
 38039  018724                     l12258:
 38040                           
 38041                           ;daq.c: 147:     return((float) ((int16_t) get_raw_result(chan)) - R.n_offset[1]) * R.n_
      +                          scalar[1];
 38042  018724  0060  F4BB  FFE6   	movff	_R+46,postinc1
 38043  01872A  0060  F4BF  FFE6   	movff	_R+47,postinc1
 38044  018730  0060  F4C3  FFE6   	movff	_R+48,postinc1
 38045  018736  0060  F4C7  FFE6   	movff	_R+49,postinc1
 38046  01873C  0060  F4A0  F032   	movff	_R+40,btemp+8	;volatile
 38047  018742  0060  F4A4  F033   	movff	_R+41,btemp+9	;volatile
 38048  018748  0E00               	movlw	0
 38049  01874A  BE33               	btfsc	(btemp+9)^0,7,c
 38050  01874C  0EFF               	movlw	255
 38051  01874E  6E34               	movwf	(btemp+10)^0,c
 38052  018750  6E35               	movwf	(btemp+11)^0,c
 38053  018752  0060  F0CB  FFE6   	movff	btemp+8,postinc1
 38054  018758  0060  F0CF  FFE6   	movff	btemp+9,postinc1
 38055  01875E  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 38056  018764  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 38057  01876A  0E01               	movlw	1
 38058  01876C  6EE6               	movwf	postinc1,c
 38059  01876E  EC6F  F0E9         	call	___xxtofl	;wreg free
 38060  018772  0060  F0AB  FFE6   	movff	btemp,postinc1
 38061  018778  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 38062  01877E  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 38063  018784  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 38064                           
 38065                           ;stkvar	_chan @ sp[(-8)+-1]
 38066  01878A  0EF7               	movlw	-9
 38067  01878C  50E3               	movf	plusw1,w,c
 38068  01878E  6EE6               	movwf	postinc1,c
 38069  018790  EC05  F012         	call	_get_raw_result	;wreg free
 38070  018794  0060  F0A8  F034   	movff	btemp,btemp+10
 38071  01879A  0060  F0AC  F035   	movff	btemp+1,btemp+11
 38072  0187A0  5034               	movf	(btemp+10)^0,w,c
 38073  0187A2  6E2E               	movwf	(btemp+4)^0,c
 38074  0187A4  5035               	movf	(btemp+11)^0,w,c
 38075  0187A6  6E2F               	movwf	(btemp+5)^0,c
 38076  0187A8  6A30               	clrf	(btemp+6)^0,c
 38077  0187AA  6A31               	clrf	(btemp+7)^0,c
 38078  0187AC  0060  F0BB  FFE6   	movff	btemp+4,postinc1
 38079  0187B2  0060  F0BF  FFE6   	movff	btemp+5,postinc1
 38080  0187B8  0060  F0C3  FFE6   	movff	btemp+6,postinc1
 38081  0187BE  0060  F0C7  FFE6   	movff	btemp+7,postinc1
 38082  0187C4  0E00               	movlw	0
 38083  0187C6  6EE6               	movwf	postinc1,c
 38084  0187C8  EC6F  F0E9         	call	___xxtofl	;wreg free
 38085  0187CC  0060  F0AB  FFE6   	movff	btemp,postinc1
 38086  0187D2  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 38087  0187D8  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 38088  0187DE  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 38089  0187E4  EC54  F00D         	call	___flsub	;wreg free
 38090  0187E8  0060  F0AB  FFE6   	movff	btemp,postinc1
 38091  0187EE  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 38092  0187F4  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 38093  0187FA  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 38094  018800  EC4D  F0B2         	call	___flmul	;wreg free
 38095  018804  D13E               	goto	l1977
 38096  018806                     l12262:
 38097                           
 38098                           ;daq.c: 150:    if (0b0000100000000000 >> chan & 0x1) {
 38099                           ;stkvar	_chan @ sp[(0)+-1]
 38100  018806  0EFF               	movlw	-1
 38101  018808  006F FF8C  F035    	movff	plusw1,btemp+11
 38102  01880E  0E00               	movlw	0
 38103  018810  6E32               	movwf	(btemp+8)^0,c
 38104  018812  0E08               	movlw	8
 38105  018814  6E33               	movwf	(btemp+9)^0,c
 38106  018816  2A35               	incf	(btemp+11)^0,f,c
 38107  018818  D003               	goto	u11614
 38108  01881A                     u11615:
 38109  01881A  3433               	rlcf	(btemp+9)^0,w,c
 38110  01881C  3233               	rrcf	(btemp+9)^0,f,c
 38111  01881E  3232               	rrcf	(btemp+8)^0,f,c
 38112  018820                     u11614:
 38113  018820  2E35               	decfsz	(btemp+11)^0,f,c
 38114  018822  D7FB               	goto	u11615
 38115  018824  A032               	btfss	(btemp+8)^0,0,c
 38116  018826  D008               	goto	l12270
 38117                           
 38118                           ;daq.c: 151:     return 25.0;
 38119  018828  0E00               	movlw	0
 38120  01882A  6E2A               	movwf	btemp^0,c
 38121  01882C  0E00               	movlw	0
 38122  01882E  6E2B               	movwf	(btemp+1)^0,c
 38123  018830  0EC8               	movlw	200
 38124  018832  6E2C               	movwf	(btemp+2)^0,c
 38125  018834  0E41               	movlw	65
 38126  018836  D113               	goto	L44
 38127  018838                     l12270:
 38128                           
 38129                           ;daq.c: 153:     return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
 38130  018838  0E00               	movlw	0
 38131  01883A  6EE6               	movwf	postinc1,c
 38132  01883C  0E00               	movlw	0
 38133  01883E  6EE6               	movwf	postinc1,c
 38134  018840  0E7A               	movlw	122
 38135  018842  6EE6               	movwf	postinc1,c
 38136  018844  0E44               	movlw	68
 38137  018846  6EE6               	movwf	postinc1,c
 38138  018848  0E61               	movlw	97
 38139  01884A  6EE6               	movwf	postinc1,c
 38140  01884C  0E03               	movlw	3
 38141  01884E  6EE6               	movwf	postinc1,c
 38142  018850  0E84               	movlw	132
 38143  018852  6EE6               	movwf	postinc1,c
 38144  018854  0E40               	movlw	64
 38145  018856  6EE6               	movwf	postinc1,c
 38146                           
 38147                           ;stkvar	_chan @ sp[(-8)+-1]
 38148  018858  0EF7               	movlw	-9
 38149  01885A  50E3               	movf	plusw1,w,c
 38150  01885C  6EE6               	movwf	postinc1,c
 38151  01885E  EC05  F012         	call	_get_raw_result	;wreg free
 38152  018862  0060  F0A8  F034   	movff	btemp,btemp+10
 38153  018868  0060  F0AC  F035   	movff	btemp+1,btemp+11
 38154  01886E  5034               	movf	(btemp+10)^0,w,c
 38155  018870  6E2E               	movwf	(btemp+4)^0,c
 38156  018872  5035               	movf	(btemp+11)^0,w,c
 38157  018874  6E2F               	movwf	(btemp+5)^0,c
 38158  018876  6A30               	clrf	(btemp+6)^0,c
 38159  018878  6A31               	clrf	(btemp+7)^0,c
 38160  01887A  0060  F0BB  FFE6   	movff	btemp+4,postinc1
 38161  018880  0060  F0BF  FFE6   	movff	btemp+5,postinc1
 38162  018886  0060  F0C3  FFE6   	movff	btemp+6,postinc1
 38163  01888C  0060  F0C7  FFE6   	movff	btemp+7,postinc1
 38164  018892  0E00               	movlw	0
 38165  018894  6EE6               	movwf	postinc1,c
 38166  018896  EC6F  F0E9         	call	___xxtofl	;wreg free
 38167  01889A  0060  F0AB  FFE6   	movff	btemp,postinc1
 38168  0188A0  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 38169  0188A6  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 38170  0188AC  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 38171  0188B2  EC4D  F0B2         	call	___flmul	;wreg free
 38172  0188B6  0060  F0AB  FFE6   	movff	btemp,postinc1
 38173  0188BC  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 38174  0188C2  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 38175  0188C8  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 38176  0188CE  EC9E  F0BD         	call	___fldiv	;wreg free
 38177  0188D2  D0D7               	goto	l1977
 38178  0188D4                     l12274:
 38179                           
 38180                           ;daq.c: 158:   if (0b0000000000000011 >> chan & 0x1 || 0b0000100000000000 >> chan & 0x1)
 38181                           ;stkvar	_chan @ sp[(0)+-1]
 38182  0188D4  0EFF               	movlw	-1
 38183  0188D6  006F FF8C  F035    	movff	plusw1,btemp+11
 38184  0188DC  0E03               	movlw	3
 38185  0188DE  6E32               	movwf	(btemp+8)^0,c
 38186  0188E0  0E00               	movlw	0
 38187  0188E2  6E33               	movwf	(btemp+9)^0,c
 38188  0188E4  2A35               	incf	(btemp+11)^0,f,c
 38189  0188E6  D003               	goto	u11634
 38190  0188E8                     u11635:
 38191  0188E8  3433               	rlcf	(btemp+9)^0,w,c
 38192  0188EA  3233               	rrcf	(btemp+9)^0,f,c
 38193  0188EC  3232               	rrcf	(btemp+8)^0,f,c
 38194  0188EE                     u11634:
 38195  0188EE  2E35               	decfsz	(btemp+11)^0,f,c
 38196  0188F0  D7FB               	goto	u11635
 38197  0188F2  B032               	btfsc	(btemp+8)^0,0,c
 38198  0188F4  D011               	goto	u11660
 38199                           
 38200                           ;stkvar	_chan @ sp[(0)+-1]
 38201  0188F6  0EFF               	movlw	-1
 38202  0188F8  006F FF8C  F035    	movff	plusw1,btemp+11
 38203  0188FE  0E00               	movlw	0
 38204  018900  6E32               	movwf	(btemp+8)^0,c
 38205  018902  0E08               	movlw	8
 38206  018904  6E33               	movwf	(btemp+9)^0,c
 38207  018906  2A35               	incf	(btemp+11)^0,f,c
 38208  018908  D003               	goto	u11654
 38209  01890A                     u11655:
 38210  01890A  3433               	rlcf	(btemp+9)^0,w,c
 38211  01890C  3233               	rrcf	(btemp+9)^0,f,c
 38212  01890E  3232               	rrcf	(btemp+8)^0,f,c
 38213  018910                     u11654:
 38214  018910  2E35               	decfsz	(btemp+11)^0,f,c
 38215  018912  D7FB               	goto	u11655
 38216  018914  A032               	btfss	(btemp+8)^0,0,c
 38217  018916  D04E               	goto	l12282
 38218  018918                     u11660:
 38219                           
 38220                           ;daq.c: 159:    return((float) get_raw_result(chan) * 0.6250000) / 1000.0;
 38221  018918  0E00               	movlw	0
 38222  01891A  6EE6               	movwf	postinc1,c
 38223  01891C  0E00               	movlw	0
 38224  01891E  6EE6               	movwf	postinc1,c
 38225  018920  0E7A               	movlw	122
 38226  018922  6EE6               	movwf	postinc1,c
 38227  018924  0E44               	movlw	68
 38228  018926  6EE6               	movwf	postinc1,c
 38229  018928  0E00               	movlw	0
 38230  01892A  6EE6               	movwf	postinc1,c
 38231  01892C  0E00               	movlw	0
 38232  01892E  6EE6               	movwf	postinc1,c
 38233  018930  0E20               	movlw	32
 38234  018932  6EE6               	movwf	postinc1,c
 38235  018934  0E3F               	movlw	63
 38236  018936  6EE6               	movwf	postinc1,c
 38237                           
 38238                           ;stkvar	_chan @ sp[(-8)+-1]
 38239  018938  0EF7               	movlw	-9
 38240  01893A  50E3               	movf	plusw1,w,c
 38241  01893C  6EE6               	movwf	postinc1,c
 38242  01893E  EC05  F012         	call	_get_raw_result	;wreg free
 38243  018942  0060  F0A8  F034   	movff	btemp,btemp+10
 38244  018948  0060  F0AC  F035   	movff	btemp+1,btemp+11
 38245  01894E  5034               	movf	(btemp+10)^0,w,c
 38246  018950  6E2E               	movwf	(btemp+4)^0,c
 38247  018952  5035               	movf	(btemp+11)^0,w,c
 38248  018954  6E2F               	movwf	(btemp+5)^0,c
 38249  018956  6A30               	clrf	(btemp+6)^0,c
 38250  018958  6A31               	clrf	(btemp+7)^0,c
 38251  01895A  0060  F0BB  FFE6   	movff	btemp+4,postinc1
 38252  018960  0060  F0BF  FFE6   	movff	btemp+5,postinc1
 38253  018966  0060  F0C3  FFE6   	movff	btemp+6,postinc1
 38254  01896C  0060  F0C7  FFE6   	movff	btemp+7,postinc1
 38255  018972  0E00               	movlw	0
 38256  018974  6EE6               	movwf	postinc1,c
 38257  018976  EC6F  F0E9         	call	___xxtofl	;wreg free
 38258  01897A  0060  F0AB  FFE6   	movff	btemp,postinc1
 38259  018980  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 38260  018986  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 38261  01898C  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 38262  018992  EC4D  F0B2         	call	___flmul	;wreg free
 38263  018996  0060  F0AB  FFE6   	movff	btemp,postinc1
 38264  01899C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 38265  0189A2  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 38266  0189A8  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 38267  0189AE  EC9E  F0BD         	call	___fldiv	;wreg free
 38268  0189B2  D067               	goto	l1977
 38269  0189B4                     l12282:
 38270                           
 38271                           ;daq.c: 161:   return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
 38272  0189B4  0E00               	movlw	0
 38273  0189B6  6EE6               	movwf	postinc1,c
 38274  0189B8  0E00               	movlw	0
 38275  0189BA  6EE6               	movwf	postinc1,c
 38276  0189BC  0E7A               	movlw	122
 38277  0189BE  6EE6               	movwf	postinc1,c
 38278  0189C0  0E44               	movlw	68
 38279  0189C2  6EE6               	movwf	postinc1,c
 38280  0189C4  0E61               	movlw	97
 38281  0189C6  6EE6               	movwf	postinc1,c
 38282  0189C8  0E03               	movlw	3
 38283  0189CA  6EE6               	movwf	postinc1,c
 38284  0189CC  0E84               	movlw	132
 38285  0189CE  6EE6               	movwf	postinc1,c
 38286  0189D0  0E40               	movlw	64
 38287  0189D2  6EE6               	movwf	postinc1,c
 38288                           
 38289                           ;stkvar	_chan @ sp[(-8)+-1]
 38290  0189D4  0EF7               	movlw	-9
 38291  0189D6  50E3               	movf	plusw1,w,c
 38292  0189D8  6EE6               	movwf	postinc1,c
 38293  0189DA  EC05  F012         	call	_get_raw_result	;wreg free
 38294  0189DE  0060  F0A8  F034   	movff	btemp,btemp+10
 38295  0189E4  0060  F0AC  F035   	movff	btemp+1,btemp+11
 38296  0189EA  5034               	movf	(btemp+10)^0,w,c
 38297  0189EC  6E2E               	movwf	(btemp+4)^0,c
 38298  0189EE  5035               	movf	(btemp+11)^0,w,c
 38299  0189F0  6E2F               	movwf	(btemp+5)^0,c
 38300  0189F2  6A30               	clrf	(btemp+6)^0,c
 38301  0189F4  6A31               	clrf	(btemp+7)^0,c
 38302  0189F6  0060  F0BB  FFE6   	movff	btemp+4,postinc1
 38303  0189FC  0060  F0BF  FFE6   	movff	btemp+5,postinc1
 38304  018A02  0060  F0C3  FFE6   	movff	btemp+6,postinc1
 38305  018A08  0060  F0C7  FFE6   	movff	btemp+7,postinc1
 38306  018A0E  0E00               	movlw	0
 38307  018A10  6EE6               	movwf	postinc1,c
 38308  018A12  EC6F  F0E9         	call	___xxtofl	;wreg free
 38309  018A16  0060  F0AB  FFE6   	movff	btemp,postinc1
 38310  018A1C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 38311  018A22  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 38312  018A28  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 38313  018A2E  EC4D  F0B2         	call	___flmul	;wreg free
 38314  018A32  0060  F0AB  FFE6   	movff	btemp,postinc1
 38315  018A38  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 38316  018A3E  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 38317  018A44  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 38318  018A4A  EC9E  F0BD         	call	___fldiv	;wreg free
 38319  018A4E  D019               	goto	l1977
 38320  018A50                     l12288:
 38321                           
 38322                           ;daq.c: 164:   return 0.0;
 38323  018A50  0E00               	movlw	0
 38324  018A52  6E2A               	movwf	btemp^0,c
 38325  018A54  0E00               	movlw	0
 38326  018A56  6E2B               	movwf	(btemp+1)^0,c
 38327  018A58  0E00               	movlw	0
 38328  018A5A  6E2C               	movwf	(btemp+2)^0,c
 38329  018A5C  0E00               	movlw	0
 38330  018A5E                     L44:
 38331  018A5E  6E2D               	movwf	(btemp+3)^0,c
 38332  018A60  D010               	goto	l1977
 38333  018A62                     l12296:
 38334                           
 38335                           ;stkvar	_to_what @ sp[(0)+-2]
 38336  018A62  0EFE               	movlw	-2
 38337  018A64  50E3               	movf	plusw1,w,c
 38338  018A66  6E34               	movwf	(btemp+10)^0,c
 38339  018A68  6A35               	clrf	(btemp+11)^0,c
 38340                           
 38341                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 38342                           ; Switch size 1, requested type "simple"
 38343                           ; Number of cases is 1, Range of values is 0 to 0
 38344                           ; switch strategies available:
 38345                           ; Name         Instructions Cycles
 38346                           ; simple_byte            4     3 (average)
 38347                           ;	Chosen strategy is simple_byte
 38348  018A6A  5035               	movf	(btemp+11)^0,w,c
 38349  018A6C  0A00               	xorlw	0	; case 0
 38350  018A6E  A4D8               	btfss	status,2,c
 38351  018A70  D7EF               	goto	l12288
 38352                           
 38353                           ; Switch size 1, requested type "simple"
 38354                           ; Number of cases is 2, Range of values is 0 to 1
 38355                           ; switch strategies available:
 38356                           ; Name         Instructions Cycles
 38357                           ; simple_byte            7     4 (average)
 38358                           ;	Chosen strategy is simple_byte
 38359  018A72  5034               	movf	(btemp+10)^0,w,c
 38360  018A74  0A00               	xorlw	0	; case 0
 38361  018A76  B4D8               	btfsc	status,2,c
 38362  018A78  D5AA               	goto	l12242
 38363  018A7A  0A01               	xorlw	1	; case 1
 38364  018A7C  B4D8               	btfsc	status,2,c
 38365  018A7E  D72A               	goto	l12274
 38366  018A80  D7E7               	goto	l12288
 38367  018A82                     l1977:
 38368                           
 38369                           ; _conv_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 38370  018A82  52E5               	movf	postdec1,f,c
 38371  018A84  52E5               	movf	postdec1,f,c
 38372  018A86  0012               	return		;funcret
 38373  018A88                     __end_of_conv_raw_result:
 38374                           	opt callstack 0
 38375                           
 38376 ;; *************** function _nanf *****************
 38377 ;; Defined at:
 38378 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nanf.c"
 38379 ;; Parameters:    Size  Location     Type
 38380 ;;  s               2  [STACK] PTR const unsigned char 
 38381 ;;		 -> STR_129(1), STR_89(1), 
 38382 ;; Auto vars:     Size  Location     Type
 38383 ;;  u               4  [STACK] struct .
 38384 ;; Return value:  Size  Location     Type
 38385 ;;                  4  [STACK] float 
 38386 ;; Registers used:
 38387 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
 38388 ;; Tracked objects:
 38389 ;;		On entry : 0/0
 38390 ;;		On exit  : 0/0
 38391 ;;		Unchanged: 0/0
 38392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38393 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38394 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38395 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38396 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38397 ;;Total ram usage:        0 bytes
 38398 ;; Hardware stack levels used:    1
 38399 ;; Hardware stack levels required when called:   15
 38400 ;; This function calls:
 38401 ;;		Nothing
 38402 ;; This function is called by:
 38403 ;;		_conv_raw_result
 38404 ;; This function uses a reentrant model
 38405 ;;
 38406                           
 38407                           	psect	text143
 38408  001538                     __ptext143:
 38409                           	opt callstack 0
 38410  001538                     _nanf:
 38411                           	opt callstack 0
 38412                           
 38413                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38414  001538  52E6               	movf	postinc1,f,c
 38415  00153A  52E6               	movf	postinc1,f,c
 38416  00153C  52E6               	movf	postinc1,f,c
 38417  00153E  52E6               	movf	postinc1,f,c
 38418                           
 38419                           ;incstack = 0
 38420 ;; hardware stack exceeded
 38421  001540  0EFF               	movlw	255
 38422  001542  6E32               	movwf	(btemp+8)^0,c
 38423  001544  0EFF               	movlw	255
 38424  001546  6E33               	movwf	(btemp+9)^0,c
 38425  001548  0EFF               	movlw	255
 38426  00154A  6E34               	movwf	(btemp+10)^0,c
 38427  00154C  0E7F               	movlw	127
 38428  00154E  6E35               	movwf	(btemp+11)^0,c
 38429                           
 38430                           ;stkvar	_u @ sp[(-4)+0]
 38431  001550  0EFC               	movlw	-4
 38432  001552  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 38433  001558  0EFD               	movlw	-3
 38434  00155A  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 38435  001560  0EFE               	movlw	-2
 38436  001562  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 38437  001568  0EFF               	movlw	-1
 38438  00156A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 38439                           
 38440                           ;stkvar	_u @ sp[(-4)+0]
 38441  001570  0EFC               	movlw	-4
 38442  001572  006F FF8C  F02A    	movff	plusw1,btemp
 38443  001578  0EFD               	movlw	-3
 38444  00157A  006F FF8C  F02B    	movff	plusw1,btemp+1
 38445  001580  0EFE               	movlw	-2
 38446  001582  006F FF8C  F02C    	movff	plusw1,btemp+2
 38447  001588  0EFF               	movlw	-1
 38448  00158A  006F FF8C  F02D    	movff	plusw1,btemp+3
 38449                           
 38450                           ; _nanf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 38451  001590  0EFA               	movlw	250
 38452  001592  26E1               	addwf	fsr1l,f,c
 38453  001594  0EFF               	movlw	255
 38454  001596  22E2               	addwfc	fsr1h,f,c
 38455  001598  0012               	return		;funcret
 38456  00159A                     __end_of_nanf:
 38457                           	opt callstack 0
 38458                           
 38459 ;; *************** function _get_raw_result *****************
 38460 ;; Defined at:
 38461 ;;		line 127 in file "daq.c"
 38462 ;; Parameters:    Size  Location     Type
 38463 ;;  index           1  [STACK] const enum E16605
 38464 ;; Auto vars:     Size  Location     Type
 38465 ;;		None
 38466 ;; Return value:  Size  Location     Type
 38467 ;;                  2  [STACK] unsigned short 
 38468 ;; Registers used:
 38469 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, prodl, prodh
 38470 ;; Tracked objects:
 38471 ;;		On entry : 0/2
 38472 ;;		On exit  : 0/0
 38473 ;;		Unchanged: 0/0
 38474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38476 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38478 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38479 ;;Total ram usage:        0 bytes
 38480 ;; Hardware stack levels used:    1
 38481 ;; Hardware stack levels required when called:   15
 38482 ;; This function calls:
 38483 ;;		Nothing
 38484 ;; This function is called by:
 38485 ;;		_main
 38486 ;;		_current_sensor_cal
 38487 ;;		_conv_raw_result
 38488 ;; This function uses a reentrant model
 38489 ;;
 38490                           
 38491                           	psect	text144
 38492  00240A                     __ptext144:
 38493                           	opt callstack 0
 38494  00240A                     _get_raw_result:
 38495                           	opt callstack 0
 38496                           
 38497                           ;daq.c: 127: adc_result_t get_raw_result(const adcc_channel_t index);daq.c: 128: {;daq.c
      +                          : 129:  return R.raw_adc[index];
 38498                           ;stkvar	_index @ sp[(0)+-1]
 38499                           
 38500                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38501                           ;incstack = 0
 38502 ;; hardware stack exceeded
 38503  00240A  0EFF               	movlw	-1
 38504  00240C  50E3               	movf	plusw1,w,c
 38505  00240E  0D02               	mullw	2
 38506  002410  0E00               	movlw	low _R
 38507  002412  24F3               	addwf	243,w,c
 38508  002414  6ED9               	movwf	fsr2l,c
 38509  002416  0E01               	movlw	high _R
 38510  002418  20F4               	addwfc	prodh,w,c
 38511  00241A  6EDA               	movwf	fsr2h,c
 38512  00241C  006F FF78  F02A    	movff	postinc2,btemp
 38513  002422  006F FF74  F02B    	movff	postdec2,btemp+1
 38514                           
 38515                           ; _get_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1
      +                          , argsize = 1, vargsize = 0
 38516  002428  52E5               	movf	postdec1,f,c
 38517  00242A  0012               	return		;funcret
 38518  00242C                     __end_of_get_raw_result:
 38519                           	opt callstack 0
 38520                           
 38521 ;; *************** function ___xxtofl *****************
 38522 ;; Defined at:
 38523 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/xxtofl.c"
 38524 ;; Parameters:    Size  Location     Type
 38525 ;;  sign            1  [STACK] unsigned char 
 38526 ;;  val             4  [STACK] long 
 38527 ;; Auto vars:     Size  Location     Type
 38528 ;;  arg             4  [STACK] unsigned long 
 38529 ;;  exp             1  [STACK] unsigned char 
 38530 ;; Return value:  Size  Location     Type
 38531 ;;                  4  [STACK] unsigned char 
 38532 ;; Registers used:
 38533 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 38534 ;; Tracked objects:
 38535 ;;		On entry : 0/1
 38536 ;;		On exit  : 0/0
 38537 ;;		Unchanged: 0/0
 38538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38539 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38540 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38541 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38542 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38543 ;;Total ram usage:        0 bytes
 38544 ;; Hardware stack levels used:    1
 38545 ;; Hardware stack levels required when called:   15
 38546 ;; This function calls:
 38547 ;;		Nothing
 38548 ;; This function is called by:
 38549 ;;		_conv_raw_result
 38550 ;;		_init_bsoc
 38551 ;; This function uses a reentrant model
 38552 ;;
 38553                           
 38554                           	psect	text145
 38555  01D2DE                     __ptext145:
 38556                           	opt callstack 0
 38557  01D2DE                     ___xxtofl:
 38558                           	opt callstack 0
 38559                           
 38560                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38561  01D2DE  0E05               	movlw	5
 38562  01D2E0  26E1               	addwf	fsr1l,f,c
 38563  01D2E2  0E00               	movlw	0
 38564  01D2E4  22E2               	addwfc	fsr1h,f,c
 38565                           
 38566                           ;stkvar	_sign @ sp[(-5)+-1]
 38567                           
 38568                           ;incstack = 0
 38569 ;; hardware stack exceeded
 38570  01D2E6  0EFA               	movlw	-6
 38571  01D2E8  50E3               	movf	plusw1,w,c
 38572  01D2EA  B4D8               	btfsc	status,2,c
 38573  01D2EC  D01D               	goto	l11978
 38574                           
 38575                           ;stkvar	_val @ sp[(-5)+-5]
 38576  01D2EE  0EF9               	movlw	-7
 38577  01D2F0  AEE3               	btfss	plusw1,7,c
 38578  01D2F2  D01A               	goto	l11978
 38579                           
 38580                           ;stkvar	_val @ sp[(-5)+-5]
 38581  01D2F4  0EF6               	movlw	-10
 38582  01D2F6  006F FF8C  F032    	movff	plusw1,btemp+8
 38583  01D2FC  0EF7               	movlw	-9
 38584  01D2FE  006F FF8C  F033    	movff	plusw1,btemp+9
 38585  01D304  0EF8               	movlw	-8
 38586  01D306  006F FF8C  F034    	movff	plusw1,btemp+10
 38587  01D30C  0EF9               	movlw	-7
 38588  01D30E  006F FF8C  F035    	movff	plusw1,btemp+11
 38589  01D314  1E32               	comf	(btemp+8)^0,f,c
 38590  01D316  1E33               	comf	(btemp+9)^0,f,c
 38591  01D318  1E34               	comf	(btemp+10)^0,f,c
 38592  01D31A  1E35               	comf	(btemp+11)^0,f,c
 38593  01D31C  2A32               	incf	(btemp+8)^0,f,c
 38594  01D31E  0E00               	movlw	0
 38595  01D320  2233               	addwfc	(btemp+9)^0,f,c
 38596  01D322  2234               	addwfc	(btemp+10)^0,f,c
 38597  01D324  2235               	addwfc	(btemp+11)^0,f,c
 38598  01D326  D010               	goto	L45
 38599  01D328                     l11978:
 38600                           
 38601                           ;stkvar	_val @ sp[(-5)+-5]
 38602  01D328  0EF6               	movlw	-10
 38603  01D32A  006F FF8C  F032    	movff	plusw1,btemp+8
 38604  01D330  0EF7               	movlw	-9
 38605  01D332  006F FF8C  F033    	movff	plusw1,btemp+9
 38606  01D338  0EF8               	movlw	-8
 38607  01D33A  006F FF8C  F034    	movff	plusw1,btemp+10
 38608  01D340  0EF9               	movlw	-7
 38609  01D342  006F FF8C  F035    	movff	plusw1,btemp+11
 38610  01D348                     L45:
 38611                           
 38612                           ;stkvar	_arg @ sp[(-5)+0]
 38613  01D348  0EFB               	movlw	-5
 38614  01D34A  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 38615  01D350  0EFC               	movlw	-4
 38616  01D352  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 38617  01D358  0EFD               	movlw	-3
 38618  01D35A  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 38619  01D360  0EFE               	movlw	-2
 38620  01D362  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 38621                           
 38622                           ;stkvar	_val @ sp[(-5)+-5]
 38623  01D368  0EF6               	movlw	-10
 38624  01D36A  50E3               	movf	plusw1,w,c
 38625  01D36C  E113               	bnz	l11986
 38626  01D36E  0EF7               	movlw	-9
 38627  01D370  50E3               	movf	plusw1,w,c
 38628  01D372  E110               	bnz	l11986
 38629  01D374  0EF8               	movlw	-8
 38630  01D376  50E3               	movf	plusw1,w,c
 38631  01D378  E10D               	bnz	l11986
 38632  01D37A  0EF9               	movlw	-7
 38633  01D37C  50E3               	movf	plusw1,w,c
 38634  01D37E  A4D8               	btfss	status,2,c
 38635  01D380  D009               	goto	l11986
 38636  01D382  0E00               	movlw	0
 38637  01D384  6E2A               	movwf	btemp^0,c
 38638  01D386  0E00               	movlw	0
 38639  01D388  6E2B               	movwf	(btemp+1)^0,c
 38640  01D38A  0E00               	movlw	0
 38641  01D38C  6E2C               	movwf	(btemp+2)^0,c
 38642  01D38E  0E00               	movlw	0
 38643  01D390  6E2D               	movwf	(btemp+3)^0,c
 38644  01D392  D0A2               	goto	l3380
 38645  01D394                     l11986:
 38646  01D394  0E96               	movlw	150
 38647  01D396  6E35               	movwf	(btemp+11)^0,c
 38648                           
 38649                           ;stkvar	_exp @ sp[(-5)+4]
 38650  01D398  0EFF               	movlw	-1
 38651  01D39A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 38652  01D3A0  D00B               	goto	l11990
 38653  01D3A2                     l11988:
 38654                           
 38655                           ;stkvar	_exp @ sp[(-5)+4]
 38656  01D3A2  0EFF               	movlw	-1
 38657  01D3A4  2AE3               	incf	plusw1,f,c
 38658                           
 38659                           ;stkvar	_arg @ sp[(-5)+0]
 38660  01D3A6  90D8               	bcf	status,0,c
 38661  01D3A8  0EFE               	movlw	-2
 38662  01D3AA  32E3               	rrcf	plusw1,f,c
 38663  01D3AC  0EFD               	movlw	-3
 38664  01D3AE  32E3               	rrcf	plusw1,f,c
 38665  01D3B0  0EFC               	movlw	-4
 38666  01D3B2  32E3               	rrcf	plusw1,f,c
 38667  01D3B4  0EFB               	movlw	-5
 38668  01D3B6  32E3               	rrcf	plusw1,f,c
 38669  01D3B8                     l11990:
 38670                           
 38671                           ;stkvar	_arg @ sp[(-5)+0]
 38672  01D3B8  50E1               	movf	fsr1l,w,c
 38673  01D3BA  0FFB               	addlw	-5
 38674  01D3BC  6ED9               	movwf	fsr2l,c
 38675  01D3BE  50E2               	movf	fsr1h,w,c
 38676  01D3C0  6EDA               	movwf	fsr2h,c
 38677  01D3C2  0EFF               	movlw	255
 38678  01D3C4  22DA               	addwfc	fsr2h,f,c
 38679  01D3C6  52DE               	movf	postinc2,f,c
 38680  01D3C8  52DE               	movf	postinc2,f,c
 38681  01D3CA  52DE               	movf	postinc2,f,c
 38682  01D3CC  0EFE               	movlw	254
 38683  01D3CE  14DD               	andwf	postdec2,w,c
 38684  01D3D0  B4D8               	btfsc	status,2,c
 38685  01D3D2  D018               	goto	l11998
 38686  01D3D4  D7E6               	goto	l11988
 38687  01D3D6                     l11992:
 38688                           
 38689                           ;stkvar	_exp @ sp[(-5)+4]
 38690  01D3D6  0EFF               	movlw	-1
 38691  01D3D8  2AE3               	incf	plusw1,f,c
 38692                           
 38693                           ;stkvar	_arg @ sp[(-5)+0]
 38694  01D3DA  50E1               	movf	fsr1l,w,c
 38695  01D3DC  0FFB               	addlw	-5
 38696  01D3DE  6ED9               	movwf	fsr2l,c
 38697  01D3E0  50E2               	movf	fsr1h,w,c
 38698  01D3E2  6EDA               	movwf	fsr2h,c
 38699  01D3E4  0EFF               	movlw	255
 38700  01D3E6  22DA               	addwfc	fsr2h,f,c
 38701  01D3E8  2ADE               	incf	postinc2,f,c
 38702  01D3EA  0E00               	movlw	0
 38703  01D3EC  22DE               	addwfc	postinc2,f,c
 38704  01D3EE  22DE               	addwfc	postinc2,f,c
 38705  01D3F0  22DE               	addwfc	postinc2,f,c
 38706                           
 38707                           ;stkvar	_arg @ sp[(-5)+0]
 38708  01D3F2  90D8               	bcf	status,0,c
 38709  01D3F4  0EFE               	movlw	-2
 38710  01D3F6  32E3               	rrcf	plusw1,f,c
 38711  01D3F8  0EFD               	movlw	-3
 38712  01D3FA  32E3               	rrcf	plusw1,f,c
 38713  01D3FC  0EFC               	movlw	-4
 38714  01D3FE  32E3               	rrcf	plusw1,f,c
 38715  01D400  0EFB               	movlw	-5
 38716  01D402  32E3               	rrcf	plusw1,f,c
 38717  01D404                     l11998:
 38718                           
 38719                           ;stkvar	_arg @ sp[(-5)+0]
 38720  01D404  50E1               	movf	fsr1l,w,c
 38721  01D406  0FFB               	addlw	-5
 38722  01D408  6ED9               	movwf	fsr2l,c
 38723  01D40A  50E2               	movf	fsr1h,w,c
 38724  01D40C  6EDA               	movwf	fsr2h,c
 38725  01D40E  0EFF               	movlw	255
 38726  01D410  22DA               	addwfc	fsr2h,f,c
 38727  01D412  52DE               	movf	postinc2,f,c
 38728  01D414  52DE               	movf	postinc2,f,c
 38729  01D416  52DE               	movf	postinc2,f,c
 38730  01D418  0EFF               	movlw	255
 38731  01D41A  14DD               	andwf	postdec2,w,c
 38732  01D41C  B4D8               	btfsc	status,2,c
 38733  01D41E  D00C               	goto	l12002
 38734  01D420  D7DA               	goto	l11992
 38735  01D422                     l12000:
 38736                           
 38737                           ;stkvar	_exp @ sp[(-5)+4]
 38738  01D422  0EFF               	movlw	-1
 38739  01D424  06E3               	decf	plusw1,f,c
 38740                           
 38741                           ;stkvar	_arg @ sp[(-5)+0]
 38742  01D426  90D8               	bcf	status,0,c
 38743  01D428  0EFB               	movlw	-5
 38744  01D42A  36E3               	rlcf	plusw1,f,c
 38745  01D42C  0EFC               	movlw	-4
 38746  01D42E  36E3               	rlcf	plusw1,f,c
 38747  01D430  0EFD               	movlw	-3
 38748  01D432  36E3               	rlcf	plusw1,f,c
 38749  01D434  0EFE               	movlw	-2
 38750  01D436  36E3               	rlcf	plusw1,f,c
 38751  01D438                     l12002:
 38752                           
 38753                           ;stkvar	_arg @ sp[(-5)+0]
 38754  01D438  0EFD               	movlw	-3
 38755  01D43A  BEE3               	btfsc	plusw1,7,c
 38756  01D43C  D007               	goto	u11330
 38757                           
 38758                           ;stkvar	_exp @ sp[(-5)+4]
 38759  01D43E  0EFF               	movlw	-1
 38760  01D440  006F FF8C  F02A    	movff	plusw1,btemp
 38761  01D446  0E02               	movlw	2
 38762  01D448  602A               	cpfslt	btemp^0,c
 38763  01D44A  D7EB               	goto	l12000
 38764  01D44C                     u11330:
 38765                           
 38766                           ;stkvar	_exp @ sp[(-5)+4]
 38767  01D44C  0EFF               	movlw	-1
 38768  01D44E  B0E3               	btfsc	plusw1,0,c
 38769  01D450  D002               	goto	l12010
 38770                           
 38771                           ;stkvar	_arg @ sp[(-5)+0]
 38772  01D452  0EFD               	movlw	-3
 38773  01D454  9EE3               	bcf	plusw1,7,c
 38774  01D456                     l12010:
 38775                           
 38776                           ;stkvar	_exp @ sp[(-5)+4]
 38777  01D456  50E1               	movf	fsr1l,w,c
 38778  01D458  0FFF               	addlw	-1
 38779  01D45A  6ED9               	movwf	fsr2l,c
 38780  01D45C  50E2               	movf	fsr1h,w,c
 38781  01D45E  6EDA               	movwf	fsr2h,c
 38782  01D460  0EFF               	movlw	255
 38783  01D462  22DA               	addwfc	fsr2h,f,c
 38784  01D464  90D8               	bcf	status,0,c
 38785  01D466  32DF               	rrcf	indf2,f,c
 38786                           
 38787                           ;stkvar	_exp @ sp[(-5)+4]
 38788  01D468  0EFF               	movlw	-1
 38789  01D46A  006F FF8C  F035    	movff	plusw1,btemp+11
 38790  01D470  0060  F0D4  F02E   	movff	btemp+11,btemp+4
 38791  01D476  6A2F               	clrf	(btemp+5)^0,c
 38792  01D478  6A30               	clrf	(btemp+6)^0,c
 38793  01D47A  6A31               	clrf	(btemp+7)^0,c
 38794  01D47C  0060  F0B8  F031   	movff	btemp+4,btemp+7
 38795  01D482  6A30               	clrf	(btemp+6)^0,c
 38796  01D484  6A2F               	clrf	(btemp+5)^0,c
 38797  01D486  6A2E               	clrf	(btemp+4)^0,c
 38798                           
 38799                           ;stkvar	_arg @ sp[(-5)+0]
 38800  01D488  50E1               	movf	fsr1l,w,c
 38801  01D48A  0FFB               	addlw	-5
 38802  01D48C  6ED9               	movwf	fsr2l,c
 38803  01D48E  50E2               	movf	fsr1h,w,c
 38804  01D490  6EDA               	movwf	fsr2h,c
 38805  01D492  0EFF               	movlw	255
 38806  01D494  22DA               	addwfc	fsr2h,f,c
 38807  01D496  502E               	movf	(btemp+4)^0,w,c
 38808  01D498  12DE               	iorwf	postinc2,f,c
 38809  01D49A  502F               	movf	(btemp+5)^0,w,c
 38810  01D49C  12DE               	iorwf	postinc2,f,c
 38811  01D49E  5030               	movf	(btemp+6)^0,w,c
 38812  01D4A0  12DE               	iorwf	postinc2,f,c
 38813  01D4A2  5031               	movf	(btemp+7)^0,w,c
 38814  01D4A4  12DE               	iorwf	postinc2,f,c
 38815                           
 38816                           ;stkvar	_sign @ sp[(-5)+-1]
 38817  01D4A6  0EFA               	movlw	-6
 38818  01D4A8  50E3               	movf	plusw1,w,c
 38819  01D4AA  B4D8               	btfsc	status,2,c
 38820  01D4AC  D005               	goto	l12020
 38821                           
 38822                           ;stkvar	_val @ sp[(-5)+-5]
 38823  01D4AE  0EF9               	movlw	-7
 38824  01D4B0  AEE3               	btfss	plusw1,7,c
 38825  01D4B2  D002               	goto	l12020
 38826                           
 38827                           ;stkvar	_arg @ sp[(-5)+0]
 38828  01D4B4  0EFE               	movlw	-2
 38829  01D4B6  8EE3               	bsf	plusw1,7,c
 38830  01D4B8                     l12020:
 38831                           
 38832                           ;stkvar	_arg @ sp[(-5)+0]
 38833  01D4B8  0EFB               	movlw	-5
 38834  01D4BA  006F FF8C  F02A    	movff	plusw1,btemp
 38835  01D4C0  0EFC               	movlw	-4
 38836  01D4C2  006F FF8C  F02B    	movff	plusw1,btemp+1
 38837  01D4C8  0EFD               	movlw	-3
 38838  01D4CA  006F FF8C  F02C    	movff	plusw1,btemp+2
 38839  01D4D0  0EFE               	movlw	-2
 38840  01D4D2  006F FF8C  F02D    	movff	plusw1,btemp+3
 38841  01D4D8                     l3380:
 38842                           
 38843                           ; ___xxtofl: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, args
      +                          ize = 5, vargsize = 0
 38844  01D4D8  0EF6               	movlw	246
 38845  01D4DA  26E1               	addwf	fsr1l,f,c
 38846  01D4DC  0EFF               	movlw	255
 38847  01D4DE  22E2               	addwfc	fsr1h,f,c
 38848  01D4E0  0012               	return		;funcret
 38849  01D4E2                     __end_of___xxtofl:
 38850                           	opt callstack 0
 38851                           
 38852 ;; *************** function ___fldiv *****************
 38853 ;; Defined at:
 38854 ;;		line 11 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcdiv.c"
 38855 ;; Parameters:    Size  Location     Type
 38856 ;;  b               4  [STACK] unsigned char 
 38857 ;;  a               4  [STACK] unsigned char 
 38858 ;; Auto vars:     Size  Location     Type
 38859 ;;  grs             4  [STACK] unsigned long 
 38860 ;;  rem             4  [STACK] unsigned long 
 38861 ;;  new_exp         2  [STACK] short 
 38862 ;;  aexp            1  [STACK] unsigned char 
 38863 ;;  bexp            1  [STACK] unsigned char 
 38864 ;;  sign            1  [STACK] unsigned char 
 38865 ;; Return value:  Size  Location     Type
 38866 ;;                  4  [STACK] unsigned char 
 38867 ;; Registers used:
 38868 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 38869 ;; Tracked objects:
 38870 ;;		On entry : 0/0
 38871 ;;		On exit  : 0/0
 38872 ;;		Unchanged: 0/0
 38873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38874 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38875 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38877 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38878 ;;Total ram usage:        0 bytes
 38879 ;; Hardware stack levels used:    1
 38880 ;; Hardware stack levels required when called:   15
 38881 ;; This function calls:
 38882 ;;		Nothing
 38883 ;; This function is called by:
 38884 ;;		_conv_raw_result
 38885 ;;		_convert_dac_raw
 38886 ;;		_load_hist_data
 38887 ;;		_calc_bsoc
 38888 ;;		_init_bsoc
 38889 ;;		_esr_check
 38890 ;;		_efgtoa
 38891 ;; This function uses a reentrant model
 38892 ;;
 38893                           
 38894                           	psect	text146
 38895  017B3C                     __ptext146:
 38896                           	opt callstack 0
 38897  017B3C                     ___fldiv:
 38898                           	opt callstack 0
 38899                           
 38900                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 38901  017B3C  0E0D               	movlw	13
 38902  017B3E  26E1               	addwf	fsr1l,f,c
 38903  017B40  0E00               	movlw	0
 38904  017B42  22E2               	addwfc	fsr1h,f,c
 38905                           
 38906                           ;stkvar	_b @ sp[(-13)+-4]
 38907                           
 38908                           ;incstack = 0
 38909 ;; hardware stack exceeded
 38910  017B44  0EF2               	movlw	242
 38911  017B46  24E1               	addwf	fsr1l,w,c
 38912  017B48  6ED9               	movwf	fsr2l,c
 38913  017B4A  0EFF               	movlw	255
 38914  017B4C  20E2               	addwfc	fsr1h,w,c
 38915  017B4E  6EDA               	movwf	fsr2h,c
 38916  017B50  50DF               	movf	indf2,w,c
 38917  017B52  6E35               	movwf	(btemp+11)^0,c
 38918  017B54  0E80               	movlw	128
 38919  017B56  1635               	andwf	(btemp+11)^0,f,c
 38920                           
 38921                           ;stkvar	_sign @ sp[(-13)+12]
 38922  017B58  0EFF               	movlw	-1
 38923  017B5A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 38924                           
 38925                           ;stkvar	_b @ sp[(-13)+-4]
 38926  017B60  0EF2               	movlw	242
 38927  017B62  24E1               	addwf	fsr1l,w,c
 38928  017B64  6ED9               	movwf	fsr2l,c
 38929  017B66  0EFF               	movlw	255
 38930  017B68  20E2               	addwfc	fsr1h,w,c
 38931  017B6A  6EDA               	movwf	fsr2h,c
 38932  017B6C  50DF               	movf	indf2,w,c
 38933  017B6E  6E35               	movwf	(btemp+11)^0,c
 38934  017B70  90D8               	bcf	status,0,c
 38935  017B72  3435               	rlcf	(btemp+11)^0,w,c
 38936  017B74  6E34               	movwf	(btemp+10)^0,c
 38937                           
 38938                           ;stkvar	_bexp @ sp[(-13)+11]
 38939  017B76  0EFE               	movlw	-2
 38940  017B78  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 38941                           
 38942                           ;stkvar	_b @ sp[(-13)+-4]
 38943  017B7E  0EF1               	movlw	241
 38944  017B80  24E1               	addwf	fsr1l,w,c
 38945  017B82  6ED9               	movwf	fsr2l,c
 38946  017B84  0EFF               	movlw	255
 38947  017B86  20E2               	addwfc	fsr1h,w,c
 38948  017B88  6EDA               	movwf	fsr2h,c
 38949  017B8A  AEDF               	btfss	indf2,7,c
 38950  017B8C  D002               	goto	l10264
 38951                           
 38952                           ;stkvar	_bexp @ sp[(-13)+11]
 38953  017B8E  0EFE               	movlw	-2
 38954  017B90  80E3               	bsf	plusw1,0,c
 38955  017B92                     l10264:
 38956                           
 38957                           ;stkvar	_bexp @ sp[(-13)+11]
 38958  017B92  0EFE               	movlw	-2
 38959  017B94  50E3               	movf	plusw1,w,c
 38960  017B96  B4D8               	btfsc	status,2,c
 38961  017B98  D027               	goto	l10274
 38962                           
 38963                           ;stkvar	_bexp @ sp[(-13)+11]
 38964  017B9A  0EFE               	movlw	-2
 38965  017B9C  28E3               	incf	plusw1,w,c
 38966  017B9E  A4D8               	btfss	status,2,c
 38967  017BA0  D018               	goto	l10270
 38968  017BA2  0E00               	movlw	0
 38969  017BA4  6E32               	movwf	(btemp+8)^0,c
 38970  017BA6  0E00               	movlw	0
 38971  017BA8  6E33               	movwf	(btemp+9)^0,c
 38972  017BAA  0E00               	movlw	0
 38973  017BAC  6E34               	movwf	(btemp+10)^0,c
 38974  017BAE  0E00               	movlw	0
 38975  017BB0  6E35               	movwf	(btemp+11)^0,c
 38976                           
 38977                           ;stkvar	_b @ sp[(-13)+-4]
 38978  017BB2  0EEF               	movlw	-17
 38979  017BB4  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 38980  017BBA  0EF0               	movlw	-16
 38981  017BBC  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 38982  017BC2  0EF1               	movlw	-15
 38983  017BC4  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 38984  017BCA  0EF2               	movlw	-14
 38985  017BCC  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 38986  017BD2                     l10270:
 38987                           
 38988                           ;stkvar	_b @ sp[(-13)+-4]
 38989  017BD2  0EF1               	movlw	-15
 38990  017BD4  8EE3               	bsf	plusw1,7,c
 38991                           
 38992                           ;stkvar	_b @ sp[(-13)+-4]
 38993  017BD6  0EF2               	movlw	242
 38994  017BD8  24E1               	addwf	fsr1l,w,c
 38995  017BDA  6ED9               	movwf	fsr2l,c
 38996  017BDC  0EFF               	movlw	255
 38997  017BDE  20E2               	addwfc	fsr1h,w,c
 38998  017BE0  6EDA               	movwf	fsr2h,c
 38999  017BE2  0E00               	movlw	0
 39000  017BE4  6EDF               	movwf	indf2,c
 39001  017BE6  D018               	goto	l10276
 39002  017BE8                     l10274:
 39003  017BE8  0E00               	movlw	0
 39004  017BEA  6E32               	movwf	(btemp+8)^0,c
 39005  017BEC  0E00               	movlw	0
 39006  017BEE  6E33               	movwf	(btemp+9)^0,c
 39007  017BF0  0E00               	movlw	0
 39008  017BF2  6E34               	movwf	(btemp+10)^0,c
 39009  017BF4  0E00               	movlw	0
 39010  017BF6  6E35               	movwf	(btemp+11)^0,c
 39011                           
 39012                           ;stkvar	_b @ sp[(-13)+-4]
 39013  017BF8  0EEF               	movlw	-17
 39014  017BFA  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 39015  017C00  0EF0               	movlw	-16
 39016  017C02  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 39017  017C08  0EF1               	movlw	-15
 39018  017C0A  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 39019  017C10  0EF2               	movlw	-14
 39020  017C12  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 39021  017C18                     l10276:
 39022                           
 39023                           ;stkvar	_a @ sp[(-13)+-8]
 39024  017C18  0EEE               	movlw	238
 39025  017C1A  24E1               	addwf	fsr1l,w,c
 39026  017C1C  6ED9               	movwf	fsr2l,c
 39027  017C1E  0EFF               	movlw	255
 39028  017C20  20E2               	addwfc	fsr1h,w,c
 39029  017C22  6EDA               	movwf	fsr2h,c
 39030  017C24  50DF               	movf	indf2,w,c
 39031  017C26  6E35               	movwf	(btemp+11)^0,c
 39032  017C28  0E80               	movlw	128
 39033  017C2A  1635               	andwf	(btemp+11)^0,f,c
 39034                           
 39035                           ;stkvar	_sign @ sp[(-13)+12]
 39036  017C2C  50E1               	movf	fsr1l,w,c
 39037  017C2E  0FFF               	addlw	-1
 39038  017C30  6ED9               	movwf	fsr2l,c
 39039  017C32  50E2               	movf	fsr1h,w,c
 39040  017C34  6EDA               	movwf	fsr2h,c
 39041  017C36  0EFF               	movlw	255
 39042  017C38  22DA               	addwfc	fsr2h,f,c
 39043  017C3A  5035               	movf	(btemp+11)^0,w,c
 39044  017C3C  1ADF               	xorwf	indf2,f,c
 39045                           
 39046                           ;stkvar	_a @ sp[(-13)+-8]
 39047  017C3E  0EEE               	movlw	238
 39048  017C40  24E1               	addwf	fsr1l,w,c
 39049  017C42  6ED9               	movwf	fsr2l,c
 39050  017C44  0EFF               	movlw	255
 39051  017C46  20E2               	addwfc	fsr1h,w,c
 39052  017C48  6EDA               	movwf	fsr2h,c
 39053  017C4A  50DF               	movf	indf2,w,c
 39054  017C4C  6E35               	movwf	(btemp+11)^0,c
 39055  017C4E  90D8               	bcf	status,0,c
 39056  017C50  3435               	rlcf	(btemp+11)^0,w,c
 39057  017C52  6E34               	movwf	(btemp+10)^0,c
 39058                           
 39059                           ;stkvar	_aexp @ sp[(-13)+10]
 39060  017C54  0EFD               	movlw	-3
 39061  017C56  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 39062                           
 39063                           ;stkvar	_a @ sp[(-13)+-8]
 39064  017C5C  0EED               	movlw	237
 39065  017C5E  24E1               	addwf	fsr1l,w,c
 39066  017C60  6ED9               	movwf	fsr2l,c
 39067  017C62  0EFF               	movlw	255
 39068  017C64  20E2               	addwfc	fsr1h,w,c
 39069  017C66  6EDA               	movwf	fsr2h,c
 39070  017C68  AEDF               	btfss	indf2,7,c
 39071  017C6A  D002               	goto	l10284
 39072                           
 39073                           ;stkvar	_aexp @ sp[(-13)+10]
 39074  017C6C  0EFD               	movlw	-3
 39075  017C6E  80E3               	bsf	plusw1,0,c
 39076  017C70                     l10284:
 39077                           
 39078                           ;stkvar	_aexp @ sp[(-13)+10]
 39079  017C70  0EFD               	movlw	-3
 39080  017C72  50E3               	movf	plusw1,w,c
 39081  017C74  B4D8               	btfsc	status,2,c
 39082  017C76  D027               	goto	l10294
 39083                           
 39084                           ;stkvar	_aexp @ sp[(-13)+10]
 39085  017C78  0EFD               	movlw	-3
 39086  017C7A  28E3               	incf	plusw1,w,c
 39087  017C7C  A4D8               	btfss	status,2,c
 39088  017C7E  D018               	goto	l10290
 39089  017C80  0E00               	movlw	0
 39090  017C82  6E32               	movwf	(btemp+8)^0,c
 39091  017C84  0E00               	movlw	0
 39092  017C86  6E33               	movwf	(btemp+9)^0,c
 39093  017C88  0E00               	movlw	0
 39094  017C8A  6E34               	movwf	(btemp+10)^0,c
 39095  017C8C  0E00               	movlw	0
 39096  017C8E  6E35               	movwf	(btemp+11)^0,c
 39097                           
 39098                           ;stkvar	_a @ sp[(-13)+-8]
 39099  017C90  0EEB               	movlw	-21
 39100  017C92  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 39101  017C98  0EEC               	movlw	-20
 39102  017C9A  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 39103  017CA0  0EED               	movlw	-19
 39104  017CA2  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 39105  017CA8  0EEE               	movlw	-18
 39106  017CAA  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 39107  017CB0                     l10290:
 39108                           
 39109                           ;stkvar	_a @ sp[(-13)+-8]
 39110  017CB0  0EED               	movlw	-19
 39111  017CB2  8EE3               	bsf	plusw1,7,c
 39112                           
 39113                           ;stkvar	_a @ sp[(-13)+-8]
 39114  017CB4  0EEE               	movlw	238
 39115  017CB6  24E1               	addwf	fsr1l,w,c
 39116  017CB8  6ED9               	movwf	fsr2l,c
 39117  017CBA  0EFF               	movlw	255
 39118  017CBC  20E2               	addwfc	fsr1h,w,c
 39119  017CBE  6EDA               	movwf	fsr2h,c
 39120  017CC0  0E00               	movlw	0
 39121  017CC2  6EDF               	movwf	indf2,c
 39122  017CC4  D018               	goto	l10296
 39123  017CC6                     l10294:
 39124  017CC6  0E00               	movlw	0
 39125  017CC8  6E32               	movwf	(btemp+8)^0,c
 39126  017CCA  0E00               	movlw	0
 39127  017CCC  6E33               	movwf	(btemp+9)^0,c
 39128  017CCE  0E00               	movlw	0
 39129  017CD0  6E34               	movwf	(btemp+10)^0,c
 39130  017CD2  0E00               	movlw	0
 39131  017CD4  6E35               	movwf	(btemp+11)^0,c
 39132                           
 39133                           ;stkvar	_a @ sp[(-13)+-8]
 39134  017CD6  0EEB               	movlw	-21
 39135  017CD8  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 39136  017CDE  0EEC               	movlw	-20
 39137  017CE0  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 39138  017CE6  0EED               	movlw	-19
 39139  017CE8  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 39140  017CEE  0EEE               	movlw	-18
 39141  017CF0  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 39142  017CF6                     l10296:
 39143                           
 39144                           ;stkvar	_a @ sp[(-13)+-8]
 39145  017CF6  0EEB               	movlw	-21
 39146  017CF8  50E3               	movf	plusw1,w,c
 39147  017CFA  E139               	bnz	l10308
 39148  017CFC  0EEC               	movlw	-20
 39149  017CFE  50E3               	movf	plusw1,w,c
 39150  017D00  E136               	bnz	l10308
 39151  017D02  0EED               	movlw	-19
 39152  017D04  50E3               	movf	plusw1,w,c
 39153  017D06  E133               	bnz	l10308
 39154  017D08  0EEE               	movlw	-18
 39155  017D0A  50E3               	movf	plusw1,w,c
 39156  017D0C  A4D8               	btfss	status,2,c
 39157  017D0E  D02F               	goto	l10308
 39158                           
 39159                           ;stkvar	_b @ sp[(-13)+-4]
 39160  017D10  0EEF               	movlw	-17
 39161  017D12  6AE3               	clrf	plusw1,c
 39162  017D14  0EF0               	movlw	-16
 39163  017D16  6AE3               	clrf	plusw1,c
 39164  017D18  0EF1               	movlw	-15
 39165  017D1A  6AE3               	clrf	plusw1,c
 39166  017D1C  0EF2               	movlw	-14
 39167  017D1E  6AE3               	clrf	plusw1,c
 39168                           
 39169                           ;stkvar	_b @ sp[(-13)+-4]
 39170  017D20  0EF1               	movlw	241
 39171  017D22  24E1               	addwf	fsr1l,w,c
 39172  017D24  6ED9               	movwf	fsr2l,c
 39173  017D26  0EFF               	movlw	255
 39174  017D28  20E2               	addwfc	fsr1h,w,c
 39175  017D2A  6EDA               	movwf	fsr2h,c
 39176  017D2C  0E80               	movlw	128
 39177  017D2E  12DE               	iorwf	postinc2,f,c
 39178  017D30  0E7F               	movlw	127
 39179  017D32  12DD               	iorwf	postdec2,f,c
 39180  017D34                     l10302:
 39181                           
 39182                           ;stkvar	_sign @ sp[(-13)+12]
 39183  017D34  0EFF               	movlw	-1
 39184  017D36  006F FF8C  F035    	movff	plusw1,btemp+11
 39185                           
 39186                           ;stkvar	_b @ sp[(-13)+-4]
 39187  017D3C  0EF2               	movlw	242
 39188  017D3E  24E1               	addwf	fsr1l,w,c
 39189  017D40  6ED9               	movwf	fsr2l,c
 39190  017D42  0EFF               	movlw	255
 39191  017D44  20E2               	addwfc	fsr1h,w,c
 39192  017D46  6EDA               	movwf	fsr2h,c
 39193  017D48  5035               	movf	(btemp+11)^0,w,c
 39194  017D4A  12DF               	iorwf	indf2,f,c
 39195                           
 39196                           ;stkvar	_b @ sp[(-13)+-4]
 39197  017D4C  0EEF               	movlw	-17
 39198  017D4E  006F FF8C  F02A    	movff	plusw1,btemp
 39199  017D54  0EF0               	movlw	-16
 39200  017D56  006F FF8C  F02B    	movff	plusw1,btemp+1
 39201  017D5C  0EF1               	movlw	-15
 39202  017D5E  006F FF8C  F02C    	movff	plusw1,btemp+2
 39203  017D64  0EF2               	movlw	-14
 39204  017D66  006F FF8C  F02D    	movff	plusw1,btemp+3
 39205  017D6C  D19F               	goto	l3304
 39206  017D6E                     l10308:
 39207                           
 39208                           ;stkvar	_bexp @ sp[(-13)+11]
 39209  017D6E  0EFE               	movlw	-2
 39210  017D70  50E3               	movf	plusw1,w,c
 39211  017D72  A4D8               	btfss	status,2,c
 39212  017D74  D009               	goto	l10316
 39213  017D76  0E00               	movlw	0
 39214  017D78  6E2A               	movwf	btemp^0,c
 39215  017D7A  0E00               	movlw	0
 39216  017D7C  6E2B               	movwf	(btemp+1)^0,c
 39217  017D7E  0E00               	movlw	0
 39218  017D80  6E2C               	movwf	(btemp+2)^0,c
 39219  017D82  0E00               	movlw	0
 39220  017D84  6E2D               	movwf	(btemp+3)^0,c
 39221  017D86  D192               	goto	l3304
 39222  017D88                     l10316:
 39223                           
 39224                           ;stkvar	_bexp @ sp[(-13)+11]
 39225  017D88  0EFE               	movlw	-2
 39226  017D8A  50E3               	movf	plusw1,w,c
 39227  017D8C  6E34               	movwf	(btemp+10)^0,c
 39228  017D8E  6A35               	clrf	(btemp+11)^0,c
 39229                           
 39230                           ;stkvar	_aexp @ sp[(-13)+10]
 39231  017D90  0EFD               	movlw	-3
 39232  017D92  50E3               	movf	plusw1,w,c
 39233  017D94  5E34               	subwf	(btemp+10)^0,f,c
 39234  017D96  0E00               	movlw	0
 39235  017D98  5A35               	subwfb	(btemp+11)^0,f,c
 39236  017D9A  0E7F               	movlw	127
 39237  017D9C  2634               	addwf	(btemp+10)^0,f,c
 39238  017D9E  0E00               	movlw	0
 39239  017DA0  2235               	addwfc	(btemp+11)^0,f,c
 39240                           
 39241                           ;stkvar	_new_exp @ sp[(-13)+8]
 39242  017DA2  0EFB               	movlw	-5
 39243  017DA4  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 39244  017DAA  0EFC               	movlw	-4
 39245  017DAC  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 39246                           
 39247                           ;stkvar	_b @ sp[(-13)+-4]
 39248  017DB2  0EEF               	movlw	-17
 39249  017DB4  006F FF8C  F032    	movff	plusw1,btemp+8
 39250  017DBA  0EF0               	movlw	-16
 39251  017DBC  006F FF8C  F033    	movff	plusw1,btemp+9
 39252  017DC2  0EF1               	movlw	-15
 39253  017DC4  006F FF8C  F034    	movff	plusw1,btemp+10
 39254  017DCA  0EF2               	movlw	-14
 39255  017DCC  006F FF8C  F035    	movff	plusw1,btemp+11
 39256                           
 39257                           ;stkvar	_rem @ sp[(-13)+4]
 39258  017DD2  0EF7               	movlw	-9
 39259  017DD4  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 39260  017DDA  0EF8               	movlw	-8
 39261  017DDC  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 39262  017DE2  0EF9               	movlw	-7
 39263  017DE4  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 39264  017DEA  0EFA               	movlw	-6
 39265  017DEC  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 39266                           
 39267                           ;stkvar	_b @ sp[(-13)+-4]
 39268  017DF2  0EEF               	movlw	-17
 39269  017DF4  6AE3               	clrf	plusw1,c
 39270  017DF6  0EF0               	movlw	-16
 39271  017DF8  6AE3               	clrf	plusw1,c
 39272  017DFA  0EF1               	movlw	-15
 39273  017DFC  6AE3               	clrf	plusw1,c
 39274  017DFE  0EF2               	movlw	-14
 39275  017E00  6AE3               	clrf	plusw1,c
 39276                           
 39277                           ;stkvar	_grs @ sp[(-13)+0]
 39278  017E02  0EF3               	movlw	-13
 39279  017E04  6AE3               	clrf	plusw1,c
 39280  017E06  0EF4               	movlw	-12
 39281  017E08  6AE3               	clrf	plusw1,c
 39282  017E0A  0EF5               	movlw	-11
 39283  017E0C  6AE3               	clrf	plusw1,c
 39284  017E0E  0EF6               	movlw	-10
 39285  017E10  6AE3               	clrf	plusw1,c
 39286                           
 39287                           ;stkvar	_aexp @ sp[(-13)+10]
 39288  017E12  0EFD               	movlw	-3
 39289  017E14  6AE3               	clrf	plusw1,c
 39290  017E16  D050               	goto	l10344
 39291  017E18                     l10326:
 39292                           
 39293                           ;stkvar	_aexp @ sp[(-13)+10]
 39294  017E18  0EFD               	movlw	-3
 39295  017E1A  50E3               	movf	plusw1,w,c
 39296  017E1C  B4D8               	btfsc	status,2,c
 39297  017E1E  D020               	goto	l10336
 39298                           
 39299                           ;stkvar	_rem @ sp[(-13)+4]
 39300  017E20  90D8               	bcf	status,0,c
 39301  017E22  0EF7               	movlw	-9
 39302  017E24  36E3               	rlcf	plusw1,f,c
 39303  017E26  0EF8               	movlw	-8
 39304  017E28  36E3               	rlcf	plusw1,f,c
 39305  017E2A  0EF9               	movlw	-7
 39306  017E2C  36E3               	rlcf	plusw1,f,c
 39307  017E2E  0EFA               	movlw	-6
 39308  017E30  36E3               	rlcf	plusw1,f,c
 39309                           
 39310                           ;stkvar	_b @ sp[(-13)+-4]
 39311  017E32  90D8               	bcf	status,0,c
 39312  017E34  0EEF               	movlw	-17
 39313  017E36  36E3               	rlcf	plusw1,f,c
 39314  017E38  0EF0               	movlw	-16
 39315  017E3A  36E3               	rlcf	plusw1,f,c
 39316  017E3C  0EF1               	movlw	-15
 39317  017E3E  36E3               	rlcf	plusw1,f,c
 39318  017E40  0EF2               	movlw	-14
 39319  017E42  36E3               	rlcf	plusw1,f,c
 39320                           
 39321                           ;stkvar	_grs @ sp[(-13)+0]
 39322  017E44  0EF6               	movlw	-10
 39323  017E46  AEE3               	btfss	plusw1,7,c
 39324  017E48  D002               	goto	l10334
 39325                           
 39326                           ;stkvar	_b @ sp[(-13)+-4]
 39327  017E4A  0EEF               	movlw	-17
 39328  017E4C  80E3               	bsf	plusw1,0,c
 39329  017E4E                     l10334:
 39330                           
 39331                           ;stkvar	_grs @ sp[(-13)+0]
 39332  017E4E  90D8               	bcf	status,0,c
 39333  017E50  0EF3               	movlw	-13
 39334  017E52  36E3               	rlcf	plusw1,f,c
 39335  017E54  0EF4               	movlw	-12
 39336  017E56  36E3               	rlcf	plusw1,f,c
 39337  017E58  0EF5               	movlw	-11
 39338  017E5A  36E3               	rlcf	plusw1,f,c
 39339  017E5C  0EF6               	movlw	-10
 39340  017E5E  36E3               	rlcf	plusw1,f,c
 39341  017E60                     l10336:
 39342                           
 39343                           ;stkvar	_a @ sp[(-13)+-8]
 39344                           ;stkvar	_rem @ sp[(-13)+4]
 39345  017E60  50E1               	movf	fsr1l,w,c
 39346  017E62  0FF7               	addlw	-9
 39347  017E64  6ED9               	movwf	fsr2l,c
 39348  017E66  50E2               	movf	fsr1h,w,c
 39349  017E68  6EDA               	movwf	fsr2h,c
 39350  017E6A  0EFF               	movlw	255
 39351  017E6C  22DA               	addwfc	fsr2h,f,c
 39352  017E6E  0EEB               	movlw	-21
 39353  017E70  50E3               	movf	plusw1,w,c
 39354  017E72  5CDE               	subwf	postinc2,w,c
 39355  017E74  0EEC               	movlw	-20
 39356  017E76  50E3               	movf	plusw1,w,c
 39357  017E78  58DE               	subwfb	postinc2,w,c
 39358  017E7A  0EED               	movlw	-19
 39359  017E7C  50E3               	movf	plusw1,w,c
 39360  017E7E  58DE               	subwfb	postinc2,w,c
 39361  017E80  0EEE               	movlw	-18
 39362  017E82  50E3               	movf	plusw1,w,c
 39363  017E84  58DE               	subwfb	postinc2,w,c
 39364  017E86  A0D8               	btfss	status,0,c
 39365  017E88  D015               	goto	l10342
 39366                           
 39367                           ;stkvar	_grs @ sp[(-13)+0]
 39368  017E8A  0EF6               	movlw	-10
 39369  017E8C  8CE3               	bsf	plusw1,6,c
 39370                           
 39371                           ;stkvar	_a @ sp[(-13)+-8]
 39372                           ;stkvar	_rem @ sp[(-13)+4]
 39373  017E8E  50E1               	movf	fsr1l,w,c
 39374  017E90  0FF7               	addlw	-9
 39375  017E92  6ED9               	movwf	fsr2l,c
 39376  017E94  50E2               	movf	fsr1h,w,c
 39377  017E96  6EDA               	movwf	fsr2h,c
 39378  017E98  0EFF               	movlw	255
 39379  017E9A  22DA               	addwfc	fsr2h,f,c
 39380  017E9C  0EEB               	movlw	-21
 39381  017E9E  50E3               	movf	plusw1,w,c
 39382  017EA0  5EDE               	subwf	postinc2,f,c
 39383  017EA2  0EEC               	movlw	-20
 39384  017EA4  50E3               	movf	plusw1,w,c
 39385  017EA6  5ADE               	subwfb	postinc2,f,c
 39386  017EA8  0EED               	movlw	-19
 39387  017EAA  50E3               	movf	plusw1,w,c
 39388  017EAC  5ADE               	subwfb	postinc2,f,c
 39389  017EAE  0EEE               	movlw	-18
 39390  017EB0  50E3               	movf	plusw1,w,c
 39391  017EB2  5ADE               	subwfb	postinc2,f,c
 39392  017EB4                     l10342:
 39393                           
 39394                           ;stkvar	_aexp @ sp[(-13)+10]
 39395  017EB4  0EFD               	movlw	-3
 39396  017EB6  2AE3               	incf	plusw1,f,c
 39397  017EB8                     l10344:
 39398                           
 39399                           ;stkvar	_aexp @ sp[(-13)+10]
 39400  017EB8  0EFD               	movlw	-3
 39401  017EBA  006F FF8C  F02A    	movff	plusw1,btemp
 39402  017EC0  0E19               	movlw	25
 39403  017EC2  642A               	cpfsgt	btemp^0,c
 39404  017EC4  D7A9               	goto	l10326
 39405                           
 39406                           ;stkvar	_rem @ sp[(-13)+4]
 39407  017EC6  0EF7               	movlw	-9
 39408  017EC8  50E3               	movf	plusw1,w,c
 39409  017ECA  E10A               	bnz	u8420
 39410  017ECC  0EF8               	movlw	-8
 39411  017ECE  50E3               	movf	plusw1,w,c
 39412  017ED0  E107               	bnz	u8420
 39413  017ED2  0EF9               	movlw	-7
 39414  017ED4  50E3               	movf	plusw1,w,c
 39415  017ED6  E104               	bnz	u8420
 39416  017ED8  0EFA               	movlw	-6
 39417  017EDA  50E3               	movf	plusw1,w,c
 39418  017EDC  B4D8               	btfsc	status,2,c
 39419  017EDE  D024               	goto	l10360
 39420  017EE0                     u8420:
 39421                           
 39422                           ;stkvar	_grs @ sp[(-13)+0]
 39423  017EE0  0EF3               	movlw	-13
 39424  017EE2  80E3               	bsf	plusw1,0,c
 39425  017EE4  D021               	goto	l10360
 39426  017EE6                     l10350:
 39427                           
 39428                           ;stkvar	_b @ sp[(-13)+-4]
 39429  017EE6  90D8               	bcf	status,0,c
 39430  017EE8  0EEF               	movlw	-17
 39431  017EEA  36E3               	rlcf	plusw1,f,c
 39432  017EEC  0EF0               	movlw	-16
 39433  017EEE  36E3               	rlcf	plusw1,f,c
 39434  017EF0  0EF1               	movlw	-15
 39435  017EF2  36E3               	rlcf	plusw1,f,c
 39436  017EF4  0EF2               	movlw	-14
 39437  017EF6  36E3               	rlcf	plusw1,f,c
 39438                           
 39439                           ;stkvar	_grs @ sp[(-13)+0]
 39440  017EF8  0EF6               	movlw	-10
 39441  017EFA  AEE3               	btfss	plusw1,7,c
 39442  017EFC  D002               	goto	l10356
 39443                           
 39444                           ;stkvar	_b @ sp[(-13)+-4]
 39445  017EFE  0EEF               	movlw	-17
 39446  017F00  80E3               	bsf	plusw1,0,c
 39447  017F02                     l10356:
 39448                           
 39449                           ;stkvar	_grs @ sp[(-13)+0]
 39450  017F02  90D8               	bcf	status,0,c
 39451  017F04  0EF3               	movlw	-13
 39452  017F06  36E3               	rlcf	plusw1,f,c
 39453  017F08  0EF4               	movlw	-12
 39454  017F0A  36E3               	rlcf	plusw1,f,c
 39455  017F0C  0EF5               	movlw	-11
 39456  017F0E  36E3               	rlcf	plusw1,f,c
 39457  017F10  0EF6               	movlw	-10
 39458  017F12  36E3               	rlcf	plusw1,f,c
 39459                           
 39460                           ;stkvar	_new_exp @ sp[(-13)+8]
 39461  017F14  50E1               	movf	fsr1l,w,c
 39462  017F16  0FFB               	addlw	-5
 39463  017F18  6ED9               	movwf	fsr2l,c
 39464  017F1A  50E2               	movf	fsr1h,w,c
 39465  017F1C  6EDA               	movwf	fsr2h,c
 39466  017F1E  0EFF               	movlw	255
 39467  017F20  22DA               	addwfc	fsr2h,f,c
 39468  017F22  06DE               	decf	postinc2,f,c
 39469  017F24  0E00               	movlw	0
 39470  017F26  5ADD               	subwfb	postdec2,f,c
 39471  017F28                     l10360:
 39472                           
 39473                           ;stkvar	_b @ sp[(-13)+-4]
 39474  017F28  0EF1               	movlw	-15
 39475  017F2A  AEE3               	btfss	plusw1,7,c
 39476  017F2C  D7DC               	goto	l10350
 39477                           
 39478                           ;stkvar	_aexp @ sp[(-13)+10]
 39479  017F2E  0EFD               	movlw	-3
 39480  017F30  6AE3               	clrf	plusw1,c
 39481                           
 39482                           ;stkvar	_grs @ sp[(-13)+0]
 39483  017F32  0EF6               	movlw	-10
 39484  017F34  AEE3               	btfss	plusw1,7,c
 39485  017F36  D020               	goto	l10374
 39486                           
 39487                           ;stkvar	_grs @ sp[(-13)+0]
 39488  017F38  50E1               	movf	fsr1l,w,c
 39489  017F3A  0FF3               	addlw	-13
 39490  017F3C  6ED9               	movwf	fsr2l,c
 39491  017F3E  50E2               	movf	fsr1h,w,c
 39492  017F40  6EDA               	movwf	fsr2h,c
 39493  017F42  0EFF               	movlw	255
 39494  017F44  22DA               	addwfc	fsr2h,f,c
 39495  017F46  0EFF               	movlw	255
 39496  017F48  14DE               	andwf	postinc2,w,c
 39497  017F4A  6E32               	movwf	(btemp+8)^0,c
 39498  017F4C  0EFF               	movlw	255
 39499  017F4E  14DE               	andwf	postinc2,w,c
 39500  017F50  6E33               	movwf	(btemp+9)^0,c
 39501  017F52  0EFF               	movlw	255
 39502  017F54  14DE               	andwf	postinc2,w,c
 39503  017F56  6E34               	movwf	(btemp+10)^0,c
 39504  017F58  0E7F               	movlw	127
 39505  017F5A  14DE               	andwf	postinc2,w,c
 39506  017F5C  6E35               	movwf	(btemp+11)^0,c
 39507  017F5E  5032               	movf	(btemp+8)^0,w,c
 39508  017F60  1033               	iorwf	(btemp+9)^0,w,c
 39509  017F62  1034               	iorwf	(btemp+10)^0,w,c
 39510  017F64  1035               	iorwf	(btemp+11)^0,w,c
 39511  017F66  B4D8               	btfsc	status,2,c
 39512  017F68  D004               	goto	l10370
 39513  017F6A                     u8460:
 39514                           
 39515                           ;stkvar	_aexp @ sp[(-13)+10]
 39516  017F6A  0EFD               	movlw	-3
 39517  017F6C  6AE3               	clrf	plusw1,c
 39518  017F6E  2AE3               	incf	plusw1,f,c
 39519  017F70  D003               	goto	l10374
 39520  017F72                     l10370:
 39521                           
 39522                           ;stkvar	_b @ sp[(-13)+-4]
 39523  017F72  0EEF               	movlw	-17
 39524  017F74  B0E3               	btfsc	plusw1,0,c
 39525  017F76  D7F9               	goto	u8460
 39526  017F78                     l10374:
 39527                           
 39528                           ;stkvar	_aexp @ sp[(-13)+10]
 39529  017F78  0EFD               	movlw	-3
 39530  017F7A  50E3               	movf	plusw1,w,c
 39531  017F7C  B4D8               	btfsc	status,2,c
 39532  017F7E  D036               	goto	l10384
 39533                           
 39534                           ;stkvar	_b @ sp[(-13)+-4]
 39535  017F80  50E1               	movf	fsr1l,w,c
 39536  017F82  0FEF               	addlw	-17
 39537  017F84  6ED9               	movwf	fsr2l,c
 39538  017F86  50E2               	movf	fsr1h,w,c
 39539  017F88  6EDA               	movwf	fsr2h,c
 39540  017F8A  0EFF               	movlw	255
 39541  017F8C  22DA               	addwfc	fsr2h,f,c
 39542  017F8E  2ADE               	incf	postinc2,f,c
 39543  017F90  0E00               	movlw	0
 39544  017F92  22DE               	addwfc	postinc2,f,c
 39545  017F94  22DE               	addwfc	postinc2,f,c
 39546  017F96  22DE               	addwfc	postinc2,f,c
 39547                           
 39548                           ;stkvar	_b @ sp[(-13)+-4]
 39549  017F98  0EF2               	movlw	-14
 39550  017F9A  A0E3               	btfss	plusw1,0,c
 39551  017F9C  D027               	goto	l10384
 39552  017F9E  0E01               	movlw	1
 39553  017FA0  6E35               	movwf	(btemp+11)^0,c
 39554                           
 39555                           ;stkvar	_b @ sp[(-13)+-4]
 39556  017FA2  50E1               	movf	fsr1l,w,c
 39557  017FA4  0FEF               	addlw	-17
 39558  017FA6  6ED9               	movwf	fsr2l,c
 39559  017FA8  50E2               	movf	fsr1h,w,c
 39560  017FAA  6EDA               	movwf	fsr2h,c
 39561  017FAC  0EFF               	movlw	255
 39562  017FAE  22DA               	addwfc	fsr2h,f,c
 39563  017FB0  2835               	incf	(btemp+11)^0,w,c
 39564  017FB2  52DE               	movf	postinc2,f,c
 39565  017FB4  D008               	goto	u8500
 39566  017FB6                     u8505:
 39567  017FB6  52DE               	movf	postinc2,f,c
 39568  017FB8  90D8               	bcf	status,0,c
 39569  017FBA  BEDC               	btfsc	preinc2,7,c
 39570  017FBC  80D8               	bsf	status,0,c
 39571  017FBE  32DD               	rrcf	postdec2,f,c
 39572  017FC0  32DD               	rrcf	postdec2,f,c
 39573  017FC2  32DD               	rrcf	postdec2,f,c
 39574  017FC4  32DE               	rrcf	postinc2,f,c
 39575  017FC6                     u8500:
 39576  017FC6  2EE8               	decfsz	wreg,f,c
 39577  017FC8  D7F6               	goto	u8505
 39578                           
 39579                           ;stkvar	_new_exp @ sp[(-13)+8]
 39580  017FCA  0EFB               	movlw	-5
 39581  017FCC  50E3               	movf	plusw1,w,c
 39582  017FCE  0F01               	addlw	1
 39583  017FD0  6E2A               	movwf	btemp^0,c
 39584  017FD2  0EFB               	movlw	-5
 39585  017FD4  0060  F0AB  FFE3   	movff	btemp,plusw1
 39586  017FDA  6A2A               	clrf	btemp^0,c
 39587  017FDC  0EFC               	movlw	-4
 39588  017FDE  50E3               	movf	plusw1,w,c
 39589  017FE0  202A               	addwfc	btemp^0,w,c
 39590  017FE2  6E2A               	movwf	btemp^0,c
 39591  017FE4  0EFC               	movlw	-4
 39592  017FE6  0060  F0AB  FFE3   	movff	btemp,plusw1
 39593  017FEC                     l10384:
 39594                           
 39595                           ;stkvar	_new_exp @ sp[(-13)+8]
 39596  017FEC  0EFC               	movlw	-4
 39597  017FEE  BEE3               	btfsc	plusw1,7,c
 39598  017FF0  D01B               	goto	l10390
 39599  017FF2  0EFC               	movlw	-4
 39600  017FF4  50E3               	movf	plusw1,w,c
 39601  017FF6  E104               	bnz	u8510
 39602  017FF8  0EFB               	movlw	-5
 39603  017FFA  28E3               	incf	plusw1,w,c
 39604  017FFC  A0D8               	btfss	status,0,c
 39605  017FFE  D014               	goto	l10390
 39606  018000                     u8510:
 39607  018000  0EFF               	movlw	255
 39608  018002  6E34               	movwf	(btemp+10)^0,c
 39609  018004  0E00               	movlw	0
 39610  018006  6E35               	movwf	(btemp+11)^0,c
 39611                           
 39612                           ;stkvar	_new_exp @ sp[(-13)+8]
 39613  018008  0EFB               	movlw	-5
 39614  01800A  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 39615  018010  0EFC               	movlw	-4
 39616  018012  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 39617                           
 39618                           ;stkvar	_b @ sp[(-13)+-4]
 39619  018018  0EEF               	movlw	-17
 39620  01801A  6AE3               	clrf	plusw1,c
 39621  01801C  0EF0               	movlw	-16
 39622  01801E  6AE3               	clrf	plusw1,c
 39623  018020  0EF1               	movlw	-15
 39624  018022  6AE3               	clrf	plusw1,c
 39625  018024  0EF2               	movlw	-14
 39626  018026  6AE3               	clrf	plusw1,c
 39627  018028                     l10390:
 39628                           
 39629                           ;stkvar	_new_exp @ sp[(-13)+8]
 39630  018028  0EFC               	movlw	-4
 39631  01802A  BEE3               	btfsc	plusw1,7,c
 39632  01802C  D007               	goto	u8520
 39633  01802E  0EFC               	movlw	-4
 39634  018030  50E3               	movf	plusw1,w,c
 39635  018032  E112               	bnz	l10396
 39636  018034  0EFB               	movlw	-5
 39637  018036  04E3               	decf	plusw1,w,c
 39638  018038  B0D8               	btfsc	status,0,c
 39639  01803A  D00E               	goto	l10396
 39640  01803C                     u8520:
 39641                           
 39642                           ;stkvar	_new_exp @ sp[(-13)+8]
 39643  01803C  0EFB               	movlw	-5
 39644  01803E  6AE3               	clrf	plusw1,c
 39645  018040  0EFC               	movlw	-4
 39646  018042  6AE3               	clrf	plusw1,c
 39647                           
 39648                           ;stkvar	_b @ sp[(-13)+-4]
 39649  018044  0EEF               	movlw	-17
 39650  018046  6AE3               	clrf	plusw1,c
 39651  018048  0EF0               	movlw	-16
 39652  01804A  6AE3               	clrf	plusw1,c
 39653  01804C  0EF1               	movlw	-15
 39654  01804E  6AE3               	clrf	plusw1,c
 39655  018050  0EF2               	movlw	-14
 39656  018052  6AE3               	clrf	plusw1,c
 39657                           
 39658                           ;stkvar	_sign @ sp[(-13)+12]
 39659  018054  0EFF               	movlw	-1
 39660  018056  6AE3               	clrf	plusw1,c
 39661  018058                     l10396:
 39662                           
 39663                           ;stkvar	_new_exp @ sp[(-13)+8]
 39664                           ;stkvar	_bexp @ sp[(-13)+11]
 39665  018058  0EFB               	movlw	-5
 39666  01805A  006F FF8C  F02A    	movff	plusw1,btemp
 39667  018060  0EFE               	movlw	-2
 39668  018062  0060  F0AB  FFE3   	movff	btemp,plusw1
 39669                           
 39670                           ;stkvar	_bexp @ sp[(-13)+11]
 39671  018068  0EFE               	movlw	-2
 39672  01806A  A0E3               	btfss	plusw1,0,c
 39673  01806C  D009               	goto	l10402
 39674                           
 39675                           ;stkvar	_b @ sp[(-13)+-4]
 39676  01806E  0EF1               	movlw	241
 39677  018070  24E1               	addwf	fsr1l,w,c
 39678  018072  6ED9               	movwf	fsr2l,c
 39679  018074  0EFF               	movlw	255
 39680  018076  20E2               	addwfc	fsr1h,w,c
 39681  018078  6EDA               	movwf	fsr2h,c
 39682  01807A  0E00               	movlw	0
 39683  01807C  8EDB               	bsf	plusw2,7,c
 39684  01807E  D008               	goto	l10404
 39685  018080                     l10402:
 39686                           
 39687                           ;stkvar	_b @ sp[(-13)+-4]
 39688  018080  0EF1               	movlw	241
 39689  018082  24E1               	addwf	fsr1l,w,c
 39690  018084  6ED9               	movwf	fsr2l,c
 39691  018086  0EFF               	movlw	255
 39692  018088  20E2               	addwfc	fsr1h,w,c
 39693  01808A  6EDA               	movwf	fsr2h,c
 39694  01808C  0E7F               	movlw	127
 39695  01808E  16DF               	andwf	indf2,f,c
 39696  018090                     l10404:
 39697                           
 39698                           ;stkvar	_b @ sp[(-13)+-4]
 39699  018090  0EF2               	movlw	242
 39700  018092  24E1               	addwf	fsr1l,w,c
 39701  018094  6ED9               	movwf	fsr2l,c
 39702  018096  0EFF               	movlw	255
 39703  018098  20E2               	addwfc	fsr1h,w,c
 39704  01809A  6EDA               	movwf	fsr2h,c
 39705                           
 39706                           ;stkvar	_bexp @ sp[(-13)+11]
 39707  01809C  0EFE               	movlw	-2
 39708  01809E  006F FF8C  F035    	movff	plusw1,btemp+11
 39709  0180A4  90D8               	bcf	status,0,c
 39710  0180A6  3035               	rrcf	(btemp+11)^0,w,c
 39711  0180A8  6EDF               	movwf	indf2,c
 39712  0180AA  D644               	goto	l10302
 39713  0180AC                     l3304:
 39714                           
 39715                           ; ___fldiv: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 39716  0180AC  0EEB               	movlw	235
 39717  0180AE  26E1               	addwf	fsr1l,f,c
 39718  0180B0  0EFF               	movlw	255
 39719  0180B2  22E2               	addwfc	fsr1h,f,c
 39720  0180B4  0012               	return		;funcret
 39721  0180B6                     __end_of___fldiv:
 39722                           	opt callstack 0
 39723                           
 39724 ;; *************** function ___flge *****************
 39725 ;; Defined at:
 39726 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flge.c"
 39727 ;; Parameters:    Size  Location     Type
 39728 ;;  ff1             4  [STACK] unsigned char 
 39729 ;;  ff2             4  [STACK] unsigned char 
 39730 ;; Auto vars:     Size  Location     Type
 39731 ;;		None
 39732 ;; Return value:  Size  Location     Type
 39733 ;;		None               void
 39734 ;; Registers used:
 39735 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 39736 ;; Tracked objects:
 39737 ;;		On entry : 0/1
 39738 ;;		On exit  : 0/0
 39739 ;;		Unchanged: 0/0
 39740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39741 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39742 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39744 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39745 ;;Total ram usage:        0 bytes
 39746 ;; Hardware stack levels used:    1
 39747 ;; Hardware stack levels required when called:   15
 39748 ;; This function calls:
 39749 ;;		Nothing
 39750 ;; This function is called by:
 39751 ;;		_main
 39752 ;;		_convert_dac_raw
 39753 ;;		_calc_ror_data
 39754 ;;		_check_day_time
 39755 ;;		_calc_bsoc
 39756 ;;		_efgtoa
 39757 ;; This function uses a reentrant model
 39758 ;;
 39759                           
 39760                           	psect	text147
 39761  01E612                     __ptext147:
 39762                           	opt callstack 0
 39763  01E612                     ___flge:
 39764                           	opt callstack 0
 39765                           
 39766                           ;stkvar	_ff1 @ sp[(0)+-4]
 39767                           
 39768                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 39769                           ;incstack = 0
 39770 ;; hardware stack exceeded
 39771  01E612  50E1               	movf	fsr1l,w,c
 39772  01E614  0FFC               	addlw	-4
 39773  01E616  6ED9               	movwf	fsr2l,c
 39774  01E618  50E2               	movf	fsr1h,w,c
 39775  01E61A  6EDA               	movwf	fsr2h,c
 39776  01E61C  0EFF               	movlw	255
 39777  01E61E  22DA               	addwfc	fsr2h,f,c
 39778  01E620  0E00               	movlw	0
 39779  01E622  14DE               	andwf	postinc2,w,c
 39780  01E624  6E32               	movwf	(btemp+8)^0,c
 39781  01E626  0E00               	movlw	0
 39782  01E628  14DE               	andwf	postinc2,w,c
 39783  01E62A  6E33               	movwf	(btemp+9)^0,c
 39784  01E62C  0E80               	movlw	128
 39785  01E62E  14DE               	andwf	postinc2,w,c
 39786  01E630  6E34               	movwf	(btemp+10)^0,c
 39787  01E632  0E7F               	movlw	127
 39788  01E634  14DE               	andwf	postinc2,w,c
 39789  01E636  6E35               	movwf	(btemp+11)^0,c
 39790  01E638  5032               	movf	(btemp+8)^0,w,c
 39791  01E63A  1033               	iorwf	(btemp+9)^0,w,c
 39792  01E63C  1034               	iorwf	(btemp+10)^0,w,c
 39793  01E63E  1035               	iorwf	(btemp+11)^0,w,c
 39794  01E640  A4D8               	btfss	status,2,c
 39795  01E642  D008               	goto	l10678
 39796                           
 39797                           ;stkvar	_ff1 @ sp[(0)+-4]
 39798  01E644  0EFC               	movlw	-4
 39799  01E646  6AE3               	clrf	plusw1,c
 39800  01E648  0EFD               	movlw	-3
 39801  01E64A  6AE3               	clrf	plusw1,c
 39802  01E64C  0EFE               	movlw	-2
 39803  01E64E  6AE3               	clrf	plusw1,c
 39804  01E650  0EFF               	movlw	-1
 39805  01E652  6AE3               	clrf	plusw1,c
 39806  01E654                     l10678:
 39807                           
 39808                           ;stkvar	_ff2 @ sp[(0)+-8]
 39809  01E654  50E1               	movf	fsr1l,w,c
 39810  01E656  0FF8               	addlw	-8
 39811  01E658  6ED9               	movwf	fsr2l,c
 39812  01E65A  50E2               	movf	fsr1h,w,c
 39813  01E65C  6EDA               	movwf	fsr2h,c
 39814  01E65E  0EFF               	movlw	255
 39815  01E660  22DA               	addwfc	fsr2h,f,c
 39816  01E662  0E00               	movlw	0
 39817  01E664  14DE               	andwf	postinc2,w,c
 39818  01E666  6E32               	movwf	(btemp+8)^0,c
 39819  01E668  0E00               	movlw	0
 39820  01E66A  14DE               	andwf	postinc2,w,c
 39821  01E66C  6E33               	movwf	(btemp+9)^0,c
 39822  01E66E  0E80               	movlw	128
 39823  01E670  14DE               	andwf	postinc2,w,c
 39824  01E672  6E34               	movwf	(btemp+10)^0,c
 39825  01E674  0E7F               	movlw	127
 39826  01E676  14DE               	andwf	postinc2,w,c
 39827  01E678  6E35               	movwf	(btemp+11)^0,c
 39828  01E67A  5032               	movf	(btemp+8)^0,w,c
 39829  01E67C  1033               	iorwf	(btemp+9)^0,w,c
 39830  01E67E  1034               	iorwf	(btemp+10)^0,w,c
 39831  01E680  1035               	iorwf	(btemp+11)^0,w,c
 39832  01E682  A4D8               	btfss	status,2,c
 39833  01E684  D008               	goto	l2985
 39834                           
 39835                           ;stkvar	_ff2 @ sp[(0)+-8]
 39836  01E686  0EF8               	movlw	-8
 39837  01E688  6AE3               	clrf	plusw1,c
 39838  01E68A  0EF9               	movlw	-7
 39839  01E68C  6AE3               	clrf	plusw1,c
 39840  01E68E  0EFA               	movlw	-6
 39841  01E690  6AE3               	clrf	plusw1,c
 39842  01E692  0EFB               	movlw	-5
 39843  01E694  6AE3               	clrf	plusw1,c
 39844  01E696                     l2985:
 39845                           
 39846                           ;stkvar	_ff1 @ sp[(0)+-4]
 39847  01E696  0EFF               	movlw	-1
 39848  01E698  AEE3               	btfss	plusw1,7,c
 39849  01E69A  D024               	goto	l10684
 39850                           
 39851                           ;stkvar	_ff1 @ sp[(0)+-4]
 39852  01E69C  0E00               	movlw	0
 39853  01E69E  6E32               	movwf	(btemp+8)^0,c
 39854  01E6A0  0E00               	movlw	0
 39855  01E6A2  6E33               	movwf	(btemp+9)^0,c
 39856  01E6A4  0E00               	movlw	0
 39857  01E6A6  6E34               	movwf	(btemp+10)^0,c
 39858  01E6A8  0E80               	movlw	128
 39859  01E6AA  6E35               	movwf	(btemp+11)^0,c
 39860  01E6AC  0EFC               	movlw	-4
 39861  01E6AE  50E3               	movf	plusw1,w,c
 39862  01E6B0  5E32               	subwf	(btemp+8)^0,f,c
 39863  01E6B2  0EFD               	movlw	-3
 39864  01E6B4  50E3               	movf	plusw1,w,c
 39865  01E6B6  5A33               	subwfb	(btemp+9)^0,f,c
 39866  01E6B8  0EFE               	movlw	-2
 39867  01E6BA  50E3               	movf	plusw1,w,c
 39868  01E6BC  5A34               	subwfb	(btemp+10)^0,f,c
 39869  01E6BE  0EFF               	movlw	-1
 39870  01E6C0  50E3               	movf	plusw1,w,c
 39871  01E6C2  5A35               	subwfb	(btemp+11)^0,f,c
 39872                           
 39873                           ;stkvar	_ff1 @ sp[(0)+-4]
 39874  01E6C4  0EFC               	movlw	-4
 39875  01E6C6  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 39876  01E6CC  0EFD               	movlw	-3
 39877  01E6CE  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 39878  01E6D4  0EFE               	movlw	-2
 39879  01E6D6  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 39880  01E6DC  0EFF               	movlw	-1
 39881  01E6DE  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 39882  01E6E4                     l10684:
 39883                           
 39884                           ;stkvar	_ff2 @ sp[(0)+-8]
 39885  01E6E4  0EFB               	movlw	-5
 39886  01E6E6  AEE3               	btfss	plusw1,7,c
 39887  01E6E8  D024               	goto	l10688
 39888                           
 39889                           ;stkvar	_ff2 @ sp[(0)+-8]
 39890  01E6EA  0E00               	movlw	0
 39891  01E6EC  6E32               	movwf	(btemp+8)^0,c
 39892  01E6EE  0E00               	movlw	0
 39893  01E6F0  6E33               	movwf	(btemp+9)^0,c
 39894  01E6F2  0E00               	movlw	0
 39895  01E6F4  6E34               	movwf	(btemp+10)^0,c
 39896  01E6F6  0E80               	movlw	128
 39897  01E6F8  6E35               	movwf	(btemp+11)^0,c
 39898  01E6FA  0EF8               	movlw	-8
 39899  01E6FC  50E3               	movf	plusw1,w,c
 39900  01E6FE  5E32               	subwf	(btemp+8)^0,f,c
 39901  01E700  0EF9               	movlw	-7
 39902  01E702  50E3               	movf	plusw1,w,c
 39903  01E704  5A33               	subwfb	(btemp+9)^0,f,c
 39904  01E706  0EFA               	movlw	-6
 39905  01E708  50E3               	movf	plusw1,w,c
 39906  01E70A  5A34               	subwfb	(btemp+10)^0,f,c
 39907  01E70C  0EFB               	movlw	-5
 39908  01E70E  50E3               	movf	plusw1,w,c
 39909  01E710  5A35               	subwfb	(btemp+11)^0,f,c
 39910                           
 39911                           ;stkvar	_ff2 @ sp[(0)+-8]
 39912  01E712  0EF8               	movlw	-8
 39913  01E714  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 39914  01E71A  0EF9               	movlw	-7
 39915  01E71C  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 39916  01E722  0EFA               	movlw	-6
 39917  01E724  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 39918  01E72A  0EFB               	movlw	-5
 39919  01E72C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 39920  01E732                     l10688:
 39921                           
 39922                           ;stkvar	_ff1 @ sp[(0)+-4]
 39923  01E732  0EFF               	movlw	-1
 39924  01E734  7EE3               	btg	plusw1,7,c
 39925                           
 39926                           ;stkvar	_ff2 @ sp[(0)+-8]
 39927  01E736  0EFB               	movlw	-5
 39928  01E738  7EE3               	btg	plusw1,7,c
 39929                           
 39930                           ;stkvar	_ff2 @ sp[(0)+-8]
 39931                           ;stkvar	_ff1 @ sp[(0)+-4]
 39932  01E73A  50E1               	movf	fsr1l,w,c
 39933  01E73C  0FFC               	addlw	-4
 39934  01E73E  6ED9               	movwf	fsr2l,c
 39935  01E740  50E2               	movf	fsr1h,w,c
 39936  01E742  6EDA               	movwf	fsr2h,c
 39937  01E744  0EFF               	movlw	255
 39938  01E746  22DA               	addwfc	fsr2h,f,c
 39939  01E748  0EF8               	movlw	-8
 39940  01E74A  50E3               	movf	plusw1,w,c
 39941  01E74C  5CDE               	subwf	postinc2,w,c
 39942  01E74E  0EF9               	movlw	-7
 39943  01E750  50E3               	movf	plusw1,w,c
 39944  01E752  58DE               	subwfb	postinc2,w,c
 39945  01E754  0EFA               	movlw	-6
 39946  01E756  50E3               	movf	plusw1,w,c
 39947  01E758  58DE               	subwfb	postinc2,w,c
 39948  01E75A  0EFB               	movlw	-5
 39949  01E75C  50E3               	movf	plusw1,w,c
 39950  01E75E  58DE               	subwfb	postinc2,w,c
 39951  01E760  B0D8               	btfsc	status,0,c
 39952  01E762  D002               	goto	l10696
 39953  01E764  902A               	bcf	btemp& (0+255),0,c
 39954  01E766  D001               	goto	l2992
 39955  01E768                     l10696:
 39956  01E768  802A               	bsf	btemp& (0+255),0,c
 39957  01E76A                     l2992:
 39958                           
 39959                           ; ___flge: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 39960  01E76A  0EF8               	movlw	248
 39961  01E76C  26E1               	addwf	fsr1l,f,c
 39962  01E76E  0EFF               	movlw	255
 39963  01E770  22E2               	addwfc	fsr1h,f,c
 39964  01E772  0012               	return		;funcret
 39965  01E774                     __end_of___flge:
 39966                           	opt callstack 0
 39967                           
 39968 ;; *************** function _calc_model_data *****************
 39969 ;; Defined at:
 39970 ;;		line 67 in file "mbmc.c"
 39971 ;; Parameters:    Size  Location     Type
 39972 ;;		None
 39973 ;; Auto vars:     Size  Location     Type
 39974 ;;		None
 39975 ;; Return value:  Size  Location     Type
 39976 ;;                  1  [STACK] void 
 39977 ;; Registers used:
 39978 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 39979 ;; Tracked objects:
 39980 ;;		On entry : 3F/0
 39981 ;;		On exit  : 3F/39
 39982 ;;		Unchanged: 0/0
 39983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39984 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39985 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39986 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39987 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39988 ;;Total ram usage:        0 bytes
 39989 ;; Hardware stack levels used:    1
 39990 ;; Hardware stack levels required when called:   18
 39991 ;; This function calls:
 39992 ;;		___fladd
 39993 ;;		___flmul
 39994 ;;		___flsub
 39995 ;;		_lp_filter
 39996 ;;		_start_bsoc
 39997 ;;		_stop_bsoc
 39998 ;; This function is called by:
 39999 ;;		_main
 40000 ;; This function uses a reentrant model
 40001 ;;
 40002                           
 40003                           	psect	text148
 40004  01937C                     __ptext148:
 40005                           	opt callstack 0
 40006  01937C                     _calc_model_data:
 40007                           	opt callstack 12
 40008                           
 40009                           ;mbmc.c: 69:  static float bvror = 0.0, bcror = 0.0;;mbmc.c: 70:  stop_bsoc();
 40010                           
 40011                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 40012                           ;incstack = 0
 40013  01937C  EC9A  F013         	call	_stop_bsoc	;wreg free
 40014                           
 40015                           ; BSR set to: 57
 40016                           ;mbmc.c: 72:  if (!V.calib) {
 40017  019380  0102               	movlb	2	; () banked
 40018  019382  51B0               	movf	(_V+169)& (0+255),w,b	;volatile
 40019  019384  A4D8               	btfss	status,2,c
 40020  019386  D220               	goto	l14378
 40021                           
 40022                           ; BSR set to: 2
 40023                           ;mbmc.c: 73:   C.updates++;
 40024  019388  EE22  F23B         	lfsr	2,_C+316	;volatile
 40025  01938C  2ADE               	incf	postinc2,f,c
 40026  01938E  0E00               	movlw	0
 40027  019390  22DE               	addwfc	postinc2,f,c
 40028  019392  22DE               	addwfc	postinc2,f,c
 40029  019394  22DE               	addwfc	postinc2,f,c
 40030                           
 40031                           ; BSR set to: 2
 40032                           ;mbmc.c: 74:   C.c_bat = C.calc[C_BATT];
 40033  019396  EE22  F0FF         	lfsr	2,_C
 40034  01939A  006F FF78  F943    	movff	postinc2,_C+68	;volatile
 40035  0193A0  006F FF78  F944    	movff	postinc2,_C+69	;volatile
 40036  0193A6  006F FF78  F945    	movff	postinc2,_C+70	;volatile
 40037  0193AC  006F FF74  F946    	movff	postdec2,_C+71	;volatile
 40038                           
 40039                           ; BSR set to: 2
 40040                           ;mbmc.c: 75:   C.bc_ror = C.c_bat - bcror;
 40041  0193B2  0060  F223  FFE6   	movff	calc_model_data@bcror,postinc1
 40042  0193B8  0060  F227  FFE6   	movff	calc_model_data@bcror+1,postinc1
 40043  0193BE  0060  F22B  FFE6   	movff	calc_model_data@bcror+2,postinc1
 40044  0193C4  0060  F22F  FFE6   	movff	calc_model_data@bcror+3,postinc1
 40045  0193CA  EE22  F143         	lfsr	2,_C+68	;volatile
 40046  0193CE  006F FF7B FFE6     	movff	postinc2,postinc1
 40047  0193D4  006F FF7B FFE6     	movff	postinc2,postinc1
 40048  0193DA  006F FF7B FFE6     	movff	postinc2,postinc1
 40049  0193E0  006F FF7B FFE6     	movff	postinc2,postinc1
 40050  0193E6  EC54  F00D         	call	___flsub	;wreg free
 40051  0193EA  0060  F0A8  F96F   	movff	btemp,_C+112	;volatile
 40052  0193F0  0060  F0AC  F970   	movff	btemp+1,_C+113	;volatile
 40053  0193F6  0060  F0B0  F971   	movff	btemp+2,_C+114	;volatile
 40054  0193FC  0060  F0B4  F972   	movff	btemp+3,_C+115	;volatile
 40055                           
 40056                           ;mbmc.c: 76:   bcror = C.c_bat;
 40057  019402  C943  F088         	movff	_C+68,calc_model_data@bcror	;volatile
 40058  019406  C944  F089         	movff	_C+69,calc_model_data@bcror+1	;volatile
 40059  01940A  C945  F08A         	movff	_C+70,calc_model_data@bcror+2	;volatile
 40060  01940E  C946  F08B         	movff	_C+71,calc_model_data@bcror+3	;volatile
 40061                           
 40062                           ;mbmc.c: 77:   C.c_pv = C.calc[C_PV];
 40063  019412  EE22  F103         	lfsr	2,_C+4	;volatile
 40064  019416  006F FF78  F947    	movff	postinc2,_C+72	;volatile
 40065  01941C  006F FF78  F948    	movff	postinc2,_C+73	;volatile
 40066  019422  006F FF78  F949    	movff	postinc2,_C+74	;volatile
 40067  019428  006F FF74  F94A    	movff	postdec2,_C+75	;volatile
 40068                           
 40069                           ;mbmc.c: 78:   C.v_bat = C.calc[V_BAT];
 40070  01942E  EE22  F10F         	lfsr	2,_C+16	;volatile
 40071  019432  006F FF78  F953    	movff	postinc2,_C+84	;volatile
 40072  019438  006F FF78  F954    	movff	postinc2,_C+85	;volatile
 40073  01943E  006F FF78  F955    	movff	postinc2,_C+86	;volatile
 40074  019444  006F FF74  F956    	movff	postdec2,_C+87	;volatile
 40075                           
 40076                           ;mbmc.c: 79:   C.v_sensor = C.calc[V_LIGHT_SENSOR];
 40077  01944A  EE22  F133         	lfsr	2,_C+52	;volatile
 40078  01944E  006F FF78  F967    	movff	postinc2,_C+104	;volatile
 40079  019454  006F FF78  F968    	movff	postinc2,_C+105	;volatile
 40080  01945A  006F FF78  F969    	movff	postinc2,_C+106	;volatile
 40081  019460  006F FF74  F96A    	movff	postdec2,_C+107	;volatile
 40082                           
 40083                           ;mbmc.c: 80:   C.bv_ror = C.v_bat - bvror;
 40084  019466  0060  F233  FFE6   	movff	calc_model_data@bvror,postinc1
 40085  01946C  0060  F237  FFE6   	movff	calc_model_data@bvror+1,postinc1
 40086  019472  0060  F23B  FFE6   	movff	calc_model_data@bvror+2,postinc1
 40087  019478  0060  F23F  FFE6   	movff	calc_model_data@bvror+3,postinc1
 40088  01947E  EE22  F153         	lfsr	2,_C+84	;volatile
 40089  019482  006F FF7B FFE6     	movff	postinc2,postinc1
 40090  019488  006F FF7B FFE6     	movff	postinc2,postinc1
 40091  01948E  006F FF7B FFE6     	movff	postinc2,postinc1
 40092  019494  006F FF7B FFE6     	movff	postinc2,postinc1
 40093  01949A  EC54  F00D         	call	___flsub	;wreg free
 40094  01949E  0060  F0A8  F96B   	movff	btemp,_C+108	;volatile
 40095  0194A4  0060  F0AC  F96C   	movff	btemp+1,_C+109	;volatile
 40096  0194AA  0060  F0B0  F96D   	movff	btemp+2,_C+110	;volatile
 40097  0194B0  0060  F0B4  F96E   	movff	btemp+3,_C+111	;volatile
 40098                           
 40099                           ;mbmc.c: 81:   bvror = C.v_bat;
 40100  0194B6  C953  F08C         	movff	_C+84,calc_model_data@bvror	;volatile
 40101  0194BA  C954  F08D         	movff	_C+85,calc_model_data@bvror+1	;volatile
 40102  0194BE  C955  F08E         	movff	_C+86,calc_model_data@bvror+2	;volatile
 40103  0194C2  C956  F08F         	movff	_C+87,calc_model_data@bvror+3	;volatile
 40104                           
 40105                           ;mbmc.c: 82:   C.v_pv = C.calc[V_PV];
 40106  0194C6  EE22  F113         	lfsr	2,_C+20	;volatile
 40107  0194CA  006F FF78  F94F    	movff	postinc2,_C+80	;volatile
 40108  0194D0  006F FF78  F950    	movff	postinc2,_C+81	;volatile
 40109  0194D6  006F FF78  F951    	movff	postinc2,_C+82	;volatile
 40110  0194DC  006F FF74  F952    	movff	postdec2,_C+83	;volatile
 40111                           
 40112                           ;mbmc.c: 83:   C.v_cc = C.calc[V_CC];
 40113  0194E2  EE22  F107         	lfsr	2,_C+8	;volatile
 40114  0194E6  006F FF78  F94B    	movff	postinc2,_C+76	;volatile
 40115  0194EC  006F FF78  F94C    	movff	postinc2,_C+77	;volatile
 40116  0194F2  006F FF78  F94D    	movff	postinc2,_C+78	;volatile
 40117  0194F8  006F FF74  F94E    	movff	postdec2,_C+79	;volatile
 40118                           
 40119                           ;mbmc.c: 84:   C.v_inverter = C.calc[V_INVERTER];
 40120  0194FE  EE22  F12F         	lfsr	2,_C+48	;volatile
 40121  019502  006F FF78  F963    	movff	postinc2,_C+100	;volatile
 40122  019508  006F FF78  F964    	movff	postinc2,_C+101	;volatile
 40123  01950E  006F FF78  F965    	movff	postinc2,_C+102	;volatile
 40124  019514  006F FF74  F966    	movff	postdec2,_C+103	;volatile
 40125                           
 40126                           ;mbmc.c: 85:   C.c_load = lp_filter(C.calc[C_PV]+(-(C.calc[C_BATT])), 16, 1);
 40127  01951A  0E01               	movlw	1
 40128  01951C  6EE6               	movwf	postinc1,c
 40129  01951E  0E10               	movlw	16
 40130  019520  6EE6               	movwf	postinc1,c
 40131  019522  EE22  F0FF         	lfsr	2,_C
 40132  019526  006F FF7B FFE6     	movff	postinc2,postinc1
 40133  01952C  006F FF7B FFE6     	movff	postinc2,postinc1
 40134  019532  006F FF7B FFE6     	movff	postinc2,postinc1
 40135  019538  006F FF7B FFE6     	movff	postinc2,postinc1
 40136  01953E  EE22  F103         	lfsr	2,_C+4	;volatile
 40137  019542  006F FF7B FFE6     	movff	postinc2,postinc1
 40138  019548  006F FF7B FFE6     	movff	postinc2,postinc1
 40139  01954E  006F FF7B FFE6     	movff	postinc2,postinc1
 40140  019554  006F FF7B FFE6     	movff	postinc2,postinc1
 40141  01955A  EC54  F00D         	call	___flsub	;wreg free
 40142  01955E  0060  F0AB  FFE6   	movff	btemp,postinc1
 40143  019564  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 40144  01956A  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 40145  019570  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 40146  019576  EC56  F0EB         	call	_lp_filter	;wreg free
 40147  01957A  0060  F0A8  F93F   	movff	btemp,_C+64	;volatile
 40148  019580  0060  F0AC  F940   	movff	btemp+1,_C+65	;volatile
 40149  019586  0060  F0B0  F941   	movff	btemp+2,_C+66	;volatile
 40150  01958C  0060  F0B4  F942   	movff	btemp+3,_C+67	;volatile
 40151                           
 40152                           ;mbmc.c: 86:   C.p_load = lp_filter(C.c_load * C.v_bat, 17, 1);
 40153  019592  0E01               	movlw	1
 40154  019594  6EE6               	movwf	postinc1,c
 40155  019596  0E11               	movlw	17
 40156  019598  6EE6               	movwf	postinc1,c
 40157  01959A  EE22  F153         	lfsr	2,_C+84	;volatile
 40158  01959E  006F FF7B FFE6     	movff	postinc2,postinc1
 40159  0195A4  006F FF7B FFE6     	movff	postinc2,postinc1
 40160  0195AA  006F FF7B FFE6     	movff	postinc2,postinc1
 40161  0195B0  006F FF7B FFE6     	movff	postinc2,postinc1
 40162  0195B6  EE22  F13F         	lfsr	2,_C+64	;volatile
 40163  0195BA  006F FF7B FFE6     	movff	postinc2,postinc1
 40164  0195C0  006F FF7B FFE6     	movff	postinc2,postinc1
 40165  0195C6  006F FF7B FFE6     	movff	postinc2,postinc1
 40166  0195CC  006F FF7B FFE6     	movff	postinc2,postinc1
 40167  0195D2  EC4D  F0B2         	call	___flmul	;wreg free
 40168  0195D6  0060  F0AB  FFE6   	movff	btemp,postinc1
 40169  0195DC  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 40170  0195E2  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 40171  0195E8  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 40172  0195EE  EC56  F0EB         	call	_lp_filter	;wreg free
 40173  0195F2  0060  F0A8  F973   	movff	btemp,_C+116	;volatile
 40174  0195F8  0060  F0AC  F974   	movff	btemp+1,_C+117	;volatile
 40175  0195FE  0060  F0B0  F975   	movff	btemp+2,_C+118	;volatile
 40176  019604  0060  F0B4  F976   	movff	btemp+3,_C+119	;volatile
 40177                           
 40178                           ;mbmc.c: 87:   C.p_pv = lp_filter(C.c_pv * C.v_pv, 18, 1);
 40179  01960A  0E01               	movlw	1
 40180  01960C  6EE6               	movwf	postinc1,c
 40181  01960E  0E12               	movlw	18
 40182  019610  6EE6               	movwf	postinc1,c
 40183  019612  EE22  F14F         	lfsr	2,_C+80	;volatile
 40184  019616  006F FF7B FFE6     	movff	postinc2,postinc1
 40185  01961C  006F FF7B FFE6     	movff	postinc2,postinc1
 40186  019622  006F FF7B FFE6     	movff	postinc2,postinc1
 40187  019628  006F FF7B FFE6     	movff	postinc2,postinc1
 40188  01962E  EE22  F147         	lfsr	2,_C+72	;volatile
 40189  019632  006F FF7B FFE6     	movff	postinc2,postinc1
 40190  019638  006F FF7B FFE6     	movff	postinc2,postinc1
 40191  01963E  006F FF7B FFE6     	movff	postinc2,postinc1
 40192  019644  006F FF7B FFE6     	movff	postinc2,postinc1
 40193  01964A  EC4D  F0B2         	call	___flmul	;wreg free
 40194  01964E  0060  F0AB  FFE6   	movff	btemp,postinc1
 40195  019654  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 40196  01965A  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 40197  019660  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 40198  019666  EC56  F0EB         	call	_lp_filter	;wreg free
 40199  01966A  0060  F0A8  F97B   	movff	btemp,_C+124	;volatile
 40200  019670  0060  F0AC  F97C   	movff	btemp+1,_C+125	;volatile
 40201  019676  0060  F0B0  F97D   	movff	btemp+2,_C+126	;volatile
 40202  01967C  0060  F0B4  F97E   	movff	btemp+3,_C+127	;volatile
 40203                           
 40204                           ;mbmc.c: 88:   C.p_inverter = lp_filter((C.c_load * C.v_inverter) - 14.00, 19, 1);
 40205  019682  0E01               	movlw	1
 40206  019684  6EE6               	movwf	postinc1,c
 40207  019686  0E13               	movlw	19
 40208  019688  6EE6               	movwf	postinc1,c
 40209  01968A  0E00               	movlw	0
 40210  01968C  6EE6               	movwf	postinc1,c
 40211  01968E  0E00               	movlw	0
 40212  019690  6EE6               	movwf	postinc1,c
 40213  019692  0E60               	movlw	96
 40214  019694  6EE6               	movwf	postinc1,c
 40215  019696  0EC1               	movlw	193
 40216  019698  6EE6               	movwf	postinc1,c
 40217  01969A  EE22  F163         	lfsr	2,_C+100	;volatile
 40218  01969E  006F FF7B FFE6     	movff	postinc2,postinc1
 40219  0196A4  006F FF7B FFE6     	movff	postinc2,postinc1
 40220  0196AA  006F FF7B FFE6     	movff	postinc2,postinc1
 40221  0196B0  006F FF7B FFE6     	movff	postinc2,postinc1
 40222  0196B6  EE22  F13F         	lfsr	2,_C+64	;volatile
 40223  0196BA  006F FF7B FFE6     	movff	postinc2,postinc1
 40224  0196C0  006F FF7B FFE6     	movff	postinc2,postinc1
 40225  0196C6  006F FF7B FFE6     	movff	postinc2,postinc1
 40226  0196CC  006F FF7B FFE6     	movff	postinc2,postinc1
 40227  0196D2  EC4D  F0B2         	call	___flmul	;wreg free
 40228  0196D6  0060  F0AB  FFE6   	movff	btemp,postinc1
 40229  0196DC  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 40230  0196E2  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 40231  0196E8  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 40232  0196EE  EC62  F0B6         	call	___fladd	;wreg free
 40233  0196F2  0060  F0AB  FFE6   	movff	btemp,postinc1
 40234  0196F8  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 40235  0196FE  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 40236  019704  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 40237  01970A  EC56  F0EB         	call	_lp_filter	;wreg free
 40238  01970E  0060  F0A8  F977   	movff	btemp,_C+120	;volatile
 40239  019714  0060  F0AC  F978   	movff	btemp+1,_C+121	;volatile
 40240  01971A  0060  F0B0  F979   	movff	btemp+2,_C+122	;volatile
 40241  019720  0060  F0B4  F97A   	movff	btemp+3,_C+123	;volatile
 40242                           
 40243                           ;mbmc.c: 89:   C.p_bat = lp_filter(C.c_bat * C.v_bat, 20, 1);
 40244  019726  0E01               	movlw	1
 40245  019728  6EE6               	movwf	postinc1,c
 40246  01972A  0E14               	movlw	20
 40247  01972C  6EE6               	movwf	postinc1,c
 40248  01972E  EE22  F153         	lfsr	2,_C+84	;volatile
 40249  019732  006F FF7B FFE6     	movff	postinc2,postinc1
 40250  019738  006F FF7B FFE6     	movff	postinc2,postinc1
 40251  01973E  006F FF7B FFE6     	movff	postinc2,postinc1
 40252  019744  006F FF7B FFE6     	movff	postinc2,postinc1
 40253  01974A  EE22  F143         	lfsr	2,_C+68	;volatile
 40254  01974E  006F FF7B FFE6     	movff	postinc2,postinc1
 40255  019754  006F FF7B FFE6     	movff	postinc2,postinc1
 40256  01975A  006F FF7B FFE6     	movff	postinc2,postinc1
 40257  019760  006F FF7B FFE6     	movff	postinc2,postinc1
 40258  019766  EC4D  F0B2         	call	___flmul	;wreg free
 40259  01976A  0060  F0AB  FFE6   	movff	btemp,postinc1
 40260  019770  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 40261  019776  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 40262  01977C  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 40263  019782  EC56  F0EB         	call	_lp_filter	;wreg free
 40264  019786  0060  F0A8  F97F   	movff	btemp,_C+128	;volatile
 40265  01978C  0060  F0AC  F980   	movff	btemp+1,_C+129	;volatile
 40266  019792  0060  F0B0  F981   	movff	btemp+2,_C+130	;volatile
 40267  019798  0060  F0B4  F982   	movff	btemp+3,_C+131	;volatile
 40268                           
 40269                           ;mbmc.c: 93:   if (C.p_inverter < 0.0)
 40270  01979E  EE22  F177         	lfsr	2,_C+120	;volatile
 40271  0197A2  0E03               	movlw	3
 40272  0197A4  AEDB               	btfss	plusw2,7,c
 40273  0197A6  D010               	goto	l14378
 40274                           
 40275                           ;mbmc.c: 94:    C.p_inverter = 0.0001;
 40276  0197A8  0E17               	movlw	23
 40277  0197AA  006F FFA0  F977    	movff	wreg,_C+120	;volatile
 40278  0197B0  0EB7               	movlw	183
 40279  0197B2  006F FFA0  F978    	movff	wreg,_C+121	;volatile
 40280  0197B8  0ED1               	movlw	209
 40281  0197BA  006F FFA0  F979    	movff	wreg,_C+122	;volatile
 40282  0197C0  0E38               	movlw	56
 40283  0197C2  006F FFA0  F97A    	movff	wreg,_C+123	;volatile
 40284  0197C8                     l14378:
 40285                           
 40286                           ;mbmc.c: 96:  start_bsoc();
 40287  0197C8  EC16  F012         	call	_start_bsoc	;wreg free
 40288                           
 40289                           ; BSR set to: 57
 40290                           ;mbmc.c: 97:  C.update = 1;
 40291  0197CC  0E01               	movlw	1
 40292  0197CE  006F FFA0  F9B7    	movff	wreg,_C+184	;volatile
 40293                           
 40294                           ; BSR set to: 57
 40295                           ; _calc_model_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 40296  0197D4  0012               	return		;funcret
 40297  0197D6                     __end_of_calc_model_data:
 40298                           	opt callstack 0
 40299                           
 40300 ;; *************** function _stop_bsoc *****************
 40301 ;; Defined at:
 40302 ;;		line 130 in file "bsoc.c"
 40303 ;; Parameters:    Size  Location     Type
 40304 ;;		None
 40305 ;; Auto vars:     Size  Location     Type
 40306 ;;		None
 40307 ;; Return value:  Size  Location     Type
 40308 ;;                  1  [STACK] void 
 40309 ;; Registers used:
 40310 ;;		None
 40311 ;; Tracked objects:
 40312 ;;		On entry : 0/1
 40313 ;;		On exit  : 3F/39
 40314 ;;		Unchanged: 0/0
 40315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 40316 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40317 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40318 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40319 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40320 ;;Total ram usage:        0 bytes
 40321 ;; Hardware stack levels used:    1
 40322 ;; Hardware stack levels required when called:   15
 40323 ;; This function calls:
 40324 ;;		Nothing
 40325 ;; This function is called by:
 40326 ;;		_calc_model_data
 40327 ;;		_load_hist_data
 40328 ;; This function uses a reentrant model
 40329 ;;
 40330                           
 40331                           	psect	text149
 40332  002734                     __ptext149:
 40333                           	opt callstack 0
 40334  002734                     _stop_bsoc:
 40335                           	opt callstack 14
 40336                           
 40337                           ;bsoc.c: 133:  PIE6bits.TMR3IE = 0;
 40338                           
 40339                           ; BSR set to: 57
 40340                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 40341                           ;incstack = 0
 40342  002734  0139               	movlb	57	; () banked
 40343  002736  9D96               	bcf	150,6,b	;volatile
 40344                           
 40345                           ; BSR set to: 57
 40346                           ; _stop_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 40347  002738  0012               	return		;funcret
 40348  00273A                     __end_of_stop_bsoc:
 40349                           	opt callstack 0
 40350                           
 40351 ;; *************** function _start_bsoc *****************
 40352 ;; Defined at:
 40353 ;;		line 121 in file "bsoc.c"
 40354 ;; Parameters:    Size  Location     Type
 40355 ;;		None
 40356 ;; Auto vars:     Size  Location     Type
 40357 ;;		None
 40358 ;; Return value:  Size  Location     Type
 40359 ;;                  1  [STACK] void 
 40360 ;; Registers used:
 40361 ;;		wreg, status,2, status,0, btemp+11
 40362 ;; Tracked objects:
 40363 ;;		On entry : 0/39
 40364 ;;		On exit  : 3F/39
 40365 ;;		Unchanged: 0/0
 40366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 40367 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40368 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40370 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40371 ;;Total ram usage:        0 bytes
 40372 ;; Hardware stack levels used:    1
 40373 ;; Hardware stack levels required when called:   15
 40374 ;; This function calls:
 40375 ;;		Nothing
 40376 ;; This function is called by:
 40377 ;;		_calc_model_data
 40378 ;;		_load_hist_data
 40379 ;; This function uses a reentrant model
 40380 ;;
 40381                           
 40382                           	psect	text150
 40383  00242C                     __ptext150:
 40384                           	opt callstack 0
 40385  00242C                     _start_bsoc:
 40386                           	opt callstack 14
 40387                           
 40388                           ;bsoc.c: 124:  PIE6bits.TMR3IE = 1;
 40389                           
 40390                           ; BSR set to: 57
 40391                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 40392                           ;incstack = 0
 40393  00242C  0139               	movlb	57	; () banked
 40394  00242E  8D96               	bsf	150,6,b	;volatile
 40395                           
 40396                           ; BSR set to: 57
 40397  002430  A4BE               	btfss	190,2,c	;volatile
 40398  002432  D002               	goto	u12730
 40399  002434  0E01               	movlw	1
 40400  002436  D001               	goto	u12736
 40401  002438                     u12730:
 40402  002438  0E00               	movlw	0
 40403  00243A                     u12736:
 40404  00243A  0AFF               	xorlw	255
 40405  00243C  6E35               	movwf	(btemp+11)^0,c
 40406  00243E  4635               	rlncf	(btemp+11)^0,f,c
 40407  002440  4635               	rlncf	(btemp+11)^0,f,c
 40408  002442  50BE               	movf	190,w,c	;volatile
 40409  002444  1835               	xorwf	(btemp+11)^0,w,c
 40410  002446  0BFB               	andlw	-5
 40411  002448  1835               	xorwf	(btemp+11)^0,w,c
 40412  00244A  6EBE               	movwf	190,c	;volatile
 40413                           
 40414                           ; BSR set to: 57
 40415                           ; _start_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 40416  00244C  0012               	return		;funcret
 40417  00244E                     __end_of_start_bsoc:
 40418                           	opt callstack 0
 40419                           
 40420 ;; *************** function _lp_filter *****************
 40421 ;; Defined at:
 40422 ;;		line 29 in file "mbmc.c"
 40423 ;; Parameters:    Size  Location     Type
 40424 ;;  new             4  [STACK] const float 
 40425 ;;  bn              1  [STACK] const unsigned char 
 40426 ;;  slow            1  [STACK] const char 
 40427 ;; Auto vars:     Size  Location     Type
 40428 ;;  lp_speed        4  [STACK] float 
 40429 ;; Return value:  Size  Location     Type
 40430 ;;                  4  [STACK] float 
 40431 ;; Registers used:
 40432 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 40433 ;; Tracked objects:
 40434 ;;		On entry : 0/2
 40435 ;;		On exit  : 0/0
 40436 ;;		Unchanged: 0/0
 40437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 40438 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40439 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40440 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40441 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40442 ;;Total ram usage:        0 bytes
 40443 ;; Hardware stack levels used:    1
 40444 ;; Hardware stack levels required when called:   17
 40445 ;; This function calls:
 40446 ;;		___fladd
 40447 ;;		___flmul
 40448 ;;		___flsub
 40449 ;; This function is called by:
 40450 ;;		_main
 40451 ;;		_convert_adc_data
 40452 ;;		_calc_model_data
 40453 ;; This function uses a reentrant model
 40454 ;;
 40455                           
 40456                           	psect	text151
 40457  01D6AC                     __ptext151:
 40458                           	opt callstack 0
 40459  01D6AC                     _lp_filter:
 40460                           	opt callstack 0
 40461                           
 40462                           ; BSR set to: 57
 40463                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 40464  01D6AC  52E6               	movf	postinc1,f,c
 40465  01D6AE  52E6               	movf	postinc1,f,c
 40466  01D6B0  52E6               	movf	postinc1,f,c
 40467  01D6B2  52E6               	movf	postinc1,f,c
 40468                           
 40469                           ;mbmc.c: 29: float lp_filter(const float new, const uint8_t bn, const int8_t slow);mbmc.
      +                          c: 30: {;mbmc.c: 31:  static float smooth[16 +5];;mbmc.c: 32:  float lp_speed;;mbmc.c: 3
      +                          4:  if (bn >= 16 +5)
 40470                           ;stkvar	_bn @ sp[(-4)+-5]
 40471                           
 40472                           ;incstack = 0
 40473  01D6B4  0EF7               	movlw	-9
 40474  01D6B6  006F FF8C  F02A    	movff	plusw1,btemp
 40475  01D6BC  0E14               	movlw	20
 40476  01D6BE  642A               	cpfsgt	btemp^0,c
 40477  01D6C0  D011               	goto	l13482
 40478  01D6C2                     u12560:
 40479                           
 40480                           ;mbmc.c: 35:   return new;
 40481                           ;stkvar	_new @ sp[(-4)+-4]
 40482  01D6C2  0EF8               	movlw	-8
 40483  01D6C4  006F FF8C  F02A    	movff	plusw1,btemp
 40484  01D6CA  0EF9               	movlw	-7
 40485  01D6CC  006F FF8C  F02B    	movff	plusw1,btemp+1
 40486  01D6D2  0EFA               	movlw	-6
 40487  01D6D4  006F FF8C  F02C    	movff	plusw1,btemp+2
 40488  01D6DA  0EFB               	movlw	-5
 40489  01D6DC  006F FF8C  F02D    	movff	plusw1,btemp+3
 40490  01D6E2  D0BD               	goto	l2137
 40491  01D6E4                     l13482:
 40492                           
 40493                           ;mbmc.c: 37:  if (slow == (-1)) {
 40494                           ;stkvar	_slow @ sp[(-4)+-6]
 40495  01D6E4  0EF6               	movlw	-10
 40496  01D6E6  28E3               	incf	plusw1,w,c
 40497  01D6E8  A4D8               	btfss	status,2,c
 40498  01D6EA  D012               	goto	l13490
 40499                           
 40500                           ;mbmc.c: 38:   smooth[bn] = 0.0;
 40501                           ;stkvar	_bn @ sp[(-4)+-5]
 40502  01D6EC  0EF7               	movlw	-9
 40503  01D6EE  50E3               	movf	plusw1,w,c
 40504  01D6F0  0D04               	mullw	4
 40505  01D6F2  0E00               	movlw	low lp_filter@smooth
 40506  01D6F4  24F3               	addwf	243,w,c
 40507  01D6F6  6ED9               	movwf	fsr2l,c
 40508  01D6F8  0E03               	movlw	high lp_filter@smooth
 40509  01D6FA  20F4               	addwfc	prodh,w,c
 40510  01D6FC  6EDA               	movwf	fsr2h,c
 40511  01D6FE  0E00               	movlw	0
 40512  01D700  6EDE               	movwf	postinc2,c
 40513  01D702  0E00               	movlw	0
 40514  01D704  6EDE               	movwf	postinc2,c
 40515  01D706  0E00               	movlw	0
 40516  01D708  6EDE               	movwf	postinc2,c
 40517  01D70A  0E00               	movlw	0
 40518  01D70C  6EDD               	movwf	postdec2,c
 40519  01D70E  D7D9               	goto	u12560
 40520  01D710                     l13490:
 40521                           
 40522                           ;mbmc.c: 42:  if (slow) {
 40523                           ;stkvar	_slow @ sp[(-4)+-6]
 40524  01D710  0EF6               	movlw	-10
 40525  01D712  50E3               	movf	plusw1,w,c
 40526  01D714  B4D8               	btfsc	status,2,c
 40527  01D716  D006               	goto	l13494
 40528                           
 40529                           ;mbmc.c: 43:   lp_speed = 0.033;
 40530  01D718  0E02               	movlw	2
 40531  01D71A  6E32               	movwf	(btemp+8)^0,c
 40532  01D71C  0E2B               	movlw	43
 40533  01D71E  6E33               	movwf	(btemp+9)^0,c
 40534  01D720  0E07               	movlw	7
 40535  01D722  D005               	goto	L46
 40536  01D724                     l13494:
 40537                           
 40538                           ;mbmc.c: 45:   lp_speed = 0.066;
 40539  01D724  0E02               	movlw	2
 40540  01D726  6E32               	movwf	(btemp+8)^0,c
 40541  01D728  0E2B               	movlw	43
 40542  01D72A  6E33               	movwf	(btemp+9)^0,c
 40543  01D72C  0E87               	movlw	135
 40544  01D72E                     L46:
 40545  01D72E  6E34               	movwf	(btemp+10)^0,c
 40546  01D730  0E3D               	movlw	61
 40547  01D732  6E35               	movwf	(btemp+11)^0,c
 40548                           
 40549                           ;stkvar	_lp_speed @ sp[(-4)+0]
 40550  01D734  0EFC               	movlw	-4
 40551  01D736  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 40552  01D73C  0EFD               	movlw	-3
 40553  01D73E  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 40554  01D744  0EFE               	movlw	-2
 40555  01D746  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 40556  01D74C  0EFF               	movlw	-1
 40557  01D74E  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 40558                           
 40559                           ;mbmc.c: 48:  return smooth[bn] = smooth[bn] + ((new - smooth[bn]) * lp_speed);
 40560                           ;stkvar	_bn @ sp[(-4)+-5]
 40561  01D754  0EF7               	movlw	-9
 40562  01D756  50E3               	movf	plusw1,w,c
 40563  01D758  0D04               	mullw	4
 40564  01D75A  0E00               	movlw	low lp_filter@smooth
 40565  01D75C  24F3               	addwf	243,w,c
 40566  01D75E  6ED9               	movwf	fsr2l,c
 40567  01D760  0E03               	movlw	high lp_filter@smooth
 40568  01D762  20F4               	addwfc	prodh,w,c
 40569  01D764  6EDA               	movwf	fsr2h,c
 40570  01D766  006F FF7B FFE6     	movff	postinc2,postinc1
 40571  01D76C  006F FF7B FFE6     	movff	postinc2,postinc1
 40572  01D772  006F FF7B FFE6     	movff	postinc2,postinc1
 40573  01D778  006F FF7B FFE6     	movff	postinc2,postinc1
 40574                           
 40575                           ;stkvar	_lp_speed @ sp[(-8)+0]
 40576  01D77E  0EF8               	movlw	-8
 40577  01D780  006F FF8F FFE6     	movff	plusw1,postinc1
 40578  01D786  006F FF8F FFE6     	movff	plusw1,postinc1
 40579  01D78C  006F FF8F FFE6     	movff	plusw1,postinc1
 40580  01D792  006F FF8F FFE6     	movff	plusw1,postinc1
 40581                           
 40582                           ;stkvar	_bn @ sp[(-12)+-5]
 40583  01D798  0EEF               	movlw	-17
 40584  01D79A  50E3               	movf	plusw1,w,c
 40585  01D79C  0D04               	mullw	4
 40586  01D79E  0E00               	movlw	low lp_filter@smooth
 40587  01D7A0  24F3               	addwf	243,w,c
 40588  01D7A2  6ED9               	movwf	fsr2l,c
 40589  01D7A4  0E03               	movlw	high lp_filter@smooth
 40590  01D7A6  20F4               	addwfc	prodh,w,c
 40591  01D7A8  6EDA               	movwf	fsr2h,c
 40592  01D7AA  006F FF7B FFE6     	movff	postinc2,postinc1
 40593  01D7B0  006F FF7B FFE6     	movff	postinc2,postinc1
 40594  01D7B6  006F FF7B FFE6     	movff	postinc2,postinc1
 40595  01D7BC  006F FF7B FFE6     	movff	postinc2,postinc1
 40596                           
 40597                           ;stkvar	_new @ sp[(-16)+-4]
 40598  01D7C2  0EEC               	movlw	-20
 40599  01D7C4  006F FF8F FFE6     	movff	plusw1,postinc1
 40600  01D7CA  006F FF8F FFE6     	movff	plusw1,postinc1
 40601  01D7D0  006F FF8F FFE6     	movff	plusw1,postinc1
 40602  01D7D6  006F FF8F FFE6     	movff	plusw1,postinc1
 40603  01D7DC  EC54  F00D         	call	___flsub	;wreg free
 40604  01D7E0  0060  F0AB  FFE6   	movff	btemp,postinc1
 40605  01D7E6  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 40606  01D7EC  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 40607  01D7F2  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 40608  01D7F8  EC4D  F0B2         	call	___flmul	;wreg free
 40609  01D7FC  0060  F0AB  FFE6   	movff	btemp,postinc1
 40610  01D802  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 40611  01D808  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 40612  01D80E  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 40613  01D814  EC62  F0B6         	call	___fladd	;wreg free
 40614                           
 40615                           ;stkvar	_bn @ sp[(-4)+-5]
 40616  01D818  0EF7               	movlw	-9
 40617  01D81A  50E3               	movf	plusw1,w,c
 40618  01D81C  0D04               	mullw	4
 40619  01D81E  0E00               	movlw	low lp_filter@smooth
 40620  01D820  24F3               	addwf	243,w,c
 40621  01D822  6ED9               	movwf	fsr2l,c
 40622  01D824  0E03               	movlw	high lp_filter@smooth
 40623  01D826  20F4               	addwfc	prodh,w,c
 40624  01D828  6EDA               	movwf	fsr2h,c
 40625  01D82A  0060  F0AB  FFDE   	movff	btemp,postinc2
 40626  01D830  0060  F0AF  FFDE   	movff	btemp+1,postinc2
 40627  01D836  0060  F0B3  FFDE   	movff	btemp+2,postinc2
 40628  01D83C  0060  F0B7  FFDD   	movff	btemp+3,postdec2
 40629  01D842  52DD               	movf	postdec2,f,c
 40630  01D844  52DD               	movf	postdec2,f,c
 40631  01D846  006F FF78  F02A    	movff	postinc2,btemp
 40632  01D84C  006F FF78  F02B    	movff	postinc2,btemp+1
 40633  01D852  006F FF78  F02C    	movff	postinc2,btemp+2
 40634  01D858  006F FF78  F02D    	movff	postinc2,btemp+3
 40635  01D85E                     l2137:
 40636                           
 40637                           ; _lp_filter: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
 40638  01D85E  0EF6               	movlw	246
 40639  01D860  26E1               	addwf	fsr1l,f,c
 40640  01D862  0EFF               	movlw	255
 40641  01D864  22E2               	addwfc	fsr1h,f,c
 40642  01D866  0012               	return		;funcret
 40643  01D868                     __end_of_lp_filter:
 40644                           	opt callstack 0
 40645                           
 40646 ;; *************** function ___flsub *****************
 40647 ;; Defined at:
 40648 ;;		line 245 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 40649 ;; Parameters:    Size  Location     Type
 40650 ;;  b               4  [STACK] float 
 40651 ;;  a               4  [STACK] float 
 40652 ;; Auto vars:     Size  Location     Type
 40653 ;;		None
 40654 ;; Return value:  Size  Location     Type
 40655 ;;                  4  [STACK] float 
 40656 ;; Registers used:
 40657 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 40658 ;; Tracked objects:
 40659 ;;		On entry : 0/0
 40660 ;;		On exit  : 0/0
 40661 ;;		Unchanged: 0/0
 40662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 40663 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40664 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40665 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40666 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40667 ;;Total ram usage:        0 bytes
 40668 ;; Hardware stack levels used:    1
 40669 ;; Hardware stack levels required when called:   16
 40670 ;; This function calls:
 40671 ;;		___fladd
 40672 ;; This function is called by:
 40673 ;;		_conv_raw_result
 40674 ;;		_lp_filter
 40675 ;;		_calc_model_data
 40676 ;;		_calc_ror_data
 40677 ;;		_esr_check
 40678 ;;		_efgtoa
 40679 ;; This function uses a reentrant model
 40680 ;;
 40681                           
 40682                           	psect	text152
 40683  001AA8                     __ptext152:
 40684                           	opt callstack 0
 40685  001AA8                     ___flsub:
 40686                           	opt callstack 0
 40687                           
 40688                           ;stkvar	_a @ sp[(0)+-8]
 40689                           
 40690                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 40691                           ;incstack = 0
 40692 ;; hardware stack exceeded
 40693  001AA8  0EFB               	movlw	-5
 40694  001AAA  7EE3               	btg	plusw1,7,c
 40695                           
 40696                           ;stkvar	_a @ sp[(0)+-8]
 40697  001AAC  0EF8               	movlw	-8
 40698  001AAE  006F FF8F FFE6     	movff	plusw1,postinc1
 40699  001AB4  006F FF8F FFE6     	movff	plusw1,postinc1
 40700  001ABA  006F FF8F FFE6     	movff	plusw1,postinc1
 40701  001AC0  006F FF8F FFE6     	movff	plusw1,postinc1
 40702                           
 40703                           ;stkvar	_b @ sp[(-4)+-4]
 40704  001AC6  0EF8               	movlw	-8
 40705  001AC8  006F FF8F FFE6     	movff	plusw1,postinc1
 40706  001ACE  006F FF8F FFE6     	movff	plusw1,postinc1
 40707  001AD4  006F FF8F FFE6     	movff	plusw1,postinc1
 40708  001ADA  006F FF8F FFE6     	movff	plusw1,postinc1
 40709  001AE0  EC62  F0B6         	call	___fladd	;wreg free
 40710                           
 40711                           ; ___flsub: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 40712  001AE4  0EF8               	movlw	248
 40713  001AE6  26E1               	addwf	fsr1l,f,c
 40714  001AE8  0EFF               	movlw	255
 40715  001AEA  22E2               	addwfc	fsr1h,f,c
 40716  001AEC  0012               	return		;funcret
 40717  001AEE                     __end_of___flsub:
 40718                           	opt callstack 0
 40719                           
 40720 ;; *************** function ___fladd *****************
 40721 ;; Defined at:
 40722 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 40723 ;; Parameters:    Size  Location     Type
 40724 ;;  b               4  [STACK] float 
 40725 ;;  a               4  [STACK] float 
 40726 ;; Auto vars:     Size  Location     Type
 40727 ;;  grs             1  [STACK] unsigned char 
 40728 ;;  bexp            1  [STACK] unsigned char 
 40729 ;;  aexp            1  [STACK] unsigned char 
 40730 ;;  signs           1  [STACK] unsigned char 
 40731 ;; Return value:  Size  Location     Type
 40732 ;;                  4  [STACK] unsigned char 
 40733 ;; Registers used:
 40734 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 40735 ;; Tracked objects:
 40736 ;;		On entry : 0/0
 40737 ;;		On exit  : 0/0
 40738 ;;		Unchanged: 0/0
 40739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 40740 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40741 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40742 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40743 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40744 ;;Total ram usage:        0 bytes
 40745 ;; Hardware stack levels used:    1
 40746 ;; Hardware stack levels required when called:   15
 40747 ;; This function calls:
 40748 ;;		Nothing
 40749 ;; This function is called by:
 40750 ;;		_main
 40751 ;;		_lp_filter
 40752 ;;		_calc_model_data
 40753 ;;		_efgtoa
 40754 ;;		___asfladd
 40755 ;;		___flsub
 40756 ;; This function uses a reentrant model
 40757 ;;
 40758                           
 40759                           	psect	text153
 40760  016CC4                     __ptext153:
 40761                           	opt callstack 0
 40762  016CC4                     ___fladd:
 40763                           	opt callstack 0
 40764                           
 40765                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 40766  016CC4  52E6               	movf	postinc1,f,c
 40767  016CC6  52E6               	movf	postinc1,f,c
 40768  016CC8  52E6               	movf	postinc1,f,c
 40769  016CCA  52E6               	movf	postinc1,f,c
 40770                           
 40771                           ;stkvar	_b @ sp[(-4)+-4]
 40772                           
 40773                           ;incstack = 0
 40774 ;; hardware stack exceeded
 40775  016CCC  0EFB               	movlw	251
 40776  016CCE  24E1               	addwf	fsr1l,w,c
 40777  016CD0  6ED9               	movwf	fsr2l,c
 40778  016CD2  0EFF               	movlw	255
 40779  016CD4  20E2               	addwfc	fsr1h,w,c
 40780  016CD6  6EDA               	movwf	fsr2h,c
 40781  016CD8  50DF               	movf	indf2,w,c
 40782  016CDA  6E35               	movwf	(btemp+11)^0,c
 40783  016CDC  0E80               	movlw	128
 40784  016CDE  1635               	andwf	(btemp+11)^0,f,c
 40785                           
 40786                           ;stkvar	_signs @ sp[(-4)+3]
 40787  016CE0  0EFF               	movlw	-1
 40788  016CE2  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 40789                           
 40790                           ;stkvar	_b @ sp[(-4)+-4]
 40791  016CE8  0EFB               	movlw	251
 40792  016CEA  24E1               	addwf	fsr1l,w,c
 40793  016CEC  6ED9               	movwf	fsr2l,c
 40794  016CEE  0EFF               	movlw	255
 40795  016CF0  20E2               	addwfc	fsr1h,w,c
 40796  016CF2  6EDA               	movwf	fsr2h,c
 40797  016CF4  50DF               	movf	indf2,w,c
 40798  016CF6  6E35               	movwf	(btemp+11)^0,c
 40799  016CF8  90D8               	bcf	status,0,c
 40800  016CFA  3435               	rlcf	(btemp+11)^0,w,c
 40801  016CFC  6E34               	movwf	(btemp+10)^0,c
 40802                           
 40803                           ;stkvar	_bexp @ sp[(-4)+1]
 40804  016CFE  0EFD               	movlw	-3
 40805  016D00  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 40806                           
 40807                           ;stkvar	_b @ sp[(-4)+-4]
 40808  016D06  0EFA               	movlw	250
 40809  016D08  24E1               	addwf	fsr1l,w,c
 40810  016D0A  6ED9               	movwf	fsr2l,c
 40811  016D0C  0EFF               	movlw	255
 40812  016D0E  20E2               	addwfc	fsr1h,w,c
 40813  016D10  6EDA               	movwf	fsr2h,c
 40814  016D12  AEDF               	btfss	indf2,7,c
 40815  016D14  D002               	goto	l9748
 40816                           
 40817                           ;stkvar	_bexp @ sp[(-4)+1]
 40818  016D16  0EFD               	movlw	-3
 40819  016D18  80E3               	bsf	plusw1,0,c
 40820  016D1A                     l9748:
 40821                           
 40822                           ;stkvar	_bexp @ sp[(-4)+1]
 40823  016D1A  0EFD               	movlw	-3
 40824  016D1C  50E3               	movf	plusw1,w,c
 40825  016D1E  B4D8               	btfsc	status,2,c
 40826  016D20  D027               	goto	l9758
 40827                           
 40828                           ;stkvar	_bexp @ sp[(-4)+1]
 40829  016D22  0EFD               	movlw	-3
 40830  016D24  28E3               	incf	plusw1,w,c
 40831  016D26  A4D8               	btfss	status,2,c
 40832  016D28  D018               	goto	l9754
 40833  016D2A  0E00               	movlw	0
 40834  016D2C  6E32               	movwf	(btemp+8)^0,c
 40835  016D2E  0E00               	movlw	0
 40836  016D30  6E33               	movwf	(btemp+9)^0,c
 40837  016D32  0E00               	movlw	0
 40838  016D34  6E34               	movwf	(btemp+10)^0,c
 40839  016D36  0E00               	movlw	0
 40840  016D38  6E35               	movwf	(btemp+11)^0,c
 40841                           
 40842                           ;stkvar	_b @ sp[(-4)+-4]
 40843  016D3A  0EF8               	movlw	-8
 40844  016D3C  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 40845  016D42  0EF9               	movlw	-7
 40846  016D44  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 40847  016D4A  0EFA               	movlw	-6
 40848  016D4C  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 40849  016D52  0EFB               	movlw	-5
 40850  016D54  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 40851  016D5A                     l9754:
 40852                           
 40853                           ;stkvar	_b @ sp[(-4)+-4]
 40854  016D5A  0EFA               	movlw	-6
 40855  016D5C  8EE3               	bsf	plusw1,7,c
 40856                           
 40857                           ;stkvar	_b @ sp[(-4)+-4]
 40858  016D5E  0EFB               	movlw	251
 40859  016D60  24E1               	addwf	fsr1l,w,c
 40860  016D62  6ED9               	movwf	fsr2l,c
 40861  016D64  0EFF               	movlw	255
 40862  016D66  20E2               	addwfc	fsr1h,w,c
 40863  016D68  6EDA               	movwf	fsr2h,c
 40864  016D6A  0E00               	movlw	0
 40865  016D6C  6EDF               	movwf	indf2,c
 40866  016D6E  D018               	goto	l9760
 40867  016D70                     l9758:
 40868  016D70  0E00               	movlw	0
 40869  016D72  6E32               	movwf	(btemp+8)^0,c
 40870  016D74  0E00               	movlw	0
 40871  016D76  6E33               	movwf	(btemp+9)^0,c
 40872  016D78  0E00               	movlw	0
 40873  016D7A  6E34               	movwf	(btemp+10)^0,c
 40874  016D7C  0E00               	movlw	0
 40875  016D7E  6E35               	movwf	(btemp+11)^0,c
 40876                           
 40877                           ;stkvar	_b @ sp[(-4)+-4]
 40878  016D80  0EF8               	movlw	-8
 40879  016D82  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 40880  016D88  0EF9               	movlw	-7
 40881  016D8A  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 40882  016D90  0EFA               	movlw	-6
 40883  016D92  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 40884  016D98  0EFB               	movlw	-5
 40885  016D9A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 40886  016DA0                     l9760:
 40887                           
 40888                           ;stkvar	_a @ sp[(-4)+-8]
 40889  016DA0  0EF7               	movlw	247
 40890  016DA2  24E1               	addwf	fsr1l,w,c
 40891  016DA4  6ED9               	movwf	fsr2l,c
 40892  016DA6  0EFF               	movlw	255
 40893  016DA8  20E2               	addwfc	fsr1h,w,c
 40894  016DAA  6EDA               	movwf	fsr2h,c
 40895  016DAC  50DF               	movf	indf2,w,c
 40896  016DAE  6E35               	movwf	(btemp+11)^0,c
 40897  016DB0  0E80               	movlw	128
 40898  016DB2  1635               	andwf	(btemp+11)^0,f,c
 40899                           
 40900                           ;stkvar	_aexp @ sp[(-4)+2]
 40901  016DB4  0EFE               	movlw	-2
 40902  016DB6  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 40903                           
 40904                           ;stkvar	_signs @ sp[(-4)+3]
 40905                           ;stkvar	_aexp @ sp[(-4)+2]
 40906  016DBC  50E1               	movf	fsr1l,w,c
 40907  016DBE  0FFE               	addlw	-2
 40908  016DC0  6ED9               	movwf	fsr2l,c
 40909  016DC2  50E2               	movf	fsr1h,w,c
 40910  016DC4  6EDA               	movwf	fsr2h,c
 40911  016DC6  0EFF               	movlw	255
 40912  016DC8  22DA               	addwfc	fsr2h,f,c
 40913  016DCA  0EFF               	movlw	-1
 40914  016DCC  50E3               	movf	plusw1,w,c
 40915  016DCE  18DE               	xorwf	postinc2,w,c
 40916  016DD0  B4D8               	btfsc	status,2,c
 40917  016DD2  D002               	goto	l9766
 40918                           
 40919                           ;stkvar	_signs @ sp[(-4)+3]
 40920  016DD4  0EFF               	movlw	-1
 40921  016DD6  8CE3               	bsf	plusw1,6,c
 40922  016DD8                     l9766:
 40923                           
 40924                           ;stkvar	_a @ sp[(-4)+-8]
 40925  016DD8  0EF7               	movlw	247
 40926  016DDA  24E1               	addwf	fsr1l,w,c
 40927  016DDC  6ED9               	movwf	fsr2l,c
 40928  016DDE  0EFF               	movlw	255
 40929  016DE0  20E2               	addwfc	fsr1h,w,c
 40930  016DE2  6EDA               	movwf	fsr2h,c
 40931  016DE4  50DF               	movf	indf2,w,c
 40932  016DE6  6E35               	movwf	(btemp+11)^0,c
 40933  016DE8  90D8               	bcf	status,0,c
 40934  016DEA  3435               	rlcf	(btemp+11)^0,w,c
 40935  016DEC  6E34               	movwf	(btemp+10)^0,c
 40936                           
 40937                           ;stkvar	_aexp @ sp[(-4)+2]
 40938  016DEE  0EFE               	movlw	-2
 40939  016DF0  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 40940                           
 40941                           ;stkvar	_a @ sp[(-4)+-8]
 40942  016DF6  0EF6               	movlw	246
 40943  016DF8  24E1               	addwf	fsr1l,w,c
 40944  016DFA  6ED9               	movwf	fsr2l,c
 40945  016DFC  0EFF               	movlw	255
 40946  016DFE  20E2               	addwfc	fsr1h,w,c
 40947  016E00  6EDA               	movwf	fsr2h,c
 40948  016E02  AEDF               	btfss	indf2,7,c
 40949  016E04  D002               	goto	l9772
 40950                           
 40951                           ;stkvar	_aexp @ sp[(-4)+2]
 40952  016E06  0EFE               	movlw	-2
 40953  016E08  80E3               	bsf	plusw1,0,c
 40954  016E0A                     l9772:
 40955                           
 40956                           ;stkvar	_aexp @ sp[(-4)+2]
 40957  016E0A  0EFE               	movlw	-2
 40958  016E0C  50E3               	movf	plusw1,w,c
 40959  016E0E  B4D8               	btfsc	status,2,c
 40960  016E10  D027               	goto	l9782
 40961                           
 40962                           ;stkvar	_aexp @ sp[(-4)+2]
 40963  016E12  0EFE               	movlw	-2
 40964  016E14  28E3               	incf	plusw1,w,c
 40965  016E16  A4D8               	btfss	status,2,c
 40966  016E18  D018               	goto	l9778
 40967  016E1A  0E00               	movlw	0
 40968  016E1C  6E32               	movwf	(btemp+8)^0,c
 40969  016E1E  0E00               	movlw	0
 40970  016E20  6E33               	movwf	(btemp+9)^0,c
 40971  016E22  0E00               	movlw	0
 40972  016E24  6E34               	movwf	(btemp+10)^0,c
 40973  016E26  0E00               	movlw	0
 40974  016E28  6E35               	movwf	(btemp+11)^0,c
 40975                           
 40976                           ;stkvar	_a @ sp[(-4)+-8]
 40977  016E2A  0EF4               	movlw	-12
 40978  016E2C  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 40979  016E32  0EF5               	movlw	-11
 40980  016E34  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 40981  016E3A  0EF6               	movlw	-10
 40982  016E3C  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 40983  016E42  0EF7               	movlw	-9
 40984  016E44  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 40985  016E4A                     l9778:
 40986                           
 40987                           ;stkvar	_a @ sp[(-4)+-8]
 40988  016E4A  0EF6               	movlw	-10
 40989  016E4C  8EE3               	bsf	plusw1,7,c
 40990                           
 40991                           ;stkvar	_a @ sp[(-4)+-8]
 40992  016E4E  0EF7               	movlw	247
 40993  016E50  24E1               	addwf	fsr1l,w,c
 40994  016E52  6ED9               	movwf	fsr2l,c
 40995  016E54  0EFF               	movlw	255
 40996  016E56  20E2               	addwfc	fsr1h,w,c
 40997  016E58  6EDA               	movwf	fsr2h,c
 40998  016E5A  0E00               	movlw	0
 40999  016E5C  6EDF               	movwf	indf2,c
 41000  016E5E  D018               	goto	l9784
 41001  016E60                     l9782:
 41002  016E60  0E00               	movlw	0
 41003  016E62  6E32               	movwf	(btemp+8)^0,c
 41004  016E64  0E00               	movlw	0
 41005  016E66  6E33               	movwf	(btemp+9)^0,c
 41006  016E68  0E00               	movlw	0
 41007  016E6A  6E34               	movwf	(btemp+10)^0,c
 41008  016E6C  0E00               	movlw	0
 41009  016E6E  6E35               	movwf	(btemp+11)^0,c
 41010                           
 41011                           ;stkvar	_a @ sp[(-4)+-8]
 41012  016E70  0EF4               	movlw	-12
 41013  016E72  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 41014  016E78  0EF5               	movlw	-11
 41015  016E7A  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 41016  016E80  0EF6               	movlw	-10
 41017  016E82  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 41018  016E88  0EF7               	movlw	-9
 41019  016E8A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 41020  016E90                     l9784:
 41021                           
 41022                           ;stkvar	_bexp @ sp[(-4)+1]
 41023                           ;stkvar	_aexp @ sp[(-4)+2]
 41024  016E90  50E1               	movf	fsr1l,w,c
 41025  016E92  0FFE               	addlw	-2
 41026  016E94  6ED9               	movwf	fsr2l,c
 41027  016E96  50E2               	movf	fsr1h,w,c
 41028  016E98  6EDA               	movwf	fsr2h,c
 41029  016E9A  0EFF               	movlw	255
 41030  016E9C  22DA               	addwfc	fsr2h,f,c
 41031  016E9E  0EFD               	movlw	-3
 41032  016EA0  50E3               	movf	plusw1,w,c
 41033  016EA2  5CDE               	subwf	postinc2,w,c
 41034  016EA4  B0D8               	btfsc	status,0,c
 41035  016EA6  D0A4               	goto	l9820
 41036                           
 41037                           ;stkvar	_signs @ sp[(-4)+3]
 41038  016EA8  0EFF               	movlw	-1
 41039  016EAA  ACE3               	btfss	plusw1,6,c
 41040  016EAC  D002               	goto	l9790
 41041                           
 41042                           ;stkvar	_signs @ sp[(-4)+3]
 41043  016EAE  0EFF               	movlw	-1
 41044  016EB0  7EE3               	btg	plusw1,7,c
 41045  016EB2                     l9790:
 41046                           
 41047                           ;stkvar	_bexp @ sp[(-4)+1]
 41048                           ;stkvar	_grs @ sp[(-4)+0]
 41049  016EB2  0EFD               	movlw	-3
 41050  016EB4  006F FF8C  F02A    	movff	plusw1,btemp
 41051  016EBA  0EFC               	movlw	-4
 41052  016EBC  0060  F0AB  FFE3   	movff	btemp,plusw1
 41053                           
 41054                           ;stkvar	_aexp @ sp[(-4)+2]
 41055                           ;stkvar	_bexp @ sp[(-4)+1]
 41056  016EC2  0EFE               	movlw	-2
 41057  016EC4  006F FF8C  F02A    	movff	plusw1,btemp
 41058  016ECA  0EFD               	movlw	-3
 41059  016ECC  0060  F0AB  FFE3   	movff	btemp,plusw1
 41060                           
 41061                           ;stkvar	_grs @ sp[(-4)+0]
 41062                           ;stkvar	_aexp @ sp[(-4)+2]
 41063  016ED2  0EFC               	movlw	-4
 41064  016ED4  006F FF8C  F02A    	movff	plusw1,btemp
 41065  016EDA  0EFE               	movlw	-2
 41066  016EDC  0060  F0AB  FFE3   	movff	btemp,plusw1
 41067                           
 41068                           ;stkvar	_b @ sp[(-4)+-4]
 41069                           ;stkvar	_grs @ sp[(-4)+0]
 41070  016EE2  0EF8               	movlw	-8
 41071  016EE4  006F FF8C  F02A    	movff	plusw1,btemp
 41072  016EEA  0EFC               	movlw	-4
 41073  016EEC  0060  F0AB  FFE3   	movff	btemp,plusw1
 41074                           
 41075                           ;stkvar	_a @ sp[(-4)+-8]
 41076                           ;stkvar	_b @ sp[(-4)+-4]
 41077  016EF2  0EF4               	movlw	-12
 41078  016EF4  006F FF8C  F02A    	movff	plusw1,btemp
 41079  016EFA  0EF8               	movlw	-8
 41080  016EFC  0060  F0AB  FFE3   	movff	btemp,plusw1
 41081                           
 41082                           ;stkvar	_grs @ sp[(-4)+0]
 41083                           ;stkvar	_a @ sp[(-4)+-8]
 41084  016F02  0EFC               	movlw	-4
 41085  016F04  006F FF8C  F02A    	movff	plusw1,btemp
 41086  016F0A  0EF4               	movlw	-12
 41087  016F0C  0060  F0AB  FFE3   	movff	btemp,plusw1
 41088                           
 41089                           ;stkvar	_b @ sp[(-4)+-4]
 41090  016F12  0EF9               	movlw	249
 41091  016F14  24E1               	addwf	fsr1l,w,c
 41092  016F16  6ED9               	movwf	fsr2l,c
 41093  016F18  0EFF               	movlw	255
 41094  016F1A  20E2               	addwfc	fsr1h,w,c
 41095  016F1C  6EDA               	movwf	fsr2h,c
 41096  016F1E  50DF               	movf	indf2,w,c
 41097  016F20  6E35               	movwf	(btemp+11)^0,c
 41098                           
 41099                           ;stkvar	_grs @ sp[(-4)+0]
 41100  016F22  0EFC               	movlw	-4
 41101  016F24  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 41102                           
 41103                           ;stkvar	_a @ sp[(-4)+-8]
 41104  016F2A  0EF5               	movlw	245
 41105  016F2C  24E1               	addwf	fsr1l,w,c
 41106  016F2E  6ED9               	movwf	fsr2l,c
 41107  016F30  0EFF               	movlw	255
 41108  016F32  20E2               	addwfc	fsr1h,w,c
 41109  016F34  6EDA               	movwf	fsr2h,c
 41110                           
 41111                           ;stkvar	_b @ sp[(-4)+-4]
 41112  016F36  0EF9               	movlw	249
 41113  016F38  24E1               	addwf	fsr1l,w,c
 41114  016F3A  6EE9               	movwf	fsr0l,c
 41115  016F3C  0EFF               	movlw	255
 41116  016F3E  20E2               	addwfc	fsr1h,w,c
 41117  016F40  6EEA               	movwf	fsr0h,c
 41118  016F42  006F FF7F FFEF     	movff	indf2,indf0
 41119                           
 41120                           ;stkvar	_grs @ sp[(-4)+0]
 41121                           ;stkvar	_a @ sp[(-4)+-8]
 41122  016F48  0EF5               	movlw	245
 41123  016F4A  24E1               	addwf	fsr1l,w,c
 41124  016F4C  6ED9               	movwf	fsr2l,c
 41125  016F4E  0EFF               	movlw	255
 41126  016F50  20E2               	addwfc	fsr1h,w,c
 41127  016F52  6EDA               	movwf	fsr2h,c
 41128  016F54  0EFC               	movlw	-4
 41129  016F56  006F FF8F FFDF     	movff	plusw1,indf2
 41130                           
 41131                           ;stkvar	_b @ sp[(-4)+-4]
 41132  016F5C  0EFA               	movlw	250
 41133  016F5E  24E1               	addwf	fsr1l,w,c
 41134  016F60  6ED9               	movwf	fsr2l,c
 41135  016F62  0EFF               	movlw	255
 41136  016F64  20E2               	addwfc	fsr1h,w,c
 41137  016F66  6EDA               	movwf	fsr2h,c
 41138  016F68  50DF               	movf	indf2,w,c
 41139  016F6A  6E35               	movwf	(btemp+11)^0,c
 41140                           
 41141                           ;stkvar	_grs @ sp[(-4)+0]
 41142  016F6C  0EFC               	movlw	-4
 41143  016F6E  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 41144                           
 41145                           ;stkvar	_a @ sp[(-4)+-8]
 41146  016F74  0EF6               	movlw	246
 41147  016F76  24E1               	addwf	fsr1l,w,c
 41148  016F78  6ED9               	movwf	fsr2l,c
 41149  016F7A  0EFF               	movlw	255
 41150  016F7C  20E2               	addwfc	fsr1h,w,c
 41151  016F7E  6EDA               	movwf	fsr2h,c
 41152                           
 41153                           ;stkvar	_b @ sp[(-4)+-4]
 41154  016F80  0EFA               	movlw	250
 41155  016F82  24E1               	addwf	fsr1l,w,c
 41156  016F84  6EE9               	movwf	fsr0l,c
 41157  016F86  0EFF               	movlw	255
 41158  016F88  20E2               	addwfc	fsr1h,w,c
 41159  016F8A  6EEA               	movwf	fsr0h,c
 41160  016F8C  006F FF7F FFEF     	movff	indf2,indf0
 41161                           
 41162                           ;stkvar	_grs @ sp[(-4)+0]
 41163                           ;stkvar	_a @ sp[(-4)+-8]
 41164  016F92  0EF6               	movlw	246
 41165  016F94  24E1               	addwf	fsr1l,w,c
 41166  016F96  6ED9               	movwf	fsr2l,c
 41167  016F98  0EFF               	movlw	255
 41168  016F9A  20E2               	addwfc	fsr1h,w,c
 41169  016F9C  6EDA               	movwf	fsr2h,c
 41170  016F9E  0EFC               	movlw	-4
 41171  016FA0  006F FF8F FFDF     	movff	plusw1,indf2
 41172                           
 41173                           ;stkvar	_b @ sp[(-4)+-4]
 41174  016FA6  0EFB               	movlw	251
 41175  016FA8  24E1               	addwf	fsr1l,w,c
 41176  016FAA  6ED9               	movwf	fsr2l,c
 41177  016FAC  0EFF               	movlw	255
 41178  016FAE  20E2               	addwfc	fsr1h,w,c
 41179  016FB0  6EDA               	movwf	fsr2h,c
 41180  016FB2  50DF               	movf	indf2,w,c
 41181  016FB4  6E35               	movwf	(btemp+11)^0,c
 41182                           
 41183                           ;stkvar	_grs @ sp[(-4)+0]
 41184  016FB6  0EFC               	movlw	-4
 41185  016FB8  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 41186                           
 41187                           ;stkvar	_a @ sp[(-4)+-8]
 41188  016FBE  0EF7               	movlw	247
 41189  016FC0  24E1               	addwf	fsr1l,w,c
 41190  016FC2  6ED9               	movwf	fsr2l,c
 41191  016FC4  0EFF               	movlw	255
 41192  016FC6  20E2               	addwfc	fsr1h,w,c
 41193  016FC8  6EDA               	movwf	fsr2h,c
 41194                           
 41195                           ;stkvar	_b @ sp[(-4)+-4]
 41196  016FCA  0EFB               	movlw	251
 41197  016FCC  24E1               	addwf	fsr1l,w,c
 41198  016FCE  6EE9               	movwf	fsr0l,c
 41199  016FD0  0EFF               	movlw	255
 41200  016FD2  20E2               	addwfc	fsr1h,w,c
 41201  016FD4  6EEA               	movwf	fsr0h,c
 41202  016FD6  006F FF7F FFEF     	movff	indf2,indf0
 41203                           
 41204                           ;stkvar	_grs @ sp[(-4)+0]
 41205                           ;stkvar	_a @ sp[(-4)+-8]
 41206  016FDC  0EF7               	movlw	247
 41207  016FDE  24E1               	addwf	fsr1l,w,c
 41208  016FE0  6ED9               	movwf	fsr2l,c
 41209  016FE2  0EFF               	movlw	255
 41210  016FE4  20E2               	addwfc	fsr1h,w,c
 41211  016FE6  6EDA               	movwf	fsr2h,c
 41212  016FE8  0EFC               	movlw	-4
 41213  016FEA  006F FF8F FFDF     	movff	plusw1,indf2
 41214  016FF0                     l9820:
 41215                           
 41216                           ;stkvar	_grs @ sp[(-4)+0]
 41217  016FF0  0EFC               	movlw	-4
 41218  016FF2  6AE3               	clrf	plusw1,c
 41219                           
 41220                           ;stkvar	_aexp @ sp[(-4)+2]
 41221  016FF4  0EFE               	movlw	-2
 41222  016FF6  50E3               	movf	plusw1,w,c
 41223  016FF8  6E34               	movwf	(btemp+10)^0,c
 41224  016FFA  6A35               	clrf	(btemp+11)^0,c
 41225                           
 41226                           ;stkvar	_bexp @ sp[(-4)+1]
 41227  016FFC  0EFD               	movlw	-3
 41228  016FFE  50E3               	movf	plusw1,w,c
 41229  017000  5E34               	subwf	(btemp+10)^0,f,c
 41230  017002  0E00               	movlw	0
 41231  017004  5A35               	subwfb	(btemp+11)^0,f,c
 41232  017006  BE35               	btfsc	(btemp+11)^0,7,c
 41233  017008  D062               	goto	l9844
 41234  01700A  5035               	movf	(btemp+11)^0,w,c
 41235  01700C  E104               	bnz	u7260
 41236  01700E  0E1A               	movlw	26
 41237  017010  5C34               	subwf	(btemp+10)^0,w,c
 41238  017012  A0D8               	btfss	status,0,c
 41239  017014  D05C               	goto	l9844
 41240  017016                     u7260:
 41241                           
 41242                           ;stkvar	_b @ sp[(-4)+-4]
 41243  017016  0EF8               	movlw	-8
 41244  017018  50E3               	movf	plusw1,w,c
 41245  01701A  E10A               	bnz	u7271
 41246  01701C  0EF9               	movlw	-7
 41247  01701E  50E3               	movf	plusw1,w,c
 41248  017020  E107               	bnz	u7271
 41249  017022  0EFA               	movlw	-6
 41250  017024  50E3               	movf	plusw1,w,c
 41251  017026  E104               	bnz	u7271
 41252  017028  0EFB               	movlw	-5
 41253  01702A  50E3               	movf	plusw1,w,c
 41254  01702C  B4D8               	btfsc	status,2,c
 41255  01702E  D003               	goto	u7270
 41256  017030                     u7271:
 41257  017030  6A35               	clrf	(btemp+11)^0,c
 41258  017032  2A35               	incf	(btemp+11)^0,f,c
 41259  017034  D001               	goto	u7288
 41260  017036                     u7270:
 41261  017036  6A35               	clrf	(btemp+11)^0,c
 41262  017038                     u7288:
 41263                           
 41264                           ;stkvar	_grs @ sp[(-4)+0]
 41265  017038  0EFC               	movlw	-4
 41266  01703A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 41267                           
 41268                           ;stkvar	_b @ sp[(-4)+-4]
 41269  017040  0EF8               	movlw	-8
 41270  017042  6AE3               	clrf	plusw1,c
 41271  017044  0EF9               	movlw	-7
 41272  017046  6AE3               	clrf	plusw1,c
 41273  017048  0EFA               	movlw	-6
 41274  01704A  6AE3               	clrf	plusw1,c
 41275  01704C  0EFB               	movlw	-5
 41276  01704E  6AE3               	clrf	plusw1,c
 41277                           
 41278                           ;stkvar	_aexp @ sp[(-4)+2]
 41279                           ;stkvar	_bexp @ sp[(-4)+1]
 41280  017050  0EFE               	movlw	-2
 41281  017052  006F FF8C  F02A    	movff	plusw1,btemp
 41282  017058  0EFD               	movlw	-3
 41283  01705A  0060  F0AB  FFE3   	movff	btemp,plusw1
 41284  017060  D042               	goto	u7320
 41285  017062                     l9830:
 41286                           
 41287                           ;stkvar	_grs @ sp[(-4)+0]
 41288  017062  0EFC               	movlw	-4
 41289  017064  A0E3               	btfss	plusw1,0,c
 41290  017066  D00D               	goto	l9834
 41291                           
 41292                           ;stkvar	_grs @ sp[(-4)+0]
 41293  017068  0EFC               	movlw	-4
 41294  01706A  006F FF8C  F035    	movff	plusw1,btemp+11
 41295  017070  90D8               	bcf	status,0,c
 41296  017072  3235               	rrcf	(btemp+11)^0,f,c
 41297  017074  0E01               	movlw	1
 41298  017076  1235               	iorwf	(btemp+11)^0,f,c
 41299                           
 41300                           ;stkvar	_grs @ sp[(-4)+0]
 41301  017078  0EFC               	movlw	-4
 41302  01707A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 41303  017080  D009               	goto	l9836
 41304  017082                     l9834:
 41305                           
 41306                           ;stkvar	_grs @ sp[(-4)+0]
 41307  017082  50E1               	movf	fsr1l,w,c
 41308  017084  0FFC               	addlw	-4
 41309  017086  6ED9               	movwf	fsr2l,c
 41310  017088  50E2               	movf	fsr1h,w,c
 41311  01708A  6EDA               	movwf	fsr2h,c
 41312  01708C  0EFF               	movlw	255
 41313  01708E  22DA               	addwfc	fsr2h,f,c
 41314  017090  90D8               	bcf	status,0,c
 41315  017092  32DF               	rrcf	indf2,f,c
 41316  017094                     l9836:
 41317                           
 41318                           ;stkvar	_b @ sp[(-4)+-4]
 41319  017094  0EF8               	movlw	-8
 41320  017096  A0E3               	btfss	plusw1,0,c
 41321  017098  D002               	goto	l9840
 41322                           
 41323                           ;stkvar	_grs @ sp[(-4)+0]
 41324  01709A  0EFC               	movlw	-4
 41325  01709C  8EE3               	bsf	plusw1,7,c
 41326  01709E                     l9840:
 41327  01709E  0E01               	movlw	1
 41328  0170A0  6E35               	movwf	(btemp+11)^0,c
 41329                           
 41330                           ;stkvar	_b @ sp[(-4)+-4]
 41331  0170A2  50E1               	movf	fsr1l,w,c
 41332  0170A4  0FF8               	addlw	-8
 41333  0170A6  6ED9               	movwf	fsr2l,c
 41334  0170A8  50E2               	movf	fsr1h,w,c
 41335  0170AA  6EDA               	movwf	fsr2h,c
 41336  0170AC  0EFF               	movlw	255
 41337  0170AE  22DA               	addwfc	fsr2h,f,c
 41338  0170B0  2835               	incf	(btemp+11)^0,w,c
 41339  0170B2  52DE               	movf	postinc2,f,c
 41340  0170B4  D008               	goto	u7310
 41341  0170B6                     u7315:
 41342  0170B6  52DE               	movf	postinc2,f,c
 41343  0170B8  90D8               	bcf	status,0,c
 41344  0170BA  BEDC               	btfsc	preinc2,7,c
 41345  0170BC  80D8               	bsf	status,0,c
 41346  0170BE  32DD               	rrcf	postdec2,f,c
 41347  0170C0  32DD               	rrcf	postdec2,f,c
 41348  0170C2  32DD               	rrcf	postdec2,f,c
 41349  0170C4  32DE               	rrcf	postinc2,f,c
 41350  0170C6                     u7310:
 41351  0170C6  2EE8               	decfsz	wreg,f,c
 41352  0170C8  D7F6               	goto	u7315
 41353                           
 41354                           ;stkvar	_bexp @ sp[(-4)+1]
 41355  0170CA  0EFD               	movlw	-3
 41356  0170CC  2AE3               	incf	plusw1,f,c
 41357  0170CE                     l9844:
 41358                           
 41359                           ;stkvar	_aexp @ sp[(-4)+2]
 41360                           ;stkvar	_bexp @ sp[(-4)+1]
 41361  0170CE  50E1               	movf	fsr1l,w,c
 41362  0170D0  0FFD               	addlw	-3
 41363  0170D2  6ED9               	movwf	fsr2l,c
 41364  0170D4  50E2               	movf	fsr1h,w,c
 41365  0170D6  6EDA               	movwf	fsr2h,c
 41366  0170D8  0EFF               	movlw	255
 41367  0170DA  22DA               	addwfc	fsr2h,f,c
 41368  0170DC  0EFE               	movlw	-2
 41369  0170DE  50E3               	movf	plusw1,w,c
 41370  0170E0  5CDE               	subwf	postinc2,w,c
 41371  0170E2  A0D8               	btfss	status,0,c
 41372  0170E4  D7BE               	goto	l9830
 41373  0170E6                     u7320:
 41374                           
 41375                           ;stkvar	_signs @ sp[(-4)+3]
 41376  0170E6  0EFF               	movlw	-1
 41377  0170E8  BCE3               	btfsc	plusw1,6,c
 41378  0170EA  D066               	goto	l9872
 41379                           
 41380                           ;stkvar	_bexp @ sp[(-4)+1]
 41381  0170EC  0EFD               	movlw	-3
 41382  0170EE  50E3               	movf	plusw1,w,c
 41383  0170F0  B4D8               	btfsc	status,2,c
 41384  0170F2  D0F2               	goto	u7420
 41385                           
 41386                           ;stkvar	_a @ sp[(-4)+-8]
 41387                           ;stkvar	_b @ sp[(-4)+-4]
 41388  0170F4  0EF8               	movlw	-8
 41389  0170F6  50E3               	movf	plusw1,w,c
 41390  0170F8  6E2A               	movwf	btemp^0,c
 41391  0170FA  0EF4               	movlw	-12
 41392  0170FC  50E3               	movf	plusw1,w,c
 41393  0170FE  262A               	addwf	btemp^0,f,c
 41394  017100  0EF8               	movlw	-8
 41395  017102  0060  F0AB  FFE3   	movff	btemp,plusw1
 41396  017108  0EF9               	movlw	-7
 41397  01710A  50E3               	movf	plusw1,w,c
 41398  01710C  6E2A               	movwf	btemp^0,c
 41399  01710E  0EF5               	movlw	-11
 41400  017110  50E3               	movf	plusw1,w,c
 41401  017112  222A               	addwfc	btemp^0,f,c
 41402  017114  0EF9               	movlw	-7
 41403  017116  0060  F0AB  FFE3   	movff	btemp,plusw1
 41404  01711C  0EFA               	movlw	-6
 41405  01711E  50E3               	movf	plusw1,w,c
 41406  017120  6E2A               	movwf	btemp^0,c
 41407  017122  0EF6               	movlw	-10
 41408  017124  50E3               	movf	plusw1,w,c
 41409  017126  222A               	addwfc	btemp^0,f,c
 41410  017128  0EFA               	movlw	-6
 41411  01712A  0060  F0AB  FFE3   	movff	btemp,plusw1
 41412  017130  0EFB               	movlw	-5
 41413  017132  50E3               	movf	plusw1,w,c
 41414  017134  6E2A               	movwf	btemp^0,c
 41415  017136  0EF7               	movlw	-9
 41416  017138  50E3               	movf	plusw1,w,c
 41417  01713A  222A               	addwfc	btemp^0,f,c
 41418  01713C  0EFB               	movlw	-5
 41419  01713E  0060  F0AB  FFE3   	movff	btemp,plusw1
 41420                           
 41421                           ;stkvar	_b @ sp[(-4)+-4]
 41422  017144  0EFB               	movlw	-5
 41423  017146  A0E3               	btfss	plusw1,0,c
 41424  017148  D101               	goto	u7460
 41425                           
 41426                           ;stkvar	_grs @ sp[(-4)+0]
 41427  01714A  0EFC               	movlw	-4
 41428  01714C  A0E3               	btfss	plusw1,0,c
 41429  01714E  D00D               	goto	l9862
 41430                           
 41431                           ;stkvar	_grs @ sp[(-4)+0]
 41432  017150  0EFC               	movlw	-4
 41433  017152  006F FF8C  F035    	movff	plusw1,btemp+11
 41434  017158  90D8               	bcf	status,0,c
 41435  01715A  3235               	rrcf	(btemp+11)^0,f,c
 41436  01715C  0E01               	movlw	1
 41437  01715E  1235               	iorwf	(btemp+11)^0,f,c
 41438                           
 41439                           ;stkvar	_grs @ sp[(-4)+0]
 41440  017160  0EFC               	movlw	-4
 41441  017162  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 41442  017168  D009               	goto	l9864
 41443  01716A                     l9862:
 41444                           
 41445                           ;stkvar	_grs @ sp[(-4)+0]
 41446  01716A  50E1               	movf	fsr1l,w,c
 41447  01716C  0FFC               	addlw	-4
 41448  01716E  6ED9               	movwf	fsr2l,c
 41449  017170  50E2               	movf	fsr1h,w,c
 41450  017172  6EDA               	movwf	fsr2h,c
 41451  017174  0EFF               	movlw	255
 41452  017176  22DA               	addwfc	fsr2h,f,c
 41453  017178  90D8               	bcf	status,0,c
 41454  01717A  32DF               	rrcf	indf2,f,c
 41455  01717C                     l9864:
 41456                           
 41457                           ;stkvar	_b @ sp[(-4)+-4]
 41458  01717C  0EF8               	movlw	-8
 41459  01717E  A0E3               	btfss	plusw1,0,c
 41460  017180  D002               	goto	l9868
 41461                           
 41462                           ;stkvar	_grs @ sp[(-4)+0]
 41463  017182  0EFC               	movlw	-4
 41464  017184  8EE3               	bsf	plusw1,7,c
 41465  017186                     l9868:
 41466  017186  0E01               	movlw	1
 41467  017188  6E35               	movwf	(btemp+11)^0,c
 41468                           
 41469                           ;stkvar	_b @ sp[(-4)+-4]
 41470  01718A  50E1               	movf	fsr1l,w,c
 41471  01718C  0FF8               	addlw	-8
 41472  01718E  6ED9               	movwf	fsr2l,c
 41473  017190  50E2               	movf	fsr1h,w,c
 41474  017192  6EDA               	movwf	fsr2h,c
 41475  017194  0EFF               	movlw	255
 41476  017196  22DA               	addwfc	fsr2h,f,c
 41477  017198  2835               	incf	(btemp+11)^0,w,c
 41478  01719A  52DE               	movf	postinc2,f,c
 41479  01719C  D008               	goto	u7380
 41480  01719E                     u7385:
 41481  01719E  52DE               	movf	postinc2,f,c
 41482  0171A0  90D8               	bcf	status,0,c
 41483  0171A2  BEDC               	btfsc	preinc2,7,c
 41484  0171A4  80D8               	bsf	status,0,c
 41485  0171A6  32DD               	rrcf	postdec2,f,c
 41486  0171A8  32DD               	rrcf	postdec2,f,c
 41487  0171AA  32DD               	rrcf	postdec2,f,c
 41488  0171AC  32DE               	rrcf	postinc2,f,c
 41489  0171AE                     u7380:
 41490  0171AE  2EE8               	decfsz	wreg,f,c
 41491  0171B0  D7F6               	goto	u7385
 41492                           
 41493                           ;stkvar	_bexp @ sp[(-4)+1]
 41494  0171B2  0EFD               	movlw	-3
 41495  0171B4  2AE3               	incf	plusw1,f,c
 41496  0171B6  D0CA               	goto	u7460
 41497  0171B8                     l9872:
 41498                           
 41499                           ;stkvar	_a @ sp[(-4)+-8]
 41500                           ;stkvar	_b @ sp[(-4)+-4]
 41501  0171B8  50E1               	movf	fsr1l,w,c
 41502  0171BA  0FF8               	addlw	-8
 41503  0171BC  6ED9               	movwf	fsr2l,c
 41504  0171BE  50E2               	movf	fsr1h,w,c
 41505  0171C0  6EDA               	movwf	fsr2h,c
 41506  0171C2  0EFF               	movlw	255
 41507  0171C4  22DA               	addwfc	fsr2h,f,c
 41508  0171C6  0EF4               	movlw	-12
 41509  0171C8  50E3               	movf	plusw1,w,c
 41510  0171CA  5CDE               	subwf	postinc2,w,c
 41511  0171CC  0EF5               	movlw	-11
 41512  0171CE  50E3               	movf	plusw1,w,c
 41513  0171D0  58DE               	subwfb	postinc2,w,c
 41514  0171D2  0EF6               	movlw	-10
 41515  0171D4  50E3               	movf	plusw1,w,c
 41516  0171D6  58DE               	subwfb	postinc2,w,c
 41517  0171D8  50DE               	movf	postinc2,w,c
 41518  0171DA  0A80               	xorlw	128
 41519  0171DC  6E2A               	movwf	btemp^0,c
 41520  0171DE  0EF7               	movlw	-9
 41521  0171E0  50E3               	movf	plusw1,w,c
 41522  0171E2  0A80               	xorlw	128
 41523  0171E4  582A               	subwfb	btemp^0,w,c
 41524  0171E6  B0D8               	btfsc	status,0,c
 41525  0171E8  D053               	goto	l9884
 41526                           
 41527                           ;stkvar	_b @ sp[(-4)+-4]
 41528                           ;stkvar	_a @ sp[(-4)+-8]
 41529  0171EA  0EF4               	movlw	-12
 41530  0171EC  006F FF8C  F032    	movff	plusw1,btemp+8
 41531  0171F2  0EF5               	movlw	-11
 41532  0171F4  006F FF8C  F033    	movff	plusw1,btemp+9
 41533  0171FA  0EF6               	movlw	-10
 41534  0171FC  006F FF8C  F034    	movff	plusw1,btemp+10
 41535  017202  0EF7               	movlw	-9
 41536  017204  006F FF8C  F035    	movff	plusw1,btemp+11
 41537  01720A  0EF8               	movlw	-8
 41538  01720C  50E3               	movf	plusw1,w,c
 41539  01720E  5E32               	subwf	(btemp+8)^0,f,c
 41540  017210  0EF9               	movlw	-7
 41541  017212  50E3               	movf	plusw1,w,c
 41542  017214  5A33               	subwfb	(btemp+9)^0,f,c
 41543  017216  0EFA               	movlw	-6
 41544  017218  50E3               	movf	plusw1,w,c
 41545  01721A  5A34               	subwfb	(btemp+10)^0,f,c
 41546  01721C  0EFB               	movlw	-5
 41547  01721E  50E3               	movf	plusw1,w,c
 41548  017220  5A35               	subwfb	(btemp+11)^0,f,c
 41549  017222  0EFF               	movlw	255
 41550  017224  2432               	addwf	(btemp+8)^0,w,c
 41551  017226  6E2E               	movwf	(btemp+4)^0,c
 41552  017228  0EFF               	movlw	255
 41553  01722A  2033               	addwfc	(btemp+9)^0,w,c
 41554  01722C  6E2F               	movwf	(btemp+5)^0,c
 41555  01722E  0EFF               	movlw	255
 41556  017230  2034               	addwfc	(btemp+10)^0,w,c
 41557  017232  6E30               	movwf	(btemp+6)^0,c
 41558  017234  0EFF               	movlw	255
 41559  017236  2035               	addwfc	(btemp+11)^0,w,c
 41560  017238  6E31               	movwf	(btemp+7)^0,c
 41561                           
 41562                           ;stkvar	_b @ sp[(-4)+-4]
 41563  01723A  0EF8               	movlw	-8
 41564  01723C  0060  F0BB  FFE3   	movff	btemp+4,plusw1
 41565  017242  0EF9               	movlw	-7
 41566  017244  0060  F0BF  FFE3   	movff	btemp+5,plusw1
 41567  01724A  0EFA               	movlw	-6
 41568  01724C  0060  F0C3  FFE3   	movff	btemp+6,plusw1
 41569  017252  0EFB               	movlw	-5
 41570  017254  0060  F0C7  FFE3   	movff	btemp+7,plusw1
 41571                           
 41572                           ;stkvar	_signs @ sp[(-4)+3]
 41573  01725A  0EFF               	movlw	-1
 41574  01725C  7EE3               	btg	plusw1,7,c
 41575                           
 41576                           ;stkvar	_grs @ sp[(-4)+0]
 41577  01725E  0EFC               	movlw	-4
 41578  017260  50E3               	movf	plusw1,w,c
 41579  017262  0800               	sublw	0
 41580  017264  6E35               	movwf	(btemp+11)^0,c
 41581                           
 41582                           ;stkvar	_grs @ sp[(-4)+0]
 41583  017266  0EFC               	movlw	-4
 41584  017268  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 41585                           
 41586                           ;stkvar	_grs @ sp[(-4)+0]
 41587  01726E  0EFC               	movlw	-4
 41588  017270  50E3               	movf	plusw1,w,c
 41589  017272  A4D8               	btfss	status,2,c
 41590  017274  D020               	goto	l9886
 41591                           
 41592                           ;stkvar	_b @ sp[(-4)+-4]
 41593  017276  50E1               	movf	fsr1l,w,c
 41594  017278  0FF8               	addlw	-8
 41595  01727A  6ED9               	movwf	fsr2l,c
 41596  01727C  50E2               	movf	fsr1h,w,c
 41597  01727E  6EDA               	movwf	fsr2h,c
 41598  017280  0EFF               	movlw	255
 41599  017282  22DA               	addwfc	fsr2h,f,c
 41600  017284  2ADE               	incf	postinc2,f,c
 41601  017286  0E00               	movlw	0
 41602  017288  22DE               	addwfc	postinc2,f,c
 41603  01728A  22DE               	addwfc	postinc2,f,c
 41604  01728C  22DE               	addwfc	postinc2,f,c
 41605  01728E  D013               	goto	l9886
 41606  017290                     l9884:
 41607                           
 41608                           ;stkvar	_a @ sp[(-4)+-8]
 41609                           ;stkvar	_b @ sp[(-4)+-4]
 41610  017290  50E1               	movf	fsr1l,w,c
 41611  017292  0FF8               	addlw	-8
 41612  017294  6ED9               	movwf	fsr2l,c
 41613  017296  50E2               	movf	fsr1h,w,c
 41614  017298  6EDA               	movwf	fsr2h,c
 41615  01729A  0EFF               	movlw	255
 41616  01729C  22DA               	addwfc	fsr2h,f,c
 41617  01729E  0EF4               	movlw	-12
 41618  0172A0  50E3               	movf	plusw1,w,c
 41619  0172A2  5EDE               	subwf	postinc2,f,c
 41620  0172A4  0EF5               	movlw	-11
 41621  0172A6  50E3               	movf	plusw1,w,c
 41622  0172A8  5ADE               	subwfb	postinc2,f,c
 41623  0172AA  0EF6               	movlw	-10
 41624  0172AC  50E3               	movf	plusw1,w,c
 41625  0172AE  5ADE               	subwfb	postinc2,f,c
 41626  0172B0  0EF7               	movlw	-9
 41627  0172B2  50E3               	movf	plusw1,w,c
 41628  0172B4  5ADE               	subwfb	postinc2,f,c
 41629  0172B6                     l9886:
 41630                           
 41631                           ;stkvar	_b @ sp[(-4)+-4]
 41632  0172B6  0EF8               	movlw	-8
 41633  0172B8  50E3               	movf	plusw1,w,c
 41634  0172BA  E145               	bnz	l9908
 41635  0172BC  0EF9               	movlw	-7
 41636  0172BE  50E3               	movf	plusw1,w,c
 41637  0172C0  E142               	bnz	l9908
 41638  0172C2  0EFA               	movlw	-6
 41639  0172C4  50E3               	movf	plusw1,w,c
 41640  0172C6  E13F               	bnz	l9908
 41641  0172C8  0EFB               	movlw	-5
 41642  0172CA  50E3               	movf	plusw1,w,c
 41643  0172CC  A4D8               	btfss	status,2,c
 41644  0172CE  D03B               	goto	l9908
 41645                           
 41646                           ;stkvar	_grs @ sp[(-4)+0]
 41647  0172D0  0EFC               	movlw	-4
 41648  0172D2  50E3               	movf	plusw1,w,c
 41649  0172D4  A4D8               	btfss	status,2,c
 41650  0172D6  D037               	goto	l9908
 41651  0172D8                     u7420:
 41652  0172D8  0E00               	movlw	0
 41653  0172DA  6E2A               	movwf	btemp^0,c
 41654  0172DC  0E00               	movlw	0
 41655  0172DE  6E2B               	movwf	(btemp+1)^0,c
 41656  0172E0  0E00               	movlw	0
 41657  0172E2  6E2C               	movwf	(btemp+2)^0,c
 41658  0172E4  0E00               	movlw	0
 41659  0172E6  6E2D               	movwf	(btemp+3)^0,c
 41660  0172E8  D0C6               	goto	l3259
 41661  0172EA                     l9894:
 41662                           
 41663                           ;stkvar	_b @ sp[(-4)+-4]
 41664  0172EA  90D8               	bcf	status,0,c
 41665  0172EC  0EF8               	movlw	-8
 41666  0172EE  36E3               	rlcf	plusw1,f,c
 41667  0172F0  0EF9               	movlw	-7
 41668  0172F2  36E3               	rlcf	plusw1,f,c
 41669  0172F4  0EFA               	movlw	-6
 41670  0172F6  36E3               	rlcf	plusw1,f,c
 41671  0172F8  0EFB               	movlw	-5
 41672  0172FA  36E3               	rlcf	plusw1,f,c
 41673                           
 41674                           ;stkvar	_grs @ sp[(-4)+0]
 41675  0172FC  0EFC               	movlw	-4
 41676  0172FE  AEE3               	btfss	plusw1,7,c
 41677  017300  D002               	goto	l3271
 41678                           
 41679                           ;stkvar	_b @ sp[(-4)+-4]
 41680  017302  0EF8               	movlw	-8
 41681  017304  80E3               	bsf	plusw1,0,c
 41682  017306                     l3271:
 41683                           
 41684                           ;stkvar	_grs @ sp[(-4)+0]
 41685  017306  0EFC               	movlw	-4
 41686  017308  A0E3               	btfss	plusw1,0,c
 41687  01730A  D00E               	goto	l9902
 41688                           
 41689                           ;stkvar	_grs @ sp[(-4)+0]
 41690  01730C  0EFC               	movlw	-4
 41691  01730E  006F FF8C  F035    	movff	plusw1,btemp+11
 41692  017314  90D8               	bcf	status,0,c
 41693  017316  3435               	rlcf	(btemp+11)^0,w,c
 41694  017318  6E34               	movwf	(btemp+10)^0,c
 41695  01731A  0E01               	movlw	1
 41696  01731C  1234               	iorwf	(btemp+10)^0,f,c
 41697                           
 41698                           ;stkvar	_grs @ sp[(-4)+0]
 41699  01731E  0EFC               	movlw	-4
 41700  017320  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 41701  017326  D009               	goto	l9904
 41702  017328                     l9902:
 41703                           
 41704                           ;stkvar	_grs @ sp[(-4)+0]
 41705  017328  50E1               	movf	fsr1l,w,c
 41706  01732A  0FFC               	addlw	-4
 41707  01732C  6ED9               	movwf	fsr2l,c
 41708  01732E  50E2               	movf	fsr1h,w,c
 41709  017330  6EDA               	movwf	fsr2h,c
 41710  017332  0EFF               	movlw	255
 41711  017334  22DA               	addwfc	fsr2h,f,c
 41712  017336  90D8               	bcf	status,0,c
 41713  017338  36DF               	rlcf	indf2,f,c
 41714  01733A                     l9904:
 41715                           
 41716                           ;stkvar	_bexp @ sp[(-4)+1]
 41717  01733A  0EFD               	movlw	-3
 41718  01733C  50E3               	movf	plusw1,w,c
 41719  01733E  B4D8               	btfsc	status,2,c
 41720  017340  D002               	goto	l9908
 41721                           
 41722                           ;stkvar	_bexp @ sp[(-4)+1]
 41723  017342  0EFD               	movlw	-3
 41724  017344  06E3               	decf	plusw1,f,c
 41725  017346                     l9908:
 41726                           
 41727                           ;stkvar	_b @ sp[(-4)+-4]
 41728  017346  0EFA               	movlw	-6
 41729  017348  AEE3               	btfss	plusw1,7,c
 41730  01734A  D7CF               	goto	l9894
 41731  01734C                     u7460:
 41732                           
 41733                           ;stkvar	_aexp @ sp[(-4)+2]
 41734  01734C  0EFE               	movlw	-2
 41735  01734E  6AE3               	clrf	plusw1,c
 41736                           
 41737                           ;stkvar	_grs @ sp[(-4)+0]
 41738  017350  0EFC               	movlw	-4
 41739  017352  AEE3               	btfss	plusw1,7,c
 41740  017354  D00F               	goto	l9922
 41741                           
 41742                           ;stkvar	_grs @ sp[(-4)+0]
 41743  017356  0EFC               	movlw	-4
 41744  017358  006F FF8C  F035    	movff	plusw1,btemp+11
 41745  01735E  0E7F               	movlw	127
 41746  017360  1635               	andwf	(btemp+11)^0,f,c
 41747  017362  B4D8               	btfsc	status,2,c
 41748  017364  D004               	goto	l9918
 41749  017366                     u7480:
 41750                           
 41751                           ;stkvar	_aexp @ sp[(-4)+2]
 41752  017366  0EFE               	movlw	-2
 41753  017368  6AE3               	clrf	plusw1,c
 41754  01736A  2AE3               	incf	plusw1,f,c
 41755  01736C  D003               	goto	l9922
 41756  01736E                     l9918:
 41757                           
 41758                           ;stkvar	_b @ sp[(-4)+-4]
 41759  01736E  0EF8               	movlw	-8
 41760  017370  B0E3               	btfsc	plusw1,0,c
 41761  017372  D7F9               	goto	u7480
 41762  017374                     l9922:
 41763                           
 41764                           ;stkvar	_aexp @ sp[(-4)+2]
 41765  017374  0EFE               	movlw	-2
 41766  017376  50E3               	movf	plusw1,w,c
 41767  017378  B4D8               	btfsc	status,2,c
 41768  01737A  D02B               	goto	l9934
 41769                           
 41770                           ;stkvar	_b @ sp[(-4)+-4]
 41771  01737C  50E1               	movf	fsr1l,w,c
 41772  01737E  0FF8               	addlw	-8
 41773  017380  6ED9               	movwf	fsr2l,c
 41774  017382  50E2               	movf	fsr1h,w,c
 41775  017384  6EDA               	movwf	fsr2h,c
 41776  017386  0EFF               	movlw	255
 41777  017388  22DA               	addwfc	fsr2h,f,c
 41778  01738A  2ADE               	incf	postinc2,f,c
 41779  01738C  0E00               	movlw	0
 41780  01738E  22DE               	addwfc	postinc2,f,c
 41781  017390  22DE               	addwfc	postinc2,f,c
 41782  017392  22DE               	addwfc	postinc2,f,c
 41783                           
 41784                           ;stkvar	_b @ sp[(-4)+-4]
 41785  017394  0EFB               	movlw	-5
 41786  017396  A0E3               	btfss	plusw1,0,c
 41787  017398  D01C               	goto	l9934
 41788  01739A  0E01               	movlw	1
 41789  01739C  6E35               	movwf	(btemp+11)^0,c
 41790                           
 41791                           ;stkvar	_b @ sp[(-4)+-4]
 41792  01739E  50E1               	movf	fsr1l,w,c
 41793  0173A0  0FF8               	addlw	-8
 41794  0173A2  6ED9               	movwf	fsr2l,c
 41795  0173A4  50E2               	movf	fsr1h,w,c
 41796  0173A6  6EDA               	movwf	fsr2h,c
 41797  0173A8  0EFF               	movlw	255
 41798  0173AA  22DA               	addwfc	fsr2h,f,c
 41799  0173AC  2835               	incf	(btemp+11)^0,w,c
 41800  0173AE  52DE               	movf	postinc2,f,c
 41801  0173B0  D008               	goto	u7520
 41802  0173B2                     u7525:
 41803  0173B2  52DE               	movf	postinc2,f,c
 41804  0173B4  90D8               	bcf	status,0,c
 41805  0173B6  BEDC               	btfsc	preinc2,7,c
 41806  0173B8  80D8               	bsf	status,0,c
 41807  0173BA  32DD               	rrcf	postdec2,f,c
 41808  0173BC  32DD               	rrcf	postdec2,f,c
 41809  0173BE  32DD               	rrcf	postdec2,f,c
 41810  0173C0  32DE               	rrcf	postinc2,f,c
 41811  0173C2                     u7520:
 41812  0173C2  2EE8               	decfsz	wreg,f,c
 41813  0173C4  D7F6               	goto	u7525
 41814                           
 41815                           ;stkvar	_bexp @ sp[(-4)+1]
 41816  0173C6  0EFD               	movlw	-3
 41817  0173C8  28E3               	incf	plusw1,w,c
 41818  0173CA  B4D8               	btfsc	status,2,c
 41819  0173CC  D002               	goto	l9934
 41820                           
 41821                           ;stkvar	_bexp @ sp[(-4)+1]
 41822  0173CE  0EFD               	movlw	-3
 41823  0173D0  2AE3               	incf	plusw1,f,c
 41824  0173D2                     l9934:
 41825                           
 41826                           ;stkvar	_bexp @ sp[(-4)+1]
 41827  0173D2  0EFD               	movlw	-3
 41828  0173D4  28E3               	incf	plusw1,w,c
 41829  0173D6  B4D8               	btfsc	status,2,c
 41830  0173D8  D004               	goto	u7550
 41831                           
 41832                           ;stkvar	_bexp @ sp[(-4)+1]
 41833  0173DA  0EFD               	movlw	-3
 41834  0173DC  50E3               	movf	plusw1,w,c
 41835  0173DE  A4D8               	btfss	status,2,c
 41836  0173E0  D00E               	goto	l9944
 41837  0173E2                     u7550:
 41838                           
 41839                           ;stkvar	_b @ sp[(-4)+-4]
 41840  0173E2  0EF8               	movlw	-8
 41841  0173E4  6AE3               	clrf	plusw1,c
 41842  0173E6  0EF9               	movlw	-7
 41843  0173E8  6AE3               	clrf	plusw1,c
 41844  0173EA  0EFA               	movlw	-6
 41845  0173EC  6AE3               	clrf	plusw1,c
 41846  0173EE  0EFB               	movlw	-5
 41847  0173F0  6AE3               	clrf	plusw1,c
 41848                           
 41849                           ;stkvar	_bexp @ sp[(-4)+1]
 41850  0173F2  0EFD               	movlw	-3
 41851  0173F4  50E3               	movf	plusw1,w,c
 41852  0173F6  A4D8               	btfss	status,2,c
 41853  0173F8  D002               	goto	l9944
 41854                           
 41855                           ;stkvar	_signs @ sp[(-4)+3]
 41856  0173FA  0EFF               	movlw	-1
 41857  0173FC  6AE3               	clrf	plusw1,c
 41858  0173FE                     l9944:
 41859                           
 41860                           ;stkvar	_bexp @ sp[(-4)+1]
 41861  0173FE  0EFD               	movlw	-3
 41862  017400  A0E3               	btfss	plusw1,0,c
 41863  017402  D009               	goto	l9948
 41864                           
 41865                           ;stkvar	_b @ sp[(-4)+-4]
 41866  017404  0EFA               	movlw	250
 41867  017406  24E1               	addwf	fsr1l,w,c
 41868  017408  6ED9               	movwf	fsr2l,c
 41869  01740A  0EFF               	movlw	255
 41870  01740C  20E2               	addwfc	fsr1h,w,c
 41871  01740E  6EDA               	movwf	fsr2h,c
 41872  017410  0E00               	movlw	0
 41873  017412  8EDB               	bsf	plusw2,7,c
 41874  017414  D008               	goto	l9950
 41875  017416                     l9948:
 41876                           
 41877                           ;stkvar	_b @ sp[(-4)+-4]
 41878  017416  0EFA               	movlw	250
 41879  017418  24E1               	addwf	fsr1l,w,c
 41880  01741A  6ED9               	movwf	fsr2l,c
 41881  01741C  0EFF               	movlw	255
 41882  01741E  20E2               	addwfc	fsr1h,w,c
 41883  017420  6EDA               	movwf	fsr2h,c
 41884  017422  0E7F               	movlw	127
 41885  017424  16DF               	andwf	indf2,f,c
 41886  017426                     l9950:
 41887                           
 41888                           ;stkvar	_b @ sp[(-4)+-4]
 41889  017426  0EFB               	movlw	251
 41890  017428  24E1               	addwf	fsr1l,w,c
 41891  01742A  6ED9               	movwf	fsr2l,c
 41892  01742C  0EFF               	movlw	255
 41893  01742E  20E2               	addwfc	fsr1h,w,c
 41894  017430  6EDA               	movwf	fsr2h,c
 41895                           
 41896                           ;stkvar	_bexp @ sp[(-4)+1]
 41897  017432  0EFD               	movlw	-3
 41898  017434  006F FF8C  F035    	movff	plusw1,btemp+11
 41899  01743A  90D8               	bcf	status,0,c
 41900  01743C  3035               	rrcf	(btemp+11)^0,w,c
 41901  01743E  6EDF               	movwf	indf2,c
 41902                           
 41903                           ;stkvar	_signs @ sp[(-4)+3]
 41904  017440  0EFF               	movlw	-1
 41905  017442  AEE3               	btfss	plusw1,7,c
 41906  017444  D008               	goto	l9956
 41907                           
 41908                           ;stkvar	_b @ sp[(-4)+-4]
 41909  017446  0EFB               	movlw	251
 41910  017448  24E1               	addwf	fsr1l,w,c
 41911  01744A  6ED9               	movwf	fsr2l,c
 41912  01744C  0EFF               	movlw	255
 41913  01744E  20E2               	addwfc	fsr1h,w,c
 41914  017450  6EDA               	movwf	fsr2h,c
 41915  017452  0E00               	movlw	0
 41916  017454  8EDB               	bsf	plusw2,7,c
 41917  017456                     l9956:
 41918                           
 41919                           ;stkvar	_b @ sp[(-4)+-4]
 41920  017456  0EF8               	movlw	-8
 41921  017458  006F FF8C  F02A    	movff	plusw1,btemp
 41922  01745E  0EF9               	movlw	-7
 41923  017460  006F FF8C  F02B    	movff	plusw1,btemp+1
 41924  017466  0EFA               	movlw	-6
 41925  017468  006F FF8C  F02C    	movff	plusw1,btemp+2
 41926  01746E  0EFB               	movlw	-5
 41927  017470  006F FF8C  F02D    	movff	plusw1,btemp+3
 41928  017476                     l3259:
 41929                           
 41930                           ; ___fladd: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 41931  017476  0EF4               	movlw	244
 41932  017478  26E1               	addwf	fsr1l,f,c
 41933  01747A  0EFF               	movlw	255
 41934  01747C  22E2               	addwfc	fsr1h,f,c
 41935  01747E  0012               	return		;funcret
 41936  017480                     __end_of___fladd:
 41937                           	opt callstack 0
 41938                           
 41939 ;; *************** function ___flmul *****************
 41940 ;; Defined at:
 41941 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcmul.c"
 41942 ;; Parameters:    Size  Location     Type
 41943 ;;  b               4  [STACK] unsigned char 
 41944 ;;  a               4  [STACK] unsigned char 
 41945 ;; Auto vars:     Size  Location     Type
 41946 ;;  prod            4  [STACK] struct .
 41947 ;;  grs             4  [STACK] unsigned long 
 41948 ;;  temp            2  [STACK] struct .
 41949 ;;  bexp            1  [STACK] unsigned char 
 41950 ;;  aexp            1  [STACK] unsigned char 
 41951 ;;  sign            1  [STACK] unsigned char 
 41952 ;; Return value:  Size  Location     Type
 41953 ;;                  4  [STACK] unsigned char 
 41954 ;; Registers used:
 41955 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 41956 ;; Tracked objects:
 41957 ;;		On entry : 0/39
 41958 ;;		On exit  : 0/0
 41959 ;;		Unchanged: 0/0
 41960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 41961 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41962 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41963 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41964 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41965 ;;Total ram usage:        0 bytes
 41966 ;; Hardware stack levels used:    1
 41967 ;; Hardware stack levels required when called:   15
 41968 ;; This function calls:
 41969 ;;		Nothing
 41970 ;; This function is called by:
 41971 ;;		_conv_raw_result
 41972 ;;		_lp_filter
 41973 ;;		_calc_model_data
 41974 ;;		_load_hist_data
 41975 ;;		_calc_bsoc
 41976 ;;		_init_bsoc
 41977 ;;		_efgtoa
 41978 ;; This function uses a reentrant model
 41979 ;;
 41980                           
 41981                           	psect	text154
 41982  01649A                     __ptext154:
 41983                           	opt callstack 0
 41984  01649A                     ___flmul:
 41985                           	opt callstack 0
 41986                           
 41987                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 41988  01649A  0E0D               	movlw	13
 41989  01649C  26E1               	addwf	fsr1l,f,c
 41990  01649E  0E00               	movlw	0
 41991  0164A0  22E2               	addwfc	fsr1h,f,c
 41992                           
 41993                           ;stkvar	_b @ sp[(-13)+-4]
 41994                           
 41995                           ;incstack = 0
 41996 ;; hardware stack exceeded
 41997  0164A2  0EF2               	movlw	242
 41998  0164A4  24E1               	addwf	fsr1l,w,c
 41999  0164A6  6ED9               	movwf	fsr2l,c
 42000  0164A8  0EFF               	movlw	255
 42001  0164AA  20E2               	addwfc	fsr1h,w,c
 42002  0164AC  6EDA               	movwf	fsr2h,c
 42003  0164AE  50DF               	movf	indf2,w,c
 42004  0164B0  6E35               	movwf	(btemp+11)^0,c
 42005  0164B2  0E80               	movlw	128
 42006  0164B4  1635               	andwf	(btemp+11)^0,f,c
 42007                           
 42008                           ;stkvar	_sign @ sp[(-13)+12]
 42009  0164B6  0EFF               	movlw	-1
 42010  0164B8  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 42011                           
 42012                           ;stkvar	_b @ sp[(-13)+-4]
 42013  0164BE  0EF2               	movlw	242
 42014  0164C0  24E1               	addwf	fsr1l,w,c
 42015  0164C2  6ED9               	movwf	fsr2l,c
 42016  0164C4  0EFF               	movlw	255
 42017  0164C6  20E2               	addwfc	fsr1h,w,c
 42018  0164C8  6EDA               	movwf	fsr2h,c
 42019  0164CA  50DF               	movf	indf2,w,c
 42020  0164CC  6E35               	movwf	(btemp+11)^0,c
 42021  0164CE  90D8               	bcf	status,0,c
 42022  0164D0  3435               	rlcf	(btemp+11)^0,w,c
 42023  0164D2  6E34               	movwf	(btemp+10)^0,c
 42024                           
 42025                           ;stkvar	_bexp @ sp[(-13)+10]
 42026  0164D4  0EFD               	movlw	-3
 42027  0164D6  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 42028                           
 42029                           ;stkvar	_b @ sp[(-13)+-4]
 42030  0164DC  0EF1               	movlw	241
 42031  0164DE  24E1               	addwf	fsr1l,w,c
 42032  0164E0  6ED9               	movwf	fsr2l,c
 42033  0164E2  0EFF               	movlw	255
 42034  0164E4  20E2               	addwfc	fsr1h,w,c
 42035  0164E6  6EDA               	movwf	fsr2h,c
 42036  0164E8  AEDF               	btfss	indf2,7,c
 42037  0164EA  D002               	goto	l10420
 42038                           
 42039                           ;stkvar	_bexp @ sp[(-13)+10]
 42040  0164EC  0EFD               	movlw	-3
 42041  0164EE  80E3               	bsf	plusw1,0,c
 42042  0164F0                     l10420:
 42043                           
 42044                           ;stkvar	_bexp @ sp[(-13)+10]
 42045  0164F0  0EFD               	movlw	-3
 42046  0164F2  50E3               	movf	plusw1,w,c
 42047  0164F4  B4D8               	btfsc	status,2,c
 42048  0164F6  D01F               	goto	l10428
 42049                           
 42050                           ;stkvar	_bexp @ sp[(-13)+10]
 42051  0164F8  0EFD               	movlw	-3
 42052  0164FA  28E3               	incf	plusw1,w,c
 42053  0164FC  A4D8               	btfss	status,2,c
 42054  0164FE  D018               	goto	l10426
 42055  016500  0E00               	movlw	0
 42056  016502  6E32               	movwf	(btemp+8)^0,c
 42057  016504  0E00               	movlw	0
 42058  016506  6E33               	movwf	(btemp+9)^0,c
 42059  016508  0E00               	movlw	0
 42060  01650A  6E34               	movwf	(btemp+10)^0,c
 42061  01650C  0E00               	movlw	0
 42062  01650E  6E35               	movwf	(btemp+11)^0,c
 42063                           
 42064                           ;stkvar	_b @ sp[(-13)+-4]
 42065  016510  0EEF               	movlw	-17
 42066  016512  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 42067  016518  0EF0               	movlw	-16
 42068  01651A  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 42069  016520  0EF1               	movlw	-15
 42070  016522  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 42071  016528  0EF2               	movlw	-14
 42072  01652A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 42073  016530                     l10426:
 42074                           
 42075                           ;stkvar	_b @ sp[(-13)+-4]
 42076  016530  0EF1               	movlw	-15
 42077  016532  8EE3               	bsf	plusw1,7,c
 42078  016534  D018               	goto	l10430
 42079  016536                     l10428:
 42080  016536  0E00               	movlw	0
 42081  016538  6E32               	movwf	(btemp+8)^0,c
 42082  01653A  0E00               	movlw	0
 42083  01653C  6E33               	movwf	(btemp+9)^0,c
 42084  01653E  0E00               	movlw	0
 42085  016540  6E34               	movwf	(btemp+10)^0,c
 42086  016542  0E00               	movlw	0
 42087  016544  6E35               	movwf	(btemp+11)^0,c
 42088                           
 42089                           ;stkvar	_b @ sp[(-13)+-4]
 42090  016546  0EEF               	movlw	-17
 42091  016548  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 42092  01654E  0EF0               	movlw	-16
 42093  016550  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 42094  016556  0EF1               	movlw	-15
 42095  016558  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 42096  01655E  0EF2               	movlw	-14
 42097  016560  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 42098  016566                     l10430:
 42099                           
 42100                           ;stkvar	_a @ sp[(-13)+-8]
 42101  016566  0EEE               	movlw	238
 42102  016568  24E1               	addwf	fsr1l,w,c
 42103  01656A  6ED9               	movwf	fsr2l,c
 42104  01656C  0EFF               	movlw	255
 42105  01656E  20E2               	addwfc	fsr1h,w,c
 42106  016570  6EDA               	movwf	fsr2h,c
 42107  016572  50DF               	movf	indf2,w,c
 42108  016574  6E35               	movwf	(btemp+11)^0,c
 42109  016576  0E80               	movlw	128
 42110  016578  1635               	andwf	(btemp+11)^0,f,c
 42111                           
 42112                           ;stkvar	_sign @ sp[(-13)+12]
 42113  01657A  50E1               	movf	fsr1l,w,c
 42114  01657C  0FFF               	addlw	-1
 42115  01657E  6ED9               	movwf	fsr2l,c
 42116  016580  50E2               	movf	fsr1h,w,c
 42117  016582  6EDA               	movwf	fsr2h,c
 42118  016584  0EFF               	movlw	255
 42119  016586  22DA               	addwfc	fsr2h,f,c
 42120  016588  5035               	movf	(btemp+11)^0,w,c
 42121  01658A  1ADF               	xorwf	indf2,f,c
 42122                           
 42123                           ;stkvar	_a @ sp[(-13)+-8]
 42124  01658C  0EEE               	movlw	238
 42125  01658E  24E1               	addwf	fsr1l,w,c
 42126  016590  6ED9               	movwf	fsr2l,c
 42127  016592  0EFF               	movlw	255
 42128  016594  20E2               	addwfc	fsr1h,w,c
 42129  016596  6EDA               	movwf	fsr2h,c
 42130  016598  50DF               	movf	indf2,w,c
 42131  01659A  6E35               	movwf	(btemp+11)^0,c
 42132  01659C  90D8               	bcf	status,0,c
 42133  01659E  3435               	rlcf	(btemp+11)^0,w,c
 42134  0165A0  6E34               	movwf	(btemp+10)^0,c
 42135                           
 42136                           ;stkvar	_aexp @ sp[(-13)+11]
 42137  0165A2  0EFE               	movlw	-2
 42138  0165A4  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 42139                           
 42140                           ;stkvar	_a @ sp[(-13)+-8]
 42141  0165AA  0EED               	movlw	237
 42142  0165AC  24E1               	addwf	fsr1l,w,c
 42143  0165AE  6ED9               	movwf	fsr2l,c
 42144  0165B0  0EFF               	movlw	255
 42145  0165B2  20E2               	addwfc	fsr1h,w,c
 42146  0165B4  6EDA               	movwf	fsr2h,c
 42147  0165B6  AEDF               	btfss	indf2,7,c
 42148  0165B8  D002               	goto	l10438
 42149                           
 42150                           ;stkvar	_aexp @ sp[(-13)+11]
 42151  0165BA  0EFE               	movlw	-2
 42152  0165BC  80E3               	bsf	plusw1,0,c
 42153  0165BE                     l10438:
 42154                           
 42155                           ;stkvar	_aexp @ sp[(-13)+11]
 42156  0165BE  0EFE               	movlw	-2
 42157  0165C0  50E3               	movf	plusw1,w,c
 42158  0165C2  B4D8               	btfsc	status,2,c
 42159  0165C4  D01F               	goto	l10446
 42160                           
 42161                           ;stkvar	_aexp @ sp[(-13)+11]
 42162  0165C6  0EFE               	movlw	-2
 42163  0165C8  28E3               	incf	plusw1,w,c
 42164  0165CA  A4D8               	btfss	status,2,c
 42165  0165CC  D018               	goto	l10444
 42166  0165CE  0E00               	movlw	0
 42167  0165D0  6E32               	movwf	(btemp+8)^0,c
 42168  0165D2  0E00               	movlw	0
 42169  0165D4  6E33               	movwf	(btemp+9)^0,c
 42170  0165D6  0E00               	movlw	0
 42171  0165D8  6E34               	movwf	(btemp+10)^0,c
 42172  0165DA  0E00               	movlw	0
 42173  0165DC  6E35               	movwf	(btemp+11)^0,c
 42174                           
 42175                           ;stkvar	_a @ sp[(-13)+-8]
 42176  0165DE  0EEB               	movlw	-21
 42177  0165E0  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 42178  0165E6  0EEC               	movlw	-20
 42179  0165E8  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 42180  0165EE  0EED               	movlw	-19
 42181  0165F0  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 42182  0165F6  0EEE               	movlw	-18
 42183  0165F8  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 42184  0165FE                     l10444:
 42185                           
 42186                           ;stkvar	_a @ sp[(-13)+-8]
 42187  0165FE  0EED               	movlw	-19
 42188  016600  8EE3               	bsf	plusw1,7,c
 42189  016602  D018               	goto	l10448
 42190  016604                     l10446:
 42191  016604  0E00               	movlw	0
 42192  016606  6E32               	movwf	(btemp+8)^0,c
 42193  016608  0E00               	movlw	0
 42194  01660A  6E33               	movwf	(btemp+9)^0,c
 42195  01660C  0E00               	movlw	0
 42196  01660E  6E34               	movwf	(btemp+10)^0,c
 42197  016610  0E00               	movlw	0
 42198  016612  6E35               	movwf	(btemp+11)^0,c
 42199                           
 42200                           ;stkvar	_a @ sp[(-13)+-8]
 42201  016614  0EEB               	movlw	-21
 42202  016616  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 42203  01661C  0EEC               	movlw	-20
 42204  01661E  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 42205  016624  0EED               	movlw	-19
 42206  016626  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 42207  01662C  0EEE               	movlw	-18
 42208  01662E  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 42209  016634                     l10448:
 42210                           
 42211                           ;stkvar	_aexp @ sp[(-13)+11]
 42212  016634  0EFE               	movlw	-2
 42213  016636  50E3               	movf	plusw1,w,c
 42214  016638  B4D8               	btfsc	status,2,c
 42215  01663A  D004               	goto	u8610
 42216                           
 42217                           ;stkvar	_bexp @ sp[(-13)+10]
 42218  01663C  0EFD               	movlw	-3
 42219  01663E  50E3               	movf	plusw1,w,c
 42220  016640  A4D8               	btfss	status,2,c
 42221  016642  D009               	goto	l10456
 42222  016644                     u8610:
 42223  016644  0E00               	movlw	0
 42224  016646  6E2A               	movwf	btemp^0,c
 42225  016648  0E00               	movlw	0
 42226  01664A  6E2B               	movwf	(btemp+1)^0,c
 42227  01664C  0E00               	movlw	0
 42228  01664E  6E2C               	movwf	(btemp+2)^0,c
 42229  016650  0E00               	movlw	0
 42230  016652  6E2D               	movwf	(btemp+3)^0,c
 42231  016654  D332               	goto	l3340
 42232  016656                     l10456:
 42233                           
 42234                           ;stkvar	_b @ sp[(-13)+-4]
 42235  016656  0EEF               	movlw	-17
 42236  016658  006F FF8C  F035    	movff	plusw1,btemp+11
 42237                           
 42238                           ;stkvar	_a @ sp[(-13)+-8]
 42239  01665E  0EED               	movlw	237
 42240  016660  24E1               	addwf	fsr1l,w,c
 42241  016662  6ED9               	movwf	fsr2l,c
 42242  016664  0EFF               	movlw	255
 42243  016666  20E2               	addwfc	fsr1h,w,c
 42244  016668  6EDA               	movwf	fsr2h,c
 42245  01666A  50DF               	movf	indf2,w,c
 42246  01666C  0235               	mulwf	(btemp+11)^0,c
 42247                           
 42248                           ;stkvar	_temp @ sp[(-13)+8]
 42249  01666E  0EFB               	movlw	-5
 42250  016670  006F FFCF FFE3     	movff	prodl,plusw1
 42251  016676  0EFC               	movlw	-4
 42252  016678  006F FFD3 FFE3     	movff	prodh,plusw1
 42253                           
 42254                           ;stkvar	_temp @ sp[(-13)+8]
 42255  01667E  0EFB               	movlw	-5
 42256  016680  006F FF8C  F035    	movff	plusw1,btemp+11
 42257  016686  0060  F0D4  F02E   	movff	btemp+11,btemp+4
 42258  01668C  6A2F               	clrf	(btemp+5)^0,c
 42259  01668E  6A30               	clrf	(btemp+6)^0,c
 42260  016690  6A31               	clrf	(btemp+7)^0,c
 42261                           
 42262                           ;stkvar	_grs @ sp[(-13)+4]
 42263  016692  0EF7               	movlw	-9
 42264  016694  0060  F0BB  FFE3   	movff	btemp+4,plusw1
 42265  01669A  0EF8               	movlw	-8
 42266  01669C  0060  F0BF  FFE3   	movff	btemp+5,plusw1
 42267  0166A2  0EF9               	movlw	-7
 42268  0166A4  0060  F0C3  FFE3   	movff	btemp+6,plusw1
 42269  0166AA  0EFA               	movlw	-6
 42270  0166AC  0060  F0C7  FFE3   	movff	btemp+7,plusw1
 42271                           
 42272                           ;stkvar	_temp @ sp[(-13)+8]
 42273  0166B2  0EFC               	movlw	252
 42274  0166B4  24E1               	addwf	fsr1l,w,c
 42275  0166B6  6ED9               	movwf	fsr2l,c
 42276  0166B8  0EFF               	movlw	255
 42277  0166BA  20E2               	addwfc	fsr1h,w,c
 42278  0166BC  6EDA               	movwf	fsr2h,c
 42279  0166BE  50DF               	movf	indf2,w,c
 42280  0166C0  6E35               	movwf	(btemp+11)^0,c
 42281  0166C2  0060  F0D4  F02E   	movff	btemp+11,btemp+4
 42282  0166C8  6A2F               	clrf	(btemp+5)^0,c
 42283  0166CA  6A30               	clrf	(btemp+6)^0,c
 42284  0166CC  6A31               	clrf	(btemp+7)^0,c
 42285                           
 42286                           ;stkvar	_prod @ sp[(-13)+0]
 42287  0166CE  0EF3               	movlw	-13
 42288  0166D0  0060  F0BB  FFE3   	movff	btemp+4,plusw1
 42289  0166D6  0EF4               	movlw	-12
 42290  0166D8  0060  F0BF  FFE3   	movff	btemp+5,plusw1
 42291  0166DE  0EF5               	movlw	-11
 42292  0166E0  0060  F0C3  FFE3   	movff	btemp+6,plusw1
 42293  0166E6  0EF6               	movlw	-10
 42294  0166E8  0060  F0C7  FFE3   	movff	btemp+7,plusw1
 42295                           
 42296                           ;stkvar	_b @ sp[(-13)+-4]
 42297  0166EE  0EF0               	movlw	240
 42298  0166F0  24E1               	addwf	fsr1l,w,c
 42299  0166F2  6ED9               	movwf	fsr2l,c
 42300  0166F4  0EFF               	movlw	255
 42301  0166F6  20E2               	addwfc	fsr1h,w,c
 42302  0166F8  6EDA               	movwf	fsr2h,c
 42303  0166FA  50DF               	movf	indf2,w,c
 42304  0166FC  6E35               	movwf	(btemp+11)^0,c
 42305                           
 42306                           ;stkvar	_a @ sp[(-13)+-8]
 42307  0166FE  0EEC               	movlw	236
 42308  016700  24E1               	addwf	fsr1l,w,c
 42309  016702  6ED9               	movwf	fsr2l,c
 42310  016704  0EFF               	movlw	255
 42311  016706  20E2               	addwfc	fsr1h,w,c
 42312  016708  6EDA               	movwf	fsr2h,c
 42313  01670A  50DF               	movf	indf2,w,c
 42314  01670C  0235               	mulwf	(btemp+11)^0,c
 42315                           
 42316                           ;stkvar	_temp @ sp[(-13)+8]
 42317  01670E  0EFB               	movlw	-5
 42318  016710  006F FFCF FFE3     	movff	prodl,plusw1
 42319  016716  0EFC               	movlw	-4
 42320  016718  006F FFD3 FFE3     	movff	prodh,plusw1
 42321                           
 42322                           ;stkvar	_grs @ sp[(-13)+4]
 42323  01671E  50E1               	movf	fsr1l,w,c
 42324  016720  0FF7               	addlw	-9
 42325  016722  6ED9               	movwf	fsr2l,c
 42326  016724  50E2               	movf	fsr1h,w,c
 42327  016726  6EDA               	movwf	fsr2h,c
 42328  016728  0EFF               	movlw	255
 42329  01672A  22DA               	addwfc	fsr2h,f,c
 42330                           
 42331                           ;stkvar	_temp @ sp[(-13)+8]
 42332  01672C  0EFB               	movlw	-5
 42333  01672E  50E3               	movf	plusw1,w,c
 42334  016730  26DE               	addwf	postinc2,f,c
 42335  016732  0E00               	movlw	0
 42336  016734  22DE               	addwfc	postinc2,f,c
 42337  016736  22DE               	addwfc	postinc2,f,c
 42338  016738  22DE               	addwfc	postinc2,f,c
 42339                           
 42340                           ;stkvar	_prod @ sp[(-13)+0]
 42341  01673A  50E1               	movf	fsr1l,w,c
 42342  01673C  0FF3               	addlw	-13
 42343  01673E  6ED9               	movwf	fsr2l,c
 42344  016740  50E2               	movf	fsr1h,w,c
 42345  016742  6EDA               	movwf	fsr2h,c
 42346  016744  0EFF               	movlw	255
 42347  016746  22DA               	addwfc	fsr2h,f,c
 42348                           
 42349                           ;stkvar	_temp @ sp[(-13)+8]
 42350  016748  0EFC               	movlw	252
 42351  01674A  24E1               	addwf	fsr1l,w,c
 42352  01674C  6EE9               	movwf	fsr0l,c
 42353  01674E  0EFF               	movlw	255
 42354  016750  20E2               	addwfc	fsr1h,w,c
 42355  016752  6EEA               	movwf	fsr0h,c
 42356  016754  50EF               	movf	indf0,w,c
 42357  016756  26DE               	addwf	postinc2,f,c
 42358  016758  0E00               	movlw	0
 42359  01675A  22DE               	addwfc	postinc2,f,c
 42360  01675C  22DE               	addwfc	postinc2,f,c
 42361  01675E  22DE               	addwfc	postinc2,f,c
 42362                           
 42363                           ;stkvar	_b @ sp[(-13)+-4]
 42364  016760  0EF1               	movlw	241
 42365  016762  24E1               	addwf	fsr1l,w,c
 42366  016764  6ED9               	movwf	fsr2l,c
 42367  016766  0EFF               	movlw	255
 42368  016768  20E2               	addwfc	fsr1h,w,c
 42369  01676A  6EDA               	movwf	fsr2h,c
 42370  01676C  50DF               	movf	indf2,w,c
 42371  01676E  6E35               	movwf	(btemp+11)^0,c
 42372                           
 42373                           ;stkvar	_a @ sp[(-13)+-8]
 42374  016770  0EEB               	movlw	-21
 42375  016772  50E3               	movf	plusw1,w,c
 42376  016774  0235               	mulwf	(btemp+11)^0,c
 42377                           
 42378                           ;stkvar	_temp @ sp[(-13)+8]
 42379  016776  0EFB               	movlw	-5
 42380  016778  006F FFCF FFE3     	movff	prodl,plusw1
 42381  01677E  0EFC               	movlw	-4
 42382  016780  006F FFD3 FFE3     	movff	prodh,plusw1
 42383                           
 42384                           ;stkvar	_grs @ sp[(-13)+4]
 42385  016786  50E1               	movf	fsr1l,w,c
 42386  016788  0FF7               	addlw	-9
 42387  01678A  6ED9               	movwf	fsr2l,c
 42388  01678C  50E2               	movf	fsr1h,w,c
 42389  01678E  6EDA               	movwf	fsr2h,c
 42390  016790  0EFF               	movlw	255
 42391  016792  22DA               	addwfc	fsr2h,f,c
 42392                           
 42393                           ;stkvar	_temp @ sp[(-13)+8]
 42394  016794  0EFB               	movlw	-5
 42395  016796  50E3               	movf	plusw1,w,c
 42396  016798  26DE               	addwf	postinc2,f,c
 42397  01679A  0E00               	movlw	0
 42398  01679C  22DE               	addwfc	postinc2,f,c
 42399  01679E  22DE               	addwfc	postinc2,f,c
 42400  0167A0  22DE               	addwfc	postinc2,f,c
 42401                           
 42402                           ;stkvar	_prod @ sp[(-13)+0]
 42403  0167A2  50E1               	movf	fsr1l,w,c
 42404  0167A4  0FF3               	addlw	-13
 42405  0167A6  6ED9               	movwf	fsr2l,c
 42406  0167A8  50E2               	movf	fsr1h,w,c
 42407  0167AA  6EDA               	movwf	fsr2h,c
 42408  0167AC  0EFF               	movlw	255
 42409  0167AE  22DA               	addwfc	fsr2h,f,c
 42410                           
 42411                           ;stkvar	_temp @ sp[(-13)+8]
 42412  0167B0  0EFC               	movlw	252
 42413  0167B2  24E1               	addwf	fsr1l,w,c
 42414  0167B4  6EE9               	movwf	fsr0l,c
 42415  0167B6  0EFF               	movlw	255
 42416  0167B8  20E2               	addwfc	fsr1h,w,c
 42417  0167BA  6EEA               	movwf	fsr0h,c
 42418  0167BC  50EF               	movf	indf0,w,c
 42419  0167BE  26DE               	addwf	postinc2,f,c
 42420  0167C0  0E00               	movlw	0
 42421  0167C2  22DE               	addwfc	postinc2,f,c
 42422  0167C4  22DE               	addwfc	postinc2,f,c
 42423  0167C6  22DE               	addwfc	postinc2,f,c
 42424                           
 42425                           ;stkvar	_grs @ sp[(-13)+4]
 42426  0167C8  50E1               	movf	fsr1l,w,c
 42427  0167CA  0FF7               	addlw	-9
 42428  0167CC  6ED9               	movwf	fsr2l,c
 42429  0167CE  50E2               	movf	fsr1h,w,c
 42430  0167D0  6EDA               	movwf	fsr2h,c
 42431  0167D2  0EFF               	movlw	255
 42432  0167D4  22DA               	addwfc	fsr2h,f,c
 42433  0167D6  0E08               	movlw	8
 42434  0167D8                     u8625:
 42435  0167D8  90D8               	bcf	status,0,c
 42436  0167DA  36DE               	rlcf	postinc2,f,c
 42437  0167DC  36DE               	rlcf	postinc2,f,c
 42438  0167DE  36DE               	rlcf	postinc2,f,c
 42439  0167E0  36DD               	rlcf	postdec2,f,c
 42440  0167E2  52DD               	movf	postdec2,f,c
 42441  0167E4  52DD               	movf	postdec2,f,c
 42442  0167E6  2EE8               	decfsz	wreg,f,c
 42443  0167E8  D7F7               	goto	u8625
 42444                           
 42445                           ;stkvar	_b @ sp[(-13)+-4]
 42446  0167EA  0EF0               	movlw	240
 42447  0167EC  24E1               	addwf	fsr1l,w,c
 42448  0167EE  6ED9               	movwf	fsr2l,c
 42449  0167F0  0EFF               	movlw	255
 42450  0167F2  20E2               	addwfc	fsr1h,w,c
 42451  0167F4  6EDA               	movwf	fsr2h,c
 42452  0167F6  50DF               	movf	indf2,w,c
 42453  0167F8  6E35               	movwf	(btemp+11)^0,c
 42454                           
 42455                           ;stkvar	_a @ sp[(-13)+-8]
 42456  0167FA  0EEB               	movlw	-21
 42457  0167FC  50E3               	movf	plusw1,w,c
 42458  0167FE  0235               	mulwf	(btemp+11)^0,c
 42459                           
 42460                           ;stkvar	_temp @ sp[(-13)+8]
 42461  016800  0EFB               	movlw	-5
 42462  016802  006F FFCF FFE3     	movff	prodl,plusw1
 42463  016808  0EFC               	movlw	-4
 42464  01680A  006F FFD3 FFE3     	movff	prodh,plusw1
 42465                           
 42466                           ;stkvar	_temp @ sp[(-13)+8]
 42467  016810  0EFB               	movlw	-5
 42468  016812  006F FF8C  F034    	movff	plusw1,btemp+10
 42469  016818  0EFC               	movlw	-4
 42470  01681A  006F FF8C  F035    	movff	plusw1,btemp+11
 42471                           
 42472                           ;stkvar	_grs @ sp[(-13)+4]
 42473  016820  50E1               	movf	fsr1l,w,c
 42474  016822  0FF7               	addlw	-9
 42475  016824  6ED9               	movwf	fsr2l,c
 42476  016826  50E2               	movf	fsr1h,w,c
 42477  016828  6EDA               	movwf	fsr2h,c
 42478  01682A  0EFF               	movlw	255
 42479  01682C  22DA               	addwfc	fsr2h,f,c
 42480  01682E  5034               	movf	(btemp+10)^0,w,c
 42481  016830  26DE               	addwf	postinc2,f,c
 42482  016832  5035               	movf	(btemp+11)^0,w,c
 42483  016834  22DE               	addwfc	postinc2,f,c
 42484  016836  0E00               	movlw	0
 42485  016838  22DE               	addwfc	postinc2,f,c
 42486  01683A  22DE               	addwfc	postinc2,f,c
 42487                           
 42488                           ;stkvar	_b @ sp[(-13)+-4]
 42489  01683C  0EEF               	movlw	-17
 42490  01683E  006F FF8C  F035    	movff	plusw1,btemp+11
 42491                           
 42492                           ;stkvar	_a @ sp[(-13)+-8]
 42493  016844  0EEC               	movlw	236
 42494  016846  24E1               	addwf	fsr1l,w,c
 42495  016848  6ED9               	movwf	fsr2l,c
 42496  01684A  0EFF               	movlw	255
 42497  01684C  20E2               	addwfc	fsr1h,w,c
 42498  01684E  6EDA               	movwf	fsr2h,c
 42499  016850  50DF               	movf	indf2,w,c
 42500  016852  0235               	mulwf	(btemp+11)^0,c
 42501                           
 42502                           ;stkvar	_temp @ sp[(-13)+8]
 42503  016854  0EFB               	movlw	-5
 42504  016856  006F FFCF FFE3     	movff	prodl,plusw1
 42505  01685C  0EFC               	movlw	-4
 42506  01685E  006F FFD3 FFE3     	movff	prodh,plusw1
 42507                           
 42508                           ;stkvar	_temp @ sp[(-13)+8]
 42509  016864  0EFB               	movlw	-5
 42510  016866  006F FF8C  F034    	movff	plusw1,btemp+10
 42511  01686C  0EFC               	movlw	-4
 42512  01686E  006F FF8C  F035    	movff	plusw1,btemp+11
 42513                           
 42514                           ;stkvar	_grs @ sp[(-13)+4]
 42515  016874  50E1               	movf	fsr1l,w,c
 42516  016876  0FF7               	addlw	-9
 42517  016878  6ED9               	movwf	fsr2l,c
 42518  01687A  50E2               	movf	fsr1h,w,c
 42519  01687C  6EDA               	movwf	fsr2h,c
 42520  01687E  0EFF               	movlw	255
 42521  016880  22DA               	addwfc	fsr2h,f,c
 42522  016882  5034               	movf	(btemp+10)^0,w,c
 42523  016884  26DE               	addwf	postinc2,f,c
 42524  016886  5035               	movf	(btemp+11)^0,w,c
 42525  016888  22DE               	addwfc	postinc2,f,c
 42526  01688A  0E00               	movlw	0
 42527  01688C  22DE               	addwfc	postinc2,f,c
 42528  01688E  22DE               	addwfc	postinc2,f,c
 42529                           
 42530                           ;stkvar	_grs @ sp[(-13)+4]
 42531  016890  50E1               	movf	fsr1l,w,c
 42532  016892  0FF7               	addlw	-9
 42533  016894  6ED9               	movwf	fsr2l,c
 42534  016896  50E2               	movf	fsr1h,w,c
 42535  016898  6EDA               	movwf	fsr2h,c
 42536  01689A  0EFF               	movlw	255
 42537  01689C  22DA               	addwfc	fsr2h,f,c
 42538  01689E  0E08               	movlw	8
 42539  0168A0                     u8635:
 42540  0168A0  90D8               	bcf	status,0,c
 42541  0168A2  36DE               	rlcf	postinc2,f,c
 42542  0168A4  36DE               	rlcf	postinc2,f,c
 42543  0168A6  36DE               	rlcf	postinc2,f,c
 42544  0168A8  36DD               	rlcf	postdec2,f,c
 42545  0168AA  52DD               	movf	postdec2,f,c
 42546  0168AC  52DD               	movf	postdec2,f,c
 42547  0168AE  2EE8               	decfsz	wreg,f,c
 42548  0168B0  D7F7               	goto	u8635
 42549                           
 42550                           ;stkvar	_b @ sp[(-13)+-4]
 42551  0168B2  0EEF               	movlw	-17
 42552  0168B4  006F FF8C  F035    	movff	plusw1,btemp+11
 42553                           
 42554                           ;stkvar	_a @ sp[(-13)+-8]
 42555  0168BA  0EEB               	movlw	-21
 42556  0168BC  50E3               	movf	plusw1,w,c
 42557  0168BE  0235               	mulwf	(btemp+11)^0,c
 42558                           
 42559                           ;stkvar	_temp @ sp[(-13)+8]
 42560  0168C0  0EFB               	movlw	-5
 42561  0168C2  006F FFCF FFE3     	movff	prodl,plusw1
 42562  0168C8  0EFC               	movlw	-4
 42563  0168CA  006F FFD3 FFE3     	movff	prodh,plusw1
 42564                           
 42565                           ;stkvar	_temp @ sp[(-13)+8]
 42566  0168D0  0EFB               	movlw	-5
 42567  0168D2  006F FF8C  F034    	movff	plusw1,btemp+10
 42568  0168D8  0EFC               	movlw	-4
 42569  0168DA  006F FF8C  F035    	movff	plusw1,btemp+11
 42570                           
 42571                           ;stkvar	_grs @ sp[(-13)+4]
 42572  0168E0  50E1               	movf	fsr1l,w,c
 42573  0168E2  0FF7               	addlw	-9
 42574  0168E4  6ED9               	movwf	fsr2l,c
 42575  0168E6  50E2               	movf	fsr1h,w,c
 42576  0168E8  6EDA               	movwf	fsr2h,c
 42577  0168EA  0EFF               	movlw	255
 42578  0168EC  22DA               	addwfc	fsr2h,f,c
 42579  0168EE  5034               	movf	(btemp+10)^0,w,c
 42580  0168F0  26DE               	addwf	postinc2,f,c
 42581  0168F2  5035               	movf	(btemp+11)^0,w,c
 42582  0168F4  22DE               	addwfc	postinc2,f,c
 42583  0168F6  0E00               	movlw	0
 42584  0168F8  22DE               	addwfc	postinc2,f,c
 42585  0168FA  22DE               	addwfc	postinc2,f,c
 42586                           
 42587                           ;stkvar	_b @ sp[(-13)+-4]
 42588  0168FC  0EF0               	movlw	240
 42589  0168FE  24E1               	addwf	fsr1l,w,c
 42590  016900  6ED9               	movwf	fsr2l,c
 42591  016902  0EFF               	movlw	255
 42592  016904  20E2               	addwfc	fsr1h,w,c
 42593  016906  6EDA               	movwf	fsr2h,c
 42594  016908  50DF               	movf	indf2,w,c
 42595  01690A  6E35               	movwf	(btemp+11)^0,c
 42596                           
 42597                           ;stkvar	_a @ sp[(-13)+-8]
 42598  01690C  0EED               	movlw	237
 42599  01690E  24E1               	addwf	fsr1l,w,c
 42600  016910  6ED9               	movwf	fsr2l,c
 42601  016912  0EFF               	movlw	255
 42602  016914  20E2               	addwfc	fsr1h,w,c
 42603  016916  6EDA               	movwf	fsr2h,c
 42604  016918  50DF               	movf	indf2,w,c
 42605  01691A  0235               	mulwf	(btemp+11)^0,c
 42606                           
 42607                           ;stkvar	_temp @ sp[(-13)+8]
 42608  01691C  0EFB               	movlw	-5
 42609  01691E  006F FFCF FFE3     	movff	prodl,plusw1
 42610  016924  0EFC               	movlw	-4
 42611  016926  006F FFD3 FFE3     	movff	prodh,plusw1
 42612                           
 42613                           ;stkvar	_temp @ sp[(-13)+8]
 42614  01692C  0EFB               	movlw	-5
 42615  01692E  006F FF8C  F034    	movff	plusw1,btemp+10
 42616  016934  0EFC               	movlw	-4
 42617  016936  006F FF8C  F035    	movff	plusw1,btemp+11
 42618                           
 42619                           ;stkvar	_prod @ sp[(-13)+0]
 42620  01693C  50E1               	movf	fsr1l,w,c
 42621  01693E  0FF3               	addlw	-13
 42622  016940  6ED9               	movwf	fsr2l,c
 42623  016942  50E2               	movf	fsr1h,w,c
 42624  016944  6EDA               	movwf	fsr2h,c
 42625  016946  0EFF               	movlw	255
 42626  016948  22DA               	addwfc	fsr2h,f,c
 42627  01694A  5034               	movf	(btemp+10)^0,w,c
 42628  01694C  26DE               	addwf	postinc2,f,c
 42629  01694E  5035               	movf	(btemp+11)^0,w,c
 42630  016950  22DE               	addwfc	postinc2,f,c
 42631  016952  0E00               	movlw	0
 42632  016954  22DE               	addwfc	postinc2,f,c
 42633  016956  22DE               	addwfc	postinc2,f,c
 42634                           
 42635                           ;stkvar	_b @ sp[(-13)+-4]
 42636  016958  0EF1               	movlw	241
 42637  01695A  24E1               	addwf	fsr1l,w,c
 42638  01695C  6ED9               	movwf	fsr2l,c
 42639  01695E  0EFF               	movlw	255
 42640  016960  20E2               	addwfc	fsr1h,w,c
 42641  016962  6EDA               	movwf	fsr2h,c
 42642  016964  50DF               	movf	indf2,w,c
 42643  016966  6E35               	movwf	(btemp+11)^0,c
 42644                           
 42645                           ;stkvar	_a @ sp[(-13)+-8]
 42646  016968  0EEC               	movlw	236
 42647  01696A  24E1               	addwf	fsr1l,w,c
 42648  01696C  6ED9               	movwf	fsr2l,c
 42649  01696E  0EFF               	movlw	255
 42650  016970  20E2               	addwfc	fsr1h,w,c
 42651  016972  6EDA               	movwf	fsr2h,c
 42652  016974  50DF               	movf	indf2,w,c
 42653  016976  0235               	mulwf	(btemp+11)^0,c
 42654                           
 42655                           ;stkvar	_temp @ sp[(-13)+8]
 42656  016978  0EFB               	movlw	-5
 42657  01697A  006F FFCF FFE3     	movff	prodl,plusw1
 42658  016980  0EFC               	movlw	-4
 42659  016982  006F FFD3 FFE3     	movff	prodh,plusw1
 42660                           
 42661                           ;stkvar	_temp @ sp[(-13)+8]
 42662  016988  0EFB               	movlw	-5
 42663  01698A  006F FF8C  F034    	movff	plusw1,btemp+10
 42664  016990  0EFC               	movlw	-4
 42665  016992  006F FF8C  F035    	movff	plusw1,btemp+11
 42666                           
 42667                           ;stkvar	_prod @ sp[(-13)+0]
 42668  016998  50E1               	movf	fsr1l,w,c
 42669  01699A  0FF3               	addlw	-13
 42670  01699C  6ED9               	movwf	fsr2l,c
 42671  01699E  50E2               	movf	fsr1h,w,c
 42672  0169A0  6EDA               	movwf	fsr2h,c
 42673  0169A2  0EFF               	movlw	255
 42674  0169A4  22DA               	addwfc	fsr2h,f,c
 42675  0169A6  5034               	movf	(btemp+10)^0,w,c
 42676  0169A8  26DE               	addwf	postinc2,f,c
 42677  0169AA  5035               	movf	(btemp+11)^0,w,c
 42678  0169AC  22DE               	addwfc	postinc2,f,c
 42679  0169AE  0E00               	movlw	0
 42680  0169B0  22DE               	addwfc	postinc2,f,c
 42681  0169B2  22DE               	addwfc	postinc2,f,c
 42682                           
 42683                           ;stkvar	_b @ sp[(-13)+-4]
 42684  0169B4  0EF1               	movlw	241
 42685  0169B6  24E1               	addwf	fsr1l,w,c
 42686  0169B8  6ED9               	movwf	fsr2l,c
 42687  0169BA  0EFF               	movlw	255
 42688  0169BC  20E2               	addwfc	fsr1h,w,c
 42689  0169BE  6EDA               	movwf	fsr2h,c
 42690  0169C0  50DF               	movf	indf2,w,c
 42691  0169C2  6E35               	movwf	(btemp+11)^0,c
 42692                           
 42693                           ;stkvar	_a @ sp[(-13)+-8]
 42694  0169C4  0EED               	movlw	237
 42695  0169C6  24E1               	addwf	fsr1l,w,c
 42696  0169C8  6ED9               	movwf	fsr2l,c
 42697  0169CA  0EFF               	movlw	255
 42698  0169CC  20E2               	addwfc	fsr1h,w,c
 42699  0169CE  6EDA               	movwf	fsr2h,c
 42700  0169D0  50DF               	movf	indf2,w,c
 42701  0169D2  0235               	mulwf	(btemp+11)^0,c
 42702                           
 42703                           ;stkvar	_temp @ sp[(-13)+8]
 42704  0169D4  0EFB               	movlw	-5
 42705  0169D6  006F FFCF FFE3     	movff	prodl,plusw1
 42706  0169DC  0EFC               	movlw	-4
 42707  0169DE  006F FFD3 FFE3     	movff	prodh,plusw1
 42708                           
 42709                           ;stkvar	_temp @ sp[(-13)+8]
 42710  0169E4  0EFB               	movlw	-5
 42711  0169E6  006F FF8C  F034    	movff	plusw1,btemp+10
 42712  0169EC  0EFC               	movlw	-4
 42713  0169EE  006F FF8C  F035    	movff	plusw1,btemp+11
 42714  0169F4  5034               	movf	(btemp+10)^0,w,c
 42715  0169F6  6E2E               	movwf	(btemp+4)^0,c
 42716  0169F8  5035               	movf	(btemp+11)^0,w,c
 42717  0169FA  6E2F               	movwf	(btemp+5)^0,c
 42718  0169FC  6A30               	clrf	(btemp+6)^0,c
 42719  0169FE  6A31               	clrf	(btemp+7)^0,c
 42720  016A00  0060  F0C0  F031   	movff	btemp+6,btemp+7
 42721  016A06  0060  F0BC  F030   	movff	btemp+5,btemp+6
 42722  016A0C  0060  F0B8  F02F   	movff	btemp+4,btemp+5
 42723  016A12  6A2E               	clrf	(btemp+4)^0,c
 42724                           
 42725                           ;stkvar	_prod @ sp[(-13)+0]
 42726  016A14  50E1               	movf	fsr1l,w,c
 42727  016A16  0FF3               	addlw	-13
 42728  016A18  6ED9               	movwf	fsr2l,c
 42729  016A1A  50E2               	movf	fsr1h,w,c
 42730  016A1C  6EDA               	movwf	fsr2h,c
 42731  016A1E  0EFF               	movlw	255
 42732  016A20  22DA               	addwfc	fsr2h,f,c
 42733  016A22  502E               	movf	(btemp+4)^0,w,c
 42734  016A24  26DE               	addwf	postinc2,f,c
 42735  016A26  502F               	movf	(btemp+5)^0,w,c
 42736  016A28  22DE               	addwfc	postinc2,f,c
 42737  016A2A  5030               	movf	(btemp+6)^0,w,c
 42738  016A2C  22DE               	addwfc	postinc2,f,c
 42739  016A2E  5031               	movf	(btemp+7)^0,w,c
 42740  016A30  22DE               	addwfc	postinc2,f,c
 42741                           
 42742                           ;stkvar	_prod @ sp[(-13)+0]
 42743  016A32  50E1               	movf	fsr1l,w,c
 42744  016A34  0FF3               	addlw	-13
 42745  016A36  6ED9               	movwf	fsr2l,c
 42746  016A38  50E2               	movf	fsr1h,w,c
 42747  016A3A  6EDA               	movwf	fsr2h,c
 42748  016A3C  0EFF               	movlw	255
 42749  016A3E  22DA               	addwfc	fsr2h,f,c
 42750                           
 42751                           ;stkvar	_grs @ sp[(-13)+4]
 42752  016A40  0EFA               	movlw	250
 42753  016A42  24E1               	addwf	fsr1l,w,c
 42754  016A44  6EE9               	movwf	fsr0l,c
 42755  016A46  0EFF               	movlw	255
 42756  016A48  20E2               	addwfc	fsr1h,w,c
 42757  016A4A  6EEA               	movwf	fsr0h,c
 42758  016A4C  50EF               	movf	indf0,w,c
 42759  016A4E  26DE               	addwf	postinc2,f,c
 42760  016A50  0E00               	movlw	0
 42761  016A52  22DE               	addwfc	postinc2,f,c
 42762  016A54  22DE               	addwfc	postinc2,f,c
 42763  016A56  22DE               	addwfc	postinc2,f,c
 42764                           
 42765                           ;stkvar	_grs @ sp[(-13)+4]
 42766  016A58  50E1               	movf	fsr1l,w,c
 42767  016A5A  0FF7               	addlw	-9
 42768  016A5C  6ED9               	movwf	fsr2l,c
 42769  016A5E  50E2               	movf	fsr1h,w,c
 42770  016A60  6EDA               	movwf	fsr2h,c
 42771  016A62  0EFF               	movlw	255
 42772  016A64  22DA               	addwfc	fsr2h,f,c
 42773  016A66  0E08               	movlw	8
 42774  016A68                     u8645:
 42775  016A68  90D8               	bcf	status,0,c
 42776  016A6A  36DE               	rlcf	postinc2,f,c
 42777  016A6C  36DE               	rlcf	postinc2,f,c
 42778  016A6E  36DE               	rlcf	postinc2,f,c
 42779  016A70  36DD               	rlcf	postdec2,f,c
 42780  016A72  52DD               	movf	postdec2,f,c
 42781  016A74  52DD               	movf	postdec2,f,c
 42782  016A76  2EE8               	decfsz	wreg,f,c
 42783  016A78  D7F7               	goto	u8645
 42784  016A7A  0E82               	movlw	130
 42785  016A7C  6E34               	movwf	(btemp+10)^0,c
 42786  016A7E  0EFF               	movlw	255
 42787  016A80  6E35               	movwf	(btemp+11)^0,c
 42788                           
 42789                           ;stkvar	_bexp @ sp[(-13)+10]
 42790  016A82  0EFD               	movlw	-3
 42791  016A84  50E3               	movf	plusw1,w,c
 42792  016A86  6E32               	movwf	(btemp+8)^0,c
 42793  016A88  6A33               	clrf	(btemp+9)^0,c
 42794                           
 42795                           ;stkvar	_aexp @ sp[(-13)+11]
 42796  016A8A  0EFE               	movlw	-2
 42797  016A8C  50E3               	movf	plusw1,w,c
 42798  016A8E  2632               	addwf	(btemp+8)^0,f,c
 42799  016A90  0E00               	movlw	0
 42800  016A92  2233               	addwfc	(btemp+9)^0,f,c
 42801  016A94  5034               	movf	(btemp+10)^0,w,c
 42802  016A96  2632               	addwf	(btemp+8)^0,f,c
 42803  016A98  5035               	movf	(btemp+11)^0,w,c
 42804  016A9A  2233               	addwfc	(btemp+9)^0,f,c
 42805                           
 42806                           ;stkvar	_temp @ sp[(-13)+8]
 42807  016A9C  0EFB               	movlw	-5
 42808  016A9E  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 42809  016AA4  0EFC               	movlw	-4
 42810  016AA6  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 42811  016AAC  D021               	goto	l10518
 42812  016AAE                     l10508:
 42813                           
 42814                           ;stkvar	_prod @ sp[(-13)+0]
 42815  016AAE  90D8               	bcf	status,0,c
 42816  016AB0  0EF3               	movlw	-13
 42817  016AB2  36E3               	rlcf	plusw1,f,c
 42818  016AB4  0EF4               	movlw	-12
 42819  016AB6  36E3               	rlcf	plusw1,f,c
 42820  016AB8  0EF5               	movlw	-11
 42821  016ABA  36E3               	rlcf	plusw1,f,c
 42822  016ABC  0EF6               	movlw	-10
 42823  016ABE  36E3               	rlcf	plusw1,f,c
 42824                           
 42825                           ;stkvar	_grs @ sp[(-13)+4]
 42826  016AC0  0EFA               	movlw	-6
 42827  016AC2  AEE3               	btfss	plusw1,7,c
 42828  016AC4  D002               	goto	l10514
 42829                           
 42830                           ;stkvar	_prod @ sp[(-13)+0]
 42831  016AC6  0EF3               	movlw	-13
 42832  016AC8  80E3               	bsf	plusw1,0,c
 42833  016ACA                     l10514:
 42834                           
 42835                           ;stkvar	_grs @ sp[(-13)+4]
 42836  016ACA  90D8               	bcf	status,0,c
 42837  016ACC  0EF7               	movlw	-9
 42838  016ACE  36E3               	rlcf	plusw1,f,c
 42839  016AD0  0EF8               	movlw	-8
 42840  016AD2  36E3               	rlcf	plusw1,f,c
 42841  016AD4  0EF9               	movlw	-7
 42842  016AD6  36E3               	rlcf	plusw1,f,c
 42843  016AD8  0EFA               	movlw	-6
 42844  016ADA  36E3               	rlcf	plusw1,f,c
 42845                           
 42846                           ;stkvar	_temp @ sp[(-13)+8]
 42847  016ADC  50E1               	movf	fsr1l,w,c
 42848  016ADE  0FFB               	addlw	-5
 42849  016AE0  6ED9               	movwf	fsr2l,c
 42850  016AE2  50E2               	movf	fsr1h,w,c
 42851  016AE4  6EDA               	movwf	fsr2h,c
 42852  016AE6  0EFF               	movlw	255
 42853  016AE8  22DA               	addwfc	fsr2h,f,c
 42854  016AEA  06DE               	decf	postinc2,f,c
 42855  016AEC  0E00               	movlw	0
 42856  016AEE  5ADD               	subwfb	postdec2,f,c
 42857  016AF0                     l10518:
 42858                           
 42859                           ;stkvar	_prod @ sp[(-13)+0]
 42860  016AF0  0EF5               	movlw	-11
 42861  016AF2  AEE3               	btfss	plusw1,7,c
 42862  016AF4  D7DC               	goto	l10508
 42863                           
 42864                           ;stkvar	_aexp @ sp[(-13)+11]
 42865  016AF6  0EFE               	movlw	-2
 42866  016AF8  6AE3               	clrf	plusw1,c
 42867                           
 42868                           ;stkvar	_grs @ sp[(-13)+4]
 42869  016AFA  0EFA               	movlw	-6
 42870  016AFC  AEE3               	btfss	plusw1,7,c
 42871  016AFE  D020               	goto	l10532
 42872                           
 42873                           ;stkvar	_grs @ sp[(-13)+4]
 42874  016B00  50E1               	movf	fsr1l,w,c
 42875  016B02  0FF7               	addlw	-9
 42876  016B04  6ED9               	movwf	fsr2l,c
 42877  016B06  50E2               	movf	fsr1h,w,c
 42878  016B08  6EDA               	movwf	fsr2h,c
 42879  016B0A  0EFF               	movlw	255
 42880  016B0C  22DA               	addwfc	fsr2h,f,c
 42881  016B0E  0EFF               	movlw	255
 42882  016B10  14DE               	andwf	postinc2,w,c
 42883  016B12  6E32               	movwf	(btemp+8)^0,c
 42884  016B14  0EFF               	movlw	255
 42885  016B16  14DE               	andwf	postinc2,w,c
 42886  016B18  6E33               	movwf	(btemp+9)^0,c
 42887  016B1A  0EFF               	movlw	255
 42888  016B1C  14DE               	andwf	postinc2,w,c
 42889  016B1E  6E34               	movwf	(btemp+10)^0,c
 42890  016B20  0E7F               	movlw	127
 42891  016B22  14DE               	andwf	postinc2,w,c
 42892  016B24  6E35               	movwf	(btemp+11)^0,c
 42893  016B26  5032               	movf	(btemp+8)^0,w,c
 42894  016B28  1033               	iorwf	(btemp+9)^0,w,c
 42895  016B2A  1034               	iorwf	(btemp+10)^0,w,c
 42896  016B2C  1035               	iorwf	(btemp+11)^0,w,c
 42897  016B2E  B4D8               	btfsc	status,2,c
 42898  016B30  D004               	goto	l10528
 42899  016B32                     u8680:
 42900                           
 42901                           ;stkvar	_aexp @ sp[(-13)+11]
 42902  016B32  0EFE               	movlw	-2
 42903  016B34  6AE3               	clrf	plusw1,c
 42904  016B36  2AE3               	incf	plusw1,f,c
 42905  016B38  D003               	goto	l10532
 42906  016B3A                     l10528:
 42907                           
 42908                           ;stkvar	_prod @ sp[(-13)+0]
 42909  016B3A  0EF3               	movlw	-13
 42910  016B3C  B0E3               	btfsc	plusw1,0,c
 42911  016B3E  D7F9               	goto	u8680
 42912  016B40                     l10532:
 42913                           
 42914                           ;stkvar	_aexp @ sp[(-13)+11]
 42915  016B40  0EFE               	movlw	-2
 42916  016B42  50E3               	movf	plusw1,w,c
 42917  016B44  B4D8               	btfsc	status,2,c
 42918  016B46  D036               	goto	l10542
 42919                           
 42920                           ;stkvar	_prod @ sp[(-13)+0]
 42921  016B48  50E1               	movf	fsr1l,w,c
 42922  016B4A  0FF3               	addlw	-13
 42923  016B4C  6ED9               	movwf	fsr2l,c
 42924  016B4E  50E2               	movf	fsr1h,w,c
 42925  016B50  6EDA               	movwf	fsr2h,c
 42926  016B52  0EFF               	movlw	255
 42927  016B54  22DA               	addwfc	fsr2h,f,c
 42928  016B56  2ADE               	incf	postinc2,f,c
 42929  016B58  0E00               	movlw	0
 42930  016B5A  22DE               	addwfc	postinc2,f,c
 42931  016B5C  22DE               	addwfc	postinc2,f,c
 42932  016B5E  22DE               	addwfc	postinc2,f,c
 42933                           
 42934                           ;stkvar	_prod @ sp[(-13)+0]
 42935  016B60  0EF6               	movlw	-10
 42936  016B62  A0E3               	btfss	plusw1,0,c
 42937  016B64  D027               	goto	l10542
 42938  016B66  0E01               	movlw	1
 42939  016B68  6E35               	movwf	(btemp+11)^0,c
 42940                           
 42941                           ;stkvar	_prod @ sp[(-13)+0]
 42942  016B6A  50E1               	movf	fsr1l,w,c
 42943  016B6C  0FF3               	addlw	-13
 42944  016B6E  6ED9               	movwf	fsr2l,c
 42945  016B70  50E2               	movf	fsr1h,w,c
 42946  016B72  6EDA               	movwf	fsr2h,c
 42947  016B74  0EFF               	movlw	255
 42948  016B76  22DA               	addwfc	fsr2h,f,c
 42949  016B78  2835               	incf	(btemp+11)^0,w,c
 42950  016B7A  52DE               	movf	postinc2,f,c
 42951  016B7C  D008               	goto	u8720
 42952  016B7E                     u8725:
 42953  016B7E  52DE               	movf	postinc2,f,c
 42954  016B80  90D8               	bcf	status,0,c
 42955  016B82  BEDC               	btfsc	preinc2,7,c
 42956  016B84  80D8               	bsf	status,0,c
 42957  016B86  32DD               	rrcf	postdec2,f,c
 42958  016B88  32DD               	rrcf	postdec2,f,c
 42959  016B8A  32DD               	rrcf	postdec2,f,c
 42960  016B8C  32DE               	rrcf	postinc2,f,c
 42961  016B8E                     u8720:
 42962  016B8E  2EE8               	decfsz	wreg,f,c
 42963  016B90  D7F6               	goto	u8725
 42964                           
 42965                           ;stkvar	_temp @ sp[(-13)+8]
 42966  016B92  0EFB               	movlw	-5
 42967  016B94  50E3               	movf	plusw1,w,c
 42968  016B96  0F01               	addlw	1
 42969  016B98  6E2A               	movwf	btemp^0,c
 42970  016B9A  0EFB               	movlw	-5
 42971  016B9C  0060  F0AB  FFE3   	movff	btemp,plusw1
 42972  016BA2  6A2A               	clrf	btemp^0,c
 42973  016BA4  0EFC               	movlw	-4
 42974  016BA6  50E3               	movf	plusw1,w,c
 42975  016BA8  202A               	addwfc	btemp^0,w,c
 42976  016BAA  6E2A               	movwf	btemp^0,c
 42977  016BAC  0EFC               	movlw	-4
 42978  016BAE  0060  F0AB  FFE3   	movff	btemp,plusw1
 42979  016BB4                     l10542:
 42980                           
 42981                           ;stkvar	_temp @ sp[(-13)+8]
 42982  016BB4  0EFC               	movlw	-4
 42983  016BB6  BEE3               	btfsc	plusw1,7,c
 42984  016BB8  D020               	goto	l10546
 42985  016BBA  0EFC               	movlw	-4
 42986  016BBC  50E3               	movf	plusw1,w,c
 42987  016BBE  E104               	bnz	u8730
 42988  016BC0  0EFB               	movlw	-5
 42989  016BC2  28E3               	incf	plusw1,w,c
 42990  016BC4  A0D8               	btfss	status,0,c
 42991  016BC6  D019               	goto	l10546
 42992  016BC8                     u8730:
 42993  016BC8  0E00               	movlw	0
 42994  016BCA  6E32               	movwf	(btemp+8)^0,c
 42995  016BCC  0E00               	movlw	0
 42996  016BCE  6E33               	movwf	(btemp+9)^0,c
 42997  016BD0  0E80               	movlw	128
 42998  016BD2  6E34               	movwf	(btemp+10)^0,c
 42999  016BD4  0E7F               	movlw	127
 43000  016BD6  6E35               	movwf	(btemp+11)^0,c
 43001                           
 43002                           ;stkvar	_prod @ sp[(-13)+0]
 43003  016BD8  0EF3               	movlw	-13
 43004  016BDA  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 43005  016BE0  0EF4               	movlw	-12
 43006  016BE2  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 43007  016BE8  0EF5               	movlw	-11
 43008  016BEA  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 43009  016BF0  0EF6               	movlw	-10
 43010  016BF2  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 43011  016BF8  D044               	goto	l10562
 43012  016BFA                     l10546:
 43013                           
 43014                           ;stkvar	_temp @ sp[(-13)+8]
 43015  016BFA  0EFC               	movlw	-4
 43016  016BFC  BEE3               	btfsc	plusw1,7,c
 43017  016BFE  D007               	goto	u8740
 43018  016C00  0EFC               	movlw	-4
 43019  016C02  50E3               	movf	plusw1,w,c
 43020  016C04  E10F               	bnz	l10552
 43021  016C06  0EFB               	movlw	-5
 43022  016C08  04E3               	decf	plusw1,w,c
 43023  016C0A  B0D8               	btfsc	status,0,c
 43024  016C0C  D00B               	goto	l10552
 43025  016C0E                     u8740:
 43026                           
 43027                           ;stkvar	_prod @ sp[(-13)+0]
 43028  016C0E  0EF3               	movlw	-13
 43029  016C10  6AE3               	clrf	plusw1,c
 43030  016C12  0EF4               	movlw	-12
 43031  016C14  6AE3               	clrf	plusw1,c
 43032  016C16  0EF5               	movlw	-11
 43033  016C18  6AE3               	clrf	plusw1,c
 43034  016C1A  0EF6               	movlw	-10
 43035  016C1C  6AE3               	clrf	plusw1,c
 43036                           
 43037                           ;stkvar	_sign @ sp[(-13)+12]
 43038  016C1E  0EFF               	movlw	-1
 43039  016C20  6AE3               	clrf	plusw1,c
 43040  016C22  D02F               	goto	l10562
 43041  016C24                     l10552:
 43042                           
 43043                           ;stkvar	_temp @ sp[(-13)+8]
 43044                           ;stkvar	_bexp @ sp[(-13)+10]
 43045  016C24  0EFB               	movlw	-5
 43046  016C26  006F FF8C  F02A    	movff	plusw1,btemp
 43047  016C2C  0EFD               	movlw	-3
 43048  016C2E  0060  F0AB  FFE3   	movff	btemp,plusw1
 43049                           
 43050                           ;stkvar	_prod @ sp[(-13)+0]
 43051  016C34  50E1               	movf	fsr1l,w,c
 43052  016C36  0FF3               	addlw	-13
 43053  016C38  6ED9               	movwf	fsr2l,c
 43054  016C3A  50E2               	movf	fsr1h,w,c
 43055  016C3C  6EDA               	movwf	fsr2h,c
 43056  016C3E  0EFF               	movlw	255
 43057  016C40  22DA               	addwfc	fsr2h,f,c
 43058  016C42  0EFF               	movlw	255
 43059  016C44  16DE               	andwf	postinc2,f,c
 43060  016C46  0EFF               	movlw	255
 43061  016C48  16DE               	andwf	postinc2,f,c
 43062  016C4A  0E7F               	movlw	127
 43063  016C4C  16DE               	andwf	postinc2,f,c
 43064  016C4E  0E00               	movlw	0
 43065  016C50  16DE               	andwf	postinc2,f,c
 43066                           
 43067                           ;stkvar	_bexp @ sp[(-13)+10]
 43068  016C52  0EFD               	movlw	-3
 43069  016C54  A0E3               	btfss	plusw1,0,c
 43070  016C56  D008               	goto	l10560
 43071                           
 43072                           ;stkvar	_prod @ sp[(-13)+0]
 43073  016C58  0EF5               	movlw	245
 43074  016C5A  24E1               	addwf	fsr1l,w,c
 43075  016C5C  6ED9               	movwf	fsr2l,c
 43076  016C5E  0EFF               	movlw	255
 43077  016C60  20E2               	addwfc	fsr1h,w,c
 43078  016C62  6EDA               	movwf	fsr2h,c
 43079  016C64  0E00               	movlw	0
 43080  016C66  8EDB               	bsf	plusw2,7,c
 43081  016C68                     l10560:
 43082                           
 43083                           ;stkvar	_prod @ sp[(-13)+0]
 43084  016C68  0EF6               	movlw	246
 43085  016C6A  24E1               	addwf	fsr1l,w,c
 43086  016C6C  6ED9               	movwf	fsr2l,c
 43087  016C6E  0EFF               	movlw	255
 43088  016C70  20E2               	addwfc	fsr1h,w,c
 43089  016C72  6EDA               	movwf	fsr2h,c
 43090                           
 43091                           ;stkvar	_bexp @ sp[(-13)+10]
 43092  016C74  0EFD               	movlw	-3
 43093  016C76  006F FF8C  F035    	movff	plusw1,btemp+11
 43094  016C7C  90D8               	bcf	status,0,c
 43095  016C7E  3035               	rrcf	(btemp+11)^0,w,c
 43096  016C80  6EDF               	movwf	indf2,c
 43097  016C82                     l10562:
 43098                           
 43099                           ;stkvar	_sign @ sp[(-13)+12]
 43100  016C82  0EFF               	movlw	-1
 43101  016C84  006F FF8C  F035    	movff	plusw1,btemp+11
 43102                           
 43103                           ;stkvar	_prod @ sp[(-13)+0]
 43104  016C8A  0EF6               	movlw	246
 43105  016C8C  24E1               	addwf	fsr1l,w,c
 43106  016C8E  6ED9               	movwf	fsr2l,c
 43107  016C90  0EFF               	movlw	255
 43108  016C92  20E2               	addwfc	fsr1h,w,c
 43109  016C94  6EDA               	movwf	fsr2h,c
 43110  016C96  5035               	movf	(btemp+11)^0,w,c
 43111  016C98  12DF               	iorwf	indf2,f,c
 43112                           
 43113                           ;stkvar	_prod @ sp[(-13)+0]
 43114  016C9A  0EF3               	movlw	-13
 43115  016C9C  006F FF8C  F02A    	movff	plusw1,btemp
 43116  016CA2  0EF4               	movlw	-12
 43117  016CA4  006F FF8C  F02B    	movff	plusw1,btemp+1
 43118  016CAA  0EF5               	movlw	-11
 43119  016CAC  006F FF8C  F02C    	movff	plusw1,btemp+2
 43120  016CB2  0EF6               	movlw	-10
 43121  016CB4  006F FF8C  F02D    	movff	plusw1,btemp+3
 43122  016CBA                     l3340:
 43123                           
 43124                           ; ___flmul: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 43125  016CBA  0EEB               	movlw	235
 43126  016CBC  26E1               	addwf	fsr1l,f,c
 43127  016CBE  0EFF               	movlw	255
 43128  016CC0  22E2               	addwfc	fsr1h,f,c
 43129  016CC2  0012               	return		;funcret
 43130  016CC4                     __end_of___flmul:
 43131                           	opt callstack 0
 43132                           
 43133 ;; *************** function _SYSTEM_Initialize *****************
 43134 ;; Defined at:
 43135 ;;		line 50 in file "mcc_generated_files/mcc.c"
 43136 ;; Parameters:    Size  Location     Type
 43137 ;;		None
 43138 ;; Auto vars:     Size  Location     Type
 43139 ;;		None
 43140 ;; Return value:  Size  Location     Type
 43141 ;;                  1  [STACK] void 
 43142 ;; Registers used:
 43143 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 43144 ;; Tracked objects:
 43145 ;;		On entry : 0/0
 43146 ;;		On exit  : 3F/3C
 43147 ;;		Unchanged: 0/0
 43148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 43149 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43150 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43151 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43152 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43153 ;;Total ram usage:        0 bytes
 43154 ;; Hardware stack levels used:    1
 43155 ;; Hardware stack levels required when called:   17
 43156 ;; This function calls:
 43157 ;;		_ADCC_Initialize
 43158 ;;		_CLKREF_Initialize
 43159 ;;		_CRC_Initialize
 43160 ;;		_DMA1_Initialize
 43161 ;;		_DMA2_Initialize
 43162 ;;		_EXT_INT_Initialize
 43163 ;;		_FVR_Initialize
 43164 ;;		_INTERRUPT_Initialize
 43165 ;;		_OSCILLATOR_Initialize
 43166 ;;		_PIN_MANAGER_Initialize
 43167 ;;		_PMD_Initialize
 43168 ;;		_PWM8_Initialize
 43169 ;;		_SPI1_Initialize
 43170 ;;		_TMR2_Initialize
 43171 ;;		_TMR3_Initialize
 43172 ;;		_TMR5_Initialize
 43173 ;;		_TMR6_Initialize
 43174 ;;		_UART1_Initialize
 43175 ;;		_UART2_Initialize
 43176 ;; This function is called by:
 43177 ;;		_main
 43178 ;; This function uses a reentrant model
 43179 ;;
 43180                           
 43181                           	psect	text155
 43182  001860                     __ptext155:
 43183                           	opt callstack 0
 43184  001860                     _SYSTEM_Initialize:
 43185                           	opt callstack 13
 43186                           
 43187                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 43188                           
 43189                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 43190                           ;incstack = 0
 43191  001860  ECD4  F009         	call	_INTERRUPT_Initialize	;wreg free
 43192                           
 43193                           ; BSR set to: 57
 43194                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 43195  001864  ECF3  F012         	call	_PMD_Initialize	;wreg free
 43196                           
 43197                           ; BSR set to: 57
 43198                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 43199  001868  EC02  F006         	call	_PIN_MANAGER_Initialize	;wreg free
 43200                           
 43201                           ; BSR set to: 58
 43202                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 43203  00186C  ECE8  F012         	call	_OSCILLATOR_Initialize	;wreg free
 43204                           
 43205                           ; BSR set to: 57
 43206                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
 43207  001870  EC87  F013         	call	_FVR_Initialize	;wreg free
 43208                           
 43209                           ; BSR set to: 62
 43210                           ;mcc_generated_files/mcc.c: 57:     CRC_Initialize();
 43211  001874  EC4B  F006         	call	_CRC_Initialize	;wreg free
 43212                           
 43213                           ; BSR set to: 0
 43214                           ;mcc_generated_files/mcc.c: 58:     ADCC_Initialize();
 43215  001878  EC02  F009         	call	_ADCC_Initialize	;wreg free
 43216                           
 43217                           ;mcc_generated_files/mcc.c: 59:     TMR2_Initialize();
 43218  00187C  ECBB  F012         	call	_TMR2_Initialize	;wreg free
 43219                           
 43220                           ; BSR set to: 57
 43221                           ;mcc_generated_files/mcc.c: 60:     PWM8_Initialize();
 43222  001880  ECDD  F012         	call	_PWM8_Initialize	;wreg free
 43223                           
 43224                           ; BSR set to: 63
 43225                           ;mcc_generated_files/mcc.c: 61:     EXT_INT_Initialize();
 43226  001884  EC70  F00F         	call	_EXT_INT_Initialize	;wreg free
 43227                           
 43228                           ; BSR set to: 57
 43229                           ;mcc_generated_files/mcc.c: 62:     TMR6_Initialize();
 43230  001888  EC46  F010         	call	_TMR6_Initialize	;wreg free
 43231                           
 43232                           ;mcc_generated_files/mcc.c: 63:     TMR3_Initialize();
 43233  00188C  ECEA  F00C         	call	_TMR3_Initialize	;wreg free
 43234                           
 43235                           ;mcc_generated_files/mcc.c: 64:     TMR5_Initialize();
 43236  001890  ECC6  F00C         	call	_TMR5_Initialize	;wreg free
 43237                           
 43238                           ;mcc_generated_files/mcc.c: 65:     UART1_Initialize();
 43239  001894  ECA2  F00C         	call	_UART1_Initialize	;wreg free
 43240                           
 43241                           ; BSR set to: 57
 43242                           ;mcc_generated_files/mcc.c: 66:     UART2_Initialize();
 43243  001898  ECCD  F00A         	call	_UART2_Initialize	;wreg free
 43244                           
 43245                           ; BSR set to: 57
 43246                           ;mcc_generated_files/mcc.c: 67:     SPI1_Initialize();
 43247  00189C  ECD2  F012         	call	_SPI1_Initialize	;wreg free
 43248                           
 43249                           ; BSR set to: 61
 43250                           ;mcc_generated_files/mcc.c: 68:     DMA2_Initialize();
 43251  0018A0  EC86  F00B         	call	_DMA2_Initialize	;wreg free
 43252                           
 43253                           ; BSR set to: 59
 43254                           ;mcc_generated_files/mcc.c: 69:     DMA1_Initialize();
 43255  0018A4  ECCD  F008         	call	_DMA1_Initialize	;wreg free
 43256                           
 43257                           ; BSR set to: 59
 43258                           ;mcc_generated_files/mcc.c: 70:     CLKREF_Initialize();
 43259  0018A8  EC5B  F013         	call	_CLKREF_Initialize	;wreg free
 43260                           
 43261                           ; BSR set to: 60
 43262                           ; _SYSTEM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 43263  0018AC  0012               	return		;funcret
 43264  0018AE                     __end_of_SYSTEM_Initialize:
 43265                           	opt callstack 0
 43266                           
 43267 ;; *************** function _UART2_Initialize *****************
 43268 ;; Defined at:
 43269 ;;		line 78 in file "mcc_generated_files/uart2.c"
 43270 ;; Parameters:    Size  Location     Type
 43271 ;;		None
 43272 ;; Auto vars:     Size  Location     Type
 43273 ;;		None
 43274 ;; Return value:  Size  Location     Type
 43275 ;;                  1  [STACK] void 
 43276 ;; Registers used:
 43277 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 43278 ;; Tracked objects:
 43279 ;;		On entry : 3F/39
 43280 ;;		On exit  : 3F/39
 43281 ;;		Unchanged: 0/0
 43282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 43283 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43284 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43286 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43287 ;;Total ram usage:        0 bytes
 43288 ;; Hardware stack levels used:    1
 43289 ;; Hardware stack levels required when called:   16
 43290 ;; This function calls:
 43291 ;;		_UART2_SetRxInterruptHandler
 43292 ;;		_UART2_SetTxInterruptHandler
 43293 ;; This function is called by:
 43294 ;;		_SYSTEM_Initialize
 43295 ;; This function uses a reentrant model
 43296 ;;
 43297                           
 43298                           	psect	text156
 43299  00159A                     __ptext156:
 43300                           	opt callstack 0
 43301  00159A                     _UART2_Initialize:
 43302                           	opt callstack 13
 43303                           
 43304                           ;mcc_generated_files/uart2.c: 81:     PIE6bits.U2RXIE = 0;
 43305                           
 43306                           ; BSR set to: 60
 43307                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 43308                           ;incstack = 0
 43309  00159A  0139               	movlb	57	; () banked
 43310  00159C  9596               	bcf	150,2,b	;volatile
 43311                           
 43312                           ; BSR set to: 57
 43313                           ;mcc_generated_files/uart2.c: 82:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
 43314  00159E  0E90               	movlw	low _UART2_Receive_ISR
 43315  0015A0  6EE6               	movwf	postinc1,c
 43316  0015A2  0E24               	movlw	high _UART2_Receive_ISR
 43317  0015A4  6EE6               	movwf	postinc1,c
 43318  0015A6  0E00               	movlw	low (_UART2_Receive_ISR shr (0+16))
 43319  0015A8  6EE6               	movwf	postinc1,c
 43320  0015AA  EC97  F010         	call	_UART2_SetRxInterruptHandler	;wreg free
 43321                           
 43322                           ;mcc_generated_files/uart2.c: 83:     PIE6bits.U2TXIE = 0;
 43323  0015AE  0139               	movlb	57	; () banked
 43324  0015B0  9796               	bcf	150,3,b	;volatile
 43325                           
 43326                           ;mcc_generated_files/uart2.c: 84:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
 43327  0015B2  0E60               	movlw	low _UART2_Transmit_ISR
 43328  0015B4  6EE6               	movwf	postinc1,c
 43329  0015B6  0E20               	movlw	high _UART2_Transmit_ISR
 43330  0015B8  6EE6               	movwf	postinc1,c
 43331  0015BA  0E00               	movlw	low (_UART2_Transmit_ISR shr (0+16))
 43332  0015BC  6EE6               	movwf	postinc1,c
 43333  0015BE  EC83  F010         	call	_UART2_SetTxInterruptHandler	;wreg free
 43334                           
 43335                           ;mcc_generated_files/uart2.c: 89:     U2P1L = 0x00;
 43336  0015C2  013D               	movlb	61	; () banked
 43337  0015C4  6BD4               	clrf	212,b	;volatile
 43338                           
 43339                           ; BSR set to: 61
 43340                           ;mcc_generated_files/uart2.c: 92:     U2P2L = 0x00;
 43341  0015C6  6BD6               	clrf	214,b	;volatile
 43342                           
 43343                           ; BSR set to: 61
 43344                           ;mcc_generated_files/uart2.c: 95:     U2P3L = 0x00;
 43345  0015C8  6BD8               	clrf	216,b	;volatile
 43346                           
 43347                           ; BSR set to: 61
 43348                           ;mcc_generated_files/uart2.c: 98:     U2CON0 = 0xB0;
 43349  0015CA  0EB0               	movlw	176
 43350  0015CC  6FDA               	movwf	218,b	;volatile
 43351                           
 43352                           ; BSR set to: 61
 43353                           ;mcc_generated_files/uart2.c: 101:     U2CON1 = 0x80;
 43354  0015CE  0E80               	movlw	128
 43355  0015D0  6FDB               	movwf	219,b	;volatile
 43356                           
 43357                           ; BSR set to: 61
 43358                           ;mcc_generated_files/uart2.c: 104:     U2CON2 = 0x00;
 43359  0015D2  6BDC               	clrf	220,b	;volatile
 43360                           
 43361                           ; BSR set to: 61
 43362                           ;mcc_generated_files/uart2.c: 107:     U2BRGL = 0x82;
 43363  0015D4  0E82               	movlw	130
 43364  0015D6  6FDD               	movwf	221,b	;volatile
 43365                           
 43366                           ; BSR set to: 61
 43367                           ;mcc_generated_files/uart2.c: 110:     U2BRGH = 0x06;
 43368  0015D8  0E06               	movlw	6
 43369  0015DA  6FDE               	movwf	222,b	;volatile
 43370                           
 43371                           ; BSR set to: 61
 43372                           ;mcc_generated_files/uart2.c: 113:     U2FIFO = 0x00;
 43373  0015DC  6BDF               	clrf	223,b	;volatile
 43374                           
 43375                           ; BSR set to: 61
 43376                           ;mcc_generated_files/uart2.c: 116:     U2UIR = 0x00;
 43377  0015DE  6BE0               	clrf	224,b	;volatile
 43378                           
 43379                           ; BSR set to: 61
 43380                           ;mcc_generated_files/uart2.c: 119:     U2ERRIR = 0x00;
 43381  0015E0  6BE1               	clrf	225,b	;volatile
 43382                           
 43383                           ; BSR set to: 61
 43384                           ;mcc_generated_files/uart2.c: 122:     U2ERRIE = 0x00;
 43385  0015E2  6BE2               	clrf	226,b	;volatile
 43386                           
 43387                           ; BSR set to: 61
 43388                           ;mcc_generated_files/uart2.c: 126:     uart2TxHead = 0;
 43389  0015E4  0100               	movlb	0	; () banked
 43390  0015E6  6BCF               	clrf	_uart2TxHead& (0+255),b	;volatile
 43391                           
 43392                           ; BSR set to: 0
 43393                           ;mcc_generated_files/uart2.c: 127:     uart2TxTail = 0;
 43394  0015E8  6A56               	clrf	_uart2TxTail^0,c	;volatile
 43395                           
 43396                           ; BSR set to: 0
 43397                           ;mcc_generated_files/uart2.c: 128:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
 43398  0015EA  0E40               	movlw	64
 43399  0015EC  6E55               	movwf	_uart2TxBufferRemaining^0,c	;volatile
 43400                           
 43401                           ; BSR set to: 0
 43402                           ;mcc_generated_files/uart2.c: 129:     uart2RxHead = 0;
 43403  0015EE  6A54               	clrf	_uart2RxHead^0,c	;volatile
 43404                           
 43405                           ; BSR set to: 0
 43406                           ;mcc_generated_files/uart2.c: 130:     uart2RxTail = 0;
 43407  0015F0  6BCE               	clrf	_uart2RxTail& (0+255),b	;volatile
 43408                           
 43409                           ; BSR set to: 0
 43410                           ;mcc_generated_files/uart2.c: 131:     uart2RxCount = 0;
 43411  0015F2  6BCD               	clrf	_uart2RxCount& (0+255),b	;volatile
 43412                           
 43413                           ; BSR set to: 0
 43414                           ;mcc_generated_files/uart2.c: 134:     PIE6bits.U2RXIE = 1;
 43415  0015F4  0139               	movlb	57	; () banked
 43416  0015F6  8596               	bsf	150,2,b	;volatile
 43417                           
 43418                           ; BSR set to: 57
 43419                           ; _UART2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 43420  0015F8  0012               	return		;funcret
 43421  0015FA                     __end_of_UART2_Initialize:
 43422                           	opt callstack 0
 43423                           
 43424 ;; *************** function _UART2_SetTxInterruptHandler *****************
 43425 ;; Defined at:
 43426 ;;		line 252 in file "mcc_generated_files/uart2.c"
 43427 ;; Parameters:    Size  Location     Type
 43428 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 43429 ;;		 -> UART2_Transmit_ISR(1), 
 43430 ;; Auto vars:     Size  Location     Type
 43431 ;;		None
 43432 ;; Return value:  Size  Location     Type
 43433 ;;                  1  [STACK] void 
 43434 ;; Registers used:
 43435 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 43436 ;; Tracked objects:
 43437 ;;		On entry : 3F/39
 43438 ;;		On exit  : 0/0
 43439 ;;		Unchanged: 0/0
 43440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 43441 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43442 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43443 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43444 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43445 ;;Total ram usage:        0 bytes
 43446 ;; Hardware stack levels used:    1
 43447 ;; Hardware stack levels required when called:   15
 43448 ;; This function calls:
 43449 ;;		Nothing
 43450 ;; This function is called by:
 43451 ;;		_UART2_Initialize
 43452 ;; This function uses a reentrant model
 43453 ;;
 43454                           
 43455                           	psect	text157
 43456  002106                     __ptext157:
 43457                           	opt callstack 0
 43458  002106                     _UART2_SetTxInterruptHandler:
 43459                           	opt callstack 13
 43460                           
 43461                           ;mcc_generated_files/uart2.c: 253:     UART2_TxInterruptHandler = InterruptHandler;
 43462                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 43463                           
 43464                           ; BSR set to: 57
 43465                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 43466                           ;incstack = 0
 43467  002106  50E1               	movf	fsr1l,w,c
 43468  002108  0FFD               	addlw	-3
 43469  00210A  6ED9               	movwf	fsr2l,c
 43470  00210C  50E2               	movf	fsr1h,w,c
 43471  00210E  6EDA               	movwf	fsr2h,c
 43472  002110  0EFF               	movlw	255
 43473  002112  22DA               	addwfc	fsr2h,f,c
 43474  002114  006F FF78  F0AA    	movff	postinc2,_UART2_TxInterruptHandler
 43475  00211A  006F FF78  F0AB    	movff	postinc2,_UART2_TxInterruptHandler+1
 43476  002120  006F FF74  F0AC    	movff	postdec2,_UART2_TxInterruptHandler+2
 43477                           
 43478                           ; _UART2_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 43479  002126  52E5               	movf	postdec1,f,c
 43480  002128  52E5               	movf	postdec1,f,c
 43481  00212A  52E5               	movf	postdec1,f,c
 43482  00212C  0012               	return		;funcret
 43483  00212E                     __end_of_UART2_SetTxInterruptHandler:
 43484                           	opt callstack 0
 43485                           
 43486 ;; *************** function _UART2_SetRxInterruptHandler *****************
 43487 ;; Defined at:
 43488 ;;		line 248 in file "mcc_generated_files/uart2.c"
 43489 ;; Parameters:    Size  Location     Type
 43490 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 43491 ;;		 -> UART2_Receive_ISR(1), 
 43492 ;; Auto vars:     Size  Location     Type
 43493 ;;		None
 43494 ;; Return value:  Size  Location     Type
 43495 ;;                  1  [STACK] void 
 43496 ;; Registers used:
 43497 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 43498 ;; Tracked objects:
 43499 ;;		On entry : 3F/39
 43500 ;;		On exit  : 0/0
 43501 ;;		Unchanged: 0/0
 43502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 43503 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43504 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43505 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43506 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43507 ;;Total ram usage:        0 bytes
 43508 ;; Hardware stack levels used:    1
 43509 ;; Hardware stack levels required when called:   15
 43510 ;; This function calls:
 43511 ;;		Nothing
 43512 ;; This function is called by:
 43513 ;;		_UART2_Initialize
 43514 ;; This function uses a reentrant model
 43515 ;;
 43516                           
 43517                           	psect	text158
 43518  00212E                     __ptext158:
 43519                           	opt callstack 0
 43520  00212E                     _UART2_SetRxInterruptHandler:
 43521                           	opt callstack 13
 43522                           
 43523                           ;mcc_generated_files/uart2.c: 249:     UART2_RxInterruptHandler = InterruptHandler;
 43524                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 43525                           
 43526                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 43527                           ;incstack = 0
 43528  00212E  50E1               	movf	fsr1l,w,c
 43529  002130  0FFD               	addlw	-3
 43530  002132  6ED9               	movwf	fsr2l,c
 43531  002134  50E2               	movf	fsr1h,w,c
 43532  002136  6EDA               	movwf	fsr2h,c
 43533  002138  0EFF               	movlw	255
 43534  00213A  22DA               	addwfc	fsr2h,f,c
 43535  00213C  006F FF78  F0AD    	movff	postinc2,_UART2_RxInterruptHandler
 43536  002142  006F FF78  F0AE    	movff	postinc2,_UART2_RxInterruptHandler+1
 43537  002148  006F FF74  F0AF    	movff	postdec2,_UART2_RxInterruptHandler+2
 43538                           
 43539                           ; _UART2_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 43540  00214E  52E5               	movf	postdec1,f,c
 43541  002150  52E5               	movf	postdec1,f,c
 43542  002152  52E5               	movf	postdec1,f,c
 43543  002154  0012               	return		;funcret
 43544  002156                     __end_of_UART2_SetRxInterruptHandler:
 43545                           	opt callstack 0
 43546                           
 43547 ;; *************** function _UART1_Initialize *****************
 43548 ;; Defined at:
 43549 ;;		line 75 in file "mcc_generated_files/uart1.c"
 43550 ;; Parameters:    Size  Location     Type
 43551 ;;		None
 43552 ;; Auto vars:     Size  Location     Type
 43553 ;;		None
 43554 ;; Return value:  Size  Location     Type
 43555 ;;                  1  [STACK] void 
 43556 ;; Registers used:
 43557 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 43558 ;; Tracked objects:
 43559 ;;		On entry : 0/39
 43560 ;;		On exit  : 3F/39
 43561 ;;		Unchanged: 0/0
 43562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 43563 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43564 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43565 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43566 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43567 ;;Total ram usage:        0 bytes
 43568 ;; Hardware stack levels used:    1
 43569 ;; Hardware stack levels required when called:   16
 43570 ;; This function calls:
 43571 ;;		_UART1_SetRxInterruptHandler
 43572 ;; This function is called by:
 43573 ;;		_SYSTEM_Initialize
 43574 ;; This function uses a reentrant model
 43575 ;;
 43576                           
 43577                           	psect	text159
 43578  001944                     __ptext159:
 43579                           	opt callstack 0
 43580  001944                     _UART1_Initialize:
 43581                           	opt callstack 13
 43582                           
 43583                           ;mcc_generated_files/uart1.c: 78:  PIE3bits.U1RXIE = 0;
 43584                           
 43585                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 43586                           ;incstack = 0
 43587  001944  0139               	movlb	57	; () banked
 43588  001946  9793               	bcf	147,3,b	;volatile
 43589                           
 43590                           ; BSR set to: 57
 43591                           ;mcc_generated_files/uart1.c: 79:  UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 43592  001948  0E4E               	movlw	low _UART1_Receive_ISR
 43593  00194A  6EE6               	movwf	postinc1,c
 43594  00194C  0E24               	movlw	high _UART1_Receive_ISR
 43595  00194E  6EE6               	movwf	postinc1,c
 43596  001950  0E00               	movlw	low (_UART1_Receive_ISR shr (0+16))
 43597  001952  6EE6               	movwf	postinc1,c
 43598  001954  ECAB  F010         	call	_UART1_SetRxInterruptHandler	;wreg free
 43599                           
 43600                           ;mcc_generated_files/uart1.c: 84:  U1P1L = 0x00;
 43601  001958  013D               	movlb	61	; () banked
 43602  00195A  6BEC               	clrf	236,b	;volatile
 43603                           
 43604                           ; BSR set to: 61
 43605                           ;mcc_generated_files/uart1.c: 87:  U1P1H = 0x00;
 43606  00195C  6BED               	clrf	237,b	;volatile
 43607                           
 43608                           ; BSR set to: 61
 43609                           ;mcc_generated_files/uart1.c: 90:  U1P2L = 0x00;
 43610  00195E  6BEE               	clrf	238,b	;volatile
 43611                           
 43612                           ; BSR set to: 61
 43613                           ;mcc_generated_files/uart1.c: 93:  U1P2H = 0x00;
 43614  001960  6BEF               	clrf	239,b	;volatile
 43615                           
 43616                           ; BSR set to: 61
 43617                           ;mcc_generated_files/uart1.c: 96:  U1P3L = 0x00;
 43618  001962  6BF0               	clrf	240,b	;volatile
 43619                           
 43620                           ; BSR set to: 61
 43621                           ;mcc_generated_files/uart1.c: 99:  U1P3H = 0x00;
 43622  001964  6BF1               	clrf	241,b	;volatile
 43623                           
 43624                           ; BSR set to: 61
 43625                           ;mcc_generated_files/uart1.c: 102:  U1CON0 = 0xB0;
 43626  001966  0EB0               	movlw	176
 43627  001968  6FF2               	movwf	242,b	;volatile
 43628                           
 43629                           ; BSR set to: 61
 43630                           ;mcc_generated_files/uart1.c: 105:  U1CON1 = 0x80;
 43631  00196A  0E80               	movlw	128
 43632  00196C  6FF3               	movwf	243,b	;volatile
 43633                           
 43634                           ; BSR set to: 61
 43635                           ;mcc_generated_files/uart1.c: 108:  U1CON2 = 0x00;
 43636  00196E  6BF4               	clrf	244,b	;volatile
 43637                           
 43638                           ; BSR set to: 61
 43639                           ;mcc_generated_files/uart1.c: 111:     U1BRGL = 0x8A;
 43640  001970  0E8A               	movlw	138
 43641  001972  6FF5               	movwf	245,b	;volatile
 43642                           
 43643                           ; BSR set to: 61
 43644                           ;mcc_generated_files/uart1.c: 114:     U1BRGH = 0x00;
 43645  001974  6BF6               	clrf	246,b	;volatile
 43646                           
 43647                           ; BSR set to: 61
 43648                           ;mcc_generated_files/uart1.c: 117:  U1FIFO = 0x00;
 43649  001976  6BF7               	clrf	247,b	;volatile
 43650                           
 43651                           ; BSR set to: 61
 43652                           ;mcc_generated_files/uart1.c: 120:  U1UIR = 0x00;
 43653  001978  6BF8               	clrf	248,b	;volatile
 43654                           
 43655                           ; BSR set to: 61
 43656                           ;mcc_generated_files/uart1.c: 123:  U1ERRIR = 0x00;
 43657  00197A  6BF9               	clrf	249,b	;volatile
 43658                           
 43659                           ; BSR set to: 61
 43660                           ;mcc_generated_files/uart1.c: 126:  U1ERRIE = 0x00;
 43661  00197C  6BFA               	clrf	250,b	;volatile
 43662                           
 43663                           ; BSR set to: 61
 43664                           ;mcc_generated_files/uart1.c: 129:  uart1RxHead = 0;
 43665  00197E  6A57               	clrf	_uart1RxHead^0,c	;volatile
 43666                           
 43667                           ; BSR set to: 61
 43668                           ;mcc_generated_files/uart1.c: 130:  uart1RxTail = 0;
 43669  001980  0100               	movlb	0	; () banked
 43670  001982  6BD1               	clrf	_uart1RxTail& (0+255),b	;volatile
 43671                           
 43672                           ; BSR set to: 0
 43673                           ;mcc_generated_files/uart1.c: 131:  uart1RxCount = 0;
 43674  001984  6BD0               	clrf	_uart1RxCount& (0+255),b	;volatile
 43675                           
 43676                           ; BSR set to: 0
 43677                           ;mcc_generated_files/uart1.c: 134:  PIE3bits.U1RXIE = 1;
 43678  001986  0139               	movlb	57	; () banked
 43679  001988  8793               	bsf	147,3,b	;volatile
 43680                           
 43681                           ; BSR set to: 57
 43682                           ; _UART1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 43683  00198A  0012               	return		;funcret
 43684  00198C                     __end_of_UART1_Initialize:
 43685                           	opt callstack 0
 43686                           
 43687 ;; *************** function _UART1_SetRxInterruptHandler *****************
 43688 ;; Defined at:
 43689 ;;		line 207 in file "mcc_generated_files/uart1.c"
 43690 ;; Parameters:    Size  Location     Type
 43691 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 43692 ;;		 -> UART1_Receive_ISR(1), 
 43693 ;; Auto vars:     Size  Location     Type
 43694 ;;		None
 43695 ;; Return value:  Size  Location     Type
 43696 ;;                  1  [STACK] void 
 43697 ;; Registers used:
 43698 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 43699 ;; Tracked objects:
 43700 ;;		On entry : 3F/39
 43701 ;;		On exit  : 0/0
 43702 ;;		Unchanged: 0/0
 43703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 43704 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43705 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43706 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43707 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43708 ;;Total ram usage:        0 bytes
 43709 ;; Hardware stack levels used:    1
 43710 ;; Hardware stack levels required when called:   15
 43711 ;; This function calls:
 43712 ;;		Nothing
 43713 ;; This function is called by:
 43714 ;;		_UART1_Initialize
 43715 ;; This function uses a reentrant model
 43716 ;;
 43717                           
 43718                           	psect	text160
 43719  002156                     __ptext160:
 43720                           	opt callstack 0
 43721  002156                     _UART1_SetRxInterruptHandler:
 43722                           	opt callstack 13
 43723                           
 43724                           ;mcc_generated_files/uart1.c: 208:  UART1_RxInterruptHandler = InterruptHandler;
 43725                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 43726                           
 43727                           ; BSR set to: 57
 43728                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 43729                           ;incstack = 0
 43730  002156  50E1               	movf	fsr1l,w,c
 43731  002158  0FFD               	addlw	-3
 43732  00215A  6ED9               	movwf	fsr2l,c
 43733  00215C  50E2               	movf	fsr1h,w,c
 43734  00215E  6EDA               	movwf	fsr2h,c
 43735  002160  0EFF               	movlw	255
 43736  002162  22DA               	addwfc	fsr2h,f,c
 43737  002164  006F FF78  F0A7    	movff	postinc2,_UART1_RxInterruptHandler
 43738  00216A  006F FF78  F0A8    	movff	postinc2,_UART1_RxInterruptHandler+1
 43739  002170  006F FF74  F0A9    	movff	postdec2,_UART1_RxInterruptHandler+2
 43740                           
 43741                           ; _UART1_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 43742  002176  52E5               	movf	postdec1,f,c
 43743  002178  52E5               	movf	postdec1,f,c
 43744  00217A  52E5               	movf	postdec1,f,c
 43745  00217C  0012               	return		;funcret
 43746  00217E                     __end_of_UART1_SetRxInterruptHandler:
 43747                           	opt callstack 0
 43748                           
 43749 ;; *************** function _TMR6_Initialize *****************
 43750 ;; Defined at:
 43751 ;;		line 70 in file "mcc_generated_files/tmr6.c"
 43752 ;; Parameters:    Size  Location     Type
 43753 ;;		None
 43754 ;; Auto vars:     Size  Location     Type
 43755 ;;		None
 43756 ;; Return value:  Size  Location     Type
 43757 ;;                  1  [STACK] void 
 43758 ;; Registers used:
 43759 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 43760 ;; Tracked objects:
 43761 ;;		On entry : 3F/39
 43762 ;;		On exit  : 0/0
 43763 ;;		Unchanged: 0/0
 43764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 43765 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43766 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43767 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43768 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43769 ;;Total ram usage:        0 bytes
 43770 ;; Hardware stack levels used:    1
 43771 ;; Hardware stack levels required when called:   16
 43772 ;; This function calls:
 43773 ;;		_TMR6_SetInterruptHandler
 43774 ;; This function is called by:
 43775 ;;		_SYSTEM_Initialize
 43776 ;; This function uses a reentrant model
 43777 ;;
 43778                           
 43779                           	psect	text161
 43780  00208C                     __ptext161:
 43781                           	opt callstack 0
 43782  00208C                     _TMR6_Initialize:
 43783                           	opt callstack 13
 43784                           
 43785                           ;mcc_generated_files/tmr6.c: 75:     T6CLKCON = 0x01;
 43786                           
 43787                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 43788                           ;incstack = 0
 43789  00208C  0E01               	movlw	1
 43790  00208E  6E96               	movwf	150,c	;volatile
 43791                           
 43792                           ;mcc_generated_files/tmr6.c: 78:     T6HLT = 0x00;
 43793  002090  6A95               	clrf	149,c	;volatile
 43794                           
 43795                           ;mcc_generated_files/tmr6.c: 81:     T6RST = 0x00;
 43796  002092  6A97               	clrf	151,c	;volatile
 43797                           
 43798                           ;mcc_generated_files/tmr6.c: 84:     T6PR = 0x7C;
 43799  002094  0E7C               	movlw	124
 43800  002096  6E93               	movwf	147,c	;volatile
 43801                           
 43802                           ;mcc_generated_files/tmr6.c: 87:     T6TMR = 0x00;
 43803  002098  6A92               	clrf	146,c	;volatile
 43804                           
 43805                           ;mcc_generated_files/tmr6.c: 90:     PIR9bits.TMR6IF = 0;
 43806  00209A  0139               	movlb	57	; () banked
 43807  00209C  91A9               	bcf	169,0,b	;volatile
 43808                           
 43809                           ; BSR set to: 57
 43810                           ;mcc_generated_files/tmr6.c: 93:     PIE9bits.TMR6IE = 1;
 43811  00209E  8199               	bsf	153,0,b	;volatile
 43812                           
 43813                           ; BSR set to: 57
 43814                           ;mcc_generated_files/tmr6.c: 96:     TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandl
      +                          er);
 43815  0020A0  0EAE               	movlw	low _TMR6_DefaultInterruptHandler
 43816  0020A2  6EE6               	movwf	postinc1,c
 43817  0020A4  0E18               	movlw	high _TMR6_DefaultInterruptHandler
 43818  0020A6  6EE6               	movwf	postinc1,c
 43819  0020A8  0E00               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 43820  0020AA  6EE6               	movwf	postinc1,c
 43821  0020AC  ECBF  F010         	call	_TMR6_SetInterruptHandler	;wreg free
 43822                           
 43823                           ;mcc_generated_files/tmr6.c: 99:     T6CON = 0xE0;
 43824  0020B0  0EE0               	movlw	224
 43825  0020B2  6E94               	movwf	148,c	;volatile
 43826                           
 43827                           ; _TMR6_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 43828  0020B4  0012               	return		;funcret
 43829  0020B6                     __end_of_TMR6_Initialize:
 43830                           	opt callstack 0
 43831                           
 43832 ;; *************** function _TMR6_SetInterruptHandler *****************
 43833 ;; Defined at:
 43834 ;;		line 192 in file "mcc_generated_files/tmr6.c"
 43835 ;; Parameters:    Size  Location     Type
 43836 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 43837 ;;		 -> TMR6_DefaultInterruptHandler(1), 
 43838 ;; Auto vars:     Size  Location     Type
 43839 ;;		None
 43840 ;; Return value:  Size  Location     Type
 43841 ;;                  1  [STACK] void 
 43842 ;; Registers used:
 43843 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 43844 ;; Tracked objects:
 43845 ;;		On entry : 3F/39
 43846 ;;		On exit  : 0/0
 43847 ;;		Unchanged: 0/0
 43848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 43849 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43850 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43851 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43852 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43853 ;;Total ram usage:        0 bytes
 43854 ;; Hardware stack levels used:    1
 43855 ;; Hardware stack levels required when called:   15
 43856 ;; This function calls:
 43857 ;;		Nothing
 43858 ;; This function is called by:
 43859 ;;		_TMR6_Initialize
 43860 ;; This function uses a reentrant model
 43861 ;;
 43862                           
 43863                           	psect	text162
 43864  00217E                     __ptext162:
 43865                           	opt callstack 0
 43866  00217E                     _TMR6_SetInterruptHandler:
 43867                           	opt callstack 13
 43868                           
 43869                           ;mcc_generated_files/tmr6.c: 193:     TMR6_InterruptHandler = InterruptHandler;
 43870                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 43871                           
 43872                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 43873                           ;incstack = 0
 43874  00217E  50E1               	movf	fsr1l,w,c
 43875  002180  0FFD               	addlw	-3
 43876  002182  6ED9               	movwf	fsr2l,c
 43877  002184  50E2               	movf	fsr1h,w,c
 43878  002186  6EDA               	movwf	fsr2h,c
 43879  002188  0EFF               	movlw	255
 43880  00218A  22DA               	addwfc	fsr2h,f,c
 43881  00218C  006F FF78  F09E    	movff	postinc2,_TMR6_InterruptHandler
 43882  002192  006F FF78  F09F    	movff	postinc2,_TMR6_InterruptHandler+1
 43883  002198  006F FF74  F0A0    	movff	postdec2,_TMR6_InterruptHandler+2
 43884                           
 43885                           ; _TMR6_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 43886  00219E  52E5               	movf	postdec1,f,c
 43887  0021A0  52E5               	movf	postdec1,f,c
 43888  0021A2  52E5               	movf	postdec1,f,c
 43889  0021A4  0012               	return		;funcret
 43890  0021A6                     __end_of_TMR6_SetInterruptHandler:
 43891                           	opt callstack 0
 43892                           
 43893 ;; *************** function _TMR5_Initialize *****************
 43894 ;; Defined at:
 43895 ;;		line 69 in file "mcc_generated_files/tmr5.c"
 43896 ;; Parameters:    Size  Location     Type
 43897 ;;		None
 43898 ;; Auto vars:     Size  Location     Type
 43899 ;;		None
 43900 ;; Return value:  Size  Location     Type
 43901 ;;                  1  [STACK] void 
 43902 ;; Registers used:
 43903 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 43904 ;; Tracked objects:
 43905 ;;		On entry : 0/39
 43906 ;;		On exit  : 0/0
 43907 ;;		Unchanged: 0/0
 43908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 43909 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43910 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43911 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43912 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43913 ;;Total ram usage:        0 bytes
 43914 ;; Hardware stack levels used:    1
 43915 ;; Hardware stack levels required when called:   16
 43916 ;; This function calls:
 43917 ;;		_TMR5_SetInterruptHandler
 43918 ;; This function is called by:
 43919 ;;		_SYSTEM_Initialize
 43920 ;; This function uses a reentrant model
 43921 ;;
 43922                           
 43923                           	psect	text163
 43924  00198C                     __ptext163:
 43925                           	opt callstack 0
 43926  00198C                     _TMR5_Initialize:
 43927                           	opt callstack 13
 43928                           
 43929                           ;mcc_generated_files/tmr5.c: 74:  T5GCON = 0x00;
 43930                           
 43931                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 43932                           ;incstack = 0
 43933  00198C  6A9B               	clrf	155,c	;volatile
 43934                           
 43935                           ;mcc_generated_files/tmr5.c: 77:  T5GATE = 0x00;
 43936  00198E  6A9C               	clrf	156,c	;volatile
 43937                           
 43938                           ;mcc_generated_files/tmr5.c: 80:  T5CLK = 0x01;
 43939  001990  0E01               	movlw	1
 43940  001992  6E9D               	movwf	157,c	;volatile
 43941                           
 43942                           ;mcc_generated_files/tmr5.c: 83:  TMR5H = 0x63;
 43943  001994  0E63               	movlw	99
 43944  001996  6E99               	movwf	153,c	;volatile
 43945                           
 43946                           ;mcc_generated_files/tmr5.c: 86:  TMR5L = 0xC0;
 43947  001998  0EC0               	movlw	192
 43948  00199A  6E98               	movwf	152,c	;volatile
 43949                           
 43950                           ;mcc_generated_files/tmr5.c: 89:  timer5ReloadVal = (uint16_t) ((TMR5H << 8) | TMR5L);
 43951  00199C  5098               	movf	152,w,c	;volatile
 43952  00199E  006F FE64  F02A    	movff	16281,btemp	;volatile
 43953  0019A4  6A2B               	clrf	(btemp+1)^0,c
 43954  0019A6  0060  F0A8  F02B   	movff	btemp,btemp+1
 43955  0019AC  6A2A               	clrf	btemp^0,c
 43956  0019AE  102A               	iorwf	btemp^0,w,c
 43957  0019B0  0100               	movlb	0	; () banked
 43958  0019B2  6FC4               	movwf	_timer5ReloadVal& (0+255),b	;volatile
 43959  0019B4  502B               	movf	(btemp+1)^0,w,c
 43960  0019B6  6FC5               	movwf	(_timer5ReloadVal+1)& (0+255),b	;volatile
 43961                           
 43962                           ; BSR set to: 0
 43963                           ;mcc_generated_files/tmr5.c: 92:  PIR8bits.TMR5IF = 0;
 43964  0019B8  0139               	movlb	57	; () banked
 43965  0019BA  9DA8               	bcf	168,6,b	;volatile
 43966                           
 43967                           ; BSR set to: 57
 43968                           ;mcc_generated_files/tmr5.c: 95:  PIE8bits.TMR5IE = 1;
 43969  0019BC  8D98               	bsf	152,6,b	;volatile
 43970                           
 43971                           ; BSR set to: 57
 43972                           ;mcc_generated_files/tmr5.c: 98:  TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler)
      +                          ;
 43973  0019BE  0EA0               	movlw	low _TMR5_DefaultInterruptHandler
 43974  0019C0  6EE6               	movwf	postinc1,c
 43975  0019C2  0E1D               	movlw	high _TMR5_DefaultInterruptHandler
 43976  0019C4  6EE6               	movwf	postinc1,c
 43977  0019C6  0E00               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 43978  0019C8  6EE6               	movwf	postinc1,c
 43979  0019CA  ECD3  F010         	call	_TMR5_SetInterruptHandler	;wreg free
 43980                           
 43981                           ;mcc_generated_files/tmr5.c: 101:  T5CON = 0x31;
 43982  0019CE  0E31               	movlw	49
 43983  0019D0  6E9A               	movwf	154,c	;volatile
 43984                           
 43985                           ; _TMR5_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 43986  0019D2  0012               	return		;funcret
 43987  0019D4                     __end_of_TMR5_Initialize:
 43988                           	opt callstack 0
 43989                           
 43990 ;; *************** function _TMR5_SetInterruptHandler *****************
 43991 ;; Defined at:
 43992 ;;		line 192 in file "mcc_generated_files/tmr5.c"
 43993 ;; Parameters:    Size  Location     Type
 43994 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 43995 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 43996 ;; Auto vars:     Size  Location     Type
 43997 ;;		None
 43998 ;; Return value:  Size  Location     Type
 43999 ;;                  1  [STACK] void 
 44000 ;; Registers used:
 44001 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 44002 ;; Tracked objects:
 44003 ;;		On entry : 3F/39
 44004 ;;		On exit  : 0/0
 44005 ;;		Unchanged: 0/0
 44006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44007 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44008 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44009 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44010 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44011 ;;Total ram usage:        0 bytes
 44012 ;; Hardware stack levels used:    1
 44013 ;; Hardware stack levels required when called:   15
 44014 ;; This function calls:
 44015 ;;		Nothing
 44016 ;; This function is called by:
 44017 ;;		_TMR5_Initialize
 44018 ;; This function uses a reentrant model
 44019 ;;
 44020                           
 44021                           	psect	text164
 44022  0021A6                     __ptext164:
 44023                           	opt callstack 0
 44024  0021A6                     _TMR5_SetInterruptHandler:
 44025                           	opt callstack 13
 44026                           
 44027                           ;mcc_generated_files/tmr5.c: 192: void TMR5_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr5.c: 193: {;mcc_generated_files/tmr5.c: 194:  TMR5_Inter
      +                          ruptHandler = InterruptHandler;
 44028                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 44029                           
 44030                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44031                           ;incstack = 0
 44032  0021A6  50E1               	movf	fsr1l,w,c
 44033  0021A8  0FFD               	addlw	-3
 44034  0021AA  6ED9               	movwf	fsr2l,c
 44035  0021AC  50E2               	movf	fsr1h,w,c
 44036  0021AE  6EDA               	movwf	fsr2h,c
 44037  0021B0  0EFF               	movlw	255
 44038  0021B2  22DA               	addwfc	fsr2h,f,c
 44039  0021B4  006F FF78  F09B    	movff	postinc2,_TMR5_InterruptHandler
 44040  0021BA  006F FF78  F09C    	movff	postinc2,_TMR5_InterruptHandler+1
 44041  0021C0  006F FF74  F09D    	movff	postdec2,_TMR5_InterruptHandler+2
 44042                           
 44043                           ; _TMR5_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 44044  0021C6  52E5               	movf	postdec1,f,c
 44045  0021C8  52E5               	movf	postdec1,f,c
 44046  0021CA  52E5               	movf	postdec1,f,c
 44047  0021CC  0012               	return		;funcret
 44048  0021CE                     __end_of_TMR5_SetInterruptHandler:
 44049                           	opt callstack 0
 44050                           
 44051 ;; *************** function _TMR3_Initialize *****************
 44052 ;; Defined at:
 44053 ;;		line 65 in file "mcc_generated_files/tmr3.c"
 44054 ;; Parameters:    Size  Location     Type
 44055 ;;		None
 44056 ;; Auto vars:     Size  Location     Type
 44057 ;;		None
 44058 ;; Return value:  Size  Location     Type
 44059 ;;                  1  [STACK] void 
 44060 ;; Registers used:
 44061 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 44062 ;; Tracked objects:
 44063 ;;		On entry : 0/39
 44064 ;;		On exit  : 0/0
 44065 ;;		Unchanged: 0/0
 44066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44067 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44068 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44069 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44070 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44071 ;;Total ram usage:        0 bytes
 44072 ;; Hardware stack levels used:    1
 44073 ;; Hardware stack levels required when called:   16
 44074 ;; This function calls:
 44075 ;;		_TMR3_SetInterruptHandler
 44076 ;; This function is called by:
 44077 ;;		_SYSTEM_Initialize
 44078 ;; This function uses a reentrant model
 44079 ;;
 44080                           
 44081                           	psect	text165
 44082  0019D4                     __ptext165:
 44083                           	opt callstack 0
 44084  0019D4                     _TMR3_Initialize:
 44085                           	opt callstack 13
 44086                           
 44087                           ;mcc_generated_files/tmr3.c: 70:     T3GCON = 0x00;
 44088                           
 44089                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44090                           ;incstack = 0
 44091  0019D4  6AA7               	clrf	167,c	;volatile
 44092                           
 44093                           ;mcc_generated_files/tmr3.c: 73:     T3GATE = 0x00;
 44094  0019D6  6AA8               	clrf	168,c	;volatile
 44095                           
 44096                           ;mcc_generated_files/tmr3.c: 76:     T3CLK = 0x01;
 44097  0019D8  0E01               	movlw	1
 44098  0019DA  6EA9               	movwf	169,c	;volatile
 44099                           
 44100                           ;mcc_generated_files/tmr3.c: 79:     TMR3H = 0x3C;
 44101  0019DC  0E3C               	movlw	60
 44102  0019DE  6EA5               	movwf	165,c	;volatile
 44103                           
 44104                           ;mcc_generated_files/tmr3.c: 82:     TMR3L = 0xB0;
 44105  0019E0  0EB0               	movlw	176
 44106  0019E2  6EA4               	movwf	164,c	;volatile
 44107                           
 44108                           ;mcc_generated_files/tmr3.c: 85:     timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
 44109  0019E4  50A4               	movf	164,w,c	;volatile
 44110  0019E6  006F FE94  F02A    	movff	16293,btemp	;volatile
 44111  0019EC  6A2B               	clrf	(btemp+1)^0,c
 44112  0019EE  0060  F0A8  F02B   	movff	btemp,btemp+1
 44113  0019F4  6A2A               	clrf	btemp^0,c
 44114  0019F6  102A               	iorwf	btemp^0,w,c
 44115  0019F8  0100               	movlb	0	; () banked
 44116  0019FA  6FC0               	movwf	_timer3ReloadVal& (0+255),b	;volatile
 44117  0019FC  502B               	movf	(btemp+1)^0,w,c
 44118  0019FE  6FC1               	movwf	(_timer3ReloadVal+1)& (0+255),b	;volatile
 44119                           
 44120                           ; BSR set to: 0
 44121                           ;mcc_generated_files/tmr3.c: 88:     PIR6bits.TMR3IF = 0;
 44122  001A00  0139               	movlb	57	; () banked
 44123  001A02  9DA6               	bcf	166,6,b	;volatile
 44124                           
 44125                           ; BSR set to: 57
 44126                           ;mcc_generated_files/tmr3.c: 91:     PIE6bits.TMR3IE = 1;
 44127  001A04  8D96               	bsf	150,6,b	;volatile
 44128                           
 44129                           ; BSR set to: 57
 44130                           ;mcc_generated_files/tmr3.c: 94:     TMR3_SetInterruptHandler(TMR3_DefaultInterruptHandl
      +                          er);
 44131  001A06  0E44               	movlw	low _TMR3_DefaultInterruptHandler
 44132  001A08  6EE6               	movwf	postinc1,c
 44133  001A0A  0E27               	movlw	high _TMR3_DefaultInterruptHandler
 44134  001A0C  6EE6               	movwf	postinc1,c
 44135  001A0E  0E00               	movlw	low (_TMR3_DefaultInterruptHandler shr (0+16))
 44136  001A10  6EE6               	movwf	postinc1,c
 44137  001A12  ECE7  F010         	call	_TMR3_SetInterruptHandler	;wreg free
 44138                           
 44139                           ;mcc_generated_files/tmr3.c: 97:     T3CON = 0x31;
 44140  001A16  0E31               	movlw	49
 44141  001A18  6EA6               	movwf	166,c	;volatile
 44142                           
 44143                           ; _TMR3_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 44144  001A1A  0012               	return		;funcret
 44145  001A1C                     __end_of_TMR3_Initialize:
 44146                           	opt callstack 0
 44147                           
 44148 ;; *************** function _TMR3_SetInterruptHandler *****************
 44149 ;; Defined at:
 44150 ;;		line 193 in file "mcc_generated_files/tmr3.c"
 44151 ;; Parameters:    Size  Location     Type
 44152 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 44153 ;;		 -> calc_bsoc(1), TMR3_DefaultInterruptHandler(1), 
 44154 ;; Auto vars:     Size  Location     Type
 44155 ;;		None
 44156 ;; Return value:  Size  Location     Type
 44157 ;;                  1  [STACK] void 
 44158 ;; Registers used:
 44159 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 44160 ;; Tracked objects:
 44161 ;;		On entry : 0/1
 44162 ;;		On exit  : 0/0
 44163 ;;		Unchanged: 0/0
 44164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44165 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44166 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44167 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44168 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44169 ;;Total ram usage:        0 bytes
 44170 ;; Hardware stack levels used:    1
 44171 ;; Hardware stack levels required when called:   15
 44172 ;; This function calls:
 44173 ;;		Nothing
 44174 ;; This function is called by:
 44175 ;;		_TMR3_Initialize
 44176 ;;		_init_bsoc
 44177 ;; This function uses a reentrant model
 44178 ;;
 44179                           
 44180                           	psect	text166
 44181  0021CE                     __ptext166:
 44182                           	opt callstack 0
 44183  0021CE                     _TMR3_SetInterruptHandler:
 44184                           	opt callstack 14
 44185                           
 44186                           ;mcc_generated_files/tmr3.c: 194:     TMR3_InterruptHandler = InterruptHandler;
 44187                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 44188                           
 44189                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44190                           ;incstack = 0
 44191  0021CE  50E1               	movf	fsr1l,w,c
 44192  0021D0  0FFD               	addlw	-3
 44193  0021D2  6ED9               	movwf	fsr2l,c
 44194  0021D4  50E2               	movf	fsr1h,w,c
 44195  0021D6  6EDA               	movwf	fsr2h,c
 44196  0021D8  0EFF               	movlw	255
 44197  0021DA  22DA               	addwfc	fsr2h,f,c
 44198  0021DC  006F FF78  F098    	movff	postinc2,_TMR3_InterruptHandler
 44199  0021E2  006F FF78  F099    	movff	postinc2,_TMR3_InterruptHandler+1
 44200  0021E8  006F FF74  F09A    	movff	postdec2,_TMR3_InterruptHandler+2
 44201                           
 44202                           ; _TMR3_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 44203  0021EE  52E5               	movf	postdec1,f,c
 44204  0021F0  52E5               	movf	postdec1,f,c
 44205  0021F2  52E5               	movf	postdec1,f,c
 44206  0021F4  0012               	return		;funcret
 44207  0021F6                     __end_of_TMR3_SetInterruptHandler:
 44208                           	opt callstack 0
 44209                           
 44210 ;; *************** function _TMR2_Initialize *****************
 44211 ;; Defined at:
 44212 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 44213 ;; Parameters:    Size  Location     Type
 44214 ;;		None
 44215 ;; Auto vars:     Size  Location     Type
 44216 ;;		None
 44217 ;; Return value:  Size  Location     Type
 44218 ;;                  1  [STACK] void 
 44219 ;; Registers used:
 44220 ;;		wreg, status,2
 44221 ;; Tracked objects:
 44222 ;;		On entry : 0/0
 44223 ;;		On exit  : 3F/39
 44224 ;;		Unchanged: 0/0
 44225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44226 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44227 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44228 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44229 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44230 ;;Total ram usage:        0 bytes
 44231 ;; Hardware stack levels used:    1
 44232 ;; Hardware stack levels required when called:   15
 44233 ;; This function calls:
 44234 ;;		Nothing
 44235 ;; This function is called by:
 44236 ;;		_SYSTEM_Initialize
 44237 ;; This function uses a reentrant model
 44238 ;;
 44239                           
 44240                           	psect	text167
 44241  002576                     __ptext167:
 44242                           	opt callstack 0
 44243  002576                     _TMR2_Initialize:
 44244                           	opt callstack 14
 44245                           
 44246                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
 44247                           
 44248                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44249                           ;incstack = 0
 44250  002576  0E01               	movlw	1
 44251  002578  6EAE               	movwf	174,c	;volatile
 44252                           
 44253                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 44254  00257A  6AAD               	clrf	173,c	;volatile
 44255                           
 44256                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 44257  00257C  6AAF               	clrf	175,c	;volatile
 44258                           
 44259                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0x63;
 44260  00257E  0E63               	movlw	99
 44261  002580  6EAB               	movwf	171,c	;volatile
 44262                           
 44263                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 44264  002582  6AAA               	clrf	170,c	;volatile
 44265                           
 44266                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 44267  002584  0139               	movlb	57	; () banked
 44268  002586  95A4               	bcf	164,2,b	;volatile
 44269                           
 44270                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xC0;
 44271  002588  0EC0               	movlw	192
 44272  00258A  6EAC               	movwf	172,c	;volatile
 44273                           
 44274                           ; BSR set to: 57
 44275                           ; _TMR2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 44276  00258C  0012               	return		;funcret
 44277  00258E                     __end_of_TMR2_Initialize:
 44278                           	opt callstack 0
 44279                           
 44280 ;; *************** function _SPI1_Initialize *****************
 44281 ;; Defined at:
 44282 ;;		line 64 in file "mcc_generated_files/spi1.c"
 44283 ;; Parameters:    Size  Location     Type
 44284 ;;		None
 44285 ;; Auto vars:     Size  Location     Type
 44286 ;;		None
 44287 ;; Return value:  Size  Location     Type
 44288 ;;                  1  [STACK] void 
 44289 ;; Registers used:
 44290 ;;		wreg, status,2
 44291 ;; Tracked objects:
 44292 ;;		On entry : 3F/39
 44293 ;;		On exit  : 3F/3D
 44294 ;;		Unchanged: 0/0
 44295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44296 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44297 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44298 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44299 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44300 ;;Total ram usage:        0 bytes
 44301 ;; Hardware stack levels used:    1
 44302 ;; Hardware stack levels required when called:   15
 44303 ;; This function calls:
 44304 ;;		Nothing
 44305 ;; This function is called by:
 44306 ;;		_SYSTEM_Initialize
 44307 ;; This function uses a reentrant model
 44308 ;;
 44309                           
 44310                           	psect	text168
 44311  0025A4                     __ptext168:
 44312                           	opt callstack 0
 44313  0025A4                     _SPI1_Initialize:
 44314                           	opt callstack 14
 44315                           
 44316                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
 44317                           
 44318                           ; BSR set to: 57
 44319                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44320                           ;incstack = 0
 44321  0025A4  0E40               	movlw	64
 44322  0025A6  013D               	movlb	61	; () banked
 44323  0025A8  6F15               	movwf	21,b	;volatile
 44324                           
 44325                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
 44326  0025AA  0E03               	movlw	3
 44327  0025AC  6F16               	movwf	22,b	;volatile
 44328                           
 44329                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x4F;
 44330  0025AE  0E4F               	movlw	79
 44331  0025B0  6F19               	movwf	25,b	;volatile
 44332                           
 44333                           ; BSR set to: 61
 44334                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
 44335  0025B2  6B1C               	clrf	28,b	;volatile
 44336                           
 44337                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x83;
 44338  0025B4  0E83               	movlw	131
 44339  0025B6  6F14               	movwf	20,b	;volatile
 44340                           
 44341                           ; BSR set to: 61
 44342                           ; _SPI1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 44343  0025B8  0012               	return		;funcret
 44344  0025BA                     __end_of_SPI1_Initialize:
 44345                           	opt callstack 0
 44346                           
 44347 ;; *************** function _PWM8_Initialize *****************
 44348 ;; Defined at:
 44349 ;;		line 58 in file "mcc_generated_files/pwm8.c"
 44350 ;; Parameters:    Size  Location     Type
 44351 ;;		None
 44352 ;; Auto vars:     Size  Location     Type
 44353 ;;		None
 44354 ;; Return value:  Size  Location     Type
 44355 ;;                  1  [STACK] void 
 44356 ;; Registers used:
 44357 ;;		wreg, status,2
 44358 ;; Tracked objects:
 44359 ;;		On entry : 3F/39
 44360 ;;		On exit  : 3F/3F
 44361 ;;		Unchanged: 0/0
 44362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44363 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44364 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44365 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44366 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44367 ;;Total ram usage:        0 bytes
 44368 ;; Hardware stack levels used:    1
 44369 ;; Hardware stack levels required when called:   15
 44370 ;; This function calls:
 44371 ;;		Nothing
 44372 ;; This function is called by:
 44373 ;;		_SYSTEM_Initialize
 44374 ;; This function uses a reentrant model
 44375 ;;
 44376                           
 44377                           	psect	text169
 44378  0025BA                     __ptext169:
 44379                           	opt callstack 0
 44380  0025BA                     _PWM8_Initialize:
 44381                           	opt callstack 14
 44382                           
 44383                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
 44384                           
 44385                           ; BSR set to: 61
 44386                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44387                           ;incstack = 0
 44388  0025BA  0E80               	movlw	128
 44389  0025BC  6E62               	movwf	98,c	;volatile
 44390                           
 44391                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x00;
 44392  0025BE  6A61               	clrf	97,c	;volatile
 44393                           
 44394                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0x40;
 44395  0025C0  0E40               	movlw	64
 44396  0025C2  6E60               	movwf	96,c	;volatile
 44397                           
 44398                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 1;
 44399  0025C4  013F               	movlb	63	; () banked
 44400  0025C6  515F               	movf	95,w,b	;volatile
 44401  0025C8  0B3F               	andlw	-193
 44402  0025CA  0940               	iorlw	64
 44403  0025CC  6F5F               	movwf	95,b	;volatile
 44404                           
 44405                           ; BSR set to: 63
 44406                           ; _PWM8_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 44407  0025CE  0012               	return		;funcret
 44408  0025D0                     __end_of_PWM8_Initialize:
 44409                           	opt callstack 0
 44410                           
 44411 ;; *************** function _PMD_Initialize *****************
 44412 ;; Defined at:
 44413 ;;		line 91 in file "mcc_generated_files/mcc.c"
 44414 ;; Parameters:    Size  Location     Type
 44415 ;;		None
 44416 ;; Auto vars:     Size  Location     Type
 44417 ;;		None
 44418 ;; Return value:  Size  Location     Type
 44419 ;;                  1  [STACK] void 
 44420 ;; Registers used:
 44421 ;;		None
 44422 ;; Tracked objects:
 44423 ;;		On entry : 3F/39
 44424 ;;		On exit  : 3F/39
 44425 ;;		Unchanged: 0/0
 44426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44427 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44428 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44429 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44430 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44431 ;;Total ram usage:        0 bytes
 44432 ;; Hardware stack levels used:    1
 44433 ;; Hardware stack levels required when called:   15
 44434 ;; This function calls:
 44435 ;;		Nothing
 44436 ;; This function is called by:
 44437 ;;		_SYSTEM_Initialize
 44438 ;; This function uses a reentrant model
 44439 ;;
 44440                           
 44441                           	psect	text170
 44442  0025E6                     __ptext170:
 44443                           	opt callstack 0
 44444  0025E6                     _PMD_Initialize:
 44445                           	opt callstack 14
 44446                           
 44447                           ;mcc_generated_files/mcc.c: 94:     PMD0 = 0x00;
 44448                           
 44449                           ; BSR set to: 63
 44450                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44451                           ;incstack = 0
 44452  0025E6  0139               	movlb	57	; () banked
 44453  0025E8  6BC0               	clrf	192,b	;volatile
 44454                           
 44455                           ;mcc_generated_files/mcc.c: 96:     PMD1 = 0x00;
 44456  0025EA  6BC1               	clrf	193,b	;volatile
 44457                           
 44458                           ;mcc_generated_files/mcc.c: 98:     PMD2 = 0x00;
 44459  0025EC  6BC2               	clrf	194,b	;volatile
 44460                           
 44461                           ;mcc_generated_files/mcc.c: 100:     PMD3 = 0x00;
 44462  0025EE  6BC3               	clrf	195,b	;volatile
 44463                           
 44464                           ;mcc_generated_files/mcc.c: 102:     PMD4 = 0x00;
 44465  0025F0  6BC4               	clrf	196,b	;volatile
 44466                           
 44467                           ;mcc_generated_files/mcc.c: 104:     PMD5 = 0x00;
 44468  0025F2  6BC5               	clrf	197,b	;volatile
 44469                           
 44470                           ;mcc_generated_files/mcc.c: 106:     PMD6 = 0x00;
 44471  0025F4  6BC6               	clrf	198,b	;volatile
 44472                           
 44473                           ;mcc_generated_files/mcc.c: 108:     PMD7 = 0x00;
 44474  0025F6  6BC7               	clrf	199,b	;volatile
 44475                           
 44476                           ; BSR set to: 57
 44477                           ; _PMD_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 44478  0025F8  0012               	return		;funcret
 44479  0025FA                     __end_of_PMD_Initialize:
 44480                           	opt callstack 0
 44481                           
 44482 ;; *************** function _PIN_MANAGER_Initialize *****************
 44483 ;; Defined at:
 44484 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 44485 ;; Parameters:    Size  Location     Type
 44486 ;;		None
 44487 ;; Auto vars:     Size  Location     Type
 44488 ;;		None
 44489 ;; Return value:  Size  Location     Type
 44490 ;;                  1  [STACK] void 
 44491 ;; Registers used:
 44492 ;;		wreg, status,2
 44493 ;; Tracked objects:
 44494 ;;		On entry : 3F/39
 44495 ;;		On exit  : 3F/3A
 44496 ;;		Unchanged: 0/0
 44497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44498 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44499 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44500 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44501 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44502 ;;Total ram usage:        0 bytes
 44503 ;; Hardware stack levels used:    1
 44504 ;; Hardware stack levels required when called:   15
 44505 ;; This function calls:
 44506 ;;		Nothing
 44507 ;; This function is called by:
 44508 ;;		_SYSTEM_Initialize
 44509 ;; This function uses a reentrant model
 44510 ;;
 44511                           
 44512                           	psect	text171
 44513  000C04                     __ptext171:
 44514                           	opt callstack 0
 44515  000C04                     _PIN_MANAGER_Initialize:
 44516                           	opt callstack 14
 44517                           
 44518                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x07;
 44519                           
 44520                           ; BSR set to: 57
 44521                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44522                           ;incstack = 0
 44523  000C04  0E07               	movlw	7
 44524  000C06  6EBE               	movwf	190,c	;volatile
 44525                           
 44526                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x00;
 44527  000C08  6ABD               	clrf	189,c	;volatile
 44528                           
 44529                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 44530  000C0A  6ABA               	clrf	186,c	;volatile
 44531                           
 44532                           ;mcc_generated_files/pin_manager.c: 65:     LATF = 0x23;
 44533  000C0C  0E23               	movlw	35
 44534  000C0E  6EBF               	movwf	191,c	;volatile
 44535                           
 44536                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
 44537  000C10  6ABB               	clrf	187,c	;volatile
 44538                           
 44539                           ;mcc_generated_files/pin_manager.c: 67:     LATC = 0x07;
 44540  000C12  0E07               	movlw	7
 44541  000C14  6EBC               	movwf	188,c	;volatile
 44542                           
 44543                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0x00;
 44544  000C16  6AC6               	clrf	198,c	;volatile
 44545                           
 44546                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0x0C;
 44547  000C18  0E0C               	movlw	12
 44548  000C1A  6EC7               	movwf	199,c	;volatile
 44549                           
 44550                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0xFF;
 44551  000C1C  68C2               	setf	194,c	;volatile
 44552                           
 44553                           ;mcc_generated_files/pin_manager.c: 75:     TRISB = 0xBF;
 44554  000C1E  0EBF               	movlw	191
 44555  000C20  6EC3               	movwf	195,c	;volatile
 44556                           
 44557                           ;mcc_generated_files/pin_manager.c: 76:     TRISC = 0x90;
 44558  000C22  0E90               	movlw	144
 44559  000C24  6EC4               	movwf	196,c	;volatile
 44560                           
 44561                           ;mcc_generated_files/pin_manager.c: 77:     TRISD = 0x0C;
 44562  000C26  0E0C               	movlw	12
 44563  000C28  6EC5               	movwf	197,c	;volatile
 44564                           
 44565                           ;mcc_generated_files/pin_manager.c: 82:     ANSELD = 0x00;
 44566  000C2A  013A               	movlb	58	; () banked
 44567  000C2C  6B70               	clrf	112,b	;volatile
 44568                           
 44569                           ; BSR set to: 58
 44570                           ;mcc_generated_files/pin_manager.c: 83:     ANSELC = 0x00;
 44571  000C2E  6B60               	clrf	96,b	;volatile
 44572                           
 44573                           ;mcc_generated_files/pin_manager.c: 84:     ANSELB = 0x3C;
 44574  000C30  0E3C               	movlw	60
 44575  000C32  6F50               	movwf	80,b	;volatile
 44576                           
 44577                           ; BSR set to: 58
 44578                           ;mcc_generated_files/pin_manager.c: 85:     ANSELE = 0x00;
 44579  000C34  6B80               	clrf	128,b	;volatile
 44580                           
 44581                           ; BSR set to: 58
 44582                           ;mcc_generated_files/pin_manager.c: 86:     ANSELF = 0x00;
 44583  000C36  6B90               	clrf	144,b	;volatile
 44584                           
 44585                           ; BSR set to: 58
 44586                           ;mcc_generated_files/pin_manager.c: 87:     ANSELA = 0xFF;
 44587  000C38  6940               	setf	64,b	;volatile
 44588                           
 44589                           ;mcc_generated_files/pin_manager.c: 92:     WPUD = 0x0C;
 44590  000C3A  0E0C               	movlw	12
 44591  000C3C  6F71               	movwf	113,b	;volatile
 44592                           
 44593                           ;mcc_generated_files/pin_manager.c: 93:     WPUF = 0x0C;
 44594  000C3E  0E0C               	movlw	12
 44595  000C40  6F91               	movwf	145,b	;volatile
 44596                           
 44597                           ; BSR set to: 58
 44598                           ;mcc_generated_files/pin_manager.c: 94:     WPUE = 0x00;
 44599  000C42  6B81               	clrf	129,b	;volatile
 44600                           
 44601                           ;mcc_generated_files/pin_manager.c: 95:     WPUB = 0x83;
 44602  000C44  0E83               	movlw	131
 44603  000C46  6F51               	movwf	81,b	;volatile
 44604                           
 44605                           ; BSR set to: 58
 44606                           ;mcc_generated_files/pin_manager.c: 96:     WPUA = 0x00;
 44607  000C48  6B41               	clrf	65,b	;volatile
 44608                           
 44609                           ;mcc_generated_files/pin_manager.c: 97:     WPUC = 0x97;
 44610  000C4A  0E97               	movlw	151
 44611  000C4C  6F61               	movwf	97,b	;volatile
 44612                           
 44613                           ; BSR set to: 58
 44614                           ;mcc_generated_files/pin_manager.c: 102:     ODCONE = 0x00;
 44615  000C4E  6B82               	clrf	130,b	;volatile
 44616                           
 44617                           ; BSR set to: 58
 44618                           ;mcc_generated_files/pin_manager.c: 103:     ODCONF = 0x00;
 44619  000C50  6B92               	clrf	146,b	;volatile
 44620                           
 44621                           ; BSR set to: 58
 44622                           ;mcc_generated_files/pin_manager.c: 104:     ODCONA = 0x00;
 44623  000C52  6B42               	clrf	66,b	;volatile
 44624                           
 44625                           ; BSR set to: 58
 44626                           ;mcc_generated_files/pin_manager.c: 105:     ODCONB = 0x00;
 44627  000C54  6B52               	clrf	82,b	;volatile
 44628                           
 44629                           ; BSR set to: 58
 44630                           ;mcc_generated_files/pin_manager.c: 106:     ODCONC = 0x00;
 44631  000C56  6B62               	clrf	98,b	;volatile
 44632                           
 44633                           ; BSR set to: 58
 44634                           ;mcc_generated_files/pin_manager.c: 107:     ODCOND = 0x00;
 44635  000C58  6B72               	clrf	114,b	;volatile
 44636                           
 44637                           ; BSR set to: 58
 44638                           ;mcc_generated_files/pin_manager.c: 112:     SLRCONA = 0xFF;
 44639  000C5A  6943               	setf	67,b	;volatile
 44640                           
 44641                           ; BSR set to: 58
 44642                           ;mcc_generated_files/pin_manager.c: 113:     SLRCONB = 0xFF;
 44643  000C5C  6953               	setf	83,b	;volatile
 44644                           
 44645                           ; BSR set to: 58
 44646                           ;mcc_generated_files/pin_manager.c: 114:     SLRCONC = 0xFF;
 44647  000C5E  6963               	setf	99,b	;volatile
 44648                           
 44649                           ; BSR set to: 58
 44650                           ;mcc_generated_files/pin_manager.c: 115:     SLRCOND = 0xFF;
 44651  000C60  6973               	setf	115,b	;volatile
 44652                           
 44653                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONE = 0x07;
 44654  000C62  0E07               	movlw	7
 44655  000C64  6F83               	movwf	131,b	;volatile
 44656                           
 44657                           ; BSR set to: 58
 44658                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONF = 0xFF;
 44659  000C66  6993               	setf	147,b	;volatile
 44660                           
 44661                           ;mcc_generated_files/pin_manager.c: 126:     U2RXPPS = 0x0F;
 44662  000C68  0E0F               	movlw	15
 44663  000C6A  6FE8               	movwf	232,b	;volatile
 44664                           
 44665                           ;mcc_generated_files/pin_manager.c: 127:     SPI1SCKPPS = 0x13;
 44666  000C6C  0E13               	movlw	19
 44667  000C6E  6FDE               	movwf	222,b	;volatile
 44668                           
 44669                           ;mcc_generated_files/pin_manager.c: 128:     RB6PPS = 0x16;
 44670  000C70  0E16               	movlw	22
 44671  000C72  6F0E               	movwf	14,b	;volatile
 44672                           
 44673                           ;mcc_generated_files/pin_manager.c: 129:     RC3PPS = 0x1E;
 44674  000C74  0E1E               	movlw	30
 44675  000C76  6F13               	movwf	19,b	;volatile
 44676                           
 44677                           ;mcc_generated_files/pin_manager.c: 130:     INT0PPS = 0x08;
 44678  000C78  0E08               	movlw	8
 44679  000C7A  6FC0               	movwf	192,b	;volatile
 44680                           
 44681                           ;mcc_generated_files/pin_manager.c: 131:     RD1PPS = 0x10;
 44682  000C7C  0E10               	movlw	16
 44683  000C7E  6F19               	movwf	25,b	;volatile
 44684                           
 44685                           ;mcc_generated_files/pin_manager.c: 132:     INT1PPS = 0x09;
 44686  000C80  0E09               	movlw	9
 44687  000C82  6FC1               	movwf	193,b	;volatile
 44688                           
 44689                           ;mcc_generated_files/pin_manager.c: 133:     RC5PPS = 0x1F;
 44690  000C84  0E1F               	movlw	31
 44691  000C86  6F15               	movwf	21,b	;volatile
 44692                           
 44693                           ;mcc_generated_files/pin_manager.c: 134:     RC6PPS = 0x13;
 44694  000C88  0E13               	movlw	19
 44695  000C8A  6F16               	movwf	22,b	;volatile
 44696                           
 44697                           ;mcc_generated_files/pin_manager.c: 135:     U1RXPPS = 0x17;
 44698  000C8C  0E17               	movlw	23
 44699  000C8E  6FE5               	movwf	229,b	;volatile
 44700                           
 44701                           ;mcc_generated_files/pin_manager.c: 136:     SPI1SDIPPS = 0x14;
 44702  000C90  0E14               	movlw	20
 44703  000C92  6FDF               	movwf	223,b	;volatile
 44704                           
 44705                           ; BSR set to: 58
 44706                           ; _PIN_MANAGER_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
 44707  000C94  0012               	return		;funcret
 44708  000C96                     __end_of_PIN_MANAGER_Initialize:
 44709                           	opt callstack 0
 44710                           
 44711 ;; *************** function _OSCILLATOR_Initialize *****************
 44712 ;; Defined at:
 44713 ;;		line 73 in file "mcc_generated_files/mcc.c"
 44714 ;; Parameters:    Size  Location     Type
 44715 ;;		None
 44716 ;; Auto vars:     Size  Location     Type
 44717 ;;		None
 44718 ;; Return value:  Size  Location     Type
 44719 ;;                  1  [STACK] void 
 44720 ;; Registers used:
 44721 ;;		wreg, status,2
 44722 ;; Tracked objects:
 44723 ;;		On entry : 3F/3A
 44724 ;;		On exit  : 3F/39
 44725 ;;		Unchanged: 0/0
 44726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44727 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44728 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44729 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44730 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44731 ;;Total ram usage:        0 bytes
 44732 ;; Hardware stack levels used:    1
 44733 ;; Hardware stack levels required when called:   15
 44734 ;; This function calls:
 44735 ;;		Nothing
 44736 ;; This function is called by:
 44737 ;;		_SYSTEM_Initialize
 44738 ;; This function uses a reentrant model
 44739 ;;
 44740                           
 44741                           	psect	text172
 44742  0025D0                     __ptext172:
 44743                           	opt callstack 0
 44744  0025D0                     _OSCILLATOR_Initialize:
 44745                           	opt callstack 14
 44746                           
 44747                           ;mcc_generated_files/mcc.c: 76:     OSCCON1 = 0x20;
 44748                           
 44749                           ; BSR set to: 58
 44750                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44751                           ;incstack = 0
 44752  0025D0  0E20               	movlw	32
 44753  0025D2  0139               	movlb	57	; () banked
 44754  0025D4  6FD9               	movwf	217,b	;volatile
 44755                           
 44756                           ; BSR set to: 57
 44757                           ;mcc_generated_files/mcc.c: 78:     OSCCON3 = 0x00;
 44758  0025D6  6BDB               	clrf	219,b	;volatile
 44759                           
 44760                           ; BSR set to: 57
 44761                           ;mcc_generated_files/mcc.c: 80:     OSCEN = 0x00;
 44762  0025D8  6BDD               	clrf	221,b	;volatile
 44763                           
 44764                           ;mcc_generated_files/mcc.c: 82:     OSCFRQ = 0x02;
 44765  0025DA  0E02               	movlw	2
 44766  0025DC  6FDF               	movwf	223,b	;volatile
 44767                           
 44768                           ; BSR set to: 57
 44769                           ;mcc_generated_files/mcc.c: 84:     OSCTUNE = 0x00;
 44770  0025DE  6BDE               	clrf	222,b	;volatile
 44771  0025E0                     l171:
 44772                           
 44773                           ; BSR set to: 57
 44774                           ;mcc_generated_files/mcc.c: 86:     while(PLLR == 0)
 44775  0025E0  B1DC               	btfsc	220,0,b	;volatile
 44776  0025E2  0012               	return	
 44777  0025E4  D7FD               	goto	l171
 44778  0025E6                     __end_of_OSCILLATOR_Initialize:
 44779                           	opt callstack 0
 44780                           
 44781 ;; *************** function _INTERRUPT_Initialize *****************
 44782 ;; Defined at:
 44783 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 44784 ;; Parameters:    Size  Location     Type
 44785 ;;		None
 44786 ;; Auto vars:     Size  Location     Type
 44787 ;;  state           1  [STACK] _Bool 
 44788 ;; Return value:  Size  Location     Type
 44789 ;;                  1  [STACK] void 
 44790 ;; Registers used:
 44791 ;;		wreg, fsr1l, fsr1h, status,2, btemp+11
 44792 ;; Tracked objects:
 44793 ;;		On entry : 0/0
 44794 ;;		On exit  : 3F/39
 44795 ;;		Unchanged: 0/0
 44796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44797 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44798 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44800 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44801 ;;Total ram usage:        0 bytes
 44802 ;; Hardware stack levels used:    1
 44803 ;; Hardware stack levels required when called:   15
 44804 ;; This function calls:
 44805 ;;		Nothing
 44806 ;; This function is called by:
 44807 ;;		_SYSTEM_Initialize
 44808 ;; This function uses a reentrant model
 44809 ;;
 44810                           
 44811                           	psect	text173
 44812  0013A8                     __ptext173:
 44813                           	opt callstack 0
 44814  0013A8                     _INTERRUPT_Initialize:
 44815                           	opt callstack 0
 44816                           
 44817                           ; BSR set to: 57
 44818                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44819  0013A8  52E6               	movf	postinc1,f,c
 44820                           
 44821                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 44822                           
 44823                           ;incstack = 0
 44824  0013AA  8AD2               	bsf	210,5,c	;volatile
 44825                           
 44826                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 44827  0013AC  AED2               	btfss	16338,7,c	;volatile
 44828  0013AE  D003               	goto	u12390
 44829  0013B0  6A35               	clrf	(btemp+11)^0,c
 44830  0013B2  2A35               	incf	(btemp+11)^0,f,c
 44831  0013B4  D001               	goto	u12408
 44832  0013B6                     u12390:
 44833  0013B6  6A35               	clrf	(btemp+11)^0,c
 44834  0013B8                     u12408:
 44835                           
 44836                           ;stkvar	_state @ sp[(-1)+0]
 44837  0013B8  0EFF               	movlw	-1
 44838  0013BA  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 44839                           
 44840                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 44841  0013C0  9ED2               	bcf	16338,7,c	;volatile
 44842                           
 44843                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 44844  0013C2  0E55               	movlw	85
 44845  0013C4  6ED4               	movwf	212,c	;volatile
 44846                           
 44847                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 44848  0013C6  0EAA               	movlw	170
 44849  0013C8  6ED4               	movwf	212,c	;volatile
 44850                           
 44851                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 44852  0013CA  90D4               	bcf	212,0,c	;volatile
 44853                           
 44854                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
 44855  0013CC  0138               	movlb	56	; () banked
 44856  0013CE  6B9F               	clrf	159,b	;volatile
 44857                           
 44858                           ; BSR set to: 56
 44859                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
 44860  0013D0  6B9E               	clrf	158,b	;volatile
 44861                           
 44862                           ; BSR set to: 56
 44863                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
 44864  0013D2  0E08               	movlw	8
 44865  0013D4  6F9D               	movwf	157,b	;volatile
 44866                           
 44867                           ; BSR set to: 56
 44868                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 44869  0013D6  0E55               	movlw	85
 44870  0013D8  6ED4               	movwf	212,c	;volatile
 44871                           
 44872                           ; BSR set to: 56
 44873                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 44874  0013DA  0EAA               	movlw	170
 44875  0013DC  6ED4               	movwf	212,c	;volatile
 44876                           
 44877                           ; BSR set to: 56
 44878                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 44879  0013DE  80D4               	bsf	212,0,c	;volatile
 44880                           
 44881                           ; BSR set to: 56
 44882                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 44883                           ;stkvar	_state @ sp[(-1)+0]
 44884  0013E0  0EFF               	movlw	-1
 44885  0013E2  B0E3               	btfsc	plusw1,0,c
 44886  0013E4  D002               	bra	u12415
 44887  0013E6  9ED2               	bcf	16338,7,c	;volatile
 44888  0013E8  D001               	bra	u12416
 44889  0013EA                     u12415:
 44890  0013EA  8ED2               	bsf	16338,7,c	;volatile
 44891  0013EC                     u12416:
 44892                           
 44893                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR2bits.DMA1AIP = 1;
 44894  0013EC  0139               	movlb	57	; () banked
 44895  0013EE  8782               	bsf	130,3,b	;volatile
 44896                           
 44897                           ; BSR set to: 57
 44898                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR2bits.DMA1DCNTIP = 1;
 44899  0013F0  8382               	bsf	130,1,b	;volatile
 44900                           
 44901                           ; BSR set to: 57
 44902                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR2bits.DMA1SCNTIP = 1;
 44903  0013F2  8182               	bsf	130,0,b	;volatile
 44904                           
 44905                           ; BSR set to: 57
 44906                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR2bits.DMA1ORIP = 1;
 44907  0013F4  8582               	bsf	130,2,b	;volatile
 44908                           
 44909                           ; BSR set to: 57
 44910                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR6bits.U2TXIP = 1;
 44911  0013F6  8786               	bsf	134,3,b	;volatile
 44912                           
 44913                           ; BSR set to: 57
 44914                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR6bits.U2RXIP = 1;
 44915  0013F8  8586               	bsf	134,2,b	;volatile
 44916                           
 44917                           ; BSR set to: 57
 44918                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR3bits.U1RXIP = 1;
 44919  0013FA  8783               	bsf	131,3,b	;volatile
 44920                           
 44921                           ; BSR set to: 57
 44922                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR1bits.INT0IP = 1;
 44923  0013FC  8181               	bsf	129,0,b	;volatile
 44924                           
 44925                           ; BSR set to: 57
 44926                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR5bits.INT1IP = 0;
 44927  0013FE  9185               	bcf	133,0,b	;volatile
 44928                           
 44929                           ; BSR set to: 57
 44930                           ;mcc_generated_files/interrupt_manager.c: 81:     IPR9bits.TMR6IP = 1;
 44931  001400  8189               	bsf	137,0,b	;volatile
 44932                           
 44933                           ; BSR set to: 57
 44934                           ;mcc_generated_files/interrupt_manager.c: 82:     IPR8bits.TMR5IP = 0;
 44935  001402  9D88               	bcf	136,6,b	;volatile
 44936                           
 44937                           ; BSR set to: 57
 44938                           ;mcc_generated_files/interrupt_manager.c: 83:     IPR1bits.ADIP = 1;
 44939  001404  8581               	bsf	129,2,b	;volatile
 44940                           
 44941                           ; BSR set to: 57
 44942                           ;mcc_generated_files/interrupt_manager.c: 84:     IPR1bits.ADTIP = 1;
 44943  001406  8781               	bsf	129,3,b	;volatile
 44944                           
 44945                           ; BSR set to: 57
 44946                           ;mcc_generated_files/interrupt_manager.c: 85:     IPR6bits.TMR3IP = 0;
 44947  001408  9D86               	bcf	134,6,b	;volatile
 44948                           
 44949                           ; BSR set to: 57
 44950                           ; _INTERRUPT_Initialize: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 44951  00140A  52E5               	movf	postdec1,f,c
 44952  00140C  0012               	return		;funcret
 44953  00140E                     __end_of_INTERRUPT_Initialize:
 44954                           	opt callstack 0
 44955                           
 44956 ;; *************** function _FVR_Initialize *****************
 44957 ;; Defined at:
 44958 ;;		line 58 in file "mcc_generated_files/fvr.c"
 44959 ;; Parameters:    Size  Location     Type
 44960 ;;		None
 44961 ;; Auto vars:     Size  Location     Type
 44962 ;;		None
 44963 ;; Return value:  Size  Location     Type
 44964 ;;                  1  [STACK] void 
 44965 ;; Registers used:
 44966 ;;		wreg, status,2
 44967 ;; Tracked objects:
 44968 ;;		On entry : 3F/39
 44969 ;;		On exit  : 3F/3E
 44970 ;;		Unchanged: 0/0
 44971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44972 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44973 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44974 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44975 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44976 ;;Total ram usage:        0 bytes
 44977 ;; Hardware stack levels used:    1
 44978 ;; Hardware stack levels required when called:   15
 44979 ;; This function calls:
 44980 ;;		Nothing
 44981 ;; This function is called by:
 44982 ;;		_SYSTEM_Initialize
 44983 ;; This function uses a reentrant model
 44984 ;;
 44985                           
 44986                           	psect	text174
 44987  00270E                     __ptext174:
 44988                           	opt callstack 0
 44989  00270E                     _FVR_Initialize:
 44990                           	opt callstack 14
 44991                           
 44992                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0xAF;
 44993                           
 44994                           ; BSR set to: 57
 44995                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44996                           ;incstack = 0
 44997  00270E  0EAF               	movlw	175
 44998  002710  013E               	movlb	62	; () banked
 44999  002712  6FC1               	movwf	193,b	;volatile
 45000                           
 45001                           ; BSR set to: 62
 45002                           ; _FVR_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 45003  002714  0012               	return		;funcret
 45004  002716                     __end_of_FVR_Initialize:
 45005                           	opt callstack 0
 45006                           
 45007 ;; *************** function _EXT_INT_Initialize *****************
 45008 ;; Defined at:
 45009 ;;		line 89 in file "mcc_generated_files/ext_int.c"
 45010 ;; Parameters:    Size  Location     Type
 45011 ;;		None
 45012 ;; Auto vars:     Size  Location     Type
 45013 ;;		None
 45014 ;; Return value:  Size  Location     Type
 45015 ;;                  1  [STACK] void 
 45016 ;; Registers used:
 45017 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 45018 ;; Tracked objects:
 45019 ;;		On entry : 3F/3F
 45020 ;;		On exit  : 3F/39
 45021 ;;		Unchanged: 0/0
 45022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45023 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45024 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45025 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45026 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45027 ;;Total ram usage:        0 bytes
 45028 ;; Hardware stack levels used:    1
 45029 ;; Hardware stack levels required when called:   16
 45030 ;; This function calls:
 45031 ;;		_INT0_SetInterruptHandler
 45032 ;;		_INT1_SetInterruptHandler
 45033 ;; This function is called by:
 45034 ;;		_SYSTEM_Initialize
 45035 ;; This function uses a reentrant model
 45036 ;;
 45037                           
 45038                           	psect	text175
 45039  001EE0                     __ptext175:
 45040                           	opt callstack 0
 45041  001EE0                     _EXT_INT_Initialize:
 45042                           	opt callstack 13
 45043                           
 45044                           ;mcc_generated_files/ext_int.c: 94:  (PIR1bits.INT0IF = 0);
 45045                           
 45046                           ; BSR set to: 62
 45047                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45048                           ;incstack = 0
 45049  001EE0  0139               	movlb	57	; () banked
 45050  001EE2  91A1               	bcf	161,0,b	;volatile
 45051                           
 45052                           ;mcc_generated_files/ext_int.c: 95:  (INTCON0bits.INT0EDG = 0);
 45053  001EE4  90D2               	bcf	210,0,c	;volatile
 45054                           
 45055                           ; BSR set to: 57
 45056                           ;mcc_generated_files/ext_int.c: 97:  INT0_SetInterruptHandler(INT0_DefaultInterruptHandl
      +                          er);
 45057  001EE6  0E46               	movlw	low _INT0_DefaultInterruptHandler
 45058  001EE8  6EE6               	movwf	postinc1,c
 45059  001EEA  0E27               	movlw	high _INT0_DefaultInterruptHandler
 45060  001EEC  6EE6               	movwf	postinc1,c
 45061  001EEE  0E00               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 45062  001EF0  6EE6               	movwf	postinc1,c
 45063  001EF2  EC0F  F011         	call	_INT0_SetInterruptHandler	;wreg free
 45064                           
 45065                           ;mcc_generated_files/ext_int.c: 98:  (PIE1bits.INT0IE = 1);
 45066  001EF6  0139               	movlb	57	; () banked
 45067  001EF8  8191               	bsf	145,0,b	;volatile
 45068                           
 45069                           ; BSR set to: 57
 45070                           ;mcc_generated_files/ext_int.c: 103:  (PIR5bits.INT1IF = 0);
 45071  001EFA  91A5               	bcf	165,0,b	;volatile
 45072                           
 45073                           ; BSR set to: 57
 45074                           ;mcc_generated_files/ext_int.c: 104:  (INTCON0bits.INT1EDG = 0);
 45075  001EFC  92D2               	bcf	210,1,c	;volatile
 45076                           
 45077                           ;mcc_generated_files/ext_int.c: 106:  INT1_SetInterruptHandler(INT1_DefaultInterruptHand
      +                          ler);
 45078  001EFE  0E42               	movlw	low _INT1_DefaultInterruptHandler
 45079  001F00  6EE6               	movwf	postinc1,c
 45080  001F02  0E27               	movlw	high _INT1_DefaultInterruptHandler
 45081  001F04  6EE6               	movwf	postinc1,c
 45082  001F06  0E00               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 45083  001F08  6EE6               	movwf	postinc1,c
 45084  001F0A  ECFB  F010         	call	_INT1_SetInterruptHandler	;wreg free
 45085                           
 45086                           ;mcc_generated_files/ext_int.c: 107:  (PIE5bits.INT1IE = 1);
 45087  001F0E  0139               	movlb	57	; () banked
 45088  001F10  8195               	bsf	149,0,b	;volatile
 45089                           
 45090                           ; BSR set to: 57
 45091                           ; _EXT_INT_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 45092  001F12  0012               	return		;funcret
 45093  001F14                     __end_of_EXT_INT_Initialize:
 45094                           	opt callstack 0
 45095                           
 45096 ;; *************** function _INT1_SetInterruptHandler *****************
 45097 ;; Defined at:
 45098 ;;		line 78 in file "mcc_generated_files/ext_int.c"
 45099 ;; Parameters:    Size  Location     Type
 45100 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 45101 ;;		 -> switch_handler(1), INT1_DefaultInterruptHandler(1), 
 45102 ;; Auto vars:     Size  Location     Type
 45103 ;;		None
 45104 ;; Return value:  Size  Location     Type
 45105 ;;                  1  [STACK] void 
 45106 ;; Registers used:
 45107 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 45108 ;; Tracked objects:
 45109 ;;		On entry : 3F/39
 45110 ;;		On exit  : 0/0
 45111 ;;		Unchanged: 0/0
 45112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45113 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45114 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45115 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45116 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45117 ;;Total ram usage:        0 bytes
 45118 ;; Hardware stack levels used:    1
 45119 ;; Hardware stack levels required when called:   15
 45120 ;; This function calls:
 45121 ;;		Nothing
 45122 ;; This function is called by:
 45123 ;;		_EXT_INT_Initialize
 45124 ;;		_start_switch_handler
 45125 ;; This function uses a reentrant model
 45126 ;;
 45127                           
 45128                           	psect	text176
 45129  0021F6                     __ptext176:
 45130                           	opt callstack 0
 45131  0021F6                     _INT1_SetInterruptHandler:
 45132                           	opt callstack 14
 45133                           
 45134                           ;mcc_generated_files/ext_int.c: 78: void INT1_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 79: {;mcc_generated_files/ext_int.c: 80:  INT1
      +                          _InterruptHandler = InterruptHandler;
 45135                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 45136                           
 45137                           ; BSR set to: 57
 45138                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45139                           ;incstack = 0
 45140  0021F6  50E1               	movf	fsr1l,w,c
 45141  0021F8  0FFD               	addlw	-3
 45142  0021FA  6ED9               	movwf	fsr2l,c
 45143  0021FC  50E2               	movf	fsr1h,w,c
 45144  0021FE  6EDA               	movwf	fsr2h,c
 45145  002200  0EFF               	movlw	255
 45146  002202  22DA               	addwfc	fsr2h,f,c
 45147  002204  006F FF78  F0B0    	movff	postinc2,_INT1_InterruptHandler
 45148  00220A  006F FF78  F0B1    	movff	postinc2,_INT1_InterruptHandler+1
 45149  002210  006F FF74  F0B2    	movff	postdec2,_INT1_InterruptHandler+2
 45150                           
 45151                           ; _INT1_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 45152  002216  52E5               	movf	postdec1,f,c
 45153  002218  52E5               	movf	postdec1,f,c
 45154  00221A  52E5               	movf	postdec1,f,c
 45155  00221C  0012               	return		;funcret
 45156  00221E                     __end_of_INT1_SetInterruptHandler:
 45157                           	opt callstack 0
 45158                           
 45159 ;; *************** function _INT0_SetInterruptHandler *****************
 45160 ;; Defined at:
 45161 ;;		line 52 in file "mcc_generated_files/ext_int.c"
 45162 ;; Parameters:    Size  Location     Type
 45163 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 45164 ;;		 -> INT0_DefaultInterruptHandler(1), 
 45165 ;; Auto vars:     Size  Location     Type
 45166 ;;		None
 45167 ;; Return value:  Size  Location     Type
 45168 ;;                  1  [STACK] void 
 45169 ;; Registers used:
 45170 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 45171 ;; Tracked objects:
 45172 ;;		On entry : 3F/39
 45173 ;;		On exit  : 0/0
 45174 ;;		Unchanged: 0/0
 45175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45176 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45177 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45178 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45179 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45180 ;;Total ram usage:        0 bytes
 45181 ;; Hardware stack levels used:    1
 45182 ;; Hardware stack levels required when called:   15
 45183 ;; This function calls:
 45184 ;;		Nothing
 45185 ;; This function is called by:
 45186 ;;		_EXT_INT_Initialize
 45187 ;; This function uses a reentrant model
 45188 ;;
 45189                           
 45190                           	psect	text177
 45191  00221E                     __ptext177:
 45192                           	opt callstack 0
 45193  00221E                     _INT0_SetInterruptHandler:
 45194                           	opt callstack 13
 45195                           
 45196                           ;mcc_generated_files/ext_int.c: 52: void INT0_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 53: {;mcc_generated_files/ext_int.c: 54:  INT0
      +                          _InterruptHandler = InterruptHandler;
 45197                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 45198                           
 45199                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45200                           ;incstack = 0
 45201  00221E  50E1               	movf	fsr1l,w,c
 45202  002220  0FFD               	addlw	-3
 45203  002222  6ED9               	movwf	fsr2l,c
 45204  002224  50E2               	movf	fsr1h,w,c
 45205  002226  6EDA               	movwf	fsr2h,c
 45206  002228  0EFF               	movlw	255
 45207  00222A  22DA               	addwfc	fsr2h,f,c
 45208  00222C  006F FF78  F0B3    	movff	postinc2,_INT0_InterruptHandler
 45209  002232  006F FF78  F0B4    	movff	postinc2,_INT0_InterruptHandler+1
 45210  002238  006F FF74  F0B5    	movff	postdec2,_INT0_InterruptHandler+2
 45211                           
 45212                           ; _INT0_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 45213  00223E  52E5               	movf	postdec1,f,c
 45214  002240  52E5               	movf	postdec1,f,c
 45215  002242  52E5               	movf	postdec1,f,c
 45216  002244  0012               	return		;funcret
 45217  002246                     __end_of_INT0_SetInterruptHandler:
 45218                           	opt callstack 0
 45219                           
 45220 ;; *************** function _DMA2_Initialize *****************
 45221 ;; Defined at:
 45222 ;;		line 61 in file "mcc_generated_files/dma2.c"
 45223 ;; Parameters:    Size  Location     Type
 45224 ;;		None
 45225 ;; Auto vars:     Size  Location     Type
 45226 ;;		None
 45227 ;; Return value:  Size  Location     Type
 45228 ;;                  1  [STACK] void 
 45229 ;; Registers used:
 45230 ;;		wreg, status,2
 45231 ;; Tracked objects:
 45232 ;;		On entry : 3F/3D
 45233 ;;		On exit  : 3F/3B
 45234 ;;		Unchanged: 0/0
 45235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45236 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45237 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45238 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45239 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45240 ;;Total ram usage:        0 bytes
 45241 ;; Hardware stack levels used:    1
 45242 ;; Hardware stack levels required when called:   15
 45243 ;; This function calls:
 45244 ;;		Nothing
 45245 ;; This function is called by:
 45246 ;;		_SYSTEM_Initialize
 45247 ;; This function uses a reentrant model
 45248 ;;
 45249                           
 45250                           	psect	text178
 45251  00170C                     __ptext178:
 45252                           	opt callstack 0
 45253  00170C                     _DMA2_Initialize:
 45254                           	opt callstack 14
 45255                           
 45256                           ;mcc_generated_files/dma2.c: 63:     DMA2SSA = 0x001000;
 45257                           
 45258                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45259                           ;incstack = 0
 45260  00170C  0E00               	movlw	0
 45261  00170E  013B               	movlb	59	; () banked
 45262  001710  6FD9               	movwf	217,b	;volatile
 45263  001712  0E10               	movlw	16
 45264  001714  6FDA               	movwf	218,b	;volatile
 45265  001716  0E00               	movlw	0
 45266  001718  6FDB               	movwf	219,b	;volatile
 45267                           
 45268                           ;mcc_generated_files/dma2.c: 64:     DMA2DSA = 0x3FBB;
 45269  00171A  0E3F               	movlw	63
 45270  00171C  6FD1               	movwf	209,b	;volatile
 45271  00171E  0EBB               	movlw	187
 45272  001720  6FD0               	movwf	208,b	;volatile
 45273                           
 45274                           ;mcc_generated_files/dma2.c: 65:     DMA2CON1 = 0x03;
 45275  001722  0E03               	movlw	3
 45276  001724  6FDD               	movwf	221,b	;volatile
 45277                           
 45278                           ;mcc_generated_files/dma2.c: 66:     DMA2SSZ = 0x0001;
 45279  001726  0E00               	movlw	0
 45280  001728  6FD8               	movwf	216,b	;volatile
 45281  00172A  0E01               	movlw	1
 45282  00172C  6FD7               	movwf	215,b	;volatile
 45283                           
 45284                           ;mcc_generated_files/dma2.c: 67:     DMA2DSZ = 0x0001;
 45285  00172E  0E00               	movlw	0
 45286  001730  6FCF               	movwf	207,b	;volatile
 45287  001732  0E01               	movlw	1
 45288  001734  6FCE               	movwf	206,b	;volatile
 45289                           
 45290                           ;mcc_generated_files/dma2.c: 68:     DMA2SIRQ = 0x1C;
 45291  001736  0E1C               	movlw	28
 45292  001738  6FDF               	movwf	223,b	;volatile
 45293                           
 45294                           ;mcc_generated_files/dma2.c: 69:     DMA2AIRQ = 0x3D;
 45295  00173A  0E3D               	movlw	61
 45296  00173C  6FDE               	movwf	222,b	;volatile
 45297                           
 45298                           ; BSR set to: 59
 45299                           ;mcc_generated_files/dma2.c: 71:     PIR5bits.DMA2DCNTIF =0;
 45300  00173E  0139               	movlb	57	; () banked
 45301  001740  97A5               	bcf	165,3,b	;volatile
 45302                           
 45303                           ; BSR set to: 57
 45304                           ;mcc_generated_files/dma2.c: 72:     PIR5bits.DMA2SCNTIF =0;
 45305  001742  95A5               	bcf	165,2,b	;volatile
 45306                           
 45307                           ; BSR set to: 57
 45308                           ;mcc_generated_files/dma2.c: 73:     PIR5bits.DMA2AIF =0;
 45309  001744  9BA5               	bcf	165,5,b	;volatile
 45310                           
 45311                           ; BSR set to: 57
 45312                           ;mcc_generated_files/dma2.c: 74:  PIR5bits.DMA2ORIF =0;
 45313  001746  99A5               	bcf	165,4,b	;volatile
 45314                           
 45315                           ; BSR set to: 57
 45316                           ;mcc_generated_files/dma2.c: 76:     PIE5bits.DMA2DCNTIE =0;
 45317  001748  9795               	bcf	149,3,b	;volatile
 45318                           
 45319                           ; BSR set to: 57
 45320                           ;mcc_generated_files/dma2.c: 77:     PIE5bits.DMA2SCNTIE =0;
 45321  00174A  9595               	bcf	149,2,b	;volatile
 45322                           
 45323                           ; BSR set to: 57
 45324                           ;mcc_generated_files/dma2.c: 78:     PIE5bits.DMA2AIE =0;
 45325  00174C  9B95               	bcf	149,5,b	;volatile
 45326                           
 45327                           ; BSR set to: 57
 45328                           ;mcc_generated_files/dma2.c: 79:     PIE5bits.DMA2ORIE =0;
 45329  00174E  9995               	bcf	149,4,b	;volatile
 45330  001750  9ED2               	bcf	16338,7,c	;# 
 45331  001752  0139               	banksel	14831	;# 
 45332  001754  0E55               	movlw	85	;# 
 45333  001756  6FEF               	movwf	14831,b	;# 
 45334  001758  0EAA               	movlw	170	;# 
 45335  00175A  6FEF               	movwf	14831,b	;# 
 45336  00175C  81EF               	bsf	14831,0,b	;# 
 45337  00175E  8ED2               	bsf	16338,7,c	;# 
 45338                           
 45339                           ;mcc_generated_files/dma2.c: 92:     DMA2CON0 = 0x00;
 45340  001760  013B               	movlb	59	; () banked
 45341  001762  6BDC               	clrf	220,b	;volatile
 45342                           
 45343                           ; BSR set to: 59
 45344                           ; _DMA2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 45345  001764  0012               	return		;funcret
 45346  001766                     __end_of_DMA2_Initialize:
 45347                           	opt callstack 0
 45348                           
 45349 ;; *************** function _DMA1_Initialize *****************
 45350 ;; Defined at:
 45351 ;;		line 86 in file "mcc_generated_files/dma1.c"
 45352 ;; Parameters:    Size  Location     Type
 45353 ;;		None
 45354 ;; Auto vars:     Size  Location     Type
 45355 ;;		None
 45356 ;; Return value:  Size  Location     Type
 45357 ;;                  1  [STACK] void 
 45358 ;; Registers used:
 45359 ;;		wreg, status,2
 45360 ;; Tracked objects:
 45361 ;;		On entry : 3F/3B
 45362 ;;		On exit  : 3F/3B
 45363 ;;		Unchanged: 0/0
 45364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45365 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45366 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45368 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45369 ;;Total ram usage:        0 bytes
 45370 ;; Hardware stack levels used:    1
 45371 ;; Hardware stack levels required when called:   15
 45372 ;; This function calls:
 45373 ;;		Nothing
 45374 ;; This function is called by:
 45375 ;;		_SYSTEM_Initialize
 45376 ;; This function uses a reentrant model
 45377 ;;
 45378                           
 45379                           	psect	text179
 45380  00119A                     __ptext179:
 45381                           	opt callstack 0
 45382  00119A                     _DMA1_Initialize:
 45383                           	opt callstack 14
 45384                           
 45385                           ;mcc_generated_files/dma1.c: 88:  DMA1SSA = 0x001000;
 45386                           
 45387                           ; BSR set to: 59
 45388                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45389                           ;incstack = 0
 45390  00119A  0E00               	movlw	0
 45391  00119C  013B               	movlb	59	; () banked
 45392  00119E  6FF9               	movwf	249,b	;volatile
 45393  0011A0  0E10               	movlw	16
 45394  0011A2  6FFA               	movwf	250,b	;volatile
 45395  0011A4  0E00               	movlw	0
 45396  0011A6  6FFB               	movwf	251,b	;volatile
 45397                           
 45398                           ;mcc_generated_files/dma1.c: 89:  DMA1DSA = 0x3D11;
 45399  0011A8  0E3D               	movlw	61
 45400  0011AA  6FF1               	movwf	241,b	;volatile
 45401  0011AC  0E11               	movlw	17
 45402  0011AE  6FF0               	movwf	240,b	;volatile
 45403                           
 45404                           ;mcc_generated_files/dma1.c: 90:  DMA1CON1 = 0x03;
 45405  0011B0  0E03               	movlw	3
 45406  0011B2  6FFD               	movwf	253,b	;volatile
 45407                           
 45408                           ;mcc_generated_files/dma1.c: 91:  DMA1SSZ = 0x0001;
 45409  0011B4  0E00               	movlw	0
 45410  0011B6  6FF8               	movwf	248,b	;volatile
 45411  0011B8  0E01               	movlw	1
 45412  0011BA  6FF7               	movwf	247,b	;volatile
 45413                           
 45414                           ;mcc_generated_files/dma1.c: 92:  DMA1DSZ = 0x0001;
 45415  0011BC  0E00               	movlw	0
 45416  0011BE  6FEF               	movwf	239,b	;volatile
 45417  0011C0  0E01               	movlw	1
 45418  0011C2  6FEE               	movwf	238,b	;volatile
 45419                           
 45420                           ;mcc_generated_files/dma1.c: 93:  DMA1SIRQ = 0x15;
 45421  0011C4  0E15               	movlw	21
 45422  0011C6  6FFF               	movwf	255,b	;volatile
 45423                           
 45424                           ; BSR set to: 59
 45425                           ;mcc_generated_files/dma1.c: 94:  DMA1AIRQ = 0x0;
 45426  0011C8  6BFE               	clrf	254,b	;volatile
 45427                           
 45428                           ; BSR set to: 59
 45429                           ;mcc_generated_files/dma1.c: 96:  PIR2bits.DMA1DCNTIF = 0;
 45430  0011CA  0139               	movlb	57	; () banked
 45431  0011CC  93A2               	bcf	162,1,b	;volatile
 45432                           
 45433                           ; BSR set to: 57
 45434                           ;mcc_generated_files/dma1.c: 97:  PIR2bits.DMA1SCNTIF = 0;
 45435  0011CE  91A2               	bcf	162,0,b	;volatile
 45436                           
 45437                           ; BSR set to: 57
 45438                           ;mcc_generated_files/dma1.c: 98:  PIR2bits.DMA1AIF = 0;
 45439  0011D0  97A2               	bcf	162,3,b	;volatile
 45440                           
 45441                           ; BSR set to: 57
 45442                           ;mcc_generated_files/dma1.c: 99:  PIR2bits.DMA1ORIF = 0;
 45443  0011D2  95A2               	bcf	162,2,b	;volatile
 45444                           
 45445                           ; BSR set to: 57
 45446                           ;mcc_generated_files/dma1.c: 101:  PIE2bits.DMA1DCNTIE = 1;
 45447  0011D4  8392               	bsf	146,1,b	;volatile
 45448                           
 45449                           ; BSR set to: 57
 45450                           ;mcc_generated_files/dma1.c: 102:  PIE2bits.DMA1SCNTIE = 1;
 45451  0011D6  8192               	bsf	146,0,b	;volatile
 45452                           
 45453                           ; BSR set to: 57
 45454                           ;mcc_generated_files/dma1.c: 103:  PIE2bits.DMA1AIE = 1;
 45455  0011D8  8792               	bsf	146,3,b	;volatile
 45456                           
 45457                           ; BSR set to: 57
 45458                           ;mcc_generated_files/dma1.c: 104:  PIE2bits.DMA1ORIE = 1;
 45459  0011DA  8592               	bsf	146,2,b	;volatile
 45460                           
 45461                           ; BSR set to: 57
 45462                           ;mcc_generated_files/dma1.c: 106:  ISRPR = 0;
 45463  0011DC  6BF1               	clrf	241,b	;volatile
 45464                           
 45465                           ;mcc_generated_files/dma1.c: 107:  MAINPR = 1;
 45466  0011DE  0E01               	movlw	1
 45467  0011E0  6FF2               	movwf	242,b	;volatile
 45468                           
 45469                           ;mcc_generated_files/dma1.c: 108:  DMA1PR = 4;
 45470  0011E2  0E04               	movlw	4
 45471  0011E4  6FF3               	movwf	243,b	;volatile
 45472                           
 45473                           ;mcc_generated_files/dma1.c: 109:  DMA2PR = 2;
 45474  0011E6  0E02               	movlw	2
 45475  0011E8  6FF4               	movwf	244,b	;volatile
 45476                           
 45477                           ;mcc_generated_files/dma1.c: 110:  SCANPR = 3;
 45478  0011EA  0E03               	movlw	3
 45479  0011EC  6FF7               	movwf	247,b	;volatile
 45480  0011EE  9ED2               	bcf	16338,7,c	;# 
 45481  0011F0  0139               	banksel	14831	;# 
 45482  0011F2  0E55               	movlw	85	;# 
 45483  0011F4  6FEF               	movwf	14831,b	;# 
 45484  0011F6  0EAA               	movlw	170	;# 
 45485  0011F8  6FEF               	movwf	14831,b	;# 
 45486  0011FA  81EF               	bsf	14831,0,b	;# 
 45487  0011FC  8ED2               	bsf	16338,7,c	;# 
 45488                           
 45489                           ;mcc_generated_files/dma1.c: 123:  DMA1CON0 = 0x00;
 45490  0011FE  013B               	movlb	59	; () banked
 45491  001200  6BFC               	clrf	252,b	;volatile
 45492                           
 45493                           ; BSR set to: 59
 45494                           ; _DMA1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 45495  001202  0012               	return		;funcret
 45496  001204                     __end_of_DMA1_Initialize:
 45497                           	opt callstack 0
 45498                           
 45499 ;; *************** function _CRC_Initialize *****************
 45500 ;; Defined at:
 45501 ;;		line 76 in file "mcc_generated_files/crc.c"
 45502 ;; Parameters:    Size  Location     Type
 45503 ;;		None
 45504 ;; Auto vars:     Size  Location     Type
 45505 ;;  seed            2  [STACK] unsigned short 
 45506 ;;  poly            2  [STACK] unsigned short 
 45507 ;; Return value:  Size  Location     Type
 45508 ;;                  1  [STACK] void 
 45509 ;; Registers used:
 45510 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+10, btemp+11
 45511 ;; Tracked objects:
 45512 ;;		On entry : 0/39
 45513 ;;		On exit  : 3F/0
 45514 ;;		Unchanged: 0/0
 45515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45516 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45517 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45518 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45519 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45520 ;;Total ram usage:        0 bytes
 45521 ;; Hardware stack levels used:    1
 45522 ;; Hardware stack levels required when called:   15
 45523 ;; This function calls:
 45524 ;;		Nothing
 45525 ;; This function is called by:
 45526 ;;		_SYSTEM_Initialize
 45527 ;;		_read_cal_data
 45528 ;;		_write_cal_data
 45529 ;; This function uses a reentrant model
 45530 ;;
 45531                           
 45532                           	psect	text180
 45533  000C96                     __ptext180:
 45534                           	opt callstack 0
 45535  000C96                     _CRC_Initialize:
 45536                           	opt callstack 0
 45537                           
 45538                           ; BSR set to: 59
 45539                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45540  000C96  52E6               	movf	postinc1,f,c
 45541  000C98  52E6               	movf	postinc1,f,c
 45542  000C9A  52E6               	movf	postinc1,f,c
 45543  000C9C  52E6               	movf	postinc1,f,c
 45544                           
 45545                           ;mcc_generated_files/crc.c: 78:     uint16_t poly;;mcc_generated_files/crc.c: 79:     ui
      +                          nt16_t seed;;mcc_generated_files/crc.c: 82:     CRCCON0 = 0x80;
 45546                           
 45547                           ;incstack = 0
 45548  000C9E  0E80               	movlw	128
 45549  000CA0  0139               	movlb	57	; () banked
 45550  000CA2  6F68               	movwf	104,b	;volatile
 45551                           
 45552                           ;mcc_generated_files/crc.c: 84:     CRCCON1 = (0 << 4) | (7);
 45553  000CA4  0E07               	movlw	7
 45554  000CA6  6F69               	movwf	105,b	;volatile
 45555                           
 45556                           ; BSR set to: 57
 45557                           ;mcc_generated_files/crc.c: 86:     CRCACCL = 0x00;
 45558  000CA8  6B62               	clrf	98,b	;volatile
 45559                           
 45560                           ; BSR set to: 57
 45561                           ;mcc_generated_files/crc.c: 88:     CRCACCH = 0x00;
 45562  000CAA  6B63               	clrf	99,b	;volatile
 45563                           
 45564                           ; BSR set to: 57
 45565                           ;mcc_generated_files/crc.c: 90:     SCANCON0 = 0x00;
 45566  000CAC  6B7C               	clrf	124,b	;volatile
 45567                           
 45568                           ; BSR set to: 57
 45569                           ;mcc_generated_files/crc.c: 92:     SCANLADRU = 0x00;
 45570  000CAE  6B78               	clrf	120,b	;volatile
 45571                           
 45572                           ; BSR set to: 57
 45573                           ;mcc_generated_files/crc.c: 94:     SCANLADRH = 0x00;
 45574  000CB0  6B77               	clrf	119,b	;volatile
 45575                           
 45576                           ; BSR set to: 57
 45577                           ;mcc_generated_files/crc.c: 96:     SCANLADRL = 0x00;
 45578  000CB2  6B76               	clrf	118,b	;volatile
 45579                           
 45580                           ;mcc_generated_files/crc.c: 98:     SCANHADRU = 0x3F;
 45581  000CB4  0E3F               	movlw	63
 45582  000CB6  6F7B               	movwf	123,b	;volatile
 45583                           
 45584                           ; BSR set to: 57
 45585                           ;mcc_generated_files/crc.c: 100:     SCANHADRH = 0xFF;
 45586  000CB8  697A               	setf	122,b	;volatile
 45587                           
 45588                           ; BSR set to: 57
 45589                           ;mcc_generated_files/crc.c: 102:     SCANHADRL = 0xFF;
 45590  000CBA  6979               	setf	121,b	;volatile
 45591                           
 45592                           ; BSR set to: 57
 45593                           ;mcc_generated_files/crc.c: 104:     SCANTRIG = 0x00;
 45594  000CBC  6B7D               	clrf	125,b	;volatile
 45595                           
 45596                           ; BSR set to: 57
 45597                           ;mcc_generated_files/crc.c: 106:     poly = 213;
 45598  000CBE  0ED5               	movlw	213
 45599  000CC0  6E34               	movwf	(btemp+10)^0,c
 45600  000CC2  0E00               	movlw	0
 45601  000CC4  6E35               	movwf	(btemp+11)^0,c
 45602                           
 45603                           ;stkvar	_poly @ sp[(-4)+2]
 45604  000CC6  0EFE               	movlw	-2
 45605  000CC8  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 45606  000CCE  0EFF               	movlw	-1
 45607  000CD0  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 45608                           
 45609                           ; BSR set to: 57
 45610                           ;mcc_generated_files/crc.c: 107:     CRCXORH = poly >> 8;
 45611                           ;stkvar	_poly @ sp[(-4)+2]
 45612  000CD6  0EFF               	movlw	255
 45613  000CD8  24E1               	addwf	fsr1l,w,c
 45614  000CDA  6ED9               	movwf	fsr2l,c
 45615  000CDC  0EFF               	movlw	255
 45616  000CDE  20E2               	addwfc	fsr1h,w,c
 45617  000CE0  6EDA               	movwf	fsr2h,c
 45618  000CE2  50DF               	movf	indf2,w,c
 45619  000CE4  6F67               	movwf	103,b	;volatile
 45620                           
 45621                           ; BSR set to: 57
 45622                           ;mcc_generated_files/crc.c: 108:     CRCXORL = poly;
 45623  000CE6  0ED5               	movlw	213
 45624  000CE8  6F66               	movwf	102,b	;volatile
 45625                           
 45626                           ; BSR set to: 57
 45627                           ;mcc_generated_files/crc.c: 110:     seed = 0;
 45628                           ;stkvar	_seed @ sp[(-4)+0]
 45629  000CEA  0EFC               	movlw	-4
 45630  000CEC  6AE3               	clrf	plusw1,c
 45631  000CEE  0EFD               	movlw	-3
 45632  000CF0  6AE3               	clrf	plusw1,c
 45633                           
 45634                           ; BSR set to: 57
 45635                           ;mcc_generated_files/crc.c: 112:     CRCACCH = seed >> 8;
 45636                           ;stkvar	_seed @ sp[(-4)+0]
 45637  000CF2  0EFD               	movlw	253
 45638  000CF4  24E1               	addwf	fsr1l,w,c
 45639  000CF6  6ED9               	movwf	fsr2l,c
 45640  000CF8  0EFF               	movlw	255
 45641  000CFA  20E2               	addwfc	fsr1h,w,c
 45642  000CFC  6EDA               	movwf	fsr2h,c
 45643  000CFE  50DF               	movf	indf2,w,c
 45644  000D00  6F63               	movwf	99,b	;volatile
 45645                           
 45646                           ; BSR set to: 57
 45647                           ;mcc_generated_files/crc.c: 113:     CRCACCL = seed;
 45648  000D02  6B62               	clrf	98,b	;volatile
 45649                           
 45650                           ; BSR set to: 57
 45651                           ;mcc_generated_files/crc.c: 115:     crcObj.dataWidth = (uint8_t)(CRCCON1bits.DLEN + 1);
 45652  000D04  3969               	swapf	105,w,b	;volatile
 45653  000D06  0B0F               	andlw	15
 45654  000D08  6E35               	movwf	(btemp+11)^0,c
 45655  000D0A  2835               	incf	(btemp+11)^0,w,c
 45656  000D0C  0100               	movlb	0	; () banked
 45657  000D0E  6FE2               	movwf	_crcObj& (0+255),b
 45658                           
 45659                           ; BSR set to: 0
 45660                           ;mcc_generated_files/crc.c: 116:     crcObj.polyWidth = (uint8_t)(CRCCON1bits.PLEN + 1);
 45661  000D10  0139               	movlb	57	; () banked
 45662  000D12  5169               	movf	105,w,b	;volatile
 45663  000D14  0B0F               	andlw	15
 45664  000D16  6E35               	movwf	(btemp+11)^0,c
 45665  000D18  2835               	incf	(btemp+11)^0,w,c
 45666  000D1A  0100               	movlb	0	; () banked
 45667  000D1C  6FE3               	movwf	(_crcObj+1)& (0+255),b
 45668                           
 45669                           ; BSR set to: 0
 45670                           ; _CRC_Initialize: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 45671  000D1E  52E5               	movf	postdec1,f,c
 45672  000D20  52E5               	movf	postdec1,f,c
 45673  000D22  52E5               	movf	postdec1,f,c
 45674  000D24  52E5               	movf	postdec1,f,c
 45675  000D26  0012               	return		;funcret
 45676  000D28                     __end_of_CRC_Initialize:
 45677                           	opt callstack 0
 45678                           
 45679 ;; *************** function _CLKREF_Initialize *****************
 45680 ;; Defined at:
 45681 ;;		line 58 in file "mcc_generated_files/clkref.c"
 45682 ;; Parameters:    Size  Location     Type
 45683 ;;		None
 45684 ;; Auto vars:     Size  Location     Type
 45685 ;;		None
 45686 ;; Return value:  Size  Location     Type
 45687 ;;                  1  [STACK] void 
 45688 ;; Registers used:
 45689 ;;		wreg, status,2
 45690 ;; Tracked objects:
 45691 ;;		On entry : 3F/3B
 45692 ;;		On exit  : 3F/3C
 45693 ;;		Unchanged: 0/0
 45694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45695 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45696 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45698 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45699 ;;Total ram usage:        0 bytes
 45700 ;; Hardware stack levels used:    1
 45701 ;; Hardware stack levels required when called:   15
 45702 ;; This function calls:
 45703 ;;		Nothing
 45704 ;; This function is called by:
 45705 ;;		_SYSTEM_Initialize
 45706 ;; This function uses a reentrant model
 45707 ;;
 45708                           
 45709                           	psect	text181
 45710  0026B6                     __ptext181:
 45711                           	opt callstack 0
 45712  0026B6                     _CLKREF_Initialize:
 45713                           	opt callstack 14
 45714                           
 45715                           ;mcc_generated_files/clkref.c: 61:     CLKRCLK = 0x00;
 45716                           
 45717                           ; BSR set to: 0
 45718                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45719                           ;incstack = 0
 45720  0026B6  013C               	movlb	60	; () banked
 45721  0026B8  6BE6               	clrf	230,b	;volatile
 45722                           
 45723                           ; BSR set to: 60
 45724                           ;mcc_generated_files/clkref.c: 63:     CLKRCON = 0x94;
 45725  0026BA  0E94               	movlw	148
 45726  0026BC  6FE5               	movwf	229,b	;volatile
 45727                           
 45728                           ; BSR set to: 60
 45729                           ; _CLKREF_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 45730  0026BE  0012               	return		;funcret
 45731  0026C0                     __end_of_CLKREF_Initialize:
 45732                           	opt callstack 0
 45733                           
 45734 ;; *************** function _ADCC_Initialize *****************
 45735 ;; Defined at:
 45736 ;;		line 65 in file "mcc_generated_files/adcc.c"
 45737 ;; Parameters:    Size  Location     Type
 45738 ;;		None
 45739 ;; Auto vars:     Size  Location     Type
 45740 ;;		None
 45741 ;; Return value:  Size  Location     Type
 45742 ;;                  1  [STACK] void 
 45743 ;; Registers used:
 45744 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 45745 ;; Tracked objects:
 45746 ;;		On entry : 3F/0
 45747 ;;		On exit  : 0/0
 45748 ;;		Unchanged: 0/0
 45749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45750 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45751 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45753 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45754 ;;Total ram usage:        0 bytes
 45755 ;; Hardware stack levels used:    1
 45756 ;; Hardware stack levels required when called:   16
 45757 ;; This function calls:
 45758 ;;		_ADCC_SetADIInterruptHandler
 45759 ;;		_ADCC_SetADTIInterruptHandler
 45760 ;; This function is called by:
 45761 ;;		_SYSTEM_Initialize
 45762 ;; This function uses a reentrant model
 45763 ;;
 45764                           
 45765                           	psect	text182
 45766  001204                     __ptext182:
 45767                           	opt callstack 0
 45768  001204                     _ADCC_Initialize:
 45769                           	opt callstack 13
 45770                           
 45771                           ;mcc_generated_files/adcc.c: 69:     ADLTHL = 0x00;
 45772                           
 45773                           ; BSR set to: 60
 45774                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45775                           ;incstack = 0
 45776  001204  013E               	movlb	62	; () banked
 45777  001206  6BDE               	clrf	222,b	;volatile
 45778                           
 45779                           ;mcc_generated_files/adcc.c: 71:     ADLTHH = 0x00;
 45780  001208  6BDF               	clrf	223,b	;volatile
 45781                           
 45782                           ;mcc_generated_files/adcc.c: 73:     ADUTHL = 0x00;
 45783  00120A  6BE0               	clrf	224,b	;volatile
 45784                           
 45785                           ;mcc_generated_files/adcc.c: 75:     ADUTHH = 0x00;
 45786  00120C  6BE1               	clrf	225,b	;volatile
 45787                           
 45788                           ;mcc_generated_files/adcc.c: 77:     ADSTPTL = 0x00;
 45789  00120E  6BE4               	clrf	228,b	;volatile
 45790                           
 45791                           ;mcc_generated_files/adcc.c: 79:     ADSTPTH = 0x00;
 45792  001210  6BE5               	clrf	229,b	;volatile
 45793                           
 45794                           ;mcc_generated_files/adcc.c: 81:     ADACCU = 0x00;
 45795  001212  6BEA               	clrf	234,b	;volatile
 45796                           
 45797                           ; BSR set to: 62
 45798                           ;mcc_generated_files/adcc.c: 83:     ADRPT = 0x40;
 45799  001214  0E40               	movlw	64
 45800  001216  6FEC               	movwf	236,b	;volatile
 45801                           
 45802                           ; BSR set to: 62
 45803                           ;mcc_generated_files/adcc.c: 85:     ADPCH = 0x00;
 45804  001218  6BF1               	clrf	241,b	;volatile
 45805                           
 45806                           ;mcc_generated_files/adcc.c: 87:     ADACQL = 0x20;
 45807  00121A  0E20               	movlw	32
 45808  00121C  6FF3               	movwf	243,b	;volatile
 45809                           
 45810                           ; BSR set to: 62
 45811                           ;mcc_generated_files/adcc.c: 89:     ADACQH = 0x00;
 45812  00121E  6BF4               	clrf	244,b	;volatile
 45813                           
 45814                           ; BSR set to: 62
 45815                           ;mcc_generated_files/adcc.c: 91:     ADCAP = 0x00;
 45816  001220  6BF5               	clrf	245,b	;volatile
 45817                           
 45818                           ; BSR set to: 62
 45819                           ;mcc_generated_files/adcc.c: 93:     ADPREL = 0x00;
 45820  001222  6BF6               	clrf	246,b	;volatile
 45821                           
 45822                           ; BSR set to: 62
 45823                           ;mcc_generated_files/adcc.c: 95:     ADPREH = 0x00;
 45824  001224  6BF7               	clrf	247,b	;volatile
 45825                           
 45826                           ; BSR set to: 62
 45827                           ;mcc_generated_files/adcc.c: 97:     ADCON1 = 0x00;
 45828  001226  6BF9               	clrf	249,b	;volatile
 45829                           
 45830                           ;mcc_generated_files/adcc.c: 99:     ADCON2 = 0x5B;
 45831  001228  0E5B               	movlw	91
 45832  00122A  6FFA               	movwf	250,b	;volatile
 45833                           
 45834                           ;mcc_generated_files/adcc.c: 101:     ADCON3 = 0x27;
 45835  00122C  0E27               	movlw	39
 45836  00122E  6FFB               	movwf	251,b	;volatile
 45837                           
 45838                           ; BSR set to: 62
 45839                           ;mcc_generated_files/adcc.c: 103:     ADSTAT = 0x00;
 45840  001230  6BFC               	clrf	252,b	;volatile
 45841                           
 45842                           ;mcc_generated_files/adcc.c: 105:     ADREF = 0x02;
 45843  001232  0E02               	movlw	2
 45844  001234  6FFD               	movwf	253,b	;volatile
 45845                           
 45846                           ; BSR set to: 62
 45847                           ;mcc_generated_files/adcc.c: 107:     ADACT = 0x00;
 45848  001236  6BFE               	clrf	254,b	;volatile
 45849                           
 45850                           ;mcc_generated_files/adcc.c: 109:     ADCLK = 0x07;
 45851  001238  0E07               	movlw	7
 45852  00123A  6FFF               	movwf	255,b	;volatile
 45853                           
 45854                           ;mcc_generated_files/adcc.c: 111:     ADCON0 = 0x84;
 45855  00123C  0E84               	movlw	132
 45856  00123E  6FF8               	movwf	248,b	;volatile
 45857                           
 45858                           ; BSR set to: 62
 45859                           ;mcc_generated_files/adcc.c: 114:     PIR1bits.ADIF = 0;
 45860  001240  0139               	movlb	57	; () banked
 45861  001242  95A1               	bcf	161,2,b	;volatile
 45862                           
 45863                           ; BSR set to: 57
 45864                           ;mcc_generated_files/adcc.c: 116:     PIE1bits.ADIE = 1;
 45865  001244  8591               	bsf	145,2,b	;volatile
 45866                           
 45867                           ; BSR set to: 57
 45868                           ;mcc_generated_files/adcc.c: 118:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 45869  001246  0E48               	movlw	low _ADCC_DefaultInterruptHandler
 45870  001248  6EE6               	movwf	postinc1,c
 45871  00124A  0E27               	movlw	high _ADCC_DefaultInterruptHandler
 45872  00124C  6EE6               	movwf	postinc1,c
 45873  00124E  0E00               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 45874  001250  6EE6               	movwf	postinc1,c
 45875  001252  EC37  F011         	call	_ADCC_SetADIInterruptHandler	;wreg free
 45876                           
 45877                           ;mcc_generated_files/adcc.c: 121:     PIR1bits.ADTIF = 0;
 45878  001256  0139               	movlb	57	; () banked
 45879  001258  97A1               	bcf	161,3,b	;volatile
 45880                           
 45881                           ; BSR set to: 57
 45882                           ;mcc_generated_files/adcc.c: 123:     PIE1bits.ADTIE = 1;
 45883  00125A  8791               	bsf	145,3,b	;volatile
 45884                           
 45885                           ; BSR set to: 57
 45886                           ;mcc_generated_files/adcc.c: 125:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
 45887  00125C  0E48               	movlw	low _ADCC_DefaultInterruptHandler
 45888  00125E  6EE6               	movwf	postinc1,c
 45889  001260  0E27               	movlw	high _ADCC_DefaultInterruptHandler
 45890  001262  6EE6               	movwf	postinc1,c
 45891  001264  0E00               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 45892  001266  6EE6               	movwf	postinc1,c
 45893  001268  EC23  F011         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 45894                           
 45895                           ; _ADCC_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 45896  00126C  0012               	return		;funcret
 45897  00126E                     __end_of_ADCC_Initialize:
 45898                           	opt callstack 0
 45899                           
 45900 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 45901 ;; Defined at:
 45902 ;;		line 336 in file "mcc_generated_files/adcc.c"
 45903 ;; Parameters:    Size  Location     Type
 45904 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 45905 ;;		 -> adc_int_t_handler(1), ADCC_DefaultInterruptHandler(1), 
 45906 ;; Auto vars:     Size  Location     Type
 45907 ;;		None
 45908 ;; Return value:  Size  Location     Type
 45909 ;;                  1  [STACK] void 
 45910 ;; Registers used:
 45911 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 45912 ;; Tracked objects:
 45913 ;;		On entry : 0/1
 45914 ;;		On exit  : 0/0
 45915 ;;		Unchanged: 0/0
 45916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45917 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45918 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45920 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45921 ;;Total ram usage:        0 bytes
 45922 ;; Hardware stack levels used:    1
 45923 ;; Hardware stack levels required when called:   15
 45924 ;; This function calls:
 45925 ;;		Nothing
 45926 ;; This function is called by:
 45927 ;;		_ADCC_Initialize
 45928 ;;		_start_adc_scan
 45929 ;; This function uses a reentrant model
 45930 ;;
 45931                           
 45932                           	psect	text183
 45933  002246                     __ptext183:
 45934                           	opt callstack 0
 45935  002246                     _ADCC_SetADTIInterruptHandler:
 45936                           	opt callstack 14
 45937                           
 45938                           ;mcc_generated_files/adcc.c: 337:     ADCC_ADTI_InterruptHandler = InterruptHandler;
 45939                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 45940                           
 45941                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45942                           ;incstack = 0
 45943  002246  50E1               	movf	fsr1l,w,c
 45944  002248  0FFD               	addlw	-3
 45945  00224A  6ED9               	movwf	fsr2l,c
 45946  00224C  50E2               	movf	fsr1h,w,c
 45947  00224E  6EDA               	movwf	fsr2h,c
 45948  002250  0EFF               	movlw	255
 45949  002252  22DA               	addwfc	fsr2h,f,c
 45950  002254  006F FF78  F0A1    	movff	postinc2,_ADCC_ADTI_InterruptHandler
 45951  00225A  006F FF78  F0A2    	movff	postinc2,_ADCC_ADTI_InterruptHandler+1
 45952  002260  006F FF74  F0A3    	movff	postdec2,_ADCC_ADTI_InterruptHandler+2
 45953                           
 45954                           ; _ADCC_SetADTIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 3, argsize = 3, vargsize = 0
 45955  002266  52E5               	movf	postdec1,f,c
 45956  002268  52E5               	movf	postdec1,f,c
 45957  00226A  52E5               	movf	postdec1,f,c
 45958  00226C  0012               	return		;funcret
 45959  00226E                     __end_of_ADCC_SetADTIInterruptHandler:
 45960                           	opt callstack 0
 45961                           
 45962 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 45963 ;; Defined at:
 45964 ;;		line 323 in file "mcc_generated_files/adcc.c"
 45965 ;; Parameters:    Size  Location     Type
 45966 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 45967 ;;		 -> adc_int_handler(1), ADCC_DefaultInterruptHandler(1), 
 45968 ;; Auto vars:     Size  Location     Type
 45969 ;;		None
 45970 ;; Return value:  Size  Location     Type
 45971 ;;                  1  [STACK] void 
 45972 ;; Registers used:
 45973 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 45974 ;; Tracked objects:
 45975 ;;		On entry : 7/1
 45976 ;;		On exit  : 0/0
 45977 ;;		Unchanged: 0/0
 45978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45979 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45980 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45981 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45982 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45983 ;;Total ram usage:        0 bytes
 45984 ;; Hardware stack levels used:    1
 45985 ;; Hardware stack levels required when called:   15
 45986 ;; This function calls:
 45987 ;;		Nothing
 45988 ;; This function is called by:
 45989 ;;		_ADCC_Initialize
 45990 ;;		_start_adc_scan
 45991 ;; This function uses a reentrant model
 45992 ;;
 45993                           
 45994                           	psect	text184
 45995  00226E                     __ptext184:
 45996                           	opt callstack 0
 45997  00226E                     _ADCC_SetADIInterruptHandler:
 45998                           	opt callstack 14
 45999                           
 46000                           ;mcc_generated_files/adcc.c: 324:     ADCC_ADI_InterruptHandler = InterruptHandler;
 46001                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 46002                           
 46003                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 46004                           ;incstack = 0
 46005  00226E  50E1               	movf	fsr1l,w,c
 46006  002270  0FFD               	addlw	-3
 46007  002272  6ED9               	movwf	fsr2l,c
 46008  002274  50E2               	movf	fsr1h,w,c
 46009  002276  6EDA               	movwf	fsr2h,c
 46010  002278  0EFF               	movlw	255
 46011  00227A  22DA               	addwfc	fsr2h,f,c
 46012  00227C  006F FF78  F0A4    	movff	postinc2,_ADCC_ADI_InterruptHandler
 46013  002282  006F FF78  F0A5    	movff	postinc2,_ADCC_ADI_InterruptHandler+1
 46014  002288  006F FF74  F0A6    	movff	postdec2,_ADCC_ADI_InterruptHandler+2
 46015                           
 46016                           ; _ADCC_SetADIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 46017  00228E  52E5               	movf	postdec1,f,c
 46018  002290  52E5               	movf	postdec1,f,c
 46019  002292  52E5               	movf	postdec1,f,c
 46020  002294  0012               	return		;funcret
 46021  002296                     __end_of_ADCC_SetADIInterruptHandler:
 46022                           	opt callstack 0
 46023                           
 46024 ;; *************** function _INT1_ISR *****************
 46025 ;; Defined at:
 46026 ;;		line 62 in file "mcc_generated_files/ext_int.c"
 46027 ;; Parameters:    Size  Location     Type
 46028 ;;		None
 46029 ;; Auto vars:     Size  Location     Type
 46030 ;;		None
 46031 ;; Return value:  Size  Location     Type
 46032 ;;                  1    wreg      void 
 46033 ;; Registers used:
 46034 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 46035 ;; Tracked objects:
 46036 ;;		On entry : 0/0
 46037 ;;		On exit  : 0/0
 46038 ;;		Unchanged: 0/0
 46039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46040 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46041 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46042 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46043 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46044 ;;Total ram usage:        4 bytes
 46045 ;; Hardware stack levels used:    1
 46046 ;; Hardware stack levels required when called:    5
 46047 ;; This function calls:
 46048 ;;		_INT1_CallBack
 46049 ;; This function is called by:
 46050 ;;		Interrupt level 1
 46051 ;; This function uses a non-reentrant model
 46052 ;;
 46053                           
 46054                           	psect	text185
 46055  001CB4                     __ptext185:
 46056                           	opt callstack 0
 46057  001CB4                     _INT1_ISR:
 46058                           	opt callstack 12
 46059                           
 46060                           ;incstack = 0
 46061  001CB4  006F FF60  F007    	movff	status,??_INT1_ISR
 46062  001CBA  0060  F0A8  F008   	movff	btemp,??_INT1_ISR+1
 46063  001CC0  0060  F0D0  F009   	movff	btemp+10,??_INT1_ISR+2
 46064  001CC6  0060  F0D4  F00A   	movff	btemp+11,??_INT1_ISR+3
 46065  001CCC  EE16  F196         	lfsr	1,___intlo_sp
 46066                           
 46067                           ;mcc_generated_files/ext_int.c: 64:  (PIR5bits.INT1IF = 0);
 46068  001CD0  0139               	movlb	57	; () banked
 46069  001CD2  91A5               	bcf	165,0,b	;volatile
 46070                           
 46071                           ; BSR set to: 57
 46072                           ;mcc_generated_files/ext_int.c: 67:  INT1_CallBack();
 46073  001CD4  EC9A  F011         	call	_INT1_CallBack	;wreg free
 46074  001CD8  0060  F028  F035   	movff	??_INT1_ISR+3,btemp+11
 46075  001CDE  0060  F024  F034   	movff	??_INT1_ISR+2,btemp+10
 46076  001CE4  0060  F020  F02A   	movff	??_INT1_ISR+1,btemp
 46077  001CEA  0060  F01F  FFD8   	movff	??_INT1_ISR,status
 46078  001CF0  0011               	retfie		f
 46079  001CF2                     __end_of_INT1_ISR:
 46080                           	opt callstack 0
 46081                           
 46082 ;; *************** function _INT1_CallBack *****************
 46083 ;; Defined at:
 46084 ;;		line 70 in file "mcc_generated_files/ext_int.c"
 46085 ;; Parameters:    Size  Location     Type
 46086 ;;		None
 46087 ;; Auto vars:     Size  Location     Type
 46088 ;;		None
 46089 ;; Return value:  Size  Location     Type
 46090 ;;                  1  [STACK] void 
 46091 ;; Registers used:
 46092 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 46093 ;; Tracked objects:
 46094 ;;		On entry : 3F/39
 46095 ;;		On exit  : 0/0
 46096 ;;		Unchanged: 0/0
 46097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46098 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46099 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46100 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46101 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46102 ;;Total ram usage:        0 bytes
 46103 ;; Hardware stack levels used:    1
 46104 ;; Hardware stack levels required when called:    4
 46105 ;; This function calls:
 46106 ;;		Absolute function
 46107 ;;		_INT1_DefaultInterruptHandler
 46108 ;;		_switch_handler
 46109 ;; This function is called by:
 46110 ;;		_INT1_ISR
 46111 ;; This function uses a reentrant model
 46112 ;;
 46113                           
 46114                           	psect	text186
 46115  002334                     __ptext186:
 46116                           	opt callstack 0
 46117  002334                     _INT1_CallBack:
 46118                           	opt callstack 12
 46119                           
 46120                           ;mcc_generated_files/ext_int.c: 73:  if (INT1_InterruptHandler) {
 46121                           
 46122                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 46123                           ;incstack = 0
 46124  002334  0100               	movlb	0	; () banked
 46125  002336  51B0               	movf	_INT1_InterruptHandler& (0+255),w,b
 46126  002338  11B1               	iorwf	(_INT1_InterruptHandler+1)& (0+255),w,b
 46127  00233A  11B2               	iorwf	(_INT1_InterruptHandler+2)& (0+255),w,b
 46128  00233C  B4D8               	btfsc	status,2,c
 46129  00233E  0012               	return	
 46130                           
 46131                           ; BSR set to: 0
 46132                           ;mcc_generated_files/ext_int.c: 74:   INT1_InterruptHandler();
 46133  002340  D801               	call	u1310_28
 46134  002342  0012               	return	
 46135  002344                     u1310_28:
 46136  002344  0005               	push	
 46137  002346  6EFA               	movwf	pclath,c
 46138  002348  51B0               	movf	_INT1_InterruptHandler& (0+255),w,b
 46139  00234A  6EFD               	movwf	tosl,c
 46140  00234C  51B1               	movf	(_INT1_InterruptHandler+1)& (0+255),w,b
 46141  00234E  6EFE               	movwf	tosh,c
 46142  002350  51B2               	movf	(_INT1_InterruptHandler+2)& (0+255),w,b
 46143  002352  6EFF               	movwf	tosu,c
 46144  002354  50FA               	movf	pclath,w,c
 46145  002356  0012               	return		;indir
 46146  002358                     __end_of_INT1_CallBack:
 46147                           	opt callstack 0
 46148                           
 46149 ;; *************** function _INT1_DefaultInterruptHandler *****************
 46150 ;; Defined at:
 46151 ;;		line 83 in file "mcc_generated_files/ext_int.c"
 46152 ;; Parameters:    Size  Location     Type
 46153 ;;		None
 46154 ;; Auto vars:     Size  Location     Type
 46155 ;;		None
 46156 ;; Return value:  Size  Location     Type
 46157 ;;                  1  [STACK] void 
 46158 ;; Registers used:
 46159 ;;		None
 46160 ;; Tracked objects:
 46161 ;;		On entry : 3F/0
 46162 ;;		On exit  : 0/0
 46163 ;;		Unchanged: 0/0
 46164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46165 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46166 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46167 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46168 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46169 ;;Total ram usage:        0 bytes
 46170 ;; Hardware stack levels used:    1
 46171 ;; Hardware stack levels required when called:    3
 46172 ;; This function calls:
 46173 ;;		Nothing
 46174 ;; This function is called by:
 46175 ;;		_EXT_INT_Initialize
 46176 ;;		_INT1_CallBack
 46177 ;; This function uses a reentrant model
 46178 ;;
 46179                           
 46180                           	psect	text187
 46181  002742                     __ptext187:
 46182                           	opt callstack 0
 46183  002742                     _INT1_DefaultInterruptHandler:
 46184                           	opt callstack 12
 46185                           
 46186                           ; _INT1_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 46187                           
 46188                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 46189                           ;incstack = 0
 46190  002742  0012               	return		;funcret
 46191  002744                     __end_of_INT1_DefaultInterruptHandler:
 46192                           	opt callstack 0
 46193                           
 46194 ;; *************** function _switch_handler *****************
 46195 ;; Defined at:
 46196 ;;		line 58 in file "dio.c"
 46197 ;; Parameters:    Size  Location     Type
 46198 ;;		None
 46199 ;; Auto vars:     Size  Location     Type
 46200 ;;  i               1  [STACK] unsigned char 
 46201 ;;  sw_value        1  [STACK] unsigned char 
 46202 ;; Return value:  Size  Location     Type
 46203 ;;                  1  [STACK] void 
 46204 ;; Registers used:
 46205 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
 46206 ;; Tracked objects:
 46207 ;;		On entry : 3F/0
 46208 ;;		On exit  : 0/0
 46209 ;;		Unchanged: 0/0
 46210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46211 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46212 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46214 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46215 ;;Total ram usage:        0 bytes
 46216 ;; Hardware stack levels used:    1
 46217 ;; Hardware stack levels required when called:    3
 46218 ;; This function calls:
 46219 ;;		Nothing
 46220 ;; This function is called by:
 46221 ;;		_start_switch_handler
 46222 ;;		_INT1_CallBack
 46223 ;; This function uses a reentrant model
 46224 ;;
 46225                           
 46226                           	psect	text188
 46227  01EE36                     __ptext188:
 46228                           	opt callstack 0
 46229  01EE36                     _switch_handler:
 46230                           	opt callstack 0
 46231                           
 46232                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 46233  01EE36  52E6               	movf	postinc1,f,c
 46234  01EE38  52E6               	movf	postinc1,f,c
 46235                           
 46236                           ;dio.c: 60:  uint8_t i = 0, sw_value;
 46237                           ;stkvar	_i @ sp[(-2)+0]
 46238                           
 46239                           ;incstack = 0
 46240  01EE3A  0EFE               	movlw	-2
 46241  01EE3C  6AE3               	clrf	plusw1,c
 46242  01EE3E  9ABF               	bcf	191,5,c	;volatile
 46243                           
 46244                           ;dio.c: 72:  __nop();
 46245  01EE40  F000               	nop	
 46246                           
 46247                           ;dio.c: 73:  __nop();
 46248  01EE42  F000               	nop	
 46249                           
 46250                           ;dio.c: 74:  __nop();
 46251  01EE44  F000               	nop	
 46252                           
 46253                           ;dio.c: 75:  __nop();
 46254  01EE46  F000               	nop	
 46255                           
 46256                           ;dio.c: 76:  __nop();
 46257  01EE48  F000               	nop	
 46258                           
 46259                           ;dio.c: 77:  __nop();
 46260  01EE4A  F000               	nop	
 46261  01EE4C  D016               	goto	l13692
 46262  01EE4E                     l13678:
 46263                           
 46264                           ;dio.c: 82:    sw_value = PORTFbits.RF3;
 46265  01EE4E  A6CF               	btfss	207,3,c	;volatile
 46266  01EE50  D00E               	goto	u1276_20
 46267  01EE52  D00A               	goto	u1276_21
 46268  01EE54                     u1274_28:
 46269                           
 46270                           ;stkvar	_sw_value @ sp[(-2)+1]
 46271  01EE54  0EFF               	movlw	-1
 46272  01EE56  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 46273                           
 46274                           ;dio.c: 83:    break;
 46275  01EE5C  D027               	goto	l13694
 46276  01EE5E                     l13680:
 46277                           
 46278                           ;dio.c: 85:    sw_value = PORTFbits.RF2;
 46279  01EE5E  A4CF               	btfss	207,2,c	;volatile
 46280  01EE60  D006               	goto	u1276_20
 46281  01EE62  D002               	goto	u1276_21
 46282  01EE64                     l13682:
 46283                           
 46284                           ;dio.c: 88:    sw_value = PORTDbits.RD3;
 46285  01EE64  A6CD               	btfss	205,3,c	;volatile
 46286  01EE66  D003               	goto	u1276_20
 46287  01EE68                     u1276_21:
 46288  01EE68  6A35               	clrf	(btemp+11)^0,c
 46289  01EE6A  2A35               	incf	(btemp+11)^0,f,c
 46290  01EE6C  D7F3               	goto	u1274_28
 46291  01EE6E                     u1276_20:
 46292  01EE6E  6A35               	clrf	(btemp+11)^0,c
 46293  01EE70  D7F1               	goto	u1274_28
 46294  01EE72                     l13684:
 46295                           
 46296                           ;dio.c: 91:    sw_value = 1;
 46297                           ;stkvar	_sw_value @ sp[(-2)+1]
 46298  01EE72  0EFF               	movlw	-1
 46299  01EE74  6AE3               	clrf	plusw1,c
 46300  01EE76  2AE3               	incf	plusw1,f,c
 46301                           
 46302                           ;dio.c: 92:    break;
 46303  01EE78  D019               	goto	l13694
 46304  01EE7A                     l13692:
 46305                           
 46306                           ;stkvar	_i @ sp[(-2)+0]
 46307  01EE7A  0EFE               	movlw	-2
 46308  01EE7C  50E3               	movf	plusw1,w,c
 46309  01EE7E  6E34               	movwf	(btemp+10)^0,c
 46310  01EE80  6A35               	clrf	(btemp+11)^0,c
 46311                           
 46312                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 46313                           ; Switch size 1, requested type "simple"
 46314                           ; Number of cases is 1, Range of values is 0 to 0
 46315                           ; switch strategies available:
 46316                           ; Name         Instructions Cycles
 46317                           ; simple_byte            4     3 (average)
 46318                           ;	Chosen strategy is simple_byte
 46319  01EE82  5035               	movf	(btemp+11)^0,w,c
 46320  01EE84  0A00               	xorlw	0	; case 0
 46321  01EE86  A4D8               	btfss	status,2,c
 46322  01EE88  D7F4               	goto	l13684
 46323                           
 46324                           ; Switch size 1, requested type "simple"
 46325                           ; Number of cases is 5, Range of values is 0 to 4
 46326                           ; switch strategies available:
 46327                           ; Name         Instructions Cycles
 46328                           ; simple_byte           16     9 (average)
 46329                           ;	Chosen strategy is simple_byte
 46330  01EE8A  5034               	movf	(btemp+10)^0,w,c
 46331  01EE8C  0A00               	xorlw	0	; case 0
 46332  01EE8E  B4D8               	btfsc	status,2,c
 46333  01EE90  D7F0               	goto	l13684
 46334  01EE92  0A01               	xorlw	1	; case 1
 46335  01EE94  B4D8               	btfsc	status,2,c
 46336  01EE96  D7ED               	goto	l13684
 46337  01EE98  0A03               	xorlw	3	; case 2
 46338  01EE9A  B4D8               	btfsc	status,2,c
 46339  01EE9C  D7E0               	goto	l13680
 46340  01EE9E  0A01               	xorlw	1	; case 3
 46341  01EEA0  B4D8               	btfsc	status,2,c
 46342  01EEA2  D7D5               	goto	l13678
 46343  01EEA4  0A07               	xorlw	7	; case 4
 46344  01EEA6  B4D8               	btfsc	status,2,c
 46345  01EEA8  D7DD               	goto	l13682
 46346  01EEAA  D7E3               	goto	l13684
 46347  01EEAC                     l13694:
 46348                           
 46349                           ;dio.c: 102:   if (sw_value) {
 46350                           ;stkvar	_sw_value @ sp[(-2)+1]
 46351  01EEAC  0EFF               	movlw	-1
 46352  01EEAE  50E3               	movf	plusw1,w,c
 46353  01EEB0  B4D8               	btfsc	status,2,c
 46354  01EEB2  D018               	goto	l13700
 46355                           
 46356                           ;dio.c: 103:    if (S.button[i].sw == SW_ON) {
 46357                           ;stkvar	_i @ sp[(-2)+0]
 46358  01EEB4  0EFE               	movlw	-2
 46359  01EEB6  50E3               	movf	plusw1,w,c
 46360  01EEB8  0D05               	mullw	5
 46361  01EEBA  0EA4               	movlw	low _S
 46362  01EEBC  24F3               	addwf	243,w,c
 46363  01EEBE  6ED9               	movwf	fsr2l,c
 46364  01EEC0  0E01               	movlw	high _S
 46365  01EEC2  20F4               	addwfc	prodh,w,c
 46366  01EEC4  6EDA               	movwf	fsr2h,c
 46367  01EEC6  04DE               	decf	postinc2,w,c
 46368  01EEC8  A4D8               	btfss	status,2,c
 46369  01EECA  D049               	goto	l13708
 46370                           
 46371                           ;dio.c: 104:     S.button[i].sw = SW_OFF;
 46372                           ;stkvar	_i @ sp[(-2)+0]
 46373  01EECC  0EFE               	movlw	-2
 46374  01EECE  50E3               	movf	plusw1,w,c
 46375  01EED0  0D05               	mullw	5
 46376  01EED2  0EA4               	movlw	low _S
 46377  01EED4  24F3               	addwf	243,w,c
 46378  01EED6  6ED9               	movwf	fsr2l,c
 46379  01EED8  0E01               	movlw	high _S
 46380  01EEDA  20F4               	addwfc	prodh,w,c
 46381  01EEDC  6EDA               	movwf	fsr2h,c
 46382  01EEDE  0E00               	movlw	0
 46383  01EEE0  6EDF               	movwf	indf2,c
 46384  01EEE2  D03D               	goto	l13708
 46385  01EEE4                     l13700:
 46386                           
 46387                           ;dio.c: 107:    if (S.button[i].sw == SW_OFF) {
 46388                           ;stkvar	_i @ sp[(-2)+0]
 46389  01EEE4  0EFE               	movlw	-2
 46390  01EEE6  50E3               	movf	plusw1,w,c
 46391  01EEE8  0D05               	mullw	5
 46392  01EEEA  0EA4               	movlw	low _S
 46393  01EEEC  24F3               	addwf	243,w,c
 46394  01EEEE  6ED9               	movwf	fsr2l,c
 46395  01EEF0  0E01               	movlw	high _S
 46396  01EEF2  20F4               	addwfc	prodh,w,c
 46397  01EEF4  6EDA               	movwf	fsr2h,c
 46398  01EEF6  50DF               	movf	indf2,w,c
 46399  01EEF8  A4D8               	btfss	status,2,c
 46400  01EEFA  D031               	goto	l13708
 46401                           
 46402                           ;dio.c: 108:     S.button[i].sw = SW_ON;
 46403                           ;stkvar	_i @ sp[(-2)+0]
 46404  01EEFC  0EFE               	movlw	-2
 46405  01EEFE  50E3               	movf	plusw1,w,c
 46406  01EF00  0D05               	mullw	5
 46407  01EF02  0EA4               	movlw	low _S
 46408  01EF04  24F3               	addwf	243,w,c
 46409  01EF06  6ED9               	movwf	fsr2l,c
 46410  01EF08  0E01               	movlw	high _S
 46411  01EF0A  20F4               	addwfc	prodh,w,c
 46412  01EF0C  6EDA               	movwf	fsr2h,c
 46413  01EF0E  0E01               	movlw	1
 46414  01EF10  6EDF               	movwf	indf2,c
 46415                           
 46416                           ;dio.c: 109:     S.button[i].count = V.timerint_count;
 46417  01EF12  EE20  F2B8         	lfsr	2,_V+177	;volatile
 46418                           
 46419                           ;stkvar	_i @ sp[(-2)+0]
 46420  01EF16  0EFE               	movlw	-2
 46421  01EF18  50E3               	movf	plusw1,w,c
 46422  01EF1A  0D05               	mullw	5
 46423  01EF1C  0EA5               	movlw	low (_S+1)
 46424  01EF1E  24F3               	addwf	243,w,c
 46425  01EF20  6EE9               	movwf	fsr0l,c
 46426  01EF22  0E01               	movlw	high (_S+1)
 46427  01EF24  20F4               	addwfc	prodh,w,c
 46428  01EF26  6EEA               	movwf	fsr0h,c
 46429  01EF28  006F FF7B FFEE     	movff	postinc2,postinc0
 46430  01EF2E  006F FF7B FFEE     	movff	postinc2,postinc0
 46431  01EF34  006F FF7B FFEE     	movff	postinc2,postinc0
 46432  01EF3A  006F FF7B FFEE     	movff	postinc2,postinc0
 46433                           
 46434                           ;dio.c: 110:     S.sw_bitmap |= 1 << i;
 46435                           ;stkvar	_i @ sp[(-2)+0]
 46436  01EF40  0EFE               	movlw	-2
 46437  01EF42  006F FF8C  F035    	movff	plusw1,btemp+11
 46438  01EF48  0E01               	movlw	1
 46439  01EF4A  6E34               	movwf	(btemp+10)^0,c
 46440  01EF4C  2A35               	incf	(btemp+11)^0,f,c
 46441  01EF4E  D002               	goto	u1280_24
 46442  01EF50                     u1280_25:
 46443  01EF50  90D8               	bcf	status,0,c
 46444  01EF52  3634               	rlcf	(btemp+10)^0,f,c
 46445  01EF54                     u1280_24:
 46446  01EF54  2E35               	decfsz	(btemp+11)^0,f,c
 46447  01EF56  D7FC               	goto	u1280_25
 46448  01EF58  5034               	movf	(btemp+10)^0,w,c
 46449  01EF5A  0101               	movlb	1	; () banked
 46450  01EF5C  13CC               	iorwf	(_S+40)& (0+255),f,b	;volatile
 46451  01EF5E                     l13708:
 46452                           
 46453                           ;dio.c: 113:  } while (++i < 6);
 46454                           ;stkvar	_i @ sp[(-2)+0]
 46455  01EF5E  0EFE               	movlw	-2
 46456  01EF60  2AE3               	incf	plusw1,f,c
 46457  01EF62  0EFE               	movlw	-2
 46458  01EF64  006F FF8C  F02A    	movff	plusw1,btemp
 46459  01EF6A  0E05               	movlw	5
 46460  01EF6C  642A               	cpfsgt	btemp^0,c
 46461  01EF6E  D785               	goto	l13692
 46462                           
 46463                           ;dio.c: 122:  do { LATFbits.LATF5 = 1; } while(0);
 46464  01EF70  8ABF               	bsf	191,5,c	;volatile
 46465                           
 46466                           ; _switch_handler: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 46467  01EF72  52E5               	movf	postdec1,f,c
 46468  01EF74  52E5               	movf	postdec1,f,c
 46469  01EF76  0012               	return		;funcret
 46470  01EF78                     __end_of_switch_handler:
 46471                           	opt callstack 0
 46472                           
 46473 ;; *************** function _TMR5_ISR *****************
 46474 ;; Defined at:
 46475 ;;		line 166 in file "mcc_generated_files/tmr5.c"
 46476 ;; Parameters:    Size  Location     Type
 46477 ;;		None
 46478 ;; Auto vars:     Size  Location     Type
 46479 ;;		None
 46480 ;; Return value:  Size  Location     Type
 46481 ;;                  1    wreg      void 
 46482 ;; Registers used:
 46483 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, btemp+30, btemp+31, tosl, prodl,
      + prodh
 46484 ;; Tracked objects:
 46485 ;;		On entry : 0/0
 46486 ;;		On exit  : 3F/0
 46487 ;;		Unchanged: 0/0
 46488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46489 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46490 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46491 ;;      Temps:         31       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46492 ;;      Totals:        31       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46493 ;;Total ram usage:       31 bytes
 46494 ;; Hardware stack levels used:    1
 46495 ;; Hardware stack levels required when called:    9
 46496 ;; This function calls:
 46497 ;;		_TMR5_CallBack
 46498 ;;		_TMR5_WriteTimer
 46499 ;; This function is called by:
 46500 ;;		Interrupt level 1
 46501 ;; This function uses a non-reentrant model
 46502 ;;
 46503                           
 46504                           	psect	text189
 46505  01D868                     __ptext189:
 46506                           	opt callstack 0
 46507  01D868                     _TMR5_ISR:
 46508                           	opt callstack 8
 46509                           
 46510                           ;incstack = 0
 46511  01D868  006F FF60  F00D    	movff	status,??_TMR5_ISR+2
 46512  01D86E  0060  F0A8  F00E   	movff	btemp,??_TMR5_ISR+3
 46513  01D874  0060  F0AC  F00F   	movff	btemp+1,??_TMR5_ISR+4
 46514  01D87A  0060  F0B0  F010   	movff	btemp+2,??_TMR5_ISR+5
 46515  01D880  0060  F0B4  F011   	movff	btemp+3,??_TMR5_ISR+6
 46516  01D886  0060  F0B8  F012   	movff	btemp+4,??_TMR5_ISR+7
 46517  01D88C  0060  F0BC  F013   	movff	btemp+5,??_TMR5_ISR+8
 46518  01D892  0060  F0C0  F014   	movff	btemp+6,??_TMR5_ISR+9
 46519  01D898  0060  F0C4  F015   	movff	btemp+7,??_TMR5_ISR+10
 46520  01D89E  0060  F0C8  F016   	movff	btemp+8,??_TMR5_ISR+11
 46521  01D8A4  0060  F0CC  F017   	movff	btemp+9,??_TMR5_ISR+12
 46522  01D8AA  0060  F0D0  F018   	movff	btemp+10,??_TMR5_ISR+13
 46523  01D8B0  0060  F0D4  F019   	movff	btemp+11,??_TMR5_ISR+14
 46524  01D8B6  0060  F0E8  F01A   	movff	btemp+16,??_TMR5_ISR+15
 46525  01D8BC  0060  F0EC  F01B   	movff	btemp+17,??_TMR5_ISR+16
 46526  01D8C2  0060  F0F0  F01C   	movff	btemp+18,??_TMR5_ISR+17
 46527  01D8C8  0060  F0F4  F01D   	movff	btemp+19,??_TMR5_ISR+18
 46528  01D8CE  0060  F0F8  F01E   	movff	btemp+20,??_TMR5_ISR+19
 46529  01D8D4  0060  F0FC  F01F   	movff	btemp+21,??_TMR5_ISR+20
 46530  01D8DA  0060  F100  F020   	movff	btemp+22,??_TMR5_ISR+21
 46531  01D8E0  0060  F104  F021   	movff	btemp+23,??_TMR5_ISR+22
 46532  01D8E6  0060  F108  F022   	movff	btemp+24,??_TMR5_ISR+23
 46533  01D8EC  0060  F10C  F023   	movff	btemp+25,??_TMR5_ISR+24
 46534  01D8F2  0060  F110  F024   	movff	btemp+26,??_TMR5_ISR+25
 46535  01D8F8  0060  F114  F025   	movff	btemp+27,??_TMR5_ISR+26
 46536  01D8FE  0060  F118  F026   	movff	btemp+28,??_TMR5_ISR+27
 46537  01D904  0060  F11C  F027   	movff	btemp+29,??_TMR5_ISR+28
 46538  01D90A  0060  F120  F028   	movff	btemp+30,??_TMR5_ISR+29
 46539  01D910  0060  F124  F029   	movff	btemp+31,??_TMR5_ISR+30
 46540  01D916  EE16  F196         	lfsr	1,___intlo_sp
 46541                           
 46542                           ;mcc_generated_files/tmr5.c: 168:  static volatile unsigned int CountCallBack = 0;;mcc_g
      +                          enerated_files/tmr5.c: 171:  PIR8bits.TMR5IF = 0;
 46543  01D91A  0139               	movlb	57	; () banked
 46544  01D91C  9DA8               	bcf	168,6,b	;volatile
 46545                           
 46546                           ; BSR set to: 57
 46547                           ;mcc_generated_files/tmr5.c: 172:  TMR5_WriteTimer(timer5ReloadVal);
 46548  01D91E  0060  F313  FFE6   	movff	_timer5ReloadVal,postinc1
 46549  01D924  0060  F317  FFE6   	movff	_timer5ReloadVal+1,postinc1
 46550  01D92A  EC1A  F00E         	call	_TMR5_WriteTimer	;wreg free
 46551                           
 46552                           ;mcc_generated_files/tmr5.c: 175:  if (++CountCallBack >= (5 +V.ticker)) {
 46553  01D92E  0102               	movlb	2	; () banked
 46554  01D930  51AE               	movf	(_V+167)& (0+255),w,b	;volatile
 46555  01D932  6E0B               	movwf	??_TMR5_ISR^0,c
 46556  01D934  6A0C               	clrf	(??_TMR5_ISR+1)^0,c
 46557  01D936  0E05               	movlw	5
 46558  01D938  260B               	addwf	??_TMR5_ISR^0,f,c
 46559  01D93A  0E00               	movlw	0
 46560  01D93C  220C               	addwfc	(??_TMR5_ISR+1)^0,f,c
 46561  01D93E  0100               	movlb	0	; () banked
 46562  01D940  4BC2               	infsnz	TMR5_ISR@CountCallBack& (0+255),f,b	;volatile
 46563  01D942  2BC3               	incf	(TMR5_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 46564  01D944  500B               	movf	??_TMR5_ISR^0,w,c
 46565  01D946  5DC2               	subwf	TMR5_ISR@CountCallBack& (0+255),w,b	;volatile
 46566  01D948  500C               	movf	(??_TMR5_ISR+1)^0,w,c
 46567  01D94A  59C3               	subwfb	(TMR5_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 46568  01D94C  A0D8               	btfss	status,0,c
 46569  01D94E  D005               	goto	i1l1021
 46570                           
 46571                           ; BSR set to: 0
 46572                           ;mcc_generated_files/tmr5.c: 177:   TMR5_CallBack();
 46573  01D950  ECAC  F011         	call	_TMR5_CallBack	;wreg free
 46574                           
 46575                           ;mcc_generated_files/tmr5.c: 180:   CountCallBack = 0;
 46576  01D954  0100               	movlb	0	; () banked
 46577  01D956  6BC2               	clrf	TMR5_ISR@CountCallBack& (0+255),b	;volatile
 46578  01D958  6BC3               	clrf	(TMR5_ISR@CountCallBack+1)& (0+255),b	;volatile
 46579  01D95A                     i1l1021:
 46580                           
 46581                           ; BSR set to: 0
 46582  01D95A  0060  F0A4  F049   	movff	??_TMR5_ISR+30,btemp+31
 46583  01D960  0060  F0A0  F048   	movff	??_TMR5_ISR+29,btemp+30
 46584  01D966  0060  F09C  F047   	movff	??_TMR5_ISR+28,btemp+29
 46585  01D96C  0060  F098  F046   	movff	??_TMR5_ISR+27,btemp+28
 46586  01D972  0060  F094  F045   	movff	??_TMR5_ISR+26,btemp+27
 46587  01D978  0060  F090  F044   	movff	??_TMR5_ISR+25,btemp+26
 46588  01D97E  0060  F08C  F043   	movff	??_TMR5_ISR+24,btemp+25
 46589  01D984  0060  F088  F042   	movff	??_TMR5_ISR+23,btemp+24
 46590  01D98A  0060  F084  F041   	movff	??_TMR5_ISR+22,btemp+23
 46591  01D990  0060  F080  F040   	movff	??_TMR5_ISR+21,btemp+22
 46592  01D996  0060  F07C  F03F   	movff	??_TMR5_ISR+20,btemp+21
 46593  01D99C  0060  F078  F03E   	movff	??_TMR5_ISR+19,btemp+20
 46594  01D9A2  0060  F074  F03D   	movff	??_TMR5_ISR+18,btemp+19
 46595  01D9A8  0060  F070  F03C   	movff	??_TMR5_ISR+17,btemp+18
 46596  01D9AE  0060  F06C  F03B   	movff	??_TMR5_ISR+16,btemp+17
 46597  01D9B4  0060  F068  F03A   	movff	??_TMR5_ISR+15,btemp+16
 46598  01D9BA  0060  F064  F035   	movff	??_TMR5_ISR+14,btemp+11
 46599  01D9C0  0060  F060  F034   	movff	??_TMR5_ISR+13,btemp+10
 46600  01D9C6  0060  F05C  F033   	movff	??_TMR5_ISR+12,btemp+9
 46601  01D9CC  0060  F058  F032   	movff	??_TMR5_ISR+11,btemp+8
 46602  01D9D2  0060  F054  F031   	movff	??_TMR5_ISR+10,btemp+7
 46603  01D9D8  0060  F050  F030   	movff	??_TMR5_ISR+9,btemp+6
 46604  01D9DE  0060  F04C  F02F   	movff	??_TMR5_ISR+8,btemp+5
 46605  01D9E4  0060  F048  F02E   	movff	??_TMR5_ISR+7,btemp+4
 46606  01D9EA  0060  F044  F02D   	movff	??_TMR5_ISR+6,btemp+3
 46607  01D9F0  0060  F040  F02C   	movff	??_TMR5_ISR+5,btemp+2
 46608  01D9F6  0060  F03C  F02B   	movff	??_TMR5_ISR+4,btemp+1
 46609  01D9FC  0060  F038  F02A   	movff	??_TMR5_ISR+3,btemp
 46610  01DA02  0060  F037  FFD8   	movff	??_TMR5_ISR+2,status
 46611  01DA08  0011               	retfie		f
 46612  01DA0A                     __end_of_TMR5_ISR:
 46613                           	opt callstack 0
 46614                           
 46615 ;; *************** function _TMR5_WriteTimer *****************
 46616 ;; Defined at:
 46617 ;;		line 132 in file "mcc_generated_files/tmr5.c"
 46618 ;; Parameters:    Size  Location     Type
 46619 ;;  timerVal        2  [STACK] unsigned short 
 46620 ;; Auto vars:     Size  Location     Type
 46621 ;;		None
 46622 ;; Return value:  Size  Location     Type
 46623 ;;                  1  [STACK] void 
 46624 ;; Registers used:
 46625 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 46626 ;; Tracked objects:
 46627 ;;		On entry : 3F/39
 46628 ;;		On exit  : 0/0
 46629 ;;		Unchanged: 0/0
 46630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46631 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46632 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46633 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46634 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46635 ;;Total ram usage:        0 bytes
 46636 ;; Hardware stack levels used:    1
 46637 ;; Hardware stack levels required when called:    3
 46638 ;; This function calls:
 46639 ;;		Nothing
 46640 ;; This function is called by:
 46641 ;;		_TMR5_ISR
 46642 ;; This function uses a reentrant model
 46643 ;;
 46644                           
 46645                           	psect	text190
 46646  001C34                     __ptext190:
 46647                           	opt callstack 0
 46648  001C34                     _TMR5_WriteTimer:
 46649                           	opt callstack 13
 46650                           
 46651                           ;mcc_generated_files/tmr5.c: 132: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 133: {;mcc_generated_files/tmr5.c: 134:  if (T5CONbits.NOT_SYNC == 1) {
 46652                           
 46653                           ; BSR set to: 0
 46654                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 46655                           ;incstack = 0
 46656  001C34  A49A               	btfss	154,2,c	;volatile
 46657  001C36  D00F               	goto	l13920
 46658                           
 46659                           ;mcc_generated_files/tmr5.c: 136:   T5CONbits.TMR5ON = 0;
 46660  001C38  909A               	bcf	154,0,c	;volatile
 46661                           
 46662                           ;mcc_generated_files/tmr5.c: 139:   TMR5H = (timerVal >> 8);
 46663                           ;stkvar	_timerVal @ sp[(0)+-2]
 46664  001C3A  0EFF               	movlw	255
 46665  001C3C  24E1               	addwf	fsr1l,w,c
 46666  001C3E  6ED9               	movwf	fsr2l,c
 46667  001C40  0EFF               	movlw	255
 46668  001C42  20E2               	addwfc	fsr1h,w,c
 46669  001C44  6EDA               	movwf	fsr2h,c
 46670  001C46  50DF               	movf	indf2,w,c
 46671  001C48  6E99               	movwf	153,c	;volatile
 46672                           
 46673                           ;mcc_generated_files/tmr5.c: 140:   TMR5L = timerVal;
 46674                           ;stkvar	_timerVal @ sp[(0)+-2]
 46675  001C4A  0EFE               	movlw	-2
 46676  001C4C  006F FF8F FF98     	movff	plusw1,16280	;volatile
 46677                           
 46678                           ;mcc_generated_files/tmr5.c: 143:   T5CONbits.TMR5ON = 1;
 46679  001C52  809A               	bsf	154,0,c	;volatile
 46680                           
 46681                           ;mcc_generated_files/tmr5.c: 144:  } else {
 46682  001C54  D00C               	goto	l1004
 46683  001C56                     l13920:
 46684                           
 46685                           ;mcc_generated_files/tmr5.c: 146:   TMR5H = (timerVal >> 8);
 46686                           ;stkvar	_timerVal @ sp[(0)+-2]
 46687  001C56  0EFF               	movlw	255
 46688  001C58  24E1               	addwf	fsr1l,w,c
 46689  001C5A  6ED9               	movwf	fsr2l,c
 46690  001C5C  0EFF               	movlw	255
 46691  001C5E  20E2               	addwfc	fsr1h,w,c
 46692  001C60  6EDA               	movwf	fsr2h,c
 46693  001C62  50DF               	movf	indf2,w,c
 46694  001C64  6E99               	movwf	153,c	;volatile
 46695                           
 46696                           ;mcc_generated_files/tmr5.c: 147:   TMR5L = timerVal;
 46697                           ;stkvar	_timerVal @ sp[(0)+-2]
 46698  001C66  0EFE               	movlw	-2
 46699  001C68  006F FF8F FF98     	movff	plusw1,16280	;volatile
 46700  001C6E                     l1004:
 46701                           
 46702                           ; _TMR5_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 46703  001C6E  52E5               	movf	postdec1,f,c
 46704  001C70  52E5               	movf	postdec1,f,c
 46705  001C72  0012               	return		;funcret
 46706  001C74                     __end_of_TMR5_WriteTimer:
 46707                           	opt callstack 0
 46708                           
 46709 ;; *************** function _TMR5_CallBack *****************
 46710 ;; Defined at:
 46711 ;;		line 184 in file "mcc_generated_files/tmr5.c"
 46712 ;; Parameters:    Size  Location     Type
 46713 ;;		None
 46714 ;; Auto vars:     Size  Location     Type
 46715 ;;		None
 46716 ;; Return value:  Size  Location     Type
 46717 ;;                  1  [STACK] void 
 46718 ;; Registers used:
 46719 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, btemp+30, btemp+31, tosl, prodl,
      + prodh
 46720 ;; Tracked objects:
 46721 ;;		On entry : 3F/0
 46722 ;;		On exit  : 0/0
 46723 ;;		Unchanged: 0/0
 46724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46725 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46726 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46728 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46729 ;;Total ram usage:        0 bytes
 46730 ;; Hardware stack levels used:    1
 46731 ;; Hardware stack levels required when called:    8
 46732 ;; This function calls:
 46733 ;;		Absolute function
 46734 ;;		_TMR5_DefaultInterruptHandler
 46735 ;; This function is called by:
 46736 ;;		_TMR5_ISR
 46737 ;; This function uses a reentrant model
 46738 ;;
 46739                           
 46740                           	psect	text191
 46741  002358                     __ptext191:
 46742                           	opt callstack 0
 46743  002358                     _TMR5_CallBack:
 46744                           	opt callstack 8
 46745                           
 46746                           ;mcc_generated_files/tmr5.c: 187:  if (TMR5_InterruptHandler) {
 46747                           
 46748                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 46749                           ;incstack = 0
 46750  002358  0100               	movlb	0	; () banked
 46751  00235A  519B               	movf	_TMR5_InterruptHandler& (0+255),w,b
 46752  00235C  119C               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 46753  00235E  119D               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 46754  002360  B4D8               	btfsc	status,2,c
 46755  002362  0012               	return	
 46756                           
 46757                           ; BSR set to: 0
 46758                           ;mcc_generated_files/tmr5.c: 188:   TMR5_InterruptHandler();
 46759  002364  D801               	call	u1319_28
 46760  002366  0012               	return	
 46761  002368                     u1319_28:
 46762  002368  0005               	push	
 46763  00236A  6EFA               	movwf	pclath,c
 46764  00236C  519B               	movf	_TMR5_InterruptHandler& (0+255),w,b
 46765  00236E  6EFD               	movwf	tosl,c
 46766  002370  519C               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 46767  002372  6EFE               	movwf	tosh,c
 46768  002374  519D               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 46769  002376  6EFF               	movwf	tosu,c
 46770  002378  50FA               	movf	pclath,w,c
 46771  00237A  0012               	return		;indir
 46772  00237C                     __end_of_TMR5_CallBack:
 46773                           	opt callstack 0
 46774                           
 46775 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 46776 ;; Defined at:
 46777 ;;		line 197 in file "mcc_generated_files/tmr5.c"
 46778 ;; Parameters:    Size  Location     Type
 46779 ;;		None
 46780 ;; Auto vars:     Size  Location     Type
 46781 ;;		None
 46782 ;; Return value:  Size  Location     Type
 46783 ;;                  1  [STACK] void 
 46784 ;; Registers used:
 46785 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, btemp+30, btemp+31, prodl, prodh
 46786 ;; Tracked objects:
 46787 ;;		On entry : 3F/0
 46788 ;;		On exit  : 0/0
 46789 ;;		Unchanged: 0/0
 46790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46791 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46792 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46793 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46794 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46795 ;;Total ram usage:        0 bytes
 46796 ;; Hardware stack levels used:    1
 46797 ;; Hardware stack levels required when called:    7
 46798 ;; This function calls:
 46799 ;;		_check_day_time
 46800 ;; This function is called by:
 46801 ;;		_TMR5_Initialize
 46802 ;;		_TMR5_CallBack
 46803 ;; This function uses a reentrant model
 46804 ;;
 46805                           
 46806                           	psect	text192
 46807  001DA0                     __ptext192:
 46808                           	opt callstack 0
 46809  001DA0                     _TMR5_DefaultInterruptHandler:
 46810                           	opt callstack 8
 46811                           
 46812                           ;mcc_generated_files/tmr5.c: 201:  LATEbits.LATE0 = (uint8_t) ~LATEbits.LATE0;
 46813                           
 46814                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 46815                           ;incstack = 0
 46816  001DA0  A0BE               	btfss	190,0,c	;volatile
 46817  001DA2  D002               	goto	u1245_20
 46818  001DA4  0E01               	movlw	1
 46819  001DA6  D001               	goto	u1245_26
 46820  001DA8                     u1245_20:
 46821  001DA8  0E00               	movlw	0
 46822  001DAA                     u1245_26:
 46823  001DAA  0AFF               	xorlw	255
 46824  001DAC  6E35               	movwf	(btemp+11)^0,c
 46825  001DAE  50BE               	movf	190,w,c	;volatile
 46826  001DB0  1835               	xorwf	(btemp+11)^0,w,c
 46827  001DB2  0BFE               	andlw	-2
 46828  001DB4  1835               	xorwf	(btemp+11)^0,w,c
 46829  001DB6  6EBE               	movwf	190,c	;volatile
 46830                           
 46831                           ;mcc_generated_files/tmr5.c: 202:  V.timerint_count++;
 46832  001DB8  0E01               	movlw	1
 46833  001DBA  0102               	movlb	2	; () banked
 46834  001DBC  27B8               	addwf	(_V+177)& (0+255),f,b	;volatile
 46835  001DBE  0E00               	movlw	0
 46836  001DC0  23B9               	addwfc	(_V+178)& (0+255),f,b	;volatile
 46837  001DC2  23BA               	addwfc	(_V+179)& (0+255),f,b	;volatile
 46838  001DC4  23BB               	addwfc	(_V+180)& (0+255),f,b	;volatile
 46839                           
 46840                           ; BSR set to: 2
 46841                           ;mcc_generated_files/tmr5.c: 203:  V.ticks++;
 46842  001DC6  0E01               	movlw	1
 46843  001DC8  2788               	addwf	(_V+129)& (0+255),f,b	;volatile
 46844  001DCA  0E00               	movlw	0
 46845  001DCC  2389               	addwfc	(_V+130)& (0+255),f,b	;volatile
 46846  001DCE  238A               	addwfc	(_V+131)& (0+255),f,b	;volatile
 46847  001DD0  238B               	addwfc	(_V+132)& (0+255),f,b	;volatile
 46848                           
 46849                           ; BSR set to: 2
 46850                           ;mcc_generated_files/tmr5.c: 204:  check_day_time();
 46851  001DD2  ECC8  F0CD         	call	_check_day_time	;wreg free
 46852                           
 46853                           ; _TMR5_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 46854  001DD6  0012               	return		;funcret
 46855  001DD8                     __end_of_TMR5_DefaultInterruptHandler:
 46856                           	opt callstack 0
 46857                           
 46858 ;; *************** function _check_day_time *****************
 46859 ;; Defined at:
 46860 ;;		line 167 in file "mbmc.c"
 46861 ;; Parameters:    Size  Location     Type
 46862 ;;		None
 46863 ;; Auto vars:     Size  Location     Type
 46864 ;;  light           4  [STACK] float 
 46865 ;; Return value:  Size  Location     Type
 46866 ;;                  1  [STACK] _Bool 
 46867 ;; Registers used:
 46868 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, btemp+30, btemp+31, prodl, prodh
 46869 ;; Tracked objects:
 46870 ;;		On entry : 3F/2
 46871 ;;		On exit  : 0/0
 46872 ;;		Unchanged: 0/0
 46873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46874 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46875 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46877 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46878 ;;Total ram usage:        0 bytes
 46879 ;; Hardware stack levels used:    1
 46880 ;; Hardware stack levels required when called:    6
 46881 ;; This function calls:
 46882 ;;		___flge
 46883 ;;		_conv_raw_result
 46884 ;;		_get_ac_charger_relay
 46885 ;;		_set_ac_charger_relay
 46886 ;;		_time
 46887 ;; This function is called by:
 46888 ;;		_TMR5_DefaultInterruptHandler
 46889 ;; This function uses a reentrant model
 46890 ;;
 46891                           
 46892                           	psect	text193
 46893  019B90                     __ptext193:
 46894                           	opt callstack 0
 46895  019B90                     _check_day_time:
 46896                           	opt callstack 0
 46897                           
 46898                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 46899  019B90  52E6               	movf	postinc1,f,c
 46900  019B92  52E6               	movf	postinc1,f,c
 46901  019B94  52E6               	movf	postinc1,f,c
 46902  019B96  52E6               	movf	postinc1,f,c
 46903                           
 46904                           ;mbmc.c: 169:  static uint8_t day_delay = 0;;mbmc.c: 170:  float light;;mbmc.c: 172:  li
      +                          ght = conv_raw_result(V_LIGHT_SENSOR, CONV);
 46905                           
 46906                           ;incstack = 0
 46907  019B98  0E00               	movlw	0
 46908  019B9A  6EE6               	movwf	postinc1,c
 46909  019B9C  0E0D               	movlw	13
 46910  019B9E  6EE6               	movwf	postinc1,c
 46911  019BA0  ECE6  F0C2         	call	_conv_raw_result	;wreg free
 46912                           
 46913                           ;stkvar	_light @ sp[(-4)+0]
 46914  019BA4  0EFC               	movlw	-4
 46915  019BA6  0060  F0AB  FFE3   	movff	btemp,plusw1
 46916  019BAC  0EFD               	movlw	-3
 46917  019BAE  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 46918  019BB4  0EFE               	movlw	-2
 46919  019BB6  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 46920  019BBC  0EFF               	movlw	-1
 46921  019BBE  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 46922                           
 46923                           ;mbmc.c: 176:  if (C.day_update) {
 46924  019BC4  EE22  F237         	lfsr	2,_C+312	;volatile
 46925  019BC8  50DE               	movf	postinc2,w,c
 46926  019BCA  10DE               	iorwf	postinc2,w,c
 46927  019BCC  10DE               	iorwf	postinc2,w,c
 46928  019BCE  10DE               	iorwf	postinc2,w,c
 46929  019BD0  B4D8               	btfsc	status,2,c
 46930  019BD2  D068               	goto	l12672
 46931                           
 46932                           ;mbmc.c: 177:   if (time(((void*)0)) >= C.day_update) {
 46933  019BD4  0062  F8DC  F032   	movff	_C+312,btemp+8	;volatile
 46934  019BDA  0062  F8E0  F033   	movff	_C+313,btemp+9	;volatile
 46935  019BE0  0062  F8E4  F034   	movff	_C+314,btemp+10	;volatile
 46936  019BE6  0062  F8E8  F035   	movff	_C+315,btemp+11	;volatile
 46937  019BEC  5032               	movf	(btemp+8)^0,w,c
 46938  019BEE  6E3A               	movwf	(btemp+16)^0,c
 46939  019BF0  5033               	movf	(btemp+9)^0,w,c
 46940  019BF2  6E3B               	movwf	(btemp+17)^0,c
 46941  019BF4  5034               	movf	(btemp+10)^0,w,c
 46942  019BF6  6E3C               	movwf	(btemp+18)^0,c
 46943  019BF8  5035               	movf	(btemp+11)^0,w,c
 46944  019BFA  6E3D               	movwf	(btemp+19)^0,c
 46945  019BFC  6A3E               	clrf	(btemp+20)^0,c
 46946  019BFE  6A3F               	clrf	(btemp+21)^0,c
 46947  019C00  6A40               	clrf	(btemp+22)^0,c
 46948  019C02  6A41               	clrf	(btemp+23)^0,c
 46949  019C04  0E00               	movlw	0
 46950  019C06  6EE6               	movwf	postinc1,c
 46951  019C08  0E00               	movlw	0
 46952  019C0A  6EE6               	movwf	postinc1,c
 46953  019C0C  ECFD  F00A         	call	_time	;wreg free
 46954  019C10  52E5               	movf	postdec1,f,c
 46955  019C12  006F FF9C  F049    	movff	indf1,btemp+31
 46956  019C18  52E5               	movf	postdec1,f,c
 46957  019C1A  006F FF9C  F048    	movff	indf1,btemp+30
 46958  019C20  52E5               	movf	postdec1,f,c
 46959  019C22  006F FF9C  F047    	movff	indf1,btemp+29
 46960  019C28  52E5               	movf	postdec1,f,c
 46961  019C2A  006F FF9C  F046    	movff	indf1,btemp+28
 46962  019C30  52E5               	movf	postdec1,f,c
 46963  019C32  006F FF9C  F045    	movff	indf1,btemp+27
 46964  019C38  52E5               	movf	postdec1,f,c
 46965  019C3A  006F FF9C  F044    	movff	indf1,btemp+26
 46966  019C40  52E5               	movf	postdec1,f,c
 46967  019C42  006F FF9C  F043    	movff	indf1,btemp+25
 46968  019C48  52E5               	movf	postdec1,f,c
 46969  019C4A  006F FF9C  F042    	movff	indf1,btemp+24
 46970  019C50  503A               	movf	(btemp+16)^0,w,c
 46971  019C52  5C42               	subwf	(btemp+24)^0,w,c
 46972  019C54  503B               	movf	(btemp+17)^0,w,c
 46973  019C56  5843               	subwfb	(btemp+25)^0,w,c
 46974  019C58  503C               	movf	(btemp+18)^0,w,c
 46975  019C5A  5844               	subwfb	(btemp+26)^0,w,c
 46976  019C5C  503D               	movf	(btemp+19)^0,w,c
 46977  019C5E  5845               	subwfb	(btemp+27)^0,w,c
 46978  019C60  503E               	movf	(btemp+20)^0,w,c
 46979  019C62  5846               	subwfb	(btemp+28)^0,w,c
 46980  019C64  503F               	movf	(btemp+21)^0,w,c
 46981  019C66  5847               	subwfb	(btemp+29)^0,w,c
 46982  019C68  5040               	movf	(btemp+22)^0,w,c
 46983  019C6A  5848               	subwfb	(btemp+30)^0,w,c
 46984  019C6C  5049               	movf	(btemp+31)^0,w,c
 46985  019C6E  0A80               	xorlw	128
 46986  019C70  6E2A               	movwf	btemp^0,c
 46987  019C72  5041               	movf	(btemp+23)^0,w,c
 46988  019C74  0A80               	xorlw	128
 46989  019C76  582A               	subwfb	btemp^0,w,c
 46990  019C78  A0D8               	btfss	status,0,c
 46991  019C7A  D014               	goto	l12672
 46992                           
 46993                           ; BSR set to: 57
 46994                           ;mbmc.c: 178:    C.day_update = 0;
 46995  019C7C  0E00               	movlw	0
 46996  019C7E  006F FFA0  FA37    	movff	wreg,_C+312	;volatile
 46997  019C84  0E00               	movlw	0
 46998  019C86  006F FFA0  FA38    	movff	wreg,_C+313	;volatile
 46999  019C8C  0E00               	movlw	0
 47000  019C8E  006F FFA0  FA39    	movff	wreg,_C+314	;volatile
 47001  019C94  0E00               	movlw	0
 47002  019C96  006F FFA0  FA3A    	movff	wreg,_C+315	;volatile
 47003                           
 47004                           ;mbmc.c: 179:    C.dupdate = 1;
 47005  019C9C  0E01               	movlw	1
 47006  019C9E  006F FFA0  FA2E    	movff	wreg,_C+303	;volatile
 47007  019CA4                     l12672:
 47008                           
 47009                           ;mbmc.c: 183:  if (!day_delay++ && V.system_stable) {
 47010  019CA4  2A51               	incf	check_day_time@day_delay^0,f,c
 47011  019CA6  0451               	decf	check_day_time@day_delay^0,w,c
 47012  019CA8  A4D8               	btfss	status,2,c
 47013  019CAA  D123               	goto	l2203
 47014  019CAC  0102               	movlb	2	; () banked
 47015  019CAE  51B3               	movf	(_V+172)& (0+255),w,b	;volatile
 47016  019CB0  B4D8               	btfsc	status,2,c
 47017  019CB2  D11F               	goto	l2203
 47018                           
 47019                           ; BSR set to: 2
 47020                           ;mbmc.c: 184:   if (C.soc > 3) {
 47021  019CB4  EE22  F1B5         	lfsr	2,_C+182	;volatile
 47022  019CB8  0E01               	movlw	1
 47023  019CBA  50DB               	movf	plusw2,w,c
 47024  019CBC  E104               	bnz	u1211_20
 47025  019CBE  0E04               	movlw	4
 47026  019CC0  5CDE               	subwf	postinc2,w,c
 47027  019CC2  A0D8               	btfss	status,0,c
 47028  019CC4  D0ED               	goto	l12706
 47029  019CC6                     u1211_20:
 47030                           
 47031                           ; BSR set to: 2
 47032                           ;mbmc.c: 185:    if (!C.day) {
 47033  019CC6  EE22  F22D         	lfsr	2,_C+302	;volatile
 47034  019CCA  50DF               	movf	indf2,w,c
 47035  019CCC  A4D8               	btfss	status,2,c
 47036  019CCE  D065               	goto	l12692
 47037                           
 47038                           ; BSR set to: 2
 47039                           ;mbmc.c: 186:     if (light > 22.0) {
 47040                           ;stkvar	_light @ sp[(-4)+0]
 47041  019CD0  0EFC               	movlw	-4
 47042  019CD2  006F FF8F FFE6     	movff	plusw1,postinc1
 47043  019CD8  006F FF8F FFE6     	movff	plusw1,postinc1
 47044  019CDE  006F FF8F FFE6     	movff	plusw1,postinc1
 47045  019CE4  006F FF8F FFE6     	movff	plusw1,postinc1
 47046  019CEA  0E00               	movlw	0
 47047  019CEC  6EE6               	movwf	postinc1,c
 47048  019CEE  0E00               	movlw	0
 47049  019CF0  6EE6               	movwf	postinc1,c
 47050  019CF2  0EB0               	movlw	176
 47051  019CF4  6EE6               	movwf	postinc1,c
 47052  019CF6  0E41               	movlw	65
 47053  019CF8  6EE6               	movwf	postinc1,c
 47054  019CFA  EC09  F0F3         	call	___flge	;wreg free
 47055  019CFE  B02A               	btfsc	btemp& (0+255),0,c
 47056  019D00  D0F8               	goto	l2203
 47057                           
 47058                           ;mbmc.c: 187:      C.day = 1;
 47059  019D02  0E01               	movlw	1
 47060  019D04  006F FFA0  FA2D    	movff	wreg,_C+302	;volatile
 47061                           
 47062                           ;mbmc.c: 188:      C.day_start = time(((void*)0));
 47063  019D0A  0E00               	movlw	0
 47064  019D0C  6EE6               	movwf	postinc1,c
 47065  019D0E  0E00               	movlw	0
 47066  019D10  6EE6               	movwf	postinc1,c
 47067  019D12  ECFD  F00A         	call	_time	;wreg free
 47068  019D16  52E5               	movf	postdec1,f,c
 47069  019D18  006F FF9C  F041    	movff	indf1,btemp+23
 47070  019D1E  52E5               	movf	postdec1,f,c
 47071  019D20  006F FF9C  F040    	movff	indf1,btemp+22
 47072  019D26  52E5               	movf	postdec1,f,c
 47073  019D28  006F FF9C  F03F    	movff	indf1,btemp+21
 47074  019D2E  52E5               	movf	postdec1,f,c
 47075  019D30  006F FF9C  F03E    	movff	indf1,btemp+20
 47076  019D36  52E5               	movf	postdec1,f,c
 47077  019D38  006F FF9C  F03D    	movff	indf1,btemp+19
 47078  019D3E  52E5               	movf	postdec1,f,c
 47079  019D40  006F FF9C  F03C    	movff	indf1,btemp+18
 47080  019D46  52E5               	movf	postdec1,f,c
 47081  019D48  006F FF9C  F03B    	movff	indf1,btemp+17
 47082  019D4E  52E5               	movf	postdec1,f,c
 47083  019D50  006F FF9C  F03A    	movff	indf1,btemp+16
 47084  019D56  0060  F0E8  F032   	movff	btemp+16,btemp+8
 47085  019D5C  0060  F0EC  F033   	movff	btemp+17,btemp+9
 47086  019D62  0060  F0F0  F034   	movff	btemp+18,btemp+10
 47087  019D68  0060  F0F4  F035   	movff	btemp+19,btemp+11
 47088  019D6E  0060  F0C8  FA2F   	movff	btemp+8,_C+304	;volatile
 47089  019D74  0060  F0CC  FA30   	movff	btemp+9,_C+305	;volatile
 47090  019D7A  0060  F0D0  FA31   	movff	btemp+10,_C+306	;volatile
 47091  019D80  0060  F0D4  FA32   	movff	btemp+11,_C+307	;volatile
 47092                           
 47093                           ; BSR set to: 57
 47094                           ;mbmc.c: 189:      if (get_ac_charger_relay()) {
 47095  019D86  EC45  F013         	call	_get_ac_charger_relay	;wreg free
 47096  019D8A  502A               	movf	btemp^0,w,c
 47097  019D8C  B4D8               	btfsc	status,2,c
 47098  019D8E  D0B5               	goto	l2199
 47099                           
 47100                           ;mbmc.c: 190:       set_ac_charger_relay(0);
 47101  019D90  0E00               	movlw	0
 47102  019D92  6EE6               	movwf	postinc1,c
 47103  019D94  EC2F  F013         	call	_set_ac_charger_relay	;wreg free
 47104  019D98  D0B0               	goto	l2199
 47105  019D9A                     l12692:
 47106                           
 47107                           ; BSR set to: 2
 47108                           ;mbmc.c: 195:     if (light < 12.0) {
 47109  019D9A  0E00               	movlw	0
 47110  019D9C  6EE6               	movwf	postinc1,c
 47111  019D9E  0E00               	movlw	0
 47112  019DA0  6EE6               	movwf	postinc1,c
 47113  019DA2  0E40               	movlw	64
 47114  019DA4  6EE6               	movwf	postinc1,c
 47115  019DA6  0E41               	movlw	65
 47116  019DA8  6EE6               	movwf	postinc1,c
 47117                           
 47118                           ;stkvar	_light @ sp[(-8)+0]
 47119  019DAA  0EF8               	movlw	-8
 47120  019DAC  006F FF8F FFE6     	movff	plusw1,postinc1
 47121  019DB2  006F FF8F FFE6     	movff	plusw1,postinc1
 47122  019DB8  006F FF8F FFE6     	movff	plusw1,postinc1
 47123  019DBE  006F FF8F FFE6     	movff	plusw1,postinc1
 47124  019DC4  EC09  F0F3         	call	___flge	;wreg free
 47125  019DC8  B02A               	btfsc	btemp& (0+255),0,c
 47126  019DCA  D093               	goto	l2203
 47127                           
 47128                           ;mbmc.c: 196:      C.day = 0;
 47129  019DCC  0E00               	movlw	0
 47130  019DCE  006F FFA0  FA2D    	movff	wreg,_C+302	;volatile
 47131                           
 47132                           ;mbmc.c: 197:      C.day_end = time(((void*)0));
 47133  019DD4  0E00               	movlw	0
 47134  019DD6  6EE6               	movwf	postinc1,c
 47135  019DD8  0E00               	movlw	0
 47136  019DDA  6EE6               	movwf	postinc1,c
 47137  019DDC  ECFD  F00A         	call	_time	;wreg free
 47138  019DE0  52E5               	movf	postdec1,f,c
 47139  019DE2  006F FF9C  F041    	movff	indf1,btemp+23
 47140  019DE8  52E5               	movf	postdec1,f,c
 47141  019DEA  006F FF9C  F040    	movff	indf1,btemp+22
 47142  019DF0  52E5               	movf	postdec1,f,c
 47143  019DF2  006F FF9C  F03F    	movff	indf1,btemp+21
 47144  019DF8  52E5               	movf	postdec1,f,c
 47145  019DFA  006F FF9C  F03E    	movff	indf1,btemp+20
 47146  019E00  52E5               	movf	postdec1,f,c
 47147  019E02  006F FF9C  F03D    	movff	indf1,btemp+19
 47148  019E08  52E5               	movf	postdec1,f,c
 47149  019E0A  006F FF9C  F03C    	movff	indf1,btemp+18
 47150  019E10  52E5               	movf	postdec1,f,c
 47151  019E12  006F FF9C  F03B    	movff	indf1,btemp+17
 47152  019E18  52E5               	movf	postdec1,f,c
 47153  019E1A  006F FF9C  F03A    	movff	indf1,btemp+16
 47154  019E20  0060  F0E8  F032   	movff	btemp+16,btemp+8
 47155  019E26  0060  F0EC  F033   	movff	btemp+17,btemp+9
 47156  019E2C  0060  F0F0  F034   	movff	btemp+18,btemp+10
 47157  019E32  0060  F0F4  F035   	movff	btemp+19,btemp+11
 47158  019E38  0060  F0C8  FA33   	movff	btemp+8,_C+308	;volatile
 47159  019E3E  0060  F0CC  FA34   	movff	btemp+9,_C+309	;volatile
 47160  019E44  0060  F0D0  FA35   	movff	btemp+10,_C+310	;volatile
 47161  019E4A  0060  F0D4  FA36   	movff	btemp+11,_C+311	;volatile
 47162                           
 47163                           ; BSR set to: 57
 47164                           ;mbmc.c: 198:      C.day_update = C.day_end + 14400;
 47165  019E50  EE22  F233         	lfsr	2,_C+308	;volatile
 47166  019E54  0E40               	movlw	64
 47167  019E56  24DE               	addwf	postinc2,w,c
 47168  019E58  6E32               	movwf	(btemp+8)^0,c
 47169  019E5A  0E38               	movlw	56
 47170  019E5C  20DE               	addwfc	postinc2,w,c
 47171  019E5E  6E33               	movwf	(btemp+9)^0,c
 47172  019E60  0E00               	movlw	0
 47173  019E62  20DE               	addwfc	postinc2,w,c
 47174  019E64  6E34               	movwf	(btemp+10)^0,c
 47175  019E66  0E00               	movlw	0
 47176  019E68  20DE               	addwfc	postinc2,w,c
 47177  019E6A  6E35               	movwf	(btemp+11)^0,c
 47178  019E6C  0060  F0C8  FA37   	movff	btemp+8,_C+312	;volatile
 47179  019E72  0060  F0CC  FA38   	movff	btemp+9,_C+313	;volatile
 47180  019E78  0060  F0D0  FA39   	movff	btemp+10,_C+314	;volatile
 47181  019E7E  0060  F0D4  FA3A   	movff	btemp+11,_C+315	;volatile
 47182                           
 47183                           ; BSR set to: 57
 47184                           ;mbmc.c: 202:      if ((C.soc < 20)) {
 47185  019E84  EE22  F1B5         	lfsr	2,_C+182	;volatile
 47186  019E88  0E01               	movlw	1
 47187  019E8A  50DB               	movf	plusw2,w,c
 47188  019E8C  E136               	bnz	l2199
 47189  019E8E  0E14               	movlw	20
 47190  019E90  5CDE               	subwf	postinc2,w,c
 47191  019E92  B0D8               	btfsc	status,0,c
 47192  019E94  D032               	goto	l2199
 47193                           
 47194                           ; BSR set to: 57
 47195                           ;mbmc.c: 203:       set_ac_charger_relay(1);
 47196  019E96  0E01               	movlw	1
 47197  019E98  6EE6               	movwf	postinc1,c
 47198  019E9A  EC2F  F013         	call	_set_ac_charger_relay	;wreg free
 47199  019E9E  D02D               	goto	l2199
 47200  019EA0                     l12706:
 47201                           
 47202                           ; BSR set to: 2
 47203                           ;mbmc.c: 209:    if (C.p_pv < C.p_inverter) {
 47204  019EA0  EE22  F177         	lfsr	2,_C+120	;volatile
 47205  019EA4  006F FF7B FFE6     	movff	postinc2,postinc1
 47206  019EAA  006F FF7B FFE6     	movff	postinc2,postinc1
 47207  019EB0  006F FF7B FFE6     	movff	postinc2,postinc1
 47208  019EB6  006F FF7B FFE6     	movff	postinc2,postinc1
 47209  019EBC  EE22  F17B         	lfsr	2,_C+124	;volatile
 47210  019EC0  006F FF7B FFE6     	movff	postinc2,postinc1
 47211  019EC6  006F FF7B FFE6     	movff	postinc2,postinc1
 47212  019ECC  006F FF7B FFE6     	movff	postinc2,postinc1
 47213  019ED2  006F FF7B FFE6     	movff	postinc2,postinc1
 47214  019ED8  EC09  F0F3         	call	___flge	;wreg free
 47215  019EDC  B02A               	btfsc	btemp& (0+255),0,c
 47216  019EDE  D009               	goto	l2203
 47217                           
 47218                           ;mbmc.c: 210:     if (!get_ac_charger_relay()) {
 47219  019EE0  EC45  F013         	call	_get_ac_charger_relay	;wreg free
 47220  019EE4  502A               	movf	btemp^0,w,c
 47221  019EE6  A4D8               	btfss	status,2,c
 47222  019EE8  D004               	goto	l2203
 47223                           
 47224                           ;mbmc.c: 211:      set_ac_charger_relay(1);
 47225  019EEA  0E01               	movlw	1
 47226  019EEC  6EE6               	movwf	postinc1,c
 47227  019EEE  EC2F  F013         	call	_set_ac_charger_relay	;wreg free
 47228  019EF2                     l2203:
 47229                           
 47230                           ;mbmc.c: 216:  if (day_delay >= 240)
 47231  019EF2  0EEF               	movlw	239
 47232  019EF4  6451               	cpfsgt	check_day_time@day_delay^0,c
 47233  019EF6  D001               	goto	l2199
 47234                           
 47235                           ;mbmc.c: 217:   day_delay = 0;
 47236  019EF8  6A51               	clrf	check_day_time@day_delay^0,c
 47237  019EFA                     l2199:
 47238                           
 47239                           ; _check_day_time: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 47240  019EFA  52E5               	movf	postdec1,f,c
 47241  019EFC  52E5               	movf	postdec1,f,c
 47242  019EFE  52E5               	movf	postdec1,f,c
 47243  019F00  52E5               	movf	postdec1,f,c
 47244  019F02  0012               	return		;funcret
 47245  019F04                     __end_of_check_day_time:
 47246                           	opt callstack 0
 47247                           
 47248 ;; *************** function _set_ac_charger_relay *****************
 47249 ;; Defined at:
 47250 ;;		line 136 in file "mbmc.c"
 47251 ;; Parameters:    Size  Location     Type
 47252 ;;  mode            1  [STACK] const _Bool 
 47253 ;; Auto vars:     Size  Location     Type
 47254 ;;		None
 47255 ;; Return value:  Size  Location     Type
 47256 ;;                  1  [STACK] void 
 47257 ;; Registers used:
 47258 ;;		wreg, fsr1l, fsr1h
 47259 ;; Tracked objects:
 47260 ;;		On entry : 0/39
 47261 ;;		On exit  : 0/0
 47262 ;;		Unchanged: 0/0
 47263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 47264 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47265 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47266 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47267 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47268 ;;Total ram usage:        0 bytes
 47269 ;; Hardware stack levels used:    1
 47270 ;; Hardware stack levels required when called:    3
 47271 ;; This function calls:
 47272 ;;		Nothing
 47273 ;; This function is called by:
 47274 ;;		_check_day_time
 47275 ;; This function uses a reentrant model
 47276 ;;
 47277                           
 47278                           	psect	text194
 47279  00265E                     __ptext194:
 47280                           	opt callstack 0
 47281  00265E                     _set_ac_charger_relay:
 47282                           	opt callstack 10
 47283                           
 47284                           ;mbmc.c: 136: void set_ac_charger_relay(const _Bool mode);mbmc.c: 137: {;mbmc.c: 138:  L
      +                          ATDbits.LATD6 = mode;
 47285                           ;stkvar	_mode @ sp[(0)+-1]
 47286                           
 47287                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 47288                           ;incstack = 0
 47289  00265E  0EFF               	movlw	-1
 47290  002660  B0E3               	btfsc	plusw1,0,c
 47291  002662  D002               	bra	u1171_25
 47292  002664  9CBD               	bcf	189,6,c	;volatile
 47293  002666  D001               	bra	u1171_26
 47294  002668                     u1171_25:
 47295  002668  8CBD               	bsf	189,6,c	;volatile
 47296  00266A                     u1171_26:
 47297                           
 47298                           ; _set_ac_charger_relay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
 47299  00266A  52E5               	movf	postdec1,f,c
 47300  00266C  0012               	return		;funcret
 47301  00266E                     __end_of_set_ac_charger_relay:
 47302                           	opt callstack 0
 47303                           
 47304 ;; *************** function _get_ac_charger_relay *****************
 47305 ;; Defined at:
 47306 ;;		line 141 in file "mbmc.c"
 47307 ;; Parameters:    Size  Location     Type
 47308 ;;		None
 47309 ;; Auto vars:     Size  Location     Type
 47310 ;;		None
 47311 ;; Return value:  Size  Location     Type
 47312 ;;                  1  [STACK] _Bool 
 47313 ;; Registers used:
 47314 ;;		btemp
 47315 ;; Tracked objects:
 47316 ;;		On entry : 0/39
 47317 ;;		On exit  : 0/0
 47318 ;;		Unchanged: 0/0
 47319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 47320 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47321 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47323 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47324 ;;Total ram usage:        0 bytes
 47325 ;; Hardware stack levels used:    1
 47326 ;; Hardware stack levels required when called:    3
 47327 ;; This function calls:
 47328 ;;		Nothing
 47329 ;; This function is called by:
 47330 ;;		_check_day_time
 47331 ;;		_calc_bsoc
 47332 ;; This function uses a reentrant model
 47333 ;;
 47334                           
 47335                           	psect	text195
 47336  00268A                     __ptext195:
 47337                           	opt callstack 0
 47338  00268A                     _get_ac_charger_relay:
 47339                           	opt callstack 11
 47340                           
 47341                           ;mbmc.c: 143:  return LATDbits.LATD6;
 47342                           
 47343                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 47344                           ;incstack = 0
 47345  00268A  ACBD               	btfss	189,6,c	;volatile
 47346  00268C  D003               	goto	u1234_20
 47347  00268E  6A2A               	clrf	btemp^0,c
 47348  002690  2A2A               	incf	btemp^0,f,c
 47349  002692  0012               	return	
 47350  002694                     u1234_20:
 47351  002694  6A2A               	clrf	btemp^0,c
 47352                           
 47353                           ; _get_ac_charger_relay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 47354  002696  0012               	return		;funcret
 47355  002698                     __end_of_get_ac_charger_relay:
 47356                           	opt callstack 0
 47357                           
 47358 ;; *************** function _TMR3_ISR *****************
 47359 ;; Defined at:
 47360 ;;		line 165 in file "mcc_generated_files/tmr3.c"
 47361 ;; Parameters:    Size  Location     Type
 47362 ;;		None
 47363 ;; Auto vars:     Size  Location     Type
 47364 ;;		None
 47365 ;; Return value:  Size  Location     Type
 47366 ;;                  1    wreg      void 
 47367 ;; Registers used:
 47368 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, tosl, tblptrl, tblptrh, tblptru, prodl, prodh
 47369 ;; Tracked objects:
 47370 ;;		On entry : 0/0
 47371 ;;		On exit  : 3F/0
 47372 ;;		Unchanged: 0/0
 47373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 47374 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47375 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47376 ;;      Temps:          0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47377 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47378 ;;Total ram usage:       25 bytes
 47379 ;; Hardware stack levels used:    1
 47380 ;; Hardware stack levels required when called:   14
 47381 ;; This function calls:
 47382 ;;		_TMR3_CallBack
 47383 ;;		_TMR3_WriteTimer
 47384 ;; This function is called by:
 47385 ;;		Interrupt level 1
 47386 ;; This function uses a non-reentrant model
 47387 ;;
 47388                           
 47389                           	psect	text196
 47390  01E774                     __ptext196:
 47391                           	opt callstack 0
 47392  01E774                     _TMR3_ISR:
 47393                           	opt callstack 3
 47394                           
 47395                           ;incstack = 0
 47396  01E774  006F FF60  F0E5    	movff	status,??_TMR3_ISR
 47397  01E77A  006F FFD8  F0E6    	movff	tblptrl,??_TMR3_ISR+1
 47398  01E780  006F FFDC  F0E7    	movff	tblptrh,??_TMR3_ISR+2
 47399  01E786  006F FFE0  F0E8    	movff	tblptru,??_TMR3_ISR+3
 47400  01E78C  006F FFD4  F0E9    	movff	tablat,??_TMR3_ISR+4
 47401  01E792  0060  F0A8  F0EA   	movff	btemp,??_TMR3_ISR+5
 47402  01E798  0060  F0AC  F0EB   	movff	btemp+1,??_TMR3_ISR+6
 47403  01E79E  0060  F0B0  F0EC   	movff	btemp+2,??_TMR3_ISR+7
 47404  01E7A4  0060  F0B4  F0ED   	movff	btemp+3,??_TMR3_ISR+8
 47405  01E7AA  0060  F0B8  F0EE   	movff	btemp+4,??_TMR3_ISR+9
 47406  01E7B0  0060  F0BC  F0EF   	movff	btemp+5,??_TMR3_ISR+10
 47407  01E7B6  0060  F0C0  F0F0   	movff	btemp+6,??_TMR3_ISR+11
 47408  01E7BC  0060  F0C4  F0F1   	movff	btemp+7,??_TMR3_ISR+12
 47409  01E7C2  0060  F0C8  F0F2   	movff	btemp+8,??_TMR3_ISR+13
 47410  01E7C8  0060  F0CC  F0F3   	movff	btemp+9,??_TMR3_ISR+14
 47411  01E7CE  0060  F0D0  F0F4   	movff	btemp+10,??_TMR3_ISR+15
 47412  01E7D4  0060  F0D4  F0F5   	movff	btemp+11,??_TMR3_ISR+16
 47413  01E7DA  0060  F0E8  F0F6   	movff	btemp+16,??_TMR3_ISR+17
 47414  01E7E0  0060  F0EC  F0F7   	movff	btemp+17,??_TMR3_ISR+18
 47415  01E7E6  0060  F0F0  F0F8   	movff	btemp+18,??_TMR3_ISR+19
 47416  01E7EC  0060  F0F4  F0F9   	movff	btemp+19,??_TMR3_ISR+20
 47417  01E7F2  0060  F0F8  F0FA   	movff	btemp+20,??_TMR3_ISR+21
 47418  01E7F8  0060  F0FC  F0FB   	movff	btemp+21,??_TMR3_ISR+22
 47419  01E7FE  0060  F100  F0FC   	movff	btemp+22,??_TMR3_ISR+23
 47420  01E804  0060  F104  F0FD   	movff	btemp+23,??_TMR3_ISR+24
 47421  01E80A  EE16  F196         	lfsr	1,___intlo_sp
 47422                           
 47423                           ;mcc_generated_files/tmr3.c: 167:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr3.c: 170:     PIR6bits.TMR3IF = 0;
 47424  01E80E  0139               	movlb	57	; () banked
 47425  01E810  9DA6               	bcf	166,6,b	;volatile
 47426                           
 47427                           ; BSR set to: 57
 47428                           ;mcc_generated_files/tmr3.c: 171:     TMR3_WriteTimer(timer3ReloadVal);
 47429  01E812  0060  F303  FFE6   	movff	_timer3ReloadVal,postinc1
 47430  01E818  0060  F307  FFE6   	movff	_timer3ReloadVal+1,postinc1
 47431  01E81E  EC3A  F00E         	call	_TMR3_WriteTimer	;wreg free
 47432                           
 47433                           ;mcc_generated_files/tmr3.c: 174:     if (++CountCallBack >= 40)
 47434  01E822  0100               	movlb	0	; () banked
 47435  01E824  4BBE               	infsnz	TMR3_ISR@CountCallBack& (0+255),f,b	;volatile
 47436  01E826  2BBF               	incf	(TMR3_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 47437  01E828  51BF               	movf	(TMR3_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 47438  01E82A  E104               	bnz	i1u1694_20
 47439  01E82C  0E28               	movlw	40
 47440  01E82E  5DBE               	subwf	TMR3_ISR@CountCallBack& (0+255),w,b	;volatile
 47441  01E830  A0D8               	btfss	status,0,c
 47442  01E832  D005               	goto	i1l1209
 47443  01E834                     i1u1694_20:
 47444                           
 47445                           ; BSR set to: 0
 47446                           ;mcc_generated_files/tmr3.c: 175:     {;mcc_generated_files/tmr3.c: 177:         TMR3_Ca
      +                          llBack();
 47447  01E834  ECBE  F011         	call	_TMR3_CallBack	;wreg free
 47448                           
 47449                           ;mcc_generated_files/tmr3.c: 180:         CountCallBack = 0;
 47450  01E838  0100               	movlb	0	; () banked
 47451  01E83A  6BBE               	clrf	TMR3_ISR@CountCallBack& (0+255),b	;volatile
 47452  01E83C  6BBF               	clrf	(TMR3_ISR@CountCallBack+1)& (0+255),b	;volatile
 47453  01E83E                     i1l1209:
 47454                           
 47455                           ; BSR set to: 0
 47456  01E83E  0060  F3F4  F041   	movff	??_TMR3_ISR+24,btemp+23
 47457  01E844  0060  F3F0  F040   	movff	??_TMR3_ISR+23,btemp+22
 47458  01E84A  0060  F3EC  F03F   	movff	??_TMR3_ISR+22,btemp+21
 47459  01E850  0060  F3E8  F03E   	movff	??_TMR3_ISR+21,btemp+20
 47460  01E856  0060  F3E4  F03D   	movff	??_TMR3_ISR+20,btemp+19
 47461  01E85C  0060  F3E0  F03C   	movff	??_TMR3_ISR+19,btemp+18
 47462  01E862  0060  F3DC  F03B   	movff	??_TMR3_ISR+18,btemp+17
 47463  01E868  0060  F3D8  F03A   	movff	??_TMR3_ISR+17,btemp+16
 47464  01E86E  0060  F3D4  F035   	movff	??_TMR3_ISR+16,btemp+11
 47465  01E874  0060  F3D0  F034   	movff	??_TMR3_ISR+15,btemp+10
 47466  01E87A  0060  F3CC  F033   	movff	??_TMR3_ISR+14,btemp+9
 47467  01E880  0060  F3C8  F032   	movff	??_TMR3_ISR+13,btemp+8
 47468  01E886  0060  F3C4  F031   	movff	??_TMR3_ISR+12,btemp+7
 47469  01E88C  0060  F3C0  F030   	movff	??_TMR3_ISR+11,btemp+6
 47470  01E892  0060  F3BC  F02F   	movff	??_TMR3_ISR+10,btemp+5
 47471  01E898  0060  F3B8  F02E   	movff	??_TMR3_ISR+9,btemp+4
 47472  01E89E  0060  F3B4  F02D   	movff	??_TMR3_ISR+8,btemp+3
 47473  01E8A4  0060  F3B0  F02C   	movff	??_TMR3_ISR+7,btemp+2
 47474  01E8AA  0060  F3AC  F02B   	movff	??_TMR3_ISR+6,btemp+1
 47475  01E8B0  0060  F3A8  F02A   	movff	??_TMR3_ISR+5,btemp
 47476  01E8B6  0060  F3A7  FFF5   	movff	??_TMR3_ISR+4,tablat
 47477  01E8BC  0060  F3A3  FFF8   	movff	??_TMR3_ISR+3,tblptru
 47478  01E8C2  0060  F39F  FFF7   	movff	??_TMR3_ISR+2,tblptrh
 47479  01E8C8  0060  F39B  FFF6   	movff	??_TMR3_ISR+1,tblptrl
 47480  01E8CE  0060  F397  FFD8   	movff	??_TMR3_ISR,status
 47481  01E8D4  0011               	retfie		f
 47482  01E8D6                     __end_of_TMR3_ISR:
 47483                           	opt callstack 0
 47484                           
 47485 ;; *************** function _TMR3_WriteTimer *****************
 47486 ;; Defined at:
 47487 ;;		line 128 in file "mcc_generated_files/tmr3.c"
 47488 ;; Parameters:    Size  Location     Type
 47489 ;;  timerVal        2  [STACK] unsigned short 
 47490 ;; Auto vars:     Size  Location     Type
 47491 ;;		None
 47492 ;; Return value:  Size  Location     Type
 47493 ;;                  1  [STACK] void 
 47494 ;; Registers used:
 47495 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 47496 ;; Tracked objects:
 47497 ;;		On entry : 3F/39
 47498 ;;		On exit  : 0/0
 47499 ;;		Unchanged: 0/0
 47500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 47501 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47502 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47504 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47505 ;;Total ram usage:        0 bytes
 47506 ;; Hardware stack levels used:    1
 47507 ;; Hardware stack levels required when called:    3
 47508 ;; This function calls:
 47509 ;;		Nothing
 47510 ;; This function is called by:
 47511 ;;		_TMR3_ISR
 47512 ;; This function uses a reentrant model
 47513 ;;
 47514                           
 47515                           	psect	text197
 47516  001C74                     __ptext197:
 47517                           	opt callstack 0
 47518  001C74                     _TMR3_WriteTimer:
 47519                           	opt callstack 13
 47520                           
 47521                           ;mcc_generated_files/tmr3.c: 128: void TMR3_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr3.c: 129: {;mcc_generated_files/tmr3.c: 130:     if (T3CONbits.NOT_SYNC == 1)
 47522                           
 47523                           ; BSR set to: 0
 47524                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 47525                           ;incstack = 0
 47526  001C74  A4A6               	btfss	166,2,c	;volatile
 47527  001C76  D00F               	goto	l13938
 47528                           
 47529                           ;mcc_generated_files/tmr3.c: 131:     {;mcc_generated_files/tmr3.c: 133:         T3CONbi
      +                          ts.TMR3ON = 0;
 47530  001C78  90A6               	bcf	166,0,c	;volatile
 47531                           
 47532                           ;mcc_generated_files/tmr3.c: 136:         TMR3H = (timerVal >> 8);
 47533                           ;stkvar	_timerVal @ sp[(0)+-2]
 47534  001C7A  0EFF               	movlw	255
 47535  001C7C  24E1               	addwf	fsr1l,w,c
 47536  001C7E  6ED9               	movwf	fsr2l,c
 47537  001C80  0EFF               	movlw	255
 47538  001C82  20E2               	addwfc	fsr1h,w,c
 47539  001C84  6EDA               	movwf	fsr2h,c
 47540  001C86  50DF               	movf	indf2,w,c
 47541  001C88  6EA5               	movwf	165,c	;volatile
 47542                           
 47543                           ;mcc_generated_files/tmr3.c: 137:         TMR3L = timerVal;
 47544                           ;stkvar	_timerVal @ sp[(0)+-2]
 47545  001C8A  0EFE               	movlw	-2
 47546  001C8C  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 47547                           
 47548                           ;mcc_generated_files/tmr3.c: 140:         T3CONbits.TMR3ON =1;
 47549  001C92  80A6               	bsf	166,0,c	;volatile
 47550                           
 47551                           ;mcc_generated_files/tmr3.c: 141:     }
 47552  001C94  D00C               	goto	l1192
 47553  001C96                     l13938:
 47554                           
 47555                           ;mcc_generated_files/tmr3.c: 143:     {;mcc_generated_files/tmr3.c: 145:         TMR3H =
      +                           (timerVal >> 8);
 47556                           ;stkvar	_timerVal @ sp[(0)+-2]
 47557  001C96  0EFF               	movlw	255
 47558  001C98  24E1               	addwf	fsr1l,w,c
 47559  001C9A  6ED9               	movwf	fsr2l,c
 47560  001C9C  0EFF               	movlw	255
 47561  001C9E  20E2               	addwfc	fsr1h,w,c
 47562  001CA0  6EDA               	movwf	fsr2h,c
 47563  001CA2  50DF               	movf	indf2,w,c
 47564  001CA4  6EA5               	movwf	165,c	;volatile
 47565                           
 47566                           ;mcc_generated_files/tmr3.c: 146:         TMR3L = timerVal;
 47567                           ;stkvar	_timerVal @ sp[(0)+-2]
 47568  001CA6  0EFE               	movlw	-2
 47569  001CA8  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 47570  001CAE                     l1192:
 47571                           
 47572                           ; _TMR3_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 47573  001CAE  52E5               	movf	postdec1,f,c
 47574  001CB0  52E5               	movf	postdec1,f,c
 47575  001CB2  0012               	return		;funcret
 47576  001CB4                     __end_of_TMR3_WriteTimer:
 47577                           	opt callstack 0
 47578                           
 47579 ;; *************** function _TMR3_CallBack *****************
 47580 ;; Defined at:
 47581 ;;		line 184 in file "mcc_generated_files/tmr3.c"
 47582 ;; Parameters:    Size  Location     Type
 47583 ;;		None
 47584 ;; Auto vars:     Size  Location     Type
 47585 ;;		None
 47586 ;; Return value:  Size  Location     Type
 47587 ;;                  1  [STACK] void 
 47588 ;; Registers used:
 47589 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, tosl, tblptrl, tblptrh, tblptru, prodl, prodh
 47590 ;; Tracked objects:
 47591 ;;		On entry : 3F/0
 47592 ;;		On exit  : 0/0
 47593 ;;		Unchanged: 0/0
 47594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 47595 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47596 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47597 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47598 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47599 ;;Total ram usage:        0 bytes
 47600 ;; Hardware stack levels used:    1
 47601 ;; Hardware stack levels required when called:   13
 47602 ;; This function calls:
 47603 ;;		Absolute function
 47604 ;;		_TMR3_DefaultInterruptHandler
 47605 ;;		_calc_bsoc
 47606 ;; This function is called by:
 47607 ;;		_TMR3_ISR
 47608 ;; This function uses a reentrant model
 47609 ;;
 47610                           
 47611                           	psect	text198
 47612  00237C                     __ptext198:
 47613                           	opt callstack 0
 47614  00237C                     _TMR3_CallBack:
 47615                           	opt callstack 3
 47616                           
 47617                           ;mcc_generated_files/tmr3.c: 187:     if(TMR3_InterruptHandler)
 47618                           
 47619                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 47620                           ;incstack = 0
 47621  00237C  0100               	movlb	0	; () banked
 47622  00237E  5198               	movf	_TMR3_InterruptHandler& (0+255),w,b
 47623  002380  1199               	iorwf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 47624  002382  119A               	iorwf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 47625  002384  B4D8               	btfsc	status,2,c
 47626  002386  0012               	return	
 47627                           
 47628                           ; BSR set to: 0
 47629                           ;mcc_generated_files/tmr3.c: 188:     {;mcc_generated_files/tmr3.c: 189:         TMR3_In
      +                          terruptHandler();
 47630  002388  D801               	call	u1672_28
 47631  00238A  0012               	return	
 47632  00238C                     u1672_28:
 47633  00238C  0005               	push	
 47634  00238E  6EFA               	movwf	pclath,c
 47635  002390  5198               	movf	_TMR3_InterruptHandler& (0+255),w,b
 47636  002392  6EFD               	movwf	tosl,c
 47637  002394  5199               	movf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 47638  002396  6EFE               	movwf	tosh,c
 47639  002398  519A               	movf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 47640  00239A  6EFF               	movwf	tosu,c
 47641  00239C  50FA               	movf	pclath,w,c
 47642  00239E  0012               	return		;indir
 47643  0023A0                     __end_of_TMR3_CallBack:
 47644                           	opt callstack 0
 47645                           
 47646 ;; *************** function _TMR3_DefaultInterruptHandler *****************
 47647 ;; Defined at:
 47648 ;;		line 197 in file "mcc_generated_files/tmr3.c"
 47649 ;; Parameters:    Size  Location     Type
 47650 ;;		None
 47651 ;; Auto vars:     Size  Location     Type
 47652 ;;		None
 47653 ;; Return value:  Size  Location     Type
 47654 ;;                  1  [STACK] void 
 47655 ;; Registers used:
 47656 ;;		None
 47657 ;; Tracked objects:
 47658 ;;		On entry : 3F/0
 47659 ;;		On exit  : 0/0
 47660 ;;		Unchanged: 0/0
 47661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 47662 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47663 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47664 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47665 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47666 ;;Total ram usage:        0 bytes
 47667 ;; Hardware stack levels used:    1
 47668 ;; Hardware stack levels required when called:    3
 47669 ;; This function calls:
 47670 ;;		Nothing
 47671 ;; This function is called by:
 47672 ;;		_TMR3_Initialize
 47673 ;;		_TMR3_CallBack
 47674 ;; This function uses a reentrant model
 47675 ;;
 47676                           
 47677                           	psect	text199
 47678  002744                     __ptext199:
 47679                           	opt callstack 0
 47680  002744                     _TMR3_DefaultInterruptHandler:
 47681                           	opt callstack 12
 47682                           
 47683                           ; _TMR3_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 47684                           
 47685                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 47686                           ;incstack = 0
 47687  002744  0012               	return		;funcret
 47688  002746                     __end_of_TMR3_DefaultInterruptHandler:
 47689                           	opt callstack 0
 47690                           
 47691 ;; *************** function _calc_bsoc *****************
 47692 ;; Defined at:
 47693 ;;		line 39 in file "bsoc.c"
 47694 ;; Parameters:    Size  Location     Type
 47695 ;;		None
 47696 ;; Auto vars:     Size  Location     Type
 47697 ;;  adj             4  [STACK] float 
 47698 ;;  log_ptr         2  [STACK] PTR unsigned char 
 47699 ;;		 -> port_data(512), 
 47700 ;; Return value:  Size  Location     Type
 47701 ;;                  1  [STACK] void 
 47702 ;; Registers used:
 47703 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 47704 ;; Tracked objects:
 47705 ;;		On entry : 3F/0
 47706 ;;		On exit  : 6/2
 47707 ;;		Unchanged: 0/0
 47708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 47709 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47710 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47711 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47712 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47713 ;;Total ram usage:        0 bytes
 47714 ;; Hardware stack levels used:    1
 47715 ;; Hardware stack levels required when called:   12
 47716 ;; This function calls:
 47717 ;;		_StartTimer
 47718 ;;		___asfladd
 47719 ;;		___fldiv
 47720 ;;		___flge
 47721 ;;		___flmul
 47722 ;;		___flneg
 47723 ;;		___fltol
 47724 ;;		_fabsf
 47725 ;;		_get_ac_charger_relay
 47726 ;;		_port_data_dma_ptr
 47727 ;;		_send_port_data_dma
 47728 ;;		_sprintf
 47729 ;;		_strlen
 47730 ;; This function is called by:
 47731 ;;		_init_bsoc
 47732 ;;		_TMR3_CallBack
 47733 ;; This function uses a reentrant model
 47734 ;;
 47735                           
 47736                           	psect	text200
 47737  014818                     __ptext200:
 47738                           	opt callstack 0
 47739  014818                     _calc_bsoc:
 47740                           	opt callstack 0
 47741                           
 47742                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 47743  014818  0E06               	movlw	6
 47744  01481A  26E1               	addwf	fsr1l,f,c
 47745  01481C  0E00               	movlw	0
 47746  01481E  22E2               	addwfc	fsr1h,f,c
 47747                           
 47748                           ;bsoc.c: 41:  uint8_t * log_ptr;;bsoc.c: 42:  static uint8_t log_update_wait = 0;;bsoc.c
      +                          : 43:  float adj = 1.0;
 47749                           
 47750                           ;incstack = 0
 47751  014820  0E00               	movlw	0
 47752  014822  6E32               	movwf	(btemp+8)^0,c
 47753  014824  0E00               	movlw	0
 47754  014826  6E33               	movwf	(btemp+9)^0,c
 47755  014828  0E80               	movlw	128
 47756  01482A  6E34               	movwf	(btemp+10)^0,c
 47757  01482C  0E3F               	movlw	63
 47758  01482E  6E35               	movwf	(btemp+11)^0,c
 47759                           
 47760                           ;stkvar	_adj @ sp[(-6)+0]
 47761  014830  0EFA               	movlw	-6
 47762  014832  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 47763  014838  0EFB               	movlw	-5
 47764  01483A  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 47765  014840  0EFC               	movlw	-4
 47766  014842  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 47767  014848  0EFD               	movlw	-3
 47768  01484A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 47769  014850  82BE               	bsf	190,1,c	;volatile
 47770                           
 47771                           ;bsoc.c: 47:  C.dynamic_ah += (C.c_bat / 3600.0);
 47772  014852  0E00               	movlw	0
 47773  014854  6EE6               	movwf	postinc1,c
 47774  014856  0E00               	movlw	0
 47775  014858  6EE6               	movwf	postinc1,c
 47776  01485A  0E61               	movlw	97
 47777  01485C  6EE6               	movwf	postinc1,c
 47778  01485E  0E45               	movlw	69
 47779  014860  6EE6               	movwf	postinc1,c
 47780  014862  EE22  F143         	lfsr	2,_C+68	;volatile
 47781  014866  006F FF7B FFE6     	movff	postinc2,postinc1
 47782  01486C  006F FF7B FFE6     	movff	postinc2,postinc1
 47783  014872  006F FF7B FFE6     	movff	postinc2,postinc1
 47784  014878  006F FF7B FFE6     	movff	postinc2,postinc1
 47785  01487E  EC9E  F0BD         	call	___fldiv	;wreg free
 47786  014882  0060  F0AB  FFE6   	movff	btemp,postinc1
 47787  014888  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 47788  01488E  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 47789  014894  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 47790  01489A  0E8F               	movlw	low (_C+144)
 47791  01489C  6EE6               	movwf	postinc1,c
 47792  01489E  0E09               	movlw	high (_C+144)
 47793  0148A0  6EE6               	movwf	postinc1,c
 47794  0148A2  EC58  F008         	call	___asfladd	;wreg free
 47795                           
 47796                           ;bsoc.c: 48:  if (C.dynamic_ah > (C.bank_ah))
 47797  0148A6  EE22  F18F         	lfsr	2,_C+144	;volatile
 47798  0148AA  006F FF7B FFE6     	movff	postinc2,postinc1
 47799  0148B0  006F FF7B FFE6     	movff	postinc2,postinc1
 47800  0148B6  006F FF7B FFE6     	movff	postinc2,postinc1
 47801  0148BC  006F FF7B FFE6     	movff	postinc2,postinc1
 47802  0148C2  EE22  F18B         	lfsr	2,_C+140	;volatile
 47803  0148C6  006F FF7B FFE6     	movff	postinc2,postinc1
 47804  0148CC  006F FF7B FFE6     	movff	postinc2,postinc1
 47805  0148D2  006F FF7B FFE6     	movff	postinc2,postinc1
 47806  0148D8  006F FF7B FFE6     	movff	postinc2,postinc1
 47807  0148DE  EC09  F0F3         	call	___flge	;wreg free
 47808  0148E2  B02A               	btfsc	btemp& (0+255),0,c
 47809  0148E4  D00E               	goto	l16990
 47810                           
 47811                           ;bsoc.c: 49:   C.dynamic_ah = C.bank_ah;
 47812  0148E6  EE22  F18B         	lfsr	2,_C+140	;volatile
 47813  0148EA  006F FF78  F98F    	movff	postinc2,_C+144	;volatile
 47814  0148F0  006F FF78  F990    	movff	postinc2,_C+145	;volatile
 47815  0148F6  006F FF78  F991    	movff	postinc2,_C+146	;volatile
 47816  0148FC  006F FF74  F992    	movff	postdec2,_C+147	;volatile
 47817  014902                     l16990:
 47818                           
 47819                           ;bsoc.c: 50:  if (C.dynamic_ah < 0.1)
 47820  014902  0ECD               	movlw	205
 47821  014904  6EE6               	movwf	postinc1,c
 47822  014906  0ECC               	movlw	204
 47823  014908  6EE6               	movwf	postinc1,c
 47824  01490A  0ECC               	movlw	204
 47825  01490C  6EE6               	movwf	postinc1,c
 47826  01490E  0E3D               	movlw	61
 47827  014910  6EE6               	movwf	postinc1,c
 47828  014912  EE22  F18F         	lfsr	2,_C+144	;volatile
 47829  014916  006F FF7B FFE6     	movff	postinc2,postinc1
 47830  01491C  006F FF7B FFE6     	movff	postinc2,postinc1
 47831  014922  006F FF7B FFE6     	movff	postinc2,postinc1
 47832  014928  006F FF7B FFE6     	movff	postinc2,postinc1
 47833  01492E  EC09  F0F3         	call	___flge	;wreg free
 47834  014932  B02A               	btfsc	btemp& (0+255),0,c
 47835  014934  D010               	goto	l16994
 47836                           
 47837                           ;bsoc.c: 51:   C.dynamic_ah = 0.1;
 47838  014936  0ECD               	movlw	205
 47839  014938  006F FFA0  F98F    	movff	wreg,_C+144	;volatile
 47840  01493E  0ECC               	movlw	204
 47841  014940  006F FFA0  F990    	movff	wreg,_C+145	;volatile
 47842  014946  0ECC               	movlw	204
 47843  014948  006F FFA0  F991    	movff	wreg,_C+146	;volatile
 47844  01494E  0E3D               	movlw	61
 47845  014950  006F FFA0  F992    	movff	wreg,_C+147	;volatile
 47846  014956                     l16994:
 47847                           
 47848                           ;bsoc.c: 53:  if (C.c_bat > 0.01)
 47849  014956  EE22  F143         	lfsr	2,_C+68	;volatile
 47850  01495A  006F FF7B FFE6     	movff	postinc2,postinc1
 47851  014960  006F FF7B FFE6     	movff	postinc2,postinc1
 47852  014966  006F FF7B FFE6     	movff	postinc2,postinc1
 47853  01496C  006F FF7B FFE6     	movff	postinc2,postinc1
 47854  014972  0E0A               	movlw	10
 47855  014974  6EE6               	movwf	postinc1,c
 47856  014976  0ED7               	movlw	215
 47857  014978  6EE6               	movwf	postinc1,c
 47858  01497A  0E23               	movlw	35
 47859  01497C  6EE6               	movwf	postinc1,c
 47860  01497E  0E3C               	movlw	60
 47861  014980  6EE6               	movwf	postinc1,c
 47862  014982  EC09  F0F3         	call	___flge	;wreg free
 47863  014986  B02A               	btfsc	btemp& (0+255),0,c
 47864  014988  D01C               	goto	l16998
 47865                           
 47866                           ;bsoc.c: 54:   adj = C.hist[0].cef;
 47867  01498A  0062  F714  F032   	movff	_C+198,btemp+8	;volatile
 47868  014990  0062  F718  F033   	movff	_C+199,btemp+9	;volatile
 47869  014996  0062  F71C  F034   	movff	_C+200,btemp+10	;volatile
 47870  01499C  0062  F720  F035   	movff	_C+201,btemp+11	;volatile
 47871                           
 47872                           ;stkvar	_adj @ sp[(-6)+0]
 47873  0149A2  0EFA               	movlw	-6
 47874  0149A4  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 47875  0149AA  0EFB               	movlw	-5
 47876  0149AC  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 47877  0149B2  0EFC               	movlw	-4
 47878  0149B4  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 47879  0149BA  0EFD               	movlw	-3
 47880  0149BC  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 47881  0149C2                     l16998:
 47882                           
 47883                           ;bsoc.c: 55:  if (C.c_bat < 0.01)
 47884  0149C2  0E0A               	movlw	10
 47885  0149C4  6EE6               	movwf	postinc1,c
 47886  0149C6  0ED7               	movlw	215
 47887  0149C8  6EE6               	movwf	postinc1,c
 47888  0149CA  0E23               	movlw	35
 47889  0149CC  6EE6               	movwf	postinc1,c
 47890  0149CE  0E3C               	movlw	60
 47891  0149D0  6EE6               	movwf	postinc1,c
 47892  0149D2  EE22  F143         	lfsr	2,_C+68	;volatile
 47893  0149D6  006F FF7B FFE6     	movff	postinc2,postinc1
 47894  0149DC  006F FF7B FFE6     	movff	postinc2,postinc1
 47895  0149E2  006F FF7B FFE6     	movff	postinc2,postinc1
 47896  0149E8  006F FF7B FFE6     	movff	postinc2,postinc1
 47897  0149EE  EC09  F0F3         	call	___flge	;wreg free
 47898  0149F2  B02A               	btfsc	btemp& (0+255),0,c
 47899  0149F4  D01C               	goto	l17002
 47900                           
 47901                           ;bsoc.c: 56:   adj = C.hist[0].peukert;
 47902  0149F6  0062  F704  F032   	movff	_C+194,btemp+8	;volatile
 47903  0149FC  0062  F708  F033   	movff	_C+195,btemp+9	;volatile
 47904  014A02  0062  F70C  F034   	movff	_C+196,btemp+10	;volatile
 47905  014A08  0062  F710  F035   	movff	_C+197,btemp+11	;volatile
 47906                           
 47907                           ;stkvar	_adj @ sp[(-6)+0]
 47908  014A0E  0EFA               	movlw	-6
 47909  014A10  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 47910  014A16  0EFB               	movlw	-5
 47911  014A18  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 47912  014A1E  0EFC               	movlw	-4
 47913  014A20  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 47914  014A26  0EFD               	movlw	-3
 47915  014A28  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 47916  014A2E                     l17002:
 47917                           
 47918                           ;bsoc.c: 57:  C.dynamic_ah += ((C.c_bat * adj) / 3600.0);
 47919  014A2E  0E00               	movlw	0
 47920  014A30  6EE6               	movwf	postinc1,c
 47921  014A32  0E00               	movlw	0
 47922  014A34  6EE6               	movwf	postinc1,c
 47923  014A36  0E61               	movlw	97
 47924  014A38  6EE6               	movwf	postinc1,c
 47925  014A3A  0E45               	movlw	69
 47926  014A3C  6EE6               	movwf	postinc1,c
 47927                           
 47928                           ;stkvar	_adj @ sp[(-10)+0]
 47929  014A3E  0EF6               	movlw	-10
 47930  014A40  006F FF8F FFE6     	movff	plusw1,postinc1
 47931  014A46  006F FF8F FFE6     	movff	plusw1,postinc1
 47932  014A4C  006F FF8F FFE6     	movff	plusw1,postinc1
 47933  014A52  006F FF8F FFE6     	movff	plusw1,postinc1
 47934  014A58  EE22  F143         	lfsr	2,_C+68	;volatile
 47935  014A5C  006F FF7B FFE6     	movff	postinc2,postinc1
 47936  014A62  006F FF7B FFE6     	movff	postinc2,postinc1
 47937  014A68  006F FF7B FFE6     	movff	postinc2,postinc1
 47938  014A6E  006F FF7B FFE6     	movff	postinc2,postinc1
 47939  014A74  EC4D  F0B2         	call	___flmul	;wreg free
 47940  014A78  0060  F0AB  FFE6   	movff	btemp,postinc1
 47941  014A7E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 47942  014A84  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 47943  014A8A  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 47944  014A90  EC9E  F0BD         	call	___fldiv	;wreg free
 47945  014A94  0060  F0AB  FFE6   	movff	btemp,postinc1
 47946  014A9A  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 47947  014AA0  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 47948  014AA6  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 47949  014AAC  0E8F               	movlw	low (_C+144)
 47950  014AAE  6EE6               	movwf	postinc1,c
 47951  014AB0  0E09               	movlw	high (_C+144)
 47952  014AB2  6EE6               	movwf	postinc1,c
 47953  014AB4  EC58  F008         	call	___asfladd	;wreg free
 47954                           
 47955                           ;bsoc.c: 59:  C.dynamic_ah_adj = C.dynamic_ah;
 47956  014AB8  EE22  F18F         	lfsr	2,_C+144	;volatile
 47957  014ABC  006F FF78  F99B    	movff	postinc2,_C+156	;volatile
 47958  014AC2  006F FF78  F99C    	movff	postinc2,_C+157	;volatile
 47959  014AC8  006F FF78  F99D    	movff	postinc2,_C+158	;volatile
 47960  014ACE  006F FF74  F99E    	movff	postdec2,_C+159	;volatile
 47961                           
 47962                           ;bsoc.c: 60:  if (C.dynamic_ah_adj > (C.bank_ah))
 47963  014AD4  EE22  F19B         	lfsr	2,_C+156	;volatile
 47964  014AD8  006F FF7B FFE6     	movff	postinc2,postinc1
 47965  014ADE  006F FF7B FFE6     	movff	postinc2,postinc1
 47966  014AE4  006F FF7B FFE6     	movff	postinc2,postinc1
 47967  014AEA  006F FF7B FFE6     	movff	postinc2,postinc1
 47968  014AF0  EE22  F18B         	lfsr	2,_C+140	;volatile
 47969  014AF4  006F FF7B FFE6     	movff	postinc2,postinc1
 47970  014AFA  006F FF7B FFE6     	movff	postinc2,postinc1
 47971  014B00  006F FF7B FFE6     	movff	postinc2,postinc1
 47972  014B06  006F FF7B FFE6     	movff	postinc2,postinc1
 47973  014B0C  EC09  F0F3         	call	___flge	;wreg free
 47974  014B10  B02A               	btfsc	btemp& (0+255),0,c
 47975  014B12  D00E               	goto	l17010
 47976                           
 47977                           ;bsoc.c: 61:   C.dynamic_ah_adj = C.bank_ah;
 47978  014B14  EE22  F18B         	lfsr	2,_C+140	;volatile
 47979  014B18  006F FF78  F99B    	movff	postinc2,_C+156	;volatile
 47980  014B1E  006F FF78  F99C    	movff	postinc2,_C+157	;volatile
 47981  014B24  006F FF78  F99D    	movff	postinc2,_C+158	;volatile
 47982  014B2A  006F FF74  F99E    	movff	postdec2,_C+159	;volatile
 47983  014B30                     l17010:
 47984                           
 47985                           ;bsoc.c: 62:  if (C.dynamic_ah_adj < 0.1)
 47986  014B30  0ECD               	movlw	205
 47987  014B32  6EE6               	movwf	postinc1,c
 47988  014B34  0ECC               	movlw	204
 47989  014B36  6EE6               	movwf	postinc1,c
 47990  014B38  0ECC               	movlw	204
 47991  014B3A  6EE6               	movwf	postinc1,c
 47992  014B3C  0E3D               	movlw	61
 47993  014B3E  6EE6               	movwf	postinc1,c
 47994  014B40  EE22  F19B         	lfsr	2,_C+156	;volatile
 47995  014B44  006F FF7B FFE6     	movff	postinc2,postinc1
 47996  014B4A  006F FF7B FFE6     	movff	postinc2,postinc1
 47997  014B50  006F FF7B FFE6     	movff	postinc2,postinc1
 47998  014B56  006F FF7B FFE6     	movff	postinc2,postinc1
 47999  014B5C  EC09  F0F3         	call	___flge	;wreg free
 48000  014B60  B02A               	btfsc	btemp& (0+255),0,c
 48001  014B62  D010               	goto	l17014
 48002                           
 48003                           ;bsoc.c: 63:   C.dynamic_ah_adj = 0.1;
 48004  014B64  0ECD               	movlw	205
 48005  014B66  006F FFA0  F99B    	movff	wreg,_C+156	;volatile
 48006  014B6C  0ECC               	movlw	204
 48007  014B6E  006F FFA0  F99C    	movff	wreg,_C+157	;volatile
 48008  014B74  0ECC               	movlw	204
 48009  014B76  006F FFA0  F99D    	movff	wreg,_C+158	;volatile
 48010  014B7C  0E3D               	movlw	61
 48011  014B7E  006F FFA0  F99E    	movff	wreg,_C+159	;volatile
 48012  014B84                     l17014:
 48013                           
 48014                           ;bsoc.c: 66:  C.pv_ah += (C.c_pv / 3600.0);
 48015  014B84  0E00               	movlw	0
 48016  014B86  6EE6               	movwf	postinc1,c
 48017  014B88  0E00               	movlw	0
 48018  014B8A  6EE6               	movwf	postinc1,c
 48019  014B8C  0E61               	movlw	97
 48020  014B8E  6EE6               	movwf	postinc1,c
 48021  014B90  0E45               	movlw	69
 48022  014B92  6EE6               	movwf	postinc1,c
 48023  014B94  EE22  F147         	lfsr	2,_C+72	;volatile
 48024  014B98  006F FF7B FFE6     	movff	postinc2,postinc1
 48025  014B9E  006F FF7B FFE6     	movff	postinc2,postinc1
 48026  014BA4  006F FF7B FFE6     	movff	postinc2,postinc1
 48027  014BAA  006F FF7B FFE6     	movff	postinc2,postinc1
 48028  014BB0  EC9E  F0BD         	call	___fldiv	;wreg free
 48029  014BB4  0060  F0AB  FFE6   	movff	btemp,postinc1
 48030  014BBA  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 48031  014BC0  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 48032  014BC6  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 48033  014BCC  0E93               	movlw	low (_C+148)
 48034  014BCE  6EE6               	movwf	postinc1,c
 48035  014BD0  0E09               	movlw	high (_C+148)
 48036  014BD2  6EE6               	movwf	postinc1,c
 48037  014BD4  EC58  F008         	call	___asfladd	;wreg free
 48038                           
 48039                           ;bsoc.c: 67:  C.pvkw += (C.p_pv / 3600.0);
 48040  014BD8  0E00               	movlw	0
 48041  014BDA  6EE6               	movwf	postinc1,c
 48042  014BDC  0E00               	movlw	0
 48043  014BDE  6EE6               	movwf	postinc1,c
 48044  014BE0  0E61               	movlw	97
 48045  014BE2  6EE6               	movwf	postinc1,c
 48046  014BE4  0E45               	movlw	69
 48047  014BE6  6EE6               	movwf	postinc1,c
 48048  014BE8  EE22  F17B         	lfsr	2,_C+124	;volatile
 48049  014BEC  006F FF7B FFE6     	movff	postinc2,postinc1
 48050  014BF2  006F FF7B FFE6     	movff	postinc2,postinc1
 48051  014BF8  006F FF7B FFE6     	movff	postinc2,postinc1
 48052  014BFE  006F FF7B FFE6     	movff	postinc2,postinc1
 48053  014C04  EC9E  F0BD         	call	___fldiv	;wreg free
 48054  014C08  0060  F0AB  FFE6   	movff	btemp,postinc1
 48055  014C0E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 48056  014C14  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 48057  014C1A  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 48058  014C20  0EA7               	movlw	low (_C+168)
 48059  014C22  6EE6               	movwf	postinc1,c
 48060  014C24  0E09               	movlw	high (_C+168)
 48061  014C26  6EE6               	movwf	postinc1,c
 48062  014C28  EC58  F008         	call	___asfladd	;wreg free
 48063                           
 48064                           ;bsoc.c: 68:  C.invkw += (C.p_inverter / 3600.0);
 48065  014C2C  0E00               	movlw	0
 48066  014C2E  6EE6               	movwf	postinc1,c
 48067  014C30  0E00               	movlw	0
 48068  014C32  6EE6               	movwf	postinc1,c
 48069  014C34  0E61               	movlw	97
 48070  014C36  6EE6               	movwf	postinc1,c
 48071  014C38  0E45               	movlw	69
 48072  014C3A  6EE6               	movwf	postinc1,c
 48073  014C3C  EE22  F177         	lfsr	2,_C+120	;volatile
 48074  014C40  006F FF7B FFE6     	movff	postinc2,postinc1
 48075  014C46  006F FF7B FFE6     	movff	postinc2,postinc1
 48076  014C4C  006F FF7B FFE6     	movff	postinc2,postinc1
 48077  014C52  006F FF7B FFE6     	movff	postinc2,postinc1
 48078  014C58  EC9E  F0BD         	call	___fldiv	;wreg free
 48079  014C5C  0060  F0AB  FFE6   	movff	btemp,postinc1
 48080  014C62  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 48081  014C68  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 48082  014C6E  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 48083  014C74  0EAB               	movlw	low (_C+172)
 48084  014C76  6EE6               	movwf	postinc1,c
 48085  014C78  0E09               	movlw	high (_C+172)
 48086  014C7A  6EE6               	movwf	postinc1,c
 48087  014C7C  EC58  F008         	call	___asfladd	;wreg free
 48088                           
 48089                           ;bsoc.c: 69:  C.loadkw += (C.p_load / 3600.0);
 48090  014C80  0E00               	movlw	0
 48091  014C82  6EE6               	movwf	postinc1,c
 48092  014C84  0E00               	movlw	0
 48093  014C86  6EE6               	movwf	postinc1,c
 48094  014C88  0E61               	movlw	97
 48095  014C8A  6EE6               	movwf	postinc1,c
 48096  014C8C  0E45               	movlw	69
 48097  014C8E  6EE6               	movwf	postinc1,c
 48098  014C90  EE22  F173         	lfsr	2,_C+116	;volatile
 48099  014C94  006F FF7B FFE6     	movff	postinc2,postinc1
 48100  014C9A  006F FF7B FFE6     	movff	postinc2,postinc1
 48101  014CA0  006F FF7B FFE6     	movff	postinc2,postinc1
 48102  014CA6  006F FF7B FFE6     	movff	postinc2,postinc1
 48103  014CAC  EC9E  F0BD         	call	___fldiv	;wreg free
 48104  014CB0  0060  F0AB  FFE6   	movff	btemp,postinc1
 48105  014CB6  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 48106  014CBC  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 48107  014CC2  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 48108  014CC8  0EAF               	movlw	low (_C+176)
 48109  014CCA  6EE6               	movwf	postinc1,c
 48110  014CCC  0E09               	movlw	high (_C+176)
 48111  014CCE  6EE6               	movwf	postinc1,c
 48112  014CD0  EC58  F008         	call	___asfladd	;wreg free
 48113                           
 48114                           ;bsoc.c: 70:  if (C.p_bat > 0.0)
 48115  014CD4  EE22  F17F         	lfsr	2,_C+128	;volatile
 48116  014CD8  006F FF7B FFE6     	movff	postinc2,postinc1
 48117  014CDE  006F FF7B FFE6     	movff	postinc2,postinc1
 48118  014CE4  006F FF7B FFE6     	movff	postinc2,postinc1
 48119  014CEA  006F FF7B FFE6     	movff	postinc2,postinc1
 48120  014CF0  0E00               	movlw	0
 48121  014CF2  6EE6               	movwf	postinc1,c
 48122  014CF4  0E00               	movlw	0
 48123  014CF6  6EE6               	movwf	postinc1,c
 48124  014CF8  0E00               	movlw	0
 48125  014CFA  6EE6               	movwf	postinc1,c
 48126  014CFC  0E00               	movlw	0
 48127  014CFE  6EE6               	movwf	postinc1,c
 48128  014D00  EC09  F0F3         	call	___flge	;wreg free
 48129  014D04  B02A               	btfsc	btemp& (0+255),0,c
 48130  014D06  D02A               	goto	l17020
 48131                           
 48132                           ;bsoc.c: 71:   C.bkwi += (C.p_bat / 3600.0);
 48133  014D08  0E00               	movlw	0
 48134  014D0A  6EE6               	movwf	postinc1,c
 48135  014D0C  0E00               	movlw	0
 48136  014D0E  6EE6               	movwf	postinc1,c
 48137  014D10  0E61               	movlw	97
 48138  014D12  6EE6               	movwf	postinc1,c
 48139  014D14  0E45               	movlw	69
 48140  014D16  6EE6               	movwf	postinc1,c
 48141  014D18  EE22  F17F         	lfsr	2,_C+128	;volatile
 48142  014D1C  006F FF7B FFE6     	movff	postinc2,postinc1
 48143  014D22  006F FF7B FFE6     	movff	postinc2,postinc1
 48144  014D28  006F FF7B FFE6     	movff	postinc2,postinc1
 48145  014D2E  006F FF7B FFE6     	movff	postinc2,postinc1
 48146  014D34  EC9E  F0BD         	call	___fldiv	;wreg free
 48147  014D38  0060  F0AB  FFE6   	movff	btemp,postinc1
 48148  014D3E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 48149  014D44  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 48150  014D4A  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 48151  014D50  0E9F               	movlw	low (_C+160)
 48152  014D52  6EE6               	movwf	postinc1,c
 48153  014D54  0E09               	movlw	high (_C+160)
 48154  014D56  6EE6               	movwf	postinc1,c
 48155  014D58  EC58  F008         	call	___asfladd	;wreg free
 48156  014D5C                     l17020:
 48157                           
 48158                           ;bsoc.c: 72:  if (C.p_bat < 0.0)
 48159  014D5C  EE22  F17F         	lfsr	2,_C+128	;volatile
 48160  014D60  0E03               	movlw	3
 48161  014D62  AEDB               	btfss	plusw2,7,c
 48162  014D64  D038               	goto	l17024
 48163                           
 48164                           ;bsoc.c: 73:   C.bkwo += fabsf(C.p_bat / 3600.0);
 48165  014D66  0E00               	movlw	0
 48166  014D68  6EE6               	movwf	postinc1,c
 48167  014D6A  0E00               	movlw	0
 48168  014D6C  6EE6               	movwf	postinc1,c
 48169  014D6E  0E61               	movlw	97
 48170  014D70  6EE6               	movwf	postinc1,c
 48171  014D72  0E45               	movlw	69
 48172  014D74  6EE6               	movwf	postinc1,c
 48173  014D76  EE22  F17F         	lfsr	2,_C+128	;volatile
 48174  014D7A  006F FF7B FFE6     	movff	postinc2,postinc1
 48175  014D80  006F FF7B FFE6     	movff	postinc2,postinc1
 48176  014D86  006F FF7B FFE6     	movff	postinc2,postinc1
 48177  014D8C  006F FF7B FFE6     	movff	postinc2,postinc1
 48178  014D92  EC9E  F0BD         	call	___fldiv	;wreg free
 48179  014D96  0060  F0AB  FFE6   	movff	btemp,postinc1
 48180  014D9C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 48181  014DA2  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 48182  014DA8  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 48183  014DAE  EC96  F002         	call	_fabsf	;wreg free
 48184  014DB2  0060  F0AB  FFE6   	movff	btemp,postinc1
 48185  014DB8  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 48186  014DBE  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 48187  014DC4  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 48188  014DCA  0EA3               	movlw	low (_C+164)
 48189  014DCC  6EE6               	movwf	postinc1,c
 48190  014DCE  0E09               	movlw	high (_C+164)
 48191  014DD0  6EE6               	movwf	postinc1,c
 48192  014DD2  EC58  F008         	call	___asfladd	;wreg free
 48193  014DD6                     l17024:
 48194                           
 48195                           ;bsoc.c: 75:  C.soc = ((uint16_t) ((C.dynamic_ah_adj / C.bank_ah)*100.0) + 1);
 48196  014DD6  0E00               	movlw	0
 48197  014DD8  6EE6               	movwf	postinc1,c
 48198  014DDA  0E00               	movlw	0
 48199  014DDC  6EE6               	movwf	postinc1,c
 48200  014DDE  0EC8               	movlw	200
 48201  014DE0  6EE6               	movwf	postinc1,c
 48202  014DE2  0E42               	movlw	66
 48203  014DE4  6EE6               	movwf	postinc1,c
 48204  014DE6  EE22  F18B         	lfsr	2,_C+140	;volatile
 48205  014DEA  006F FF7B FFE6     	movff	postinc2,postinc1
 48206  014DF0  006F FF7B FFE6     	movff	postinc2,postinc1
 48207  014DF6  006F FF7B FFE6     	movff	postinc2,postinc1
 48208  014DFC  006F FF7B FFE6     	movff	postinc2,postinc1
 48209  014E02  EE22  F19B         	lfsr	2,_C+156	;volatile
 48210  014E06  006F FF7B FFE6     	movff	postinc2,postinc1
 48211  014E0C  006F FF7B FFE6     	movff	postinc2,postinc1
 48212  014E12  006F FF7B FFE6     	movff	postinc2,postinc1
 48213  014E18  006F FF7B FFE6     	movff	postinc2,postinc1
 48214  014E1E  EC9E  F0BD         	call	___fldiv	;wreg free
 48215  014E22  0060  F0AB  FFE6   	movff	btemp,postinc1
 48216  014E28  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 48217  014E2E  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 48218  014E34  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 48219  014E3A  EC4D  F0B2         	call	___flmul	;wreg free
 48220  014E3E  0060  F0AB  FFE6   	movff	btemp,postinc1
 48221  014E44  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 48222  014E4A  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 48223  014E50  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 48224  014E56  EC9D  F0F1         	call	___fltol	;wreg free
 48225  014E5A  0060  F0A8  F034   	movff	btemp,btemp+10
 48226  014E60  0060  F0AC  F035   	movff	btemp+1,btemp+11
 48227  014E66  0E01               	movlw	1
 48228  014E68  2634               	addwf	(btemp+10)^0,f,c
 48229  014E6A  0E00               	movlw	0
 48230  014E6C  2235               	addwfc	(btemp+11)^0,f,c
 48231  014E6E  0060  F0D0  F9B5   	movff	btemp+10,_C+182	;volatile
 48232  014E74  0060  F0D4  F9B6   	movff	btemp+11,_C+183	;volatile
 48233                           
 48234                           ;bsoc.c: 76:  if (C.soc > 100)
 48235  014E7A  EE22  F1B5         	lfsr	2,_C+182	;volatile
 48236  014E7E  0E01               	movlw	1
 48237  014E80  50DB               	movf	plusw2,w,c
 48238  014E82  E104               	bnz	u1665_20
 48239  014E84  0E65               	movlw	101
 48240  014E86  5CDE               	subwf	postinc2,w,c
 48241  014E88  A0D8               	btfss	status,0,c
 48242  014E8A  D008               	goto	l17030
 48243  014E8C                     u1665_20:
 48244                           
 48245                           ;bsoc.c: 77:   C.soc = 100;
 48246  014E8C  0E64               	movlw	100
 48247  014E8E  006F FFA0  F9B5    	movff	wreg,_C+182	;volatile
 48248  014E94  0E00               	movlw	0
 48249  014E96  006F FFA0  F9B6    	movff	wreg,_C+183	;volatile
 48250  014E9C                     l17030:
 48251                           
 48252                           ;bsoc.c: 79:  if (C.c_bat < 0.0) {
 48253  014E9C  EE22  F143         	lfsr	2,_C+68	;volatile
 48254  014EA0  0E03               	movlw	3
 48255  014EA2  AEDB               	btfss	plusw2,7,c
 48256  014EA4  D047               	goto	l2360
 48257                           
 48258                           ;bsoc.c: 80:   C.runtime = (uint16_t) (-(C.dynamic_ah_adj / C.c_bat));
 48259  014EA6  EE22  F143         	lfsr	2,_C+68	;volatile
 48260  014EAA  006F FF7B FFE6     	movff	postinc2,postinc1
 48261  014EB0  006F FF7B FFE6     	movff	postinc2,postinc1
 48262  014EB6  006F FF7B FFE6     	movff	postinc2,postinc1
 48263  014EBC  006F FF7B FFE6     	movff	postinc2,postinc1
 48264  014EC2  EE22  F19B         	lfsr	2,_C+156	;volatile
 48265  014EC6  006F FF7B FFE6     	movff	postinc2,postinc1
 48266  014ECC  006F FF7B FFE6     	movff	postinc2,postinc1
 48267  014ED2  006F FF7B FFE6     	movff	postinc2,postinc1
 48268  014ED8  006F FF7B FFE6     	movff	postinc2,postinc1
 48269  014EDE  EC9E  F0BD         	call	___fldiv	;wreg free
 48270  014EE2  0060  F0AB  FFE6   	movff	btemp,postinc1
 48271  014EE8  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 48272  014EEE  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 48273  014EF4  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 48274  014EFA  EC7E  F00C         	call	___flneg	;wreg free
 48275  014EFE  0060  F0AB  FFE6   	movff	btemp,postinc1
 48276  014F04  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 48277  014F0A  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 48278  014F10  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 48279  014F16  EC9D  F0F1         	call	___fltol	;wreg free
 48280  014F1A  0060  F0A8  F034   	movff	btemp,btemp+10
 48281  014F20  0060  F0AC  F035   	movff	btemp+1,btemp+11
 48282  014F26  0060  F0D0  F9B3   	movff	btemp+10,_C+180	;volatile
 48283  014F2C  0060  F0D4  F9B4   	movff	btemp+11,_C+181	;volatile
 48284                           
 48285                           ;bsoc.c: 81:  } else {
 48286  014F32  D008               	goto	l17034
 48287  014F34                     l2360:
 48288                           
 48289                           ;bsoc.c: 82:   C.runtime = 99;
 48290  014F34  0E63               	movlw	99
 48291  014F36  006F FFA0  F9B3    	movff	wreg,_C+180	;volatile
 48292  014F3C  0E00               	movlw	0
 48293  014F3E  006F FFA0  F9B4    	movff	wreg,_C+181	;volatile
 48294  014F44                     l17034:
 48295                           
 48296                           ;bsoc.c: 84:  if (C.runtime > 99)
 48297  014F44  EE22  F1B3         	lfsr	2,_C+180	;volatile
 48298  014F48  0E01               	movlw	1
 48299  014F4A  50DB               	movf	plusw2,w,c
 48300  014F4C  E104               	bnz	u1667_20
 48301  014F4E  0E64               	movlw	100
 48302  014F50  5CDE               	subwf	postinc2,w,c
 48303  014F52  A0D8               	btfss	status,0,c
 48304  014F54  D008               	goto	l17038
 48305  014F56                     u1667_20:
 48306                           
 48307                           ;bsoc.c: 85:   C.runtime = 99;
 48308  014F56  0E63               	movlw	99
 48309  014F58  006F FFA0  F9B3    	movff	wreg,_C+180	;volatile
 48310  014F5E  0E00               	movlw	0
 48311  014F60  006F FFA0  F9B4    	movff	wreg,_C+181	;volatile
 48312  014F66                     l17038:
 48313                           
 48314                           ;bsoc.c: 87:  V.lowint_count++;
 48315  014F66  0E01               	movlw	1
 48316  014F68  0102               	movlb	2	; () banked
 48317  014F6A  27B4               	addwf	(_V+173)& (0+255),f,b	;volatile
 48318  014F6C  0E00               	movlw	0
 48319  014F6E  23B5               	addwfc	(_V+174)& (0+255),f,b	;volatile
 48320  014F70  23B6               	addwfc	(_V+175)& (0+255),f,b	;volatile
 48321  014F72  23B7               	addwfc	(_V+176)& (0+255),f,b	;volatile
 48322                           
 48323                           ;bsoc.c: 89:  if (!log_update_wait++ && V.system_stable) {
 48324  014F74  2A50               	incf	calc_bsoc@log_update_wait^0,f,c
 48325  014F76  0450               	decf	calc_bsoc@log_update_wait^0,w,c
 48326  014F78  A4D8               	btfss	status,2,c
 48327  014F7A  D177               	goto	l17050
 48328                           
 48329                           ; BSR set to: 2
 48330  014F7C  51B3               	movf	(_V+172)& (0+255),w,b	;volatile
 48331  014F7E  B4D8               	btfsc	status,2,c
 48332  014F80  D174               	goto	l17050
 48333                           
 48334                           ; BSR set to: 2
 48335                           ;bsoc.c: 90:   log_ptr = port_data_dma_ptr();
 48336  014F82  EC60  F013         	call	_port_data_dma_ptr	;wreg free
 48337                           
 48338                           ;stkvar	_log_ptr @ sp[(-6)+4]
 48339  014F86  0EFF               	movlw	-1
 48340  014F88  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 48341  014F8E  0EFE               	movlw	-2
 48342  014F90  0060  F0AB  FFE3   	movff	btemp,plusw1
 48343                           
 48344                           ;bsoc.c: 91:   sprintf((char*) log_ptr, " %c ,%lu,%4.4f,%4.4f,%4.4f,%4.4f,%4.4f,%4.3f,%4
      +                          .3f,%4.3f,%4.3f,%4.3f,%4.3f,%d,%d,%2.6f,%4.3f,%d,%d,%lu,%lu,%4.3f,%4.3f,%4.3f\r\n",
 48345  014F96  EE22  F1C1         	lfsr	2,_C+194	;volatile
 48346  014F9A  006F FF7B FFE6     	movff	postinc2,postinc1
 48347  014FA0  006F FF7B FFE6     	movff	postinc2,postinc1
 48348  014FA6  006F FF7B FFE6     	movff	postinc2,postinc1
 48349  014FAC  006F FF7B FFE6     	movff	postinc2,postinc1
 48350  014FB2  EE22  F1C5         	lfsr	2,_C+198	;volatile
 48351  014FB6  006F FF7B FFE6     	movff	postinc2,postinc1
 48352  014FBC  006F FF7B FFE6     	movff	postinc2,postinc1
 48353  014FC2  006F FF7B FFE6     	movff	postinc2,postinc1
 48354  014FC8  006F FF7B FFE6     	movff	postinc2,postinc1
 48355  014FCE  EE22  F19B         	lfsr	2,_C+156	;volatile
 48356  014FD2  006F FF7B FFE6     	movff	postinc2,postinc1
 48357  014FD8  006F FF7B FFE6     	movff	postinc2,postinc1
 48358  014FDE  006F FF7B FFE6     	movff	postinc2,postinc1
 48359  014FE4  006F FF7B FFE6     	movff	postinc2,postinc1
 48360  014FEA  EE22  F233         	lfsr	2,_C+308	;volatile
 48361  014FEE  006F FF7B FFE6     	movff	postinc2,postinc1
 48362  014FF4  006F FF7B FFE6     	movff	postinc2,postinc1
 48363  014FFA  006F FF7B FFE6     	movff	postinc2,postinc1
 48364  015000  006F FF7B FFE6     	movff	postinc2,postinc1
 48365  015006  EE22  F22F         	lfsr	2,_C+304	;volatile
 48366  01500A  006F FF7B FFE6     	movff	postinc2,postinc1
 48367  015010  006F FF7B FFE6     	movff	postinc2,postinc1
 48368  015016  006F FF7B FFE6     	movff	postinc2,postinc1
 48369  01501C  006F FF7B FFE6     	movff	postinc2,postinc1
 48370  015022  EE22  F22D         	lfsr	2,_C+302	;volatile
 48371  015026  50DF               	movf	indf2,w,c
 48372  015028  6EE6               	movwf	postinc1,c
 48373  01502A  0E00               	movlw	0
 48374  01502C  6EE6               	movwf	postinc1,c
 48375  01502E  EC45  F013         	call	_get_ac_charger_relay	;wreg free
 48376  015032  502A               	movf	btemp^0,w,c
 48377  015034  6EE6               	movwf	postinc1,c
 48378  015036  0E00               	movlw	0
 48379  015038  6EE6               	movwf	postinc1,c
 48380  01503A  EE22  F167         	lfsr	2,_C+104	;volatile
 48381  01503E  006F FF7B FFE6     	movff	postinc2,postinc1
 48382  015044  006F FF7B FFE6     	movff	postinc2,postinc1
 48383  01504A  006F FF7B FFE6     	movff	postinc2,postinc1
 48384  015050  006F FF7B FFE6     	movff	postinc2,postinc1
 48385  015056  EE22  F187         	lfsr	2,_C+136	;volatile
 48386  01505A  006F FF7B FFE6     	movff	postinc2,postinc1
 48387  015060  006F FF7B FFE6     	movff	postinc2,postinc1
 48388  015066  006F FF7B FFE6     	movff	postinc2,postinc1
 48389  01506C  006F FF7B FFE6     	movff	postinc2,postinc1
 48390  015072  EE22  F1B3         	lfsr	2,_C+180	;volatile
 48391  015076  006F FF78  F034    	movff	postinc2,btemp+10
 48392  01507C  006F FF74  F035    	movff	postdec2,btemp+11
 48393  015082  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 48394  015088  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 48395  01508E  EE22  F1B5         	lfsr	2,_C+182	;volatile
 48396  015092  006F FF78  F034    	movff	postinc2,btemp+10
 48397  015098  006F FF74  F035    	movff	postdec2,btemp+11
 48398  01509E  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 48399  0150A4  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 48400  0150AA  EE22  F193         	lfsr	2,_C+148	;volatile
 48401  0150AE  006F FF7B FFE6     	movff	postinc2,postinc1
 48402  0150B4  006F FF7B FFE6     	movff	postinc2,postinc1
 48403  0150BA  006F FF7B FFE6     	movff	postinc2,postinc1
 48404  0150C0  006F FF7B FFE6     	movff	postinc2,postinc1
 48405  0150C6  EE22  F18F         	lfsr	2,_C+144	;volatile
 48406  0150CA  006F FF7B FFE6     	movff	postinc2,postinc1
 48407  0150D0  006F FF7B FFE6     	movff	postinc2,postinc1
 48408  0150D6  006F FF7B FFE6     	movff	postinc2,postinc1
 48409  0150DC  006F FF7B FFE6     	movff	postinc2,postinc1
 48410  0150E2  EE22  F177         	lfsr	2,_C+120	;volatile
 48411  0150E6  006F FF7B FFE6     	movff	postinc2,postinc1
 48412  0150EC  006F FF7B FFE6     	movff	postinc2,postinc1
 48413  0150F2  006F FF7B FFE6     	movff	postinc2,postinc1
 48414  0150F8  006F FF7B FFE6     	movff	postinc2,postinc1
 48415  0150FE  EE22  F173         	lfsr	2,_C+116	;volatile
 48416  015102  006F FF7B FFE6     	movff	postinc2,postinc1
 48417  015108  006F FF7B FFE6     	movff	postinc2,postinc1
 48418  01510E  006F FF7B FFE6     	movff	postinc2,postinc1
 48419  015114  006F FF7B FFE6     	movff	postinc2,postinc1
 48420  01511A  EE22  F17B         	lfsr	2,_C+124	;volatile
 48421  01511E  006F FF7B FFE6     	movff	postinc2,postinc1
 48422  015124  006F FF7B FFE6     	movff	postinc2,postinc1
 48423  01512A  006F FF7B FFE6     	movff	postinc2,postinc1
 48424  015130  006F FF7B FFE6     	movff	postinc2,postinc1
 48425  015136  EE22  F17F         	lfsr	2,_C+128	;volatile
 48426  01513A  006F FF7B FFE6     	movff	postinc2,postinc1
 48427  015140  006F FF7B FFE6     	movff	postinc2,postinc1
 48428  015146  006F FF7B FFE6     	movff	postinc2,postinc1
 48429  01514C  006F FF7B FFE6     	movff	postinc2,postinc1
 48430  015152  EE22  F147         	lfsr	2,_C+72	;volatile
 48431  015156  006F FF7B FFE6     	movff	postinc2,postinc1
 48432  01515C  006F FF7B FFE6     	movff	postinc2,postinc1
 48433  015162  006F FF7B FFE6     	movff	postinc2,postinc1
 48434  015168  006F FF7B FFE6     	movff	postinc2,postinc1
 48435  01516E  EE22  F143         	lfsr	2,_C+68	;volatile
 48436  015172  006F FF7B FFE6     	movff	postinc2,postinc1
 48437  015178  006F FF7B FFE6     	movff	postinc2,postinc1
 48438  01517E  006F FF7B FFE6     	movff	postinc2,postinc1
 48439  015184  006F FF7B FFE6     	movff	postinc2,postinc1
 48440  01518A  EE22  F163         	lfsr	2,_C+100	;volatile
 48441  01518E  006F FF7B FFE6     	movff	postinc2,postinc1
 48442  015194  006F FF7B FFE6     	movff	postinc2,postinc1
 48443  01519A  006F FF7B FFE6     	movff	postinc2,postinc1
 48444  0151A0  006F FF7B FFE6     	movff	postinc2,postinc1
 48445  0151A6  EE22  F14B         	lfsr	2,_C+76	;volatile
 48446  0151AA  006F FF7B FFE6     	movff	postinc2,postinc1
 48447  0151B0  006F FF7B FFE6     	movff	postinc2,postinc1
 48448  0151B6  006F FF7B FFE6     	movff	postinc2,postinc1
 48449  0151BC  006F FF7B FFE6     	movff	postinc2,postinc1
 48450  0151C2  EE22  F14F         	lfsr	2,_C+80	;volatile
 48451  0151C6  006F FF7B FFE6     	movff	postinc2,postinc1
 48452  0151CC  006F FF7B FFE6     	movff	postinc2,postinc1
 48453  0151D2  006F FF7B FFE6     	movff	postinc2,postinc1
 48454  0151D8  006F FF7B FFE6     	movff	postinc2,postinc1
 48455  0151DE  EE22  F153         	lfsr	2,_C+84	;volatile
 48456  0151E2  006F FF7B FFE6     	movff	postinc2,postinc1
 48457  0151E8  006F FF7B FFE6     	movff	postinc2,postinc1
 48458  0151EE  006F FF7B FFE6     	movff	postinc2,postinc1
 48459  0151F4  006F FF7B FFE6     	movff	postinc2,postinc1
 48460  0151FA  0060  FA23  FFE6   	movff	_V+129,postinc1
 48461  015200  0060  FA27  FFE6   	movff	_V+130,postinc1
 48462  015206  0060  FA2B  FFE6   	movff	_V+131,postinc1
 48463  01520C  0060  FA2F  FFE6   	movff	_V+132,postinc1
 48464  015212  0E32               	movlw	50
 48465  015214  6EE6               	movwf	postinc1,c
 48466  015216  0E00               	movlw	0
 48467  015218  6EE6               	movwf	postinc1,c
 48468  01521A  0EF7               	movlw	low STR_90
 48469  01521C  6EE6               	movwf	postinc1,c
 48470  01521E  0EF9               	movlw	high STR_90
 48471  015220  6EE6               	movwf	postinc1,c
 48472                           
 48473                           ;stkvar	_log_ptr @ sp[(-98)+4]
 48474  015222  0EA2               	movlw	-94
 48475  015224  006F FF8F FFE6     	movff	plusw1,postinc1
 48476  01522A  006F FF8F FFE6     	movff	plusw1,postinc1
 48477  015230  0E5E               	movlw	94
 48478  015232  6EE6               	movwf	postinc1,c
 48479  015234  ECB9  F0FB         	call	_sprintf	;wreg free
 48480                           
 48481                           ; BSR set to: 0
 48482                           ;bsoc.c: 98:   StartTimer(TMR_DISPLAY, 125);
 48483  015238  0E7D               	movlw	125
 48484  01523A  6EE6               	movwf	postinc1,c
 48485  01523C  0E00               	movlw	0
 48486  01523E  6EE6               	movwf	postinc1,c
 48487  015240  0E0A               	movlw	10
 48488  015242  6EE6               	movwf	postinc1,c
 48489  015244  ECFA  F00D         	call	_StartTimer	;wreg free
 48490                           
 48491                           ;bsoc.c: 99:   send_port_data_dma(strlen((char*) log_ptr));
 48492                           ;stkvar	_log_ptr @ sp[(-6)+4]
 48493  015248  0EFE               	movlw	-2
 48494  01524A  006F FF8F FFE6     	movff	plusw1,postinc1
 48495  015250  006F FF8F FFE6     	movff	plusw1,postinc1
 48496  015256  EC3D  F004         	call	_strlen	;wreg free
 48497  01525A  0060  F0AB  FFE6   	movff	btemp,postinc1
 48498  015260  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 48499  015266  EC07  F00C         	call	_send_port_data_dma	;wreg free
 48500  01526A                     l17050:
 48501                           
 48502                           ;bsoc.c: 101:  if (log_update_wait >= 10)
 48503  01526A  0E09               	movlw	9
 48504  01526C  6450               	cpfsgt	calc_bsoc@log_update_wait^0,c
 48505  01526E  D001               	goto	l2364
 48506                           
 48507                           ;bsoc.c: 102:   log_update_wait = 0;
 48508  015270  6A50               	clrf	calc_bsoc@log_update_wait^0,c
 48509  015272                     l2364:
 48510                           
 48511                           ;bsoc.c: 104:  C.update = 0;
 48512  015272  0E00               	movlw	0
 48513  015274  006F FFA0  F9B7    	movff	wreg,_C+184	;volatile
 48514                           
 48515                           ;bsoc.c: 106:  do { LATEbits.LATE1 = 0; } while(0);
 48516  01527A  92BE               	bcf	190,1,c	;volatile
 48517                           
 48518                           ; _calc_bsoc: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 48519  01527C  0EFA               	movlw	250
 48520  01527E  26E1               	addwf	fsr1l,f,c
 48521  015280  0EFF               	movlw	255
 48522  015282  22E2               	addwfc	fsr1h,f,c
 48523  015284  0012               	return		;funcret
 48524  015286                     __end_of_calc_bsoc:
 48525                           	opt callstack 0
 48526                           
 48527 ;; *************** function _send_port_data_dma *****************
 48528 ;; Defined at:
 48529 ;;		line 397 in file "eadog.c"
 48530 ;; Parameters:    Size  Location     Type
 48531 ;;  dsize           2  [STACK] unsigned short 
 48532 ;; Auto vars:     Size  Location     Type
 48533 ;;		None
 48534 ;; Return value:  Size  Location     Type
 48535 ;;                  1  [STACK] void 
 48536 ;; Registers used:
 48537 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 48538 ;; Tracked objects:
 48539 ;;		On entry : 0/0
 48540 ;;		On exit  : 3F/3B
 48541 ;;		Unchanged: 0/0
 48542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 48543 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48544 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48545 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48546 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48547 ;;Total ram usage:        0 bytes
 48548 ;; Hardware stack levels used:    1
 48549 ;; Hardware stack levels required when called:    3
 48550 ;; This function calls:
 48551 ;;		Nothing
 48552 ;; This function is called by:
 48553 ;;		_calc_bsoc
 48554 ;; This function uses a reentrant model
 48555 ;;
 48556                           
 48557                           	psect	text201
 48558  00180E                     __ptext201:
 48559                           	opt callstack 0
 48560  00180E                     _send_port_data_dma:
 48561                           	opt callstack 11
 48562                           
 48563                           ;eadog.c: 397: void send_port_data_dma(uint16_t dsize);eadog.c: 398: {;eadog.c: 399:  if
      +                           (dsize > 512)
 48564                           ;stkvar	_dsize @ sp[(0)+-2]
 48565                           
 48566                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 48567                           ;incstack = 0
 48568  00180E  0EFE               	movlw	-2
 48569  001810  04E3               	decf	plusw1,w,c
 48570  001812  0EFF               	movlw	-1
 48571  001814  006F FF8C  F02A    	movff	plusw1,btemp
 48572  00181A  0E02               	movlw	2
 48573  00181C  5A2A               	subwfb	btemp^0,f,c
 48574  00181E  A0D8               	btfss	status,0,c
 48575  001820  D00C               	goto	l12858
 48576                           
 48577                           ;eadog.c: 400:   dsize = 512;
 48578  001822  0E00               	movlw	0
 48579  001824  6E34               	movwf	(btemp+10)^0,c
 48580  001826  0E02               	movlw	2
 48581  001828  6E35               	movwf	(btemp+11)^0,c
 48582                           
 48583                           ;stkvar	_dsize @ sp[(0)+-2]
 48584  00182A  0EFE               	movlw	-2
 48585  00182C  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 48586  001832  0EFF               	movlw	-1
 48587  001834  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 48588  00183A                     l12858:
 48589                           
 48590                           ;eadog.c: 402:  DMA2CON0bits.EN = 0;
 48591  00183A  013B               	movlb	59	; () banked
 48592  00183C  9FDC               	bcf	220,7,b	;volatile
 48593                           
 48594                           ; BSR set to: 59
 48595                           ;eadog.c: 403:  DMA2SSZ = dsize;
 48596                           ;stkvar	_dsize @ sp[(0)+-2]
 48597  00183E  0EFE               	movlw	-2
 48598  001840  006F FF8F FBD7     	movff	plusw1,15319	;volatile
 48599  001846  0EFF               	movlw	-1
 48600  001848  006F FF8F FBD8     	movff	plusw1,15320	;volatile
 48601                           
 48602                           ; BSR set to: 59
 48603                           ;eadog.c: 404:  DMA2DSZ = 1;
 48604  00184E  0E00               	movlw	0
 48605  001850  6FCF               	movwf	207,b	;volatile
 48606  001852  0E01               	movlw	1
 48607  001854  6FCE               	movwf	206,b	;volatile
 48608                           
 48609                           ; BSR set to: 59
 48610                           ;eadog.c: 405:  DMA2CON0bits.EN = 1;
 48611  001856  8FDC               	bsf	220,7,b	;volatile
 48612                           
 48613                           ; BSR set to: 59
 48614                           ;eadog.c: 406:  DMA2CON0bits.DMA2SIRQEN = 1;
 48615  001858  8DDC               	bsf	220,6,b	;volatile
 48616                           
 48617                           ; BSR set to: 59
 48618                           ; _send_port_data_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 48619  00185A  52E5               	movf	postdec1,f,c
 48620  00185C  52E5               	movf	postdec1,f,c
 48621  00185E  0012               	return		;funcret
 48622  001860                     __end_of_send_port_data_dma:
 48623                           	opt callstack 0
 48624                           
 48625 ;; *************** function _port_data_dma_ptr *****************
 48626 ;; Defined at:
 48627 ;;		line 412 in file "eadog.c"
 48628 ;; Parameters:    Size  Location     Type
 48629 ;;		None
 48630 ;; Auto vars:     Size  Location     Type
 48631 ;;		None
 48632 ;; Return value:  Size  Location     Type
 48633 ;;                  2  [STACK] PTR unsigned char 
 48634 ;; Registers used:
 48635 ;;		wreg, status,2, status,0, btemp, btemp+1
 48636 ;; Tracked objects:
 48637 ;;		On entry : 3F/2
 48638 ;;		On exit  : 0/0
 48639 ;;		Unchanged: 0/0
 48640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 48641 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48642 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48643 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48644 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48645 ;;Total ram usage:        0 bytes
 48646 ;; Hardware stack levels used:    1
 48647 ;; Hardware stack levels required when called:    3
 48648 ;; This function calls:
 48649 ;;		Nothing
 48650 ;; This function is called by:
 48651 ;;		_calc_bsoc
 48652 ;; This function uses a reentrant model
 48653 ;;
 48654                           
 48655                           	psect	text202
 48656  0026C0                     __ptext202:
 48657                           	opt callstack 0
 48658  0026C0                     _port_data_dma_ptr:
 48659                           	opt callstack 11
 48660                           
 48661                           ;eadog.c: 414:  return port_data;
 48662                           
 48663                           ; BSR set to: 59
 48664                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 48665                           ;incstack = 0
 48666  0026C0  0EFF               	movlw	low _port_data
 48667  0026C2  6E2A               	movwf	btemp^0,c
 48668  0026C4  0E06               	movlw	high _port_data
 48669  0026C6  6E2B               	movwf	(btemp+1)^0,c
 48670                           
 48671                           ; _port_data_dma_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 48672  0026C8  0012               	return		;funcret
 48673  0026CA                     __end_of_port_data_dma_ptr:
 48674                           	opt callstack 0
 48675                           
 48676 ;; *************** function ___asfladd *****************
 48677 ;; Defined at:
 48678 ;;		line 6 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/pic18/asfladd.c"
 48679 ;; Parameters:    Size  Location     Type
 48680 ;;  f1p             2  [STACK] PTR 
 48681 ;;		 -> C(320), 
 48682 ;;  f2              4  [STACK] PTR 
 48683 ;; Auto vars:     Size  Location     Type
 48684 ;;		None
 48685 ;; Return value:  Size  Location     Type
 48686 ;;                  4  [STACK] PTR 
 48687 ;; Registers used:
 48688 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 48689 ;; Tracked objects:
 48690 ;;		On entry : 0/0
 48691 ;;		On exit  : 0/0
 48692 ;;		Unchanged: 0/0
 48693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 48694 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48695 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48697 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48698 ;;Total ram usage:        0 bytes
 48699 ;; Hardware stack levels used:    1
 48700 ;; Hardware stack levels required when called:    4
 48701 ;; This function calls:
 48702 ;;		___fladd
 48703 ;; This function is called by:
 48704 ;;		_calc_bsoc
 48705 ;; This function uses a reentrant model
 48706 ;;
 48707                           
 48708                           	psect	text203
 48709  0010B0                     __ptext203:
 48710                           	opt callstack 0
 48711  0010B0                     ___asfladd:
 48712                           	opt callstack 10
 48713                           
 48714                           ;	Return value of ___asfladd is never used
 48715                           ;stkvar	_f2 @ sp[(0)+-6]
 48716                           
 48717                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 48718                           ;incstack = 0
 48719  0010B0  0EFA               	movlw	-6
 48720  0010B2  006F FF8F FFE6     	movff	plusw1,postinc1
 48721  0010B8  006F FF8F FFE6     	movff	plusw1,postinc1
 48722  0010BE  006F FF8F FFE6     	movff	plusw1,postinc1
 48723  0010C4  006F FF8F FFE6     	movff	plusw1,postinc1
 48724                           
 48725                           ;stkvar	_f1p @ sp[(-4)+-2]
 48726  0010CA  0EFA               	movlw	-6
 48727  0010CC  006F FF8F FFD9     	movff	plusw1,fsr2l
 48728  0010D2  0EFB               	movlw	-5
 48729  0010D4  006F FF8F FFDA     	movff	plusw1,fsr2h
 48730  0010DA  006F FF7B FFE6     	movff	postinc2,postinc1
 48731  0010E0  006F FF7B FFE6     	movff	postinc2,postinc1
 48732  0010E6  006F FF7B FFE6     	movff	postinc2,postinc1
 48733  0010EC  006F FF7B FFE6     	movff	postinc2,postinc1
 48734  0010F2  EC62  F0B6         	call	___fladd	;wreg free
 48735                           
 48736                           ;stkvar	_f1p @ sp[(0)+-2]
 48737  0010F6  0EFE               	movlw	-2
 48738  0010F8  006F FF8F FFD9     	movff	plusw1,fsr2l
 48739  0010FE  0EFF               	movlw	-1
 48740  001100  006F FF8F FFDA     	movff	plusw1,fsr2h
 48741  001106  0060  F0AB  FFDE   	movff	btemp,postinc2
 48742  00110C  0060  F0AF  FFDE   	movff	btemp+1,postinc2
 48743  001112  0060  F0B3  FFDE   	movff	btemp+2,postinc2
 48744  001118  0060  F0B7  FFDE   	movff	btemp+3,postinc2
 48745                           
 48746                           ; ___asfladd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
 48747  00111E  0EFA               	movlw	250
 48748  001120  26E1               	addwf	fsr1l,f,c
 48749  001122  0EFF               	movlw	255
 48750  001124  22E2               	addwfc	fsr1h,f,c
 48751  001126  0012               	return		;funcret
 48752  001128                     __end_of___asfladd:
 48753                           	opt callstack 0
 48754                           
 48755 ;; *************** function _INT0_ISR *****************
 48756 ;; Defined at:
 48757 ;;		line 36 in file "mcc_generated_files/ext_int.c"
 48758 ;; Parameters:    Size  Location     Type
 48759 ;;		None
 48760 ;; Auto vars:     Size  Location     Type
 48761 ;;		None
 48762 ;; Return value:  Size  Location     Type
 48763 ;;                  1    wreg      void 
 48764 ;; Registers used:
 48765 ;;		wreg, status,2, status,0, pclath, tosl
 48766 ;; Tracked objects:
 48767 ;;		On entry : 0/0
 48768 ;;		On exit  : 0/0
 48769 ;;		Unchanged: 0/0
 48770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 48771 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48772 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48773 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48774 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48775 ;;Total ram usage:        0 bytes
 48776 ;; Hardware stack levels used:    1
 48777 ;; Hardware stack levels required when called:    2
 48778 ;; This function calls:
 48779 ;;		_INT0_CallBack
 48780 ;; This function is called by:
 48781 ;;		Interrupt level 2
 48782 ;; This function uses a non-reentrant model
 48783 ;;
 48784                           
 48785                           	psect	text204
 48786  002698                     __ptext204:
 48787                           	opt callstack 0
 48788  002698                     _INT0_ISR:
 48789                           	opt callstack 3
 48790                           
 48791                           ;incstack = 0
 48792  002698  EE14  F32C         	lfsr	1,___inthi_sp
 48793                           
 48794                           ;mcc_generated_files/ext_int.c: 38:  (PIR1bits.INT0IF = 0);
 48795  00269C  0139               	movlb	57	; () banked
 48796  00269E  91A1               	bcf	161,0,b	;volatile
 48797                           
 48798                           ; BSR set to: 57
 48799                           ;mcc_generated_files/ext_int.c: 41:  INT0_CallBack();
 48800  0026A0  ECD0  F011         	call	_INT0_CallBack	;wreg free
 48801  0026A4  0011               	retfie		f
 48802  0026A6                     __end_of_INT0_ISR:
 48803                           	opt callstack 0
 48804                           
 48805 ;; *************** function _INT0_CallBack *****************
 48806 ;; Defined at:
 48807 ;;		line 44 in file "mcc_generated_files/ext_int.c"
 48808 ;; Parameters:    Size  Location     Type
 48809 ;;		None
 48810 ;; Auto vars:     Size  Location     Type
 48811 ;;		None
 48812 ;; Return value:  Size  Location     Type
 48813 ;;                  1  [STACK] void 
 48814 ;; Registers used:
 48815 ;;		wreg, status,2, status,0, pclath, tosl
 48816 ;; Tracked objects:
 48817 ;;		On entry : 3F/39
 48818 ;;		On exit  : 0/0
 48819 ;;		Unchanged: 0/0
 48820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 48821 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48822 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48823 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48824 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48825 ;;Total ram usage:        0 bytes
 48826 ;; Hardware stack levels used:    1
 48827 ;; Hardware stack levels required when called:    1
 48828 ;; This function calls:
 48829 ;;		Absolute function
 48830 ;;		_INT0_DefaultInterruptHandler
 48831 ;; This function is called by:
 48832 ;;		_INT0_ISR
 48833 ;; This function uses a reentrant model
 48834 ;;
 48835                           
 48836                           	psect	text205
 48837  0023A0                     __ptext205:
 48838                           	opt callstack 0
 48839  0023A0                     _INT0_CallBack:
 48840                           	opt callstack 3
 48841                           
 48842                           ;mcc_generated_files/ext_int.c: 47:  if (INT0_InterruptHandler) {
 48843                           
 48844                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 48845                           ;incstack = 0
 48846  0023A0  0100               	movlb	0	; () banked
 48847  0023A2  51B3               	movf	_INT0_InterruptHandler& (0+255),w,b
 48848  0023A4  11B4               	iorwf	(_INT0_InterruptHandler+1)& (0+255),w,b
 48849  0023A6  11B5               	iorwf	(_INT0_InterruptHandler+2)& (0+255),w,b
 48850  0023A8  B4D8               	btfsc	status,2,c
 48851  0023AA  0012               	return	
 48852                           
 48853                           ; BSR set to: 0
 48854                           ;mcc_generated_files/ext_int.c: 48:   INT0_InterruptHandler();
 48855  0023AC  D801               	call	u1308_48
 48856  0023AE  0012               	return	
 48857  0023B0                     u1308_48:
 48858  0023B0  0005               	push	
 48859  0023B2  6EFA               	movwf	pclath,c
 48860  0023B4  51B3               	movf	_INT0_InterruptHandler& (0+255),w,b
 48861  0023B6  6EFD               	movwf	tosl,c
 48862  0023B8  51B4               	movf	(_INT0_InterruptHandler+1)& (0+255),w,b
 48863  0023BA  6EFE               	movwf	tosh,c
 48864  0023BC  51B5               	movf	(_INT0_InterruptHandler+2)& (0+255),w,b
 48865  0023BE  6EFF               	movwf	tosu,c
 48866  0023C0  50FA               	movf	pclath,w,c
 48867  0023C2  0012               	return		;indir
 48868  0023C4                     __end_of_INT0_CallBack:
 48869                           	opt callstack 0
 48870                           
 48871 ;; *************** function _INT0_DefaultInterruptHandler *****************
 48872 ;; Defined at:
 48873 ;;		line 57 in file "mcc_generated_files/ext_int.c"
 48874 ;; Parameters:    Size  Location     Type
 48875 ;;		None
 48876 ;; Auto vars:     Size  Location     Type
 48877 ;;		None
 48878 ;; Return value:  Size  Location     Type
 48879 ;;                  1  [STACK] void 
 48880 ;; Registers used:
 48881 ;;		None
 48882 ;; Tracked objects:
 48883 ;;		On entry : 3F/0
 48884 ;;		On exit  : 0/0
 48885 ;;		Unchanged: 0/0
 48886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 48887 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48888 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48889 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48890 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48891 ;;Total ram usage:        0 bytes
 48892 ;; Hardware stack levels used:    1
 48893 ;; This function calls:
 48894 ;;		Nothing
 48895 ;; This function is called by:
 48896 ;;		_EXT_INT_Initialize
 48897 ;;		_INT0_CallBack
 48898 ;; This function uses a reentrant model
 48899 ;;
 48900                           
 48901                           	psect	text206
 48902  002746                     __ptext206:
 48903                           	opt callstack 0
 48904  002746                     _INT0_DefaultInterruptHandler:
 48905                           	opt callstack 3
 48906                           
 48907                           ; _INT0_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 48908                           
 48909                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 48910                           ;incstack = 0
 48911  002746  0012               	return		;funcret
 48912  002748                     __end_of_INT0_DefaultInterruptHandler:
 48913                           	opt callstack 0
 48914                           
 48915 ;; *************** function _Default_ISR *****************
 48916 ;; Defined at:
 48917 ;;		line 88 in file "mcc_generated_files/interrupt_manager.c"
 48918 ;; Parameters:    Size  Location     Type
 48919 ;;		None
 48920 ;; Auto vars:     Size  Location     Type
 48921 ;;		None
 48922 ;; Return value:  Size  Location     Type
 48923 ;;                  1    wreg      void 
 48924 ;; Registers used:
 48925 ;;		None
 48926 ;; Tracked objects:
 48927 ;;		On entry : 0/0
 48928 ;;		On exit  : 0/0
 48929 ;;		Unchanged: 0/0
 48930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 48931 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48932 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48933 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48934 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48935 ;;Total ram usage:        0 bytes
 48936 ;; Hardware stack levels used:    1
 48937 ;; This function calls:
 48938 ;;		Nothing
 48939 ;; This function is called by:
 48940 ;;		Interrupt level 2
 48941 ;; This function uses a non-reentrant model
 48942 ;;
 48943                           
 48944                           	psect	text207
 48945  00273C                     __ptext207:
 48946                           	opt callstack 0
 48947  00273C                     _Default_ISR:
 48948                           	opt callstack 5
 48949                           
 48950                           ;incstack = 0
 48951  00273C  EE14  F32C         	lfsr	1,___inthi_sp
 48952  002740  0011               	retfie		f
 48953  002742                     __end_of_Default_ISR:
 48954                           	opt callstack 0
 48955                           
 48956 ;; *************** function _ADCC_ISR *****************
 48957 ;; Defined at:
 48958 ;;		line 314 in file "mcc_generated_files/adcc.c"
 48959 ;; Parameters:    Size  Location     Type
 48960 ;;		None
 48961 ;; Auto vars:     Size  Location     Type
 48962 ;;		None
 48963 ;; Return value:  Size  Location     Type
 48964 ;;                  1    wreg      void 
 48965 ;; Registers used:
 48966 ;;		wreg, status,2, status,0, pclath, tosl
 48967 ;; Tracked objects:
 48968 ;;		On entry : 0/0
 48969 ;;		On exit  : 0/0
 48970 ;;		Unchanged: 0/0
 48971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 48972 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48973 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48974 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48975 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48976 ;;Total ram usage:        0 bytes
 48977 ;; Hardware stack levels used:    1
 48978 ;; Hardware stack levels required when called:    1
 48979 ;; This function calls:
 48980 ;;		Absolute function
 48981 ;;		_ADCC_DefaultInterruptHandler
 48982 ;;		_adc_int_handler
 48983 ;; This function is called by:
 48984 ;;		Interrupt level 2
 48985 ;; This function uses a non-reentrant model
 48986 ;;
 48987                           
 48988                           	psect	text208
 48989  002034                     __ptext208:
 48990                           	opt callstack 0
 48991  002034                     _ADCC_ISR:
 48992                           	opt callstack 4
 48993                           
 48994                           ;incstack = 0
 48995  002034  EE14  F32C         	lfsr	1,___inthi_sp
 48996                           
 48997                           ;mcc_generated_files/adcc.c: 317:     PIR1bits.ADIF = 0;
 48998  002038  0139               	movlb	57	; () banked
 48999  00203A  95A1               	bcf	161,2,b	;volatile
 49000                           
 49001                           ; BSR set to: 57
 49002                           ;mcc_generated_files/adcc.c: 319:     if (ADCC_ADI_InterruptHandler)
 49003  00203C  0100               	movlb	0	; () banked
 49004  00203E  51A4               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 49005  002040  11A5               	iorwf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 49006  002042  11A6               	iorwf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 49007  002044  B4D8               	btfsc	status,2,c
 49008  002046  0011               	retfie		f
 49009                           
 49010                           ; BSR set to: 0
 49011                           ;mcc_generated_files/adcc.c: 320:             ADCC_ADI_InterruptHandler();
 49012  002048  D801               	call	i2u1373_48
 49013  00204A  0011               	retfie		f
 49014  00204C                     i2u1373_48:
 49015  00204C  0005               	push	
 49016  00204E  6EFA               	movwf	pclath,c
 49017  002050  51A4               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 49018  002052  6EFD               	movwf	tosl,c
 49019  002054  51A5               	movf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 49020  002056  6EFE               	movwf	tosh,c
 49021  002058  51A6               	movf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 49022  00205A  6EFF               	movwf	tosu,c
 49023  00205C  50FA               	movf	pclath,w,c
 49024  00205E  0012               	return		;indir
 49025  002060                     __end_of_ADCC_ISR:
 49026                           	opt callstack 0
 49027                           
 49028 ;; *************** function _adc_int_t_handler *****************
 49029 ;; Defined at:
 49030 ;;		line 183 in file "daq.c"
 49031 ;; Parameters:    Size  Location     Type
 49032 ;;		None
 49033 ;; Auto vars:     Size  Location     Type
 49034 ;;		None
 49035 ;; Return value:  Size  Location     Type
 49036 ;;                  1  [STACK] void 
 49037 ;; Registers used:
 49038 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+11, prodl, prodh
 49039 ;; Tracked objects:
 49040 ;;		On entry : 3F/0
 49041 ;;		On exit  : 0/0
 49042 ;;		Unchanged: 0/0
 49043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 49044 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49045 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49046 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49047 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49048 ;;Total ram usage:        0 bytes
 49049 ;; Hardware stack levels used:    1
 49050 ;; Hardware stack levels required when called:    1
 49051 ;; This function calls:
 49052 ;;		_ADCC_DischargeSampleCapacitor
 49053 ;;		_ADCC_StartConversion
 49054 ;; This function is called by:
 49055 ;;		_start_adc_scan
 49056 ;;		_ADCC_ThresholdISR
 49057 ;; This function uses a reentrant model
 49058 ;;
 49059                           
 49060                           	psect	text209
 49061  000EB8                     __ptext209:
 49062                           	opt callstack 0
 49063  000EB8                     _adc_int_t_handler:
 49064                           	opt callstack 3
 49065                           
 49066                           ;daq.c: 188:  R.raw_adc[R.scan_index] = ((adc_result_t) ((ADFLTRH << 8) + ADFLTRL));
 49067                           
 49068                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 49069                           ;incstack = 0
 49070  000EB8  013E               	movlb	62	; () banked
 49071  000EBA  51E6               	movf	230,w,b	;volatile
 49072  000EBC  006F FB9C  F02A    	movff	16103,btemp	;volatile
 49073  000EC2  6A2B               	clrf	(btemp+1)^0,c
 49074  000EC4  0060  F0A8  F02B   	movff	btemp,btemp+1
 49075  000ECA  6A2A               	clrf	btemp^0,c
 49076  000ECC  262A               	addwf	btemp^0,f,c
 49077  000ECE  0E00               	movlw	0
 49078  000ED0  222B               	addwfc	(btemp+1)^0,f,c
 49079  000ED2  0101               	movlb	1	; () banked
 49080  000ED4  5132               	movf	(_R+50)& (0+255),w,b	;volatile
 49081  000ED6  0D02               	mullw	2
 49082  000ED8  0E00               	movlw	low _R
 49083  000EDA  24F3               	addwf	243,w,c
 49084  000EDC  6ED9               	movwf	fsr2l,c
 49085  000EDE  0E01               	movlw	high _R
 49086  000EE0  20F4               	addwfc	prodh,w,c
 49087  000EE2  6EDA               	movwf	fsr2h,c
 49088  000EE4  0060  F0AB  FFDE   	movff	btemp,postinc2
 49089  000EEA  0060  F0AF  FFDD   	movff	btemp+1,postdec2
 49090  000EF0                     l14558:
 49091                           
 49092                           ;daq.c: 190:   if (++R.scan_index > 0XD) {
 49093  000EF0  0101               	movlb	1	; () banked
 49094  000EF2  2B32               	incf	(_R+50)& (0+255),f,b	;volatile
 49095  000EF4  0E0D               	movlw	13
 49096  000EF6  6532               	cpfsgt	(_R+50)& (0+255),b	;volatile
 49097  000EF8  D003               	goto	l14564
 49098                           
 49099                           ; BSR set to: 1
 49100                           ;daq.c: 191:    R.done = 1;
 49101  000EFA  0E01               	movlw	1
 49102  000EFC  6F35               	movwf	(_R+53)& (0+255),b	;volatile
 49103  000EFE  0012               	return	
 49104  000F00                     l14564:
 49105                           
 49106                           ; BSR set to: 1
 49107                           ;daq.c: 197:  } while (!((R.scan_select >> R.scan_index) &0x1));
 49108  000F00  0060  F4C8  F035   	movff	_R+50,btemp+11	;volatile
 49109  000F06  EE20  F133         	lfsr	2,_R+51	;volatile
 49110  000F0A  006F FF78  F032    	movff	postinc2,btemp+8
 49111  000F10  006F FF74  F033    	movff	postdec2,btemp+9
 49112  000F16  2A35               	incf	(btemp+11)^0,f,c
 49113  000F18  D003               	goto	u1370_44
 49114  000F1A                     u1370_45:
 49115  000F1A  90D8               	bcf	status,0,c
 49116  000F1C  3233               	rrcf	(btemp+9)^0,f,c
 49117  000F1E  3232               	rrcf	(btemp+8)^0,f,c
 49118  000F20                     u1370_44:
 49119  000F20  2E35               	decfsz	(btemp+11)^0,f,c
 49120  000F22  D7FB               	goto	u1370_45
 49121  000F24  A032               	btfss	(btemp+8)^0,0,c
 49122  000F26  D7E4               	goto	l14558
 49123                           
 49124                           ;daq.c: 198:  ADCC_DischargeSampleCapacitor();
 49125  000F28  EC7B  F013         	call	_ADCC_DischargeSampleCapacitor	;wreg free
 49126                           
 49127                           ; BSR set to: 62
 49128                           ;daq.c: 199:  ADCC_StartConversion(R.scan_index & 0xf);
 49129  000F2C  0101               	movlb	1	; () banked
 49130  000F2E  5132               	movf	(_R+50)& (0+255),w,b	;volatile
 49131  000F30  0B0F               	andlw	15
 49132  000F32  6EE6               	movwf	postinc1,c
 49133  000F34  EC06  F013         	call	_ADCC_StartConversion	;wreg free
 49134                           
 49135                           ; _adc_int_t_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 49136  000F38  0012               	return		;funcret
 49137  000F3A                     __end_of_adc_int_t_handler:
 49138                           	opt callstack 0
 49139                           
 49140 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 49141 ;; Defined at:
 49142 ;;		line 339 in file "mcc_generated_files/adcc.c"
 49143 ;; Parameters:    Size  Location     Type
 49144 ;;		None
 49145 ;; Auto vars:     Size  Location     Type
 49146 ;;		None
 49147 ;; Return value:  Size  Location     Type
 49148 ;;                  1  [STACK] void 
 49149 ;; Registers used:
 49150 ;;		None
 49151 ;; Tracked objects:
 49152 ;;		On entry : 3F/0
 49153 ;;		On exit  : 0/0
 49154 ;;		Unchanged: 0/0
 49155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 49156 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49157 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49158 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49159 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49160 ;;Total ram usage:        0 bytes
 49161 ;; Hardware stack levels used:    1
 49162 ;; This function calls:
 49163 ;;		Nothing
 49164 ;; This function is called by:
 49165 ;;		_ADCC_Initialize
 49166 ;;		_ADCC_ISR
 49167 ;;		_ADCC_ThresholdISR
 49168 ;; This function uses a reentrant model
 49169 ;;
 49170                           
 49171                           	psect	text210
 49172  002748                     __ptext210:
 49173                           	opt callstack 0
 49174  002748                     _ADCC_DefaultInterruptHandler:
 49175                           	opt callstack 4
 49176                           
 49177                           ; _ADCC_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 49178                           
 49179                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 49180                           ;incstack = 0
 49181  002748  0012               	return		;funcret
 49182  00274A                     __end_of_ADCC_DefaultInterruptHandler:
 49183                           	opt callstack 0
 49184                           
 49185 ;; *************** function _adc_int_handler *****************
 49186 ;; Defined at:
 49187 ;;		line 173 in file "daq.c"
 49188 ;; Parameters:    Size  Location     Type
 49189 ;;		None
 49190 ;; Auto vars:     Size  Location     Type
 49191 ;;		None
 49192 ;; Return value:  Size  Location     Type
 49193 ;;                  1  [STACK] void 
 49194 ;; Registers used:
 49195 ;;		None
 49196 ;; Tracked objects:
 49197 ;;		On entry : 3F/0
 49198 ;;		On exit  : 0/0
 49199 ;;		Unchanged: 0/0
 49200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 49201 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49202 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49203 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49204 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49205 ;;Total ram usage:        0 bytes
 49206 ;; Hardware stack levels used:    1
 49207 ;; This function calls:
 49208 ;;		Nothing
 49209 ;; This function is called by:
 49210 ;;		_start_adc_scan
 49211 ;;		_ADCC_ISR
 49212 ;; This function uses a reentrant model
 49213 ;;
 49214                           
 49215                           	psect	text211
 49216  00274A                     __ptext211:
 49217                           	opt callstack 0
 49218  00274A                     _adc_int_handler:
 49219                           	opt callstack 4
 49220                           
 49221                           ; _adc_int_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 49222                           
 49223                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 49224                           ;incstack = 0
 49225  00274A  0012               	return		;funcret
 49226  00274C                     __end_of_adc_int_handler:
 49227                           	opt callstack 0
 49228                           
 49229 ;; *************** function _ADCC_ThresholdISR *****************
 49230 ;; Defined at:
 49231 ;;		line 327 in file "mcc_generated_files/adcc.c"
 49232 ;; Parameters:    Size  Location     Type
 49233 ;;		None
 49234 ;; Auto vars:     Size  Location     Type
 49235 ;;		None
 49236 ;; Return value:  Size  Location     Type
 49237 ;;                  1    wreg      void 
 49238 ;; Registers used:
 49239 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+8, btemp+9, btemp+11, tosl, prod
      +l, prodh
 49240 ;; Tracked objects:
 49241 ;;		On entry : 0/0
 49242 ;;		On exit  : 0/0
 49243 ;;		Unchanged: 0/0
 49244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 49245 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49246 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49247 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49248 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49249 ;;Total ram usage:        5 bytes
 49250 ;; Hardware stack levels used:    1
 49251 ;; Hardware stack levels required when called:    2
 49252 ;; This function calls:
 49253 ;;		Absolute function
 49254 ;;		_ADCC_DefaultInterruptHandler
 49255 ;;		_adc_int_t_handler
 49256 ;; This function is called by:
 49257 ;;		Interrupt level 2
 49258 ;; This function uses a non-reentrant model
 49259 ;;
 49260                           
 49261                           	psect	text212
 49262  001270                     __ptext212:
 49263                           	opt callstack 0
 49264  001270                     _ADCC_ThresholdISR:
 49265                           	opt callstack 3
 49266                           
 49267                           ;incstack = 0
 49268  001270  0060  F0A8  F001   	movff	btemp,??_ADCC_ThresholdISR
 49269  001276  0060  F0AC  F002   	movff	btemp+1,??_ADCC_ThresholdISR+1
 49270  00127C  0060  F0C8  F003   	movff	btemp+8,??_ADCC_ThresholdISR+2
 49271  001282  0060  F0CC  F004   	movff	btemp+9,??_ADCC_ThresholdISR+3
 49272  001288  0060  F0D4  F005   	movff	btemp+11,??_ADCC_ThresholdISR+4
 49273  00128E  EE14  F32C         	lfsr	1,___inthi_sp
 49274                           
 49275                           ;mcc_generated_files/adcc.c: 330:     PIR1bits.ADTIF = 0;
 49276  001292  0139               	movlb	57	; () banked
 49277  001294  97A1               	bcf	161,3,b	;volatile
 49278                           
 49279                           ; BSR set to: 57
 49280                           ;mcc_generated_files/adcc.c: 332:     if (ADCC_ADTI_InterruptHandler)
 49281  001296  0100               	movlb	0	; () banked
 49282  001298  51A1               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 49283  00129A  11A2               	iorwf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 49284  00129C  11A3               	iorwf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 49285  00129E  B4D8               	btfsc	status,2,c
 49286  0012A0  D00C               	goto	i2u1375_49
 49287                           
 49288                           ; BSR set to: 0
 49289                           ;mcc_generated_files/adcc.c: 333:         ADCC_ADTI_InterruptHandler();
 49290  0012A2  D801               	call	i2u1375_48
 49291  0012A4  D00A               	goto	i2u1375_49
 49292  0012A6                     i2u1375_48:
 49293  0012A6  0005               	push	
 49294  0012A8  6EFA               	movwf	pclath,c
 49295  0012AA  51A1               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 49296  0012AC  6EFD               	movwf	tosl,c
 49297  0012AE  51A2               	movf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 49298  0012B0  6EFE               	movwf	tosh,c
 49299  0012B2  51A3               	movf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 49300  0012B4  6EFF               	movwf	tosu,c
 49301  0012B6  50FA               	movf	pclath,w,c
 49302  0012B8  0012               	return		;indir
 49303  0012BA                     i2u1375_49:
 49304  0012BA  0060  F014  F035   	movff	??_ADCC_ThresholdISR+4,btemp+11
 49305  0012C0  0060  F010  F033   	movff	??_ADCC_ThresholdISR+3,btemp+9
 49306  0012C6  0060  F00C  F032   	movff	??_ADCC_ThresholdISR+2,btemp+8
 49307  0012CC  0060  F008  F02B   	movff	??_ADCC_ThresholdISR+1,btemp+1
 49308  0012D2  0060  F004  F02A   	movff	??_ADCC_ThresholdISR,btemp
 49309  0012D8  0011               	retfie		f
 49310  0012DA                     __end_of_ADCC_ThresholdISR:
 49311                           	opt callstack 0
 49312                           
 49313 ;; *************** function _UART1_rx_vect_isr *****************
 49314 ;; Defined at:
 49315 ;;		line 181 in file "mcc_generated_files/uart1.c"
 49316 ;; Parameters:    Size  Location     Type
 49317 ;;		None
 49318 ;; Auto vars:     Size  Location     Type
 49319 ;;		None
 49320 ;; Return value:  Size  Location     Type
 49321 ;;                  1    wreg      void 
 49322 ;; Registers used:
 49323 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 49324 ;; Tracked objects:
 49325 ;;		On entry : 0/0
 49326 ;;		On exit  : 0/0
 49327 ;;		Unchanged: 0/0
 49328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 49329 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49330 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49331 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49332 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49333 ;;Total ram usage:        0 bytes
 49334 ;; Hardware stack levels used:    1
 49335 ;; Hardware stack levels required when called:    1
 49336 ;; This function calls:
 49337 ;;		Absolute function
 49338 ;;		_UART1_Receive_ISR
 49339 ;; This function is called by:
 49340 ;;		Interrupt level 2
 49341 ;; This function uses a non-reentrant model
 49342 ;;
 49343                           
 49344                           	psect	text213
 49345  002298                     __ptext213:
 49346                           	opt callstack 0
 49347  002298                     _UART1_rx_vect_isr:
 49348                           	opt callstack 4
 49349                           
 49350                           ;incstack = 0
 49351  002298  EE14  F32C         	lfsr	1,___inthi_sp
 49352                           
 49353                           ;mcc_generated_files/uart1.c: 183:     if(UART1_RxInterruptHandler)
 49354  00229C  0100               	movlb	0	; () banked
 49355  00229E  51A7               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 49356  0022A0  11A8               	iorwf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 49357  0022A2  11A9               	iorwf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 49358  0022A4  B4D8               	btfsc	status,2,c
 49359  0022A6  0011               	retfie		f
 49360                           
 49361                           ; BSR set to: 0
 49362                           ;mcc_generated_files/uart1.c: 184: {;mcc_generated_files/uart1.c: 185:   UART1_RxInterru
      +                          ptHandler();
 49363  0022A8  D801               	call	i2u1377_48
 49364  0022AA  0011               	retfie		f
 49365  0022AC                     i2u1377_48:
 49366  0022AC  0005               	push	
 49367  0022AE  6EFA               	movwf	pclath,c
 49368  0022B0  51A7               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 49369  0022B2  6EFD               	movwf	tosl,c
 49370  0022B4  51A8               	movf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 49371  0022B6  6EFE               	movwf	tosh,c
 49372  0022B8  51A9               	movf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 49373  0022BA  6EFF               	movwf	tosu,c
 49374  0022BC  50FA               	movf	pclath,w,c
 49375  0022BE  0012               	return		;indir
 49376  0022C0                     __end_of_UART1_rx_vect_isr:
 49377                           	opt callstack 0
 49378                           
 49379 ;; *************** function _UART1_Receive_ISR *****************
 49380 ;; Defined at:
 49381 ;;		line 192 in file "mcc_generated_files/uart1.c"
 49382 ;; Parameters:    Size  Location     Type
 49383 ;;		None
 49384 ;; Auto vars:     Size  Location     Type
 49385 ;;		None
 49386 ;; Return value:  Size  Location     Type
 49387 ;;                  1  [STACK] void 
 49388 ;; Registers used:
 49389 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 49390 ;; Tracked objects:
 49391 ;;		On entry : 3F/0
 49392 ;;		On exit  : 3F/0
 49393 ;;		Unchanged: 0/0
 49394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 49395 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49396 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49397 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49398 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49399 ;;Total ram usage:        0 bytes
 49400 ;; Hardware stack levels used:    1
 49401 ;; This function calls:
 49402 ;;		Nothing
 49403 ;; This function is called by:
 49404 ;;		_UART1_Initialize
 49405 ;;		_UART1_rx_vect_isr
 49406 ;; This function uses a reentrant model
 49407 ;;
 49408                           
 49409                           	psect	text214
 49410  00244E                     __ptext214:
 49411                           	opt callstack 0
 49412  00244E                     _UART1_Receive_ISR:
 49413                           	opt callstack 4
 49414                           
 49415                           ;mcc_generated_files/uart1.c: 195:  uart1RxBuffer[uart1RxHead++] = U1RXB;
 49416                           
 49417                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 49418                           ;incstack = 0
 49419  00244E  0ED6               	movlw	low _uart1RxBuffer
 49420  002450  2457               	addwf	_uart1RxHead^0,w,c	;volatile
 49421  002452  6ED9               	movwf	fsr2l,c
 49422  002454  6ADA               	clrf	fsr2h,c
 49423  002456  0E02               	movlw	high _uart1RxBuffer
 49424  002458  22DA               	addwfc	fsr2h,f,c
 49425  00245A  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 49426  002460  2A57               	incf	_uart1RxHead^0,f,c	;volatile
 49427                           
 49428                           ;mcc_generated_files/uart1.c: 196:     if(sizeof(uart1RxBuffer) <= uart1RxHead)
 49429  002462  0E07               	movlw	7
 49430  002464  6457               	cpfsgt	_uart1RxHead^0,c
 49431  002466  D001               	goto	l13882
 49432                           
 49433                           ;mcc_generated_files/uart1.c: 197:     {;mcc_generated_files/uart1.c: 198:   uart1RxHead
      +                           = 0;
 49434  002468  6A57               	clrf	_uart1RxHead^0,c	;volatile
 49435  00246A                     l13882:
 49436                           
 49437                           ;mcc_generated_files/uart1.c: 200:  uart1RxCount++;
 49438  00246A  0100               	movlb	0	; () banked
 49439  00246C  2BD0               	incf	_uart1RxCount& (0+255),f,b	;volatile
 49440                           
 49441                           ; BSR set to: 0
 49442                           ; _UART1_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 49443  00246E  0012               	return		;funcret
 49444  002470                     __end_of_UART1_Receive_ISR:
 49445                           	opt callstack 0
 49446                           
 49447 ;; *************** function _UART2_tx_vect_isr *****************
 49448 ;; Defined at:
 49449 ;;		line 195 in file "mcc_generated_files/uart2.c"
 49450 ;; Parameters:    Size  Location     Type
 49451 ;;		None
 49452 ;; Auto vars:     Size  Location     Type
 49453 ;;		None
 49454 ;; Return value:  Size  Location     Type
 49455 ;;                  1    wreg      void 
 49456 ;; Registers used:
 49457 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 49458 ;; Tracked objects:
 49459 ;;		On entry : 0/0
 49460 ;;		On exit  : 0/0
 49461 ;;		Unchanged: 0/0
 49462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 49463 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49464 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49465 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49466 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49467 ;;Total ram usage:        0 bytes
 49468 ;; Hardware stack levels used:    1
 49469 ;; Hardware stack levels required when called:    1
 49470 ;; This function calls:
 49471 ;;		Absolute function
 49472 ;;		_UART2_Transmit_ISR
 49473 ;; This function is called by:
 49474 ;;		Interrupt level 2
 49475 ;; This function uses a non-reentrant model
 49476 ;;
 49477                           
 49478                           	psect	text215
 49479  0022C0                     __ptext215:
 49480                           	opt callstack 0
 49481  0022C0                     _UART2_tx_vect_isr:
 49482                           	opt callstack 4
 49483                           
 49484                           ; BSR set to: 0
 49485                           ;incstack = 0
 49486  0022C0  EE14  F32C         	lfsr	1,___inthi_sp
 49487                           
 49488                           ;mcc_generated_files/uart2.c: 197:     if(UART2_TxInterruptHandler)
 49489  0022C4  0100               	movlb	0	; () banked
 49490  0022C6  51AA               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 49491  0022C8  11AB               	iorwf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 49492  0022CA  11AC               	iorwf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 49493  0022CC  B4D8               	btfsc	status,2,c
 49494  0022CE  0011               	retfie		f
 49495                           
 49496                           ; BSR set to: 0
 49497                           ;mcc_generated_files/uart2.c: 198:     {;mcc_generated_files/uart2.c: 199:         UART2
      +                          _TxInterruptHandler();
 49498  0022D0  D801               	call	i2u1379_48
 49499  0022D2  0011               	retfie		f
 49500  0022D4                     i2u1379_48:
 49501  0022D4  0005               	push	
 49502  0022D6  6EFA               	movwf	pclath,c
 49503  0022D8  51AA               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 49504  0022DA  6EFD               	movwf	tosl,c
 49505  0022DC  51AB               	movf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 49506  0022DE  6EFE               	movwf	tosh,c
 49507  0022E0  51AC               	movf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 49508  0022E2  6EFF               	movwf	tosu,c
 49509  0022E4  50FA               	movf	pclath,w,c
 49510  0022E6  0012               	return		;indir
 49511  0022E8                     __end_of_UART2_tx_vect_isr:
 49512                           	opt callstack 0
 49513                           
 49514 ;; *************** function _UART2_Transmit_ISR *****************
 49515 ;; Defined at:
 49516 ;;		line 213 in file "mcc_generated_files/uart2.c"
 49517 ;; Parameters:    Size  Location     Type
 49518 ;;		None
 49519 ;; Auto vars:     Size  Location     Type
 49520 ;;		None
 49521 ;; Return value:  Size  Location     Type
 49522 ;;                  1  [STACK] void 
 49523 ;; Registers used:
 49524 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 49525 ;; Tracked objects:
 49526 ;;		On entry : 3F/0
 49527 ;;		On exit  : 3B/39
 49528 ;;		Unchanged: 0/0
 49529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 49530 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49531 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49532 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49533 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49534 ;;Total ram usage:        0 bytes
 49535 ;; Hardware stack levels used:    1
 49536 ;; This function calls:
 49537 ;;		Nothing
 49538 ;; This function is called by:
 49539 ;;		_UART2_Initialize
 49540 ;;		_UART2_tx_vect_isr
 49541 ;; This function uses a reentrant model
 49542 ;;
 49543                           
 49544                           	psect	text216
 49545  002060                     __ptext216:
 49546                           	opt callstack 0
 49547  002060                     _UART2_Transmit_ISR:
 49548                           	opt callstack 4
 49549                           
 49550                           ;mcc_generated_files/uart2.c: 216:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
 49551                           
 49552                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 49553                           ;incstack = 0
 49554  002060  0E40               	movlw	64
 49555  002062  6055               	cpfslt	_uart2TxBufferRemaining^0,c
 49556  002064  D010               	goto	l675
 49557                           
 49558                           ;mcc_generated_files/uart2.c: 217:     {;mcc_generated_files/uart2.c: 218:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
 49559  002066  0E00               	movlw	low _uart2TxBuffer
 49560  002068  2456               	addwf	_uart2TxTail^0,w,c	;volatile
 49561  00206A  6ED9               	movwf	fsr2l,c
 49562  00206C  6ADA               	clrf	fsr2h,c
 49563  00206E  0E04               	movlw	high _uart2TxBuffer
 49564  002070  22DA               	addwfc	fsr2h,f,c
 49565  002072  50DF               	movf	indf2,w,c
 49566  002074  013D               	movlb	61	; () banked
 49567  002076  6FD2               	movwf	210,b	;volatile
 49568                           
 49569                           ; BSR set to: 61
 49570  002078  2A56               	incf	_uart2TxTail^0,f,c	;volatile
 49571                           
 49572                           ; BSR set to: 61
 49573                           ;mcc_generated_files/uart2.c: 219:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
 49574  00207A  0E3F               	movlw	63
 49575  00207C  6456               	cpfsgt	_uart2TxTail^0,c
 49576  00207E  D001               	goto	l13894
 49577                           
 49578                           ; BSR set to: 61
 49579                           ;mcc_generated_files/uart2.c: 220:         {;mcc_generated_files/uart2.c: 221:          
      +                             uart2TxTail = 0;
 49580  002080  6A56               	clrf	_uart2TxTail^0,c	;volatile
 49581  002082                     l13894:
 49582                           
 49583                           ; BSR set to: 61
 49584                           ;mcc_generated_files/uart2.c: 223:         uart2TxBufferRemaining++;
 49585  002082  2A55               	incf	_uart2TxBufferRemaining^0,f,c	;volatile
 49586                           
 49587                           ;mcc_generated_files/uart2.c: 224:     }
 49588  002084  0012               	return	
 49589  002086                     l675:
 49590                           
 49591                           ;mcc_generated_files/uart2.c: 226:     {;mcc_generated_files/uart2.c: 227:         PIE6b
      +                          its.U2TXIE = 0;
 49592  002086  0139               	movlb	57	; () banked
 49593  002088  9796               	bcf	150,3,b	;volatile
 49594                           
 49595                           ; _UART2_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 49596  00208A  0012               	return		;funcret
 49597  00208C                     __end_of_UART2_Transmit_ISR:
 49598                           	opt callstack 0
 49599                           
 49600 ;; *************** function _UART2_rx_vect_isr *****************
 49601 ;; Defined at:
 49602 ;;		line 203 in file "mcc_generated_files/uart2.c"
 49603 ;; Parameters:    Size  Location     Type
 49604 ;;		None
 49605 ;; Auto vars:     Size  Location     Type
 49606 ;;		None
 49607 ;; Return value:  Size  Location     Type
 49608 ;;                  1    wreg      void 
 49609 ;; Registers used:
 49610 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 49611 ;; Tracked objects:
 49612 ;;		On entry : 0/0
 49613 ;;		On exit  : 0/0
 49614 ;;		Unchanged: 0/0
 49615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 49616 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49617 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49618 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49619 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49620 ;;Total ram usage:        0 bytes
 49621 ;; Hardware stack levels used:    1
 49622 ;; Hardware stack levels required when called:    1
 49623 ;; This function calls:
 49624 ;;		Absolute function
 49625 ;;		_UART2_Receive_ISR
 49626 ;; This function is called by:
 49627 ;;		Interrupt level 2
 49628 ;; This function uses a non-reentrant model
 49629 ;;
 49630                           
 49631                           	psect	text217
 49632  0022E8                     __ptext217:
 49633                           	opt callstack 0
 49634  0022E8                     _UART2_rx_vect_isr:
 49635                           	opt callstack 4
 49636                           
 49637                           ;incstack = 0
 49638  0022E8  EE14  F32C         	lfsr	1,___inthi_sp
 49639                           
 49640                           ;mcc_generated_files/uart2.c: 205:     if(UART2_RxInterruptHandler)
 49641  0022EC  0100               	movlb	0	; () banked
 49642  0022EE  51AD               	movf	_UART2_RxInterruptHandler& (0+255),w,b
 49643  0022F0  11AE               	iorwf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
 49644  0022F2  11AF               	iorwf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
 49645  0022F4  B4D8               	btfsc	status,2,c
 49646  0022F6  0011               	retfie		f
 49647                           
 49648                           ; BSR set to: 0
 49649                           ;mcc_generated_files/uart2.c: 206:     {;mcc_generated_files/uart2.c: 207:         UART2
      +                          _RxInterruptHandler();
 49650  0022F8  D801               	call	i2u1381_48
 49651  0022FA  0011               	retfie		f
 49652  0022FC                     i2u1381_48:
 49653  0022FC  0005               	push	
 49654  0022FE  6EFA               	movwf	pclath,c
 49655  002300  51AD               	movf	_UART2_RxInterruptHandler& (0+255),w,b
 49656  002302  6EFD               	movwf	tosl,c
 49657  002304  51AE               	movf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
 49658  002306  6EFE               	movwf	tosh,c
 49659  002308  51AF               	movf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
 49660  00230A  6EFF               	movwf	tosu,c
 49661  00230C  50FA               	movf	pclath,w,c
 49662  00230E  0012               	return		;indir
 49663  002310                     __end_of_UART2_rx_vect_isr:
 49664                           	opt callstack 0
 49665                           
 49666 ;; *************** function _UART2_Receive_ISR *****************
 49667 ;; Defined at:
 49668 ;;		line 233 in file "mcc_generated_files/uart2.c"
 49669 ;; Parameters:    Size  Location     Type
 49670 ;;		None
 49671 ;; Auto vars:     Size  Location     Type
 49672 ;;		None
 49673 ;; Return value:  Size  Location     Type
 49674 ;;                  1  [STACK] void 
 49675 ;; Registers used:
 49676 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 49677 ;; Tracked objects:
 49678 ;;		On entry : 3F/0
 49679 ;;		On exit  : 3F/0
 49680 ;;		Unchanged: 0/0
 49681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 49682 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49683 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49684 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49685 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49686 ;;Total ram usage:        0 bytes
 49687 ;; Hardware stack levels used:    1
 49688 ;; This function calls:
 49689 ;;		Nothing
 49690 ;; This function is called by:
 49691 ;;		_UART2_Initialize
 49692 ;;		_UART2_rx_vect_isr
 49693 ;; This function uses a reentrant model
 49694 ;;
 49695                           
 49696                           	psect	text218
 49697  002490                     __ptext218:
 49698                           	opt callstack 0
 49699  002490                     _UART2_Receive_ISR:
 49700                           	opt callstack 4
 49701                           
 49702                           ;mcc_generated_files/uart2.c: 236:     uart2RxBuffer[uart2RxHead++] = U2RXB;
 49703                           
 49704                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 49705                           ;incstack = 0
 49706  002490  0E00               	movlw	low _uart2RxBuffer
 49707  002492  2454               	addwf	_uart2RxHead^0,w,c	;volatile
 49708  002494  6ED9               	movwf	fsr2l,c
 49709  002496  6ADA               	clrf	fsr2h,c
 49710  002498  0E06               	movlw	high _uart2RxBuffer
 49711  00249A  22DA               	addwfc	fsr2h,f,c
 49712  00249C  006F F743 FFDF     	movff	15824,indf2	;volatile
 49713  0024A2  2A54               	incf	_uart2RxHead^0,f,c	;volatile
 49714                           
 49715                           ;mcc_generated_files/uart2.c: 237:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
 49716  0024A4  2854               	incf	_uart2RxHead^0,w,c
 49717  0024A6  B4D8               	btfsc	status,2,c
 49718                           
 49719                           ;mcc_generated_files/uart2.c: 238:     {;mcc_generated_files/uart2.c: 239:         uart2
      +                          RxHead = 0;
 49720  0024A8  6A54               	clrf	_uart2RxHead^0,c	;volatile
 49721                           
 49722                           ;mcc_generated_files/uart2.c: 241:     uart2RxCount++;
 49723  0024AA  0100               	movlb	0	; () banked
 49724  0024AC  2BCD               	incf	_uart2RxCount& (0+255),f,b	;volatile
 49725                           
 49726                           ; BSR set to: 0
 49727                           ; _UART2_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 49728  0024AE  0012               	return		;funcret
 49729  0024B0                     __end_of_UART2_Receive_ISR:
 49730                           	opt callstack 0
 49731                           
 49732 ;; *************** function _TMR6_ISR *****************
 49733 ;; Defined at:
 49734 ;;		line 171 in file "mcc_generated_files/tmr6.c"
 49735 ;; Parameters:    Size  Location     Type
 49736 ;;		None
 49737 ;; Auto vars:     Size  Location     Type
 49738 ;;		None
 49739 ;; Return value:  Size  Location     Type
 49740 ;;                  1    wreg      void 
 49741 ;; Registers used:
 49742 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 49743 ;; Tracked objects:
 49744 ;;		On entry : 0/0
 49745 ;;		On exit  : 0/0
 49746 ;;		Unchanged: 0/0
 49747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 49748 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49749 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49750 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49751 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49752 ;;Total ram usage:        1 bytes
 49753 ;; Hardware stack levels used:    1
 49754 ;; Hardware stack levels required when called:    2
 49755 ;; This function calls:
 49756 ;;		_TMR6_CallBack
 49757 ;; This function is called by:
 49758 ;;		Interrupt level 2
 49759 ;; This function uses a non-reentrant model
 49760 ;;
 49761                           
 49762                           	psect	text219
 49763  002544                     __ptext219:
 49764                           	opt callstack 0
 49765  002544                     _TMR6_ISR:
 49766                           	opt callstack 3
 49767                           
 49768                           ; BSR set to: 0
 49769                           ;incstack = 0
 49770  002544  0060  F0A8  F006   	movff	btemp,??_TMR6_ISR
 49771  00254A  EE14  F32C         	lfsr	1,___inthi_sp
 49772                           
 49773                           ;mcc_generated_files/tmr6.c: 175:     PIR9bits.TMR6IF = 0;
 49774  00254E  0139               	movlb	57	; () banked
 49775  002550  91A9               	bcf	169,0,b	;volatile
 49776                           
 49777                           ; BSR set to: 57
 49778                           ;mcc_generated_files/tmr6.c: 179:     TMR6_CallBack();
 49779  002552  ECE2  F011         	call	_TMR6_CallBack	;wreg free
 49780  002556  0060  F018  F02A   	movff	??_TMR6_ISR,btemp
 49781  00255C  0011               	retfie		f
 49782  00255E                     __end_of_TMR6_ISR:
 49783                           	opt callstack 0
 49784                           
 49785 ;; *************** function _TMR6_CallBack *****************
 49786 ;; Defined at:
 49787 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 49788 ;; Parameters:    Size  Location     Type
 49789 ;;		None
 49790 ;; Auto vars:     Size  Location     Type
 49791 ;;		None
 49792 ;; Return value:  Size  Location     Type
 49793 ;;                  1  [STACK] void 
 49794 ;; Registers used:
 49795 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 49796 ;; Tracked objects:
 49797 ;;		On entry : 3F/39
 49798 ;;		On exit  : 0/0
 49799 ;;		Unchanged: 0/0
 49800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 49801 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49802 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49804 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49805 ;;Total ram usage:        0 bytes
 49806 ;; Hardware stack levels used:    1
 49807 ;; Hardware stack levels required when called:    1
 49808 ;; This function calls:
 49809 ;;		Absolute function
 49810 ;;		_TMR6_DefaultInterruptHandler
 49811 ;; This function is called by:
 49812 ;;		_TMR6_ISR
 49813 ;; This function uses a reentrant model
 49814 ;;
 49815                           
 49816                           	psect	text220
 49817  0023C4                     __ptext220:
 49818                           	opt callstack 0
 49819  0023C4                     _TMR6_CallBack:
 49820                           	opt callstack 3
 49821                           
 49822                           ;mcc_generated_files/tmr6.c: 186:     if(TMR6_InterruptHandler)
 49823                           
 49824                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 49825                           ;incstack = 0
 49826  0023C4  0100               	movlb	0	; () banked
 49827  0023C6  519E               	movf	_TMR6_InterruptHandler& (0+255),w,b
 49828  0023C8  119F               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 49829  0023CA  11A0               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 49830  0023CC  B4D8               	btfsc	status,2,c
 49831  0023CE  0012               	return	
 49832                           
 49833                           ; BSR set to: 0
 49834                           ;mcc_generated_files/tmr6.c: 187:     {;mcc_generated_files/tmr6.c: 188:         TMR6_In
      +                          terruptHandler();
 49835  0023D0  D801               	call	u1316_48
 49836  0023D2  0012               	return	
 49837  0023D4                     u1316_48:
 49838  0023D4  0005               	push	
 49839  0023D6  6EFA               	movwf	pclath,c
 49840  0023D8  519E               	movf	_TMR6_InterruptHandler& (0+255),w,b
 49841  0023DA  6EFD               	movwf	tosl,c
 49842  0023DC  519F               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 49843  0023DE  6EFE               	movwf	tosh,c
 49844  0023E0  51A0               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 49845  0023E2  6EFF               	movwf	tosu,c
 49846  0023E4  50FA               	movf	pclath,w,c
 49847  0023E6  0012               	return		;indir
 49848  0023E8                     __end_of_TMR6_CallBack:
 49849                           	opt callstack 0
 49850                           
 49851 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 49852 ;; Defined at:
 49853 ;;		line 196 in file "mcc_generated_files/tmr6.c"
 49854 ;; Parameters:    Size  Location     Type
 49855 ;;		None
 49856 ;; Auto vars:     Size  Location     Type
 49857 ;;  i               1  [STACK] unsigned char 
 49858 ;; Return value:  Size  Location     Type
 49859 ;;                  1  [STACK] void 
 49860 ;; Registers used:
 49861 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 49862 ;; Tracked objects:
 49863 ;;		On entry : 3F/0
 49864 ;;		On exit  : 0/0
 49865 ;;		Unchanged: 0/0
 49866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 49867 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49868 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49869 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49870 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49871 ;;Total ram usage:        0 bytes
 49872 ;; Hardware stack levels used:    1
 49873 ;; This function calls:
 49874 ;;		Nothing
 49875 ;; This function is called by:
 49876 ;;		_TMR6_Initialize
 49877 ;;		_TMR6_CallBack
 49878 ;; This function uses a reentrant model
 49879 ;;
 49880                           
 49881                           	psect	text221
 49882  0018AE                     __ptext221:
 49883                           	opt callstack 0
 49884  0018AE                     _TMR6_DefaultInterruptHandler:
 49885                           	opt callstack 0
 49886                           
 49887                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 49888  0018AE  52E6               	movf	postinc1,f,c
 49889                           
 49890                           ;mcc_generated_files/tmr6.c: 198:  uint8_t i;;mcc_generated_files/tmr6.c: 203:  for (i =
      +                           0; i < TMR_COUNT; i++) {
 49891                           ;stkvar	_i @ sp[(-1)+0]
 49892                           
 49893                           ;incstack = 0
 49894  0018B0  0EFF               	movlw	-1
 49895  0018B2  6AE3               	clrf	plusw1,c
 49896  0018B4                     l13294:
 49897                           
 49898                           ;mcc_generated_files/tmr6.c: 204:   if (tickCount[i] != 0) {
 49899                           ;stkvar	_i @ sp[(-1)+0]
 49900  0018B4  0EFF               	movlw	-1
 49901  0018B6  50E3               	movf	plusw1,w,c
 49902  0018B8  0D02               	mullw	2
 49903  0018BA  0EBC               	movlw	low _tickCount
 49904  0018BC  24F3               	addwf	243,w,c
 49905  0018BE  6ED9               	movwf	fsr2l,c
 49906  0018C0  0E02               	movlw	high _tickCount
 49907  0018C2  20F4               	addwfc	prodh,w,c
 49908  0018C4  6EDA               	movwf	fsr2h,c
 49909  0018C6  50DE               	movf	postinc2,w,c
 49910  0018C8  10DE               	iorwf	postinc2,w,c
 49911  0018CA  B4D8               	btfsc	status,2,c
 49912  0018CC  D00C               	goto	l13298
 49913                           
 49914                           ;mcc_generated_files/tmr6.c: 205:    tickCount[i]--;
 49915                           ;stkvar	_i @ sp[(-1)+0]
 49916  0018CE  0EFF               	movlw	-1
 49917  0018D0  50E3               	movf	plusw1,w,c
 49918  0018D2  0D02               	mullw	2
 49919  0018D4  0EBC               	movlw	low _tickCount
 49920  0018D6  24F3               	addwf	243,w,c
 49921  0018D8  6ED9               	movwf	fsr2l,c
 49922  0018DA  0E02               	movlw	high _tickCount
 49923  0018DC  20F4               	addwfc	prodh,w,c
 49924  0018DE  6EDA               	movwf	fsr2h,c
 49925  0018E0  06DE               	decf	postinc2,f,c
 49926  0018E2  0E00               	movlw	0
 49927  0018E4  5ADD               	subwfb	postdec2,f,c
 49928  0018E6                     l13298:
 49929                           
 49930                           ;mcc_generated_files/tmr6.c: 207:  }
 49931                           ;stkvar	_i @ sp[(-1)+0]
 49932  0018E6  0EFF               	movlw	-1
 49933  0018E8  2AE3               	incf	plusw1,f,c
 49934                           
 49935                           ;stkvar	_i @ sp[(-1)+0]
 49936  0018EA  0EFF               	movlw	-1
 49937  0018EC  006F FF8C  F02A    	movff	plusw1,btemp
 49938  0018F2  0E0C               	movlw	12
 49939  0018F4  642A               	cpfsgt	btemp^0,c
 49940  0018F6  D7DE               	goto	l13294
 49941                           
 49942                           ; _TMR6_DefaultInterruptHandler: autosize = 1, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 49943  0018F8  52E5               	movf	postdec1,f,c
 49944  0018FA  0012               	return		;funcret
 49945  0018FC                     __end_of_TMR6_DefaultInterruptHandler:
 49946                           	opt callstack 0
 49947                           
 49948 ;; *************** function _DMA1_DMASCNT_ISR *****************
 49949 ;; Defined at:
 49950 ;;		line 126 in file "mcc_generated_files/dma1.c"
 49951 ;; Parameters:    Size  Location     Type
 49952 ;;		None
 49953 ;; Auto vars:     Size  Location     Type
 49954 ;;		None
 49955 ;; Return value:  Size  Location     Type
 49956 ;;                  1    wreg      void 
 49957 ;; Registers used:
 49958 ;;		None
 49959 ;; Tracked objects:
 49960 ;;		On entry : 0/0
 49961 ;;		On exit  : 3F/0
 49962 ;;		Unchanged: 0/0
 49963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 49964 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49965 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49967 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49968 ;;Total ram usage:        0 bytes
 49969 ;; Hardware stack levels used:    1
 49970 ;; This function calls:
 49971 ;;		Nothing
 49972 ;; This function is called by:
 49973 ;;		Interrupt level 2
 49974 ;; This function uses a non-reentrant model
 49975 ;;
 49976                           
 49977                           	psect	text222
 49978  0026A8                     __ptext222:
 49979                           	opt callstack 0
 49980  0026A8                     _DMA1_DMASCNT_ISR:
 49981                           	opt callstack 5
 49982                           
 49983                           ;incstack = 0
 49984  0026A8  EE14  F32C         	lfsr	1,___inthi_sp
 49985                           
 49986                           ;mcc_generated_files/dma1.c: 128:  PIR2bits.DMA1SCNTIF = 0;
 49987  0026AC  0139               	movlb	57	; () banked
 49988  0026AE  91A2               	bcf	162,0,b	;volatile
 49989                           
 49990                           ;mcc_generated_files/dma1.c: 130:  spi_link.LCD_DATA = 0;
 49991  0026B0  0100               	movlb	0	; () banked
 49992  0026B2  9760               	bcf	_spi_link& (0+255),3,b	;volatile
 49993                           
 49994                           ; BSR set to: 0
 49995  0026B4  0011               	retfie		f
 49996  0026B6                     __end_of_DMA1_DMASCNT_ISR:
 49997                           	opt callstack 0
 49998                           
 49999 ;; *************** function _DMA1_DMADCNT_ISR *****************
 50000 ;; Defined at:
 50001 ;;		line 133 in file "mcc_generated_files/dma1.c"
 50002 ;; Parameters:    Size  Location     Type
 50003 ;;		None
 50004 ;; Auto vars:     Size  Location     Type
 50005 ;;		None
 50006 ;; Return value:  Size  Location     Type
 50007 ;;                  1    wreg      void 
 50008 ;; Registers used:
 50009 ;;		None
 50010 ;; Tracked objects:
 50011 ;;		On entry : 0/0
 50012 ;;		On exit  : 3F/39
 50013 ;;		Unchanged: 0/0
 50014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 50015 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50016 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50017 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50018 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50019 ;;Total ram usage:        0 bytes
 50020 ;; Hardware stack levels used:    1
 50021 ;; This function calls:
 50022 ;;		Nothing
 50023 ;; This function is called by:
 50024 ;;		Interrupt level 2
 50025 ;; This function uses a non-reentrant model
 50026 ;;
 50027                           
 50028                           	psect	text223
 50029  0026CC                     __ptext223:
 50030                           	opt callstack 0
 50031  0026CC                     _DMA1_DMADCNT_ISR:
 50032                           	opt callstack 5
 50033                           
 50034                           ; BSR set to: 0
 50035                           ;incstack = 0
 50036  0026CC  EE14  F32C         	lfsr	1,___inthi_sp
 50037                           
 50038                           ;mcc_generated_files/dma1.c: 135:  PIR2bits.DMA1DCNTIF = 0;
 50039  0026D0  0139               	movlb	57	; () banked
 50040  0026D2  93A2               	bcf	162,1,b	;volatile
 50041                           
 50042                           ; BSR set to: 57
 50043  0026D4  0011               	retfie		f
 50044  0026D6                     __end_of_DMA1_DMADCNT_ISR:
 50045                           	opt callstack 0
 50046                           
 50047 ;; *************** function _DMA1_DMAA_ISR *****************
 50048 ;; Defined at:
 50049 ;;		line 143 in file "mcc_generated_files/dma1.c"
 50050 ;; Parameters:    Size  Location     Type
 50051 ;;		None
 50052 ;; Auto vars:     Size  Location     Type
 50053 ;;		None
 50054 ;; Return value:  Size  Location     Type
 50055 ;;                  1    wreg      void 
 50056 ;; Registers used:
 50057 ;;		None
 50058 ;; Tracked objects:
 50059 ;;		On entry : 0/0
 50060 ;;		On exit  : 3F/39
 50061 ;;		Unchanged: 0/0
 50062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 50063 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50064 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50065 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50066 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50067 ;;Total ram usage:        0 bytes
 50068 ;; Hardware stack levels used:    1
 50069 ;; This function calls:
 50070 ;;		Nothing
 50071 ;; This function is called by:
 50072 ;;		Interrupt level 2
 50073 ;; This function uses a non-reentrant model
 50074 ;;
 50075                           
 50076                           	psect	text224
 50077  0026D8                     __ptext224:
 50078                           	opt callstack 0
 50079  0026D8                     _DMA1_DMAA_ISR:
 50080                           	opt callstack 5
 50081                           
 50082                           ; BSR set to: 57
 50083                           ;incstack = 0
 50084  0026D8  EE14  F32C         	lfsr	1,___inthi_sp
 50085                           
 50086                           ;mcc_generated_files/dma1.c: 146:  PIR2bits.DMA1AIF = 0;
 50087  0026DC  0139               	movlb	57	; () banked
 50088  0026DE  97A2               	bcf	162,3,b	;volatile
 50089                           
 50090                           ; BSR set to: 57
 50091  0026E0  0011               	retfie		f
 50092  0026E2                     __end_of_DMA1_DMAA_ISR:
 50093                           	opt callstack 0
 50094                           
 50095 ;; *************** function _DMA1_DMAOR_ISR *****************
 50096 ;; Defined at:
 50097 ;;		line 154 in file "mcc_generated_files/dma1.c"
 50098 ;; Parameters:    Size  Location     Type
 50099 ;;		None
 50100 ;; Auto vars:     Size  Location     Type
 50101 ;;		None
 50102 ;; Return value:  Size  Location     Type
 50103 ;;                  1    wreg      void 
 50104 ;; Registers used:
 50105 ;;		None
 50106 ;; Tracked objects:
 50107 ;;		On entry : 0/0
 50108 ;;		On exit  : 3F/39
 50109 ;;		Unchanged: 0/0
 50110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 50111 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50112 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50114 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50115 ;;Total ram usage:        0 bytes
 50116 ;; Hardware stack levels used:    1
 50117 ;; This function calls:
 50118 ;;		Nothing
 50119 ;; This function is called by:
 50120 ;;		Interrupt level 2
 50121 ;; This function uses a non-reentrant model
 50122 ;;
 50123                           
 50124                           	psect	text225
 50125  0026E4                     __ptext225:
 50126                           	opt callstack 0
 50127  0026E4                     _DMA1_DMAOR_ISR:
 50128                           	opt callstack 5
 50129                           
 50130                           ; BSR set to: 57
 50131                           ;incstack = 0
 50132  0026E4  EE14  F32C         	lfsr	1,___inthi_sp
 50133                           
 50134                           ;mcc_generated_files/dma1.c: 157:  PIR2bits.DMA1ORIF = 0;
 50135  0026E8  0139               	movlb	57	; () banked
 50136  0026EA  95A2               	bcf	162,2,b	;volatile
 50137                           
 50138                           ; BSR set to: 57
 50139  0026EC  0011               	retfie		f
 50140  0026EE                     __end_of_DMA1_DMAOR_ISR:
 50141                           	opt callstack 0
 50142                           
 50143                           ;
 50144                           ; Interrupt Vector Table @ 0x8
 50145                           ;
 50146                           
 50147                           	psect	ivt0x8
 50148  000008                     __pivt0x8:
 50149                           	opt callstack 0
 50150  000008                     ivt0x8_base:
 50151                           	opt callstack 0
 50152                           
 50153                           ; Vector 0 : SWINT
 50154  000008  09CF               	dw	_Default_ISR shr (0+2)
 50155                           
 50156                           ; Vector 1 : HLVD
 50157  00000A  09CF               	dw	_Default_ISR shr (0+2)
 50158                           
 50159                           ; Vector 2 : OSF
 50160  00000C  09CF               	dw	_Default_ISR shr (0+2)
 50161                           
 50162                           ; Vector 3 : CSW
 50163  00000E  09CF               	dw	_Default_ISR shr (0+2)
 50164                           
 50165                           ; Vector 4 : NVM
 50166  000010  09CF               	dw	_Default_ISR shr (0+2)
 50167                           
 50168                           ; Vector 5 : SCAN
 50169  000012  09CF               	dw	_Default_ISR shr (0+2)
 50170                           
 50171                           ; Vector 6 : CRC
 50172  000014  09CF               	dw	_Default_ISR shr (0+2)
 50173                           
 50174                           ; Vector 7 : IOC
 50175  000016  09CF               	dw	_Default_ISR shr (0+2)
 50176                           
 50177                           ; Vector 8 : INT0
 50178  000018  09A6               	dw	_INT0_ISR shr (0+2)
 50179                           
 50180                           ; Vector 9 : ZCD
 50181  00001A  09CF               	dw	_Default_ISR shr (0+2)
 50182                           
 50183                           ; Vector 10 : AD
 50184  00001C  080D               	dw	_ADCC_ISR shr (0+2)
 50185                           
 50186                           ; Vector 11 : ADT
 50187  00001E  049C               	dw	_ADCC_ThresholdISR shr (0+2)
 50188                           
 50189                           ; Vector 12 : CMP1
 50190  000020  09CF               	dw	_Default_ISR shr (0+2)
 50191                           
 50192                           ; Vector 13 : SMT1
 50193  000022  09CF               	dw	_Default_ISR shr (0+2)
 50194                           
 50195                           ; Vector 14 : SMT1PRA
 50196  000024  09CF               	dw	_Default_ISR shr (0+2)
 50197                           
 50198                           ; Vector 15 : SMT1PRW
 50199  000026  09CF               	dw	_Default_ISR shr (0+2)
 50200                           
 50201                           ; Vector 16 : DMA1SCNT
 50202  000028  09AA               	dw	_DMA1_DMASCNT_ISR shr (0+2)
 50203                           
 50204                           ; Vector 17 : DMA1DCNT
 50205  00002A  09B3               	dw	_DMA1_DMADCNT_ISR shr (0+2)
 50206                           
 50207                           ; Vector 18 : DMA1OR
 50208  00002C  09B9               	dw	_DMA1_DMAOR_ISR shr (0+2)
 50209                           
 50210                           ; Vector 19 : DMA1A
 50211  00002E  09B6               	dw	_DMA1_DMAA_ISR shr (0+2)
 50212                           
 50213                           ; Vector 20 : SPI1RX
 50214  000030  09CF               	dw	_Default_ISR shr (0+2)
 50215                           
 50216                           ; Vector 21 : SPI1TX
 50217  000032  09CF               	dw	_Default_ISR shr (0+2)
 50218                           
 50219                           ; Vector 22 : SPI1
 50220  000034  09CF               	dw	_Default_ISR shr (0+2)
 50221                           
 50222                           ; Vector 23 : I2C1RX
 50223  000036  09CF               	dw	_Default_ISR shr (0+2)
 50224                           
 50225                           ; Vector 24 : I2C1TX
 50226  000038  09CF               	dw	_Default_ISR shr (0+2)
 50227                           
 50228                           ; Vector 25 : I2C1
 50229  00003A  09CF               	dw	_Default_ISR shr (0+2)
 50230                           
 50231                           ; Vector 26 : I2C1E
 50232  00003C  09CF               	dw	_Default_ISR shr (0+2)
 50233                           
 50234                           ; Vector 27 : U1RX
 50235  00003E  08A6               	dw	_UART1_rx_vect_isr shr (0+2)
 50236                           
 50237                           ; Vector 28 : U1TX
 50238  000040  09CF               	dw	_Default_ISR shr (0+2)
 50239                           
 50240                           ; Vector 29 : U1E
 50241  000042  09CF               	dw	_Default_ISR shr (0+2)
 50242                           
 50243                           ; Vector 30 : U1
 50244  000044  09CF               	dw	_Default_ISR shr (0+2)
 50245                           
 50246                           ; Vector 31 : TMR0
 50247  000046  09CF               	dw	_Default_ISR shr (0+2)
 50248                           
 50249                           ; Vector 32 : TMR1
 50250  000048  09CF               	dw	_Default_ISR shr (0+2)
 50251                           
 50252                           ; Vector 33 : TMR1G
 50253  00004A  09CF               	dw	_Default_ISR shr (0+2)
 50254                           
 50255                           ; Vector 34 : TMR2
 50256  00004C  09CF               	dw	_Default_ISR shr (0+2)
 50257                           
 50258                           ; Vector 35 : CCP1
 50259  00004E  09CF               	dw	_Default_ISR shr (0+2)
 50260                           
 50261                           ; Vector 36 : Undefined
 50262  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 50263                           
 50264                           ; Vector 37 : NCO1
 50265  000052  09CF               	dw	_Default_ISR shr (0+2)
 50266                           
 50267                           ; Vector 38 : CWG1
 50268  000054  09CF               	dw	_Default_ISR shr (0+2)
 50269                           
 50270                           ; Vector 39 : CLC1
 50271  000056  09CF               	dw	_Default_ISR shr (0+2)
 50272                           
 50273                           ; Vector 40 : INT1
 50274  000058  072D               	dw	_INT1_ISR shr (0+2)
 50275                           
 50276                           ; Vector 41 : CMP2
 50277  00005A  09CF               	dw	_Default_ISR shr (0+2)
 50278                           
 50279                           ; Vector 42 : DMA2SCNT
 50280  00005C  09CF               	dw	_Default_ISR shr (0+2)
 50281                           
 50282                           ; Vector 43 : DMA2DCNT
 50283  00005E  09CF               	dw	_Default_ISR shr (0+2)
 50284                           
 50285                           ; Vector 44 : DMA2OR
 50286  000060  09CF               	dw	_Default_ISR shr (0+2)
 50287                           
 50288                           ; Vector 45 : DMA2A
 50289  000062  09CF               	dw	_Default_ISR shr (0+2)
 50290                           
 50291                           ; Vector 46 : I2C2RX
 50292  000064  09CF               	dw	_Default_ISR shr (0+2)
 50293                           
 50294                           ; Vector 47 : I2C2TX
 50295  000066  09CF               	dw	_Default_ISR shr (0+2)
 50296                           
 50297                           ; Vector 48 : I2C2
 50298  000068  09CF               	dw	_Default_ISR shr (0+2)
 50299                           
 50300                           ; Vector 49 : I2C2E
 50301  00006A  09CF               	dw	_Default_ISR shr (0+2)
 50302                           
 50303                           ; Vector 50 : U2RX
 50304  00006C  08BA               	dw	_UART2_rx_vect_isr shr (0+2)
 50305                           
 50306                           ; Vector 51 : U2TX
 50307  00006E  08B0               	dw	_UART2_tx_vect_isr shr (0+2)
 50308                           
 50309                           ; Vector 52 : U2E
 50310  000070  09CF               	dw	_Default_ISR shr (0+2)
 50311                           
 50312                           ; Vector 53 : U2
 50313  000072  09CF               	dw	_Default_ISR shr (0+2)
 50314                           
 50315                           ; Vector 54 : TMR3
 50316  000074  79DD               	dw	_TMR3_ISR shr (0+2)
 50317                           
 50318                           ; Vector 55 : TMR3G
 50319  000076  09CF               	dw	_Default_ISR shr (0+2)
 50320                           
 50321                           ; Vector 56 : TMR4
 50322  000078  09CF               	dw	_Default_ISR shr (0+2)
 50323                           
 50324                           ; Vector 57 : CCP2
 50325  00007A  09CF               	dw	_Default_ISR shr (0+2)
 50326                           
 50327                           ; Vector 58 : Undefined
 50328  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 50329                           
 50330                           ; Vector 59 : CWG2
 50331  00007E  09CF               	dw	_Default_ISR shr (0+2)
 50332                           
 50333                           ; Vector 60 : CLC2
 50334  000080  09CF               	dw	_Default_ISR shr (0+2)
 50335                           
 50336                           ; Vector 61 : INT2
 50337  000082  09CF               	dw	_Default_ISR shr (0+2)
 50338                           
 50339                           ; Vector 62 : Undefined
 50340  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 50341                           
 50342                           ; Vector 63 : Undefined
 50343  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 50344                           
 50345                           ; Vector 64 : Undefined
 50346  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 50347                           
 50348                           ; Vector 65 : Undefined
 50349  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 50350                           
 50351                           ; Vector 66 : Undefined
 50352  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 50353                           
 50354                           ; Vector 67 : Undefined
 50355  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 50356                           
 50357                           ; Vector 68 : Undefined
 50358  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 50359                           
 50360                           ; Vector 69 : Undefined
 50361  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 50362                           
 50363                           ; Vector 70 : TMR5
 50364  000094  761A               	dw	_TMR5_ISR shr (0+2)
 50365                           
 50366                           ; Vector 71 : TMR5G
 50367  000096  09CF               	dw	_Default_ISR shr (0+2)
 50368                           
 50369                           ; Vector 72 : TMR6
 50370  000098  0951               	dw	_TMR6_ISR shr (0+2)
 50371                           
 50372                           ; Vector 73 : CCP3
 50373  00009A  09CF               	dw	_Default_ISR shr (0+2)
 50374                           
 50375                           ; Vector 74 : CWG3
 50376  00009C  09CF               	dw	_Default_ISR shr (0+2)
 50377                           
 50378                           ; Vector 75 : CLC3
 50379  00009E  09CF               	dw	_Default_ISR shr (0+2)
 50380                           
 50381                           ; Vector 76 : Undefined
 50382  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 50383                           
 50384                           ; Vector 77 : Undefined
 50385  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 50386                           
 50387                           ; Vector 78 : Undefined
 50388  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 50389                           
 50390                           ; Vector 79 : Undefined
 50391  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 50392                           
 50393                           ; Vector 80 : CCP4
 50394  0000A8  09CF               	dw	_Default_ISR shr (0+2)
 50395                           
 50396                           ; Vector 81 : CLC4
 50397  0000AA  09CF               	dw	_Default_ISR shr (0+2)
 50398  0000AC                     ivt0x8_undefint:
 50399                           	opt callstack 0
 50400  0000AC  00FF               	reset	
 50401                           
 50402                           	psect	text226
 50403  000000                     __ptext226:
 50404                           	opt callstack 0
 50405                           
 50406                           	psect	rparam
 50407  0000                     
 50408                           	psect	temp
 50409  00002A                     btemp:
 50410                           	opt callstack 0
 50411  00002A                     	ds	32
 50412  0000                     wtemp0	set	btemp
 50413  0000                     wtemp1	set	btemp+2
 50414  0000                     wtemp2	set	btemp+4
 50415  0000                     wtemp3	set	btemp+6
 50416  0000                     wtemp4	set	btemp+8
 50417  0000                     wtemp5	set	btemp+10
 50418  0000                     wtemp8	set	btemp+1
 50419  0000                     ttemp0	set	btemp
 50420  0000                     ttemp1	set	btemp+3
 50421  0000                     ttemp2	set	btemp+6
 50422  0000                     ttemp3	set	btemp+9
 50423  0000                     ttemp5	set	btemp+1
 50424  0000                     ttemp6	set	btemp+4
 50425  0000                     ttemp7	set	btemp+8
 50426  0000                     ltemp0	set	btemp
 50427  0000                     ltemp1	set	btemp+4
 50428  0000                     ltemp2	set	btemp+8
 50429  0000                     lltemp0	set	btemp
 50430  0000                     lltemp1	set	btemp+8
 50431  0000                     lltemp2	set	btemp+16
 50432  0000                     lltemp3	set	btemp+24
 50433                           tosu	equ	0x3FFF
 50434                           tosh	equ	0x3FFE
 50435                           tosl	equ	0x3FFD
 50436                           stkptr	equ	0x3FFC
 50437                           pclatu	equ	0x3FFB
 50438                           pclath	equ	0x3FFA
 50439                           pcl	equ	0x3FF9
 50440                           tblptru	equ	0x3FF8
 50441                           tblptrh	equ	0x3FF7
 50442                           tblptrl	equ	0x3FF6
 50443                           tablat	equ	0x3FF5
 50444                           prodh	equ	0x3FF4
 50445                           prodl	equ	0x3FF3
 50446                           indf0	equ	0x3FEF
 50447                           postinc0	equ	0x3FEE
 50448                           postdec0	equ	0x3FED
 50449                           preinc0	equ	0x3FEC
 50450                           plusw0	equ	0x3FEB
 50451                           fsr0h	equ	0x3FEA
 50452                           fsr0l	equ	0x3FE9
 50453                           wreg	equ	0x3FE8
 50454                           indf1	equ	0x3FE7
 50455                           postinc1	equ	0x3FE6
 50456                           postdec1	equ	0x3FE5
 50457                           preinc1	equ	0x3FE4
 50458                           plusw1	equ	0x3FE3
 50459                           fsr1h	equ	0x3FE2
 50460                           fsr1l	equ	0x3FE1
 50461                           bsr	equ	0x3FE0
 50462                           indf2	equ	0x3FDF
 50463                           postinc2	equ	0x3FDE
 50464                           postdec2	equ	0x3FDD
 50465                           preinc2	equ	0x3FDC
 50466                           plusw2	equ	0x3FDB
 50467                           fsr2h	equ	0x3FDA
 50468                           fsr2l	equ	0x3FD9
 50469                           status	equ	0x3FD8


Data Sizes:
    Strings     1544
    Constant    588
    Data        1184
    BSS         1775
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63     41      55
    BANK0           160     25     158
    BANK1           256      0     253
    BANK2           256      0     230
    BANK3           256      0     247
    BANK4           256      0     219
    BANK5           256      0     134
    BANK6           256      0     255
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    s	PTR const unsigned char  size(2) Largest target is 1
		 -> STR_129(CODE[1]), STR_89(CODE[1]), 

    is_leap	PTR int  size(2) Largest target is 2
		 -> F5(STACK[2]), is_leap(STACK[2]), NULL(NULL[0]), 

    sp____tm_to_tzname	PTR const unsigned char  size(2) Largest target is 1
		 -> STR_130(CODE[1]), 

    abbrevs_end	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    tm.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    oppoff	PTR long  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    zonename	PTR PTR const unsigned char  size(2) Largest target is 25
		 -> localtime@tm(BANK3[24]), 

    offset	PTR long  size(2) Largest target is 25
		 -> localtime@tm(BANK3[24]), 

    isdst	PTR int  size(2) Largest target is 25
		 -> localtime@tm(BANK3[24]), 

    rule	PTR const int  size(2) Largest target is 10
		 -> r1(BANK1[10]), r0(BANK1[10]), 

    abbrevs	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    types	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    alt	PTR unsigned int  size(2) Largest target is 2
		 -> alt(STACK[2]), 

    index	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    zi	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    trans	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    s	PTR const unsigned char  size(2) Largest target is 4
		 -> __gmt(CODE[4]), 

    z	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    d	PTR unsigned char  size(2) Largest target is 7
		 -> dst_name(BANK1[7]), std_name(BANK1[7]), 

    p	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> s(STACK[2]), 

    p	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> s(STACK[2]), 

    rule	PTR int  size(2) Largest target is 10
		 -> r1(BANK1[10]), r0(BANK1[10]), 

    p	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> s(STACK[2]), 

    p	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> s(STACK[2]), 

    old_tz	PTR unsigned char  size(2) Largest target is 32
		 -> old_tz_buf(BANK3[32]), 

    __tzname	PTR unsigned char [2] size(2) Largest target is 7
		 -> dst_name(BANK1[7]), std_name(BANK1[7]), NULL(NULL[0]), 

    tm.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    tm	PTR struct tm size(2) Largest target is 25
		 -> localtime@tm(BANK3[24]), 

    _r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_124(CODE[3]), STR_120(CODE[3]), STR_115(CODE[3]), STR_110(CODE[3]), 
		 -> STR_105(CODE[3]), STR_101(CODE[3]), 

    r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_124(CODE[3]), STR_120(CODE[3]), STR_115(CODE[3]), STR_110(CODE[3]), 
		 -> STR_105(CODE[3]), STR_101(CODE[3]), 

    _l	PTR const unsigned char  size(2) Largest target is 127
		 -> ct(STACK[3]), STR_90(CODE[127]), STR_88(CODE[3]), STR_87(CODE[3]), 
		 -> STR_86(CODE[21]), STR_85(CODE[21]), STR_84(CODE[21]), STR_83(CODE[21]), 
		 -> STR_82(CODE[21]), STR_81(CODE[21]), STR_80(CODE[26]), STR_79(CODE[15]), 
		 -> STR_78(CODE[15]), STR_77(CODE[15]), STR_76(CODE[15]), STR_75(CODE[10]), 
		 -> STR_74(CODE[10]), STR_73(CODE[19]), STR_72(CODE[19]), STR_69(CODE[3]), 
		 -> STR_68(CODE[14]), STR_67(CODE[28]), STR_66(CODE[28]), STR_65(CODE[28]), 
		 -> STR_64(CODE[22]), STR_63(CODE[22]), STR_62(CODE[22]), STR_61(CODE[22]), 
		 -> STR_60(CODE[22]), STR_59(CODE[22]), STR_58(CODE[22]), STR_57(CODE[22]), 
		 -> STR_56(CODE[22]), STR_55(CODE[21]), STR_54(CODE[22]), STR_53(CODE[22]), 
		 -> STR_52(CODE[22]), STR_51(CODE[22]), STR_50(CODE[22]), STR_49(CODE[22]), 
		 -> STR_48(CODE[24]), STR_47(CODE[24]), STR_46(CODE[24]), STR_45(CODE[30]), 
		 -> STR_44(CODE[24]), STR_43(CODE[24]), STR_42(CODE[23]), STR_41(CODE[23]), 
		 -> STR_40(CODE[23]), STR_39(CODE[23]), STR_38(CODE[23]), STR_37(CODE[23]), 
		 -> STR_36(CODE[23]), STR_35(CODE[23]), STR_34(CODE[23]), STR_33(CODE[23]), 
		 -> STR_32(CODE[23]), STR_31(CODE[23]), STR_30(CODE[18]), STR_29(CODE[17]), 
		 -> STR_28(CODE[17]), STR_27(CODE[22]), STR_26(CODE[22]), STR_25(CODE[22]), 
		 -> STR_24(CODE[14]), STR_23(CODE[27]), STR_22(CODE[27]), STR_21(CODE[23]), 
		 -> STR_20(CODE[22]), STR_19(CODE[22]), STR_18(CODE[22]), STR_17(CODE[22]), 
		 -> STR_16(CODE[23]), STR_15(CODE[23]), STR_14(CODE[23]), STR_13(CODE[26]), 
		 -> STR_12(CODE[22]), STR_11(CODE[21]), STR_10(CODE[21]), STR_9(CODE[21]), 
		 -> STR_8(CODE[21]), STR_7(CODE[21]), STR_6(CODE[21]), STR_5(CODE[21]), 
		 -> STR_4(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 

    l	PTR const unsigned char  size(2) Largest target is 127
		 -> ct(STACK[3]), STR_90(CODE[127]), STR_88(CODE[3]), STR_87(CODE[3]), 
		 -> STR_86(CODE[21]), STR_85(CODE[21]), STR_84(CODE[21]), STR_83(CODE[21]), 
		 -> STR_82(CODE[21]), STR_81(CODE[21]), STR_80(CODE[26]), STR_79(CODE[15]), 
		 -> STR_78(CODE[15]), STR_77(CODE[15]), STR_76(CODE[15]), STR_75(CODE[10]), 
		 -> STR_74(CODE[10]), STR_73(CODE[19]), STR_72(CODE[19]), STR_69(CODE[3]), 
		 -> STR_68(CODE[14]), STR_67(CODE[28]), STR_66(CODE[28]), STR_65(CODE[28]), 
		 -> STR_64(CODE[22]), STR_63(CODE[22]), STR_62(CODE[22]), STR_61(CODE[22]), 
		 -> STR_60(CODE[22]), STR_59(CODE[22]), STR_58(CODE[22]), STR_57(CODE[22]), 
		 -> STR_56(CODE[22]), STR_55(CODE[21]), STR_54(CODE[22]), STR_53(CODE[22]), 
		 -> STR_52(CODE[22]), STR_51(CODE[22]), STR_50(CODE[22]), STR_49(CODE[22]), 
		 -> STR_48(CODE[24]), STR_47(CODE[24]), STR_46(CODE[24]), STR_45(CODE[30]), 
		 -> STR_44(CODE[24]), STR_43(CODE[24]), STR_42(CODE[23]), STR_41(CODE[23]), 
		 -> STR_40(CODE[23]), STR_39(CODE[23]), STR_38(CODE[23]), STR_37(CODE[23]), 
		 -> STR_36(CODE[23]), STR_35(CODE[23]), STR_34(CODE[23]), STR_33(CODE[23]), 
		 -> STR_32(CODE[23]), STR_31(CODE[23]), STR_30(CODE[18]), STR_29(CODE[17]), 
		 -> STR_28(CODE[17]), STR_27(CODE[22]), STR_26(CODE[22]), STR_25(CODE[22]), 
		 -> STR_24(CODE[14]), STR_23(CODE[27]), STR_22(CODE[27]), STR_21(CODE[23]), 
		 -> STR_20(CODE[22]), STR_19(CODE[22]), STR_18(CODE[22]), STR_17(CODE[22]), 
		 -> STR_16(CODE[23]), STR_15(CODE[23]), STR_14(CODE[23]), STR_13(CODE[26]), 
		 -> STR_12(CODE[22]), STR_11(CODE[21]), STR_10(CODE[21]), STR_9(CODE[21]), 
		 -> STR_8(CODE[21]), STR_7(CODE[21]), STR_6(CODE[21]), STR_5(CODE[21]), 
		 -> STR_4(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 

    s	PTR const unsigned char  size(2) Largest target is 642
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), asctime@buf(BANK3[27]), nuls(STACK[7]), 
		 -> dbuf(BANK3[80]), spin(CODE[120]), STR_71(CODE[9]), STR_70(CODE[12]), 
		 -> D.lcd(BIGRAM[640]), D(BIGRAM[642]), T(CODE[176]), port_data(BIGRAM[512]), 
		 -> STR_3(CODE[5]), V(BANK2[181]), 

    a	PTR const unsigned char  size(2) Largest target is 642
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), asctime@buf(BANK3[27]), nuls(STACK[7]), 
		 -> dbuf(BANK3[80]), spin(CODE[120]), STR_71(CODE[9]), STR_70(CODE[12]), 
		 -> D.lcd(BIGRAM[640]), D(BIGRAM[642]), T(CODE[176]), port_data(BIGRAM[512]), 
		 -> STR_3(CODE[5]), V(BANK2[181]), 

    dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_96(CODE[4]), STR_95(CODE[4]), STR_92(CODE[4]), STR_91(CODE[4]), 
		 -> dbuf(BANK3[80]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_96(CODE[4]), STR_95(CODE[4]), STR_92(CODE[4]), STR_91(CODE[4]), 
		 -> dbuf(BANK3[80]), 

    fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_69(CODE[3]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    fmt	PTR const unsigned char  size(2) Largest target is 127
		 -> STR_90(CODE[127]), STR_88(CODE[3]), STR_87(CODE[3]), STR_86(CODE[21]), 
		 -> STR_85(CODE[21]), STR_84(CODE[21]), STR_83(CODE[21]), STR_82(CODE[21]), 
		 -> STR_81(CODE[21]), STR_80(CODE[26]), STR_79(CODE[15]), STR_78(CODE[15]), 
		 -> STR_77(CODE[15]), STR_76(CODE[15]), STR_75(CODE[10]), STR_74(CODE[10]), 
		 -> STR_73(CODE[19]), STR_72(CODE[19]), STR_68(CODE[14]), STR_67(CODE[28]), 
		 -> STR_66(CODE[28]), STR_65(CODE[28]), STR_64(CODE[22]), STR_63(CODE[22]), 
		 -> STR_62(CODE[22]), STR_61(CODE[22]), STR_60(CODE[22]), STR_59(CODE[22]), 
		 -> STR_58(CODE[22]), STR_57(CODE[22]), STR_56(CODE[22]), STR_55(CODE[21]), 
		 -> STR_54(CODE[22]), STR_53(CODE[22]), STR_52(CODE[22]), STR_51(CODE[22]), 
		 -> STR_50(CODE[22]), STR_49(CODE[22]), STR_48(CODE[24]), STR_47(CODE[24]), 
		 -> STR_46(CODE[24]), STR_45(CODE[30]), STR_44(CODE[24]), STR_43(CODE[24]), 
		 -> STR_42(CODE[23]), STR_41(CODE[23]), STR_40(CODE[23]), STR_39(CODE[23]), 
		 -> STR_38(CODE[23]), STR_37(CODE[23]), STR_36(CODE[23]), STR_35(CODE[23]), 
		 -> STR_34(CODE[23]), STR_33(CODE[23]), STR_32(CODE[23]), STR_31(CODE[23]), 
		 -> STR_30(CODE[18]), STR_29(CODE[17]), STR_28(CODE[17]), STR_27(CODE[22]), 
		 -> STR_26(CODE[22]), STR_25(CODE[22]), STR_24(CODE[14]), STR_23(CODE[27]), 
		 -> STR_22(CODE[27]), STR_21(CODE[23]), STR_20(CODE[22]), STR_19(CODE[22]), 
		 -> STR_18(CODE[22]), STR_17(CODE[22]), STR_16(CODE[23]), STR_15(CODE[23]), 
		 -> STR_14(CODE[23]), STR_13(CODE[26]), STR_12(CODE[22]), STR_11(CODE[21]), 
		 -> STR_10(CODE[21]), STR_9(CODE[21]), STR_8(CODE[21]), STR_7(CODE[21]), 
		 -> STR_6(CODE[21]), STR_5(CODE[21]), STR_4(CODE[21]), STR_2(CODE[21]), 
		 -> STR_1(CODE[21]), 

    s	PTR unsigned char  size(2) Largest target is 642
		 -> D.lcd(BIGRAM[640]), D(BIGRAM[642]), port_data(BIGRAM[512]), V(BANK2[181]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 642
		 -> D.lcd(BIGRAM[640]), D(BIGRAM[642]), port_data(BIGRAM[512]), V(BANK2[181]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    S7381_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 642
		 -> D(BIGRAM[642]), port_data(BIGRAM[512]), V(BANK2[181]), 

    fp.buffer	PTR unsigned char  size(2) Largest target is 642
		 -> D(BIGRAM[642]), port_data(BIGRAM[512]), V(BANK2[181]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    dest	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK5[67]), ring_buf1(BANK5[67]), 

    s	PTR unsigned char  size(2) Largest target is 67
		 -> ring_buf2(BANK5[67]), ring_buf1(BANK5[67]), 

    sp____localtime_r.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    tm.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    tm	PTR struct tm size(2) Largest target is 25
		 -> localtime@tm(BANK3[24]), 

    t	PTR const long long  size(1) Largest target is 8
		 -> pclock(BANK0[8]), 

    sp__localtime.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    sp____localtime_r	PTR struct tm size(2) Largest target is 25
		 -> localtime@tm(BANK3[24]), NULL(NULL[0]), 

    t	PTR const long long  size(1) Largest target is 8
		 -> pclock(BANK0[8]), 

    F191.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    s	PTR const unsigned char  size(2) Largest target is 127
		 -> STR_90(CODE[127]), STR_88(CODE[3]), STR_87(CODE[3]), STR_86(CODE[21]), 
		 -> STR_85(CODE[21]), STR_84(CODE[21]), STR_83(CODE[21]), STR_82(CODE[21]), 
		 -> STR_81(CODE[21]), STR_80(CODE[26]), STR_79(CODE[15]), STR_78(CODE[15]), 
		 -> STR_77(CODE[15]), STR_76(CODE[15]), STR_75(CODE[10]), STR_74(CODE[10]), 
		 -> STR_73(CODE[19]), STR_72(CODE[19]), STR_69(CODE[3]), STR_68(CODE[14]), 
		 -> STR_67(CODE[28]), STR_66(CODE[28]), STR_65(CODE[28]), STR_64(CODE[22]), 
		 -> STR_63(CODE[22]), STR_62(CODE[22]), STR_61(CODE[22]), STR_60(CODE[22]), 
		 -> STR_59(CODE[22]), STR_58(CODE[22]), STR_57(CODE[22]), STR_56(CODE[22]), 
		 -> STR_55(CODE[21]), STR_54(CODE[22]), STR_53(CODE[22]), STR_52(CODE[22]), 
		 -> STR_51(CODE[22]), STR_50(CODE[22]), STR_49(CODE[22]), STR_48(CODE[24]), 
		 -> STR_47(CODE[24]), STR_46(CODE[24]), STR_45(CODE[30]), STR_44(CODE[24]), 
		 -> STR_43(CODE[24]), STR_42(CODE[23]), STR_41(CODE[23]), STR_40(CODE[23]), 
		 -> STR_39(CODE[23]), STR_38(CODE[23]), STR_37(CODE[23]), STR_36(CODE[23]), 
		 -> STR_35(CODE[23]), STR_34(CODE[23]), STR_33(CODE[23]), STR_32(CODE[23]), 
		 -> STR_31(CODE[23]), STR_30(CODE[18]), STR_29(CODE[17]), STR_28(CODE[17]), 
		 -> STR_27(CODE[22]), STR_26(CODE[22]), STR_25(CODE[22]), STR_24(CODE[14]), 
		 -> STR_23(CODE[27]), STR_22(CODE[27]), STR_21(CODE[23]), STR_20(CODE[22]), 
		 -> STR_19(CODE[22]), STR_18(CODE[22]), STR_17(CODE[22]), STR_16(CODE[23]), 
		 -> STR_15(CODE[23]), STR_14(CODE[23]), STR_13(CODE[26]), STR_12(CODE[22]), 
		 -> STR_11(CODE[21]), STR_10(CODE[21]), STR_9(CODE[21]), STR_8(CODE[21]), 
		 -> STR_7(CODE[21]), STR_6(CODE[21]), STR_5(CODE[21]), STR_4(CODE[21]), 
		 -> STR_2(CODE[21]), STR_1(CODE[21]), 

    cp	PTR unsigned char  size(2) Largest target is 27
		 -> asctime@buf(BANK3[27]), 

    tim.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    tim	PTR const struct tm size(2) Largest target is 25
		 -> localtime@tm(BANK3[24]), NULL(NULL[0]), 

    s	PTR const unsigned char  size(2) Largest target is 37
		 -> STR_128(CODE[37]), STR_127(CODE[22]), 

    cp	PTR unsigned char  size(2) Largest target is 27
		 -> asctime@buf(BANK3[27]), 

    f1p	PTR  size(2) Largest target is 320
		 -> C(BIGRAM[320]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fmt	PTR const unsigned char  size(2) Largest target is 127
		 -> STR_90(CODE[127]), STR_88(CODE[3]), STR_87(CODE[3]), STR_86(CODE[21]), 
		 -> STR_85(CODE[21]), STR_84(CODE[21]), STR_83(CODE[21]), STR_82(CODE[21]), 
		 -> STR_81(CODE[21]), STR_80(CODE[26]), STR_79(CODE[15]), STR_78(CODE[15]), 
		 -> STR_77(CODE[15]), STR_76(CODE[15]), STR_75(CODE[10]), STR_74(CODE[10]), 
		 -> STR_73(CODE[19]), STR_72(CODE[19]), STR_69(CODE[3]), STR_68(CODE[14]), 
		 -> STR_67(CODE[28]), STR_66(CODE[28]), STR_65(CODE[28]), STR_64(CODE[22]), 
		 -> STR_63(CODE[22]), STR_62(CODE[22]), STR_61(CODE[22]), STR_60(CODE[22]), 
		 -> STR_59(CODE[22]), STR_58(CODE[22]), STR_57(CODE[22]), STR_56(CODE[22]), 
		 -> STR_55(CODE[21]), STR_54(CODE[22]), STR_53(CODE[22]), STR_52(CODE[22]), 
		 -> STR_51(CODE[22]), STR_50(CODE[22]), STR_49(CODE[22]), STR_48(CODE[24]), 
		 -> STR_47(CODE[24]), STR_46(CODE[24]), STR_45(CODE[30]), STR_44(CODE[24]), 
		 -> STR_43(CODE[24]), STR_42(CODE[23]), STR_41(CODE[23]), STR_40(CODE[23]), 
		 -> STR_39(CODE[23]), STR_38(CODE[23]), STR_37(CODE[23]), STR_36(CODE[23]), 
		 -> STR_35(CODE[23]), STR_34(CODE[23]), STR_33(CODE[23]), STR_32(CODE[23]), 
		 -> STR_31(CODE[23]), STR_30(CODE[18]), STR_29(CODE[17]), STR_28(CODE[17]), 
		 -> STR_27(CODE[22]), STR_26(CODE[22]), STR_25(CODE[22]), STR_24(CODE[14]), 
		 -> STR_23(CODE[27]), STR_22(CODE[27]), STR_21(CODE[23]), STR_20(CODE[22]), 
		 -> STR_19(CODE[22]), STR_18(CODE[22]), STR_17(CODE[22]), STR_16(CODE[23]), 
		 -> STR_15(CODE[23]), STR_14(CODE[23]), STR_13(CODE[26]), STR_12(CODE[22]), 
		 -> STR_11(CODE[21]), STR_10(CODE[21]), STR_9(CODE[21]), STR_8(CODE[21]), 
		 -> STR_7(CODE[21]), STR_6(CODE[21]), STR_5(CODE[21]), STR_4(CODE[21]), 
		 -> STR_2(CODE[21]), STR_1(CODE[21]), 

    cfmt	PTR unsigned char  size(2) Largest target is 127
		 -> STR_90(CODE[127]), STR_88(CODE[3]), STR_87(CODE[3]), STR_86(CODE[21]), 
		 -> STR_85(CODE[21]), STR_84(CODE[21]), STR_83(CODE[21]), STR_82(CODE[21]), 
		 -> STR_81(CODE[21]), STR_80(CODE[26]), STR_79(CODE[15]), STR_78(CODE[15]), 
		 -> STR_77(CODE[15]), STR_76(CODE[15]), STR_75(CODE[10]), STR_74(CODE[10]), 
		 -> STR_73(CODE[19]), STR_72(CODE[19]), STR_69(CODE[3]), STR_68(CODE[14]), 
		 -> STR_67(CODE[28]), STR_66(CODE[28]), STR_65(CODE[28]), STR_64(CODE[22]), 
		 -> STR_63(CODE[22]), STR_62(CODE[22]), STR_61(CODE[22]), STR_60(CODE[22]), 
		 -> STR_59(CODE[22]), STR_58(CODE[22]), STR_57(CODE[22]), STR_56(CODE[22]), 
		 -> STR_55(CODE[21]), STR_54(CODE[22]), STR_53(CODE[22]), STR_52(CODE[22]), 
		 -> STR_51(CODE[22]), STR_50(CODE[22]), STR_49(CODE[22]), STR_48(CODE[24]), 
		 -> STR_47(CODE[24]), STR_46(CODE[24]), STR_45(CODE[30]), STR_44(CODE[24]), 
		 -> STR_43(CODE[24]), STR_42(CODE[23]), STR_41(CODE[23]), STR_40(CODE[23]), 
		 -> STR_39(CODE[23]), STR_38(CODE[23]), STR_37(CODE[23]), STR_36(CODE[23]), 
		 -> STR_35(CODE[23]), STR_34(CODE[23]), STR_33(CODE[23]), STR_32(CODE[23]), 
		 -> STR_31(CODE[23]), STR_30(CODE[18]), STR_29(CODE[17]), STR_28(CODE[17]), 
		 -> STR_27(CODE[22]), STR_26(CODE[22]), STR_25(CODE[22]), STR_24(CODE[14]), 
		 -> STR_23(CODE[27]), STR_22(CODE[27]), STR_21(CODE[23]), STR_20(CODE[22]), 
		 -> STR_19(CODE[22]), STR_18(CODE[22]), STR_17(CODE[22]), STR_16(CODE[23]), 
		 -> STR_15(CODE[23]), STR_14(CODE[23]), STR_13(CODE[26]), STR_12(CODE[22]), 
		 -> STR_11(CODE[21]), STR_10(CODE[21]), STR_9(CODE[21]), STR_8(CODE[21]), 
		 -> STR_7(CODE[21]), STR_6(CODE[21]), STR_5(CODE[21]), STR_4(CODE[21]), 
		 -> STR_2(CODE[21]), STR_1(CODE[21]), 

    cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), asctime@buf(BANK3[27]), STR_71(CODE[9]), 
		 -> STR_70(CODE[12]), D.lcd(BIGRAM[640]), D(BIGRAM[642]), T(CODE[176]), 
		 -> STR_3(CODE[5]), V(BANK2[181]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> cfmt(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), asctime@buf(BANK3[27]), STR_71(CODE[9]), 
		 -> STR_70(CODE[12]), D.lcd(BIGRAM[640]), D(BIGRAM[642]), T(CODE[176]), 
		 -> STR_3(CODE[5]), V(BANK2[181]), 

    cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), asctime@buf(BANK3[27]), nuls(STACK[7]), 
		 -> STR_71(CODE[9]), STR_70(CODE[12]), D.lcd(BIGRAM[640]), D(BIGRAM[642]), 
		 -> T(CODE[176]), STR_3(CODE[5]), V(BANK2[181]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    log_ptr	PTR unsigned char  size(2) Largest target is 512
		 -> port_data(BIGRAM[512]), 

    h	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    h	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    h	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    sp__hid_input	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    h	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    t	PTR long long  size(2) Largest target is 8
		 -> time@current_time(BANK0[8]), NULL(NULL[0]), 

    hist	PTR volatile struct hist_type size(2) Largest target is 320
		 -> C.hist(BIGRAM[97]), C(BIGRAM[320]), 

    r_cal_ptr	PTR unsigned char  size(2) Largest target is 155
		 -> R(BANK1[155]), 

    r_cal_ptr	PTR unsigned char  size(2) Largest target is 155
		 -> r_cal(BANK4[155]), 

    build_time	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_71(CODE[9]), 

    build_date	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_70(CODE[12]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK5[67]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK5[67]), 

    sp__memset	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK5[67]), ring_buf1(BANK5[67]), 

    _this	PTR volatile struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK5[67]), ring_buf1(BANK5[67]), 

    sp__port_data_dma_ptr	PTR unsigned char  size(2) Largest target is 512
		 -> port_data(BIGRAM[512]), 

    strPtr	PTR unsigned char  size(2) Largest target is 642
		 -> D.lcd(BIGRAM[640]), D(BIGRAM[642]), V(BANK2[181]), 

    strPtr	PTR unsigned char  size(2) Largest target is 642
		 -> D.lcd(BIGRAM[640]), D(BIGRAM[642]), V(BANK2[181]), 

    sp__hid_display	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    sp__asctime	PTR unsigned char  size(2) Largest target is 27
		 -> asctime@buf(BANK3[27]), 

    S3418tm$__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    sp__localtime	PTR struct tm size(2) Largest target is 25
		 -> localtime@tm(BANK3[24]), NULL(NULL[0]), 

    t_mbmc	PTR struct tm size(2) Largest target is 25
		 -> localtime@tm(BANK3[24]), NULL(NULL[0]), 

    sp__get_vterm_ptr	PTR unsigned char  size(2) Largest target is 642
		 -> D.lcd(BIGRAM[640]), D(BIGRAM[642]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), 

    TMR3_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    S1999spi_link_type$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK5[67]), 

    spi_link.tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK5[67]), 

    S1999spi_link_type$tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK5[67]), 

    spi_link.tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK5[67]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), Absolute function(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    None.

Critical Paths under _TMR3_ISR in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _ADCC_ISR in COMRAM

    None.

Critical Paths under _ADCC_ThresholdISR in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMASCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMADCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAA_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAOR_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _TMR3_ISR in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _ADCC_ThresholdISR in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _TMR3_ISR in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _ADCC_ThresholdISR in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _TMR3_ISR in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _ADCC_ThresholdISR in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _TMR3_ISR in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _ADCC_ThresholdISR in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _TMR3_ISR in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _ADCC_ThresholdISR in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _TMR3_ISR in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _ADCC_ThresholdISR in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _TMR3_ISR in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _ADCC_ThresholdISR in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _TMR3_ISR in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _ADCC_ThresholdISR in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _TMR3_ISR in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _ADCC_ThresholdISR in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _TMR3_ISR in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _ADCC_ThresholdISR in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _TMR3_ISR in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _ADCC_ThresholdISR in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _TMR3_ISR in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _ADCC_ThresholdISR in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _TMR3_ISR in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _ADCC_ThresholdISR in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _TMR3_ISR in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _ADCC_ThresholdISR in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _TMR3_ISR in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _ADCC_ThresholdISR in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _TMR3_ISR in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _ADCC_ThresholdISR in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _TMR3_ISR in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _ADCC_ThresholdISR in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _TMR3_ISR in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _ADCC_ThresholdISR in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _TMR3_ISR in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _ADCC_ThresholdISR in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _TMR3_ISR in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _ADCC_ThresholdISR in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _TMR3_ISR in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _ADCC_ThresholdISR in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _TMR3_ISR in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _ADCC_ThresholdISR in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _TMR3_ISR in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _ADCC_ThresholdISR in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _TMR3_ISR in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _ADCC_ThresholdISR in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _TMR3_ISR in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _ADCC_ThresholdISR in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _TMR3_ISR in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _ADCC_ThresholdISR in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _TMR3_ISR in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _ADCC_ThresholdISR in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _TMR3_ISR in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _ADCC_ThresholdISR in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _TMR3_ISR in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _ADCC_ThresholdISR in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _TMR3_ISR in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _ADCC_ThresholdISR in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _TMR3_ISR in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _ADCC_ThresholdISR in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Critical Paths under _TMR3_ISR in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _ADCC_ThresholdISR in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                17    17      0  439399
                  _SYSTEM_Initialize
                         _StartTimer
                          _TimerDone
                             _WaitMs
                            ___fladd
                             ___flge
                            ___fltol
                            _asctime
                    _calc_model_data
                      _calc_ror_data
                     _check_adc_scan
                 _check_enter_button
                         _check_help
                     _clear_adc_scan
                   _clear_hid_pflags
                    _conv_raw_result
                   _convert_adc_data
                 _current_sensor_cal
                    _display_history
                _eaDogM_WriteCommand
                          _esr_check
                              _fabsf
                     _get_raw_result
                         _get_switch
                      _get_vterm_ptr
                        _hid_display
                          _init_bsoc
                       _init_display
                      _init_port_dma
                     _load_hist_data
                          _localtime
                          _lp_filter
                      _mode_lamp_dim
                      _read_cal_data
                            _set_dac
                          _set_dac_a
                          _set_dac_b
                   _set_display_info
                      _set_hist_flag
                 _set_load_relay_one
                 _set_load_relay_two
                           _set_time
                          _set_vterm
                           _spinners
                            _sprintf
                              _srand
                     _start_adc_scan
               _start_switch_handler
                         _static_soc
                               _time
                    _update_cal_data
                   _update_hist_data
                         _update_lcd
                      _wait_lcd_done
                     _write_cal_data
 ---------------------------------------------------------------------------------
 (1) _update_hist_data                                     3     0      3      88
 ---------------------------------------------------------------------------------
 (1) _update_cal_data                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _static_soc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _start_switch_handler                                 0     0      0      22
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _set_time                                             8     0      8      22
 ---------------------------------------------------------------------------------
 (1) _set_hist_flag                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _set_dac_b                                            4     0      4    1600
                    _convert_dac_raw
 ---------------------------------------------------------------------------------
 (1) _set_dac_a                                            4     0      4    1600
                    _convert_dac_raw
 ---------------------------------------------------------------------------------
 (2) _convert_dac_raw                                      4     0      4    1578
                            ___fldiv
                             ___flge
                            ___fltol
 ---------------------------------------------------------------------------------
 (1) _set_dac                                              0     0      0      44
                  _SPI1_Exchange8bit
                    _dac_spi_control
 ---------------------------------------------------------------------------------
 (2) _dac_spi_control                                      1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _read_cal_data                                        7     7      0     615
                  _CRC_8BitDataWrite
            _CRC_CalculatedResultGet
                     _CRC_Initialize
                         _CRC_IsBusy
                          _CRC_Start
                    _DATAEE_ReadByte
 ---------------------------------------------------------------------------------
 (2) _DATAEE_ReadByte                                      2     0      2      45
 ---------------------------------------------------------------------------------
 (1) _load_hist_data                                       2     2      0    2841
                            ___fldiv
                            ___flmul
                            ___fltol
                         _start_bsoc
                          _stop_bsoc
                               _time
 ---------------------------------------------------------------------------------
 (1) _init_port_dma                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    1356
                      _ringBufS_init
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                      _send_lcd_data
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_data                                        1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd                                         1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _SPI1_Exchange8bit                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _ringBufS_init                                        2     0      2    1048
                             _memset
 ---------------------------------------------------------------------------------
 (1) _init_bsoc                                            0     0      0    8435
           _TMR3_SetInterruptHandler
                       _Volts_to_SOC
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                    _conv_raw_result
 ---------------------------------------------------------------------------------
 (2) _Volts_to_SOC                                         7     3      4     136
 ---------------------------------------------------------------------------------
 (1) _hid_display                                          2     0      2     771
                          _hid_input
 ---------------------------------------------------------------------------------
 (2) _hid_input                                            2     0      2     237
                         _get_switch
 ---------------------------------------------------------------------------------
 (1) _esr_check                                            1     0      1    8599
                         _StartTimer
                          _TimerDone
                            ___fldiv
                            ___flsub
                    _conv_raw_result
                              _fabsf
                 _set_load_relay_one
                 _set_load_relay_two
                  _update_adc_result
 ---------------------------------------------------------------------------------
 (2) _update_adc_result                                    0     0      0     132
                         _StartTimer
                          _TimerDone
                     _check_adc_scan
                     _clear_adc_scan
                     _start_adc_scan
 ---------------------------------------------------------------------------------
 (3) _check_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _set_load_relay_two                                   1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_load_relay_one                                   1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     0      1    1495
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (1) _display_history                                      0     0      0   83248
                             _WaitMs
                            _asctime
                         _get_switch
                      _get_vterm_ptr
                          _localtime
                            _sprintf
                               _time
                         _update_lcd
 ---------------------------------------------------------------------------------
 (18) _time                                                8     0      8      23
 ---------------------------------------------------------------------------------
 (1) _localtime                                            1     0      1   14641
                      ___localtime_r
 ---------------------------------------------------------------------------------
 (2) ___localtime_r                                        3     0      3   14610
                       ___secs_to_tm
                     ___secs_to_zone
 ---------------------------------------------------------------------------------
 (3) ___secs_to_zone                                      46    28     18   11126
                            ___aodiv
                     ___year_to_secs
                           _do_tzset
                       _rule_to_secs
                         _scan_trans
                          _zi_read32
 ---------------------------------------------------------------------------------
 (4) _scan_trans                                          30    18     12    1990
                          _zi_read32
 ---------------------------------------------------------------------------------
 (4) _zi_read32                                            2     0      2      88
 ---------------------------------------------------------------------------------
 (4) _rule_to_secs                                        30    22      8    3167
                            ___aldiv
                            ___aomod
                             ___lmul
                    ___month_to_secs
                     ___year_to_secs
                      _days_in_month
 ---------------------------------------------------------------------------------
 (5) _days_in_month                                        4     0      4      66
 ---------------------------------------------------------------------------------
 (5) ___year_to_secs                                      24    14     10    1473
                            ___aodiv
                            ___aomod
                             ___lmul
                             ___omul
 ---------------------------------------------------------------------------------
 (5) ___month_to_secs                                      8     4      4      90
 ---------------------------------------------------------------------------------
 (4) _do_tzset                                             2     2      0    2777
                            _getname
                             _getoff
                            _getrule
 ---------------------------------------------------------------------------------
 (5) _getrule                                              6     2      4    1222
                             _getint
                             _getoff
 ---------------------------------------------------------------------------------
 (6) _getoff                                               6     4      2     425
                             _getint
 ---------------------------------------------------------------------------------
 (7) _getint                                               4     2      2     112
 ---------------------------------------------------------------------------------
 (5) _getname                                              6     2      4     663
 ---------------------------------------------------------------------------------
 (3) ___secs_to_tm                                        67    57     10    3174
                            ___aldiv
                            ___almod
                            ___aodiv
                            ___aomod
                             ___lmul
                             ___omul
 ---------------------------------------------------------------------------------
 (6) ___omul                                              24     8     16      92
 ---------------------------------------------------------------------------------
 (6) ___lmul                                              12     4      8      92
 ---------------------------------------------------------------------------------
 (4) ___almod                                             10     2      8     296
 ---------------------------------------------------------------------------------
 (5) ___aldiv                                             14     6      8     300
 ---------------------------------------------------------------------------------
 (2) _asctime                                              6     4      2    2527
                            ___awdiv
                            ___awmod
                              _put2d
 ---------------------------------------------------------------------------------
 (3) _put2d                                                5     0      5     959
                            ___awdiv
                            ___lbmod
 ---------------------------------------------------------------------------------
 (4) ___lbmod                                              4     2      2     232
 ---------------------------------------------------------------------------------
 (1) _current_sensor_cal                                   9     9      0   67698
                             _WaitMs
                   _cal_current_zero
                     _clear_adc_scan
                     _get_raw_result
                         _get_switch
                      _get_vterm_ptr
                           _spinners
                            _sprintf
                     _start_adc_scan
                         _update_lcd
                     _write_cal_data
 ---------------------------------------------------------------------------------
 (1) _write_cal_data                                       7     7      0     593
                  _CRC_8BitDataWrite
            _CRC_CalculatedResultGet
                     _CRC_Initialize
                         _CRC_IsBusy
                          _CRC_Start
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (2) _DATAEE_WriteByte                                     4     1      3      90
 ---------------------------------------------------------------------------------
 (2) _CRC_Start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CRC_IsBusy                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CRC_CalculatedResultGet                              7     4      3     209
                   _CRC_ReverseValue
 ---------------------------------------------------------------------------------
 (3) _CRC_ReverseValue                                     6     4      2      94
 ---------------------------------------------------------------------------------
 (2) _CRC_8BitDataWrite                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _start_adc_scan                                       0     0      0      66
      _ADCC_DischargeSampleCapacitor
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (28) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (28) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _spinners                                             3     1      2     415
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _get_switch                                           1     0      1      44
 ---------------------------------------------------------------------------------
 (3) _clear_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _cal_current_zero                                     5     0      5     242
                        _check_range
 ---------------------------------------------------------------------------------
 (3) _check_range                                          6     0      6     132
 ---------------------------------------------------------------------------------
 (1) _convert_adc_data                                     1     1      0   10995
                    _conv_raw_result
                          _lp_filter
 ---------------------------------------------------------------------------------
 (1) _clear_hid_pflags                                     2     0      2      93
 ---------------------------------------------------------------------------------
 (1) _check_help                                           2     1      1  132030
                         _StartTimer
                          _TimerDone
                       _display_help
                       _display_info
                      _get_vterm_ptr
                        _help_button
                   _mode_lamp_bright
                      _mode_lamp_dim
                   _set_display_info
              _set_temp_display_help
                          _set_vterm
                            _sprintf
                         _update_lcd
                         _vterm_dump
 ---------------------------------------------------------------------------------
 (2) _vterm_dump                                           0     0      0   65731
                             _WaitMs
            _eaDogM_WriteStringAtPos
                      _get_vterm_ptr
                            _sprintf
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (17) _sprintf                                           104    10     94   30659
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _get_vterm_ptr                                        2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _WaitMs                                               2     0      2      88
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _update_lcd                                           1     0      1   35222
            _eaDogM_WriteStringAtPos
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteStringAtPos                              5     1      4   34896
                 _eaDogM_WriteString
                   _send_lcd_cmd_dma
                  _send_lcd_data_dma
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (3) _send_lcd_cmd_dma                                     1     0      1    1464
                  _send_lcd_data_dma
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (1) _wait_lcd_done                                        0     0      0      44
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _wdtdelay                                             4     0      4      44
 ---------------------------------------------------------------------------------
 (3) _send_lcd_data_dma                                    1     0      1    1389
                     _ringBufS_flush
                   _ringBufS_put_dma
                          _start_lcd
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (3) _eaDogM_WriteString                                   2     0      2   31860
                             _printf
                     _ringBufS_flush
                          _start_lcd
                             _strlen
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (4) _wait_lcd_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _start_lcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ringBufS_flush                                       3     0      3    1172
                             _memset
 ---------------------------------------------------------------------------------
 (5) _memset                                              10     4      6    1017
 ---------------------------------------------------------------------------------
 (4) _printf                                               8     4      4   30434
                           _vfprintf
 ---------------------------------------------------------------------------------
 (18) _vfprintf                                            8     2      6   30281
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (19) _vfpfcnvrt                                          45    39      6   29889
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (20) _xtoa                                               31    20     11    2704
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (21) _toupper                                             4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (22) _islower                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _isalpha                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (20) _utoa                                               24    14     10    2411
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (21) ___lomod                                            17     1     16     159
 ---------------------------------------------------------------------------------
 (21) ___lodiv                                            25     9     16     162
 ---------------------------------------------------------------------------------
 (20) _strncmp                                            10     4      6     225
 ---------------------------------------------------------------------------------
 (20) _stoa                                               21    17      4    1329
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (20) _efgtoa                                             63    56      7   14099
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (20) _tolower                                             4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (21) _isupper                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _strcpy                                              8     4      4     137
 ---------------------------------------------------------------------------------
 (21) _floorf                                             14    10      4     338
 ---------------------------------------------------------------------------------
 (21) ___fpclassifyf                                      10     6      4     135
 ---------------------------------------------------------------------------------
 (21) ___fltol                                             6     2      4     229
 ---------------------------------------------------------------------------------
 (21) ___flneg                                             4     0      4      45
 ---------------------------------------------------------------------------------
 (21) ___fleq                                              8     0      8      90
 ---------------------------------------------------------------------------------
 (21) ___awmod                                             6     2      4     433
 ---------------------------------------------------------------------------------
 (21) ___awdiv                                             8     4      4     445
 ---------------------------------------------------------------------------------
 (20) _dtoa                                               28    18     10    3018
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (21) _abs                                                 2     0      2      66
 ---------------------------------------------------------------------------------
 (21) ___aomod                                            18     2     16     296
 ---------------------------------------------------------------------------------
 (21) ___aodiv                                            26    10     16     300
 ---------------------------------------------------------------------------------
 (20) _ctoa                                                7     4      3    1790
                                _pad
 ---------------------------------------------------------------------------------
 (21) _pad                                                10     4      6    1691
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (17) _strlen                                              4     2      2     130
 ---------------------------------------------------------------------------------
 (22) _fputs                                               7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (23) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (24) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (25) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (20) _atoi                                               11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (21) _isspace                                             3     1      2      68
 ---------------------------------------------------------------------------------
 (20) _isdigit                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _set_vterm                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _set_temp_display_help                                1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_display_info                                     1     0      1      44
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _mode_lamp_dim                                        2     0      2      66
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _mode_lamp_bright                                     0     0      0      44
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _PWM8_LoadDutyValue                                   2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _help_button                                          0     0      0      66
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (2) _TimerDone                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (17) _StartTimer                                          3     0      3      44
 ---------------------------------------------------------------------------------
 (2) _display_info                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_help                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_enter_button                                   2     0      2      93
 ---------------------------------------------------------------------------------
 (1) _calc_ror_data                                        0     0      0    7418
                             ___flge
                            ___flsub
                    _conv_raw_result
                              _fabsf
 ---------------------------------------------------------------------------------
 (17) _fabsf                                               8     4      4      47
 ---------------------------------------------------------------------------------
 (18) _conv_raw_result                                     2     0      2    5182
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (19) _nanf                                                6     4      2      23
 ---------------------------------------------------------------------------------
 (19) _get_raw_result                                      1     0      1      22
 ---------------------------------------------------------------------------------
 (19) ___xxtofl                                           10     5      5     322
 ---------------------------------------------------------------------------------
 (21) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (21) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (1) _calc_model_data                                      0     0      0   11072
                            ___fladd
                            ___flmul
                            ___flsub
                          _lp_filter
                         _start_bsoc
                          _stop_bsoc
 ---------------------------------------------------------------------------------
 (2) _stop_bsoc                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _start_bsoc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lp_filter                                           10     4      6    5658
                            ___fladd
                            ___flmul
                            ___flsub
 ---------------------------------------------------------------------------------
 (21) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (22) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (21) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     335
                    _ADCC_Initialize
                  _CLKREF_Initialize
                     _CRC_Initialize
                    _DMA1_Initialize
                    _DMA2_Initialize
                 _EXT_INT_Initialize
                     _FVR_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM8_Initialize
                    _SPI1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0      44
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0      22
        _UART1_SetRxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      22
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0      22
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      0     0      0      22
           _TMR3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR3_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      23
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      44
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _INT1_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _DMA2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DMA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CRC_Initialize                                       4     4      0      92
 ---------------------------------------------------------------------------------
 (2) _CLKREF_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0      44
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADTIInterruptHandler                         3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADIInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _INT1_ISR                                            4     4      0     205
                                              6 COMRAM     4     4      0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (15) _INT1_CallBack                                       0     0      0     205
                   Absolute function *
       _INT1_DefaultInterruptHandler *
                     _switch_handler *
 ---------------------------------------------------------------------------------
 (16) _switch_handler                                      2     2      0     205
 ---------------------------------------------------------------------------------
 (16) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR5_ISR                                           31    31      0    5544
                                             10 COMRAM    31    31      0
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR5_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (15) _TMR5_CallBack                                       0     0      0    5454
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _TMR5_DefaultInterruptHandler                        0     0      0    5454
                     _check_day_time
 ---------------------------------------------------------------------------------
 (17) _check_day_time                                      4     4      0    5454
                             ___flge
                    _conv_raw_result
               _get_ac_charger_relay
               _set_ac_charger_relay
                               _time
 ---------------------------------------------------------------------------------
 (18) _time                                                8     0      8      23
 ---------------------------------------------------------------------------------
 (18) _set_ac_charger_relay                                1     0      1      22
 ---------------------------------------------------------------------------------
 (17) _get_ac_charger_relay                                0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _conv_raw_result                                     2     0      2    5182
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (19) _nanf                                                6     4      2      23
 ---------------------------------------------------------------------------------
 (19) _get_raw_result                                      1     0      1      22
 ---------------------------------------------------------------------------------
 (19) ___xxtofl                                           10     5      5     322
 ---------------------------------------------------------------------------------
 (21) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (22) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (21) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (21) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (21) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR3_ISR                                           25    25      0   36148
                                              0 BANK0     25    25      0
                      _TMR3_CallBack
                    _TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR3_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (15) _TMR3_CallBack                                       0     0      0   36058
                   Absolute function *
       _TMR3_DefaultInterruptHandler *
                          _calc_bsoc *
 ---------------------------------------------------------------------------------
 (16) _calc_bsoc                                           6     6      0   36058
                         _StartTimer
                          ___asfladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                            ___fltol
                              _fabsf
               _get_ac_charger_relay
                  _port_data_dma_ptr
                 _send_port_data_dma
                            _sprintf
                             _strlen
 ---------------------------------------------------------------------------------
 (17) _sprintf                                           104    10     94   30659
                           _vfprintf
 ---------------------------------------------------------------------------------
 (18) _vfprintf                                            8     2      6   30281
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (19) _vfpfcnvrt                                          45    39      6   29889
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (20) _xtoa                                               31    20     11    2704
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (21) _toupper                                             4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (22) _islower                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _isalpha                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (20) _utoa                                               24    14     10    2411
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (21) ___lomod                                            17     1     16     159
 ---------------------------------------------------------------------------------
 (21) ___lodiv                                            25     9     16     162
 ---------------------------------------------------------------------------------
 (20) _strncmp                                            10     4      6     225
 ---------------------------------------------------------------------------------
 (20) _stoa                                               21    17      4    1329
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (20) _efgtoa                                             63    56      7   14099
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (20) _tolower                                             4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (21) _isupper                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _strcpy                                              8     4      4     137
 ---------------------------------------------------------------------------------
 (21) _floorf                                             14    10      4     338
 ---------------------------------------------------------------------------------
 (21) ___fpclassifyf                                      10     6      4     135
 ---------------------------------------------------------------------------------
 (21) ___fltol                                             6     2      4     229
 ---------------------------------------------------------------------------------
 (21) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (21) ___flneg                                             4     0      4      45
 ---------------------------------------------------------------------------------
 (21) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (21) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (21) ___fleq                                              8     0      8      90
 ---------------------------------------------------------------------------------
 (21) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (21) ___awmod                                             6     2      4     433
 ---------------------------------------------------------------------------------
 (21) ___awdiv                                             8     4      4     445
 ---------------------------------------------------------------------------------
 (20) _dtoa                                               28    18     10    3018
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (21) _abs                                                 2     0      2      66
 ---------------------------------------------------------------------------------
 (21) ___aomod                                            18     2     16     296
 ---------------------------------------------------------------------------------
 (21) ___aodiv                                            26    10     16     300
 ---------------------------------------------------------------------------------
 (20) _ctoa                                                7     4      3    1790
                                _pad
 ---------------------------------------------------------------------------------
 (21) _pad                                                10     4      6    1691
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (17) _strlen                                              4     2      2     130
 ---------------------------------------------------------------------------------
 (22) _fputs                                               7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (23) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (24) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (25) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (20) _atoi                                               11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (21) _isspace                                             3     1      2      68
 ---------------------------------------------------------------------------------
 (20) _isdigit                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (17) _send_port_data_dma                                  2     0      2      45
 ---------------------------------------------------------------------------------
 (17) _port_data_dma_ptr                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _get_ac_charger_relay                                0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _fabsf                                               8     4      4      47
 ---------------------------------------------------------------------------------
 (17) ___asfladd                                           6     0      6    2028
                            ___fladd
 ---------------------------------------------------------------------------------
 (22) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (17) _StartTimer                                          3     0      3      44
 ---------------------------------------------------------------------------------
 (16) _TMR3_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (27) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (28) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _ADCC_ISR                                            0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                    _adc_int_handler *
 ---------------------------------------------------------------------------------
 (27) _adc_int_handler                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (27) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _ADCC_ThresholdISR                                   5     5      0      22
                                              0 COMRAM     5     5      0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                  _adc_int_t_handler *
 ---------------------------------------------------------------------------------
 (27) _adc_int_t_handler                                   0     0      0      22
      _ADCC_DischargeSampleCapacitor
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (28) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (28) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (27) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (27) _UART1_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _UART2_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (27) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _UART2_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (27) _UART2_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _TMR6_ISR                                            1     1      0      90
                                              5 COMRAM     1     1      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (27) _TMR6_CallBack                                       0     0      0      90
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (28) _TMR6_DefaultInterruptHandler                        1     1      0      90
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMASCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMADCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMAA_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMAOR_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 26
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
     _CLKREF_Initialize
     _CRC_Initialize
     _DMA1_Initialize
     _DMA2_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
     _FVR_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM8_Initialize
     _SPI1_Initialize
     _TMR2_Initialize
     _TMR3_Initialize
       _TMR3_SetInterruptHandler
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetRxInterruptHandler
     _UART2_Initialize
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _StartTimer
   _TimerDone
   _WaitMs
     _StartTimer
     _TimerDone
   ___fladd
   ___flge
   ___fltol
   _asctime
     ___awdiv
     ___awmod
     _put2d
       ___awdiv
       ___lbmod
   _calc_model_data
     ___fladd
     ___flmul
     ___flsub
       ___fladd
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
     _start_bsoc
     _stop_bsoc
   _calc_ror_data
     ___flge
     ___flsub
       ___fladd
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _fabsf
   _check_adc_scan
   _check_enter_button
   _check_help
     _StartTimer
     _TimerDone
     _display_help
     _display_info
     _get_vterm_ptr
     _help_button
       _StartTimer
       _TimerDone
     _mode_lamp_bright
       _PWM8_LoadDutyValue
     _mode_lamp_dim
       _PWM8_LoadDutyValue
     _set_display_info
       _TimerDone
     _set_temp_display_help
     _set_vterm
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _send_lcd_data_dma
             _ringBufS_flush
               _memset
             _ringBufS_put_dma
             _start_lcd
             _wait_lcd_set
           _wait_lcd_done
             _wdtdelay
         _send_lcd_data_dma
           _ringBufS_flush
             _memset
           _ringBufS_put_dma
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
           _wdtdelay
       _wait_lcd_done
         _wdtdelay
     _vterm_dump
       _WaitMs
         _StartTimer
         _TimerDone
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _send_lcd_data_dma
             _ringBufS_flush
               _memset
             _ringBufS_put_dma
             _start_lcd
             _wait_lcd_set
           _wait_lcd_done
             _wdtdelay
         _send_lcd_data_dma
           _ringBufS_flush
             _memset
           _ringBufS_put_dma
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
           _wdtdelay
       _get_vterm_ptr
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _wait_lcd_done
         _wdtdelay
   _clear_adc_scan
   _clear_hid_pflags
   _conv_raw_result
     ___fldiv
     ___flmul
     ___flsub
       ___fladd
     ___xxtofl
     _get_raw_result
     _nanf
   _convert_adc_data
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
   _current_sensor_cal
     _WaitMs
       _StartTimer
       _TimerDone
     _cal_current_zero
       _check_range
     _clear_adc_scan
     _get_raw_result
     _get_switch
     _get_vterm_ptr
     _spinners
       _strlen
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _start_adc_scan
       _ADCC_DischargeSampleCapacitor
       _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
       _ADCC_StartConversion
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _send_lcd_data_dma
             _ringBufS_flush
               _memset
             _ringBufS_put_dma
             _start_lcd
             _wait_lcd_set
           _wait_lcd_done
             _wdtdelay
         _send_lcd_data_dma
           _ringBufS_flush
             _memset
           _ringBufS_put_dma
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
           _wdtdelay
       _wait_lcd_done
         _wdtdelay
     _write_cal_data
       _CRC_8BitDataWrite
       _CRC_CalculatedResultGet
         _CRC_ReverseValue
       _CRC_Initialize
       _CRC_IsBusy
       _CRC_Start
       _DATAEE_WriteByte
   _display_history
     _WaitMs
       _StartTimer
       _TimerDone
     _asctime
       ___awdiv
       ___awmod
       _put2d
         ___awdiv
         ___lbmod
     _get_switch
     _get_vterm_ptr
     _localtime
       ___localtime_r
         ___secs_to_tm
           ___aldiv
           ___almod
           ___aodiv
           ___aomod
           ___lmul
           ___omul
         ___secs_to_zone
           ___aodiv
           ___year_to_secs
             ___aodiv
             ___aomod
             ___lmul
             ___omul
           _do_tzset
             _getname
             _getoff
               _getint
             _getrule
               _getint
               _getoff
                 _getint
           _rule_to_secs
             ___aldiv
             ___aomod
             ___lmul
             ___month_to_secs
             ___year_to_secs
               ___aodiv
               ___aomod
               ___lmul
               ___omul
             _days_in_month
           _scan_trans
             _zi_read32
           _zi_read32
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _time
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _send_lcd_data_dma
             _ringBufS_flush
               _memset
             _ringBufS_put_dma
             _start_lcd
             _wait_lcd_set
           _wait_lcd_done
             _wdtdelay
         _send_lcd_data_dma
           _ringBufS_flush
             _memset
           _ringBufS_put_dma
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
           _wdtdelay
       _wait_lcd_done
         _wdtdelay
   _eaDogM_WriteCommand
     _send_lcd_cmd_dma
       _send_lcd_data_dma
         _ringBufS_flush
           _memset
         _ringBufS_put_dma
         _start_lcd
         _wait_lcd_set
       _wait_lcd_done
         _wdtdelay
   _esr_check
     _StartTimer
     _TimerDone
     ___fldiv
     ___flsub
       ___fladd
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _fabsf
     _set_load_relay_one
     _set_load_relay_two
     _update_adc_result
       _StartTimer
       _TimerDone
       _check_adc_scan
       _clear_adc_scan
       _start_adc_scan
         _ADCC_DischargeSampleCapacitor
         _ADCC_SetADIInterruptHandler
         _ADCC_SetADTIInterruptHandler
         _ADCC_StartConversion
   _fabsf
   _get_raw_result
   _get_switch
   _get_vterm_ptr
   _hid_display
     _hid_input
       _get_switch
   _init_bsoc
     _TMR3_SetInterruptHandler
     _Volts_to_SOC
     ___fldiv
     ___flmul
     ___fltol
     ___xxtofl
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
   _init_display
     _ringBufS_init
       _memset
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_data
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _init_port_dma
   _load_hist_data
     ___fldiv
     ___flmul
     ___fltol
     _start_bsoc
     _stop_bsoc
     _time
   _localtime
     ___localtime_r
       ___secs_to_tm
         ___aldiv
         ___almod
         ___aodiv
         ___aomod
         ___lmul
         ___omul
       ___secs_to_zone
         ___aodiv
         ___year_to_secs
           ___aodiv
           ___aomod
           ___lmul
           ___omul
         _do_tzset
           _getname
           _getoff
             _getint
           _getrule
             _getint
             _getoff
               _getint
         _rule_to_secs
           ___aldiv
           ___aomod
           ___lmul
           ___month_to_secs
           ___year_to_secs
             ___aodiv
             ___aomod
             ___lmul
             ___omul
           _days_in_month
         _scan_trans
           _zi_read32
         _zi_read32
   _lp_filter
     ___fladd
     ___flmul
     ___flsub
       ___fladd
   _mode_lamp_dim
     _PWM8_LoadDutyValue
   _read_cal_data
     _CRC_8BitDataWrite
     _CRC_CalculatedResultGet
       _CRC_ReverseValue
     _CRC_Initialize
     _CRC_IsBusy
     _CRC_Start
     _DATAEE_ReadByte
   _set_dac
     _SPI1_Exchange8bit
     _dac_spi_control
   _set_dac_a
     _convert_dac_raw
       ___fldiv
       ___flge
       ___fltol
   _set_dac_b
     _convert_dac_raw
       ___fldiv
       ___flge
       ___fltol
   _set_display_info
     _TimerDone
   _set_hist_flag
   _set_load_relay_one
   _set_load_relay_two
   _set_time
   _set_vterm
   _spinners
     _strlen
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
             ___fladd
           ___fltol
           ___fpclassifyf
           _floorf
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
             _ringBufS_put_dma
         _isdigit
         _isupper
         _stoa
           _fputc
             _putch
               _ringBufS_put_dma
           _strlen
         _strncmp
         _tolower
           _isupper
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _toupper
             _islower
   _srand
   _start_adc_scan
     _ADCC_DischargeSampleCapacitor
     _ADCC_SetADIInterruptHandler
     _ADCC_SetADTIInterruptHandler
     _ADCC_StartConversion
   _start_switch_handler
     _INT1_SetInterruptHandler
   _static_soc
   _time
   _update_cal_data
   _update_hist_data
   _update_lcd
     _eaDogM_WriteStringAtPos
       _eaDogM_WriteString
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _strlen
         _wait_lcd_set
       _send_lcd_cmd_dma
         _send_lcd_data_dma
           _ringBufS_flush
             _memset
           _ringBufS_put_dma
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
           _wdtdelay
       _send_lcd_data_dma
         _ringBufS_flush
           _memset
         _ringBufS_put_dma
         _start_lcd
         _wait_lcd_set
       _wait_lcd_done
         _wdtdelay
     _wait_lcd_done
       _wdtdelay
   _wait_lcd_done
     _wdtdelay
   _write_cal_data
     _CRC_8BitDataWrite
     _CRC_CalculatedResultGet
       _CRC_ReverseValue
     _CRC_Initialize
     _CRC_IsBusy
     _CRC_Start
     _DATAEE_WriteByte

 _INT1_ISR (ROOT)
   _INT1_CallBack
     Absolute function(Fake) *
     _INT1_DefaultInterruptHandler *
     _switch_handler *

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
       _check_day_time
         ___flge
         _conv_raw_result
           ___fldiv
           ___flmul
           ___flsub
             ___fladd
           ___xxtofl
           _get_raw_result
           _nanf
         _get_ac_charger_relay
         _set_ac_charger_relay
         _time
   _TMR5_WriteTimer

 _TMR3_ISR (ROOT)
   _TMR3_CallBack
     Absolute function(Fake) *
     _TMR3_DefaultInterruptHandler *
     _calc_bsoc *
       _StartTimer
       ___asfladd
         ___fladd
       ___fldiv
       ___flge
       ___flmul
       ___flneg
       ___fltol
       _fabsf
       _get_ac_charger_relay
       _port_data_dma_ptr
       _send_port_data_dma
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _strlen
   _TMR3_WriteTimer

 _INT0_ISR (ROOT)
   _INT0_CallBack
     Absolute function(Fake) *
     _INT0_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_handler *

 _ADCC_ThresholdISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_t_handler *
     _ADCC_DischargeSampleCapacitor
     _ADCC_StartConversion

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *

 _UART2_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Receive_ISR *

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 _DMA1_DMASCNT_ISR (ROOT)

 _DMA1_DMADCNT_ISR (ROOT)

 _DMA1_DMAA_ISR (ROOT)

 _DMA1_DMAOR_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0     5C2      69       18.0%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0      FF      17       99.6%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0      86      15       52.3%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      DB      13       85.5%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      F7      11       96.5%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      E6       9       89.8%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      FD       7       98.8%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     19      9E       5       98.8%
BITCOMRAM           3F      0       0       0        0.0%
COMRAM              3F     29      37       1       87.3%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     60F      58        0.0%
DATA                 0      0     BD1       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Mon Feb 17 04:26:51 2020

                         _SPI1_Exchange8bit 24B0                    __end_of_set_display_info 2528  
                                         _C 08FF                                           _D 0A3F  
                                         _H 019B                                           _P 0094  
                                         _R 0100                                           _S 01A4  
                                         _T F8B7                                           _V 0207  
          __end_of_TMR5_SetInterruptHandler 21CE                __end_of_start_switch_handler 2490  
                               __CFG_CP$OFF 000000                     __size_of_ringBufS_flush 0092  
                           _update_cal_data 1766                                          _r0 01E5  
                                        _r1 01DB                                          _bp F9DF  
                    __end_of_FVR_Initialize 2716                              _check_day_time 9B90  
                               __CFG_LVP$ON 000000                                         l171 25E0  
                                       l809 24BE                                         l675 2086  
                                       l942 1326                                         _GIE 01FE97  
                                       _abs 1A62                                         _pad F65E  
                                       fsr0 003FE9                                         fsr2 003FD9  
                   __size_of_PMD_Initialize 0014                             _TMR2_Initialize 2576  
                                       prod 003FF3                                         tosl 003FFD  
                                       wreg 003FE8                     __end_of___month_to_secs FD3E  
                             _INT0_CallBack 23A0                           _update_adc_result 1D2E  
                             __CFG_BBEN$OFF 000000                       __size_of_Volts_to_SOC 00BA  
                    __size_of___localtime_r 0244                               _INT1_CallBack 2334  
                              __CFG_ZCD$OFF 000000                                        l1004 1C6E  
                                      l2017 10AC                                        l2033 051A  
                                      l2203 9EF2                                        l1501 1516  
                                      l1271 2608                                        l1192 1CAE  
                                      l1520 9372                                        l2137 D85E  
                                      l2058 0AD6                                        l1282 E1F6  
                                      l3019 E4A2                             _timer3ReloadVal 00C0  
                                      l1284 E1FC                                        l1614 16BC  
                                      l2406 B486                                        l1462 0326  
                                      l1455 005E                                        l2360 4F34  
                                      l3304 80AC                                        l2184 FA7E  
                                      l2096 102E                                        l2521 2790  
                                      l2281 F1EA                                        l2290 D0C6  
                                      l3411 1AA2                                        l3403 DB96  
                                      l2603 B574                                        l4019 797C  
                                      l4027 6490                                        l1475 0844  
                                      l2364 5272                                        l3340 6CBA  
                                      l1820 1D84                                        l1485 0B10  
                                      l1477 084A                                        l1742 0728  
                                      l2550 1BC0                                        l1830 D2DA  
                                      l2199 9EFA                                        l3271 7306  
                                      l1495 0D16                                        l2624 A5F4  
                                      l3416 F424                                        l1496 0F40  
                                      l2465 F6BA                                        l1761 1E26  
                                      l1746 0BFC                                        l3259 7476  
                                      l2731 FE40                                        l3515 C818  
                                      l3380 D4D8                                        l3452 C132  
                                      l3541 F30A                                        l2485 8B66  
                                      l2565 2070                                        l1837 EA32  
                                      l1829 D17E                        _ADCC_StartConversion 260C  
                                      l2639 981A                                        l1877 2524  
                                      l3823 0EAE                                        l3808 CEA6  
                                      l1977 8A82                                        l2689 480E  
                                      l3931 CC86                                        l3836 0E2A  
                                      l3940 BC3E                                        l2981 023E  
                                      l3847 3862                                        l2992 E76A  
                                      l2985 E696                                        l3975 B9C2  
                                      l3967 B8DC                                        l9820 6FF0  
                                      l9902 7328                                        l9830 7062  
                                      l9904 733A                                        l9840 709E  
                                      l9760 6DA0                                        l9922 7374  
                                      l9834 7082                                        l9754 6D5A  
                                      l9908 7346                                        l9836 7094  
                                      l9844 70CE                                        l9772 6E0A  
                                      l9748 6D1A                                        l9950 7426  
                                      l9934 73D2                                        l9918 736E  
                                      l9862 716A                                        l9790 6EB2  
                                      l9782 6E60                                        l9766 6DD8  
                                      l9758 6D70                                        STR_1 FF1D  
                                      l9944 73FE                                        l9864 717C  
                                      l9872 71B8                                        l9784 6E90  
                                      STR_2 FF08                                        STR_3 FFD5  
                                      l9778 6E4A                                        l9970 FBF4  
                                      STR_4 FEF3                                        STR_5 FBB9  
                                      l9956 7456                                        l9948 7416  
                                      l9884 7290                                        l9868 7186  
                                      STR_6 FBB9                                        STR_7 FBB9  
                                      l9894 72EA                                        l9886 72B6  
                                      l9966 FB6E                                        STR_8 FBB9  
                                      STR_9 FBB9                                        _LATA 003FBA  
                                      _LATB 003FBB                                        _LATC 003FBC  
                                      _LATD 003FBD                                        _LATE 003FBE  
                                      _LATF 003FBF                                        _T2PR 003FAB  
                                      _T6PR 003F93                                        _PMD0 0039C0  
                                      _PMD1 0039C1                                        _PMD2 0039C2  
                                      _PMD3 0039C3                                        u8000 1FFC  
                                      _PMD4 0039C4                                        _PMD5 0039C5  
                                      _PMD6 0039C6                                        _PMD7 0039C7  
                                      u8100 BCFA                                        u7310 70C6  
                                      u7150 1FCA                                        u8111 BD04  
                                      u8031 EA44                                        u7320 70E6  
                                      u8120 BD3E                                        u8200 C878  
                                      u9000 E380                                        u7160 1FCC  
                                      u8130 BD70                                        u9010 E3BA  
                                      u7315 70B6                                        u8051 EB66  
                                      u7420 72D8                                        u7260 7016  
                                      u8220 C8CE                                        u9100 E090  
                                      u7270 7036                                        u8150 BE4E  
                                      u8230 C900                                        u9110 E0C2  
                                      u7271 7030                                        u9015 E3B0  
                                      u7520 73C2                                        u9200 17DA  
                                      u8080 BCA4                                        u8240 C932  
                                      u7600 1F9C                                        u9210 17FA  
                                      u8170 BEA0                                        u9130 E1A0  
                                      u7610 FC38                                        u7460 734C  
                                      u7380 71AE                                        u8500 7FC6  
                                      u8420 7EE0                                        u8260 C9EA  
                                      u9060 E458                                        u7525 73B2  
                                      u7550 73E2                                        u8510 8000  
                                      u7710 1A76                                        u9150 EFAC  
                                      u7480 7366                                        u7288 7038  
                                      u8520 803C                                        u8280 CA3C  
                                      u9080 E482                                        u7720 DAB8  
                                      u9160 EFDE                                        u7385 719E  
                                      u8505 7FB6                                        u8610 6644  
                                      u7810 0E5C                                        u9091 E056  
                                      u8460 7F6A                                        u7820 0E5E  
                                      u9180 F096                                        u7725 DAAE  
                                      u7910 A1BE                                        u7590 1F9A  
                                      u8720 6B8E                                        u7840 9FBA  
                                      u8625 67D8                                        u8730 6BC8  
                                      u7770 DB86                                        u7850 A006  
                                      u8635 68A0                                        u7915 A1B4  
                                      u8740 6C0E                                        u7780 DB88  
                                      u7940 1B26                                        u8725 6B7E  
                                      u8645 6A68                                        u7765 DB68  
                                      u7845 9FB0                                        u7950 1B28  
                                      u8680 6B32                                        u8920 0238  
                                      u7960 0DD8                                        u7890 A0E6  
                                      u7970 0DDA                                        _PLLR 01CEE0  
                                      u7875 A040                                        u7876 A046  
                                      u7877 A054                                        u7990 1FFA  
                                      u7895 A0DC                                        u8980 1916  
                                      u8990 E36C                                        u8995 E362  
                   __end_of_display_history B1B2                                        _WPUA 003A41  
                                      _WPUB 003A51                                        _WPUC 003A61  
                                      _WPUD 003A71                                        _WPUE 003A81  
                                      _WPUF 003A91                            __end_of_ADCC_ISR 2060  
                     __size_of___secs_to_tm 10D2                               __CFG_FCMEN$ON 000000  
                              _rule_to_secs 7480                                        _dbuf 0354  
                        __size_of_CRC_Start 0006                                        _cp_h F9F3  
                                      _cp_l F9EF                                        _atoi BEC8  
                                      _ctoa 0D28                                        _main 0000  
                                      _dtoa 8A88                                        _nanf 1538  
                                      _lock 01D3                                        _seed 02DE  
                                      _prec 004C                                        _time 15FA  
                                      _nout 00BA                                        _spin F967  
                                      fsr0h 003FEA                                        fsr1h 003FE2  
                                      indf0 003FEF                                        fsr2h 003FDA  
                                      fsr0l 003FE9                                        indf1 003FE7  
                                      indf2 003FDF                                        fsr1l 003FE1  
                                      fsr2l 003FD9                                        _stoa B48A  
                                      btemp 002A                                        _utoa A5B0  
                                      _xtoa 97D6                      __end_of_check_adc_scan 26F6  
                             ___fpclassifyf DA0A                                        prodh 003FF4  
                                      prodl 003FF3                                        start 00AE  
                           _timer5ReloadVal 00C4                   __end_of_SPI1_Exchange8bit 24CE  
                 __size_of_clear_hid_pflags 0066                             _TMR3_Initialize 19D4  
               __size_of_set_load_relay_one 0010                 __size_of_set_load_relay_two 0010  
                             __CFG_CSWEN$ON 000000                              _SPI1STATUSbits 003D17  
                         _UART1_rx_vect_isr 2298                                ___param_bank 000000  
                      display_history@bwait 0053                      __end_of_check_day_time 9F04  
                        ?_UART1_rx_vect_isr 0001                   __size_of_DATAEE_WriteByte 0068  
                          _update_hist_data 0FBA                            __end_of_INT0_ISR 26A6  
                          __end_of_INT1_ISR 1CF2              __size_of_OSCILLATOR_Initialize 0016  
                  __end_of_ringBufS_put_dma 0730               __end_of_OSCILLATOR_Initialize 25E6  
                                     l10100 A022                                       l10120 A1D8  
                                     l10114 A140                                       l10044 1A92  
                                     l10124 A246                                       l10116 A190  
                                     l10302 7D34                                       l10062 DB38  
                                     l10142 0E1A                                       l12000 D422  
                                     l10208 BE16                                       l10402 8080  
                                     l12010 D456                                       l12002 D438  
                                     l10058 DB34                                       l10154 FE96  
                                     l10420 64F0                                       l10404 8090  
                                     l10316 7D88                                       l10308 7D6E  
                                     l12020 D4B8                                       l10244 C9B2  
                                     l10236 C906                                       l10228 C87E  
                                     l10068 DB8E                                       l10164 EA4C  
                                     l10430 6566                                       l10350 7EE6  
                                     l10342 7EB4                                       l10334 7E4E  
                                     l10326 7E18                                       l10270 7BD2  
                                     l10190 BCFE                                       l10086 0E9E  
                                     l10360 7F28                                       l10336 7E60  
                                     l10344 7EB8                                       l10264 7B92  
                                     l10184 BCAA                                       l10168 EAF2  
                                     l10514 6ACA                                       l10426 6530  
                                     l10370 7F72                                       l10290 7CB0  
                                     l10274 7BE8                                       l11410 BEE2  
                                     l10532 6B40                                       l10508 6AAE  
                                     l10444 65FE                                       l10428 6536  
                                     l10356 7F02                                       l10284 7C70  
                                     l10276 7C18                                       l11420 BF78  
                                     l11412 BF04                                       l10196 BD44  
                                     l10542 6BB4                                       l10518 6AF0  
                                     l10446 6604                                       l10438 65BE  
                                     l10390 8028                                       l10374 7F78  
                                     l10294 7CC6                                       l11430 BFE0  
                                     l12230 0144                                       l10560 6C68  
                                     l10552 6C24                                       l10528 6B3A  
                                     l10456 6656                                       l10448 6634  
                                     l10384 7FEC                                       l10296 7CF6  
                                     l11432 C01E                                       l10704 191A  
                                     l10562 6C82                                       l10546 6BFA  
                                     l12242 85CE                                       l12314 20FE  
                                     l10802 17FE                                       l11426 BFA4  
                                     l10730 E40E                                       l10714 E38C  
                                     l12226 0106                                       l12234 0158  
                                     l11610 53A0                                       l10396 8058  
                                     l11436 C086                                       l11428 BFBC  
                                     l10740 E450                                       l10732 E42A  
                                     l11508 DCB8                                       l12270 8838  
                                     l12262 8806                                       l11446 C122  
                                     l10670 023C                                       l10662 01C6  
                                     l11462 CD18                                       l10814 CACA  
                                     l11614 53CA                                       l14102 D696  
                                     l12248 85FE                                       l11464 CD84  
                                     l10832 CC48                                       l11640 5790  
                                     l11624 5506                                       l12282 89B4  
                                     l12274 88D4                                       l12258 8724  
                                     l10666 0208                                       l10738 E43A  
                                     l10754 E096                                       l11490 DC06  
                                     l10818 CB0A                                       l11650 5806  
                                     l11642 579A                                       l11634 575E  
                                     l11618 54D0                                       l14202 B272  
                                     l14114 1796                                       l10684 E6E4  
                                     l11484 DBDA                                       l10836 CC6C  
                                     l11660 587E                                       l14124 0FD0  
                                     PRLOCK 0039EF                                       l10678 E654  
                                     l10766 E168                                       l11662 5886  
                                     l11654 5834                                       l14222 B2F2  
                                     l14214 B2CC                                       l14206 B27E  
                                     l10696 E768                                       l10688 E732  
                                     l12288 8A50                                       l12296 8A62  
                                     l11496 DC36                                       l11592 1436  
                                     l14136 1008                                       l12706 9EA0  
                                     l10786 F05E                                       l10778 EFB2  
                                     l13506 0A7A                                       l11674 5946  
                                     l14074 D52A                                       l13700 EEE4  
                                     l14156 E022                                       l14332 0402  
                                     l12820 2018                                       l11668 58B2  
                                     l13604 1D4E                                       l14180 B1E4  
                                     l14244 B44C                                       l13294 18B4  
                                     l16022 9B46                                       l16006 9A5C  
                                     l13518 0AB0                                       l12750 E2BE  
                                     l14190 B220                                       l14246 B476  
                                     l14086 D5E0                                       l14094 D692  
                                     l12672 9CA4                                       l15304 08A0  
                                     l14328 03C4                                       l13464 EBE6  
                                     l11960 E596                                       l11952 E52A  
                                     l11944 E4E2                                       l11688 FD14  
                                     l14176 B1CE                                       l14088 D614  
                                     l13640 1082                                       l13298 18E6  
                                     l17010 4B30                                       l17002 4A2E  
                                     l13490 D710                                       l13482 D6E4  
                                     l15314 09C6                                       l15306 08C2  
                                     l15402 ED22                                       l16210 406E  
                                     l16202 3FB6                                       l16130 399E  
                                     l12754 E2E8                                       l16034 BA70  
                                     l14186 B214                                       l14178 B1DE  
                                     l17020 4D5C                                       l12692 9D9A  
                                     l13708 EF5E                                       l15340 AD42  
                                     l13468 EC5C                                       l16036 BA88  
                                     l14196 B24A                                       l13820 0392  
                                     l13628 106A                                       l13652 F4F2  
                                     l17030 4E9C                                       l17014 4B84  
                                     l13494 D724                                       l11990 D3B8  
                                     l13558 1D9A                                       l15318 0A04  
                                     l15430 EE1C                                       l15422 EDE8  
                                     l16302 479A                                       l16214 40A2  
                                     l16150 3B0A                                       l16126 394E  
                                     l15334 AC84                                       l12766 1E30  
                                     l16062 A93E                                       l16054 BC1A  
                                     l16038 BAAE                                       l17024 4DD6  
                                     l13920 1C56                                       l13680 EE5E  
                                     l11992 D3D6                                       l15520 8BBE  
                                     l15408 ED42                                       l15600 176C  
                                     l16152 3B20                                       l16128 3988  
                                     l16072 AA5A                                       l13816 0316  
                                     l13648 F490                                       l12858 183A  
                                     l17050 526A                                       l17034 4F44  
                                     l13682 EE64                                       l14378 97C8  
                                     l11986 D394                                       l11978 D328  
                                     l15370 F6B2                                       l15530 8DD0  
                                     l15450 F590                                       l15442 F566  
                                     l15602 1782                                       l16234 4202  
                                     l15354 AE5A                                       l15346 ADAC  
                                     l16074 AA64                                       l16082 AB8A  
                                     l16066 A9D8                                       l14564 0F00  
                                     l13684 EE72                                       l13692 EE7A  
                                     l11988 D3A2                                       l15292 F220  
                                     l15380 F74A                                       l15372 F6C4  
                                     l15516 8BA0                                       l15508 8B56  
                                     l15460 F610                                       l16244 42B0  
                                     l16148 3AD0                                       l16308 47BA  
                                     l16340 B8C2                                       l16500 79F2  
                                     l17220 CFB8                                       l17204 CEC4  
                                     l14558 0EF0                                       l17038 4F66  
                                     l13694 EEAC                                       l13678 EE4E  
                                     l11998 D404                                       l15366 F68A  
                                     l15550 8E82                                       l15446 F578  
                                     l15702 1CD0                                       l15606 17AE  
                                     l16254 43D2                                       l16190 3E5C  
                                     l12878 0F72                                       l17150 8FD4  
                                     l16078 AAFE                                       l16342 B8E6  
                                     l17230 D090                                       l15376 F700  
                                     l15712 1E7C                                       l15632 18EC  
                                     l15616 1852                                       l15624 1880  
                                     l16264 4488                                       l16168 3C84  
                                     l17304 D14E                                       l13882 246A  
                                     l13938 1C96                                       l15482 0D46  
                                     l15554 8EBE                                       l15386 FF46  
                                     l15642 1A28                                       l16186 3E08  
                                     l16178 3D1C                                       l17146 8FC0  
                                     l15484 0D72                                       l15396 ED0C  
                                     l15468 F644                                       l15812 252C  
                                     l15660 1AE4                                       l15636 195C  
                                     l15580 1646                                       l15900 B6A0  
                                     l16292 473C                                       l16540 0648  
                                     l16348 B954                                       l16604 6146  
                                     l13894 2082                                       l15814 2546  
                                     l15750 2188                                       l15734 2068  
                                     l15726 1F9E                                       l15654 1AAA  
                                     l15638 19C6                                       l16278 4604  
                                     l16518 0788                                       l17318 D276  
                                     l17158 9036                                       l16550 092A  
                                     l16710 3114                                       l16614 6226  
                                     l17248 1190                                       l15824 25E8  
                                     l15736 208A                                       l15568 1602  
                                     l15904 B6CC                                       l16368 1D1C  
                                     l16640 6474                                       l16632 63A6  
                                     l17272 B19E                                       l17504 06AA  
                                     l15850 26F0                                       l15834 2638  
                                     l15762 2210                                       l15770 227A  
                                     l15674 1B4C                                       l15666 1AEA  
                                     l15658 1AD2                                       l15930 A640  
                                     l15922 A5E4                                       l16298 4796  
                                     l16538 0606                                       l16810 F3E4  
                                     l16722 33DA                                       l16650 2858  
                                     l16482 763A                                       l17530 087C  
                                     l17522 083A                                       l15692 1C0E  
                                     l15676 1B58                                       l15588 169C  
                                     l15908 B708                                       l15940 A836  
                                     l17196 92BE                                       l16708 310E  
                                     l16484 768E                                       l16628 6388  
                                     l16820 C64A                                       l17612 11E0  
                                     l17444 0340                                       l17436 02D4  
                                     l17372 0066                                       l15598 1740  
                                     l15870 B4F6                                       l16558 098E  
                                     l16742 35F2                                       l16734 34F8  
                                     l16726 343A                                       l16718 31CE  
                                     l16662 2B04                                       l16590 5D4A  
                                     l17278 B1A2                                       l17622 1362  
                                     l17542 08B0                                       l17438 02FE  
                                     l17374 0078                                       l17366 0040  
                                     l15696 1C46                                       l16840 E8FA  
                                     l16592 5E40                                       l17608 117E  
                                     l17624 138E                                       l17528 084E  
                                     l17368 0048                                       l15778 22E6  
                                     l15786 23F8                                       l15890 B5E6  
                                     l15962 980A                                       l16690 2F9C  
                                     l16682 2EC8                                       l16594 5E60  
                                     l16780 0B04                                       l16676 2E40  
                                     l16668 2C40                                       l16588 5D2A  
                                     l17548 08D6                                       l17652 1440  
                                     l17492 05D0                                       l15798 2490  
                                     l15894 B616                                       l15886 B5AA  
                                     l15982 98E0                                       l15974 9880  
                                     l16774 0AE4                                       l17670 14A8  
                                     l17662 147E                                       l17638 13E8  
                                     l15968 9844                                       l16776 0AEC  
                                     l16872 FB50                                       l17680 14EC  
                                     l17584 0B22                                       l16778 0AF6  
                                     l16786 0B0A                                       l16866 FA9E  
                                     l16698 3070                                       l17690 1542  
                                     l17578 0B00                                       l16788 0B36  
                                     l16972 F184                                       l17676 14C6  
                                     l17668 1490                                       l17596 0C22  
                                     l16990 4902                                       l15998 99D6  
                                     l16966 F11E                                       l16994 4956  
                                     l16998 49C2                             __end_of___aldiv DD34  
                           __end_of___aodiv BEC8                                _Volts_to_SOC 0304  
                                     _ADCAP 003EF5                                       _ADACT 003EFE  
                           __end_of___almod E612                             __end_of___fladd 7480  
                                     _ADCLK 003EFF                             __end_of___aomod CA60  
                                     _ADPCH 003EF1                             __end_of___fldiv 80B6  
                                     _ADREF 003EFD                             __end_of___awdiv EE36  
                           __end_of___flneg 1944                                       STR_10 FF32  
                                     STR_11 FF5C                                       STR_20 FE19  
                                     STR_12 FD69                                       STR_21 FBCE  
                                     STR_13 FB25                                       STR_30 FF84  
                                     STR_14 FBE5                                       STR_22 FAD5  
                                     STR_15 FCCB                                       STR_31 FCB4  
                                     STR_23 FAF0                                       STR_24 FF76  
                                     STR_32 FC9D                                       STR_40 FBFC  
                                     STR_16 FBB7                                       STR_25 FEB3  
                                     STR_17 FD95                                       STR_33 FC86  
                                     STR_41 FC13                               __CFG_WDTE$OFF 000000  
                                     STR_50 FE87                                       STR_18 FDAB  
                                     STR_26 FD7F                                       STR_34 FC6F  
                                     STR_42 FC2A                                       STR_51 FE87  
                                     STR_19 FE5B                                       STR_27 FE2F  
                                     STR_35 FC58                                       STR_43 FB57  
                                     STR_28 FF96                                       STR_52 FE03  
                                     STR_60 FD53                                       STR_36 FC41  
                                     STR_44 FB9F                             __end_of___awmod F65E  
                                     STR_61 FDED                                       STR_53 FDD7  
                                     STR_37 FD10                                       STR_45 FA9B  
                                     STR_62 FE03                                       STR_70 FFB6  
                                     STR_54 FDC1                                       STR_38 FCE2  
                                     STR_46 FB3F                                       STR_63 FD53  
                                     STR_71 FFCC                                       STR_55 FF47  
                                     STR_39 FCF9                                       STR_47 FB6F  
                                     STR_72 FF71                                       STR_64 FE71  
                                     STR_56 FE45                                       STR_48 FB87  
                                     STR_80 FB0B                                       _ADRPT 003EEC  
                                     STR_73 FF71                                       STR_81 FEC9  
                                     STR_49 FE87                                       STR_57 FD3D  
                                     STR_65 FAB9                                       STR_66 FAB9  
                                     STR_74 FFC2                                       STR_82 FEDE  
                                     STR_58 FE9D                                       STR_90 F9F7  
                                     STR_67 FAB9                                       STR_59 FE03  
                                     STR_75 FFC2                                       STR_91 FFDA  
                                     STR_68 FF76                                       STR_92 FFE2  
                                     STR_76 FFA7                             __end_of___lbmod 09B6  
                                     STR_77 FFA7                                       STR_69 FFFC  
                                     STR_78 FFA7                                       STR_79 FFA7  
                                     STR_95 FFDE                                       STR_96 FFE6  
                           __end_of___flmul 6CC4                                       STR_89 FA75  
                                     STR_99 FFED                             __end_of___flsub 1AEE  
                           __end_of___fltol E4AC                                       u11200 E50A  
                                     u11210 E524                                       u10500 DBD4  
                                     u11220 E546                                       u10430 CDB2  
                                     u10360 BF74                                       u12040 12E6  
                                     u10520 DC02                                       u11240 E5BE  
                                     u11330 D44C                                       u10530 DC30  
                           __end_of___lodiv E1C8                                       u10380 C0CC  
                                     u10540 DC52                                       u11260 E5E8  
                                     u11180 E4DC                                       u12205 1B62  
                                     u10437 CDA4                                       u10390 C0CE  
                                     u10470 CE4C                                       u10480 CE7A  
                                     u12320 0F6E                                       u11520 00F8  
                                     u12048 12E8                                       u10560 DCE0  
                                     u10800 5924                                       u12065 1336  
                                     u12066 1338                                       u10810 5926  
                                     _U1P1H 003DED                                       u10475 CE46  
                                     u10580 DD0A                                       _U1P2H 003DEF  
                                     u10477 CE38                                       u11525 00F2  
                                     u13301 1770                                       u11614 8820  
                                     u12254 E26A                                       u12270 264A  
                                     u10830 FCF6                                       _U1P1L 003DEC  
                                     _U1P3H 003DF1                                       u12415 13EA  
                                     u11615 881A                                       u10487 CE6C  
                                     u12255 E264                                       _T3CLK 003FA9  
                                     u12416 13EC                                       u12408 13B8  
                                     u10840 23EE                                       u10760 57B6  
                                     _T2CON 003FAC                                       _U1P2L 003DEE  
                                     u11634 88EE                                       u11554 85E8  
                                     u12610 0AAA                                       u13330 0FCC  
                                     _U1P3L 003DF0                                       u11635 88E8  
                                     u11555 85E2                                       u10691 5300  
                                     u11660 8918                                       u14300 FFC0  
                                     u10780 5850                                       u10684 1454  
                                     u10685 144E                                       u12390 13B6  
                                     u11654 8910                                       u11574 8618  
                                     u14150 F214                                       _U2P1L 003DD4  
                                     u11655 890A                                       u11575 8612  
                                     u12560 D6C2                                       u15120 260E  
                                     _T3CON 003FA6                                       _U2P2L 003DD6  
                                     u12465 2638                                       u13361 0FF4  
                                     u12730 2438                                       u11594 863A  
                                     u14170 F290                                       u14250 AECE  
                                     u16010 7614                                       u12466 263A  
                                     u13290 D692                                       _U2P3L 003DD8  
                                     u11595 8634                                       u14307 FFB2  
                                     u12475 2628                                       u14180 08F0  
                                     u14500 8ABA                                       u14420 F5BC  
                                     u15140 26C4                                       u15060 243A  
                                     u15220 B60C                                       u16020 7626  
                                     u12476 262A                                       u13381 101E  
                                     u14350 ED6E                                       u15150 26C6  
                                     u15230 B652                                       u12590 0A76  
                                     u15311 A878                                       _T5CLK 003F9D  
                                     u12736 243A                                       u14600 8E3E  
                                     u14520 8B2A                                       u14440 F630  
                                     u15320 A88E                                       u15400 992C  
                                     u17000 045A                             __end_of___lomod F0B8  
                                     u15321 A88C                                       u14610 8E42  
                                     u14370 EE08                                       u15330 A8A2  
                                     u15410 992E                                       u14187 08E2  
                                     u14540 8B3C                                       u14700 16EA  
                                     u15260 B72E                                       u15340 A8A6  
                                     u15500 9AD2                                       u16220 27F4  
                                     u17020 06D8                                       _T2HLT 003FAD  
                                     u15237 B644                                       u14630 8E58  
                                     u14710 16EC                                       u15510 9AD6  
                                     u15430 998C                                       u16070 0768  
                                     u16230 2844                                       u17030 0802  
                                     u14560 8B8C                                       u15280 A5CA  
                                     u15440 998E                                       u15360 97F0  
                                     u16320 310E                                       u15600 AB8A  
                                     u16400 C60A                                       u17040 0804  
                                     _T5CON 003F9A                                       u14570 8DE4  
                                     u14490 8AB8                                       u15530 BA42  
                                     u16410 C640                                       u14820 1AB8  
                                     u14740 17FC                                       u15460 9A58  
                                     u15700 3B6A                                       u14581 8E14  
                                     u14590 8E2A                                       u14750 17FE  
                                     u14670 1630                                       u15470 9A78  
                                     u15390 98D8                                       u15710 3B90  
                                     u16190 62BA                                       u14591 8E28  
                                     u15640 39E6                                       u16360 34C2  
                                     u16520 F160                                       _T6CON 003F94  
                                     u15481 9AA8                                       u15465 9A3A  
                                     u16345 31F0                                       u14850 1B1C  
                                     u15490 9ABE                                       u15810 415C  
                                     u15650 39E8                                       u16370 3570  
                                     u17170 13D8                                       u15491 9ABC  
                                     u16371 356C                                       u15900 468C  
                                     u15820 415E                                       u15660 3A0E  
                                     u15580 AA42                                       u16508 F0FC  
                                     u17180 13F2                                       u14790 1A64  
                                     u16550 F1C6                                       u17190 1404  
                            __CFG_DEBUG$OFF 000000                                       u14960 1F6E  
                                     u15760 3D70                                       u17176 13DA  
                                     u14890 1B9E                                       u15690 3B68  
                                     u16538 F162                                       u16490 F0FA  
                                     u17186 13F4                                       u15780 3EE4  
                                     u17196 1406                                       u15950 B898  
                                     u15880 44DC                                       u16920 D2C6  
                                     u16760 917C                                       u16568 F1C8  
                                     u16930 D2C8                                       u16770 91A6  
                                     _T6HLT 003F95                                       u16765 916E  
                                     u16775 9198                  _ADCC_ADTI_InterruptHandler 00A1  
                                     _T2TMR 003FAA                                       _U1UIR 003DF8  
                                     _T2RST 003FAF                                       _U1RXB 003DE8  
                                     _U2UIR 003DE0                                       _U2RXB 003DD0  
                                     _U2TXB 003DD2                                       _T6TMR 003F92  
                                     _T6RST 003F97                         ??_UART1_rx_vect_isr 0006  
                                     _ISRPR 0039F1                                       _OSCEN 0039DD  
                                     _TMR3H 003FA5                                       _TMR5H 003F99  
                                     _TMR3L 003FA4                                       _TMR5L 003F98  
                 __end_of_update_adc_result 1D68                                       _TRISA 003FC2  
                                     _TRISB 003FC3                                       _TRISC 003FC4  
                                     _TRISD 003FC5                                       _TRISE 003FC6  
                                     _TRISF 003FC7                                 _Default_ISR 273C  
                       __size_of_CRC_IsBusy 0010                     __size_of_clear_adc_scan 0006  
                        _current_sensor_cal 8F08           __size_of_TMR3_SetInterruptHandler 0028  
                              ___secs_to_tm 279A           __size_of_TMR6_SetInterruptHandler 0028  
                           __end_of_asctime 85CC                               __CFG_WRTB$OFF 000000  
                          __end_of_TMR3_ISR E8D6                               __CFG_WRTC$OFF 000000  
                          _cal_current_zero 0A4E                                       ___gmt F9E7  
                             __CFG_WRTD$OFF 000000                            __end_of_TMR5_ISR DA0A  
                           __end_of_getname ABEC                                _DMA1CON0bits 003BFC  
                          __end_of_TMR6_ISR 255E                                _DMA1CON1bits 003BFD  
                __size_of_send_lcd_data_dma 0046                             _DATAEE_ReadByte 1F14  
                                     _fabsf 052C                             __end_of_getrule BC48  
                                     _flags 004E                        __size_of_check_range 0080  
                 __size_of_CRC_ReverseValue 00CE                                       _r_cal 0440  
                  __size_of_calc_model_data 045A                                _DMA2CON0bits 003BDC  
                              _DMA2CON1bits 003BDD                __end_of_get_ac_charger_relay 2698  
                                     _fputc F1F0                  __size_of_send_lcd_cmd_long 0040  
                           __end_of_isalpha 1B32                                       _fputs 09B6  
                           __end_of_isdigit 2006                             __end_of_ivln2_h F9EF  
                                     _put2d F314                          __CFG_MCLRE$EXTMCLR 000000  
                                     _srand 1E44                                       _width 004A  
                                     _putch 2528                __end_of_set_ac_charger_relay 266E  
                           __end_of_islower 1FA6                             __end_of_isspace 180E  
                  _INT1_SetInterruptHandler 21F6                             __end_of_set_dac 052C  
                           __end_of_isupper 1FD6                                       pclath 003FFA  
                                     tablat 003FF5                                       ltemp0 002A  
                                     ltemp1 002E                                       ltemp2 0032  
                  __size_of_DMA1_Initialize 006A                                       plusw0 003FEB  
                                     plusw1 003FE3                                       plusw2 003FDB  
                                     ttemp0 002A                                       ttemp1 002D  
                                     ttemp2 0030                                       ttemp3 0033  
                                     ttemp5 002B                                       ttemp6 002E  
                                     ttemp7 0032                                       status 003FD8  
       __end_of_UART1_SetRxInterruptHandler 217E                 _UART1_SetRxInterruptHandler 2156  
                                     wtemp0 002A                                       wtemp1 002C  
                                     wtemp2 002E                                       wtemp3 0030  
                                     wtemp4 0032                                       wtemp5 0034  
                                     wtemp8 002B                             __end_of_sprintf F87C  
                           __end_of_tolower 0EB8                             __end_of_strncmp CEB0  
                           __end_of_toupper 0E34                   __size_of_DMA1_DMADCNT_ISR 000A  
                 __end_of_UART1_rx_vect_isr 22C0                    __size_of_SPI1_Initialize 0016  
                   __end_of_update_cal_data 17BC                             _TMR5_Initialize 198C  
                     __end_of_ringBufS_init 20DE                             __initialization F87C  
                         _UART2_rx_vect_isr 22E8                               ___localtime_r C5DC  
                              __end_of_cp_h F9F7                                __end_of_cp_l F9F3  
                              __end_of_atoi C13C                                __end_of_ctoa 0DB0  
                              __end_of_main 1556                                __end_of_dtoa 8F08  
                              __end_of_nanf 159A                                __end_of_time 1658  
                              __end_of_spin F9DF                                __end_of_stoa B748  
                              __end_of_utoa A8F0                                __end_of_xtoa 9B90  
                            __CFG_SAFEN$OFF 000000                          ?_UART2_rx_vect_isr 0001  
                   __end_of_TMR2_Initialize 258E                       __end_of_send_lcd_data 2334  
                  __size_of_DMA2_Initialize 005A                  __end_of_check_enter_button 119A  
                         __end_of_CRC_Start 2722                    _TMR5_SetInterruptHandler 21A6  
                             __activetblptr 000003                   __size_of_DMA1_DMASCNT_ISR 000E  
                     _TMR3_InterruptHandler 0098                           _port_data_dma_ptr 26C0  
                        esr_check@esr_state 00C6                         ??_UART2_rx_vect_isr 0006  
                                    INTCON0 003FD2        __size_of_UART2_SetRxInterruptHandler 0028  
                            __CFG_MVECEN$ON 000000                             _TMR6_Initialize 208C  
                           _PWM8_Initialize 25BA                            _UART1_Initialize 1944  
                         _UART2_tx_vect_isr 22C0                          _UART2_Transmit_ISR 2060  
                                    _ADACCU 003EEA                                      _ADACQH 003EF4  
                                    _ADACQL 003EF3                                      _ADCON0 003EF8  
                                    _ADCON1 003EF9                                      _ADCON2 003EFA  
                                    _ADCON3 003EFB                              _start_adc_scan 1472  
                                    _ADLTHH 003EDF                                      _ADLTHL 003EDE  
                                    STR_101 FFED                                      STR_110 FFF0  
                                    STR_103 FFF3                                      STR_120 FFF9  
                                    STR_105 FFF3                                      STR_113 FFF6  
                                    STR_122 FFEA                                      STR_115 FFF6  
                                    STR_124 FFEA                                      STR_108 FFF0  
                                    STR_118 FFF9                                      STR_127 FD27  
                                    STR_128 FA76                                      _ADPREH 003EF7  
                                    _ADPREL 003EF6                                      _DMA1PR 0039F3  
                                    _DMA2PR 0039F4                                      _ADSTAT 003EFC  
                                    _ADUTHH 003EE1                                      _ADUTHL 003EE0  
                        _PWM8_LoadDutyValue 1B32                                      _ANSELA 003A40  
                                    _ANSELB 003A50                                      _ANSELC 003A60  
                                    _ANSELD 003A70                                      _ANSELE 003A80  
                                    _ANSELF 003A90                          ?_UART2_tx_vect_isr 0001  
                                    _U1CON0 003DF2                                      _U1CON1 003DF3  
                                    _U1CON2 003DF4                                      _T3GATE 003FA8  
                                    _U1BRGH 003DF6                                      _U1FIFO 003DF7  
                                    _T3GCON 003FA7                                      _U2CON0 003DDA  
                                    _U2CON1 003DDB                                      _U1BRGL 003DF5  
                                    _U2CON2 003DDC                                      _U2BRGH 003DDE  
                                    _U2FIFO 003DDF                                      _U2BRGL 003DDD  
                                    _T5GATE 003F9C                                      _T5GCON 003F9B  
                                    _MAINPR 0039F2                                      _RC3PPS 003A13  
                                    _RD1PPS 003A19                                      i1l1021 D95A  
                                    _RB6PPS 003A0E                                      i1l1209 E83E  
                      _start_switch_handler 2470                                      _RC5PPS 003A15  
                                    _ODCONA 003A42                                      _ODCONB 003A52  
                                    _ODCONC 003A62                                      _RC6PPS 003A16  
                                    _ODCOND 003A72                                      _ODCONE 003A82  
                                    _ODCONF 003A92                     __end_of_TMR3_Initialize 1A1C  
                            __CFG_WDTCCS$SC 000000                                      _FVRCON 003EC1  
                          _mode_lamp_bright 267C                                      _SCANPR 0039F7  
                                    _IVTADH 00389E                                      _IVTADL 00389D  
                                    _IVTADU 00389F                __size_of_eaDogM_WriteCommand 000E  
                                    _OSCFRQ 0039DF                                      _NVMDAT 0039E3  
                      __size_of_hid_display 021C                            __end_of___xxtofl D4E2  
     __end_of_ADCC_DischargeSampleCapacitor 26FE      __size_of_ADCC_DischargeSampleCapacitor 0008  
             _ADCC_DischargeSampleCapacitor 26F6                    __end_of_send_lcd_cmd_dma 24EC  
                           _TMR3_WriteTimer 1C74                         ??_UART2_tx_vect_isr 0006  
                 __end_of_UART2_rx_vect_isr 2310                  __size_of_SPI1_Exchange8bit 001E  
                    __size_of_DMA1_DMAA_ISR 000A                     __size_of___secs_to_zone 08A2  
                            __CFG_XINST$OFF 000000                           _CLKREF_Initialize 26B6  
                          _UART2_Initialize 159A                                      _WaitMs 1E0E  
                           _conv_raw_result 85CC                                _CCPTMRS1bits 003F5F  
      __size_of_ADCC_SetADIInterruptHandler 0028                            __end_of_do_tzset B9C8  
                                    ___flge E612                                      ___fleq 0184  
                                    ___lmul FE28                                      ___omul EA36  
                         _ADCC_ThresholdISR 1270                              __CFG_STVREN$ON 000000  
                                    _crcObj 00E2                              _ringBufS_flush 0B72  
                                    _efgtoa 1556                                      _getoff CA60  
                                    _getint FB60                                      _floorf 9F04  
                         dac_spi_control@S0 00CB                           dac_spi_control@S1 00CA  
                         dac_spi_control@S2 00C9                           dac_spi_control@SB 00C7  
                         dac_spi_control@SC 00C8                          ?_ADCC_ThresholdISR 0001  
                                    _memset ABEC                                      _pclock 00DA  
                      __size_of_help_button 0038                                      clear_0 F8EE  
                                    clear_1 F902                                      clear_2 F914  
                                    clear_3 F920                                      clear_4 F92C  
                                    clear_5 F938                                      clear_6 F944  
                                    clear_7 F950                                      clear_8 F95C  
                                    _t_mbmc 00BC                   __end_of_port_data_dma_ptr 26CA  
                    __size_of_read_cal_data 01CA                                      _printf 14D6  
                        _eaDogM_WriteString 0730                     __end_of_DATAEE_ReadByte 1F46  
                                    _strcpy FEFE                                   ?_ADCC_ISR 0001  
                                    _strlen 087A                          __size_of_TimerDone 0028  
                              __pdataBIGRAM 06FF                             _ADCC_Initialize 1204  
                            _PMD_Initialize 25E6                  __size_of_update_adc_result 003A  
                 __end_of_UART2_tx_vect_isr 22E8                            __end_of_set_time 1E0E  
                                    lltemp0 002A                                      lltemp1 0032  
                                    lltemp2 003A                                      lltemp3 0042  
                       ??_ADCC_ThresholdISR 0001                      __end_of_start_adc_scan 14D6  
                              __mediumconst F7AA                                      preinc2 003FDC  
                    __size_of_init_port_dma 0030                                      tblptrh 003FF7  
                                    tblptrl 003FF6                                      tblptru 003FF8  
                          __end_of_wdtdelay 170C                            __end_of_spinners FB60  
                          __end_of_vfprintf 0686                                  _StartTimer 1BF4  
                        __size_of___asfladd 0078                                 localtime@tm 03DF  
             __size_of_INTERRUPT_Initialize 0066                     __end_of_TMR5_Initialize 19D4  
                         _SYSTEM_Initialize 1860                                  ___daylight 00B8  
                                __accesstop 0060                     __end_of__initialization F96E  
                                 ?_INT0_ISR 0001                                   ?_INT1_ISR 0001  
                      __end_of_display_help 270E                        __end_of_display_info 2706  
                 __end_of_CLKREF_Initialize 26C0                               ___rparam_used 000001  
                __size_of_UART1_rx_vect_isr 0028                             _TMR5_WriteTimer 1C34  
                     _set_temp_display_help 264E                            _clear_hid_pflags 1342  
                     __end_of_TMR3_CallBack 23A0                   __end_of_ADCC_ThresholdISR 12DA  
                     __end_of_set_hist_flag 271C                          __size_of_calc_bsoc 0A6E  
                    __end_of_ringBufS_flush 0C04                              __pcstackCOMRAM 0001  
                                ___inthi_sp 132C                                  ___intlo_sp 1996  
                              __pidataBANK1 07D6                                __pidataBANK2 0248  
                             __end_of___gmt F9EB                 __size_of_send_port_data_dma 0052  
                             __end_of_fabsf 05DA                                   ?_TMR3_ISR 0001  
                                 ?_TMR5_ISR 0001                                   ?_TMR6_ISR 0001  
                          _DATAEE_WriteByte 12DA                              ivt0x8_undefint 00AC  
                             __end_of_fputc F314                               __end_of_fputs 0A4E  
                      _get_ac_charger_relay 268A                               __end_of_put2d F42E  
                             __end_of_srand 1E78                       __end_of_TMR5_CallBack 237C  
                             __end_of_putch 2542                        _set_ac_charger_relay 265E  
                   __end_of_PWM8_Initialize 25D0                     __end_of_TMR6_Initialize 20B6  
                         _adc_int_t_handler 0EB8                      __end_of_PMD_Initialize 25FA  
                                __end_of_bp F9E7                                  ___timezone 0070  
                                ??_ADCC_ISR 0001                       __end_of_TMR6_CallBack 23E8  
               __size_of_EXT_INT_Initialize 0034                    calc_bsoc@log_update_wait 0050  
                    __size_of_calc_ror_data 0186                               _DMA1_DMAA_ISR 26D8  
                     TMR3_ISR@CountCallBack 00BE                              _clear_adc_scan 2722  
                        __size_of_hid_input 0138                          __end_of_CRC_IsBusy 264E  
                    __size_of_mode_lamp_dim 0018                            time@current_time 00D2  
                          _CRC_ReverseValue 00B6                    _UART2_RxInterruptHandler 00AD  
                 __end_of_SYSTEM_Initialize 18AE                             __CFG_PR1WAY$OFF 000000  
                           __CFG_IVT1WAY$ON 000000                     __end_of_TMR3_WriteTimer 1CB4  
                                __pbssBANK0 0060                                  __pbssBANK1 01A4  
                                __pbssBANK2 02BC                                  __pbssBANK3 0300  
                                __pbssBANK4 0400                                  __pbssBANK5 0500  
                                __pbssBANK6 0600                    __end_of_update_hist_data 1036  
                                _check_help D0CC                               _read_cal_data D4E2  
                   __end_of_conv_raw_result 8A88                          __size_of_esr_check 02D8  
                     _INT0_InterruptHandler 00B3                                  ??_INT0_ISR 0001  
                                ??_INT1_ISR 0007                       __end_of_days_in_month 1472  
                         __end_of_TimerDone 2106                            _DMA1_DMADCNT_ISR 26CC  
                           _convert_dac_raw F42E                          __size_of_init_bsoc 0246  
                __size_of_UART2_rx_vect_isr 0028                                     IVTBASEH 003FD6  
                                   IVTBASEL 003FD5                                     IVTBASEU 003FD7  
                        __size_of_lp_filter 01BC                          __size_of_localtime 0016  
                             _init_port_dma 1F46                       __end_of_wait_lcd_done 240A  
                  __end_of_cal_current_zero 0AE0            __end_of_TMR3_SetInterruptHandler 21F6  
                           __CFG_PPS1WAY$ON 000000            __end_of_TMR6_SetInterruptHandler 21A6  
                                ??_TMR3_ISR 00E5                     __end_of_ADCC_Initialize 126E  
                                ??_TMR5_ISR 000B                   __end_of_adc_int_t_handler 0F3A  
                                ??_TMR6_ISR 0006                           __end_of___asfladd 1128  
                                   _ADFLTRH 003EE7                                     _ADFLTRL 003EE6  
                                   _DMA1DSA 003BF0                                     _DMA2DSA 003BD0  
                                   _DMA1DSZ 003BEE                                     _DMA2DSZ 003BCE  
                                   _DMA1SSA 003BF9                                     _DMA2SSA 003BD9  
                        __size_of_set_dac_a 0034                          __size_of_set_dac_b 0034  
      __end_of_ADCC_SetADTIInterruptHandler 226E       __size_of_ADCC_SetADTIInterruptHandler 0028  
              _ADCC_SetADTIInterruptHandler 2246                                     _DMA1SSZ 003BF7  
                                   _DMA2SSZ 003BD7                  __size_of_port_data_dma_ptr 000A  
                                   _ADSTPTH 003EE5                                     _ADSTPTL 003EE4  
                                   _CRCACCH 003963                                     _CRCACCL 003962  
                   __size_of_load_hist_data 025A                                     _CRCDATH 003961  
                                   _CRCDATL 003960                           _UART1_Receive_ISR 244E  
                                   _CRCCON0 003968                                     _CRCCON1 003969  
                                   _CLKRCLK 003CE6                                     _CLKRCON 003CE5  
                    __end_of_clear_adc_scan 2728                                     _CRCXORH 003967  
                                   _CRCXORL 003966                                     u1211_20 9CC6  
                                   u1310_28 2344                              ?_DMA1_DMAA_ISR 0001  
                          _DMA1_DMASCNT_ISR 26A8                                     _U1ERRIE 003DFA  
                                   u1234_20 2694                          __size_of_set_vterm 001E  
                                   _U1ERRIR 003DF9                                     u1171_25 2668  
                                   u1171_26 266A                                     u1245_20 1DA8  
                                   u1316_48 23D4                                     u1308_48 23B0  
                                   u1245_26 1DAA                                     _U2ERRIE 003DE2  
                                   _U2ERRIR 003DE1                                     u1319_28 2368  
                                   u1280_24 EF54                                     u1280_25 EF50  
                                   u1370_44 0F20                                     u1274_28 EE54  
                                   u1370_45 0F1A                                     u1276_20 EE6E  
                                   u1276_21 EE68                           _CRC_8BitDataWrite 25FA  
                                   _INT0PPS 003AC0                         __CFG_PWRTS$PWRT_OFF 000000  
                                   _INT1PPS 003AC1                                ?_Default_ISR 0001  
                                   u1665_20 4E8C                                     u1672_28 238C  
                                   u1667_20 4F56                  __size_of_UART2_tx_vect_isr 0028  
                                   _U1RXPPS 003AE5                                     _U2RXPPS 003AE8  
                           _dac_spi_control 1036                                     _OSCCON1 0039D9  
                                   _OSCCON3 0039DB                                     _IVTLOCK 003FD4  
                        __size_of_vfpfcnvrt 0FAC                                     _SPI1CLK 003D1C  
                                   _SPI1RXB 003D10                                     _NVMADRH 0039E1  
                                   _NVMADRL 0039E0                           __end_of_calc_bsoc 5286  
                                   _SPI1TXB 003D11                                     _OSCTUNE 0039DE  
                                   _NVMCON2 0039E6                                     _PWM8DCH 003F61  
                                   _PWM8DCL 003F60                                     _PWM8CON 003F62  
                                   _SLRCONA 003A43                                     _SLRCONB 003A53  
                                   _SLRCONC 003A63                                     _SLRCOND 003A73  
                                   _SLRCONE 003A83                                     _SLRCONF 003A93  
                        __size_of_zi_read32 00F6                                  _get_switch 2006  
                        __size_of_start_lcd 0006                     __size_of___year_to_secs 0972  
                   __end_of_TMR5_WriteTimer 1C74                     __size_of_switch_handler 0142  
                        __size_of_stop_bsoc 0006                  __end_of_set_load_relay_one 263E  
                __end_of_set_load_relay_two 262E           __size_of_INT0_SetInterruptHandler 0028  
                __size_of_CLKREF_Initialize 000A                               _calc_ror_data DEC2  
                            ___secs_to_zone 5BF8                     __size_of_DMA1_DMAOR_ISR 000A  
                                   __Hparam 0000                  __size_of_ADCC_ThresholdISR 006A  
                             _mode_lamp_dim 255E                                     __Lparam 0000  
                  __end_of_UART1_Initialize 198C                           __end_of_hid_input F1F0  
                           __size_of_WaitMs 0036                                     ___aldiv DBA0  
                           __size_of___flge 0162                             __size_of___fleq 00C4  
                                   ___aodiv BC48                                     ___almod E4AC  
                                   ___fladd 6CC4                                     ___aomod C820  
                                   ___fldiv 7B3C                                     ___awdiv ECE8  
                                   ___flneg 18FC                             __size_of___lmul 00D6  
                                   ___awmod F546                             __size_of___omul 015A  
                                   ___lbmod 091C                                     ___flmul 649A  
                                   ___flsub 1AA8                                     ___fltol E33A  
                                   ___lodiv E048                                     ___lomod EF78  
                 __end_of_UART1_Receive_ISR 2470                             __size_of_efgtoa 1244  
                           __size_of_getoff 0230                             __size_of_getint 00F2  
                           __size_of_floorf 036C                        __end_of_init_display FE28  
                                   __pcinit F87C                    __end_of_mode_lamp_bright 268A  
                           __size_of_memset 02EC                    __size_of_adc_int_handler 0002  
                       _eaDogM_WriteCommand 266E                                     __ramtop 2000  
                 __end_of_CRC_8BitDataWrite 260C                                     __ptext0 0000  
                                   __ptext1 0FBA                                     __ptext2 1766  
                                   __ptext3 1658                                     __ptext4 2470  
                                   __ptext5 1E44                                     __ptext6 1DD8  
                                   __ptext7 2716                                     __ptext8 1E78  
                                   __ptext9 1EAC                           __end_of_esr_check B48A  
                         _UART2_Receive_ISR 2490                                     _asctime 80B6  
                           __size_of_printf 0062                                     _getname A8F0  
                           __CFG_WRTAPP$OFF 000000                             __size_of_strcpy 00D4  
                           __size_of_strlen 00A2                                     _getrule B9C8  
                                   _dst_off 00B6                       _OSCILLATOR_Initialize 25D0  
                              __size_of_abs 0046                                __size_of_pad 0114  
                         __end_of_init_bsoc C5DC                                     us806999 EB7A  
                                   _isalpha 1AEE                                     _isdigit 1FD6  
                                   _ivln2_h F9EB                                     us818999 BEB2  
                                   us914999 E1B2                                     us829999 CA4E  
                                 _T3CONbits 003FA6                                     us919999 F0A8  
                                   _mode_sw 00CC                           __end_of_lp_filter D868  
                         __end_of_localtime 25A4                                     _islower 1F76  
                                   _isspace 17BC                             __CFG_WRTSAF$OFF 000000  
                                _scan_trans 1CF2                                   _T5CONbits 003F9A  
                                   _set_dac 0476                    __end_of_UART2_Initialize 15FA  
                                   _isupper 1FA6                                   _CRC_Start 271C  
                                _old_tz_buf 03A4                  __size_of_SYSTEM_Initialize 004E  
                                   _sprintf F772                                     _tolower 0E34  
                     __size_of_display_help 0008                                     _utctime 01D7  
                   __end_of_convert_dac_raw F546                       __size_of_display_info 0008  
                                   _strncmp CC90                                     _toupper 0DB0  
                      end_of_initialization F96E                   __size_of_convert_adc_data 00B8  
                                 _SCANHADRH 00397A                                   _SCANHADRL 003979  
                                 _SCANHADRU 00397B                                   _SCANLADRH 003977  
                                 _SCANLADRL 003976                          _check_enter_button 1128  
                                 _SCANLADRU 003978                           __end_of_set_dac_a 1EE0  
                         __end_of_set_dac_b 1EAC                      __end_of___secs_to_zone 649A  
       __end_of_UART2_SetRxInterruptHandler 2156                 _UART2_SetRxInterruptHandler 212E  
                                 i1u1694_20 E834                     check_day_time@day_delay 0051  
                         __end_of_set_vterm 250A                                   i2u1381_48 22FC  
                                 i2u1373_48 204C                                   i2u1375_48 12A6  
                                 i2u1375_49 12BA                                   i2u1377_48 22AC  
                                 i2u1379_48 22D4                           __end_of_vfpfcnvrt 4818  
                                 _SPI1TCNTL 003D12                                     postdec0 003FED  
                                   postdec1 003FE5                                     postdec2 003FDD  
                                   postinc0 003FEE                                     postinc1 003FE6  
                                   postinc2 003FDE                           __end_of_zi_read32 FA6A  
                __size_of_adc_int_t_handler 0082                         __size_of_StartTimer 0040  
                         __end_of_start_lcd 2734                   __end_of_UART2_Receive_ISR 24B0  
                            wdtdelay@dcount 0090                     __end_of_dac_spi_control 10B0  
               __size_of_current_sensor_cal 0474                       __CFG_WDTCPS$WDTCPS_31 000000  
                           ??_DMA1_DMAA_ISR 0007                       _INT1_InterruptHandler 00B0  
                                 _PORTBbits 003FCB                           __end_of_stop_bsoc 273A  
                                 _PORTDbits 003FCD                    _TMR3_SetInterruptHandler 21CE  
                                 _PORTFbits 003FCF                    _TMR6_SetInterruptHandler 217E  
                              _display_help 2706                       _TMR5_InterruptHandler 009B  
                              _display_info 26FE        __size_of_UART2_SetTxInterruptHandler 0028  
                  __end_of_clear_hid_pflags 13A8                           __size_of_ADCC_ISR 002C  
       __end_of_ADCC_SetADIInterruptHandler 2296                 _ADCC_SetADIInterruptHandler 226E  
                                asctime@buf 03C4                                  _update_lcd E8D6  
                           _calc_model_data 937C                      __size_of_ringBufS_init 0028  
                          __CFG_FEXTOSC$ECH 000000                                  _static_soc 1658  
                  __end_of_DATAEE_WriteByte 1342                             _DMA1_Initialize 119A  
                       __end_of_check_range 0FBA                                  _start_bsoc 242C  
                  __size_of___month_to_secs 00EC                      __size_of_send_lcd_data 0024  
                           _SPI1_Initialize 25A4                       __end_of_get_vterm_ptr 0000  
                         __size_of_INT0_ISR 000E                           __size_of_INT1_ISR 003E  
                  __size_of_display_history 02DA                    __end_of_CRC_ReverseValue 0184  
                            __end_of_WaitMs 1E44                __end_of_INTERRUPT_Initialize 140E  
                                _vterm_dump DD34                              __end_of___flge E774  
                            __end_of___fleq 0248        __end_of_INT0_DefaultInterruptHandler 2748  
     __size_of_INT0_DefaultInterruptHandler 0002                _INT0_DefaultInterruptHandler 2746  
                __size_of_UART1_Receive_ISR 0022                             _DMA2_Initialize 170C  
                            __end_of___lmul FEFE                              __end_of___omul EB90  
                             __pidataBIGRAM A270                              _load_hist_data C13C  
                            __end_of_efgtoa 279A                  __size_of_CRC_8BitDataWrite 0012  
                         __size_of_TMR3_ISR 0162                              __end_of_getoff CC90  
                         __size_of_TMR5_ISR 01A2                              __end_of_getint FC52  
                         __size_of_TMR6_ISR 001A                         __size_of_check_help 0212  
                            __end_of_floorf A270                 __size_of_UART2_Transmit_ISR 002C  
                                floorf@F524 0074                              __end_of_memset AED8  
__end_of___month_to_secs@secs_through_month F8AB          ___month_to_secs@secs_through_month F87B  
                            __end_of_printf 1538                    __end_of_DMA1_DMADCNT_ISR 26D6  
               __size_of_PWM8_LoadDutyValue 0042                       __end_of_INT0_CallBack 23C4  
                            __end_of_strcpy FFD2                              __end_of_strlen 091C  
                       start_initialization F87C                     __size_of_write_cal_data 0158  
      __end_of_TMR5_DefaultInterruptHandler 1DD8       __size_of_TMR5_DefaultInterruptHandler 0038  
              _TMR5_DefaultInterruptHandler 1DA0             __size_of_PIN_MANAGER_Initialize 0092  
                               __end_of_abs 1AA8                       __end_of_INT1_CallBack 2358  
                 __size_of_set_display_info 001E                                 __end_of_pad F772  
                      __size_of_Default_ISR 0006                     __size_of_CRC_Initialize 0092  
                            ___year_to_secs 5286                        __end_of_send_lcd_cmd 1BF4  
                            _switch_handler EE36               __size_of_ADCC_StartConversion 0012  
                                ivt0x8_base 0008                               _uart1RxBuffer 02D6  
                     __end_of___fpclassifyf DBA0                               _uart2RxBuffer 0600  
                  __end_of_DMA1_DMASCNT_ISR 26B6                               _uart2TxBuffer 0400  
                            _DMA1_DMAOR_ISR 26E4                         __end_of_hid_display D0CC  
                __end_of_send_port_data_dma 1860                            __CFG_LPBOREN$OFF 000000  
                     __size_of_init_display 00EA                 __size_of_eaDogM_WriteString 00A6  
           __end_of_CRC_CalculatedResultGet E33A                                   _TimerDone 20DE  
                             _ringBufS_init 20B6                      __end_of_load_hist_data C396  
                               __pdataBANK1 0100                                 __pdataBANK2 0200  
                __size_of_UART2_Receive_ISR 0020                         __size_of_get_switch 002C  
                __end_of_EXT_INT_Initialize 1F14                    __size_of_update_cal_data 0056  
                   __end_of_calc_model_data 97D6                               _send_lcd_data 2310  
                       __end_of_help_button 1DA0             __end_of_eaDogM_WriteStringAtPos 0B72  
                       __end_of_BVSOC_TABLE F87B                                   ___asfladd 10B0  
                      calc_model_data@bcror 0088                                 __pbssBIGRAM 0A3F  
                   __end_of_DMA1_Initialize 1204                        calc_model_data@bvror 008C  
                               __pbssCOMRAM 004A                                 _check_range 0F3A  
          __end_of_INT0_SetInterruptHandler 2246                      __end_of___year_to_secs 5BF8  
                             __pcstackBANK0 00E5                    __size_of_TMR2_Initialize 0018  
                    __size_of_TMR3_CallBack 0024                      __end_of_switch_handler EF78  
                               _CRCCON0bits 003968                                 _CRCCON1bits 003969  
                    __size_of_set_hist_flag 0006                           __size_of___xxtofl 0204  
                   __end_of_SPI1_Initialize 25BA                    _UART1_RxInterruptHandler 00A7  
                  _UART2_TxInterruptHandler 00AA                                   __end_of_T F967  
                          _convert_adc_data 03BE                                   _calc_bsoc 4818  
                 __size_of_ringBufS_put_dma 00AA                                _init_display FD3E  
                    __end_of_DMA1_DMAOR_ISR 26EE                      __size_of_TMR5_CallBack 0024  
                         __size_of_do_tzset 0280                       _TMR6_InterruptHandler 009E  
                        calc_ror_data@bcror 0080                      __size_of_TMR6_CallBack 0024  
                   __end_of_DMA2_Initialize 1766                          calc_ror_data@bvror 0084  
                    _PIN_MANAGER_Initialize 0C04                       __end_of___localtime_r C820  
                  __size_of_TMR3_Initialize 0048                        __end_of_wait_lcd_set 272E  
                       __size_of_scan_trans 003C                               __pmediumconst F7AA  
                                 __ptext100 E048                                   __ptext101 CC90  
                                 __ptext110 18FC                                   __ptext102 B48A  
                                 __ptext111 0184                                   __ptext103 1556  
                                 __ptext200 4818                                   __ptext120 087A  
                                 __ptext112 F546                                   __ptext104 0E34  
                                 __ptext201 180E                                   __ptext121 09B6  
                                 __ptext113 ECE8                                   __ptext105 1FA6  
                                 __ptext210 2748                                   __ptext202 26C0  
                                 __ptext130 250A                                   __ptext122 F1F0  
                                 __ptext114 8A88                                   __ptext106 FEFE  
                                 __ptext211 274A                                   __ptext203 10B0  
                                 __ptext131 255E                                   __ptext123 2528  
                                 __ptext115 1A62                                   __ptext107 9F04  
                                 __ptext220 23C4                                   __ptext212 1270  
                                 __ptext204 2698                                   __ptext140 DEC2  
                                 __ptext132 267C                                   __ptext124 0686  
                                 __ptext116 C820                                   __ptext108 DA0A  
                                 __ptext221 18AE                                   __ptext213 2298  
                                 __ptext205 23A0                                   __ptext141 052C  
                                 __ptext133 1B32                                   __ptext125 BEC8  
                                 __ptext117 BC48                                   __ptext109 E33A  
                                 __ptext222 26A8                                   __ptext214 244E  
                                 __ptext206 2746                                   __ptext150 242C  
                                 __ptext142 85CC                                   __ptext134 1D68  
                                 __ptext126 17BC                                   __ptext118 0D28  
                                 __ptext223 26CC                                   __ptext215 22C0  
                                 __ptext207 273C                                   __ptext151 D6AC  
                                 __ptext143 1538                                   __ptext135 20DE  
                                 __ptext127 1FD6                                   __ptext119 F65E  
                                 __ptext224 26D8                                   __ptext216 2060  
                                 __ptext208 2034                                   __ptext160 2156  
                                 __ptext152 1AA8                                   __ptext144 240A  
                                 __ptext136 1BF4                                   __ptext128 24EC  
                                 __ptext225 26E4                                   __ptext217 22E8  
                                 __ptext209 0EB8                                   __ptext161 208C  
                                 __ptext153 6CC4                                   __ptext145 D2DE  
                                 __ptext137 26FE                                   __ptext129 264E  
                                 __ptext226 0000                                   __ptext218 2490  
                                 __ptext170 25E6                                   __ptext162 217E  
                                 __ptext154 649A                                   __ptext146 7B3C  
                                 __ptext138 2706                                   __ptext219 2544  
                                 __ptext171 0C04                                   __ptext163 198C  
                                 __ptext155 1860                                   __ptext147 E612  
                                 __ptext139 1128                                   __ptext180 0C96  
                                 __ptext172 25D0                                   __ptext164 21A6  
                                 __ptext156 159A                                   __ptext148 937C  
                                 __ptext181 26B6                                   __ptext173 13A8  
                                 __ptext165 19D4                                   __ptext157 2106  
                                 __ptext149 2734                                   __ptext190 1C34  
                                 __ptext182 1204                                   __ptext174 270E  
                                 __ptext166 21CE                                   __ptext158 212E  
                                 __ptext191 2358                                   __ptext183 2246  
                                 __ptext175 1EE0                                   __ptext167 2576  
                                 __ptext159 1944                                   __ptext192 1DA0  
                                 __ptext184 226E                                   __ptext176 21F6  
                                 __ptext168 25A4                                   __ptext193 9B90  
                                 __ptext185 1CB4                                   __ptext177 221E  
                                 __ptext169 25BA                                   __ptext194 265E  
                                 __ptext186 2334                                   __ptext178 170C  
                                 __ptext195 268A                                   __ptext187 2742  
                                 __ptext179 119A                                   __ptext196 E774  
                                 __ptext188 EE36                                   __ptext197 1C74  
                                 __ptext189 D868                                   __ptext198 237C  
                                 __ptext199 2744                           __size_of_set_time 0036  
                                 _hid_input F0B8                          __end_of_StartTimer 1C34  
                        _set_load_relay_one 262E                          _set_load_relay_two 261E  
                         __size_of_wdtdelay 005A                           __size_of_spinners 00F6  
                         __size_of_vfprintf 00AC                                    _ADCC_ISR 2034  
                    __CFG_BBSIZE$BBSIZE_512 000000                                   fabsf@F463 0078  
                    __size_of_days_in_month 0064                                    _DMA1CON0 003BFC  
                                  _DMA1CON1 003BFD                                    _DMA1AIRQ 003BFE  
                                  _DMA2CON0 003BDC                                    _DMA2CON1 003BDD  
                                  _DMA2AIRQ 003BDE                                    _DMA1SIRQ 003BFF  
                                  _DMA2SIRQ 003BDF                                   _esr_check B1B2  
                   __size_of_get_raw_result 0022                              __size_of_fabsf 00AE  
                                 _init_bsoc C396                      __size_of_wait_lcd_done 0022  
                            __size_of_fputc 0124                                    _T2CLKCON 003FAE  
                            __size_of_fputs 0098                    __size_of_DATAEE_ReadByte 0032  
                            __size_of_put2d 011A                                   _lp_filter D6AC  
                                 _localtime 258E                                 _hid_display CEB0  
                            __size_of_srand 0034                              __size_of_putch 001A  
                      _INTERRUPT_Initialize 13A8                                    _T6CLKCON 003F96  
             __size_of_start_switch_handler 0020                             ?_DMA1_DMAOR_ISR 0001  
                                  _INT0_ISR 2698                                    _INT1_ISR 1CB4  
                                  _LATCbits 003FBC                                    _LATDbits 003FBD  
                                  _LATEbits 003FBE                                    _LATFbits 003FBF  
         __size_of_INT1_SetInterruptHandler 0028                                    _SCANCON0 00397C  
                                  _IPR1bits 003981                                    _IPR2bits 003982  
                                  _PIE1bits 003991                                    _IPR3bits 003983  
                                  _SCANTRIG 00397D                                    _PIE2bits 003992  
                                  _IPR5bits 003985                                    _PIE3bits 003993  
                                 _tickCount 02BC                                    _IPR6bits 003986  
                                  _PIE5bits 003995                                    _IPR8bits 003988  
                                  _PIE6bits 003996                                    _IPR9bits 003989  
                                  _PIE8bits 003998                         __CFG_BORV$VBOR_2P45 000000  
                                  _PIE9bits 003999                                _SPI1CON0bits 003D14  
                              _SPI1CON1bits 003D15                                   _set_dac_a 1EAC  
                                 _set_dac_b 1E78                                   _ring_buf1 0543  
                                 _ring_buf2 0500                                    _PIR0bits 0039A0  
                                  _PIR1bits 0039A1                                    _PIR2bits 0039A2  
                                  _SPI1BAUD 003D19                                    _PIR4bits 0039A4  
                                  _SPI1CON0 003D14                                    _SPI1CON1 003D15  
                                  _SPI1CON2 003D16                               _TMR3_CallBack 237C  
                                  _PIR5bits 0039A5                                    _PIR6bits 0039A6  
                                  _PIR8bits 0039A8                                    _PIR9bits 0039A9  
                  __size_of_TMR5_Initialize 0048                               _set_hist_flag 2716  
                                 _set_vterm 24EC                         __size_of_update_lcd 0160  
                               _help_button 1D68                                    _TMR3_ISR E774  
                               _BVSOC_TABLE F7AB                                    _TMR5_ISR D868  
                                  _TMR6_ISR 2544          __end_of___secs_to_tm@days_in_month F8B7  
                ___secs_to_tm@days_in_month F8AB                                   _port_data 06FF  
                       __size_of_static_soc 005A                                   _vfpfcnvrt 386C  
                              _SPI1INTFbits 003D1A                         __size_of_start_bsoc 0022  
                             _TMR5_CallBack 2358                                  _ADCON0bits 003EF8  
                                 _zi_read32 F974                          __end_of_check_help D2DE  
                                 _start_lcd 272E                     __size_of_FVR_Initialize 0008  
                 __size_of_send_lcd_cmd_dma 001E                               _TMR6_CallBack 23C4  
                            _write_cal_data EB90                       __size_of_send_lcd_cmd 0040  
         __size_of_TMR5_SetInterruptHandler 0028                                   _stop_bsoc 2734  
                          _set_display_info 250A                    __size_of_PWM8_Initialize 0016  
                  __size_of_TMR6_Initialize 002A                              _CRC_Initialize 0C96  
                               _INTCON0bits 003FD2                                   copy_data0 F890  
                                 copy_data1 F8B6                                   copy_data2 F8D8  
          __size_of_CRC_CalculatedResultGet 0172                    _INT0_SetInterruptHandler 221E  
                       __size_of_vterm_dump 018E         __end_of_UART2_SetTxInterruptHandler 212E  
               _UART2_SetTxInterruptHandler 2106                               _days_in_month 140E  
                              _uart1RxCount 00D0                                _uart2RxCount 00CD  
                                  __Hrparam 0000            __size_of_eaDogM_WriteStringAtPos 0092  
                   __CFG_RSTOSC$EXTOSC_4PLL 000000                    __size_of_TMR3_WriteTimer 0040  
                                  __Lrparam 0000                     __size_of_check_adc_scan 0008  
                        __CFG_BOREN$SBORDIS 000000                  __end_of_current_sensor_cal 937C  
                  __size_of_conv_raw_result 04BC                               _wait_lcd_done 23E8  
                              _send_lcd_cmd 1BB4                            __size_of___aldiv 0194  
                          __size_of___aodiv 0280                            __size_of___almod 0166  
                          __size_of___fladd 07BC               __size_of_get_ac_charger_relay 000E  
                          __size_of___aomod 0240                             _adc_int_handler 274A  
                          __size_of___fldiv 057A                            __size_of___awdiv 014E  
                          __size_of___flneg 0048                            __size_of___awmod 0118  
                          __size_of___lbmod 009A                            __size_of___flmul 082A  
                          __size_of___flsub 0046                            __size_of___fltol 0172  
                          __size_of___lodiv 0180                            __size_of___lomod 0140  
             __size_of_set_ac_charger_relay 0010                          __end_of_get_switch 2032  
                      __end_of_rule_to_secs 7B3C                     __size_of_check_day_time 0374  
                    __end_of_write_cal_data ECE8                       __end_of_DMA1_DMAA_ISR 26E2  
                        ___fpclassifyf@F463 007C        __size_of_UART1_SetRxInterruptHandler 0028  
                          __size_of_asctime 0516                                    ___tzname 006C  
                          __size_of_getname 02FC                             lp_filter@smooth 0300  
                                  ___xxtofl D2DE                      __end_of_CRC_Initialize 0D28  
                         ?_DMA1_DMADCNT_ISR 0001                            __size_of_getrule 0280  
               __size_of_check_enter_button 0072                    __size_of_ADCC_Initialize 006A  
               __end_of_eaDogM_WriteCommand 267C                            __size_of_isalpha 0044  
                          __size_of_isdigit 0030                                    __pivt0x8 0008  
                          __size_of_islower 0030                            __size_of_isspace 0052  
                        ??_DMA1_DMADCNT_ISR 0007                            __size_of_set_dac 00B6  
                                  __ptext10 F42E                                    __ptext11 0476  
                                  __ptext20 1BB4                                    __ptext12 1036  
                                  __ptext21 24B0                                    __ptext13 D4E2  
                                  __ptext30 261E                                    __ptext22 20B6  
                                  __ptext14 1F14                                    __ptext31 262E  
                                  __ptext23 C396                                    __ptext15 C13C  
                                  __ptext40 7480                                    __ptext32 266E  
                                  __ptext24 0304                                    __ptext16 1F46  
                                  __ptext41 140E                                    __ptext33 AED8  
                                  __ptext25 CEB0                                    __ptext17 FD3E  
                                  __ptext50 EA36                                    __ptext42 5286  
                                  __ptext34 15FA                                    __ptext26 F0B8  
                                  __ptext18 2310                                    __ptext51 FE28  
                                  __ptext43 FC52                                    __ptext35 258E  
                                  __ptext27 B1B2                                    __ptext19 1B74  
                                  __ptext60 271C                                    __ptext52 E4AC  
                                  __ptext44 B748                                    __ptext36 C5DC  
                                  __ptext28 1D2E                                    __ptext61 263E  
                                  __ptext53 DBA0                                    __ptext45 B9C8  
                                  __ptext37 5BF8                                    __ptext29 26EE  
                                  __ptext70 2722                                    __ptext62 E1C8  
                                  __ptext54 80B6                                    __ptext46 CA60  
                                  __ptext38 1CF2                                    __ptext71 0A4E  
                                  __ptext63 00B6                                    __ptext55 F314  
                                  __ptext47 FB60                                    __ptext39 F974  
                                  __ptext80 E8D6                                    __ptext72 0F3A  
                                  __ptext64 25FA                                    __ptext56 091C  
                                  __ptext48 A8F0                                    __ptext81 0AE0  
                                  __ptext73 03BE                                    __ptext65 1472  
                                  __ptext57 8F08                                    __ptext49 279A  
                                  __ptext90 ABEC                                    __ptext82 24CE  
                                  __ptext74 1342                                    __ptext66 260C  
                                  __ptext58 EB90                                    __ptext91 14D6  
                                  __ptext83 23E8                                    __ptext75 D0CC  
                                  __ptext67 26F6                                    __ptext59 12DA  
                                  __ptext92 05DA                                    __ptext84 16B2  
                                  __ptext76 DD34                                    __ptext68 FA6A  
                                  __ptext93 386C                                    __ptext85 1A1C  
                                  __ptext77 F772                                    __ptext69 2006  
                                  __ptext94 97D6                                    __ptext86 0730  
                                  __ptext78 FFD2                                    __ptext95 0DB0  
                                  __ptext87 2728                                    __ptext79 1E0E  
                                  __ptext96 1F76                                    __ptext88 272E  
                                  __ptext97 1AEE                                    __ptext89 0B72  
                                  __ptext98 A5B0                                    __ptext99 EF78  
                          __size_of_isupper 0030                                    _do_tzset B748  
                     __end_of_read_cal_data D6AC                            __size_of_sprintf 010A  
                          __size_of_tolower 0084                                    us1169999 164A  
                                  us1517999 B49C                                    us1606999 7B26  
                          __size_of_strncmp 0220                            __size_of_toupper 0084  
                                  us1448999 8AA2                                    us1529999 A616  
                                  us1538999 9856                            _ringBufS_put_dma 0686  
                                  _dst_name 01EF                        __end_of_Volts_to_SOC 03BE  
                             __size_of_atoi 0274                               __size_of_ctoa 0088  
                             __size_of_main 1556                               __size_of_dtoa 0480  
                             __size_of_nanf 0062                       __size_of_wait_lcd_set 0006  
                             __size_of_time 005E                               __size_of_stoa 02BE  
                             __size_of_utoa 0340                               __size_of_xtoa 03BA  
                       dac_spi_control@init 0052                                  _CRC_IsBusy 263E  
                      __CFG_WDTCWS$WDTCWS_7 000000                           ?_DMA1_DMASCNT_ISR 0001  
                     __end_of_init_port_dma 1F76                                 _IVTLOCKbits 003FD4  
                      __end_of___secs_to_tm 386C                    __size_of_TMR5_WriteTimer 0040  
                                  _set_time 1DD8                   _ADCC_ADI_InterruptHandler 00A4  
                                 stoa@F1166 0200                          ??_DMA1_DMASCNT_ISR 0007  
              __end_of_ADCC_StartConversion 261E                          __end_of_scan_trans 1D2E  
                                  _spi_link 0060                                    _std_name 01F6  
                                  _wdtdelay 16B2                  __end_of_UART2_Transmit_ISR 208C  
                                  _spinners FA6A                                    _vfprintf 05DA  
                  __end_of_convert_adc_data 0476                   __size_of_update_hist_data 007C  
                __end_of_PWM8_LoadDutyValue 1B74        __end_of_TMR3_DefaultInterruptHandler 2746  
     __size_of_TMR3_DefaultInterruptHandler 0002                _TMR3_DefaultInterruptHandler 2744  
      __end_of_INT1_DefaultInterruptHandler 2744       __size_of_INT1_DefaultInterruptHandler 0002  
              _INT1_DefaultInterruptHandler 2742                          _send_port_data_dma 180E  
                             ??_Default_ISR 0001                                 _uart1RxHead 0057  
                    __size_of_get_vterm_ptr 002E                                 _uart2RxHead 0054  
                               _uart1RxTail 00D1                              _get_raw_result 240A  
                               _NVMCON1bits 0039E5                                 _uart2TxHead 00CF  
                               _uart2RxTail 00CE                                   spinners@s 01CD  
                               _uart2TxTail 0056                   __size_of_cal_current_zero 0092  
                              _wait_lcd_set 2728                          _EXT_INT_Initialize 1EE0  
      __end_of_TMR6_DefaultInterruptHandler 18FC       __size_of_TMR6_DefaultInterruptHandler 004E  
              _TMR6_DefaultInterruptHandler 18AE                           _send_lcd_data_dma 1A1C  
      __end_of_ADCC_DefaultInterruptHandler 274A       __size_of_ADCC_DefaultInterruptHandler 0002  
              _ADCC_DefaultInterruptHandler 2748                                    intlevel1 0000  
                                  intlevel2 0000                             ___month_to_secs FC52  
                         _send_lcd_cmd_long 1B74              __size_of_set_temp_display_help 0010  
             __end_of_set_temp_display_help 265E                       __end_of_calc_ror_data E048  
                         __CFG_CLKOUTEN$OFF 000000                  __end_of_eaDogM_WriteString 07D6  
                     __end_of_mode_lamp_dim 2576                     __end_of_adc_int_handler 274C  
                  __size_of_convert_dac_raw 0118                             _display_history AED8  
                    __size_of_INT0_CallBack 0024                                  _SPI1SCKPPS 003ADE  
                                _SPI1SDIPPS 003ADF                      __size_of_INT1_CallBack 0024  
                        __end_of_update_lcd EA36                      _uart2TxBufferRemaining 0055  
                        __end_of_static_soc 16B2                          __end_of_start_bsoc 244E  
                            _FVR_Initialize 270E                      __end_of_get_raw_result 242C  
                          _send_lcd_cmd_dma 24CE                      __size_of___fpclassifyf 0196  
                     TMR5_ISR@CountCallBack 00C2            __end_of_INT1_SetInterruptHandler 221E  
                 __size_of_UART1_Initialize 0048                    __size_of_dac_spi_control 007A  
                 __end_of_send_lcd_data_dma 1A62                            ??_DMA1_DMAOR_ISR 0007  
                   _CRC_CalculatedResultGet E1C8                   __end_of_send_lcd_cmd_long 1BB4  
                   __size_of_start_adc_scan 0064                         __end_of_Default_ISR 2742  
            __end_of_PIN_MANAGER_Initialize 0C96                   __size_of_mode_lamp_bright 000E  
                        __end_of_vterm_dump DEC2                     _eaDogM_WriteStringAtPos 0AE0  
                             _get_vterm_ptr FFD2                              _check_adc_scan 26EE  
                 __size_of_UART2_Initialize 0060                       __size_of_rule_to_secs 06BC  
