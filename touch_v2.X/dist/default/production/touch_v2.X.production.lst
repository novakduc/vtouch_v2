

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Mon Mar 18 02:52:26 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK3,global,class=CODE,delta=1,noexec
     9                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    19                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    20                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    21                           	psect	text0,global,reloc=2,class=CODE,delta=1
    22                           	psect	text1,global,reloc=2,class=CODE,delta=1
    23                           	psect	text2,global,reloc=2,class=CODE,delta=1
    24                           	psect	text3,global,reloc=2,class=CODE,delta=1
    25                           	psect	text4,global,reloc=2,class=CODE,delta=1
    26                           	psect	text5,global,reloc=2,class=CODE,delta=1
    27                           	psect	text6,global,reloc=2,class=CODE,delta=1
    28                           	psect	text7,global,reloc=2,class=CODE,delta=1
    29                           	psect	text8,global,reloc=2,class=CODE,delta=1
    30                           	psect	text9,global,reloc=2,class=CODE,delta=1
    31                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text11,global,reloc=2,class=CODE,delta=1
    33                           	psect	text12,global,reloc=2,class=CODE,delta=1
    34                           	psect	text13,global,reloc=2,class=CODE,delta=1
    35                           	psect	text14,global,reloc=2,class=CODE,delta=1
    36                           	psect	text15,global,reloc=2,class=CODE,delta=1
    37                           	psect	text16,global,reloc=2,class=CODE,delta=1,inline
    38                           	psect	text17,global,reloc=2,class=CODE,delta=1,inline
    39                           	psect	text18,global,reloc=2,class=CODE,delta=1
    40                           	psect	text19,global,reloc=2,class=CODE,delta=1
    41                           	psect	text20,global,reloc=2,class=CODE,delta=1
    42                           	psect	text21,global,reloc=2,class=CODE,delta=1
    43                           	psect	text22,global,reloc=2,class=CODE,delta=1
    44                           	psect	text23,global,reloc=2,class=CODE,delta=1
    45                           	psect	text24,global,reloc=2,class=CODE,delta=1
    46                           	psect	text25,global,reloc=2,class=CODE,delta=1
    47                           	psect	text26,global,reloc=2,class=CODE,delta=1
    48                           	psect	text27,global,reloc=2,class=CODE,delta=1
    49                           	psect	text28,global,reloc=2,class=CODE,delta=1
    50                           	psect	text29,global,reloc=2,class=CODE,delta=1
    51                           	psect	text30,global,reloc=2,class=CODE,delta=1
    52                           	psect	text31,global,reloc=2,class=CODE,delta=1
    53                           	psect	text32,global,reloc=2,class=CODE,delta=1
    54                           	psect	text33,global,reloc=2,class=CODE,delta=1
    55                           	psect	text34,global,reloc=2,class=CODE,delta=1
    56                           	psect	text35,global,reloc=2,class=CODE,delta=1
    57                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    58                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text38,global,reloc=2,class=CODE,delta=1
    60                           	psect	text39,global,reloc=2,class=CODE,delta=1
    61                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text41,global,reloc=2,class=CODE,delta=1
    63                           	psect	text42,global,reloc=2,class=CODE,delta=1
    64                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=1
    66                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=1
    67                           	psect	text46,global,reloc=2,class=CODE,delta=1
    68                           	psect	text47,global,reloc=2,class=CODE,delta=1
    69                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    70                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    71                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    72                           	psect	text51,global,reloc=2,class=CODE,delta=1
    73                           	psect	text52,global,reloc=2,class=CODE,delta=1
    74                           	psect	text53,global,reloc=2,class=CODE,delta=1
    75                           	psect	text54,global,reloc=2,class=CODE,delta=1
    76                           	psect	text55,global,reloc=2,class=CODE,delta=1
    77                           	psect	text56,global,reloc=2,class=CODE,delta=1
    78                           	psect	text57,global,reloc=2,class=CODE,delta=1
    79                           	psect	text58,global,reloc=2,class=CODE,delta=1
    80                           	psect	text59,global,reloc=2,class=CODE,delta=1
    81                           	psect	text60,global,reloc=2,class=CODE,delta=1
    82                           	psect	text61,global,reloc=2,class=CODE,delta=1
    83                           	psect	text62,global,reloc=2,class=CODE,delta=1
    84                           	psect	text63,global,reloc=2,class=CODE,delta=1
    85                           	psect	text64,global,reloc=2,class=CODE,delta=1
    86                           	psect	text65,global,reloc=2,class=CODE,delta=1
    87                           	psect	text66,global,reloc=2,class=CODE,delta=1
    88                           	psect	text67,global,reloc=2,class=CODE,delta=1
    89                           	psect	text68,global,reloc=2,class=CODE,delta=1
    90                           	psect	text69,global,reloc=2,class=CODE,delta=1
    91                           	psect	text70,global,reloc=2,class=CODE,delta=1
    92                           	psect	text71,global,reloc=2,class=CODE,delta=1
    93                           	psect	text72,global,reloc=2,class=CODE,delta=1
    94                           	psect	text73,global,reloc=2,class=CODE,delta=1
    95                           	psect	text74,global,reloc=2,class=CODE,delta=1
    96                           	psect	text75,global,reloc=2,class=CODE,delta=1
    97                           	psect	text76,global,reloc=2,class=CODE,delta=1
    98                           	psect	text77,global,reloc=2,class=CODE,delta=1
    99                           	psect	text78,global,reloc=2,class=CODE,delta=1
   100                           	psect	text79,global,reloc=2,class=CODE,delta=1
   101                           	psect	text80,global,reloc=4,class=CODE,delta=1
   102                           	psect	text81,global,reloc=2,class=CODE,delta=1
   103                           	psect	text82,global,reloc=2,class=CODE,delta=1
   104                           	psect	text83,global,reloc=4,class=CODE,delta=1
   105                           	psect	text84,global,reloc=2,class=CODE,delta=1
   106                           	psect	text85,global,reloc=2,class=CODE,delta=1
   107                           	psect	text86,global,reloc=4,class=CODE,delta=1
   108                           	psect	text87,global,reloc=2,class=CODE,delta=1
   109                           	psect	text88,global,reloc=2,class=CODE,delta=1
   110                           	psect	text89,global,reloc=4,class=CODE,delta=1
   111                           	psect	text90,global,reloc=4,class=CODE,delta=1
   112                           	psect	text91,global,reloc=2,class=CODE,delta=1
   113                           	psect	text92,global,reloc=4,class=CODE,delta=1
   114                           	psect	text93,global,reloc=2,class=CODE,delta=1
   115                           	psect	text94,global,reloc=4,class=CODE,delta=1
   116                           	psect	text95,global,reloc=2,class=CODE,delta=1
   117                           	psect	text96,global,reloc=4,class=CODE,delta=1
   118                           	psect	text97,global,reloc=2,class=CODE,delta=1
   119                           	psect	text98,global,reloc=4,class=CODE,delta=1
   120                           	psect	text99,global,reloc=2,class=CODE,delta=1
   121                           	psect	text100,global,reloc=4,class=CODE,delta=1
   122                           	psect	text101,global,reloc=2,class=CODE,delta=1
   123                           	psect	text102,global,reloc=2,class=CODE,delta=1
   124                           	psect	text103,global,reloc=4,class=CODE,delta=1
   125                           	psect	text104,global,reloc=4,class=CODE,delta=1
   126                           	psect	text105,global,reloc=4,class=CODE,delta=1
   127                           	psect	text106,global,reloc=4,class=CODE,delta=1
   128                           	psect	text107,global,reloc=4,class=CODE,delta=1
   129                           	psect	text108,global,reloc=2,class=CODE,delta=1
   130                           	psect	text109,global,reloc=2,class=CODE,delta=1
   131                           	psect	text110,global,reloc=2,class=CODE,delta=1
   132                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   133                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   134                           	psect	text111,global,reloc=2,class=CODE,delta=1
   135                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   136                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   137  0000                     
   138                           ; Version 2.05
   139                           ; Generated 20/12/2018 GMT
   140                           ; 
   141                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   142                           ; All rights reserved.
   143                           ; 
   144                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   145                           ; 
   146                           ; Redistribution and use in source and binary forms, with or without modification, are
   147                           ; permitted provided that the following conditions are met:
   148                           ; 
   149                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   150                           ;        conditions and the following disclaimer.
   151                           ; 
   152                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   153                           ;        of conditions and the following disclaimer in the documentation and/or other
   154                           ;        materials provided with the distribution.
   155                           ; 
   156                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   157                           ;        software without specific prior written permission.
   158                           ; 
   159                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   160                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   161                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   162                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   163                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   164                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   165                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   166                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   167                           ; 
   168                           ; 
   169                           ; Code-generator required, PIC18F57K42 Definitions
   170                           ; 
   171                           ; SFR Addresses
   172  0000                     
   173 ;;_mode	offset	0
   174 ;;_rxData	offset	0
   175 ;;_t_link	offset=-1 (param)
   176 ;;_k	offset	0
   177 ;;_checksum	offset	2
   178 ;;_i	offset	4
   179 ;;_byte_block	offset=-2 (param)
   180 ;;_length	offset=-3 (param)
   181 ;;_fake	offset=-4 (param)
   182 ;;_s_uart	offset=-5 (param)
   183 ;;_i	offset	0
   184 ;;_sum	offset	2
   185 ;;_byte_block	offset=-2 (param)
   186 ;;_byte_count	offset=-4 (param)
   187 ;;_bufData	offset=-1 (param)
   188 ;;_txData	offset=-1 (param)
   189 ;;_bufData	offset=-1 (param)
   190 ;;_stream	offset=-6 (param)
   191 ;;_function	offset=-7 (param)
   192 ;;_f	offset	0
   193 ;;_ap	offset	5
   194 ;;_s	offset=-2 (param)
   195 ;;_fmt	offset=-3 (param)
   196 ;;_rxData	offset	0
   197 ;;_r_link	offset=-1 (param)
   198 ;;_txData	offset=-1 (param)
   199 ;;_rxData	offset	0
   200 ;;_m_link	offset=-1 (param)
   201 ;;_byte_block	offset=-1 (param)
   202 ;;_clear	offset=-2 (param)
   203 ;;_numMilliseconds	offset=-2 (param)
   204 ;;_timer	offset=-1 (param)
   205 ;;_timer	offset=-1 (param)
   206 ;;_count	offset=-3 (param)
   207 ;;_readValue	offset	0
   208 ;;_readValue	offset	0
   209 ;;_cmd	offset=-1 (param)
   210 ;;_cmd	offset=-1 (param)
   211 ;;_data	offset=-1 (param)
   212 ;;__this	offset=-2 (param)
   213 ;;_r	offset=-1 (param)
   214 ;;_c	offset=-2 (param)
   215 ;;_strPtr	offset=-3 (param)
   216 ;;_strPtr	offset=-1 (param)
   217 ;;_cmd	offset=-1 (param)
   218 ;;_strPtr	offset=-1 (param)
   219 ;;_delay	offset=-4 (param)
   220 ;;__this	offset=-2 (param)
   221 ;;_clearBuffer	offset=-3 (param)
   222 ;;_s	offset	0
   223 ;;_k	offset	2
   224 ;;_dest	offset=-2 (param)
   225 ;;_c	offset=-4 (param)
   226 ;;_n	offset=-6 (param)
   227 ;;_ap	offset	0
   228 ;;_fmt	offset=-2 (param)
   229 ;;_cfmt	offset	0
   230 ;;_fp	offset=-2 (param)
   231 ;;_fmt	offset=-3 (param)
   232 ;;_ap	offset=-5 (param)
   233 ;;_ll	offset	0
   234 ;;_cp	offset	8
   235 ;;_c	offset	10
   236 ;;_fp	offset=-2 (param)
   237 ;;_fmt	offset=-4 (param)
   238 ;;_ap	offset=-6 (param)
   239 ;;_r	offset	0
   240 ;;_l	offset	1
   241 ;;__l	offset=-1 (param)
   242 ;;__r	offset=-2 (param)
   243 ;;_n	offset=-4 (param)
   244 ;;_nuls	offset	0
   245 ;;_l	offset	7
   246 ;;_p	offset	9
   247 ;;_cp	offset	11
   248 ;;_w	offset	13
   249 ;;_i	offset	15
   250 ;;_fp	offset=-2 (param)
   251 ;;_s	offset=-4 (param)
   252 ;;_dtoa$3806	offset	0
   253 ;;_n	offset	2
   254 ;;_i	offset	10
   255 ;;_s	offset	12
   256 ;;_w	offset	14
   257 ;;_p	offset	16
   258 ;;_fp	offset=-2 (param)
   259 ;;_d	offset=-10 (param)
   260 ;;_a	offset=-2 (param)
   261 ;;_sign	offset	0
   262 ;;_counter	offset	1
   263 ;;_dividend	offset=-8 (param)
   264 ;;_divisor	offset=-16 (param)
   265 ;;_quotient	offset	0
   266 ;;_sign	offset	8
   267 ;;_counter	offset	9
   268 ;;_dividend	offset=-8 (param)
   269 ;;_divisor	offset=-16 (param)
   270 ;;_w	offset	0
   271 ;;_fp	offset=-2 (param)
   272 ;;_c	offset=-3 (param)
   273 ;;_w	offset	0
   274 ;;_i	offset	2
   275 ;;_fp	offset=-2 (param)
   276 ;;_buf	offset=-4 (param)
   277 ;;_p	offset=-6 (param)
   278 ;;_a	offset	0
   279 ;;_s	offset=-2 (param)
   280 ;;_i	offset	0
   281 ;;_c	offset	2
   282 ;;_s	offset=-2 (param)
   283 ;;_fp	offset=-4 (param)
   284 ;;_c	offset=-2 (param)
   285 ;;_fp	offset=-4 (param)
   286 ;;_c	offset=-1 (param)
   287 ;;__this	offset=-2 (param)
   288 ;;_c	offset=-3 (param)
   289 ;;_InterruptHandler	offset=-3 (param)
   290 ;;_InterruptHandler	offset=-3 (param)
   291 ;;_InterruptHandler	offset=-3 (param)
   292 ;;_InterruptHandler	offset=-3 (param)
   293 ;;_InterruptHandler	offset=-3 (param)
   294 ;;_InterruptHandler	offset=-3 (param)
   295 ;;_state	offset	0
   296 ;;_InterruptHandler	offset=-3 (param)
   297 ;;_InterruptHandler	offset=-3 (param)
   298 ;;_InterruptHandler	offset=-3 (param)
   299 ;;_InterruptHandler	offset=-3 (param)
   300 ;;_i	offset	0
   301 ;;_timerVal	offset=-2 (param)
   302                           
   303                           	psect	idataCOMRAM
   304  00619E                     __pidataCOMRAM:
   305                           	opt callstack 0
   306                           
   307                           ;initializer for r_protocol@retry
   308  00619E  03                 	db	3
   309                           
   310                           	psect	idataBANK0
   311  005592                     __pidataBANK0:
   312                           	opt callstack 0
   313                           
   314                           ;initializer for stoa@F1144
   315  005592  28                 	db	40
   316  005593  6E                 	db	110
   317  005594  75                 	db	117
   318  005595  6C                 	db	108
   319  005596  6C                 	db	108
   320  005597  29                 	db	41
   321  005598  00                 	db	0
   322                           
   323                           ;initializer for _V
   324  005599  00                 	db	0
   325  00559A  00                 	db	0
   326  00559B  00                 	db	0
   327  00559C  00                 	db	0
   328  00559D  00                 	db	0
   329  00559E  00                 	db	0
   330  00559F  00                 	db	0
   331  0055A0  00                 	db	0
   332  0055A1  00                 	db	0
   333  0055A2  00                 	db	0
   334  0055A3  00                 	db	0
   335  0055A4  00                 	db	0
   336  0055A5  00                 	db	0
   337  0055A6  00                 	db	0
   338  0055A7  00                 	db	0
   339  0055A8  00                 	db	0
   340  0055A9  00                 	db	0
   341  0055AA  00                 	db	0
   342  0055AB  00                 	db	0
   343  0055AC  00                 	db	0
   344  0055AD  00                 	db	0
   345  0055AE  00                 	db	0
   346  0055AF  00                 	db	0
   347  0055B0  00                 	db	0
   348  0055B1  00                 	db	0
   349  0055B2  00                 	db	0
   350  0055B3  00                 	db	0
   351  0055B4  00                 	db	0
   352  0055B5  00                 	db	0
   353  0055B6  00                 	db	0
   354  0055B7  00                 	db	0
   355  0055B8  00                 	db	0
   356  0055B9  00                 	db	0
   357  0055BA  00                 	db	0
   358  0055BB  00                 	db	0
   359  0055BC  00                 	db	0
   360  0055BD  00                 	db	0
   361  0055BE  00                 	db	0
   362  0055BF  00                 	db	0
   363  0055C0  00                 	db	0
   364  0055C1  00                 	db	0
   365  0055C2  00                 	db	0
   366  0055C3  00                 	db	0
   367  0055C4  00                 	db	0
   368  0055C5  00                 	db	0
   369  0055C6  00                 	db	0
   370  0055C7  00                 	db	0
   371  0055C8  00                 	db	0
   372  0055C9  00                 	db	0
   373  0055CA  00                 	db	0
   374  0055CB  00                 	db	0
   375  0055CC  00                 	db	0
   376  0055CD  00                 	db	0
   377  0055CE  00                 	db	0
   378  0055CF  00                 	db	0
   379  0055D0  00                 	db	0
   380  0055D1  00                 	db	0
   381  0055D2  00                 	db	0
   382  0055D3  00                 	db	0
   383  0055D4  00                 	db	0
   384  0055D5  00                 	db	0
   385  0055D6  00                 	db	0
   386  0055D7  00                 	db	0
   387  0055D8  00                 	db	0
   388  0055D9  00                 	db	0
   389  0055DA  00                 	db	0
   390  0055DB  00                 	db	0
   391  0055DC  00                 	db	0
   392  0055DD  00                 	db	0
   393  0055DE  0000               	dw	0
   394  0055E0  0000               	dw	0
   395  0055E2  0000               	dw	0
   396  0055E4  0000               	dw	0
   397  0055E6  00                 	db	0
   398  0055E7  00                 	db	0
   399  0055E8  00                 	db	0
   400  0055E9  00                 	db	0
   401  0055EA  00                 	db	0
   402  0055EB  0000               	dw	0
   403  0055ED  0000               	dw	0
   404  0055EF  00                 	db	0
   405  0055F0  00                 	db	0
   406  0055F1  01                 	db	1
   407                           
   408                           	psect	idataBANK1
   409  004E7A                     __pidataBANK1:
   410                           	opt callstack 0
   411                           
   412                           ;initializer for _H10
   413  004E7A  0000               	dw	0
   414  004E7C  0001               	dw	1
   415  004E7E  0000               	dw	0
   416  004E80  01                 	db	1
   417  004E81  80                 	db	128
   418  004E82  01                 	db	1
   419  004E83  81                 	db	129
   420  004E84  00                 	db	0
   421  004E85  00                 	db	0
   422  004E86  0A                 	db	10
   423  004E87  0000               	dw	0
   424  004E89  00                 	db	0
   425  004E8A  00                 	db	0
   426  004E8B  00                 	db	0
   427  004E8C  00                 	db	0
   428  004E8D  00                 	db	0
   429  004E8E  00                 	db	0
   430  004E8F  00                 	db	0
   431  004E90  00                 	db	0
   432  004E91  00                 	db	0
   433  004E92  00                 	db	0
   434  004E93  0A                 	db	10
   435  004E94  0000               	dw	0
   436  004E96  0001               	dw	1
   437  004E98  0000               	dw	0
   438  004E9A  01                 	db	1
   439  004E9B  80                 	db	128
   440  004E9C  00                 	db	0
   441  004E9D  01                 	db	1
   442  004E9E  00                 	db	0
   443  004E9F  00                 	db	0
   444  004EA0  0A                 	db	10
   445  004EA1  0000               	dw	0
   446  004EA3  0001               	dw	1
   447  004EA5  0000               	dw	0
   448  004EA7  01                 	db	1
   449  004EA8  80                 	db	128
   450  004EA9  01                 	db	1
   451  004EAA  81                 	db	129
   452  004EAB  00                 	db	0
   453  004EAC  80                 	db	128
   454  004EAD  0A                 	db	10
   455  004EAE  0000               	dw	0
   456  004EB0  0001               	dw	1
   457  004EB2  0000               	dw	0
   458  004EB4  01                 	db	1
   459  004EB5  80                 	db	128
   460  004EB6  11                 	db	17
   461  004EB7  82                 	db	130
   462  004EB8  00                 	db	0
   463  004EB9  00                 	db	0
   464  004EBA  0A                 	db	10
   465                           
   466                           ;initializer for _H12
   467  004EBB  0000               	dw	0
   468  004EBD  00                 	db	0
   469  004EBE  01                 	db	1
   470  004EBF  0001               	dw	1
   471  004EC1  0000               	dw	0
   472  004EC3  01                 	db	1
   473  004EC4  80                 	db	128
   474  004EC5  02                 	db	2
   475  004EC6  01                 	db	1
   476  004EC7  00                 	db	0
   477  004EC8  00                 	db	0
   478  004EC9  0C                 	db	12
   479  004ECA  0000               	dw	0
   480  004ECC  00                 	db	0
   481  004ECD  01                 	db	1
   482  004ECE  0001               	dw	1
   483  004ED0  0000               	dw	0
   484  004ED2  01                 	db	1
   485  004ED3  80                 	db	128
   486  004ED4  0D                 	db	13
   487  004ED5  81                 	db	129
   488  004ED6  00                 	db	0
   489  004ED7  00                 	db	0
   490  004ED8  0C                 	db	12
   491                           
   492                           ;initializer for _H24
   493  004ED9  0000               	dw	0
   494  004EDB  41                 	db	65
   495  004EDC  20                 	db	32
   496  004EDD  30                 	db	48
   497  004EDE  31                 	db	49
   498  004EDF  30                 	db	48
   499  004EE0  39                 	db	57
   500  004EE1  31                 	db	49
   501  004EE2  31                 	db	49
   502  004EE3  30                 	db	48
   503  004EE4  38                 	db	56
   504  004EE5  34                 	db	52
   505  004EE6  36                 	db	54
   506  004EE7  30                 	db	48
   507  004EE8  30                 	db	48
   508  004EE9  0001               	dw	1
   509  004EEB  0000               	dw	0
   510  004EED  01                 	db	1
   511  004EEE  80                 	db	128
   512  004EEF  12                 	db	18
   513  004EF0  02                 	db	2
   514  004EF1  00                 	db	0
   515  004EF2  00                 	db	0
   516  004EF3  18                 	db	24
   517                           
   518                           ;initializer for _H17
   519  004EF4  0000               	dw	0
   520  004EF6  00                 	db	0
   521  004EF7  01                 	db	1
   522  004EF8  00                 	db	0
   523  004EF9  01                 	db	1
   524  004EFA  21                 	db	33
   525  004EFB  02                 	db	2
   526  004EFC  01                 	db	1
   527  004EFD  0001               	dw	1
   528  004EFF  0000               	dw	0
   529  004F01  01                 	db	1
   530  004F02  80                 	db	128
   531  004F03  0E                 	db	14
   532  004F04  01                 	db	1
   533  004F05  00                 	db	0
   534  004F06  00                 	db	0
   535  004F07  11                 	db	17
   536                           
   537                           ;initializer for _H14
   538  004F08  0000               	dw	0
   539  004F0A  00                 	db	0
   540  004F0B  41                 	db	65
   541  004F0C  11                 	db	17
   542  004F0D  01                 	db	1
   543  004F0E  0001               	dw	1
   544  004F10  0000               	dw	0
   545  004F12  01                 	db	1
   546  004F13  80                 	db	128
   547  004F14  04                 	db	4
   548  004F15  01                 	db	1
   549  004F16  00                 	db	0
   550  004F17  00                 	db	0
   551  004F18  0E                 	db	14
   552                           
   553                           ;initializer for _H13
   554  004F19  0000               	dw	0
   555  004F1B  00                 	db	0
   556  004F1C  01                 	db	1
   557  004F1D  21                 	db	33
   558  004F1E  0001               	dw	1
   559  004F20  0000               	dw	0
   560  004F22  01                 	db	1
   561  004F23  80                 	db	128
   562  004F24  0C                 	db	12
   563  004F25  06                 	db	6
   564  004F26  00                 	db	0
   565  004F27  00                 	db	0
   566  004F28  0D                 	db	13
   567                           
   568                           	psect	idataBANK3
   569  005A56                     __pidataBANK3:
   570                           	opt callstack 0
   571                           
   572                           ;initializer for _H53
   573  005A56  0000               	dw	0
   574  005A58  00                 	db	0
   575  005A59  00                 	db	0
   576  005A5A  00                 	db	0
   577  005A5B  00                 	db	0
   578  005A5C  00                 	db	0
   579  005A5D  00                 	db	0
   580  005A5E  00                 	db	0
   581  005A5F  00                 	db	0
   582  005A60  00                 	db	0
   583  005A61  00                 	db	0
   584  005A62  00                 	db	0
   585  005A63  00                 	db	0
   586  005A64  00                 	db	0
   587  005A65  00                 	db	0
   588  005A66  00                 	db	0
   589  005A67  00                 	db	0
   590  005A68  00                 	db	0
   591  005A69  00                 	db	0
   592  005A6A  00                 	db	0
   593  005A6B  00                 	db	0
   594  005A6C  00                 	db	0
   595  005A6D  00                 	db	0
   596  005A6E  00                 	db	0
   597  005A6F  00                 	db	0
   598  005A70  00                 	db	0
   599  005A71  00                 	db	0
   600  005A72  00                 	db	0
   601  005A73  00                 	db	0
   602  005A74  00                 	db	0
   603  005A75  00                 	db	0
   604  005A76  00                 	db	0
   605  005A77  00                 	db	0
   606  005A78  00                 	db	0
   607  005A79  00                 	db	0
   608  005A7A  00                 	db	0
   609  005A7B  00                 	db	0
   610  005A7C  00                 	db	0
   611  005A7D  00                 	db	0
   612  005A7E  00                 	db	0
   613  005A7F  46                 	db	70
   614  005A80  01                 	db	1
   615  005A81  41                 	db	65
   616  005A82  00                 	db	0
   617  005A83  0001               	dw	1
   618  005A85  0000               	dw	0
   619  005A87  01                 	db	1
   620  005A88  80                 	db	128
   621  005A89  03                 	db	3
   622  005A8A  8A                 	db	138
   623  005A8B  00                 	db	0
   624  005A8C  00                 	db	0
   625  005A8D  35                 	db	53
   626  0000                     _IVTADL	set	14493
   627  0000                     _IVTADH	set	14494
   628  0000                     _IVTADU	set	14495
   629  0000                     _PIE8bits	set	14744
   630  0000                     _PIR8bits	set	14760
   631  0000                     _SCANPR	set	14839
   632  0000                     _DMA2PR	set	14836
   633  0000                     _DMA1PR	set	14835
   634  0000                     _MAINPR	set	14834
   635  0000                     _ISRPR	set	14833
   636  0000                     _PIE2bits	set	14738
   637  0000                     _PIR2bits	set	14754
   638  0000                     _PIE9bits	set	14745
   639  0000                     _PIR9bits	set	14761
   640  0000                     _PIE6bits	set	14742
   641  0000                     _PIE3bits	set	14739
   642  0000                     _PMD7	set	14791
   643  0000                     _PMD6	set	14790
   644  0000                     _PMD5	set	14789
   645  0000                     _PMD4	set	14788
   646  0000                     _PMD3	set	14787
   647  0000                     _PMD2	set	14786
   648  0000                     _PMD1	set	14785
   649  0000                     _PMD0	set	14784
   650  0000                     _OSCTUNE	set	14814
   651  0000                     _OSCFRQ	set	14815
   652  0000                     _OSCEN	set	14813
   653  0000                     _OSCCON3	set	14811
   654  0000                     _OSCCON1	set	14809
   655  0000                     _IPR8bits	set	14728
   656  0000                     _IPR9bits	set	14729
   657  0000                     _IPR7bits	set	14727
   658  0000                     _IPR5bits	set	14725
   659  0000                     _IPR1bits	set	14721
   660  0000                     _IPR3bits	set	14723
   661  0000                     _IPR6bits	set	14726
   662  0000                     _IPR2bits	set	14722
   663  0000                     _PIE7bits	set	14743
   664  0000                     _PIE5bits	set	14741
   665  0000                     _PIE1bits	set	14737
   666  0000                     _PIR7bits	set	14759
   667  0000                     _PIR5bits	set	14757
   668  0000                     _PIR1bits	set	14753
   669  0000                     _PLLR	set	118496
   670  0000                     _SPI1SDIPPS	set	15071
   671  0000                     _RC6PPS	set	14870
   672  0000                     _RC5PPS	set	14869
   673  0000                     _RA6PPS	set	14854
   674  0000                     _RA5PPS	set	14853
   675  0000                     _RA4PPS	set	14852
   676  0000                     _SPI1SCKPPS	set	15070
   677  0000                     _U1RXPPS	set	15077
   678  0000                     _INT1PPS	set	15041
   679  0000                     _INT2PPS	set	15042
   680  0000                     _INT0PPS	set	15040
   681  0000                     _RC3PPS	set	14867
   682  0000                     _RB6PPS	set	14862
   683  0000                     _U2RXPPS	set	15080
   684  0000                     _SLRCONF	set	14995
   685  0000                     _SLRCONE	set	14979
   686  0000                     _SLRCOND	set	14963
   687  0000                     _SLRCONC	set	14947
   688  0000                     _SLRCONB	set	14931
   689  0000                     _SLRCONA	set	14915
   690  0000                     _ODCOND	set	14962
   691  0000                     _ODCONC	set	14946
   692  0000                     _ODCONB	set	14930
   693  0000                     _ODCONA	set	14914
   694  0000                     _ODCONF	set	14994
   695  0000                     _ODCONE	set	14978
   696  0000                     _WPUC	set	14945
   697  0000                     _WPUA	set	14913
   698  0000                     _WPUB	set	14929
   699  0000                     _WPUE	set	14977
   700  0000                     _WPUF	set	14993
   701  0000                     _WPUD	set	14961
   702  0000                     _ANSELA	set	14912
   703  0000                     _ANSELF	set	14992
   704  0000                     _ANSELE	set	14976
   705  0000                     _ANSELB	set	14928
   706  0000                     _ANSELC	set	14944
   707  0000                     _ANSELD	set	14960
   708  0000                     _DMA1SSA	set	15353
   709  0000                     _DMA1DSZ	set	15342
   710  0000                     _DMA1SSZ	set	15351
   711  0000                     _DMA1DSA	set	15344
   712  0000                     _DMA1CON0bits	set	15356
   713  0000                     _DMA1CON1bits	set	15357
   714  0000                     _DMA1CON0	set	15356
   715  0000                     _DMA1AIRQ	set	15358
   716  0000                     _DMA1SIRQ	set	15359
   717  0000                     _DMA1CON1	set	15357
   718  0000                     _CLC1CON	set	15476
   719  0000                     _CLC1GLS3	set	15485
   720  0000                     _CLC1GLS2	set	15484
   721  0000                     _CLC1GLS1	set	15483
   722  0000                     _CLC1GLS0	set	15482
   723  0000                     _CLC1SEL3	set	15481
   724  0000                     _CLC1SEL2	set	15480
   725  0000                     _CLC1SEL1	set	15479
   726  0000                     _CLC1SEL0	set	15478
   727  0000                     _CLC1POL	set	15477
   728  0000                     _CLKRCON	set	15589
   729  0000                     _CLKRCLK	set	15590
   730  0000                     _MD1CARL	set	15613
   731  0000                     _MD1CARH	set	15614
   732  0000                     _MD1SRC	set	15612
   733  0000                     _MD1CON1bits	set	15611
   734  0000                     _MD1CON0bits	set	15610
   735  0000                     _SPI1INTFbits	set	15642
   736  0000                     _SPI1RXB	set	15632
   737  0000                     _SPI1TXB	set	15633
   738  0000                     _SPI1TCNTL	set	15634
   739  0000                     _SPI1CON0	set	15636
   740  0000                     _SPI1CLK	set	15644
   741  0000                     _SPI1BAUD	set	15641
   742  0000                     _SPI1CON2	set	15638
   743  0000                     _SPI1CON1	set	15637
   744  0000                     _U2RXB	set	15824
   745  0000                     _U2TXB	set	15826
   746  0000                     _U2ERRIE	set	15842
   747  0000                     _U2ERRIR	set	15841
   748  0000                     _U2UIR	set	15840
   749  0000                     _U2FIFO	set	15839
   750  0000                     _U2BRGH	set	15838
   751  0000                     _U2BRGL	set	15837
   752  0000                     _U2CON2	set	15836
   753  0000                     _U2CON1	set	15835
   754  0000                     _U2CON0	set	15834
   755  0000                     _U2P3L	set	15832
   756  0000                     _U2P2L	set	15830
   757  0000                     _U2P1L	set	15828
   758  0000                     _U1RXB	set	15848
   759  0000                     _U1TXB	set	15850
   760  0000                     _U1ERRIE	set	15866
   761  0000                     _U1ERRIR	set	15865
   762  0000                     _U1UIR	set	15864
   763  0000                     _U1FIFO	set	15863
   764  0000                     _U1BRGH	set	15862
   765  0000                     _U1BRGL	set	15861
   766  0000                     _U1CON2	set	15860
   767  0000                     _U1CON1	set	15859
   768  0000                     _U1CON0	set	15858
   769  0000                     _U1P3H	set	15857
   770  0000                     _U1P3L	set	15856
   771  0000                     _U1P2H	set	15855
   772  0000                     _U1P2L	set	15854
   773  0000                     _U1P1H	set	15853
   774  0000                     _U1P1L	set	15852
   775  0000                     _ADCON0	set	16120
   776  0000                     _ADCLK	set	16127
   777  0000                     _ADACT	set	16126
   778  0000                     _ADREF	set	16125
   779  0000                     _ADSTAT	set	16124
   780  0000                     _ADCON3	set	16123
   781  0000                     _ADCON2	set	16122
   782  0000                     _ADCON1	set	16121
   783  0000                     _ADPREH	set	16119
   784  0000                     _ADPREL	set	16118
   785  0000                     _ADCAP	set	16117
   786  0000                     _ADACQH	set	16116
   787  0000                     _ADACQL	set	16115
   788  0000                     _ADPCH	set	16113
   789  0000                     _ADRPT	set	16108
   790  0000                     _ADACCU	set	16106
   791  0000                     _ADSTPTH	set	16101
   792  0000                     _ADSTPTL	set	16100
   793  0000                     _ADUTHH	set	16097
   794  0000                     _ADUTHL	set	16096
   795  0000                     _ADLTHH	set	16095
   796  0000                     _ADLTHL	set	16094
   797  0000                     _NCO1CONbits	set	16190
   798  0000                     _NCO1INCL	set	16187
   799  0000                     _NCO1INCH	set	16188
   800  0000                     _NCO1INCU	set	16189
   801  0000                     _NCO1ACCL	set	16184
   802  0000                     _NCO1ACCH	set	16185
   803  0000                     _NCO1ACCU	set	16186
   804  0000                     _NCO1CLK	set	16191
   805  0000                     _NCO1CON	set	16190
   806  0000                     _LATCbits	set	16316
   807  0000                     _LATDbits	set	16317
   808  0000                     _PORTBbits	set	16331
   809  0000                     _LATEbits	set	16318
   810  0000                     _T5CONbits	set	16282
   811  0000                     _T5CON	set	16282
   812  0000                     _TMR5L	set	16280
   813  0000                     _TMR5H	set	16281
   814  0000                     _T5CLK	set	16285
   815  0000                     _T5GATE	set	16284
   816  0000                     _T5GCON	set	16283
   817  0000                     _T6CON	set	16276
   818  0000                     _T6TMR	set	16274
   819  0000                     _T6PR	set	16275
   820  0000                     _T6RST	set	16279
   821  0000                     _T6HLT	set	16277
   822  0000                     _T6CLKCON	set	16278
   823  0000                     _TRISD	set	16325
   824  0000                     _TRISC	set	16324
   825  0000                     _TRISB	set	16323
   826  0000                     _TRISA	set	16322
   827  0000                     _TRISF	set	16327
   828  0000                     _TRISE	set	16326
   829  0000                     _LATC	set	16316
   830  0000                     _LATB	set	16315
   831  0000                     _LATF	set	16319
   832  0000                     _LATA	set	16314
   833  0000                     _LATD	set	16317
   834  0000                     _LATE	set	16318
   835  0000                     _IVTLOCKbits	set	16340
   836  0000                     _IVTLOCK	set	16340
   837  0000                     _INTCON0bits	set	16338
   838  0000                     _GIE	set	130711
   839                           
   840                           	psect	smallconst
   841  002000                     __psmallconst:
   842                           	opt callstack 0
   843  002000  00                 	db	0
   844  002001                     STR_15:
   845  002001  20                 	db	32
   846  002002  52                 	db	82	;'R'
   847  002003  25                 	db	37
   848  002004  64                 	db	100	;'d'
   849  002005  20                 	db	32
   850  002006  54                 	db	84	;'T'
   851  002007  25                 	db	37
   852  002008  64                 	db	100	;'d'
   853  002009  20                 	db	32
   854  00200A  46                 	db	70	;'F'
   855  00200B  52                 	db	82	;'R'
   856  00200C  25                 	db	37
   857  00200D  64                 	db	100	;'d'
   858  00200E  20                 	db	32
   859  00200F  46                 	db	70	;'F'
   860  002010  53                 	db	83	;'S'
   861  002011  25                 	db	37
   862  002012  64                 	db	100	;'d'
   863  002013  20                 	db	32
   864  002014  23                 	db	35
   865  002015  00                 	db	0
   866  002016                     STR_9:
   867  002016  45                 	db	69	;'E'
   868  002017  20                 	db	32
   869  002018  52                 	db	82	;'R'
   870  002019  25                 	db	37
   871  00201A  64                 	db	100	;'d'
   872  00201B  20                 	db	32
   873  00201C  54                 	db	84	;'T'
   874  00201D  25                 	db	37
   875  00201E  64                 	db	100	;'d'
   876  00201F  20                 	db	32
   877  002020  45                 	db	69	;'E'
   878  002021  25                 	db	37
   879  002022  64                 	db	100	;'d'
   880  002023  20                 	db	32
   881  002024  41                 	db	65	;'A'
   882  002025  25                 	db	37
   883  002026  64                 	db	100	;'d'
   884  002027  20                 	db	32
   885  002028  23                 	db	35
   886  002029  00                 	db	0
   887  00202A                     STR_11:
   888  00202A  20                 	db	32
   889  00202B  4C                 	db	76	;'L'
   890  00202C  4F                 	db	79	;'O'
   891  00202D  47                 	db	71	;'G'
   892  00202E  20                 	db	32
   893  00202F  4D                 	db	77	;'M'
   894  002030  4F                 	db	79	;'O'
   895  002031  44                 	db	68	;'D'
   896  002032  45                 	db	69	;'E'
   897  002033  20                 	db	32
   898  002034  25                 	db	37
   899  002035  64                 	db	100	;'d'
   900  002036  20                 	db	32
   901  002037  20                 	db	32
   902  002038  20                 	db	32
   903  002039  20                 	db	32
   904  00203A  20                 	db	32
   905  00203B  23                 	db	35
   906  00203C  00                 	db	0
   907  00203D                     STR_5:
   908  00203D  20                 	db	32
   909  00203E  48                 	db	72	;'H'
   910  00203F  4F                 	db	79	;'O'
   911  002040  53                 	db	83	;'S'
   912  002041  54                 	db	84	;'T'
   913  002042  20                 	db	32
   914  002043  4D                 	db	77	;'M'
   915  002044  4F                 	db	79	;'O'
   916  002045  44                 	db	68	;'D'
   917  002046  45                 	db	69	;'E'
   918  002047  20                 	db	32
   919  002048  25                 	db	37
   920  002049  6C                 	db	108	;'l'
   921  00204A  64                 	db	100	;'d'
   922  00204B  20                 	db	32
   923  00204C  20                 	db	32
   924  00204D  20                 	db	32
   925  00204E  23                 	db	35
   926  00204F  00                 	db	0
   927  002050                     STR_12:
   928  002050  20                 	db	32
   929  002051  53                 	db	83	;'S'
   930  002052  25                 	db	37
   931  002053  64                 	db	100	;'d'
   932  002054  46                 	db	70	;'F'
   933  002055  25                 	db	37
   934  002056  64                 	db	100	;'d'
   935  002057  20                 	db	32
   936  002058  23                 	db	35
   937  002059  25                 	db	37
   938  00205A  6C                 	db	108	;'l'
   939  00205B  64                 	db	100	;'d'
   940  00205C  20                 	db	32
   941  00205D  20                 	db	32
   942  00205E  20                 	db	32
   943  00205F  20                 	db	32
   944  002060  00                 	db	0
   945  002061                     STR_1:
   946  002061  20                 	db	32
   947  002062  52                 	db	82	;'R'
   948  002063  56                 	db	86	;'V'
   949  002064  49                 	db	73	;'I'
   950  002065  20                 	db	32
   951  002066  48                 	db	72	;'H'
   952  002067  4F                 	db	79	;'O'
   953  002068  53                 	db	83	;'S'
   954  002069  54                 	db	84	;'T'
   955  00206A  20                 	db	32
   956  00206B  54                 	db	84	;'T'
   957  00206C  45                 	db	69	;'E'
   958  00206D  53                 	db	83	;'S'
   959  00206E  54                 	db	84	;'T'
   960  00206F  45                 	db	69	;'E'
   961  002070  52                 	db	82	;'R'
   962  002071  00                 	db	0
   963  002072                     STR_4:
   964  002072  20                 	db	32
   965  002073  46                 	db	70	;'F'
   966  002074  47                 	db	71	;'G'
   967  002075  42                 	db	66	;'B'
   968  002076  40                 	db	64	;'@'
   969  002077  4D                 	db	77	;'M'
   970  002078  43                 	db	67	;'C'
   971  002079  48                 	db	72	;'H'
   972  00207A  50                 	db	80	;'P'
   973  00207B  20                 	db	32
   974  00207C  46                 	db	70	;'F'
   975  00207D  41                 	db	65	;'A'
   976  00207E  42                 	db	66	;'B'
   977  00207F  34                 	db	52	;'4'
   978  002080  00                 	db	0
   979  002081                     STR_6:
   980  002081  20                 	db	32
   981  002082  53                 	db	83	;'S'
   982  002083  25                 	db	37
   983  002084  64                 	db	100	;'d'
   984  002085  46                 	db	70	;'F'
   985  002086  25                 	db	37
   986  002087  64                 	db	100	;'d'
   987  002088  20                 	db	32
   988  002089  23                 	db	35
   989  00208A  20                 	db	32
   990  00208B  20                 	db	32
   991  00208C  20                 	db	32
   992  00208D  20                 	db	32
   993  00208E  00                 	db	0
   994  00208F                     STR_2:
   995  00208F  20                 	db	32
   996  002090  56                 	db	86	;'V'
   997  002091  65                 	db	101	;'e'
   998  002092  72                 	db	114	;'r'
   999  002093  73                 	db	115	;'s'
  1000  002094  69                 	db	105	;'i'
  1001  002095  6F                 	db	111	;'o'
  1002  002096  6E                 	db	110	;'n'
  1003  002097  20                 	db	32
  1004  002098  25                 	db	37
  1005  002099  73                 	db	115	;'s'
  1006  00209A  00                 	db	0
  1007  00209B                     STR_8:
  1008  00209B  20                 	db	32
  1009  00209C  4F                 	db	79	;'O'
  1010  00209D  4B                 	db	75	;'K'
  1011  00209E  20                 	db	32
  1012  00209F  23                 	db	35
  1013  0020A0  00                 	db	0
  1014  0020A1                     STR_7:
  1015  0020A1  20                 	db	32
  1016  0020A2  4F                 	db	79	;'O'
  1017  0020A3  4B                 	db	75	;'K'
  1018  0020A4  51                 	db	81	;'Q'
  1019  0020A5  23                 	db	35
  1020  0020A6  00                 	db	0
  1021  0020A7                     STR_3:
  1022  0020A7  30                 	db	48	;'0'
  1023  0020A8  2E                 	db	46
  1024  0020A9  37                 	db	55	;'7'
  1025  0020AA  34                 	db	52	;'4'
  1026  0020AB  41                 	db	65	;'A'
  1027  0020AC  00                 	db	0
  1028  0020AD                     STR_19:
  1029  0020AD  6C                 	db	108	;'l'
  1030  0020AE  64                 	db	100	;'d'
  1031  0020AF  00                 	db	0
  1032  0020B0                     STR_23:
  1033  0020B0  6C                 	db	108	;'l'
  1034  0020B1  69                 	db	105	;'i'
  1035  0020B2  00                 	db	0
  1036  0020B3                     STR_17:
  1037  0020B3  25                 	db	37
  1038  0020B4  63                 	db	99	;'c'
  1039  0020B5  00                 	db	0
  1040  0000                     
  1041                           ; #config settings
  1042  0020B6  00                 	db	0	; dummy byte at the end
  1043  0000                     
  1044                           	psect	cinit
  1045  004CE2                     __pcinit:
  1046                           	opt callstack 0
  1047  004CE2                     start_initialization:
  1048                           	opt callstack 0
  1049  004CE2                     __initialization:
  1050                           	opt callstack 0
  1051                           
  1052                           ; Initialize objects allocated to BANK3 (56 bytes)
  1053                           ; load TBLPTR registers with __pidataBANK3
  1054  004CE2  0E56               	movlw	low __pidataBANK3
  1055  004CE4  6EF6               	movwf	tblptrl,c
  1056  004CE6  0E5A               	movlw	high __pidataBANK3
  1057  004CE8  6EF7               	movwf	tblptrh,c
  1058  004CEA  0E00               	movlw	low (__pidataBANK3 shr (0+16))
  1059  004CEC  6EF8               	movwf	tblptru,c
  1060  004CEE  EE00  F386         	lfsr	0,__pdataBANK3
  1061  004CF2  EE20 F038          	lfsr	2,56
  1062  004CF6                     copy_data0:
  1063  004CF6  0009               	tblrd		*+
  1064  004CF8  006F FFD7 FFEE     	movff	tablat,postinc0
  1065  004CFE  50DD               	movf	postdec2,w,c
  1066  004D00  50D9               	movf	fsr2l,w,c
  1067  004D02  E1F9               	bnz	copy_data0
  1068                           
  1069                           ; Initialize objects allocated to BANK1 (175 bytes)
  1070                           ; load TBLPTR registers with __pidataBANK1
  1071  004D04  0E7A               	movlw	low __pidataBANK1
  1072  004D06  6EF6               	movwf	tblptrl,c
  1073  004D08  0E4E               	movlw	high __pidataBANK1
  1074  004D0A  6EF7               	movwf	tblptrh,c
  1075  004D0C  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  1076  004D0E  6EF8               	movwf	tblptru,c
  1077  004D10  EE00  F100         	lfsr	0,__pdataBANK1
  1078  004D14  EE20 F0AF          	lfsr	2,175
  1079  004D18                     copy_data1:
  1080  004D18  0009               	tblrd		*+
  1081  004D1A  006F FFD7 FFEE     	movff	tablat,postinc0
  1082  004D20  50DD               	movf	postdec2,w,c
  1083  004D22  50D9               	movf	fsr2l,w,c
  1084  004D24  E1F9               	bnz	copy_data1
  1085                           
  1086                           ; Initialize objects allocated to BANK0 (96 bytes)
  1087                           ; load TBLPTR registers with __pidataBANK0
  1088  004D26  0E92               	movlw	low __pidataBANK0
  1089  004D28  6EF6               	movwf	tblptrl,c
  1090  004D2A  0E55               	movlw	high __pidataBANK0
  1091  004D2C  6EF7               	movwf	tblptrh,c
  1092  004D2E  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1093  004D30  6EF8               	movwf	tblptru,c
  1094  004D32  EE00  F060         	lfsr	0,__pdataBANK0
  1095  004D36  EE20 F060          	lfsr	2,96
  1096  004D3A                     copy_data2:
  1097  004D3A  0009               	tblrd		*+
  1098  004D3C  006F FFD7 FFEE     	movff	tablat,postinc0
  1099  004D42  50DD               	movf	postdec2,w,c
  1100  004D44  50D9               	movf	fsr2l,w,c
  1101  004D46  E1F9               	bnz	copy_data2
  1102                           
  1103                           ; Initialize objects allocated to COMRAM (1 bytes)
  1104                           ; load TBLPTR registers with __pidataCOMRAM
  1105  004D48  0E9E               	movlw	low __pidataCOMRAM
  1106  004D4A  6EF6               	movwf	tblptrl,c
  1107  004D4C  0E61               	movlw	high __pidataCOMRAM
  1108  004D4E  6EF7               	movwf	tblptrh,c
  1109  004D50  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  1110  004D52  6EF8               	movwf	tblptru,c
  1111  004D54  0009               	tblrd		*+	;fetch initializer
  1112  004D56  006F FFD4  F05D    	movff	tablat,__pdataCOMRAM
  1113                           
  1114                           ; Clear objects allocated to BANK3 (134 bytes)
  1115  004D5C  EE00  F300         	lfsr	0,__pbssBANK3
  1116  004D60  0E86               	movlw	134
  1117  004D62                     clear_0:
  1118  004D62  6AEE               	clrf	postinc0,c
  1119  004D64  06E8               	decf	wreg,f,c
  1120  004D66  E1FD               	bnz	clear_0
  1121                           
  1122                           ; Clear objects allocated to BANK2 (256 bytes)
  1123  004D68  EE00  F200         	lfsr	0,__pbssBANK2
  1124  004D6C  EE20 F100          	lfsr	2,256
  1125  004D70                     clear_1:
  1126  004D70  6AEE               	clrf	postinc0,c
  1127  004D72  50DD               	movf	postdec2,w,c
  1128  004D74  50D9               	movf	fsr2l,w,c
  1129  004D76  E1FC               	bnz	clear_1
  1130  004D78  50DA               	movf	fsr2h,w,c
  1131  004D7A  E1FA               	bnz	clear_1
  1132                           
  1133                           ; Clear objects allocated to BANK1 (32 bytes)
  1134  004D7C  EE00  F1AF         	lfsr	0,__pbssBANK1
  1135  004D80  0E20               	movlw	32
  1136  004D82                     clear_2:
  1137  004D82  6AEE               	clrf	postinc0,c
  1138  004D84  06E8               	decf	wreg,f,c
  1139  004D86  E1FD               	bnz	clear_2
  1140                           
  1141                           ; Clear objects allocated to BANK0 (58 bytes)
  1142  004D88  EE00  F0C0         	lfsr	0,__pbssBANK0
  1143  004D8C  0E3A               	movlw	58
  1144  004D8E                     clear_3:
  1145  004D8E  6AEE               	clrf	postinc0,c
  1146  004D90  06E8               	decf	wreg,f,c
  1147  004D92  E1FD               	bnz	clear_3
  1148                           
  1149                           ; Clear objects allocated to COMRAM (58 bytes)
  1150  004D94  EE00  F001         	lfsr	0,__pbssCOMRAM
  1151  004D98  0E3A               	movlw	58
  1152  004D9A                     clear_4:
  1153  004D9A  6AEE               	clrf	postinc0,c
  1154  004D9C  06E8               	decf	wreg,f,c
  1155  004D9E  E1FD               	bnz	clear_4
  1156                           
  1157                           ;
  1158                           ; Setup IVTBASE
  1159                           ;
  1160  004DA0  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  1161  004DA2  6ED5               	movwf	213,c
  1162  004DA4  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  1163  004DA6  6ED6               	movwf	214,c
  1164  004DA8  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  1165  004DAA  6ED7               	movwf	215,c
  1166  004DAC                     end_of_initialization:
  1167                           	opt callstack 0
  1168  004DAC                     __end_of__initialization:
  1169                           	opt callstack 0
  1170  004DAC  0100               	movlb	0
  1171  004DAE  EF5C  F010         	goto	_main	;jump to C main() function
  1172                           
  1173                           	psect	bssCOMRAM
  1174  000001                     __pbssCOMRAM:
  1175                           	opt callstack 0
  1176  000001                     secs_II_message@block:
  1177                           	opt callstack 0
  1178  000001                     	ds	7
  1179  000008                     _ADCC_ADI_InterruptHandler:
  1180                           	opt callstack 0
  1181  000008                     	ds	3
  1182  00000B                     _UART1_TxInterruptHandler:
  1183                           	opt callstack 0
  1184  00000B                     	ds	3
  1185  00000E                     _UART1_RxInterruptHandler:
  1186                           	opt callstack 0
  1187  00000E                     	ds	3
  1188  000011                     _UART2_TxInterruptHandler:
  1189                           	opt callstack 0
  1190  000011                     	ds	3
  1191  000014                     _UART2_RxInterruptHandler:
  1192                           	opt callstack 0
  1193  000014                     	ds	3
  1194  000017                     _INT2_InterruptHandler:
  1195                           	opt callstack 0
  1196  000017                     	ds	3
  1197  00001A                     _INT1_InterruptHandler:
  1198                           	opt callstack 0
  1199  00001A                     	ds	3
  1200  00001D                     _INT0_InterruptHandler:
  1201                           	opt callstack 0
  1202  00001D                     	ds	3
  1203  000020                     _width:
  1204                           	opt callstack 0
  1205  000020                     	ds	2
  1206  000022                     _prec:
  1207                           	opt callstack 0
  1208  000022                     	ds	2
  1209  000024                     _flags:
  1210                           	opt callstack 0
  1211  000024                     	ds	2
  1212  000026                     TMR5_ISR@CountCallBack:
  1213                           	opt callstack 0
  1214  000026                     	ds	2
  1215  000028                     _timer5ReloadVal:
  1216                           	opt callstack 0
  1217  000028                     	ds	2
  1218  00002A                     t_protocol@requeue:
  1219                           	opt callstack 0
  1220  00002A                     	ds	1
  1221  00002B                     t_protocol@retry:
  1222                           	opt callstack 0
  1223  00002B                     	ds	1
  1224  00002C                     r_protocol@rxData_l:
  1225                           	opt callstack 0
  1226  00002C                     	ds	1
  1227  00002D                     m_protocol@rxData_l:
  1228                           	opt callstack 0
  1229  00002D                     	ds	1
  1230  00002E                     _mode_sw:
  1231                           	opt callstack 0
  1232  00002E                     	ds	1
  1233  00002F                     _uart2RxCount:
  1234                           	opt callstack 0
  1235  00002F                     	ds	1
  1236  000030                     _uart2RxTail:
  1237                           	opt callstack 0
  1238  000030                     	ds	1
  1239  000031                     _uart2RxHead:
  1240                           	opt callstack 0
  1241  000031                     	ds	1
  1242  000032                     _uart2TxBufferRemaining:
  1243                           	opt callstack 0
  1244  000032                     	ds	1
  1245  000033                     _uart2TxTail:
  1246                           	opt callstack 0
  1247  000033                     	ds	1
  1248  000034                     _uart2TxHead:
  1249                           	opt callstack 0
  1250  000034                     	ds	1
  1251  000035                     _uart1RxCount:
  1252                           	opt callstack 0
  1253  000035                     	ds	1
  1254  000036                     _uart1RxTail:
  1255                           	opt callstack 0
  1256  000036                     	ds	1
  1257  000037                     _uart1RxHead:
  1258                           	opt callstack 0
  1259  000037                     	ds	1
  1260  000038                     _uart1TxBufferRemaining:
  1261                           	opt callstack 0
  1262  000038                     	ds	1
  1263  000039                     _uart1TxTail:
  1264                           	opt callstack 0
  1265  000039                     	ds	1
  1266  00003A                     _uart1TxHead:
  1267                           	opt callstack 0
  1268  00003A                     	ds	1
  1269                           
  1270                           	psect	dataCOMRAM
  1271  00005D                     __pdataCOMRAM:
  1272                           	opt callstack 0
  1273  00005D                     r_protocol@retry:
  1274                           	opt callstack 0
  1275  00005D                     	ds	1
  1276                           
  1277                           	psect	bssBANK0
  1278  0000C0                     __pbssBANK0:
  1279                           	opt callstack 0
  1280  0000C0                     _r_block:
  1281                           	opt callstack 0
  1282  0000C0                     	ds	13
  1283  0000CD                     _spi_link:
  1284                           	opt callstack 0
  1285  0000CD                     	ds	12
  1286  0000D9                     _tickCount:
  1287                           	opt callstack 0
  1288  0000D9                     	ds	12
  1289  0000E5                     t_protocol@block:
  1290                           	opt callstack 0
  1291  0000E5                     	ds	7
  1292  0000EC                     wdtdelay@dcount:
  1293                           	opt callstack 0
  1294  0000EC                     	ds	4
  1295  0000F0                     _TMR5_InterruptHandler:
  1296                           	opt callstack 0
  1297  0000F0                     	ds	3
  1298  0000F3                     _TMR6_InterruptHandler:
  1299                           	opt callstack 0
  1300  0000F3                     	ds	3
  1301  0000F6                     _nout:
  1302                           	opt callstack 0
  1303  0000F6                     	ds	2
  1304  0000F8                     run_checksum@sum:
  1305                           	opt callstack 0
  1306  0000F8                     	ds	2
  1307                           
  1308                           	psect	dataBANK0
  1309  000060                     __pdataBANK0:
  1310                           	opt callstack 0
  1311  000060                     stoa@F1144:
  1312                           	opt callstack 0
  1313  000060                     	ds	7
  1314  000067                     _V:
  1315                           	opt callstack 0
  1316  000067                     	ds	89
  1317                           
  1318                           	psect	bssBANK1
  1319  0001AF                     __pbssBANK1:
  1320                           	opt callstack 0
  1321  0001AF                     _dbuf:
  1322                           	opt callstack 0
  1323  0001AF                     	ds	32
  1324                           
  1325                           	psect	dataBANK1
  1326  000100                     __pdataBANK1:
  1327                           	opt callstack 0
  1328  000100                     _H10:
  1329                           	opt callstack 0
  1330  000100                     	ds	65
  1331  000141                     _H12:
  1332                           	opt callstack 0
  1333  000141                     	ds	30
  1334  00015F                     _H24:
  1335                           	opt callstack 0
  1336  00015F                     	ds	27
  1337  00017A                     _H17:
  1338                           	opt callstack 0
  1339  00017A                     	ds	20
  1340  00018E                     _H14:
  1341                           	opt callstack 0
  1342  00018E                     	ds	17
  1343  00019F                     _H13:
  1344                           	opt callstack 0
  1345  00019F                     	ds	16
  1346                           
  1347                           	psect	bssBANK2
  1348  000200                     __pbssBANK2:
  1349                           	opt callstack 0
  1350  000200                     _uart2RxBuffer:
  1351                           	opt callstack 0
  1352  000200                     	ds	64
  1353  000240                     _uart2TxBuffer:
  1354                           	opt callstack 0
  1355  000240                     	ds	64
  1356  000280                     _uart1RxBuffer:
  1357                           	opt callstack 0
  1358  000280                     	ds	64
  1359  0002C0                     _uart1TxBuffer:
  1360                           	opt callstack 0
  1361  0002C0                     	ds	64
  1362                           
  1363                           	psect	bssBANK3
  1364  000300                     __pbssBANK3:
  1365                           	opt callstack 0
  1366  000300                     _ring_buf2:
  1367                           	opt callstack 0
  1368  000300                     	ds	67
  1369  000343                     _ring_buf1:
  1370                           	opt callstack 0
  1371  000343                     	ds	67
  1372                           
  1373                           	psect	dataBANK3
  1374  000386                     __pdataBANK3:
  1375                           	opt callstack 0
  1376  000386                     _H53:
  1377                           	opt callstack 0
  1378  000386                     	ds	56
  1379                           
  1380                           	psect	cstackCOMRAM
  1381  00005B                     __pcstackCOMRAM:
  1382                           	opt callstack 0
  1383  00005B                     ??_TMR6_ISR:
  1384  00005B                     
  1385                           ; 1 bytes @ 0x0
  1386  00005B                     	ds	1
  1387  00005C                     ??_TMR5_ISR:
  1388                           
  1389                           ; 1 bytes @ 0x1
  1390  00005C                     	ds	1
  1391                           
  1392 ;;
  1393 ;;Main: autosize = 1, tempsize = 0, incstack = 0, save=0
  1394 ;;
  1395 ;; *************** function _main *****************
  1396 ;; Defined at:
  1397 ;;		line 283 in file "main.c"
  1398 ;; Parameters:    Size  Location     Type
  1399 ;;		None
  1400 ;; Auto vars:     Size  Location     Type
  1401 ;;  mode            1  [STACK] enum E16897
  1402 ;; Return value:  Size  Location     Type
  1403 ;;                  1  [STACK] void 
  1404 ;; Registers used:
  1405 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh
      +, tblptru, prodl, prodh
  1406 ;; Tracked objects:
  1407 ;;		On entry : 0/0
  1408 ;;		On exit  : 4/0
  1409 ;;		Unchanged: 0/0
  1410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1411 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1412 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1414 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1415 ;;Total ram usage:        0 bytes
  1416 ;; Hardware stack levels required when called:   14
  1417 ;; This function calls:
  1418 ;;		_SYSTEM_Initialize
  1419 ;;		_WaitMs
  1420 ;;		_eaDogM_WriteCommand
  1421 ;;		_eaDogM_WriteStringAtPos
  1422 ;;		_init_display
  1423 ;;		_m_protocol
  1424 ;;		_r_protocol
  1425 ;;		_sprintf
  1426 ;;		_t_protocol
  1427 ;;		_wait_lcd_done
  1428 ;; This function is called by:
  1429 ;;		Startup code after reset
  1430 ;; This function uses a reentrant model
  1431 ;;
  1432                           
  1433                           	psect	text0
  1434  0020B8                     __ptext0:
  1435                           	opt callstack 0
  1436  0020B8                     _main:
  1437                           	opt callstack 0
  1438                           
  1439                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  1440  0020B8  52E6               	movf	postinc1,f,c
  1441                           
  1442                           ;main.c: 285:  UI_STATES mode;;main.c: 288:  SYSTEM_Initialize();
  1443                           
  1444                           ;incstack = 0
  1445  0020BA  EC31  F02C         	call	_SYSTEM_Initialize	;wreg free
  1446                           
  1447                           ; BSR set to: 60
  1448                           ;main.c: 291:  (INTCON0bits.GIEH = 1);
  1449  0020BE  8ED2               	bsf	16338,7,c	;volatile
  1450                           
  1451                           ; BSR set to: 60
  1452                           ;main.c: 294:  (INTCON0bits.GIEL = 1);
  1453  0020C0  8CD2               	bsf	16338,6,c	;volatile
  1454                           
  1455                           ; BSR set to: 60
  1456                           ;main.c: 296:  V.ui_state = UI_STATE_INIT;
  1457  0020C2  0100               	movlb	0	; () banked
  1458  0020C4  6B68               	clrf	(_V+1)& (0+255),b
  1459                           
  1460                           ; BSR set to: 0
  1461                           ;main.c: 300:  WaitMs(300);
  1462  0020C6  0E2C               	movlw	44
  1463  0020C8  6EE6               	movwf	postinc1,c
  1464  0020CA  0E01               	movlw	1
  1465  0020CC  6EE6               	movwf	postinc1,c
  1466  0020CE  ECC9  F02D         	call	_WaitMs	;wreg free
  1467                           
  1468                           ;main.c: 301:  if (PORTBbits.RB0) {
  1469  0020D2  A0CB               	btfss	16331,0,c	;volatile
  1470  0020D4  D004               	goto	l8277
  1471                           
  1472                           ;main.c: 302:   mode = UI_STATE_HOST;
  1473                           ;stkvar	_mode @ sp[(-1)+0]
  1474  0020D6  0EFF               	movlw	-1
  1475  0020D8  6AE3               	clrf	plusw1,c
  1476  0020DA  2AE3               	incf	plusw1,f,c
  1477                           
  1478                           ;main.c: 303:  } else {
  1479  0020DC  D004               	goto	l8279
  1480  0020DE                     l8277:
  1481                           
  1482                           ;main.c: 304:   mode = UI_STATE_LOG;
  1483                           ;stkvar	_mode @ sp[(-1)+0]
  1484  0020DE  0EFF               	movlw	-1
  1485  0020E0  6AE3               	clrf	plusw1,c
  1486  0020E2  80E3               	bsf	plusw1,0,c
  1487  0020E4  82E3               	bsf	plusw1,1,c	;indir
  1488  0020E6                     l8279:
  1489                           
  1490                           ;main.c: 307:  if (mode == UI_STATE_HOST) {
  1491                           ;stkvar	_mode @ sp[(-1)+0]
  1492  0020E6  0EFF               	movlw	-1
  1493  0020E8  04E3               	decf	plusw1,w,c
  1494  0020EA  A4D8               	btfss	status,2,c
  1495  0020EC  D003               	goto	l1220
  1496                           
  1497                           ;main.c: 308:   do { LATDbits.LATD0 = 1; } while(0);
  1498  0020EE  80BD               	bsf	16317,0,c	;volatile
  1499                           
  1500                           ;main.c: 309:   do { LATDbits.LATD1 = 1; } while(0);
  1501  0020F0  82BD               	bsf	16317,1,c	;volatile
  1502  0020F2  D1FF               	goto	l8441
  1503  0020F4                     l1220:
  1504  0020F4  90BD               	bcf	16317,0,c	;volatile
  1505                           
  1506                           ;main.c: 312:   do { LATDbits.LATD1 = 0; } while(0);
  1507  0020F6  92BD               	bcf	16317,1,c	;volatile
  1508  0020F8  D1FC               	goto	l8441
  1509  0020FA                     l8281:
  1510                           
  1511                           ; BSR set to: 0
  1512                           ;main.c: 318:    init_display();
  1513  0020FA  EC93  F025         	call	_init_display	;wreg free
  1514                           
  1515                           ; BSR set to: 61
  1516                           ;main.c: 319:    eaDogM_WriteCommand(0b00001100);
  1517  0020FE  0E0C               	movlw	12
  1518  002100  6EE6               	movwf	postinc1,c
  1519  002102  EC74  F030         	call	_eaDogM_WriteCommand	;wreg free
  1520                           
  1521                           ; BSR set to: 0
  1522                           ;main.c: 321:    V.ui_state = mode;
  1523                           ;stkvar	_mode @ sp[(-1)+0]
  1524  002106  0EFF               	movlw	-1
  1525  002108  006F FF8C  F068    	movff	plusw1,_V+1
  1526                           
  1527                           ; BSR set to: 0
  1528                           ;main.c: 322:    V.s_state = SEQ_STATE_INIT;
  1529  00210E  6B67               	clrf	_V& (0+255),b
  1530                           
  1531                           ; BSR set to: 0
  1532                           ;main.c: 351:    sprintf(V.buf, " RVI HOST TESTER");
  1533  002110  0E61               	movlw	STR_1& (0+255)
  1534  002112  6EE6               	movwf	postinc1,c
  1535  002114  0E67               	movlw	_V& (0+255)
  1536  002116  0F05               	addlw	5
  1537  002118  6EE6               	movwf	postinc1,c
  1538  00211A  0E02               	movlw	2
  1539  00211C  6EE6               	movwf	postinc1,c
  1540  00211E  ECD9  F026         	call	_sprintf	;wreg free
  1541                           
  1542                           ; BSR set to: 0
  1543                           ;main.c: 352:    wait_lcd_done();
  1544  002122  EC03  F030         	call	_wait_lcd_done	;wreg free
  1545                           
  1546                           ; BSR set to: 0
  1547                           ;main.c: 353:    eaDogM_WriteStringAtPos(0, 0, V.buf);
  1548  002126  0E67               	movlw	_V& (0+255)
  1549  002128  0F05               	addlw	5
  1550  00212A  6EE6               	movwf	postinc1,c
  1551  00212C  0E00               	movlw	0
  1552  00212E  6EE6               	movwf	postinc1,c
  1553  002130  0E00               	movlw	0
  1554  002132  6EE6               	movwf	postinc1,c
  1555  002134  EC5D  F02D         	call	_eaDogM_WriteStringAtPos	;wreg free
  1556                           
  1557                           ; BSR set to: 59
  1558                           ;main.c: 354:    sprintf(V.buf, " Version %s", "0.74A");
  1559  002138  0EA7               	movlw	STR_3& (0+255)
  1560  00213A  6E46               	movwf	btemp+11,c
  1561  00213C  0060  F11B  FFE6   	movff	btemp+11,postinc1
  1562  002142  0E20               	movlw	high __smallconst
  1563  002144  6EE6               	movwf	postinc1,c
  1564  002146  0E8F               	movlw	STR_2& (0+255)
  1565  002148  6EE6               	movwf	postinc1,c
  1566  00214A  0E67               	movlw	_V& (0+255)
  1567  00214C  0F05               	addlw	5
  1568  00214E  6EE6               	movwf	postinc1,c
  1569  002150  0E04               	movlw	4
  1570  002152  6EE6               	movwf	postinc1,c
  1571  002154  ECD9  F026         	call	_sprintf	;wreg free
  1572                           
  1573                           ; BSR set to: 0
  1574                           ;main.c: 355:    wait_lcd_done();
  1575  002158  EC03  F030         	call	_wait_lcd_done	;wreg free
  1576                           
  1577                           ; BSR set to: 0
  1578                           ;main.c: 356:    eaDogM_WriteStringAtPos(1, 0, V.buf);
  1579  00215C  0E67               	movlw	_V& (0+255)
  1580  00215E  0F05               	addlw	5
  1581  002160  6EE6               	movwf	postinc1,c
  1582  002162  0E00               	movlw	0
  1583  002164  6EE6               	movwf	postinc1,c
  1584  002166  0E01               	movlw	1
  1585  002168  6EE6               	movwf	postinc1,c
  1586  00216A  EC5D  F02D         	call	_eaDogM_WriteStringAtPos	;wreg free
  1587                           
  1588                           ; BSR set to: 59
  1589                           ;main.c: 357:    sprintf(V.buf, " FGB@MCHP FAB4");
  1590  00216E  0E72               	movlw	STR_4& (0+255)
  1591  002170  6EE6               	movwf	postinc1,c
  1592  002172  0E67               	movlw	_V& (0+255)
  1593  002174  0F05               	addlw	5
  1594  002176  6EE6               	movwf	postinc1,c
  1595  002178  0E02               	movlw	2
  1596  00217A  6EE6               	movwf	postinc1,c
  1597  00217C  ECD9  F026         	call	_sprintf	;wreg free
  1598                           
  1599                           ; BSR set to: 0
  1600                           ;main.c: 358:    wait_lcd_done();
  1601  002180  EC03  F030         	call	_wait_lcd_done	;wreg free
  1602                           
  1603                           ; BSR set to: 0
  1604                           ;main.c: 359:    eaDogM_WriteStringAtPos(2, 0, V.buf);
  1605  002184  0E67               	movlw	_V& (0+255)
  1606  002186  0F05               	addlw	5
  1607  002188  6EE6               	movwf	postinc1,c
  1608  00218A  0E00               	movlw	0
  1609  00218C  6EE6               	movwf	postinc1,c
  1610  00218E  0E02               	movlw	2
  1611  002190  6EE6               	movwf	postinc1,c
  1612  002192  EC5D  F02D         	call	_eaDogM_WriteStringAtPos	;wreg free
  1613                           
  1614                           ; BSR set to: 59
  1615                           ;main.c: 361:    WaitMs(3000);
  1616  002196  0EB8               	movlw	184
  1617  002198  6EE6               	movwf	postinc1,c
  1618  00219A  0E0B               	movlw	11
  1619  00219C  6EE6               	movwf	postinc1,c
  1620  00219E  ECC9  F02D         	call	_WaitMs	;wreg free
  1621                           
  1622                           ;main.c: 362:    break;
  1623  0021A2  D1BB               	goto	l1263
  1624  0021A4                     l1230:
  1625                           
  1626                           ; BSR set to: 0
  1627                           ;main.c: 366:     V.r_l_state = LINK_STATE_IDLE;
  1628  0021A4  6B6A               	clrf	(_V+3)& (0+255),b
  1629                           
  1630                           ;main.c: 367:     V.t_l_state = LINK_STATE_IDLE;
  1631  0021A6  6B6B               	clrf	(_V+4)& (0+255),b
  1632                           
  1633                           ; BSR set to: 0
  1634                           ;main.c: 368:     V.s_state = SEQ_STATE_RX;
  1635  0021A8  0E01               	movlw	1
  1636  0021AA  6F67               	movwf	_V& (0+255),b
  1637                           
  1638                           ;main.c: 369:     if (!V.error && !V.abort) {
  1639  0021AC  51B6               	movf	(_V+79)& (0+255),w,b
  1640  0021AE  A4D8               	btfss	status,2,c
  1641  0021B0  D0DC               	goto	l8381
  1642                           
  1643                           ; BSR set to: 0
  1644  0021B2  51B7               	movf	(_V+80)& (0+255),w,b
  1645  0021B4  A4D8               	btfss	status,2,c
  1646  0021B6  D0D9               	goto	l8381
  1647                           
  1648                           ; BSR set to: 0
  1649                           ;main.c: 370:      sprintf(V.buf, " HOST MODE %ld   #", V.ticks);
  1650  0021B8  0060  F2B3  FFE6   	movff	_V+69,postinc1
  1651  0021BE  0060  F2B7  FFE6   	movff	_V+70,postinc1
  1652  0021C4  0060  F2BB  FFE6   	movff	_V+71,postinc1
  1653  0021CA  0060  F2BF  FFE6   	movff	_V+72,postinc1
  1654  0021D0  0E3D               	movlw	STR_5& (0+255)
  1655  0021D2  6EE6               	movwf	postinc1,c
  1656  0021D4  0E67               	movlw	_V& (0+255)
  1657  0021D6  0F05               	addlw	5
  1658  0021D8  6EE6               	movwf	postinc1,c
  1659  0021DA  0E06               	movlw	6
  1660  0021DC  6EE6               	movwf	postinc1,c
  1661  0021DE  ECD9  F026         	call	_sprintf	;wreg free
  1662  0021E2                     l8315:
  1663                           
  1664                           ; BSR set to: 0
  1665                           ;main.c: 371:      V.buf[16] = 0;
  1666  0021E2  6B7C               	clrf	(_V+21)& (0+255),b
  1667                           
  1668                           ; BSR set to: 0
  1669                           ;main.c: 372:      wait_lcd_done();
  1670  0021E4  EC03  F030         	call	_wait_lcd_done	;wreg free
  1671                           
  1672                           ; BSR set to: 0
  1673                           ;main.c: 373:      eaDogM_WriteStringAtPos(2, 0, V.buf);
  1674  0021E8  0E67               	movlw	_V& (0+255)
  1675  0021EA  0F05               	addlw	5
  1676  0021EC  6EE6               	movwf	postinc1,c
  1677  0021EE  0E00               	movlw	0
  1678  0021F0  6EE6               	movwf	postinc1,c
  1679  0021F2  0E02               	movlw	2
  1680  0021F4  6EE6               	movwf	postinc1,c
  1681  0021F6  EC5D  F02D         	call	_eaDogM_WriteStringAtPos	;wreg free
  1682  0021FA  D0B7               	goto	l8381
  1683  0021FC                     l8321:
  1684                           
  1685                           ; BSR set to: 0
  1686                           ;main.c: 384:     if (r_protocol(&V.r_l_state) == LINK_STATE_DONE) {
  1687  0021FC  0E67               	movlw	_V& (0+255)
  1688  0021FE  0F03               	addlw	3
  1689  002200  6EE6               	movwf	postinc1,c
  1690  002202  EC06  F01B         	call	_r_protocol	;wreg free
  1691  002206  0E04               	movlw	4
  1692  002208  183B               	xorwf	btemp,w,c
  1693  00220A  A4D8               	btfss	status,2,c
  1694  00220C  D029               	goto	l8339
  1695                           
  1696                           ;main.c: 385:      sprintf(V.buf, " S%dF%d #    ", V.stream, V.function);
  1697  00220E  0100               	movlb	0	; () banked
  1698  002210  51B5               	movf	(_V+78)& (0+255),w,b
  1699  002212  6EE6               	movwf	postinc1,c
  1700  002214  0E00               	movlw	0
  1701  002216  6EE6               	movwf	postinc1,c
  1702  002218  51B4               	movf	(_V+77)& (0+255),w,b
  1703  00221A  6EE6               	movwf	postinc1,c
  1704  00221C  0E00               	movlw	0
  1705  00221E  6EE6               	movwf	postinc1,c
  1706  002220  0E81               	movlw	STR_6& (0+255)
  1707  002222  6EE6               	movwf	postinc1,c
  1708  002224  0E67               	movlw	_V& (0+255)
  1709  002226  0F05               	addlw	5
  1710  002228  6EE6               	movwf	postinc1,c
  1711  00222A  0E06               	movlw	6
  1712  00222C  6EE6               	movwf	postinc1,c
  1713  00222E  ECD9  F026         	call	_sprintf	;wreg free
  1714                           
  1715                           ; BSR set to: 0
  1716                           ;main.c: 386:      V.buf[11] = 0;
  1717  002232  6B77               	clrf	(_V+16)& (0+255),b
  1718                           
  1719                           ; BSR set to: 0
  1720                           ;main.c: 387:      wait_lcd_done();
  1721  002234  EC03  F030         	call	_wait_lcd_done	;wreg free
  1722                           
  1723                           ; BSR set to: 0
  1724                           ;main.c: 388:      eaDogM_WriteStringAtPos(0, 0, V.buf);
  1725  002238  0E67               	movlw	_V& (0+255)
  1726  00223A  0F05               	addlw	5
  1727  00223C  6EE6               	movwf	postinc1,c
  1728  00223E  0E00               	movlw	0
  1729  002240  6EE6               	movwf	postinc1,c
  1730  002242  0E00               	movlw	0
  1731  002244  6EE6               	movwf	postinc1,c
  1732  002246  EC5D  F02D         	call	_eaDogM_WriteStringAtPos	;wreg free
  1733                           
  1734                           ; BSR set to: 59
  1735                           ;main.c: 392:      if (V.wbit) {
  1736  00224A  0100               	movlb	0	; () banked
  1737  00224C  A3BD               	btfss	(_V+86)& (0+255),1,b
  1738  00224E  D006               	goto	l8337
  1739                           
  1740                           ; BSR set to: 0
  1741                           ;main.c: 393:       V.s_state = SEQ_STATE_TX;
  1742  002250  0E02               	movlw	2
  1743  002252  6F67               	movwf	_V& (0+255),b
  1744                           
  1745                           ;main.c: 394:       V.failed_send = 0;
  1746  002254  0E87               	movlw	-121
  1747  002256  17BD               	andwf	(_V+86)& (0+255),f,b
  1748                           
  1749                           ; BSR set to: 0
  1750                           ;main.c: 395:       V.t_l_state = LINK_STATE_IDLE;
  1751  002258  6B6B               	clrf	(_V+4)& (0+255),b
  1752                           
  1753                           ;main.c: 396:      } else {
  1754  00225A  D002               	goto	l8339
  1755  00225C                     l8337:
  1756                           
  1757                           ; BSR set to: 0
  1758                           ;main.c: 397:       V.s_state = SEQ_STATE_TRIGGER;
  1759  00225C  0E03               	movlw	3
  1760  00225E  6F67               	movwf	_V& (0+255),b
  1761  002260                     l8339:
  1762                           
  1763                           ;main.c: 400:     if (V.r_l_state == LINK_STATE_ERROR)
  1764  002260  0E06               	movlw	6
  1765  002262  0100               	movlb	0	; () banked
  1766  002264  196A               	xorwf	(_V+3)& (0+255),w,b
  1767  002266  A4D8               	btfss	status,2,c
  1768  002268  D080               	goto	l8381
  1769  00226A                     u5210:
  1770                           
  1771                           ; BSR set to: 0
  1772                           ;main.c: 401:      V.s_state = SEQ_STATE_ERROR;
  1773  00226A  0E06               	movlw	6
  1774  00226C  6F67               	movwf	_V& (0+255),b
  1775  00226E  D07D               	goto	l8381
  1776  002270                     l8343:
  1777                           
  1778                           ; BSR set to: 0
  1779                           ;main.c: 407:     if (t_protocol(&V.t_l_state) == LINK_STATE_DONE) {
  1780  002270  0E67               	movlw	_V& (0+255)
  1781  002272  0F04               	addlw	4
  1782  002274  6EE6               	movwf	postinc1,c
  1783  002276  EC0D  F01F         	call	_t_protocol	;wreg free
  1784  00227A  0E04               	movlw	4
  1785  00227C  183B               	xorwf	btemp,w,c
  1786  00227E  A4D8               	btfss	status,2,c
  1787  002280  D003               	goto	l8347
  1788                           
  1789                           ;main.c: 408:      V.s_state = SEQ_STATE_TRIGGER;
  1790  002282  0E03               	movlw	3
  1791  002284  0100               	movlb	0	; () banked
  1792  002286  6F67               	movwf	_V& (0+255),b
  1793  002288                     l8347:
  1794                           
  1795                           ;main.c: 410:     if (V.t_l_state == LINK_STATE_ERROR)
  1796  002288  0E06               	movlw	6
  1797  00228A  0100               	movlb	0	; () banked
  1798  00228C  196B               	xorwf	(_V+4)& (0+255),w,b
  1799  00228E  B4D8               	btfsc	status,2,c
  1800  002290  D7EC               	goto	u5210
  1801  002292  D06B               	goto	l8381
  1802  002294                     l1241:
  1803                           
  1804                           ; BSR set to: 0
  1805                           ;main.c: 414:     if (V.queue) {
  1806  002294  A9BE               	btfss	(_V+87)& (0+255),4,b
  1807  002296  D01C               	goto	l8361
  1808                           
  1809                           ; BSR set to: 0
  1810  002298  A4BE               	btfss	16318,2,c	;volatile
  1811  00229A  D002               	goto	u5250
  1812  00229C  0E01               	movlw	1
  1813  00229E  D001               	goto	u5256
  1814  0022A0                     u5250:
  1815  0022A0  0E00               	movlw	0
  1816  0022A2                     u5256:
  1817  0022A2  0AFF               	xorlw	255
  1818  0022A4  6E46               	movwf	btemp+11,c
  1819  0022A6  4646               	rlncf	btemp+11,f,c
  1820  0022A8  4646               	rlncf	btemp+11,f,c
  1821  0022AA  50BE               	movf	16318,w,c	;volatile
  1822  0022AC  1846               	xorwf	btemp+11,w,c
  1823  0022AE  0BFB               	andlw	-5
  1824  0022B0  1846               	xorwf	btemp+11,w,c
  1825  0022B2  6EBE               	movwf	16318,c	;volatile
  1826                           
  1827                           ; BSR set to: 0
  1828                           ;main.c: 416:      V.r_l_state = LINK_STATE_IDLE;
  1829  0022B4  6B6A               	clrf	(_V+3)& (0+255),b
  1830                           
  1831                           ; BSR set to: 0
  1832                           ;main.c: 417:      V.t_l_state = LINK_STATE_IDLE;
  1833  0022B6  6B6B               	clrf	(_V+4)& (0+255),b
  1834                           
  1835                           ; BSR set to: 0
  1836                           ;main.c: 418:      V.s_state = SEQ_STATE_TX;
  1837  0022B8  0E02               	movlw	2
  1838  0022BA  6F67               	movwf	_V& (0+255),b
  1839                           
  1840                           ; BSR set to: 0
  1841                           ;main.c: 419:      sprintf(V.buf, " OKQ#");
  1842  0022BC  0EA1               	movlw	STR_7& (0+255)
  1843  0022BE  6EE6               	movwf	postinc1,c
  1844  0022C0  0E67               	movlw	_V& (0+255)
  1845  0022C2  0F05               	addlw	5
  1846  0022C4  6EE6               	movwf	postinc1,c
  1847  0022C6  0E02               	movlw	2
  1848  0022C8  6EE6               	movwf	postinc1,c
  1849  0022CA  ECD9  F026         	call	_sprintf	;wreg free
  1850                           
  1851                           ;main.c: 420:     } else {
  1852  0022CE  D00B               	goto	l8365
  1853  0022D0                     l8361:
  1854                           
  1855                           ; BSR set to: 0
  1856                           ;main.c: 421:      V.s_state = SEQ_STATE_DONE;
  1857  0022D0  0E05               	movlw	5
  1858  0022D2  6F67               	movwf	_V& (0+255),b
  1859                           
  1860                           ; BSR set to: 0
  1861                           ;main.c: 422:      sprintf(V.buf, " OK #");
  1862  0022D4  0E9B               	movlw	STR_8& (0+255)
  1863  0022D6  6EE6               	movwf	postinc1,c
  1864  0022D8  0E67               	movlw	_V& (0+255)
  1865  0022DA  0F05               	addlw	5
  1866  0022DC  6EE6               	movwf	postinc1,c
  1867  0022DE  0E02               	movlw	2
  1868  0022E0  6EE6               	movwf	postinc1,c
  1869  0022E2  ECD9  F026         	call	_sprintf	;wreg free
  1870  0022E6                     l8365:
  1871                           
  1872                           ; BSR set to: 0
  1873                           ;main.c: 424:     wait_lcd_done();
  1874  0022E6  EC03  F030         	call	_wait_lcd_done	;wreg free
  1875                           
  1876                           ; BSR set to: 0
  1877                           ;main.c: 425:     eaDogM_WriteStringAtPos(0, 11, V.buf);
  1878  0022EA  0E67               	movlw	_V& (0+255)
  1879  0022EC  0F05               	addlw	5
  1880  0022EE  6EE6               	movwf	postinc1,c
  1881  0022F0  0E0B               	movlw	11
  1882  0022F2  6EE6               	movwf	postinc1,c
  1883  0022F4  0E00               	movlw	0
  1884  0022F6  6EE6               	movwf	postinc1,c
  1885  0022F8  EC5D  F02D         	call	_eaDogM_WriteStringAtPos	;wreg free
  1886                           
  1887                           ;main.c: 426:     break;
  1888  0022FC  D036               	goto	l8381
  1889  0022FE                     l1246:
  1890                           
  1891                           ; BSR set to: 0
  1892                           ;main.c: 428:     V.s_state = SEQ_STATE_INIT;
  1893  0022FE  6B67               	clrf	_V& (0+255),b
  1894                           
  1895                           ;main.c: 429:     break;
  1896  002300  D034               	goto	l8381
  1897  002302                     l1248:
  1898                           
  1899                           ; BSR set to: 0
  1900                           ;main.c: 432:     V.s_state = SEQ_STATE_INIT;
  1901  002302  6B67               	clrf	_V& (0+255),b
  1902                           
  1903                           ; BSR set to: 0
  1904                           ;main.c: 433:     sprintf(V.buf, "E R%d T%d E%d A%d #", V.r_l_state, V.t_l_state, V.erro
      +                          r, V.abort);
  1905  002304  51B7               	movf	(_V+80)& (0+255),w,b
  1906  002306  6EE6               	movwf	postinc1,c
  1907  002308  0E00               	movlw	0
  1908  00230A  6EE6               	movwf	postinc1,c
  1909  00230C  51B6               	movf	(_V+79)& (0+255),w,b
  1910  00230E  6EE6               	movwf	postinc1,c
  1911  002310  0E00               	movlw	0
  1912  002312  6EE6               	movwf	postinc1,c
  1913  002314  516B               	movf	(_V+4)& (0+255),w,b
  1914  002316  6EE6               	movwf	postinc1,c
  1915  002318  0E00               	movlw	0
  1916  00231A  6EE6               	movwf	postinc1,c
  1917  00231C  516A               	movf	(_V+3)& (0+255),w,b
  1918  00231E  6EE6               	movwf	postinc1,c
  1919  002320  0E00               	movlw	0
  1920  002322  6EE6               	movwf	postinc1,c
  1921  002324  0E16               	movlw	STR_9& (0+255)
  1922  002326  6EE6               	movwf	postinc1,c
  1923  002328  0E67               	movlw	_V& (0+255)
  1924  00232A  0F05               	addlw	5
  1925  00232C  6EE6               	movwf	postinc1,c
  1926  00232E  0E0A               	movlw	10
  1927  002330  6EE6               	movwf	postinc1,c
  1928  002332  ECD9  F026         	call	_sprintf	;wreg free
  1929  002336  D755               	goto	l8315
  1930  002338                     l8379:
  1931                           
  1932                           ; BSR set to: 0
  1933  002338  5167               	movf	_V& (0+255),w,b
  1934  00233A  6E45               	movwf	btemp+10,c
  1935  00233C  6A46               	clrf	btemp+11,c
  1936                           
  1937                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1938                           ; Switch size 1, requested type "simple"
  1939                           ; Number of cases is 1, Range of values is 0 to 0
  1940                           ; switch strategies available:
  1941                           ; Name         Instructions Cycles
  1942                           ; simple_byte            4     3 (average)
  1943                           ;	Chosen strategy is simple_byte
  1944  00233E  5046               	movf	btemp+11,w,c
  1945  002340  0A00               	xorlw	0	; case 0
  1946  002342  A4D8               	btfss	status,2,c
  1947  002344  D7DE               	goto	l1248
  1948                           
  1949                           ; BSR set to: 0
  1950                           ; Switch size 1, requested type "simple"
  1951                           ; Number of cases is 6, Range of values is 0 to 6
  1952                           ; switch strategies available:
  1953                           ; Name         Instructions Cycles
  1954                           ; simple_byte           19    10 (average)
  1955                           ;	Chosen strategy is simple_byte
  1956  002346  5045               	movf	btemp+10,w,c
  1957  002348  0A00               	xorlw	0	; case 0
  1958  00234A  B4D8               	btfsc	status,2,c
  1959  00234C  D72B               	goto	l1230
  1960  00234E  0A01               	xorlw	1	; case 1
  1961  002350  B4D8               	btfsc	status,2,c
  1962  002352  D754               	goto	l8321
  1963  002354  0A03               	xorlw	3	; case 2
  1964  002356  B4D8               	btfsc	status,2,c
  1965  002358  D78B               	goto	l8343
  1966  00235A  0A01               	xorlw	1	; case 3
  1967  00235C  B4D8               	btfsc	status,2,c
  1968  00235E  D79A               	goto	l1241
  1969  002360  0A06               	xorlw	6	; case 5
  1970  002362  B4D8               	btfsc	status,2,c
  1971  002364  D7CC               	goto	l1246
  1972  002366  0A03               	xorlw	3	; case 6
  1973  002368  D7CC               	goto	l1248
  1974  00236A                     l8381:
  1975                           
  1976                           ;main.c: 439:    if (!V.error && !V.abort) {
  1977  00236A  0100               	movlb	0	; () banked
  1978  00236C  51B6               	movf	(_V+79)& (0+255),w,b
  1979  00236E  A4D8               	btfss	status,2,c
  1980  002370  D0D4               	goto	l1263
  1981                           
  1982                           ; BSR set to: 0
  1983  002372  51B7               	movf	(_V+80)& (0+255),w,b
  1984  002374  A4D8               	btfss	status,2,c
  1985  002376  D0D1               	goto	l1263
  1986                           
  1987                           ; BSR set to: 0
  1988                           ;main.c: 440:     sprintf(V.buf, " HOST MODE %ld   #", V.ticks);
  1989  002378  0060  F2B3  FFE6   	movff	_V+69,postinc1
  1990  00237E  0060  F2B7  FFE6   	movff	_V+70,postinc1
  1991  002384  0060  F2BB  FFE6   	movff	_V+71,postinc1
  1992  00238A  0060  F2BF  FFE6   	movff	_V+72,postinc1
  1993  002390  0E3D               	movlw	STR_5& (0+255)
  1994  002392  6EE6               	movwf	postinc1,c
  1995  002394  0E67               	movlw	_V& (0+255)
  1996  002396  0F05               	addlw	5
  1997  002398  6EE6               	movwf	postinc1,c
  1998  00239A  0E06               	movlw	6
  1999  00239C  6EE6               	movwf	postinc1,c
  2000  00239E  ECD9  F026         	call	_sprintf	;wreg free
  2001  0023A2                     l8387:
  2002                           
  2003                           ; BSR set to: 0
  2004                           ;main.c: 441:     V.buf[16] = 0;
  2005  0023A2  6B7C               	clrf	(_V+21)& (0+255),b
  2006                           
  2007                           ; BSR set to: 0
  2008                           ;main.c: 442:     wait_lcd_done();
  2009  0023A4  EC03  F030         	call	_wait_lcd_done	;wreg free
  2010                           
  2011                           ; BSR set to: 0
  2012                           ;main.c: 443:     eaDogM_WriteStringAtPos(2, 0, V.buf);
  2013  0023A8  0E67               	movlw	_V& (0+255)
  2014  0023AA  0F05               	addlw	5
  2015  0023AC  6EE6               	movwf	postinc1,c
  2016  0023AE  0E00               	movlw	0
  2017  0023B0  6EE6               	movwf	postinc1,c
  2018  0023B2  0E02               	movlw	2
  2019  0023B4  6EE6               	movwf	postinc1,c
  2020  0023B6  EC5D  F02D         	call	_eaDogM_WriteStringAtPos	;wreg free
  2021  0023BA  D0AF               	goto	l1263
  2022  0023BC                     l1252:
  2023                           
  2024                           ; BSR set to: 0
  2025                           ;main.c: 449:     V.m_l_state = LINK_STATE_IDLE;
  2026  0023BC  6B69               	clrf	(_V+2)& (0+255),b
  2027                           
  2028                           ; BSR set to: 0
  2029                           ;main.c: 450:     V.s_state = SEQ_STATE_RX;
  2030  0023BE  0E01               	movlw	1
  2031  0023C0  6F67               	movwf	_V& (0+255),b
  2032                           
  2033                           ; BSR set to: 0
  2034                           ;main.c: 451:     sprintf(V.buf, " LOG MODE %d     #", V.uart);
  2035  0023C2  51BF               	movf	(_V+88)& (0+255),w,b
  2036  0023C4  6EE6               	movwf	postinc1,c
  2037  0023C6  0E00               	movlw	0
  2038  0023C8  6EE6               	movwf	postinc1,c
  2039  0023CA  0E2A               	movlw	STR_11& (0+255)
  2040  0023CC  6EE6               	movwf	postinc1,c
  2041  0023CE  0E67               	movlw	_V& (0+255)
  2042  0023D0  0F05               	addlw	5
  2043  0023D2  6EE6               	movwf	postinc1,c
  2044  0023D4  0E04               	movlw	4
  2045  0023D6  6EE6               	movwf	postinc1,c
  2046  0023D8  ECD9  F026         	call	_sprintf	;wreg free
  2047                           
  2048                           ; BSR set to: 0
  2049                           ;main.c: 452:     V.buf[16] = 0;
  2050  0023DC  6B7C               	clrf	(_V+21)& (0+255),b
  2051                           
  2052                           ; BSR set to: 0
  2053                           ;main.c: 453:     wait_lcd_done();
  2054  0023DE  EC03  F030         	call	_wait_lcd_done	;wreg free
  2055                           
  2056                           ; BSR set to: 0
  2057                           ;main.c: 454:     eaDogM_WriteStringAtPos(2, 0, V.buf);
  2058  0023E2  0E67               	movlw	_V& (0+255)
  2059  0023E4  0F05               	addlw	5
  2060  0023E6  6EE6               	movwf	postinc1,c
  2061  0023E8  0E00               	movlw	0
  2062  0023EA  6EE6               	movwf	postinc1,c
  2063  0023EC  0E02               	movlw	2
  2064  0023EE  6EE6               	movwf	postinc1,c
  2065  0023F0  EC5D  F02D         	call	_eaDogM_WriteStringAtPos	;wreg free
  2066                           
  2067                           ;main.c: 463:     break;
  2068  0023F4  D06D               	goto	l8431
  2069  0023F6                     l8403:
  2070                           
  2071                           ; BSR set to: 0
  2072                           ;main.c: 468:     if (m_protocol(&V.m_l_state) == LINK_STATE_DONE) {
  2073  0023F6  0E67               	movlw	_V& (0+255)
  2074  0023F8  0F02               	addlw	2
  2075  0023FA  6EE6               	movwf	postinc1,c
  2076  0023FC  EC59  F017         	call	_m_protocol	;wreg free
  2077  002400  0E04               	movlw	4
  2078  002402  183B               	xorwf	btemp,w,c
  2079  002404  A4D8               	btfss	status,2,c
  2080  002406  D02D               	goto	l8415
  2081                           
  2082                           ;main.c: 469:      sprintf(V.buf, " S%dF%d #%ld    ", V.stream, V.function, V.ticks);
  2083  002408  0060  F2B3  FFE6   	movff	_V+69,postinc1
  2084  00240E  0060  F2B7  FFE6   	movff	_V+70,postinc1
  2085  002414  0060  F2BB  FFE6   	movff	_V+71,postinc1
  2086  00241A  0060  F2BF  FFE6   	movff	_V+72,postinc1
  2087  002420  0100               	movlb	0	; () banked
  2088  002422  51B5               	movf	(_V+78)& (0+255),w,b
  2089  002424  6EE6               	movwf	postinc1,c
  2090  002426  0E00               	movlw	0
  2091  002428  6EE6               	movwf	postinc1,c
  2092  00242A  51B4               	movf	(_V+77)& (0+255),w,b
  2093  00242C  6EE6               	movwf	postinc1,c
  2094  00242E  0E00               	movlw	0
  2095  002430  6EE6               	movwf	postinc1,c
  2096  002432  0E50               	movlw	STR_12& (0+255)
  2097  002434  6EE6               	movwf	postinc1,c
  2098  002436  0E67               	movlw	_V& (0+255)
  2099  002438  0F05               	addlw	5
  2100  00243A  6EE6               	movwf	postinc1,c
  2101  00243C  0E0A               	movlw	10
  2102  00243E  6EE6               	movwf	postinc1,c
  2103  002440  ECD9  F026         	call	_sprintf	;wreg free
  2104                           
  2105                           ; BSR set to: 0
  2106                           ;main.c: 470:      V.buf[11] = 0;
  2107  002444  6B77               	clrf	(_V+16)& (0+255),b
  2108                           
  2109                           ; BSR set to: 0
  2110                           ;main.c: 471:      wait_lcd_done();
  2111  002446  EC03  F030         	call	_wait_lcd_done	;wreg free
  2112                           
  2113                           ; BSR set to: 0
  2114                           ;main.c: 472:      eaDogM_WriteStringAtPos(V.uart - 1, 0, V.buf);
  2115  00244A  0E67               	movlw	_V& (0+255)
  2116  00244C  0F05               	addlw	5
  2117  00244E  6EE6               	movwf	postinc1,c
  2118  002450  0E00               	movlw	0
  2119  002452  6EE6               	movwf	postinc1,c
  2120  002454  05BF               	decf	(_V+88)& (0+255),w,b
  2121  002456  6EE6               	movwf	postinc1,c
  2122  002458  EC5D  F02D         	call	_eaDogM_WriteStringAtPos	;wreg free
  2123                           
  2124                           ; BSR set to: 59
  2125                           ;main.c: 473:      V.s_state = SEQ_STATE_TRIGGER;
  2126  00245C  0E03               	movlw	3
  2127  00245E  0100               	movlb	0	; () banked
  2128  002460  6F67               	movwf	_V& (0+255),b
  2129  002462                     l8415:
  2130                           
  2131                           ;main.c: 475:     if (V.m_l_state == LINK_STATE_ERROR)
  2132  002462  0E06               	movlw	6
  2133  002464  0100               	movlb	0	; () banked
  2134  002466  1969               	xorwf	(_V+2)& (0+255),w,b
  2135  002468  A4D8               	btfss	status,2,c
  2136  00246A  D032               	goto	l8431
  2137                           
  2138                           ; BSR set to: 0
  2139                           ;main.c: 476:      V.s_state = SEQ_STATE_ERROR;
  2140  00246C  0E06               	movlw	6
  2141  00246E  6F67               	movwf	_V& (0+255),b
  2142  002470  D02F               	goto	l8431
  2143  002472                     l8419:
  2144                           
  2145                           ; BSR set to: 0
  2146                           ;main.c: 479:     V.s_state = SEQ_STATE_DONE;
  2147  002472  0E05               	movlw	5
  2148  002474  6F67               	movwf	_V& (0+255),b
  2149                           
  2150                           ; BSR set to: 0
  2151                           ;main.c: 480:     sprintf(V.buf, " OK #");
  2152  002476  0E9B               	movlw	STR_8& (0+255)
  2153  002478  6EE6               	movwf	postinc1,c
  2154  00247A  0E67               	movlw	_V& (0+255)
  2155  00247C  0F05               	addlw	5
  2156  00247E  6EE6               	movwf	postinc1,c
  2157  002480  0E02               	movlw	2
  2158  002482  6EE6               	movwf	postinc1,c
  2159  002484  ECD9  F026         	call	_sprintf	;wreg free
  2160                           
  2161                           ; BSR set to: 0
  2162                           ;main.c: 481:     wait_lcd_done();
  2163  002488  EC03  F030         	call	_wait_lcd_done	;wreg free
  2164                           
  2165                           ; BSR set to: 0
  2166                           ;main.c: 482:     eaDogM_WriteStringAtPos(V.uart - 1, 11, V.buf);
  2167  00248C  0E67               	movlw	_V& (0+255)
  2168  00248E  0F05               	addlw	5
  2169  002490  6EE6               	movwf	postinc1,c
  2170  002492  0E0B               	movlw	11
  2171  002494  6EE6               	movwf	postinc1,c
  2172  002496  05BF               	decf	(_V+88)& (0+255),w,b
  2173  002498  6EE6               	movwf	postinc1,c
  2174  00249A  EC5D  F02D         	call	_eaDogM_WriteStringAtPos	;wreg free
  2175                           
  2176                           ;main.c: 483:     break;
  2177  00249E  D018               	goto	l8431
  2178  0024A0                     l1258:
  2179                           
  2180                           ; BSR set to: 0
  2181                           ;main.c: 485:     V.s_state = SEQ_STATE_INIT;
  2182  0024A0  6B67               	clrf	_V& (0+255),b
  2183                           
  2184                           ;main.c: 486:     break;
  2185  0024A2  D016               	goto	l8431
  2186  0024A4                     l8429:
  2187                           
  2188                           ; BSR set to: 0
  2189  0024A4  5167               	movf	_V& (0+255),w,b
  2190  0024A6  6E45               	movwf	btemp+10,c
  2191  0024A8  6A46               	clrf	btemp+11,c
  2192                           
  2193                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2194                           ; Switch size 1, requested type "simple"
  2195                           ; Number of cases is 1, Range of values is 0 to 0
  2196                           ; switch strategies available:
  2197                           ; Name         Instructions Cycles
  2198                           ; simple_byte            4     3 (average)
  2199                           ;	Chosen strategy is simple_byte
  2200  0024AA  5046               	movf	btemp+11,w,c
  2201  0024AC  0A00               	xorlw	0	; case 0
  2202  0024AE  A4D8               	btfss	status,2,c
  2203  0024B0  D7F7               	goto	l1258
  2204                           
  2205                           ; BSR set to: 0
  2206                           ; Switch size 1, requested type "simple"
  2207                           ; Number of cases is 5, Range of values is 0 to 6
  2208                           ; switch strategies available:
  2209                           ; Name         Instructions Cycles
  2210                           ; simple_byte           16     9 (average)
  2211                           ;	Chosen strategy is simple_byte
  2212  0024B2  5045               	movf	btemp+10,w,c
  2213  0024B4  0A00               	xorlw	0	; case 0
  2214  0024B6  B4D8               	btfsc	status,2,c
  2215  0024B8  D781               	goto	l1252
  2216  0024BA  0A01               	xorlw	1	; case 1
  2217  0024BC  B4D8               	btfsc	status,2,c
  2218  0024BE  D79B               	goto	l8403
  2219  0024C0  0A02               	xorlw	2	; case 3
  2220  0024C2  B4D8               	btfsc	status,2,c
  2221  0024C4  D7D6               	goto	l8419
  2222  0024C6  0A06               	xorlw	6	; case 5
  2223  0024C8  B4D8               	btfsc	status,2,c
  2224  0024CA  D7EA               	goto	l1258
  2225  0024CC  0A03               	xorlw	3	; case 6
  2226  0024CE  D7E8               	goto	l1258
  2227  0024D0                     l8431:
  2228                           
  2229                           ;main.c: 492:    sprintf(V.buf, " LOG MODE %d     #", V.uart);
  2230  0024D0  0100               	movlb	0	; () banked
  2231  0024D2  51BF               	movf	(_V+88)& (0+255),w,b
  2232  0024D4  6EE6               	movwf	postinc1,c
  2233  0024D6  0E00               	movlw	0
  2234  0024D8  6EE6               	movwf	postinc1,c
  2235  0024DA  0E2A               	movlw	STR_11& (0+255)
  2236  0024DC  6EE6               	movwf	postinc1,c
  2237  0024DE  0E67               	movlw	_V& (0+255)
  2238  0024E0  0F05               	addlw	5
  2239  0024E2  6EE6               	movwf	postinc1,c
  2240  0024E4  0E04               	movlw	4
  2241  0024E6  6EE6               	movwf	postinc1,c
  2242  0024E8  ECD9  F026         	call	_sprintf	;wreg free
  2243  0024EC  D75A               	goto	l8387
  2244  0024EE                     l1262:
  2245                           
  2246                           ; BSR set to: 0
  2247                           ;main.c: 499:    V.ui_state = UI_STATE_INIT;
  2248  0024EE  6B68               	clrf	(_V+1)& (0+255),b
  2249                           
  2250                           ;main.c: 500:    break;
  2251  0024F0  D014               	goto	l1263
  2252  0024F2                     l8441:
  2253  0024F2  0100               	movlb	0	; () banked
  2254  0024F4  5168               	movf	(_V+1)& (0+255),w,b
  2255  0024F6  6E45               	movwf	btemp+10,c
  2256  0024F8  6A46               	clrf	btemp+11,c
  2257                           
  2258                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2259                           ; Switch size 1, requested type "simple"
  2260                           ; Number of cases is 1, Range of values is 0 to 0
  2261                           ; switch strategies available:
  2262                           ; Name         Instructions Cycles
  2263                           ; simple_byte            4     3 (average)
  2264                           ;	Chosen strategy is simple_byte
  2265  0024FA  5046               	movf	btemp+11,w,c
  2266  0024FC  0A00               	xorlw	0	; case 0
  2267  0024FE  A4D8               	btfss	status,2,c
  2268  002500  D7F6               	goto	l1262
  2269                           
  2270                           ; BSR set to: 0
  2271                           ; Switch size 1, requested type "simple"
  2272                           ; Number of cases is 4, Range of values is 0 to 4
  2273                           ; switch strategies available:
  2274                           ; Name         Instructions Cycles
  2275                           ; simple_byte           13     7 (average)
  2276                           ;	Chosen strategy is simple_byte
  2277  002502  5045               	movf	btemp+10,w,c
  2278  002504  0A00               	xorlw	0	; case 0
  2279  002506  B4D8               	btfsc	status,2,c
  2280  002508  D5F8               	goto	l8281
  2281  00250A  0A01               	xorlw	1	; case 1
  2282  00250C  B4D8               	btfsc	status,2,c
  2283  00250E  D714               	goto	l8379
  2284  002510  0A02               	xorlw	2	; case 3
  2285  002512  B4D8               	btfsc	status,2,c
  2286  002514  D7C7               	goto	l8429
  2287  002516  0A07               	xorlw	7	; case 4
  2288  002518  D7EA               	goto	l1262
  2289  00251A                     l1263:
  2290  00251A  82BE               	bsf	16318,1,c	;volatile
  2291                           
  2292                           ;main.c: 503:   sprintf(V.buf, " R%d T%d FR%d FS%d #", V.r_l_state, V.t_l_state, V.faile
      +                          d_receive, V.failed_send);
  2293  00251C  0100               	movlb	0	; () banked
  2294  00251E  31BD               	rrcf	(_V+86)& (0+255),w,b
  2295  002520  32E8               	rrcf	wreg,f,c
  2296  002522  32E8               	rrcf	wreg,f,c
  2297  002524  0B0F               	andlw	15
  2298  002526  6EE6               	movwf	postinc1,c
  2299  002528  0E00               	movlw	0
  2300  00252A  6EE6               	movwf	postinc1,c
  2301  00252C  51BE               	movf	(_V+87)& (0+255),w,b
  2302  00252E  0B0F               	andlw	15
  2303  002530  6EE6               	movwf	postinc1,c
  2304  002532  0E00               	movlw	0
  2305  002534  6EE6               	movwf	postinc1,c
  2306  002536  516B               	movf	(_V+4)& (0+255),w,b
  2307  002538  6EE6               	movwf	postinc1,c
  2308  00253A  0E00               	movlw	0
  2309  00253C  6EE6               	movwf	postinc1,c
  2310  00253E  516A               	movf	(_V+3)& (0+255),w,b
  2311  002540  6EE6               	movwf	postinc1,c
  2312  002542  0E00               	movlw	0
  2313  002544  6EE6               	movwf	postinc1,c
  2314  002546  0E01               	movlw	STR_15& (0+255)
  2315  002548  6EE6               	movwf	postinc1,c
  2316  00254A  0E67               	movlw	_V& (0+255)
  2317  00254C  0F05               	addlw	5
  2318  00254E  6EE6               	movwf	postinc1,c
  2319  002550  0E0A               	movlw	10
  2320  002552  6EE6               	movwf	postinc1,c
  2321  002554  ECD9  F026         	call	_sprintf	;wreg free
  2322                           
  2323                           ; BSR set to: 0
  2324                           ;main.c: 504:   V.buf[16] = 0;
  2325  002558  6B7C               	clrf	(_V+21)& (0+255),b
  2326                           
  2327                           ; BSR set to: 0
  2328                           ;main.c: 505:   wait_lcd_done();
  2329  00255A  EC03  F030         	call	_wait_lcd_done	;wreg free
  2330                           
  2331                           ; BSR set to: 0
  2332                           ;main.c: 506:   if (mode != UI_STATE_LOG)
  2333                           ;stkvar	_mode @ sp[(-1)+0]
  2334  00255E  0EFF               	movlw	-1
  2335  002560  006F FF8C  F03B    	movff	plusw1,btemp
  2336  002566  0E03               	movlw	3
  2337  002568  183B               	xorwf	btemp,w,c
  2338  00256A  B4D8               	btfsc	status,2,c
  2339  00256C  D009               	goto	l8453
  2340                           
  2341                           ; BSR set to: 0
  2342                           ;main.c: 507:    eaDogM_WriteStringAtPos(1, 0, V.buf);
  2343  00256E  0E67               	movlw	_V& (0+255)
  2344  002570  0F05               	addlw	5
  2345  002572  6EE6               	movwf	postinc1,c
  2346  002574  0E00               	movlw	0
  2347  002576  6EE6               	movwf	postinc1,c
  2348  002578  0E01               	movlw	1
  2349  00257A  6EE6               	movwf	postinc1,c
  2350  00257C  EC5D  F02D         	call	_eaDogM_WriteStringAtPos	;wreg free
  2351  002580                     l8453:
  2352  002580  92BE               	bcf	16318,1,c	;volatile
  2353  002582  D7B7               	goto	l8441
  2354  002584                     __end_of_main:
  2355                           	opt callstack 0
  2356                           
  2357 ;; *************** function _t_protocol *****************
  2358 ;; Defined at:
  2359 ;;		line 302 in file "gemsecs.c"
  2360 ;; Parameters:    Size  Location     Type
  2361 ;;  t_link          1  [STACK] PTR enum E16164
  2362 ;;		 -> V(89), 
  2363 ;; Auto vars:     Size  Location     Type
  2364 ;;  rxData          1  [STACK] unsigned char 
  2365 ;; Return value:  Size  Location     Type
  2366 ;;                  1  [STACK] enum E16904
  2367 ;; Registers used:
  2368 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  2369 ;; Tracked objects:
  2370 ;;		On entry : 0/0
  2371 ;;		On exit  : 0/0
  2372 ;;		Unchanged: 0/0
  2373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2374 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2375 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2376 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2377 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2378 ;;Total ram usage:        0 bytes
  2379 ;; Hardware stack levels used:    1
  2380 ;; Hardware stack levels required when called:    5
  2381 ;; This function calls:
  2382 ;;		_StartTimer
  2383 ;;		_TimerDone
  2384 ;;		_UART1_Read
  2385 ;;		_UART1_Write
  2386 ;;		_UART1_is_rx_ready
  2387 ;;		_UART1_put_buffer
  2388 ;;		_secs_II_message
  2389 ;;		_secs_send
  2390 ;; This function is called by:
  2391 ;;		_main
  2392 ;; This function uses a reentrant model
  2393 ;;
  2394                           
  2395                           	psect	text1
  2396  003E1A                     __ptext1:
  2397                           	opt callstack 0
  2398  003E1A                     _t_protocol:
  2399                           	opt callstack 0
  2400                           
  2401                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2402  003E1A  52E6               	movf	postinc1,f,c
  2403                           
  2404                           ;gemsecs.c: 302: LINK_STATES t_protocol(LINK_STATES * t_link);gemsecs.c: 303: {;gemsecs.
      +                          c: 304:  uint8_t rxData;;gemsecs.c: 305:  static uint8_t retry, requeue = 0;;gemsecs.c: 
      +                          306:  static response_type block;;gemsecs.c: 308:  switch (*t_link) {
  2405                           
  2406                           ;incstack = 0
  2407  003E1C  D10D               	goto	l8247
  2408  003E1E                     l1634:
  2409                           
  2410                           ;gemsecs.c: 310:   V.error = LINK_ERROR_NONE;
  2411  003E1E  0100               	movlb	0	; () banked
  2412  003E20  6BB6               	clrf	(_V+79)& (0+255),b
  2413                           
  2414                           ; BSR set to: 0
  2415                           ;gemsecs.c: 311:   retry = 3;
  2416  003E22  0E03               	movlw	3
  2417  003E24  6E2B               	movwf	t_protocol@retry,c
  2418                           
  2419                           ; BSR set to: 0
  2420                           ;gemsecs.c: 312:   UART1_Write(0x05);
  2421  003E26  0E05               	movlw	5
  2422  003E28  6EE6               	movwf	postinc1,c
  2423  003E2A  EC91  F02C         	call	_UART1_Write	;wreg free
  2424                           
  2425                           ; BSR set to: 57
  2426                           ;gemsecs.c: 313:   StartTimer(TMR_T2, 2000);
  2427  003E2E  0ED0               	movlw	208
  2428  003E30  6EE6               	movwf	postinc1,c
  2429  003E32  0E07               	movlw	7
  2430  003E34  6EE6               	movwf	postinc1,c
  2431  003E36  0E02               	movlw	2
  2432  003E38  6EE6               	movwf	postinc1,c
  2433  003E3A  EC0D  F02D         	call	_StartTimer	;wreg free
  2434                           
  2435                           ;gemsecs.c: 314:   *t_link = LINK_STATE_ENQ;
  2436                           ;stkvar	_t_link @ sp[(-1)+-1]
  2437  003E3E  0EFE               	movlw	-2
  2438  003E40  50E3               	movf	plusw1,w,c
  2439  003E42  6ED9               	movwf	fsr2l,c
  2440  003E44  6ADA               	clrf	fsr2h,c
  2441  003E46  0E01               	movlw	1
  2442  003E48  D0F5               	goto	L5
  2443  003E4A                     l8163:
  2444                           
  2445                           ;gemsecs.c: 321:   if (TimerDone(TMR_T2)) {
  2446  003E4A  0E02               	movlw	2
  2447  003E4C  6EE6               	movwf	postinc1,c
  2448  003E4E  EC7F  F02F         	call	_TimerDone	;wreg free
  2449  003E52  503B               	movf	btemp,w,c
  2450  003E54  B4D8               	btfsc	status,2,c
  2451  003E56  D01A               	goto	l8173
  2452                           
  2453                           ;gemsecs.c: 322:    if (!retry--) {
  2454  003E58  062B               	decf	t_protocol@retry,f,c
  2455  003E5A  282B               	incf	t_protocol@retry,w,c
  2456  003E5C  A4D8               	btfss	status,2,c
  2457  003E5E  D00D               	goto	l8171
  2458                           
  2459                           ;gemsecs.c: 323:     V.error = LINK_ERROR_T2;
  2460  003E60  0E02               	movlw	2
  2461  003E62  0100               	movlb	0	; () banked
  2462  003E64  6FB6               	movwf	(_V+79)& (0+255),b
  2463                           
  2464                           ;gemsecs.c: 324:     V.failed_send = 1;
  2465  003E66  51BD               	movf	(_V+86)& (0+255),w,b
  2466  003E68  0B87               	andlw	-121
  2467  003E6A  0908               	iorlw	8
  2468  003E6C  6FBD               	movwf	(_V+86)& (0+255),b
  2469                           
  2470                           ; BSR set to: 0
  2471                           ;gemsecs.c: 325:     *t_link = LINK_STATE_NAK;
  2472                           ;stkvar	_t_link @ sp[(-1)+-1]
  2473  003E6E  0EFE               	movlw	-2
  2474  003E70  50E3               	movf	plusw1,w,c
  2475  003E72  6ED9               	movwf	fsr2l,c
  2476  003E74  6ADA               	clrf	fsr2h,c
  2477  003E76  0E05               	movlw	5
  2478  003E78  D0DD               	goto	L5
  2479  003E7A                     l8171:
  2480                           
  2481                           ;gemsecs.c: 327:     StartTimer(TMR_T2, 2000);
  2482  003E7A  0ED0               	movlw	208
  2483  003E7C  6EE6               	movwf	postinc1,c
  2484  003E7E  0E07               	movlw	7
  2485  003E80  6EE6               	movwf	postinc1,c
  2486  003E82  0E02               	movlw	2
  2487  003E84  6EE6               	movwf	postinc1,c
  2488  003E86  EC0D  F02D         	call	_StartTimer	;wreg free
  2489  003E8A  D0F7               	goto	l8249
  2490  003E8C                     l8173:
  2491                           
  2492                           ;gemsecs.c: 330:    if (UART1_is_rx_ready()) {
  2493  003E8C  ECBD  F030         	call	_UART1_is_rx_ready	;wreg free
  2494  003E90  503B               	movf	btemp,w,c
  2495  003E92  B4D8               	btfsc	status,2,c
  2496  003E94  D0F2               	goto	l8249
  2497                           
  2498                           ;gemsecs.c: 331:     rxData = UART1_Read();
  2499  003E96  ECCF  F02C         	call	_UART1_Read	;wreg free
  2500                           
  2501                           ;stkvar	_rxData @ sp[(-1)+0]
  2502  003E9A  0EFF               	movlw	-1
  2503  003E9C  0060  F0EF  FFE3   	movff	btemp,plusw1
  2504                           
  2505                           ; BSR set to: 57
  2506                           ;gemsecs.c: 332:     if (rxData == 0x04) {
  2507                           ;stkvar	_rxData @ sp[(-1)+0]
  2508  003EA2  0EFF               	movlw	-1
  2509  003EA4  006F FF8C  F03B    	movff	plusw1,btemp
  2510  003EAA  0E04               	movlw	4
  2511  003EAC  183B               	xorwf	btemp,w,c
  2512  003EAE  A4D8               	btfss	status,2,c
  2513  003EB0  D00E               	goto	l8183
  2514                           
  2515                           ; BSR set to: 57
  2516                           ;gemsecs.c: 333:      StartTimer(TMR_T3, 5000);
  2517  003EB2  0E88               	movlw	136
  2518  003EB4  6EE6               	movwf	postinc1,c
  2519  003EB6  0E13               	movlw	19
  2520  003EB8  6EE6               	movwf	postinc1,c
  2521  003EBA  0E03               	movlw	3
  2522  003EBC  6EE6               	movwf	postinc1,c
  2523  003EBE  EC0D  F02D         	call	_StartTimer	;wreg free
  2524                           
  2525                           ;gemsecs.c: 334:      *t_link = LINK_STATE_EOT;
  2526                           ;stkvar	_t_link @ sp[(-1)+-1]
  2527  003EC2  0EFE               	movlw	-2
  2528  003EC4  50E3               	movf	plusw1,w,c
  2529  003EC6  6ED9               	movwf	fsr2l,c
  2530  003EC8  6ADA               	clrf	fsr2h,c
  2531  003ECA  0E02               	movlw	2
  2532  003ECC  6EDF               	movwf	indf2,c
  2533  003ECE                     l8183:
  2534                           
  2535                           ;gemsecs.c: 336:     if (rxData == 0x05) {
  2536                           ;stkvar	_rxData @ sp[(-1)+0]
  2537  003ECE  0EFF               	movlw	-1
  2538  003ED0  006F FF8C  F03B    	movff	plusw1,btemp
  2539  003ED6  0E05               	movlw	5
  2540  003ED8  183B               	xorwf	btemp,w,c
  2541  003EDA  A4D8               	btfss	status,2,c
  2542  003EDC  D0CE               	goto	l8249
  2543                           
  2544                           ;gemsecs.c: 337:      UART1_put_buffer(0x04);
  2545  003EDE  0E04               	movlw	4
  2546  003EE0  6EE6               	movwf	postinc1,c
  2547  003EE2  ECB4  F02D         	call	_UART1_put_buffer	;wreg free
  2548  003EE6                     l8187:
  2549                           
  2550                           ;gemsecs.c: 338:      *t_link = LINK_STATE_DONE;
  2551                           ;stkvar	_t_link @ sp[(-1)+-1]
  2552  003EE6  0EFE               	movlw	-2
  2553  003EE8  50E3               	movf	plusw1,w,c
  2554  003EEA  6ED9               	movwf	fsr2l,c
  2555  003EEC  6ADA               	clrf	fsr2h,c
  2556  003EEE  0E04               	movlw	4
  2557  003EF0  D0A1               	goto	L5
  2558  003EF2                     l8189:
  2559                           
  2560                           ;gemsecs.c: 344:   if (!requeue)
  2561  003EF2  502A               	movf	t_protocol@requeue,w,c
  2562  003EF4  A4D8               	btfss	status,2,c
  2563  003EF6  D010               	goto	l8193
  2564                           
  2565                           ;gemsecs.c: 345:    block = secs_II_message(V.stream, V.function);
  2566  003EF8  0100               	movlb	0	; () banked
  2567  003EFA  51B5               	movf	(_V+78)& (0+255),w,b
  2568  003EFC  6EE6               	movwf	postinc1,c
  2569  003EFE  51B4               	movf	(_V+77)& (0+255),w,b
  2570  003F00  6EE6               	movwf	postinc1,c
  2571  003F02  EC7A  F021         	call	_secs_II_message	;wreg free
  2572  003F06  EE20  F0E5         	lfsr	2,t_protocol@block
  2573  003F0A  0E06               	movlw	6
  2574  003F0C                     u5061:
  2575  003F0C  52E5               	movf	postdec1,f,c
  2576  003F0E  006F FF9F FFDB     	movff	indf1,plusw2
  2577  003F14  06E8               	decf	wreg,f,c
  2578  003F16  E2FA               	bc	u5061
  2579  003F18                     l8193:
  2580                           
  2581                           ;gemsecs.c: 347:   if (V.abort == LINK_ERROR_ABORT) {
  2582  003F18  0E07               	movlw	7
  2583  003F1A  0100               	movlb	0	; () banked
  2584  003F1C  19B7               	xorwf	(_V+80)& (0+255),w,b
  2585  003F1E  A4D8               	btfss	status,2,c
  2586  003F20  D019               	goto	l8201
  2587                           
  2588                           ; BSR set to: 0
  2589                           ;gemsecs.c: 348:    secs_send((uint8_t*) block.header, block.length, 0, 1);
  2590  003F22  0E01               	movlw	1
  2591  003F24  6EE6               	movwf	postinc1,c
  2592  003F26  0E00               	movlw	0
  2593  003F28  6EE6               	movwf	postinc1,c
  2594  003F2A  51E7               	movf	(t_protocol@block+2)& (0+255),w,b
  2595  003F2C  6EE6               	movwf	postinc1,c
  2596  003F2E  0060  F397  FFE6   	movff	t_protocol@block,postinc1
  2597  003F34  0060  F39B  FFE6   	movff	t_protocol@block+1,postinc1
  2598  003F3A  EC46  F020         	call	_secs_send	;wreg free
  2599                           
  2600                           ;gemsecs.c: 349:    V.failed_send = 2;
  2601  003F3E  0100               	movlb	0	; () banked
  2602  003F40  51BD               	movf	(_V+86)& (0+255),w,b
  2603  003F42  0B87               	andlw	-121
  2604  003F44  0910               	iorlw	16
  2605  003F46  6FBD               	movwf	(_V+86)& (0+255),b
  2606                           
  2607                           ; BSR set to: 0
  2608                           ;gemsecs.c: 350:    *t_link = LINK_STATE_ERROR;
  2609                           ;stkvar	_t_link @ sp[(-1)+-1]
  2610  003F48  0EFE               	movlw	-2
  2611  003F4A  50E3               	movf	plusw1,w,c
  2612  003F4C  6ED9               	movwf	fsr2l,c
  2613  003F4E  6ADA               	clrf	fsr2h,c
  2614  003F50  0E06               	movlw	6
  2615  003F52  D070               	goto	L5
  2616  003F54                     l8201:
  2617                           
  2618                           ; BSR set to: 0
  2619                           ;gemsecs.c: 352:    if (!requeue) {
  2620  003F54  502A               	movf	t_protocol@requeue,w,c
  2621  003F56  A4D8               	btfss	status,2,c
  2622  003F58  D014               	goto	l1648
  2623                           
  2624                           ; BSR set to: 0
  2625                           ;gemsecs.c: 353:     secs_send((uint8_t*) block.header, block.length, 0, 1);
  2626  003F5A  0E01               	movlw	1
  2627  003F5C  6EE6               	movwf	postinc1,c
  2628  003F5E  0E00               	movlw	0
  2629  003F60  6EE6               	movwf	postinc1,c
  2630  003F62  51E7               	movf	(t_protocol@block+2)& (0+255),w,b
  2631  003F64  6EE6               	movwf	postinc1,c
  2632  003F66  0060  F397  FFE6   	movff	t_protocol@block,postinc1
  2633  003F6C  0060  F39B  FFE6   	movff	t_protocol@block+1,postinc1
  2634  003F72  EC46  F020         	call	_secs_send	;wreg free
  2635                           
  2636                           ;gemsecs.c: 354:     if (V.queue)
  2637  003F76  0100               	movlb	0	; () banked
  2638  003F78  A9BE               	btfss	(_V+87)& (0+255),4,b
  2639  003F7A  D013               	goto	l8211
  2640                           
  2641                           ; BSR set to: 0
  2642                           ;gemsecs.c: 355:      requeue = 1;
  2643  003F7C  0E01               	movlw	1
  2644  003F7E  6E2A               	movwf	t_protocol@requeue,c
  2645  003F80  D010               	goto	l8211
  2646  003F82                     l1648:
  2647                           
  2648                           ; BSR set to: 0
  2649                           ;gemsecs.c: 357:     requeue = 0;
  2650  003F82  6A2A               	clrf	t_protocol@requeue,c
  2651                           
  2652                           ;gemsecs.c: 358:     V.queue = 0;
  2653  003F84  99BE               	bcf	(_V+87)& (0+255),4,b
  2654                           
  2655                           ; BSR set to: 0
  2656                           ;gemsecs.c: 359:     secs_send((uint8_t*) block.reply, block.reply_length, 0, 1);
  2657  003F86  0E01               	movlw	1
  2658  003F88  6EE6               	movwf	postinc1,c
  2659  003F8A  0E00               	movlw	0
  2660  003F8C  6EE6               	movwf	postinc1,c
  2661  003F8E  51EA               	movf	(t_protocol@block+5)& (0+255),w,b
  2662  003F90  6EE6               	movwf	postinc1,c
  2663  003F92  0060  F3A3  FFE6   	movff	t_protocol@block+3,postinc1
  2664  003F98  0060  F3A7  FFE6   	movff	t_protocol@block+4,postinc1
  2665  003F9E  EC46  F020         	call	_secs_send	;wreg free
  2666  003FA2                     l8211:
  2667                           
  2668                           ;gemsecs.c: 361:    if (V.error == LINK_ERROR_NONE) {
  2669  003FA2  0100               	movlb	0	; () banked
  2670  003FA4  51B6               	movf	(_V+79)& (0+255),w,b
  2671  003FA6  A4D8               	btfss	status,2,c
  2672  003FA8  D006               	goto	l8215
  2673                           
  2674                           ; BSR set to: 0
  2675                           ;gemsecs.c: 362:     *t_link = LINK_STATE_ACK;
  2676                           ;stkvar	_t_link @ sp[(-1)+-1]
  2677  003FAA  0EFE               	movlw	-2
  2678  003FAC  50E3               	movf	plusw1,w,c
  2679  003FAE  6ED9               	movwf	fsr2l,c
  2680  003FB0  6ADA               	clrf	fsr2h,c
  2681  003FB2  0E03               	movlw	3
  2682  003FB4  D03F               	goto	L5
  2683  003FB6                     l8215:
  2684                           
  2685                           ; BSR set to: 0
  2686                           ;gemsecs.c: 364:     V.failed_send = 3;
  2687  003FB6  51BD               	movf	(_V+86)& (0+255),w,b
  2688  003FB8  0B87               	andlw	-121
  2689  003FBA  0918               	iorlw	24
  2690  003FBC  D7C4               	goto	L6
  2691  003FBE                     l8219:
  2692                           
  2693                           ;gemsecs.c: 374:   if (TimerDone(TMR_T3)) {
  2694  003FBE  0E03               	movlw	3
  2695  003FC0  6EE6               	movwf	postinc1,c
  2696  003FC2  EC7F  F02F         	call	_TimerDone	;wreg free
  2697  003FC6  503B               	movf	btemp,w,c
  2698  003FC8  B4D8               	btfsc	status,2,c
  2699  003FCA  D007               	goto	l8225
  2700                           
  2701                           ;gemsecs.c: 375:    V.error = LINK_ERROR_T3;
  2702  003FCC  0E03               	movlw	3
  2703  003FCE  0100               	movlb	0	; () banked
  2704  003FD0  6FB6               	movwf	(_V+79)& (0+255),b
  2705                           
  2706                           ;gemsecs.c: 376:    V.failed_send = 4;
  2707  003FD2  51BD               	movf	(_V+86)& (0+255),w,b
  2708  003FD4  0B87               	andlw	-121
  2709  003FD6  0920               	iorlw	32
  2710  003FD8  D749               	goto	L7
  2711  003FDA                     l8225:
  2712                           
  2713                           ;gemsecs.c: 379:    if (UART1_is_rx_ready()) {
  2714  003FDA  ECBD  F030         	call	_UART1_is_rx_ready	;wreg free
  2715  003FDE  503B               	movf	btemp,w,c
  2716  003FE0  B4D8               	btfsc	status,2,c
  2717  003FE2  D04B               	goto	l8249
  2718                           
  2719                           ;gemsecs.c: 380:     rxData = UART1_Read();
  2720  003FE4  ECCF  F02C         	call	_UART1_Read	;wreg free
  2721                           
  2722                           ;stkvar	_rxData @ sp[(-1)+0]
  2723  003FE8  0EFF               	movlw	-1
  2724  003FEA  0060  F0EF  FFE3   	movff	btemp,plusw1
  2725                           
  2726                           ; BSR set to: 57
  2727                           ;gemsecs.c: 381:     if (rxData == 0x06) {
  2728                           ;stkvar	_rxData @ sp[(-1)+0]
  2729  003FF0  0EFF               	movlw	-1
  2730  003FF2  006F FF8C  F03B    	movff	plusw1,btemp
  2731  003FF8  0E06               	movlw	6
  2732  003FFA  183B               	xorwf	btemp,w,c
  2733  003FFC  A4D8               	btfss	status,2,c
  2734  003FFE  D03D               	goto	l8249
  2735                           
  2736                           ; BSR set to: 57
  2737                           ;gemsecs.c: 382:      V.failed_send = 0;
  2738  004000  0E87               	movlw	-121
  2739  004002  0100               	movlb	0	; () banked
  2740  004004  17BD               	andwf	(_V+86)& (0+255),f,b
  2741  004006  D76F               	goto	l8187
  2742  004008                     l8235:
  2743                           
  2744                           ;gemsecs.c: 389:   *t_link = LINK_STATE_ERROR;
  2745                           ;stkvar	_t_link @ sp[(-1)+-1]
  2746  004008  0EFE               	movlw	-2
  2747  00400A  50E3               	movf	plusw1,w,c
  2748  00400C  6ED9               	movwf	fsr2l,c
  2749  00400E  6ADA               	clrf	fsr2h,c
  2750  004010  0E06               	movlw	6
  2751  004012  6EDF               	movwf	indf2,c
  2752                           
  2753                           ;gemsecs.c: 390:   while ((uart1RxCount)) {
  2754  004014  D002               	goto	l8239
  2755  004016                     l8237:
  2756                           
  2757                           ;gemsecs.c: 391:    UART1_Read();
  2758  004016  ECCF  F02C         	call	_UART1_Read	;wreg free
  2759  00401A                     l8239:
  2760                           
  2761                           ;gemsecs.c: 390:   while ((uart1RxCount)) {
  2762  00401A  5035               	movf	_uart1RxCount,w,c	;volatile
  2763  00401C  B4D8               	btfsc	status,2,c
  2764  00401E  D02D               	goto	l8249
  2765  004020  D7FA               	goto	l8237
  2766  004022                     l8241:
  2767                           
  2768                           ;gemsecs.c: 397:   V.failed_send = 0;
  2769  004022  0E87               	movlw	-121
  2770  004024  0100               	movlb	0	; () banked
  2771  004026  17BD               	andwf	(_V+86)& (0+255),f,b
  2772                           
  2773                           ;gemsecs.c: 398:   break;
  2774  004028  D028               	goto	l8249
  2775  00402A                     l8243:
  2776                           
  2777                           ;gemsecs.c: 400:   *t_link = LINK_STATE_IDLE;
  2778                           ;stkvar	_t_link @ sp[(-1)+-1]
  2779  00402A  0EFE               	movlw	-2
  2780  00402C  50E3               	movf	plusw1,w,c
  2781  00402E  6ED9               	movwf	fsr2l,c
  2782  004030  6ADA               	clrf	fsr2h,c
  2783  004032  0E00               	movlw	0
  2784  004034                     L5:
  2785  004034  6EDF               	movwf	indf2,c
  2786                           
  2787                           ;gemsecs.c: 402:   break;
  2788  004036  D021               	goto	l8249
  2789  004038                     l8247:
  2790                           
  2791                           ;stkvar	_t_link @ sp[(-1)+-1]
  2792  004038  0EFE               	movlw	-2
  2793  00403A  50E3               	movf	plusw1,w,c
  2794  00403C  6ED9               	movwf	fsr2l,c
  2795  00403E  6ADA               	clrf	fsr2h,c
  2796  004040  50DF               	movf	indf2,w,c
  2797  004042  6E45               	movwf	btemp+10,c
  2798  004044  6A46               	clrf	btemp+11,c
  2799                           
  2800                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2801                           ; Switch size 1, requested type "simple"
  2802                           ; Number of cases is 1, Range of values is 0 to 0
  2803                           ; switch strategies available:
  2804                           ; Name         Instructions Cycles
  2805                           ; simple_byte            4     3 (average)
  2806                           ;	Chosen strategy is simple_byte
  2807  004046  5046               	movf	btemp+11,w,c
  2808  004048  0A00               	xorlw	0	; case 0
  2809  00404A  A4D8               	btfss	status,2,c
  2810  00404C  D7EE               	goto	l8243
  2811                           
  2812                           ; Switch size 1, requested type "simple"
  2813                           ; Number of cases is 7, Range of values is 0 to 6
  2814                           ; switch strategies available:
  2815                           ; Name         Instructions Cycles
  2816                           ; simple_byte           22    12 (average)
  2817                           ;	Chosen strategy is simple_byte
  2818  00404E  5045               	movf	btemp+10,w,c
  2819  004050  0A00               	xorlw	0	; case 0
  2820  004052  B4D8               	btfsc	status,2,c
  2821  004054  D6E4               	goto	l1634
  2822  004056  0A01               	xorlw	1	; case 1
  2823  004058  B4D8               	btfsc	status,2,c
  2824  00405A  D6F7               	goto	l8163
  2825  00405C  0A03               	xorlw	3	; case 2
  2826  00405E  B4D8               	btfsc	status,2,c
  2827  004060  D748               	goto	l8189
  2828  004062  0A01               	xorlw	1	; case 3
  2829  004064  B4D8               	btfsc	status,2,c
  2830  004066  D7AB               	goto	l8219
  2831  004068  0A07               	xorlw	7	; case 4
  2832  00406A  B4D8               	btfsc	status,2,c
  2833  00406C  D7DA               	goto	l8241
  2834  00406E  0A01               	xorlw	1	; case 5
  2835  004070  B4D8               	btfsc	status,2,c
  2836  004072  D7CA               	goto	l8235
  2837  004074  0A03               	xorlw	3	; case 6
  2838  004076  A4D8               	btfss	status,2,c
  2839  004078  D7D8               	goto	l8243
  2840  00407A                     l8249:
  2841                           
  2842                           ;gemsecs.c: 405:  return *t_link;
  2843                           ;stkvar	_t_link @ sp[(-1)+-1]
  2844  00407A  0EFE               	movlw	-2
  2845  00407C  50E3               	movf	plusw1,w,c
  2846  00407E  6ED9               	movwf	fsr2l,c
  2847  004080  6ADA               	clrf	fsr2h,c
  2848  004082  50DF               	movf	indf2,w,c
  2849  004084  6E3B               	movwf	btemp,c
  2850                           
  2851                           ; _t_protocol: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  2852  004086  52E5               	movf	postdec1,f,c
  2853  004088  52E5               	movf	postdec1,f,c
  2854  00408A  0012               	return		;funcret
  2855  00408C                     __end_of_t_protocol:
  2856                           	opt callstack 0
  2857                           
  2858 ;; *************** function _secs_send *****************
  2859 ;; Defined at:
  2860 ;;		line 409 in file "gemsecs.c"
  2861 ;; Parameters:    Size  Location     Type
  2862 ;;  byte_block      2  [STACK] PTR unsigned char 
  2863 ;;		 -> H53(56), H24(27), H17(20), H14(17), 
  2864 ;;		 -> H13(16), H12(30), H10(65), 
  2865 ;;  length          1  [STACK] unsigned char 
  2866 ;;  fake            1  [STACK] _Bool 
  2867 ;;  s_uart          1  [STACK] unsigned char 
  2868 ;; Auto vars:     Size  Location     Type
  2869 ;;  k               2  [STACK] PTR unsigned char 
  2870 ;;		 -> H53(56), H24(27), H17(20), H14(17), 
  2871 ;;		 -> H13(16), H12(30), H10(65), 
  2872 ;;  checksum        2  [STACK] unsigned short 
  2873 ;;  i               1  [STACK] unsigned char 
  2874 ;; Return value:  Size  Location     Type
  2875 ;;                  1  [STACK] _Bool 
  2876 ;; Registers used:
  2877 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11
  2878 ;; Tracked objects:
  2879 ;;		On entry : 3F/0
  2880 ;;		On exit  : 0/0
  2881 ;;		Unchanged: 0/0
  2882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2883 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2886 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2887 ;;Total ram usage:        0 bytes
  2888 ;; Hardware stack levels used:    1
  2889 ;; Hardware stack levels required when called:    4
  2890 ;; This function calls:
  2891 ;;		_UART1_Write
  2892 ;;		_UART1_is_tx_ready
  2893 ;;		_UART1_put_buffer
  2894 ;;		_UART2_Write
  2895 ;;		_UART2_is_tx_ready
  2896 ;;		_UART2_put_buffer
  2897 ;;		_block_checksum
  2898 ;; This function is called by:
  2899 ;;		_t_protocol
  2900 ;; This function uses a reentrant model
  2901 ;;
  2902                           
  2903                           	psect	text2
  2904  00408C                     __ptext2:
  2905                           	opt callstack 0
  2906  00408C                     _secs_send:
  2907                           	opt callstack 0
  2908                           
  2909                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2910  00408C  0E05               	movlw	5
  2911  00408E  26E1               	addwf	fsr1l,f,c
  2912  004090  0E00               	movlw	0
  2913  004092  22E2               	addwfc	fsr1h,f,c
  2914                           
  2915                           ;gemsecs.c: 409: _Bool secs_send(uint8_t *byte_block, uint8_t length, _Bool fake, uint8_
      +                          t s_uart);gemsecs.c: 410: {;gemsecs.c: 411:  uint8_t i, *k;;gemsecs.c: 412:  uint16_t ch
      +                          ecksum;;gemsecs.c: 414:  k = (uint8_t *) byte_block;
  2916                           ;stkvar	_byte_block @ sp[(-5)+-2]
  2917                           
  2918                           ;incstack = 0
  2919  004094  0EF9               	movlw	-7
  2920  004096  006F FF8C  F045    	movff	plusw1,btemp+10
  2921  00409C  0EFA               	movlw	-6
  2922  00409E  006F FF8C  F046    	movff	plusw1,btemp+11
  2923                           
  2924                           ;stkvar	_k @ sp[(-5)+0]
  2925  0040A4  0EFC               	movlw	-4
  2926  0040A6  0060  F11B  FFE3   	movff	btemp+11,plusw1
  2927  0040AC  0EFB               	movlw	-5
  2928  0040AE  0060  F117  FFE3   	movff	btemp+10,plusw1
  2929                           
  2930                           ;gemsecs.c: 416:  ++V.ticks;
  2931  0040B4  0E01               	movlw	1
  2932  0040B6  0100               	movlb	0	; () banked
  2933  0040B8  27AC               	addwf	(_V+69)& (0+255),f,b
  2934  0040BA  0E00               	movlw	0
  2935  0040BC  23AD               	addwfc	(_V+70)& (0+255),f,b
  2936  0040BE  23AE               	addwfc	(_V+71)& (0+255),f,b
  2937  0040C0  23AF               	addwfc	(_V+72)& (0+255),f,b
  2938                           
  2939                           ; BSR set to: 0
  2940                           ;gemsecs.c: 417:  V.error = LINK_ERROR_NONE;
  2941  0040C2  6BB6               	clrf	(_V+79)& (0+255),b
  2942                           
  2943                           ; BSR set to: 0
  2944                           ;gemsecs.c: 418:  if ((length - 3) != k[length - 1]) {
  2945                           ;stkvar	_length @ sp[(-5)+-3]
  2946  0040C4  0EF8               	movlw	-8
  2947  0040C6  50E3               	movf	plusw1,w,c
  2948  0040C8  6E45               	movwf	btemp+10,c
  2949  0040CA  6A46               	clrf	btemp+11,c
  2950                           
  2951                           ;stkvar	_k @ sp[(-5)+0]
  2952  0040CC  0EFB               	movlw	-5
  2953  0040CE  50E3               	movf	plusw1,w,c
  2954  0040D0  2645               	addwf	btemp+10,f,c
  2955  0040D2  0EFC               	movlw	-4
  2956  0040D4  50E3               	movf	plusw1,w,c
  2957  0040D6  2246               	addwfc	btemp+11,f,c
  2958  0040D8  0EFF               	movlw	255
  2959  0040DA  2445               	addwf	btemp+10,w,c
  2960  0040DC  6ED9               	movwf	fsr2l,c
  2961  0040DE  0EFF               	movlw	255
  2962  0040E0  2046               	addwfc	btemp+11,w,c
  2963  0040E2  6EDA               	movwf	fsr2h,c
  2964  0040E4  50DF               	movf	indf2,w,c
  2965  0040E6  6E45               	movwf	btemp+10,c
  2966  0040E8  6A46               	clrf	btemp+11,c
  2967  0040EA  0EFD               	movlw	253
  2968  0040EC  6E43               	movwf	btemp+8,c
  2969  0040EE  0EFF               	movlw	255
  2970  0040F0  6E44               	movwf	btemp+9,c
  2971                           
  2972                           ;stkvar	_length @ sp[(-5)+-3]
  2973  0040F2  0EF8               	movlw	-8
  2974  0040F4  50E3               	movf	plusw1,w,c
  2975  0040F6  6E41               	movwf	btemp+6,c
  2976  0040F8  6A42               	clrf	btemp+7,c
  2977  0040FA  5043               	movf	btemp+8,w,c
  2978  0040FC  2641               	addwf	btemp+6,f,c
  2979  0040FE  5044               	movf	btemp+9,w,c
  2980  004100  2242               	addwfc	btemp+7,f,c
  2981  004102  5045               	movf	btemp+10,w,c
  2982  004104  1841               	xorwf	btemp+6,w,c
  2983  004106  E104               	bnz	u4910
  2984  004108  5046               	movf	btemp+11,w,c
  2985  00410A  1842               	xorwf	btemp+7,w,c
  2986  00410C  B4D8               	btfsc	status,2,c
  2987  00410E  D003               	goto	l7983
  2988  004110                     u4910:
  2989                           
  2990                           ; BSR set to: 0
  2991                           ;gemsecs.c: 419:   V.error = LINK_ERROR_SEND;
  2992  004110  0E08               	movlw	8
  2993  004112  6FB6               	movwf	(_V+79)& (0+255),b
  2994  004114  D0EA               	goto	l1669
  2995  004116                     l7983:
  2996                           
  2997                           ; BSR set to: 0
  2998                           ;gemsecs.c: 428:  checksum = block_checksum(&k[2], length - 3);
  2999  004116  0EFD               	movlw	253
  3000  004118  6E45               	movwf	btemp+10,c
  3001  00411A  0EFF               	movlw	255
  3002  00411C  6E46               	movwf	btemp+11,c
  3003                           
  3004                           ;stkvar	_length @ sp[(-5)+-3]
  3005  00411E  0EF8               	movlw	-8
  3006  004120  50E3               	movf	plusw1,w,c
  3007  004122  6E43               	movwf	btemp+8,c
  3008  004124  6A44               	clrf	btemp+9,c
  3009  004126  5045               	movf	btemp+10,w,c
  3010  004128  2643               	addwf	btemp+8,f,c
  3011  00412A  5046               	movf	btemp+11,w,c
  3012  00412C  2244               	addwfc	btemp+9,f,c
  3013  00412E  0060  F10F  FFE6   	movff	btemp+8,postinc1
  3014  004134  0060  F113  FFE6   	movff	btemp+9,postinc1
  3015                           
  3016                           ;stkvar	_k @ sp[(-7)+0]
  3017  00413A  0EF9               	movlw	-7
  3018  00413C  50E3               	movf	plusw1,w,c
  3019  00413E  0F02               	addlw	2
  3020  004140  6E45               	movwf	btemp+10,c
  3021  004142  0EFA               	movlw	-6
  3022  004144  006F FF8C  F046    	movff	plusw1,btemp+11
  3023  00414A  0E00               	movlw	0
  3024  00414C  2246               	addwfc	btemp+11,f,c
  3025  00414E  0060  F117  FFE6   	movff	btemp+10,postinc1
  3026  004154  0060  F11B  FFE6   	movff	btemp+11,postinc1
  3027  00415A  EC08  F026         	call	_block_checksum	;wreg free
  3028                           
  3029                           ;stkvar	_checksum @ sp[(-5)+2]
  3030  00415E  0EFD               	movlw	-3
  3031  004160  0060  F0EF  FFE3   	movff	btemp,plusw1
  3032  004166  0EFE               	movlw	-2
  3033  004168  0060  F0F3  FFE3   	movff	btemp+1,plusw1
  3034                           
  3035                           ;gemsecs.c: 429:  k[0] = checksum & 0xff;
  3036                           ;stkvar	_checksum @ sp[(-5)+2]
  3037                           ;stkvar	_k @ sp[(-5)+0]
  3038  00416E  0EFB               	movlw	-5
  3039  004170  006F FF8F FFD9     	movff	plusw1,fsr2l
  3040  004176  0EFC               	movlw	-4
  3041  004178  006F FF8F FFDA     	movff	plusw1,fsr2h
  3042  00417E  0EFD               	movlw	-3
  3043  004180  006F FF8F FFDF     	movff	plusw1,indf2
  3044                           
  3045                           ;gemsecs.c: 430:  k[1] = (checksum >> 8)&0xff;
  3046                           ;stkvar	_checksum @ sp[(-5)+2]
  3047  004186  0EFE               	movlw	254
  3048  004188  24E1               	addwf	fsr1l,w,c
  3049  00418A  6ED9               	movwf	fsr2l,c
  3050  00418C  0EFF               	movlw	255
  3051  00418E  20E2               	addwfc	fsr1h,w,c
  3052  004190  6EDA               	movwf	fsr2h,c
  3053                           
  3054                           ;stkvar	_k @ sp[(-5)+0]
  3055  004192  0EFB               	movlw	-5
  3056  004194  006F FF8C  F045    	movff	plusw1,btemp+10
  3057  00419A  0EFC               	movlw	-4
  3058  00419C  006F FF8C  F046    	movff	plusw1,btemp+11
  3059  0041A2  0E01               	movlw	1
  3060  0041A4  2445               	addwf	btemp+10,w,c
  3061  0041A6  6EE9               	movwf	fsr0l,c
  3062  0041A8  0E00               	movlw	0
  3063  0041AA  2046               	addwfc	btemp+11,w,c
  3064  0041AC  6EEA               	movwf	fsr0h,c
  3065  0041AE  006F FF7F FFEF     	movff	indf2,indf0
  3066                           
  3067                           ;gemsecs.c: 431:  V.t_checksum = checksum;
  3068                           ;stkvar	_checksum @ sp[(-5)+2]
  3069  0041B4  0EFD               	movlw	-3
  3070  0041B6  006F FF8C  F0BB    	movff	plusw1,_V+84
  3071  0041BC  0EFE               	movlw	-2
  3072  0041BE  006F FF8C  F0BC    	movff	plusw1,_V+85
  3073                           
  3074                           ;gemsecs.c: 433:  switch (s_uart) {
  3075  0041C4  D082               	goto	l8029
  3076  0041C6                     l7991:
  3077  0041C6  ECB1  F030         	call	_UART2_is_tx_ready	;wreg free
  3078  0041CA  0E3F               	movlw	63
  3079  0041CC  643B               	cpfsgt	btemp,c
  3080  0041CE  D7FB               	goto	l7991
  3081                           
  3082                           ;gemsecs.c: 436:   for (i = length; i > 0; i--) {
  3083                           ;stkvar	_length @ sp[(-5)+-3]
  3084                           ;stkvar	_i @ sp[(-5)+4]
  3085  0041D0  0EF8               	movlw	-8
  3086  0041D2  006F FF8C  F03B    	movff	plusw1,btemp
  3087  0041D8  0EFF               	movlw	-1
  3088  0041DA  0060  F0EF  FFE3   	movff	btemp,plusw1
  3089  0041E0                     l7995:
  3090                           
  3091                           ;stkvar	_i @ sp[(-5)+4]
  3092  0041E0  0EFF               	movlw	-1
  3093  0041E2  50E3               	movf	plusw1,w,c
  3094  0041E4  B4D8               	btfsc	status,2,c
  3095  0041E6  D081               	goto	l1669
  3096                           
  3097                           ;gemsecs.c: 437:    if (fake) {
  3098                           ;stkvar	_fake @ sp[(-5)+-4]
  3099  0041E8  0EF7               	movlw	-9
  3100  0041EA  50E3               	movf	plusw1,w,c
  3101  0041EC  B4D8               	btfsc	status,2,c
  3102  0041EE  D015               	goto	l8003
  3103                           
  3104                           ;gemsecs.c: 438:     UART2_put_buffer(k[i - 1]);
  3105                           ;stkvar	_i @ sp[(-5)+4]
  3106  0041F0  0EFF               	movlw	-1
  3107  0041F2  50E3               	movf	plusw1,w,c
  3108  0041F4  6E45               	movwf	btemp+10,c
  3109  0041F6  6A46               	clrf	btemp+11,c
  3110                           
  3111                           ;stkvar	_k @ sp[(-5)+0]
  3112  0041F8  0EFB               	movlw	-5
  3113  0041FA  50E3               	movf	plusw1,w,c
  3114  0041FC  2645               	addwf	btemp+10,f,c
  3115  0041FE  0EFC               	movlw	-4
  3116  004200  50E3               	movf	plusw1,w,c
  3117  004202  2246               	addwfc	btemp+11,f,c
  3118  004204  0EFF               	movlw	255
  3119  004206  2445               	addwf	btemp+10,w,c
  3120  004208  6ED9               	movwf	fsr2l,c
  3121  00420A  0EFF               	movlw	255
  3122  00420C  2046               	addwfc	btemp+11,w,c
  3123  00420E  6EDA               	movwf	fsr2h,c
  3124  004210  50DF               	movf	indf2,w,c
  3125  004212  6EE6               	movwf	postinc1,c
  3126  004214  EC9F  F02D         	call	_UART2_put_buffer	;wreg free
  3127                           
  3128                           ;gemsecs.c: 439:    } else {
  3129  004218  D014               	goto	l8005
  3130  00421A                     l8003:
  3131                           
  3132                           ;gemsecs.c: 441:     UART2_Write(k[i - 1]);
  3133                           ;stkvar	_i @ sp[(-5)+4]
  3134  00421A  0EFF               	movlw	-1
  3135  00421C  50E3               	movf	plusw1,w,c
  3136  00421E  6E45               	movwf	btemp+10,c
  3137  004220  6A46               	clrf	btemp+11,c
  3138                           
  3139                           ;stkvar	_k @ sp[(-5)+0]
  3140  004222  0EFB               	movlw	-5
  3141  004224  50E3               	movf	plusw1,w,c
  3142  004226  2645               	addwf	btemp+10,f,c
  3143  004228  0EFC               	movlw	-4
  3144  00422A  50E3               	movf	plusw1,w,c
  3145  00422C  2246               	addwfc	btemp+11,f,c
  3146  00422E  0EFF               	movlw	255
  3147  004230  2445               	addwf	btemp+10,w,c
  3148  004232  6ED9               	movwf	fsr2l,c
  3149  004234  0EFF               	movlw	255
  3150  004236  2046               	addwfc	btemp+11,w,c
  3151  004238  6EDA               	movwf	fsr2h,c
  3152  00423A  50DF               	movf	indf2,w,c
  3153  00423C  6EE6               	movwf	postinc1,c
  3154  00423E  EC72  F02C         	call	_UART2_Write	;wreg free
  3155  004242                     l8005:
  3156                           
  3157                           ; BSR set to: 57
  3158                           ;gemsecs.c: 443:   }
  3159                           ;stkvar	_i @ sp[(-5)+4]
  3160  004242  0EFF               	movlw	-1
  3161  004244  06E3               	decf	plusw1,f,c
  3162  004246  D7CC               	goto	l7995
  3163  004248                     l8009:
  3164  004248  ECB5  F030         	call	_UART1_is_tx_ready	;wreg free
  3165  00424C  0E3F               	movlw	63
  3166  00424E  643B               	cpfsgt	btemp,c
  3167  004250  D7FB               	goto	l8009
  3168                           
  3169                           ;gemsecs.c: 448:   for (i = length; i > 0; i--) {
  3170                           ;stkvar	_length @ sp[(-5)+-3]
  3171                           ;stkvar	_i @ sp[(-5)+4]
  3172  004252  0EF8               	movlw	-8
  3173  004254  006F FF8C  F03B    	movff	plusw1,btemp
  3174  00425A  0EFF               	movlw	-1
  3175  00425C  0060  F0EF  FFE3   	movff	btemp,plusw1
  3176  004262                     l8013:
  3177                           
  3178                           ;stkvar	_i @ sp[(-5)+4]
  3179  004262  0EFF               	movlw	-1
  3180  004264  50E3               	movf	plusw1,w,c
  3181  004266  B4D8               	btfsc	status,2,c
  3182  004268  D040               	goto	l1669
  3183                           
  3184                           ;gemsecs.c: 449:    if (fake) {
  3185                           ;stkvar	_fake @ sp[(-5)+-4]
  3186  00426A  0EF7               	movlw	-9
  3187  00426C  50E3               	movf	plusw1,w,c
  3188  00426E  B4D8               	btfsc	status,2,c
  3189  004270  D015               	goto	l8021
  3190                           
  3191                           ;gemsecs.c: 450:     UART1_put_buffer(k[i - 1]);
  3192                           ;stkvar	_i @ sp[(-5)+4]
  3193  004272  0EFF               	movlw	-1
  3194  004274  50E3               	movf	plusw1,w,c
  3195  004276  6E45               	movwf	btemp+10,c
  3196  004278  6A46               	clrf	btemp+11,c
  3197                           
  3198                           ;stkvar	_k @ sp[(-5)+0]
  3199  00427A  0EFB               	movlw	-5
  3200  00427C  50E3               	movf	plusw1,w,c
  3201  00427E  2645               	addwf	btemp+10,f,c
  3202  004280  0EFC               	movlw	-4
  3203  004282  50E3               	movf	plusw1,w,c
  3204  004284  2246               	addwfc	btemp+11,f,c
  3205  004286  0EFF               	movlw	255
  3206  004288  2445               	addwf	btemp+10,w,c
  3207  00428A  6ED9               	movwf	fsr2l,c
  3208  00428C  0EFF               	movlw	255
  3209  00428E  2046               	addwfc	btemp+11,w,c
  3210  004290  6EDA               	movwf	fsr2h,c
  3211  004292  50DF               	movf	indf2,w,c
  3212  004294  6EE6               	movwf	postinc1,c
  3213  004296  ECB4  F02D         	call	_UART1_put_buffer	;wreg free
  3214                           
  3215                           ;gemsecs.c: 451:    } else {
  3216  00429A  D014               	goto	l8023
  3217  00429C                     l8021:
  3218                           
  3219                           ;gemsecs.c: 453:     UART1_Write(k[i - 1]);
  3220                           ;stkvar	_i @ sp[(-5)+4]
  3221  00429C  0EFF               	movlw	-1
  3222  00429E  50E3               	movf	plusw1,w,c
  3223  0042A0  6E45               	movwf	btemp+10,c
  3224  0042A2  6A46               	clrf	btemp+11,c
  3225                           
  3226                           ;stkvar	_k @ sp[(-5)+0]
  3227  0042A4  0EFB               	movlw	-5
  3228  0042A6  50E3               	movf	plusw1,w,c
  3229  0042A8  2645               	addwf	btemp+10,f,c
  3230  0042AA  0EFC               	movlw	-4
  3231  0042AC  50E3               	movf	plusw1,w,c
  3232  0042AE  2246               	addwfc	btemp+11,f,c
  3233  0042B0  0EFF               	movlw	255
  3234  0042B2  2445               	addwf	btemp+10,w,c
  3235  0042B4  6ED9               	movwf	fsr2l,c
  3236  0042B6  0EFF               	movlw	255
  3237  0042B8  2046               	addwfc	btemp+11,w,c
  3238  0042BA  6EDA               	movwf	fsr2h,c
  3239  0042BC  50DF               	movf	indf2,w,c
  3240  0042BE  6EE6               	movwf	postinc1,c
  3241  0042C0  EC91  F02C         	call	_UART1_Write	;wreg free
  3242  0042C4                     l8023:
  3243                           
  3244                           ; BSR set to: 57
  3245                           ;gemsecs.c: 455:   }
  3246                           ;stkvar	_i @ sp[(-5)+4]
  3247  0042C4  0EFF               	movlw	-1
  3248  0042C6  06E3               	decf	plusw1,f,c
  3249  0042C8  D7CC               	goto	l8013
  3250  0042CA                     l8029:
  3251                           
  3252                           ;stkvar	_s_uart @ sp[(-5)+-5]
  3253  0042CA  0EF6               	movlw	-10
  3254  0042CC  50E3               	movf	plusw1,w,c
  3255  0042CE  6E45               	movwf	btemp+10,c
  3256  0042D0  6A46               	clrf	btemp+11,c
  3257                           
  3258                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3259                           ; Switch size 1, requested type "simple"
  3260                           ; Number of cases is 1, Range of values is 0 to 0
  3261                           ; switch strategies available:
  3262                           ; Name         Instructions Cycles
  3263                           ; simple_byte            4     3 (average)
  3264                           ;	Chosen strategy is simple_byte
  3265  0042D2  5046               	movf	btemp+11,w,c
  3266  0042D4  0A00               	xorlw	0	; case 0
  3267  0042D6  A4D8               	btfss	status,2,c
  3268  0042D8  D7B7               	goto	l8009
  3269                           
  3270                           ; Switch size 1, requested type "simple"
  3271                           ; Number of cases is 2, Range of values is 1 to 2
  3272                           ; switch strategies available:
  3273                           ; Name         Instructions Cycles
  3274                           ; simple_byte            7     4 (average)
  3275                           ;	Chosen strategy is simple_byte
  3276  0042DA  5045               	movf	btemp+10,w,c
  3277  0042DC  0A01               	xorlw	1	; case 1
  3278  0042DE  B4D8               	btfsc	status,2,c
  3279  0042E0  D7B3               	goto	l8009
  3280  0042E2  0A03               	xorlw	3	; case 2
  3281  0042E4  B4D8               	btfsc	status,2,c
  3282  0042E6  D76F               	goto	l7991
  3283  0042E8  D7AF               	goto	l8009
  3284  0042EA                     l1669:
  3285                           
  3286                           ; _secs_send: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, arg
      +                          size = 5, vargsize = 0
  3287  0042EA  0EF6               	movlw	246
  3288  0042EC  26E1               	addwf	fsr1l,f,c
  3289  0042EE  0EFF               	movlw	255
  3290  0042F0  22E2               	addwfc	fsr1h,f,c
  3291  0042F2  0012               	return		;funcret
  3292  0042F4                     __end_of_secs_send:
  3293                           	opt callstack 0
  3294                           
  3295 ;; *************** function _block_checksum *****************
  3296 ;; Defined at:
  3297 ;;		line 18 in file "gemsecs.c"
  3298 ;; Parameters:    Size  Location     Type
  3299 ;;  byte_block      2  [STACK] PTR unsigned char 
  3300 ;;		 -> H53(56), H24(27), H17(20), H14(17), 
  3301 ;;		 -> H13(16), H12(30), H10(65), 
  3302 ;;  byte_count      2  [STACK] unsigned short 
  3303 ;; Auto vars:     Size  Location     Type
  3304 ;;  i               2  [STACK] unsigned short 
  3305 ;;  sum             2  [STACK] unsigned short 
  3306 ;; Return value:  Size  Location     Type
  3307 ;;                  2  [STACK] unsigned short 
  3308 ;; Registers used:
  3309 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11
  3310 ;; Tracked objects:
  3311 ;;		On entry : 3F/0
  3312 ;;		On exit  : 0/0
  3313 ;;		Unchanged: 0/0
  3314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3315 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3316 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3317 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3318 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3319 ;;Total ram usage:        0 bytes
  3320 ;; Hardware stack levels used:    1
  3321 ;; Hardware stack levels required when called:    3
  3322 ;; This function calls:
  3323 ;;		Nothing
  3324 ;; This function is called by:
  3325 ;;		_secs_send
  3326 ;; This function uses a reentrant model
  3327 ;;
  3328                           
  3329                           	psect	text3
  3330  004C10                     __ptext3:
  3331                           	opt callstack 0
  3332  004C10                     _block_checksum:
  3333                           	opt callstack 0
  3334                           
  3335                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3336  004C10  52E6               	movf	postinc1,f,c
  3337  004C12  52E6               	movf	postinc1,f,c
  3338  004C14  52E6               	movf	postinc1,f,c
  3339  004C16  52E6               	movf	postinc1,f,c
  3340                           
  3341                           ;gemsecs.c: 18: uint16_t block_checksum(uint8_t *byte_block, uint16_t byte_count);gemsec
      +                          s.c: 19: {;gemsecs.c: 20:  uint16_t sum = 0, i;
  3342                           ;stkvar	_sum @ sp[(-4)+2]
  3343                           
  3344                           ;incstack = 0
  3345  004C18  0EFE               	movlw	-2
  3346  004C1A  6AE3               	clrf	plusw1,c
  3347  004C1C  0EFF               	movlw	-1
  3348  004C1E  6AE3               	clrf	plusw1,c
  3349                           
  3350                           ;gemsecs.c: 22:  for (i = 0; i < byte_count; i++) {
  3351                           ;stkvar	_i @ sp[(-4)+0]
  3352  004C20  0EFC               	movlw	-4
  3353  004C22  6AE3               	clrf	plusw1,c
  3354  004C24  0EFD               	movlw	-3
  3355  004C26  6AE3               	clrf	plusw1,c
  3356  004C28  D039               	goto	l7891
  3357  004C2A                     l7887:
  3358                           
  3359                           ;gemsecs.c: 23:   sum += byte_block[i];
  3360                           ;stkvar	_i @ sp[(-4)+0]
  3361  004C2A  0EFC               	movlw	-4
  3362  004C2C  006F FF8C  F045    	movff	plusw1,btemp+10
  3363  004C32  0EFD               	movlw	-3
  3364  004C34  006F FF8C  F046    	movff	plusw1,btemp+11
  3365                           
  3366                           ;stkvar	_byte_block @ sp[(-4)+-2]
  3367  004C3A  0EFA               	movlw	-6
  3368  004C3C  006F FF8C  F043    	movff	plusw1,btemp+8
  3369  004C42  0EFB               	movlw	-5
  3370  004C44  006F FF8C  F044    	movff	plusw1,btemp+9
  3371  004C4A  5045               	movf	btemp+10,w,c
  3372  004C4C  2443               	addwf	btemp+8,w,c
  3373  004C4E  6ED9               	movwf	fsr2l,c
  3374  004C50  5046               	movf	btemp+11,w,c
  3375  004C52  2044               	addwfc	btemp+9,w,c
  3376  004C54  6EDA               	movwf	fsr2h,c
  3377  004C56  50DF               	movf	indf2,w,c
  3378  004C58  6E46               	movwf	btemp+11,c
  3379                           
  3380                           ;stkvar	_sum @ sp[(-4)+2]
  3381  004C5A  0EFE               	movlw	-2
  3382  004C5C  50E3               	movf	plusw1,w,c
  3383  004C5E  2446               	addwf	btemp+11,w,c
  3384  004C60  6E3B               	movwf	btemp,c
  3385  004C62  0EFE               	movlw	-2
  3386  004C64  0060  F0EF  FFE3   	movff	btemp,plusw1
  3387  004C6A  6A3B               	clrf	btemp,c
  3388  004C6C  0EFF               	movlw	-1
  3389  004C6E  50E3               	movf	plusw1,w,c
  3390  004C70  223B               	addwfc	btemp,f,c
  3391  004C72  0EFF               	movlw	-1
  3392  004C74  0060  F0EF  FFE3   	movff	btemp,plusw1
  3393                           
  3394                           ;gemsecs.c: 24:  }
  3395                           ;stkvar	_i @ sp[(-4)+0]
  3396  004C7A  0EFC               	movlw	-4
  3397  004C7C  50E3               	movf	plusw1,w,c
  3398  004C7E  0F01               	addlw	1
  3399  004C80  6E3B               	movwf	btemp,c
  3400  004C82  0EFC               	movlw	-4
  3401  004C84  0060  F0EF  FFE3   	movff	btemp,plusw1
  3402  004C8A  6A3B               	clrf	btemp,c
  3403  004C8C  0EFD               	movlw	-3
  3404  004C8E  50E3               	movf	plusw1,w,c
  3405  004C90  203B               	addwfc	btemp,w,c
  3406  004C92  6E3B               	movwf	btemp,c
  3407  004C94  0EFD               	movlw	-3
  3408  004C96  0060  F0EF  FFE3   	movff	btemp,plusw1
  3409  004C9C                     l7891:
  3410                           
  3411                           ;stkvar	_byte_count @ sp[(-4)+-4]
  3412  004C9C  0EF8               	movlw	-8
  3413  004C9E  006F FF8C  F045    	movff	plusw1,btemp+10
  3414  004CA4  0EF9               	movlw	-7
  3415  004CA6  006F FF8C  F046    	movff	plusw1,btemp+11
  3416                           
  3417                           ;stkvar	_i @ sp[(-4)+0]
  3418  004CAC  0EFC               	movlw	-4
  3419  004CAE  006F FF8C  F043    	movff	plusw1,btemp+8
  3420  004CB4  0EFD               	movlw	-3
  3421  004CB6  006F FF8C  F044    	movff	plusw1,btemp+9
  3422  004CBC  5045               	movf	btemp+10,w,c
  3423  004CBE  5C43               	subwf	btemp+8,w,c
  3424  004CC0  5046               	movf	btemp+11,w,c
  3425  004CC2  5844               	subwfb	btemp+9,w,c
  3426  004CC4  A0D8               	btfss	status,0,c
  3427  004CC6  D7B1               	goto	l7887
  3428                           
  3429                           ;gemsecs.c: 25:  return sum;
  3430                           ;stkvar	_sum @ sp[(-4)+2]
  3431  004CC8  0EFE               	movlw	-2
  3432  004CCA  006F FF8C  F03B    	movff	plusw1,btemp
  3433  004CD0  0EFF               	movlw	-1
  3434  004CD2  006F FF8C  F03C    	movff	plusw1,btemp+1
  3435                           
  3436                           ; _block_checksum: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4
      +                          , argsize = 4, vargsize = 0
  3437  004CD8  0EF8               	movlw	248
  3438  004CDA  26E1               	addwf	fsr1l,f,c
  3439  004CDC  0EFF               	movlw	255
  3440  004CDE  22E2               	addwfc	fsr1h,f,c
  3441  004CE0  0012               	return		;funcret
  3442  004CE2                     __end_of_block_checksum:
  3443                           	opt callstack 0
  3444                           
  3445 ;; *************** function _UART2_put_buffer *****************
  3446 ;; Defined at:
  3447 ;;		line 257 in file "mcc_generated_files/uart2.c"
  3448 ;; Parameters:    Size  Location     Type
  3449 ;;  bufData         1  [STACK] unsigned char 
  3450 ;; Auto vars:     Size  Location     Type
  3451 ;;		None
  3452 ;; Return value:  Size  Location     Type
  3453 ;;                  1  [STACK] void 
  3454 ;; Registers used:
  3455 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  3456 ;; Tracked objects:
  3457 ;;		On entry : 0/0
  3458 ;;		On exit  : 3F/39
  3459 ;;		Unchanged: 0/0
  3460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3461 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3462 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3463 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3464 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3465 ;;Total ram usage:        0 bytes
  3466 ;; Hardware stack levels used:    1
  3467 ;; Hardware stack levels required when called:    3
  3468 ;; This function calls:
  3469 ;;		Nothing
  3470 ;; This function is called by:
  3471 ;;		_secs_send
  3472 ;; This function uses a reentrant model
  3473 ;;
  3474                           
  3475                           	psect	text4
  3476  005B3E                     __ptext4:
  3477                           	opt callstack 0
  3478  005B3E                     _UART2_put_buffer:
  3479                           	opt callstack 25
  3480                           
  3481                           ;mcc_generated_files/uart2.c: 257: void UART2_put_buffer(uint8_t bufData);mcc_generated_
      +                          files/uart2.c: 258: {;mcc_generated_files/uart2.c: 259:  PIE6bits.U2RXIE = 0;
  3482                           
  3483                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3484                           ;incstack = 0
  3485  005B3E  0139               	movlb	57	; () banked
  3486  005B40  9596               	bcf	150,2,b	;volatile
  3487                           
  3488                           ; BSR set to: 57
  3489                           ;mcc_generated_files/uart2.c: 260:  uart2RxBuffer[uart2RxHead++] = bufData;
  3490                           ;stkvar	_bufData @ sp[(0)+-1]
  3491  005B42  0E00               	movlw	low _uart2RxBuffer
  3492  005B44  2431               	addwf	_uart2RxHead,w,c	;volatile
  3493  005B46  6ED9               	movwf	fsr2l,c
  3494  005B48  6ADA               	clrf	fsr2h,c
  3495  005B4A  0E02               	movlw	high _uart2RxBuffer
  3496  005B4C  22DA               	addwfc	fsr2h,f,c
  3497  005B4E  0EFF               	movlw	-1
  3498  005B50  006F FF8F FFDF     	movff	plusw1,indf2
  3499                           
  3500                           ; BSR set to: 57
  3501  005B56  2A31               	incf	_uart2RxHead,f,c	;volatile
  3502                           
  3503                           ; BSR set to: 57
  3504                           ;mcc_generated_files/uart2.c: 261:  if (sizeof(uart2RxBuffer) <= uart2RxHead) {
  3505  005B58  0E3F               	movlw	63
  3506  005B5A  6431               	cpfsgt	_uart2RxHead,c
  3507  005B5C  D001               	goto	l5759
  3508                           
  3509                           ; BSR set to: 57
  3510                           ;mcc_generated_files/uart2.c: 262:   uart2RxHead = 0;
  3511  005B5E  6A31               	clrf	_uart2RxHead,c	;volatile
  3512  005B60                     l5759:
  3513                           
  3514                           ; BSR set to: 57
  3515                           ;mcc_generated_files/uart2.c: 265:  uart2RxCount++;
  3516  005B60  2A2F               	incf	_uart2RxCount,f,c	;volatile
  3517                           
  3518                           ; BSR set to: 57
  3519                           ;mcc_generated_files/uart2.c: 266:  PIE6bits.U2RXIE = 1;
  3520  005B62  8596               	bsf	150,2,b	;volatile
  3521                           
  3522                           ; BSR set to: 57
  3523                           ; _UART2_put_buffer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  3524  005B64  52E5               	movf	postdec1,f,c
  3525  005B66  0012               	return		;funcret
  3526  005B68                     __end_of_UART2_put_buffer:
  3527                           	opt callstack 0
  3528                           
  3529 ;; *************** function _UART2_is_tx_ready *****************
  3530 ;; Defined at:
  3531 ;;		line 142 in file "mcc_generated_files/uart2.c"
  3532 ;; Parameters:    Size  Location     Type
  3533 ;;		None
  3534 ;; Auto vars:     Size  Location     Type
  3535 ;;		None
  3536 ;; Return value:  Size  Location     Type
  3537 ;;                  1  [STACK] unsigned char 
  3538 ;; Registers used:
  3539 ;;		btemp
  3540 ;; Tracked objects:
  3541 ;;		On entry : 0/0
  3542 ;;		On exit  : 0/0
  3543 ;;		Unchanged: 0/0
  3544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3545 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3546 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3547 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3548 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3549 ;;Total ram usage:        0 bytes
  3550 ;; Hardware stack levels used:    1
  3551 ;; Hardware stack levels required when called:    3
  3552 ;; This function calls:
  3553 ;;		Nothing
  3554 ;; This function is called by:
  3555 ;;		_secs_send
  3556 ;; This function uses a reentrant model
  3557 ;;
  3558                           
  3559                           	psect	text5
  3560  006162                     __ptext5:
  3561                           	opt callstack 0
  3562  006162                     _UART2_is_tx_ready:
  3563                           	opt callstack 25
  3564                           
  3565                           ;mcc_generated_files/uart2.c: 144:     return uart2TxBufferRemaining;
  3566                           
  3567                           ; BSR set to: 57
  3568                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3569                           ;incstack = 0
  3570  006162  0060  F0C8  F03B   	movff	_uart2TxBufferRemaining,btemp	;volatile
  3571                           
  3572                           ; _UART2_is_tx_ready: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
  3573  006168  0012               	return		;funcret
  3574  00616A                     __end_of_UART2_is_tx_ready:
  3575                           	opt callstack 0
  3576                           
  3577 ;; *************** function _UART2_Write *****************
  3578 ;; Defined at:
  3579 ;;		line 172 in file "mcc_generated_files/uart2.c"
  3580 ;; Parameters:    Size  Location     Type
  3581 ;;  txData          1  [STACK] unsigned char 
  3582 ;; Auto vars:     Size  Location     Type
  3583 ;;		None
  3584 ;; Return value:  Size  Location     Type
  3585 ;;                  1  [STACK] void 
  3586 ;; Registers used:
  3587 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  3588 ;; Tracked objects:
  3589 ;;		On entry : 0/0
  3590 ;;		On exit  : 3F/39
  3591 ;;		Unchanged: 0/0
  3592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3593 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3594 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3595 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3596 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3597 ;;Total ram usage:        0 bytes
  3598 ;; Hardware stack levels used:    1
  3599 ;; Hardware stack levels required when called:    3
  3600 ;; This function calls:
  3601 ;;		Nothing
  3602 ;; This function is called by:
  3603 ;;		_secs_send
  3604 ;; This function uses a reentrant model
  3605 ;;
  3606                           
  3607                           	psect	text6
  3608  0058E4                     __ptext6:
  3609                           	opt callstack 0
  3610  0058E4                     _UART2_Write:
  3611                           	opt callstack 25
  3612                           
  3613                           ;mcc_generated_files/uart2.c: 174:     while(0 == uart2TxBufferRemaining)
  3614                           
  3615                           ;mcc_generated_files/uart2.c: 172: void UART2_Write(uint8_t txData);mcc_generated_files/
      +                          uart2.c: 173: {;mcc_generated_files/uart2.c: 174:     while(0 == uart2TxBufferRemaining)
  3616                           
  3617                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3618                           ;incstack = 0
  3619  0058E4  5032               	movf	_uart2TxBufferRemaining,w,c	;volatile
  3620  0058E6  B4D8               	btfsc	status,2,c
  3621  0058E8  D7FD               	goto	_UART2_Write
  3622                           
  3623                           ;mcc_generated_files/uart2.c: 178:     if(0 == PIE6bits.U2TXIE)
  3624  0058EA  0139               	movlb	57	; () banked
  3625  0058EC  B796               	btfsc	150,3,b	;volatile
  3626  0058EE  D005               	goto	l699
  3627                           
  3628                           ; BSR set to: 57
  3629                           ;mcc_generated_files/uart2.c: 179:     {;mcc_generated_files/uart2.c: 180:         U2TXB
      +                           = txData;
  3630                           ;stkvar	_txData @ sp[(0)+-1]
  3631  0058F0  0EFF               	movlw	-1
  3632  0058F2  006F FF8F FDD2     	movff	plusw1,15826	;volatile
  3633                           
  3634                           ;mcc_generated_files/uart2.c: 181:     }
  3635  0058F8  D011               	goto	l5747
  3636  0058FA                     l699:
  3637                           
  3638                           ; BSR set to: 57
  3639                           ;mcc_generated_files/uart2.c: 183:     {;mcc_generated_files/uart2.c: 184:         PIE6b
      +                          its.U2TXIE = 0;
  3640  0058FA  9796               	bcf	150,3,b	;volatile
  3641                           
  3642                           ; BSR set to: 57
  3643                           ;mcc_generated_files/uart2.c: 185:         uart2TxBuffer[uart2TxHead++] = txData;
  3644                           ;stkvar	_txData @ sp[(0)+-1]
  3645  0058FC  0E40               	movlw	low _uart2TxBuffer
  3646  0058FE  2434               	addwf	_uart2TxHead,w,c	;volatile
  3647  005900  6ED9               	movwf	fsr2l,c
  3648  005902  6ADA               	clrf	fsr2h,c
  3649  005904  0E02               	movlw	high _uart2TxBuffer
  3650  005906  22DA               	addwfc	fsr2h,f,c
  3651  005908  0EFF               	movlw	-1
  3652  00590A  006F FF8F FFDF     	movff	plusw1,indf2
  3653                           
  3654                           ; BSR set to: 57
  3655  005910  2A34               	incf	_uart2TxHead,f,c	;volatile
  3656                           
  3657                           ; BSR set to: 57
  3658                           ;mcc_generated_files/uart2.c: 186:         if(sizeof(uart2TxBuffer) <= uart2TxHead)
  3659  005912  0E3F               	movlw	63
  3660  005914  6434               	cpfsgt	_uart2TxHead,c
  3661  005916  D001               	goto	l5745
  3662                           
  3663                           ; BSR set to: 57
  3664                           ;mcc_generated_files/uart2.c: 187:         {;mcc_generated_files/uart2.c: 188:          
      +                             uart2TxHead = 0;
  3665  005918  6A34               	clrf	_uart2TxHead,c	;volatile
  3666  00591A                     l5745:
  3667                           
  3668                           ; BSR set to: 57
  3669                           ;mcc_generated_files/uart2.c: 190:         uart2TxBufferRemaining--;
  3670  00591A  0632               	decf	_uart2TxBufferRemaining,f,c	;volatile
  3671  00591C                     l5747:
  3672                           
  3673                           ; BSR set to: 57
  3674                           ;mcc_generated_files/uart2.c: 192:     PIE6bits.U2TXIE = 1;
  3675  00591C  8796               	bsf	150,3,b	;volatile
  3676                           
  3677                           ; BSR set to: 57
  3678                           ; _UART2_Write: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, a
      +                          rgsize = 1, vargsize = 0
  3679  00591E  52E5               	movf	postdec1,f,c
  3680  005920  0012               	return		;funcret
  3681  005922                     __end_of_UART2_Write:
  3682                           	opt callstack 0
  3683                           
  3684 ;; *************** function _UART1_put_buffer *****************
  3685 ;; Defined at:
  3686 ;;		line 250 in file "mcc_generated_files/uart1.c"
  3687 ;; Parameters:    Size  Location     Type
  3688 ;;  bufData         1  [STACK] unsigned char 
  3689 ;; Auto vars:     Size  Location     Type
  3690 ;;		None
  3691 ;; Return value:  Size  Location     Type
  3692 ;;                  1  [STACK] void 
  3693 ;; Registers used:
  3694 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  3695 ;; Tracked objects:
  3696 ;;		On entry : 0/39
  3697 ;;		On exit  : 3F/39
  3698 ;;		Unchanged: 0/0
  3699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3700 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3701 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3702 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3703 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3704 ;;Total ram usage:        0 bytes
  3705 ;; Hardware stack levels used:    1
  3706 ;; Hardware stack levels required when called:    3
  3707 ;; This function calls:
  3708 ;;		Nothing
  3709 ;; This function is called by:
  3710 ;;		_t_protocol
  3711 ;;		_secs_send
  3712 ;; This function uses a reentrant model
  3713 ;;
  3714                           
  3715                           	psect	text7
  3716  005B68                     __ptext7:
  3717                           	opt callstack 0
  3718  005B68                     _UART1_put_buffer:
  3719                           	opt callstack 25
  3720                           
  3721                           ;mcc_generated_files/uart1.c: 250: void UART1_put_buffer(uint8_t bufData);mcc_generated_
      +                          files/uart1.c: 251: {;mcc_generated_files/uart1.c: 252:  PIE3bits.U1RXIE = 0;
  3722                           
  3723                           ; BSR set to: 57
  3724                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3725                           ;incstack = 0
  3726  005B68  0139               	movlb	57	; () banked
  3727  005B6A  9793               	bcf	147,3,b	;volatile
  3728                           
  3729                           ; BSR set to: 57
  3730                           ;mcc_generated_files/uart1.c: 253:  uart1RxBuffer[uart1RxHead++] = bufData;
  3731                           ;stkvar	_bufData @ sp[(0)+-1]
  3732  005B6C  0E80               	movlw	low _uart1RxBuffer
  3733  005B6E  2437               	addwf	_uart1RxHead,w,c	;volatile
  3734  005B70  6ED9               	movwf	fsr2l,c
  3735  005B72  6ADA               	clrf	fsr2h,c
  3736  005B74  0E02               	movlw	high _uart1RxBuffer
  3737  005B76  22DA               	addwfc	fsr2h,f,c
  3738  005B78  0EFF               	movlw	-1
  3739  005B7A  006F FF8F FFDF     	movff	plusw1,indf2
  3740                           
  3741                           ; BSR set to: 57
  3742  005B80  2A37               	incf	_uart1RxHead,f,c	;volatile
  3743                           
  3744                           ; BSR set to: 57
  3745                           ;mcc_generated_files/uart1.c: 254:  if (sizeof(uart1RxBuffer) <= uart1RxHead) {
  3746  005B82  0E3F               	movlw	63
  3747  005B84  6437               	cpfsgt	_uart1RxHead,c
  3748  005B86  D001               	goto	l5723
  3749                           
  3750                           ; BSR set to: 57
  3751                           ;mcc_generated_files/uart1.c: 255:   uart1RxHead = 0;
  3752  005B88  6A37               	clrf	_uart1RxHead,c	;volatile
  3753  005B8A                     l5723:
  3754                           
  3755                           ; BSR set to: 57
  3756                           ;mcc_generated_files/uart1.c: 258:  uart1RxCount++;
  3757  005B8A  2A35               	incf	_uart1RxCount,f,c	;volatile
  3758                           
  3759                           ; BSR set to: 57
  3760                           ;mcc_generated_files/uart1.c: 259:  PIE3bits.U1RXIE = 1;
  3761  005B8C  8793               	bsf	147,3,b	;volatile
  3762                           
  3763                           ; BSR set to: 57
  3764                           ; _UART1_put_buffer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  3765  005B8E  52E5               	movf	postdec1,f,c
  3766  005B90  0012               	return		;funcret
  3767  005B92                     __end_of_UART1_put_buffer:
  3768                           	opt callstack 0
  3769                           
  3770 ;; *************** function _UART1_is_tx_ready *****************
  3771 ;; Defined at:
  3772 ;;		line 151 in file "mcc_generated_files/uart1.c"
  3773 ;; Parameters:    Size  Location     Type
  3774 ;;		None
  3775 ;; Auto vars:     Size  Location     Type
  3776 ;;		None
  3777 ;; Return value:  Size  Location     Type
  3778 ;;                  1  [STACK] unsigned char 
  3779 ;; Registers used:
  3780 ;;		btemp
  3781 ;; Tracked objects:
  3782 ;;		On entry : 0/0
  3783 ;;		On exit  : 0/0
  3784 ;;		Unchanged: 0/0
  3785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3786 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3787 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3789 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3790 ;;Total ram usage:        0 bytes
  3791 ;; Hardware stack levels used:    1
  3792 ;; Hardware stack levels required when called:    3
  3793 ;; This function calls:
  3794 ;;		Nothing
  3795 ;; This function is called by:
  3796 ;;		_secs_send
  3797 ;; This function uses a reentrant model
  3798 ;;
  3799                           
  3800                           	psect	text8
  3801  00616A                     __ptext8:
  3802                           	opt callstack 0
  3803  00616A                     _UART1_is_tx_ready:
  3804                           	opt callstack 25
  3805                           
  3806                           ;mcc_generated_files/uart1.c: 153:  return uart1TxBufferRemaining;
  3807                           
  3808                           ; BSR set to: 57
  3809                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3810                           ;incstack = 0
  3811  00616A  0060  F0E0  F03B   	movff	_uart1TxBufferRemaining,btemp	;volatile
  3812                           
  3813                           ; _UART1_is_tx_ready: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
  3814  006170  0012               	return		;funcret
  3815  006172                     __end_of_UART1_is_tx_ready:
  3816                           	opt callstack 0
  3817                           
  3818 ;; *************** function _secs_II_message *****************
  3819 ;; Defined at:
  3820 ;;		line 465 in file "gemsecs.c"
  3821 ;; Parameters:    Size  Location     Type
  3822 ;;  stream          1  [STACK] unsigned char 
  3823 ;;  function        1  [STACK] unsigned char 
  3824 ;; Auto vars:     Size  Location     Type
  3825 ;;		None
  3826 ;; Return value:  Size  Location     Type
  3827 ;;                  7  [STACK] struct response_type
  3828 ;; Registers used:
  3829 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11
  3830 ;; Tracked objects:
  3831 ;;		On entry : 3F/0
  3832 ;;		On exit  : 3E/0
  3833 ;;		Unchanged: 0/0
  3834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3835 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3836 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3838 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3839 ;;Total ram usage:        0 bytes
  3840 ;; Hardware stack levels used:    1
  3841 ;; Hardware stack levels required when called:    3
  3842 ;; This function calls:
  3843 ;;		Nothing
  3844 ;; This function is called by:
  3845 ;;		_t_protocol
  3846 ;; This function uses a reentrant model
  3847 ;;
  3848                           
  3849                           	psect	text9
  3850  0042F4                     __ptext9:
  3851                           	opt callstack 0
  3852  0042F4                     _secs_II_message:
  3853                           	opt callstack 0
  3854                           
  3855                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsize = 7 var
      +                          gsize = 0, retsize = 7 argfudge = 5
  3856  0042F4  0E05               	movlw	5
  3857  0042F6  26E1               	addwf	fsr1l,f,c
  3858  0042F8  0E00               	movlw	0
  3859  0042FA  22E2               	addwfc	fsr1h,f,c
  3860                           
  3861                           ;gemsecs.c: 465: response_type secs_II_message(uint8_t stream, uint8_t function);gemsecs
      +                          .c: 466: {;gemsecs.c: 467:  static response_type block;;gemsecs.c: 469:  V.abort = LINK_
      +                          ERROR_NONE;
  3862                           
  3863                           ;incstack = 0
  3864  0042FC  0100               	movlb	0	; () banked
  3865  0042FE  6BB7               	clrf	(_V+80)& (0+255),b
  3866                           
  3867                           ;gemsecs.c: 470:  V.queue = 0;
  3868  004300  99BE               	bcf	(_V+87)& (0+255),4,b
  3869                           
  3870                           ;gemsecs.c: 471:  block.respond = 0;
  3871  004302  9007               	bcf	secs_II_message@block+6,0,c
  3872                           
  3873                           ;gemsecs.c: 473:  switch (stream) {
  3874  004304  D0F3               	goto	l6209
  3875  004306                     l6077:
  3876                           
  3877                           ; BSR set to: 0
  3878                           ;gemsecs.c: 477:    block.header = (uint8_t*) & H12[0];
  3879  004306  0E41               	movlw	low _H12
  3880  004308  6E01               	movwf	secs_II_message@block,c
  3881  00430A  0E01               	movlw	high _H12
  3882  00430C  6E02               	movwf	secs_II_message@block+1,c
  3883                           
  3884                           ; BSR set to: 0
  3885                           ;gemsecs.c: 478:    block.length = sizeof(header12);
  3886  00430E  0E0F               	movlw	15
  3887  004310  6E03               	movwf	secs_II_message@block+2,c
  3888                           
  3889                           ; BSR set to: 0
  3890                           ;gemsecs.c: 479:    H12[0].block.block.systemb = V.systemb;
  3891  004312  C0B0  F145         	movff	_V+73,_H12+4
  3892  004316  C0B1  F146         	movff	_V+74,_H12+5
  3893  00431A  C0B2  F147         	movff	_V+75,_H12+6
  3894  00431E  C0B3  F148         	movff	_V+76,_H12+7
  3895                           
  3896                           ; BSR set to: 0
  3897                           ;gemsecs.c: 480:    H10[0].block.block.systemb = V.systemb;
  3898  004322  C0B0  F102         	movff	_V+73,_H10+2
  3899  004326  C0B1  F103         	movff	_V+74,_H10+3
  3900  00432A  C0B2  F104         	movff	_V+75,_H10+4
  3901  00432E  C0B3  F105         	movff	_V+76,_H10+5
  3902                           
  3903                           ; BSR set to: 0
  3904                           ;gemsecs.c: 481:    block.respond = 1;
  3905  004332  8007               	bsf	secs_II_message@block+6,0,c
  3906                           
  3907                           ; BSR set to: 0
  3908                           ;gemsecs.c: 482:    block.reply = (uint8_t*) & H10[0];
  3909  004334  0E00               	movlw	low _H10
  3910  004336  6E04               	movwf	secs_II_message@block+3,c
  3911  004338  0E01               	movlw	high _H10
  3912  00433A  6E05               	movwf	secs_II_message@block+4,c
  3913                           
  3914                           ;gemsecs.c: 483:    block.reply_length = sizeof(header10);
  3915  00433C  0E0D               	movlw	13
  3916  00433E                     L8:
  3917  00433E  6E06               	movwf	secs_II_message@block+5,c
  3918                           
  3919                           ; BSR set to: 0
  3920                           ;gemsecs.c: 484:    V.queue = 1;
  3921  004340  89BE               	bsf	(_V+87)& (0+255),4,b
  3922                           
  3923                           ;gemsecs.c: 485:    break;
  3924  004342  D0ED               	goto	l6211
  3925  004344                     l6091:
  3926                           
  3927                           ; BSR set to: 0
  3928                           ;gemsecs.c: 487:    block.header = (uint8_t*) & H14[0];
  3929  004344  0E8E               	movlw	low _H14
  3930  004346  6E01               	movwf	secs_II_message@block,c
  3931  004348  0E01               	movlw	high _H14
  3932  00434A  6E02               	movwf	secs_II_message@block+1,c
  3933                           
  3934                           ; BSR set to: 0
  3935                           ;gemsecs.c: 488:    block.length = sizeof(header14);
  3936  00434C  0E11               	movlw	17
  3937  00434E  6E03               	movwf	secs_II_message@block+2,c
  3938                           
  3939                           ; BSR set to: 0
  3940                           ;gemsecs.c: 489:    H14[0].block.block.systemb = V.systemb;
  3941  004350  C0B0  F194         	movff	_V+73,_H14+6
  3942  004354  C0B1  F195         	movff	_V+74,_H14+7
  3943  004358  C0B2  F196         	movff	_V+75,_H14+8
  3944  00435C  C0B3  F197         	movff	_V+76,_H14+9
  3945                           
  3946                           ;gemsecs.c: 490:    break;
  3947  004360  D0DE               	goto	l6211
  3948  004362                     l6097:
  3949                           
  3950                           ; BSR set to: 0
  3951                           ;gemsecs.c: 492:    block.header = (uint8_t*) & H17[0];
  3952  004362  0E7A               	movlw	low _H17
  3953  004364  6E01               	movwf	secs_II_message@block,c
  3954  004366  0E01               	movlw	high _H17
  3955  004368  6E02               	movwf	secs_II_message@block+1,c
  3956                           
  3957                           ; BSR set to: 0
  3958                           ;gemsecs.c: 493:    block.length = sizeof(header17);
  3959  00436A  0E14               	movlw	20
  3960  00436C  6E03               	movwf	secs_II_message@block+2,c
  3961                           
  3962                           ; BSR set to: 0
  3963                           ;gemsecs.c: 494:    H17[0].block.block.systemb = V.systemb;
  3964  00436E  C0B0  F183         	movff	_V+73,_H17+9
  3965  004372  C0B1  F184         	movff	_V+74,_H17+10
  3966  004376  C0B2  F185         	movff	_V+75,_H17+11
  3967  00437A  C0B3  F186         	movff	_V+76,_H17+12
  3968                           
  3969                           ; BSR set to: 0
  3970                           ;gemsecs.c: 495:    H12[1].block.block.systemb = V.systemb;
  3971  00437E  C0B0  F154         	movff	_V+73,_H12+19
  3972  004382  C0B1  F155         	movff	_V+74,_H12+20
  3973  004386  C0B2  F156         	movff	_V+75,_H12+21
  3974  00438A  C0B3  F157         	movff	_V+76,_H12+22
  3975                           
  3976                           ; BSR set to: 0
  3977                           ;gemsecs.c: 496:    block.respond = 1;
  3978  00438E  8007               	bsf	secs_II_message@block+6,0,c
  3979                           
  3980                           ; BSR set to: 0
  3981                           ;gemsecs.c: 497:    block.reply = (uint8_t*) & H12[1];
  3982  004390  0E50               	movlw	low (_H12+15)
  3983  004392  6E04               	movwf	secs_II_message@block+3,c
  3984  004394  0E01               	movlw	high (_H12+15)
  3985  004396  6E05               	movwf	secs_II_message@block+4,c
  3986                           
  3987                           ;gemsecs.c: 498:    block.reply_length = sizeof(header12);
  3988  004398  0E0F               	movlw	15
  3989  00439A  D7D1               	goto	L8
  3990  00439C                     l6111:
  3991                           
  3992                           ; BSR set to: 0
  3993                           ;gemsecs.c: 502:    block.header = (uint8_t*) & H10[2];
  3994  00439C  0E1A               	movlw	low (_H10+26)
  3995  00439E  6E01               	movwf	secs_II_message@block,c
  3996  0043A0  0E01               	movlw	high (_H10+26)
  3997  0043A2  6E02               	movwf	secs_II_message@block+1,c
  3998                           
  3999                           ; BSR set to: 0
  4000                           ;gemsecs.c: 503:    block.length = sizeof(header10);
  4001  0043A4  0E0D               	movlw	13
  4002  0043A6  6E03               	movwf	secs_II_message@block+2,c
  4003                           
  4004                           ; BSR set to: 0
  4005                           ;gemsecs.c: 504:    H10[2].block.block.systemb = V.systemb;
  4006  0043A8  C0B0  F11C         	movff	_V+73,_H10+28
  4007  0043AC  C0B1  F11D         	movff	_V+74,_H10+29
  4008  0043B0  C0B2  F11E         	movff	_V+75,_H10+30
  4009  0043B4  C0B3  F11F         	movff	_V+76,_H10+31
  4010                           
  4011                           ; BSR set to: 0
  4012                           ;gemsecs.c: 505:    V.abort = LINK_ERROR_ABORT;
  4013  0043B8  0E07               	movlw	7
  4014  0043BA  6FB7               	movwf	(_V+80)& (0+255),b
  4015                           
  4016                           ;gemsecs.c: 506:    break;
  4017  0043BC  D0B0               	goto	l6211
  4018  0043BE                     l6121:
  4019                           
  4020                           ; BSR set to: 0
  4021                           ;stkvar	_function @ sp[(0)+-7]
  4022  0043BE  0EF9               	movlw	-7
  4023  0043C0  50E3               	movf	plusw1,w,c
  4024  0043C2  6E45               	movwf	btemp+10,c
  4025  0043C4  6A46               	clrf	btemp+11,c
  4026                           
  4027                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4028                           ; Switch size 1, requested type "simple"
  4029                           ; Number of cases is 1, Range of values is 0 to 0
  4030                           ; switch strategies available:
  4031                           ; Name         Instructions Cycles
  4032                           ; simple_byte            4     3 (average)
  4033                           ;	Chosen strategy is simple_byte
  4034  0043C6  5046               	movf	btemp+11,w,c
  4035  0043C8  0A00               	xorlw	0	; case 0
  4036  0043CA  A4D8               	btfss	status,2,c
  4037  0043CC  D7E7               	goto	l6111
  4038                           
  4039                           ; BSR set to: 0
  4040                           ; Switch size 1, requested type "simple"
  4041                           ; Number of cases is 3, Range of values is 1 to 13
  4042                           ; switch strategies available:
  4043                           ; Name         Instructions Cycles
  4044                           ; simple_byte           10     6 (average)
  4045                           ;	Chosen strategy is simple_byte
  4046  0043CE  5045               	movf	btemp+10,w,c
  4047  0043D0  0A01               	xorlw	1	; case 1
  4048  0043D2  B4D8               	btfsc	status,2,c
  4049  0043D4  D798               	goto	l6077
  4050  0043D6  0A02               	xorlw	2	; case 3
  4051  0043D8  B4D8               	btfsc	status,2,c
  4052  0043DA  D7B4               	goto	l6091
  4053  0043DC  0A0E               	xorlw	14	; case 13
  4054  0043DE  B4D8               	btfsc	status,2,c
  4055  0043E0  D7C0               	goto	l6097
  4056  0043E2  D7DC               	goto	l6111
  4057  0043E4                     l6123:
  4058                           
  4059                           ; BSR set to: 0
  4060                           ;gemsecs.c: 512:    block.header = (uint8_t*) & H24[0];
  4061  0043E4  0E5F               	movlw	low _H24
  4062  0043E6  6E01               	movwf	secs_II_message@block,c
  4063  0043E8  0E01               	movlw	high _H24
  4064  0043EA  6E02               	movwf	secs_II_message@block+1,c
  4065                           
  4066                           ; BSR set to: 0
  4067                           ;gemsecs.c: 513:    block.length = sizeof(header24);
  4068  0043EC  0E1B               	movlw	27
  4069  0043EE  6E03               	movwf	secs_II_message@block+2,c
  4070                           
  4071                           ; BSR set to: 0
  4072                           ;gemsecs.c: 514:    H24[0].block.block.systemb = V.systemb;
  4073  0043F0  C0B0  F16F         	movff	_V+73,_H24+16
  4074  0043F4  C0B1  F170         	movff	_V+74,_H24+17
  4075  0043F8  C0B2  F171         	movff	_V+75,_H24+18
  4076  0043FC  C0B3  F172         	movff	_V+76,_H24+19
  4077                           
  4078                           ; BSR set to: 0
  4079                           ;gemsecs.c: 515:    H24[0].data[12] = 12;
  4080  004400  0E0C               	movlw	12
  4081  004402  0101               	movlb	1	; () banked
  4082  004404  6F6D               	movwf	(_H24+14)& (0+255),b
  4083                           
  4084                           ;gemsecs.c: 516:    break;
  4085  004406  D08B               	goto	l6211
  4086  004408                     l6141:
  4087                           
  4088                           ; BSR set to: 0
  4089                           ;stkvar	_function @ sp[(0)+-7]
  4090  004408  0EF9               	movlw	-7
  4091  00440A  50E3               	movf	plusw1,w,c
  4092  00440C  6E45               	movwf	btemp+10,c
  4093  00440E  6A46               	clrf	btemp+11,c
  4094                           
  4095                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4096                           ; Switch size 1, requested type "simple"
  4097                           ; Number of cases is 1, Range of values is 0 to 0
  4098                           ; switch strategies available:
  4099                           ; Name         Instructions Cycles
  4100                           ; simple_byte            4     3 (average)
  4101                           ;	Chosen strategy is simple_byte
  4102  004410  5046               	movf	btemp+11,w,c
  4103  004412  0A00               	xorlw	0	; case 0
  4104  004414  A4D8               	btfss	status,2,c
  4105  004416  D7C2               	goto	l6111
  4106                           
  4107                           ; BSR set to: 0
  4108                           ; Switch size 1, requested type "simple"
  4109                           ; Number of cases is 1, Range of values is 17 to 17
  4110                           ; switch strategies available:
  4111                           ; Name         Instructions Cycles
  4112                           ; simple_byte            4     3 (average)
  4113                           ;	Chosen strategy is simple_byte
  4114  004418  5045               	movf	btemp+10,w,c
  4115  00441A  0A11               	xorlw	17	; case 17
  4116  00441C  B4D8               	btfsc	status,2,c
  4117  00441E  D7E2               	goto	l6123
  4118  004420  D7BD               	goto	l6111
  4119  004422                     l6143:
  4120                           
  4121                           ; BSR set to: 0
  4122                           ;gemsecs.c: 528:    block.header = (uint8_t*) & H13[0];
  4123  004422  0E9F               	movlw	low _H13
  4124  004424  6E01               	movwf	secs_II_message@block,c
  4125  004426  0E01               	movlw	high _H13
  4126  004428  6E02               	movwf	secs_II_message@block+1,c
  4127                           
  4128                           ; BSR set to: 0
  4129                           ;gemsecs.c: 529:    block.length = sizeof(header13);
  4130  00442A  0E10               	movlw	16
  4131  00442C  6E03               	movwf	secs_II_message@block+2,c
  4132                           
  4133                           ; BSR set to: 0
  4134                           ;gemsecs.c: 530:    H13[0].block.block.systemb = V.systemb;
  4135  00442E  C0B0  F1A4         	movff	_V+73,_H13+5
  4136  004432  C0B1  F1A5         	movff	_V+74,_H13+6
  4137  004436  C0B2  F1A6         	movff	_V+75,_H13+7
  4138  00443A  C0B3  F1A7         	movff	_V+76,_H13+8
  4139                           
  4140                           ;gemsecs.c: 531:    break;
  4141  00443E  D06F               	goto	l6211
  4142  004440                     l6159:
  4143                           
  4144                           ; BSR set to: 0
  4145                           ;stkvar	_function @ sp[(0)+-7]
  4146  004440  0EF9               	movlw	-7
  4147  004442  50E3               	movf	plusw1,w,c
  4148  004444  6E45               	movwf	btemp+10,c
  4149  004446  6A46               	clrf	btemp+11,c
  4150                           
  4151                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4152                           ; Switch size 1, requested type "simple"
  4153                           ; Number of cases is 1, Range of values is 0 to 0
  4154                           ; switch strategies available:
  4155                           ; Name         Instructions Cycles
  4156                           ; simple_byte            4     3 (average)
  4157                           ;	Chosen strategy is simple_byte
  4158  004448  5046               	movf	btemp+11,w,c
  4159  00444A  0A00               	xorlw	0	; case 0
  4160  00444C  A4D8               	btfss	status,2,c
  4161  00444E  D7A6               	goto	l6111
  4162                           
  4163                           ; BSR set to: 0
  4164                           ; Switch size 1, requested type "simple"
  4165                           ; Number of cases is 1, Range of values is 11 to 11
  4166                           ; switch strategies available:
  4167                           ; Name         Instructions Cycles
  4168                           ; simple_byte            4     3 (average)
  4169                           ;	Chosen strategy is simple_byte
  4170  004450  5045               	movf	btemp+10,w,c
  4171  004452  0A0B               	xorlw	11	; case 11
  4172  004454  B4D8               	btfsc	status,2,c
  4173  004456  D7E5               	goto	l6143
  4174  004458  D7A1               	goto	l6111
  4175  00445A                     l6171:
  4176                           
  4177                           ; BSR set to: 0
  4178                           ;stkvar	_function @ sp[(0)+-7]
  4179  00445A  0EF9               	movlw	-7
  4180  00445C  50E3               	movf	plusw1,w,c
  4181  00445E  6E45               	movwf	btemp+10,c
  4182  004460  6A46               	clrf	btemp+11,c
  4183                           
  4184                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4185                           ; Switch size 1, requested type "simple"
  4186                           ; Number of cases is 1, Range of values is 0 to 0
  4187                           ; switch strategies available:
  4188                           ; Name         Instructions Cycles
  4189                           ; simple_byte            4     3 (average)
  4190                           ;	Chosen strategy is simple_byte
  4191  004462  5046               	movf	btemp+11,w,c
  4192  004464  0A00               	xorlw	0	; case 0
  4193  004466  A4D8               	btfss	status,2,c
  4194  004468  D799               	goto	l6111
  4195                           
  4196                           ; BSR set to: 0
  4197                           ; Switch size 1, requested type "simple"
  4198                           ; Number of cases is 7, Range of values is 1 to 13
  4199                           ; switch strategies available:
  4200                           ; Name         Instructions Cycles
  4201                           ; simple_byte           22    12 (average)
  4202                           ;	Chosen strategy is simple_byte
  4203  00446A  5045               	movf	btemp+10,w,c
  4204  00446C  0A01               	xorlw	1	; case 1
  4205  00446E  B4D8               	btfsc	status,2,c
  4206  004470  D056               	goto	l6211
  4207  004472  0A02               	xorlw	2	; case 3
  4208  004474  B4D8               	btfsc	status,2,c
  4209  004476  D053               	goto	l6211
  4210  004478  0A06               	xorlw	6	; case 5
  4211  00447A  B4D8               	btfsc	status,2,c
  4212  00447C  D050               	goto	l6211
  4213  00447E  0A02               	xorlw	2	; case 7
  4214  004480  B4D8               	btfsc	status,2,c
  4215  004482  D04D               	goto	l6211
  4216  004484  0A0E               	xorlw	14	; case 9
  4217  004486  B4D8               	btfsc	status,2,c
  4218  004488  D04A               	goto	l6211
  4219  00448A  0A02               	xorlw	2	; case 11
  4220  00448C  B4D8               	btfsc	status,2,c
  4221  00448E  D047               	goto	l6211
  4222  004490  0A06               	xorlw	6	; case 13
  4223  004492  B4D8               	btfsc	status,2,c
  4224  004494  D044               	goto	l6211
  4225  004496  D782               	goto	l6111
  4226  004498                     l6173:
  4227                           
  4228                           ; BSR set to: 0
  4229                           ;gemsecs.c: 567:    block.header = (uint8_t*) & H12[0];
  4230  004498  0E41               	movlw	low _H12
  4231  00449A  6E01               	movwf	secs_II_message@block,c
  4232  00449C  0E01               	movlw	high _H12
  4233  00449E  6E02               	movwf	secs_II_message@block+1,c
  4234                           
  4235                           ; BSR set to: 0
  4236                           ;gemsecs.c: 568:    block.length = sizeof(header12);
  4237  0044A0  0E0F               	movlw	15
  4238  0044A2  6E03               	movwf	secs_II_message@block+2,c
  4239                           
  4240                           ; BSR set to: 0
  4241                           ;gemsecs.c: 569:    H12[0].block.block.systemb = V.systemb;
  4242  0044A4  C0B0  F145         	movff	_V+73,_H12+4
  4243  0044A8  C0B1  F146         	movff	_V+74,_H12+5
  4244  0044AC  C0B2  F147         	movff	_V+75,_H12+6
  4245  0044B0  C0B3  F148         	movff	_V+76,_H12+7
  4246                           
  4247                           ; BSR set to: 0
  4248                           ;gemsecs.c: 570:    H53[0].block.block.systemb = V.systemb;
  4249  0044B4  C0B0  F3B3         	movff	_V+73,_H53+45
  4250  0044B8  C0B1  F3B4         	movff	_V+74,_H53+46
  4251  0044BC  C0B2  F3B5         	movff	_V+75,_H53+47
  4252  0044C0  C0B3  F3B6         	movff	_V+76,_H53+48
  4253                           
  4254                           ; BSR set to: 0
  4255                           ;gemsecs.c: 571:    block.respond = 1;
  4256  0044C4  8007               	bsf	secs_II_message@block+6,0,c
  4257                           
  4258                           ; BSR set to: 0
  4259                           ;gemsecs.c: 572:    block.reply = (uint8_t*) & H53[0];
  4260  0044C6  0E86               	movlw	low _H53
  4261  0044C8  6E04               	movwf	secs_II_message@block+3,c
  4262  0044CA  0E03               	movlw	high _H53
  4263  0044CC  6E05               	movwf	secs_II_message@block+4,c
  4264                           
  4265                           ;gemsecs.c: 573:    block.reply_length = sizeof(header53);
  4266  0044CE  0E38               	movlw	56
  4267  0044D0  D736               	goto	L8
  4268  0044D2                     l6197:
  4269                           
  4270                           ; BSR set to: 0
  4271                           ;stkvar	_function @ sp[(0)+-7]
  4272  0044D2  0EF9               	movlw	-7
  4273  0044D4  50E3               	movf	plusw1,w,c
  4274  0044D6  6E45               	movwf	btemp+10,c
  4275  0044D8  6A46               	clrf	btemp+11,c
  4276                           
  4277                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4278                           ; Switch size 1, requested type "simple"
  4279                           ; Number of cases is 1, Range of values is 0 to 0
  4280                           ; switch strategies available:
  4281                           ; Name         Instructions Cycles
  4282                           ; simple_byte            4     3 (average)
  4283                           ;	Chosen strategy is simple_byte
  4284  0044DA  5046               	movf	btemp+11,w,c
  4285  0044DC  0A00               	xorlw	0	; case 0
  4286  0044DE  A4D8               	btfss	status,2,c
  4287  0044E0  D75D               	goto	l6111
  4288                           
  4289                           ; BSR set to: 0
  4290                           ; Switch size 1, requested type "simple"
  4291                           ; Number of cases is 1, Range of values is 1 to 1
  4292                           ; switch strategies available:
  4293                           ; Name         Instructions Cycles
  4294                           ; simple_byte            4     3 (average)
  4295                           ;	Chosen strategy is simple_byte
  4296  0044E2  5045               	movf	btemp+10,w,c
  4297  0044E4  0A01               	xorlw	1	; case 1
  4298  0044E6  B4D8               	btfsc	status,2,c
  4299  0044E8  D7D7               	goto	l6173
  4300  0044EA  D758               	goto	l6111
  4301  0044EC                     l6209:
  4302                           
  4303                           ; BSR set to: 0
  4304                           ;stkvar	_stream @ sp[(0)+-6]
  4305  0044EC  0EFA               	movlw	-6
  4306  0044EE  50E3               	movf	plusw1,w,c
  4307  0044F0  6E45               	movwf	btemp+10,c
  4308  0044F2  6A46               	clrf	btemp+11,c
  4309                           
  4310                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4311                           ; Switch size 1, requested type "simple"
  4312                           ; Number of cases is 1, Range of values is 0 to 0
  4313                           ; switch strategies available:
  4314                           ; Name         Instructions Cycles
  4315                           ; simple_byte            4     3 (average)
  4316                           ;	Chosen strategy is simple_byte
  4317  0044F4  5046               	movf	btemp+11,w,c
  4318  0044F6  0A00               	xorlw	0	; case 0
  4319  0044F8  A4D8               	btfss	status,2,c
  4320  0044FA  D750               	goto	l6111
  4321                           
  4322                           ; BSR set to: 0
  4323                           ; Switch size 1, requested type "simple"
  4324                           ; Number of cases is 5, Range of values is 1 to 10
  4325                           ; switch strategies available:
  4326                           ; Name         Instructions Cycles
  4327                           ; simple_byte           16     9 (average)
  4328                           ;	Chosen strategy is simple_byte
  4329  0044FC  5045               	movf	btemp+10,w,c
  4330  0044FE  0A01               	xorlw	1	; case 1
  4331  004500  B4D8               	btfsc	status,2,c
  4332  004502  D75D               	goto	l6121
  4333  004504  0A03               	xorlw	3	; case 2
  4334  004506  B4D8               	btfsc	status,2,c
  4335  004508  D77F               	goto	l6141
  4336  00450A  0A04               	xorlw	4	; case 6
  4337  00450C  B4D8               	btfsc	status,2,c
  4338  00450E  D798               	goto	l6159
  4339  004510  0A0F               	xorlw	15	; case 9
  4340  004512  B4D8               	btfsc	status,2,c
  4341  004514  D7A2               	goto	l6171
  4342  004516  0A03               	xorlw	3	; case 10
  4343  004518  B4D8               	btfsc	status,2,c
  4344  00451A  D7DB               	goto	l6197
  4345  00451C  D73F               	goto	l6111
  4346  00451E                     l6211:
  4347                           
  4348                           ;gemsecs.c: 592:  return(block);
  4349  00451E  EE20  F001         	lfsr	2,secs_II_message@block
  4350                           
  4351                           ;stkvar	?_secs_II_message @ sp[(0)+-7]
  4352  004522  0E07               	movlw	7
  4353  004524  6E3B               	movwf	btemp,c
  4354  004526  0EF9               	movlw	-7
  4355  004528                     us331999:
  4356  004528  006F FF7B FFE3     	movff	postinc2,plusw1
  4357  00452E  28E8               	incf	wreg,w,c
  4358  004530  2E3B               	decfsz	btemp,f,c
  4359  004532  D7FA               	bra	us331999
  4360                           
  4361                           ; _secs_II_message: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          7, argsize = 7, vargsize = 0
  4362  004534  0012               	return		;funcret
  4363  004536                     __end_of_secs_II_message:
  4364                           	opt callstack 0
  4365                           
  4366 ;; *************** function _sprintf *****************
  4367 ;; Defined at:
  4368 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_sprintf.c"
  4369 ;; Parameters:    Size  Location     Type
  4370 ;;  s               1  [STACK] PTR unsigned char 
  4371 ;;		 -> V(89), 
  4372 ;;  fmt             1  [STACK] PTR const unsigned char 
  4373 ;;		 -> STR_15(21), STR_14(19), STR_13(6), STR_12(17), 
  4374 ;;		 -> STR_11(19), STR_10(19), STR_9(20), STR_8(6), 
  4375 ;;		 -> STR_7(6), STR_6(14), STR_5(19), STR_4(15), 
  4376 ;;		 -> STR_2(12), STR_1(17), 
  4377 ;; Auto vars:     Size  Location     Type
  4378 ;;  f               5  [STACK] struct _IO_FILE
  4379 ;;  ap              2  [STACK] PTR void [1]
  4380 ;;		 -> ?_printf(2), ?_sprintf(2), 
  4381 ;;  ret             2    0        int 
  4382 ;; Return value:  Size  Location     Type
  4383 ;;                  2  [STACK] int 
  4384 ;; Registers used:
  4385 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  4386 ;; Tracked objects:
  4387 ;;		On entry : 4/0
  4388 ;;		On exit  : 3F/0
  4389 ;;		Unchanged: 0/0
  4390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4391 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4392 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4393 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4394 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4395 ;;Total ram usage:        0 bytes
  4396 ;; Hardware stack levels used:    1
  4397 ;; Hardware stack levels required when called:   11
  4398 ;; This function calls:
  4399 ;;		_vfprintf
  4400 ;; This function is called by:
  4401 ;;		_main
  4402 ;; This function uses a reentrant model
  4403 ;;
  4404                           
  4405                           	psect	text10
  4406  004DB2                     __ptext10:
  4407                           	opt callstack 0
  4408  004DB2                     _sprintf:
  4409                           	opt callstack 0
  4410                           
  4411                           ; autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 2 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  4412  004DB2  0E07               	movlw	7
  4413  004DB4  26E1               	addwf	fsr1l,f,c
  4414  004DB6  0E00               	movlw	0
  4415  004DB8  22E2               	addwfc	fsr1h,f,c
  4416                           
  4417                           ;stkvar	?_sprintf @ sp[(-7)+-3]
  4418                           
  4419                           ;incstack = 0
  4420  004DBA  0EF6               	movlw	246
  4421  004DBC  24E1               	addwf	fsr1l,w,c
  4422  004DBE  6E45               	movwf	btemp+10,c
  4423  004DC0  0EFF               	movlw	255
  4424  004DC2  20E2               	addwfc	fsr1h,w,c
  4425  004DC4  6E46               	movwf	btemp+11,c
  4426                           
  4427                           ;stkvar	_ap @ sp[(-7)+5]
  4428  004DC6  0EFF               	movlw	-1
  4429  004DC8  0060  F11B  FFE3   	movff	btemp+11,plusw1
  4430  004DCE  0EFE               	movlw	-2
  4431  004DD0  0060  F117  FFE3   	movff	btemp+10,plusw1
  4432                           
  4433                           ;stkvar	_s @ sp[(-7)+-2]
  4434  004DD6  0EF7               	movlw	-9
  4435  004DD8  006F FF8C  F046    	movff	plusw1,btemp+11
  4436                           
  4437                           ;stkvar	_f @ sp[(-7)+0]
  4438  004DDE  0EF9               	movlw	-7
  4439  004DE0  0060  F11B  FFE3   	movff	btemp+11,plusw1
  4440                           
  4441                           ;stkvar	_f @ sp[(-7)+0]
  4442  004DE6  0EFA               	movlw	250
  4443  004DE8  24E1               	addwf	fsr1l,w,c
  4444  004DEA  6ED9               	movwf	fsr2l,c
  4445  004DEC  0EFF               	movlw	255
  4446  004DEE  20E2               	addwfc	fsr1h,w,c
  4447  004DF0  6EDA               	movwf	fsr2h,c
  4448  004DF2  0E00               	movlw	0
  4449  004DF4  6EDE               	movwf	postinc2,c
  4450  004DF6  0E00               	movlw	0
  4451  004DF8  6EDD               	movwf	postdec2,c
  4452                           
  4453                           ;stkvar	_f @ sp[(-7)+0]
  4454  004DFA  0EFC               	movlw	252
  4455  004DFC  24E1               	addwf	fsr1l,w,c
  4456  004DFE  6ED9               	movwf	fsr2l,c
  4457  004E00  0EFF               	movlw	255
  4458  004E02  20E2               	addwfc	fsr1h,w,c
  4459  004E04  6EDA               	movwf	fsr2h,c
  4460  004E06  0E00               	movlw	0
  4461  004E08  6EDE               	movwf	postinc2,c
  4462  004E0A  0E00               	movlw	0
  4463  004E0C  6EDD               	movwf	postdec2,c
  4464                           
  4465                           ;stkvar	_ap @ sp[(-7)+5]
  4466  004E0E  0EFE               	movlw	254
  4467  004E10  24E1               	addwf	fsr1l,w,c
  4468  004E12  6E3B               	movwf	btemp,c
  4469  004E14  0EFF               	movlw	255
  4470  004E16  20E2               	addwfc	fsr1h,w,c
  4471  004E18  6E3C               	movwf	btemp+1,c
  4472  004E1A  0060  F0EF  FFE6   	movff	btemp,postinc1
  4473  004E20  0060  F0F3  FFE6   	movff	btemp+1,postinc1
  4474                           
  4475                           ;stkvar	_fmt @ sp[(-9)+-3]
  4476  004E26  0EF4               	movlw	-12
  4477  004E28  50E3               	movf	plusw1,w,c
  4478  004E2A  6EE6               	movwf	postinc1,c
  4479                           
  4480                           ;stkvar	_f @ sp[(-10)+0]
  4481  004E2C  0EF6               	movlw	246
  4482  004E2E  24E1               	addwf	fsr1l,w,c
  4483  004E30  6E3B               	movwf	btemp,c
  4484  004E32  0EFF               	movlw	255
  4485  004E34  20E2               	addwfc	fsr1h,w,c
  4486  004E36  6E3C               	movwf	btemp+1,c
  4487  004E38  0060  F0EF  FFE6   	movff	btemp,postinc1
  4488  004E3E  0060  F0F3  FFE6   	movff	btemp+1,postinc1
  4489  004E44  ECD9  F028         	call	_vfprintf	;wreg free
  4490                           
  4491                           ; BSR set to: 0
  4492                           ;stkvar	_f @ sp[(-7)+0]
  4493  004E48  0EFA               	movlw	250
  4494  004E4A  24E1               	addwf	fsr1l,w,c
  4495  004E4C  6ED9               	movwf	fsr2l,c
  4496  004E4E  0EFF               	movlw	255
  4497  004E50  20E2               	addwfc	fsr1h,w,c
  4498  004E52  6EDA               	movwf	fsr2h,c
  4499  004E54  50DF               	movf	indf2,w,c
  4500  004E56  6E46               	movwf	btemp+11,c
  4501                           
  4502                           ;stkvar	_s @ sp[(-7)+-2]
  4503  004E58  0EF7               	movlw	-9
  4504  004E5A  50E3               	movf	plusw1,w,c
  4505  004E5C  2446               	addwf	btemp+11,w,c
  4506  004E5E  6ED9               	movwf	fsr2l,c
  4507  004E60  6ADA               	clrf	fsr2h,c
  4508  004E62  0E00               	movlw	0
  4509  004E64  6EDF               	movwf	indf2,c
  4510                           
  4511                           ; BSR set to: 0
  4512                           ; _sprintf: autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, args
      +                          ize = 2, vargsize = 0
  4513  004E66  0EF9               	movlw	249
  4514  004E68  26E1               	addwf	fsr1l,f,c
  4515  004E6A  0EFF               	movlw	255
  4516  004E6C  22E2               	addwfc	fsr1h,f,c
  4517  004E6E  52E5               	movf	postdec1,f,c
  4518  004E70  50E7               	movf	indf1,w,c
  4519  004E72  5EE1               	subwf	fsr1l,f,c
  4520  004E74  0E00               	movlw	0
  4521  004E76  5AE2               	subwfb	fsr1h,f,c
  4522  004E78  0012               	return		;funcret
  4523  004E7A                     __end_of_sprintf:
  4524                           	opt callstack 0
  4525                           
  4526 ;; *************** function _r_protocol *****************
  4527 ;; Defined at:
  4528 ;;		line 197 in file "gemsecs.c"
  4529 ;; Parameters:    Size  Location     Type
  4530 ;;  r_link          1  [STACK] PTR enum E16164
  4531 ;;		 -> V(89), 
  4532 ;; Auto vars:     Size  Location     Type
  4533 ;;  rxData          1  [STACK] unsigned char 
  4534 ;; Return value:  Size  Location     Type
  4535 ;;                  1  [STACK] enum E16904
  4536 ;; Registers used:
  4537 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl, p
      +rodh
  4538 ;; Tracked objects:
  4539 ;;		On entry : 0/0
  4540 ;;		On exit  : 0/0
  4541 ;;		Unchanged: 0/0
  4542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4543 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4544 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4545 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4546 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4547 ;;Total ram usage:        0 bytes
  4548 ;; Hardware stack levels used:    1
  4549 ;; Hardware stack levels required when called:    5
  4550 ;; This function calls:
  4551 ;;		_StartTimer
  4552 ;;		_TimerDone
  4553 ;;		_UART1_Read
  4554 ;;		_UART1_Write
  4555 ;;		_UART1_is_rx_ready
  4556 ;;		_WaitMs
  4557 ;;		_run_checksum
  4558 ;; This function is called by:
  4559 ;;		_main
  4560 ;; This function uses a reentrant model
  4561 ;;
  4562                           
  4563                           	psect	text11
  4564  00360C                     __ptext11:
  4565                           	opt callstack 0
  4566  00360C                     _r_protocol:
  4567                           	opt callstack 0
  4568                           
  4569                           ; BSR set to: 0
  4570                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4571  00360C  52E6               	movf	postinc1,f,c
  4572                           
  4573                           ;gemsecs.c: 197: LINK_STATES r_protocol(LINK_STATES * r_link);gemsecs.c: 198: {;gemsecs.
      +                          c: 199:  uint8_t rxData;;gemsecs.c: 200:  static uint8_t rxData_l = 0, retry = 3;;gemsec
      +                          s.c: 202:  switch (*r_link) {
  4574                           
  4575                           ;incstack = 0
  4576  00360E  D13C               	goto	l6601
  4577  003610                     l6495:
  4578                           
  4579                           ;gemsecs.c: 204:   if (UART1_is_rx_ready()) {
  4580  003610  ECBD  F030         	call	_UART1_is_rx_ready	;wreg free
  4581  003614  503B               	movf	btemp,w,c
  4582  003616  B4D8               	btfsc	status,2,c
  4583  003618  D158               	goto	l6603
  4584                           
  4585                           ;gemsecs.c: 205:    rxData = UART1_Read();
  4586  00361A  ECCF  F02C         	call	_UART1_Read	;wreg free
  4587                           
  4588                           ;stkvar	_rxData @ sp[(-1)+0]
  4589  00361E  0EFF               	movlw	-1
  4590  003620  0060  F0EF  FFE3   	movff	btemp,plusw1
  4591                           
  4592                           ; BSR set to: 57
  4593                           ;gemsecs.c: 206:    if (rxData == 0x05) {
  4594                           ;stkvar	_rxData @ sp[(-1)+0]
  4595  003626  0EFF               	movlw	-1
  4596  003628  006F FF8C  F03B    	movff	plusw1,btemp
  4597  00362E  0E05               	movlw	5
  4598  003630  183B               	xorwf	btemp,w,c
  4599  003632  A4D8               	btfss	status,2,c
  4600  003634  D14A               	goto	l6603
  4601                           
  4602                           ; BSR set to: 57
  4603                           ;gemsecs.c: 207:     V.error = LINK_ERROR_NONE;
  4604  003636  0100               	movlb	0	; () banked
  4605  003638  6BB6               	clrf	(_V+79)& (0+255),b
  4606                           
  4607                           ; BSR set to: 0
  4608                           ;gemsecs.c: 208:     *r_link = LINK_STATE_ENQ;
  4609                           ;stkvar	_r_link @ sp[(-1)+-1]
  4610  00363A  0EFE               	movlw	-2
  4611  00363C  50E3               	movf	plusw1,w,c
  4612  00363E  6ED9               	movwf	fsr2l,c
  4613  003640  6ADA               	clrf	fsr2h,c
  4614  003642  0E01               	movlw	1
  4615  003644  D108               	goto	L13
  4616  003646                     l1597:
  4617                           
  4618                           ;gemsecs.c: 213:   rxData_l = 0;
  4619  003646  6A2C               	clrf	r_protocol@rxData_l,c
  4620                           
  4621                           ;gemsecs.c: 214:   UART1_Write(0x04);
  4622  003648  0E04               	movlw	4
  4623  00364A  6EE6               	movwf	postinc1,c
  4624  00364C  EC91  F02C         	call	_UART1_Write	;wreg free
  4625                           
  4626                           ; BSR set to: 57
  4627                           ;gemsecs.c: 215:   StartTimer(TMR_T2, 2000);
  4628  003650  0ED0               	movlw	208
  4629  003652  6EE6               	movwf	postinc1,c
  4630  003654  0E07               	movlw	7
  4631  003656  6EE6               	movwf	postinc1,c
  4632  003658  0E02               	movlw	2
  4633  00365A  6EE6               	movwf	postinc1,c
  4634  00365C  EC0D  F02D         	call	_StartTimer	;wreg free
  4635                           
  4636                           ;gemsecs.c: 216:   *r_link = LINK_STATE_EOT;
  4637                           ;stkvar	_r_link @ sp[(-1)+-1]
  4638  003660  0EFE               	movlw	-2
  4639  003662  50E3               	movf	plusw1,w,c
  4640  003664  6ED9               	movwf	fsr2l,c
  4641  003666  6ADA               	clrf	fsr2h,c
  4642  003668  0E02               	movlw	2
  4643  00366A  D0F5               	goto	L13
  4644  00366C                     l6511:
  4645                           
  4646                           ;gemsecs.c: 224:   if (TimerDone(TMR_T2)) {
  4647  00366C  0E02               	movlw	2
  4648  00366E  6EE6               	movwf	postinc1,c
  4649  003670  EC7F  F02F         	call	_TimerDone	;wreg free
  4650  003674  503B               	movf	btemp,w,c
  4651  003676  B4D8               	btfsc	status,2,c
  4652  003678  D017               	goto	l6521
  4653                           
  4654                           ;gemsecs.c: 225:    if (!retry--) {
  4655  00367A  065D               	decf	r_protocol@retry,f,c
  4656  00367C  285D               	incf	r_protocol@retry,w,c
  4657  00367E  A4D8               	btfss	status,2,c
  4658  003680  D00D               	goto	l6519
  4659                           
  4660                           ;gemsecs.c: 226:     V.error = LINK_ERROR_T2;
  4661  003682  0E02               	movlw	2
  4662  003684  0100               	movlb	0	; () banked
  4663  003686  6FB6               	movwf	(_V+79)& (0+255),b
  4664                           
  4665                           ;gemsecs.c: 227:     V.failed_receive = 1;
  4666  003688  51BE               	movf	(_V+87)& (0+255),w,b
  4667  00368A  0BF0               	andlw	-16
  4668  00368C  0901               	iorlw	1
  4669  00368E  6FBE               	movwf	(_V+87)& (0+255),b
  4670                           
  4671                           ; BSR set to: 0
  4672                           ;gemsecs.c: 228:     *r_link = LINK_STATE_NAK;
  4673                           ;stkvar	_r_link @ sp[(-1)+-1]
  4674  003690  0EFE               	movlw	-2
  4675  003692  50E3               	movf	plusw1,w,c
  4676  003694  6ED9               	movwf	fsr2l,c
  4677  003696  6ADA               	clrf	fsr2h,c
  4678  003698  0E05               	movlw	5
  4679  00369A  D0DD               	goto	L13
  4680  00369C                     l6519:
  4681                           
  4682                           ;gemsecs.c: 230:     *r_link = LINK_STATE_IDLE;
  4683                           ;stkvar	_r_link @ sp[(-1)+-1]
  4684  00369C  0EFE               	movlw	-2
  4685  00369E  50E3               	movf	plusw1,w,c
  4686  0036A0  6ED9               	movwf	fsr2l,c
  4687  0036A2  6ADA               	clrf	fsr2h,c
  4688  0036A4  0E00               	movlw	0
  4689  0036A6  D0D7               	goto	L13
  4690  0036A8                     l6521:
  4691                           
  4692                           ;gemsecs.c: 233:    if (UART1_is_rx_ready()) {
  4693  0036A8  ECBD  F030         	call	_UART1_is_rx_ready	;wreg free
  4694  0036AC  503B               	movf	btemp,w,c
  4695  0036AE  B4D8               	btfsc	status,2,c
  4696  0036B0  D10C               	goto	l6603
  4697                           
  4698                           ;gemsecs.c: 234:     rxData = UART1_Read();
  4699  0036B2  ECCF  F02C         	call	_UART1_Read	;wreg free
  4700                           
  4701                           ;stkvar	_rxData @ sp[(-1)+0]
  4702  0036B6  0EFF               	movlw	-1
  4703  0036B8  0060  F0EF  FFE3   	movff	btemp,plusw1
  4704                           
  4705                           ; BSR set to: 57
  4706                           ;gemsecs.c: 235:     if (rxData_l == 0) {
  4707  0036BE  502C               	movf	r_protocol@rxData_l,w,c
  4708  0036C0  A4D8               	btfss	status,2,c
  4709  0036C2  D00C               	goto	l6533
  4710                           
  4711                           ; BSR set to: 57
  4712                           ;gemsecs.c: 236:      r_block.length = rxData;
  4713                           ;stkvar	_rxData @ sp[(-1)+0]
  4714  0036C4  0EFF               	movlw	-1
  4715  0036C6  006F FF8C  F0CC    	movff	plusw1,_r_block+12
  4716                           
  4717                           ; BSR set to: 57
  4718                           ;gemsecs.c: 237:      run_checksum(0, 1);
  4719  0036CC  0E01               	movlw	1
  4720  0036CE  6EE6               	movwf	postinc1,c
  4721  0036D0  0E00               	movlw	0
  4722  0036D2  6EE6               	movwf	postinc1,c
  4723  0036D4  EC47  F02D         	call	_run_checksum	;wreg free
  4724                           
  4725                           ; BSR set to: 0
  4726                           ;gemsecs.c: 238:      rxData_l++;
  4727  0036D8  2A2C               	incf	r_protocol@rxData_l,f,c
  4728                           
  4729                           ;gemsecs.c: 239:     } else {
  4730  0036DA  D0F7               	goto	l6603
  4731  0036DC                     l6533:
  4732                           
  4733                           ; BSR set to: 57
  4734                           ;gemsecs.c: 243:      if (rxData_l <= sizeof(block10))
  4735  0036DC  0E0B               	movlw	11
  4736  0036DE  602C               	cpfslt	r_protocol@rxData_l,c
  4737  0036E0  D00C               	goto	l6537
  4738                           
  4739                           ; BSR set to: 57
  4740                           ;gemsecs.c: 244:       H10[1].block.b[sizeof(block10) - rxData_l] = rxData;
  4741                           ;stkvar	_rxData @ sp[(-1)+0]
  4742  0036E2  502C               	movf	r_protocol@rxData_l,w,c
  4743  0036E4  0819               	sublw	low (_H10+25)
  4744  0036E6  6ED9               	movwf	fsr2l,c
  4745  0036E8  0E00               	movlw	0
  4746  0036EA  A0D8               	btfss	status,0,c
  4747  0036EC  2AE8               	incf	wreg,f,c
  4748  0036EE  0801               	sublw	high (_H10+25)
  4749  0036F0  6EDA               	movwf	fsr2h,c
  4750  0036F2  0EFF               	movlw	-1
  4751  0036F4  006F FF8F FFDF     	movff	plusw1,indf2
  4752  0036FA                     l6537:
  4753                           
  4754                           ; BSR set to: 57
  4755                           ;gemsecs.c: 245:      if (rxData_l <= r_block.length)
  4756  0036FA  502C               	movf	r_protocol@rxData_l,w,c
  4757  0036FC  0100               	movlb	0	; () banked
  4758  0036FE  5DCC               	subwf	(_r_block+12)& (0+255),w,b
  4759  003700  A0D8               	btfss	status,0,c
  4760  003702  D00D               	goto	l6541
  4761                           
  4762                           ; BSR set to: 0
  4763                           ;gemsecs.c: 246:       V.r_checksum = run_checksum(rxData, 0);
  4764  003704  0E00               	movlw	0
  4765  003706  6EE6               	movwf	postinc1,c
  4766                           
  4767                           ;stkvar	_rxData @ sp[(-2)+0]
  4768  003708  0EFE               	movlw	-2
  4769  00370A  50E3               	movf	plusw1,w,c
  4770  00370C  6EE6               	movwf	postinc1,c
  4771  00370E  EC47  F02D         	call	_run_checksum	;wreg free
  4772  003712  0060  F0EC  F0B9   	movff	btemp,_V+82
  4773  003718  0060  F0F0  F0BA   	movff	btemp+1,_V+83
  4774  00371E                     l6541:
  4775                           
  4776                           ; BSR set to: 0
  4777                           ;gemsecs.c: 248:      if (rxData_l == r_block.length + 1)
  4778  00371E  502C               	movf	r_protocol@rxData_l,w,c
  4779  003720  6E45               	movwf	btemp+10,c
  4780  003722  6A46               	clrf	btemp+11,c
  4781  003724  51CC               	movf	(_r_block+12)& (0+255),w,b
  4782  003726  6E43               	movwf	btemp+8,c
  4783  003728  6A44               	clrf	btemp+9,c
  4784  00372A  0E01               	movlw	1
  4785  00372C  2643               	addwf	btemp+8,f,c
  4786  00372E  0E00               	movlw	0
  4787  003730  2244               	addwfc	btemp+9,f,c
  4788  003732  5045               	movf	btemp+10,w,c
  4789  003734  1843               	xorwf	btemp+8,w,c
  4790  003736  E109               	bnz	l6545
  4791  003738  5046               	movf	btemp+11,w,c
  4792  00373A  1844               	xorwf	btemp+9,w,c
  4793  00373C  A4D8               	btfss	status,2,c
  4794  00373E  D005               	goto	l6545
  4795                           
  4796                           ; BSR set to: 0
  4797                           ;gemsecs.c: 249:       H10[1].checksum = (uint16_t) rxData << 8;
  4798                           ;stkvar	_rxData @ sp[(-1)+0]
  4799  003740  0EFF               	movlw	-1
  4800  003742  50E3               	movf	plusw1,w,c
  4801  003744  0101               	movlb	1	; () banked
  4802  003746  6F0E               	movwf	(_H10+14)& (0+255),b
  4803  003748  6B0D               	clrf	(_H10+13)& (0+255),b
  4804  00374A                     l6545:
  4805                           
  4806                           ;gemsecs.c: 250:      if (rxData_l == r_block.length + 2)
  4807  00374A  502C               	movf	r_protocol@rxData_l,w,c
  4808  00374C  6E45               	movwf	btemp+10,c
  4809  00374E  6A46               	clrf	btemp+11,c
  4810  003750  0100               	movlb	0	; () banked
  4811  003752  51CC               	movf	(_r_block+12)& (0+255),w,b
  4812  003754  6E43               	movwf	btemp+8,c
  4813  003756  6A44               	clrf	btemp+9,c
  4814  003758  0E02               	movlw	2
  4815  00375A  2643               	addwf	btemp+8,f,c
  4816  00375C  0E00               	movlw	0
  4817  00375E  2244               	addwfc	btemp+9,f,c
  4818  003760  5045               	movf	btemp+10,w,c
  4819  003762  1843               	xorwf	btemp+8,w,c
  4820  003764  E10A               	bnz	l6549
  4821  003766  5046               	movf	btemp+11,w,c
  4822  003768  1844               	xorwf	btemp+9,w,c
  4823  00376A  A4D8               	btfss	status,2,c
  4824  00376C  D006               	goto	l6549
  4825                           
  4826                           ; BSR set to: 0
  4827                           ;gemsecs.c: 251:       H10[1].checksum += rxData;
  4828                           ;stkvar	_rxData @ sp[(-1)+0]
  4829  00376E  0EFF               	movlw	-1
  4830  003770  50E3               	movf	plusw1,w,c
  4831  003772  0101               	movlb	1	; () banked
  4832  003774  270D               	addwf	(_H10+13)& (0+255),f,b
  4833  003776  0E00               	movlw	0
  4834  003778  230E               	addwfc	(_H10+14)& (0+255),f,b
  4835  00377A                     l6549:
  4836                           
  4837                           ;gemsecs.c: 253:      rxData_l++;
  4838  00377A  2A2C               	incf	r_protocol@rxData_l,f,c
  4839                           
  4840                           ;gemsecs.c: 254:      if (rxData_l > (r_block.length + 2)) {
  4841  00377C  502C               	movf	r_protocol@rxData_l,w,c
  4842  00377E  6E45               	movwf	btemp+10,c
  4843  003780  6A46               	clrf	btemp+11,c
  4844  003782  0100               	movlb	0	; () banked
  4845  003784  51CC               	movf	(_r_block+12)& (0+255),w,b
  4846  003786  6E43               	movwf	btemp+8,c
  4847  003788  6A44               	clrf	btemp+9,c
  4848  00378A  0E02               	movlw	2
  4849  00378C  2643               	addwf	btemp+8,f,c
  4850  00378E  0E00               	movlw	0
  4851  003790  2244               	addwfc	btemp+9,f,c
  4852  003792  5045               	movf	btemp+10,w,c
  4853  003794  5C43               	subwf	btemp+8,w,c
  4854  003796  5044               	movf	btemp+9,w,c
  4855  003798  0A80               	xorlw	128
  4856  00379A  6E3B               	movwf	btemp,c
  4857  00379C  5046               	movf	btemp+11,w,c
  4858  00379E  0A80               	xorlw	128
  4859  0037A0  583B               	subwfb	btemp,w,c
  4860  0037A2  B0D8               	btfsc	status,0,c
  4861  0037A4  D092               	goto	l6603
  4862                           
  4863                           ; BSR set to: 0
  4864                           ;gemsecs.c: 255:       if (V.r_checksum == H10[1].checksum) {
  4865  0037A6  0101               	movlb	1	; () banked
  4866  0037A8  510D               	movf	(_H10+13)& (0+255),w,b
  4867  0037AA  0100               	movlb	0	; () banked
  4868  0037AC  19B9               	xorwf	(_V+82)& (0+255),w,b
  4869  0037AE  E10E               	bnz	l6559
  4870  0037B0  0101               	movlb	1	; () banked
  4871  0037B2  510E               	movf	(_H10+14)& (0+255),w,b
  4872  0037B4  0100               	movlb	0	; () banked
  4873  0037B6  19BA               	xorwf	(_V+83)& (0+255),w,b
  4874  0037B8  A4D8               	btfss	status,2,c
  4875  0037BA  D008               	goto	l6559
  4876                           
  4877                           ; BSR set to: 0
  4878                           ;gemsecs.c: 256:        *r_link = LINK_STATE_ACK;
  4879                           ;stkvar	_r_link @ sp[(-1)+-1]
  4880  0037BC  0EFE               	movlw	-2
  4881  0037BE  50E3               	movf	plusw1,w,c
  4882  0037C0  6ED9               	movwf	fsr2l,c
  4883  0037C2  6ADA               	clrf	fsr2h,c
  4884  0037C4  0E03               	movlw	3
  4885  0037C6  D047               	goto	L13
  4886  0037C8                     l6557:
  4887  0037C8  ECCF  F02C         	call	_UART1_Read	;wreg free
  4888  0037CC                     l6559:
  4889                           
  4890                           ;gemsecs.c: 258:        while (UART1_is_rx_ready())
  4891  0037CC  ECBD  F030         	call	_UART1_is_rx_ready	;wreg free
  4892  0037D0  503B               	movf	btemp,w,c
  4893  0037D2  A4D8               	btfss	status,2,c
  4894  0037D4  D7F9               	goto	l6557
  4895                           
  4896                           ;gemsecs.c: 260:        WaitMs(500);
  4897  0037D6  0EF4               	movlw	244
  4898  0037D8  6EE6               	movwf	postinc1,c
  4899  0037DA  0E01               	movlw	1
  4900  0037DC  6EE6               	movwf	postinc1,c
  4901  0037DE  ECC9  F02D         	call	_WaitMs	;wreg free
  4902                           
  4903                           ;gemsecs.c: 261:        V.error = LINK_ERROR_CHECKSUM;
  4904  0037E2  0E05               	movlw	5
  4905  0037E4  0100               	movlb	0	; () banked
  4906  0037E6  6FB6               	movwf	(_V+79)& (0+255),b
  4907                           
  4908                           ; BSR set to: 0
  4909                           ;gemsecs.c: 262:        V.failed_receive = 2;
  4910  0037E8  51BE               	movf	(_V+87)& (0+255),w,b
  4911  0037EA  0BF0               	andlw	-16
  4912  0037EC  0902               	iorlw	2
  4913  0037EE  D74F               	goto	L14
  4914  0037F0                     l6569:
  4915                           
  4916                           ;gemsecs.c: 271:   V.stream = H10[1].block.block.stream;
  4917  0037F0  0101               	movlb	1	; () banked
  4918  0037F2  5116               	movf	(_H10+22)& (0+255),w,b
  4919  0037F4  0B7F               	andlw	127
  4920  0037F6  0100               	movlb	0	; () banked
  4921  0037F8  6FB4               	movwf	(_V+77)& (0+255),b
  4922                           
  4923                           ; BSR set to: 0
  4924                           ;gemsecs.c: 272:   V.function = H10[1].block.block.function;
  4925  0037FA  C115  F0B5         	movff	_H10+21,_V+78
  4926                           
  4927                           ; BSR set to: 0
  4928                           ;gemsecs.c: 273:   V.systemb = H10[1].block.block.systemb;
  4929  0037FE  C10F  F0B0         	movff	_H10+15,_V+73
  4930  003802  C110  F0B1         	movff	_H10+16,_V+74
  4931  003806  C111  F0B2         	movff	_H10+17,_V+75
  4932  00380A  C112  F0B3         	movff	_H10+18,_V+76
  4933                           
  4934                           ; BSR set to: 0
  4935                           ;gemsecs.c: 274:   V.rbit = H10[1].block.block.rbit;
  4936  00380E  0101               	movlb	1	; () banked
  4937  003810  AF18               	btfss	(_H10+24)& (0+255),7,b
  4938  003812  D003               	bra	u3625
  4939  003814  0100               	movlb	0	; () banked
  4940  003816  81BD               	bsf	(_V+86)& (0+255),0,b
  4941  003818  D002               	bra	u3627
  4942  00381A                     u3625:
  4943  00381A  0100               	movlb	0	; () banked
  4944  00381C  91BD               	bcf	(_V+86)& (0+255),0,b
  4945  00381E                     u3627:
  4946                           
  4947                           ; BSR set to: 0
  4948                           ;gemsecs.c: 275:   V.wbit = H10[1].block.block.wbit;
  4949  00381E  0101               	movlb	1	; () banked
  4950  003820  AF16               	btfss	(_H10+22)& (0+255),7,b
  4951  003822  D003               	bra	u3635
  4952  003824  0100               	movlb	0	; () banked
  4953  003826  83BD               	bsf	(_V+86)& (0+255),1,b
  4954  003828  D002               	bra	u3637
  4955  00382A                     u3635:
  4956  00382A  0100               	movlb	0	; () banked
  4957  00382C  93BD               	bcf	(_V+86)& (0+255),1,b
  4958  00382E                     u3637:
  4959                           
  4960                           ; BSR set to: 0
  4961                           ;gemsecs.c: 276:   V.ebit = H10[1].block.block.ebit;
  4962  00382E  0101               	movlb	1	; () banked
  4963  003830  AF14               	btfss	(_H10+20)& (0+255),7,b
  4964  003832  D003               	bra	u3645
  4965  003834  0100               	movlb	0	; () banked
  4966  003836  85BD               	bsf	(_V+86)& (0+255),2,b
  4967  003838  D002               	bra	u3647
  4968  00383A                     u3645:
  4969  00383A  0100               	movlb	0	; () banked
  4970  00383C  95BD               	bcf	(_V+86)& (0+255),2,b
  4971  00383E                     u3647:
  4972                           
  4973                           ; BSR set to: 0
  4974                           ;gemsecs.c: 277:   UART1_Write(0x06);
  4975  00383E  0E06               	movlw	6
  4976  003840  6EE6               	movwf	postinc1,c
  4977  003842  EC91  F02C         	call	_UART1_Write	;wreg free
  4978                           
  4979                           ; BSR set to: 57
  4980                           ;gemsecs.c: 278:   V.failed_receive = 0;
  4981  003846  0EF0               	movlw	-16
  4982  003848  0100               	movlb	0	; () banked
  4983  00384A  17BE               	andwf	(_V+87)& (0+255),f,b
  4984                           
  4985                           ;gemsecs.c: 279:   *r_link = LINK_STATE_DONE;
  4986                           ;stkvar	_r_link @ sp[(-1)+-1]
  4987  00384C  0EFE               	movlw	-2
  4988  00384E  50E3               	movf	plusw1,w,c
  4989  003850  6ED9               	movwf	fsr2l,c
  4990  003852  6ADA               	clrf	fsr2h,c
  4991  003854  0E04               	movlw	4
  4992  003856                     L13:
  4993  003856  6EDF               	movwf	indf2,c
  4994                           
  4995                           ;gemsecs.c: 280:   break;
  4996  003858  D038               	goto	l6603
  4997  00385A                     l6585:
  4998                           
  4999                           ;gemsecs.c: 282:   UART1_Write(0x15);
  5000  00385A  0E15               	movlw	21
  5001  00385C  6EE6               	movwf	postinc1,c
  5002  00385E  EC91  F02C         	call	_UART1_Write	;wreg free
  5003                           
  5004                           ; BSR set to: 57
  5005                           ;gemsecs.c: 283:   *r_link = LINK_STATE_ERROR;
  5006                           ;stkvar	_r_link @ sp[(-1)+-1]
  5007  003862  0EFE               	movlw	-2
  5008  003864  50E3               	movf	plusw1,w,c
  5009  003866  6ED9               	movwf	fsr2l,c
  5010  003868  6ADA               	clrf	fsr2h,c
  5011  00386A  0E06               	movlw	6
  5012  00386C  6EDF               	movwf	indf2,c
  5013                           
  5014                           ;gemsecs.c: 284:   while ((uart1RxCount)) {
  5015  00386E  D002               	goto	l6591
  5016  003870                     l6589:
  5017                           
  5018                           ; BSR set to: 57
  5019                           ;gemsecs.c: 285:    UART1_Read();
  5020  003870  ECCF  F02C         	call	_UART1_Read	;wreg free
  5021  003874                     l6591:
  5022                           
  5023                           ; BSR set to: 57
  5024                           ;gemsecs.c: 284:   while ((uart1RxCount)) {
  5025  003874  5035               	movf	_uart1RxCount,w,c	;volatile
  5026  003876  A4D8               	btfss	status,2,c
  5027  003878  D7FB               	goto	l6589
  5028                           
  5029                           ; BSR set to: 57
  5030                           ;gemsecs.c: 287:   retry = 3;
  5031  00387A  0E03               	movlw	3
  5032  00387C  6E5D               	movwf	r_protocol@retry,c
  5033                           
  5034                           ;gemsecs.c: 288:   break;
  5035  00387E  D025               	goto	l6603
  5036  003880                     l6595:
  5037                           
  5038                           ;gemsecs.c: 292:   V.failed_receive = 0;
  5039  003880  0EF0               	movlw	-16
  5040  003882  0100               	movlb	0	; () banked
  5041  003884  17BE               	andwf	(_V+87)& (0+255),f,b
  5042  003886  D70A               	goto	l6519
  5043  003888                     l6601:
  5044                           
  5045                           ;stkvar	_r_link @ sp[(-1)+-1]
  5046  003888  0EFE               	movlw	-2
  5047  00388A  50E3               	movf	plusw1,w,c
  5048  00388C  6ED9               	movwf	fsr2l,c
  5049  00388E  6ADA               	clrf	fsr2h,c
  5050  003890  50DF               	movf	indf2,w,c
  5051  003892  6E45               	movwf	btemp+10,c
  5052  003894  6A46               	clrf	btemp+11,c
  5053                           
  5054                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5055                           ; Switch size 1, requested type "simple"
  5056                           ; Number of cases is 1, Range of values is 0 to 0
  5057                           ; switch strategies available:
  5058                           ; Name         Instructions Cycles
  5059                           ; simple_byte            4     3 (average)
  5060                           ;	Chosen strategy is simple_byte
  5061  003896  5046               	movf	btemp+11,w,c
  5062  003898  0A00               	xorlw	0	; case 0
  5063  00389A  A4D8               	btfss	status,2,c
  5064  00389C  D6FF               	goto	l6519
  5065                           
  5066                           ; Switch size 1, requested type "simple"
  5067                           ; Number of cases is 7, Range of values is 0 to 6
  5068                           ; switch strategies available:
  5069                           ; Name         Instructions Cycles
  5070                           ; simple_byte           22    12 (average)
  5071                           ;	Chosen strategy is simple_byte
  5072  00389E  5045               	movf	btemp+10,w,c
  5073  0038A0  0A00               	xorlw	0	; case 0
  5074  0038A2  B4D8               	btfsc	status,2,c
  5075  0038A4  D6B5               	goto	l6495
  5076  0038A6  0A01               	xorlw	1	; case 1
  5077  0038A8  B4D8               	btfsc	status,2,c
  5078  0038AA  D6CD               	goto	l1597
  5079  0038AC  0A03               	xorlw	3	; case 2
  5080  0038AE  B4D8               	btfsc	status,2,c
  5081  0038B0  D6DD               	goto	l6511
  5082  0038B2  0A01               	xorlw	1	; case 3
  5083  0038B4  B4D8               	btfsc	status,2,c
  5084  0038B6  D79C               	goto	l6569
  5085  0038B8  0A07               	xorlw	7	; case 4
  5086  0038BA  B4D8               	btfsc	status,2,c
  5087  0038BC  D7E1               	goto	l6595
  5088  0038BE  0A01               	xorlw	1	; case 5
  5089  0038C0  B4D8               	btfsc	status,2,c
  5090  0038C2  D7CB               	goto	l6585
  5091  0038C4  0A03               	xorlw	3	; case 6
  5092  0038C6  A4D8               	btfss	status,2,c
  5093  0038C8  D6E9               	goto	l6519
  5094  0038CA                     l6603:
  5095                           
  5096                           ;gemsecs.c: 299:  return *r_link;
  5097                           ;stkvar	_r_link @ sp[(-1)+-1]
  5098  0038CA  0EFE               	movlw	-2
  5099  0038CC  50E3               	movf	plusw1,w,c
  5100  0038CE  6ED9               	movwf	fsr2l,c
  5101  0038D0  6ADA               	clrf	fsr2h,c
  5102  0038D2  50DF               	movf	indf2,w,c
  5103  0038D4  6E3B               	movwf	btemp,c
  5104                           
  5105                           ; _r_protocol: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  5106  0038D6  52E5               	movf	postdec1,f,c
  5107  0038D8  52E5               	movf	postdec1,f,c
  5108  0038DA  0012               	return		;funcret
  5109  0038DC                     __end_of_r_protocol:
  5110                           	opt callstack 0
  5111                           
  5112 ;; *************** function _UART1_Write *****************
  5113 ;; Defined at:
  5114 ;;		line 179 in file "mcc_generated_files/uart1.c"
  5115 ;; Parameters:    Size  Location     Type
  5116 ;;  txData          1  [STACK] unsigned char 
  5117 ;; Auto vars:     Size  Location     Type
  5118 ;;		None
  5119 ;; Return value:  Size  Location     Type
  5120 ;;                  1  [STACK] void 
  5121 ;; Registers used:
  5122 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5123 ;; Tracked objects:
  5124 ;;		On entry : 0/0
  5125 ;;		On exit  : 3F/39
  5126 ;;		Unchanged: 0/0
  5127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5128 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5129 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5130 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5131 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5132 ;;Total ram usage:        0 bytes
  5133 ;; Hardware stack levels used:    1
  5134 ;; Hardware stack levels required when called:    3
  5135 ;; This function calls:
  5136 ;;		Nothing
  5137 ;; This function is called by:
  5138 ;;		_r_protocol
  5139 ;;		_t_protocol
  5140 ;;		_secs_send
  5141 ;; This function uses a reentrant model
  5142 ;;
  5143                           
  5144                           	psect	text12
  5145  005922                     __ptext12:
  5146                           	opt callstack 0
  5147  005922                     _UART1_Write:
  5148                           	opt callstack 25
  5149                           
  5150                           ;mcc_generated_files/uart1.c: 181:  while (0 == uart1TxBufferRemaining) {
  5151                           
  5152                           ;mcc_generated_files/uart1.c: 179: void UART1_Write(uint8_t txData);mcc_generated_files/
      +                          uart1.c: 180: {;mcc_generated_files/uart1.c: 181:  while (0 == uart1TxBufferRemaining) {
  5153                           
  5154                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5155                           ;incstack = 0
  5156  005922  5038               	movf	_uart1TxBufferRemaining,w,c	;volatile
  5157  005924  B4D8               	btfsc	status,2,c
  5158  005926  D7FD               	goto	_UART1_Write
  5159                           
  5160                           ;mcc_generated_files/uart1.c: 184:  if (0 == PIE3bits.U1TXIE) {
  5161  005928  0139               	movlb	57	; () banked
  5162  00592A  B993               	btfsc	147,4,b	;volatile
  5163  00592C  D005               	goto	l579
  5164                           
  5165                           ; BSR set to: 57
  5166                           ;mcc_generated_files/uart1.c: 185:   U1TXB = txData;
  5167                           ;stkvar	_txData @ sp[(0)+-1]
  5168  00592E  0EFF               	movlw	-1
  5169  005930  006F FF8F FDEA     	movff	plusw1,15850	;volatile
  5170                           
  5171                           ;mcc_generated_files/uart1.c: 186:  } else {
  5172  005936  D011               	goto	l5711
  5173  005938                     l579:
  5174                           
  5175                           ; BSR set to: 57
  5176                           ;mcc_generated_files/uart1.c: 187:   PIE3bits.U1TXIE = 0;
  5177  005938  9993               	bcf	147,4,b	;volatile
  5178                           
  5179                           ; BSR set to: 57
  5180                           ;mcc_generated_files/uart1.c: 188:   uart1TxBuffer[uart1TxHead++] = txData;
  5181                           ;stkvar	_txData @ sp[(0)+-1]
  5182  00593A  0EC0               	movlw	low _uart1TxBuffer
  5183  00593C  243A               	addwf	_uart1TxHead,w,c	;volatile
  5184  00593E  6ED9               	movwf	fsr2l,c
  5185  005940  6ADA               	clrf	fsr2h,c
  5186  005942  0E02               	movlw	high _uart1TxBuffer
  5187  005944  22DA               	addwfc	fsr2h,f,c
  5188  005946  0EFF               	movlw	-1
  5189  005948  006F FF8F FFDF     	movff	plusw1,indf2
  5190                           
  5191                           ; BSR set to: 57
  5192  00594E  2A3A               	incf	_uart1TxHead,f,c	;volatile
  5193                           
  5194                           ; BSR set to: 57
  5195                           ;mcc_generated_files/uart1.c: 189:   if (sizeof(uart1TxBuffer) <= uart1TxHead) {
  5196  005950  0E3F               	movlw	63
  5197  005952  643A               	cpfsgt	_uart1TxHead,c
  5198  005954  D001               	goto	l5709
  5199                           
  5200                           ; BSR set to: 57
  5201                           ;mcc_generated_files/uart1.c: 190:    uart1TxHead = 0;
  5202  005956  6A3A               	clrf	_uart1TxHead,c	;volatile
  5203  005958                     l5709:
  5204                           
  5205                           ; BSR set to: 57
  5206                           ;mcc_generated_files/uart1.c: 192:   uart1TxBufferRemaining--;
  5207  005958  0638               	decf	_uart1TxBufferRemaining,f,c	;volatile
  5208  00595A                     l5711:
  5209                           
  5210                           ; BSR set to: 57
  5211                           ;mcc_generated_files/uart1.c: 194:  PIE3bits.U1TXIE = 1;
  5212  00595A  8993               	bsf	147,4,b	;volatile
  5213                           
  5214                           ; BSR set to: 57
  5215                           ; _UART1_Write: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, a
      +                          rgsize = 1, vargsize = 0
  5216  00595C  52E5               	movf	postdec1,f,c
  5217  00595E  0012               	return		;funcret
  5218  005960                     __end_of_UART1_Write:
  5219                           	opt callstack 0
  5220                           
  5221 ;; *************** function _m_protocol *****************
  5222 ;; Defined at:
  5223 ;;		line 42 in file "gemsecs.c"
  5224 ;; Parameters:    Size  Location     Type
  5225 ;;  m_link          1  [STACK] PTR enum E16164
  5226 ;;		 -> V(89), 
  5227 ;; Auto vars:     Size  Location     Type
  5228 ;;  rxData          1  [STACK] unsigned char 
  5229 ;; Return value:  Size  Location     Type
  5230 ;;                  1  [STACK] enum E16904
  5231 ;; Registers used:
  5232 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl, p
      +rodh
  5233 ;; Tracked objects:
  5234 ;;		On entry : 0/0
  5235 ;;		On exit  : 0/0
  5236 ;;		Unchanged: 0/0
  5237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5238 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5239 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5240 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5241 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5242 ;;Total ram usage:        0 bytes
  5243 ;; Hardware stack levels used:    1
  5244 ;; Hardware stack levels required when called:    5
  5245 ;; This function calls:
  5246 ;;		_StartTimer
  5247 ;;		_TimerDone
  5248 ;;		_UART1_Read
  5249 ;;		_UART1_is_rx_ready
  5250 ;;		_UART2_Read
  5251 ;;		_UART2_is_rx_ready
  5252 ;;		_WaitMs
  5253 ;;		_run_checksum
  5254 ;; This function is called by:
  5255 ;;		_main
  5256 ;; This function uses a reentrant model
  5257 ;;
  5258                           
  5259                           	psect	text13
  5260  002EB2                     __ptext13:
  5261                           	opt callstack 0
  5262  002EB2                     _m_protocol:
  5263                           	opt callstack 0
  5264                           
  5265                           ; BSR set to: 57
  5266                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5267  002EB2  52E6               	movf	postinc1,f,c
  5268                           
  5269                           ;gemsecs.c: 42: LINK_STATES m_protocol(LINK_STATES *m_link);gemsecs.c: 43: {;gemsecs.c: 
      +                          44:  uint8_t rxData;;gemsecs.c: 45:  static uint8_t rxData_l = 0;;gemsecs.c: 47:  switch
      +                           (*m_link) {
  5270                           
  5271                           ;incstack = 0
  5272  002EB4  D20B               	goto	l6887
  5273  002EB6                     l6721:
  5274                           
  5275                           ;gemsecs.c: 52:   if (UART1_is_rx_ready()) {
  5276  002EB6  ECBD  F030         	call	_UART1_is_rx_ready	;wreg free
  5277  002EBA  503B               	movf	btemp,w,c
  5278  002EBC  B4D8               	btfsc	status,2,c
  5279  002EBE  D021               	goto	l6735
  5280                           
  5281                           ;gemsecs.c: 53:    rxData = UART1_Read();
  5282  002EC0  ECCF  F02C         	call	_UART1_Read	;wreg free
  5283                           
  5284                           ;stkvar	_rxData @ sp[(-1)+0]
  5285  002EC4  0EFF               	movlw	-1
  5286  002EC6  0060  F0EF  FFE3   	movff	btemp,plusw1
  5287                           
  5288                           ; BSR set to: 57
  5289                           ;gemsecs.c: 54:    if (rxData == 0x05) {
  5290                           ;stkvar	_rxData @ sp[(-1)+0]
  5291  002ECC  0EFF               	movlw	-1
  5292  002ECE  006F FF8C  F03B    	movff	plusw1,btemp
  5293  002ED4  0E05               	movlw	5
  5294  002ED6  183B               	xorwf	btemp,w,c
  5295  002ED8  A4D8               	btfss	status,2,c
  5296  002EDA  D013               	goto	l6735
  5297                           
  5298                           ; BSR set to: 57
  5299                           ;gemsecs.c: 55:     V.uart = 1;
  5300  002EDC  0E01               	movlw	1
  5301  002EDE  0100               	movlb	0	; () banked
  5302  002EE0  6FBF               	movwf	(_V+88)& (0+255),b
  5303                           
  5304                           ; BSR set to: 0
  5305                           ;gemsecs.c: 56:     StartTimer(TMR_T2, 2000);
  5306  002EE2  0ED0               	movlw	208
  5307  002EE4  6EE6               	movwf	postinc1,c
  5308  002EE6  0E07               	movlw	7
  5309  002EE8  6EE6               	movwf	postinc1,c
  5310  002EEA  0E02               	movlw	2
  5311  002EEC  6EE6               	movwf	postinc1,c
  5312  002EEE  EC0D  F02D         	call	_StartTimer	;wreg free
  5313                           
  5314                           ;gemsecs.c: 57:     V.error = LINK_ERROR_NONE;
  5315  002EF2  0100               	movlb	0	; () banked
  5316  002EF4  6BB6               	clrf	(_V+79)& (0+255),b
  5317                           
  5318                           ; BSR set to: 0
  5319                           ;gemsecs.c: 58:     *m_link = LINK_STATE_ENQ;
  5320                           ;stkvar	_m_link @ sp[(-1)+-1]
  5321  002EF6  0EFE               	movlw	-2
  5322  002EF8  50E3               	movf	plusw1,w,c
  5323  002EFA  6ED9               	movwf	fsr2l,c
  5324  002EFC  6ADA               	clrf	fsr2h,c
  5325  002EFE  0E01               	movlw	1
  5326  002F00  6EDF               	movwf	indf2,c
  5327  002F02                     l6735:
  5328                           
  5329                           ;gemsecs.c: 61:   if (UART2_is_rx_ready()) {
  5330  002F02  ECB9  F030         	call	_UART2_is_rx_ready	;wreg free
  5331  002F06  503B               	movf	btemp,w,c
  5332  002F08  B4D8               	btfsc	status,2,c
  5333  002F0A  D201               	goto	l6889
  5334                           
  5335                           ;gemsecs.c: 62:    rxData = UART2_Read();
  5336  002F0C  ECB0  F02C         	call	_UART2_Read	;wreg free
  5337                           
  5338                           ;stkvar	_rxData @ sp[(-1)+0]
  5339  002F10  0EFF               	movlw	-1
  5340  002F12  0060  F0EF  FFE3   	movff	btemp,plusw1
  5341                           
  5342                           ; BSR set to: 57
  5343                           ;gemsecs.c: 63:    if (rxData == 0x05) {
  5344                           ;stkvar	_rxData @ sp[(-1)+0]
  5345  002F18  0EFF               	movlw	-1
  5346  002F1A  006F FF8C  F03B    	movff	plusw1,btemp
  5347  002F20  0E05               	movlw	5
  5348  002F22  183B               	xorwf	btemp,w,c
  5349  002F24  A4D8               	btfss	status,2,c
  5350  002F26  D1F3               	goto	l6889
  5351                           
  5352                           ; BSR set to: 57
  5353                           ;gemsecs.c: 64:     V.uart = 2;
  5354  002F28  0E02               	movlw	2
  5355  002F2A  0100               	movlb	0	; () banked
  5356  002F2C  6FBF               	movwf	(_V+88)& (0+255),b
  5357                           
  5358                           ; BSR set to: 0
  5359                           ;gemsecs.c: 65:     StartTimer(TMR_T2, 2000);
  5360  002F2E  0ED0               	movlw	208
  5361  002F30  6EE6               	movwf	postinc1,c
  5362  002F32  0E07               	movlw	7
  5363  002F34  6EE6               	movwf	postinc1,c
  5364  002F36  0E02               	movlw	2
  5365  002F38  6EE6               	movwf	postinc1,c
  5366  002F3A  EC0D  F02D         	call	_StartTimer	;wreg free
  5367                           
  5368                           ;gemsecs.c: 66:     V.error = LINK_ERROR_NONE;
  5369  002F3E  0100               	movlb	0	; () banked
  5370  002F40  6BB6               	clrf	(_V+79)& (0+255),b
  5371                           
  5372                           ; BSR set to: 0
  5373                           ;gemsecs.c: 67:     *m_link = LINK_STATE_ENQ;
  5374                           ;stkvar	_m_link @ sp[(-1)+-1]
  5375  002F42  0EFE               	movlw	-2
  5376  002F44  50E3               	movf	plusw1,w,c
  5377  002F46  6ED9               	movwf	fsr2l,c
  5378  002F48  6ADA               	clrf	fsr2h,c
  5379  002F4A  0E01               	movlw	1
  5380  002F4C  D1BD               	goto	L20
  5381  002F4E                     l1544:
  5382                           
  5383                           ;gemsecs.c: 79:   V.error = LINK_ERROR_NONE;
  5384  002F4E  0100               	movlb	0	; () banked
  5385  002F50  6BB6               	clrf	(_V+79)& (0+255),b
  5386                           
  5387                           ; BSR set to: 0
  5388                           ;gemsecs.c: 80:   *m_link = LINK_STATE_EOT;
  5389                           ;stkvar	_m_link @ sp[(-1)+-1]
  5390  002F52  0EFE               	movlw	-2
  5391  002F54  50E3               	movf	plusw1,w,c
  5392  002F56  6ED9               	movwf	fsr2l,c
  5393  002F58  6ADA               	clrf	fsr2h,c
  5394  002F5A  0E02               	movlw	2
  5395  002F5C  6EDF               	movwf	indf2,c
  5396                           
  5397                           ; BSR set to: 0
  5398                           ;gemsecs.c: 81:   StartTimer(TMR_T2, 2000);
  5399  002F5E  0ED0               	movlw	208
  5400  002F60  6EE6               	movwf	postinc1,c
  5401  002F62  0E07               	movlw	7
  5402  002F64  6EE6               	movwf	postinc1,c
  5403  002F66  0E02               	movlw	2
  5404  002F68  6EE6               	movwf	postinc1,c
  5405  002F6A  EC0D  F02D         	call	_StartTimer	;wreg free
  5406                           
  5407                           ;gemsecs.c: 82:   break;
  5408  002F6E  D1CF               	goto	l6889
  5409  002F70                     l6753:
  5410                           
  5411                           ;gemsecs.c: 84:   if (TimerDone(TMR_T2)) {
  5412  002F70  0E02               	movlw	2
  5413  002F72  6EE6               	movwf	postinc1,c
  5414  002F74  EC7F  F02F         	call	_TimerDone	;wreg free
  5415  002F78  503B               	movf	btemp,w,c
  5416  002F7A  B4D8               	btfsc	status,2,c
  5417  002F7C  D00D               	goto	l6759
  5418                           
  5419                           ;gemsecs.c: 85:    V.error = LINK_ERROR_T2;
  5420  002F7E  0E02               	movlw	2
  5421  002F80  0100               	movlb	0	; () banked
  5422  002F82  6FB6               	movwf	(_V+79)& (0+255),b
  5423                           
  5424                           ;gemsecs.c: 86:    V.failed_receive = 2;
  5425  002F84  51BE               	movf	(_V+87)& (0+255),w,b
  5426  002F86  0BF0               	andlw	-16
  5427  002F88  0902               	iorlw	2
  5428  002F8A  6FBE               	movwf	(_V+87)& (0+255),b
  5429                           
  5430                           ; BSR set to: 0
  5431                           ;gemsecs.c: 87:    *m_link = LINK_STATE_NAK;
  5432                           ;stkvar	_m_link @ sp[(-1)+-1]
  5433  002F8C  0EFE               	movlw	-2
  5434  002F8E  50E3               	movf	plusw1,w,c
  5435  002F90  6ED9               	movwf	fsr2l,c
  5436  002F92  6ADA               	clrf	fsr2h,c
  5437  002F94  0E05               	movlw	5
  5438  002F96  D198               	goto	L20
  5439  002F98                     l6759:
  5440                           
  5441                           ;gemsecs.c: 89:    if (UART1_is_rx_ready()) {
  5442  002F98  ECBD  F030         	call	_UART1_is_rx_ready	;wreg free
  5443  002F9C  503B               	movf	btemp,w,c
  5444  002F9E  B4D8               	btfsc	status,2,c
  5445  002FA0  D0A5               	goto	l6807
  5446                           
  5447                           ;gemsecs.c: 90:     rxData = UART1_Read();
  5448  002FA2  ECCF  F02C         	call	_UART1_Read	;wreg free
  5449                           
  5450                           ;stkvar	_rxData @ sp[(-1)+0]
  5451  002FA6  0EFF               	movlw	-1
  5452  002FA8  0060  F0EF  FFE3   	movff	btemp,plusw1
  5453                           
  5454                           ; BSR set to: 57
  5455                           ;gemsecs.c: 91:     if (rxData_l == 0) {
  5456  002FAE  502D               	movf	m_protocol@rxData_l,w,c
  5457  002FB0  A4D8               	btfss	status,2,c
  5458  002FB2  D00C               	goto	l6771
  5459                           
  5460                           ; BSR set to: 57
  5461                           ;gemsecs.c: 92:      r_block.length = rxData;
  5462                           ;stkvar	_rxData @ sp[(-1)+0]
  5463  002FB4  0EFF               	movlw	-1
  5464  002FB6  006F FF8C  F0CC    	movff	plusw1,_r_block+12
  5465                           
  5466                           ; BSR set to: 57
  5467                           ;gemsecs.c: 93:      run_checksum(0, 1);
  5468  002FBC  0E01               	movlw	1
  5469  002FBE  6EE6               	movwf	postinc1,c
  5470  002FC0  0E00               	movlw	0
  5471  002FC2  6EE6               	movwf	postinc1,c
  5472  002FC4  EC47  F02D         	call	_run_checksum	;wreg free
  5473                           
  5474                           ; BSR set to: 0
  5475                           ;gemsecs.c: 94:      rxData_l++;
  5476  002FC8  2A2D               	incf	m_protocol@rxData_l,f,c
  5477                           
  5478                           ;gemsecs.c: 95:     } else {
  5479  002FCA  D090               	goto	l6807
  5480  002FCC                     l6771:
  5481                           
  5482                           ; BSR set to: 57
  5483                           ;gemsecs.c: 99:      if (rxData_l <= sizeof(block10))
  5484  002FCC  0E0B               	movlw	11
  5485  002FCE  602D               	cpfslt	m_protocol@rxData_l,c
  5486  002FD0  D00C               	goto	l6775
  5487                           
  5488                           ; BSR set to: 57
  5489                           ;gemsecs.c: 100:       H10[1].block.b[sizeof(block10) - rxData_l] = rxData;
  5490                           ;stkvar	_rxData @ sp[(-1)+0]
  5491  002FD2  502D               	movf	m_protocol@rxData_l,w,c
  5492  002FD4  0819               	sublw	low (_H10+25)
  5493  002FD6  6ED9               	movwf	fsr2l,c
  5494  002FD8  0E00               	movlw	0
  5495  002FDA  A0D8               	btfss	status,0,c
  5496  002FDC  2AE8               	incf	wreg,f,c
  5497  002FDE  0801               	sublw	high (_H10+25)
  5498  002FE0  6EDA               	movwf	fsr2h,c
  5499  002FE2  0EFF               	movlw	-1
  5500  002FE4  006F FF8F FFDF     	movff	plusw1,indf2
  5501  002FEA                     l6775:
  5502                           
  5503                           ; BSR set to: 57
  5504                           ;gemsecs.c: 101:      if (rxData_l <= r_block.length)
  5505  002FEA  502D               	movf	m_protocol@rxData_l,w,c
  5506  002FEC  0100               	movlb	0	; () banked
  5507  002FEE  5DCC               	subwf	(_r_block+12)& (0+255),w,b
  5508  002FF0  A0D8               	btfss	status,0,c
  5509  002FF2  D00D               	goto	l6779
  5510                           
  5511                           ; BSR set to: 0
  5512                           ;gemsecs.c: 102:       V.r_checksum = run_checksum(rxData, 0);
  5513  002FF4  0E00               	movlw	0
  5514  002FF6  6EE6               	movwf	postinc1,c
  5515                           
  5516                           ;stkvar	_rxData @ sp[(-2)+0]
  5517  002FF8  0EFE               	movlw	-2
  5518  002FFA  50E3               	movf	plusw1,w,c
  5519  002FFC  6EE6               	movwf	postinc1,c
  5520  002FFE  EC47  F02D         	call	_run_checksum	;wreg free
  5521  003002  0060  F0EC  F0B9   	movff	btemp,_V+82
  5522  003008  0060  F0F0  F0BA   	movff	btemp+1,_V+83
  5523  00300E                     l6779:
  5524                           
  5525                           ; BSR set to: 0
  5526                           ;gemsecs.c: 104:      if (rxData_l == r_block.length + 1)
  5527  00300E  502D               	movf	m_protocol@rxData_l,w,c
  5528  003010  6E45               	movwf	btemp+10,c
  5529  003012  6A46               	clrf	btemp+11,c
  5530  003014  51CC               	movf	(_r_block+12)& (0+255),w,b
  5531  003016  6E43               	movwf	btemp+8,c
  5532  003018  6A44               	clrf	btemp+9,c
  5533  00301A  0E01               	movlw	1
  5534  00301C  2643               	addwf	btemp+8,f,c
  5535  00301E  0E00               	movlw	0
  5536  003020  2244               	addwfc	btemp+9,f,c
  5537  003022  5045               	movf	btemp+10,w,c
  5538  003024  1843               	xorwf	btemp+8,w,c
  5539  003026  E109               	bnz	l6783
  5540  003028  5046               	movf	btemp+11,w,c
  5541  00302A  1844               	xorwf	btemp+9,w,c
  5542  00302C  A4D8               	btfss	status,2,c
  5543  00302E  D005               	goto	l6783
  5544                           
  5545                           ; BSR set to: 0
  5546                           ;gemsecs.c: 105:       H10[1].checksum = (uint16_t) rxData << 8;
  5547                           ;stkvar	_rxData @ sp[(-1)+0]
  5548  003030  0EFF               	movlw	-1
  5549  003032  50E3               	movf	plusw1,w,c
  5550  003034  0101               	movlb	1	; () banked
  5551  003036  6F0E               	movwf	(_H10+14)& (0+255),b
  5552  003038  6B0D               	clrf	(_H10+13)& (0+255),b
  5553  00303A                     l6783:
  5554                           
  5555                           ;gemsecs.c: 106:      if (rxData_l == r_block.length + 2)
  5556  00303A  502D               	movf	m_protocol@rxData_l,w,c
  5557  00303C  6E45               	movwf	btemp+10,c
  5558  00303E  6A46               	clrf	btemp+11,c
  5559  003040  0100               	movlb	0	; () banked
  5560  003042  51CC               	movf	(_r_block+12)& (0+255),w,b
  5561  003044  6E43               	movwf	btemp+8,c
  5562  003046  6A44               	clrf	btemp+9,c
  5563  003048  0E02               	movlw	2
  5564  00304A  2643               	addwf	btemp+8,f,c
  5565  00304C  0E00               	movlw	0
  5566  00304E  2244               	addwfc	btemp+9,f,c
  5567  003050  5045               	movf	btemp+10,w,c
  5568  003052  1843               	xorwf	btemp+8,w,c
  5569  003054  E10A               	bnz	l6787
  5570  003056  5046               	movf	btemp+11,w,c
  5571  003058  1844               	xorwf	btemp+9,w,c
  5572  00305A  A4D8               	btfss	status,2,c
  5573  00305C  D006               	goto	l6787
  5574                           
  5575                           ; BSR set to: 0
  5576                           ;gemsecs.c: 107:       H10[1].checksum += rxData;
  5577                           ;stkvar	_rxData @ sp[(-1)+0]
  5578  00305E  0EFF               	movlw	-1
  5579  003060  50E3               	movf	plusw1,w,c
  5580  003062  0101               	movlb	1	; () banked
  5581  003064  270D               	addwf	(_H10+13)& (0+255),f,b
  5582  003066  0E00               	movlw	0
  5583  003068  230E               	addwfc	(_H10+14)& (0+255),f,b
  5584  00306A                     l6787:
  5585                           
  5586                           ;gemsecs.c: 109:      rxData_l++;
  5587  00306A  2A2D               	incf	m_protocol@rxData_l,f,c
  5588                           
  5589                           ;gemsecs.c: 110:      if (rxData_l > (r_block.length + 2)) {
  5590  00306C  502D               	movf	m_protocol@rxData_l,w,c
  5591  00306E  6E45               	movwf	btemp+10,c
  5592  003070  6A46               	clrf	btemp+11,c
  5593  003072  0100               	movlb	0	; () banked
  5594  003074  51CC               	movf	(_r_block+12)& (0+255),w,b
  5595  003076  6E43               	movwf	btemp+8,c
  5596  003078  6A44               	clrf	btemp+9,c
  5597  00307A  0E02               	movlw	2
  5598  00307C  2643               	addwf	btemp+8,f,c
  5599  00307E  0E00               	movlw	0
  5600  003080  2244               	addwfc	btemp+9,f,c
  5601  003082  5045               	movf	btemp+10,w,c
  5602  003084  5C43               	subwf	btemp+8,w,c
  5603  003086  5044               	movf	btemp+9,w,c
  5604  003088  0A80               	xorlw	128
  5605  00308A  6E3B               	movwf	btemp,c
  5606  00308C  5046               	movf	btemp+11,w,c
  5607  00308E  0A80               	xorlw	128
  5608  003090  583B               	subwfb	btemp,w,c
  5609  003092  B0D8               	btfsc	status,0,c
  5610  003094  D02B               	goto	l6807
  5611                           
  5612                           ; BSR set to: 0
  5613                           ;gemsecs.c: 111:       if (V.r_checksum == H10[1].checksum) {
  5614  003096  0101               	movlb	1	; () banked
  5615  003098  510D               	movf	(_H10+13)& (0+255),w,b
  5616  00309A  0100               	movlb	0	; () banked
  5617  00309C  19B9               	xorwf	(_V+82)& (0+255),w,b
  5618  00309E  E10E               	bnz	l6797
  5619  0030A0  0101               	movlb	1	; () banked
  5620  0030A2  510E               	movf	(_H10+14)& (0+255),w,b
  5621  0030A4  0100               	movlb	0	; () banked
  5622  0030A6  19BA               	xorwf	(_V+83)& (0+255),w,b
  5623  0030A8  A4D8               	btfss	status,2,c
  5624  0030AA  D008               	goto	l6797
  5625                           
  5626                           ; BSR set to: 0
  5627                           ;gemsecs.c: 112:        *m_link = LINK_STATE_ACK;
  5628                           ;stkvar	_m_link @ sp[(-1)+-1]
  5629  0030AC  0EFE               	movlw	-2
  5630  0030AE  50E3               	movf	plusw1,w,c
  5631  0030B0  6ED9               	movwf	fsr2l,c
  5632  0030B2  6ADA               	clrf	fsr2h,c
  5633  0030B4  0E03               	movlw	3
  5634  0030B6  D019               	goto	L17
  5635  0030B8                     l6795:
  5636  0030B8  ECCF  F02C         	call	_UART1_Read	;wreg free
  5637  0030BC                     l6797:
  5638                           
  5639                           ;gemsecs.c: 114:        while (UART1_is_rx_ready())
  5640  0030BC  ECBD  F030         	call	_UART1_is_rx_ready	;wreg free
  5641  0030C0  503B               	movf	btemp,w,c
  5642  0030C2  A4D8               	btfss	status,2,c
  5643  0030C4  D7F9               	goto	l6795
  5644                           
  5645                           ;gemsecs.c: 116:        WaitMs(500);
  5646  0030C6  0EF4               	movlw	244
  5647  0030C8  6EE6               	movwf	postinc1,c
  5648  0030CA  0E01               	movlw	1
  5649  0030CC  6EE6               	movwf	postinc1,c
  5650  0030CE  ECC9  F02D         	call	_WaitMs	;wreg free
  5651                           
  5652                           ;gemsecs.c: 117:        V.error = LINK_ERROR_CHECKSUM;
  5653  0030D2  0E05               	movlw	5
  5654  0030D4  0100               	movlb	0	; () banked
  5655  0030D6  6FB6               	movwf	(_V+79)& (0+255),b
  5656                           
  5657                           ; BSR set to: 0
  5658                           ;gemsecs.c: 118:        V.failed_receive = 3;
  5659  0030D8  51BE               	movf	(_V+87)& (0+255),w,b
  5660  0030DA  0BF0               	andlw	-16
  5661  0030DC  0903               	iorlw	3
  5662  0030DE  6FBE               	movwf	(_V+87)& (0+255),b
  5663                           
  5664                           ; BSR set to: 0
  5665                           ;gemsecs.c: 119:        *m_link = LINK_STATE_NAK;
  5666                           ;stkvar	_m_link @ sp[(-1)+-1]
  5667  0030E0  0EFE               	movlw	-2
  5668  0030E2  50E3               	movf	plusw1,w,c
  5669  0030E4  6ED9               	movwf	fsr2l,c
  5670  0030E6  6ADA               	clrf	fsr2h,c
  5671  0030E8  0E05               	movlw	5
  5672  0030EA                     L17:
  5673  0030EA  6EDF               	movwf	indf2,c
  5674  0030EC                     l6807:
  5675                           
  5676                           ;gemsecs.c: 125:    if (UART2_is_rx_ready()) {
  5677  0030EC  ECB9  F030         	call	_UART2_is_rx_ready	;wreg free
  5678  0030F0  503B               	movf	btemp,w,c
  5679  0030F2  B4D8               	btfsc	status,2,c
  5680  0030F4  D10C               	goto	l6889
  5681                           
  5682                           ;gemsecs.c: 126:     rxData = UART2_Read();
  5683  0030F6  ECB0  F02C         	call	_UART2_Read	;wreg free
  5684                           
  5685                           ;stkvar	_rxData @ sp[(-1)+0]
  5686  0030FA  0EFF               	movlw	-1
  5687  0030FC  0060  F0EF  FFE3   	movff	btemp,plusw1
  5688                           
  5689                           ; BSR set to: 57
  5690                           ;gemsecs.c: 127:     if (rxData_l == 0) {
  5691  003102  502D               	movf	m_protocol@rxData_l,w,c
  5692  003104  A4D8               	btfss	status,2,c
  5693  003106  D00C               	goto	l6819
  5694                           
  5695                           ; BSR set to: 57
  5696                           ;gemsecs.c: 128:      r_block.length = rxData;
  5697                           ;stkvar	_rxData @ sp[(-1)+0]
  5698  003108  0EFF               	movlw	-1
  5699  00310A  006F FF8C  F0CC    	movff	plusw1,_r_block+12
  5700                           
  5701                           ; BSR set to: 57
  5702                           ;gemsecs.c: 129:      run_checksum(0, 1);
  5703  003110  0E01               	movlw	1
  5704  003112  6EE6               	movwf	postinc1,c
  5705  003114  0E00               	movlw	0
  5706  003116  6EE6               	movwf	postinc1,c
  5707  003118  EC47  F02D         	call	_run_checksum	;wreg free
  5708                           
  5709                           ; BSR set to: 0
  5710                           ;gemsecs.c: 130:      rxData_l++;
  5711  00311C  2A2D               	incf	m_protocol@rxData_l,f,c
  5712                           
  5713                           ;gemsecs.c: 131:     } else {
  5714  00311E  D0F7               	goto	l6889
  5715  003120                     l6819:
  5716                           
  5717                           ; BSR set to: 57
  5718                           ;gemsecs.c: 135:      if (rxData_l <= sizeof(block10))
  5719  003120  0E0B               	movlw	11
  5720  003122  602D               	cpfslt	m_protocol@rxData_l,c
  5721  003124  D00C               	goto	l6823
  5722                           
  5723                           ; BSR set to: 57
  5724                           ;gemsecs.c: 136:       H10[1].block.b[sizeof(block10) - rxData_l] = rxData;
  5725                           ;stkvar	_rxData @ sp[(-1)+0]
  5726  003126  502D               	movf	m_protocol@rxData_l,w,c
  5727  003128  0819               	sublw	low (_H10+25)
  5728  00312A  6ED9               	movwf	fsr2l,c
  5729  00312C  0E00               	movlw	0
  5730  00312E  A0D8               	btfss	status,0,c
  5731  003130  2AE8               	incf	wreg,f,c
  5732  003132  0801               	sublw	high (_H10+25)
  5733  003134  6EDA               	movwf	fsr2h,c
  5734  003136  0EFF               	movlw	-1
  5735  003138  006F FF8F FFDF     	movff	plusw1,indf2
  5736  00313E                     l6823:
  5737                           
  5738                           ; BSR set to: 57
  5739                           ;gemsecs.c: 137:      if (rxData_l <= r_block.length)
  5740  00313E  502D               	movf	m_protocol@rxData_l,w,c
  5741  003140  0100               	movlb	0	; () banked
  5742  003142  5DCC               	subwf	(_r_block+12)& (0+255),w,b
  5743  003144  A0D8               	btfss	status,0,c
  5744  003146  D00D               	goto	l6827
  5745                           
  5746                           ; BSR set to: 0
  5747                           ;gemsecs.c: 138:       V.r_checksum = run_checksum(rxData, 0);
  5748  003148  0E00               	movlw	0
  5749  00314A  6EE6               	movwf	postinc1,c
  5750                           
  5751                           ;stkvar	_rxData @ sp[(-2)+0]
  5752  00314C  0EFE               	movlw	-2
  5753  00314E  50E3               	movf	plusw1,w,c
  5754  003150  6EE6               	movwf	postinc1,c
  5755  003152  EC47  F02D         	call	_run_checksum	;wreg free
  5756  003156  0060  F0EC  F0B9   	movff	btemp,_V+82
  5757  00315C  0060  F0F0  F0BA   	movff	btemp+1,_V+83
  5758  003162                     l6827:
  5759                           
  5760                           ; BSR set to: 0
  5761                           ;gemsecs.c: 140:      if (rxData_l == r_block.length + 1)
  5762  003162  502D               	movf	m_protocol@rxData_l,w,c
  5763  003164  6E45               	movwf	btemp+10,c
  5764  003166  6A46               	clrf	btemp+11,c
  5765  003168  51CC               	movf	(_r_block+12)& (0+255),w,b
  5766  00316A  6E43               	movwf	btemp+8,c
  5767  00316C  6A44               	clrf	btemp+9,c
  5768  00316E  0E01               	movlw	1
  5769  003170  2643               	addwf	btemp+8,f,c
  5770  003172  0E00               	movlw	0
  5771  003174  2244               	addwfc	btemp+9,f,c
  5772  003176  5045               	movf	btemp+10,w,c
  5773  003178  1843               	xorwf	btemp+8,w,c
  5774  00317A  E109               	bnz	l6831
  5775  00317C  5046               	movf	btemp+11,w,c
  5776  00317E  1844               	xorwf	btemp+9,w,c
  5777  003180  A4D8               	btfss	status,2,c
  5778  003182  D005               	goto	l6831
  5779                           
  5780                           ; BSR set to: 0
  5781                           ;gemsecs.c: 141:       H10[1].checksum = (uint16_t) rxData << 8;
  5782                           ;stkvar	_rxData @ sp[(-1)+0]
  5783  003184  0EFF               	movlw	-1
  5784  003186  50E3               	movf	plusw1,w,c
  5785  003188  0101               	movlb	1	; () banked
  5786  00318A  6F0E               	movwf	(_H10+14)& (0+255),b
  5787  00318C  6B0D               	clrf	(_H10+13)& (0+255),b
  5788  00318E                     l6831:
  5789                           
  5790                           ;gemsecs.c: 142:      if (rxData_l == r_block.length + 2)
  5791  00318E  502D               	movf	m_protocol@rxData_l,w,c
  5792  003190  6E45               	movwf	btemp+10,c
  5793  003192  6A46               	clrf	btemp+11,c
  5794  003194  0100               	movlb	0	; () banked
  5795  003196  51CC               	movf	(_r_block+12)& (0+255),w,b
  5796  003198  6E43               	movwf	btemp+8,c
  5797  00319A  6A44               	clrf	btemp+9,c
  5798  00319C  0E02               	movlw	2
  5799  00319E  2643               	addwf	btemp+8,f,c
  5800  0031A0  0E00               	movlw	0
  5801  0031A2  2244               	addwfc	btemp+9,f,c
  5802  0031A4  5045               	movf	btemp+10,w,c
  5803  0031A6  1843               	xorwf	btemp+8,w,c
  5804  0031A8  E10A               	bnz	l6835
  5805  0031AA  5046               	movf	btemp+11,w,c
  5806  0031AC  1844               	xorwf	btemp+9,w,c
  5807  0031AE  A4D8               	btfss	status,2,c
  5808  0031B0  D006               	goto	l6835
  5809                           
  5810                           ; BSR set to: 0
  5811                           ;gemsecs.c: 143:       H10[1].checksum += rxData;
  5812                           ;stkvar	_rxData @ sp[(-1)+0]
  5813  0031B2  0EFF               	movlw	-1
  5814  0031B4  50E3               	movf	plusw1,w,c
  5815  0031B6  0101               	movlb	1	; () banked
  5816  0031B8  270D               	addwf	(_H10+13)& (0+255),f,b
  5817  0031BA  0E00               	movlw	0
  5818  0031BC  230E               	addwfc	(_H10+14)& (0+255),f,b
  5819  0031BE                     l6835:
  5820                           
  5821                           ;gemsecs.c: 145:      rxData_l++;
  5822  0031BE  2A2D               	incf	m_protocol@rxData_l,f,c
  5823                           
  5824                           ;gemsecs.c: 146:      if (rxData_l > (r_block.length + 2)) {
  5825  0031C0  502D               	movf	m_protocol@rxData_l,w,c
  5826  0031C2  6E45               	movwf	btemp+10,c
  5827  0031C4  6A46               	clrf	btemp+11,c
  5828  0031C6  0100               	movlb	0	; () banked
  5829  0031C8  51CC               	movf	(_r_block+12)& (0+255),w,b
  5830  0031CA  6E43               	movwf	btemp+8,c
  5831  0031CC  6A44               	clrf	btemp+9,c
  5832  0031CE  0E02               	movlw	2
  5833  0031D0  2643               	addwf	btemp+8,f,c
  5834  0031D2  0E00               	movlw	0
  5835  0031D4  2244               	addwfc	btemp+9,f,c
  5836  0031D6  5045               	movf	btemp+10,w,c
  5837  0031D8  5C43               	subwf	btemp+8,w,c
  5838  0031DA  5044               	movf	btemp+9,w,c
  5839  0031DC  0A80               	xorlw	128
  5840  0031DE  6E3B               	movwf	btemp,c
  5841  0031E0  5046               	movf	btemp+11,w,c
  5842  0031E2  0A80               	xorlw	128
  5843  0031E4  583B               	subwfb	btemp,w,c
  5844  0031E6  B0D8               	btfsc	status,0,c
  5845  0031E8  D092               	goto	l6889
  5846                           
  5847                           ; BSR set to: 0
  5848                           ;gemsecs.c: 147:       if (V.r_checksum == H10[1].checksum) {
  5849  0031EA  0101               	movlb	1	; () banked
  5850  0031EC  510D               	movf	(_H10+13)& (0+255),w,b
  5851  0031EE  0100               	movlb	0	; () banked
  5852  0031F0  19B9               	xorwf	(_V+82)& (0+255),w,b
  5853  0031F2  E10E               	bnz	l6845
  5854  0031F4  0101               	movlb	1	; () banked
  5855  0031F6  510E               	movf	(_H10+14)& (0+255),w,b
  5856  0031F8  0100               	movlb	0	; () banked
  5857  0031FA  19BA               	xorwf	(_V+83)& (0+255),w,b
  5858  0031FC  A4D8               	btfss	status,2,c
  5859  0031FE  D008               	goto	l6845
  5860                           
  5861                           ; BSR set to: 0
  5862                           ;gemsecs.c: 148:        *m_link = LINK_STATE_ACK;
  5863                           ;stkvar	_m_link @ sp[(-1)+-1]
  5864  003200  0EFE               	movlw	-2
  5865  003202  50E3               	movf	plusw1,w,c
  5866  003204  6ED9               	movwf	fsr2l,c
  5867  003206  6ADA               	clrf	fsr2h,c
  5868  003208  0E03               	movlw	3
  5869  00320A  D05E               	goto	L20
  5870  00320C                     l6843:
  5871  00320C  ECB0  F02C         	call	_UART2_Read	;wreg free
  5872  003210                     l6845:
  5873                           
  5874                           ;gemsecs.c: 150:        while (UART2_is_rx_ready())
  5875  003210  ECB9  F030         	call	_UART2_is_rx_ready	;wreg free
  5876  003214  503B               	movf	btemp,w,c
  5877  003216  A4D8               	btfss	status,2,c
  5878  003218  D7F9               	goto	l6843
  5879                           
  5880                           ;gemsecs.c: 152:        WaitMs(500);
  5881  00321A  0EF4               	movlw	244
  5882  00321C  6EE6               	movwf	postinc1,c
  5883  00321E  0E01               	movlw	1
  5884  003220  6EE6               	movwf	postinc1,c
  5885  003222  ECC9  F02D         	call	_WaitMs	;wreg free
  5886                           
  5887                           ;gemsecs.c: 153:        V.error = LINK_ERROR_CHECKSUM;
  5888  003226  0E05               	movlw	5
  5889  003228  0100               	movlb	0	; () banked
  5890  00322A  6FB6               	movwf	(_V+79)& (0+255),b
  5891                           
  5892                           ; BSR set to: 0
  5893                           ;gemsecs.c: 154:        V.failed_receive = 4;
  5894  00322C  51BE               	movf	(_V+87)& (0+255),w,b
  5895  00322E  0BF0               	andlw	-16
  5896  003230  0904               	iorlw	4
  5897  003232  D6AB               	goto	L19
  5898  003234                     l6855:
  5899                           
  5900                           ;gemsecs.c: 166:   V.stream = H10[1].block.block.stream;
  5901  003234  0101               	movlb	1	; () banked
  5902  003236  5116               	movf	(_H10+22)& (0+255),w,b
  5903  003238  0B7F               	andlw	127
  5904  00323A  0100               	movlb	0	; () banked
  5905  00323C  6FB4               	movwf	(_V+77)& (0+255),b
  5906                           
  5907                           ; BSR set to: 0
  5908                           ;gemsecs.c: 167:   V.function = H10[1].block.block.function;
  5909  00323E  C115  F0B5         	movff	_H10+21,_V+78
  5910                           
  5911                           ; BSR set to: 0
  5912                           ;gemsecs.c: 168:   V.systemb = H10[1].block.block.systemb;
  5913  003242  C10F  F0B0         	movff	_H10+15,_V+73
  5914  003246  C110  F0B1         	movff	_H10+16,_V+74
  5915  00324A  C111  F0B2         	movff	_H10+17,_V+75
  5916  00324E  C112  F0B3         	movff	_H10+18,_V+76
  5917                           
  5918                           ; BSR set to: 0
  5919                           ;gemsecs.c: 169:   V.rbit = H10[1].block.block.rbit;
  5920  003252  0101               	movlb	1	; () banked
  5921  003254  AF18               	btfss	(_H10+24)& (0+255),7,b
  5922  003256  D003               	bra	u4045
  5923  003258  0100               	movlb	0	; () banked
  5924  00325A  81BD               	bsf	(_V+86)& (0+255),0,b
  5925  00325C  D002               	bra	u4047
  5926  00325E                     u4045:
  5927  00325E  0100               	movlb	0	; () banked
  5928  003260  91BD               	bcf	(_V+86)& (0+255),0,b
  5929  003262                     u4047:
  5930                           
  5931                           ; BSR set to: 0
  5932                           ;gemsecs.c: 170:   V.wbit = H10[1].block.block.wbit;
  5933  003262  0101               	movlb	1	; () banked
  5934  003264  AF16               	btfss	(_H10+22)& (0+255),7,b
  5935  003266  D003               	bra	u4055
  5936  003268  0100               	movlb	0	; () banked
  5937  00326A  83BD               	bsf	(_V+86)& (0+255),1,b
  5938  00326C  D002               	bra	u4057
  5939  00326E                     u4055:
  5940  00326E  0100               	movlb	0	; () banked
  5941  003270  93BD               	bcf	(_V+86)& (0+255),1,b
  5942  003272                     u4057:
  5943                           
  5944                           ; BSR set to: 0
  5945                           ;gemsecs.c: 171:   V.ebit = H10[1].block.block.ebit;
  5946  003272  0101               	movlb	1	; () banked
  5947  003274  AF14               	btfss	(_H10+20)& (0+255),7,b
  5948  003276  D003               	bra	u4065
  5949  003278  0100               	movlb	0	; () banked
  5950  00327A  85BD               	bsf	(_V+86)& (0+255),2,b
  5951  00327C  D002               	bra	u4067
  5952  00327E                     u4065:
  5953  00327E  0100               	movlb	0	; () banked
  5954  003280  95BD               	bcf	(_V+86)& (0+255),2,b
  5955  003282                     u4067:
  5956                           
  5957                           ; BSR set to: 0
  5958                           ;gemsecs.c: 172:   V.failed_receive = 0;
  5959  003282  0EF0               	movlw	-16
  5960  003284  17BE               	andwf	(_V+87)& (0+255),f,b
  5961                           
  5962                           ; BSR set to: 0
  5963                           ;gemsecs.c: 173:   *m_link = LINK_STATE_DONE;
  5964                           ;stkvar	_m_link @ sp[(-1)+-1]
  5965  003286  0EFE               	movlw	-2
  5966  003288  50E3               	movf	plusw1,w,c
  5967  00328A  6ED9               	movwf	fsr2l,c
  5968  00328C  6ADA               	clrf	fsr2h,c
  5969  00328E  0E04               	movlw	4
  5970  003290  D01B               	goto	L20
  5971  003292                     l6871:
  5972                           
  5973                           ;gemsecs.c: 176:   *m_link = LINK_STATE_ERROR;
  5974                           ;stkvar	_m_link @ sp[(-1)+-1]
  5975  003292  0EFE               	movlw	-2
  5976  003294  50E3               	movf	plusw1,w,c
  5977  003296  6ED9               	movwf	fsr2l,c
  5978  003298  6ADA               	clrf	fsr2h,c
  5979  00329A  0E06               	movlw	6
  5980  00329C  6EDF               	movwf	indf2,c
  5981                           
  5982                           ;gemsecs.c: 177:   while ((uart1RxCount)) {
  5983  00329E  D002               	goto	l6875
  5984  0032A0                     l6873:
  5985                           
  5986                           ;gemsecs.c: 178:    UART1_Read();
  5987  0032A0  ECCF  F02C         	call	_UART1_Read	;wreg free
  5988  0032A4                     l6875:
  5989                           
  5990                           ;gemsecs.c: 177:   while ((uart1RxCount)) {
  5991  0032A4  5035               	movf	_uart1RxCount,w,c	;volatile
  5992  0032A6  B4D8               	btfsc	status,2,c
  5993  0032A8  D003               	goto	l6879
  5994  0032AA  D7FA               	goto	l6873
  5995  0032AC                     l6877:
  5996                           
  5997                           ;gemsecs.c: 181:    UART2_Read();
  5998  0032AC  ECB0  F02C         	call	_UART2_Read	;wreg free
  5999  0032B0                     l6879:
  6000                           
  6001                           ;gemsecs.c: 180:   while ((uart2RxCount)) {
  6002  0032B0  502F               	movf	_uart2RxCount,w,c	;volatile
  6003  0032B2  B4D8               	btfsc	status,2,c
  6004  0032B4  D02C               	goto	l6889
  6005  0032B6  D7FA               	goto	l6877
  6006  0032B8                     l6881:
  6007                           
  6008                           ;gemsecs.c: 187:   V.failed_receive = 0;
  6009  0032B8  0EF0               	movlw	-16
  6010  0032BA  0100               	movlb	0	; () banked
  6011  0032BC  17BE               	andwf	(_V+87)& (0+255),f,b
  6012  0032BE                     l6883:
  6013                           
  6014                           ;gemsecs.c: 189:   *m_link = LINK_STATE_IDLE;
  6015                           ;stkvar	_m_link @ sp[(-1)+-1]
  6016  0032BE  0EFE               	movlw	-2
  6017  0032C0  50E3               	movf	plusw1,w,c
  6018  0032C2  6ED9               	movwf	fsr2l,c
  6019  0032C4  6ADA               	clrf	fsr2h,c
  6020  0032C6  0E00               	movlw	0
  6021  0032C8                     L20:
  6022  0032C8  6EDF               	movwf	indf2,c
  6023                           
  6024                           ;gemsecs.c: 191:   break;
  6025  0032CA  D021               	goto	l6889
  6026  0032CC                     l6887:
  6027                           
  6028                           ;stkvar	_m_link @ sp[(-1)+-1]
  6029  0032CC  0EFE               	movlw	-2
  6030  0032CE  50E3               	movf	plusw1,w,c
  6031  0032D0  6ED9               	movwf	fsr2l,c
  6032  0032D2  6ADA               	clrf	fsr2h,c
  6033  0032D4  50DF               	movf	indf2,w,c
  6034  0032D6  6E45               	movwf	btemp+10,c
  6035  0032D8  6A46               	clrf	btemp+11,c
  6036                           
  6037                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6038                           ; Switch size 1, requested type "simple"
  6039                           ; Number of cases is 1, Range of values is 0 to 0
  6040                           ; switch strategies available:
  6041                           ; Name         Instructions Cycles
  6042                           ; simple_byte            4     3 (average)
  6043                           ;	Chosen strategy is simple_byte
  6044  0032DA  5046               	movf	btemp+11,w,c
  6045  0032DC  0A00               	xorlw	0	; case 0
  6046  0032DE  A4D8               	btfss	status,2,c
  6047  0032E0  D7EE               	goto	l6883
  6048                           
  6049                           ; Switch size 1, requested type "simple"
  6050                           ; Number of cases is 7, Range of values is 0 to 6
  6051                           ; switch strategies available:
  6052                           ; Name         Instructions Cycles
  6053                           ; simple_byte           22    12 (average)
  6054                           ;	Chosen strategy is simple_byte
  6055  0032E2  5045               	movf	btemp+10,w,c
  6056  0032E4  0A00               	xorlw	0	; case 0
  6057  0032E6  B4D8               	btfsc	status,2,c
  6058  0032E8  D5E6               	goto	l6721
  6059  0032EA  0A01               	xorlw	1	; case 1
  6060  0032EC  B4D8               	btfsc	status,2,c
  6061  0032EE  D62F               	goto	l1544
  6062  0032F0  0A03               	xorlw	3	; case 2
  6063  0032F2  B4D8               	btfsc	status,2,c
  6064  0032F4  D63D               	goto	l6753
  6065  0032F6  0A01               	xorlw	1	; case 3
  6066  0032F8  B4D8               	btfsc	status,2,c
  6067  0032FA  D79C               	goto	l6855
  6068  0032FC  0A07               	xorlw	7	; case 4
  6069  0032FE  B4D8               	btfsc	status,2,c
  6070  003300  D7DB               	goto	l6881
  6071  003302  0A01               	xorlw	1	; case 5
  6072  003304  B4D8               	btfsc	status,2,c
  6073  003306  D7C5               	goto	l6871
  6074  003308  0A03               	xorlw	3	; case 6
  6075  00330A  A4D8               	btfss	status,2,c
  6076  00330C  D7D8               	goto	l6883
  6077  00330E                     l6889:
  6078                           
  6079                           ;gemsecs.c: 194:  return *m_link;
  6080                           ;stkvar	_m_link @ sp[(-1)+-1]
  6081  00330E  0EFE               	movlw	-2
  6082  003310  50E3               	movf	plusw1,w,c
  6083  003312  6ED9               	movwf	fsr2l,c
  6084  003314  6ADA               	clrf	fsr2h,c
  6085  003316  50DF               	movf	indf2,w,c
  6086  003318  6E3B               	movwf	btemp,c
  6087                           
  6088                           ; _m_protocol: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  6089  00331A  52E5               	movf	postdec1,f,c
  6090  00331C  52E5               	movf	postdec1,f,c
  6091  00331E  0012               	return		;funcret
  6092  003320                     __end_of_m_protocol:
  6093                           	opt callstack 0
  6094                           
  6095 ;; *************** function _run_checksum *****************
  6096 ;; Defined at:
  6097 ;;		line 31 in file "gemsecs.c"
  6098 ;; Parameters:    Size  Location     Type
  6099 ;;  byte_block      1  [STACK] unsigned char 
  6100 ;;  clear           1  [STACK] _Bool 
  6101 ;; Auto vars:     Size  Location     Type
  6102 ;;		None
  6103 ;; Return value:  Size  Location     Type
  6104 ;;                  2  [STACK] unsigned short 
  6105 ;; Registers used:
  6106 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
  6107 ;; Tracked objects:
  6108 ;;		On entry : 6/39
  6109 ;;		On exit  : 3F/0
  6110 ;;		Unchanged: 0/0
  6111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6112 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6113 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6114 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6115 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6116 ;;Total ram usage:        0 bytes
  6117 ;; Hardware stack levels used:    1
  6118 ;; Hardware stack levels required when called:    3
  6119 ;; This function calls:
  6120 ;;		Nothing
  6121 ;; This function is called by:
  6122 ;;		_m_protocol
  6123 ;;		_r_protocol
  6124 ;; This function uses a reentrant model
  6125 ;;
  6126                           
  6127                           	psect	text14
  6128  005A8E                     __ptext14:
  6129                           	opt callstack 0
  6130  005A8E                     _run_checksum:
  6131                           	opt callstack 26
  6132                           
  6133                           ;gemsecs.c: 31: uint16_t run_checksum(uint8_t byte_block, _Bool clear);gemsecs.c: 32: {;
      +                          gemsecs.c: 33:  static uint16_t sum = 0;;gemsecs.c: 35:  if (clear)
  6134                           ;stkvar	_clear @ sp[(0)+-2]
  6135                           
  6136                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6137                           ;incstack = 0
  6138  005A8E  0EFE               	movlw	-2
  6139  005A90  50E3               	movf	plusw1,w,c
  6140  005A92  B4D8               	btfsc	status,2,c
  6141  005A94  D003               	goto	l6069
  6142                           
  6143                           ;gemsecs.c: 36:   sum = 0;
  6144  005A96  0100               	movlb	0	; () banked
  6145  005A98  6BF8               	clrf	run_checksum@sum& (0+255),b
  6146  005A9A  6BF9               	clrf	(run_checksum@sum+1)& (0+255),b
  6147  005A9C                     l6069:
  6148                           
  6149                           ;gemsecs.c: 38:  sum += byte_block;
  6150                           ;stkvar	_byte_block @ sp[(0)+-1]
  6151  005A9C  0EFF               	movlw	-1
  6152  005A9E  50E3               	movf	plusw1,w,c
  6153  005AA0  0100               	movlb	0	; () banked
  6154  005AA2  27F8               	addwf	run_checksum@sum& (0+255),f,b
  6155  005AA4  0E00               	movlw	0
  6156  005AA6  23F9               	addwfc	(run_checksum@sum+1)& (0+255),f,b
  6157                           
  6158                           ; BSR set to: 0
  6159                           ;gemsecs.c: 39:  return sum;
  6160  005AA8  0060  F3E0  F03B   	movff	run_checksum@sum,btemp
  6161  005AAE  0060  F3E4  F03C   	movff	run_checksum@sum+1,btemp+1
  6162                           
  6163                           ; BSR set to: 0
  6164                           ; _run_checksum: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, 
      +                          argsize = 2, vargsize = 0
  6165  005AB4  52E5               	movf	postdec1,f,c
  6166  005AB6  52E5               	movf	postdec1,f,c
  6167  005AB8  0012               	return		;funcret
  6168  005ABA                     __end_of_run_checksum:
  6169                           	opt callstack 0
  6170                           
  6171 ;; *************** function _WaitMs *****************
  6172 ;; Defined at:
  6173 ;;		line 31 in file "timers.c"
  6174 ;; Parameters:    Size  Location     Type
  6175 ;;  numMilliseco    2  [STACK] unsigned short 
  6176 ;; Auto vars:     Size  Location     Type
  6177 ;;		None
  6178 ;; Return value:  Size  Location     Type
  6179 ;;                  1  [STACK] void 
  6180 ;; Registers used:
  6181 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  6182 ;; Tracked objects:
  6183 ;;		On entry : 0/0
  6184 ;;		On exit  : 0/0
  6185 ;;		Unchanged: 0/0
  6186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6187 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6188 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6190 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6191 ;;Total ram usage:        0 bytes
  6192 ;; Hardware stack levels used:    1
  6193 ;; Hardware stack levels required when called:    4
  6194 ;; This function calls:
  6195 ;;		_StartTimer
  6196 ;;		_TimerDone
  6197 ;; This function is called by:
  6198 ;;		_main
  6199 ;;		_m_protocol
  6200 ;;		_r_protocol
  6201 ;; This function uses a reentrant model
  6202 ;;
  6203                           
  6204                           	psect	text15
  6205  005B92                     __ptext15:
  6206                           	opt callstack 0
  6207  005B92                     _WaitMs:
  6208                           	opt callstack 25
  6209                           
  6210                           ;timers.c: 31: void WaitMs(uint16_t numMilliseconds);timers.c: 32: {;timers.c: 33:  Star
      +                          tTimer(TMR_INTERNAL, numMilliseconds);
  6211                           ;stkvar	_numMilliseconds @ sp[(0)+-2]
  6212                           
  6213                           ; BSR set to: 0
  6214                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6215                           ;incstack = 0
  6216  005B92  0EFE               	movlw	-2
  6217  005B94  006F FF8F FFE6     	movff	plusw1,postinc1
  6218  005B9A  006F FF8F FFE6     	movff	plusw1,postinc1
  6219  005BA0  0E00               	movlw	0
  6220  005BA2  6EE6               	movwf	postinc1,c
  6221  005BA4  EC0D  F02D         	call	_StartTimer	;wreg free
  6222  005BA8                     l6007:
  6223                           
  6224                           ;timers.c: 34:  while (!TimerDone(TMR_INTERNAL)) {
  6225  005BA8  0E00               	movlw	0
  6226  005BAA  6EE6               	movwf	postinc1,c
  6227  005BAC  EC7F  F02F         	call	_TimerDone	;wreg free
  6228  005BB0  503B               	movf	btemp,w,c
  6229  005BB2  B4D8               	btfsc	status,2,c
  6230  005BB4  D7F9               	goto	l6007
  6231                           
  6232                           ; _WaitMs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
  6233  005BB6  52E5               	movf	postdec1,f,c
  6234  005BB8  52E5               	movf	postdec1,f,c
  6235  005BBA  0012               	return		;funcret
  6236  005BBC                     __end_of_WaitMs:
  6237                           	opt callstack 0
  6238                           
  6239 ;; *************** function _TimerDone *****************
  6240 ;; Defined at:
  6241 ;;		line 20 in file "timers.c"
  6242 ;; Parameters:    Size  Location     Type
  6243 ;;  timer           1  [STACK] unsigned char 
  6244 ;; Auto vars:     Size  Location     Type
  6245 ;;		None
  6246 ;; Return value:  Size  Location     Type
  6247 ;;                  1  [STACK] _Bool 
  6248 ;; Registers used:
  6249 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
  6250 ;; Tracked objects:
  6251 ;;		On entry : 0/0
  6252 ;;		On exit  : 0/0
  6253 ;;		Unchanged: 0/0
  6254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6255 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6256 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6257 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6258 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6259 ;;Total ram usage:        0 bytes
  6260 ;; Hardware stack levels used:    1
  6261 ;; Hardware stack levels required when called:    3
  6262 ;; This function calls:
  6263 ;;		Nothing
  6264 ;; This function is called by:
  6265 ;;		_m_protocol
  6266 ;;		_r_protocol
  6267 ;;		_t_protocol
  6268 ;;		_WaitMs
  6269 ;; This function uses a reentrant model
  6270 ;;
  6271                           
  6272                           	psect	text16
  6273  005EFE                     __ptext16:
  6274                           	opt callstack 0
  6275  005EFE                     _TimerDone:
  6276                           	opt callstack 26
  6277                           
  6278                           ;timers.c: 20: __attribute__((inline)) _Bool TimerDone(uint8_t timer);timers.c: 21: {;ti
      +                          mers.c: 22:  if (tickCount[timer] == 0) {
  6279                           ;stkvar	_timer @ sp[(0)+-1]
  6280                           
  6281                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6282                           ;incstack = 0
  6283  005EFE  0EFF               	movlw	-1
  6284  005F00  50E3               	movf	plusw1,w,c
  6285  005F02  0D02               	mullw	2
  6286  005F04  50F3               	movf	prodl,w,c
  6287  005F06  0FD9               	addlw	low _tickCount
  6288  005F08  6ED9               	movwf	fsr2l,c
  6289  005F0A  6ADA               	clrf	fsr2h,c
  6290  005F0C  50DE               	movf	postinc2,w,c
  6291  005F0E  10DE               	iorwf	postinc2,w,c
  6292  005F10  A4D8               	btfss	status,2,c
  6293  005F12  D002               	goto	l5813
  6294                           
  6295                           ;timers.c: 23:   return 1;
  6296  005F14  0E01               	movlw	1
  6297  005F16  D001               	goto	L21
  6298  005F18                     l5813:
  6299                           
  6300                           ;timers.c: 25:  return 0;
  6301  005F18  0E00               	movlw	0
  6302  005F1A                     L21:
  6303  005F1A  6E3B               	movwf	btemp,c
  6304                           
  6305                           ; _TimerDone: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
  6306  005F1C  52E5               	movf	postdec1,f,c
  6307  005F1E  0012               	return		;funcret
  6308  005F20                     __end_of_TimerDone:
  6309                           	opt callstack 0
  6310                           
  6311 ;; *************** function _StartTimer *****************
  6312 ;; Defined at:
  6313 ;;		line 12 in file "timers.c"
  6314 ;; Parameters:    Size  Location     Type
  6315 ;;  timer           1  [STACK] unsigned char 
  6316 ;;  count           2  [STACK] unsigned short 
  6317 ;; Auto vars:     Size  Location     Type
  6318 ;;		None
  6319 ;; Return value:  Size  Location     Type
  6320 ;;                  1  [STACK] void 
  6321 ;; Registers used:
  6322 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  6323 ;; Tracked objects:
  6324 ;;		On entry : 0/39
  6325 ;;		On exit  : 0/0
  6326 ;;		Unchanged: 0/0
  6327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6328 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6329 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6330 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6331 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6332 ;;Total ram usage:        0 bytes
  6333 ;; Hardware stack levels used:    1
  6334 ;; Hardware stack levels required when called:    3
  6335 ;; This function calls:
  6336 ;;		Nothing
  6337 ;; This function is called by:
  6338 ;;		_m_protocol
  6339 ;;		_r_protocol
  6340 ;;		_t_protocol
  6341 ;;		_WaitMs
  6342 ;; This function uses a reentrant model
  6343 ;;
  6344                           
  6345                           	psect	text17
  6346  005A1A                     __ptext17:
  6347                           	opt callstack 0
  6348  005A1A                     _StartTimer:
  6349                           	opt callstack 26
  6350                           
  6351                           ;timers.c: 12: __attribute__((inline)) void StartTimer(uint8_t timer, uint16_t count);ti
      +                          mers.c: 13: {;timers.c: 14:  tickCount[timer] = count << 1;
  6352                           ;stkvar	_count @ sp[(0)+-3]
  6353                           
  6354                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6355                           ;incstack = 0
  6356  005A1A  0EFD               	movlw	-3
  6357  005A1C  006F FF8C  F045    	movff	plusw1,btemp+10
  6358  005A22  0EFE               	movlw	-2
  6359  005A24  006F FF8C  F046    	movff	plusw1,btemp+11
  6360  005A2A  90D8               	bcf	status,0,c
  6361  005A2C  3445               	rlcf	btemp+10,w,c
  6362  005A2E  6E43               	movwf	btemp+8,c
  6363  005A30  3446               	rlcf	btemp+11,w,c
  6364  005A32  6E44               	movwf	btemp+9,c
  6365                           
  6366                           ;stkvar	_timer @ sp[(0)+-1]
  6367  005A34  0EFF               	movlw	-1
  6368  005A36  50E3               	movf	plusw1,w,c
  6369  005A38  0D02               	mullw	2
  6370  005A3A  50F3               	movf	prodl,w,c
  6371  005A3C  0FD9               	addlw	low _tickCount
  6372  005A3E  6ED9               	movwf	fsr2l,c
  6373  005A40  6ADA               	clrf	fsr2h,c
  6374  005A42  0060  F10F  FFDE   	movff	btemp+8,postinc2
  6375  005A48  0060  F113  FFDD   	movff	btemp+9,postdec2
  6376                           
  6377                           ; _StartTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
  6378  005A4E  52E5               	movf	postdec1,f,c
  6379  005A50  52E5               	movf	postdec1,f,c
  6380  005A52  52E5               	movf	postdec1,f,c
  6381  005A54  0012               	return		;funcret
  6382  005A56                     __end_of_StartTimer:
  6383                           	opt callstack 0
  6384                           
  6385 ;; *************** function _UART2_is_rx_ready *****************
  6386 ;; Defined at:
  6387 ;;		line 137 in file "mcc_generated_files/uart2.c"
  6388 ;; Parameters:    Size  Location     Type
  6389 ;;		None
  6390 ;; Auto vars:     Size  Location     Type
  6391 ;;		None
  6392 ;; Return value:  Size  Location     Type
  6393 ;;                  1  [STACK] unsigned char 
  6394 ;; Registers used:
  6395 ;;		btemp
  6396 ;; Tracked objects:
  6397 ;;		On entry : 0/0
  6398 ;;		On exit  : 0/0
  6399 ;;		Unchanged: 0/0
  6400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6401 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6402 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6403 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6404 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6405 ;;Total ram usage:        0 bytes
  6406 ;; Hardware stack levels used:    1
  6407 ;; Hardware stack levels required when called:    3
  6408 ;; This function calls:
  6409 ;;		Nothing
  6410 ;; This function is called by:
  6411 ;;		_m_protocol
  6412 ;; This function uses a reentrant model
  6413 ;;
  6414                           
  6415                           	psect	text18
  6416  006172                     __ptext18:
  6417                           	opt callstack 0
  6418  006172                     _UART2_is_rx_ready:
  6419                           	opt callstack 26
  6420                           
  6421                           ;mcc_generated_files/uart2.c: 139:     return uart2RxCount;
  6422                           
  6423                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6424                           ;incstack = 0
  6425  006172  0060  F0BC  F03B   	movff	_uart2RxCount,btemp	;volatile
  6426                           
  6427                           ; _UART2_is_rx_ready: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
  6428  006178  0012               	return		;funcret
  6429  00617A                     __end_of_UART2_is_rx_ready:
  6430                           	opt callstack 0
  6431                           
  6432 ;; *************** function _UART2_Read *****************
  6433 ;; Defined at:
  6434 ;;		line 152 in file "mcc_generated_files/uart2.c"
  6435 ;; Parameters:    Size  Location     Type
  6436 ;;		None
  6437 ;; Auto vars:     Size  Location     Type
  6438 ;;  readValue       1  [STACK] unsigned char 
  6439 ;; Return value:  Size  Location     Type
  6440 ;;                  1  [STACK] unsigned char 
  6441 ;; Registers used:
  6442 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+11
  6443 ;; Tracked objects:
  6444 ;;		On entry : 0/0
  6445 ;;		On exit  : 3F/39
  6446 ;;		Unchanged: 0/0
  6447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6448 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6449 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6450 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6451 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6452 ;;Total ram usage:        0 bytes
  6453 ;; Hardware stack levels used:    1
  6454 ;; Hardware stack levels required when called:    3
  6455 ;; This function calls:
  6456 ;;		Nothing
  6457 ;; This function is called by:
  6458 ;;		_m_protocol
  6459 ;; This function uses a reentrant model
  6460 ;;
  6461                           
  6462                           	psect	text19
  6463  005960                     __ptext19:
  6464                           	opt callstack 0
  6465  005960                     _UART2_Read:
  6466                           	opt callstack 0
  6467                           
  6468                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6469  005960  52E6               	movf	postinc1,f,c
  6470  005962                     
  6471                           ;mcc_generated_files/uart2.c: 156:     while(0 == uart2RxCount)
  6472                           
  6473                           ;mcc_generated_files/uart2.c: 156:     while(0 == uart2RxCount)
  6474  005962  502F               	movf	_uart2RxCount,w,c	;volatile
  6475  005964  B4D8               	btfsc	status,2,c
  6476  005966  D7FD               	goto	l5969
  6477                           
  6478                           ;mcc_generated_files/uart2.c: 160:     readValue = uart2RxBuffer[uart2RxTail++];
  6479  005968  0E00               	movlw	low _uart2RxBuffer
  6480  00596A  2430               	addwf	_uart2RxTail,w,c	;volatile
  6481  00596C  6ED9               	movwf	fsr2l,c
  6482  00596E  6ADA               	clrf	fsr2h,c
  6483  005970  0E02               	movlw	high _uart2RxBuffer
  6484  005972  22DA               	addwfc	fsr2h,f,c
  6485  005974  50DF               	movf	indf2,w,c
  6486  005976  6E46               	movwf	btemp+11,c
  6487                           
  6488                           ;stkvar	_readValue @ sp[(-1)+0]
  6489  005978  0EFF               	movlw	-1
  6490  00597A  0060  F11B  FFE3   	movff	btemp+11,plusw1
  6491  005980  2A30               	incf	_uart2RxTail,f,c	;volatile
  6492                           
  6493                           ;mcc_generated_files/uart2.c: 161:     if(sizeof(uart2RxBuffer) <= uart2RxTail)
  6494  005982  0E3F               	movlw	63
  6495  005984  6430               	cpfsgt	_uart2RxTail,c
  6496  005986  D001               	goto	l692
  6497                           
  6498                           ;mcc_generated_files/uart2.c: 162:     {;mcc_generated_files/uart2.c: 163:         uart2
      +                          RxTail = 0;
  6499  005988  6A30               	clrf	_uart2RxTail,c	;volatile
  6500  00598A                     l692:
  6501                           
  6502                           ;mcc_generated_files/uart2.c: 165:     PIE6bits.U2RXIE = 0;
  6503  00598A  0139               	movlb	57	; () banked
  6504  00598C  9596               	bcf	150,2,b	;volatile
  6505                           
  6506                           ; BSR set to: 57
  6507                           ;mcc_generated_files/uart2.c: 166:     uart2RxCount--;
  6508  00598E  062F               	decf	_uart2RxCount,f,c	;volatile
  6509                           
  6510                           ; BSR set to: 57
  6511                           ;mcc_generated_files/uart2.c: 167:     PIE6bits.U2RXIE = 1;
  6512  005990  8596               	bsf	150,2,b	;volatile
  6513                           
  6514                           ; BSR set to: 57
  6515                           ;mcc_generated_files/uart2.c: 169:     return readValue;
  6516                           ;stkvar	_readValue @ sp[(-1)+0]
  6517  005992  0EFF               	movlw	-1
  6518  005994  006F FF8C  F03B    	movff	plusw1,btemp
  6519                           
  6520                           ; BSR set to: 57
  6521                           ; _UART2_Read: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  6522  00599A  52E5               	movf	postdec1,f,c
  6523  00599C  0012               	return		;funcret
  6524  00599E                     __end_of_UART2_Read:
  6525                           	opt callstack 0
  6526                           
  6527 ;; *************** function _UART1_is_rx_ready *****************
  6528 ;; Defined at:
  6529 ;;		line 146 in file "mcc_generated_files/uart1.c"
  6530 ;; Parameters:    Size  Location     Type
  6531 ;;		None
  6532 ;; Auto vars:     Size  Location     Type
  6533 ;;		None
  6534 ;; Return value:  Size  Location     Type
  6535 ;;                  1  [STACK] unsigned char 
  6536 ;; Registers used:
  6537 ;;		btemp
  6538 ;; Tracked objects:
  6539 ;;		On entry : 0/0
  6540 ;;		On exit  : 0/0
  6541 ;;		Unchanged: 0/0
  6542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6543 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6544 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6545 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6546 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6547 ;;Total ram usage:        0 bytes
  6548 ;; Hardware stack levels used:    1
  6549 ;; Hardware stack levels required when called:    3
  6550 ;; This function calls:
  6551 ;;		Nothing
  6552 ;; This function is called by:
  6553 ;;		_m_protocol
  6554 ;;		_r_protocol
  6555 ;;		_t_protocol
  6556 ;; This function uses a reentrant model
  6557 ;;
  6558                           
  6559                           	psect	text20
  6560  00617A                     __ptext20:
  6561                           	opt callstack 0
  6562  00617A                     _UART1_is_rx_ready:
  6563                           	opt callstack 26
  6564                           
  6565                           ;mcc_generated_files/uart1.c: 148:  return uart1RxCount;
  6566                           
  6567                           ; BSR set to: 57
  6568                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6569                           ;incstack = 0
  6570  00617A  0060  F0D4  F03B   	movff	_uart1RxCount,btemp	;volatile
  6571                           
  6572                           ; _UART1_is_rx_ready: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
  6573  006180  0012               	return		;funcret
  6574  006182                     __end_of_UART1_is_rx_ready:
  6575                           	opt callstack 0
  6576                           
  6577 ;; *************** function _UART1_Read *****************
  6578 ;; Defined at:
  6579 ;;		line 161 in file "mcc_generated_files/uart1.c"
  6580 ;; Parameters:    Size  Location     Type
  6581 ;;		None
  6582 ;; Auto vars:     Size  Location     Type
  6583 ;;  readValue       1  [STACK] unsigned char 
  6584 ;; Return value:  Size  Location     Type
  6585 ;;                  1  [STACK] unsigned char 
  6586 ;; Registers used:
  6587 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+11
  6588 ;; Tracked objects:
  6589 ;;		On entry : 0/0
  6590 ;;		On exit  : 3F/39
  6591 ;;		Unchanged: 0/0
  6592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6593 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6594 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6595 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6596 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6597 ;;Total ram usage:        0 bytes
  6598 ;; Hardware stack levels used:    1
  6599 ;; Hardware stack levels required when called:    3
  6600 ;; This function calls:
  6601 ;;		Nothing
  6602 ;; This function is called by:
  6603 ;;		_m_protocol
  6604 ;;		_r_protocol
  6605 ;;		_t_protocol
  6606 ;; This function uses a reentrant model
  6607 ;;
  6608                           
  6609                           	psect	text21
  6610  00599E                     __ptext21:
  6611                           	opt callstack 0
  6612  00599E                     _UART1_Read:
  6613                           	opt callstack 0
  6614                           
  6615                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6616  00599E  52E6               	movf	postinc1,f,c
  6617  0059A0                     
  6618                           ;mcc_generated_files/uart1.c: 165:  while (0 == uart1RxCount) {
  6619                           
  6620                           ;mcc_generated_files/uart1.c: 165:  while (0 == uart1RxCount) {
  6621  0059A0  5035               	movf	_uart1RxCount,w,c	;volatile
  6622  0059A2  B4D8               	btfsc	status,2,c
  6623  0059A4  D7FD               	goto	l5945
  6624                           
  6625                           ;mcc_generated_files/uart1.c: 168:  readValue = uart1RxBuffer[uart1RxTail++];
  6626  0059A6  0E80               	movlw	low _uart1RxBuffer
  6627  0059A8  2436               	addwf	_uart1RxTail,w,c	;volatile
  6628  0059AA  6ED9               	movwf	fsr2l,c
  6629  0059AC  6ADA               	clrf	fsr2h,c
  6630  0059AE  0E02               	movlw	high _uart1RxBuffer
  6631  0059B0  22DA               	addwfc	fsr2h,f,c
  6632  0059B2  50DF               	movf	indf2,w,c
  6633  0059B4  6E46               	movwf	btemp+11,c
  6634                           
  6635                           ;stkvar	_readValue @ sp[(-1)+0]
  6636  0059B6  0EFF               	movlw	-1
  6637  0059B8  0060  F11B  FFE3   	movff	btemp+11,plusw1
  6638  0059BE  2A36               	incf	_uart1RxTail,f,c	;volatile
  6639                           
  6640                           ;mcc_generated_files/uart1.c: 169:  if (sizeof(uart1RxBuffer) <= uart1RxTail) {
  6641  0059C0  0E3F               	movlw	63
  6642  0059C2  6436               	cpfsgt	_uart1RxTail,c
  6643  0059C4  D001               	goto	l572
  6644                           
  6645                           ;mcc_generated_files/uart1.c: 170:   uart1RxTail = 0;
  6646  0059C6  6A36               	clrf	_uart1RxTail,c	;volatile
  6647  0059C8                     l572:
  6648                           
  6649                           ;mcc_generated_files/uart1.c: 172:  PIE3bits.U1RXIE = 0;
  6650  0059C8  0139               	movlb	57	; () banked
  6651  0059CA  9793               	bcf	147,3,b	;volatile
  6652                           
  6653                           ; BSR set to: 57
  6654                           ;mcc_generated_files/uart1.c: 173:  uart1RxCount--;
  6655  0059CC  0635               	decf	_uart1RxCount,f,c	;volatile
  6656                           
  6657                           ; BSR set to: 57
  6658                           ;mcc_generated_files/uart1.c: 174:  PIE3bits.U1RXIE = 1;
  6659  0059CE  8793               	bsf	147,3,b	;volatile
  6660                           
  6661                           ; BSR set to: 57
  6662                           ;mcc_generated_files/uart1.c: 176:  return readValue;
  6663                           ;stkvar	_readValue @ sp[(-1)+0]
  6664  0059D0  0EFF               	movlw	-1
  6665  0059D2  006F FF8C  F03B    	movff	plusw1,btemp
  6666                           
  6667                           ; BSR set to: 57
  6668                           ; _UART1_Read: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  6669  0059D8  52E5               	movf	postdec1,f,c
  6670  0059DA  0012               	return		;funcret
  6671  0059DC                     __end_of_UART1_Read:
  6672                           	opt callstack 0
  6673                           
  6674 ;; *************** function _init_display *****************
  6675 ;; Defined at:
  6676 ;;		line 35 in file "eadog.c"
  6677 ;; Parameters:    Size  Location     Type
  6678 ;;		None
  6679 ;; Auto vars:     Size  Location     Type
  6680 ;;		None
  6681 ;; Return value:  Size  Location     Type
  6682 ;;                  1  [STACK] void 
  6683 ;; Registers used:
  6684 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  6685 ;; Tracked objects:
  6686 ;;		On entry : 0/0
  6687 ;;		On exit  : 3F/3D
  6688 ;;		Unchanged: 0/0
  6689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6690 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6691 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6693 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6694 ;;Total ram usage:        0 bytes
  6695 ;; Hardware stack levels used:    1
  6696 ;; Hardware stack levels required when called:    5
  6697 ;; This function calls:
  6698 ;;		_ringBufS_init
  6699 ;;		_send_lcd_cmd
  6700 ;;		_send_lcd_cmd_long
  6701 ;;		_wdtdelay
  6702 ;; This function is called by:
  6703 ;;		_main
  6704 ;; This function uses a reentrant model
  6705 ;;
  6706                           
  6707                           	psect	text22
  6708  004B26                     __ptext22:
  6709                           	opt callstack 0
  6710  004B26                     _init_display:
  6711                           	opt callstack 25
  6712                           
  6713                           ;eadog.c: 37:  spi_link.tx1a = &ring_buf1;
  6714                           
  6715                           ; BSR set to: 57
  6716                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6717                           ;incstack = 0
  6718  004B26  0E43               	movlw	low _ring_buf1
  6719  004B28  0100               	movlb	0	; () banked
  6720  004B2A  6FD3               	movwf	(_spi_link+6)& (0+255),b	;volatile
  6721  004B2C  0E03               	movlw	high _ring_buf1
  6722  004B2E  6FD4               	movwf	(_spi_link+7)& (0+255),b	;volatile
  6723                           
  6724                           ;eadog.c: 38:  spi_link.tx1b = &ring_buf2;
  6725  004B30  0E00               	movlw	low _ring_buf2
  6726  004B32  6FD1               	movwf	(_spi_link+4)& (0+255),b	;volatile
  6727  004B34  0E03               	movlw	high _ring_buf2
  6728  004B36  6FD2               	movwf	(_spi_link+5)& (0+255),b	;volatile
  6729                           
  6730                           ; BSR set to: 0
  6731                           ;eadog.c: 39:  ringBufS_init(spi_link.tx1a);
  6732  004B38  0060  F34F  FFE6   	movff	_spi_link+6,postinc1
  6733  004B3E  0060  F353  FFE6   	movff	_spi_link+7,postinc1
  6734  004B44  EC1B  F02E         	call	_ringBufS_init	;wreg free
  6735                           
  6736                           ;eadog.c: 40:  ringBufS_init(spi_link.tx1b);
  6737  004B48  0060  F347  FFE6   	movff	_spi_link+4,postinc1
  6738  004B4E  0060  F34B  FFE6   	movff	_spi_link+5,postinc1
  6739  004B54  EC1B  F02E         	call	_ringBufS_init	;wreg free
  6740                           
  6741                           ;eadog.c: 42:  LATEbits.LATE0 = 1;
  6742  004B58  80BE               	bsf	16318,0,c	;volatile
  6743  004B5A  84BC               	bsf	16316,2,c	;volatile
  6744                           
  6745                           ;eadog.c: 44:  wdtdelay(350000);
  6746  004B5C  0E30               	movlw	48
  6747  004B5E  6EE6               	movwf	postinc1,c
  6748  004B60  0E57               	movlw	87
  6749  004B62  6EE6               	movwf	postinc1,c
  6750  004B64  0E05               	movlw	5
  6751  004B66  6EE6               	movwf	postinc1,c
  6752  004B68  0E00               	movlw	0
  6753  004B6A  6EE6               	movwf	postinc1,c
  6754  004B6C  EC28  F02B         	call	_wdtdelay	;wreg free
  6755                           
  6756                           ; BSR set to: 0
  6757                           ;eadog.c: 45:  send_lcd_cmd(0x39);
  6758  004B70  0E39               	movlw	57
  6759  004B72  6EE6               	movwf	postinc1,c
  6760  004B74  EC07  F02E         	call	_send_lcd_cmd	;wreg free
  6761                           
  6762                           ; BSR set to: 0
  6763                           ;eadog.c: 46:  send_lcd_cmd(0x1d);
  6764  004B78  0E1D               	movlw	29
  6765  004B7A  6EE6               	movwf	postinc1,c
  6766  004B7C  EC07  F02E         	call	_send_lcd_cmd	;wreg free
  6767                           
  6768                           ; BSR set to: 0
  6769                           ;eadog.c: 47:  send_lcd_cmd(0x50);
  6770  004B80  0E50               	movlw	80
  6771  004B82  6EE6               	movwf	postinc1,c
  6772  004B84  EC07  F02E         	call	_send_lcd_cmd	;wreg free
  6773                           
  6774                           ; BSR set to: 0
  6775                           ;eadog.c: 48:  send_lcd_cmd(0x6c);
  6776  004B88  0E6C               	movlw	108
  6777  004B8A  6EE6               	movwf	postinc1,c
  6778  004B8C  EC07  F02E         	call	_send_lcd_cmd	;wreg free
  6779                           
  6780                           ; BSR set to: 0
  6781                           ;eadog.c: 49:  send_lcd_cmd(0x76);
  6782  004B90  0E76               	movlw	118
  6783  004B92  6EE6               	movwf	postinc1,c
  6784  004B94  EC07  F02E         	call	_send_lcd_cmd	;wreg free
  6785                           
  6786                           ; BSR set to: 0
  6787                           ;eadog.c: 50:  send_lcd_cmd_long(0x38);
  6788  004B98  0E38               	movlw	56
  6789  004B9A  6EE6               	movwf	postinc1,c
  6790  004B9C  ECF3  F02D         	call	_send_lcd_cmd_long	;wreg free
  6791                           
  6792                           ; BSR set to: 0
  6793                           ;eadog.c: 51:  send_lcd_cmd(0x0f);
  6794  004BA0  0E0F               	movlw	15
  6795  004BA2  6EE6               	movwf	postinc1,c
  6796  004BA4  EC07  F02E         	call	_send_lcd_cmd	;wreg free
  6797                           
  6798                           ; BSR set to: 0
  6799                           ;eadog.c: 52:  send_lcd_cmd_long(0x01);
  6800  004BA8  0E01               	movlw	1
  6801  004BAA  6EE6               	movwf	postinc1,c
  6802  004BAC  ECF3  F02D         	call	_send_lcd_cmd_long	;wreg free
  6803                           
  6804                           ; BSR set to: 0
  6805                           ;eadog.c: 53:  send_lcd_cmd(0x02);
  6806  004BB0  0E02               	movlw	2
  6807  004BB2  6EE6               	movwf	postinc1,c
  6808  004BB4  EC07  F02E         	call	_send_lcd_cmd	;wreg free
  6809                           
  6810                           ; BSR set to: 0
  6811                           ;eadog.c: 54:  send_lcd_cmd(0x06);
  6812  004BB8  0E06               	movlw	6
  6813  004BBA  6EE6               	movwf	postinc1,c
  6814  004BBC  EC07  F02E         	call	_send_lcd_cmd	;wreg free
  6815                           
  6816                           ; BSR set to: 0
  6817                           ;eadog.c: 55:  wdtdelay(30);
  6818  004BC0  0E1E               	movlw	30
  6819  004BC2  6EE6               	movwf	postinc1,c
  6820  004BC4  0E00               	movlw	0
  6821  004BC6  6EE6               	movwf	postinc1,c
  6822  004BC8  0E00               	movlw	0
  6823  004BCA  6EE6               	movwf	postinc1,c
  6824  004BCC  0E00               	movlw	0
  6825  004BCE  6EE6               	movwf	postinc1,c
  6826  004BD0  EC28  F02B         	call	_wdtdelay	;wreg free
  6827                           
  6828                           ; BSR set to: 0
  6829                           ;eadog.c: 56:  SPI1CON2 = 0x02;
  6830  004BD4  0E02               	movlw	2
  6831  004BD6  013D               	movlb	61	; () banked
  6832  004BD8  6F16               	movwf	22,b	;volatile
  6833                           
  6834                           ; BSR set to: 61
  6835                           ;eadog.c: 57:  SPI1CON1 = 0x40;
  6836  004BDA  0E40               	movlw	64
  6837  004BDC  6F15               	movwf	21,b	;volatile
  6838                           
  6839                           ; BSR set to: 61
  6840                           ;eadog.c: 58:  SPI1CON0 = 0x83;
  6841  004BDE  0E83               	movlw	131
  6842  004BE0  6F14               	movwf	20,b	;volatile
  6843                           
  6844                           ; BSR set to: 61
  6845                           ;eadog.c: 59:  SPI1INTFbits.SPI1TXUIF = 0;
  6846  004BE2  931A               	bcf	26,1,b	;volatile
  6847                           
  6848                           ; BSR set to: 61
  6849                           ;eadog.c: 60:  DMA1CON1bits.DMODE = 0;
  6850  004BE4  0E3F               	movlw	-193
  6851  004BE6  013B               	movlb	59	; () banked
  6852  004BE8  17FD               	andwf	253,f,b	;volatile
  6853                           
  6854                           ; BSR set to: 59
  6855                           ;eadog.c: 61:  DMA1CON1bits.DSTP = 0;
  6856  004BEA  9BFD               	bcf	253,5,b	;volatile
  6857                           
  6858                           ; BSR set to: 59
  6859                           ;eadog.c: 62:  DMA1CON1bits.SMODE = 1;
  6860  004BEC  51FD               	movf	253,w,b	;volatile
  6861  004BEE  0BF9               	andlw	-7
  6862  004BF0  0902               	iorlw	2
  6863  004BF2  6FFD               	movwf	253,b	;volatile
  6864                           
  6865                           ; BSR set to: 59
  6866                           ;eadog.c: 63:  DMA1CON1bits.SMR = 0;
  6867  004BF4  0EE7               	movlw	-25
  6868  004BF6  17FD               	andwf	253,f,b	;volatile
  6869                           
  6870                           ; BSR set to: 59
  6871                           ;eadog.c: 64:  DMA1CON1bits.SSTP = 1;
  6872  004BF8  81FD               	bsf	253,0,b	;volatile
  6873                           
  6874                           ; BSR set to: 59
  6875                           ;eadog.c: 65:  DMA1SSA = (uint32_t) & ring_buf1;
  6876  004BFA  0E43               	movlw	low _ring_buf1
  6877  004BFC  6FF9               	movwf	249,b	;volatile
  6878  004BFE  0E03               	movlw	high _ring_buf1
  6879  004C00  6FFA               	movwf	250,b	;volatile
  6880  004C02  0E00               	movlw	low (_ring_buf1 shr (0+16))
  6881  004C04  6FFB               	movwf	251,b	;volatile
  6882                           
  6883                           ; BSR set to: 59
  6884                           ;eadog.c: 66:  DMA1CON0bits.DGO = 0;
  6885  004C06  9BFC               	bcf	252,5,b	;volatile
  6886                           
  6887                           ; BSR set to: 59
  6888                           ;eadog.c: 67:  SPI1INTFbits.SPI1TXUIF = 1;
  6889  004C08  013D               	movlb	61	; () banked
  6890  004C0A  831A               	bsf	26,1,b	;volatile
  6891                           
  6892                           ; BSR set to: 61
  6893                           ;eadog.c: 68:  LATEbits.LATE0 = 0;
  6894  004C0C  90BE               	bcf	16318,0,c	;volatile
  6895                           
  6896                           ; BSR set to: 61
  6897                           ; _init_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  6898  004C0E  0012               	return		;funcret
  6899  004C10                     __end_of_init_display:
  6900                           	opt callstack 0
  6901                           
  6902 ;; *************** function _send_lcd_cmd_long *****************
  6903 ;; Defined at:
  6904 ;;		line 97 in file "eadog.c"
  6905 ;; Parameters:    Size  Location     Type
  6906 ;;  cmd             1  [STACK] unsigned char 
  6907 ;; Auto vars:     Size  Location     Type
  6908 ;;		None
  6909 ;; Return value:  Size  Location     Type
  6910 ;;                  1  [STACK] void 
  6911 ;; Registers used:
  6912 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  6913 ;; Tracked objects:
  6914 ;;		On entry : 3F/0
  6915 ;;		On exit  : 3F/0
  6916 ;;		Unchanged: 0/0
  6917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6918 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6919 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6920 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6921 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6922 ;;Total ram usage:        0 bytes
  6923 ;; Hardware stack levels used:    1
  6924 ;; Hardware stack levels required when called:    4
  6925 ;; This function calls:
  6926 ;;		_SPI1_Exchange8bit
  6927 ;;		_wdtdelay
  6928 ;; This function is called by:
  6929 ;;		_init_display
  6930 ;; This function uses a reentrant model
  6931 ;;
  6932                           
  6933                           	psect	text23
  6934  005BE6                     __ptext23:
  6935                           	opt callstack 0
  6936  005BE6                     _send_lcd_cmd_long:
  6937                           	opt callstack 25
  6938                           
  6939                           ; BSR set to: 61
  6940                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6941                           ;incstack = 0
  6942                           ;eadog.c: 97: static void send_lcd_cmd_long(uint8_t cmd);eadog.c: 98: {;eadog.c: 99:  do
      +                           { LATCbits.LATC1 = 0; } while(0);
  6943  005BE6  92BC               	bcf	16316,1,c	;volatile
  6944                           
  6945                           ;eadog.c: 100:  do { LATCbits.LATC2 = 0; } while(0);
  6946  005BE8  94BC               	bcf	16316,2,c	;volatile
  6947                           
  6948                           ;eadog.c: 101:  SPI1_Exchange8bit(cmd);
  6949                           ;stkvar	_cmd @ sp[(0)+-1]
  6950  005BEA  0EFF               	movlw	-1
  6951  005BEC  50E3               	movf	plusw1,w,c
  6952  005BEE  6EE6               	movwf	postinc1,c
  6953  005BF0  ECF4  F02F         	call	_SPI1_Exchange8bit	;wreg free
  6954                           
  6955                           ; BSR set to: 57
  6956                           ;eadog.c: 102:  wdtdelay(800);
  6957  005BF4  0E20               	movlw	32
  6958  005BF6  6EE6               	movwf	postinc1,c
  6959  005BF8  0E03               	movlw	3
  6960  005BFA  6EE6               	movwf	postinc1,c
  6961  005BFC  0E00               	movlw	0
  6962  005BFE  6EE6               	movwf	postinc1,c
  6963  005C00  0E00               	movlw	0
  6964  005C02  6EE6               	movwf	postinc1,c
  6965  005C04  EC28  F02B         	call	_wdtdelay	;wreg free
  6966                           
  6967                           ; BSR set to: 0
  6968  005C08  82BC               	bsf	16316,1,c	;volatile
  6969                           
  6970                           ; BSR set to: 0
  6971                           ; _send_lcd_cmd_long: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  6972  005C0A  52E5               	movf	postdec1,f,c
  6973  005C0C  0012               	return		;funcret
  6974  005C0E                     __end_of_send_lcd_cmd_long:
  6975                           	opt callstack 0
  6976                           
  6977 ;; *************** function _send_lcd_cmd *****************
  6978 ;; Defined at:
  6979 ;;		line 85 in file "eadog.c"
  6980 ;; Parameters:    Size  Location     Type
  6981 ;;  cmd             1  [STACK] unsigned char 
  6982 ;; Auto vars:     Size  Location     Type
  6983 ;;		None
  6984 ;; Return value:  Size  Location     Type
  6985 ;;                  1  [STACK] void 
  6986 ;; Registers used:
  6987 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  6988 ;; Tracked objects:
  6989 ;;		On entry : 3F/0
  6990 ;;		On exit  : 3F/0
  6991 ;;		Unchanged: 0/0
  6992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6993 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6994 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6996 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6997 ;;Total ram usage:        0 bytes
  6998 ;; Hardware stack levels used:    1
  6999 ;; Hardware stack levels required when called:    4
  7000 ;; This function calls:
  7001 ;;		_SPI1_Exchange8bit
  7002 ;;		_wdtdelay
  7003 ;; This function is called by:
  7004 ;;		_init_display
  7005 ;; This function uses a reentrant model
  7006 ;;
  7007                           
  7008                           	psect	text24
  7009  005C0E                     __ptext24:
  7010                           	opt callstack 0
  7011  005C0E                     _send_lcd_cmd:
  7012                           	opt callstack 25
  7013                           
  7014                           ; BSR set to: 0
  7015                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7016                           ;incstack = 0
  7017                           ;eadog.c: 85: static void send_lcd_cmd(uint8_t cmd);eadog.c: 86: {;eadog.c: 87:  do { LA
      +                          TCbits.LATC1 = 0; } while(0);
  7018  005C0E  92BC               	bcf	16316,1,c	;volatile
  7019                           
  7020                           ;eadog.c: 88:  do { LATCbits.LATC2 = 0; } while(0);
  7021  005C10  94BC               	bcf	16316,2,c	;volatile
  7022                           
  7023                           ;eadog.c: 89:  SPI1_Exchange8bit(cmd);
  7024                           ;stkvar	_cmd @ sp[(0)+-1]
  7025  005C12  0EFF               	movlw	-1
  7026  005C14  50E3               	movf	plusw1,w,c
  7027  005C16  6EE6               	movwf	postinc1,c
  7028  005C18  ECF4  F02F         	call	_SPI1_Exchange8bit	;wreg free
  7029                           
  7030                           ; BSR set to: 57
  7031                           ;eadog.c: 90:  wdtdelay(30);
  7032  005C1C  0E1E               	movlw	30
  7033  005C1E  6EE6               	movwf	postinc1,c
  7034  005C20  0E00               	movlw	0
  7035  005C22  6EE6               	movwf	postinc1,c
  7036  005C24  0E00               	movlw	0
  7037  005C26  6EE6               	movwf	postinc1,c
  7038  005C28  0E00               	movlw	0
  7039  005C2A  6EE6               	movwf	postinc1,c
  7040  005C2C  EC28  F02B         	call	_wdtdelay	;wreg free
  7041                           
  7042                           ; BSR set to: 0
  7043  005C30  82BC               	bsf	16316,1,c	;volatile
  7044                           
  7045                           ; BSR set to: 0
  7046                           ; _send_lcd_cmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
  7047  005C32  52E5               	movf	postdec1,f,c
  7048  005C34  0012               	return		;funcret
  7049  005C36                     __end_of_send_lcd_cmd:
  7050                           	opt callstack 0
  7051                           
  7052 ;; *************** function _SPI1_Exchange8bit *****************
  7053 ;; Defined at:
  7054 ;;		line 79 in file "mcc_generated_files/spi1.c"
  7055 ;; Parameters:    Size  Location     Type
  7056 ;;  data            1  [STACK] unsigned char 
  7057 ;; Auto vars:     Size  Location     Type
  7058 ;;		None
  7059 ;; Return value:  Size  Location     Type
  7060 ;;                  1  [STACK] unsigned char 
  7061 ;; Registers used:
  7062 ;;		wreg, fsr1l, fsr1h, status,2, btemp
  7063 ;; Tracked objects:
  7064 ;;		On entry : 0/0
  7065 ;;		On exit  : 3F/39
  7066 ;;		Unchanged: 0/0
  7067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7068 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7069 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7070 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7071 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7072 ;;Total ram usage:        0 bytes
  7073 ;; Hardware stack levels used:    1
  7074 ;; Hardware stack levels required when called:    3
  7075 ;; This function calls:
  7076 ;;		Nothing
  7077 ;; This function is called by:
  7078 ;;		_send_lcd_cmd
  7079 ;;		_send_lcd_cmd_long
  7080 ;; This function uses a reentrant model
  7081 ;;
  7082                           
  7083                           	psect	text25
  7084  005FE8                     __ptext25:
  7085                           	opt callstack 0
  7086  005FE8                     _SPI1_Exchange8bit:
  7087                           	opt callstack 25
  7088                           
  7089                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
  7090                           
  7091                           ; BSR set to: 0
  7092                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7093                           ;incstack = 0
  7094  005FE8  0E01               	movlw	1
  7095  005FEA  013D               	movlb	61	; () banked
  7096  005FEC  6F12               	movwf	18,b	;volatile
  7097                           
  7098                           ; BSR set to: 61
  7099                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
  7100                           ;stkvar	_data @ sp[(0)+-1]
  7101  005FEE  0EFF               	movlw	-1
  7102  005FF0  006F FF8F FD11     	movff	plusw1,15633	;volatile
  7103  005FF6                     l851:
  7104                           
  7105                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
  7106  005FF6  0139               	movlb	57	; () banked
  7107  005FF8  A9A2               	btfss	162,4,b	;volatile
  7108  005FFA  D7FD               	goto	l851
  7109                           
  7110                           ; BSR set to: 57
  7111                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
  7112  005FFC  006F F440  F03B    	movff	15632,btemp	;volatile
  7113                           
  7114                           ; BSR set to: 57
  7115                           ; _SPI1_Exchange8bit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  7116  006002  52E5               	movf	postdec1,f,c
  7117  006004  0012               	return		;funcret
  7118  006006                     __end_of_SPI1_Exchange8bit:
  7119                           	opt callstack 0
  7120                           
  7121 ;; *************** function _ringBufS_init *****************
  7122 ;; Defined at:
  7123 ;;		line 22 in file "ringbufs.c"
  7124 ;; Parameters:    Size  Location     Type
  7125 ;;  _this           2  [STACK] PTR volatile struct ring
  7126 ;;		 -> ring_buf2(67), ring_buf1(67), 
  7127 ;; Auto vars:     Size  Location     Type
  7128 ;;		None
  7129 ;; Return value:  Size  Location     Type
  7130 ;;                  1  [STACK] void 
  7131 ;; Registers used:
  7132 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  7133 ;; Tracked objects:
  7134 ;;		On entry : 0/0
  7135 ;;		On exit  : 0/0
  7136 ;;		Unchanged: 0/0
  7137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7138 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7139 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7140 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7141 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7142 ;;Total ram usage:        0 bytes
  7143 ;; Hardware stack levels used:    1
  7144 ;; Hardware stack levels required when called:    4
  7145 ;; This function calls:
  7146 ;;		_memset
  7147 ;; This function is called by:
  7148 ;;		_init_display
  7149 ;; This function uses a reentrant model
  7150 ;;
  7151                           
  7152                           	psect	text26
  7153  005C36                     __ptext26:
  7154                           	opt callstack 0
  7155  005C36                     _ringBufS_init:
  7156                           	opt callstack 25
  7157                           
  7158                           ;ringbufs.c: 22: void ringBufS_init(volatile ringBufS_t *_this);ringbufs.c: 23: {;ringbu
      +                          fs.c: 32:  memset((void*)_this, 0, sizeof(*_this));
  7159                           
  7160                           ; BSR set to: 57
  7161                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7162                           ;incstack = 0
  7163  005C36  0E43               	movlw	67
  7164  005C38  6EE6               	movwf	postinc1,c
  7165  005C3A  0E00               	movlw	0
  7166  005C3C  6EE6               	movwf	postinc1,c
  7167  005C3E  0E00               	movlw	0
  7168  005C40  6EE6               	movwf	postinc1,c
  7169  005C42  0E00               	movlw	0
  7170  005C44  6EE6               	movwf	postinc1,c
  7171                           
  7172                           ;stkvar	__this @ sp[(-4)+-2]
  7173  005C46  0EFA               	movlw	-6
  7174  005C48  006F FF8F FFE6     	movff	plusw1,postinc1
  7175  005C4E  006F FF8F FFE6     	movff	plusw1,postinc1
  7176  005C54  EC90  F019         	call	_memset	;wreg free
  7177                           
  7178                           ; _ringBufS_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  7179  005C58  52E5               	movf	postdec1,f,c
  7180  005C5A  52E5               	movf	postdec1,f,c
  7181  005C5C  0012               	return		;funcret
  7182  005C5E                     __end_of_ringBufS_init:
  7183                           	opt callstack 0
  7184                           
  7185 ;; *************** function _eaDogM_WriteStringAtPos *****************
  7186 ;; Defined at:
  7187 ;;		line 221 in file "eadog.c"
  7188 ;; Parameters:    Size  Location     Type
  7189 ;;  r               1  [STACK] unsigned char 
  7190 ;;  c               1  [STACK] unsigned char 
  7191 ;;  strPtr          1  [STACK] PTR unsigned char 
  7192 ;;		 -> V(89), 
  7193 ;; Auto vars:     Size  Location     Type
  7194 ;;		None
  7195 ;; Return value:  Size  Location     Type
  7196 ;;                  1  [STACK] void 
  7197 ;; Registers used:
  7198 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, 
      +prodh
  7199 ;; Tracked objects:
  7200 ;;		On entry : 3F/0
  7201 ;;		On exit  : 3F/3B
  7202 ;;		Unchanged: 0/0
  7203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7204 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7205 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7207 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7208 ;;Total ram usage:        0 bytes
  7209 ;; Hardware stack levels used:    1
  7210 ;; Hardware stack levels required when called:   13
  7211 ;; This function calls:
  7212 ;;		_eaDogM_WriteString
  7213 ;;		_send_lcd_cmd_dma
  7214 ;; This function is called by:
  7215 ;;		_main
  7216 ;; This function uses a reentrant model
  7217 ;;
  7218                           
  7219                           	psect	text27
  7220  005ABA                     __ptext27:
  7221                           	opt callstack 0
  7222  005ABA                     _eaDogM_WriteStringAtPos:
  7223                           	opt callstack 17
  7224                           
  7225                           ;eadog.c: 221: void eaDogM_WriteStringAtPos(uint8_t r, uint8_t c, char *strPtr);eadog.c:
      +                           222: {;eadog.c: 223:  send_lcd_cmd_dma((0b10000000 + (r * 16) + c));
  7226                           ;stkvar	_c @ sp[(0)+-2]
  7227                           
  7228                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7229                           ;incstack = 0
  7230  005ABA  0EFE               	movlw	-2
  7231  005ABC  006F FF8C  F046    	movff	plusw1,btemp+11
  7232                           
  7233                           ;stkvar	_r @ sp[(0)+-1]
  7234  005AC2  0EFF               	movlw	-1
  7235  005AC4  50E3               	movf	plusw1,w,c
  7236  005AC6  0D10               	mullw	16
  7237  005AC8  50F3               	movf	prodl,w,c
  7238  005ACA  2446               	addwf	btemp+11,w,c
  7239  005ACC  0F80               	addlw	128
  7240  005ACE  6EE6               	movwf	postinc1,c
  7241  005AD0  EC56  F02B         	call	_send_lcd_cmd_dma	;wreg free
  7242                           
  7243                           ; BSR set to: 0
  7244                           ;eadog.c: 224:  eaDogM_WriteString(strPtr);
  7245                           ;stkvar	_strPtr @ sp[(0)+-3]
  7246  005AD4  0EFD               	movlw	-3
  7247  005AD6  50E3               	movf	plusw1,w,c
  7248  005AD8  6EE6               	movwf	postinc1,c
  7249  005ADA  EC8B  F028         	call	_eaDogM_WriteString	;wreg free
  7250                           
  7251                           ; BSR set to: 59
  7252                           ; _eaDogM_WriteStringAtPos: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 3, argsize = 3, vargsize = 0
  7253  005ADE  52E5               	movf	postdec1,f,c
  7254  005AE0  52E5               	movf	postdec1,f,c
  7255  005AE2  52E5               	movf	postdec1,f,c
  7256  005AE4  0012               	return		;funcret
  7257  005AE6                     __end_of_eaDogM_WriteStringAtPos:
  7258                           	opt callstack 0
  7259                           
  7260 ;; *************** function _eaDogM_WriteString *****************
  7261 ;; Defined at:
  7262 ;;		line 167 in file "eadog.c"
  7263 ;; Parameters:    Size  Location     Type
  7264 ;;  strPtr          1  [STACK] PTR unsigned char 
  7265 ;;		 -> V(89), 
  7266 ;; Auto vars:     Size  Location     Type
  7267 ;;		None
  7268 ;; Return value:  Size  Location     Type
  7269 ;;                  1  [STACK] void 
  7270 ;; Registers used:
  7271 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  7272 ;; Tracked objects:
  7273 ;;		On entry : 3F/0
  7274 ;;		On exit  : 3F/3B
  7275 ;;		Unchanged: 0/0
  7276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7277 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7278 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7279 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7280 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7281 ;;Total ram usage:        0 bytes
  7282 ;; Hardware stack levels used:    1
  7283 ;; Hardware stack levels required when called:   12
  7284 ;; This function calls:
  7285 ;;		_printf
  7286 ;;		_ringBufS_flush
  7287 ;;		_start_lcd
  7288 ;;		_strlen
  7289 ;;		_wait_lcd_set
  7290 ;; This function is called by:
  7291 ;;		_eaDogM_WriteStringAtPos
  7292 ;; This function uses a reentrant model
  7293 ;;
  7294                           
  7295                           	psect	text28
  7296  005116                     __ptext28:
  7297                           	opt callstack 0
  7298  005116                     _eaDogM_WriteString:
  7299                           	opt callstack 17
  7300                           
  7301                           ;eadog.c: 167: void eaDogM_WriteString(char *strPtr);eadog.c: 168: {;eadog.c: 169:  wait
      +                          _lcd_set();
  7302                           
  7303                           ; BSR set to: 59
  7304                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7305                           ;incstack = 0
  7306  005116  ECC1  F030         	call	_wait_lcd_set	;wreg free
  7307                           
  7308                           ; BSR set to: 0
  7309                           ;eadog.c: 171:  ringBufS_flush(spi_link.tx1a, 0);
  7310  00511A  0E00               	movlw	0
  7311  00511C  6EE6               	movwf	postinc1,c
  7312  00511E  0060  F34F  FFE6   	movff	_spi_link+6,postinc1
  7313  005124  0060  F353  FFE6   	movff	_spi_link+7,postinc1
  7314  00512A  EC71  F029         	call	_ringBufS_flush	;wreg free
  7315  00512E  94BC               	bcf	16316,2,c	;volatile
  7316                           
  7317                           ;eadog.c: 173:  if (strlen(strPtr) > 64) strPtr[64] = 0;
  7318                           ;stkvar	_strPtr @ sp[(0)+-1]
  7319  005130  0EFF               	movlw	-1
  7320  005132  006F FF8C  F046    	movff	plusw1,btemp+11
  7321  005138  0060  F11B  FFE6   	movff	btemp+11,postinc1
  7322  00513E  0E00               	movlw	0
  7323  005140  6EE6               	movwf	postinc1,c
  7324  005142  ECEA  F027         	call	_strlen	;wreg free
  7325  005146  503C               	movf	btemp+1,w,c
  7326  005148  E104               	bnz	u4900
  7327  00514A  0E41               	movlw	65
  7328  00514C  5C3B               	subwf	btemp,w,c
  7329  00514E  A0D8               	btfss	status,0,c
  7330  005150  D008               	goto	l7961
  7331  005152                     u4900:
  7332                           
  7333                           ;stkvar	_strPtr @ sp[(0)+-1]
  7334  005152  0EFF               	movlw	-1
  7335  005154  50E3               	movf	plusw1,w,c
  7336  005156  6ED9               	movwf	fsr2l,c
  7337  005158  6ADA               	clrf	fsr2h,c
  7338  00515A  0E40               	movlw	64
  7339  00515C  26D9               	addwf	fsr2l,f,c
  7340  00515E  0E00               	movlw	0
  7341  005160  6EDF               	movwf	indf2,c
  7342  005162                     l7961:
  7343                           
  7344                           ;eadog.c: 174:  DMA1CON0bits.EN = 0;
  7345  005162  013B               	movlb	59	; () banked
  7346  005164  9FFC               	bcf	252,7,b	;volatile
  7347                           
  7348                           ; BSR set to: 59
  7349                           ;eadog.c: 175:  DMA1SSZ = strlen(strPtr);
  7350                           ;stkvar	_strPtr @ sp[(0)+-1]
  7351  005166  0EFF               	movlw	-1
  7352  005168  006F FF8C  F046    	movff	plusw1,btemp+11
  7353  00516E  0060  F11B  FFE6   	movff	btemp+11,postinc1
  7354  005174  0E00               	movlw	0
  7355  005176  6EE6               	movwf	postinc1,c
  7356  005178  ECEA  F027         	call	_strlen	;wreg free
  7357  00517C  0060  F0EF  FBF7   	movff	btemp,15351	;volatile
  7358  005182  0060  F0F3  FBF8   	movff	btemp+1,15352	;volatile
  7359                           
  7360                           ;eadog.c: 176:  DMA1CON0bits.EN = 1;
  7361  005188  013B               	movlb	59	; () banked
  7362  00518A  8FFC               	bsf	252,7,b	;volatile
  7363                           
  7364                           ; BSR set to: 59
  7365                           ;eadog.c: 177:  printf("%s", strPtr);
  7366                           ;stkvar	_strPtr @ sp[(0)+-1]
  7367  00518C  0EFF               	movlw	-1
  7368  00518E  006F FF8C  F046    	movff	plusw1,btemp+11
  7369  005194  0060  F11B  FFE6   	movff	btemp+11,postinc1
  7370  00519A  0E00               	movlw	0
  7371  00519C  6EE6               	movwf	postinc1,c
  7372  00519E  0E98               	movlw	(STR_2+9)& (0+255)
  7373  0051A0  6EE6               	movwf	postinc1,c
  7374  0051A2  0E03               	movlw	3
  7375  0051A4  6EE6               	movwf	postinc1,c
  7376  0051A6  EC98  F02A         	call	_printf	;wreg free
  7377                           
  7378                           ; BSR set to: 0
  7379                           ;eadog.c: 178:  start_lcd();
  7380  0051AA  ECC4  F030         	call	_start_lcd	;wreg free
  7381                           
  7382                           ; BSR set to: 59
  7383                           ; _eaDogM_WriteString: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
  7384  0051AE  52E5               	movf	postdec1,f,c
  7385  0051B0  0012               	return		;funcret
  7386  0051B2                     __end_of_eaDogM_WriteString:
  7387                           	opt callstack 0
  7388                           
  7389 ;; *************** function _eaDogM_WriteCommand *****************
  7390 ;; Defined at:
  7391 ;;		line 143 in file "eadog.c"
  7392 ;; Parameters:    Size  Location     Type
  7393 ;;  cmd             1  [STACK] unsigned char 
  7394 ;; Auto vars:     Size  Location     Type
  7395 ;;		None
  7396 ;; Return value:  Size  Location     Type
  7397 ;;                  1  [STACK] void 
  7398 ;; Registers used:
  7399 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  7400 ;; Tracked objects:
  7401 ;;		On entry : 3F/3D
  7402 ;;		On exit  : 3F/0
  7403 ;;		Unchanged: 0/0
  7404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7405 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7406 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7407 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7408 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7409 ;;Total ram usage:        0 bytes
  7410 ;; Hardware stack levels used:    1
  7411 ;; Hardware stack levels required when called:   13
  7412 ;; This function calls:
  7413 ;;		_send_lcd_cmd_dma
  7414 ;; This function is called by:
  7415 ;;		_main
  7416 ;; This function uses a reentrant model
  7417 ;;
  7418                           
  7419                           	psect	text29
  7420  0060E8                     __ptext29:
  7421                           	opt callstack 0
  7422  0060E8                     _eaDogM_WriteCommand:
  7423                           	opt callstack 17
  7424                           
  7425                           ;eadog.c: 143: void eaDogM_WriteCommand(uint8_t cmd);eadog.c: 144: {;eadog.c: 145:  send
      +                          _lcd_cmd_dma(cmd);
  7426                           ;stkvar	_cmd @ sp[(0)+-1]
  7427                           
  7428                           ; BSR set to: 59
  7429                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7430                           ;incstack = 0
  7431  0060E8  0EFF               	movlw	-1
  7432  0060EA  50E3               	movf	plusw1,w,c
  7433  0060EC  6EE6               	movwf	postinc1,c
  7434  0060EE  EC56  F02B         	call	_send_lcd_cmd_dma	;wreg free
  7435                           
  7436                           ; BSR set to: 0
  7437                           ; _eaDogM_WriteCommand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 1, argsize = 1, vargsize = 0
  7438  0060F2  52E5               	movf	postdec1,f,c
  7439  0060F4  0012               	return		;funcret
  7440  0060F6                     __end_of_eaDogM_WriteCommand:
  7441                           	opt callstack 0
  7442                           
  7443 ;; *************** function _send_lcd_cmd_dma *****************
  7444 ;; Defined at:
  7445 ;;		line 187 in file "eadog.c"
  7446 ;; Parameters:    Size  Location     Type
  7447 ;;  strPtr          1  [STACK] unsigned char 
  7448 ;; Auto vars:     Size  Location     Type
  7449 ;;		None
  7450 ;; Return value:  Size  Location     Type
  7451 ;;                  1  [STACK] void 
  7452 ;; Registers used:
  7453 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  7454 ;; Tracked objects:
  7455 ;;		On entry : 0/0
  7456 ;;		On exit  : 3F/0
  7457 ;;		Unchanged: 0/0
  7458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7459 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7460 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7461 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7462 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7463 ;;Total ram usage:        0 bytes
  7464 ;; Hardware stack levels used:    1
  7465 ;; Hardware stack levels required when called:   12
  7466 ;; This function calls:
  7467 ;;		_printf
  7468 ;;		_ringBufS_flush
  7469 ;;		_start_lcd
  7470 ;;		_wait_lcd_done
  7471 ;;		_wait_lcd_set
  7472 ;; This function is called by:
  7473 ;;		_eaDogM_WriteCommand
  7474 ;;		_eaDogM_WriteStringAtPos
  7475 ;; This function uses a reentrant model
  7476 ;;
  7477                           
  7478                           	psect	text30
  7479  0056AC                     __ptext30:
  7480                           	opt callstack 0
  7481  0056AC                     _send_lcd_cmd_dma:
  7482                           	opt callstack 17
  7483                           
  7484                           ;eadog.c: 187: void send_lcd_cmd_dma(uint8_t strPtr);eadog.c: 188: {;eadog.c: 189:  wait
      +                          _lcd_set();
  7485                           
  7486                           ; BSR set to: 0
  7487                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7488                           ;incstack = 0
  7489  0056AC  ECC1  F030         	call	_wait_lcd_set	;wreg free
  7490                           
  7491                           ; BSR set to: 0
  7492                           ;eadog.c: 191:  ringBufS_flush(spi_link.tx1a, 0);
  7493  0056B0  0E00               	movlw	0
  7494  0056B2  6EE6               	movwf	postinc1,c
  7495  0056B4  0060  F34F  FFE6   	movff	_spi_link+6,postinc1
  7496  0056BA  0060  F353  FFE6   	movff	_spi_link+7,postinc1
  7497  0056C0  EC71  F029         	call	_ringBufS_flush	;wreg free
  7498  0056C4  92BC               	bcf	16316,1,c	;volatile
  7499  0056C6  94BC               	bcf	16316,2,c	;volatile
  7500                           
  7501                           ;eadog.c: 194:  DMA1CON0bits.EN = 0;
  7502  0056C8  013B               	movlb	59	; () banked
  7503  0056CA  9FFC               	bcf	252,7,b	;volatile
  7504                           
  7505                           ; BSR set to: 59
  7506                           ;eadog.c: 195:  DMA1SSZ = 1;
  7507  0056CC  0E00               	movlw	0
  7508  0056CE  6FF8               	movwf	248,b	;volatile
  7509  0056D0  0E01               	movlw	1
  7510  0056D2  6FF7               	movwf	247,b	;volatile
  7511                           
  7512                           ; BSR set to: 59
  7513                           ;eadog.c: 196:  DMA1CON0bits.EN = 1;
  7514  0056D4  8FFC               	bsf	252,7,b	;volatile
  7515                           
  7516                           ; BSR set to: 59
  7517                           ;eadog.c: 197:  printf("%c", strPtr);
  7518                           ;stkvar	_strPtr @ sp[(0)+-1]
  7519  0056D6  0EFF               	movlw	-1
  7520  0056D8  50E3               	movf	plusw1,w,c
  7521  0056DA  6EE6               	movwf	postinc1,c
  7522  0056DC  0E00               	movlw	0
  7523  0056DE  6EE6               	movwf	postinc1,c
  7524  0056E0  0EB3               	movlw	STR_17& (0+255)
  7525  0056E2  6EE6               	movwf	postinc1,c
  7526  0056E4  0E03               	movlw	3
  7527  0056E6  6EE6               	movwf	postinc1,c
  7528  0056E8  EC98  F02A         	call	_printf	;wreg free
  7529                           
  7530                           ; BSR set to: 0
  7531                           ;eadog.c: 198:  start_lcd();
  7532  0056EC  ECC4  F030         	call	_start_lcd	;wreg free
  7533                           
  7534                           ; BSR set to: 59
  7535                           ;eadog.c: 199:  wait_lcd_done();
  7536  0056F0  EC03  F030         	call	_wait_lcd_done	;wreg free
  7537                           
  7538                           ; BSR set to: 0
  7539  0056F4  82BC               	bsf	16316,1,c	;volatile
  7540                           
  7541                           ; BSR set to: 0
  7542                           ; _send_lcd_cmd_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  7543  0056F6  52E5               	movf	postdec1,f,c
  7544  0056F8  0012               	return		;funcret
  7545  0056FA                     __end_of_send_lcd_cmd_dma:
  7546                           	opt callstack 0
  7547                           
  7548 ;; *************** function _wait_lcd_set *****************
  7549 ;; Defined at:
  7550 ;;		line 114 in file "eadog.c"
  7551 ;; Parameters:    Size  Location     Type
  7552 ;;		None
  7553 ;; Auto vars:     Size  Location     Type
  7554 ;;		None
  7555 ;; Return value:  Size  Location     Type
  7556 ;;                  1  [STACK] void 
  7557 ;; Registers used:
  7558 ;;		None
  7559 ;; Tracked objects:
  7560 ;;		On entry : 0/0
  7561 ;;		On exit  : 3F/0
  7562 ;;		Unchanged: 0/0
  7563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7564 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7565 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7566 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7567 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7568 ;;Total ram usage:        0 bytes
  7569 ;; Hardware stack levels used:    1
  7570 ;; Hardware stack levels required when called:    3
  7571 ;; This function calls:
  7572 ;;		Nothing
  7573 ;; This function is called by:
  7574 ;;		_eaDogM_WriteString
  7575 ;;		_send_lcd_cmd_dma
  7576 ;; This function uses a reentrant model
  7577 ;;
  7578                           
  7579                           	psect	text31
  7580  006182                     __ptext31:
  7581                           	opt callstack 0
  7582  006182                     _wait_lcd_set:
  7583                           	opt callstack 25
  7584                           
  7585                           ;eadog.c: 116:  spi_link.LCD_DATA = 1;
  7586                           
  7587                           ; BSR set to: 0
  7588                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7589                           ;incstack = 0
  7590  006182  0100               	movlb	0	; () banked
  7591  006184  87CD               	bsf	_spi_link& (0+255),3,b	;volatile
  7592                           
  7593                           ; BSR set to: 0
  7594                           ; _wait_lcd_set: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  7595  006186  0012               	return		;funcret
  7596  006188                     __end_of_wait_lcd_set:
  7597                           	opt callstack 0
  7598                           
  7599 ;; *************** function _wait_lcd_done *****************
  7600 ;; Defined at:
  7601 ;;		line 124 in file "eadog.c"
  7602 ;; Parameters:    Size  Location     Type
  7603 ;;		None
  7604 ;; Auto vars:     Size  Location     Type
  7605 ;;		None
  7606 ;; Return value:  Size  Location     Type
  7607 ;;                  1  [STACK] void 
  7608 ;; Registers used:
  7609 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  7610 ;; Tracked objects:
  7611 ;;		On entry : 4/0
  7612 ;;		On exit  : 3F/0
  7613 ;;		Unchanged: 0/0
  7614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7615 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7616 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7617 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7618 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7619 ;;Total ram usage:        0 bytes
  7620 ;; Hardware stack levels used:    1
  7621 ;; Hardware stack levels required when called:    4
  7622 ;; This function calls:
  7623 ;;		_wdtdelay
  7624 ;; This function is called by:
  7625 ;;		_main
  7626 ;;		_send_lcd_cmd_dma
  7627 ;; This function uses a reentrant model
  7628 ;;
  7629                           
  7630                           	psect	text32
  7631  006006                     __ptext32:
  7632                           	opt callstack 0
  7633  006006                     _wait_lcd_done:
  7634                           	opt callstack 26
  7635                           
  7636                           ;eadog.c: 126:  while (spi_link.LCD_DATA);
  7637                           
  7638                           ; BSR set to: 0
  7639                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7640                           ;incstack = 0
  7641  006006  0100               	movlb	0	; () banked
  7642  006008  B7CD               	btfsc	_spi_link& (0+255),3,b	;volatile
  7643  00600A  D7FD               	goto	_wait_lcd_done
  7644                           
  7645                           ; BSR set to: 0
  7646                           ;eadog.c: 127:  wdtdelay(50);
  7647  00600C  0E32               	movlw	50
  7648  00600E  6EE6               	movwf	postinc1,c
  7649  006010  0E00               	movlw	0
  7650  006012  6EE6               	movwf	postinc1,c
  7651  006014  0E00               	movlw	0
  7652  006016  6EE6               	movwf	postinc1,c
  7653  006018  0E00               	movlw	0
  7654  00601A  6EE6               	movwf	postinc1,c
  7655  00601C  EC28  F02B         	call	_wdtdelay	;wreg free
  7656                           
  7657                           ; BSR set to: 0
  7658                           ; _wait_lcd_done: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  7659  006020  0012               	return		;funcret
  7660  006022                     __end_of_wait_lcd_done:
  7661                           	opt callstack 0
  7662                           
  7663 ;; *************** function _wdtdelay *****************
  7664 ;; Defined at:
  7665 ;;		line 21 in file "eadog.c"
  7666 ;; Parameters:    Size  Location     Type
  7667 ;;  delay           4  [STACK] unsigned long 
  7668 ;; Auto vars:     Size  Location     Type
  7669 ;;		None
  7670 ;; Return value:  Size  Location     Type
  7671 ;;                  1  [STACK] void 
  7672 ;; Registers used:
  7673 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  7674 ;; Tracked objects:
  7675 ;;		On entry : 0/0
  7676 ;;		On exit  : 3F/0
  7677 ;;		Unchanged: 0/0
  7678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7679 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7680 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7681 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7682 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7683 ;;Total ram usage:        0 bytes
  7684 ;; Hardware stack levels used:    1
  7685 ;; Hardware stack levels required when called:    3
  7686 ;; This function calls:
  7687 ;;		Nothing
  7688 ;; This function is called by:
  7689 ;;		_init_display
  7690 ;;		_send_lcd_cmd
  7691 ;;		_send_lcd_cmd_long
  7692 ;;		_wait_lcd_done
  7693 ;; This function uses a reentrant model
  7694 ;;
  7695                           
  7696                           	psect	text33
  7697  005650                     __ptext33:
  7698                           	opt callstack 0
  7699  005650                     _wdtdelay:
  7700                           	opt callstack 26
  7701                           
  7702                           ;eadog.c: 21: void wdtdelay(uint32_t delay);eadog.c: 22: {;eadog.c: 23:  static uint32_t
      +                           dcount;;eadog.c: 25:  for (dcount = 0; dcount <= delay; dcount++) {
  7703                           
  7704                           ; BSR set to: 0
  7705                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7706                           ;incstack = 0
  7707  005650  0100               	movlb	0	; () banked
  7708  005652  6BEC               	clrf	wdtdelay@dcount& (0+255),b
  7709  005654  6BED               	clrf	(wdtdelay@dcount+1)& (0+255),b
  7710  005656  6BEE               	clrf	(wdtdelay@dcount+2)& (0+255),b
  7711  005658  6BEF               	clrf	(wdtdelay@dcount+3)& (0+255),b
  7712  00565A  D009               	goto	l5635
  7713  00565C                     l1324:
  7714                           
  7715                           ; BSR set to: 0
  7716                           ;eadog.c: 26:   __nop();
  7717  00565C  F000               	nop	
  7718  00565E  0004               	clrwdt		;# 
  7719                           
  7720                           ;eadog.c: 28:  };
  7721  005660  0E01               	movlw	1
  7722  005662  0100               	movlb	0	; () banked
  7723  005664  27EC               	addwf	wdtdelay@dcount& (0+255),f,b
  7724  005666  0E00               	movlw	0
  7725  005668  23ED               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
  7726  00566A  23EE               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
  7727  00566C  23EF               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
  7728  00566E                     l5635:
  7729                           
  7730                           ; BSR set to: 0
  7731                           ;stkvar	_delay @ sp[(0)+-4]
  7732  00566E  0EFC               	movlw	-4
  7733  005670  006F FF8C  F03B    	movff	plusw1,btemp
  7734  005676  51EC               	movf	wdtdelay@dcount& (0+255),w,b
  7735  005678  5C3B               	subwf	btemp,w,c
  7736  00567A  0EFD               	movlw	-3
  7737  00567C  006F FF8C  F03B    	movff	plusw1,btemp
  7738  005682  51ED               	movf	(wdtdelay@dcount+1)& (0+255),w,b
  7739  005684  583B               	subwfb	btemp,w,c
  7740  005686  0EFE               	movlw	-2
  7741  005688  006F FF8C  F03B    	movff	plusw1,btemp
  7742  00568E  51EE               	movf	(wdtdelay@dcount+2)& (0+255),w,b
  7743  005690  583B               	subwfb	btemp,w,c
  7744  005692  0EFF               	movlw	-1
  7745  005694  006F FF8C  F03B    	movff	plusw1,btemp
  7746  00569A  51EF               	movf	(wdtdelay@dcount+3)& (0+255),w,b
  7747  00569C  583B               	subwfb	btemp,w,c
  7748  00569E  B0D8               	btfsc	status,0,c
  7749  0056A0  D7DD               	goto	l1324
  7750                           
  7751                           ; BSR set to: 0
  7752                           ; _wdtdelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
  7753  0056A2  52E5               	movf	postdec1,f,c
  7754  0056A4  52E5               	movf	postdec1,f,c
  7755  0056A6  52E5               	movf	postdec1,f,c
  7756  0056A8  52E5               	movf	postdec1,f,c
  7757  0056AA  0012               	return		;funcret
  7758  0056AC                     __end_of_wdtdelay:
  7759                           	opt callstack 0
  7760                           
  7761 ;; *************** function _start_lcd *****************
  7762 ;; Defined at:
  7763 ;;		line 109 in file "eadog.c"
  7764 ;; Parameters:    Size  Location     Type
  7765 ;;		None
  7766 ;; Auto vars:     Size  Location     Type
  7767 ;;		None
  7768 ;; Return value:  Size  Location     Type
  7769 ;;                  1  [STACK] void 
  7770 ;; Registers used:
  7771 ;;		None
  7772 ;; Tracked objects:
  7773 ;;		On entry : 3F/0
  7774 ;;		On exit  : 3F/3B
  7775 ;;		Unchanged: 0/0
  7776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7777 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7778 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7780 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7781 ;;Total ram usage:        0 bytes
  7782 ;; Hardware stack levels used:    1
  7783 ;; Hardware stack levels required when called:    3
  7784 ;; This function calls:
  7785 ;;		Nothing
  7786 ;; This function is called by:
  7787 ;;		_eaDogM_WriteString
  7788 ;;		_send_lcd_cmd_dma
  7789 ;; This function uses a reentrant model
  7790 ;;
  7791                           
  7792                           	psect	text34
  7793  006188                     __ptext34:
  7794                           	opt callstack 0
  7795  006188                     _start_lcd:
  7796                           	opt callstack 25
  7797                           
  7798                           ;eadog.c: 111:  DMA1CON0bits.DMA1SIRQEN = 1;
  7799                           
  7800                           ; BSR set to: 0
  7801                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7802                           ;incstack = 0
  7803  006188  013B               	movlb	59	; () banked
  7804  00618A  8DFC               	bsf	252,6,b	;volatile
  7805                           
  7806                           ; BSR set to: 59
  7807                           ; _start_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  7808  00618C  0012               	return		;funcret
  7809  00618E                     __end_of_start_lcd:
  7810                           	opt callstack 0
  7811                           
  7812 ;; *************** function _ringBufS_flush *****************
  7813 ;; Defined at:
  7814 ;;		line 76 in file "ringbufs.c"
  7815 ;; Parameters:    Size  Location     Type
  7816 ;;  _this           2  [STACK] PTR struct ringBufS_t
  7817 ;;		 -> ring_buf1(67), 
  7818 ;;  clearBuffer     1  [STACK] const char 
  7819 ;; Auto vars:     Size  Location     Type
  7820 ;;		None
  7821 ;; Return value:  Size  Location     Type
  7822 ;;                  1  [STACK] void 
  7823 ;; Registers used:
  7824 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  7825 ;; Tracked objects:
  7826 ;;		On entry : 3F/0
  7827 ;;		On exit  : 0/0
  7828 ;;		Unchanged: 0/0
  7829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7830 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7831 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7832 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7833 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7834 ;;Total ram usage:        0 bytes
  7835 ;; Hardware stack levels used:    1
  7836 ;; Hardware stack levels required when called:    4
  7837 ;; This function calls:
  7838 ;;		_memset
  7839 ;; This function is called by:
  7840 ;;		_eaDogM_WriteString
  7841 ;;		_send_lcd_cmd_dma
  7842 ;; This function uses a reentrant model
  7843 ;;
  7844                           
  7845                           	psect	text35
  7846  0052E2                     __ptext35:
  7847                           	opt callstack 0
  7848  0052E2                     _ringBufS_flush:
  7849                           	opt callstack 24
  7850                           
  7851                           ;ringbufs.c: 76: void ringBufS_flush(ringBufS_t *_this, const int8_t clearBuffer);ringbu
      +                          fs.c: 77: {;ringbufs.c: 78:  _this->count = 0;
  7852                           ;stkvar	__this @ sp[(0)+-2]
  7853                           
  7854                           ; BSR set to: 59
  7855                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7856                           ;incstack = 0
  7857  0052E2  0EFE               	movlw	-2
  7858  0052E4  006F FF8C  F045    	movff	plusw1,btemp+10
  7859  0052EA  0EFF               	movlw	-1
  7860  0052EC  006F FF8C  F046    	movff	plusw1,btemp+11
  7861  0052F2  0E42               	movlw	66
  7862  0052F4  2445               	addwf	btemp+10,w,c
  7863  0052F6  6ED9               	movwf	fsr2l,c
  7864  0052F8  0E00               	movlw	0
  7865  0052FA  2046               	addwfc	btemp+11,w,c
  7866  0052FC  6EDA               	movwf	fsr2h,c
  7867  0052FE  0E00               	movlw	0
  7868  005300  6EDF               	movwf	indf2,c
  7869                           
  7870                           ;ringbufs.c: 79:  _this->head = 0;
  7871                           ;stkvar	__this @ sp[(0)+-2]
  7872  005302  0EFE               	movlw	-2
  7873  005304  006F FF8C  F045    	movff	plusw1,btemp+10
  7874  00530A  0EFF               	movlw	-1
  7875  00530C  006F FF8C  F046    	movff	plusw1,btemp+11
  7876  005312  0E40               	movlw	64
  7877  005314  2445               	addwf	btemp+10,w,c
  7878  005316  6ED9               	movwf	fsr2l,c
  7879  005318  0E00               	movlw	0
  7880  00531A  2046               	addwfc	btemp+11,w,c
  7881  00531C  6EDA               	movwf	fsr2h,c
  7882  00531E  0E00               	movlw	0
  7883  005320  6EDF               	movwf	indf2,c
  7884                           
  7885                           ;ringbufs.c: 80:  _this->tail = 0;
  7886                           ;stkvar	__this @ sp[(0)+-2]
  7887  005322  0EFE               	movlw	-2
  7888  005324  006F FF8C  F045    	movff	plusw1,btemp+10
  7889  00532A  0EFF               	movlw	-1
  7890  00532C  006F FF8C  F046    	movff	plusw1,btemp+11
  7891  005332  0E41               	movlw	65
  7892  005334  2445               	addwf	btemp+10,w,c
  7893  005336  6ED9               	movwf	fsr2l,c
  7894  005338  0E00               	movlw	0
  7895  00533A  2046               	addwfc	btemp+11,w,c
  7896  00533C  6EDA               	movwf	fsr2h,c
  7897  00533E  0E00               	movlw	0
  7898  005340  6EDF               	movwf	indf2,c
  7899                           
  7900                           ;ringbufs.c: 81:  if (clearBuffer) {
  7901                           ;stkvar	_clearBuffer @ sp[(0)+-3]
  7902  005342  0EFD               	movlw	-3
  7903  005344  50E3               	movf	plusw1,w,c
  7904  005346  B4D8               	btfsc	status,2,c
  7905  005348  D011               	goto	l1460
  7906                           
  7907                           ;ringbufs.c: 82:   memset(_this->buf, 0, sizeof(_this->buf));
  7908  00534A  0E40               	movlw	64
  7909  00534C  6EE6               	movwf	postinc1,c
  7910  00534E  0E00               	movlw	0
  7911  005350  6EE6               	movwf	postinc1,c
  7912  005352  0E00               	movlw	0
  7913  005354  6EE6               	movwf	postinc1,c
  7914  005356  0E00               	movlw	0
  7915  005358  6EE6               	movwf	postinc1,c
  7916                           
  7917                           ;stkvar	__this @ sp[(-4)+-2]
  7918  00535A  0EFA               	movlw	-6
  7919  00535C  006F FF8F FFE6     	movff	plusw1,postinc1
  7920  005362  006F FF8F FFE6     	movff	plusw1,postinc1
  7921  005368  EC90  F019         	call	_memset	;wreg free
  7922  00536C                     l1460:
  7923                           
  7924                           ; _ringBufS_flush: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3
      +                          , argsize = 3, vargsize = 0
  7925  00536C  52E5               	movf	postdec1,f,c
  7926  00536E  52E5               	movf	postdec1,f,c
  7927  005370  52E5               	movf	postdec1,f,c
  7928  005372  0012               	return		;funcret
  7929  005374                     __end_of_ringBufS_flush:
  7930                           	opt callstack 0
  7931                           
  7932 ;; *************** function _memset *****************
  7933 ;; Defined at:
  7934 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/memset.c"
  7935 ;; Parameters:    Size  Location     Type
  7936 ;;  dest            2  [STACK] PTR void 
  7937 ;;		 -> ring_buf2(67), ring_buf1(67), 
  7938 ;;  c               2  [STACK] int 
  7939 ;;  n               2  [STACK] unsigned int 
  7940 ;; Auto vars:     Size  Location     Type
  7941 ;;  s               2  [STACK] PTR unsigned char 
  7942 ;;		 -> ring_buf2(67), ring_buf1(67), 
  7943 ;;  k               2  [STACK] unsigned int 
  7944 ;; Return value:  Size  Location     Type
  7945 ;;                  2  [STACK] PTR void 
  7946 ;; Registers used:
  7947 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  7948 ;; Tracked objects:
  7949 ;;		On entry : 0/0
  7950 ;;		On exit  : 0/0
  7951 ;;		Unchanged: 0/0
  7952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7953 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7954 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7956 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7957 ;;Total ram usage:        0 bytes
  7958 ;; Hardware stack levels used:    1
  7959 ;; Hardware stack levels required when called:    3
  7960 ;; This function calls:
  7961 ;;		Nothing
  7962 ;; This function is called by:
  7963 ;;		_ringBufS_init
  7964 ;;		_ringBufS_flush
  7965 ;; This function uses a reentrant model
  7966 ;;
  7967                           
  7968                           	psect	text36
  7969  003320                     __ptext36:
  7970                           	opt callstack 0
  7971  003320                     _memset:
  7972                           	opt callstack 0
  7973                           
  7974                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7975  003320  52E6               	movf	postinc1,f,c
  7976  003322  52E6               	movf	postinc1,f,c
  7977  003324  52E6               	movf	postinc1,f,c
  7978  003326  52E6               	movf	postinc1,f,c
  7979                           
  7980                           ;stkvar	_dest @ sp[(-4)+-2]
  7981                           
  7982                           ;incstack = 0
  7983  003328  0EFA               	movlw	-6
  7984  00332A  006F FF8C  F045    	movff	plusw1,btemp+10
  7985  003330  0EFB               	movlw	-5
  7986  003332  006F FF8C  F046    	movff	plusw1,btemp+11
  7987                           
  7988                           ;stkvar	_s @ sp[(-4)+0]
  7989  003338  0EFD               	movlw	-3
  7990  00333A  0060  F11B  FFE3   	movff	btemp+11,plusw1
  7991  003340  0EFC               	movlw	-4
  7992  003342  0060  F117  FFE3   	movff	btemp+10,plusw1
  7993                           
  7994                           ;stkvar	_n @ sp[(-4)+-6]
  7995  003348  0EF6               	movlw	-10
  7996  00334A  006F FF8C  F03B    	movff	plusw1,btemp
  7997  003350  0EF7               	movlw	-9
  7998  003352  50E3               	movf	plusw1,w,c
  7999  003354  103B               	iorwf	btemp,w,c
  8000  003356  B4D8               	btfsc	status,2,c
  8001  003358  D154               	goto	u4840
  8002                           
  8003                           ;stkvar	_c @ sp[(-4)+-4]
  8004                           ;stkvar	_s @ sp[(-4)+0]
  8005  00335A  0EFC               	movlw	-4
  8006  00335C  006F FF8F FFD9     	movff	plusw1,fsr2l
  8007  003362  0EFD               	movlw	-3
  8008  003364  006F FF8F FFDA     	movff	plusw1,fsr2h
  8009  00336A  0EF8               	movlw	-8
  8010  00336C  006F FF8F FFDF     	movff	plusw1,indf2
  8011                           
  8012                           ;stkvar	_c @ sp[(-4)+-4]
  8013                           ;stkvar	_n @ sp[(-4)+-6]
  8014                           ;stkvar	_s @ sp[(-4)+0]
  8015  003372  0EFC               	movlw	-4
  8016  003374  006F FF8C  F045    	movff	plusw1,btemp+10
  8017  00337A  0EFD               	movlw	-3
  8018  00337C  006F FF8C  F046    	movff	plusw1,btemp+11
  8019  003382  0EF6               	movlw	-10
  8020  003384  50E3               	movf	plusw1,w,c
  8021  003386  2645               	addwf	btemp+10,f,c
  8022  003388  0EF7               	movlw	-9
  8023  00338A  50E3               	movf	plusw1,w,c
  8024  00338C  2246               	addwfc	btemp+11,f,c
  8025  00338E  0EFF               	movlw	255
  8026  003390  2445               	addwf	btemp+10,w,c
  8027  003392  6ED9               	movwf	fsr2l,c
  8028  003394  0EFF               	movlw	255
  8029  003396  2046               	addwfc	btemp+11,w,c
  8030  003398  6EDA               	movwf	fsr2h,c
  8031  00339A  0EF8               	movlw	-8
  8032  00339C  006F FF8F FFDF     	movff	plusw1,indf2
  8033                           
  8034                           ;stkvar	_n @ sp[(-4)+-6]
  8035  0033A2  0EF7               	movlw	-9
  8036  0033A4  50E3               	movf	plusw1,w,c
  8037  0033A6  E108               	bnz	l7831
  8038  0033A8  0EF6               	movlw	-10
  8039  0033AA  006F FF8C  F03B    	movff	plusw1,btemp
  8040  0033B0  0E03               	movlw	3
  8041  0033B2  5E3B               	subwf	btemp,f,c
  8042  0033B4  A0D8               	btfss	status,0,c
  8043  0033B6  D125               	goto	u4840
  8044  0033B8                     l7831:
  8045                           
  8046                           ;stkvar	_c @ sp[(-4)+-4]
  8047                           ;stkvar	_s @ sp[(-4)+0]
  8048  0033B8  0EFC               	movlw	-4
  8049  0033BA  006F FF8C  F045    	movff	plusw1,btemp+10
  8050  0033C0  0EFD               	movlw	-3
  8051  0033C2  006F FF8C  F046    	movff	plusw1,btemp+11
  8052  0033C8  0E01               	movlw	1
  8053  0033CA  2445               	addwf	btemp+10,w,c
  8054  0033CC  6ED9               	movwf	fsr2l,c
  8055  0033CE  0E00               	movlw	0
  8056  0033D0  2046               	addwfc	btemp+11,w,c
  8057  0033D2  6EDA               	movwf	fsr2h,c
  8058  0033D4  0EF8               	movlw	-8
  8059  0033D6  006F FF8F FFDF     	movff	plusw1,indf2
  8060                           
  8061                           ;stkvar	_c @ sp[(-4)+-4]
  8062                           ;stkvar	_s @ sp[(-4)+0]
  8063  0033DC  0EFC               	movlw	-4
  8064  0033DE  006F FF8C  F045    	movff	plusw1,btemp+10
  8065  0033E4  0EFD               	movlw	-3
  8066  0033E6  006F FF8C  F046    	movff	plusw1,btemp+11
  8067  0033EC  0E02               	movlw	2
  8068  0033EE  2445               	addwf	btemp+10,w,c
  8069  0033F0  6ED9               	movwf	fsr2l,c
  8070  0033F2  0E00               	movlw	0
  8071  0033F4  2046               	addwfc	btemp+11,w,c
  8072  0033F6  6EDA               	movwf	fsr2h,c
  8073  0033F8  0EF8               	movlw	-8
  8074  0033FA  006F FF8F FFDF     	movff	plusw1,indf2
  8075                           
  8076                           ;stkvar	_c @ sp[(-4)+-4]
  8077                           ;stkvar	_n @ sp[(-4)+-6]
  8078                           ;stkvar	_s @ sp[(-4)+0]
  8079  003400  0EFC               	movlw	-4
  8080  003402  006F FF8C  F045    	movff	plusw1,btemp+10
  8081  003408  0EFD               	movlw	-3
  8082  00340A  006F FF8C  F046    	movff	plusw1,btemp+11
  8083  003410  0EF6               	movlw	-10
  8084  003412  50E3               	movf	plusw1,w,c
  8085  003414  2645               	addwf	btemp+10,f,c
  8086  003416  0EF7               	movlw	-9
  8087  003418  50E3               	movf	plusw1,w,c
  8088  00341A  2246               	addwfc	btemp+11,f,c
  8089  00341C  0EFE               	movlw	254
  8090  00341E  2445               	addwf	btemp+10,w,c
  8091  003420  6ED9               	movwf	fsr2l,c
  8092  003422  0EFF               	movlw	255
  8093  003424  2046               	addwfc	btemp+11,w,c
  8094  003426  6EDA               	movwf	fsr2h,c
  8095  003428  0EF8               	movlw	-8
  8096  00342A  006F FF8F FFDF     	movff	plusw1,indf2
  8097                           
  8098                           ;stkvar	_c @ sp[(-4)+-4]
  8099                           ;stkvar	_n @ sp[(-4)+-6]
  8100                           ;stkvar	_s @ sp[(-4)+0]
  8101  003430  0EFC               	movlw	-4
  8102  003432  006F FF8C  F045    	movff	plusw1,btemp+10
  8103  003438  0EFD               	movlw	-3
  8104  00343A  006F FF8C  F046    	movff	plusw1,btemp+11
  8105  003440  0EF6               	movlw	-10
  8106  003442  50E3               	movf	plusw1,w,c
  8107  003444  2645               	addwf	btemp+10,f,c
  8108  003446  0EF7               	movlw	-9
  8109  003448  50E3               	movf	plusw1,w,c
  8110  00344A  2246               	addwfc	btemp+11,f,c
  8111  00344C  0EFD               	movlw	253
  8112  00344E  2445               	addwf	btemp+10,w,c
  8113  003450  6ED9               	movwf	fsr2l,c
  8114  003452  0EFF               	movlw	255
  8115  003454  2046               	addwfc	btemp+11,w,c
  8116  003456  6EDA               	movwf	fsr2h,c
  8117  003458  0EF8               	movlw	-8
  8118  00345A  006F FF8F FFDF     	movff	plusw1,indf2
  8119                           
  8120                           ;stkvar	_n @ sp[(-4)+-6]
  8121  003460  0EF7               	movlw	-9
  8122  003462  50E3               	movf	plusw1,w,c
  8123  003464  E108               	bnz	l7837
  8124  003466  0EF6               	movlw	-10
  8125  003468  006F FF8C  F03B    	movff	plusw1,btemp
  8126  00346E  0E07               	movlw	7
  8127  003470  5E3B               	subwf	btemp,f,c
  8128  003472  A0D8               	btfss	status,0,c
  8129  003474  D0C6               	goto	u4840
  8130  003476                     l7837:
  8131                           
  8132                           ;stkvar	_c @ sp[(-4)+-4]
  8133                           ;stkvar	_s @ sp[(-4)+0]
  8134  003476  0EFC               	movlw	-4
  8135  003478  006F FF8C  F045    	movff	plusw1,btemp+10
  8136  00347E  0EFD               	movlw	-3
  8137  003480  006F FF8C  F046    	movff	plusw1,btemp+11
  8138  003486  0E03               	movlw	3
  8139  003488  2445               	addwf	btemp+10,w,c
  8140  00348A  6ED9               	movwf	fsr2l,c
  8141  00348C  0E00               	movlw	0
  8142  00348E  2046               	addwfc	btemp+11,w,c
  8143  003490  6EDA               	movwf	fsr2h,c
  8144  003492  0EF8               	movlw	-8
  8145  003494  006F FF8F FFDF     	movff	plusw1,indf2
  8146                           
  8147                           ;stkvar	_c @ sp[(-4)+-4]
  8148                           ;stkvar	_n @ sp[(-4)+-6]
  8149                           ;stkvar	_s @ sp[(-4)+0]
  8150  00349A  0EFC               	movlw	-4
  8151  00349C  006F FF8C  F045    	movff	plusw1,btemp+10
  8152  0034A2  0EFD               	movlw	-3
  8153  0034A4  006F FF8C  F046    	movff	plusw1,btemp+11
  8154  0034AA  0EF6               	movlw	-10
  8155  0034AC  50E3               	movf	plusw1,w,c
  8156  0034AE  2645               	addwf	btemp+10,f,c
  8157  0034B0  0EF7               	movlw	-9
  8158  0034B2  50E3               	movf	plusw1,w,c
  8159  0034B4  2246               	addwfc	btemp+11,f,c
  8160  0034B6  0EFC               	movlw	252
  8161  0034B8  2445               	addwf	btemp+10,w,c
  8162  0034BA  6ED9               	movwf	fsr2l,c
  8163  0034BC  0EFF               	movlw	255
  8164  0034BE  2046               	addwfc	btemp+11,w,c
  8165  0034C0  6EDA               	movwf	fsr2h,c
  8166  0034C2  0EF8               	movlw	-8
  8167  0034C4  006F FF8F FFDF     	movff	plusw1,indf2
  8168                           
  8169                           ;stkvar	_n @ sp[(-4)+-6]
  8170  0034CA  0EF7               	movlw	-9
  8171  0034CC  50E3               	movf	plusw1,w,c
  8172  0034CE  E108               	bnz	l7843
  8173  0034D0  0EF6               	movlw	-10
  8174  0034D2  006F FF8C  F03B    	movff	plusw1,btemp
  8175  0034D8  0E09               	movlw	9
  8176  0034DA  5E3B               	subwf	btemp,f,c
  8177  0034DC  A0D8               	btfss	status,0,c
  8178  0034DE  D091               	goto	u4840
  8179  0034E0                     l7843:
  8180                           
  8181                           ;stkvar	_s @ sp[(-4)+0]
  8182  0034E0  0EFC               	movlw	-4
  8183  0034E2  006F FF8C  F045    	movff	plusw1,btemp+10
  8184  0034E8  1E45               	comf	btemp+10,f,c
  8185  0034EA  0EFD               	movlw	-3
  8186  0034EC  006F FF8C  F046    	movff	plusw1,btemp+11
  8187  0034F2  1E46               	comf	btemp+11,f,c
  8188  0034F4  2A45               	incf	btemp+10,f,c
  8189  0034F6  B4D8               	btfsc	status,2,c
  8190  0034F8  2A46               	incf	btemp+11,f,c
  8191  0034FA  0E03               	movlw	3
  8192  0034FC  1645               	andwf	btemp+10,f,c
  8193  0034FE  0E00               	movlw	0
  8194  003500  1646               	andwf	btemp+11,f,c
  8195                           
  8196                           ;stkvar	_k @ sp[(-4)+2]
  8197  003502  0EFE               	movlw	-2
  8198  003504  0060  F117  FFE3   	movff	btemp+10,plusw1
  8199  00350A  0EFF               	movlw	-1
  8200  00350C  0060  F11B  FFE3   	movff	btemp+11,plusw1
  8201                           
  8202                           ;stkvar	_k @ sp[(-4)+2]
  8203                           ;stkvar	_s @ sp[(-4)+0]
  8204  003512  0EFC               	movlw	-4
  8205  003514  50E3               	movf	plusw1,w,c
  8206  003516  6E3B               	movwf	btemp,c
  8207  003518  0EFE               	movlw	-2
  8208  00351A  50E3               	movf	plusw1,w,c
  8209  00351C  263B               	addwf	btemp,f,c
  8210  00351E  0EFC               	movlw	-4
  8211  003520  0060  F0EF  FFE3   	movff	btemp,plusw1
  8212  003526  0EFD               	movlw	-3
  8213  003528  50E3               	movf	plusw1,w,c
  8214  00352A  6E3B               	movwf	btemp,c
  8215  00352C  0EFF               	movlw	-1
  8216  00352E  50E3               	movf	plusw1,w,c
  8217  003530  223B               	addwfc	btemp,f,c
  8218  003532  0EFD               	movlw	-3
  8219  003534  0060  F0EF  FFE3   	movff	btemp,plusw1
  8220                           
  8221                           ;stkvar	_k @ sp[(-4)+2]
  8222                           ;stkvar	_n @ sp[(-4)+-6]
  8223  00353A  0EF6               	movlw	-10
  8224  00353C  50E3               	movf	plusw1,w,c
  8225  00353E  6E3B               	movwf	btemp,c
  8226  003540  0EFE               	movlw	-2
  8227  003542  50E3               	movf	plusw1,w,c
  8228  003544  5E3B               	subwf	btemp,f,c
  8229  003546  0EF6               	movlw	-10
  8230  003548  0060  F0EF  FFE3   	movff	btemp,plusw1
  8231  00354E  0EF7               	movlw	-9
  8232  003550  50E3               	movf	plusw1,w,c
  8233  003552  6E3B               	movwf	btemp,c
  8234  003554  0EFF               	movlw	-1
  8235  003556  50E3               	movf	plusw1,w,c
  8236  003558  5A3B               	subwfb	btemp,f,c
  8237  00355A  0EF7               	movlw	-9
  8238  00355C  0060  F0EF  FFE3   	movff	btemp,plusw1
  8239  003562  0EFC               	movlw	252
  8240  003564  6E45               	movwf	btemp+10,c
  8241  003566  0EFF               	movlw	255
  8242  003568  6E46               	movwf	btemp+11,c
  8243                           
  8244                           ;stkvar	_n @ sp[(-4)+-6]
  8245  00356A  0EF6               	movlw	-10
  8246  00356C  006F FF8C  F03B    	movff	plusw1,btemp
  8247  003572  5045               	movf	btemp+10,w,c
  8248  003574  163B               	andwf	btemp,f,c
  8249  003576  0EF6               	movlw	-10
  8250  003578  0060  F0EF  FFE3   	movff	btemp,plusw1
  8251  00357E  0EF7               	movlw	-9
  8252  003580  006F FF8C  F03B    	movff	plusw1,btemp
  8253  003586  5046               	movf	btemp+11,w,c
  8254  003588  163B               	andwf	btemp,f,c
  8255  00358A  0EF7               	movlw	-9
  8256  00358C  D02E               	goto	L22
  8257  00358E                     l7851:
  8258                           
  8259                           ;stkvar	_c @ sp[(-4)+-4]
  8260                           ;stkvar	_s @ sp[(-4)+0]
  8261  00358E  0EFC               	movlw	-4
  8262  003590  006F FF8F FFD9     	movff	plusw1,fsr2l
  8263  003596  0EFD               	movlw	-3
  8264  003598  006F FF8F FFDA     	movff	plusw1,fsr2h
  8265  00359E  0EF8               	movlw	-8
  8266  0035A0  006F FF8F FFDF     	movff	plusw1,indf2
  8267                           
  8268                           ;stkvar	_n @ sp[(-4)+-6]
  8269  0035A6  0EF6               	movlw	-10
  8270  0035A8  006F FF8C  F03B    	movff	plusw1,btemp
  8271  0035AE  0E01               	movlw	1
  8272  0035B0  5E3B               	subwf	btemp,f,c
  8273  0035B2  0EF6               	movlw	-10
  8274  0035B4  0060  F0EF  FFE3   	movff	btemp,plusw1
  8275  0035BA  0EF7               	movlw	-9
  8276  0035BC  006F FF8C  F03B    	movff	plusw1,btemp
  8277  0035C2  0E00               	movlw	0
  8278  0035C4  5A3B               	subwfb	btemp,f,c
  8279  0035C6  0EF7               	movlw	-9
  8280  0035C8  0060  F0EF  FFE3   	movff	btemp,plusw1
  8281                           
  8282                           ;stkvar	_s @ sp[(-4)+0]
  8283  0035CE  0EFC               	movlw	-4
  8284  0035D0  50E3               	movf	plusw1,w,c
  8285  0035D2  0F01               	addlw	1
  8286  0035D4  6E3B               	movwf	btemp,c
  8287  0035D6  0EFC               	movlw	-4
  8288  0035D8  0060  F0EF  FFE3   	movff	btemp,plusw1
  8289  0035DE  6A3B               	clrf	btemp,c
  8290  0035E0  0EFD               	movlw	-3
  8291  0035E2  50E3               	movf	plusw1,w,c
  8292  0035E4  203B               	addwfc	btemp,w,c
  8293  0035E6  6E3B               	movwf	btemp,c
  8294  0035E8  0EFD               	movlw	-3
  8295  0035EA                     L22:
  8296  0035EA  0060  F0EF  FFE3   	movff	btemp,plusw1
  8297                           
  8298                           ;stkvar	_n @ sp[(-4)+-6]
  8299  0035F0  0EF6               	movlw	-10
  8300  0035F2  006F FF8C  F03B    	movff	plusw1,btemp
  8301  0035F8  0EF7               	movlw	-9
  8302  0035FA  50E3               	movf	plusw1,w,c
  8303  0035FC  103B               	iorwf	btemp,w,c
  8304  0035FE  A4D8               	btfss	status,2,c
  8305  003600  D7C6               	goto	l7851
  8306  003602                     u4840:
  8307                           
  8308                           ; _memset: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsiz
      +                          e = 6, vargsize = 0
  8309  003602  0EF6               	movlw	246
  8310  003604  26E1               	addwf	fsr1l,f,c
  8311  003606  0EFF               	movlw	255
  8312  003608  22E2               	addwfc	fsr1h,f,c
  8313  00360A  0012               	return		;funcret
  8314  00360C                     __end_of_memset:
  8315                           	opt callstack 0
  8316                           
  8317 ;; *************** function _printf *****************
  8318 ;; Defined at:
  8319 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/printf.c"
  8320 ;; Parameters:    Size  Location     Type
  8321 ;;  fmt             1  [STACK] PTR const unsigned char 
  8322 ;;		 -> STR_18(3), STR_17(3), STR_16(3), 
  8323 ;; Auto vars:     Size  Location     Type
  8324 ;;  ap              2  [STACK] PTR void [1]
  8325 ;;		 -> ?_printf(2), ?_sprintf(2), 
  8326 ;;  ret             2    0        int 
  8327 ;; Return value:  Size  Location     Type
  8328 ;;                  2  [STACK] int 
  8329 ;; Registers used:
  8330 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  8331 ;; Tracked objects:
  8332 ;;		On entry : 3F/3B
  8333 ;;		On exit  : 3F/0
  8334 ;;		Unchanged: 0/0
  8335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8336 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8337 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8338 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8339 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8340 ;;Total ram usage:        0 bytes
  8341 ;; Hardware stack levels used:    1
  8342 ;; Hardware stack levels required when called:   11
  8343 ;; This function calls:
  8344 ;;		_vfprintf
  8345 ;; This function is called by:
  8346 ;;		_eaDogM_WriteString
  8347 ;;		_send_lcd_cmd_dma
  8348 ;; This function uses a reentrant model
  8349 ;;
  8350                           
  8351                           	psect	text37
  8352  005530                     __ptext37:
  8353                           	opt callstack 0
  8354  005530                     _printf:
  8355                           	opt callstack 0
  8356                           
  8357                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8358  005530  52E6               	movf	postinc1,f,c
  8359  005532  52E6               	movf	postinc1,f,c
  8360                           
  8361                           ;stkvar	?_printf @ sp[(-2)+-3]
  8362                           
  8363                           ;incstack = 0
  8364  005534  0EFB               	movlw	251
  8365  005536  24E1               	addwf	fsr1l,w,c
  8366  005538  6E45               	movwf	btemp+10,c
  8367  00553A  0EFF               	movlw	255
  8368  00553C  20E2               	addwfc	fsr1h,w,c
  8369  00553E  6E46               	movwf	btemp+11,c
  8370  005540  0E01               	movlw	1
  8371  005542  2645               	addwf	btemp+10,f,c
  8372  005544  0E00               	movlw	0
  8373  005546  2246               	addwfc	btemp+11,f,c
  8374                           
  8375                           ;stkvar	_ap @ sp[(-2)+0]
  8376  005548  0EFF               	movlw	-1
  8377  00554A  0060  F11B  FFE3   	movff	btemp+11,plusw1
  8378  005550  0EFE               	movlw	-2
  8379  005552  0060  F117  FFE3   	movff	btemp+10,plusw1
  8380                           
  8381                           ;stkvar	_ap @ sp[(-2)+0]
  8382  005558  0EFE               	movlw	254
  8383  00555A  24E1               	addwf	fsr1l,w,c
  8384  00555C  6E3B               	movwf	btemp,c
  8385  00555E  0EFF               	movlw	255
  8386  005560  20E2               	addwfc	fsr1h,w,c
  8387  005562  6E3C               	movwf	btemp+1,c
  8388  005564  0060  F0EF  FFE6   	movff	btemp,postinc1
  8389  00556A  0060  F0F3  FFE6   	movff	btemp+1,postinc1
  8390                           
  8391                           ;stkvar	_fmt @ sp[(-4)+-2]
  8392  005570  0EFA               	movlw	-6
  8393  005572  50E3               	movf	plusw1,w,c
  8394  005574  6EE6               	movwf	postinc1,c
  8395  005576  0E00               	movlw	0
  8396  005578  6EE6               	movwf	postinc1,c
  8397  00557A  0E00               	movlw	0
  8398  00557C  6EE6               	movwf	postinc1,c
  8399  00557E  ECD9  F028         	call	_vfprintf	;wreg free
  8400                           
  8401                           ; BSR set to: 0
  8402                           ; _printf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsiz
      +                          e = 1, vargsize = 0
  8403  005582  52E5               	movf	postdec1,f,c
  8404  005584  52E5               	movf	postdec1,f,c
  8405  005586  52E5               	movf	postdec1,f,c
  8406  005588  50E7               	movf	indf1,w,c
  8407  00558A  5EE1               	subwf	fsr1l,f,c
  8408  00558C  0E00               	movlw	0
  8409  00558E  5AE2               	subwfb	fsr1h,f,c
  8410  005590  0012               	return		;funcret
  8411  005592                     __end_of_printf:
  8412                           	opt callstack 0
  8413                           
  8414 ;; *************** function _vfprintf *****************
  8415 ;; Defined at:
  8416 ;;		line 1368 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  8417 ;; Parameters:    Size  Location     Type
  8418 ;;  fp              2  [STACK] PTR struct _IO_FILE
  8419 ;;		 -> f(5), NULL(0), 
  8420 ;;  fmt             1  [STACK] PTR const unsigned char 
  8421 ;;		 -> STR_18(3), STR_17(3), STR_16(3), STR_15(21), 
  8422 ;;		 -> STR_14(19), STR_13(6), STR_12(17), STR_11(19), 
  8423 ;;		 -> STR_10(19), STR_9(20), STR_8(6), STR_7(6), 
  8424 ;;		 -> STR_6(14), STR_5(19), STR_4(15), STR_2(12), 
  8425 ;;		 -> STR_1(17), 
  8426 ;;  ap              2  [STACK] PTR PTR void 
  8427 ;;		 -> ap(2), ap(2), 
  8428 ;; Auto vars:     Size  Location     Type
  8429 ;;  cfmt            1  [STACK] PTR unsigned char 
  8430 ;;		 -> STR_18(3), STR_17(3), STR_16(3), STR_15(21), 
  8431 ;;		 -> STR_14(19), STR_13(6), STR_12(17), STR_11(19), 
  8432 ;;		 -> STR_10(19), STR_9(20), STR_8(6), STR_7(6), 
  8433 ;;		 -> STR_6(14), STR_5(19), STR_4(15), STR_2(12), 
  8434 ;;		 -> STR_1(17), 
  8435 ;; Return value:  Size  Location     Type
  8436 ;;                  2  [STACK] int 
  8437 ;; Registers used:
  8438 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  8439 ;; Tracked objects:
  8440 ;;		On entry : 0/0
  8441 ;;		On exit  : 3F/0
  8442 ;;		Unchanged: 0/0
  8443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8444 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8445 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8447 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8448 ;;Total ram usage:        0 bytes
  8449 ;; Hardware stack levels used:    1
  8450 ;; Hardware stack levels required when called:   10
  8451 ;; This function calls:
  8452 ;;		_vfpfcnvrt
  8453 ;; This function is called by:
  8454 ;;		_sprintf
  8455 ;;		_printf
  8456 ;; This function uses a reentrant model
  8457 ;;
  8458                           
  8459                           	psect	text38
  8460  0051B2                     __ptext38:
  8461                           	opt callstack 0
  8462  0051B2                     _vfprintf:
  8463                           	opt callstack 0
  8464                           
  8465                           ; BSR set to: 0
  8466                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8467  0051B2  52E6               	movf	postinc1,f,c
  8468                           
  8469                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
  8470                           ;stkvar	_fmt @ sp[(-1)+-3]
  8471                           
  8472                           ;incstack = 0
  8473  0051B4  0EFC               	movlw	-4
  8474  0051B6  006F FF8C  F046    	movff	plusw1,btemp+11
  8475                           
  8476                           ;stkvar	_cfmt @ sp[(-1)+0]
  8477  0051BC  0EFF               	movlw	-1
  8478  0051BE  0060  F11B  FFE3   	movff	btemp+11,plusw1
  8479                           
  8480                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
  8481  0051C4  0100               	movlb	0	; () banked
  8482  0051C6  6BF6               	clrf	_nout& (0+255),b
  8483  0051C8  6BF7               	clrf	(_nout+1)& (0+255),b
  8484                           
  8485                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  8486  0051CA  D021               	goto	l7865
  8487  0051CC                     l7863:
  8488                           
  8489                           ; BSR set to: 0
  8490                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
  8491                           ;stkvar	_ap @ sp[(-1)+-5]
  8492  0051CC  0EFA               	movlw	-6
  8493  0051CE  006F FF8F FFE6     	movff	plusw1,postinc1
  8494  0051D4  006F FF8F FFE6     	movff	plusw1,postinc1
  8495                           
  8496                           ;stkvar	_cfmt @ sp[(-3)+0]
  8497  0051DA  0EFD               	movlw	253
  8498  0051DC  24E1               	addwf	fsr1l,w,c
  8499  0051DE  6E3B               	movwf	btemp,c
  8500  0051E0  0EFF               	movlw	255
  8501  0051E2  20E2               	addwfc	fsr1h,w,c
  8502  0051E4  6E3C               	movwf	btemp+1,c
  8503  0051E6  0060  F0EF  FFE6   	movff	btemp,postinc1
  8504  0051EC  0060  F0F3  FFE6   	movff	btemp+1,postinc1
  8505                           
  8506                           ;stkvar	_fp @ sp[(-5)+-2]
  8507  0051F2  0EF9               	movlw	-7
  8508  0051F4  006F FF8F FFE6     	movff	plusw1,postinc1
  8509  0051FA  006F FF8F FFE6     	movff	plusw1,postinc1
  8510  005200  ECC2  F012         	call	_vfpfcnvrt	;wreg free
  8511  005204  503B               	movf	btemp,w,c
  8512  005206  0100               	movlb	0	; () banked
  8513  005208  27F6               	addwf	_nout& (0+255),f,b
  8514  00520A  503C               	movf	btemp+1,w,c
  8515  00520C  23F7               	addwfc	(_nout+1)& (0+255),f,b
  8516  00520E                     l7865:
  8517                           
  8518                           ; BSR set to: 0
  8519                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  8520                           ;stkvar	_cfmt @ sp[(-1)+0]
  8521  00520E  50E1               	movf	fsr1l,w,c
  8522  005210  0FFF               	addlw	-1
  8523  005212  6ED9               	movwf	fsr2l,c
  8524  005214  50E2               	movf	fsr1h,w,c
  8525  005216  6EDA               	movwf	fsr2h,c
  8526  005218  0EFF               	movlw	255
  8527  00521A  22DA               	addwfc	fsr2h,f,c
  8528  00521C  006F FF7F FFF6     	movff	indf2,tblptrl
  8529  005222                     	if	1	;There is more than 1 active tblptr byte
  8530  005222  0E20               	movlw	high __smallconst
  8531  005224  6EF7               	movwf	tblptrh,c
  8532  005226                     	endif
  8533  005226                     	if	0	;tblptru may be non-zero
  8534  005226                     	endif
  8535  005226                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8536  005226  0E00               	movlw	low (__smallconst shr (0+16))
  8537  005228  6EF8               	movwf	tblptru,c
  8538  00522A                     	endif
  8539  00522A  0008               	tblrd		*
  8540  00522C  50F5               	movf	tablat,w,c
  8541  00522E  0900               	iorlw	0
  8542  005230  A4D8               	btfss	status,2,c
  8543  005232  D7CC               	goto	l7863
  8544                           
  8545                           ; BSR set to: 0
  8546                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1378:     return nout;
  8547  005234  0060  F3D8  F03B   	movff	_nout,btemp
  8548  00523A  0060  F3DC  F03C   	movff	_nout+1,btemp+1
  8549                           
  8550                           ; BSR set to: 0
  8551                           ; _vfprintf: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, args
      +                          ize = 5, vargsize = 0
  8552  005240  0EFA               	movlw	250
  8553  005242  26E1               	addwf	fsr1l,f,c
  8554  005244  0EFF               	movlw	255
  8555  005246  22E2               	addwfc	fsr1h,f,c
  8556  005248  0012               	return		;funcret
  8557  00524A                     __end_of_vfprintf:
  8558                           	opt callstack 0
  8559                           
  8560 ;; *************** function _vfpfcnvrt *****************
  8561 ;; Defined at:
  8562 ;;		line 670 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  8563 ;; Parameters:    Size  Location     Type
  8564 ;;  fp              2  [STACK] PTR struct _IO_FILE
  8565 ;;		 -> f(5), NULL(0), 
  8566 ;;  fmt             2  [STACK] PTR PTR unsigned char 
  8567 ;;		 -> cfmt(1), 
  8568 ;;  ap              2  [STACK] PTR PTR void 
  8569 ;;		 -> ap(2), ap(2), 
  8570 ;; Auto vars:     Size  Location     Type
  8571 ;;  ll              8  [STACK] long long 
  8572 ;;  llu             8    0        unsigned long long 
  8573 ;;  f               4    0        unsigned long long 
  8574 ;;  vp              3    0        PTR void 
  8575 ;;  ct              3    0        unsigned char [3]
  8576 ;;  cp              2  [STACK] PTR unsigned char 
  8577 ;;		 -> ?_printf(2), ?_sprintf(2), STR_3(6), V(89), 
  8578 ;;  i               2    0        int 
  8579 ;;  done            2    0        int 
  8580 ;;  c               1  [STACK] unsigned char 
  8581 ;; Return value:  Size  Location     Type
  8582 ;;                  2  [STACK] int 
  8583 ;; Registers used:
  8584 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  8585 ;; Tracked objects:
  8586 ;;		On entry : 0/0
  8587 ;;		On exit  : 0/0
  8588 ;;		Unchanged: 0/0
  8589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8590 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8591 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8592 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8593 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8594 ;;Total ram usage:        0 bytes
  8595 ;; Hardware stack levels used:    1
  8596 ;; Hardware stack levels required when called:    9
  8597 ;; This function calls:
  8598 ;;		_ctoa
  8599 ;;		_dtoa
  8600 ;;		_fputc
  8601 ;;		_stoa
  8602 ;;		_strncmp
  8603 ;; This function is called by:
  8604 ;;		_vfprintf
  8605 ;; This function uses a reentrant model
  8606 ;;
  8607                           
  8608                           	psect	text39
  8609  002584                     __ptext39:
  8610                           	opt callstack 0
  8611  002584                     _vfpfcnvrt:
  8612                           	opt callstack 0
  8613                           
  8614                           ; BSR set to: 0
  8615                           ; autosize = 11, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  8616  002584  0E0B               	movlw	11
  8617  002586  26E1               	addwf	fsr1l,f,c
  8618  002588  0E00               	movlw	0
  8619  00258A  22E2               	addwfc	fsr1h,f,c
  8620                           
  8621                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
  8622                           ;stkvar	_fmt @ sp[(-11)+-4]
  8623                           
  8624                           ;incstack = 0
  8625  00258C  0EF1               	movlw	-15
  8626  00258E  006F FF8F FFD9     	movff	plusw1,fsr2l
  8627  002594  0EF2               	movlw	-14
  8628  002596  006F FF8F FFDA     	movff	plusw1,fsr2h
  8629  00259C  006F FF7F FFF6     	movff	indf2,tblptrl
  8630  0025A2                     	if	1	;There is more than 1 active tblptr byte
  8631  0025A2  0E20               	movlw	high __smallconst
  8632  0025A4  6EF7               	movwf	tblptrh,c
  8633  0025A6                     	endif
  8634  0025A6                     	if	0	;tblptru may be non-zero
  8635  0025A6                     	endif
  8636  0025A6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8637  0025A6  0E00               	movlw	low (__smallconst shr (0+16))
  8638  0025A8  6EF8               	movwf	tblptru,c
  8639  0025AA                     	endif
  8640  0025AA  0008               	tblrd		*
  8641  0025AC  50F5               	movf	tablat,w,c
  8642  0025AE  0A25               	xorlw	37
  8643  0025B0  A4D8               	btfss	status,2,c
  8644  0025B2  D213               	goto	l7809
  8645                           
  8646                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
  8647                           ;stkvar	_fmt @ sp[(-11)+-4]
  8648  0025B4  0EF1               	movlw	-15
  8649  0025B6  006F FF8F FFD9     	movff	plusw1,fsr2l
  8650  0025BC  0EF2               	movlw	-14
  8651  0025BE  006F FF8F FFDA     	movff	plusw1,fsr2h
  8652  0025C4  2ADF               	incf	indf2,f,c
  8653                           
  8654                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
  8655  0025C6  6A20               	clrf	_width,c
  8656  0025C8  6A21               	clrf	_width+1,c
  8657  0025CA  6A24               	clrf	_flags,c
  8658  0025CC  6A25               	clrf	_flags+1,c
  8659                           
  8660                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
  8661  0025CE  6822               	setf	_prec,c
  8662  0025D0  6823               	setf	_prec+1,c
  8663                           
  8664                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
  8665                           ;stkvar	_fmt @ sp[(-11)+-4]
  8666  0025D2  0EF1               	movlw	-15
  8667  0025D4  006F FF8F FFD9     	movff	plusw1,fsr2l
  8668  0025DA  0EF2               	movlw	-14
  8669  0025DC  006F FF8F FFDA     	movff	plusw1,fsr2h
  8670  0025E2  006F FF7F FFF6     	movff	indf2,tblptrl
  8671  0025E8                     	if	1	;There is more than 1 active tblptr byte
  8672  0025E8  0E20               	movlw	high __smallconst
  8673  0025EA  6EF7               	movwf	tblptrh,c
  8674  0025EC                     	endif
  8675  0025EC                     	if	0	;tblptru may be non-zero
  8676  0025EC                     	endif
  8677  0025EC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8678  0025EC  0E00               	movlw	low (__smallconst shr (0+16))
  8679  0025EE  6EF8               	movwf	tblptru,c
  8680  0025F0                     	endif
  8681  0025F0  0008               	tblrd		*
  8682  0025F2  50F5               	movf	tablat,w,c
  8683  0025F4  0A63               	xorlw	99
  8684  0025F6  A4D8               	btfss	status,2,c
  8685  0025F8  D034               	goto	l7759
  8686                           
  8687                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
  8688                           ;stkvar	_fmt @ sp[(-11)+-4]
  8689  0025FA  0EF1               	movlw	-15
  8690  0025FC  006F FF8F FFD9     	movff	plusw1,fsr2l
  8691  002602  0EF2               	movlw	-14
  8692  002604  006F FF8F FFDA     	movff	plusw1,fsr2h
  8693  00260A  2ADF               	incf	indf2,f,c
  8694                           
  8695                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
  8696                           ;stkvar	_ap @ sp[(-11)+-6]
  8697  00260C  0EEF               	movlw	-17
  8698  00260E  006F FF8F FFD9     	movff	plusw1,fsr2l
  8699  002614  0EF0               	movlw	-16
  8700  002616  006F FF8F FFDA     	movff	plusw1,fsr2h
  8701  00261C  0E02               	movlw	2
  8702  00261E  5EDE               	subwf	postinc2,f,c
  8703  002620  0E00               	movlw	0
  8704  002622  5ADD               	subwfb	postdec2,f,c
  8705  002624  006F FF78  F045    	movff	postinc2,btemp+10
  8706  00262A  006F FF74  F046    	movff	postdec2,btemp+11
  8707  002630  0060  F117  FFD9   	movff	btemp+10,fsr2l
  8708  002636  0060  F11B  FFDA   	movff	btemp+11,fsr2h
  8709  00263C  50DF               	movf	indf2,w,c
  8710  00263E  6E46               	movwf	btemp+11,c
  8711                           
  8712                           ;stkvar	_c @ sp[(-11)+10]
  8713  002640  0EFF               	movlw	-1
  8714  002642  0060  F11B  FFE3   	movff	btemp+11,plusw1
  8715                           
  8716                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
  8717                           ;stkvar	_c @ sp[(-11)+10]
  8718  002648  0EFF               	movlw	-1
  8719  00264A  50E3               	movf	plusw1,w,c
  8720  00264C  6EE6               	movwf	postinc1,c
  8721                           
  8722                           ;stkvar	_fp @ sp[(-12)+-2]
  8723  00264E  0EF2               	movlw	-14
  8724  002650  006F FF8F FFE6     	movff	plusw1,postinc1
  8725  002656  006F FF8F FFE6     	movff	plusw1,postinc1
  8726  00265C  ECBA  F029         	call	_ctoa	;wreg free
  8727  002660  D1E3               	goto	l1839
  8728  002662                     l7759:
  8729                           
  8730                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
  8731                           ;stkvar	_fmt @ sp[(-11)+-4]
  8732  002662  0EF1               	movlw	-15
  8733  002664  006F FF8F FFD9     	movff	plusw1,fsr2l
  8734  00266A  0EF2               	movlw	-14
  8735  00266C  006F FF8F FFDA     	movff	plusw1,fsr2h
  8736  002672  006F FF7F FFF6     	movff	indf2,tblptrl
  8737  002678                     	if	1	;There is more than 1 active tblptr byte
  8738  002678  0E20               	movlw	high __smallconst
  8739  00267A  6EF7               	movwf	tblptrh,c
  8740  00267C                     	endif
  8741  00267C                     	if	0	;tblptru may be non-zero
  8742  00267C                     	endif
  8743  00267C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8744  00267C  0E00               	movlw	low (__smallconst shr (0+16))
  8745  00267E  6EF8               	movwf	tblptru,c
  8746  002680                     	endif
  8747  002680  0008               	tblrd		*
  8748  002682  50F5               	movf	tablat,w,c
  8749  002684  0A64               	xorlw	100
  8750  002686  B4D8               	btfsc	status,2,c
  8751  002688  D014               	goto	u4750
  8752                           
  8753                           ;stkvar	_fmt @ sp[(-11)+-4]
  8754  00268A  0EF1               	movlw	-15
  8755  00268C  006F FF8F FFD9     	movff	plusw1,fsr2l
  8756  002692  0EF2               	movlw	-14
  8757  002694  006F FF8F FFDA     	movff	plusw1,fsr2h
  8758  00269A  006F FF7F FFF6     	movff	indf2,tblptrl
  8759  0026A0                     	if	1	;There is more than 1 active tblptr byte
  8760  0026A0  0E20               	movlw	high __smallconst
  8761  0026A2  6EF7               	movwf	tblptrh,c
  8762  0026A4                     	endif
  8763  0026A4                     	if	0	;tblptru may be non-zero
  8764  0026A4                     	endif
  8765  0026A4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8766  0026A4  0E00               	movlw	low (__smallconst shr (0+16))
  8767  0026A6  6EF8               	movwf	tblptru,c
  8768  0026A8                     	endif
  8769  0026A8  0008               	tblrd		*
  8770  0026AA  50F5               	movf	tablat,w,c
  8771  0026AC  0A69               	xorlw	105
  8772  0026AE  A4D8               	btfss	status,2,c
  8773  0026B0  D073               	goto	l7771
  8774  0026B2                     u4750:
  8775                           
  8776                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
  8777                           ;stkvar	_fmt @ sp[(-11)+-4]
  8778  0026B2  0EF1               	movlw	-15
  8779  0026B4  006F FF8F FFD9     	movff	plusw1,fsr2l
  8780  0026BA  0EF2               	movlw	-14
  8781  0026BC  006F FF8F FFDA     	movff	plusw1,fsr2h
  8782  0026C2  2ADF               	incf	indf2,f,c
  8783                           
  8784                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
  8785                           ;stkvar	_ap @ sp[(-11)+-6]
  8786  0026C4  0EEF               	movlw	-17
  8787  0026C6  006F FF8F FFD9     	movff	plusw1,fsr2l
  8788  0026CC  0EF0               	movlw	-16
  8789  0026CE  006F FF8F FFDA     	movff	plusw1,fsr2h
  8790  0026D4  0E02               	movlw	2
  8791  0026D6  5EDE               	subwf	postinc2,f,c
  8792  0026D8  0E00               	movlw	0
  8793  0026DA  5ADD               	subwfb	postdec2,f,c
  8794  0026DC  006F FF78  F045    	movff	postinc2,btemp+10
  8795  0026E2  006F FF74  F046    	movff	postdec2,btemp+11
  8796  0026E8  0060  F117  FFD9   	movff	btemp+10,fsr2l
  8797  0026EE  0060  F11B  FFDA   	movff	btemp+11,fsr2h
  8798  0026F4  006F FF78  F045    	movff	postinc2,btemp+10
  8799  0026FA  006F FF74  F046    	movff	postdec2,btemp+11
  8800                           
  8801                           ;stkvar	_ll @ sp[(-11)+0]
  8802  002700  0EF5               	movlw	-11
  8803  002702  0060  F117  FFE3   	movff	btemp+10,plusw1
  8804  002708  0EF6               	movlw	-10
  8805  00270A  0060  F11B  FFE3   	movff	btemp+11,plusw1
  8806  002710  6A3B               	clrf	btemp,c
  8807  002712  BEE3               	btfsc	plusw1,7,c
  8808  002714  683B               	setf	btemp,c
  8809  002716  0EF7               	movlw	-9
  8810  002718  0060  F0EF  FFE3   	movff	btemp,plusw1
  8811  00271E  0EF8               	movlw	-8
  8812  002720  0060  F0EF  FFE3   	movff	btemp,plusw1
  8813  002726  0EF9               	movlw	-7
  8814  002728  0060  F0EF  FFE3   	movff	btemp,plusw1
  8815  00272E  0EFA               	movlw	-6
  8816  002730  0060  F0EF  FFE3   	movff	btemp,plusw1
  8817  002736  0EFB               	movlw	-5
  8818  002738  0060  F0EF  FFE3   	movff	btemp,plusw1
  8819  00273E  0EFC               	movlw	-4
  8820  002740  0060  F0EF  FFE3   	movff	btemp,plusw1
  8821  002746                     l7767:
  8822                           
  8823                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
  8824                           ;stkvar	_ll @ sp[(-11)+0]
  8825  002746  50E1               	movf	fsr1l,w,c
  8826  002748  0FF5               	addlw	-11
  8827  00274A  6ED9               	movwf	fsr2l,c
  8828  00274C  50E2               	movf	fsr1h,w,c
  8829  00274E  6EDA               	movwf	fsr2h,c
  8830  002750  0EFF               	movlw	255
  8831  002752  22DA               	addwfc	fsr2h,f,c
  8832  002754  006F FF7B FFE6     	movff	postinc2,postinc1
  8833  00275A  006F FF7B FFE6     	movff	postinc2,postinc1
  8834  002760  006F FF7B FFE6     	movff	postinc2,postinc1
  8835  002766  006F FF7B FFE6     	movff	postinc2,postinc1
  8836  00276C  006F FF7B FFE6     	movff	postinc2,postinc1
  8837  002772  006F FF7B FFE6     	movff	postinc2,postinc1
  8838  002778  006F FF7B FFE6     	movff	postinc2,postinc1
  8839  00277E  006F FF7B FFE6     	movff	postinc2,postinc1
  8840                           
  8841                           ;stkvar	_fp @ sp[(-19)+-2]
  8842  002784  0EEB               	movlw	-21
  8843  002786  006F FF8F FFE6     	movff	plusw1,postinc1
  8844  00278C  006F FF8F FFE6     	movff	plusw1,postinc1
  8845  002792  EC19  F015         	call	_dtoa	;wreg free
  8846  002796  D148               	goto	l1839
  8847  002798                     l7771:
  8848                           
  8849                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 835:         if (!strncmp(*fm
      +                          t, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", ((sizeof("li")/size
      +                          of("li"[0]))-1))) {
  8850  002798  0E02               	movlw	2
  8851  00279A  6EE6               	movwf	postinc1,c
  8852  00279C  0E00               	movlw	0
  8853  00279E  6EE6               	movwf	postinc1,c
  8854  0027A0  0EAD               	movlw	STR_19& (0+255)
  8855  0027A2  6EE6               	movwf	postinc1,c
  8856                           
  8857                           ;stkvar	_fmt @ sp[(-14)+-4]
  8858  0027A4  0EEE               	movlw	-18
  8859  0027A6  006F FF8F FFD9     	movff	plusw1,fsr2l
  8860  0027AC  0EEF               	movlw	-17
  8861  0027AE  006F FF8F FFDA     	movff	plusw1,fsr2h
  8862  0027B4  50DF               	movf	indf2,w,c
  8863  0027B6  6EE6               	movwf	postinc1,c
  8864  0027B8  ECBB  F023         	call	_strncmp	;wreg free
  8865  0027BC  503B               	movf	btemp,w,c
  8866  0027BE  103C               	iorwf	btemp+1,w,c
  8867  0027C0  B4D8               	btfsc	status,2,c
  8868  0027C2  D016               	goto	u4770
  8869  0027C4  0E02               	movlw	2
  8870  0027C6  6EE6               	movwf	postinc1,c
  8871  0027C8  0E00               	movlw	0
  8872  0027CA  6EE6               	movwf	postinc1,c
  8873  0027CC  0EB0               	movlw	STR_23& (0+255)
  8874  0027CE  6EE6               	movwf	postinc1,c
  8875                           
  8876                           ;stkvar	_fmt @ sp[(-14)+-4]
  8877  0027D0  0EEE               	movlw	-18
  8878  0027D2  006F FF8F FFD9     	movff	plusw1,fsr2l
  8879  0027D8  0EEF               	movlw	-17
  8880  0027DA  006F FF8F FFDA     	movff	plusw1,fsr2h
  8881  0027E0  50DF               	movf	indf2,w,c
  8882  0027E2  6EE6               	movwf	postinc1,c
  8883  0027E4  ECBB  F023         	call	_strncmp	;wreg free
  8884  0027E8  503B               	movf	btemp,w,c
  8885  0027EA  103C               	iorwf	btemp+1,w,c
  8886  0027EC  A4D8               	btfss	status,2,c
  8887  0027EE  D067               	goto	l7783
  8888  0027F0                     u4770:
  8889                           
  8890                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 836: ;/opt/microchip/xc8/v2.0
      +                          5/pic/sources/c99/common/doprnt.c: 838:             *fmt += ((sizeof("ld")/sizeof("ld"[0
      +                          ]))-1);
  8891                           ;stkvar	_fmt @ sp[(-11)+-4]
  8892  0027F0  0EF1               	movlw	-15
  8893  0027F2  006F FF8F FFD9     	movff	plusw1,fsr2l
  8894  0027F8  0EF2               	movlw	-14
  8895  0027FA  006F FF8F FFDA     	movff	plusw1,fsr2h
  8896  002800  0E02               	movlw	2
  8897  002802  26DF               	addwf	indf2,f,c
  8898                           
  8899                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 839:             ll = (long l
      +                          ong)(*(long *)__va_arg(*(long **)ap, (long)0));
  8900                           ;stkvar	_ap @ sp[(-11)+-6]
  8901  002804  0EEF               	movlw	-17
  8902  002806  006F FF8F FFD9     	movff	plusw1,fsr2l
  8903  00280C  0EF0               	movlw	-16
  8904  00280E  006F FF8F FFDA     	movff	plusw1,fsr2h
  8905  002814  0E04               	movlw	4
  8906  002816  5EDE               	subwf	postinc2,f,c
  8907  002818  0E00               	movlw	0
  8908  00281A  5ADD               	subwfb	postdec2,f,c
  8909  00281C  006F FF78  F045    	movff	postinc2,btemp+10
  8910  002822  006F FF74  F046    	movff	postdec2,btemp+11
  8911  002828  0060  F117  FFD9   	movff	btemp+10,fsr2l
  8912  00282E  0060  F11B  FFDA   	movff	btemp+11,fsr2h
  8913  002834  006F FF78  F043    	movff	postinc2,btemp+8
  8914  00283A  006F FF78  F044    	movff	postinc2,btemp+9
  8915  002840  006F FF78  F045    	movff	postinc2,btemp+10
  8916  002846  006F FF78  F046    	movff	postinc2,btemp+11
  8917  00284C  0060  F10C  F04B   	movff	btemp+8,btemp+16
  8918  002852  0060  F110  F04C   	movff	btemp+9,btemp+17
  8919  002858  0060  F114  F04D   	movff	btemp+10,btemp+18
  8920  00285E  0060  F118  F04E   	movff	btemp+11,btemp+19
  8921  002864  6A4F               	clrf	btemp+20,c
  8922  002866  BE4E               	btfsc	btemp+19,7,c
  8923  002868  684F               	setf	btemp+20,c
  8924  00286A  0060  F13C  F050   	movff	btemp+20,btemp+21
  8925  002870  0060  F13C  F051   	movff	btemp+20,btemp+22
  8926  002876  0060  F13C  F052   	movff	btemp+20,btemp+23
  8927                           
  8928                           ;stkvar	_ll @ sp[(-11)+0]
  8929  00287C  0EF5               	movlw	-11
  8930  00287E  0060  F12F  FFE3   	movff	btemp+16,plusw1
  8931  002884  0EF6               	movlw	-10
  8932  002886  0060  F133  FFE3   	movff	btemp+17,plusw1
  8933  00288C  0EF7               	movlw	-9
  8934  00288E  0060  F137  FFE3   	movff	btemp+18,plusw1
  8935  002894  0EF8               	movlw	-8
  8936  002896  0060  F13B  FFE3   	movff	btemp+19,plusw1
  8937  00289C  0EF9               	movlw	-7
  8938  00289E  0060  F13F  FFE3   	movff	btemp+20,plusw1
  8939  0028A4  0EFA               	movlw	-6
  8940  0028A6  0060  F143  FFE3   	movff	btemp+21,plusw1
  8941  0028AC  0EFB               	movlw	-5
  8942  0028AE  0060  F147  FFE3   	movff	btemp+22,plusw1
  8943  0028B4  0EFC               	movlw	-4
  8944  0028B6  0060  F14B  FFE3   	movff	btemp+23,plusw1
  8945  0028BC  D744               	goto	l7767
  8946  0028BE                     l7783:
  8947                           
  8948                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
  8949                           ;stkvar	_fmt @ sp[(-11)+-4]
  8950  0028BE  0EF1               	movlw	-15
  8951  0028C0  006F FF8F FFD9     	movff	plusw1,fsr2l
  8952  0028C6  0EF2               	movlw	-14
  8953  0028C8  006F FF8F FFDA     	movff	plusw1,fsr2h
  8954  0028CE  006F FF7F FFF6     	movff	indf2,tblptrl
  8955  0028D4                     	if	1	;There is more than 1 active tblptr byte
  8956  0028D4  0E20               	movlw	high __smallconst
  8957  0028D6  6EF7               	movwf	tblptrh,c
  8958  0028D8                     	endif
  8959  0028D8                     	if	0	;tblptru may be non-zero
  8960  0028D8                     	endif
  8961  0028D8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8962  0028D8  0E00               	movlw	low (__smallconst shr (0+16))
  8963  0028DA  6EF8               	movwf	tblptru,c
  8964  0028DC                     	endif
  8965  0028DC  0008               	tblrd		*
  8966  0028DE  50F5               	movf	tablat,w,c
  8967  0028E0  0A73               	xorlw	115
  8968  0028E2  A4D8               	btfss	status,2,c
  8969  0028E4  D040               	goto	l7793
  8970                           
  8971                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
  8972                           ;stkvar	_fmt @ sp[(-11)+-4]
  8973  0028E6  0EF1               	movlw	-15
  8974  0028E8  006F FF8F FFD9     	movff	plusw1,fsr2l
  8975  0028EE  0EF2               	movlw	-14
  8976  0028F0  006F FF8F FFDA     	movff	plusw1,fsr2h
  8977  0028F6  2ADF               	incf	indf2,f,c
  8978                           
  8979                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
  8980                           ;stkvar	_ap @ sp[(-11)+-6]
  8981  0028F8  0EEF               	movlw	-17
  8982  0028FA  006F FF8F FFD9     	movff	plusw1,fsr2l
  8983  002900  0EF0               	movlw	-16
  8984  002902  006F FF8F FFDA     	movff	plusw1,fsr2h
  8985  002908  0E02               	movlw	2
  8986  00290A  5EDE               	subwf	postinc2,f,c
  8987  00290C  0E00               	movlw	0
  8988  00290E  5ADD               	subwfb	postdec2,f,c
  8989  002910  006F FF78  F045    	movff	postinc2,btemp+10
  8990  002916  006F FF74  F046    	movff	postdec2,btemp+11
  8991  00291C  0060  F117  FFD9   	movff	btemp+10,fsr2l
  8992  002922  0060  F11B  FFDA   	movff	btemp+11,fsr2h
  8993  002928  006F FF78  F045    	movff	postinc2,btemp+10
  8994  00292E  006F FF74  F046    	movff	postdec2,btemp+11
  8995                           
  8996                           ;stkvar	_cp @ sp[(-11)+8]
  8997  002934  0EFE               	movlw	-2
  8998  002936  0060  F11B  FFE3   	movff	btemp+11,plusw1
  8999  00293C  0EFD               	movlw	-3
  9000  00293E  0060  F117  FFE3   	movff	btemp+10,plusw1
  9001                           
  9002                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
  9003                           ;stkvar	_cp @ sp[(-11)+8]
  9004  002944  0EFD               	movlw	-3
  9005  002946  006F FF8F FFE6     	movff	plusw1,postinc1
  9006  00294C  006F FF8F FFE6     	movff	plusw1,postinc1
  9007                           
  9008                           ;stkvar	_fp @ sp[(-13)+-2]
  9009  002952  0EF1               	movlw	-15
  9010  002954  006F FF8F FFE6     	movff	plusw1,postinc1
  9011  00295A  006F FF8F FFE6     	movff	plusw1,postinc1
  9012  002960  EC6E  F01C         	call	_stoa	;wreg free
  9013  002964  D061               	goto	l1839
  9014  002966                     l7793:
  9015                           
  9016                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
  9017                           ;stkvar	_fmt @ sp[(-11)+-4]
  9018  002966  0EF1               	movlw	-15
  9019  002968  006F FF8F FFD9     	movff	plusw1,fsr2l
  9020  00296E  0EF2               	movlw	-14
  9021  002970  006F FF8F FFDA     	movff	plusw1,fsr2h
  9022  002976  006F FF7F FFF6     	movff	indf2,tblptrl
  9023  00297C                     	if	1	;There is more than 1 active tblptr byte
  9024  00297C  0E20               	movlw	high __smallconst
  9025  00297E  6EF7               	movwf	tblptrh,c
  9026  002980                     	endif
  9027  002980                     	if	0	;tblptru may be non-zero
  9028  002980                     	endif
  9029  002980                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9030  002980  0E00               	movlw	low (__smallconst shr (0+16))
  9031  002982  6EF8               	movwf	tblptru,c
  9032  002984                     	endif
  9033  002984  0008               	tblrd		*
  9034  002986  50F5               	movf	tablat,w,c
  9035  002988  0A25               	xorlw	37
  9036  00298A  A4D8               	btfss	status,2,c
  9037  00298C  D018               	goto	l7803
  9038                           
  9039                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
  9040                           ;stkvar	_fmt @ sp[(-11)+-4]
  9041  00298E  0EF1               	movlw	-15
  9042  002990  006F FF8F FFD9     	movff	plusw1,fsr2l
  9043  002996  0EF2               	movlw	-14
  9044  002998  006F FF8F FFDA     	movff	plusw1,fsr2h
  9045  00299E  2ADF               	incf	indf2,f,c
  9046                           
  9047                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
  9048                           ;stkvar	_fp @ sp[(-11)+-2]
  9049  0029A0  0EF3               	movlw	-13
  9050  0029A2  006F FF8F FFE6     	movff	plusw1,postinc1
  9051  0029A8  006F FF8F FFE6     	movff	plusw1,postinc1
  9052  0029AE  0E25               	movlw	37
  9053  0029B0  6EE6               	movwf	postinc1,c
  9054  0029B2  0E00               	movlw	0
  9055  0029B4  6EE6               	movwf	postinc1,c
  9056  0029B6  EC0D  F025         	call	_fputc	;wreg free
  9057  0029BA                     l7799:
  9058                           
  9059                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1353:             return 1;
  9060  0029BA  0E01               	movlw	1
  9061  0029BC  D00A               	goto	L23
  9062  0029BE                     l7803:
  9063                           
  9064                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
  9065                           ;stkvar	_fmt @ sp[(-11)+-4]
  9066  0029BE  0EF1               	movlw	-15
  9067  0029C0  006F FF8F FFD9     	movff	plusw1,fsr2l
  9068  0029C6  0EF2               	movlw	-14
  9069  0029C8  006F FF8F FFDA     	movff	plusw1,fsr2h
  9070  0029CE  2ADF               	incf	indf2,f,c
  9071                           
  9072                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1358:         return 0;
  9073  0029D0  0E00               	movlw	0
  9074  0029D2                     L23:
  9075  0029D2  6E3B               	movwf	btemp,c
  9076  0029D4  0E00               	movlw	0
  9077  0029D6  6E3C               	movwf	btemp+1,c
  9078  0029D8  D027               	goto	l1839
  9079  0029DA                     l7809:
  9080                           
  9081                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
  9082                           ;stkvar	_fp @ sp[(-11)+-2]
  9083  0029DA  0EF3               	movlw	-13
  9084  0029DC  006F FF8F FFE6     	movff	plusw1,postinc1
  9085  0029E2  006F FF8F FFE6     	movff	plusw1,postinc1
  9086                           
  9087                           ;stkvar	_fmt @ sp[(-13)+-4]
  9088  0029E8  0EEF               	movlw	-17
  9089  0029EA  006F FF8F FFD9     	movff	plusw1,fsr2l
  9090  0029F0  0EF0               	movlw	-16
  9091  0029F2  006F FF8F FFDA     	movff	plusw1,fsr2h
  9092  0029F8  006F FF7F FFF6     	movff	indf2,tblptrl
  9093  0029FE                     	if	1	;There is more than 1 active tblptr byte
  9094  0029FE  0E20               	movlw	high __smallconst
  9095  002A00  6EF7               	movwf	tblptrh,c
  9096  002A02                     	endif
  9097  002A02                     	if	0	;tblptru may be non-zero
  9098  002A02                     	endif
  9099  002A02                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9100  002A02  0E00               	movlw	low (__smallconst shr (0+16))
  9101  002A04  6EF8               	movwf	tblptru,c
  9102  002A06                     	endif
  9103  002A06  0008               	tblrd		*
  9104  002A08  50F5               	movf	tablat,w,c
  9105  002A0A  6EE6               	movwf	postinc1,c
  9106  002A0C  0E00               	movlw	0
  9107  002A0E  6EE6               	movwf	postinc1,c
  9108  002A10  EC0D  F025         	call	_fputc	;wreg free
  9109                           
  9110                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
  9111                           ;stkvar	_fmt @ sp[(-11)+-4]
  9112  002A14  0EF1               	movlw	-15
  9113  002A16  006F FF8F FFD9     	movff	plusw1,fsr2l
  9114  002A1C  0EF2               	movlw	-14
  9115  002A1E  006F FF8F FFDA     	movff	plusw1,fsr2h
  9116  002A24  2ADF               	incf	indf2,f,c
  9117  002A26  D7C9               	goto	l7799
  9118  002A28                     l1839:
  9119                           
  9120                           ; _vfpfcnvrt: autosize = 11, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, ar
      +                          gsize = 6, vargsize = 0
  9121  002A28  0EEF               	movlw	239
  9122  002A2A  26E1               	addwf	fsr1l,f,c
  9123  002A2C  0EFF               	movlw	255
  9124  002A2E  22E2               	addwfc	fsr1h,f,c
  9125  002A30  0012               	return		;funcret
  9126  002A32                     __end_of_vfpfcnvrt:
  9127                           	opt callstack 0
  9128                           
  9129 ;; *************** function _strncmp *****************
  9130 ;; Defined at:
  9131 ;;		line 3 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/strncmp.c"
  9132 ;; Parameters:    Size  Location     Type
  9133 ;;  _l              1  [STACK] PTR const unsigned char 
  9134 ;;		 -> STR_18(3), STR_17(3), STR_16(3), STR_15(21), 
  9135 ;;		 -> STR_14(19), STR_13(6), STR_12(17), STR_11(19), 
  9136 ;;		 -> STR_10(19), STR_9(20), STR_8(6), STR_7(6), 
  9137 ;;		 -> STR_6(14), STR_5(19), STR_4(15), STR_2(12), 
  9138 ;;		 -> STR_1(17), 
  9139 ;;  _r              1  [STACK] PTR const unsigned char 
  9140 ;;		 -> STR_25(3), STR_21(3), 
  9141 ;;  n               2  [STACK] unsigned int 
  9142 ;; Auto vars:     Size  Location     Type
  9143 ;;  r               1  [STACK] PTR const unsigned char 
  9144 ;;		 -> STR_25(3), STR_21(3), 
  9145 ;;  l               1  [STACK] PTR const unsigned char 
  9146 ;;		 -> STR_18(3), STR_17(3), STR_16(3), STR_15(21), 
  9147 ;;		 -> STR_14(19), STR_13(6), STR_12(17), STR_11(19), 
  9148 ;;		 -> STR_10(19), STR_9(20), STR_8(6), STR_7(6), 
  9149 ;;		 -> STR_6(14), STR_5(19), STR_4(15), STR_2(12), 
  9150 ;;		 -> STR_1(17), 
  9151 ;; Return value:  Size  Location     Type
  9152 ;;                  2  [STACK] int 
  9153 ;; Registers used:
  9154 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11, tblptrl, tblptrh, tblptru, prodl
  9155 ;; Tracked objects:
  9156 ;;		On entry : 0/0
  9157 ;;		On exit  : 0/0
  9158 ;;		Unchanged: 0/0
  9159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9160 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9161 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9162 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9163 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9164 ;;Total ram usage:        0 bytes
  9165 ;; Hardware stack levels used:    1
  9166 ;; Hardware stack levels required when called:    3
  9167 ;; This function calls:
  9168 ;;		Nothing
  9169 ;; This function is called by:
  9170 ;;		_vfpfcnvrt
  9171 ;; This function uses a reentrant model
  9172 ;;
  9173                           
  9174                           	psect	text40
  9175  004776                     __ptext40:
  9176                           	opt callstack 0
  9177  004776                     _strncmp:
  9178                           	opt callstack 0
  9179                           
  9180                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9181  004776  52E6               	movf	postinc1,f,c
  9182  004778  52E6               	movf	postinc1,f,c
  9183                           
  9184                           ;stkvar	__l @ sp[(-2)+-1]
  9185                           
  9186                           ;incstack = 0
  9187  00477A  0EFD               	movlw	-3
  9188  00477C  006F FF8C  F046    	movff	plusw1,btemp+11
  9189                           
  9190                           ;stkvar	_l @ sp[(-2)+1]
  9191  004782  0EFF               	movlw	-1
  9192  004784  0060  F11B  FFE3   	movff	btemp+11,plusw1
  9193                           
  9194                           ;stkvar	__r @ sp[(-2)+-2]
  9195  00478A  0EFC               	movlw	-4
  9196  00478C  006F FF8C  F046    	movff	plusw1,btemp+11
  9197                           
  9198                           ;stkvar	_r @ sp[(-2)+0]
  9199  004792  0EFE               	movlw	-2
  9200  004794  0060  F11B  FFE3   	movff	btemp+11,plusw1
  9201                           
  9202                           ;stkvar	_n @ sp[(-2)+-4]
  9203  00479A  0EFA               	movlw	-6
  9204  00479C  006F FF8C  F03B    	movff	plusw1,btemp
  9205  0047A2  0E01               	movlw	1
  9206  0047A4  5E3B               	subwf	btemp,f,c
  9207  0047A6  0EFA               	movlw	-6
  9208  0047A8  0060  F0EF  FFE3   	movff	btemp,plusw1
  9209  0047AE  0EFB               	movlw	-5
  9210  0047B0  006F FF8C  F03B    	movff	plusw1,btemp
  9211  0047B6  0E00               	movlw	0
  9212  0047B8  5A3B               	subwfb	btemp,f,c
  9213  0047BA  0EFB               	movlw	-5
  9214  0047BC  0060  F0EF  FFE3   	movff	btemp,plusw1
  9215  0047C2  0EFA               	movlw	-6
  9216  0047C4  28E3               	incf	plusw1,w,c
  9217  0047C6  E121               	bnz	l5543
  9218  0047C8  0EFB               	movlw	-5
  9219  0047CA  28E3               	incf	plusw1,w,c
  9220  0047CC  A4D8               	btfss	status,2,c
  9221  0047CE  D01D               	goto	l5543
  9222  0047D0  0E00               	movlw	0
  9223  0047D2  6E3B               	movwf	btemp,c
  9224  0047D4  0E00               	movlw	0
  9225  0047D6  6E3C               	movwf	btemp+1,c
  9226  0047D8  D091               	goto	l2588
  9227  0047DA                     l5539:
  9228                           
  9229                           ;stkvar	_l @ sp[(-2)+1]
  9230  0047DA  0EFF               	movlw	-1
  9231  0047DC  2AE3               	incf	plusw1,f,c
  9232                           
  9233                           ;stkvar	_r @ sp[(-2)+0]
  9234  0047DE  0EFE               	movlw	-2
  9235  0047E0  2AE3               	incf	plusw1,f,c
  9236                           
  9237                           ;stkvar	_n @ sp[(-2)+-4]
  9238  0047E2  0EFA               	movlw	-6
  9239  0047E4  006F FF8C  F03B    	movff	plusw1,btemp
  9240  0047EA  0E01               	movlw	1
  9241  0047EC  5E3B               	subwf	btemp,f,c
  9242  0047EE  0EFA               	movlw	-6
  9243  0047F0  0060  F0EF  FFE3   	movff	btemp,plusw1
  9244  0047F6  0EFB               	movlw	-5
  9245  0047F8  006F FF8C  F03B    	movff	plusw1,btemp
  9246  0047FE  0E00               	movlw	0
  9247  004800  5A3B               	subwfb	btemp,f,c
  9248  004802  0EFB               	movlw	-5
  9249  004804  0060  F0EF  FFE3   	movff	btemp,plusw1
  9250  00480A                     l5543:
  9251                           
  9252                           ;stkvar	_l @ sp[(-2)+1]
  9253  00480A  50E1               	movf	fsr1l,w,c
  9254  00480C  0FFF               	addlw	-1
  9255  00480E  6ED9               	movwf	fsr2l,c
  9256  004810  50E2               	movf	fsr1h,w,c
  9257  004812  6EDA               	movwf	fsr2h,c
  9258  004814  0EFF               	movlw	255
  9259  004816  22DA               	addwfc	fsr2h,f,c
  9260  004818  006F FF7F FFF6     	movff	indf2,tblptrl
  9261  00481E                     	if	1	;There is more than 1 active tblptr byte
  9262  00481E  0E20               	movlw	high __smallconst
  9263  004820  6EF7               	movwf	tblptrh,c
  9264  004822                     	endif
  9265  004822                     	if	0	;tblptru may be non-zero
  9266  004822                     	endif
  9267  004822                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9268  004822  0E00               	movlw	low (__smallconst shr (0+16))
  9269  004824  6EF8               	movwf	tblptru,c
  9270  004826                     	endif
  9271  004826  0008               	tblrd		*
  9272  004828  50F5               	movf	tablat,w,c
  9273  00482A  0900               	iorlw	0
  9274  00482C  B4D8               	btfsc	status,2,c
  9275  00482E  D041               	goto	u2920
  9276                           
  9277                           ;stkvar	_r @ sp[(-2)+0]
  9278  004830  50E1               	movf	fsr1l,w,c
  9279  004832  0FFE               	addlw	-2
  9280  004834  6ED9               	movwf	fsr2l,c
  9281  004836  50E2               	movf	fsr1h,w,c
  9282  004838  6EDA               	movwf	fsr2h,c
  9283  00483A  0EFF               	movlw	255
  9284  00483C  22DA               	addwfc	fsr2h,f,c
  9285  00483E  006F FF7F FFF6     	movff	indf2,tblptrl
  9286  004844                     	if	1	;There is more than 1 active tblptr byte
  9287  004844  0E20               	movlw	high __smallconst
  9288  004846  6EF7               	movwf	tblptrh,c
  9289  004848                     	endif
  9290  004848                     	if	0	;tblptru may be non-zero
  9291  004848                     	endif
  9292  004848                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9293  004848  0E00               	movlw	low (__smallconst shr (0+16))
  9294  00484A  6EF8               	movwf	tblptru,c
  9295  00484C                     	endif
  9296  00484C  0008               	tblrd		*
  9297  00484E  50F5               	movf	tablat,w,c
  9298  004850  0900               	iorlw	0
  9299  004852  B4D8               	btfsc	status,2,c
  9300  004854  D02E               	goto	u2920
  9301                           
  9302                           ;stkvar	_n @ sp[(-2)+-4]
  9303  004856  0EFA               	movlw	-6
  9304  004858  006F FF8C  F03B    	movff	plusw1,btemp
  9305  00485E  0EFB               	movlw	-5
  9306  004860  50E3               	movf	plusw1,w,c
  9307  004862  103B               	iorwf	btemp,w,c
  9308  004864  B4D8               	btfsc	status,2,c
  9309  004866  D025               	goto	u2920
  9310                           
  9311                           ;stkvar	_l @ sp[(-2)+1]
  9312  004868  50E1               	movf	fsr1l,w,c
  9313  00486A  0FFF               	addlw	-1
  9314  00486C  6ED9               	movwf	fsr2l,c
  9315  00486E  50E2               	movf	fsr1h,w,c
  9316  004870  6EDA               	movwf	fsr2h,c
  9317  004872  0EFF               	movlw	255
  9318  004874  22DA               	addwfc	fsr2h,f,c
  9319  004876  006F FF7F FFF6     	movff	indf2,tblptrl
  9320  00487C                     	if	1	;There is more than 1 active tblptr byte
  9321  00487C  0E20               	movlw	high __smallconst
  9322  00487E  6EF7               	movwf	tblptrh,c
  9323  004880                     	endif
  9324  004880                     	if	0	;tblptru may be non-zero
  9325  004880                     	endif
  9326  004880                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9327  004880  0E00               	movlw	low (__smallconst shr (0+16))
  9328  004882  6EF8               	movwf	tblptru,c
  9329  004884                     	endif
  9330  004884  0008               	tblrd		*
  9331  004886  006F FFD4  F046    	movff	tablat,btemp+11
  9332                           
  9333                           ;stkvar	_r @ sp[(-2)+0]
  9334  00488C  50E1               	movf	fsr1l,w,c
  9335  00488E  0FFE               	addlw	-2
  9336  004890  6ED9               	movwf	fsr2l,c
  9337  004892  50E2               	movf	fsr1h,w,c
  9338  004894  6EDA               	movwf	fsr2h,c
  9339  004896  0EFF               	movlw	255
  9340  004898  22DA               	addwfc	fsr2h,f,c
  9341  00489A  006F FF7F FFF6     	movff	indf2,tblptrl
  9342  0048A0                     	if	1	;There is more than 1 active tblptr byte
  9343  0048A0  0E20               	movlw	high __smallconst
  9344  0048A2  6EF7               	movwf	tblptrh,c
  9345  0048A4                     	endif
  9346  0048A4                     	if	0	;tblptru may be non-zero
  9347  0048A4                     	endif
  9348  0048A4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9349  0048A4  0E00               	movlw	low (__smallconst shr (0+16))
  9350  0048A6  6EF8               	movwf	tblptru,c
  9351  0048A8                     	endif
  9352  0048A8  0008               	tblrd		*
  9353  0048AA  50F5               	movf	tablat,w,c
  9354  0048AC  1846               	xorwf	btemp+11,w,c
  9355  0048AE  B4D8               	btfsc	status,2,c
  9356  0048B0  D794               	goto	l5539
  9357  0048B2                     u2920:
  9358                           
  9359                           ;stkvar	_l @ sp[(-2)+1]
  9360  0048B2  50E1               	movf	fsr1l,w,c
  9361  0048B4  0FFF               	addlw	-1
  9362  0048B6  6ED9               	movwf	fsr2l,c
  9363  0048B8  50E2               	movf	fsr1h,w,c
  9364  0048BA  6EDA               	movwf	fsr2h,c
  9365  0048BC  0EFF               	movlw	255
  9366  0048BE  22DA               	addwfc	fsr2h,f,c
  9367  0048C0  006F FF7F FFF6     	movff	indf2,tblptrl
  9368  0048C6                     	if	1	;There is more than 1 active tblptr byte
  9369  0048C6  0E20               	movlw	high __smallconst
  9370  0048C8  6EF7               	movwf	tblptrh,c
  9371  0048CA                     	endif
  9372  0048CA                     	if	0	;tblptru may be non-zero
  9373  0048CA                     	endif
  9374  0048CA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9375  0048CA  0E00               	movlw	low (__smallconst shr (0+16))
  9376  0048CC  6EF8               	movwf	tblptru,c
  9377  0048CE                     	endif
  9378  0048CE  0008               	tblrd		*
  9379  0048D0  50F5               	movf	tablat,w,c
  9380  0048D2  6E3B               	movwf	btemp,c
  9381  0048D4  6A3C               	clrf	btemp+1,c
  9382                           
  9383                           ;stkvar	_r @ sp[(-2)+0]
  9384  0048D6  50E1               	movf	fsr1l,w,c
  9385  0048D8  0FFE               	addlw	-2
  9386  0048DA  6ED9               	movwf	fsr2l,c
  9387  0048DC  50E2               	movf	fsr1h,w,c
  9388  0048DE  6EDA               	movwf	fsr2h,c
  9389  0048E0  0EFF               	movlw	255
  9390  0048E2  22DA               	addwfc	fsr2h,f,c
  9391  0048E4  006F FF7F FFF6     	movff	indf2,tblptrl
  9392  0048EA                     	if	1	;There is more than 1 active tblptr byte
  9393  0048EA  0E20               	movlw	high __smallconst
  9394  0048EC  6EF7               	movwf	tblptrh,c
  9395  0048EE                     	endif
  9396  0048EE                     	if	0	;tblptru may be non-zero
  9397  0048EE                     	endif
  9398  0048EE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9399  0048EE  0E00               	movlw	low (__smallconst shr (0+16))
  9400  0048F0  6EF8               	movwf	tblptru,c
  9401  0048F2                     	endif
  9402  0048F2  0008               	tblrd		*
  9403  0048F4  50F5               	movf	tablat,w,c
  9404  0048F6  5E3B               	subwf	btemp,f,c
  9405  0048F8  0E00               	movlw	0
  9406  0048FA  5A3C               	subwfb	btemp+1,f,c
  9407  0048FC                     l2588:
  9408                           
  9409                           ; _strncmp: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
  9410  0048FC  0EFA               	movlw	250
  9411  0048FE  26E1               	addwf	fsr1l,f,c
  9412  004900  0EFF               	movlw	255
  9413  004902  22E2               	addwfc	fsr1h,f,c
  9414  004904  0012               	return		;funcret
  9415  004906                     __end_of_strncmp:
  9416                           	opt callstack 0
  9417                           
  9418 ;; *************** function _stoa *****************
  9419 ;; Defined at:
  9420 ;;		line 546 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  9421 ;; Parameters:    Size  Location     Type
  9422 ;;  fp              2  [STACK] PTR struct _IO_FILE
  9423 ;;		 -> f(5), NULL(0), 
  9424 ;;  s               2  [STACK] PTR unsigned char 
  9425 ;;		 -> ?_printf(2), ?_sprintf(2), STR_3(6), V(89), 
  9426 ;; Auto vars:     Size  Location     Type
  9427 ;;  nuls            7  [STACK] unsigned char [7]
  9428 ;;  l               2  [STACK] int 
  9429 ;;  p               2  [STACK] int 
  9430 ;;  cp              2  [STACK] PTR unsigned char 
  9431 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), STR_3(6), 
  9432 ;;		 -> V(89), 
  9433 ;;  w               2  [STACK] int 
  9434 ;;  i               2  [STACK] int 
  9435 ;; Return value:  Size  Location     Type
  9436 ;;                  2  [STACK] int 
  9437 ;; Registers used:
  9438 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
  9439 ;; Tracked objects:
  9440 ;;		On entry : 0/0
  9441 ;;		On exit  : 0/0
  9442 ;;		Unchanged: 0/0
  9443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9444 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9445 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9447 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9448 ;;Total ram usage:        0 bytes
  9449 ;; Hardware stack levels used:    1
  9450 ;; Hardware stack levels required when called:    6
  9451 ;; This function calls:
  9452 ;;		_fputc
  9453 ;;		_strlen
  9454 ;; This function is called by:
  9455 ;;		_vfpfcnvrt
  9456 ;; This function uses a reentrant model
  9457 ;;
  9458                           
  9459                           	psect	text41
  9460  0038DC                     __ptext41:
  9461                           	opt callstack 0
  9462  0038DC                     _stoa:
  9463                           	opt callstack 0
  9464                           
  9465                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  9466  0038DC  0E11               	movlw	17
  9467  0038DE  26E1               	addwf	fsr1l,f,c
  9468  0038E0  0E00               	movlw	0
  9469  0038E2  22E2               	addwfc	fsr1h,f,c
  9470                           
  9471                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
  9472                           
  9473                           ;incstack = 0
  9474  0038E4  EE20  F060         	lfsr	2,stoa@F1144
  9475                           
  9476                           ;stkvar	_nuls @ sp[(-17)+0]
  9477  0038E8  0E07               	movlw	7
  9478  0038EA  6E3B               	movwf	btemp,c
  9479  0038EC  0EEF               	movlw	-17
  9480  0038EE                     us462999:
  9481  0038EE  006F FF7B FFE3     	movff	postinc2,plusw1
  9482  0038F4  28E8               	incf	wreg,w,c
  9483  0038F6  2E3B               	decfsz	btemp,f,c
  9484  0038F8  D7FA               	bra	us462999
  9485                           
  9486                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 552:     cp = s;
  9487                           ;stkvar	_s @ sp[(-17)+-4]
  9488  0038FA  0EEB               	movlw	-21
  9489  0038FC  006F FF8C  F045    	movff	plusw1,btemp+10
  9490  003902  0EEC               	movlw	-20
  9491  003904  006F FF8C  F046    	movff	plusw1,btemp+11
  9492                           
  9493                           ;stkvar	_cp @ sp[(-17)+11]
  9494  00390A  0EFB               	movlw	-5
  9495  00390C  0060  F11B  FFE3   	movff	btemp+11,plusw1
  9496  003912  0EFA               	movlw	-6
  9497  003914  0060  F117  FFE3   	movff	btemp+10,plusw1
  9498                           
  9499                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
  9500                           ;stkvar	_cp @ sp[(-17)+11]
  9501  00391A  0EFA               	movlw	-6
  9502  00391C  006F FF8C  F03B    	movff	plusw1,btemp
  9503  003922  0EFB               	movlw	-5
  9504  003924  50E3               	movf	plusw1,w,c
  9505  003926  103B               	iorwf	btemp,w,c
  9506  003928  A4D8               	btfss	status,2,c
  9507  00392A  D00E               	goto	l7697
  9508                           
  9509                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
  9510                           ;stkvar	_nuls @ sp[(-17)+0]
  9511  00392C  0EEF               	movlw	239
  9512  00392E  24E1               	addwf	fsr1l,w,c
  9513  003930  6E45               	movwf	btemp+10,c
  9514  003932  0EFF               	movlw	255
  9515  003934  20E2               	addwfc	fsr1h,w,c
  9516  003936  6E46               	movwf	btemp+11,c
  9517                           
  9518                           ;stkvar	_cp @ sp[(-17)+11]
  9519  003938  0EFB               	movlw	-5
  9520  00393A  0060  F11B  FFE3   	movff	btemp+11,plusw1
  9521  003940  0EFA               	movlw	-6
  9522  003942  0060  F117  FFE3   	movff	btemp+10,plusw1
  9523  003948                     l7697:
  9524                           
  9525                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
  9526                           ;stkvar	_cp @ sp[(-17)+11]
  9527  003948  0EFA               	movlw	-6
  9528  00394A  006F FF8F FFE6     	movff	plusw1,postinc1
  9529  003950  006F FF8F FFE6     	movff	plusw1,postinc1
  9530  003956  ECEA  F027         	call	_strlen	;wreg free
  9531                           
  9532                           ;stkvar	_l @ sp[(-17)+7]
  9533  00395A  0EF6               	movlw	-10
  9534  00395C  0060  F0EF  FFE3   	movff	btemp,plusw1
  9535  003962  0EF7               	movlw	-9
  9536  003964  0060  F0F3  FFE3   	movff	btemp+1,plusw1
  9537                           
  9538                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 559:     p = prec;
  9539                           ;stkvar	_p @ sp[(-17)+9]
  9540  00396A  0EF8               	movlw	-8
  9541  00396C  0060  F08B  FFE3   	movff	_prec,plusw1
  9542  003972  0EF9               	movlw	-7
  9543  003974  0060  F08F  FFE3   	movff	_prec+1,plusw1
  9544                           
  9545                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
  9546                           ;stkvar	_p @ sp[(-17)+9]
  9547  00397A  0EF9               	movlw	-7
  9548  00397C  BEE3               	btfsc	plusw1,7,c
  9549  00397E  D023               	goto	l1820
  9550                           
  9551                           ;stkvar	_l @ sp[(-17)+7]
  9552                           ;stkvar	_p @ sp[(-17)+9]
  9553  003980  50E1               	movf	fsr1l,w,c
  9554  003982  0FF8               	addlw	-8
  9555  003984  6ED9               	movwf	fsr2l,c
  9556  003986  50E2               	movf	fsr1h,w,c
  9557  003988  6EDA               	movwf	fsr2h,c
  9558  00398A  0EFF               	movlw	255
  9559  00398C  22DA               	addwfc	fsr2h,f,c
  9560  00398E  0EF6               	movlw	-10
  9561  003990  50E3               	movf	plusw1,w,c
  9562  003992  5CDE               	subwf	postinc2,w,c
  9563  003994  50DE               	movf	postinc2,w,c
  9564  003996  0A80               	xorlw	128
  9565  003998  6E3B               	movwf	btemp,c
  9566  00399A  0EF7               	movlw	-9
  9567  00399C  50E3               	movf	plusw1,w,c
  9568  00399E  0A80               	xorlw	128
  9569  0039A0  583B               	subwfb	btemp,w,c
  9570  0039A2  B0D8               	btfsc	status,0,c
  9571  0039A4  D010               	goto	l1820
  9572                           
  9573                           ;stkvar	_p @ sp[(-17)+9]
  9574                           ;stkvar	_l @ sp[(-17)+7]
  9575  0039A6  0EF8               	movlw	-8
  9576  0039A8  006F FF8C  F03B    	movff	plusw1,btemp
  9577  0039AE  0EF6               	movlw	-10
  9578  0039B0  0060  F0EF  FFE3   	movff	btemp,plusw1
  9579  0039B6  0EF9               	movlw	-7
  9580  0039B8  006F FF8C  F03B    	movff	plusw1,btemp
  9581  0039BE  0EF7               	movlw	-9
  9582  0039C0  0060  F0EF  FFE3   	movff	btemp,plusw1
  9583  0039C6                     l1820:
  9584                           
  9585                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 561:     p = l;
  9586                           ;stkvar	_l @ sp[(-17)+7]
  9587                           ;stkvar	_p @ sp[(-17)+9]
  9588  0039C6  0EF6               	movlw	-10
  9589  0039C8  006F FF8C  F03B    	movff	plusw1,btemp
  9590  0039CE  0EF8               	movlw	-8
  9591  0039D0  0060  F0EF  FFE3   	movff	btemp,plusw1
  9592  0039D6  0EF7               	movlw	-9
  9593  0039D8  006F FF8C  F03B    	movff	plusw1,btemp
  9594  0039DE  0EF9               	movlw	-7
  9595  0039E0  0060  F0EF  FFE3   	movff	btemp,plusw1
  9596                           
  9597                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 562:     w = width;
  9598                           ;stkvar	_w @ sp[(-17)+13]
  9599  0039E6  0EFC               	movlw	-4
  9600  0039E8  0060  F083  FFE3   	movff	_width,plusw1
  9601  0039EE  0EFD               	movlw	-3
  9602  0039F0  0060  F087  FFE3   	movff	_width+1,plusw1
  9603                           
  9604                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
  9605  0039F6  A024               	btfss	_flags,0,c
  9606  0039F8  D01F               	goto	l7717
  9607  0039FA  D031               	goto	u4670
  9608  0039FC                     l7713:
  9609                           
  9610                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
  9611                           ;stkvar	_fp @ sp[(-17)+-2]
  9612  0039FC  0EED               	movlw	-19
  9613  0039FE  006F FF8F FFE6     	movff	plusw1,postinc1
  9614  003A04  006F FF8F FFE6     	movff	plusw1,postinc1
  9615  003A0A  0E20               	movlw	32
  9616  003A0C  6EE6               	movwf	postinc1,c
  9617  003A0E  0E00               	movlw	0
  9618  003A10  6EE6               	movwf	postinc1,c
  9619  003A12  EC0D  F025         	call	_fputc	;wreg free
  9620                           
  9621                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 568:             ++l;
  9622                           ;stkvar	_l @ sp[(-17)+7]
  9623  003A16  0EF6               	movlw	-10
  9624  003A18  50E3               	movf	plusw1,w,c
  9625  003A1A  0F01               	addlw	1
  9626  003A1C  6E3B               	movwf	btemp,c
  9627  003A1E  0EF6               	movlw	-10
  9628  003A20  0060  F0EF  FFE3   	movff	btemp,plusw1
  9629  003A26  6A3B               	clrf	btemp,c
  9630  003A28  0EF7               	movlw	-9
  9631  003A2A  50E3               	movf	plusw1,w,c
  9632  003A2C  203B               	addwfc	btemp,w,c
  9633  003A2E  6E3B               	movwf	btemp,c
  9634  003A30  0EF7               	movlw	-9
  9635  003A32  0060  F0EF  FFE3   	movff	btemp,plusw1
  9636  003A38                     l7717:
  9637                           
  9638                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
  9639                           ;stkvar	_w @ sp[(-17)+13]
  9640                           ;stkvar	_l @ sp[(-17)+7]
  9641  003A38  50E1               	movf	fsr1l,w,c
  9642  003A3A  0FF6               	addlw	-10
  9643  003A3C  6ED9               	movwf	fsr2l,c
  9644  003A3E  50E2               	movf	fsr1h,w,c
  9645  003A40  6EDA               	movwf	fsr2h,c
  9646  003A42  0EFF               	movlw	255
  9647  003A44  22DA               	addwfc	fsr2h,f,c
  9648  003A46  0EFC               	movlw	-4
  9649  003A48  50E3               	movf	plusw1,w,c
  9650  003A4A  5CDE               	subwf	postinc2,w,c
  9651  003A4C  50DE               	movf	postinc2,w,c
  9652  003A4E  0A80               	xorlw	128
  9653  003A50  6E3B               	movwf	btemp,c
  9654  003A52  0EFD               	movlw	-3
  9655  003A54  50E3               	movf	plusw1,w,c
  9656  003A56  0A80               	xorlw	128
  9657  003A58  583B               	subwfb	btemp,w,c
  9658  003A5A  A0D8               	btfss	status,0,c
  9659  003A5C  D7CF               	goto	l7713
  9660  003A5E                     u4670:
  9661                           
  9662                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 573:     i = 0;
  9663                           ;stkvar	_i @ sp[(-17)+15]
  9664  003A5E  0EFE               	movlw	-2
  9665  003A60  6AE3               	clrf	plusw1,c
  9666  003A62  0EFF               	movlw	-1
  9667  003A64  6AE3               	clrf	plusw1,c
  9668                           
  9669                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
  9670  003A66  D045               	goto	l7727
  9671  003A68                     l7721:
  9672                           
  9673                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
  9674                           ;stkvar	_fp @ sp[(-17)+-2]
  9675  003A68  0EED               	movlw	-19
  9676  003A6A  006F FF8F FFE6     	movff	plusw1,postinc1
  9677  003A70  006F FF8F FFE6     	movff	plusw1,postinc1
  9678                           
  9679                           ;stkvar	_cp @ sp[(-19)+11]
  9680  003A76  0EF8               	movlw	-8
  9681  003A78  006F FF8F FFF6     	movff	plusw1,tblptrl
  9682  003A7E  0EF9               	movlw	-7
  9683  003A80  006F FF8F FFF7     	movff	plusw1,tblptrh
  9684  003A86  0E00               	movlw	low (__smallconst shr (0+16))
  9685  003A88  6EF8               	movwf	tblptru,c
  9686  003A8A  0E1F               	movlw	(high __ramtop+-1)
  9687  003A8C  64F7               	cpfsgt	tblptrh,c
  9688  003A8E  D003               	bra	u4687
  9689  003A90  0008               	tblrd		*
  9690  003A92  50F5               	movf	tablat,w,c
  9691  003A94  D007               	bra	u4680
  9692  003A96                     u4687:
  9693  003A96  006F FFDB FFE9     	movff	tblptrl,fsr0l
  9694  003A9C  006F FFDF FFEA     	movff	tblptrh,fsr0h
  9695  003AA2  50EF               	movf	indf0,w,c
  9696  003AA4                     u4680:
  9697  003AA4  6EE6               	movwf	postinc1,c
  9698  003AA6  0E00               	movlw	0
  9699  003AA8  6EE6               	movwf	postinc1,c
  9700  003AAA  EC0D  F025         	call	_fputc	;wreg free
  9701                           
  9702                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 576:         ++cp;
  9703                           ;stkvar	_cp @ sp[(-17)+11]
  9704  003AAE  0EFA               	movlw	-6
  9705  003AB0  50E3               	movf	plusw1,w,c
  9706  003AB2  0F01               	addlw	1
  9707  003AB4  6E3B               	movwf	btemp,c
  9708  003AB6  0EFA               	movlw	-6
  9709  003AB8  0060  F0EF  FFE3   	movff	btemp,plusw1
  9710  003ABE  6A3B               	clrf	btemp,c
  9711  003AC0  0EFB               	movlw	-5
  9712  003AC2  50E3               	movf	plusw1,w,c
  9713  003AC4  203B               	addwfc	btemp,w,c
  9714  003AC6  6E3B               	movwf	btemp,c
  9715  003AC8  0EFB               	movlw	-5
  9716  003ACA  0060  F0EF  FFE3   	movff	btemp,plusw1
  9717                           
  9718                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 577:         ++i;
  9719                           ;stkvar	_i @ sp[(-17)+15]
  9720  003AD0  0EFE               	movlw	-2
  9721  003AD2  50E3               	movf	plusw1,w,c
  9722  003AD4  0F01               	addlw	1
  9723  003AD6  6E3B               	movwf	btemp,c
  9724  003AD8  0EFE               	movlw	-2
  9725  003ADA  0060  F0EF  FFE3   	movff	btemp,plusw1
  9726  003AE0  6A3B               	clrf	btemp,c
  9727  003AE2  0EFF               	movlw	-1
  9728  003AE4  50E3               	movf	plusw1,w,c
  9729  003AE6  203B               	addwfc	btemp,w,c
  9730  003AE8  6E3B               	movwf	btemp,c
  9731  003AEA  0EFF               	movlw	-1
  9732  003AEC  0060  F0EF  FFE3   	movff	btemp,plusw1
  9733  003AF2                     l7727:
  9734                           
  9735                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
  9736                           ;stkvar	_p @ sp[(-17)+9]
  9737                           ;stkvar	_i @ sp[(-17)+15]
  9738  003AF2  50E1               	movf	fsr1l,w,c
  9739  003AF4  0FFE               	addlw	-2
  9740  003AF6  6ED9               	movwf	fsr2l,c
  9741  003AF8  50E2               	movf	fsr1h,w,c
  9742  003AFA  6EDA               	movwf	fsr2h,c
  9743  003AFC  0EFF               	movlw	255
  9744  003AFE  22DA               	addwfc	fsr2h,f,c
  9745  003B00  0EF8               	movlw	-8
  9746  003B02  50E3               	movf	plusw1,w,c
  9747  003B04  5CDE               	subwf	postinc2,w,c
  9748  003B06  50DE               	movf	postinc2,w,c
  9749  003B08  0A80               	xorlw	128
  9750  003B0A  6E3B               	movwf	btemp,c
  9751  003B0C  0EF9               	movlw	-7
  9752  003B0E  50E3               	movf	plusw1,w,c
  9753  003B10  0A80               	xorlw	128
  9754  003B12  583B               	subwfb	btemp,w,c
  9755  003B14  A0D8               	btfss	status,0,c
  9756  003B16  D7A8               	goto	l7721
  9757                           
  9758                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
  9759  003B18  B024               	btfsc	_flags,0,c
  9760  003B1A  D01F               	goto	l7735
  9761  003B1C  D031               	goto	u4710
  9762  003B1E                     l7731:
  9763                           
  9764                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
  9765                           ;stkvar	_fp @ sp[(-17)+-2]
  9766  003B1E  0EED               	movlw	-19
  9767  003B20  006F FF8F FFE6     	movff	plusw1,postinc1
  9768  003B26  006F FF8F FFE6     	movff	plusw1,postinc1
  9769  003B2C  0E20               	movlw	32
  9770  003B2E  6EE6               	movwf	postinc1,c
  9771  003B30  0E00               	movlw	0
  9772  003B32  6EE6               	movwf	postinc1,c
  9773  003B34  EC0D  F025         	call	_fputc	;wreg free
  9774                           
  9775                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 584:             ++l;
  9776                           ;stkvar	_l @ sp[(-17)+7]
  9777  003B38  0EF6               	movlw	-10
  9778  003B3A  50E3               	movf	plusw1,w,c
  9779  003B3C  0F01               	addlw	1
  9780  003B3E  6E3B               	movwf	btemp,c
  9781  003B40  0EF6               	movlw	-10
  9782  003B42  0060  F0EF  FFE3   	movff	btemp,plusw1
  9783  003B48  6A3B               	clrf	btemp,c
  9784  003B4A  0EF7               	movlw	-9
  9785  003B4C  50E3               	movf	plusw1,w,c
  9786  003B4E  203B               	addwfc	btemp,w,c
  9787  003B50  6E3B               	movwf	btemp,c
  9788  003B52  0EF7               	movlw	-9
  9789  003B54  0060  F0EF  FFE3   	movff	btemp,plusw1
  9790  003B5A                     l7735:
  9791                           
  9792                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
  9793                           ;stkvar	_w @ sp[(-17)+13]
  9794                           ;stkvar	_l @ sp[(-17)+7]
  9795  003B5A  50E1               	movf	fsr1l,w,c
  9796  003B5C  0FF6               	addlw	-10
  9797  003B5E  6ED9               	movwf	fsr2l,c
  9798  003B60  50E2               	movf	fsr1h,w,c
  9799  003B62  6EDA               	movwf	fsr2h,c
  9800  003B64  0EFF               	movlw	255
  9801  003B66  22DA               	addwfc	fsr2h,f,c
  9802  003B68  0EFC               	movlw	-4
  9803  003B6A  50E3               	movf	plusw1,w,c
  9804  003B6C  5CDE               	subwf	postinc2,w,c
  9805  003B6E  50DE               	movf	postinc2,w,c
  9806  003B70  0A80               	xorlw	128
  9807  003B72  6E3B               	movwf	btemp,c
  9808  003B74  0EFD               	movlw	-3
  9809  003B76  50E3               	movf	plusw1,w,c
  9810  003B78  0A80               	xorlw	128
  9811  003B7A  583B               	subwfb	btemp,w,c
  9812  003B7C  A0D8               	btfss	status,0,c
  9813  003B7E  D7CF               	goto	l7731
  9814  003B80                     u4710:
  9815                           
  9816                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 588:     return l;
  9817                           ;stkvar	_l @ sp[(-17)+7]
  9818  003B80  0EF6               	movlw	-10
  9819  003B82  006F FF8C  F03B    	movff	plusw1,btemp
  9820  003B88  0EF7               	movlw	-9
  9821  003B8A  006F FF8C  F03C    	movff	plusw1,btemp+1
  9822                           
  9823                           ; _stoa: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
  9824  003B90  0EEB               	movlw	235
  9825  003B92  26E1               	addwf	fsr1l,f,c
  9826  003B94  0EFF               	movlw	255
  9827  003B96  22E2               	addwfc	fsr1h,f,c
  9828  003B98  0012               	return		;funcret
  9829  003B9A                     __end_of_stoa:
  9830                           	opt callstack 0
  9831                           
  9832 ;; *************** function _dtoa *****************
  9833 ;; Defined at:
  9834 ;;		line 274 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  9835 ;; Parameters:    Size  Location     Type
  9836 ;;  fp              2  [STACK] PTR struct _IO_FILE
  9837 ;;		 -> f(5), NULL(0), 
  9838 ;;  d               8  [STACK] long long 
  9839 ;; Auto vars:     Size  Location     Type
  9840 ;;  n               8  [STACK] long long 
  9841 ;;  i               2  [STACK] int 
  9842 ;;  s               2  [STACK] int 
  9843 ;;  w               2  [STACK] int 
  9844 ;;  p               2  [STACK] int 
  9845 ;; Return value:  Size  Location     Type
  9846 ;;                  2  [STACK] int 
  9847 ;; Registers used:
  9848 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  9849 ;; Tracked objects:
  9850 ;;		On entry : 0/0
  9851 ;;		On exit  : 0/0
  9852 ;;		Unchanged: 0/0
  9853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9854 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9855 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9856 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9857 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9858 ;;Total ram usage:        0 bytes
  9859 ;; Hardware stack levels used:    1
  9860 ;; Hardware stack levels required when called:    8
  9861 ;; This function calls:
  9862 ;;		___aodiv
  9863 ;;		___aomod
  9864 ;;		_abs
  9865 ;;		_pad
  9866 ;; This function is called by:
  9867 ;;		_vfpfcnvrt
  9868 ;; This function uses a reentrant model
  9869 ;;
  9870                           
  9871                           	psect	text42
  9872  002A32                     __ptext42:
  9873                           	opt callstack 0
  9874  002A32                     _dtoa:
  9875                           	opt callstack 0
  9876                           
  9877                           ; autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
  9878  002A32  0E12               	movlw	18
  9879  002A34  26E1               	addwf	fsr1l,f,c
  9880  002A36  0E00               	movlw	0
  9881  002A38  22E2               	addwfc	fsr1h,f,c
  9882                           
  9883                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.05/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .05/pic/sources/c99/common/doprnt.c: 280:     n = d;
  9884                           ;stkvar	_d @ sp[(-18)+-10]
  9885                           
  9886                           ;incstack = 0
  9887  002A3A  0EE4               	movlw	228
  9888  002A3C  24E1               	addwf	fsr1l,w,c
  9889  002A3E  6ED9               	movwf	fsr2l,c
  9890  002A40  0EFF               	movlw	255
  9891  002A42  20E2               	addwfc	fsr1h,w,c
  9892  002A44  6EDA               	movwf	fsr2h,c
  9893                           
  9894                           ;stkvar	_n @ sp[(-18)+2]
  9895  002A46  0E08               	movlw	8
  9896  002A48  6E3B               	movwf	btemp,c
  9897  002A4A  0EF0               	movlw	-16
  9898  002A4C                     us445999:
  9899  002A4C  006F FF7B FFE3     	movff	postinc2,plusw1
  9900  002A52  28E8               	incf	wreg,w,c
  9901  002A54  2E3B               	decfsz	btemp,f,c
  9902  002A56  D7FA               	bra	us445999
  9903                           
  9904                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
  9905                           ;stkvar	_n @ sp[(-18)+2]
  9906  002A58  0EF7               	movlw	-9
  9907  002A5A  AEE3               	btfss	plusw1,7,c
  9908  002A5C  D002               	goto	u4460
  9909  002A5E  0E01               	movlw	1
  9910  002A60  D001               	goto	u4470
  9911  002A62                     u4460:
  9912  002A62  0E00               	movlw	0
  9913  002A64                     u4470:
  9914  002A64  6E45               	movwf	btemp+10,c
  9915  002A66  6A46               	clrf	btemp+11,c
  9916                           
  9917                           ;stkvar	_s @ sp[(-18)+12]
  9918  002A68  0EFA               	movlw	-6
  9919  002A6A  0060  F117  FFE3   	movff	btemp+10,plusw1
  9920  002A70  0EFB               	movlw	-5
  9921  002A72  0060  F11B  FFE3   	movff	btemp+11,plusw1
  9922                           
  9923                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 282:     if (s) {
  9924                           ;stkvar	_s @ sp[(-18)+12]
  9925  002A78  0EFA               	movlw	-6
  9926  002A7A  006F FF8C  F03B    	movff	plusw1,btemp
  9927  002A80  0EFB               	movlw	-5
  9928  002A82  50E3               	movf	plusw1,w,c
  9929  002A84  103B               	iorwf	btemp,w,c
  9930  002A86  B4D8               	btfsc	status,2,c
  9931  002A88  D025               	goto	u4490
  9932                           
  9933                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 283:         n = -n;
  9934                           ;stkvar	_n @ sp[(-18)+2]
  9935                           ;stkvar	_n @ sp[(-18)+2]
  9936  002A8A  0EF0               	movlw	-16
  9937  002A8C  6CE3               	negf	plusw1,c
  9938  002A8E  0EF1               	movlw	-15
  9939  002A90  1EE3               	comf	plusw1,f,c
  9940  002A92  0EF2               	movlw	-14
  9941  002A94  1EE3               	comf	plusw1,f,c
  9942  002A96  0EF3               	movlw	-13
  9943  002A98  1EE3               	comf	plusw1,f,c
  9944  002A9A  0EF4               	movlw	-12
  9945  002A9C  1EE3               	comf	plusw1,f,c
  9946  002A9E  0EF5               	movlw	-11
  9947  002AA0  1EE3               	comf	plusw1,f,c
  9948  002AA2  0EF6               	movlw	-10
  9949  002AA4  1EE3               	comf	plusw1,f,c
  9950  002AA6  0EF7               	movlw	-9
  9951  002AA8  1EE3               	comf	plusw1,f,c
  9952  002AAA  E314               	bnc	u4490
  9953  002AAC  0EF1               	movlw	-15
  9954  002AAE  2AE3               	incf	plusw1,f,c
  9955  002AB0  E311               	bnc	u4490
  9956  002AB2  0EF2               	movlw	-14
  9957  002AB4  2AE3               	incf	plusw1,f,c
  9958  002AB6  E30E               	bnc	u4490
  9959  002AB8  0EF3               	movlw	-13
  9960  002ABA  2AE3               	incf	plusw1,f,c
  9961  002ABC  E30B               	bnc	u4490
  9962  002ABE  0EF4               	movlw	-12
  9963  002AC0  2AE3               	incf	plusw1,f,c
  9964  002AC2  E308               	bnc	u4490
  9965  002AC4  0EF5               	movlw	-11
  9966  002AC6  2AE3               	incf	plusw1,f,c
  9967  002AC8  E305               	bnc	u4490
  9968  002ACA  0EF6               	movlw	-10
  9969  002ACC  2AE3               	incf	plusw1,f,c
  9970  002ACE  E302               	bnc	u4490
  9971  002AD0  0EF7               	movlw	-9
  9972  002AD2  2AE3               	incf	plusw1,f,c
  9973  002AD4                     u4490:
  9974                           
  9975                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
  9976  002AD4  AE23               	btfss	_prec+1,7,c
  9977                           
  9978                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
  9979  002AD6  9224               	bcf	_flags,1,c
  9980                           
  9981                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
  9982  002AD8  BE23               	btfsc	_prec+1,7,c
  9983  002ADA  D005               	goto	u4510
  9984  002ADC  5023               	movf	_prec+1,w,c
  9985  002ADE  E110               	bnz	l7639
  9986  002AE0  0422               	decf	_prec,w,c
  9987  002AE2  B0D8               	btfsc	status,0,c
  9988  002AE4  D00D               	goto	l7639
  9989  002AE6                     u4510:
  9990  002AE6  0E01               	movlw	1
  9991  002AE8  6E45               	movwf	btemp+10,c
  9992  002AEA  0E00               	movlw	0
  9993  002AEC  6E46               	movwf	btemp+11,c
  9994                           
  9995                           ;stkvar	_p @ sp[(-18)+16]
  9996  002AEE  0EFE               	movlw	-2
  9997  002AF0  0060  F117  FFE3   	movff	btemp+10,plusw1
  9998  002AF6  0EFF               	movlw	-1
  9999  002AF8  0060  F11B  FFE3   	movff	btemp+11,plusw1
 10000  002AFE  D008               	goto	l1793
 10001  002B00                     l7639:
 10002                           
 10003                           ;stkvar	_p @ sp[(-18)+16]
 10004  002B00  0EFE               	movlw	-2
 10005  002B02  0060  F08B  FFE3   	movff	_prec,plusw1
 10006  002B08  0EFF               	movlw	-1
 10007  002B0A  0060  F08F  FFE3   	movff	_prec+1,plusw1
 10008  002B10                     l1793:
 10009                           
 10010                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 291:     w = width;
 10011                           ;stkvar	_w @ sp[(-18)+14]
 10012  002B10  0EFC               	movlw	-4
 10013  002B12  0060  F083  FFE3   	movff	_width,plusw1
 10014  002B18  0EFD               	movlw	-3
 10015  002B1A  0060  F087  FFE3   	movff	_width+1,plusw1
 10016                           
 10017                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
 10018                           ;stkvar	_s @ sp[(-18)+12]
 10019  002B20  0EFA               	movlw	-6
 10020  002B22  006F FF8C  F03B    	movff	plusw1,btemp
 10021  002B28  0EFB               	movlw	-5
 10022  002B2A  50E3               	movf	plusw1,w,c
 10023  002B2C  103B               	iorwf	btemp,w,c
 10024  002B2E  A4D8               	btfss	status,2,c
 10025  002B30  D002               	goto	u4530
 10026  002B32  A424               	btfss	_flags,2,c
 10027  002B34  D00A               	goto	l7647
 10028  002B36                     u4530:
 10029                           
 10030                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 293:         --w;
 10031                           ;stkvar	_w @ sp[(-18)+14]
 10032  002B36  50E1               	movf	fsr1l,w,c
 10033  002B38  0FFC               	addlw	-4
 10034  002B3A  6ED9               	movwf	fsr2l,c
 10035  002B3C  50E2               	movf	fsr1h,w,c
 10036  002B3E  6EDA               	movwf	fsr2h,c
 10037  002B40  0EFF               	movlw	255
 10038  002B42  22DA               	addwfc	fsr2h,f,c
 10039  002B44  06DE               	decf	postinc2,f,c
 10040  002B46  0E00               	movlw	0
 10041  002B48  5ADD               	subwfb	postdec2,f,c
 10042  002B4A                     l7647:
 10043                           
 10044                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
 10045  002B4A  0E1F               	movlw	31
 10046  002B4C  6E45               	movwf	btemp+10,c
 10047  002B4E  0E00               	movlw	0
 10048  002B50  6E46               	movwf	btemp+11,c
 10049                           
 10050                           ;stkvar	_i @ sp[(-18)+10]
 10051  002B52  0EF8               	movlw	-8
 10052  002B54  0060  F117  FFE3   	movff	btemp+10,plusw1
 10053  002B5A  0EF9               	movlw	-7
 10054  002B5C  0060  F11B  FFE3   	movff	btemp+11,plusw1
 10055                           
 10056                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
 10057  002B62  0101               	movlb	1	; () banked
 10058  002B64  6BCE               	clrf	(_dbuf+31)& (0+255),b
 10059                           
 10060                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 10061  002B66  D109               	goto	l7661
 10062  002B68                     l7651:
 10063                           
 10064                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 300:         --i;
 10065                           ;stkvar	_i @ sp[(-18)+10]
 10066  002B68  50E1               	movf	fsr1l,w,c
 10067  002B6A  0FF8               	addlw	-8
 10068  002B6C  6ED9               	movwf	fsr2l,c
 10069  002B6E  50E2               	movf	fsr1h,w,c
 10070  002B70  6EDA               	movwf	fsr2h,c
 10071  002B72  0EFF               	movlw	255
 10072  002B74  22DA               	addwfc	fsr2h,f,c
 10073  002B76  06DE               	decf	postinc2,f,c
 10074  002B78  0E00               	movlw	0
 10075  002B7A  5ADD               	subwfb	postdec2,f,c
 10076                           
 10077                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
 10078  002B7C  0E0A               	movlw	10
 10079  002B7E  6EE6               	movwf	postinc1,c
 10080  002B80  0E00               	movlw	0
 10081  002B82  6EE6               	movwf	postinc1,c
 10082  002B84  0E00               	movlw	0
 10083  002B86  6EE6               	movwf	postinc1,c
 10084  002B88  0E00               	movlw	0
 10085  002B8A  6EE6               	movwf	postinc1,c
 10086  002B8C  0E00               	movlw	0
 10087  002B8E  6EE6               	movwf	postinc1,c
 10088  002B90  0E00               	movlw	0
 10089  002B92  6EE6               	movwf	postinc1,c
 10090  002B94  0E00               	movlw	0
 10091  002B96  6EE6               	movwf	postinc1,c
 10092  002B98  0E00               	movlw	0
 10093  002B9A  6EE6               	movwf	postinc1,c
 10094                           
 10095                           ;stkvar	_n @ sp[(-26)+2]
 10096  002B9C  50E1               	movf	fsr1l,w,c
 10097  002B9E  0FE8               	addlw	-24
 10098  002BA0  6ED9               	movwf	fsr2l,c
 10099  002BA2  50E2               	movf	fsr1h,w,c
 10100  002BA4  6EDA               	movwf	fsr2h,c
 10101  002BA6  0EFF               	movlw	255
 10102  002BA8  22DA               	addwfc	fsr2h,f,c
 10103  002BAA  006F FF7B FFE6     	movff	postinc2,postinc1
 10104  002BB0  006F FF7B FFE6     	movff	postinc2,postinc1
 10105  002BB6  006F FF7B FFE6     	movff	postinc2,postinc1
 10106  002BBC  006F FF7B FFE6     	movff	postinc2,postinc1
 10107  002BC2  006F FF7B FFE6     	movff	postinc2,postinc1
 10108  002BC8  006F FF7B FFE6     	movff	postinc2,postinc1
 10109  002BCE  006F FF7B FFE6     	movff	postinc2,postinc1
 10110  002BD4  006F FF7B FFE6     	movff	postinc2,postinc1
 10111  002BDA  EC9B  F022         	call	___aomod	;wreg free
 10112  002BDE  52E5               	movf	postdec1,f,c
 10113  002BE0  006F FF9C  F052    	movff	indf1,btemp+23
 10114  002BE6  52E5               	movf	postdec1,f,c
 10115  002BE8  006F FF9C  F051    	movff	indf1,btemp+22
 10116  002BEE  52E5               	movf	postdec1,f,c
 10117  002BF0  006F FF9C  F050    	movff	indf1,btemp+21
 10118  002BF6  52E5               	movf	postdec1,f,c
 10119  002BF8  006F FF9C  F04F    	movff	indf1,btemp+20
 10120  002BFE  52E5               	movf	postdec1,f,c
 10121  002C00  006F FF9C  F04E    	movff	indf1,btemp+19
 10122  002C06  52E5               	movf	postdec1,f,c
 10123  002C08  006F FF9C  F04D    	movff	indf1,btemp+18
 10124  002C0E  52E5               	movf	postdec1,f,c
 10125  002C10  006F FF9C  F04C    	movff	indf1,btemp+17
 10126  002C16  52E5               	movf	postdec1,f,c
 10127  002C18  006F FF9C  F04B    	movff	indf1,btemp+16
 10128  002C1E  0EF8               	movlw	248
 10129  002C20  26E1               	addwf	fsr1l,f,c
 10130  002C22  0EFF               	movlw	255
 10131  002C24  22E2               	addwfc	fsr1h,f,c
 10132  002C26  0060  F12C  F045   	movff	btemp+16,btemp+10
 10133  002C2C  0060  F130  F046   	movff	btemp+17,btemp+11
 10134  002C32  0060  F117  FFE6   	movff	btemp+10,postinc1
 10135  002C38  0060  F11B  FFE6   	movff	btemp+11,postinc1
 10136  002C3E  ECC8  F02B         	call	_abs	;wreg free
 10137  002C42  0E30               	movlw	48
 10138  002C44  263B               	addwf	btemp,f,c
 10139                           
 10140                           ;stkvar	_i @ sp[(-18)+10]
 10141  002C46  0EF8               	movlw	-8
 10142  002C48  006F FF8C  F045    	movff	plusw1,btemp+10
 10143  002C4E  0EF9               	movlw	-7
 10144  002C50  006F FF8C  F046    	movff	plusw1,btemp+11
 10145  002C56  0EAF               	movlw	low _dbuf
 10146  002C58  2445               	addwf	btemp+10,w,c
 10147  002C5A  6ED9               	movwf	fsr2l,c
 10148  002C5C  0E01               	movlw	high _dbuf
 10149  002C5E  2046               	addwfc	btemp+11,w,c
 10150  002C60  6EDA               	movwf	fsr2h,c
 10151  002C62  0060  F0EF  FFDF   	movff	btemp,indf2
 10152                           
 10153                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 302:         --p;
 10154                           ;stkvar	_p @ sp[(-18)+16]
 10155  002C68  50E1               	movf	fsr1l,w,c
 10156  002C6A  0FFE               	addlw	-2
 10157  002C6C  6ED9               	movwf	fsr2l,c
 10158  002C6E  50E2               	movf	fsr1h,w,c
 10159  002C70  6EDA               	movwf	fsr2h,c
 10160  002C72  0EFF               	movlw	255
 10161  002C74  22DA               	addwfc	fsr2h,f,c
 10162  002C76  06DE               	decf	postinc2,f,c
 10163  002C78  0E00               	movlw	0
 10164  002C7A  5ADD               	subwfb	postdec2,f,c
 10165                           
 10166                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 303:         --w;
 10167                           ;stkvar	_w @ sp[(-18)+14]
 10168  002C7C  50E1               	movf	fsr1l,w,c
 10169  002C7E  0FFC               	addlw	-4
 10170  002C80  6ED9               	movwf	fsr2l,c
 10171  002C82  50E2               	movf	fsr1h,w,c
 10172  002C84  6EDA               	movwf	fsr2h,c
 10173  002C86  0EFF               	movlw	255
 10174  002C88  22DA               	addwfc	fsr2h,f,c
 10175  002C8A  06DE               	decf	postinc2,f,c
 10176  002C8C  0E00               	movlw	0
 10177  002C8E  5ADD               	subwfb	postdec2,f,c
 10178                           
 10179                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
 10180  002C90  0E0A               	movlw	10
 10181  002C92  6EE6               	movwf	postinc1,c
 10182  002C94  0E00               	movlw	0
 10183  002C96  6EE6               	movwf	postinc1,c
 10184  002C98  0E00               	movlw	0
 10185  002C9A  6EE6               	movwf	postinc1,c
 10186  002C9C  0E00               	movlw	0
 10187  002C9E  6EE6               	movwf	postinc1,c
 10188  002CA0  0E00               	movlw	0
 10189  002CA2  6EE6               	movwf	postinc1,c
 10190  002CA4  0E00               	movlw	0
 10191  002CA6  6EE6               	movwf	postinc1,c
 10192  002CA8  0E00               	movlw	0
 10193  002CAA  6EE6               	movwf	postinc1,c
 10194  002CAC  0E00               	movlw	0
 10195  002CAE  6EE6               	movwf	postinc1,c
 10196                           
 10197                           ;stkvar	_n @ sp[(-26)+2]
 10198  002CB0  50E1               	movf	fsr1l,w,c
 10199  002CB2  0FE8               	addlw	-24
 10200  002CB4  6ED9               	movwf	fsr2l,c
 10201  002CB6  50E2               	movf	fsr1h,w,c
 10202  002CB8  6EDA               	movwf	fsr2h,c
 10203  002CBA  0EFF               	movlw	255
 10204  002CBC  22DA               	addwfc	fsr2h,f,c
 10205  002CBE  006F FF7B FFE6     	movff	postinc2,postinc1
 10206  002CC4  006F FF7B FFE6     	movff	postinc2,postinc1
 10207  002CCA  006F FF7B FFE6     	movff	postinc2,postinc1
 10208  002CD0  006F FF7B FFE6     	movff	postinc2,postinc1
 10209  002CD6  006F FF7B FFE6     	movff	postinc2,postinc1
 10210  002CDC  006F FF7B FFE6     	movff	postinc2,postinc1
 10211  002CE2  006F FF7B FFE6     	movff	postinc2,postinc1
 10212  002CE8  006F FF7B FFE6     	movff	postinc2,postinc1
 10213  002CEE  ECCD  F01D         	call	___aodiv	;wreg free
 10214  002CF2  52E5               	movf	postdec1,f,c
 10215  002CF4  006F FF9C  F052    	movff	indf1,btemp+23
 10216  002CFA  52E5               	movf	postdec1,f,c
 10217  002CFC  006F FF9C  F051    	movff	indf1,btemp+22
 10218  002D02  52E5               	movf	postdec1,f,c
 10219  002D04  006F FF9C  F050    	movff	indf1,btemp+21
 10220  002D0A  52E5               	movf	postdec1,f,c
 10221  002D0C  006F FF9C  F04F    	movff	indf1,btemp+20
 10222  002D12  52E5               	movf	postdec1,f,c
 10223  002D14  006F FF9C  F04E    	movff	indf1,btemp+19
 10224  002D1A  52E5               	movf	postdec1,f,c
 10225  002D1C  006F FF9C  F04D    	movff	indf1,btemp+18
 10226  002D22  52E5               	movf	postdec1,f,c
 10227  002D24  006F FF9C  F04C    	movff	indf1,btemp+17
 10228  002D2A  52E5               	movf	postdec1,f,c
 10229  002D2C  006F FF9C  F04B    	movff	indf1,btemp+16
 10230  002D32  0EF8               	movlw	248
 10231  002D34  26E1               	addwf	fsr1l,f,c
 10232  002D36  0EFF               	movlw	255
 10233  002D38  22E2               	addwfc	fsr1h,f,c
 10234                           
 10235                           ;stkvar	_n @ sp[(-18)+2]
 10236  002D3A  0EF0               	movlw	-16
 10237  002D3C  0060  F12F  FFE3   	movff	btemp+16,plusw1
 10238  002D42  0EF1               	movlw	-15
 10239  002D44  0060  F133  FFE3   	movff	btemp+17,plusw1
 10240  002D4A  0EF2               	movlw	-14
 10241  002D4C  0060  F137  FFE3   	movff	btemp+18,plusw1
 10242  002D52  0EF3               	movlw	-13
 10243  002D54  0060  F13B  FFE3   	movff	btemp+19,plusw1
 10244  002D5A  0EF4               	movlw	-12
 10245  002D5C  0060  F13F  FFE3   	movff	btemp+20,plusw1
 10246  002D62  0EF5               	movlw	-11
 10247  002D64  0060  F143  FFE3   	movff	btemp+21,plusw1
 10248  002D6A  0EF6               	movlw	-10
 10249  002D6C  0060  F147  FFE3   	movff	btemp+22,plusw1
 10250  002D72  0EF7               	movlw	-9
 10251  002D74  0060  F14B  FFE3   	movff	btemp+23,plusw1
 10252  002D7A                     l7661:
 10253                           
 10254                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 10255                           ;stkvar	_i @ sp[(-18)+10]
 10256  002D7A  0EF9               	movlw	-7
 10257  002D7C  BEE3               	btfsc	plusw1,7,c
 10258  002D7E  D036               	goto	u4580
 10259  002D80  0EF9               	movlw	-7
 10260  002D82  50E3               	movf	plusw1,w,c
 10261  002D84  E104               	bnz	u4540
 10262  002D86  0EF8               	movlw	-8
 10263  002D88  04E3               	decf	plusw1,w,c
 10264  002D8A  A0D8               	btfss	status,0,c
 10265  002D8C  D02F               	goto	u4580
 10266  002D8E                     u4540:
 10267                           
 10268                           ;stkvar	_n @ sp[(-18)+2]
 10269  002D8E  0EF0               	movlw	-16
 10270  002D90  50E3               	movf	plusw1,w,c
 10271  002D92  E115               	bnz	u4551
 10272  002D94  0EF1               	movlw	-15
 10273  002D96  50E3               	movf	plusw1,w,c
 10274  002D98  E112               	bnz	u4551
 10275  002D9A  0EF2               	movlw	-14
 10276  002D9C  50E3               	movf	plusw1,w,c
 10277  002D9E  E10F               	bnz	u4551
 10278  002DA0  0EF3               	movlw	-13
 10279  002DA2  50E3               	movf	plusw1,w,c
 10280  002DA4  E10C               	bnz	u4551
 10281  002DA6  0EF4               	movlw	-12
 10282  002DA8  50E3               	movf	plusw1,w,c
 10283  002DAA  E109               	bnz	u4551
 10284  002DAC  0EF5               	movlw	-11
 10285  002DAE  50E3               	movf	plusw1,w,c
 10286  002DB0  E106               	bnz	u4551
 10287  002DB2  0EF6               	movlw	-10
 10288  002DB4  50E3               	movf	plusw1,w,c
 10289  002DB6  E103               	bnz	u4551
 10290  002DB8  0EF7               	movlw	-9
 10291  002DBA  50E3               	movf	plusw1,w,c
 10292  002DBC  A4D8               	btfss	status,2,c
 10293  002DBE                     u4551:
 10294  002DBE  D6D4               	goto	l7651
 10295                           
 10296                           ;stkvar	_p @ sp[(-18)+16]
 10297  002DC0  0EFF               	movlw	-1
 10298  002DC2  BEE3               	btfsc	plusw1,7,c
 10299  002DC4  D007               	goto	u4560
 10300  002DC6  0EFF               	movlw	-1
 10301  002DC8  50E3               	movf	plusw1,w,c
 10302  002DCA  E103               	bnz	u4561
 10303  002DCC  0EFE               	movlw	-2
 10304  002DCE  04E3               	decf	plusw1,w,c
 10305  002DD0  B0D8               	btfsc	status,0,c
 10306  002DD2                     u4561:
 10307  002DD2  D6CA               	goto	l7651
 10308  002DD4                     u4560:
 10309                           
 10310                           ;stkvar	_w @ sp[(-18)+14]
 10311  002DD4  0EFD               	movlw	-3
 10312  002DD6  BEE3               	btfsc	plusw1,7,c
 10313  002DD8  D009               	goto	u4580
 10314  002DDA  0EFD               	movlw	-3
 10315  002DDC  50E3               	movf	plusw1,w,c
 10316  002DDE  E104               	bnz	u4570
 10317  002DE0  0EFC               	movlw	-4
 10318  002DE2  04E3               	decf	plusw1,w,c
 10319  002DE4  A0D8               	btfss	status,0,c
 10320  002DE6  D002               	goto	u4580
 10321  002DE8                     u4570:
 10322  002DE8  B224               	btfsc	_flags,1,c
 10323  002DEA  D6BE               	goto	l7651
 10324  002DEC                     u4580:
 10325                           
 10326                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
 10327                           ;stkvar	_s @ sp[(-18)+12]
 10328  002DEC  0EFA               	movlw	-6
 10329  002DEE  006F FF8C  F03B    	movff	plusw1,btemp
 10330  002DF4  0EFB               	movlw	-5
 10331  002DF6  50E3               	movf	plusw1,w,c
 10332  002DF8  103B               	iorwf	btemp,w,c
 10333  002DFA  A4D8               	btfss	status,2,c
 10334  002DFC  D002               	goto	u4600
 10335  002DFE  A424               	btfss	_flags,2,c
 10336  002E00  D033               	goto	l7685
 10337  002E02                     u4600:
 10338                           
 10339                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 309:         --i;
 10340                           ;stkvar	_i @ sp[(-18)+10]
 10341  002E02  50E1               	movf	fsr1l,w,c
 10342  002E04  0FF8               	addlw	-8
 10343  002E06  6ED9               	movwf	fsr2l,c
 10344  002E08  50E2               	movf	fsr1h,w,c
 10345  002E0A  6EDA               	movwf	fsr2h,c
 10346  002E0C  0EFF               	movlw	255
 10347  002E0E  22DA               	addwfc	fsr2h,f,c
 10348  002E10  06DE               	decf	postinc2,f,c
 10349  002E12  0E00               	movlw	0
 10350  002E14  5ADD               	subwfb	postdec2,f,c
 10351                           
 10352                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
 10353                           ;stkvar	_s @ sp[(-18)+12]
 10354  002E16  0EFA               	movlw	-6
 10355  002E18  006F FF8C  F03B    	movff	plusw1,btemp
 10356  002E1E  0EFB               	movlw	-5
 10357  002E20  50E3               	movf	plusw1,w,c
 10358  002E22  103B               	iorwf	btemp,w,c
 10359  002E24  A4D8               	btfss	status,2,c
 10360  002E26  D002               	goto	l7681
 10361  002E28  0E2B               	movlw	43
 10362  002E2A  D001               	goto	L24
 10363  002E2C                     l7681:
 10364  002E2C  0E2D               	movlw	45
 10365  002E2E                     L24:
 10366  002E2E  6E45               	movwf	btemp+10,c
 10367  002E30  0E00               	movlw	0
 10368  002E32  6E46               	movwf	btemp+11,c
 10369                           
 10370                           ;stkvar	_dtoa$3806 @ sp[(-18)+0]
 10371  002E34  0EEE               	movlw	-18
 10372  002E36  0060  F117  FFE3   	movff	btemp+10,plusw1
 10373  002E3C  0EEF               	movlw	-17
 10374  002E3E  0060  F11B  FFE3   	movff	btemp+11,plusw1
 10375                           
 10376                           ;stkvar	_dtoa$3806 @ sp[(-18)+0]
 10377                           ;stkvar	_i @ sp[(-18)+10]
 10378  002E44  0EF8               	movlw	-8
 10379  002E46  006F FF8C  F045    	movff	plusw1,btemp+10
 10380  002E4C  0EF9               	movlw	-7
 10381  002E4E  006F FF8C  F046    	movff	plusw1,btemp+11
 10382  002E54  0EAF               	movlw	low _dbuf
 10383  002E56  2445               	addwf	btemp+10,w,c
 10384  002E58  6ED9               	movwf	fsr2l,c
 10385  002E5A  0E01               	movlw	high _dbuf
 10386  002E5C  2046               	addwfc	btemp+11,w,c
 10387  002E5E  6EDA               	movwf	fsr2h,c
 10388  002E60  0EEE               	movlw	-18
 10389  002E62  006F FF8F FFDF     	movff	plusw1,indf2
 10390  002E68                     l7685:
 10391                           
 10392                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
 10393                           ;stkvar	_w @ sp[(-18)+14]
 10394  002E68  0EFC               	movlw	-4
 10395  002E6A  006F FF8F FFE6     	movff	plusw1,postinc1
 10396  002E70  006F FF8F FFE6     	movff	plusw1,postinc1
 10397                           
 10398                           ;stkvar	_i @ sp[(-20)+10]
 10399  002E76  0EAF               	movlw	low _dbuf
 10400  002E78  6E45               	movwf	btemp+10,c
 10401  002E7A  0E01               	movlw	high _dbuf
 10402  002E7C  6E46               	movwf	btemp+11,c
 10403  002E7E  0EF6               	movlw	-10
 10404  002E80  50E3               	movf	plusw1,w,c
 10405  002E82  2645               	addwf	btemp+10,f,c
 10406  002E84  0EF7               	movlw	-9
 10407  002E86  50E3               	movf	plusw1,w,c
 10408  002E88  2246               	addwfc	btemp+11,f,c
 10409  002E8A  0060  F117  FFE6   	movff	btemp+10,postinc1
 10410  002E90  0060  F11B  FFE6   	movff	btemp+11,postinc1
 10411                           
 10412                           ;stkvar	_fp @ sp[(-22)+-2]
 10413  002E96  0EE8               	movlw	-24
 10414  002E98  006F FF8F FFE6     	movff	plusw1,postinc1
 10415  002E9E  006F FF8F FFE6     	movff	plusw1,postinc1
 10416  002EA4  EC83  F024         	call	_pad	;wreg free
 10417                           
 10418                           ; _dtoa: autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 10419  002EA8  0EE4               	movlw	228
 10420  002EAA  26E1               	addwf	fsr1l,f,c
 10421  002EAC  0EFF               	movlw	255
 10422  002EAE  22E2               	addwfc	fsr1h,f,c
 10423  002EB0  0012               	return		;funcret
 10424  002EB2                     __end_of_dtoa:
 10425                           	opt callstack 0
 10426                           
 10427 ;; *************** function _abs *****************
 10428 ;; Defined at:
 10429 ;;		line 1 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/abs.c"
 10430 ;; Parameters:    Size  Location     Type
 10431 ;;  a               2  [STACK] int 
 10432 ;; Auto vars:     Size  Location     Type
 10433 ;;		None
 10434 ;; Return value:  Size  Location     Type
 10435 ;;                  2  [STACK] int 
 10436 ;; Registers used:
 10437 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
 10438 ;; Tracked objects:
 10439 ;;		On entry : 0/1
 10440 ;;		On exit  : 0/0
 10441 ;;		Unchanged: 0/0
 10442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10443 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10444 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10445 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10446 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10447 ;;Total ram usage:        0 bytes
 10448 ;; Hardware stack levels used:    1
 10449 ;; Hardware stack levels required when called:    3
 10450 ;; This function calls:
 10451 ;;		Nothing
 10452 ;; This function is called by:
 10453 ;;		_dtoa
 10454 ;; This function uses a reentrant model
 10455 ;;
 10456                           
 10457                           	psect	text43
 10458  005790                     __ptext43:
 10459                           	opt callstack 0
 10460  005790                     _abs:
 10461                           	opt callstack 23
 10462                           
 10463                           ;stkvar	_a @ sp[(0)+-2]
 10464                           
 10465                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10466                           ;incstack = 0
 10467  005790  0EFF               	movlw	-1
 10468  005792  BEE3               	btfsc	plusw1,7,c
 10469  005794  D007               	goto	u2360
 10470  005796  0EFF               	movlw	-1
 10471  005798  50E3               	movf	plusw1,w,c
 10472  00579A  E112               	bnz	l5315
 10473  00579C  0EFE               	movlw	-2
 10474  00579E  04E3               	decf	plusw1,w,c
 10475  0057A0  B0D8               	btfsc	status,0,c
 10476  0057A2  D00E               	goto	l5315
 10477  0057A4                     u2360:
 10478                           
 10479                           ;stkvar	_a @ sp[(0)+-2]
 10480  0057A4  0EFE               	movlw	-2
 10481  0057A6  006F FF8C  F03B    	movff	plusw1,btemp
 10482  0057AC  1E3B               	comf	btemp,f,c
 10483  0057AE  0EFF               	movlw	-1
 10484  0057B0  006F FF8C  F03C    	movff	plusw1,btemp+1
 10485  0057B6  1E3C               	comf	btemp+1,f,c
 10486  0057B8  2A3B               	incf	btemp,f,c
 10487  0057BA  B4D8               	btfsc	status,2,c
 10488  0057BC  2A3C               	incf	btemp+1,f,c
 10489  0057BE  D008               	goto	l2534
 10490  0057C0                     l5315:
 10491                           
 10492                           ;stkvar	_a @ sp[(0)+-2]
 10493  0057C0  0EFE               	movlw	-2
 10494  0057C2  006F FF8C  F03B    	movff	plusw1,btemp
 10495  0057C8  0EFF               	movlw	-1
 10496  0057CA  006F FF8C  F03C    	movff	plusw1,btemp+1
 10497  0057D0                     l2534:
 10498                           
 10499                           ; _abs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize =
      +                           2, vargsize = 0
 10500  0057D0  52E5               	movf	postdec1,f,c
 10501  0057D2  52E5               	movf	postdec1,f,c
 10502  0057D4  0012               	return		;funcret
 10503  0057D6                     __end_of_abs:
 10504                           	opt callstack 0
 10505                           
 10506 ;; *************** function ___aomod *****************
 10507 ;; Defined at:
 10508 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/aomod.c"
 10509 ;; Parameters:    Size  Location     Type
 10510 ;;  dividend        8  [STACK] long long 
 10511 ;;  divisor         8  [STACK] long long 
 10512 ;; Auto vars:     Size  Location     Type
 10513 ;;  sign            1  [STACK] unsigned char 
 10514 ;;  counter         1  [STACK] unsigned char 
 10515 ;; Return value:  Size  Location     Type
 10516 ;;                  8  [STACK] long long 
 10517 ;; Registers used:
 10518 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 10519 ;; Tracked objects:
 10520 ;;		On entry : 0/1
 10521 ;;		On exit  : 0/0
 10522 ;;		Unchanged: 0/0
 10523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10524 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10525 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10526 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10527 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10528 ;;Total ram usage:        0 bytes
 10529 ;; Hardware stack levels used:    1
 10530 ;; Hardware stack levels required when called:    3
 10531 ;; This function calls:
 10532 ;;		Nothing
 10533 ;; This function is called by:
 10534 ;;		_dtoa
 10535 ;; This function uses a reentrant model
 10536 ;;
 10537                           
 10538                           	psect	text44
 10539  004536                     __ptext44:
 10540                           	opt callstack 0
 10541  004536                     ___aomod:
 10542                           	opt callstack 0
 10543                           
 10544                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 10545  004536  52E6               	movf	postinc1,f,c
 10546  004538  52E6               	movf	postinc1,f,c
 10547                           
 10548                           ;stkvar	_sign @ sp[(-2)+0]
 10549                           
 10550                           ;incstack = 0
 10551  00453A  0EFE               	movlw	-2
 10552  00453C  6AE3               	clrf	plusw1,c
 10553                           
 10554                           ;stkvar	_dividend @ sp[(-2)+-8]
 10555  00453E  0EFD               	movlw	-3
 10556  004540  AEE3               	btfss	plusw1,7,c
 10557  004542  D028               	goto	l5371
 10558                           
 10559                           ;stkvar	_dividend @ sp[(-2)+-8]
 10560                           ;stkvar	_dividend @ sp[(-2)+-8]
 10561  004544  0EF6               	movlw	-10
 10562  004546  6CE3               	negf	plusw1,c
 10563  004548  0EF7               	movlw	-9
 10564  00454A  1EE3               	comf	plusw1,f,c
 10565  00454C  0EF8               	movlw	-8
 10566  00454E  1EE3               	comf	plusw1,f,c
 10567  004550  0EF9               	movlw	-7
 10568  004552  1EE3               	comf	plusw1,f,c
 10569  004554  0EFA               	movlw	-6
 10570  004556  1EE3               	comf	plusw1,f,c
 10571  004558  0EFB               	movlw	-5
 10572  00455A  1EE3               	comf	plusw1,f,c
 10573  00455C  0EFC               	movlw	-4
 10574  00455E  1EE3               	comf	plusw1,f,c
 10575  004560  0EFD               	movlw	-3
 10576  004562  1EE3               	comf	plusw1,f,c
 10577  004564  E314               	bnc	u2500
 10578  004566  0EF7               	movlw	-9
 10579  004568  2AE3               	incf	plusw1,f,c
 10580  00456A  E311               	bnc	u2500
 10581  00456C  0EF8               	movlw	-8
 10582  00456E  2AE3               	incf	plusw1,f,c
 10583  004570  E30E               	bnc	u2500
 10584  004572  0EF9               	movlw	-7
 10585  004574  2AE3               	incf	plusw1,f,c
 10586  004576  E30B               	bnc	u2500
 10587  004578  0EFA               	movlw	-6
 10588  00457A  2AE3               	incf	plusw1,f,c
 10589  00457C  E308               	bnc	u2500
 10590  00457E  0EFB               	movlw	-5
 10591  004580  2AE3               	incf	plusw1,f,c
 10592  004582  E305               	bnc	u2500
 10593  004584  0EFC               	movlw	-4
 10594  004586  2AE3               	incf	plusw1,f,c
 10595  004588  E302               	bnc	u2500
 10596  00458A  0EFD               	movlw	-3
 10597  00458C  2AE3               	incf	plusw1,f,c
 10598  00458E                     u2500:
 10599                           
 10600                           ;stkvar	_sign @ sp[(-2)+0]
 10601  00458E  0EFE               	movlw	-2
 10602  004590  6AE3               	clrf	plusw1,c
 10603  004592  2AE3               	incf	plusw1,f,c
 10604  004594                     l5371:
 10605                           
 10606                           ;stkvar	_divisor @ sp[(-2)+-16]
 10607  004594  0EF5               	movlw	-11
 10608  004596  AEE3               	btfss	plusw1,7,c
 10609  004598  D025               	goto	u2520
 10610                           
 10611                           ;stkvar	_divisor @ sp[(-2)+-16]
 10612                           ;stkvar	_divisor @ sp[(-2)+-16]
 10613  00459A  0EEE               	movlw	-18
 10614  00459C  6CE3               	negf	plusw1,c
 10615  00459E  0EEF               	movlw	-17
 10616  0045A0  1EE3               	comf	plusw1,f,c
 10617  0045A2  0EF0               	movlw	-16
 10618  0045A4  1EE3               	comf	plusw1,f,c
 10619  0045A6  0EF1               	movlw	-15
 10620  0045A8  1EE3               	comf	plusw1,f,c
 10621  0045AA  0EF2               	movlw	-14
 10622  0045AC  1EE3               	comf	plusw1,f,c
 10623  0045AE  0EF3               	movlw	-13
 10624  0045B0  1EE3               	comf	plusw1,f,c
 10625  0045B2  0EF4               	movlw	-12
 10626  0045B4  1EE3               	comf	plusw1,f,c
 10627  0045B6  0EF5               	movlw	-11
 10628  0045B8  1EE3               	comf	plusw1,f,c
 10629  0045BA  E314               	bnc	u2520
 10630  0045BC  0EEF               	movlw	-17
 10631  0045BE  2AE3               	incf	plusw1,f,c
 10632  0045C0  E311               	bnc	u2520
 10633  0045C2  0EF0               	movlw	-16
 10634  0045C4  2AE3               	incf	plusw1,f,c
 10635  0045C6  E30E               	bnc	u2520
 10636  0045C8  0EF1               	movlw	-15
 10637  0045CA  2AE3               	incf	plusw1,f,c
 10638  0045CC  E30B               	bnc	u2520
 10639  0045CE  0EF2               	movlw	-14
 10640  0045D0  2AE3               	incf	plusw1,f,c
 10641  0045D2  E308               	bnc	u2520
 10642  0045D4  0EF3               	movlw	-13
 10643  0045D6  2AE3               	incf	plusw1,f,c
 10644  0045D8  E305               	bnc	u2520
 10645  0045DA  0EF4               	movlw	-12
 10646  0045DC  2AE3               	incf	plusw1,f,c
 10647  0045DE  E302               	bnc	u2520
 10648  0045E0  0EF5               	movlw	-11
 10649  0045E2  2AE3               	incf	plusw1,f,c
 10650  0045E4                     u2520:
 10651                           
 10652                           ;stkvar	_divisor @ sp[(-2)+-16]
 10653  0045E4  0EEE               	movlw	-18
 10654  0045E6  50E3               	movf	plusw1,w,c
 10655  0045E8  E116               	bnz	u2530
 10656  0045EA  0EEF               	movlw	-17
 10657  0045EC  50E3               	movf	plusw1,w,c
 10658  0045EE  E113               	bnz	u2530
 10659  0045F0  0EF0               	movlw	-16
 10660  0045F2  50E3               	movf	plusw1,w,c
 10661  0045F4  E110               	bnz	u2530
 10662  0045F6  0EF1               	movlw	-15
 10663  0045F8  50E3               	movf	plusw1,w,c
 10664  0045FA  E10D               	bnz	u2530
 10665  0045FC  0EF2               	movlw	-14
 10666  0045FE  50E3               	movf	plusw1,w,c
 10667  004600  E10A               	bnz	u2530
 10668  004602  0EF3               	movlw	-13
 10669  004604  50E3               	movf	plusw1,w,c
 10670  004606  E107               	bnz	u2530
 10671  004608  0EF4               	movlw	-12
 10672  00460A  50E3               	movf	plusw1,w,c
 10673  00460C  E104               	bnz	u2530
 10674  00460E  0EF5               	movlw	-11
 10675  004610  50E3               	movf	plusw1,w,c
 10676  004612  B4D8               	btfsc	status,2,c
 10677  004614  D075               	goto	u2560
 10678  004616                     u2530:
 10679                           
 10680                           ;stkvar	_counter @ sp[(-2)+1]
 10681  004616  0EFF               	movlw	-1
 10682  004618  6AE3               	clrf	plusw1,c
 10683  00461A  D012               	goto	L25
 10684  00461C                     l5379:
 10685                           
 10686                           ;stkvar	_divisor @ sp[(-2)+-16]
 10687  00461C  90D8               	bcf	status,0,c
 10688  00461E  0EEE               	movlw	-18
 10689  004620  36E3               	rlcf	plusw1,f,c
 10690  004622  0EEF               	movlw	-17
 10691  004624  36E3               	rlcf	plusw1,f,c
 10692  004626  0EF0               	movlw	-16
 10693  004628  36E3               	rlcf	plusw1,f,c
 10694  00462A  0EF1               	movlw	-15
 10695  00462C  36E3               	rlcf	plusw1,f,c
 10696  00462E  0EF2               	movlw	-14
 10697  004630  36E3               	rlcf	plusw1,f,c
 10698  004632  0EF3               	movlw	-13
 10699  004634  36E3               	rlcf	plusw1,f,c
 10700  004636  0EF4               	movlw	-12
 10701  004638  36E3               	rlcf	plusw1,f,c
 10702  00463A  0EF5               	movlw	-11
 10703  00463C  36E3               	rlcf	plusw1,f,c
 10704                           
 10705                           ;stkvar	_counter @ sp[(-2)+1]
 10706  00463E  0EFF               	movlw	-1
 10707  004640                     L25:
 10708  004640  2AE3               	incf	plusw1,f,c
 10709                           
 10710                           ;stkvar	_divisor @ sp[(-2)+-16]
 10711  004642  0EF5               	movlw	-11
 10712  004644  AEE3               	btfss	plusw1,7,c
 10713  004646  D7EA               	goto	l5379
 10714  004648                     u2540:
 10715                           
 10716                           ;stkvar	_divisor @ sp[(-2)+-16]
 10717                           ;stkvar	_dividend @ sp[(-2)+-8]
 10718  004648  50E1               	movf	fsr1l,w,c
 10719  00464A  0FF6               	addlw	-10
 10720  00464C  6ED9               	movwf	fsr2l,c
 10721  00464E  50E2               	movf	fsr1h,w,c
 10722  004650  6EDA               	movwf	fsr2h,c
 10723  004652  0EFF               	movlw	255
 10724  004654  22DA               	addwfc	fsr2h,f,c
 10725  004656  0EEE               	movlw	-18
 10726  004658  50E3               	movf	plusw1,w,c
 10727  00465A  5CDE               	subwf	postinc2,w,c
 10728  00465C  0EEF               	movlw	-17
 10729  00465E  50E3               	movf	plusw1,w,c
 10730  004660  58DE               	subwfb	postinc2,w,c
 10731  004662  0EF0               	movlw	-16
 10732  004664  50E3               	movf	plusw1,w,c
 10733  004666  58DE               	subwfb	postinc2,w,c
 10734  004668  0EF1               	movlw	-15
 10735  00466A  50E3               	movf	plusw1,w,c
 10736  00466C  58DE               	subwfb	postinc2,w,c
 10737  00466E  0EF2               	movlw	-14
 10738  004670  50E3               	movf	plusw1,w,c
 10739  004672  58DE               	subwfb	postinc2,w,c
 10740  004674  0EF3               	movlw	-13
 10741  004676  50E3               	movf	plusw1,w,c
 10742  004678  58DE               	subwfb	postinc2,w,c
 10743  00467A  0EF4               	movlw	-12
 10744  00467C  50E3               	movf	plusw1,w,c
 10745  00467E  58DE               	subwfb	postinc2,w,c
 10746  004680  0EF5               	movlw	-11
 10747  004682  50E3               	movf	plusw1,w,c
 10748  004684  58DE               	subwfb	postinc2,w,c
 10749  004686  A0D8               	btfss	status,0,c
 10750  004688  D01F               	goto	l5387
 10751                           
 10752                           ;stkvar	_divisor @ sp[(-2)+-16]
 10753                           ;stkvar	_dividend @ sp[(-2)+-8]
 10754  00468A  50E1               	movf	fsr1l,w,c
 10755  00468C  0FF6               	addlw	-10
 10756  00468E  6ED9               	movwf	fsr2l,c
 10757  004690  50E2               	movf	fsr1h,w,c
 10758  004692  6EDA               	movwf	fsr2h,c
 10759  004694  0EFF               	movlw	255
 10760  004696  22DA               	addwfc	fsr2h,f,c
 10761  004698  0EEE               	movlw	-18
 10762  00469A  50E3               	movf	plusw1,w,c
 10763  00469C  5EDE               	subwf	postinc2,f,c
 10764  00469E  0EEF               	movlw	-17
 10765  0046A0  50E3               	movf	plusw1,w,c
 10766  0046A2  5ADE               	subwfb	postinc2,f,c
 10767  0046A4  0EF0               	movlw	-16
 10768  0046A6  50E3               	movf	plusw1,w,c
 10769  0046A8  5ADE               	subwfb	postinc2,f,c
 10770  0046AA  0EF1               	movlw	-15
 10771  0046AC  50E3               	movf	plusw1,w,c
 10772  0046AE  5ADE               	subwfb	postinc2,f,c
 10773  0046B0  0EF2               	movlw	-14
 10774  0046B2  50E3               	movf	plusw1,w,c
 10775  0046B4  5ADE               	subwfb	postinc2,f,c
 10776  0046B6  0EF3               	movlw	-13
 10777  0046B8  50E3               	movf	plusw1,w,c
 10778  0046BA  5ADE               	subwfb	postinc2,f,c
 10779  0046BC  0EF4               	movlw	-12
 10780  0046BE  50E3               	movf	plusw1,w,c
 10781  0046C0  5ADE               	subwfb	postinc2,f,c
 10782  0046C2  0EF5               	movlw	-11
 10783  0046C4  50E3               	movf	plusw1,w,c
 10784  0046C6  5ADE               	subwfb	postinc2,f,c
 10785  0046C8                     l5387:
 10786                           
 10787                           ;stkvar	_divisor @ sp[(-2)+-16]
 10788  0046C8  90D8               	bcf	status,0,c
 10789  0046CA  0EF5               	movlw	-11
 10790  0046CC  32E3               	rrcf	plusw1,f,c
 10791  0046CE  0EF4               	movlw	-12
 10792  0046D0  32E3               	rrcf	plusw1,f,c
 10793  0046D2  0EF3               	movlw	-13
 10794  0046D4  32E3               	rrcf	plusw1,f,c
 10795  0046D6  0EF2               	movlw	-14
 10796  0046D8  32E3               	rrcf	plusw1,f,c
 10797  0046DA  0EF1               	movlw	-15
 10798  0046DC  32E3               	rrcf	plusw1,f,c
 10799  0046DE  0EF0               	movlw	-16
 10800  0046E0  32E3               	rrcf	plusw1,f,c
 10801  0046E2  0EEF               	movlw	-17
 10802  0046E4  32E3               	rrcf	plusw1,f,c
 10803  0046E6  0EEE               	movlw	-18
 10804  0046E8  32E3               	rrcf	plusw1,f,c
 10805                           
 10806                           ;stkvar	_counter @ sp[(-2)+1]
 10807  0046EA  0EFF               	movlw	-1
 10808  0046EC  50E3               	movf	plusw1,w,c
 10809  0046EE  6E3B               	movwf	btemp,c
 10810  0046F0  0E01               	movlw	1
 10811  0046F2  5E3B               	subwf	btemp,f,c
 10812  0046F4  0EFF               	movlw	-1
 10813  0046F6  0060  F0EF  FFE3   	movff	btemp,plusw1
 10814  0046FC  A4D8               	btfss	status,2,c
 10815  0046FE  D7A4               	goto	u2540
 10816  004700                     u2560:
 10817                           
 10818                           ;stkvar	_sign @ sp[(-2)+0]
 10819  004700  0EFE               	movlw	-2
 10820  004702  50E3               	movf	plusw1,w,c
 10821  004704  B4D8               	btfsc	status,2,c
 10822  004706  D025               	goto	u2580
 10823                           
 10824                           ;stkvar	_dividend @ sp[(-2)+-8]
 10825                           ;stkvar	_dividend @ sp[(-2)+-8]
 10826  004708  0EF6               	movlw	-10
 10827  00470A  6CE3               	negf	plusw1,c
 10828  00470C  0EF7               	movlw	-9
 10829  00470E  1EE3               	comf	plusw1,f,c
 10830  004710  0EF8               	movlw	-8
 10831  004712  1EE3               	comf	plusw1,f,c
 10832  004714  0EF9               	movlw	-7
 10833  004716  1EE3               	comf	plusw1,f,c
 10834  004718  0EFA               	movlw	-6
 10835  00471A  1EE3               	comf	plusw1,f,c
 10836  00471C  0EFB               	movlw	-5
 10837  00471E  1EE3               	comf	plusw1,f,c
 10838  004720  0EFC               	movlw	-4
 10839  004722  1EE3               	comf	plusw1,f,c
 10840  004724  0EFD               	movlw	-3
 10841  004726  1EE3               	comf	plusw1,f,c
 10842  004728  E314               	bnc	u2580
 10843  00472A  0EF7               	movlw	-9
 10844  00472C  2AE3               	incf	plusw1,f,c
 10845  00472E  E311               	bnc	u2580
 10846  004730  0EF8               	movlw	-8
 10847  004732  2AE3               	incf	plusw1,f,c
 10848  004734  E30E               	bnc	u2580
 10849  004736  0EF9               	movlw	-7
 10850  004738  2AE3               	incf	plusw1,f,c
 10851  00473A  E30B               	bnc	u2580
 10852  00473C  0EFA               	movlw	-6
 10853  00473E  2AE3               	incf	plusw1,f,c
 10854  004740  E308               	bnc	u2580
 10855  004742  0EFB               	movlw	-5
 10856  004744  2AE3               	incf	plusw1,f,c
 10857  004746  E305               	bnc	u2580
 10858  004748  0EFC               	movlw	-4
 10859  00474A  2AE3               	incf	plusw1,f,c
 10860  00474C  E302               	bnc	u2580
 10861  00474E  0EFD               	movlw	-3
 10862  004750  2AE3               	incf	plusw1,f,c
 10863  004752                     u2580:
 10864                           
 10865                           ;stkvar	_dividend @ sp[(-2)+-8]
 10866  004752  0EF6               	movlw	246
 10867  004754  24E1               	addwf	fsr1l,w,c
 10868  004756  6ED9               	movwf	fsr2l,c
 10869  004758  0EFF               	movlw	255
 10870  00475A  20E2               	addwfc	fsr1h,w,c
 10871  00475C  6EDA               	movwf	fsr2h,c
 10872                           
 10873                           ;stkvar	?___aomod @ sp[(-2)+-8]
 10874  00475E  0E08               	movlw	8
 10875  004760  6E3B               	movwf	btemp,c
 10876  004762  0EF6               	movlw	-10
 10877  004764                     us259999:
 10878  004764  006F FF7B FFE3     	movff	postinc2,plusw1
 10879  00476A  28E8               	incf	wreg,w,c
 10880  00476C  2E3B               	decfsz	btemp,f,c
 10881  00476E  D7FA               	bra	us259999
 10882                           
 10883                           ; ___aomod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 10884  004770  52E5               	movf	postdec1,f,c
 10885  004772  52E5               	movf	postdec1,f,c
 10886  004774  0012               	return		;funcret
 10887  004776                     __end_of___aomod:
 10888                           	opt callstack 0
 10889                           
 10890 ;; *************** function ___aodiv *****************
 10891 ;; Defined at:
 10892 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/aodiv.c"
 10893 ;; Parameters:    Size  Location     Type
 10894 ;;  dividend        8  [STACK] long long 
 10895 ;;  divisor         8  [STACK] long long 
 10896 ;; Auto vars:     Size  Location     Type
 10897 ;;  quotient        8  [STACK] long long 
 10898 ;;  sign            1  [STACK] unsigned char 
 10899 ;;  counter         1  [STACK] unsigned char 
 10900 ;; Return value:  Size  Location     Type
 10901 ;;                  8  [STACK] long long 
 10902 ;; Registers used:
 10903 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 10904 ;; Tracked objects:
 10905 ;;		On entry : 0/1
 10906 ;;		On exit  : 0/0
 10907 ;;		Unchanged: 0/0
 10908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10909 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10910 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10911 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10912 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10913 ;;Total ram usage:        0 bytes
 10914 ;; Hardware stack levels used:    1
 10915 ;; Hardware stack levels required when called:    3
 10916 ;; This function calls:
 10917 ;;		Nothing
 10918 ;; This function is called by:
 10919 ;;		_dtoa
 10920 ;; This function uses a reentrant model
 10921 ;;
 10922                           
 10923                           	psect	text45
 10924  003B9A                     __ptext45:
 10925                           	opt callstack 0
 10926  003B9A                     ___aodiv:
 10927                           	opt callstack 0
 10928                           
 10929                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 
      +                          vargsize = 0, retsize = 8 argfudge = 0
 10930  003B9A  0E0A               	movlw	10
 10931  003B9C  26E1               	addwf	fsr1l,f,c
 10932  003B9E  0E00               	movlw	0
 10933  003BA0  22E2               	addwfc	fsr1h,f,c
 10934                           
 10935                           ;stkvar	_sign @ sp[(-10)+8]
 10936                           
 10937                           ;incstack = 0
 10938  003BA2  0EFE               	movlw	-2
 10939  003BA4  6AE3               	clrf	plusw1,c
 10940                           
 10941                           ;stkvar	_divisor @ sp[(-10)+-16]
 10942  003BA6  0EED               	movlw	-19
 10943  003BA8  AEE3               	btfss	plusw1,7,c
 10944  003BAA  D028               	goto	l5327
 10945                           
 10946                           ;stkvar	_divisor @ sp[(-10)+-16]
 10947                           ;stkvar	_divisor @ sp[(-10)+-16]
 10948  003BAC  0EE6               	movlw	-26
 10949  003BAE  6CE3               	negf	plusw1,c
 10950  003BB0  0EE7               	movlw	-25
 10951  003BB2  1EE3               	comf	plusw1,f,c
 10952  003BB4  0EE8               	movlw	-24
 10953  003BB6  1EE3               	comf	plusw1,f,c
 10954  003BB8  0EE9               	movlw	-23
 10955  003BBA  1EE3               	comf	plusw1,f,c
 10956  003BBC  0EEA               	movlw	-22
 10957  003BBE  1EE3               	comf	plusw1,f,c
 10958  003BC0  0EEB               	movlw	-21
 10959  003BC2  1EE3               	comf	plusw1,f,c
 10960  003BC4  0EEC               	movlw	-20
 10961  003BC6  1EE3               	comf	plusw1,f,c
 10962  003BC8  0EED               	movlw	-19
 10963  003BCA  1EE3               	comf	plusw1,f,c
 10964  003BCC  E314               	bnc	u2380
 10965  003BCE  0EE7               	movlw	-25
 10966  003BD0  2AE3               	incf	plusw1,f,c
 10967  003BD2  E311               	bnc	u2380
 10968  003BD4  0EE8               	movlw	-24
 10969  003BD6  2AE3               	incf	plusw1,f,c
 10970  003BD8  E30E               	bnc	u2380
 10971  003BDA  0EE9               	movlw	-23
 10972  003BDC  2AE3               	incf	plusw1,f,c
 10973  003BDE  E30B               	bnc	u2380
 10974  003BE0  0EEA               	movlw	-22
 10975  003BE2  2AE3               	incf	plusw1,f,c
 10976  003BE4  E308               	bnc	u2380
 10977  003BE6  0EEB               	movlw	-21
 10978  003BE8  2AE3               	incf	plusw1,f,c
 10979  003BEA  E305               	bnc	u2380
 10980  003BEC  0EEC               	movlw	-20
 10981  003BEE  2AE3               	incf	plusw1,f,c
 10982  003BF0  E302               	bnc	u2380
 10983  003BF2  0EED               	movlw	-19
 10984  003BF4  2AE3               	incf	plusw1,f,c
 10985  003BF6                     u2380:
 10986                           
 10987                           ;stkvar	_sign @ sp[(-10)+8]
 10988  003BF6  0EFE               	movlw	-2
 10989  003BF8  6AE3               	clrf	plusw1,c
 10990  003BFA  2AE3               	incf	plusw1,f,c
 10991  003BFC                     l5327:
 10992                           
 10993                           ;stkvar	_dividend @ sp[(-10)+-8]
 10994  003BFC  0EF5               	movlw	-11
 10995  003BFE  AEE3               	btfss	plusw1,7,c
 10996  003C00  D027               	goto	l5333
 10997                           
 10998                           ;stkvar	_dividend @ sp[(-10)+-8]
 10999                           ;stkvar	_dividend @ sp[(-10)+-8]
 11000  003C02  0EEE               	movlw	-18
 11001  003C04  6CE3               	negf	plusw1,c
 11002  003C06  0EEF               	movlw	-17
 11003  003C08  1EE3               	comf	plusw1,f,c
 11004  003C0A  0EF0               	movlw	-16
 11005  003C0C  1EE3               	comf	plusw1,f,c
 11006  003C0E  0EF1               	movlw	-15
 11007  003C10  1EE3               	comf	plusw1,f,c
 11008  003C12  0EF2               	movlw	-14
 11009  003C14  1EE3               	comf	plusw1,f,c
 11010  003C16  0EF3               	movlw	-13
 11011  003C18  1EE3               	comf	plusw1,f,c
 11012  003C1A  0EF4               	movlw	-12
 11013  003C1C  1EE3               	comf	plusw1,f,c
 11014  003C1E  0EF5               	movlw	-11
 11015  003C20  1EE3               	comf	plusw1,f,c
 11016  003C22  E314               	bnc	u2400
 11017  003C24  0EEF               	movlw	-17
 11018  003C26  2AE3               	incf	plusw1,f,c
 11019  003C28  E311               	bnc	u2400
 11020  003C2A  0EF0               	movlw	-16
 11021  003C2C  2AE3               	incf	plusw1,f,c
 11022  003C2E  E30E               	bnc	u2400
 11023  003C30  0EF1               	movlw	-15
 11024  003C32  2AE3               	incf	plusw1,f,c
 11025  003C34  E30B               	bnc	u2400
 11026  003C36  0EF2               	movlw	-14
 11027  003C38  2AE3               	incf	plusw1,f,c
 11028  003C3A  E308               	bnc	u2400
 11029  003C3C  0EF3               	movlw	-13
 11030  003C3E  2AE3               	incf	plusw1,f,c
 11031  003C40  E305               	bnc	u2400
 11032  003C42  0EF4               	movlw	-12
 11033  003C44  2AE3               	incf	plusw1,f,c
 11034  003C46  E302               	bnc	u2400
 11035  003C48  0EF5               	movlw	-11
 11036  003C4A  2AE3               	incf	plusw1,f,c
 11037  003C4C                     u2400:
 11038                           
 11039                           ;stkvar	_sign @ sp[(-10)+8]
 11040  003C4C  0EFE               	movlw	-2
 11041  003C4E  70E3               	btg	plusw1,0,c
 11042  003C50                     l5333:
 11043                           
 11044                           ;stkvar	_quotient @ sp[(-10)+0]
 11045  003C50  0E07               	movlw	7
 11046  003C52  6E3B               	movwf	btemp,c
 11047  003C54  0EF6               	movlw	-10
 11048  003C56                     u2411:
 11049  003C56  6AE3               	clrf	plusw1,c
 11050  003C58  2AE8               	incf	wreg,f,c
 11051  003C5A  063B               	decf	btemp,f,c
 11052  003C5C  E2FC               	bc	u2411
 11053                           
 11054                           ;stkvar	_divisor @ sp[(-10)+-16]
 11055  003C5E  0EE6               	movlw	-26
 11056  003C60  50E3               	movf	plusw1,w,c
 11057  003C62  E116               	bnz	u2420
 11058  003C64  0EE7               	movlw	-25
 11059  003C66  50E3               	movf	plusw1,w,c
 11060  003C68  E113               	bnz	u2420
 11061  003C6A  0EE8               	movlw	-24
 11062  003C6C  50E3               	movf	plusw1,w,c
 11063  003C6E  E110               	bnz	u2420
 11064  003C70  0EE9               	movlw	-23
 11065  003C72  50E3               	movf	plusw1,w,c
 11066  003C74  E10D               	bnz	u2420
 11067  003C76  0EEA               	movlw	-22
 11068  003C78  50E3               	movf	plusw1,w,c
 11069  003C7A  E10A               	bnz	u2420
 11070  003C7C  0EEB               	movlw	-21
 11071  003C7E  50E3               	movf	plusw1,w,c
 11072  003C80  E107               	bnz	u2420
 11073  003C82  0EEC               	movlw	-20
 11074  003C84  50E3               	movf	plusw1,w,c
 11075  003C86  E104               	bnz	u2420
 11076  003C88  0EED               	movlw	-19
 11077  003C8A  50E3               	movf	plusw1,w,c
 11078  003C8C  B4D8               	btfsc	status,2,c
 11079  003C8E  D088               	goto	u2450
 11080  003C90                     u2420:
 11081                           
 11082                           ;stkvar	_counter @ sp[(-10)+9]
 11083  003C90  0EFF               	movlw	-1
 11084  003C92  6AE3               	clrf	plusw1,c
 11085  003C94  D012               	goto	L26
 11086  003C96                     l5339:
 11087                           
 11088                           ;stkvar	_divisor @ sp[(-10)+-16]
 11089  003C96  90D8               	bcf	status,0,c
 11090  003C98  0EE6               	movlw	-26
 11091  003C9A  36E3               	rlcf	plusw1,f,c
 11092  003C9C  0EE7               	movlw	-25
 11093  003C9E  36E3               	rlcf	plusw1,f,c
 11094  003CA0  0EE8               	movlw	-24
 11095  003CA2  36E3               	rlcf	plusw1,f,c
 11096  003CA4  0EE9               	movlw	-23
 11097  003CA6  36E3               	rlcf	plusw1,f,c
 11098  003CA8  0EEA               	movlw	-22
 11099  003CAA  36E3               	rlcf	plusw1,f,c
 11100  003CAC  0EEB               	movlw	-21
 11101  003CAE  36E3               	rlcf	plusw1,f,c
 11102  003CB0  0EEC               	movlw	-20
 11103  003CB2  36E3               	rlcf	plusw1,f,c
 11104  003CB4  0EED               	movlw	-19
 11105  003CB6  36E3               	rlcf	plusw1,f,c
 11106                           
 11107                           ;stkvar	_counter @ sp[(-10)+9]
 11108  003CB8  0EFF               	movlw	-1
 11109  003CBA                     L26:
 11110  003CBA  2AE3               	incf	plusw1,f,c
 11111                           
 11112                           ;stkvar	_divisor @ sp[(-10)+-16]
 11113  003CBC  0EED               	movlw	-19
 11114  003CBE  AEE3               	btfss	plusw1,7,c
 11115  003CC0  D7EA               	goto	l5339
 11116  003CC2                     u2430:
 11117                           
 11118                           ;stkvar	_quotient @ sp[(-10)+0]
 11119  003CC2  90D8               	bcf	status,0,c
 11120  003CC4  0EF6               	movlw	-10
 11121  003CC6  36E3               	rlcf	plusw1,f,c
 11122  003CC8  0EF7               	movlw	-9
 11123  003CCA  36E3               	rlcf	plusw1,f,c
 11124  003CCC  0EF8               	movlw	-8
 11125  003CCE  36E3               	rlcf	plusw1,f,c
 11126  003CD0  0EF9               	movlw	-7
 11127  003CD2  36E3               	rlcf	plusw1,f,c
 11128  003CD4  0EFA               	movlw	-6
 11129  003CD6  36E3               	rlcf	plusw1,f,c
 11130  003CD8  0EFB               	movlw	-5
 11131  003CDA  36E3               	rlcf	plusw1,f,c
 11132  003CDC  0EFC               	movlw	-4
 11133  003CDE  36E3               	rlcf	plusw1,f,c
 11134  003CE0  0EFD               	movlw	-3
 11135  003CE2  36E3               	rlcf	plusw1,f,c
 11136                           
 11137                           ;stkvar	_divisor @ sp[(-10)+-16]
 11138                           ;stkvar	_dividend @ sp[(-10)+-8]
 11139  003CE4  50E1               	movf	fsr1l,w,c
 11140  003CE6  0FEE               	addlw	-18
 11141  003CE8  6ED9               	movwf	fsr2l,c
 11142  003CEA  50E2               	movf	fsr1h,w,c
 11143  003CEC  6EDA               	movwf	fsr2h,c
 11144  003CEE  0EFF               	movlw	255
 11145  003CF0  22DA               	addwfc	fsr2h,f,c
 11146  003CF2  0EE6               	movlw	-26
 11147  003CF4  50E3               	movf	plusw1,w,c
 11148  003CF6  5CDE               	subwf	postinc2,w,c
 11149  003CF8  0EE7               	movlw	-25
 11150  003CFA  50E3               	movf	plusw1,w,c
 11151  003CFC  58DE               	subwfb	postinc2,w,c
 11152  003CFE  0EE8               	movlw	-24
 11153  003D00  50E3               	movf	plusw1,w,c
 11154  003D02  58DE               	subwfb	postinc2,w,c
 11155  003D04  0EE9               	movlw	-23
 11156  003D06  50E3               	movf	plusw1,w,c
 11157  003D08  58DE               	subwfb	postinc2,w,c
 11158  003D0A  0EEA               	movlw	-22
 11159  003D0C  50E3               	movf	plusw1,w,c
 11160  003D0E  58DE               	subwfb	postinc2,w,c
 11161  003D10  0EEB               	movlw	-21
 11162  003D12  50E3               	movf	plusw1,w,c
 11163  003D14  58DE               	subwfb	postinc2,w,c
 11164  003D16  0EEC               	movlw	-20
 11165  003D18  50E3               	movf	plusw1,w,c
 11166  003D1A  58DE               	subwfb	postinc2,w,c
 11167  003D1C  0EED               	movlw	-19
 11168  003D1E  50E3               	movf	plusw1,w,c
 11169  003D20  58DE               	subwfb	postinc2,w,c
 11170  003D22  A0D8               	btfss	status,0,c
 11171  003D24  D021               	goto	l5351
 11172                           
 11173                           ;stkvar	_divisor @ sp[(-10)+-16]
 11174                           ;stkvar	_dividend @ sp[(-10)+-8]
 11175  003D26  50E1               	movf	fsr1l,w,c
 11176  003D28  0FEE               	addlw	-18
 11177  003D2A  6ED9               	movwf	fsr2l,c
 11178  003D2C  50E2               	movf	fsr1h,w,c
 11179  003D2E  6EDA               	movwf	fsr2h,c
 11180  003D30  0EFF               	movlw	255
 11181  003D32  22DA               	addwfc	fsr2h,f,c
 11182  003D34  0EE6               	movlw	-26
 11183  003D36  50E3               	movf	plusw1,w,c
 11184  003D38  5EDE               	subwf	postinc2,f,c
 11185  003D3A  0EE7               	movlw	-25
 11186  003D3C  50E3               	movf	plusw1,w,c
 11187  003D3E  5ADE               	subwfb	postinc2,f,c
 11188  003D40  0EE8               	movlw	-24
 11189  003D42  50E3               	movf	plusw1,w,c
 11190  003D44  5ADE               	subwfb	postinc2,f,c
 11191  003D46  0EE9               	movlw	-23
 11192  003D48  50E3               	movf	plusw1,w,c
 11193  003D4A  5ADE               	subwfb	postinc2,f,c
 11194  003D4C  0EEA               	movlw	-22
 11195  003D4E  50E3               	movf	plusw1,w,c
 11196  003D50  5ADE               	subwfb	postinc2,f,c
 11197  003D52  0EEB               	movlw	-21
 11198  003D54  50E3               	movf	plusw1,w,c
 11199  003D56  5ADE               	subwfb	postinc2,f,c
 11200  003D58  0EEC               	movlw	-20
 11201  003D5A  50E3               	movf	plusw1,w,c
 11202  003D5C  5ADE               	subwfb	postinc2,f,c
 11203  003D5E  0EED               	movlw	-19
 11204  003D60  50E3               	movf	plusw1,w,c
 11205  003D62  5ADE               	subwfb	postinc2,f,c
 11206                           
 11207                           ;stkvar	_quotient @ sp[(-10)+0]
 11208  003D64  0EF6               	movlw	-10
 11209  003D66  80E3               	bsf	plusw1,0,c
 11210  003D68                     l5351:
 11211                           
 11212                           ;stkvar	_divisor @ sp[(-10)+-16]
 11213  003D68  90D8               	bcf	status,0,c
 11214  003D6A  0EED               	movlw	-19
 11215  003D6C  32E3               	rrcf	plusw1,f,c
 11216  003D6E  0EEC               	movlw	-20
 11217  003D70  32E3               	rrcf	plusw1,f,c
 11218  003D72  0EEB               	movlw	-21
 11219  003D74  32E3               	rrcf	plusw1,f,c
 11220  003D76  0EEA               	movlw	-22
 11221  003D78  32E3               	rrcf	plusw1,f,c
 11222  003D7A  0EE9               	movlw	-23
 11223  003D7C  32E3               	rrcf	plusw1,f,c
 11224  003D7E  0EE8               	movlw	-24
 11225  003D80  32E3               	rrcf	plusw1,f,c
 11226  003D82  0EE7               	movlw	-25
 11227  003D84  32E3               	rrcf	plusw1,f,c
 11228  003D86  0EE6               	movlw	-26
 11229  003D88  32E3               	rrcf	plusw1,f,c
 11230                           
 11231                           ;stkvar	_counter @ sp[(-10)+9]
 11232  003D8A  0EFF               	movlw	-1
 11233  003D8C  50E3               	movf	plusw1,w,c
 11234  003D8E  6E3B               	movwf	btemp,c
 11235  003D90  0E01               	movlw	1
 11236  003D92  5E3B               	subwf	btemp,f,c
 11237  003D94  0EFF               	movlw	-1
 11238  003D96  0060  F0EF  FFE3   	movff	btemp,plusw1
 11239  003D9C  A4D8               	btfss	status,2,c
 11240  003D9E  D791               	goto	u2430
 11241  003DA0                     u2450:
 11242                           
 11243                           ;stkvar	_sign @ sp[(-10)+8]
 11244  003DA0  0EFE               	movlw	-2
 11245  003DA2  50E3               	movf	plusw1,w,c
 11246  003DA4  B4D8               	btfsc	status,2,c
 11247  003DA6  D025               	goto	u2470
 11248                           
 11249                           ;stkvar	_quotient @ sp[(-10)+0]
 11250                           ;stkvar	_quotient @ sp[(-10)+0]
 11251  003DA8  0EF6               	movlw	-10
 11252  003DAA  6CE3               	negf	plusw1,c
 11253  003DAC  0EF7               	movlw	-9
 11254  003DAE  1EE3               	comf	plusw1,f,c
 11255  003DB0  0EF8               	movlw	-8
 11256  003DB2  1EE3               	comf	plusw1,f,c
 11257  003DB4  0EF9               	movlw	-7
 11258  003DB6  1EE3               	comf	plusw1,f,c
 11259  003DB8  0EFA               	movlw	-6
 11260  003DBA  1EE3               	comf	plusw1,f,c
 11261  003DBC  0EFB               	movlw	-5
 11262  003DBE  1EE3               	comf	plusw1,f,c
 11263  003DC0  0EFC               	movlw	-4
 11264  003DC2  1EE3               	comf	plusw1,f,c
 11265  003DC4  0EFD               	movlw	-3
 11266  003DC6  1EE3               	comf	plusw1,f,c
 11267  003DC8  E314               	bnc	u2470
 11268  003DCA  0EF7               	movlw	-9
 11269  003DCC  2AE3               	incf	plusw1,f,c
 11270  003DCE  E311               	bnc	u2470
 11271  003DD0  0EF8               	movlw	-8
 11272  003DD2  2AE3               	incf	plusw1,f,c
 11273  003DD4  E30E               	bnc	u2470
 11274  003DD6  0EF9               	movlw	-7
 11275  003DD8  2AE3               	incf	plusw1,f,c
 11276  003DDA  E30B               	bnc	u2470
 11277  003DDC  0EFA               	movlw	-6
 11278  003DDE  2AE3               	incf	plusw1,f,c
 11279  003DE0  E308               	bnc	u2470
 11280  003DE2  0EFB               	movlw	-5
 11281  003DE4  2AE3               	incf	plusw1,f,c
 11282  003DE6  E305               	bnc	u2470
 11283  003DE8  0EFC               	movlw	-4
 11284  003DEA  2AE3               	incf	plusw1,f,c
 11285  003DEC  E302               	bnc	u2470
 11286  003DEE  0EFD               	movlw	-3
 11287  003DF0  2AE3               	incf	plusw1,f,c
 11288  003DF2                     u2470:
 11289                           
 11290                           ;stkvar	_quotient @ sp[(-10)+0]
 11291  003DF2  0EF6               	movlw	246
 11292  003DF4  24E1               	addwf	fsr1l,w,c
 11293  003DF6  6ED9               	movwf	fsr2l,c
 11294  003DF8  0EFF               	movlw	255
 11295  003DFA  20E2               	addwfc	fsr1h,w,c
 11296  003DFC  6EDA               	movwf	fsr2h,c
 11297                           
 11298                           ;stkvar	?___aodiv @ sp[(-10)+-8]
 11299  003DFE  0E08               	movlw	8
 11300  003E00  6E3B               	movwf	btemp,c
 11301  003E02  0EEE               	movlw	-18
 11302  003E04                     us248999:
 11303  003E04  006F FF7B FFE3     	movff	postinc2,plusw1
 11304  003E0A  28E8               	incf	wreg,w,c
 11305  003E0C  2E3B               	decfsz	btemp,f,c
 11306  003E0E  D7FA               	bra	us248999
 11307                           
 11308                           ; ___aodiv: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, arg
      +                          size = 16, vargsize = 0
 11309  003E10  0EF6               	movlw	246
 11310  003E12  26E1               	addwf	fsr1l,f,c
 11311  003E14  0EFF               	movlw	255
 11312  003E16  22E2               	addwfc	fsr1h,f,c
 11313  003E18  0012               	return		;funcret
 11314  003E1A                     __end_of___aodiv:
 11315                           	opt callstack 0
 11316                           
 11317 ;; *************** function _ctoa *****************
 11318 ;; Defined at:
 11319 ;;		line 259 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
 11320 ;; Parameters:    Size  Location     Type
 11321 ;;  fp              2  [STACK] PTR struct _IO_FILE
 11322 ;;		 -> f(5), NULL(0), 
 11323 ;;  c               1  [STACK] unsigned char 
 11324 ;; Auto vars:     Size  Location     Type
 11325 ;;  w               2  [STACK] int 
 11326 ;;  l               2    0        int 
 11327 ;; Return value:  Size  Location     Type
 11328 ;;                  2  [STACK] int 
 11329 ;; Registers used:
 11330 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 11331 ;; Tracked objects:
 11332 ;;		On entry : 0/0
 11333 ;;		On exit  : 0/0
 11334 ;;		Unchanged: 0/0
 11335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11336 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11337 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11338 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11339 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11340 ;;Total ram usage:        0 bytes
 11341 ;; Hardware stack levels used:    1
 11342 ;; Hardware stack levels required when called:    8
 11343 ;; This function calls:
 11344 ;;		_pad
 11345 ;; This function is called by:
 11346 ;;		_vfpfcnvrt
 11347 ;; This function uses a reentrant model
 11348 ;;
 11349                           
 11350                           	psect	text46
 11351  005374                     __ptext46:
 11352                           	opt callstack 0
 11353  005374                     _ctoa:
 11354                           	opt callstack 0
 11355                           
 11356                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11357  005374  52E6               	movf	postinc1,f,c
 11358  005376  52E6               	movf	postinc1,f,c
 11359                           
 11360                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.05/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.05
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
 11361                           
 11362                           ;incstack = 0
 11363  005378  5020               	movf	_width,w,c
 11364  00537A  1021               	iorwf	_width+1,w,c
 11365  00537C  A4D8               	btfss	status,2,c
 11366  00537E  D009               	goto	l7613
 11367                           
 11368                           ;stkvar	_w @ sp[(-2)+0]
 11369  005380  0EFE               	movlw	-2
 11370  005382  0060  F083  FFE3   	movff	_width,plusw1
 11371  005388  0EFF               	movlw	-1
 11372  00538A  0060  F087  FFE3   	movff	_width+1,plusw1
 11373  005390  D016               	goto	l7615
 11374  005392                     l7613:
 11375  005392  0EFF               	movlw	255
 11376  005394  6E45               	movwf	btemp+10,c
 11377  005396  0EFF               	movlw	255
 11378  005398  6E46               	movwf	btemp+11,c
 11379  00539A  0060  F080  F043   	movff	_width,btemp+8
 11380  0053A0  0060  F084  F044   	movff	_width+1,btemp+9
 11381  0053A6  5045               	movf	btemp+10,w,c
 11382  0053A8  2643               	addwf	btemp+8,f,c
 11383  0053AA  5046               	movf	btemp+11,w,c
 11384  0053AC  2244               	addwfc	btemp+9,f,c
 11385                           
 11386                           ;stkvar	_w @ sp[(-2)+0]
 11387  0053AE  0EFE               	movlw	-2
 11388  0053B0  0060  F10F  FFE3   	movff	btemp+8,plusw1
 11389  0053B6  0EFF               	movlw	-1
 11390  0053B8  0060  F113  FFE3   	movff	btemp+9,plusw1
 11391  0053BE                     l7615:
 11392                           
 11393                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
 11394                           ;stkvar	_c @ sp[(-2)+-3]
 11395  0053BE  0EFB               	movlw	-5
 11396  0053C0  006F FF8C  F1AF    	movff	plusw1,_dbuf
 11397                           
 11398                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
 11399  0053C6  0101               	movlb	1	; () banked
 11400  0053C8  6BB0               	clrf	(_dbuf+1)& (0+255),b
 11401                           
 11402                           ; BSR set to: 1
 11403                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
 11404                           ;stkvar	_w @ sp[(-2)+0]
 11405  0053CA  0EFE               	movlw	-2
 11406  0053CC  006F FF8F FFE6     	movff	plusw1,postinc1
 11407  0053D2  006F FF8F FFE6     	movff	plusw1,postinc1
 11408  0053D8  0EAF               	movlw	low _dbuf
 11409  0053DA  6EE6               	movwf	postinc1,c
 11410  0053DC  0E01               	movlw	high _dbuf
 11411  0053DE  6EE6               	movwf	postinc1,c
 11412                           
 11413                           ;stkvar	_fp @ sp[(-6)+-2]
 11414  0053E0  0EF8               	movlw	-8
 11415  0053E2  006F FF8F FFE6     	movff	plusw1,postinc1
 11416  0053E8  006F FF8F FFE6     	movff	plusw1,postinc1
 11417  0053EE  EC83  F024         	call	_pad	;wreg free
 11418                           
 11419                           ; _ctoa: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize 
      +                          = 3, vargsize = 0
 11420  0053F2  0EFB               	movlw	251
 11421  0053F4  26E1               	addwf	fsr1l,f,c
 11422  0053F6  0EFF               	movlw	255
 11423  0053F8  22E2               	addwfc	fsr1h,f,c
 11424  0053FA  0012               	return		;funcret
 11425  0053FC                     __end_of_ctoa:
 11426                           	opt callstack 0
 11427                           
 11428 ;; *************** function _pad *****************
 11429 ;; Defined at:
 11430 ;;		line 72 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
 11431 ;; Parameters:    Size  Location     Type
 11432 ;;  fp              2  [STACK] PTR struct _IO_FILE
 11433 ;;		 -> f(5), NULL(0), 
 11434 ;;  buf             2  [STACK] PTR unsigned char 
 11435 ;;		 -> dbuf(32), 
 11436 ;;  p               2  [STACK] int 
 11437 ;; Auto vars:     Size  Location     Type
 11438 ;;  w               2  [STACK] int 
 11439 ;;  i               2  [STACK] int 
 11440 ;; Return value:  Size  Location     Type
 11441 ;;                  2  [STACK] int 
 11442 ;; Registers used:
 11443 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 11444 ;; Tracked objects:
 11445 ;;		On entry : 0/1
 11446 ;;		On exit  : 0/0
 11447 ;;		Unchanged: 0/0
 11448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11449 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11450 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11451 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11452 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11453 ;;Total ram usage:        0 bytes
 11454 ;; Hardware stack levels used:    1
 11455 ;; Hardware stack levels required when called:    7
 11456 ;; This function calls:
 11457 ;;		_fputc
 11458 ;;		_fputs
 11459 ;;		_strlen
 11460 ;; This function is called by:
 11461 ;;		_ctoa
 11462 ;;		_dtoa
 11463 ;; This function uses a reentrant model
 11464 ;;
 11465                           
 11466                           	psect	text47
 11467  004906                     __ptext47:
 11468                           	opt callstack 0
 11469  004906                     _pad:
 11470                           	opt callstack 0
 11471                           
 11472                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11473  004906  52E6               	movf	postinc1,f,c
 11474  004908  52E6               	movf	postinc1,f,c
 11475  00490A  52E6               	movf	postinc1,f,c
 11476  00490C  52E6               	movf	postinc1,f,c
 11477                           
 11478                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.05/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
 11479                           
 11480                           ;incstack = 0
 11481  00490E  A024               	btfss	_flags,0,c
 11482  004910  D010               	goto	l7591
 11483                           
 11484                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
 11485                           ;stkvar	_fp @ sp[(-4)+-2]
 11486  004912  0EFA               	movlw	-6
 11487  004914  006F FF8F FFE6     	movff	plusw1,postinc1
 11488  00491A  006F FF8F FFE6     	movff	plusw1,postinc1
 11489                           
 11490                           ;stkvar	_buf @ sp[(-6)+-4]
 11491  004920  0EF6               	movlw	-10
 11492  004922  006F FF8F FFE6     	movff	plusw1,postinc1
 11493  004928  006F FF8F FFE6     	movff	plusw1,postinc1
 11494  00492E  EC25  F029         	call	_fputs	;wreg free
 11495  004932                     l7591:
 11496                           
 11497                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
 11498                           ;stkvar	_p @ sp[(-4)+-6]
 11499  004932  0EF7               	movlw	-9
 11500  004934  BEE3               	btfsc	plusw1,7,c
 11501  004936  D011               	goto	l7595
 11502                           
 11503                           ;stkvar	_p @ sp[(-4)+-6]
 11504                           ;stkvar	_w @ sp[(-4)+0]
 11505  004938  0EF6               	movlw	-10
 11506  00493A  006F FF8C  F03B    	movff	plusw1,btemp
 11507  004940  0EFC               	movlw	-4
 11508  004942  0060  F0EF  FFE3   	movff	btemp,plusw1
 11509  004948  0EF7               	movlw	-9
 11510  00494A  006F FF8C  F03B    	movff	plusw1,btemp
 11511  004950  0EFD               	movlw	-3
 11512  004952  0060  F0EF  FFE3   	movff	btemp,plusw1
 11513  004958  D004               	goto	l1773
 11514  00495A                     l7595:
 11515                           
 11516                           ;stkvar	_w @ sp[(-4)+0]
 11517  00495A  0EFC               	movlw	-4
 11518  00495C  6AE3               	clrf	plusw1,c
 11519  00495E  0EFD               	movlw	-3
 11520  004960  6AE3               	clrf	plusw1,c
 11521  004962                     l1773:
 11522                           
 11523                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 11524                           ;stkvar	_i @ sp[(-4)+2]
 11525  004962  0EFE               	movlw	-2
 11526  004964  6AE3               	clrf	plusw1,c
 11527  004966  0EFF               	movlw	-1
 11528  004968  6AE3               	clrf	plusw1,c
 11529                           
 11530                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 11531  00496A  D01E               	goto	l7601
 11532  00496C                     l7597:
 11533                           
 11534                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
 11535                           ;stkvar	_fp @ sp[(-4)+-2]
 11536  00496C  0EFA               	movlw	-6
 11537  00496E  006F FF8F FFE6     	movff	plusw1,postinc1
 11538  004974  006F FF8F FFE6     	movff	plusw1,postinc1
 11539  00497A  0E20               	movlw	32
 11540  00497C  6EE6               	movwf	postinc1,c
 11541  00497E  0E00               	movlw	0
 11542  004980  6EE6               	movwf	postinc1,c
 11543  004982  EC0D  F025         	call	_fputc	;wreg free
 11544                           
 11545                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 86:         ++i;
 11546                           ;stkvar	_i @ sp[(-4)+2]
 11547  004986  0EFE               	movlw	-2
 11548  004988  50E3               	movf	plusw1,w,c
 11549  00498A  0F01               	addlw	1
 11550  00498C  6E3B               	movwf	btemp,c
 11551  00498E  0EFE               	movlw	-2
 11552  004990  0060  F0EF  FFE3   	movff	btemp,plusw1
 11553  004996  6A3B               	clrf	btemp,c
 11554  004998  0EFF               	movlw	-1
 11555  00499A  50E3               	movf	plusw1,w,c
 11556  00499C  203B               	addwfc	btemp,w,c
 11557  00499E  6E3B               	movwf	btemp,c
 11558  0049A0  0EFF               	movlw	-1
 11559  0049A2  0060  F0EF  FFE3   	movff	btemp,plusw1
 11560  0049A8                     l7601:
 11561                           
 11562                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 11563                           ;stkvar	_w @ sp[(-4)+0]
 11564                           ;stkvar	_i @ sp[(-4)+2]
 11565  0049A8  50E1               	movf	fsr1l,w,c
 11566  0049AA  0FFE               	addlw	-2
 11567  0049AC  6ED9               	movwf	fsr2l,c
 11568  0049AE  50E2               	movf	fsr1h,w,c
 11569  0049B0  6EDA               	movwf	fsr2h,c
 11570  0049B2  0EFF               	movlw	255
 11571  0049B4  22DA               	addwfc	fsr2h,f,c
 11572  0049B6  0EFC               	movlw	-4
 11573  0049B8  50E3               	movf	plusw1,w,c
 11574  0049BA  5CDE               	subwf	postinc2,w,c
 11575  0049BC  50DE               	movf	postinc2,w,c
 11576  0049BE  0A80               	xorlw	128
 11577  0049C0  6E3B               	movwf	btemp,c
 11578  0049C2  0EFD               	movlw	-3
 11579  0049C4  50E3               	movf	plusw1,w,c
 11580  0049C6  0A80               	xorlw	128
 11581  0049C8  583B               	subwfb	btemp,w,c
 11582  0049CA  A0D8               	btfss	status,0,c
 11583  0049CC  D7CF               	goto	l7597
 11584                           
 11585                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
 11586  0049CE  B024               	btfsc	_flags,0,c
 11587  0049D0  D010               	goto	l7605
 11588                           
 11589                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
 11590                           ;stkvar	_fp @ sp[(-4)+-2]
 11591  0049D2  0EFA               	movlw	-6
 11592  0049D4  006F FF8F FFE6     	movff	plusw1,postinc1
 11593  0049DA  006F FF8F FFE6     	movff	plusw1,postinc1
 11594                           
 11595                           ;stkvar	_buf @ sp[(-6)+-4]
 11596  0049E0  0EF6               	movlw	-10
 11597  0049E2  006F FF8F FFE6     	movff	plusw1,postinc1
 11598  0049E8  006F FF8F FFE6     	movff	plusw1,postinc1
 11599  0049EE  EC25  F029         	call	_fputs	;wreg free
 11600  0049F2                     l7605:
 11601                           
 11602                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
 11603                           ;stkvar	_w @ sp[(-4)+0]
 11604                           ;stkvar	_buf @ sp[(-4)+-4]
 11605  0049F2  0EF8               	movlw	-8
 11606  0049F4  006F FF8F FFE6     	movff	plusw1,postinc1
 11607  0049FA  006F FF8F FFE6     	movff	plusw1,postinc1
 11608  004A00  ECEA  F027         	call	_strlen	;wreg free
 11609  004A04  0EFC               	movlw	-4
 11610  004A06  50E3               	movf	plusw1,w,c
 11611  004A08  263B               	addwf	btemp,f,c
 11612  004A0A  0EFD               	movlw	-3
 11613  004A0C  50E3               	movf	plusw1,w,c
 11614  004A0E  223C               	addwfc	btemp+1,f,c
 11615                           
 11616                           ; _pad: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize =
      +                           6, vargsize = 0
 11617  004A10  0EF6               	movlw	246
 11618  004A12  26E1               	addwf	fsr1l,f,c
 11619  004A14  0EFF               	movlw	255
 11620  004A16  22E2               	addwfc	fsr1h,f,c
 11621  004A18  0012               	return		;funcret
 11622  004A1A                     __end_of_pad:
 11623                           	opt callstack 0
 11624                           
 11625 ;; *************** function _strlen *****************
 11626 ;; Defined at:
 11627 ;;		line 12 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/strlen.c"
 11628 ;; Parameters:    Size  Location     Type
 11629 ;;  s               2  [STACK] PTR const unsigned char 
 11630 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(32), 
 11631 ;;		 -> STR_3(6), V(89), 
 11632 ;; Auto vars:     Size  Location     Type
 11633 ;;  a               2  [STACK] PTR const unsigned char 
 11634 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(32), 
 11635 ;;		 -> STR_3(6), V(89), 
 11636 ;; Return value:  Size  Location     Type
 11637 ;;                  2  [STACK] unsigned int 
 11638 ;; Registers used:
 11639 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru
 11640 ;; Tracked objects:
 11641 ;;		On entry : 0/0
 11642 ;;		On exit  : 0/0
 11643 ;;		Unchanged: 0/0
 11644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11645 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11646 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11648 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11649 ;;Total ram usage:        0 bytes
 11650 ;; Hardware stack levels used:    1
 11651 ;; Hardware stack levels required when called:    3
 11652 ;; This function calls:
 11653 ;;		Nothing
 11654 ;; This function is called by:
 11655 ;;		_eaDogM_WriteString
 11656 ;;		_pad
 11657 ;;		_stoa
 11658 ;; This function uses a reentrant model
 11659 ;;
 11660                           
 11661                           	psect	text48
 11662  004FD4                     __ptext48:
 11663                           	opt callstack 0
 11664  004FD4                     _strlen:
 11665                           	opt callstack 0
 11666                           
 11667                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11668  004FD4  52E6               	movf	postinc1,f,c
 11669  004FD6  52E6               	movf	postinc1,f,c
 11670                           
 11671                           ;stkvar	_s @ sp[(-2)+-2]
 11672                           
 11673                           ;incstack = 0
 11674  004FD8  0EFC               	movlw	-4
 11675  004FDA  006F FF8C  F045    	movff	plusw1,btemp+10
 11676  004FE0  0EFD               	movlw	-3
 11677  004FE2  006F FF8C  F046    	movff	plusw1,btemp+11
 11678                           
 11679                           ;stkvar	_a @ sp[(-2)+0]
 11680  004FE8  0EFF               	movlw	-1
 11681  004FEA  0060  F11B  FFE3   	movff	btemp+11,plusw1
 11682  004FF0  0EFE               	movlw	-2
 11683  004FF2  0060  F117  FFE3   	movff	btemp+10,plusw1
 11684  004FF8  D011               	goto	l5275
 11685  004FFA                     l5273:
 11686                           
 11687                           ;stkvar	_s @ sp[(-2)+-2]
 11688  004FFA  0EFC               	movlw	-4
 11689  004FFC  50E3               	movf	plusw1,w,c
 11690  004FFE  0F01               	addlw	1
 11691  005000  6E3B               	movwf	btemp,c
 11692  005002  0EFC               	movlw	-4
 11693  005004  0060  F0EF  FFE3   	movff	btemp,plusw1
 11694  00500A  6A3B               	clrf	btemp,c
 11695  00500C  0EFD               	movlw	-3
 11696  00500E  50E3               	movf	plusw1,w,c
 11697  005010  203B               	addwfc	btemp,w,c
 11698  005012  6E3B               	movwf	btemp,c
 11699  005014  0EFD               	movlw	-3
 11700  005016  0060  F0EF  FFE3   	movff	btemp,plusw1
 11701  00501C                     l5275:
 11702                           
 11703                           ;stkvar	_s @ sp[(-2)+-2]
 11704  00501C  0EFC               	movlw	-4
 11705  00501E  006F FF8F FFF6     	movff	plusw1,tblptrl
 11706  005024  0EFD               	movlw	-3
 11707  005026  006F FF8F FFF7     	movff	plusw1,tblptrh
 11708  00502C  0E00               	movlw	low (__smallconst shr (0+16))
 11709  00502E  6EF8               	movwf	tblptru,c
 11710  005030  0E1F               	movlw	(high __ramtop+-1)
 11711  005032  64F7               	cpfsgt	tblptrh,c
 11712  005034  D003               	bra	u2297
 11713  005036  0008               	tblrd		*
 11714  005038  50F5               	movf	tablat,w,c
 11715  00503A  D007               	bra	u2290
 11716  00503C                     u2297:
 11717  00503C  006F FFDB FFE9     	movff	tblptrl,fsr0l
 11718  005042  006F FFDF FFEA     	movff	tblptrh,fsr0h
 11719  005048  50EF               	movf	indf0,w,c
 11720  00504A                     u2290:
 11721  00504A  0900               	iorlw	0
 11722  00504C  A4D8               	btfss	status,2,c
 11723  00504E  D7D5               	goto	l5273
 11724                           
 11725                           ;stkvar	_a @ sp[(-2)+0]
 11726                           ;stkvar	_s @ sp[(-2)+-2]
 11727  005050  0EFC               	movlw	-4
 11728  005052  006F FF8C  F03B    	movff	plusw1,btemp
 11729  005058  0EFD               	movlw	-3
 11730  00505A  006F FF8C  F03C    	movff	plusw1,btemp+1
 11731  005060  0EFE               	movlw	-2
 11732  005062  50E3               	movf	plusw1,w,c
 11733  005064  5E3B               	subwf	btemp,f,c
 11734  005066  0EFF               	movlw	-1
 11735  005068  50E3               	movf	plusw1,w,c
 11736  00506A  5A3C               	subwfb	btemp+1,f,c
 11737                           
 11738                           ; _strlen: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 11739  00506C  52E5               	movf	postdec1,f,c
 11740  00506E  52E5               	movf	postdec1,f,c
 11741  005070  52E5               	movf	postdec1,f,c
 11742  005072  52E5               	movf	postdec1,f,c
 11743  005074  0012               	return		;funcret
 11744  005076                     __end_of_strlen:
 11745                           	opt callstack 0
 11746                           
 11747 ;; *************** function _fputs *****************
 11748 ;; Defined at:
 11749 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputs.c"
 11750 ;; Parameters:    Size  Location     Type
 11751 ;;  s               2  [STACK] PTR const unsigned char 
 11752 ;;		 -> dbuf(32), 
 11753 ;;  fp              2  [STACK] PTR struct _IO_FILE
 11754 ;;		 -> f(5), NULL(0), 
 11755 ;; Auto vars:     Size  Location     Type
 11756 ;;  i               2  [STACK] int 
 11757 ;;  c               1  [STACK] unsigned char 
 11758 ;; Return value:  Size  Location     Type
 11759 ;;                  2  [STACK] int 
 11760 ;; Registers used:
 11761 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 11762 ;; Tracked objects:
 11763 ;;		On entry : 0/1
 11764 ;;		On exit  : 0/0
 11765 ;;		Unchanged: 0/0
 11766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11767 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11768 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11769 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11770 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11771 ;;Total ram usage:        0 bytes
 11772 ;; Hardware stack levels used:    1
 11773 ;; Hardware stack levels required when called:    6
 11774 ;; This function calls:
 11775 ;;		_fputc
 11776 ;; This function is called by:
 11777 ;;		_pad
 11778 ;; This function uses a reentrant model
 11779 ;;
 11780                           
 11781                           	psect	text49
 11782  00524A                     __ptext49:
 11783                           	opt callstack 0
 11784  00524A                     _fputs:
 11785                           	opt callstack 0
 11786                           
 11787                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11788  00524A  52E6               	movf	postinc1,f,c
 11789  00524C  52E6               	movf	postinc1,f,c
 11790  00524E  52E6               	movf	postinc1,f,c
 11791                           
 11792                           ;stkvar	_i @ sp[(-3)+0]
 11793                           
 11794                           ;incstack = 0
 11795  005250  0EFD               	movlw	-3
 11796  005252  6AE3               	clrf	plusw1,c
 11797  005254  0EFE               	movlw	-2
 11798  005256  6AE3               	clrf	plusw1,c
 11799  005258  D01F               	goto	l7585
 11800  00525A                     l7581:
 11801                           
 11802                           ;stkvar	_fp @ sp[(-3)+-4]
 11803  00525A  0EF9               	movlw	-7
 11804  00525C  006F FF8F FFE6     	movff	plusw1,postinc1
 11805  005262  006F FF8F FFE6     	movff	plusw1,postinc1
 11806                           
 11807                           ;stkvar	_c @ sp[(-5)+2]
 11808  005268  0EFD               	movlw	-3
 11809  00526A  50E3               	movf	plusw1,w,c
 11810  00526C  6EE6               	movwf	postinc1,c
 11811  00526E  0E00               	movlw	0
 11812  005270  6EE6               	movwf	postinc1,c
 11813  005272  EC0D  F025         	call	_fputc	;wreg free
 11814                           
 11815                           ;stkvar	_i @ sp[(-3)+0]
 11816  005276  0EFD               	movlw	-3
 11817  005278  50E3               	movf	plusw1,w,c
 11818  00527A  0F01               	addlw	1
 11819  00527C  6E3B               	movwf	btemp,c
 11820  00527E  0EFD               	movlw	-3
 11821  005280  0060  F0EF  FFE3   	movff	btemp,plusw1
 11822  005286  6A3B               	clrf	btemp,c
 11823  005288  0EFE               	movlw	-2
 11824  00528A  50E3               	movf	plusw1,w,c
 11825  00528C  203B               	addwfc	btemp,w,c
 11826  00528E  6E3B               	movwf	btemp,c
 11827  005290  0EFE               	movlw	-2
 11828  005292  0060  F0EF  FFE3   	movff	btemp,plusw1
 11829  005298                     l7585:
 11830                           
 11831                           ;stkvar	_i @ sp[(-3)+0]
 11832  005298  0EFD               	movlw	-3
 11833  00529A  006F FF8C  F045    	movff	plusw1,btemp+10
 11834  0052A0  0EFE               	movlw	-2
 11835  0052A2  006F FF8C  F046    	movff	plusw1,btemp+11
 11836                           
 11837                           ;stkvar	_s @ sp[(-3)+-2]
 11838  0052A8  0EFB               	movlw	-5
 11839  0052AA  006F FF8C  F043    	movff	plusw1,btemp+8
 11840  0052B0  0EFC               	movlw	-4
 11841  0052B2  006F FF8C  F044    	movff	plusw1,btemp+9
 11842  0052B8  5045               	movf	btemp+10,w,c
 11843  0052BA  2443               	addwf	btemp+8,w,c
 11844  0052BC  6ED9               	movwf	fsr2l,c
 11845  0052BE  5046               	movf	btemp+11,w,c
 11846  0052C0  2044               	addwfc	btemp+9,w,c
 11847  0052C2  6EDA               	movwf	fsr2h,c
 11848  0052C4  50DF               	movf	indf2,w,c
 11849  0052C6  6E46               	movwf	btemp+11,c
 11850                           
 11851                           ;stkvar	_c @ sp[(-3)+2]
 11852  0052C8  0EFF               	movlw	-1
 11853  0052CA  0060  F11B  FFE3   	movff	btemp+11,plusw1
 11854  0052D0  0EFF               	movlw	-1
 11855  0052D2  50E3               	movf	plusw1,w,c
 11856  0052D4  A4D8               	btfss	status,2,c
 11857  0052D6  D7C1               	goto	l7581
 11858                           
 11859                           ; _fputs: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 11860  0052D8  0EF9               	movlw	249
 11861  0052DA  26E1               	addwf	fsr1l,f,c
 11862  0052DC  0EFF               	movlw	255
 11863  0052DE  22E2               	addwfc	fsr1h,f,c
 11864  0052E0  0012               	return		;funcret
 11865  0052E2                     __end_of_fputs:
 11866                           	opt callstack 0
 11867                           
 11868 ;; *************** function _fputc *****************
 11869 ;; Defined at:
 11870 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputc.c"
 11871 ;; Parameters:    Size  Location     Type
 11872 ;;  c               2  [STACK] int 
 11873 ;;  fp              2  [STACK] PTR struct _IO_FILE
 11874 ;;		 -> f(5), NULL(0), 
 11875 ;; Auto vars:     Size  Location     Type
 11876 ;;		None
 11877 ;; Return value:  Size  Location     Type
 11878 ;;                  2  [STACK] int 
 11879 ;; Registers used:
 11880 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 11881 ;; Tracked objects:
 11882 ;;		On entry : 0/0
 11883 ;;		On exit  : 0/0
 11884 ;;		Unchanged: 0/0
 11885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11886 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11887 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11888 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11889 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11890 ;;Total ram usage:        0 bytes
 11891 ;; Hardware stack levels used:    1
 11892 ;; Hardware stack levels required when called:    5
 11893 ;; This function calls:
 11894 ;;		_putch
 11895 ;; This function is called by:
 11896 ;;		_pad
 11897 ;;		_stoa
 11898 ;;		_vfpfcnvrt
 11899 ;;		_fputs
 11900 ;; This function uses a reentrant model
 11901 ;;
 11902                           
 11903                           	psect	text50
 11904  004A1A                     __ptext50:
 11905                           	opt callstack 0
 11906  004A1A                     _fputc:
 11907                           	opt callstack 21
 11908                           
 11909                           ;stkvar	_fp @ sp[(0)+-4]
 11910                           
 11911                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11912                           ;incstack = 0
 11913  004A1A  0EFC               	movlw	-4
 11914  004A1C  006F FF8C  F03B    	movff	plusw1,btemp
 11915  004A22  0EFD               	movlw	-3
 11916  004A24  50E3               	movf	plusw1,w,c
 11917  004A26  103B               	iorwf	btemp,w,c
 11918  004A28  B4D8               	btfsc	status,2,c
 11919  004A2A  D009               	goto	u4360
 11920                           
 11921                           ;stkvar	_fp @ sp[(0)+-4]
 11922  004A2C  0EFC               	movlw	-4
 11923  004A2E  006F FF8C  F03B    	movff	plusw1,btemp
 11924  004A34  0EFD               	movlw	-3
 11925  004A36  50E3               	movf	plusw1,w,c
 11926  004A38  103B               	iorwf	btemp,w,c
 11927  004A3A  A4D8               	btfss	status,2,c
 11928  004A3C  D006               	goto	l7571
 11929  004A3E                     u4360:
 11930                           
 11931                           ;stkvar	_c @ sp[(0)+-2]
 11932  004A3E  0EFE               	movlw	-2
 11933  004A40  50E3               	movf	plusw1,w,c
 11934  004A42  6EE6               	movwf	postinc1,c
 11935  004A44  EC2D  F030         	call	_putch	;wreg free
 11936  004A48  D069               	goto	l2556
 11937  004A4A                     l7571:
 11938                           
 11939                           ;stkvar	_fp @ sp[(0)+-4]
 11940  004A4A  0EFC               	movlw	-4
 11941  004A4C  006F FF8C  F045    	movff	plusw1,btemp+10
 11942  004A52  0EFD               	movlw	-3
 11943  004A54  006F FF8C  F046    	movff	plusw1,btemp+11
 11944  004A5A  0E03               	movlw	3
 11945  004A5C  2445               	addwf	btemp+10,w,c
 11946  004A5E  6ED9               	movwf	fsr2l,c
 11947  004A60  0E00               	movlw	0
 11948  004A62  2046               	addwfc	btemp+11,w,c
 11949  004A64  6EDA               	movwf	fsr2h,c
 11950  004A66  50DE               	movf	postinc2,w,c
 11951  004A68  10DE               	iorwf	postinc2,w,c
 11952  004A6A  B4D8               	btfsc	status,2,c
 11953  004A6C  D026               	goto	u4380
 11954                           
 11955                           ;stkvar	_fp @ sp[(0)+-4]
 11956  004A6E  0EFC               	movlw	-4
 11957  004A70  006F FF8C  F045    	movff	plusw1,btemp+10
 11958  004A76  0EFD               	movlw	-3
 11959  004A78  006F FF8C  F046    	movff	plusw1,btemp+11
 11960  004A7E  0E03               	movlw	3
 11961  004A80  2445               	addwf	btemp+10,w,c
 11962  004A82  6ED9               	movwf	fsr2l,c
 11963  004A84  0E00               	movlw	0
 11964  004A86  2046               	addwfc	btemp+11,w,c
 11965  004A88  6EDA               	movwf	fsr2h,c
 11966                           
 11967                           ;stkvar	_fp @ sp[(0)+-4]
 11968  004A8A  0EFC               	movlw	-4
 11969  004A8C  006F FF8C  F045    	movff	plusw1,btemp+10
 11970  004A92  0EFD               	movlw	-3
 11971  004A94  006F FF8C  F046    	movff	plusw1,btemp+11
 11972  004A9A  0E01               	movlw	1
 11973  004A9C  2445               	addwf	btemp+10,w,c
 11974  004A9E  6EE9               	movwf	fsr0l,c
 11975  004AA0  0E00               	movlw	0
 11976  004AA2  2046               	addwfc	btemp+11,w,c
 11977  004AA4  6EEA               	movwf	fsr0h,c
 11978  004AA6  50DE               	movf	postinc2,w,c
 11979  004AA8  5CEE               	subwf	postinc0,w,c
 11980  004AAA  50EE               	movf	postinc0,w,c
 11981  004AAC  0A80               	xorlw	128
 11982  004AAE  6E3B               	movwf	btemp,c
 11983  004AB0  50DE               	movf	postinc2,w,c
 11984  004AB2  0A80               	xorlw	128
 11985  004AB4  583B               	subwfb	btemp,w,c
 11986  004AB6  B0D8               	btfsc	status,0,c
 11987  004AB8  D031               	goto	l2556
 11988  004ABA                     u4380:
 11989                           
 11990                           ;stkvar	_c @ sp[(0)+-2]
 11991                           ;stkvar	_fp @ sp[(0)+-4]
 11992  004ABA  0EFC               	movlw	-4
 11993  004ABC  006F FF8C  F045    	movff	plusw1,btemp+10
 11994  004AC2  0EFD               	movlw	-3
 11995  004AC4  006F FF8C  F046    	movff	plusw1,btemp+11
 11996  004ACA  0E01               	movlw	1
 11997  004ACC  2445               	addwf	btemp+10,w,c
 11998  004ACE  6ED9               	movwf	fsr2l,c
 11999  004AD0  0E00               	movlw	0
 12000  004AD2  2046               	addwfc	btemp+11,w,c
 12001  004AD4  6EDA               	movwf	fsr2h,c
 12002  004AD6  50DF               	movf	indf2,w,c
 12003  004AD8  6E46               	movwf	btemp+11,c
 12004                           
 12005                           ;stkvar	_fp @ sp[(0)+-4]
 12006  004ADA  0EFC               	movlw	-4
 12007  004ADC  006F FF8F FFD9     	movff	plusw1,fsr2l
 12008  004AE2  0EFD               	movlw	-3
 12009  004AE4  006F FF8F FFDA     	movff	plusw1,fsr2h
 12010  004AEA  50DF               	movf	indf2,w,c
 12011  004AEC  2446               	addwf	btemp+11,w,c
 12012  004AEE  6ED9               	movwf	fsr2l,c
 12013  004AF0  6ADA               	clrf	fsr2h,c
 12014  004AF2  0EFE               	movlw	-2
 12015  004AF4  006F FF8F FFDF     	movff	plusw1,indf2
 12016                           
 12017                           ;stkvar	_fp @ sp[(0)+-4]
 12018  004AFA  0EFC               	movlw	-4
 12019  004AFC  006F FF8C  F045    	movff	plusw1,btemp+10
 12020  004B02  0EFD               	movlw	-3
 12021  004B04  006F FF8C  F046    	movff	plusw1,btemp+11
 12022  004B0A  0E01               	movlw	1
 12023  004B0C  2445               	addwf	btemp+10,w,c
 12024  004B0E  6ED9               	movwf	fsr2l,c
 12025  004B10  0E00               	movlw	0
 12026  004B12  2046               	addwfc	btemp+11,w,c
 12027  004B14  6EDA               	movwf	fsr2h,c
 12028  004B16  2ADE               	incf	postinc2,f,c
 12029  004B18  0E00               	movlw	0
 12030  004B1A  22DD               	addwfc	postdec2,f,c
 12031  004B1C                     l2556:
 12032                           
 12033                           ; _fputc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 12034  004B1C  52E5               	movf	postdec1,f,c
 12035  004B1E  52E5               	movf	postdec1,f,c
 12036  004B20  52E5               	movf	postdec1,f,c
 12037  004B22  52E5               	movf	postdec1,f,c
 12038  004B24  0012               	return		;funcret
 12039  004B26                     __end_of_fputc:
 12040                           	opt callstack 0
 12041                           
 12042 ;; *************** function _putch *****************
 12043 ;; Defined at:
 12044 ;;		line 138 in file "eadog.c"
 12045 ;; Parameters:    Size  Location     Type
 12046 ;;  c               1  [STACK] unsigned char 
 12047 ;; Auto vars:     Size  Location     Type
 12048 ;;		None
 12049 ;; Return value:  Size  Location     Type
 12050 ;;                  1  [STACK] void 
 12051 ;; Registers used:
 12052 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 12053 ;; Tracked objects:
 12054 ;;		On entry : 0/0
 12055 ;;		On exit  : 0/0
 12056 ;;		Unchanged: 0/0
 12057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12058 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12059 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12060 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12061 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12062 ;;Total ram usage:        0 bytes
 12063 ;; Hardware stack levels used:    1
 12064 ;; Hardware stack levels required when called:    4
 12065 ;; This function calls:
 12066 ;;		_ringBufS_put_dma
 12067 ;; This function is called by:
 12068 ;;		_fputc
 12069 ;; This function uses a reentrant model
 12070 ;;
 12071                           
 12072                           	psect	text51
 12073  00605A                     __ptext51:
 12074                           	opt callstack 0
 12075  00605A                     _putch:
 12076                           	opt callstack 21
 12077                           
 12078                           ;eadog.c: 138: void putch(char c);eadog.c: 139: {;eadog.c: 140:  ringBufS_put_dma(spi_li
      +                          nk.tx1a, c);
 12079                           ;stkvar	_c @ sp[(0)+-1]
 12080                           
 12081                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12082                           ;incstack = 0
 12083  00605A  0EFF               	movlw	-1
 12084  00605C  50E3               	movf	plusw1,w,c
 12085  00605E  6EE6               	movwf	postinc1,c
 12086  006060  0060  F34F  FFE6   	movff	_spi_link+6,postinc1
 12087  006066  0060  F353  FFE6   	movff	_spi_link+7,postinc1
 12088  00606C  EC95  F027         	call	_ringBufS_put_dma	;wreg free
 12089                           
 12090                           ; _putch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
 12091  006070  52E5               	movf	postdec1,f,c
 12092  006072  0012               	return		;funcret
 12093  006074                     __end_of_putch:
 12094                           	opt callstack 0
 12095                           
 12096 ;; *************** function _ringBufS_put_dma *****************
 12097 ;; Defined at:
 12098 ;;		line 67 in file "ringbufs.c"
 12099 ;; Parameters:    Size  Location     Type
 12100 ;;  _this           2  [STACK] PTR struct ringBufS_t
 12101 ;;		 -> ring_buf1(67), 
 12102 ;;  c               1  [STACK] const unsigned char 
 12103 ;; Auto vars:     Size  Location     Type
 12104 ;;		None
 12105 ;; Return value:  Size  Location     Type
 12106 ;;                  1  [STACK] void 
 12107 ;; Registers used:
 12108 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 12109 ;; Tracked objects:
 12110 ;;		On entry : 0/0
 12111 ;;		On exit  : 0/0
 12112 ;;		Unchanged: 0/0
 12113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12114 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12115 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12116 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12117 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12118 ;;Total ram usage:        0 bytes
 12119 ;; Hardware stack levels used:    1
 12120 ;; Hardware stack levels required when called:    3
 12121 ;; This function calls:
 12122 ;;		Nothing
 12123 ;; This function is called by:
 12124 ;;		_putch
 12125 ;; This function uses a reentrant model
 12126 ;;
 12127                           
 12128                           	psect	text52
 12129  004F2A                     __ptext52:
 12130                           	opt callstack 0
 12131  004F2A                     _ringBufS_put_dma:
 12132                           	opt callstack 21
 12133                           
 12134                           ;ringbufs.c: 67: void ringBufS_put_dma(ringBufS_t *_this, const uint8_t c);ringbufs.c: 6
      +                          8: {;ringbufs.c: 69:  if (_this->count < 64) {
 12135                           ;stkvar	__this @ sp[(0)+-2]
 12136                           
 12137                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12138                           ;incstack = 0
 12139  004F2A  0EFE               	movlw	-2
 12140  004F2C  006F FF8C  F045    	movff	plusw1,btemp+10
 12141  004F32  0EFF               	movlw	-1
 12142  004F34  006F FF8C  F046    	movff	plusw1,btemp+11
 12143  004F3A  0E42               	movlw	66
 12144  004F3C  2445               	addwf	btemp+10,w,c
 12145  004F3E  6ED9               	movwf	fsr2l,c
 12146  004F40  0E00               	movlw	0
 12147  004F42  2046               	addwfc	btemp+11,w,c
 12148  004F44  6EDA               	movwf	fsr2h,c
 12149  004F46  0E40               	movlw	64
 12150  004F48  60DF               	cpfslt	indf2,c
 12151  004F4A  D040               	goto	l1456
 12152                           
 12153                           ;ringbufs.c: 70:   _this->buf[_this->head] = c;
 12154                           ;stkvar	_c @ sp[(0)+-3]
 12155                           ;stkvar	__this @ sp[(0)+-2]
 12156  004F4C  0EFE               	movlw	-2
 12157  004F4E  006F FF8C  F045    	movff	plusw1,btemp+10
 12158  004F54  0EFF               	movlw	-1
 12159  004F56  006F FF8C  F046    	movff	plusw1,btemp+11
 12160  004F5C  0E40               	movlw	64
 12161  004F5E  2445               	addwf	btemp+10,w,c
 12162  004F60  6ED9               	movwf	fsr2l,c
 12163  004F62  0E00               	movlw	0
 12164  004F64  2046               	addwfc	btemp+11,w,c
 12165  004F66  6EDA               	movwf	fsr2h,c
 12166  004F68  50DF               	movf	indf2,w,c
 12167  004F6A  6E46               	movwf	btemp+11,c
 12168                           
 12169                           ;stkvar	__this @ sp[(0)+-2]
 12170  004F6C  0EFE               	movlw	-2
 12171  004F6E  006F FF8C  F043    	movff	plusw1,btemp+8
 12172  004F74  0EFF               	movlw	-1
 12173  004F76  006F FF8C  F044    	movff	plusw1,btemp+9
 12174  004F7C  5046               	movf	btemp+11,w,c
 12175  004F7E  2443               	addwf	btemp+8,w,c
 12176  004F80  6ED9               	movwf	fsr2l,c
 12177  004F82  0E00               	movlw	0
 12178  004F84  2044               	addwfc	btemp+9,w,c
 12179  004F86  6EDA               	movwf	fsr2h,c
 12180  004F88  0EFD               	movlw	-3
 12181  004F8A  006F FF8F FFDF     	movff	plusw1,indf2
 12182                           
 12183                           ;ringbufs.c: 71:   ++_this->head;
 12184                           ;stkvar	__this @ sp[(0)+-2]
 12185  004F90  0EFE               	movlw	-2
 12186  004F92  006F FF8C  F045    	movff	plusw1,btemp+10
 12187  004F98  0EFF               	movlw	-1
 12188  004F9A  006F FF8C  F046    	movff	plusw1,btemp+11
 12189  004FA0  0E40               	movlw	64
 12190  004FA2  2445               	addwf	btemp+10,w,c
 12191  004FA4  6ED9               	movwf	fsr2l,c
 12192  004FA6  0E00               	movlw	0
 12193  004FA8  2046               	addwfc	btemp+11,w,c
 12194  004FAA  6EDA               	movwf	fsr2h,c
 12195  004FAC  2ADF               	incf	indf2,f,c
 12196                           
 12197                           ;ringbufs.c: 72:   ++_this->count;
 12198                           ;stkvar	__this @ sp[(0)+-2]
 12199  004FAE  0EFE               	movlw	-2
 12200  004FB0  006F FF8C  F045    	movff	plusw1,btemp+10
 12201  004FB6  0EFF               	movlw	-1
 12202  004FB8  006F FF8C  F046    	movff	plusw1,btemp+11
 12203  004FBE  0E42               	movlw	66
 12204  004FC0  2445               	addwf	btemp+10,w,c
 12205  004FC2  6ED9               	movwf	fsr2l,c
 12206  004FC4  0E00               	movlw	0
 12207  004FC6  2046               	addwfc	btemp+11,w,c
 12208  004FC8  6EDA               	movwf	fsr2h,c
 12209  004FCA  2ADF               	incf	indf2,f,c
 12210  004FCC                     l1456:
 12211                           
 12212                           ; _ringBufS_put_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 12213  004FCC  52E5               	movf	postdec1,f,c
 12214  004FCE  52E5               	movf	postdec1,f,c
 12215  004FD0  52E5               	movf	postdec1,f,c
 12216  004FD2  0012               	return		;funcret
 12217  004FD4                     __end_of_ringBufS_put_dma:
 12218                           	opt callstack 0
 12219                           
 12220 ;; *************** function _SYSTEM_Initialize *****************
 12221 ;; Defined at:
 12222 ;;		line 50 in file "mcc_generated_files/mcc.c"
 12223 ;; Parameters:    Size  Location     Type
 12224 ;;		None
 12225 ;; Auto vars:     Size  Location     Type
 12226 ;;		None
 12227 ;; Return value:  Size  Location     Type
 12228 ;;                  1  [STACK] void 
 12229 ;; Registers used:
 12230 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11
 12231 ;; Tracked objects:
 12232 ;;		On entry : 0/0
 12233 ;;		On exit  : 3F/3C
 12234 ;;		Unchanged: 0/0
 12235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12236 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12237 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12238 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12239 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12240 ;;Total ram usage:        0 bytes
 12241 ;; Hardware stack levels used:    1
 12242 ;; Hardware stack levels required when called:    5
 12243 ;; This function calls:
 12244 ;;		_ADCC_Initialize
 12245 ;;		_CLC1_Initialize
 12246 ;;		_CLKREF_Initialize
 12247 ;;		_DMA1_Initialize
 12248 ;;		_DSM_Initialize
 12249 ;;		_EXT_INT_Initialize
 12250 ;;		_INTERRUPT_Initialize
 12251 ;;		_NCO1_Initialize
 12252 ;;		_OSCILLATOR_Initialize
 12253 ;;		_PIN_MANAGER_Initialize
 12254 ;;		_PMD_Initialize
 12255 ;;		_SPI1_Initialize
 12256 ;;		_TMR5_Initialize
 12257 ;;		_TMR6_Initialize
 12258 ;;		_UART1_Initialize
 12259 ;;		_UART2_Initialize
 12260 ;; This function is called by:
 12261 ;;		_main
 12262 ;; This function uses a reentrant model
 12263 ;;
 12264                           
 12265                           	psect	text53
 12266  005862                     __ptext53:
 12267                           	opt callstack 0
 12268  005862                     _SYSTEM_Initialize:
 12269                           	opt callstack 25
 12270                           
 12271                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 12272                           
 12273                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12274                           ;incstack = 0
 12275  005862  EC33  F02A         	call	_INTERRUPT_Initialize	;wreg free
 12276                           
 12277                           ; BSR set to: 57
 12278                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 12279  005866  EC6A  F030         	call	_PMD_Initialize	;wreg free
 12280                           
 12281                           ; BSR set to: 57
 12282                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 12283  00586A  EC3B  F028         	call	_PIN_MANAGER_Initialize	;wreg free
 12284                           
 12285                           ; BSR set to: 58
 12286                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 12287  00586E  EC5F  F030         	call	_OSCILLATOR_Initialize	;wreg free
 12288                           
 12289                           ; BSR set to: 57
 12290                           ;mcc_generated_files/mcc.c: 56:     ADCC_Initialize();
 12291  005872  ECA3  F02B         	call	_ADCC_Initialize	;wreg free
 12292                           
 12293                           ;mcc_generated_files/mcc.c: 57:     NCO1_Initialize();
 12294  005876  EC11  F030         	call	_NCO1_Initialize	;wreg free
 12295                           
 12296                           ; BSR set to: 63
 12297                           ;mcc_generated_files/mcc.c: 58:     EXT_INT_Initialize();
 12298  00587A  EC7D  F02B         	call	_EXT_INT_Initialize	;wreg free
 12299                           
 12300                           ; BSR set to: 57
 12301                           ;mcc_generated_files/mcc.c: 59:     TMR6_Initialize();
 12302  00587E  EC7F  F02E         	call	_TMR6_Initialize	;wreg free
 12303                           
 12304                           ;mcc_generated_files/mcc.c: 60:     CLC1_Initialize();
 12305  005882  EC90  F02F         	call	_CLC1_Initialize	;wreg free
 12306                           
 12307                           ; BSR set to: 60
 12308                           ;mcc_generated_files/mcc.c: 61:     TMR5_Initialize();
 12309  005886  ECEB  F02B         	call	_TMR5_Initialize	;wreg free
 12310                           
 12311                           ;mcc_generated_files/mcc.c: 62:     DSM_Initialize();
 12312  00588A  EC1F  F030         	call	_DSM_Initialize	;wreg free
 12313                           
 12314                           ; BSR set to: 60
 12315                           ;mcc_generated_files/mcc.c: 63:     UART1_Initialize();
 12316  00588E  EC66  F02A         	call	_UART1_Initialize	;wreg free
 12317                           
 12318                           ; BSR set to: 57
 12319                           ;mcc_generated_files/mcc.c: 64:     UART2_Initialize();
 12320  005892  ECF9  F02A         	call	_UART2_Initialize	;wreg free
 12321                           
 12322                           ; BSR set to: 57
 12323                           ;mcc_generated_files/mcc.c: 65:     SPI1_Initialize();
 12324  005896  EC54  F030         	call	_SPI1_Initialize	;wreg free
 12325                           
 12326                           ; BSR set to: 61
 12327                           ;mcc_generated_files/mcc.c: 66:     DMA1_Initialize();
 12328  00589A  ECFE  F029         	call	_DMA1_Initialize	;wreg free
 12329                           
 12330                           ; BSR set to: 59
 12331                           ;mcc_generated_files/mcc.c: 67:     CLKREF_Initialize();
 12332  00589E  EC9B  F030         	call	_CLKREF_Initialize	;wreg free
 12333                           
 12334                           ; BSR set to: 60
 12335                           ; _SYSTEM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 12336  0058A2  0012               	return		;funcret
 12337  0058A4                     __end_of_SYSTEM_Initialize:
 12338                           	opt callstack 0
 12339                           
 12340 ;; *************** function _UART2_Initialize *****************
 12341 ;; Defined at:
 12342 ;;		line 78 in file "mcc_generated_files/uart2.c"
 12343 ;; Parameters:    Size  Location     Type
 12344 ;;		None
 12345 ;; Auto vars:     Size  Location     Type
 12346 ;;		None
 12347 ;; Return value:  Size  Location     Type
 12348 ;;                  1  [STACK] void 
 12349 ;; Registers used:
 12350 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 12351 ;; Tracked objects:
 12352 ;;		On entry : 3F/39
 12353 ;;		On exit  : 3F/39
 12354 ;;		Unchanged: 0/0
 12355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12356 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12357 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12358 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12359 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12360 ;;Total ram usage:        0 bytes
 12361 ;; Hardware stack levels used:    1
 12362 ;; Hardware stack levels required when called:    4
 12363 ;; This function calls:
 12364 ;;		_UART2_SetRxInterruptHandler
 12365 ;;		_UART2_SetTxInterruptHandler
 12366 ;; This function is called by:
 12367 ;;		_SYSTEM_Initialize
 12368 ;; This function uses a reentrant model
 12369 ;;
 12370                           
 12371                           	psect	text54
 12372  0055F2                     __ptext54:
 12373                           	opt callstack 0
 12374  0055F2                     _UART2_Initialize:
 12375                           	opt callstack 25
 12376                           
 12377                           ;mcc_generated_files/uart2.c: 81:     PIE6bits.U2RXIE = 0;
 12378                           
 12379                           ; BSR set to: 60
 12380                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12381                           ;incstack = 0
 12382  0055F2  0139               	movlb	57	; () banked
 12383  0055F4  9596               	bcf	150,2,b	;volatile
 12384                           
 12385                           ; BSR set to: 57
 12386                           ;mcc_generated_files/uart2.c: 82:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
 12387  0055F6  0EC8               	movlw	low _UART2_Receive_ISR
 12388  0055F8  6EE6               	movwf	postinc1,c
 12389  0055FA  0E5F               	movlw	high _UART2_Receive_ISR
 12390  0055FC  6EE6               	movwf	postinc1,c
 12391  0055FE  0E00               	movlw	low (_UART2_Receive_ISR shr (0+16))
 12392  005600  6EE6               	movwf	postinc1,c
 12393  005602  EC43  F02E         	call	_UART2_SetRxInterruptHandler	;wreg free
 12394                           
 12395                           ;mcc_generated_files/uart2.c: 83:     PIE6bits.U2TXIE = 0;
 12396  005606  0139               	movlb	57	; () banked
 12397  005608  9796               	bcf	150,3,b	;volatile
 12398                           
 12399                           ;mcc_generated_files/uart2.c: 84:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
 12400  00560A  0E12               	movlw	low _UART2_Transmit_ISR
 12401  00560C  6EE6               	movwf	postinc1,c
 12402  00560E  0E5B               	movlw	high _UART2_Transmit_ISR
 12403  005610  6EE6               	movwf	postinc1,c
 12404  005612  0E00               	movlw	low (_UART2_Transmit_ISR shr (0+16))
 12405  005614  6EE6               	movwf	postinc1,c
 12406  005616  EC2F  F02E         	call	_UART2_SetTxInterruptHandler	;wreg free
 12407                           
 12408                           ;mcc_generated_files/uart2.c: 89:     U2P1L = 0x00;
 12409  00561A  013D               	movlb	61	; () banked
 12410  00561C  6BD4               	clrf	212,b	;volatile
 12411                           
 12412                           ; BSR set to: 61
 12413                           ;mcc_generated_files/uart2.c: 92:     U2P2L = 0x00;
 12414  00561E  6BD6               	clrf	214,b	;volatile
 12415                           
 12416                           ; BSR set to: 61
 12417                           ;mcc_generated_files/uart2.c: 95:     U2P3L = 0x00;
 12418  005620  6BD8               	clrf	216,b	;volatile
 12419                           
 12420                           ; BSR set to: 61
 12421                           ;mcc_generated_files/uart2.c: 98:     U2CON0 = 0xB0;
 12422  005622  0EB0               	movlw	176
 12423  005624  6FDA               	movwf	218,b	;volatile
 12424                           
 12425                           ; BSR set to: 61
 12426                           ;mcc_generated_files/uart2.c: 101:     U2CON1 = 0x80;
 12427  005626  0E80               	movlw	128
 12428  005628  6FDB               	movwf	219,b	;volatile
 12429                           
 12430                           ; BSR set to: 61
 12431                           ;mcc_generated_files/uart2.c: 104:     U2CON2 = 0x00;
 12432  00562A  6BDC               	clrf	220,b	;volatile
 12433                           
 12434                           ; BSR set to: 61
 12435                           ;mcc_generated_files/uart2.c: 107:     U2BRGL = 0x82;
 12436  00562C  0E82               	movlw	130
 12437  00562E  6FDD               	movwf	221,b	;volatile
 12438                           
 12439                           ; BSR set to: 61
 12440                           ;mcc_generated_files/uart2.c: 110:     U2BRGH = 0x06;
 12441  005630  0E06               	movlw	6
 12442  005632  6FDE               	movwf	222,b	;volatile
 12443                           
 12444                           ; BSR set to: 61
 12445                           ;mcc_generated_files/uart2.c: 113:     U2FIFO = 0x00;
 12446  005634  6BDF               	clrf	223,b	;volatile
 12447                           
 12448                           ; BSR set to: 61
 12449                           ;mcc_generated_files/uart2.c: 116:     U2UIR = 0x00;
 12450  005636  6BE0               	clrf	224,b	;volatile
 12451                           
 12452                           ; BSR set to: 61
 12453                           ;mcc_generated_files/uart2.c: 119:     U2ERRIR = 0x00;
 12454  005638  6BE1               	clrf	225,b	;volatile
 12455                           
 12456                           ; BSR set to: 61
 12457                           ;mcc_generated_files/uart2.c: 122:     U2ERRIE = 0x00;
 12458  00563A  6BE2               	clrf	226,b	;volatile
 12459                           
 12460                           ; BSR set to: 61
 12461                           ;mcc_generated_files/uart2.c: 126:     uart2TxHead = 0;
 12462  00563C  6A34               	clrf	_uart2TxHead,c	;volatile
 12463                           
 12464                           ; BSR set to: 61
 12465                           ;mcc_generated_files/uart2.c: 127:     uart2TxTail = 0;
 12466  00563E  6A33               	clrf	_uart2TxTail,c	;volatile
 12467                           
 12468                           ; BSR set to: 61
 12469                           ;mcc_generated_files/uart2.c: 128:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
 12470  005640  0E40               	movlw	64
 12471  005642  6E32               	movwf	_uart2TxBufferRemaining,c	;volatile
 12472                           
 12473                           ; BSR set to: 61
 12474                           ;mcc_generated_files/uart2.c: 129:     uart2RxHead = 0;
 12475  005644  6A31               	clrf	_uart2RxHead,c	;volatile
 12476                           
 12477                           ; BSR set to: 61
 12478                           ;mcc_generated_files/uart2.c: 130:     uart2RxTail = 0;
 12479  005646  6A30               	clrf	_uart2RxTail,c	;volatile
 12480                           
 12481                           ; BSR set to: 61
 12482                           ;mcc_generated_files/uart2.c: 131:     uart2RxCount = 0;
 12483  005648  6A2F               	clrf	_uart2RxCount,c	;volatile
 12484                           
 12485                           ; BSR set to: 61
 12486                           ;mcc_generated_files/uart2.c: 134:     PIE6bits.U2RXIE = 1;
 12487  00564A  0139               	movlb	57	; () banked
 12488  00564C  8596               	bsf	150,2,b	;volatile
 12489                           
 12490                           ; BSR set to: 57
 12491                           ; _UART2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 12492  00564E  0012               	return		;funcret
 12493  005650                     __end_of_UART2_Initialize:
 12494                           	opt callstack 0
 12495                           
 12496 ;; *************** function _UART2_SetTxInterruptHandler *****************
 12497 ;; Defined at:
 12498 ;;		line 252 in file "mcc_generated_files/uart2.c"
 12499 ;; Parameters:    Size  Location     Type
 12500 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 12501 ;;		 -> UART2_Transmit_ISR(1), 
 12502 ;; Auto vars:     Size  Location     Type
 12503 ;;		None
 12504 ;; Return value:  Size  Location     Type
 12505 ;;                  1  [STACK] void 
 12506 ;; Registers used:
 12507 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 12508 ;; Tracked objects:
 12509 ;;		On entry : 3F/39
 12510 ;;		On exit  : 0/0
 12511 ;;		Unchanged: 0/0
 12512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12513 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12514 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12515 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12516 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12517 ;;Total ram usage:        0 bytes
 12518 ;; Hardware stack levels used:    1
 12519 ;; Hardware stack levels required when called:    3
 12520 ;; This function calls:
 12521 ;;		Nothing
 12522 ;; This function is called by:
 12523 ;;		_UART2_Initialize
 12524 ;; This function uses a reentrant model
 12525 ;;
 12526                           
 12527                           	psect	text55
 12528  005C5E                     __ptext55:
 12529                           	opt callstack 0
 12530  005C5E                     _UART2_SetTxInterruptHandler:
 12531                           	opt callstack 25
 12532                           
 12533                           ;mcc_generated_files/uart2.c: 253:     UART2_TxInterruptHandler = InterruptHandler;
 12534                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 12535                           
 12536                           ; BSR set to: 57
 12537                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12538                           ;incstack = 0
 12539  005C5E  50E1               	movf	fsr1l,w,c
 12540  005C60  0FFD               	addlw	-3
 12541  005C62  6ED9               	movwf	fsr2l,c
 12542  005C64  50E2               	movf	fsr1h,w,c
 12543  005C66  6EDA               	movwf	fsr2h,c
 12544  005C68  0EFF               	movlw	255
 12545  005C6A  22DA               	addwfc	fsr2h,f,c
 12546  005C6C  006F FF78  F011    	movff	postinc2,_UART2_TxInterruptHandler
 12547  005C72  006F FF78  F012    	movff	postinc2,_UART2_TxInterruptHandler+1
 12548  005C78  006F FF74  F013    	movff	postdec2,_UART2_TxInterruptHandler+2
 12549                           
 12550                           ; _UART2_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 12551  005C7E  52E5               	movf	postdec1,f,c
 12552  005C80  52E5               	movf	postdec1,f,c
 12553  005C82  52E5               	movf	postdec1,f,c
 12554  005C84  0012               	return		;funcret
 12555  005C86                     __end_of_UART2_SetTxInterruptHandler:
 12556                           	opt callstack 0
 12557                           
 12558 ;; *************** function _UART2_SetRxInterruptHandler *****************
 12559 ;; Defined at:
 12560 ;;		line 248 in file "mcc_generated_files/uart2.c"
 12561 ;; Parameters:    Size  Location     Type
 12562 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 12563 ;;		 -> UART2_Receive_ISR(1), 
 12564 ;; Auto vars:     Size  Location     Type
 12565 ;;		None
 12566 ;; Return value:  Size  Location     Type
 12567 ;;                  1  [STACK] void 
 12568 ;; Registers used:
 12569 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 12570 ;; Tracked objects:
 12571 ;;		On entry : 3F/39
 12572 ;;		On exit  : 0/0
 12573 ;;		Unchanged: 0/0
 12574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12575 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12576 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12578 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12579 ;;Total ram usage:        0 bytes
 12580 ;; Hardware stack levels used:    1
 12581 ;; Hardware stack levels required when called:    3
 12582 ;; This function calls:
 12583 ;;		Nothing
 12584 ;; This function is called by:
 12585 ;;		_UART2_Initialize
 12586 ;; This function uses a reentrant model
 12587 ;;
 12588                           
 12589                           	psect	text56
 12590  005C86                     __ptext56:
 12591                           	opt callstack 0
 12592  005C86                     _UART2_SetRxInterruptHandler:
 12593                           	opt callstack 25
 12594                           
 12595                           ;mcc_generated_files/uart2.c: 249:     UART2_RxInterruptHandler = InterruptHandler;
 12596                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 12597                           
 12598                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12599                           ;incstack = 0
 12600  005C86  50E1               	movf	fsr1l,w,c
 12601  005C88  0FFD               	addlw	-3
 12602  005C8A  6ED9               	movwf	fsr2l,c
 12603  005C8C  50E2               	movf	fsr1h,w,c
 12604  005C8E  6EDA               	movwf	fsr2h,c
 12605  005C90  0EFF               	movlw	255
 12606  005C92  22DA               	addwfc	fsr2h,f,c
 12607  005C94  006F FF78  F014    	movff	postinc2,_UART2_RxInterruptHandler
 12608  005C9A  006F FF78  F015    	movff	postinc2,_UART2_RxInterruptHandler+1
 12609  005CA0  006F FF74  F016    	movff	postdec2,_UART2_RxInterruptHandler+2
 12610                           
 12611                           ; _UART2_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 12612  005CA6  52E5               	movf	postdec1,f,c
 12613  005CA8  52E5               	movf	postdec1,f,c
 12614  005CAA  52E5               	movf	postdec1,f,c
 12615  005CAC  0012               	return		;funcret
 12616  005CAE                     __end_of_UART2_SetRxInterruptHandler:
 12617                           	opt callstack 0
 12618                           
 12619 ;; *************** function _UART1_Initialize *****************
 12620 ;; Defined at:
 12621 ;;		line 78 in file "mcc_generated_files/uart1.c"
 12622 ;; Parameters:    Size  Location     Type
 12623 ;;		None
 12624 ;; Auto vars:     Size  Location     Type
 12625 ;;		None
 12626 ;; Return value:  Size  Location     Type
 12627 ;;                  1  [STACK] void 
 12628 ;; Registers used:
 12629 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 12630 ;; Tracked objects:
 12631 ;;		On entry : 3F/3C
 12632 ;;		On exit  : 3F/39
 12633 ;;		Unchanged: 0/0
 12634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12635 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12636 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12637 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12638 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12639 ;;Total ram usage:        0 bytes
 12640 ;; Hardware stack levels used:    1
 12641 ;; Hardware stack levels required when called:    4
 12642 ;; This function calls:
 12643 ;;		_UART1_SetRxInterruptHandler
 12644 ;;		_UART1_SetTxInterruptHandler
 12645 ;; This function is called by:
 12646 ;;		_SYSTEM_Initialize
 12647 ;; This function uses a reentrant model
 12648 ;;
 12649                           
 12650                           	psect	text57
 12651  0054CC                     __ptext57:
 12652                           	opt callstack 0
 12653  0054CC                     _UART1_Initialize:
 12654                           	opt callstack 25
 12655                           
 12656                           ;mcc_generated_files/uart1.c: 81:  PIE3bits.U1RXIE = 0;
 12657                           
 12658                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12659                           ;incstack = 0
 12660  0054CC  0139               	movlb	57	; () banked
 12661  0054CE  9793               	bcf	147,3,b	;volatile
 12662                           
 12663                           ; BSR set to: 57
 12664                           ;mcc_generated_files/uart1.c: 82:  UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 12665  0054D0  0EA8               	movlw	low _UART1_Receive_ISR
 12666  0054D2  6EE6               	movwf	postinc1,c
 12667  0054D4  0E5F               	movlw	high _UART1_Receive_ISR
 12668  0054D6  6EE6               	movwf	postinc1,c
 12669  0054D8  0E00               	movlw	low (_UART1_Receive_ISR shr (0+16))
 12670  0054DA  6EE6               	movwf	postinc1,c
 12671  0054DC  EC6B  F02E         	call	_UART1_SetRxInterruptHandler	;wreg free
 12672                           
 12673                           ;mcc_generated_files/uart1.c: 83:  PIE3bits.U1TXIE = 0;
 12674  0054E0  0139               	movlb	57	; () banked
 12675  0054E2  9993               	bcf	147,4,b	;volatile
 12676                           
 12677                           ;mcc_generated_files/uart1.c: 84:  UART1_SetTxInterruptHandler(UART1_Transmit_ISR);
 12678  0054E4  0EE6               	movlw	low _UART1_Transmit_ISR
 12679  0054E6  6EE6               	movwf	postinc1,c
 12680  0054E8  0E5A               	movlw	high _UART1_Transmit_ISR
 12681  0054EA  6EE6               	movwf	postinc1,c
 12682  0054EC  0E00               	movlw	low (_UART1_Transmit_ISR shr (0+16))
 12683  0054EE  6EE6               	movwf	postinc1,c
 12684  0054F0  EC57  F02E         	call	_UART1_SetTxInterruptHandler	;wreg free
 12685                           
 12686                           ;mcc_generated_files/uart1.c: 89:  U1P1L = 0x00;
 12687  0054F4  013D               	movlb	61	; () banked
 12688  0054F6  6BEC               	clrf	236,b	;volatile
 12689                           
 12690                           ; BSR set to: 61
 12691                           ;mcc_generated_files/uart1.c: 92:  U1P1H = 0x00;
 12692  0054F8  6BED               	clrf	237,b	;volatile
 12693                           
 12694                           ; BSR set to: 61
 12695                           ;mcc_generated_files/uart1.c: 95:  U1P2L = 0x00;
 12696  0054FA  6BEE               	clrf	238,b	;volatile
 12697                           
 12698                           ; BSR set to: 61
 12699                           ;mcc_generated_files/uart1.c: 98:  U1P2H = 0x00;
 12700  0054FC  6BEF               	clrf	239,b	;volatile
 12701                           
 12702                           ; BSR set to: 61
 12703                           ;mcc_generated_files/uart1.c: 101:  U1P3L = 0x00;
 12704  0054FE  6BF0               	clrf	240,b	;volatile
 12705                           
 12706                           ; BSR set to: 61
 12707                           ;mcc_generated_files/uart1.c: 104:  U1P3H = 0x00;
 12708  005500  6BF1               	clrf	241,b	;volatile
 12709                           
 12710                           ; BSR set to: 61
 12711                           ;mcc_generated_files/uart1.c: 107:  U1CON0 = 0xB0;
 12712  005502  0EB0               	movlw	176
 12713  005504  6FF2               	movwf	242,b	;volatile
 12714                           
 12715                           ; BSR set to: 61
 12716                           ;mcc_generated_files/uart1.c: 110:  U1CON1 = 0x80;
 12717  005506  0E80               	movlw	128
 12718  005508  6FF3               	movwf	243,b	;volatile
 12719                           
 12720                           ; BSR set to: 61
 12721                           ;mcc_generated_files/uart1.c: 113:  U1CON2 = 0x00;
 12722  00550A  6BF4               	clrf	244,b	;volatile
 12723                           
 12724                           ; BSR set to: 61
 12725                           ;mcc_generated_files/uart1.c: 116:  U1BRGL = 0x82;
 12726  00550C  0E82               	movlw	130
 12727  00550E  6FF5               	movwf	245,b	;volatile
 12728                           
 12729                           ; BSR set to: 61
 12730                           ;mcc_generated_files/uart1.c: 119:  U1BRGH = 0x06;
 12731  005510  0E06               	movlw	6
 12732  005512  6FF6               	movwf	246,b	;volatile
 12733                           
 12734                           ; BSR set to: 61
 12735                           ;mcc_generated_files/uart1.c: 122:  U1FIFO = 0x00;
 12736  005514  6BF7               	clrf	247,b	;volatile
 12737                           
 12738                           ; BSR set to: 61
 12739                           ;mcc_generated_files/uart1.c: 125:  U1UIR = 0x00;
 12740  005516  6BF8               	clrf	248,b	;volatile
 12741                           
 12742                           ; BSR set to: 61
 12743                           ;mcc_generated_files/uart1.c: 128:  U1ERRIR = 0x00;
 12744  005518  6BF9               	clrf	249,b	;volatile
 12745                           
 12746                           ; BSR set to: 61
 12747                           ;mcc_generated_files/uart1.c: 131:  U1ERRIE = 0x00;
 12748  00551A  6BFA               	clrf	250,b	;volatile
 12749                           
 12750                           ; BSR set to: 61
 12751                           ;mcc_generated_files/uart1.c: 135:  uart1TxHead = 0;
 12752  00551C  6A3A               	clrf	_uart1TxHead,c	;volatile
 12753                           
 12754                           ; BSR set to: 61
 12755                           ;mcc_generated_files/uart1.c: 136:  uart1TxTail = 0;
 12756  00551E  6A39               	clrf	_uart1TxTail,c	;volatile
 12757                           
 12758                           ; BSR set to: 61
 12759                           ;mcc_generated_files/uart1.c: 137:  uart1TxBufferRemaining = sizeof(uart1TxBuffer);
 12760  005520  0E40               	movlw	64
 12761  005522  6E38               	movwf	_uart1TxBufferRemaining,c	;volatile
 12762                           
 12763                           ; BSR set to: 61
 12764                           ;mcc_generated_files/uart1.c: 138:  uart1RxHead = 0;
 12765  005524  6A37               	clrf	_uart1RxHead,c	;volatile
 12766                           
 12767                           ; BSR set to: 61
 12768                           ;mcc_generated_files/uart1.c: 139:  uart1RxTail = 0;
 12769  005526  6A36               	clrf	_uart1RxTail,c	;volatile
 12770                           
 12771                           ; BSR set to: 61
 12772                           ;mcc_generated_files/uart1.c: 140:  uart1RxCount = 0;
 12773  005528  6A35               	clrf	_uart1RxCount,c	;volatile
 12774                           
 12775                           ; BSR set to: 61
 12776                           ;mcc_generated_files/uart1.c: 143:  PIE3bits.U1RXIE = 1;
 12777  00552A  0139               	movlb	57	; () banked
 12778  00552C  8793               	bsf	147,3,b	;volatile
 12779                           
 12780                           ; BSR set to: 57
 12781                           ; _UART1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 12782  00552E  0012               	return		;funcret
 12783  005530                     __end_of_UART1_Initialize:
 12784                           	opt callstack 0
 12785                           
 12786 ;; *************** function _UART1_SetTxInterruptHandler *****************
 12787 ;; Defined at:
 12788 ;;		line 244 in file "mcc_generated_files/uart1.c"
 12789 ;; Parameters:    Size  Location     Type
 12790 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 12791 ;;		 -> UART1_Transmit_ISR(1), 
 12792 ;; Auto vars:     Size  Location     Type
 12793 ;;		None
 12794 ;; Return value:  Size  Location     Type
 12795 ;;                  1  [STACK] void 
 12796 ;; Registers used:
 12797 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 12798 ;; Tracked objects:
 12799 ;;		On entry : 3F/39
 12800 ;;		On exit  : 0/0
 12801 ;;		Unchanged: 0/0
 12802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12803 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12804 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12806 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12807 ;;Total ram usage:        0 bytes
 12808 ;; Hardware stack levels used:    1
 12809 ;; Hardware stack levels required when called:    3
 12810 ;; This function calls:
 12811 ;;		Nothing
 12812 ;; This function is called by:
 12813 ;;		_UART1_Initialize
 12814 ;; This function uses a reentrant model
 12815 ;;
 12816                           
 12817                           	psect	text58
 12818  005CAE                     __ptext58:
 12819                           	opt callstack 0
 12820  005CAE                     _UART1_SetTxInterruptHandler:
 12821                           	opt callstack 25
 12822                           
 12823                           ;mcc_generated_files/uart1.c: 244: void UART1_SetTxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 245: {;mcc_generated_files/uart1.c: 246:  UART
      +                          1_TxInterruptHandler = InterruptHandler;
 12824                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 12825                           
 12826                           ; BSR set to: 57
 12827                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12828                           ;incstack = 0
 12829  005CAE  50E1               	movf	fsr1l,w,c
 12830  005CB0  0FFD               	addlw	-3
 12831  005CB2  6ED9               	movwf	fsr2l,c
 12832  005CB4  50E2               	movf	fsr1h,w,c
 12833  005CB6  6EDA               	movwf	fsr2h,c
 12834  005CB8  0EFF               	movlw	255
 12835  005CBA  22DA               	addwfc	fsr2h,f,c
 12836  005CBC  006F FF78  F00B    	movff	postinc2,_UART1_TxInterruptHandler
 12837  005CC2  006F FF78  F00C    	movff	postinc2,_UART1_TxInterruptHandler+1
 12838  005CC8  006F FF74  F00D    	movff	postdec2,_UART1_TxInterruptHandler+2
 12839                           
 12840                           ; _UART1_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 12841  005CCE  52E5               	movf	postdec1,f,c
 12842  005CD0  52E5               	movf	postdec1,f,c
 12843  005CD2  52E5               	movf	postdec1,f,c
 12844  005CD4  0012               	return		;funcret
 12845  005CD6                     __end_of_UART1_SetTxInterruptHandler:
 12846                           	opt callstack 0
 12847                           
 12848 ;; *************** function _UART1_SetRxInterruptHandler *****************
 12849 ;; Defined at:
 12850 ;;		line 239 in file "mcc_generated_files/uart1.c"
 12851 ;; Parameters:    Size  Location     Type
 12852 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 12853 ;;		 -> UART1_Receive_ISR(1), 
 12854 ;; Auto vars:     Size  Location     Type
 12855 ;;		None
 12856 ;; Return value:  Size  Location     Type
 12857 ;;                  1  [STACK] void 
 12858 ;; Registers used:
 12859 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 12860 ;; Tracked objects:
 12861 ;;		On entry : 3F/39
 12862 ;;		On exit  : 0/0
 12863 ;;		Unchanged: 0/0
 12864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12865 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12866 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12867 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12868 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12869 ;;Total ram usage:        0 bytes
 12870 ;; Hardware stack levels used:    1
 12871 ;; Hardware stack levels required when called:    3
 12872 ;; This function calls:
 12873 ;;		Nothing
 12874 ;; This function is called by:
 12875 ;;		_UART1_Initialize
 12876 ;; This function uses a reentrant model
 12877 ;;
 12878                           
 12879                           	psect	text59
 12880  005CD6                     __ptext59:
 12881                           	opt callstack 0
 12882  005CD6                     _UART1_SetRxInterruptHandler:
 12883                           	opt callstack 25
 12884                           
 12885                           ;mcc_generated_files/uart1.c: 239: void UART1_SetRxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 240: {;mcc_generated_files/uart1.c: 241:  UART
      +                          1_RxInterruptHandler = InterruptHandler;
 12886                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 12887                           
 12888                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12889                           ;incstack = 0
 12890  005CD6  50E1               	movf	fsr1l,w,c
 12891  005CD8  0FFD               	addlw	-3
 12892  005CDA  6ED9               	movwf	fsr2l,c
 12893  005CDC  50E2               	movf	fsr1h,w,c
 12894  005CDE  6EDA               	movwf	fsr2h,c
 12895  005CE0  0EFF               	movlw	255
 12896  005CE2  22DA               	addwfc	fsr2h,f,c
 12897  005CE4  006F FF78  F00E    	movff	postinc2,_UART1_RxInterruptHandler
 12898  005CEA  006F FF78  F00F    	movff	postinc2,_UART1_RxInterruptHandler+1
 12899  005CF0  006F FF74  F010    	movff	postdec2,_UART1_RxInterruptHandler+2
 12900                           
 12901                           ; _UART1_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 12902  005CF6  52E5               	movf	postdec1,f,c
 12903  005CF8  52E5               	movf	postdec1,f,c
 12904  005CFA  52E5               	movf	postdec1,f,c
 12905  005CFC  0012               	return		;funcret
 12906  005CFE                     __end_of_UART1_SetRxInterruptHandler:
 12907                           	opt callstack 0
 12908                           
 12909 ;; *************** function _TMR6_Initialize *****************
 12910 ;; Defined at:
 12911 ;;		line 70 in file "mcc_generated_files/tmr6.c"
 12912 ;; Parameters:    Size  Location     Type
 12913 ;;		None
 12914 ;; Auto vars:     Size  Location     Type
 12915 ;;		None
 12916 ;; Return value:  Size  Location     Type
 12917 ;;                  1  [STACK] void 
 12918 ;; Registers used:
 12919 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 12920 ;; Tracked objects:
 12921 ;;		On entry : 3F/39
 12922 ;;		On exit  : 0/0
 12923 ;;		Unchanged: 0/0
 12924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12925 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12926 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12928 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12929 ;;Total ram usage:        0 bytes
 12930 ;; Hardware stack levels used:    1
 12931 ;; Hardware stack levels required when called:    4
 12932 ;; This function calls:
 12933 ;;		_TMR6_SetInterruptHandler
 12934 ;; This function is called by:
 12935 ;;		_SYSTEM_Initialize
 12936 ;; This function uses a reentrant model
 12937 ;;
 12938                           
 12939                           	psect	text60
 12940  005CFE                     __ptext60:
 12941                           	opt callstack 0
 12942  005CFE                     _TMR6_Initialize:
 12943                           	opt callstack 25
 12944                           
 12945                           ;mcc_generated_files/tmr6.c: 75:  T6CLKCON = 0x01;
 12946                           
 12947                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12948                           ;incstack = 0
 12949  005CFE  0E01               	movlw	1
 12950  005D00  6E96               	movwf	16278,c	;volatile
 12951                           
 12952                           ;mcc_generated_files/tmr6.c: 78:  T6HLT = 0x00;
 12953  005D02  6A95               	clrf	16277,c	;volatile
 12954                           
 12955                           ;mcc_generated_files/tmr6.c: 81:  T6RST = 0x00;
 12956  005D04  6A97               	clrf	16279,c	;volatile
 12957                           
 12958                           ;mcc_generated_files/tmr6.c: 84:  T6PR = 0x03;
 12959  005D06  0E03               	movlw	3
 12960  005D08  6E93               	movwf	16275,c	;volatile
 12961                           
 12962                           ;mcc_generated_files/tmr6.c: 87:  T6TMR = 0x00;
 12963  005D0A  6A92               	clrf	16274,c	;volatile
 12964                           
 12965                           ;mcc_generated_files/tmr6.c: 90:  PIR9bits.TMR6IF = 0;
 12966  005D0C  0139               	movlb	57	; () banked
 12967  005D0E  91A9               	bcf	169,0,b	;volatile
 12968                           
 12969                           ; BSR set to: 57
 12970                           ;mcc_generated_files/tmr6.c: 93:  PIE9bits.TMR6IE = 1;
 12971  005D10  8199               	bsf	153,0,b	;volatile
 12972                           
 12973                           ; BSR set to: 57
 12974                           ;mcc_generated_files/tmr6.c: 96:  TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandler)
      +                          ;
 12975  005D12  0E1C               	movlw	low _TMR6_DefaultInterruptHandler
 12976  005D14  6EE6               	movwf	postinc1,c
 12977  005D16  0E58               	movlw	high _TMR6_DefaultInterruptHandler
 12978  005D18  6EE6               	movwf	postinc1,c
 12979  005D1A  0E00               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 12980  005D1C  6EE6               	movwf	postinc1,c
 12981  005D1E  EC93  F02E         	call	_TMR6_SetInterruptHandler	;wreg free
 12982                           
 12983                           ;mcc_generated_files/tmr6.c: 99:  T6CON = 0xFF;
 12984  005D22  6894               	setf	16276,c	;volatile
 12985                           
 12986                           ; _TMR6_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 12987  005D24  0012               	return		;funcret
 12988  005D26                     __end_of_TMR6_Initialize:
 12989                           	opt callstack 0
 12990                           
 12991 ;; *************** function _TMR6_SetInterruptHandler *****************
 12992 ;; Defined at:
 12993 ;;		line 191 in file "mcc_generated_files/tmr6.c"
 12994 ;; Parameters:    Size  Location     Type
 12995 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 12996 ;;		 -> TMR6_DefaultInterruptHandler(1), 
 12997 ;; Auto vars:     Size  Location     Type
 12998 ;;		None
 12999 ;; Return value:  Size  Location     Type
 13000 ;;                  1  [STACK] void 
 13001 ;; Registers used:
 13002 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 13003 ;; Tracked objects:
 13004 ;;		On entry : 3F/39
 13005 ;;		On exit  : 0/0
 13006 ;;		Unchanged: 0/0
 13007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13008 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13009 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13010 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13011 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13012 ;;Total ram usage:        0 bytes
 13013 ;; Hardware stack levels used:    1
 13014 ;; Hardware stack levels required when called:    3
 13015 ;; This function calls:
 13016 ;;		Nothing
 13017 ;; This function is called by:
 13018 ;;		_TMR6_Initialize
 13019 ;; This function uses a reentrant model
 13020 ;;
 13021                           
 13022                           	psect	text61
 13023  005D26                     __ptext61:
 13024                           	opt callstack 0
 13025  005D26                     _TMR6_SetInterruptHandler:
 13026                           	opt callstack 25
 13027                           
 13028                           ;mcc_generated_files/tmr6.c: 191: void TMR6_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr6.c: 192: {;mcc_generated_files/tmr6.c: 193:  TMR6_Inter
      +                          ruptHandler = InterruptHandler;
 13029                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 13030                           
 13031                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13032                           ;incstack = 0
 13033  005D26  50E1               	movf	fsr1l,w,c
 13034  005D28  0FFD               	addlw	-3
 13035  005D2A  6ED9               	movwf	fsr2l,c
 13036  005D2C  50E2               	movf	fsr1h,w,c
 13037  005D2E  6EDA               	movwf	fsr2h,c
 13038  005D30  0EFF               	movlw	255
 13039  005D32  22DA               	addwfc	fsr2h,f,c
 13040  005D34  006F FF78  F0F3    	movff	postinc2,_TMR6_InterruptHandler
 13041  005D3A  006F FF78  F0F4    	movff	postinc2,_TMR6_InterruptHandler+1
 13042  005D40  006F FF74  F0F5    	movff	postdec2,_TMR6_InterruptHandler+2
 13043                           
 13044                           ; _TMR6_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 13045  005D46  52E5               	movf	postdec1,f,c
 13046  005D48  52E5               	movf	postdec1,f,c
 13047  005D4A  52E5               	movf	postdec1,f,c
 13048  005D4C  0012               	return		;funcret
 13049  005D4E                     __end_of_TMR6_SetInterruptHandler:
 13050                           	opt callstack 0
 13051                           
 13052 ;; *************** function _TMR5_Initialize *****************
 13053 ;; Defined at:
 13054 ;;		line 66 in file "mcc_generated_files/tmr5.c"
 13055 ;; Parameters:    Size  Location     Type
 13056 ;;		None
 13057 ;; Auto vars:     Size  Location     Type
 13058 ;;		None
 13059 ;; Return value:  Size  Location     Type
 13060 ;;                  1  [STACK] void 
 13061 ;; Registers used:
 13062 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 13063 ;; Tracked objects:
 13064 ;;		On entry : 3F/3C
 13065 ;;		On exit  : 0/0
 13066 ;;		Unchanged: 0/0
 13067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13068 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13069 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13070 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13071 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13072 ;;Total ram usage:        0 bytes
 13073 ;; Hardware stack levels used:    1
 13074 ;; Hardware stack levels required when called:    4
 13075 ;; This function calls:
 13076 ;;		_TMR5_SetInterruptHandler
 13077 ;; This function is called by:
 13078 ;;		_SYSTEM_Initialize
 13079 ;; This function uses a reentrant model
 13080 ;;
 13081                           
 13082                           	psect	text62
 13083  0057D6                     __ptext62:
 13084                           	opt callstack 0
 13085  0057D6                     _TMR5_Initialize:
 13086                           	opt callstack 25
 13087                           
 13088                           ;mcc_generated_files/tmr5.c: 71:  T5GCON = 0x00;
 13089                           
 13090                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13091                           ;incstack = 0
 13092  0057D6  6A9B               	clrf	16283,c	;volatile
 13093                           
 13094                           ;mcc_generated_files/tmr5.c: 74:  T5GATE = 0x00;
 13095  0057D8  6A9C               	clrf	16284,c	;volatile
 13096                           
 13097                           ;mcc_generated_files/tmr5.c: 77:  T5CLK = 0x01;
 13098  0057DA  0E01               	movlw	1
 13099  0057DC  6E9D               	movwf	16285,c	;volatile
 13100                           
 13101                           ;mcc_generated_files/tmr5.c: 80:  TMR5H = 0x63;
 13102  0057DE  0E63               	movlw	99
 13103  0057E0  6E99               	movwf	16281,c	;volatile
 13104                           
 13105                           ;mcc_generated_files/tmr5.c: 83:  TMR5L = 0xC0;
 13106  0057E2  0EC0               	movlw	192
 13107  0057E4  6E98               	movwf	16280,c	;volatile
 13108                           
 13109                           ;mcc_generated_files/tmr5.c: 86:  timer5ReloadVal = (uint16_t) ((TMR5H << 8) | TMR5L);
 13110  0057E6  5098               	movf	16280,w,c	;volatile
 13111  0057E8  006F FE64  F03B    	movff	16281,btemp	;volatile
 13112  0057EE  6A3C               	clrf	btemp+1,c
 13113  0057F0  0060  F0EC  F03C   	movff	btemp,btemp+1
 13114  0057F6  6A3B               	clrf	btemp,c
 13115  0057F8  103B               	iorwf	btemp,w,c
 13116  0057FA  6E28               	movwf	_timer5ReloadVal,c	;volatile
 13117  0057FC  503C               	movf	btemp+1,w,c
 13118  0057FE  6E29               	movwf	_timer5ReloadVal+1,c	;volatile
 13119                           
 13120                           ;mcc_generated_files/tmr5.c: 89:  PIR8bits.TMR5IF = 0;
 13121  005800  0139               	movlb	57	; () banked
 13122  005802  9DA8               	bcf	168,6,b	;volatile
 13123                           
 13124                           ; BSR set to: 57
 13125                           ;mcc_generated_files/tmr5.c: 92:  PIE8bits.TMR5IE = 1;
 13126  005804  8D98               	bsf	152,6,b	;volatile
 13127                           
 13128                           ; BSR set to: 57
 13129                           ;mcc_generated_files/tmr5.c: 95:  TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler)
      +                          ;
 13130  005806  0E8E               	movlw	low _TMR5_DefaultInterruptHandler
 13131  005808  6EE6               	movwf	postinc1,c
 13132  00580A  0E60               	movlw	high _TMR5_DefaultInterruptHandler
 13133  00580C  6EE6               	movwf	postinc1,c
 13134  00580E  0E00               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 13135  005810  6EE6               	movwf	postinc1,c
 13136  005812  ECA7  F02E         	call	_TMR5_SetInterruptHandler	;wreg free
 13137                           
 13138                           ;mcc_generated_files/tmr5.c: 98:  T5CON = 0x31;
 13139  005816  0E31               	movlw	49
 13140  005818  6E9A               	movwf	16282,c	;volatile
 13141                           
 13142                           ; _TMR5_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 13143  00581A  0012               	return		;funcret
 13144  00581C                     __end_of_TMR5_Initialize:
 13145                           	opt callstack 0
 13146                           
 13147 ;; *************** function _TMR5_SetInterruptHandler *****************
 13148 ;; Defined at:
 13149 ;;		line 189 in file "mcc_generated_files/tmr5.c"
 13150 ;; Parameters:    Size  Location     Type
 13151 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 13152 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 13153 ;; Auto vars:     Size  Location     Type
 13154 ;;		None
 13155 ;; Return value:  Size  Location     Type
 13156 ;;                  1  [STACK] void 
 13157 ;; Registers used:
 13158 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 13159 ;; Tracked objects:
 13160 ;;		On entry : 3F/39
 13161 ;;		On exit  : 0/0
 13162 ;;		Unchanged: 0/0
 13163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13164 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13165 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13166 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13167 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13168 ;;Total ram usage:        0 bytes
 13169 ;; Hardware stack levels used:    1
 13170 ;; Hardware stack levels required when called:    3
 13171 ;; This function calls:
 13172 ;;		Nothing
 13173 ;; This function is called by:
 13174 ;;		_TMR5_Initialize
 13175 ;; This function uses a reentrant model
 13176 ;;
 13177                           
 13178                           	psect	text63
 13179  005D4E                     __ptext63:
 13180                           	opt callstack 0
 13181  005D4E                     _TMR5_SetInterruptHandler:
 13182                           	opt callstack 25
 13183                           
 13184                           ;mcc_generated_files/tmr5.c: 189: void TMR5_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr5.c: 190: {;mcc_generated_files/tmr5.c: 191:  TMR5_Inter
      +                          ruptHandler = InterruptHandler;
 13185                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 13186                           
 13187                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13188                           ;incstack = 0
 13189  005D4E  50E1               	movf	fsr1l,w,c
 13190  005D50  0FFD               	addlw	-3
 13191  005D52  6ED9               	movwf	fsr2l,c
 13192  005D54  50E2               	movf	fsr1h,w,c
 13193  005D56  6EDA               	movwf	fsr2h,c
 13194  005D58  0EFF               	movlw	255
 13195  005D5A  22DA               	addwfc	fsr2h,f,c
 13196  005D5C  006F FF78  F0F0    	movff	postinc2,_TMR5_InterruptHandler
 13197  005D62  006F FF78  F0F1    	movff	postinc2,_TMR5_InterruptHandler+1
 13198  005D68  006F FF74  F0F2    	movff	postdec2,_TMR5_InterruptHandler+2
 13199                           
 13200                           ; _TMR5_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 13201  005D6E  52E5               	movf	postdec1,f,c
 13202  005D70  52E5               	movf	postdec1,f,c
 13203  005D72  52E5               	movf	postdec1,f,c
 13204  005D74  0012               	return		;funcret
 13205  005D76                     __end_of_TMR5_SetInterruptHandler:
 13206                           	opt callstack 0
 13207                           
 13208 ;; *************** function _SPI1_Initialize *****************
 13209 ;; Defined at:
 13210 ;;		line 64 in file "mcc_generated_files/spi1.c"
 13211 ;; Parameters:    Size  Location     Type
 13212 ;;		None
 13213 ;; Auto vars:     Size  Location     Type
 13214 ;;		None
 13215 ;; Return value:  Size  Location     Type
 13216 ;;                  1  [STACK] void 
 13217 ;; Registers used:
 13218 ;;		wreg, status,2
 13219 ;; Tracked objects:
 13220 ;;		On entry : 3F/39
 13221 ;;		On exit  : 3F/3D
 13222 ;;		Unchanged: 0/0
 13223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13224 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13225 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13226 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13227 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13228 ;;Total ram usage:        0 bytes
 13229 ;; Hardware stack levels used:    1
 13230 ;; Hardware stack levels required when called:    3
 13231 ;; This function calls:
 13232 ;;		Nothing
 13233 ;; This function is called by:
 13234 ;;		_SYSTEM_Initialize
 13235 ;; This function uses a reentrant model
 13236 ;;
 13237                           
 13238                           	psect	text64
 13239  0060A8                     __ptext64:
 13240                           	opt callstack 0
 13241  0060A8                     _SPI1_Initialize:
 13242                           	opt callstack 26
 13243                           
 13244                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
 13245                           
 13246                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13247                           ;incstack = 0
 13248  0060A8  0E40               	movlw	64
 13249  0060AA  013D               	movlb	61	; () banked
 13250  0060AC  6F15               	movwf	21,b	;volatile
 13251                           
 13252                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
 13253  0060AE  0E03               	movlw	3
 13254  0060B0  6F16               	movwf	22,b	;volatile
 13255                           
 13256                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x4F;
 13257  0060B2  0E4F               	movlw	79
 13258  0060B4  6F19               	movwf	25,b	;volatile
 13259                           
 13260                           ; BSR set to: 61
 13261                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
 13262  0060B6  6B1C               	clrf	28,b	;volatile
 13263                           
 13264                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x83;
 13265  0060B8  0E83               	movlw	131
 13266  0060BA  6F14               	movwf	20,b	;volatile
 13267                           
 13268                           ; BSR set to: 61
 13269                           ; _SPI1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 13270  0060BC  0012               	return		;funcret
 13271  0060BE                     __end_of_SPI1_Initialize:
 13272                           	opt callstack 0
 13273                           
 13274 ;; *************** function _PMD_Initialize *****************
 13275 ;; Defined at:
 13276 ;;		line 88 in file "mcc_generated_files/mcc.c"
 13277 ;; Parameters:    Size  Location     Type
 13278 ;;		None
 13279 ;; Auto vars:     Size  Location     Type
 13280 ;;		None
 13281 ;; Return value:  Size  Location     Type
 13282 ;;                  1  [STACK] void 
 13283 ;; Registers used:
 13284 ;;		None
 13285 ;; Tracked objects:
 13286 ;;		On entry : 3F/39
 13287 ;;		On exit  : 3F/39
 13288 ;;		Unchanged: 0/0
 13289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13290 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13291 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13293 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13294 ;;Total ram usage:        0 bytes
 13295 ;; Hardware stack levels used:    1
 13296 ;; Hardware stack levels required when called:    3
 13297 ;; This function calls:
 13298 ;;		Nothing
 13299 ;; This function is called by:
 13300 ;;		_SYSTEM_Initialize
 13301 ;; This function uses a reentrant model
 13302 ;;
 13303                           
 13304                           	psect	text65
 13305  0060D4                     __ptext65:
 13306                           	opt callstack 0
 13307  0060D4                     _PMD_Initialize:
 13308                           	opt callstack 26
 13309                           
 13310                           ;mcc_generated_files/mcc.c: 91:     PMD0 = 0x00;
 13311                           
 13312                           ; BSR set to: 61
 13313                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13314                           ;incstack = 0
 13315  0060D4  0139               	movlb	57	; () banked
 13316  0060D6  6BC0               	clrf	192,b	;volatile
 13317                           
 13318                           ;mcc_generated_files/mcc.c: 93:     PMD1 = 0x00;
 13319  0060D8  6BC1               	clrf	193,b	;volatile
 13320                           
 13321                           ;mcc_generated_files/mcc.c: 95:     PMD2 = 0x00;
 13322  0060DA  6BC2               	clrf	194,b	;volatile
 13323                           
 13324                           ;mcc_generated_files/mcc.c: 97:     PMD3 = 0x00;
 13325  0060DC  6BC3               	clrf	195,b	;volatile
 13326                           
 13327                           ;mcc_generated_files/mcc.c: 99:     PMD4 = 0x00;
 13328  0060DE  6BC4               	clrf	196,b	;volatile
 13329                           
 13330                           ;mcc_generated_files/mcc.c: 101:     PMD5 = 0x00;
 13331  0060E0  6BC5               	clrf	197,b	;volatile
 13332                           
 13333                           ;mcc_generated_files/mcc.c: 103:     PMD6 = 0x00;
 13334  0060E2  6BC6               	clrf	198,b	;volatile
 13335                           
 13336                           ;mcc_generated_files/mcc.c: 105:     PMD7 = 0x00;
 13337  0060E4  6BC7               	clrf	199,b	;volatile
 13338                           
 13339                           ; BSR set to: 57
 13340                           ; _PMD_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 13341  0060E6  0012               	return		;funcret
 13342  0060E8                     __end_of_PMD_Initialize:
 13343                           	opt callstack 0
 13344                           
 13345 ;; *************** function _PIN_MANAGER_Initialize *****************
 13346 ;; Defined at:
 13347 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 13348 ;; Parameters:    Size  Location     Type
 13349 ;;		None
 13350 ;; Auto vars:     Size  Location     Type
 13351 ;;		None
 13352 ;; Return value:  Size  Location     Type
 13353 ;;                  1  [STACK] void 
 13354 ;; Registers used:
 13355 ;;		wreg, status,2
 13356 ;; Tracked objects:
 13357 ;;		On entry : 3F/39
 13358 ;;		On exit  : 3F/3A
 13359 ;;		Unchanged: 0/0
 13360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13361 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13362 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13363 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13364 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13365 ;;Total ram usage:        0 bytes
 13366 ;; Hardware stack levels used:    1
 13367 ;; Hardware stack levels required when called:    3
 13368 ;; This function calls:
 13369 ;;		Nothing
 13370 ;; This function is called by:
 13371 ;;		_SYSTEM_Initialize
 13372 ;; This function uses a reentrant model
 13373 ;;
 13374                           
 13375                           	psect	text66
 13376  005076                     __ptext66:
 13377                           	opt callstack 0
 13378  005076                     _PIN_MANAGER_Initialize:
 13379                           	opt callstack 26
 13380                           
 13381                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x07;
 13382                           
 13383                           ; BSR set to: 57
 13384                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13385                           ;incstack = 0
 13386  005076  0E07               	movlw	7
 13387  005078  6EBE               	movwf	16318,c	;volatile
 13388                           
 13389                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x00;
 13390  00507A  6ABD               	clrf	16317,c	;volatile
 13391                           
 13392                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 13393  00507C  6ABA               	clrf	16314,c	;volatile
 13394                           
 13395                           ;mcc_generated_files/pin_manager.c: 65:     LATF = 0x00;
 13396  00507E  6ABF               	clrf	16319,c	;volatile
 13397                           
 13398                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
 13399  005080  6ABB               	clrf	16315,c	;volatile
 13400                           
 13401                           ;mcc_generated_files/pin_manager.c: 67:     LATC = 0x06;
 13402  005082  0E06               	movlw	6
 13403  005084  6EBC               	movwf	16316,c	;volatile
 13404                           
 13405                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0x00;
 13406  005086  6AC6               	clrf	16326,c	;volatile
 13407                           
 13408                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0xFF;
 13409  005088  68C7               	setf	16327,c	;volatile
 13410                           
 13411                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0x8F;
 13412  00508A  0E8F               	movlw	143
 13413  00508C  6EC2               	movwf	16322,c	;volatile
 13414                           
 13415                           ;mcc_generated_files/pin_manager.c: 75:     TRISB = 0xBF;
 13416  00508E  0EBF               	movlw	191
 13417  005090  6EC3               	movwf	16323,c	;volatile
 13418                           
 13419                           ;mcc_generated_files/pin_manager.c: 76:     TRISC = 0x91;
 13420  005092  0E91               	movlw	145
 13421  005094  6EC4               	movwf	16324,c	;volatile
 13422                           
 13423                           ;mcc_generated_files/pin_manager.c: 77:     TRISD = 0xFC;
 13424  005096  0EFC               	movlw	252
 13425  005098  6EC5               	movwf	16325,c	;volatile
 13426                           
 13427                           ;mcc_generated_files/pin_manager.c: 82:     ANSELD = 0xF0;
 13428  00509A  0EF0               	movlw	240
 13429  00509C  013A               	movlb	58	; () banked
 13430  00509E  6F70               	movwf	112,b	;volatile
 13431                           
 13432                           ;mcc_generated_files/pin_manager.c: 83:     ANSELC = 0x01;
 13433  0050A0  0E01               	movlw	1
 13434  0050A2  6F60               	movwf	96,b	;volatile
 13435                           
 13436                           ;mcc_generated_files/pin_manager.c: 84:     ANSELB = 0x38;
 13437  0050A4  0E38               	movlw	56
 13438  0050A6  6F50               	movwf	80,b	;volatile
 13439                           
 13440                           ; BSR set to: 58
 13441                           ;mcc_generated_files/pin_manager.c: 85:     ANSELE = 0x00;
 13442  0050A8  6B80               	clrf	128,b	;volatile
 13443                           
 13444                           ; BSR set to: 58
 13445                           ;mcc_generated_files/pin_manager.c: 86:     ANSELF = 0xFF;
 13446  0050AA  6990               	setf	144,b	;volatile
 13447                           
 13448                           ;mcc_generated_files/pin_manager.c: 87:     ANSELA = 0x8F;
 13449  0050AC  0E8F               	movlw	143
 13450  0050AE  6F40               	movwf	64,b	;volatile
 13451                           
 13452                           ;mcc_generated_files/pin_manager.c: 92:     WPUD = 0x0C;
 13453  0050B0  0E0C               	movlw	12
 13454  0050B2  6F71               	movwf	113,b	;volatile
 13455                           
 13456                           ; BSR set to: 58
 13457                           ;mcc_generated_files/pin_manager.c: 93:     WPUF = 0x00;
 13458  0050B4  6B91               	clrf	145,b	;volatile
 13459                           
 13460                           ; BSR set to: 58
 13461                           ;mcc_generated_files/pin_manager.c: 94:     WPUE = 0x00;
 13462  0050B6  6B81               	clrf	129,b	;volatile
 13463                           
 13464                           ;mcc_generated_files/pin_manager.c: 95:     WPUB = 0x87;
 13465  0050B8  0E87               	movlw	135
 13466  0050BA  6F51               	movwf	81,b	;volatile
 13467                           
 13468                           ; BSR set to: 58
 13469                           ;mcc_generated_files/pin_manager.c: 96:     WPUA = 0x00;
 13470  0050BC  6B41               	clrf	65,b	;volatile
 13471                           
 13472                           ;mcc_generated_files/pin_manager.c: 97:     WPUC = 0x90;
 13473  0050BE  0E90               	movlw	144
 13474  0050C0  6F61               	movwf	97,b	;volatile
 13475                           
 13476                           ; BSR set to: 58
 13477                           ;mcc_generated_files/pin_manager.c: 102:     ODCONE = 0x00;
 13478  0050C2  6B82               	clrf	130,b	;volatile
 13479                           
 13480                           ; BSR set to: 58
 13481                           ;mcc_generated_files/pin_manager.c: 103:     ODCONF = 0x00;
 13482  0050C4  6B92               	clrf	146,b	;volatile
 13483                           
 13484                           ; BSR set to: 58
 13485                           ;mcc_generated_files/pin_manager.c: 104:     ODCONA = 0x00;
 13486  0050C6  6B42               	clrf	66,b	;volatile
 13487                           
 13488                           ; BSR set to: 58
 13489                           ;mcc_generated_files/pin_manager.c: 105:     ODCONB = 0x00;
 13490  0050C8  6B52               	clrf	82,b	;volatile
 13491                           
 13492                           ; BSR set to: 58
 13493                           ;mcc_generated_files/pin_manager.c: 106:     ODCONC = 0x00;
 13494  0050CA  6B62               	clrf	98,b	;volatile
 13495                           
 13496                           ; BSR set to: 58
 13497                           ;mcc_generated_files/pin_manager.c: 107:     ODCOND = 0x00;
 13498  0050CC  6B72               	clrf	114,b	;volatile
 13499                           
 13500                           ; BSR set to: 58
 13501                           ;mcc_generated_files/pin_manager.c: 112:     SLRCONA = 0xFF;
 13502  0050CE  6943               	setf	67,b	;volatile
 13503                           
 13504                           ; BSR set to: 58
 13505                           ;mcc_generated_files/pin_manager.c: 113:     SLRCONB = 0xFF;
 13506  0050D0  6953               	setf	83,b	;volatile
 13507                           
 13508                           ; BSR set to: 58
 13509                           ;mcc_generated_files/pin_manager.c: 114:     SLRCONC = 0xFF;
 13510  0050D2  6963               	setf	99,b	;volatile
 13511                           
 13512                           ; BSR set to: 58
 13513                           ;mcc_generated_files/pin_manager.c: 115:     SLRCOND = 0xFF;
 13514  0050D4  6973               	setf	115,b	;volatile
 13515                           
 13516                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONE = 0x07;
 13517  0050D6  0E07               	movlw	7
 13518  0050D8  6F83               	movwf	131,b	;volatile
 13519                           
 13520                           ; BSR set to: 58
 13521                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONF = 0xFF;
 13522  0050DA  6993               	setf	147,b	;volatile
 13523                           
 13524                           ;mcc_generated_files/pin_manager.c: 126:     U2RXPPS = 0x0F;
 13525  0050DC  0E0F               	movlw	15
 13526  0050DE  6FE8               	movwf	232,b	;volatile
 13527                           
 13528                           ;mcc_generated_files/pin_manager.c: 127:     RB6PPS = 0x16;
 13529  0050E0  0E16               	movlw	22
 13530  0050E2  6F0E               	movwf	14,b	;volatile
 13531                           
 13532                           ;mcc_generated_files/pin_manager.c: 128:     RC3PPS = 0x1E;
 13533  0050E4  0E1E               	movlw	30
 13534  0050E6  6F13               	movwf	19,b	;volatile
 13535                           
 13536                           ;mcc_generated_files/pin_manager.c: 129:     INT0PPS = 0x08;
 13537  0050E8  0E08               	movlw	8
 13538  0050EA  6FC0               	movwf	192,b	;volatile
 13539                           
 13540                           ;mcc_generated_files/pin_manager.c: 130:     INT2PPS = 0x0A;
 13541  0050EC  0E0A               	movlw	10
 13542  0050EE  6FC2               	movwf	194,b	;volatile
 13543                           
 13544                           ;mcc_generated_files/pin_manager.c: 131:     INT1PPS = 0x09;
 13545  0050F0  0E09               	movlw	9
 13546  0050F2  6FC1               	movwf	193,b	;volatile
 13547                           
 13548                           ;mcc_generated_files/pin_manager.c: 132:     U1RXPPS = 0x17;
 13549  0050F4  0E17               	movlw	23
 13550  0050F6  6FE5               	movwf	229,b	;volatile
 13551                           
 13552                           ;mcc_generated_files/pin_manager.c: 133:     SPI1SCKPPS = 0x13;
 13553  0050F8  0E13               	movlw	19
 13554  0050FA  6FDE               	movwf	222,b	;volatile
 13555                           
 13556                           ;mcc_generated_files/pin_manager.c: 134:     RA4PPS = 0x01;
 13557  0050FC  0E01               	movlw	1
 13558  0050FE  6F04               	movwf	4,b	;volatile
 13559                           
 13560                           ;mcc_generated_files/pin_manager.c: 135:     RA5PPS = 0x26;
 13561  005100  0E26               	movlw	38
 13562  005102  6F05               	movwf	5,b	;volatile
 13563                           
 13564                           ;mcc_generated_files/pin_manager.c: 136:     RA6PPS = 0x28;
 13565  005104  0E28               	movlw	40
 13566  005106  6F06               	movwf	6,b	;volatile
 13567                           
 13568                           ;mcc_generated_files/pin_manager.c: 137:     RC5PPS = 0x1F;
 13569  005108  0E1F               	movlw	31
 13570  00510A  6F15               	movwf	21,b	;volatile
 13571                           
 13572                           ;mcc_generated_files/pin_manager.c: 138:     RC6PPS = 0x13;
 13573  00510C  0E13               	movlw	19
 13574  00510E  6F16               	movwf	22,b	;volatile
 13575                           
 13576                           ;mcc_generated_files/pin_manager.c: 139:     SPI1SDIPPS = 0x14;
 13577  005110  0E14               	movlw	20
 13578  005112  6FDF               	movwf	223,b	;volatile
 13579                           
 13580                           ; BSR set to: 58
 13581                           ; _PIN_MANAGER_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
 13582  005114  0012               	return		;funcret
 13583  005116                     __end_of_PIN_MANAGER_Initialize:
 13584                           	opt callstack 0
 13585                           
 13586 ;; *************** function _OSCILLATOR_Initialize *****************
 13587 ;; Defined at:
 13588 ;;		line 70 in file "mcc_generated_files/mcc.c"
 13589 ;; Parameters:    Size  Location     Type
 13590 ;;		None
 13591 ;; Auto vars:     Size  Location     Type
 13592 ;;		None
 13593 ;; Return value:  Size  Location     Type
 13594 ;;                  1  [STACK] void 
 13595 ;; Registers used:
 13596 ;;		wreg, status,2
 13597 ;; Tracked objects:
 13598 ;;		On entry : 3F/3A
 13599 ;;		On exit  : 3F/39
 13600 ;;		Unchanged: 0/0
 13601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13602 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13603 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13605 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13606 ;;Total ram usage:        0 bytes
 13607 ;; Hardware stack levels used:    1
 13608 ;; Hardware stack levels required when called:    3
 13609 ;; This function calls:
 13610 ;;		Nothing
 13611 ;; This function is called by:
 13612 ;;		_SYSTEM_Initialize
 13613 ;; This function uses a reentrant model
 13614 ;;
 13615                           
 13616                           	psect	text67
 13617  0060BE                     __ptext67:
 13618                           	opt callstack 0
 13619  0060BE                     _OSCILLATOR_Initialize:
 13620                           	opt callstack 26
 13621                           
 13622                           ;mcc_generated_files/mcc.c: 73:     OSCCON1 = 0x20;
 13623                           
 13624                           ; BSR set to: 58
 13625                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13626                           ;incstack = 0
 13627  0060BE  0E20               	movlw	32
 13628  0060C0  0139               	movlb	57	; () banked
 13629  0060C2  6FD9               	movwf	217,b	;volatile
 13630                           
 13631                           ; BSR set to: 57
 13632                           ;mcc_generated_files/mcc.c: 75:     OSCCON3 = 0x00;
 13633  0060C4  6BDB               	clrf	219,b	;volatile
 13634                           
 13635                           ; BSR set to: 57
 13636                           ;mcc_generated_files/mcc.c: 77:     OSCEN = 0x00;
 13637  0060C6  6BDD               	clrf	221,b	;volatile
 13638                           
 13639                           ;mcc_generated_files/mcc.c: 79:     OSCFRQ = 0x02;
 13640  0060C8  0E02               	movlw	2
 13641  0060CA  6FDF               	movwf	223,b	;volatile
 13642                           
 13643                           ; BSR set to: 57
 13644                           ;mcc_generated_files/mcc.c: 81:     OSCTUNE = 0x00;
 13645  0060CC  6BDE               	clrf	222,b	;volatile
 13646  0060CE                     l194:
 13647                           
 13648                           ; BSR set to: 57
 13649                           ;mcc_generated_files/mcc.c: 83:     while(PLLR == 0)
 13650  0060CE  B1DC               	btfsc	220,0,b	;volatile
 13651  0060D0  0012               	return	
 13652  0060D2  D7FD               	goto	l194
 13653  0060D4                     __end_of_OSCILLATOR_Initialize:
 13654                           	opt callstack 0
 13655                           
 13656 ;; *************** function _NCO1_Initialize *****************
 13657 ;; Defined at:
 13658 ;;		line 58 in file "mcc_generated_files/nco1.c"
 13659 ;; Parameters:    Size  Location     Type
 13660 ;;		None
 13661 ;; Auto vars:     Size  Location     Type
 13662 ;;		None
 13663 ;; Return value:  Size  Location     Type
 13664 ;;                  1  [STACK] void 
 13665 ;; Registers used:
 13666 ;;		wreg, status,2
 13667 ;; Tracked objects:
 13668 ;;		On entry : 0/39
 13669 ;;		On exit  : 3F/3F
 13670 ;;		Unchanged: 0/0
 13671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13672 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13673 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13675 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13676 ;;Total ram usage:        0 bytes
 13677 ;; Hardware stack levels used:    1
 13678 ;; Hardware stack levels required when called:    3
 13679 ;; This function calls:
 13680 ;;		Nothing
 13681 ;; This function is called by:
 13682 ;;		_SYSTEM_Initialize
 13683 ;; This function uses a reentrant model
 13684 ;;
 13685                           
 13686                           	psect	text68
 13687  006022                     __ptext68:
 13688                           	opt callstack 0
 13689  006022                     _NCO1_Initialize:
 13690                           	opt callstack 26
 13691                           
 13692                           ;mcc_generated_files/nco1.c: 62:     NCO1CON = 0x00;
 13693                           
 13694                           ; BSR set to: 57
 13695                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13696                           ;incstack = 0
 13697  006022  013F               	movlb	63	; () banked
 13698  006024  6B3E               	clrf	62,b	;volatile
 13699                           
 13700                           ;mcc_generated_files/nco1.c: 64:     NCO1CLK = 0x00;
 13701  006026  6B3F               	clrf	63,b	;volatile
 13702                           
 13703                           ;mcc_generated_files/nco1.c: 66:     NCO1ACCU = 0x00;
 13704  006028  6B3A               	clrf	58,b	;volatile
 13705                           
 13706                           ;mcc_generated_files/nco1.c: 68:     NCO1ACCH = 0x00;
 13707  00602A  6B39               	clrf	57,b	;volatile
 13708                           
 13709                           ;mcc_generated_files/nco1.c: 70:     NCO1ACCL = 0x00;
 13710  00602C  6B38               	clrf	56,b	;volatile
 13711                           
 13712                           ; BSR set to: 63
 13713                           ;mcc_generated_files/nco1.c: 72:     NCO1INCU = 0x06;
 13714  00602E  0E06               	movlw	6
 13715  006030  6F3D               	movwf	61,b	;volatile
 13716                           
 13717                           ;mcc_generated_files/nco1.c: 74:     NCO1INCH = 0xC7;
 13718  006032  0EC7               	movlw	199
 13719  006034  6F3C               	movwf	60,b	;volatile
 13720                           
 13721                           ;mcc_generated_files/nco1.c: 76:     NCO1INCL = 0xAE;
 13722  006036  0EAE               	movlw	174
 13723  006038  6F3B               	movwf	59,b	;volatile
 13724                           
 13725                           ; BSR set to: 63
 13726                           ;mcc_generated_files/nco1.c: 79:     NCO1CONbits.EN = 1;
 13727  00603A  8F3E               	bsf	62,7,b	;volatile
 13728                           
 13729                           ; BSR set to: 63
 13730                           ; _NCO1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 13731  00603C  0012               	return		;funcret
 13732  00603E                     __end_of_NCO1_Initialize:
 13733                           	opt callstack 0
 13734                           
 13735 ;; *************** function _INTERRUPT_Initialize *****************
 13736 ;; Defined at:
 13737 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 13738 ;; Parameters:    Size  Location     Type
 13739 ;;		None
 13740 ;; Auto vars:     Size  Location     Type
 13741 ;;  state           1  [STACK] _Bool 
 13742 ;; Return value:  Size  Location     Type
 13743 ;;                  1  [STACK] void 
 13744 ;; Registers used:
 13745 ;;		wreg, fsr1l, fsr1h, status,2, btemp+11
 13746 ;; Tracked objects:
 13747 ;;		On entry : 0/0
 13748 ;;		On exit  : 3F/39
 13749 ;;		Unchanged: 0/0
 13750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13751 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13752 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13753 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13754 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13755 ;;Total ram usage:        0 bytes
 13756 ;; Hardware stack levels used:    1
 13757 ;; Hardware stack levels required when called:    3
 13758 ;; This function calls:
 13759 ;;		Nothing
 13760 ;; This function is called by:
 13761 ;;		_SYSTEM_Initialize
 13762 ;; This function uses a reentrant model
 13763 ;;
 13764                           
 13765                           	psect	text69
 13766  005466                     __ptext69:
 13767                           	opt callstack 0
 13768  005466                     _INTERRUPT_Initialize:
 13769                           	opt callstack 0
 13770                           
 13771                           ; BSR set to: 63
 13772                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13773  005466  52E6               	movf	postinc1,f,c
 13774                           
 13775                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 13776                           
 13777                           ;incstack = 0
 13778  005468  8AD2               	bsf	16338,5,c	;volatile
 13779                           
 13780                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 13781  00546A  AED2               	btfss	16338,7,c	;volatile
 13782  00546C  D003               	goto	u980
 13783  00546E  6A46               	clrf	btemp+11,c
 13784  005470  2A46               	incf	btemp+11,f,c
 13785  005472  D001               	goto	u998
 13786  005474                     u980:
 13787  005474  6A46               	clrf	btemp+11,c
 13788  005476                     u998:
 13789                           
 13790                           ;stkvar	_state @ sp[(-1)+0]
 13791  005476  0EFF               	movlw	-1
 13792  005478  0060  F11B  FFE3   	movff	btemp+11,plusw1
 13793                           
 13794                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 13795  00547E  9ED2               	bcf	16338,7,c	;volatile
 13796                           
 13797                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 13798  005480  0E55               	movlw	85
 13799  005482  6ED4               	movwf	16340,c	;volatile
 13800                           
 13801                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 13802  005484  0EAA               	movlw	170
 13803  005486  6ED4               	movwf	16340,c	;volatile
 13804                           
 13805                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 13806  005488  90D4               	bcf	16340,0,c	;volatile
 13807                           
 13808                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
 13809  00548A  0138               	movlb	56	; () banked
 13810  00548C  6B9F               	clrf	159,b	;volatile
 13811                           
 13812                           ; BSR set to: 56
 13813                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
 13814  00548E  6B9E               	clrf	158,b	;volatile
 13815                           
 13816                           ; BSR set to: 56
 13817                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
 13818  005490  0E08               	movlw	8
 13819  005492  6F9D               	movwf	157,b	;volatile
 13820                           
 13821                           ; BSR set to: 56
 13822                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 13823  005494  0E55               	movlw	85
 13824  005496  6ED4               	movwf	16340,c	;volatile
 13825                           
 13826                           ; BSR set to: 56
 13827                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 13828  005498  0EAA               	movlw	170
 13829  00549A  6ED4               	movwf	16340,c	;volatile
 13830                           
 13831                           ; BSR set to: 56
 13832                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 13833  00549C  80D4               	bsf	16340,0,c	;volatile
 13834                           
 13835                           ; BSR set to: 56
 13836                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 13837                           ;stkvar	_state @ sp[(-1)+0]
 13838  00549E  0EFF               	movlw	-1
 13839  0054A0  B0E3               	btfsc	plusw1,0,c
 13840  0054A2  D002               	bra	u1005
 13841  0054A4  9ED2               	bcf	16338,7,c	;volatile
 13842  0054A6  D001               	bra	u1006
 13843  0054A8                     u1005:
 13844  0054A8  8ED2               	bsf	16338,7,c	;volatile
 13845  0054AA                     u1006:
 13846                           
 13847                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR2bits.DMA1AIP = 1;
 13848  0054AA  0139               	movlb	57	; () banked
 13849  0054AC  8782               	bsf	130,3,b	;volatile
 13850                           
 13851                           ; BSR set to: 57
 13852                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR2bits.DMA1DCNTIP = 1;
 13853  0054AE  8382               	bsf	130,1,b	;volatile
 13854                           
 13855                           ; BSR set to: 57
 13856                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR2bits.DMA1SCNTIP = 1;
 13857  0054B0  8182               	bsf	130,0,b	;volatile
 13858                           
 13859                           ; BSR set to: 57
 13860                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR2bits.DMA1ORIP = 1;
 13861  0054B2  8582               	bsf	130,2,b	;volatile
 13862                           
 13863                           ; BSR set to: 57
 13864                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR6bits.U2TXIP = 1;
 13865  0054B4  8786               	bsf	134,3,b	;volatile
 13866                           
 13867                           ; BSR set to: 57
 13868                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR6bits.U2RXIP = 1;
 13869  0054B6  8586               	bsf	134,2,b	;volatile
 13870                           
 13871                           ; BSR set to: 57
 13872                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR3bits.U1TXIP = 1;
 13873  0054B8  8983               	bsf	131,4,b	;volatile
 13874                           
 13875                           ; BSR set to: 57
 13876                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR3bits.U1RXIP = 1;
 13877  0054BA  8783               	bsf	131,3,b	;volatile
 13878                           
 13879                           ; BSR set to: 57
 13880                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR1bits.INT0IP = 1;
 13881  0054BC  8181               	bsf	129,0,b	;volatile
 13882                           
 13883                           ; BSR set to: 57
 13884                           ;mcc_generated_files/interrupt_manager.c: 81:     IPR5bits.INT1IP = 1;
 13885  0054BE  8185               	bsf	133,0,b	;volatile
 13886                           
 13887                           ; BSR set to: 57
 13888                           ;mcc_generated_files/interrupt_manager.c: 82:     IPR7bits.INT2IP = 1;
 13889  0054C0  8B87               	bsf	135,5,b	;volatile
 13890                           
 13891                           ; BSR set to: 57
 13892                           ;mcc_generated_files/interrupt_manager.c: 83:     IPR9bits.TMR6IP = 1;
 13893  0054C2  8189               	bsf	137,0,b	;volatile
 13894                           
 13895                           ; BSR set to: 57
 13896                           ;mcc_generated_files/interrupt_manager.c: 84:     IPR8bits.TMR5IP = 1;
 13897  0054C4  8D88               	bsf	136,6,b	;volatile
 13898                           
 13899                           ; BSR set to: 57
 13900                           ;mcc_generated_files/interrupt_manager.c: 85:     IPR1bits.ADIP = 1;
 13901  0054C6  8581               	bsf	129,2,b	;volatile
 13902                           
 13903                           ; BSR set to: 57
 13904                           ; _INTERRUPT_Initialize: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 13905  0054C8  52E5               	movf	postdec1,f,c
 13906  0054CA  0012               	return		;funcret
 13907  0054CC                     __end_of_INTERRUPT_Initialize:
 13908                           	opt callstack 0
 13909                           
 13910 ;; *************** function _EXT_INT_Initialize *****************
 13911 ;; Defined at:
 13912 ;;		line 119 in file "mcc_generated_files/ext_int.c"
 13913 ;; Parameters:    Size  Location     Type
 13914 ;;		None
 13915 ;; Auto vars:     Size  Location     Type
 13916 ;;		None
 13917 ;; Return value:  Size  Location     Type
 13918 ;;                  1  [STACK] void 
 13919 ;; Registers used:
 13920 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 13921 ;; Tracked objects:
 13922 ;;		On entry : 3F/3F
 13923 ;;		On exit  : 3F/39
 13924 ;;		Unchanged: 0/0
 13925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13926 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13927 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13928 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13929 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13930 ;;Total ram usage:        0 bytes
 13931 ;; Hardware stack levels used:    1
 13932 ;; Hardware stack levels required when called:    4
 13933 ;; This function calls:
 13934 ;;		_INT0_SetInterruptHandler
 13935 ;;		_INT1_SetInterruptHandler
 13936 ;;		_INT2_SetInterruptHandler
 13937 ;; This function is called by:
 13938 ;;		_SYSTEM_Initialize
 13939 ;; This function uses a reentrant model
 13940 ;;
 13941                           
 13942                           	psect	text70
 13943  0056FA                     __ptext70:
 13944                           	opt callstack 0
 13945  0056FA                     _EXT_INT_Initialize:
 13946                           	opt callstack 25
 13947                           
 13948                           ;mcc_generated_files/ext_int.c: 124:  (PIR1bits.INT0IF = 0);
 13949                           
 13950                           ; BSR set to: 57
 13951                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13952                           ;incstack = 0
 13953  0056FA  0139               	movlb	57	; () banked
 13954  0056FC  91A1               	bcf	161,0,b	;volatile
 13955                           
 13956                           ;mcc_generated_files/ext_int.c: 125:  (INTCON0bits.INT0EDG = 0);
 13957  0056FE  90D2               	bcf	16338,0,c	;volatile
 13958                           
 13959                           ; BSR set to: 57
 13960                           ;mcc_generated_files/ext_int.c: 127:  INT0_SetInterruptHandler(INT0_DefaultInterruptHand
      +                          ler);
 13961  005700  0E96               	movlw	low _INT0_DefaultInterruptHandler
 13962  005702  6EE6               	movwf	postinc1,c
 13963  005704  0E61               	movlw	high _INT0_DefaultInterruptHandler
 13964  005706  6EE6               	movwf	postinc1,c
 13965  005708  0E00               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 13966  00570A  6EE6               	movwf	postinc1,c
 13967  00570C  ECE3  F02E         	call	_INT0_SetInterruptHandler	;wreg free
 13968                           
 13969                           ;mcc_generated_files/ext_int.c: 128:  (PIE1bits.INT0IE = 1);
 13970  005710  0139               	movlb	57	; () banked
 13971  005712  8191               	bsf	145,0,b	;volatile
 13972                           
 13973                           ; BSR set to: 57
 13974                           ;mcc_generated_files/ext_int.c: 133:  (PIR5bits.INT1IF = 0);
 13975  005714  91A5               	bcf	165,0,b	;volatile
 13976                           
 13977                           ; BSR set to: 57
 13978                           ;mcc_generated_files/ext_int.c: 134:  (INTCON0bits.INT1EDG = 0);
 13979  005716  92D2               	bcf	16338,1,c	;volatile
 13980                           
 13981                           ;mcc_generated_files/ext_int.c: 136:  INT1_SetInterruptHandler(INT1_DefaultInterruptHand
      +                          ler);
 13982  005718  0E98               	movlw	low _INT1_DefaultInterruptHandler
 13983  00571A  6EE6               	movwf	postinc1,c
 13984  00571C  0E61               	movlw	high _INT1_DefaultInterruptHandler
 13985  00571E  6EE6               	movwf	postinc1,c
 13986  005720  0E00               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 13987  005722  6EE6               	movwf	postinc1,c
 13988  005724  ECCF  F02E         	call	_INT1_SetInterruptHandler	;wreg free
 13989                           
 13990                           ;mcc_generated_files/ext_int.c: 137:  (PIE5bits.INT1IE = 1);
 13991  005728  0139               	movlb	57	; () banked
 13992  00572A  8195               	bsf	149,0,b	;volatile
 13993                           
 13994                           ; BSR set to: 57
 13995                           ;mcc_generated_files/ext_int.c: 142:  (PIR7bits.INT2IF = 0);
 13996  00572C  9BA7               	bcf	167,5,b	;volatile
 13997                           
 13998                           ; BSR set to: 57
 13999                           ;mcc_generated_files/ext_int.c: 143:  (INTCON0bits.INT2EDG = 0);
 14000  00572E  94D2               	bcf	16338,2,c	;volatile
 14001                           
 14002                           ;mcc_generated_files/ext_int.c: 145:  INT2_SetInterruptHandler(INT2_DefaultInterruptHand
      +                          ler);
 14003  005730  0E9A               	movlw	low _INT2_DefaultInterruptHandler
 14004  005732  6EE6               	movwf	postinc1,c
 14005  005734  0E61               	movlw	high _INT2_DefaultInterruptHandler
 14006  005736  6EE6               	movwf	postinc1,c
 14007  005738  0E00               	movlw	low (_INT2_DefaultInterruptHandler shr (0+16))
 14008  00573A  6EE6               	movwf	postinc1,c
 14009  00573C  ECBB  F02E         	call	_INT2_SetInterruptHandler	;wreg free
 14010                           
 14011                           ;mcc_generated_files/ext_int.c: 146:  (PIE7bits.INT2IE = 1);
 14012  005740  0139               	movlb	57	; () banked
 14013  005742  8B97               	bsf	151,5,b	;volatile
 14014                           
 14015                           ; BSR set to: 57
 14016                           ; _EXT_INT_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 14017  005744  0012               	return		;funcret
 14018  005746                     __end_of_EXT_INT_Initialize:
 14019                           	opt callstack 0
 14020                           
 14021 ;; *************** function _INT2_SetInterruptHandler *****************
 14022 ;; Defined at:
 14023 ;;		line 108 in file "mcc_generated_files/ext_int.c"
 14024 ;; Parameters:    Size  Location     Type
 14025 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 14026 ;;		 -> INT2_DefaultInterruptHandler(1), 
 14027 ;; Auto vars:     Size  Location     Type
 14028 ;;		None
 14029 ;; Return value:  Size  Location     Type
 14030 ;;                  1  [STACK] void 
 14031 ;; Registers used:
 14032 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 14033 ;; Tracked objects:
 14034 ;;		On entry : 3F/39
 14035 ;;		On exit  : 0/0
 14036 ;;		Unchanged: 0/0
 14037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14038 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14039 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14041 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14042 ;;Total ram usage:        0 bytes
 14043 ;; Hardware stack levels used:    1
 14044 ;; Hardware stack levels required when called:    3
 14045 ;; This function calls:
 14046 ;;		Nothing
 14047 ;; This function is called by:
 14048 ;;		_EXT_INT_Initialize
 14049 ;; This function uses a reentrant model
 14050 ;;
 14051                           
 14052                           	psect	text71
 14053  005D76                     __ptext71:
 14054                           	opt callstack 0
 14055  005D76                     _INT2_SetInterruptHandler:
 14056                           	opt callstack 25
 14057                           
 14058                           ;mcc_generated_files/ext_int.c: 108: void INT2_SetInterruptHandler(void (* InterruptHand
      +                          ler)(void));mcc_generated_files/ext_int.c: 109: {;mcc_generated_files/ext_int.c: 110:  I
      +                          NT2_InterruptHandler = InterruptHandler;
 14059                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 14060                           
 14061                           ; BSR set to: 57
 14062                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14063                           ;incstack = 0
 14064  005D76  50E1               	movf	fsr1l,w,c
 14065  005D78  0FFD               	addlw	-3
 14066  005D7A  6ED9               	movwf	fsr2l,c
 14067  005D7C  50E2               	movf	fsr1h,w,c
 14068  005D7E  6EDA               	movwf	fsr2h,c
 14069  005D80  0EFF               	movlw	255
 14070  005D82  22DA               	addwfc	fsr2h,f,c
 14071  005D84  006F FF78  F017    	movff	postinc2,_INT2_InterruptHandler
 14072  005D8A  006F FF78  F018    	movff	postinc2,_INT2_InterruptHandler+1
 14073  005D90  006F FF74  F019    	movff	postdec2,_INT2_InterruptHandler+2
 14074                           
 14075                           ; _INT2_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 14076  005D96  52E5               	movf	postdec1,f,c
 14077  005D98  52E5               	movf	postdec1,f,c
 14078  005D9A  52E5               	movf	postdec1,f,c
 14079  005D9C  0012               	return		;funcret
 14080  005D9E                     __end_of_INT2_SetInterruptHandler:
 14081                           	opt callstack 0
 14082                           
 14083 ;; *************** function _INT1_SetInterruptHandler *****************
 14084 ;; Defined at:
 14085 ;;		line 81 in file "mcc_generated_files/ext_int.c"
 14086 ;; Parameters:    Size  Location     Type
 14087 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 14088 ;;		 -> INT1_DefaultInterruptHandler(1), 
 14089 ;; Auto vars:     Size  Location     Type
 14090 ;;		None
 14091 ;; Return value:  Size  Location     Type
 14092 ;;                  1  [STACK] void 
 14093 ;; Registers used:
 14094 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 14095 ;; Tracked objects:
 14096 ;;		On entry : 3F/39
 14097 ;;		On exit  : 0/0
 14098 ;;		Unchanged: 0/0
 14099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14100 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14101 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14102 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14103 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14104 ;;Total ram usage:        0 bytes
 14105 ;; Hardware stack levels used:    1
 14106 ;; Hardware stack levels required when called:    3
 14107 ;; This function calls:
 14108 ;;		Nothing
 14109 ;; This function is called by:
 14110 ;;		_EXT_INT_Initialize
 14111 ;; This function uses a reentrant model
 14112 ;;
 14113                           
 14114                           	psect	text72
 14115  005D9E                     __ptext72:
 14116                           	opt callstack 0
 14117  005D9E                     _INT1_SetInterruptHandler:
 14118                           	opt callstack 25
 14119                           
 14120                           ;mcc_generated_files/ext_int.c: 81: void INT1_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 82: {;mcc_generated_files/ext_int.c: 83:  INT1
      +                          _InterruptHandler = InterruptHandler;
 14121                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 14122                           
 14123                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14124                           ;incstack = 0
 14125  005D9E  50E1               	movf	fsr1l,w,c
 14126  005DA0  0FFD               	addlw	-3
 14127  005DA2  6ED9               	movwf	fsr2l,c
 14128  005DA4  50E2               	movf	fsr1h,w,c
 14129  005DA6  6EDA               	movwf	fsr2h,c
 14130  005DA8  0EFF               	movlw	255
 14131  005DAA  22DA               	addwfc	fsr2h,f,c
 14132  005DAC  006F FF78  F01A    	movff	postinc2,_INT1_InterruptHandler
 14133  005DB2  006F FF78  F01B    	movff	postinc2,_INT1_InterruptHandler+1
 14134  005DB8  006F FF74  F01C    	movff	postdec2,_INT1_InterruptHandler+2
 14135                           
 14136                           ; _INT1_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 14137  005DBE  52E5               	movf	postdec1,f,c
 14138  005DC0  52E5               	movf	postdec1,f,c
 14139  005DC2  52E5               	movf	postdec1,f,c
 14140  005DC4  0012               	return		;funcret
 14141  005DC6                     __end_of_INT1_SetInterruptHandler:
 14142                           	opt callstack 0
 14143                           
 14144 ;; *************** function _INT0_SetInterruptHandler *****************
 14145 ;; Defined at:
 14146 ;;		line 54 in file "mcc_generated_files/ext_int.c"
 14147 ;; Parameters:    Size  Location     Type
 14148 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 14149 ;;		 -> INT0_DefaultInterruptHandler(1), 
 14150 ;; Auto vars:     Size  Location     Type
 14151 ;;		None
 14152 ;; Return value:  Size  Location     Type
 14153 ;;                  1  [STACK] void 
 14154 ;; Registers used:
 14155 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 14156 ;; Tracked objects:
 14157 ;;		On entry : 3F/39
 14158 ;;		On exit  : 0/0
 14159 ;;		Unchanged: 0/0
 14160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14161 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14162 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14163 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14164 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14165 ;;Total ram usage:        0 bytes
 14166 ;; Hardware stack levels used:    1
 14167 ;; Hardware stack levels required when called:    3
 14168 ;; This function calls:
 14169 ;;		Nothing
 14170 ;; This function is called by:
 14171 ;;		_EXT_INT_Initialize
 14172 ;; This function uses a reentrant model
 14173 ;;
 14174                           
 14175                           	psect	text73
 14176  005DC6                     __ptext73:
 14177                           	opt callstack 0
 14178  005DC6                     _INT0_SetInterruptHandler:
 14179                           	opt callstack 25
 14180                           
 14181                           ;mcc_generated_files/ext_int.c: 54: void INT0_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 55: {;mcc_generated_files/ext_int.c: 56:  INT0
      +                          _InterruptHandler = InterruptHandler;
 14182                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 14183                           
 14184                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14185                           ;incstack = 0
 14186  005DC6  50E1               	movf	fsr1l,w,c
 14187  005DC8  0FFD               	addlw	-3
 14188  005DCA  6ED9               	movwf	fsr2l,c
 14189  005DCC  50E2               	movf	fsr1h,w,c
 14190  005DCE  6EDA               	movwf	fsr2h,c
 14191  005DD0  0EFF               	movlw	255
 14192  005DD2  22DA               	addwfc	fsr2h,f,c
 14193  005DD4  006F FF78  F01D    	movff	postinc2,_INT0_InterruptHandler
 14194  005DDA  006F FF78  F01E    	movff	postinc2,_INT0_InterruptHandler+1
 14195  005DE0  006F FF74  F01F    	movff	postdec2,_INT0_InterruptHandler+2
 14196                           
 14197                           ; _INT0_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 14198  005DE6  52E5               	movf	postdec1,f,c
 14199  005DE8  52E5               	movf	postdec1,f,c
 14200  005DEA  52E5               	movf	postdec1,f,c
 14201  005DEC  0012               	return		;funcret
 14202  005DEE                     __end_of_INT0_SetInterruptHandler:
 14203                           	opt callstack 0
 14204                           
 14205 ;; *************** function _DSM_Initialize *****************
 14206 ;; Defined at:
 14207 ;;		line 58 in file "mcc_generated_files/dsm.c"
 14208 ;; Parameters:    Size  Location     Type
 14209 ;;		None
 14210 ;; Auto vars:     Size  Location     Type
 14211 ;;		None
 14212 ;; Return value:  Size  Location     Type
 14213 ;;                  1  [STACK] void 
 14214 ;; Registers used:
 14215 ;;		wreg, status,2
 14216 ;; Tracked objects:
 14217 ;;		On entry : 0/3C
 14218 ;;		On exit  : 3F/3C
 14219 ;;		Unchanged: 0/0
 14220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14221 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14222 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14223 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14224 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14225 ;;Total ram usage:        0 bytes
 14226 ;; Hardware stack levels used:    1
 14227 ;; Hardware stack levels required when called:    3
 14228 ;; This function calls:
 14229 ;;		Nothing
 14230 ;; This function is called by:
 14231 ;;		_SYSTEM_Initialize
 14232 ;; This function uses a reentrant model
 14233 ;;
 14234                           
 14235                           	psect	text74
 14236  00603E                     __ptext74:
 14237                           	opt callstack 0
 14238  00603E                     _DSM_Initialize:
 14239                           	opt callstack 26
 14240                           
 14241                           ;mcc_generated_files/dsm.c: 63:     MD1CON0bits.MD1OPOL = 0;
 14242                           
 14243                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14244                           ;incstack = 0
 14245  00603E  013C               	movlb	60	; () banked
 14246  006040  99FA               	bcf	250,4,b	;volatile
 14247                           
 14248                           ;mcc_generated_files/dsm.c: 66:     MD1CON1bits.MD1CLSYNC = 1;
 14249  006042  81FB               	bsf	251,0,b	;volatile
 14250                           
 14251                           ;mcc_generated_files/dsm.c: 69:     MD1CON1bits.MD1CLPOL = 0;
 14252  006044  93FB               	bcf	251,1,b	;volatile
 14253                           
 14254                           ;mcc_generated_files/dsm.c: 72:     MD1CON1bits.MD1CHSYNC = 1;
 14255  006046  89FB               	bsf	251,4,b	;volatile
 14256                           
 14257                           ;mcc_generated_files/dsm.c: 75:     MD1CON1bits.MD1CHPOL = 0;
 14258  006048  9BFB               	bcf	251,5,b	;volatile
 14259                           
 14260                           ; BSR set to: 60
 14261                           ;mcc_generated_files/dsm.c: 78:     MD1SRC = 0x13;
 14262  00604A  0E13               	movlw	19
 14263  00604C  6FFC               	movwf	252,b	;volatile
 14264                           
 14265                           ;mcc_generated_files/dsm.c: 81:     MD1CARH = 0x0E;
 14266  00604E  0E0E               	movlw	14
 14267  006050  6FFE               	movwf	254,b	;volatile
 14268                           
 14269                           ;mcc_generated_files/dsm.c: 84:     MD1CARL = 0x04;
 14270  006052  0E04               	movlw	4
 14271  006054  6FFD               	movwf	253,b	;volatile
 14272                           
 14273                           ; BSR set to: 60
 14274                           ;mcc_generated_files/dsm.c: 87:     MD1CON0bits.MD1EN = 1;
 14275  006056  8FFA               	bsf	250,7,b	;volatile
 14276                           
 14277                           ; BSR set to: 60
 14278                           ; _DSM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 14279  006058  0012               	return		;funcret
 14280  00605A                     __end_of_DSM_Initialize:
 14281                           	opt callstack 0
 14282                           
 14283 ;; *************** function _DMA1_Initialize *****************
 14284 ;; Defined at:
 14285 ;;		line 86 in file "mcc_generated_files/dma1.c"
 14286 ;; Parameters:    Size  Location     Type
 14287 ;;		None
 14288 ;; Auto vars:     Size  Location     Type
 14289 ;;		None
 14290 ;; Return value:  Size  Location     Type
 14291 ;;                  1  [STACK] void 
 14292 ;; Registers used:
 14293 ;;		wreg, status,2
 14294 ;; Tracked objects:
 14295 ;;		On entry : 3F/3D
 14296 ;;		On exit  : 3F/3B
 14297 ;;		Unchanged: 0/0
 14298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14299 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14300 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14301 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14302 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14303 ;;Total ram usage:        0 bytes
 14304 ;; Hardware stack levels used:    1
 14305 ;; Hardware stack levels required when called:    3
 14306 ;; This function calls:
 14307 ;;		Nothing
 14308 ;; This function is called by:
 14309 ;;		_SYSTEM_Initialize
 14310 ;; This function uses a reentrant model
 14311 ;;
 14312                           
 14313                           	psect	text75
 14314  0053FC                     __ptext75:
 14315                           	opt callstack 0
 14316  0053FC                     _DMA1_Initialize:
 14317                           	opt callstack 26
 14318                           
 14319                           ;mcc_generated_files/dma1.c: 88:  DMA1SSA = 0x001000;
 14320                           
 14321                           ; BSR set to: 60
 14322                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14323                           ;incstack = 0
 14324  0053FC  0E00               	movlw	0
 14325  0053FE  013B               	movlb	59	; () banked
 14326  005400  6FF9               	movwf	249,b	;volatile
 14327  005402  0E10               	movlw	16
 14328  005404  6FFA               	movwf	250,b	;volatile
 14329  005406  0E00               	movlw	0
 14330  005408  6FFB               	movwf	251,b	;volatile
 14331                           
 14332                           ;mcc_generated_files/dma1.c: 89:  DMA1DSA = 0x3D11;
 14333  00540A  0E3D               	movlw	61
 14334  00540C  6FF1               	movwf	241,b	;volatile
 14335  00540E  0E11               	movlw	17
 14336  005410  6FF0               	movwf	240,b	;volatile
 14337                           
 14338                           ;mcc_generated_files/dma1.c: 90:  DMA1CON1 = 0x03;
 14339  005412  0E03               	movlw	3
 14340  005414  6FFD               	movwf	253,b	;volatile
 14341                           
 14342                           ;mcc_generated_files/dma1.c: 91:  DMA1SSZ = 0x0001;
 14343  005416  0E00               	movlw	0
 14344  005418  6FF8               	movwf	248,b	;volatile
 14345  00541A  0E01               	movlw	1
 14346  00541C  6FF7               	movwf	247,b	;volatile
 14347                           
 14348                           ;mcc_generated_files/dma1.c: 92:  DMA1DSZ = 0x0001;
 14349  00541E  0E00               	movlw	0
 14350  005420  6FEF               	movwf	239,b	;volatile
 14351  005422  0E01               	movlw	1
 14352  005424  6FEE               	movwf	238,b	;volatile
 14353                           
 14354                           ;mcc_generated_files/dma1.c: 93:  DMA1SIRQ = 0x15;
 14355  005426  0E15               	movlw	21
 14356  005428  6FFF               	movwf	255,b	;volatile
 14357                           
 14358                           ; BSR set to: 59
 14359                           ;mcc_generated_files/dma1.c: 94:  DMA1AIRQ = 0x0;
 14360  00542A  6BFE               	clrf	254,b	;volatile
 14361                           
 14362                           ; BSR set to: 59
 14363                           ;mcc_generated_files/dma1.c: 96:  PIR2bits.DMA1DCNTIF = 0;
 14364  00542C  0139               	movlb	57	; () banked
 14365  00542E  93A2               	bcf	162,1,b	;volatile
 14366                           
 14367                           ; BSR set to: 57
 14368                           ;mcc_generated_files/dma1.c: 97:  PIR2bits.DMA1SCNTIF = 0;
 14369  005430  91A2               	bcf	162,0,b	;volatile
 14370                           
 14371                           ; BSR set to: 57
 14372                           ;mcc_generated_files/dma1.c: 98:  PIR2bits.DMA1AIF = 0;
 14373  005432  97A2               	bcf	162,3,b	;volatile
 14374                           
 14375                           ; BSR set to: 57
 14376                           ;mcc_generated_files/dma1.c: 99:  PIR2bits.DMA1ORIF = 0;
 14377  005434  95A2               	bcf	162,2,b	;volatile
 14378                           
 14379                           ; BSR set to: 57
 14380                           ;mcc_generated_files/dma1.c: 101:  PIE2bits.DMA1DCNTIE = 1;
 14381  005436  8392               	bsf	146,1,b	;volatile
 14382                           
 14383                           ; BSR set to: 57
 14384                           ;mcc_generated_files/dma1.c: 102:  PIE2bits.DMA1SCNTIE = 1;
 14385  005438  8192               	bsf	146,0,b	;volatile
 14386                           
 14387                           ; BSR set to: 57
 14388                           ;mcc_generated_files/dma1.c: 103:  PIE2bits.DMA1AIE = 1;
 14389  00543A  8792               	bsf	146,3,b	;volatile
 14390                           
 14391                           ; BSR set to: 57
 14392                           ;mcc_generated_files/dma1.c: 104:  PIE2bits.DMA1ORIE = 1;
 14393  00543C  8592               	bsf	146,2,b	;volatile
 14394                           
 14395                           ; BSR set to: 57
 14396                           ;mcc_generated_files/dma1.c: 106:  ISRPR = 0;
 14397  00543E  6BF1               	clrf	241,b	;volatile
 14398                           
 14399                           ;mcc_generated_files/dma1.c: 107:  MAINPR = 1;
 14400  005440  0E01               	movlw	1
 14401  005442  6FF2               	movwf	242,b	;volatile
 14402                           
 14403                           ;mcc_generated_files/dma1.c: 108:  DMA1PR = 4;
 14404  005444  0E04               	movlw	4
 14405  005446  6FF3               	movwf	243,b	;volatile
 14406                           
 14407                           ;mcc_generated_files/dma1.c: 109:  DMA2PR = 2;
 14408  005448  0E02               	movlw	2
 14409  00544A  6FF4               	movwf	244,b	;volatile
 14410                           
 14411                           ;mcc_generated_files/dma1.c: 110:  SCANPR = 3;
 14412  00544C  0E03               	movlw	3
 14413  00544E  6FF7               	movwf	247,b	;volatile
 14414  005450  9ED2               	bcf	16338,7,c	;# 
 14415  005452  0139               	banksel	14831	;# 
 14416  005454  0E55               	movlw	85	;# 
 14417  005456  6FEF               	movwf	14831,b	;# 
 14418  005458  0EAA               	movlw	170	;# 
 14419  00545A  6FEF               	movwf	14831,b	;# 
 14420  00545C  81EF               	bsf	14831,0,b	;# 
 14421  00545E  8ED2               	bsf	16338,7,c	;# 
 14422                           
 14423                           ;mcc_generated_files/dma1.c: 123:  DMA1CON0 = 0x00;
 14424  005460  013B               	movlb	59	; () banked
 14425  005462  6BFC               	clrf	252,b	;volatile
 14426                           
 14427                           ; BSR set to: 59
 14428                           ; _DMA1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 14429  005464  0012               	return		;funcret
 14430  005466                     __end_of_DMA1_Initialize:
 14431                           	opt callstack 0
 14432                           
 14433 ;; *************** function _CLKREF_Initialize *****************
 14434 ;; Defined at:
 14435 ;;		line 58 in file "mcc_generated_files/clkref.c"
 14436 ;; Parameters:    Size  Location     Type
 14437 ;;		None
 14438 ;; Auto vars:     Size  Location     Type
 14439 ;;		None
 14440 ;; Return value:  Size  Location     Type
 14441 ;;                  1  [STACK] void 
 14442 ;; Registers used:
 14443 ;;		wreg, status,2
 14444 ;; Tracked objects:
 14445 ;;		On entry : 3F/3B
 14446 ;;		On exit  : 3F/3C
 14447 ;;		Unchanged: 0/0
 14448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14449 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14450 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14451 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14452 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14453 ;;Total ram usage:        0 bytes
 14454 ;; Hardware stack levels used:    1
 14455 ;; Hardware stack levels required when called:    3
 14456 ;; This function calls:
 14457 ;;		Nothing
 14458 ;; This function is called by:
 14459 ;;		_SYSTEM_Initialize
 14460 ;; This function uses a reentrant model
 14461 ;;
 14462                           
 14463                           	psect	text76
 14464  006136                     __ptext76:
 14465                           	opt callstack 0
 14466  006136                     _CLKREF_Initialize:
 14467                           	opt callstack 26
 14468                           
 14469                           ;mcc_generated_files/clkref.c: 61:     CLKRCLK = 0x00;
 14470                           
 14471                           ; BSR set to: 59
 14472                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14473                           ;incstack = 0
 14474  006136  013C               	movlb	60	; () banked
 14475  006138  6BE6               	clrf	230,b	;volatile
 14476                           
 14477                           ; BSR set to: 60
 14478                           ;mcc_generated_files/clkref.c: 63:     CLKRCON = 0x94;
 14479  00613A  0E94               	movlw	148
 14480  00613C  6FE5               	movwf	229,b	;volatile
 14481                           
 14482                           ; BSR set to: 60
 14483                           ; _CLKREF_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 14484  00613E  0012               	return		;funcret
 14485  006140                     __end_of_CLKREF_Initialize:
 14486                           	opt callstack 0
 14487                           
 14488 ;; *************** function _CLC1_Initialize *****************
 14489 ;; Defined at:
 14490 ;;		line 58 in file "mcc_generated_files/clc1.c"
 14491 ;; Parameters:    Size  Location     Type
 14492 ;;		None
 14493 ;; Auto vars:     Size  Location     Type
 14494 ;;		None
 14495 ;; Return value:  Size  Location     Type
 14496 ;;                  1  [STACK] void 
 14497 ;; Registers used:
 14498 ;;		wreg, status,2
 14499 ;; Tracked objects:
 14500 ;;		On entry : 0/39
 14501 ;;		On exit  : 3F/3C
 14502 ;;		Unchanged: 0/0
 14503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14504 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14505 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14506 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14507 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14508 ;;Total ram usage:        0 bytes
 14509 ;; Hardware stack levels used:    1
 14510 ;; Hardware stack levels required when called:    3
 14511 ;; This function calls:
 14512 ;;		Nothing
 14513 ;; This function is called by:
 14514 ;;		_SYSTEM_Initialize
 14515 ;; This function uses a reentrant model
 14516 ;;
 14517                           
 14518                           	psect	text77
 14519  005F20                     __ptext77:
 14520                           	opt callstack 0
 14521  005F20                     _CLC1_Initialize:
 14522                           	opt callstack 26
 14523                           
 14524                           ;mcc_generated_files/clc1.c: 63:     CLC1POL = 0x00;
 14525                           
 14526                           ; BSR set to: 60
 14527                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14528                           ;incstack = 0
 14529  005F20  013C               	movlb	60	; () banked
 14530  005F22  6B75               	clrf	117,b	;volatile
 14531                           
 14532                           ; BSR set to: 60
 14533                           ;mcc_generated_files/clc1.c: 65:     CLC1SEL0 = 0x04;
 14534  005F24  0E04               	movlw	4
 14535  005F26  6F76               	movwf	118,b	;volatile
 14536                           
 14537                           ;mcc_generated_files/clc1.c: 67:     CLC1SEL1 = 0x04;
 14538  005F28  0E04               	movlw	4
 14539  005F2A  6F77               	movwf	119,b	;volatile
 14540                           
 14541                           ;mcc_generated_files/clc1.c: 69:     CLC1SEL2 = 0x04;
 14542  005F2C  0E04               	movlw	4
 14543  005F2E  6F78               	movwf	120,b	;volatile
 14544                           
 14545                           ;mcc_generated_files/clc1.c: 71:     CLC1SEL3 = 0x04;
 14546  005F30  0E04               	movlw	4
 14547  005F32  6F79               	movwf	121,b	;volatile
 14548                           
 14549                           ; BSR set to: 60
 14550                           ;mcc_generated_files/clc1.c: 73:     CLC1GLS0 = 0x00;
 14551  005F34  6B7A               	clrf	122,b	;volatile
 14552                           
 14553                           ; BSR set to: 60
 14554                           ;mcc_generated_files/clc1.c: 75:     CLC1GLS1 = 0x00;
 14555  005F36  6B7B               	clrf	123,b	;volatile
 14556                           
 14557                           ; BSR set to: 60
 14558                           ;mcc_generated_files/clc1.c: 77:     CLC1GLS2 = 0x00;
 14559  005F38  6B7C               	clrf	124,b	;volatile
 14560                           
 14561                           ; BSR set to: 60
 14562                           ;mcc_generated_files/clc1.c: 79:     CLC1GLS3 = 0x00;
 14563  005F3A  6B7D               	clrf	125,b	;volatile
 14564                           
 14565                           ;mcc_generated_files/clc1.c: 81:     CLC1CON = 0x81;
 14566  005F3C  0E81               	movlw	129
 14567  005F3E  6F74               	movwf	116,b	;volatile
 14568                           
 14569                           ; BSR set to: 60
 14570                           ; _CLC1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 14571  005F40  0012               	return		;funcret
 14572  005F42                     __end_of_CLC1_Initialize:
 14573                           	opt callstack 0
 14574                           
 14575 ;; *************** function _ADCC_Initialize *****************
 14576 ;; Defined at:
 14577 ;;		line 64 in file "mcc_generated_files/adcc.c"
 14578 ;; Parameters:    Size  Location     Type
 14579 ;;		None
 14580 ;; Auto vars:     Size  Location     Type
 14581 ;;		None
 14582 ;; Return value:  Size  Location     Type
 14583 ;;                  1  [STACK] void 
 14584 ;; Registers used:
 14585 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 14586 ;; Tracked objects:
 14587 ;;		On entry : 3F/39
 14588 ;;		On exit  : 0/0
 14589 ;;		Unchanged: 0/0
 14590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14591 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14592 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14593 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14594 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14595 ;;Total ram usage:        0 bytes
 14596 ;; Hardware stack levels used:    1
 14597 ;; Hardware stack levels required when called:    4
 14598 ;; This function calls:
 14599 ;;		_ADCC_SetADIInterruptHandler
 14600 ;; This function is called by:
 14601 ;;		_SYSTEM_Initialize
 14602 ;; This function uses a reentrant model
 14603 ;;
 14604                           
 14605                           	psect	text78
 14606  005746                     __ptext78:
 14607                           	opt callstack 0
 14608  005746                     _ADCC_Initialize:
 14609                           	opt callstack 25
 14610                           
 14611                           ;mcc_generated_files/adcc.c: 68:     ADLTHL = 0x00;
 14612                           
 14613                           ; BSR set to: 60
 14614                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14615                           ;incstack = 0
 14616  005746  013E               	movlb	62	; () banked
 14617  005748  6BDE               	clrf	222,b	;volatile
 14618                           
 14619                           ;mcc_generated_files/adcc.c: 70:     ADLTHH = 0x00;
 14620  00574A  6BDF               	clrf	223,b	;volatile
 14621                           
 14622                           ;mcc_generated_files/adcc.c: 72:     ADUTHL = 0x00;
 14623  00574C  6BE0               	clrf	224,b	;volatile
 14624                           
 14625                           ;mcc_generated_files/adcc.c: 74:     ADUTHH = 0x00;
 14626  00574E  6BE1               	clrf	225,b	;volatile
 14627                           
 14628                           ;mcc_generated_files/adcc.c: 76:     ADSTPTL = 0x00;
 14629  005750  6BE4               	clrf	228,b	;volatile
 14630                           
 14631                           ;mcc_generated_files/adcc.c: 78:     ADSTPTH = 0x00;
 14632  005752  6BE5               	clrf	229,b	;volatile
 14633                           
 14634                           ;mcc_generated_files/adcc.c: 80:     ADACCU = 0x00;
 14635  005754  6BEA               	clrf	234,b	;volatile
 14636                           
 14637                           ;mcc_generated_files/adcc.c: 82:     ADRPT = 0x00;
 14638  005756  6BEC               	clrf	236,b	;volatile
 14639                           
 14640                           ;mcc_generated_files/adcc.c: 84:     ADPCH = 0x00;
 14641  005758  6BF1               	clrf	241,b	;volatile
 14642                           
 14643                           ;mcc_generated_files/adcc.c: 86:     ADACQL = 0x00;
 14644  00575A  6BF3               	clrf	243,b	;volatile
 14645                           
 14646                           ;mcc_generated_files/adcc.c: 88:     ADACQH = 0x00;
 14647  00575C  6BF4               	clrf	244,b	;volatile
 14648                           
 14649                           ;mcc_generated_files/adcc.c: 90:     ADCAP = 0x00;
 14650  00575E  6BF5               	clrf	245,b	;volatile
 14651                           
 14652                           ;mcc_generated_files/adcc.c: 92:     ADPREL = 0x00;
 14653  005760  6BF6               	clrf	246,b	;volatile
 14654                           
 14655                           ;mcc_generated_files/adcc.c: 94:     ADPREH = 0x00;
 14656  005762  6BF7               	clrf	247,b	;volatile
 14657                           
 14658                           ;mcc_generated_files/adcc.c: 96:     ADCON1 = 0x00;
 14659  005764  6BF9               	clrf	249,b	;volatile
 14660                           
 14661                           ;mcc_generated_files/adcc.c: 98:     ADCON2 = 0x00;
 14662  005766  6BFA               	clrf	250,b	;volatile
 14663                           
 14664                           ;mcc_generated_files/adcc.c: 100:     ADCON3 = 0x00;
 14665  005768  6BFB               	clrf	251,b	;volatile
 14666                           
 14667                           ;mcc_generated_files/adcc.c: 102:     ADSTAT = 0x00;
 14668  00576A  6BFC               	clrf	252,b	;volatile
 14669                           
 14670                           ; BSR set to: 62
 14671                           ;mcc_generated_files/adcc.c: 104:     ADREF = 0x02;
 14672  00576C  0E02               	movlw	2
 14673  00576E  6FFD               	movwf	253,b	;volatile
 14674                           
 14675                           ; BSR set to: 62
 14676                           ;mcc_generated_files/adcc.c: 106:     ADACT = 0x00;
 14677  005770  6BFE               	clrf	254,b	;volatile
 14678                           
 14679                           ; BSR set to: 62
 14680                           ;mcc_generated_files/adcc.c: 108:     ADCLK = 0x00;
 14681  005772  6BFF               	clrf	255,b	;volatile
 14682                           
 14683                           ;mcc_generated_files/adcc.c: 110:     ADCON0 = 0x94;
 14684  005774  0E94               	movlw	148
 14685  005776  6FF8               	movwf	248,b	;volatile
 14686                           
 14687                           ; BSR set to: 62
 14688                           ;mcc_generated_files/adcc.c: 113:     PIR1bits.ADIF = 0;
 14689  005778  0139               	movlb	57	; () banked
 14690  00577A  95A1               	bcf	161,2,b	;volatile
 14691                           
 14692                           ; BSR set to: 57
 14693                           ;mcc_generated_files/adcc.c: 115:     PIE1bits.ADIE = 1;
 14694  00577C  8591               	bsf	145,2,b	;volatile
 14695                           
 14696                           ; BSR set to: 57
 14697                           ;mcc_generated_files/adcc.c: 117:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 14698  00577E  0E9C               	movlw	low _ADCC_DefaultInterruptHandler
 14699  005780  6EE6               	movwf	postinc1,c
 14700  005782  0E61               	movlw	high _ADCC_DefaultInterruptHandler
 14701  005784  6EE6               	movwf	postinc1,c
 14702  005786  0E00               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 14703  005788  6EE6               	movwf	postinc1,c
 14704  00578A  ECF7  F02E         	call	_ADCC_SetADIInterruptHandler	;wreg free
 14705                           
 14706                           ; _ADCC_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 14707  00578E  0012               	return		;funcret
 14708  005790                     __end_of_ADCC_Initialize:
 14709                           	opt callstack 0
 14710                           
 14711 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 14712 ;; Defined at:
 14713 ;;		line 316 in file "mcc_generated_files/adcc.c"
 14714 ;; Parameters:    Size  Location     Type
 14715 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 14716 ;;		 -> ADCC_DefaultInterruptHandler(1), 
 14717 ;; Auto vars:     Size  Location     Type
 14718 ;;		None
 14719 ;; Return value:  Size  Location     Type
 14720 ;;                  1  [STACK] void 
 14721 ;; Registers used:
 14722 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 14723 ;; Tracked objects:
 14724 ;;		On entry : 3F/39
 14725 ;;		On exit  : 0/0
 14726 ;;		Unchanged: 0/0
 14727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14728 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14729 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14730 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14731 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14732 ;;Total ram usage:        0 bytes
 14733 ;; Hardware stack levels used:    1
 14734 ;; Hardware stack levels required when called:    3
 14735 ;; This function calls:
 14736 ;;		Nothing
 14737 ;; This function is called by:
 14738 ;;		_ADCC_Initialize
 14739 ;; This function uses a reentrant model
 14740 ;;
 14741                           
 14742                           	psect	text79
 14743  005DEE                     __ptext79:
 14744                           	opt callstack 0
 14745  005DEE                     _ADCC_SetADIInterruptHandler:
 14746                           	opt callstack 25
 14747                           
 14748                           ;mcc_generated_files/adcc.c: 317:     ADCC_ADI_InterruptHandler = InterruptHandler;
 14749                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 14750                           
 14751                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14752                           ;incstack = 0
 14753  005DEE  50E1               	movf	fsr1l,w,c
 14754  005DF0  0FFD               	addlw	-3
 14755  005DF2  6ED9               	movwf	fsr2l,c
 14756  005DF4  50E2               	movf	fsr1h,w,c
 14757  005DF6  6EDA               	movwf	fsr2h,c
 14758  005DF8  0EFF               	movlw	255
 14759  005DFA  22DA               	addwfc	fsr2h,f,c
 14760  005DFC  006F FF78  F008    	movff	postinc2,_ADCC_ADI_InterruptHandler
 14761  005E02  006F FF78  F009    	movff	postinc2,_ADCC_ADI_InterruptHandler+1
 14762  005E08  006F FF74  F00A    	movff	postdec2,_ADCC_ADI_InterruptHandler+2
 14763                           
 14764                           ; _ADCC_SetADIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 14765  005E0E  52E5               	movf	postdec1,f,c
 14766  005E10  52E5               	movf	postdec1,f,c
 14767  005E12  52E5               	movf	postdec1,f,c
 14768  005E14  0012               	return		;funcret
 14769  005E16                     __end_of_ADCC_SetADIInterruptHandler:
 14770                           	opt callstack 0
 14771                           
 14772 ;; *************** function _INT0_ISR *****************
 14773 ;; Defined at:
 14774 ;;		line 38 in file "mcc_generated_files/ext_int.c"
 14775 ;; Parameters:    Size  Location     Type
 14776 ;;		None
 14777 ;; Auto vars:     Size  Location     Type
 14778 ;;		None
 14779 ;; Return value:  Size  Location     Type
 14780 ;;                  1    wreg      void 
 14781 ;; Registers used:
 14782 ;;		wreg, status,2, status,0, pclath, tosl
 14783 ;; Tracked objects:
 14784 ;;		On entry : 0/0
 14785 ;;		On exit  : 0/0
 14786 ;;		Unchanged: 0/0
 14787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14788 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14789 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14790 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14791 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14792 ;;Total ram usage:        0 bytes
 14793 ;; Hardware stack levels used:    1
 14794 ;; Hardware stack levels required when called:    2
 14795 ;; This function calls:
 14796 ;;		_INT0_CallBack
 14797 ;; This function is called by:
 14798 ;;		Interrupt level 2
 14799 ;; This function uses a non-reentrant model
 14800 ;;
 14801                           
 14802                           	psect	text80
 14803  0060F8                     __ptext80:
 14804                           	opt callstack 0
 14805  0060F8                     _INT0_ISR:
 14806                           	opt callstack 17
 14807                           
 14808                           ;incstack = 0
 14809  0060F8  EE13  F12A         	lfsr	1,___inthi_sp
 14810                           
 14811                           ;mcc_generated_files/ext_int.c: 40:  (PIR1bits.INT0IF = 0);
 14812  0060FC  0139               	movlb	57	; () banked
 14813  0060FE  91A1               	bcf	161,0,b	;volatile
 14814                           
 14815                           ; BSR set to: 57
 14816                           ;mcc_generated_files/ext_int.c: 43:  INT0_CallBack();
 14817  006100  ECA1  F02F         	call	_INT0_CallBack	;wreg free
 14818  006104  0011               	retfie		f
 14819  006106                     __end_of_INT0_ISR:
 14820                           	opt callstack 0
 14821                           
 14822 ;; *************** function _INT0_CallBack *****************
 14823 ;; Defined at:
 14824 ;;		line 46 in file "mcc_generated_files/ext_int.c"
 14825 ;; Parameters:    Size  Location     Type
 14826 ;;		None
 14827 ;; Auto vars:     Size  Location     Type
 14828 ;;		None
 14829 ;; Return value:  Size  Location     Type
 14830 ;;                  1  [STACK] void 
 14831 ;; Registers used:
 14832 ;;		wreg, status,2, status,0, pclath, tosl
 14833 ;; Tracked objects:
 14834 ;;		On entry : 3F/39
 14835 ;;		On exit  : 0/0
 14836 ;;		Unchanged: 0/0
 14837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14838 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14839 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14840 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14841 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14842 ;;Total ram usage:        0 bytes
 14843 ;; Hardware stack levels used:    1
 14844 ;; Hardware stack levels required when called:    1
 14845 ;; This function calls:
 14846 ;;		Absolute function
 14847 ;;		_INT0_DefaultInterruptHandler
 14848 ;; This function is called by:
 14849 ;;		_INT0_ISR
 14850 ;; This function uses a reentrant model
 14851 ;;
 14852                           
 14853                           	psect	text81
 14854  005F42                     __ptext81:
 14855                           	opt callstack 0
 14856  005F42                     _INT0_CallBack:
 14857                           	opt callstack 17
 14858                           
 14859                           ;mcc_generated_files/ext_int.c: 49:  if (INT0_InterruptHandler) {
 14860                           
 14861                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14862                           ;incstack = 0
 14863  005F42  501D               	movf	_INT0_InterruptHandler,w,c
 14864  005F44  101E               	iorwf	_INT0_InterruptHandler+1,w,c
 14865  005F46  101F               	iorwf	_INT0_InterruptHandler+2,w,c
 14866  005F48  B4D8               	btfsc	status,2,c
 14867  005F4A  0012               	return	
 14868                           
 14869                           ;mcc_generated_files/ext_int.c: 50:   INT0_InterruptHandler();
 14870  005F4C  D801               	call	u121_48
 14871  005F4E  0012               	return	
 14872  005F50                     u121_48:
 14873  005F50  0005               	push	
 14874  005F52  6EFA               	movwf	pclath,c
 14875  005F54  501D               	movf	_INT0_InterruptHandler,w,c
 14876  005F56  6EFD               	movwf	tosl,c
 14877  005F58  501E               	movf	_INT0_InterruptHandler+1,w,c
 14878  005F5A  6EFE               	movwf	tosh,c
 14879  005F5C  501F               	movf	_INT0_InterruptHandler+2,w,c
 14880  005F5E  6EFF               	movwf	tosu,c
 14881  005F60  50FA               	movf	pclath,w,c
 14882  005F62  0012               	return		;indir
 14883  005F64                     __end_of_INT0_CallBack:
 14884                           	opt callstack 0
 14885                           
 14886 ;; *************** function _INT0_DefaultInterruptHandler *****************
 14887 ;; Defined at:
 14888 ;;		line 59 in file "mcc_generated_files/ext_int.c"
 14889 ;; Parameters:    Size  Location     Type
 14890 ;;		None
 14891 ;; Auto vars:     Size  Location     Type
 14892 ;;		None
 14893 ;; Return value:  Size  Location     Type
 14894 ;;                  1  [STACK] void 
 14895 ;; Registers used:
 14896 ;;		None
 14897 ;; Tracked objects:
 14898 ;;		On entry : 0/39
 14899 ;;		On exit  : 0/0
 14900 ;;		Unchanged: 0/0
 14901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14902 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14903 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14904 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14905 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14906 ;;Total ram usage:        0 bytes
 14907 ;; Hardware stack levels used:    1
 14908 ;; This function calls:
 14909 ;;		Nothing
 14910 ;; This function is called by:
 14911 ;;		_EXT_INT_Initialize
 14912 ;;		_INT0_CallBack
 14913 ;; This function uses a reentrant model
 14914 ;;
 14915                           
 14916                           	psect	text82
 14917  006196                     __ptext82:
 14918                           	opt callstack 0
 14919  006196                     _INT0_DefaultInterruptHandler:
 14920                           	opt callstack 17
 14921                           
 14922                           ; _INT0_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 14923                           
 14924                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14925                           ;incstack = 0
 14926  006196  0012               	return		;funcret
 14927  006198                     __end_of_INT0_DefaultInterruptHandler:
 14928                           	opt callstack 0
 14929                           
 14930 ;; *************** function _INT1_ISR *****************
 14931 ;; Defined at:
 14932 ;;		line 65 in file "mcc_generated_files/ext_int.c"
 14933 ;; Parameters:    Size  Location     Type
 14934 ;;		None
 14935 ;; Auto vars:     Size  Location     Type
 14936 ;;		None
 14937 ;; Return value:  Size  Location     Type
 14938 ;;                  1    wreg      void 
 14939 ;; Registers used:
 14940 ;;		wreg, status,2, status,0, pclath, tosl
 14941 ;; Tracked objects:
 14942 ;;		On entry : 0/0
 14943 ;;		On exit  : 0/0
 14944 ;;		Unchanged: 0/0
 14945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14946 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14947 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14948 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14949 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14950 ;;Total ram usage:        0 bytes
 14951 ;; Hardware stack levels used:    1
 14952 ;; Hardware stack levels required when called:    2
 14953 ;; This function calls:
 14954 ;;		_INT1_CallBack
 14955 ;; This function is called by:
 14956 ;;		Interrupt level 2
 14957 ;; This function uses a non-reentrant model
 14958 ;;
 14959                           
 14960                           	psect	text83
 14961  006108                     __ptext83:
 14962                           	opt callstack 0
 14963  006108                     _INT1_ISR:
 14964                           	opt callstack 17
 14965                           
 14966                           ;incstack = 0
 14967  006108  EE13  F12A         	lfsr	1,___inthi_sp
 14968                           
 14969                           ;mcc_generated_files/ext_int.c: 67:  (PIR5bits.INT1IF = 0);
 14970  00610C  0139               	movlb	57	; () banked
 14971  00610E  91A5               	bcf	165,0,b	;volatile
 14972                           
 14973                           ; BSR set to: 57
 14974                           ;mcc_generated_files/ext_int.c: 70:  INT1_CallBack();
 14975  006110  ECB2  F02F         	call	_INT1_CallBack	;wreg free
 14976  006114  0011               	retfie		f
 14977  006116                     __end_of_INT1_ISR:
 14978                           	opt callstack 0
 14979                           
 14980 ;; *************** function _INT1_CallBack *****************
 14981 ;; Defined at:
 14982 ;;		line 73 in file "mcc_generated_files/ext_int.c"
 14983 ;; Parameters:    Size  Location     Type
 14984 ;;		None
 14985 ;; Auto vars:     Size  Location     Type
 14986 ;;		None
 14987 ;; Return value:  Size  Location     Type
 14988 ;;                  1  [STACK] void 
 14989 ;; Registers used:
 14990 ;;		wreg, status,2, status,0, pclath, tosl
 14991 ;; Tracked objects:
 14992 ;;		On entry : 3F/39
 14993 ;;		On exit  : 0/0
 14994 ;;		Unchanged: 0/0
 14995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14996 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14997 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14998 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14999 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15000 ;;Total ram usage:        0 bytes
 15001 ;; Hardware stack levels used:    1
 15002 ;; Hardware stack levels required when called:    1
 15003 ;; This function calls:
 15004 ;;		Absolute function
 15005 ;;		_INT1_DefaultInterruptHandler
 15006 ;; This function is called by:
 15007 ;;		_INT1_ISR
 15008 ;; This function uses a reentrant model
 15009 ;;
 15010                           
 15011                           	psect	text84
 15012  005F64                     __ptext84:
 15013                           	opt callstack 0
 15014  005F64                     _INT1_CallBack:
 15015                           	opt callstack 17
 15016                           
 15017                           ;mcc_generated_files/ext_int.c: 76:  if (INT1_InterruptHandler) {
 15018                           
 15019                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15020                           ;incstack = 0
 15021  005F64  501A               	movf	_INT1_InterruptHandler,w,c
 15022  005F66  101B               	iorwf	_INT1_InterruptHandler+1,w,c
 15023  005F68  101C               	iorwf	_INT1_InterruptHandler+2,w,c
 15024  005F6A  B4D8               	btfsc	status,2,c
 15025  005F6C  0012               	return	
 15026                           
 15027                           ;mcc_generated_files/ext_int.c: 77:   INT1_InterruptHandler();
 15028  005F6E  D801               	call	u123_48
 15029  005F70  0012               	return	
 15030  005F72                     u123_48:
 15031  005F72  0005               	push	
 15032  005F74  6EFA               	movwf	pclath,c
 15033  005F76  501A               	movf	_INT1_InterruptHandler,w,c
 15034  005F78  6EFD               	movwf	tosl,c
 15035  005F7A  501B               	movf	_INT1_InterruptHandler+1,w,c
 15036  005F7C  6EFE               	movwf	tosh,c
 15037  005F7E  501C               	movf	_INT1_InterruptHandler+2,w,c
 15038  005F80  6EFF               	movwf	tosu,c
 15039  005F82  50FA               	movf	pclath,w,c
 15040  005F84  0012               	return		;indir
 15041  005F86                     __end_of_INT1_CallBack:
 15042                           	opt callstack 0
 15043                           
 15044 ;; *************** function _INT1_DefaultInterruptHandler *****************
 15045 ;; Defined at:
 15046 ;;		line 86 in file "mcc_generated_files/ext_int.c"
 15047 ;; Parameters:    Size  Location     Type
 15048 ;;		None
 15049 ;; Auto vars:     Size  Location     Type
 15050 ;;		None
 15051 ;; Return value:  Size  Location     Type
 15052 ;;                  1  [STACK] void 
 15053 ;; Registers used:
 15054 ;;		None
 15055 ;; Tracked objects:
 15056 ;;		On entry : 0/39
 15057 ;;		On exit  : 0/0
 15058 ;;		Unchanged: 0/0
 15059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15060 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15061 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15062 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15063 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15064 ;;Total ram usage:        0 bytes
 15065 ;; Hardware stack levels used:    1
 15066 ;; This function calls:
 15067 ;;		Nothing
 15068 ;; This function is called by:
 15069 ;;		_EXT_INT_Initialize
 15070 ;;		_INT1_CallBack
 15071 ;; This function uses a reentrant model
 15072 ;;
 15073                           
 15074                           	psect	text85
 15075  006198                     __ptext85:
 15076                           	opt callstack 0
 15077  006198                     _INT1_DefaultInterruptHandler:
 15078                           	opt callstack 17
 15079                           
 15080                           ; _INT1_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 15081                           
 15082                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15083                           ;incstack = 0
 15084  006198  0012               	return		;funcret
 15085  00619A                     __end_of_INT1_DefaultInterruptHandler:
 15086                           	opt callstack 0
 15087                           
 15088 ;; *************** function _INT2_ISR *****************
 15089 ;; Defined at:
 15090 ;;		line 92 in file "mcc_generated_files/ext_int.c"
 15091 ;; Parameters:    Size  Location     Type
 15092 ;;		None
 15093 ;; Auto vars:     Size  Location     Type
 15094 ;;		None
 15095 ;; Return value:  Size  Location     Type
 15096 ;;                  1    wreg      void 
 15097 ;; Registers used:
 15098 ;;		wreg, status,2, status,0, pclath, tosl
 15099 ;; Tracked objects:
 15100 ;;		On entry : 0/0
 15101 ;;		On exit  : 0/0
 15102 ;;		Unchanged: 0/0
 15103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15104 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15105 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15106 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15107 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15108 ;;Total ram usage:        0 bytes
 15109 ;; Hardware stack levels used:    1
 15110 ;; Hardware stack levels required when called:    2
 15111 ;; This function calls:
 15112 ;;		_INT2_CallBack
 15113 ;; This function is called by:
 15114 ;;		Interrupt level 2
 15115 ;; This function uses a non-reentrant model
 15116 ;;
 15117                           
 15118                           	psect	text86
 15119  006118                     __ptext86:
 15120                           	opt callstack 0
 15121  006118                     _INT2_ISR:
 15122                           	opt callstack 17
 15123                           
 15124                           ;incstack = 0
 15125  006118  EE13  F12A         	lfsr	1,___inthi_sp
 15126                           
 15127                           ;mcc_generated_files/ext_int.c: 94:  (PIR7bits.INT2IF = 0);
 15128  00611C  0139               	movlb	57	; () banked
 15129  00611E  9BA7               	bcf	167,5,b	;volatile
 15130                           
 15131                           ; BSR set to: 57
 15132                           ;mcc_generated_files/ext_int.c: 97:  INT2_CallBack();
 15133  006120  ECC3  F02F         	call	_INT2_CallBack	;wreg free
 15134  006124  0011               	retfie		f
 15135  006126                     __end_of_INT2_ISR:
 15136                           	opt callstack 0
 15137                           
 15138 ;; *************** function _INT2_CallBack *****************
 15139 ;; Defined at:
 15140 ;;		line 100 in file "mcc_generated_files/ext_int.c"
 15141 ;; Parameters:    Size  Location     Type
 15142 ;;		None
 15143 ;; Auto vars:     Size  Location     Type
 15144 ;;		None
 15145 ;; Return value:  Size  Location     Type
 15146 ;;                  1  [STACK] void 
 15147 ;; Registers used:
 15148 ;;		wreg, status,2, status,0, pclath, tosl
 15149 ;; Tracked objects:
 15150 ;;		On entry : 3F/39
 15151 ;;		On exit  : 0/0
 15152 ;;		Unchanged: 0/0
 15153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15154 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15155 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15156 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15157 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15158 ;;Total ram usage:        0 bytes
 15159 ;; Hardware stack levels used:    1
 15160 ;; Hardware stack levels required when called:    1
 15161 ;; This function calls:
 15162 ;;		Absolute function
 15163 ;;		_INT2_DefaultInterruptHandler
 15164 ;; This function is called by:
 15165 ;;		_INT2_ISR
 15166 ;; This function uses a reentrant model
 15167 ;;
 15168                           
 15169                           	psect	text87
 15170  005F86                     __ptext87:
 15171                           	opt callstack 0
 15172  005F86                     _INT2_CallBack:
 15173                           	opt callstack 17
 15174                           
 15175                           ;mcc_generated_files/ext_int.c: 103:  if (INT2_InterruptHandler) {
 15176                           
 15177                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15178                           ;incstack = 0
 15179  005F86  5017               	movf	_INT2_InterruptHandler,w,c
 15180  005F88  1018               	iorwf	_INT2_InterruptHandler+1,w,c
 15181  005F8A  1019               	iorwf	_INT2_InterruptHandler+2,w,c
 15182  005F8C  B4D8               	btfsc	status,2,c
 15183  005F8E  0012               	return	
 15184                           
 15185                           ;mcc_generated_files/ext_int.c: 104:   INT2_InterruptHandler();
 15186  005F90  D801               	call	u125_48
 15187  005F92  0012               	return	
 15188  005F94                     u125_48:
 15189  005F94  0005               	push	
 15190  005F96  6EFA               	movwf	pclath,c
 15191  005F98  5017               	movf	_INT2_InterruptHandler,w,c
 15192  005F9A  6EFD               	movwf	tosl,c
 15193  005F9C  5018               	movf	_INT2_InterruptHandler+1,w,c
 15194  005F9E  6EFE               	movwf	tosh,c
 15195  005FA0  5019               	movf	_INT2_InterruptHandler+2,w,c
 15196  005FA2  6EFF               	movwf	tosu,c
 15197  005FA4  50FA               	movf	pclath,w,c
 15198  005FA6  0012               	return		;indir
 15199  005FA8                     __end_of_INT2_CallBack:
 15200                           	opt callstack 0
 15201                           
 15202 ;; *************** function _INT2_DefaultInterruptHandler *****************
 15203 ;; Defined at:
 15204 ;;		line 113 in file "mcc_generated_files/ext_int.c"
 15205 ;; Parameters:    Size  Location     Type
 15206 ;;		None
 15207 ;; Auto vars:     Size  Location     Type
 15208 ;;		None
 15209 ;; Return value:  Size  Location     Type
 15210 ;;                  1  [STACK] void 
 15211 ;; Registers used:
 15212 ;;		None
 15213 ;; Tracked objects:
 15214 ;;		On entry : 0/39
 15215 ;;		On exit  : 0/0
 15216 ;;		Unchanged: 0/0
 15217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15218 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15219 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15220 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15221 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15222 ;;Total ram usage:        0 bytes
 15223 ;; Hardware stack levels used:    1
 15224 ;; This function calls:
 15225 ;;		Nothing
 15226 ;; This function is called by:
 15227 ;;		_EXT_INT_Initialize
 15228 ;;		_INT2_CallBack
 15229 ;; This function uses a reentrant model
 15230 ;;
 15231                           
 15232                           	psect	text88
 15233  00619A                     __ptext88:
 15234                           	opt callstack 0
 15235  00619A                     _INT2_DefaultInterruptHandler:
 15236                           	opt callstack 17
 15237                           
 15238                           ; _INT2_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 15239                           
 15240                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15241                           ;incstack = 0
 15242  00619A  0012               	return		;funcret
 15243  00619C                     __end_of_INT2_DefaultInterruptHandler:
 15244                           	opt callstack 0
 15245                           
 15246 ;; *************** function _Default_ISR *****************
 15247 ;; Defined at:
 15248 ;;		line 88 in file "mcc_generated_files/interrupt_manager.c"
 15249 ;; Parameters:    Size  Location     Type
 15250 ;;		None
 15251 ;; Auto vars:     Size  Location     Type
 15252 ;;		None
 15253 ;; Return value:  Size  Location     Type
 15254 ;;                  1    wreg      void 
 15255 ;; Registers used:
 15256 ;;		None
 15257 ;; Tracked objects:
 15258 ;;		On entry : 0/0
 15259 ;;		On exit  : 0/0
 15260 ;;		Unchanged: 0/0
 15261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15262 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15263 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15265 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15266 ;;Total ram usage:        0 bytes
 15267 ;; Hardware stack levels used:    1
 15268 ;; This function calls:
 15269 ;;		Nothing
 15270 ;; This function is called by:
 15271 ;;		Interrupt level 2
 15272 ;; This function uses a non-reentrant model
 15273 ;;
 15274                           
 15275                           	psect	text89
 15276  006190                     __ptext89:
 15277                           	opt callstack 0
 15278  006190                     _Default_ISR:
 15279                           	opt callstack 19
 15280                           
 15281                           ;incstack = 0
 15282  006190  EE13  F12A         	lfsr	1,___inthi_sp
 15283  006194  0011               	retfie		f
 15284  006196                     __end_of_Default_ISR:
 15285                           	opt callstack 0
 15286                           
 15287 ;; *************** function _ADCC_ISR *****************
 15288 ;; Defined at:
 15289 ;;		line 307 in file "mcc_generated_files/adcc.c"
 15290 ;; Parameters:    Size  Location     Type
 15291 ;;		None
 15292 ;; Auto vars:     Size  Location     Type
 15293 ;;		None
 15294 ;; Return value:  Size  Location     Type
 15295 ;;                  1    wreg      void 
 15296 ;; Registers used:
 15297 ;;		wreg, status,2, status,0, pclath, tosl
 15298 ;; Tracked objects:
 15299 ;;		On entry : 0/0
 15300 ;;		On exit  : 0/0
 15301 ;;		Unchanged: 0/0
 15302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15303 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15304 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15305 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15306 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15307 ;;Total ram usage:        0 bytes
 15308 ;; Hardware stack levels used:    1
 15309 ;; Hardware stack levels required when called:    1
 15310 ;; This function calls:
 15311 ;;		Absolute function
 15312 ;;		_ADCC_DefaultInterruptHandler
 15313 ;; This function is called by:
 15314 ;;		Interrupt level 2
 15315 ;; This function uses a non-reentrant model
 15316 ;;
 15317                           
 15318                           	psect	text90
 15319  005BBC                     __ptext90:
 15320                           	opt callstack 0
 15321  005BBC                     _ADCC_ISR:
 15322                           	opt callstack 18
 15323                           
 15324                           ;incstack = 0
 15325  005BBC  EE13  F12A         	lfsr	1,___inthi_sp
 15326                           
 15327                           ;mcc_generated_files/adcc.c: 310:     PIR1bits.ADIF = 0;
 15328  005BC0  0139               	movlb	57	; () banked
 15329  005BC2  95A1               	bcf	161,2,b	;volatile
 15330                           
 15331                           ; BSR set to: 57
 15332                           ;mcc_generated_files/adcc.c: 312:     if (ADCC_ADI_InterruptHandler)
 15333  005BC4  5008               	movf	_ADCC_ADI_InterruptHandler,w,c
 15334  005BC6  1009               	iorwf	_ADCC_ADI_InterruptHandler+1,w,c
 15335  005BC8  100A               	iorwf	_ADCC_ADI_InterruptHandler+2,w,c
 15336  005BCA  B4D8               	btfsc	status,2,c
 15337  005BCC  0011               	retfie		f
 15338                           
 15339                           ; BSR set to: 57
 15340                           ;mcc_generated_files/adcc.c: 313:             ADCC_ADI_InterruptHandler();
 15341  005BCE  D801               	call	i2u198_48
 15342  005BD0  0011               	retfie		f
 15343  005BD2                     i2u198_48:
 15344  005BD2  0005               	push	
 15345  005BD4  6EFA               	movwf	pclath,c
 15346  005BD6  5008               	movf	_ADCC_ADI_InterruptHandler,w,c
 15347  005BD8  6EFD               	movwf	tosl,c
 15348  005BDA  5009               	movf	_ADCC_ADI_InterruptHandler+1,w,c
 15349  005BDC  6EFE               	movwf	tosh,c
 15350  005BDE  500A               	movf	_ADCC_ADI_InterruptHandler+2,w,c
 15351  005BE0  6EFF               	movwf	tosu,c
 15352  005BE2  50FA               	movf	pclath,w,c
 15353  005BE4  0012               	return		;indir
 15354  005BE6                     __end_of_ADCC_ISR:
 15355                           	opt callstack 0
 15356                           
 15357 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 15358 ;; Defined at:
 15359 ;;		line 320 in file "mcc_generated_files/adcc.c"
 15360 ;; Parameters:    Size  Location     Type
 15361 ;;		None
 15362 ;; Auto vars:     Size  Location     Type
 15363 ;;		None
 15364 ;; Return value:  Size  Location     Type
 15365 ;;                  1  [STACK] void 
 15366 ;; Registers used:
 15367 ;;		None
 15368 ;; Tracked objects:
 15369 ;;		On entry : 3F/39
 15370 ;;		On exit  : 0/0
 15371 ;;		Unchanged: 0/0
 15372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15373 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15374 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15375 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15376 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15377 ;;Total ram usage:        0 bytes
 15378 ;; Hardware stack levels used:    1
 15379 ;; This function calls:
 15380 ;;		Nothing
 15381 ;; This function is called by:
 15382 ;;		_ADCC_Initialize
 15383 ;;		_ADCC_ISR
 15384 ;; This function uses a reentrant model
 15385 ;;
 15386                           
 15387                           	psect	text91
 15388  00619C                     __ptext91:
 15389                           	opt callstack 0
 15390  00619C                     _ADCC_DefaultInterruptHandler:
 15391                           	opt callstack 18
 15392                           
 15393                           ; _ADCC_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 15394                           
 15395                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15396                           ;incstack = 0
 15397  00619C  0012               	return		;funcret
 15398  00619E                     __end_of_ADCC_DefaultInterruptHandler:
 15399                           	opt callstack 0
 15400                           
 15401 ;; *************** function _UART1_tx_vect_isr *****************
 15402 ;; Defined at:
 15403 ;;		line 197 in file "mcc_generated_files/uart1.c"
 15404 ;; Parameters:    Size  Location     Type
 15405 ;;		None
 15406 ;; Auto vars:     Size  Location     Type
 15407 ;;		None
 15408 ;; Return value:  Size  Location     Type
 15409 ;;                  1    wreg      void 
 15410 ;; Registers used:
 15411 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 15412 ;; Tracked objects:
 15413 ;;		On entry : 0/0
 15414 ;;		On exit  : 0/0
 15415 ;;		Unchanged: 0/0
 15416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15417 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15418 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15420 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15421 ;;Total ram usage:        0 bytes
 15422 ;; Hardware stack levels used:    1
 15423 ;; Hardware stack levels required when called:    1
 15424 ;; This function calls:
 15425 ;;		Absolute function
 15426 ;;		_UART1_Transmit_ISR
 15427 ;; This function is called by:
 15428 ;;		Interrupt level 2
 15429 ;; This function uses a non-reentrant model
 15430 ;;
 15431                           
 15432                           	psect	text92
 15433  005E18                     __ptext92:
 15434                           	opt callstack 0
 15435  005E18                     _UART1_tx_vect_isr:
 15436                           	opt callstack 18
 15437                           
 15438                           ;incstack = 0
 15439  005E18  EE13  F12A         	lfsr	1,___inthi_sp
 15440                           
 15441                           ;mcc_generated_files/uart1.c: 199:  if (UART1_TxInterruptHandler) {
 15442  005E1C  500B               	movf	_UART1_TxInterruptHandler,w,c
 15443  005E1E  100C               	iorwf	_UART1_TxInterruptHandler+1,w,c
 15444  005E20  100D               	iorwf	_UART1_TxInterruptHandler+2,w,c
 15445  005E22  B4D8               	btfsc	status,2,c
 15446  005E24  0011               	retfie		f
 15447                           
 15448                           ;mcc_generated_files/uart1.c: 200:   UART1_TxInterruptHandler();
 15449  005E26  D801               	call	i2u410_48
 15450  005E28  0011               	retfie		f
 15451  005E2A                     i2u410_48:
 15452  005E2A  0005               	push	
 15453  005E2C  6EFA               	movwf	pclath,c
 15454  005E2E  500B               	movf	_UART1_TxInterruptHandler,w,c
 15455  005E30  6EFD               	movwf	tosl,c
 15456  005E32  500C               	movf	_UART1_TxInterruptHandler+1,w,c
 15457  005E34  6EFE               	movwf	tosh,c
 15458  005E36  500D               	movf	_UART1_TxInterruptHandler+2,w,c
 15459  005E38  6EFF               	movwf	tosu,c
 15460  005E3A  50FA               	movf	pclath,w,c
 15461  005E3C  0012               	return		;indir
 15462  005E3E                     __end_of_UART1_tx_vect_isr:
 15463                           	opt callstack 0
 15464                           
 15465 ;; *************** function _UART1_Transmit_ISR *****************
 15466 ;; Defined at:
 15467 ;;		line 211 in file "mcc_generated_files/uart1.c"
 15468 ;; Parameters:    Size  Location     Type
 15469 ;;		None
 15470 ;; Auto vars:     Size  Location     Type
 15471 ;;		None
 15472 ;; Return value:  Size  Location     Type
 15473 ;;                  1  [STACK] void 
 15474 ;; Registers used:
 15475 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15476 ;; Tracked objects:
 15477 ;;		On entry : 0/0
 15478 ;;		On exit  : 3B/39
 15479 ;;		Unchanged: 0/0
 15480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15481 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15482 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15483 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15484 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15485 ;;Total ram usage:        0 bytes
 15486 ;; Hardware stack levels used:    1
 15487 ;; This function calls:
 15488 ;;		Nothing
 15489 ;; This function is called by:
 15490 ;;		_UART1_Initialize
 15491 ;;		_UART1_tx_vect_isr
 15492 ;; This function uses a reentrant model
 15493 ;;
 15494                           
 15495                           	psect	text93
 15496  005AE6                     __ptext93:
 15497                           	opt callstack 0
 15498  005AE6                     _UART1_Transmit_ISR:
 15499                           	opt callstack 18
 15500                           
 15501                           ;mcc_generated_files/uart1.c: 214:  if (sizeof(uart1TxBuffer) > uart1TxBufferRemaining) 
      +                          {
 15502                           
 15503                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15504                           ;incstack = 0
 15505  005AE6  0E40               	movlw	64
 15506  005AE8  6038               	cpfslt	_uart1TxBufferRemaining,c
 15507  005AEA  D010               	goto	l597
 15508                           
 15509                           ;mcc_generated_files/uart1.c: 215:   U1TXB = uart1TxBuffer[uart1TxTail++];
 15510  005AEC  0EC0               	movlw	low _uart1TxBuffer
 15511  005AEE  2439               	addwf	_uart1TxTail,w,c	;volatile
 15512  005AF0  6ED9               	movwf	fsr2l,c
 15513  005AF2  6ADA               	clrf	fsr2h,c
 15514  005AF4  0E02               	movlw	high _uart1TxBuffer
 15515  005AF6  22DA               	addwfc	fsr2h,f,c
 15516  005AF8  50DF               	movf	indf2,w,c
 15517  005AFA  013D               	movlb	61	; () banked
 15518  005AFC  6FEA               	movwf	234,b	;volatile
 15519                           
 15520                           ; BSR set to: 61
 15521  005AFE  2A39               	incf	_uart1TxTail,f,c	;volatile
 15522                           
 15523                           ; BSR set to: 61
 15524                           ;mcc_generated_files/uart1.c: 216:   if (sizeof(uart1TxBuffer) <= uart1TxTail) {
 15525  005B00  0E3F               	movlw	63
 15526  005B02  6439               	cpfsgt	_uart1TxTail,c
 15527  005B04  D001               	goto	l6371
 15528                           
 15529                           ; BSR set to: 61
 15530                           ;mcc_generated_files/uart1.c: 217:    uart1TxTail = 0;
 15531  005B06  6A39               	clrf	_uart1TxTail,c	;volatile
 15532  005B08                     l6371:
 15533                           
 15534                           ; BSR set to: 61
 15535                           ;mcc_generated_files/uart1.c: 219:   uart1TxBufferRemaining++;
 15536  005B08  2A38               	incf	_uart1TxBufferRemaining,f,c	;volatile
 15537                           
 15538                           ;mcc_generated_files/uart1.c: 220:  } else {
 15539  005B0A  0012               	return	
 15540  005B0C                     l597:
 15541                           
 15542                           ;mcc_generated_files/uart1.c: 221:   PIE3bits.U1TXIE = 0;
 15543  005B0C  0139               	movlb	57	; () banked
 15544  005B0E  9993               	bcf	147,4,b	;volatile
 15545                           
 15546                           ; _UART1_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 15547  005B10  0012               	return		;funcret
 15548  005B12                     __end_of_UART1_Transmit_ISR:
 15549                           	opt callstack 0
 15550                           
 15551 ;; *************** function _UART1_rx_vect_isr *****************
 15552 ;; Defined at:
 15553 ;;		line 204 in file "mcc_generated_files/uart1.c"
 15554 ;; Parameters:    Size  Location     Type
 15555 ;;		None
 15556 ;; Auto vars:     Size  Location     Type
 15557 ;;		None
 15558 ;; Return value:  Size  Location     Type
 15559 ;;                  1    wreg      void 
 15560 ;; Registers used:
 15561 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 15562 ;; Tracked objects:
 15563 ;;		On entry : 0/0
 15564 ;;		On exit  : 0/0
 15565 ;;		Unchanged: 0/0
 15566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15567 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15568 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15569 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15570 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15571 ;;Total ram usage:        0 bytes
 15572 ;; Hardware stack levels used:    1
 15573 ;; Hardware stack levels required when called:    1
 15574 ;; This function calls:
 15575 ;;		Absolute function
 15576 ;;		_UART1_Receive_ISR
 15577 ;; This function is called by:
 15578 ;;		Interrupt level 2
 15579 ;; This function uses a non-reentrant model
 15580 ;;
 15581                           
 15582                           	psect	text94
 15583  005E40                     __ptext94:
 15584                           	opt callstack 0
 15585  005E40                     _UART1_rx_vect_isr:
 15586                           	opt callstack 18
 15587                           
 15588                           ;incstack = 0
 15589  005E40  EE13  F12A         	lfsr	1,___inthi_sp
 15590                           
 15591                           ;mcc_generated_files/uart1.c: 206:  if (UART1_RxInterruptHandler) {
 15592  005E44  500E               	movf	_UART1_RxInterruptHandler,w,c
 15593  005E46  100F               	iorwf	_UART1_RxInterruptHandler+1,w,c
 15594  005E48  1010               	iorwf	_UART1_RxInterruptHandler+2,w,c
 15595  005E4A  B4D8               	btfsc	status,2,c
 15596  005E4C  0011               	retfie		f
 15597                           
 15598                           ;mcc_generated_files/uart1.c: 207:   UART1_RxInterruptHandler();
 15599  005E4E  D801               	call	i2u412_48
 15600  005E50  0011               	retfie		f
 15601  005E52                     i2u412_48:
 15602  005E52  0005               	push	
 15603  005E54  6EFA               	movwf	pclath,c
 15604  005E56  500E               	movf	_UART1_RxInterruptHandler,w,c
 15605  005E58  6EFD               	movwf	tosl,c
 15606  005E5A  500F               	movf	_UART1_RxInterruptHandler+1,w,c
 15607  005E5C  6EFE               	movwf	tosh,c
 15608  005E5E  5010               	movf	_UART1_RxInterruptHandler+2,w,c
 15609  005E60  6EFF               	movwf	tosu,c
 15610  005E62  50FA               	movf	pclath,w,c
 15611  005E64  0012               	return		;indir
 15612  005E66                     __end_of_UART1_rx_vect_isr:
 15613                           	opt callstack 0
 15614                           
 15615 ;; *************** function _UART1_Receive_ISR *****************
 15616 ;; Defined at:
 15617 ;;		line 227 in file "mcc_generated_files/uart1.c"
 15618 ;; Parameters:    Size  Location     Type
 15619 ;;		None
 15620 ;; Auto vars:     Size  Location     Type
 15621 ;;		None
 15622 ;; Return value:  Size  Location     Type
 15623 ;;                  1  [STACK] void 
 15624 ;; Registers used:
 15625 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15626 ;; Tracked objects:
 15627 ;;		On entry : 0/0
 15628 ;;		On exit  : 0/0
 15629 ;;		Unchanged: 0/0
 15630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15631 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15632 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15633 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15634 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15635 ;;Total ram usage:        0 bytes
 15636 ;; Hardware stack levels used:    1
 15637 ;; This function calls:
 15638 ;;		Nothing
 15639 ;; This function is called by:
 15640 ;;		_UART1_Initialize
 15641 ;;		_UART1_rx_vect_isr
 15642 ;; This function uses a reentrant model
 15643 ;;
 15644                           
 15645                           	psect	text95
 15646  005FA8                     __ptext95:
 15647                           	opt callstack 0
 15648  005FA8                     _UART1_Receive_ISR:
 15649                           	opt callstack 18
 15650                           
 15651                           ;mcc_generated_files/uart1.c: 230:  uart1RxBuffer[uart1RxHead++] = U1RXB;
 15652                           
 15653                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15654                           ;incstack = 0
 15655  005FA8  0E80               	movlw	low _uart1RxBuffer
 15656  005FAA  2437               	addwf	_uart1RxHead,w,c	;volatile
 15657  005FAC  6ED9               	movwf	fsr2l,c
 15658  005FAE  6ADA               	clrf	fsr2h,c
 15659  005FB0  0E02               	movlw	high _uart1RxBuffer
 15660  005FB2  22DA               	addwfc	fsr2h,f,c
 15661  005FB4  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 15662  005FBA  2A37               	incf	_uart1RxHead,f,c	;volatile
 15663                           
 15664                           ;mcc_generated_files/uart1.c: 231:  if (sizeof(uart1RxBuffer) <= uart1RxHead) {
 15665  005FBC  0E3F               	movlw	63
 15666  005FBE  6437               	cpfsgt	_uart1RxHead,c
 15667  005FC0  D001               	goto	l6381
 15668                           
 15669                           ;mcc_generated_files/uart1.c: 232:   uart1RxHead = 0;
 15670  005FC2  6A37               	clrf	_uart1RxHead,c	;volatile
 15671  005FC4                     l6381:
 15672                           
 15673                           ;mcc_generated_files/uart1.c: 234:  uart1RxCount++;
 15674  005FC4  2A35               	incf	_uart1RxCount,f,c	;volatile
 15675                           
 15676                           ; _UART1_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 15677  005FC6  0012               	return		;funcret
 15678  005FC8                     __end_of_UART1_Receive_ISR:
 15679                           	opt callstack 0
 15680                           
 15681 ;; *************** function _UART2_tx_vect_isr *****************
 15682 ;; Defined at:
 15683 ;;		line 195 in file "mcc_generated_files/uart2.c"
 15684 ;; Parameters:    Size  Location     Type
 15685 ;;		None
 15686 ;; Auto vars:     Size  Location     Type
 15687 ;;		None
 15688 ;; Return value:  Size  Location     Type
 15689 ;;                  1    wreg      void 
 15690 ;; Registers used:
 15691 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 15692 ;; Tracked objects:
 15693 ;;		On entry : 0/0
 15694 ;;		On exit  : 0/0
 15695 ;;		Unchanged: 0/0
 15696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15697 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15698 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15699 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15700 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15701 ;;Total ram usage:        0 bytes
 15702 ;; Hardware stack levels used:    1
 15703 ;; Hardware stack levels required when called:    1
 15704 ;; This function calls:
 15705 ;;		Absolute function
 15706 ;;		_UART2_Transmit_ISR
 15707 ;; This function is called by:
 15708 ;;		Interrupt level 2
 15709 ;; This function uses a non-reentrant model
 15710 ;;
 15711                           
 15712                           	psect	text96
 15713  005E68                     __ptext96:
 15714                           	opt callstack 0
 15715  005E68                     _UART2_tx_vect_isr:
 15716                           	opt callstack 18
 15717                           
 15718                           ;incstack = 0
 15719  005E68  EE13  F12A         	lfsr	1,___inthi_sp
 15720                           
 15721                           ;mcc_generated_files/uart2.c: 197:     if(UART2_TxInterruptHandler)
 15722  005E6C  5011               	movf	_UART2_TxInterruptHandler,w,c
 15723  005E6E  1012               	iorwf	_UART2_TxInterruptHandler+1,w,c
 15724  005E70  1013               	iorwf	_UART2_TxInterruptHandler+2,w,c
 15725  005E72  B4D8               	btfsc	status,2,c
 15726  005E74  0011               	retfie		f
 15727                           
 15728                           ;mcc_generated_files/uart2.c: 198:     {;mcc_generated_files/uart2.c: 199:         UART2
      +                          _TxInterruptHandler();
 15729  005E76  D801               	call	i2u414_48
 15730  005E78  0011               	retfie		f
 15731  005E7A                     i2u414_48:
 15732  005E7A  0005               	push	
 15733  005E7C  6EFA               	movwf	pclath,c
 15734  005E7E  5011               	movf	_UART2_TxInterruptHandler,w,c
 15735  005E80  6EFD               	movwf	tosl,c
 15736  005E82  5012               	movf	_UART2_TxInterruptHandler+1,w,c
 15737  005E84  6EFE               	movwf	tosh,c
 15738  005E86  5013               	movf	_UART2_TxInterruptHandler+2,w,c
 15739  005E88  6EFF               	movwf	tosu,c
 15740  005E8A  50FA               	movf	pclath,w,c
 15741  005E8C  0012               	return		;indir
 15742  005E8E                     __end_of_UART2_tx_vect_isr:
 15743                           	opt callstack 0
 15744                           
 15745 ;; *************** function _UART2_Transmit_ISR *****************
 15746 ;; Defined at:
 15747 ;;		line 213 in file "mcc_generated_files/uart2.c"
 15748 ;; Parameters:    Size  Location     Type
 15749 ;;		None
 15750 ;; Auto vars:     Size  Location     Type
 15751 ;;		None
 15752 ;; Return value:  Size  Location     Type
 15753 ;;                  1  [STACK] void 
 15754 ;; Registers used:
 15755 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15756 ;; Tracked objects:
 15757 ;;		On entry : 0/0
 15758 ;;		On exit  : 3B/39
 15759 ;;		Unchanged: 0/0
 15760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15761 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15762 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15764 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15765 ;;Total ram usage:        0 bytes
 15766 ;; Hardware stack levels used:    1
 15767 ;; This function calls:
 15768 ;;		Nothing
 15769 ;; This function is called by:
 15770 ;;		_UART2_Initialize
 15771 ;;		_UART2_tx_vect_isr
 15772 ;; This function uses a reentrant model
 15773 ;;
 15774                           
 15775                           	psect	text97
 15776  005B12                     __ptext97:
 15777                           	opt callstack 0
 15778  005B12                     _UART2_Transmit_ISR:
 15779                           	opt callstack 18
 15780                           
 15781                           ;mcc_generated_files/uart2.c: 216:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
 15782                           
 15783                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15784                           ;incstack = 0
 15785  005B12  0E40               	movlw	64
 15786  005B14  6032               	cpfslt	_uart2TxBufferRemaining,c
 15787  005B16  D010               	goto	l717
 15788                           
 15789                           ;mcc_generated_files/uart2.c: 217:     {;mcc_generated_files/uart2.c: 218:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
 15790  005B18  0E40               	movlw	low _uart2TxBuffer
 15791  005B1A  2433               	addwf	_uart2TxTail,w,c	;volatile
 15792  005B1C  6ED9               	movwf	fsr2l,c
 15793  005B1E  6ADA               	clrf	fsr2h,c
 15794  005B20  0E02               	movlw	high _uart2TxBuffer
 15795  005B22  22DA               	addwfc	fsr2h,f,c
 15796  005B24  50DF               	movf	indf2,w,c
 15797  005B26  013D               	movlb	61	; () banked
 15798  005B28  6FD2               	movwf	210,b	;volatile
 15799                           
 15800                           ; BSR set to: 61
 15801  005B2A  2A33               	incf	_uart2TxTail,f,c	;volatile
 15802                           
 15803                           ; BSR set to: 61
 15804                           ;mcc_generated_files/uart2.c: 219:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
 15805  005B2C  0E3F               	movlw	63
 15806  005B2E  6433               	cpfsgt	_uart2TxTail,c
 15807  005B30  D001               	goto	l6393
 15808                           
 15809                           ; BSR set to: 61
 15810                           ;mcc_generated_files/uart2.c: 220:         {;mcc_generated_files/uart2.c: 221:          
      +                             uart2TxTail = 0;
 15811  005B32  6A33               	clrf	_uart2TxTail,c	;volatile
 15812  005B34                     l6393:
 15813                           
 15814                           ; BSR set to: 61
 15815                           ;mcc_generated_files/uart2.c: 223:         uart2TxBufferRemaining++;
 15816  005B34  2A32               	incf	_uart2TxBufferRemaining,f,c	;volatile
 15817                           
 15818                           ;mcc_generated_files/uart2.c: 224:     }
 15819  005B36  0012               	return	
 15820  005B38                     l717:
 15821                           
 15822                           ;mcc_generated_files/uart2.c: 226:     {;mcc_generated_files/uart2.c: 227:         PIE6b
      +                          its.U2TXIE = 0;
 15823  005B38  0139               	movlb	57	; () banked
 15824  005B3A  9796               	bcf	150,3,b	;volatile
 15825                           
 15826                           ; _UART2_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 15827  005B3C  0012               	return		;funcret
 15828  005B3E                     __end_of_UART2_Transmit_ISR:
 15829                           	opt callstack 0
 15830                           
 15831 ;; *************** function _UART2_rx_vect_isr *****************
 15832 ;; Defined at:
 15833 ;;		line 203 in file "mcc_generated_files/uart2.c"
 15834 ;; Parameters:    Size  Location     Type
 15835 ;;		None
 15836 ;; Auto vars:     Size  Location     Type
 15837 ;;		None
 15838 ;; Return value:  Size  Location     Type
 15839 ;;                  1    wreg      void 
 15840 ;; Registers used:
 15841 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 15842 ;; Tracked objects:
 15843 ;;		On entry : 0/0
 15844 ;;		On exit  : 0/0
 15845 ;;		Unchanged: 0/0
 15846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15847 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15848 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15849 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15850 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15851 ;;Total ram usage:        0 bytes
 15852 ;; Hardware stack levels used:    1
 15853 ;; Hardware stack levels required when called:    1
 15854 ;; This function calls:
 15855 ;;		Absolute function
 15856 ;;		_UART2_Receive_ISR
 15857 ;; This function is called by:
 15858 ;;		Interrupt level 2
 15859 ;; This function uses a non-reentrant model
 15860 ;;
 15861                           
 15862                           	psect	text98
 15863  005E90                     __ptext98:
 15864                           	opt callstack 0
 15865  005E90                     _UART2_rx_vect_isr:
 15866                           	opt callstack 18
 15867                           
 15868                           ;incstack = 0
 15869  005E90  EE13  F12A         	lfsr	1,___inthi_sp
 15870                           
 15871                           ;mcc_generated_files/uart2.c: 205:     if(UART2_RxInterruptHandler)
 15872  005E94  5014               	movf	_UART2_RxInterruptHandler,w,c
 15873  005E96  1015               	iorwf	_UART2_RxInterruptHandler+1,w,c
 15874  005E98  1016               	iorwf	_UART2_RxInterruptHandler+2,w,c
 15875  005E9A  B4D8               	btfsc	status,2,c
 15876  005E9C  0011               	retfie		f
 15877                           
 15878                           ;mcc_generated_files/uart2.c: 206:     {;mcc_generated_files/uart2.c: 207:         UART2
      +                          _RxInterruptHandler();
 15879  005E9E  D801               	call	i2u416_48
 15880  005EA0  0011               	retfie		f
 15881  005EA2                     i2u416_48:
 15882  005EA2  0005               	push	
 15883  005EA4  6EFA               	movwf	pclath,c
 15884  005EA6  5014               	movf	_UART2_RxInterruptHandler,w,c
 15885  005EA8  6EFD               	movwf	tosl,c
 15886  005EAA  5015               	movf	_UART2_RxInterruptHandler+1,w,c
 15887  005EAC  6EFE               	movwf	tosh,c
 15888  005EAE  5016               	movf	_UART2_RxInterruptHandler+2,w,c
 15889  005EB0  6EFF               	movwf	tosu,c
 15890  005EB2  50FA               	movf	pclath,w,c
 15891  005EB4  0012               	return		;indir
 15892  005EB6                     __end_of_UART2_rx_vect_isr:
 15893                           	opt callstack 0
 15894                           
 15895 ;; *************** function _UART2_Receive_ISR *****************
 15896 ;; Defined at:
 15897 ;;		line 233 in file "mcc_generated_files/uart2.c"
 15898 ;; Parameters:    Size  Location     Type
 15899 ;;		None
 15900 ;; Auto vars:     Size  Location     Type
 15901 ;;		None
 15902 ;; Return value:  Size  Location     Type
 15903 ;;                  1  [STACK] void 
 15904 ;; Registers used:
 15905 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15906 ;; Tracked objects:
 15907 ;;		On entry : 0/0
 15908 ;;		On exit  : 0/0
 15909 ;;		Unchanged: 0/0
 15910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15911 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15912 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15913 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15914 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15915 ;;Total ram usage:        0 bytes
 15916 ;; Hardware stack levels used:    1
 15917 ;; This function calls:
 15918 ;;		Nothing
 15919 ;; This function is called by:
 15920 ;;		_UART2_Initialize
 15921 ;;		_UART2_rx_vect_isr
 15922 ;; This function uses a reentrant model
 15923 ;;
 15924                           
 15925                           	psect	text99
 15926  005FC8                     __ptext99:
 15927                           	opt callstack 0
 15928  005FC8                     _UART2_Receive_ISR:
 15929                           	opt callstack 18
 15930                           
 15931                           ;mcc_generated_files/uart2.c: 236:     uart2RxBuffer[uart2RxHead++] = U2RXB;
 15932                           
 15933                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15934                           ;incstack = 0
 15935  005FC8  0E00               	movlw	low _uart2RxBuffer
 15936  005FCA  2431               	addwf	_uart2RxHead,w,c	;volatile
 15937  005FCC  6ED9               	movwf	fsr2l,c
 15938  005FCE  6ADA               	clrf	fsr2h,c
 15939  005FD0  0E02               	movlw	high _uart2RxBuffer
 15940  005FD2  22DA               	addwfc	fsr2h,f,c
 15941  005FD4  006F F743 FFDF     	movff	15824,indf2	;volatile
 15942  005FDA  2A31               	incf	_uart2RxHead,f,c	;volatile
 15943                           
 15944                           ;mcc_generated_files/uart2.c: 237:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
 15945  005FDC  0E3F               	movlw	63
 15946  005FDE  6431               	cpfsgt	_uart2RxHead,c
 15947  005FE0  D001               	goto	l6403
 15948                           
 15949                           ;mcc_generated_files/uart2.c: 238:     {;mcc_generated_files/uart2.c: 239:         uart2
      +                          RxHead = 0;
 15950  005FE2  6A31               	clrf	_uart2RxHead,c	;volatile
 15951  005FE4                     l6403:
 15952                           
 15953                           ;mcc_generated_files/uart2.c: 241:     uart2RxCount++;
 15954  005FE4  2A2F               	incf	_uart2RxCount,f,c	;volatile
 15955                           
 15956                           ; _UART2_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 15957  005FE6  0012               	return		;funcret
 15958  005FE8                     __end_of_UART2_Receive_ISR:
 15959                           	opt callstack 0
 15960                           
 15961 ;; *************** function _TMR6_ISR *****************
 15962 ;; Defined at:
 15963 ;;		line 171 in file "mcc_generated_files/tmr6.c"
 15964 ;; Parameters:    Size  Location     Type
 15965 ;;		None
 15966 ;; Auto vars:     Size  Location     Type
 15967 ;;		None
 15968 ;; Return value:  Size  Location     Type
 15969 ;;                  1    wreg      void 
 15970 ;; Registers used:
 15971 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 15972 ;; Tracked objects:
 15973 ;;		On entry : 0/0
 15974 ;;		On exit  : 0/0
 15975 ;;		Unchanged: 0/0
 15976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15977 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15978 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15979 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15980 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15981 ;;Total ram usage:        1 bytes
 15982 ;; Hardware stack levels used:    1
 15983 ;; Hardware stack levels required when called:    2
 15984 ;; This function calls:
 15985 ;;		_TMR6_CallBack
 15986 ;; This function is called by:
 15987 ;;		Interrupt level 2
 15988 ;; This function uses a non-reentrant model
 15989 ;;
 15990                           
 15991                           	psect	text100
 15992  006074                     __ptext100:
 15993                           	opt callstack 0
 15994  006074                     _TMR6_ISR:
 15995                           	opt callstack 17
 15996                           
 15997                           ;incstack = 0
 15998  006074  0060  F0EC  F05B   	movff	btemp,??_TMR6_ISR
 15999  00607A  EE13  F12A         	lfsr	1,___inthi_sp
 16000                           
 16001                           ;mcc_generated_files/tmr6.c: 175:  PIR9bits.TMR6IF = 0;
 16002  00607E  0139               	movlb	57	; () banked
 16003  006080  91A9               	bcf	169,0,b	;volatile
 16004                           
 16005                           ; BSR set to: 57
 16006                           ;mcc_generated_files/tmr6.c: 179:  TMR6_CallBack();
 16007  006082  EC5B  F02F         	call	_TMR6_CallBack	;wreg free
 16008  006086  0060  F16C  F03B   	movff	??_TMR6_ISR,btemp
 16009  00608C  0011               	retfie		f
 16010  00608E                     __end_of_TMR6_ISR:
 16011                           	opt callstack 0
 16012                           
 16013 ;; *************** function _TMR6_CallBack *****************
 16014 ;; Defined at:
 16015 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 16016 ;; Parameters:    Size  Location     Type
 16017 ;;		None
 16018 ;; Auto vars:     Size  Location     Type
 16019 ;;		None
 16020 ;; Return value:  Size  Location     Type
 16021 ;;                  1  [STACK] void 
 16022 ;; Registers used:
 16023 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 16024 ;; Tracked objects:
 16025 ;;		On entry : 3F/39
 16026 ;;		On exit  : 0/0
 16027 ;;		Unchanged: 0/0
 16028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16029 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16030 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16031 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16032 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16033 ;;Total ram usage:        0 bytes
 16034 ;; Hardware stack levels used:    1
 16035 ;; Hardware stack levels required when called:    1
 16036 ;; This function calls:
 16037 ;;		Absolute function
 16038 ;;		_TMR6_DefaultInterruptHandler
 16039 ;; This function is called by:
 16040 ;;		_TMR6_ISR
 16041 ;; This function uses a reentrant model
 16042 ;;
 16043                           
 16044                           	psect	text101
 16045  005EB6                     __ptext101:
 16046                           	opt callstack 0
 16047  005EB6                     _TMR6_CallBack:
 16048                           	opt callstack 17
 16049                           
 16050                           ;mcc_generated_files/tmr6.c: 186:  if (TMR6_InterruptHandler) {
 16051                           
 16052                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16053                           ;incstack = 0
 16054  005EB6  0100               	movlb	0	; () banked
 16055  005EB8  51F3               	movf	_TMR6_InterruptHandler& (0+255),w,b
 16056  005EBA  11F4               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 16057  005EBC  11F5               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 16058  005EBE  B4D8               	btfsc	status,2,c
 16059  005EC0  0012               	return	
 16060                           
 16061                           ; BSR set to: 0
 16062                           ;mcc_generated_files/tmr6.c: 187:   TMR6_InterruptHandler();
 16063  005EC2  D801               	call	u499_48
 16064  005EC4  0012               	return	
 16065  005EC6                     u499_48:
 16066  005EC6  0005               	push	
 16067  005EC8  6EFA               	movwf	pclath,c
 16068  005ECA  51F3               	movf	_TMR6_InterruptHandler& (0+255),w,b
 16069  005ECC  6EFD               	movwf	tosl,c
 16070  005ECE  51F4               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 16071  005ED0  6EFE               	movwf	tosh,c
 16072  005ED2  51F5               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 16073  005ED4  6EFF               	movwf	tosu,c
 16074  005ED6  50FA               	movf	pclath,w,c
 16075  005ED8  0012               	return		;indir
 16076  005EDA                     __end_of_TMR6_CallBack:
 16077                           	opt callstack 0
 16078                           
 16079 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 16080 ;; Defined at:
 16081 ;;		line 196 in file "mcc_generated_files/tmr6.c"
 16082 ;; Parameters:    Size  Location     Type
 16083 ;;		None
 16084 ;; Auto vars:     Size  Location     Type
 16085 ;;  i               1  [STACK] unsigned char 
 16086 ;; Return value:  Size  Location     Type
 16087 ;;                  1  [STACK] void 
 16088 ;; Registers used:
 16089 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 16090 ;; Tracked objects:
 16091 ;;		On entry : 3F/0
 16092 ;;		On exit  : 0/0
 16093 ;;		Unchanged: 0/0
 16094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16095 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16096 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16097 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16098 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16099 ;;Total ram usage:        0 bytes
 16100 ;; Hardware stack levels used:    1
 16101 ;; This function calls:
 16102 ;;		Nothing
 16103 ;; This function is called by:
 16104 ;;		_TMR6_Initialize
 16105 ;;		_TMR6_CallBack
 16106 ;; This function uses a reentrant model
 16107 ;;
 16108                           
 16109                           	psect	text102
 16110  00581C                     __ptext102:
 16111                           	opt callstack 0
 16112  00581C                     _TMR6_DefaultInterruptHandler:
 16113                           	opt callstack 0
 16114                           
 16115                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16116  00581C  52E6               	movf	postinc1,f,c
 16117                           
 16118                           ;mcc_generated_files/tmr6.c: 198:  uint8_t i;;mcc_generated_files/tmr6.c: 203:  for (i =
      +                           0; i < TMR_COUNT; i++) {
 16119                           ;stkvar	_i @ sp[(-1)+0]
 16120                           
 16121                           ;incstack = 0
 16122  00581E  0EFF               	movlw	-1
 16123  005820  6AE3               	clrf	plusw1,c
 16124  005822                     l7919:
 16125                           
 16126                           ;mcc_generated_files/tmr6.c: 204:   if (tickCount[i] != 0) {
 16127                           ;stkvar	_i @ sp[(-1)+0]
 16128  005822  0EFF               	movlw	-1
 16129  005824  50E3               	movf	plusw1,w,c
 16130  005826  0D02               	mullw	2
 16131  005828  50F3               	movf	prodl,w,c
 16132  00582A  0FD9               	addlw	low _tickCount
 16133  00582C  6ED9               	movwf	fsr2l,c
 16134  00582E  6ADA               	clrf	fsr2h,c
 16135  005830  50DE               	movf	postinc2,w,c
 16136  005832  10DE               	iorwf	postinc2,w,c
 16137  005834  B4D8               	btfsc	status,2,c
 16138  005836  D00A               	goto	l7923
 16139                           
 16140                           ;mcc_generated_files/tmr6.c: 205:    tickCount[i]--;
 16141                           ;stkvar	_i @ sp[(-1)+0]
 16142  005838  0EFF               	movlw	-1
 16143  00583A  50E3               	movf	plusw1,w,c
 16144  00583C  0D02               	mullw	2
 16145  00583E  50F3               	movf	prodl,w,c
 16146  005840  0FD9               	addlw	low _tickCount
 16147  005842  6ED9               	movwf	fsr2l,c
 16148  005844  6ADA               	clrf	fsr2h,c
 16149  005846  06DE               	decf	postinc2,f,c
 16150  005848  0E00               	movlw	0
 16151  00584A  5ADD               	subwfb	postdec2,f,c
 16152  00584C                     l7923:
 16153                           
 16154                           ;mcc_generated_files/tmr6.c: 207:  }
 16155                           ;stkvar	_i @ sp[(-1)+0]
 16156  00584C  0EFF               	movlw	-1
 16157  00584E  2AE3               	incf	plusw1,f,c
 16158                           
 16159                           ;stkvar	_i @ sp[(-1)+0]
 16160  005850  0EFF               	movlw	-1
 16161  005852  006F FF8C  F03B    	movff	plusw1,btemp
 16162  005858  0E05               	movlw	5
 16163  00585A  643B               	cpfsgt	btemp,c
 16164  00585C  D7E2               	goto	l7919
 16165                           
 16166                           ; _TMR6_DefaultInterruptHandler: autosize = 1, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 16167  00585E  52E5               	movf	postdec1,f,c
 16168  005860  0012               	return		;funcret
 16169  005862                     __end_of_TMR6_DefaultInterruptHandler:
 16170                           	opt callstack 0
 16171                           
 16172 ;; *************** function _DMA1_DMASCNT_ISR *****************
 16173 ;; Defined at:
 16174 ;;		line 126 in file "mcc_generated_files/dma1.c"
 16175 ;; Parameters:    Size  Location     Type
 16176 ;;		None
 16177 ;; Auto vars:     Size  Location     Type
 16178 ;;		None
 16179 ;; Return value:  Size  Location     Type
 16180 ;;                  1    wreg      void 
 16181 ;; Registers used:
 16182 ;;		None
 16183 ;; Tracked objects:
 16184 ;;		On entry : 0/0
 16185 ;;		On exit  : 3F/0
 16186 ;;		Unchanged: 0/0
 16187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16188 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16189 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16191 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16192 ;;Total ram usage:        0 bytes
 16193 ;; Hardware stack levels used:    1
 16194 ;; This function calls:
 16195 ;;		Nothing
 16196 ;; This function is called by:
 16197 ;;		Interrupt level 2
 16198 ;; This function uses a non-reentrant model
 16199 ;;
 16200                           
 16201                           	psect	text103
 16202  006128                     __ptext103:
 16203                           	opt callstack 0
 16204  006128                     _DMA1_DMASCNT_ISR:
 16205                           	opt callstack 19
 16206                           
 16207                           ;incstack = 0
 16208  006128  EE13  F12A         	lfsr	1,___inthi_sp
 16209                           
 16210                           ;mcc_generated_files/dma1.c: 128:  PIR2bits.DMA1SCNTIF = 0;
 16211  00612C  0139               	movlb	57	; () banked
 16212  00612E  91A2               	bcf	162,0,b	;volatile
 16213                           
 16214                           ;mcc_generated_files/dma1.c: 130:  spi_link.LCD_DATA = 0;
 16215  006130  0100               	movlb	0	; () banked
 16216  006132  97CD               	bcf	_spi_link& (0+255),3,b	;volatile
 16217                           
 16218                           ; BSR set to: 0
 16219  006134  0011               	retfie		f
 16220  006136                     __end_of_DMA1_DMASCNT_ISR:
 16221                           	opt callstack 0
 16222                           
 16223 ;; *************** function _DMA1_DMADCNT_ISR *****************
 16224 ;; Defined at:
 16225 ;;		line 133 in file "mcc_generated_files/dma1.c"
 16226 ;; Parameters:    Size  Location     Type
 16227 ;;		None
 16228 ;; Auto vars:     Size  Location     Type
 16229 ;;		None
 16230 ;; Return value:  Size  Location     Type
 16231 ;;                  1    wreg      void 
 16232 ;; Registers used:
 16233 ;;		None
 16234 ;; Tracked objects:
 16235 ;;		On entry : 0/0
 16236 ;;		On exit  : 3F/39
 16237 ;;		Unchanged: 0/0
 16238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16239 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16240 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16241 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16242 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16243 ;;Total ram usage:        0 bytes
 16244 ;; Hardware stack levels used:    1
 16245 ;; This function calls:
 16246 ;;		Nothing
 16247 ;; This function is called by:
 16248 ;;		Interrupt level 2
 16249 ;; This function uses a non-reentrant model
 16250 ;;
 16251                           
 16252                           	psect	text104
 16253  006140                     __ptext104:
 16254                           	opt callstack 0
 16255  006140                     _DMA1_DMADCNT_ISR:
 16256                           	opt callstack 19
 16257                           
 16258                           ; BSR set to: 0
 16259                           ;incstack = 0
 16260  006140  EE13  F12A         	lfsr	1,___inthi_sp
 16261                           
 16262                           ;mcc_generated_files/dma1.c: 135:  PIR2bits.DMA1DCNTIF = 0;
 16263  006144  0139               	movlb	57	; () banked
 16264  006146  93A2               	bcf	162,1,b	;volatile
 16265                           
 16266                           ; BSR set to: 57
 16267  006148  0011               	retfie		f
 16268  00614A                     __end_of_DMA1_DMADCNT_ISR:
 16269                           	opt callstack 0
 16270                           
 16271 ;; *************** function _DMA1_DMAA_ISR *****************
 16272 ;; Defined at:
 16273 ;;		line 143 in file "mcc_generated_files/dma1.c"
 16274 ;; Parameters:    Size  Location     Type
 16275 ;;		None
 16276 ;; Auto vars:     Size  Location     Type
 16277 ;;		None
 16278 ;; Return value:  Size  Location     Type
 16279 ;;                  1    wreg      void 
 16280 ;; Registers used:
 16281 ;;		None
 16282 ;; Tracked objects:
 16283 ;;		On entry : 0/0
 16284 ;;		On exit  : 3F/39
 16285 ;;		Unchanged: 0/0
 16286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16287 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16288 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16289 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16290 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16291 ;;Total ram usage:        0 bytes
 16292 ;; Hardware stack levels used:    1
 16293 ;; This function calls:
 16294 ;;		Nothing
 16295 ;; This function is called by:
 16296 ;;		Interrupt level 2
 16297 ;; This function uses a non-reentrant model
 16298 ;;
 16299                           
 16300                           	psect	text105
 16301  00614C                     __ptext105:
 16302                           	opt callstack 0
 16303  00614C                     _DMA1_DMAA_ISR:
 16304                           	opt callstack 19
 16305                           
 16306                           ; BSR set to: 57
 16307                           ;incstack = 0
 16308  00614C  EE13  F12A         	lfsr	1,___inthi_sp
 16309                           
 16310                           ;mcc_generated_files/dma1.c: 146:  PIR2bits.DMA1AIF = 0;
 16311  006150  0139               	movlb	57	; () banked
 16312  006152  97A2               	bcf	162,3,b	;volatile
 16313                           
 16314                           ; BSR set to: 57
 16315  006154  0011               	retfie		f
 16316  006156                     __end_of_DMA1_DMAA_ISR:
 16317                           	opt callstack 0
 16318                           
 16319 ;; *************** function _DMA1_DMAOR_ISR *****************
 16320 ;; Defined at:
 16321 ;;		line 154 in file "mcc_generated_files/dma1.c"
 16322 ;; Parameters:    Size  Location     Type
 16323 ;;		None
 16324 ;; Auto vars:     Size  Location     Type
 16325 ;;		None
 16326 ;; Return value:  Size  Location     Type
 16327 ;;                  1    wreg      void 
 16328 ;; Registers used:
 16329 ;;		None
 16330 ;; Tracked objects:
 16331 ;;		On entry : 0/0
 16332 ;;		On exit  : 3F/39
 16333 ;;		Unchanged: 0/0
 16334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16335 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16336 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16337 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16338 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16339 ;;Total ram usage:        0 bytes
 16340 ;; Hardware stack levels used:    1
 16341 ;; This function calls:
 16342 ;;		Nothing
 16343 ;; This function is called by:
 16344 ;;		Interrupt level 2
 16345 ;; This function uses a non-reentrant model
 16346 ;;
 16347                           
 16348                           	psect	text106
 16349  006158                     __ptext106:
 16350                           	opt callstack 0
 16351  006158                     _DMA1_DMAOR_ISR:
 16352                           	opt callstack 19
 16353                           
 16354                           ; BSR set to: 57
 16355                           ;incstack = 0
 16356  006158  EE13  F12A         	lfsr	1,___inthi_sp
 16357                           
 16358                           ;mcc_generated_files/dma1.c: 157:  PIR2bits.DMA1ORIF = 0;
 16359  00615C  0139               	movlb	57	; () banked
 16360  00615E  95A2               	bcf	162,2,b	;volatile
 16361                           
 16362                           ; BSR set to: 57
 16363  006160  0011               	retfie		f
 16364  006162                     __end_of_DMA1_DMAOR_ISR:
 16365                           	opt callstack 0
 16366                           
 16367 ;; *************** function _TMR5_ISR *****************
 16368 ;; Defined at:
 16369 ;;		line 163 in file "mcc_generated_files/tmr5.c"
 16370 ;; Parameters:    Size  Location     Type
 16371 ;;		None
 16372 ;; Auto vars:     Size  Location     Type
 16373 ;;		None
 16374 ;; Return value:  Size  Location     Type
 16375 ;;                  1    wreg      void 
 16376 ;; Registers used:
 16377 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+11, tosl
 16378 ;; Tracked objects:
 16379 ;;		On entry : 0/0
 16380 ;;		On exit  : 0/0
 16381 ;;		Unchanged: 0/0
 16382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16383 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16384 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16385 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16386 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16387 ;;Total ram usage:        1 bytes
 16388 ;; Hardware stack levels used:    1
 16389 ;; Hardware stack levels required when called:    2
 16390 ;; This function calls:
 16391 ;;		_TMR5_CallBack
 16392 ;;		_TMR5_WriteTimer
 16393 ;; This function is called by:
 16394 ;;		Interrupt level 2
 16395 ;; This function uses a non-reentrant model
 16396 ;;
 16397                           
 16398                           	psect	text107
 16399  0059DC                     __ptext107:
 16400                           	opt callstack 0
 16401  0059DC                     _TMR5_ISR:
 16402                           	opt callstack 17
 16403                           
 16404                           ; BSR set to: 57
 16405                           ;incstack = 0
 16406  0059DC  0060  F118  F05C   	movff	btemp+11,??_TMR5_ISR
 16407  0059E2  EE13  F12A         	lfsr	1,___inthi_sp
 16408                           
 16409                           ;mcc_generated_files/tmr5.c: 165:  static volatile unsigned int CountCallBack = 0;;mcc_g
      +                          enerated_files/tmr5.c: 168:  PIR8bits.TMR5IF = 0;
 16410  0059E6  0139               	movlb	57	; () banked
 16411  0059E8  9DA8               	bcf	168,6,b	;volatile
 16412                           
 16413                           ; BSR set to: 57
 16414                           ;mcc_generated_files/tmr5.c: 169:  TMR5_WriteTimer(timer5ReloadVal);
 16415  0059EA  0060  F0A3  FFE6   	movff	_timer5ReloadVal,postinc1
 16416  0059F0  0060  F0A7  FFE6   	movff	_timer5ReloadVal+1,postinc1
 16417  0059F6  EC52  F02C         	call	_TMR5_WriteTimer	;wreg free
 16418                           
 16419                           ;mcc_generated_files/tmr5.c: 172:  if (++CountCallBack >= 50) {
 16420  0059FA  4A26               	infsnz	TMR5_ISR@CountCallBack,f,c	;volatile
 16421  0059FC  2A27               	incf	TMR5_ISR@CountCallBack+1,f,c	;volatile
 16422  0059FE  5027               	movf	TMR5_ISR@CountCallBack+1,w,c	;volatile
 16423  005A00  E104               	bnz	i2u417_40
 16424  005A02  0E32               	movlw	50
 16425  005A04  5C26               	subwf	TMR5_ISR@CountCallBack,w,c	;volatile
 16426  005A06  A0D8               	btfss	status,0,c
 16427  005A08  D004               	goto	i2l1139
 16428  005A0A                     i2u417_40:
 16429                           
 16430                           ;mcc_generated_files/tmr5.c: 174:   TMR5_CallBack();
 16431  005A0A  EC6D  F02F         	call	_TMR5_CallBack	;wreg free
 16432                           
 16433                           ;mcc_generated_files/tmr5.c: 177:   CountCallBack = 0;
 16434  005A0E  6A26               	clrf	TMR5_ISR@CountCallBack,c	;volatile
 16435  005A10  6A27               	clrf	TMR5_ISR@CountCallBack+1,c	;volatile
 16436  005A12                     i2l1139:
 16437  005A12  0060  F170  F046   	movff	??_TMR5_ISR,btemp+11
 16438  005A18  0011               	retfie		f
 16439  005A1A                     __end_of_TMR5_ISR:
 16440                           	opt callstack 0
 16441                           
 16442 ;; *************** function _TMR5_WriteTimer *****************
 16443 ;; Defined at:
 16444 ;;		line 129 in file "mcc_generated_files/tmr5.c"
 16445 ;; Parameters:    Size  Location     Type
 16446 ;;  timerVal        2  [STACK] unsigned short 
 16447 ;; Auto vars:     Size  Location     Type
 16448 ;;		None
 16449 ;; Return value:  Size  Location     Type
 16450 ;;                  1  [STACK] void 
 16451 ;; Registers used:
 16452 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 16453 ;; Tracked objects:
 16454 ;;		On entry : 3F/39
 16455 ;;		On exit  : 0/0
 16456 ;;		Unchanged: 0/0
 16457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16458 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16459 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16460 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16461 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16462 ;;Total ram usage:        0 bytes
 16463 ;; Hardware stack levels used:    1
 16464 ;; This function calls:
 16465 ;;		Nothing
 16466 ;; This function is called by:
 16467 ;;		_TMR5_ISR
 16468 ;; This function uses a reentrant model
 16469 ;;
 16470                           
 16471                           	psect	text108
 16472  0058A4                     __ptext108:
 16473                           	opt callstack 0
 16474  0058A4                     _TMR5_WriteTimer:
 16475                           	opt callstack 18
 16476                           
 16477                           ;mcc_generated_files/tmr5.c: 129: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 130: {;mcc_generated_files/tmr5.c: 131:  if (T5CONbits.NOT_SYNC == 1) {
 16478                           
 16479                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16480                           ;incstack = 0
 16481  0058A4  A49A               	btfss	16282,2,c	;volatile
 16482  0058A6  D00F               	goto	l4013
 16483                           
 16484                           ;mcc_generated_files/tmr5.c: 133:   T5CONbits.TMR5ON = 0;
 16485  0058A8  909A               	bcf	16282,0,c	;volatile
 16486                           
 16487                           ;mcc_generated_files/tmr5.c: 136:   TMR5H = (timerVal >> 8);
 16488                           ;stkvar	_timerVal @ sp[(0)+-2]
 16489  0058AA  0EFF               	movlw	255
 16490  0058AC  24E1               	addwf	fsr1l,w,c
 16491  0058AE  6ED9               	movwf	fsr2l,c
 16492  0058B0  0EFF               	movlw	255
 16493  0058B2  20E2               	addwfc	fsr1h,w,c
 16494  0058B4  6EDA               	movwf	fsr2h,c
 16495  0058B6  50DF               	movf	indf2,w,c
 16496  0058B8  6E99               	movwf	16281,c	;volatile
 16497                           
 16498                           ;mcc_generated_files/tmr5.c: 137:   TMR5L = timerVal;
 16499                           ;stkvar	_timerVal @ sp[(0)+-2]
 16500  0058BA  0EFE               	movlw	-2
 16501  0058BC  006F FF8F FF98     	movff	plusw1,16280	;volatile
 16502                           
 16503                           ;mcc_generated_files/tmr5.c: 140:   T5CONbits.TMR5ON = 1;
 16504  0058C2  809A               	bsf	16282,0,c	;volatile
 16505                           
 16506                           ;mcc_generated_files/tmr5.c: 141:  } else {
 16507  0058C4  D00C               	goto	l1122
 16508  0058C6                     l4013:
 16509                           
 16510                           ;mcc_generated_files/tmr5.c: 143:   TMR5H = (timerVal >> 8);
 16511                           ;stkvar	_timerVal @ sp[(0)+-2]
 16512  0058C6  0EFF               	movlw	255
 16513  0058C8  24E1               	addwf	fsr1l,w,c
 16514  0058CA  6ED9               	movwf	fsr2l,c
 16515  0058CC  0EFF               	movlw	255
 16516  0058CE  20E2               	addwfc	fsr1h,w,c
 16517  0058D0  6EDA               	movwf	fsr2h,c
 16518  0058D2  50DF               	movf	indf2,w,c
 16519  0058D4  6E99               	movwf	16281,c	;volatile
 16520                           
 16521                           ;mcc_generated_files/tmr5.c: 144:   TMR5L = timerVal;
 16522                           ;stkvar	_timerVal @ sp[(0)+-2]
 16523  0058D6  0EFE               	movlw	-2
 16524  0058D8  006F FF8F FF98     	movff	plusw1,16280	;volatile
 16525  0058DE                     l1122:
 16526                           
 16527                           ; _TMR5_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 16528  0058DE  52E5               	movf	postdec1,f,c
 16529  0058E0  52E5               	movf	postdec1,f,c
 16530  0058E2  0012               	return		;funcret
 16531  0058E4                     __end_of_TMR5_WriteTimer:
 16532                           	opt callstack 0
 16533                           
 16534 ;; *************** function _TMR5_CallBack *****************
 16535 ;; Defined at:
 16536 ;;		line 181 in file "mcc_generated_files/tmr5.c"
 16537 ;; Parameters:    Size  Location     Type
 16538 ;;		None
 16539 ;; Auto vars:     Size  Location     Type
 16540 ;;		None
 16541 ;; Return value:  Size  Location     Type
 16542 ;;                  1  [STACK] void 
 16543 ;; Registers used:
 16544 ;;		wreg, status,2, status,0, pclath, btemp+11, tosl
 16545 ;; Tracked objects:
 16546 ;;		On entry : 0/39
 16547 ;;		On exit  : 0/0
 16548 ;;		Unchanged: 0/0
 16549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16550 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16551 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16553 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16554 ;;Total ram usage:        0 bytes
 16555 ;; Hardware stack levels used:    1
 16556 ;; Hardware stack levels required when called:    1
 16557 ;; This function calls:
 16558 ;;		Absolute function
 16559 ;;		_TMR5_DefaultInterruptHandler
 16560 ;; This function is called by:
 16561 ;;		_TMR5_ISR
 16562 ;; This function uses a reentrant model
 16563 ;;
 16564                           
 16565                           	psect	text109
 16566  005EDA                     __ptext109:
 16567                           	opt callstack 0
 16568  005EDA                     _TMR5_CallBack:
 16569                           	opt callstack 17
 16570                           
 16571                           ;mcc_generated_files/tmr5.c: 184:  if (TMR5_InterruptHandler) {
 16572                           
 16573                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16574                           ;incstack = 0
 16575  005EDA  0100               	movlb	0	; () banked
 16576  005EDC  51F0               	movf	_TMR5_InterruptHandler& (0+255),w,b
 16577  005EDE  11F1               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 16578  005EE0  11F2               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 16579  005EE2  B4D8               	btfsc	status,2,c
 16580  005EE4  0012               	return	
 16581                           
 16582                           ; BSR set to: 0
 16583                           ;mcc_generated_files/tmr5.c: 185:   TMR5_InterruptHandler();
 16584  005EE6  D801               	call	u348_48
 16585  005EE8  0012               	return	
 16586  005EEA                     u348_48:
 16587  005EEA  0005               	push	
 16588  005EEC  6EFA               	movwf	pclath,c
 16589  005EEE  51F0               	movf	_TMR5_InterruptHandler& (0+255),w,b
 16590  005EF0  6EFD               	movwf	tosl,c
 16591  005EF2  51F1               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 16592  005EF4  6EFE               	movwf	tosh,c
 16593  005EF6  51F2               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 16594  005EF8  6EFF               	movwf	tosu,c
 16595  005EFA  50FA               	movf	pclath,w,c
 16596  005EFC  0012               	return		;indir
 16597  005EFE                     __end_of_TMR5_CallBack:
 16598                           	opt callstack 0
 16599                           
 16600 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 16601 ;; Defined at:
 16602 ;;		line 194 in file "mcc_generated_files/tmr5.c"
 16603 ;; Parameters:    Size  Location     Type
 16604 ;;		None
 16605 ;; Auto vars:     Size  Location     Type
 16606 ;;		None
 16607 ;; Return value:  Size  Location     Type
 16608 ;;                  1  [STACK] void 
 16609 ;; Registers used:
 16610 ;;		wreg, status,2, status,0, btemp+11
 16611 ;; Tracked objects:
 16612 ;;		On entry : 3F/0
 16613 ;;		On exit  : 0/0
 16614 ;;		Unchanged: 0/0
 16615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16616 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16617 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16618 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16619 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16620 ;;Total ram usage:        0 bytes
 16621 ;; Hardware stack levels used:    1
 16622 ;; This function calls:
 16623 ;;		Nothing
 16624 ;; This function is called by:
 16625 ;;		_TMR5_Initialize
 16626 ;;		_TMR5_CallBack
 16627 ;; This function uses a reentrant model
 16628 ;;
 16629                           
 16630                           	psect	text110
 16631  00608E                     __ptext110:
 16632                           	opt callstack 0
 16633  00608E                     _TMR5_DefaultInterruptHandler:
 16634                           	opt callstack 17
 16635                           
 16636                           ;mcc_generated_files/tmr5.c: 198:  LATEbits.LATE0 = (uint8_t) ~LATEbits.LATE0;
 16637                           
 16638                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16639                           ;incstack = 0
 16640  00608E  A0BE               	btfss	16318,0,c	;volatile
 16641  006090  D002               	goto	u327_40
 16642  006092  0E01               	movlw	1
 16643  006094  D001               	goto	u327_46
 16644  006096                     u327_40:
 16645  006096  0E00               	movlw	0
 16646  006098                     u327_46:
 16647  006098  0AFF               	xorlw	255
 16648  00609A  6E46               	movwf	btemp+11,c
 16649  00609C  50BE               	movf	16318,w,c	;volatile
 16650  00609E  1846               	xorwf	btemp+11,w,c
 16651  0060A0  0BFE               	andlw	-2
 16652  0060A2  1846               	xorwf	btemp+11,w,c
 16653  0060A4  6EBE               	movwf	16318,c	;volatile
 16654                           
 16655                           ; _TMR5_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 16656  0060A6  0012               	return		;funcret
 16657  0060A8                     __end_of_TMR5_DefaultInterruptHandler:
 16658                           	opt callstack 0
 16659                           
 16660                           ;
 16661                           ; Interrupt Vector Table @ 0x8
 16662                           ;
 16663                           
 16664                           	psect	ivt0x8
 16665  000008                     __pivt0x8:
 16666                           	opt callstack 0
 16667  000008                     ivt0x8_base:
 16668                           	opt callstack 0
 16669                           
 16670                           ; Vector 0 : SWINT
 16671  000008  1864               	dw	_Default_ISR shr (0+2)
 16672                           
 16673                           ; Vector 1 : HLVD
 16674  00000A  1864               	dw	_Default_ISR shr (0+2)
 16675                           
 16676                           ; Vector 2 : OSF
 16677  00000C  1864               	dw	_Default_ISR shr (0+2)
 16678                           
 16679                           ; Vector 3 : CSW
 16680  00000E  1864               	dw	_Default_ISR shr (0+2)
 16681                           
 16682                           ; Vector 4 : NVM
 16683  000010  1864               	dw	_Default_ISR shr (0+2)
 16684                           
 16685                           ; Vector 5 : SCAN
 16686  000012  1864               	dw	_Default_ISR shr (0+2)
 16687                           
 16688                           ; Vector 6 : CRC
 16689  000014  1864               	dw	_Default_ISR shr (0+2)
 16690                           
 16691                           ; Vector 7 : IOC
 16692  000016  1864               	dw	_Default_ISR shr (0+2)
 16693                           
 16694                           ; Vector 8 : INT0
 16695  000018  183E               	dw	_INT0_ISR shr (0+2)
 16696                           
 16697                           ; Vector 9 : ZCD
 16698  00001A  1864               	dw	_Default_ISR shr (0+2)
 16699                           
 16700                           ; Vector 10 : AD
 16701  00001C  16EF               	dw	_ADCC_ISR shr (0+2)
 16702                           
 16703                           ; Vector 11 : ADT
 16704  00001E  1864               	dw	_Default_ISR shr (0+2)
 16705                           
 16706                           ; Vector 12 : CMP1
 16707  000020  1864               	dw	_Default_ISR shr (0+2)
 16708                           
 16709                           ; Vector 13 : SMT1
 16710  000022  1864               	dw	_Default_ISR shr (0+2)
 16711                           
 16712                           ; Vector 14 : SMT1PRA
 16713  000024  1864               	dw	_Default_ISR shr (0+2)
 16714                           
 16715                           ; Vector 15 : SMT1PRW
 16716  000026  1864               	dw	_Default_ISR shr (0+2)
 16717                           
 16718                           ; Vector 16 : DMA1SCNT
 16719  000028  184A               	dw	_DMA1_DMASCNT_ISR shr (0+2)
 16720                           
 16721                           ; Vector 17 : DMA1DCNT
 16722  00002A  1850               	dw	_DMA1_DMADCNT_ISR shr (0+2)
 16723                           
 16724                           ; Vector 18 : DMA1OR
 16725  00002C  1856               	dw	_DMA1_DMAOR_ISR shr (0+2)
 16726                           
 16727                           ; Vector 19 : DMA1A
 16728  00002E  1853               	dw	_DMA1_DMAA_ISR shr (0+2)
 16729                           
 16730                           ; Vector 20 : SPI1RX
 16731  000030  1864               	dw	_Default_ISR shr (0+2)
 16732                           
 16733                           ; Vector 21 : SPI1TX
 16734  000032  1864               	dw	_Default_ISR shr (0+2)
 16735                           
 16736                           ; Vector 22 : SPI1
 16737  000034  1864               	dw	_Default_ISR shr (0+2)
 16738                           
 16739                           ; Vector 23 : I2C1RX
 16740  000036  1864               	dw	_Default_ISR shr (0+2)
 16741                           
 16742                           ; Vector 24 : I2C1TX
 16743  000038  1864               	dw	_Default_ISR shr (0+2)
 16744                           
 16745                           ; Vector 25 : I2C1
 16746  00003A  1864               	dw	_Default_ISR shr (0+2)
 16747                           
 16748                           ; Vector 26 : I2C1E
 16749  00003C  1864               	dw	_Default_ISR shr (0+2)
 16750                           
 16751                           ; Vector 27 : U1RX
 16752  00003E  1790               	dw	_UART1_rx_vect_isr shr (0+2)
 16753                           
 16754                           ; Vector 28 : U1TX
 16755  000040  1786               	dw	_UART1_tx_vect_isr shr (0+2)
 16756                           
 16757                           ; Vector 29 : U1E
 16758  000042  1864               	dw	_Default_ISR shr (0+2)
 16759                           
 16760                           ; Vector 30 : U1
 16761  000044  1864               	dw	_Default_ISR shr (0+2)
 16762                           
 16763                           ; Vector 31 : TMR0
 16764  000046  1864               	dw	_Default_ISR shr (0+2)
 16765                           
 16766                           ; Vector 32 : TMR1
 16767  000048  1864               	dw	_Default_ISR shr (0+2)
 16768                           
 16769                           ; Vector 33 : TMR1G
 16770  00004A  1864               	dw	_Default_ISR shr (0+2)
 16771                           
 16772                           ; Vector 34 : TMR2
 16773  00004C  1864               	dw	_Default_ISR shr (0+2)
 16774                           
 16775                           ; Vector 35 : CCP1
 16776  00004E  1864               	dw	_Default_ISR shr (0+2)
 16777                           
 16778                           ; Vector 36 : Undefined
 16779  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 16780                           
 16781                           ; Vector 37 : NCO1
 16782  000052  1864               	dw	_Default_ISR shr (0+2)
 16783                           
 16784                           ; Vector 38 : CWG1
 16785  000054  1864               	dw	_Default_ISR shr (0+2)
 16786                           
 16787                           ; Vector 39 : CLC1
 16788  000056  1864               	dw	_Default_ISR shr (0+2)
 16789                           
 16790                           ; Vector 40 : INT1
 16791  000058  1842               	dw	_INT1_ISR shr (0+2)
 16792                           
 16793                           ; Vector 41 : CMP2
 16794  00005A  1864               	dw	_Default_ISR shr (0+2)
 16795                           
 16796                           ; Vector 42 : DMA2SCNT
 16797  00005C  1864               	dw	_Default_ISR shr (0+2)
 16798                           
 16799                           ; Vector 43 : DMA2DCNT
 16800  00005E  1864               	dw	_Default_ISR shr (0+2)
 16801                           
 16802                           ; Vector 44 : DMA2OR
 16803  000060  1864               	dw	_Default_ISR shr (0+2)
 16804                           
 16805                           ; Vector 45 : DMA2A
 16806  000062  1864               	dw	_Default_ISR shr (0+2)
 16807                           
 16808                           ; Vector 46 : I2C2RX
 16809  000064  1864               	dw	_Default_ISR shr (0+2)
 16810                           
 16811                           ; Vector 47 : I2C2TX
 16812  000066  1864               	dw	_Default_ISR shr (0+2)
 16813                           
 16814                           ; Vector 48 : I2C2
 16815  000068  1864               	dw	_Default_ISR shr (0+2)
 16816                           
 16817                           ; Vector 49 : I2C2E
 16818  00006A  1864               	dw	_Default_ISR shr (0+2)
 16819                           
 16820                           ; Vector 50 : U2RX
 16821  00006C  17A4               	dw	_UART2_rx_vect_isr shr (0+2)
 16822                           
 16823                           ; Vector 51 : U2TX
 16824  00006E  179A               	dw	_UART2_tx_vect_isr shr (0+2)
 16825                           
 16826                           ; Vector 52 : U2E
 16827  000070  1864               	dw	_Default_ISR shr (0+2)
 16828                           
 16829                           ; Vector 53 : U2
 16830  000072  1864               	dw	_Default_ISR shr (0+2)
 16831                           
 16832                           ; Vector 54 : TMR3
 16833  000074  1864               	dw	_Default_ISR shr (0+2)
 16834                           
 16835                           ; Vector 55 : TMR3G
 16836  000076  1864               	dw	_Default_ISR shr (0+2)
 16837                           
 16838                           ; Vector 56 : TMR4
 16839  000078  1864               	dw	_Default_ISR shr (0+2)
 16840                           
 16841                           ; Vector 57 : CCP2
 16842  00007A  1864               	dw	_Default_ISR shr (0+2)
 16843                           
 16844                           ; Vector 58 : Undefined
 16845  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 16846                           
 16847                           ; Vector 59 : CWG2
 16848  00007E  1864               	dw	_Default_ISR shr (0+2)
 16849                           
 16850                           ; Vector 60 : CLC2
 16851  000080  1864               	dw	_Default_ISR shr (0+2)
 16852                           
 16853                           ; Vector 61 : INT2
 16854  000082  1846               	dw	_INT2_ISR shr (0+2)
 16855                           
 16856                           ; Vector 62 : Undefined
 16857  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 16858                           
 16859                           ; Vector 63 : Undefined
 16860  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 16861                           
 16862                           ; Vector 64 : Undefined
 16863  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 16864                           
 16865                           ; Vector 65 : Undefined
 16866  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 16867                           
 16868                           ; Vector 66 : Undefined
 16869  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 16870                           
 16871                           ; Vector 67 : Undefined
 16872  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 16873                           
 16874                           ; Vector 68 : Undefined
 16875  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 16876                           
 16877                           ; Vector 69 : Undefined
 16878  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 16879                           
 16880                           ; Vector 70 : TMR5
 16881  000094  1677               	dw	_TMR5_ISR shr (0+2)
 16882                           
 16883                           ; Vector 71 : TMR5G
 16884  000096  1864               	dw	_Default_ISR shr (0+2)
 16885                           
 16886                           ; Vector 72 : TMR6
 16887  000098  181D               	dw	_TMR6_ISR shr (0+2)
 16888                           
 16889                           ; Vector 73 : CCP3
 16890  00009A  1864               	dw	_Default_ISR shr (0+2)
 16891                           
 16892                           ; Vector 74 : CWG3
 16893  00009C  1864               	dw	_Default_ISR shr (0+2)
 16894                           
 16895                           ; Vector 75 : CLC3
 16896  00009E  1864               	dw	_Default_ISR shr (0+2)
 16897                           
 16898                           ; Vector 76 : Undefined
 16899  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 16900                           
 16901                           ; Vector 77 : Undefined
 16902  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 16903                           
 16904                           ; Vector 78 : Undefined
 16905  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 16906                           
 16907                           ; Vector 79 : Undefined
 16908  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 16909                           
 16910                           ; Vector 80 : CCP4
 16911  0000A8  1864               	dw	_Default_ISR shr (0+2)
 16912                           
 16913                           ; Vector 81 : CLC4
 16914  0000AA  1864               	dw	_Default_ISR shr (0+2)
 16915  0000AC                     ivt0x8_undefint:
 16916                           	opt callstack 0
 16917  0000AC  00FF               	reset	
 16918                           
 16919                           	psect	text111
 16920  000000                     __ptext111:
 16921                           	opt callstack 0
 16922                           
 16923                           	psect	rparam
 16924  0000                     
 16925                           	psect	temp
 16926  00003B                     btemp:
 16927                           	opt callstack 0
 16928  00003B                     	ds	32
 16929  0000                     wtemp0	set	btemp
 16930  0000                     wtemp1	set	btemp+2
 16931  0000                     wtemp2	set	btemp+4
 16932  0000                     wtemp3	set	btemp+6
 16933  0000                     wtemp4	set	btemp+8
 16934  0000                     wtemp5	set	btemp+10
 16935  0000                     wtemp8	set	btemp+1
 16936  0000                     ttemp0	set	btemp
 16937  0000                     ttemp1	set	btemp+3
 16938  0000                     ttemp2	set	btemp+6
 16939  0000                     ttemp3	set	btemp+9
 16940  0000                     ttemp5	set	btemp+1
 16941  0000                     ttemp6	set	btemp+4
 16942  0000                     ttemp7	set	btemp+8
 16943  0000                     ltemp0	set	btemp
 16944  0000                     ltemp1	set	btemp+4
 16945  0000                     ltemp2	set	btemp+8
 16946  0000                     lltemp0	set	btemp
 16947  0000                     lltemp1	set	btemp+8
 16948  0000                     lltemp2	set	btemp+16
 16949  0000                     lltemp3	set	btemp+24
 16950                           tosu	equ	0x3FFF
 16951                           tosh	equ	0x3FFE
 16952                           tosl	equ	0x3FFD
 16953                           stkptr	equ	0x3FFC
 16954                           pclatu	equ	0x3FFB
 16955                           pclath	equ	0x3FFA
 16956                           pcl	equ	0x3FF9
 16957                           tblptru	equ	0x3FF8
 16958                           tblptrh	equ	0x3FF7
 16959                           tblptrl	equ	0x3FF6
 16960                           tablat	equ	0x3FF5
 16961                           prodh	equ	0x3FF4
 16962                           prodl	equ	0x3FF3
 16963                           indf0	equ	0x3FEF
 16964                           postinc0	equ	0x3FEE
 16965                           postdec0	equ	0x3FED
 16966                           preinc0	equ	0x3FEC
 16967                           plusw0	equ	0x3FEB
 16968                           fsr0h	equ	0x3FEA
 16969                           fsr0l	equ	0x3FE9
 16970                           wreg	equ	0x3FE8
 16971                           indf1	equ	0x3FE7
 16972                           postinc1	equ	0x3FE6
 16973                           postdec1	equ	0x3FE5
 16974                           preinc1	equ	0x3FE4
 16975                           plusw1	equ	0x3FE3
 16976                           fsr1h	equ	0x3FE2
 16977                           fsr1l	equ	0x3FE1
 16978                           bsr	equ	0x3FE0
 16979                           indf2	equ	0x3FDF
 16980                           postinc2	equ	0x3FDE
 16981                           postdec2	equ	0x3FDD
 16982                           preinc2	equ	0x3FDC
 16983                           plusw2	equ	0x3FDB
 16984                           fsr2h	equ	0x3FDA
 16985                           fsr2l	equ	0x3FD9
 16986                           status	equ	0x3FD8


Data Sizes:
    Strings     181
    Constant    0
    Data        328
    BSS         538
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63      2      61
    BANK0           160      0     154
    BANK1           256      0     207
    BANK2           256      0     256
    BANK3           256      0     190
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    ?_secs_II_message.reply	PTR unsigned char  size(2) Largest target is 65
		 -> H53(BANK3[56]), H12(BANK1[30]), H10(BANK1[65]), 

    ?_secs_II_message.header	PTR unsigned char  size(2) Largest target is 65
		 -> H24(BANK1[27]), H17(BANK1[20]), H14(BANK1[17]), H13(BANK1[16]), 
		 -> H12(BANK1[30]), H10(BANK1[65]), 

    _r	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_25(CODE[3]), STR_21(CODE[3]), 

    r	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_25(CODE[3]), STR_21(CODE[3]), 

    _l	PTR const unsigned char  size(1) Largest target is 21
		 -> STR_18(CODE[3]), STR_17(CODE[3]), STR_16(CODE[3]), STR_15(CODE[21]), 
		 -> STR_14(CODE[19]), STR_13(CODE[6]), STR_12(CODE[17]), STR_11(CODE[19]), 
		 -> STR_10(CODE[19]), STR_9(CODE[20]), STR_8(CODE[6]), STR_7(CODE[6]), 
		 -> STR_6(CODE[14]), STR_5(CODE[19]), STR_4(CODE[15]), STR_2(CODE[12]), 
		 -> STR_1(CODE[17]), 

    l	PTR const unsigned char  size(1) Largest target is 21
		 -> STR_18(CODE[3]), STR_17(CODE[3]), STR_16(CODE[3]), STR_15(CODE[21]), 
		 -> STR_14(CODE[19]), STR_13(CODE[6]), STR_12(CODE[17]), STR_11(CODE[19]), 
		 -> STR_10(CODE[19]), STR_9(CODE[20]), STR_8(CODE[6]), STR_7(CODE[6]), 
		 -> STR_6(CODE[14]), STR_5(CODE[19]), STR_4(CODE[15]), STR_2(CODE[12]), 
		 -> STR_1(CODE[17]), 

    s	PTR const unsigned char  size(2) Largest target is 89
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK1[32]), 
		 -> STR_3(CODE[6]), V(BANK0[89]), 

    a	PTR const unsigned char  size(2) Largest target is 89
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK1[32]), 
		 -> STR_3(CODE[6]), V(BANK0[89]), 

    fmt	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_18(CODE[3]), STR_17(CODE[3]), STR_16(CODE[3]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    fmt	PTR const unsigned char  size(1) Largest target is 21
		 -> STR_15(CODE[21]), STR_14(CODE[19]), STR_13(CODE[6]), STR_12(CODE[17]), 
		 -> STR_11(CODE[19]), STR_10(CODE[19]), STR_9(CODE[20]), STR_8(CODE[6]), 
		 -> STR_7(CODE[6]), STR_6(CODE[14]), STR_5(CODE[19]), STR_4(CODE[15]), 
		 -> STR_2(CODE[12]), STR_1(CODE[17]), 

    s	PTR unsigned char  size(1) Largest target is 89
		 -> V(BANK0[89]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(1) Largest target is 89
		 -> V(BANK0[89]), 

    s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    S4294_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 89
		 -> V(BANK0[89]), 

    fp.buffer	PTR unsigned char  size(1) Largest target is 89
		 -> V(BANK0[89]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    dest	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    s	PTR unsigned char  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    fmt	PTR const unsigned char  size(1) Largest target is 21
		 -> STR_18(CODE[3]), STR_17(CODE[3]), STR_16(CODE[3]), STR_15(CODE[21]), 
		 -> STR_14(CODE[19]), STR_13(CODE[6]), STR_12(CODE[17]), STR_11(CODE[19]), 
		 -> STR_10(CODE[19]), STR_9(CODE[20]), STR_8(CODE[6]), STR_7(CODE[6]), 
		 -> STR_6(CODE[14]), STR_5(CODE[19]), STR_4(CODE[15]), STR_2(CODE[12]), 
		 -> STR_1(CODE[17]), 

    cfmt	PTR unsigned char  size(1) Largest target is 21
		 -> STR_18(CODE[3]), STR_17(CODE[3]), STR_16(CODE[3]), STR_15(CODE[21]), 
		 -> STR_14(CODE[19]), STR_13(CODE[6]), STR_12(CODE[17]), STR_11(CODE[19]), 
		 -> STR_10(CODE[19]), STR_9(CODE[20]), STR_8(CODE[6]), STR_7(CODE[6]), 
		 -> STR_6(CODE[14]), STR_5(CODE[19]), STR_4(CODE[15]), STR_2(CODE[12]), 
		 -> STR_1(CODE[17]), 

    cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_3(CODE[6]), V(BANK0[89]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fmt	PTR PTR unsigned char  size(2) Largest target is 1
		 -> cfmt(STACK[1]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_3(CODE[6]), V(BANK0[89]), 

    cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), STR_3(CODE[6]), 
		 -> V(BANK0[89]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    F16623.reply	PTR unsigned char  size(2) Largest target is 65
		 -> H53(BANK3[56]), H12(BANK1[30]), H10(BANK1[65]), 

    F16623.header	PTR unsigned char  size(2) Largest target is 65
		 -> H24(BANK1[27]), H17(BANK1[20]), H14(BANK1[17]), H13(BANK1[16]), 
		 -> H12(BANK1[30]), H10(BANK1[65]), 

    byte_block	PTR unsigned char  size(2) Largest target is 65
		 -> H53(BANK3[56]), H24(BANK1[27]), H17(BANK1[20]), H14(BANK1[17]), 
		 -> H13(BANK1[16]), H12(BANK1[30]), H10(BANK1[65]), 

    k	PTR unsigned char  size(2) Largest target is 65
		 -> H53(BANK3[56]), H24(BANK1[27]), H17(BANK1[20]), H14(BANK1[17]), 
		 -> H13(BANK1[16]), H12(BANK1[30]), H10(BANK1[65]), 

    t_link	PTR enum E16164 size(1) Largest target is 89
		 -> V(BANK0[89]), 

    S3609response_type$reply	PTR unsigned char  size(2) Largest target is 65
		 -> H53(BANK3[56]), H12(BANK1[30]), H10(BANK1[65]), 

    F16611.reply	PTR unsigned char  size(2) Largest target is 65
		 -> H53(BANK3[56]), H12(BANK1[30]), H10(BANK1[65]), 

    S3609response_type$header	PTR unsigned char  size(2) Largest target is 65
		 -> H24(BANK1[27]), H17(BANK1[20]), H14(BANK1[17]), H13(BANK1[16]), 
		 -> H12(BANK1[30]), H10(BANK1[65]), 

    F16611.header	PTR unsigned char  size(2) Largest target is 65
		 -> H24(BANK1[27]), H17(BANK1[20]), H14(BANK1[17]), H13(BANK1[16]), 
		 -> H12(BANK1[30]), H10(BANK1[65]), 

    r_link	PTR enum E16164 size(1) Largest target is 89
		 -> V(BANK0[89]), 

    m_link	PTR enum E16164 size(1) Largest target is 89
		 -> V(BANK0[89]), 

    byte_block	PTR unsigned char  size(2) Largest target is 65
		 -> H53(BANK3[56]), H24(BANK1[27]), H17(BANK1[20]), H14(BANK1[17]), 
		 -> H13(BANK1[16]), H12(BANK1[30]), H10(BANK1[65]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    sp__memset	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    _this	PTR volatile struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    strPtr	PTR unsigned char  size(1) Largest target is 89
		 -> V(BANK0[89]), 

    strPtr	PTR unsigned char  size(1) Largest target is 89
		 -> V(BANK0[89]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    S1986spi_link_type$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    spi_link.tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    S1986spi_link_type$tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), 

    spi_link.tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), Absolute function(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    UART1_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), 

    INT2_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _INT2_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _ADCC_ISR in COMRAM

    None.

Critical Paths under _UART1_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMASCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMADCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAA_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAOR_ISR in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _INT2_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _UART1_tx_vect_isr in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _INT2_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _UART1_tx_vect_isr in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _INT2_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _UART1_tx_vect_isr in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _INT2_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _UART1_tx_vect_isr in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _INT2_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _UART1_tx_vect_isr in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _INT2_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _UART1_tx_vect_isr in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _INT2_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _UART1_tx_vect_isr in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _INT2_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _UART1_tx_vect_isr in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _INT2_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _UART1_tx_vect_isr in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _INT2_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _UART1_tx_vect_isr in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _INT2_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _UART1_tx_vect_isr in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _INT2_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _UART1_tx_vect_isr in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _INT2_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _UART1_tx_vect_isr in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _INT2_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _UART1_tx_vect_isr in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _INT2_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _UART1_tx_vect_isr in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _INT2_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _UART1_tx_vect_isr in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _INT2_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _UART1_tx_vect_isr in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _INT2_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _UART1_tx_vect_isr in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _INT2_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _UART1_tx_vect_isr in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _INT2_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _UART1_tx_vect_isr in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _INT2_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _UART1_tx_vect_isr in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _INT2_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _UART1_tx_vect_isr in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _INT2_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _UART1_tx_vect_isr in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _INT2_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _UART1_tx_vect_isr in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _INT2_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _UART1_tx_vect_isr in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _INT2_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _UART1_tx_vect_isr in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _INT2_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _UART1_tx_vect_isr in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _INT2_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _UART1_tx_vect_isr in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _INT2_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _UART1_tx_vect_isr in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _INT2_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _UART1_tx_vect_isr in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _INT2_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _UART1_tx_vect_isr in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _INT2_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _UART1_tx_vect_isr in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   41546
                  _SYSTEM_Initialize
                             _WaitMs
                _eaDogM_WriteCommand
            _eaDogM_WriteStringAtPos
                       _init_display
                         _m_protocol
                         _r_protocol
                            _sprintf
                         _t_protocol
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (1) _t_protocol                                           2     1      1    1978
                         _StartTimer
                          _TimerDone
                         _UART1_Read
                        _UART1_Write
                  _UART1_is_rx_ready
                   _UART1_put_buffer
                    _secs_II_message
                          _secs_send
 ---------------------------------------------------------------------------------
 (2) _secs_send                                           10     5      5    1188
                        _UART1_Write
                  _UART1_is_tx_ready
                   _UART1_put_buffer
                        _UART2_Write
                  _UART2_is_tx_ready
                   _UART2_put_buffer
                     _block_checksum
 ---------------------------------------------------------------------------------
 (3) _block_checksum                                       8     4      4     167
 ---------------------------------------------------------------------------------
 (3) _UART2_put_buffer                                     1     0      1      22
 ---------------------------------------------------------------------------------
 (3) _UART2_is_tx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _UART2_Write                                          1     0      1      44
 ---------------------------------------------------------------------------------
 (3) _UART1_put_buffer                                     1     0      1      22
 ---------------------------------------------------------------------------------
 (3) _UART1_is_tx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _secs_II_message                                      7     0      7     132
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             19     9     10    8312
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _r_protocol                                           2     1      1     643
                         _StartTimer
                          _TimerDone
                         _UART1_Read
                        _UART1_Write
                  _UART1_is_rx_ready
                             _WaitMs
                       _run_checksum
 ---------------------------------------------------------------------------------
 (3) _UART1_Write                                          1     0      1      44
 ---------------------------------------------------------------------------------
 (1) _m_protocol                                           2     1      1     802
                         _StartTimer
                          _TimerDone
                         _UART1_Read
                  _UART1_is_rx_ready
                         _UART2_Read
                  _UART2_is_rx_ready
                             _WaitMs
                       _run_checksum
 ---------------------------------------------------------------------------------
 (2) _run_checksum                                         2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _WaitMs                                               2     0      2      88
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (2) _TimerDone                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _StartTimer                                           3     0      3      44
 ---------------------------------------------------------------------------------
 (2) _UART2_is_rx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UART2_Read                                           1     1      0      24
 ---------------------------------------------------------------------------------
 (2) _UART1_is_rx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UART1_Read                                           1     1      0      24
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    1202
                      _ringBufS_init
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     0      1      66
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd                                         1     0      1      66
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _SPI1_Exchange8bit                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _ringBufS_init                                        2     0      2    1048
                             _memset
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteStringAtPos                              3     0      3   18878
                 _eaDogM_WriteString
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteString                                   1     0      1    9473
                             _printf
                     _ringBufS_flush
                          _start_lcd
                             _strlen
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     0      1    9343
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_dma                                     1     0      1    9312
                             _printf
                     _ringBufS_flush
                          _start_lcd
                      _wait_lcd_done
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (3) _wait_lcd_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _wait_lcd_done                                        0     0      0      22
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _wdtdelay                                             4     0      4      22
 ---------------------------------------------------------------------------------
 (3) _start_lcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _ringBufS_flush                                       3     0      3    1172
                             _memset
 ---------------------------------------------------------------------------------
 (3) _memset                                              10     4      6    1017
 ---------------------------------------------------------------------------------
 (3) _printf                                               7     4      3    8087
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             6     1      5    7988
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           39    33      6    7749
                               _ctoa
                               _dtoa
                              _fputc
                               _stoa
                            _strncmp
 ---------------------------------------------------------------------------------
 (4) _strncmp                                              6     2      4     225
 ---------------------------------------------------------------------------------
 (4) _stoa                                                21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _abs                                                  2     0      2      66
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     296
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     300
 ---------------------------------------------------------------------------------
 (4) _ctoa                                                 7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _strlen                                               4     2      2      90
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (7) _ringBufS_put_dma                                     3     0      3     186
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     179
                    _ADCC_Initialize
                    _CLC1_Initialize
                  _CLKREF_Initialize
                    _DMA1_Initialize
                     _DSM_Initialize
                 _EXT_INT_Initialize
               _INTERRUPT_Initialize
                    _NCO1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _SPI1_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0      30
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3      15
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3      15
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0      30
        _UART1_SetRxInterruptHandler
        _UART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetTxInterruptHandler                          3     0      3      15
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3      15
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      22
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0      22
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _NCO1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      15
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      45
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
           _INT2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT2_SetInterruptHandler                             3     0      3      15
 ---------------------------------------------------------------------------------
 (3) _INT1_SetInterruptHandler                             3     0      3      15
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      15
 ---------------------------------------------------------------------------------
 (2) _DSM_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DMA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLKREF_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLC1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0      15
        _ADCC_SetADIInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _ADCC_SetADIInterruptHandler                          3     0      3      15
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (13) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _INT1_ISR                                            0     0      0       0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (13) _INT1_CallBack                                       0     0      0       0
                   Absolute function *
       _INT1_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _INT2_ISR                                            0     0      0       0
                      _INT2_CallBack
 ---------------------------------------------------------------------------------
 (13) _INT2_CallBack                                       0     0      0       0
                   Absolute function *
       _INT2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _INT2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _ADCC_ISR                                            0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (13) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART1_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART1_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART1_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART2_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART2_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART2_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _TMR6_ISR                                            1     1      0     130
                                              0 COMRAM     1     1      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (13) _TMR6_CallBack                                       0     0      0     130
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _TMR6_DefaultInterruptHandler                        1     1      0     130
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _DMA1_DMASCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _DMA1_DMADCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _DMA1_DMAA_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _DMA1_DMAOR_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _TMR5_ISR                                            1     1      0      60
                                              1 COMRAM     1     1      0
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (13) _TMR5_WriteTimer                                     2     0      2      60
 ---------------------------------------------------------------------------------
 (13) _TMR5_CallBack                                       0     0      0       0
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _TMR5_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
     _CLC1_Initialize
     _CLKREF_Initialize
     _DMA1_Initialize
     _DSM_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
       _INT2_SetInterruptHandler
     _INTERRUPT_Initialize
     _NCO1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _SPI1_Initialize
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetRxInterruptHandler
       _UART1_SetTxInterruptHandler
     _UART2_Initialize
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _WaitMs
     _StartTimer
     _TimerDone
   _eaDogM_WriteCommand
     _send_lcd_cmd_dma
       _printf
         _vfprintf
           _vfpfcnvrt
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _fputc
               _putch
                 _ringBufS_put_dma
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
       _ringBufS_flush
         _memset
       _start_lcd
       _wait_lcd_done
         _wdtdelay
       _wait_lcd_set
   _eaDogM_WriteStringAtPos
     _eaDogM_WriteString
       _printf
         _vfprintf
           _vfpfcnvrt
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _fputc
               _putch
                 _ringBufS_put_dma
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
       _ringBufS_flush
         _memset
       _start_lcd
       _strlen
       _wait_lcd_set
     _send_lcd_cmd_dma
       _printf
         _vfprintf
           _vfpfcnvrt
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _fputc
               _putch
                 _ringBufS_put_dma
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
       _ringBufS_flush
         _memset
       _start_lcd
       _wait_lcd_done
         _wdtdelay
       _wait_lcd_set
   _init_display
     _ringBufS_init
       _memset
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _m_protocol
     _StartTimer
     _TimerDone
     _UART1_Read
     _UART1_is_rx_ready
     _UART2_Read
     _UART2_is_rx_ready
     _WaitMs
       _StartTimer
       _TimerDone
     _run_checksum
   _r_protocol
     _StartTimer
     _TimerDone
     _UART1_Read
     _UART1_Write
     _UART1_is_rx_ready
     _WaitMs
       _StartTimer
       _TimerDone
     _run_checksum
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _ctoa
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _fputc
           _putch
             _ringBufS_put_dma
         _stoa
           _fputc
             _putch
               _ringBufS_put_dma
           _strlen
         _strncmp
   _t_protocol
     _StartTimer
     _TimerDone
     _UART1_Read
     _UART1_Write
     _UART1_is_rx_ready
     _UART1_put_buffer
     _secs_II_message
     _secs_send
       _UART1_Write
       _UART1_is_tx_ready
       _UART1_put_buffer
       _UART2_Write
       _UART2_is_tx_ready
       _UART2_put_buffer
       _block_checksum
   _wait_lcd_done
     _wdtdelay

 _INT0_ISR (ROOT)
   _INT0_CallBack
     Absolute function(Fake) *
     _INT0_DefaultInterruptHandler *

 _INT1_ISR (ROOT)
   _INT1_CallBack
     Absolute function(Fake) *
     _INT1_DefaultInterruptHandler *

 _INT2_ISR (ROOT)
   _INT2_CallBack
     Absolute function(Fake) *
     _INT2_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *

 _UART1_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Transmit_ISR *

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *

 _UART2_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Receive_ISR *

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 _DMA1_DMASCNT_ISR (ROOT)

 _DMA1_DMADCNT_ISR (ROOT)

 _DMA1_DMAA_ISR (ROOT)

 _DMA1_DMAOR_ISR (ROOT)

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
   _TMR5_WriteTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0       0      69        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      BE      11       74.2%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0     100       9      100.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      CF       7       80.9%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      9A       5       96.2%
BITCOMRAM           3F      0       0       0        0.0%
COMRAM              3F      2      3D       1       96.8%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     364      58        0.0%
DATA                 0      0     364       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Mon Mar 18 02:52:26 2019

                    _SPI1_Exchange8bit 5FE8                                      _V 0067  
     __end_of_TMR5_SetInterruptHandler 5D76              __end_of_UART2_is_rx_ready 617A  
                          __CFG_CP$OFF 000000                __size_of_ringBufS_flush 0092  
            __end_of_UART2_is_tx_ready 616A                            __CFG_LVP$ON 000000  
                                  _H10 0100                                    _H12 0141  
                                  _H13 019F                                    _H14 018E  
                                  _H24 015F                                    _H17 017A  
                                  _H53 0386                                    l194 60CE  
                                  l572 59C8                                    l717 5B38  
                                  l851 5FF6                                    l579 5938  
                                  l692 598A                                    l597 5B0C  
                                  l699 58FA                                    _GIE 01FE97  
                                  u980 5474                                    u998 5476  
                                  _abs 5790                                    _pad 4906  
              __size_of_PMD_Initialize 0014                                    tosl 003FFD  
                                  wreg 003FE8                          _INT0_CallBack 5F42  
                         _run_checksum 5A8E                     _UART1_Transmit_ISR 5AE6  
                        __CFG_BBEN$OFF 000000                          _INT1_CallBack 5F64  
                         __CFG_ZCD$OFF 000000                                   l1122 58DE  
                                 l1220 20F4                                   l1230 21A4  
                                 l1241 2294                                   l1324 565C  
                                 l1252 23BC                                   l1262 24EE  
                                 l1246 22FE                                   l1263 251A  
                                 l1248 2302                                   l1258 24A0  
                                 l1460 536C                                   l4013 58C6  
                                 l1456 4FCC                                   l1544 2F4E  
                                 l1634 3E1E                                   l1820 39C6  
                                 l2534 57D0                                   l1648 3F82  
                                 l2556 4B1C                                   l1773 4962  
                                 l1597 3646                                   l1669 42EA  
                                 l1839 2A28                                   l6007 5BA8  
                                 l6111 439C                                   l1793 2B10  
                                 l6121 43BE                                   l5315 57C0  
                                 l6123 43E4                                   l6211 451E  
                                 l2588 48FC                                   l5333 3C50  
                                 l6141 4408                                   l5351 3D68  
                                 l5327 3BFC                                   l6143 4422  
                                 l5273 4FFA                                   l6209 44EC  
                                 l6403 5FE4                                   l5275 501C  
                                 l5339 3C96                                   l5371 4594  
                                 l6171 445A                                   l6091 4344  
                                 l8003 421A                                   l6069 5A9C  
                                 l6173 4498                                   l6077 4306  
                                 l8021 429C                                   l8013 4262  
                                 l8005 4242                                   l5543 480A  
                                 l5711 595A                                   l6511 366C  
                                 l6159 4440                                   l8023 42C4  
                                 l6521 36A8                                   l6601 3888  
                                 l6097 4362                                   l8009 4248  
                                 l8201 3F54                                   l6371 5B08  
                                 l5387 46C8                                   l5379 461C  
                                 l5539 47DA                                   l5635 566E  
                                 l6603 38CA                                   l5723 5B8A  
                                 l8211 3FA2                                   l6381 5FC4  
                                 l5813 5F18                                   l5709 5958  
                                 l6541 371E                                   l6533 36DC  
                                 l6197 44D2                                   l8029 42CA  
                                 l6519 369C                                   l8215 3FB6  
                                 l6393 5B34                                   l7601 49A8  
                                 l6721 2EB6                                   l6545 374A  
                                 l6537 36FA                                   l5745 591A  
                                 l8241 4022                                   l8225 3FDA  
                                 l8321 21FC                                   l5747 591C  
                                 l8243 402A                                   l8235 4008  
                                 l8219 3FBE                                   l8171 3E7A  
                                 l8163 3E4A                                   l8403 23F6  
                                 l8315 21E2                                   l7605 49F2  
                                 l7613 5392                                   l6557 37C8  
                                 l6549 377A                                   l8237 4016  
                                 l8173 3E8C                                   l7615 53BE  
                                 l6831 318E                                   l6823 313E  
                                 l6807 30EC                                   l6735 2F02  
                                 l6591 3874                                   l6559 37CC  
                                 l6495 3610                                   l5759 5B60  
                                 l8239 401A                                   l8183 3ECE  
                                 l8247 4038                                   l8415 2462  
                                 l8431 24D0                                   l8343 2270  
                                 l7721 3A68                                   l7713 39FC  
                                 l5945 59A0                                   l6753 2F70  
                                 l6585 385A                                   l6569 37F0  
                                 l8193 3F18                                   l8249 407A  
                                 l8361 22D0                                   l8337 225C  
                                 l8281 20FA                                   l8441 24F2  
                                 l7571 4A4A                                   l7651 2B68  
                                 l7731 3B1E                                   l7803 29BE  
                                 l6843 320C                                   l6835 31BE  
                                 l6827 3162                                   l6819 3120  
                                 l6771 2FCC                                   l6595 3880  
                                 l8187 3EE6                                   l8419 2472  
                                 l8347 2288                                   l8339 2260  
                                 l7581 525A                                   l7661 2D7A  
                                 l7717 3A38                                   l6845 3210  
                                 l6589 3870                                   l8189 3EF2  
                                 l8453 2580                                   l8429 24A4  
                                 l8365 22E6                                   l8381 236A  
                                 l8277 20DE                                   l7591 4932  
                                 l7647 2B4A                                   l7639 2B00  
                                 l7735 3B5A                                   l7727 3AF2  
                                 l7831 33B8                                   l6871 3292  
                                 l6855 3234                                   l6783 303A  
                                 l6775 2FEA                                   l6759 2F98  
                                 l8279 20E6                                   l7585 5298  
                                 l7681 2E2C                                   l7809 29DA  
                                 l5969 5962                                   l6881 32B8  
                                 l6873 32A0                                   l7923 584C  
                                 l7595 495A                                   l7771 2798  
                                 l7851 358E                                   l7843 34E0  
                                 l6883 32BE                                   l6875 32A4  
                                 l6795 30B8                                   l6787 306A  
                                 l6779 300E                                   l8387 23A2  
                                 l8379 2338                                   l7597 496C  
                                 l7685 2E68                                   l7837 3476  
                                 l6877 32AC                                   l6797 30BC  
                                 l7919 5822                                   l7783 28BE  
                                 l7767 2746                                   l7759 2662  
                                 l7863 51CC                                   l6879 32B0  
                                 l6887 32CC                                   l7697 3948  
                                 l7793 2966                                   l7865 520E  
                                 l7961 5162                                   l6889 330E  
                                 l7891 4C9C                                   l7799 29BA  
                                 l7887 4C2A                                   l7991 41C6  
                                 l7983 4116                                   l7995 41E0  
                                 STR_1 2061                                   STR_2 208F  
                                 STR_3 20A7                                   STR_4 2072  
                                 STR_5 203D                                   STR_6 2081  
                                 STR_7 20A1                                   STR_8 209B  
                                 STR_9 2016                                   u1005 54A8  
                                 u1006 54AA                                   _LATA 003FBA  
                                 _LATB 003FBB                                   _LATC 003FBC  
                                 u2400 3C4C                                   _LATD 003FBD  
                                 _LATE 003FBE                                   _LATF 003FBF  
                                 u2411 3C56                                   u2420 3C90  
                                 u2500 458E                                   u2430 3CC2  
                                 u2520 45E4                                   u2360 57A4  
                                 u2290 504A                                   u2450 3DA0  
                                 u2530 4616                                   u2380 3BF6  
                                 u2540 4648                                   u4045 325E  
                                 u2470 3DF2                                   u4055 326E  
                                 u4047 3262                                   u2560 4700  
                                 u2297 503C                                   u4065 327E  
                                 u4057 3272                                   u5210 226A  
                                 u4067 3282                                   u2580 4752  
                                 u5061 3F0C                                   u4510 2AE6  
                                 u4360 4A3E                                   u4600 2E02  
                                 u2920 48B2                                   u3625 381A  
                                 u4530 2B36                                   u5250 22A0  
                                 _T6PR 003F93                                   u3635 382A  
                                 u3627 381E                                   u4380 4ABA  
                                 u4540 2D8E                                   u4460 2A62  
                                 _PMD0 0039C0                                   u3645 383A  
                                 u3637 382E                                   _PMD1 0039C1  
                                 u4470 2A64                                   u4710 3B80  
                                 _PMD2 0039C2                                   u4551 2DBE  
                                 u3647 383E                                   _PMD3 0039C3  
                                 u4560 2DD4                                   u5256 22A2  
                                 _PMD4 0039C4                                   u4561 2DD2  
                                 _PMD5 0039C5                                   u4570 2DE8  
                                 u4490 2AD4                                   _PMD6 0039C6  
                                 _PMD7 0039C7                                   u4580 2DEC  
                                 u4900 5152                                   u4670 3A5E  
                                 u4750 26B2                                   u4910 4110  
                                 u4680 3AA4                                   u4840 3602  
                                 u4770 27F0                                   u4687 3A96  
                                 _PLLR 01CEE0                                   _WPUA 003A41  
                                 _WPUB 003A51                                   _WPUC 003A61  
                                 _WPUD 003A71                                   _WPUE 003A81  
                                 _WPUF 003A91                          _INT2_CallBack 5F86  
                     __end_of_ADCC_ISR 5BE6                          __CFG_FCMEN$ON 000000  
                                 _dbuf 01AF                                   _ctoa 5374  
                                 _main 20B8                                   _dtoa 2A32  
                                 _prec 0022                                   _nout 00F6  
                                 fsr0h 003FEA                                   fsr1h 003FE2  
                                 indf0 003FEF                                   fsr2h 003FDA  
                                 fsr0l 003FE9                                   indf1 003FE7  
                                 indf2 003FDF                                   fsr1l 003FE1  
                                 fsr2l 003FD9                                   _stoa 38DC  
                                 btemp 003B      __size_of_INT2_SetInterruptHandler 0028  
                                 prodl 003FF3                                   start 00AE  
                      _timer5ReloadVal 0028              __end_of_SPI1_Exchange8bit 6006  
                        __CFG_CSWEN$ON 000000                      _UART1_rx_vect_isr 5E40  
                         ___param_bank 000000             __size_of_UART1_is_rx_ready 0008  
                   ?_UART1_rx_vect_isr 005B             __size_of_UART1_is_tx_ready 0008  
                     __end_of_INT0_ISR 6106                       __end_of_INT1_ISR 6116  
                     __end_of_INT2_ISR 6126         __size_of_OSCILLATOR_Initialize 0016  
             __end_of_ringBufS_put_dma 4FD4          __end_of_OSCILLATOR_Initialize 60D4  
                                PRLOCK 0039EF                        __end_of___aodiv 3E1A  
                                _ADCAP 003EF5                                  _ADACT 003EFE  
                                _ADCLK 003EFF                        __end_of___aomod 4776  
                                _ADPCH 003EF1                                  _ADREF 003EFD  
                                STR_10 203D                                  STR_11 202A  
                                STR_12 2050                                  STR_13 209B  
                                STR_21 20AD                                  STR_14 202A  
                                STR_23 20B0                                  STR_15 2001  
                                STR_16 2098                                  STR_25 20B0  
                                STR_17 20B3                          __CFG_WDTE$OFF 000000  
                                STR_19 20AD                                  _ADRPT 003EEC  
                                _U1P1H 003DED                                  _U1P2H 003DEF  
                                _U1P1L 003DEC                                  _U1P3H 003DF1  
                                _U1P2L 003DEE                                  _U1P3L 003DF0  
                                _U2P1L 003DD4                                  _U2P2L 003DD6  
                                _U2P3L 003DD8                                  _T5CLK 003F9D  
                                _T5CON 003F9A                                  _T6CON 003F94  
                       __CFG_DEBUG$OFF 000000                                  _T6HLT 003F95  
                                _U1UIR 003DF8                                  _U1RXB 003DE8  
                                _U2UIR 003DE0                                  _U1TXB 003DEA  
                                _U2RXB 003DD0                                  _U2TXB 003DD2  
                                _T6TMR 003F92                                  _T6RST 003F97  
                  ??_UART1_rx_vect_isr 005B                                  _ISRPR 0039F1  
                                _OSCEN 0039DD                                  _TMR5H 003F99  
                                _TMR5L 003F98                                  _TRISA 003FC2  
                                _TRISB 003FC3                                  _TRISC 003FC4  
                                _TRISD 003FC5                                  _TRISE 003FC6  
                                _TRISF 003FC7                            _Default_ISR 6190  
    __size_of_TMR6_SetInterruptHandler 0028                      _UART1_tx_vect_isr 5E18  
                        __CFG_WRTB$OFF 000000                          __CFG_WRTC$OFF 000000  
                        __CFG_WRTD$OFF 000000                       __end_of_TMR5_ISR 5A1A  
                         _DMA1CON0bits 003BFC                       __end_of_TMR6_ISR 608E  
                         _DMA1CON1bits 003BFD                     r_protocol@rxData_l 002C  
                                _flags 0024                                  _fputc 4A1A  
           __size_of_send_lcd_cmd_long 0028                                  _fputs 524A  
                   __CFG_MCLRE$EXTMCLR 000000                     ?_UART1_tx_vect_isr 005B  
                                _width 0020                                  _putch 605A  
             _INT1_SetInterruptHandler 5D9E                                  pclath 003FFA  
                                tablat 003FF5                __size_of_DSM_Initialize 001C  
                                ltemp0 003B                                  ltemp1 003F  
                                ltemp2 0043               __size_of_DMA1_Initialize 006A  
                                plusw1 003FE3                                  plusw2 003FDB  
                                ttemp0 003B                                  ttemp1 003E  
                                ttemp2 0041                                  ttemp3 0044  
                                ttemp5 003C                                  ttemp6 003F  
                                ttemp7 0043                                  status 003FD8  
  __end_of_UART1_SetRxInterruptHandler 5CFE            _UART1_SetRxInterruptHandler 5CD6  
                                wtemp0 003B                                  wtemp1 003D  
                                wtemp2 003F                                  wtemp3 0041  
                                wtemp4 0043                                  wtemp5 0045  
                                wtemp8 003C                        __end_of_sprintf 4E7A  
                      __end_of_strncmp 4906                    ??_UART1_tx_vect_isr 005B  
            __size_of_DMA1_DMADCNT_ISR 000A              __end_of_UART1_rx_vect_isr 5E66  
             __size_of_SPI1_Initialize 0016                        _TMR5_Initialize 57D6  
                __end_of_ringBufS_init 5C5E                        __initialization 4CE2  
                    _UART2_rx_vect_isr 5E90                           __end_of_ctoa 53FC  
                         __end_of_main 2584                           __end_of_dtoa 2EB2  
                         __end_of_stoa 3B9A             __size_of_UART2_is_rx_ready 0008  
                       __CFG_SAFEN$OFF 000000                     ?_UART2_rx_vect_isr 005B  
           __size_of_UART2_is_tx_ready 0008               _TMR5_SetInterruptHandler 5D4E  
                        __activetblptr 000003              __size_of_DMA1_DMASCNT_ISR 000E  
 __size_of_UART1_SetTxInterruptHandler 0028                    ??_UART2_rx_vect_isr 005B  
            __end_of_UART1_tx_vect_isr 5E3E                                 INTCON0 003FD2  
 __size_of_UART2_SetRxInterruptHandler 0028                         __CFG_MVECEN$ON 000000  
                      _TMR6_Initialize 5CFE                       _UART1_Initialize 54CC  
                    _UART2_tx_vect_isr 5E68                     _UART2_Transmit_ISR 5B12  
                               _ADACCU 003EEA                                 _ADACQH 003EF4  
                               _ADACQL 003EF3                                 _ADCON0 003EF8  
                               _ADCON1 003EF9                                 _ADCON2 003EFA  
                               _ADCON3 003EFB                                 _ADLTHH 003EDF  
                               _ADLTHL 003EDE                                 _ADPREH 003EF7  
                               _ADPREL 003EF6                                 _DMA1PR 0039F3  
                               _DMA2PR 0039F4                                 _ADSTAT 003EFC  
                               _ADUTHH 003EE1                                 _ADUTHL 003EE0  
                               _ANSELA 003A40                                 _ANSELB 003A50  
                               _ANSELC 003A60                                 _ANSELD 003A70  
                               _ANSELE 003A80                                 _ANSELF 003A90  
                   ?_UART2_tx_vect_isr 005B                                 _MD1SRC 003CFC  
                               _U1CON0 003DF2                                 _U1CON1 003DF3  
                               _U1CON2 003DF4                    __size_of_UART1_Read 003E  
                               _U1BRGH 003DF6                                 _U1FIFO 003DF7  
                               _U2CON0 003DDA                                 _U2CON1 003DDB  
                               _U1BRGL 003DF5                                 _U2CON2 003DDC  
                               _U2BRGH 003DDE                                 _U2FIFO 003DDF  
                               _U2BRGL 003DDD                                 _T5GATE 003F9C  
                  __size_of_UART2_Read 003E                                 _T5GCON 003F9B  
                               _MAINPR 0039F2                                 _RA4PPS 003A04  
                               _RA5PPS 003A05                                 _RA6PPS 003A06  
                               _RC3PPS 003A13                                 _RB6PPS 003A0E  
                               _RC5PPS 003A15                                 _ODCONA 003A42  
                               _ODCONB 003A52                                 _ODCONC 003A62  
                               _RC6PPS 003A16                                 _ODCOND 003A72  
                               _ODCONE 003A82                                 _ODCONF 003A92  
                               u121_48 5F50                                 i2l1139 5A12  
                       __CFG_WDTCCS$SC 000000                                 u123_48 5F72  
                               u125_48 5F94                                 _SCANPR 0039F7  
                               u327_40 6096                                 u327_46 6098  
                               _IVTADH 00389E                                 _IVTADL 00389D  
                               u348_48 5EEA                                 _IVTADU 00389F  
         __size_of_eaDogM_WriteCommand 000E                                 _OSCFRQ 0039DF  
                               u499_48 5EC6               __end_of_send_lcd_cmd_dma 56FA  
                  ??_UART2_tx_vect_isr 005B              __end_of_UART2_rx_vect_isr 5EB6  
           __size_of_SPI1_Exchange8bit 001E                 __size_of_DMA1_DMAA_ISR 000A  
                       __CFG_XINST$OFF 000000                      _CLKREF_Initialize 6136  
                     _UART2_Initialize 55F2                                 _WaitMs 5B92  
 __size_of_ADCC_SetADIInterruptHandler 0028                         __CFG_STVREN$ON 000000  
                       _ringBufS_flush 52E2                                 _memset 3320  
                               clear_0 4D62                                 clear_1 4D70  
                               clear_2 4D82                                 clear_3 4D8E  
                               clear_4 4D9A                                 _printf 5530  
                   _eaDogM_WriteString 5116                              ?_ADCC_ISR 005B  
                               _strlen 4FD4                     __size_of_TimerDone 0022  
                      _ADCC_Initialize 5746                         _PMD_Initialize 60D4  
 __end_of_INT2_DefaultInterruptHandler 619C  __size_of_INT2_DefaultInterruptHandler 0002  
         _INT2_DefaultInterruptHandler 619A                           __pdataCOMRAM 005D  
            __end_of_UART2_tx_vect_isr 5E8E                                 lltemp0 003B  
                               lltemp1 0043                                 lltemp2 004B  
                               lltemp3 0053                           __mediumconst 0000  
                               tblptrh 003FF7                                 tblptrl 003FF6  
                               tblptru 003FF8                       __end_of_wdtdelay 56AC  
                     __end_of_vfprintf 524A                             _StartTimer 5A1A  
                      _CLC1_Initialize 5F20          __size_of_INTERRUPT_Initialize 0066  
              __end_of_TMR5_Initialize 581C                      _SYSTEM_Initialize 5862  
                           __accesstop 0060                __end_of__initialization 4DAC  
                            ?_INT0_ISR 005B                              ?_INT1_ISR 005B  
                            ?_INT2_ISR 005B              __end_of_CLKREF_Initialize 6140  
                        ___rparam_used 000001             __size_of_UART1_rx_vect_isr 0026  
                      _TMR5_WriteTimer 58A4                 __end_of_ringBufS_flush 5374  
                       __pcstackCOMRAM 005B                             ___inthi_sp 0D2A  
                         __pidataBANK0 5592                           __pidataBANK1 4E7A  
                         __pidataBANK3 5A56                              ?_TMR5_ISR 005B  
                            ?_TMR6_ISR 005B                         ivt0x8_undefint 00AC  
                        __end_of_fputc 4B26                          __end_of_fputs 52E2  
                __end_of_TMR5_CallBack 5EFE                          __end_of_putch 6074  
              __end_of_TMR6_Initialize 5D26                 __end_of_PMD_Initialize 60E8  
              __size_of_block_checksum 00D2                             ??_ADCC_ISR 005B  
                __end_of_TMR6_CallBack 5EDA            __size_of_EXT_INT_Initialize 004C  
           __size_of_UART1_tx_vect_isr 0026                          _DMA1_DMAA_ISR 614C  
     __end_of_INT2_SetInterruptHandler 5D9E               _UART2_RxInterruptHandler 0014  
            __end_of_SYSTEM_Initialize 58A4                        __CFG_PR1WAY$OFF 000000  
                      __CFG_IVT1WAY$ON 000000                         _DSM_Initialize 603E  
                           __pbssBANK0 00C0                             __pbssBANK1 01AF  
                           __pbssBANK2 0200                             __pbssBANK3 0300  
                _INT0_InterruptHandler 001D                             ??_INT0_ISR 005B  
                           ??_INT1_ISR 005B                             ??_INT2_ISR 005B  
                    __end_of_TimerDone 5F20                       _DMA1_DMADCNT_ISR 6140  
            __size_of_UART1_put_buffer 002A             __size_of_UART2_rx_vect_isr 0026  
                              IVTBASEH 003FD6                                IVTBASEL 003FD5  
                              IVTBASEU 003FD7                  __end_of_wait_lcd_done 6022  
                      __CFG_PPS1WAY$ON 000000       __end_of_TMR6_SetInterruptHandler 5D4E  
              __end_of_ADCC_Initialize 5790                             ??_TMR5_ISR 005C  
                           ??_TMR6_ISR 005B                     __size_of_secs_send 0268  
                              _CLC1CON 003C74                                _CLC1POL 003C75  
                              _DMA1DSA 003BF0                                _DMA1DSZ 003BEE  
                              _DMA1SSA 003BF9                                _DMA1SSZ 003BF7  
                              _ADSTPTH 003EE5                                _ADSTPTL 003EE4  
                              _MD1CARH 003CFE                                _MD1CARL 003CFD  
                    _UART1_Receive_ISR 5FA8                                _CLKRCLK 003CE6  
                              _CLKRCON 003CE5                                _NCO1CLK 003F3F  
                       ?_DMA1_DMAA_ISR 005B                       _DMA1_DMASCNT_ISR 6128  
                              _NCO1CON 003F3E                                _U1ERRIE 003DFA  
                              _U1ERRIR 003DF9                __end_of_CLC1_Initialize 5F42  
                              _U2ERRIE 003DE2                                _U2ERRIR 003DE1  
                              _INT0PPS 003AC0                    __CFG_PWRTS$PWRT_OFF 000000  
                              _INT1PPS 003AC1                                _INT2PPS 003AC2  
                         ?_Default_ISR 005B                   __size_of_UART1_Write 003E  
            __size_of_UART2_put_buffer 002A             __size_of_UART2_tx_vect_isr 0026  
                 __size_of_UART2_Write 003E                                _U1RXPPS 003AE5  
                              _U2RXPPS 003AE8                                _OSCCON1 0039D9  
                              _OSCCON3 0039DB                                _IVTLOCK 003FD4  
                   __size_of_vfpfcnvrt 04AE                                _SPI1CLK 003D1C  
                              _SPI1RXB 003D10                                _SPI1TXB 003D11  
                              _OSCTUNE 0039DE                 __end_of_DSM_Initialize 605A  
                              _SLRCONA 003A43                                _SLRCONB 003A53  
                              _SLRCONC 003A63                                _SLRCOND 003A73  
                              _SLRCONE 003A83                                _SLRCONF 003A93  
                   __size_of_start_lcd 0006                __end_of_TMR5_WriteTimer 58E4  
                   __end_of_UART1_Read 59DC                     __end_of_UART2_Read 599E  
    __size_of_INT0_SetInterruptHandler 0028             __size_of_CLKREF_Initialize 000A  
              __size_of_DMA1_DMAOR_ISR 000A                                __Hparam 0000  
                              __Lparam 0000               __end_of_UART1_Initialize 5530  
                      __size_of_WaitMs 002A                                ___aodiv 3B9A  
                              ___aomod 4536                             _m_protocol 2EB2  
            __end_of_UART1_Receive_ISR 5FC8                           __psmallconst 2000  
                 __end_of_init_display 4C10                                __pcinit 4CE2  
                      __size_of_memset 02EC                    _eaDogM_WriteCommand 60E8  
                              __ramtop 2000            __size_of_UART1_Transmit_ISR 002C  
             __size_of_NCO1_Initialize 001C                                __ptext0 20B8  
                              __ptext1 3E1A                                __ptext2 408C  
                              __ptext3 4C10                                __ptext4 5B3E  
                              __ptext5 6162                                __ptext6 58E4  
                              __ptext7 5B68                                __ptext8 616A  
                              __ptext9 42F4                      _UART2_Receive_ISR 5FC8  
                      __size_of_printf 0062                        __CFG_WRTAPP$OFF 000000  
                      __size_of_strlen 00A2                                us331999 4528  
                              us248999 3E04                                us259999 4764  
                _OSCILLATOR_Initialize 60BE                                us445999 2A4C  
                              us462999 38EE                           __size_of_abs 0046  
                              _r_block 00C0                           __size_of_pad 0114  
                              _mode_sw 002E                        __CFG_WRTSAF$OFF 000000  
                            _T5CONbits 003F9A               __end_of_UART2_Initialize 5650  
                   m_protocol@rxData_l 002D             __size_of_SYSTEM_Initialize 0042  
                              _sprintf 4DB2                                _strncmp 4776  
                 end_of_initialization 4DAC                      __end_of_secs_send 42F4  
             _INT2_SetInterruptHandler 5D76               __size_of_secs_II_message 0242  
                           _r_protocol 360C    __end_of_UART1_SetTxInterruptHandler 5CD6  
          _UART1_SetTxInterruptHandler 5CAE    __end_of_UART2_SetRxInterruptHandler 5CAE  
          _UART2_SetRxInterruptHandler 5C86                             _t_protocol 3E1A  
                    __end_of_vfpfcnvrt 2A32                              _SPI1TCNTL 003D12  
                              postdec1 003FE5                                postdec2 003FDD  
                              postinc0 003FEE                                postinc1 003FE6  
                              postinc2 003FDE                    __size_of_StartTimer 003C  
                    __end_of_start_lcd 618E              __end_of_UART2_Receive_ISR 5FE8  
                       wdtdelay@dcount 00EC                  __CFG_WDTCPS$WDTCPS_31 000000  
                      ??_DMA1_DMAA_ISR 005C                         _block_checksum 4C10  
                _INT1_InterruptHandler 001A                              _PORTBbits 003FCB  
             _TMR6_SetInterruptHandler 5D26                  _TMR5_InterruptHandler 00F0  
 __size_of_UART2_SetTxInterruptHandler 0028                      __size_of_ADCC_ISR 002A  
  __end_of_ADCC_SetADIInterruptHandler 5E16            _ADCC_SetADIInterruptHandler 5DEE  
               __size_of_ringBufS_init 0028                       __CFG_FEXTOSC$ECH 000000  
                      _DMA1_Initialize 53FC                        _SPI1_Initialize 60A8  
                     _UART1_put_buffer 5B68                      __size_of_INT0_ISR 000E  
                    __size_of_INT1_ISR 000E                      __size_of_INT2_ISR 000E  
                       __end_of_WaitMs 5BBC           __end_of_INTERRUPT_Initialize 54CC  
               __end_of_block_checksum 4CE2   __end_of_INT0_DefaultInterruptHandler 6198  
__size_of_INT0_DefaultInterruptHandler 0002           _INT0_DefaultInterruptHandler 6196  
           __size_of_UART1_Receive_ISR 0020                          __pidataCOMRAM 619E  
                    __size_of_TMR5_ISR 003E                      __size_of_TMR6_ISR 001A  
          __size_of_UART2_Transmit_ISR 002C                         __end_of_memset 360C  
                       __end_of_printf 5592               __end_of_DMA1_DMADCNT_ISR 614A  
                     _UART2_put_buffer 5B3E                  __end_of_INT0_CallBack 5F64  
                       __end_of_strlen 5076                    start_initialization 4CE2  
 __end_of_TMR5_DefaultInterruptHandler 60A8  __size_of_TMR5_DefaultInterruptHandler 001A  
         _TMR5_DefaultInterruptHandler 608E        __size_of_PIN_MANAGER_Initialize 00A0  
                          __end_of_abs 57D6                  __end_of_INT1_CallBack 5F86  
                          __end_of_pad 4A1A                   __size_of_Default_ISR 0006  
                 __end_of_send_lcd_cmd 5C36                             ivt0x8_base 0008  
                __end_of_INT2_CallBack 5FA8                   secs_II_message@block 0001  
                        _uart1RxBuffer 0280                          _uart1TxBuffer 02C0  
                        _uart2RxBuffer 0200               __end_of_DMA1_DMASCNT_ISR 6136  
                        _uart2TxBuffer 0240                         _DMA1_DMAOR_ISR 6158  
                     __CFG_LPBOREN$OFF 000000                  __size_of_init_display 00EA  
          __size_of_eaDogM_WriteString 009C                              _TimerDone 5EFE  
                        _ringBufS_init 5C36                            _MD1CON0bits 003CFA  
                          _MD1CON1bits 003CFB                            __pdataBANK0 0060  
                          __pdataBANK1 0100                            __pdataBANK3 0386  
           __size_of_UART2_Receive_ISR 0020             __end_of_EXT_INT_Initialize 5746  
                      run_checksum@sum 00F8        __end_of_eaDogM_WriteStringAtPos 5AE6  
              __end_of_DMA1_Initialize 5466                            __pbssCOMRAM 0001  
     __end_of_INT0_SetInterruptHandler 5DEE                __end_of_SPI1_Initialize 60BE  
             _UART1_RxInterruptHandler 000E               _UART2_TxInterruptHandler 0011  
                  __size_of_m_protocol 046E              __size_of_ringBufS_put_dma 00AA  
                         _init_display 4B26                 __end_of_DMA1_DMAOR_ISR 6162  
               __size_of_TMR5_CallBack 0024                  _INT2_InterruptHandler 0017  
                _TMR6_InterruptHandler 00F3                 __size_of_TMR6_CallBack 0024  
               _PIN_MANAGER_Initialize 5076                   __end_of_wait_lcd_set 6188  
                            __ptext100 6074                              __ptext101 5EB6  
                            __ptext110 608E                              __ptext102 581C  
                            __ptext111 0000                              __ptext103 6128  
                            __ptext104 6140                              __ptext105 614C  
                            __ptext106 6158                              __ptext107 59DC  
                            __ptext108 58A4                              __ptext109 5EDA  
                   __end_of_StartTimer 5A56                      __size_of_wdtdelay 005C  
                    __size_of_vfprintf 0098                               _ADCC_ISR 5BBC  
                  __size_of_r_protocol 02D0                 __CFG_BBSIZE$BBSIZE_512 000000  
                          __smallconst 2000                               _CLC1GLS0 003C7A  
                             _CLC1GLS1 003C7B                               _CLC1GLS2 003C7C  
                             _CLC1GLS3 003C7D                               _CLC1SEL0 003C76  
                             _CLC1SEL1 003C77                               _CLC1SEL2 003C78  
                             _CLC1SEL3 003C79                               _DMA1CON0 003BFC  
                             _DMA1CON1 003BFD                               _DMA1AIRQ 003BFE  
                             _DMA1SIRQ 003BFF                            _NCO1CONbits 003F3E  
                  __size_of_t_protocol 0272                 __size_of_wait_lcd_done 001C  
                       __size_of_fputc 010C                         __size_of_fputs 0098  
                             _NCO1ACCH 003F39                         __size_of_putch 001A  
                             _NCO1ACCL 003F38                               _NCO1ACCU 003F3A  
                 _INTERRUPT_Initialize 5466                               _T6CLKCON 003F96  
                             _NCO1INCH 003F3C                               _NCO1INCL 003F3B  
                             _NCO1INCU 003F3D                        ?_DMA1_DMAOR_ISR 005B  
                             _INT0_ISR 60F8                               _INT1_ISR 6108  
                             _INT2_ISR 6118                               _LATCbits 003FBC  
                             _LATDbits 003FBD                               _LATEbits 003FBE  
    __size_of_INT1_SetInterruptHandler 0028                              _secs_send 408C  
                             _IPR1bits 003981                               _IPR2bits 003982  
                             _PIE1bits 003991                               _IPR3bits 003983  
                             _PIE2bits 003992                               _IPR5bits 003985  
                             _PIE3bits 003993                              _tickCount 00D9  
                             _IPR6bits 003986                               _PIE5bits 003995  
                             _IPR7bits 003987                               _IPR8bits 003988  
                             _PIE6bits 003996                               _PIE7bits 003997  
                             _IPR9bits 003989                               _PIE8bits 003998  
                  __CFG_BORV$VBOR_2P45 000000                               _PIE9bits 003999  
                            _ring_buf1 0343                              _ring_buf2 0300  
                             i2u410_48 5E2A                               i2u412_48 5E52  
                             i2u414_48 5E7A                               i2u417_40 5A0A  
                             i2u416_48 5EA2                               _PIR1bits 0039A1  
                             _PIR2bits 0039A2                               _SPI1BAUD 003D19  
                             i2u198_48 5BD2                               _SPI1CON0 003D14  
                             _SPI1CON1 003D15                               _SPI1CON2 003D16  
                             _PIR5bits 0039A5                               _PIR7bits 0039A7  
                             _PIR8bits 0039A8                               _PIR9bits 0039A9  
             __size_of_TMR5_Initialize 0046             __end_of_UART1_Transmit_ISR 5B12  
                             _TMR5_ISR 59DC                               _TMR6_ISR 6074  
                            _vfpfcnvrt 2584                           _SPI1INTFbits 003D1A  
                        _TMR5_CallBack 5EDA                              _start_lcd 6188  
            __size_of_send_lcd_cmd_dma 004E                          _TMR6_CallBack 5EB6  
             __end_of_UART1_put_buffer 5B92                  __size_of_send_lcd_cmd 0028  
    __size_of_TMR5_SetInterruptHandler 0028                    __end_of_UART1_Write 5960  
                  __end_of_UART2_Write 5922               __size_of_TMR6_Initialize 0028  
                          _INTCON0bits 003FD2                              copy_data0 4CF6  
                            copy_data1 4D18                              copy_data2 4D3A  
             _INT0_SetInterruptHandler 5DC6                 _uart1TxBufferRemaining 0038  
  __end_of_UART2_SetTxInterruptHandler 5C86            _UART2_SetTxInterruptHandler 5C5E  
                         _uart1RxCount 0035               __end_of_UART2_put_buffer 5B68  
                         _uart2RxCount 002F                               __Hrparam 0000  
     __size_of_eaDogM_WriteStringAtPos 002C                __CFG_RSTOSC$EXTOSC_4PLL 000000  
                 __end_of_run_checksum 5ABA                               __Lrparam 0000  
                   __CFG_BOREN$SBORDIS 000000                          _wait_lcd_done 6006  
                         _send_lcd_cmd 5C0E                       __size_of___aodiv 0280  
                     __size_of___aomod 0240                        _NCO1_Initialize 6022  
                __end_of_DMA1_DMAA_ISR 6156   __size_of_UART1_SetRxInterruptHandler 0028  
                    ?_DMA1_DMADCNT_ISR 005B               __size_of_ADCC_Initialize 004A  
          __end_of_eaDogM_WriteCommand 60F6                               __pivt0x8 0008  
                   ??_DMA1_DMADCNT_ISR 005C                               __ptext10 4DB2  
                             __ptext11 360C                               __ptext20 617A  
                             __ptext12 5922                               __ptext21 599E  
                             __ptext13 2EB2                               __ptext30 56AC  
                             __ptext22 4B26                               __ptext14 5A8E  
                             __ptext31 6182                               __ptext23 5BE6  
                             __ptext15 5B92                               __ptext40 4776  
                             __ptext32 6006                               __ptext24 5C0E  
                             __ptext16 5EFE                               __ptext41 38DC  
                             __ptext33 5650                               __ptext25 5FE8  
                             __ptext17 5A1A                               __ptext50 4A1A  
                             __ptext42 2A32                               __ptext34 6188  
                             __ptext26 5C36                               __ptext18 6172  
                             __ptext51 605A                               __ptext43 5790  
                             __ptext35 52E2                               __ptext27 5ABA  
                             __ptext19 5960                               __ptext60 5CFE  
                             __ptext52 4F2A                               __ptext44 4536  
                             __ptext36 3320                               __ptext28 5116  
                             __ptext61 5D26                               __ptext53 5862  
                             __ptext45 3B9A                               __ptext37 5530  
                             __ptext29 60E8                               __ptext70 56FA  
                             __ptext62 57D6                               __ptext54 55F2  
                             __ptext46 5374                               __ptext38 51B2  
                             __ptext71 5D76                               __ptext63 5D4E  
                             __ptext55 5C5E                               __ptext47 4906  
                             __ptext39 2584                               __ptext80 60F8  
                             __ptext72 5D9E                               __ptext64 60A8  
                             __ptext56 5C86                               __ptext48 4FD4  
                             __ptext81 5F42                               __ptext73 5DC6  
                             __ptext65 60D4                               __ptext57 54CC  
                             __ptext49 524A                               __ptext90 5BBC  
                             __ptext82 6196                               __ptext74 603E  
                             __ptext66 5076                               __ptext58 5CAE  
                             __ptext91 619C                               __ptext83 6108  
                             __ptext75 53FC                               __ptext67 60BE  
                             __ptext59 5CD6                               __ptext92 5E18  
                             __ptext84 5F64                               __ptext76 6136  
                             __ptext68 6022                               __ptext93 5AE6  
                             __ptext85 6198                               __ptext77 5F20  
                             __ptext69 5466                               __ptext94 5E40  
                             __ptext86 6118                               __ptext78 5746  
                             __ptext95 5FA8                               __ptext87 5F86  
                             __ptext79 5DEE                               __ptext96 5E68  
                             __ptext88 619A                               __ptext97 5B12  
                             __ptext89 6190                               __ptext98 5E90  
                             __ptext99 5FC8                        _secs_II_message 42F4  
             __size_of_CLC1_Initialize 0022                       __size_of_sprintf 00C8  
                     __size_of_strncmp 0190                       _ringBufS_put_dma 4F2A  
                   __end_of_m_protocol 3320                          __size_of_ctoa 0088  
                        __size_of_main 04CC                          __size_of_dtoa 0480  
                __size_of_wait_lcd_set 0006                          __size_of_stoa 02BE  
                 __CFG_WDTCWS$WDTCWS_7 000000                      ?_DMA1_DMASCNT_ISR 005B  
                          _IVTLOCKbits 003FD4               __size_of_TMR5_WriteTimer 0040  
            _ADCC_ADI_InterruptHandler 0008                              stoa@F1144 0060  
                   ??_DMA1_DMASCNT_ISR 005C                               _spi_link 00CD  
                             _wdtdelay 5650             __end_of_UART2_Transmit_ISR 5B3E  
                             _vfprintf 51B2                      _UART1_is_rx_ready 617A  
                          _UART1_Write 5922   __end_of_INT1_DefaultInterruptHandler 619A  
__size_of_INT1_DefaultInterruptHandler 0002           _INT1_DefaultInterruptHandler 6198  
                          _UART2_Write 58E4                      _UART1_is_tx_ready 616A  
                      r_protocol@retry 005D                      t_protocol@requeue 002A  
                        ??_Default_ISR 005B                     __end_of_r_protocol 38DC  
                          _uart1RxHead 0037                            _uart1TxHead 003A  
                          _uart2RxHead 0031                            _uart1RxTail 0036  
                          _uart2TxHead 0034                            _uart1TxTail 0039  
                          _uart2RxTail 0030                            _uart2TxTail 0033  
                         _wait_lcd_set 6182                     _EXT_INT_Initialize 56FA  
 __end_of_TMR6_DefaultInterruptHandler 5862  __size_of_TMR6_DefaultInterruptHandler 0046  
         _TMR6_DefaultInterruptHandler 581C                     __end_of_t_protocol 408C  
 __end_of_ADCC_DefaultInterruptHandler 619E  __size_of_ADCC_DefaultInterruptHandler 0002  
         _ADCC_DefaultInterruptHandler 619C                               intlevel2 0000  
                    _send_lcd_cmd_long 5BE6                      __CFG_CLKOUTEN$OFF 000000  
           __end_of_eaDogM_WriteString 51B2                __end_of_NCO1_Initialize 603E  
               __size_of_INT0_CallBack 0022                             _SPI1SCKPPS 003ADE  
                           _SPI1SDIPPS 003ADF              __end_of_UART1_is_rx_ready 6182  
                           _UART1_Read 599E                 __size_of_INT1_CallBack 0022  
                           _UART2_Read 5960              __end_of_UART1_is_tx_ready 6172  
               __size_of_INT2_CallBack 0022                      _UART2_is_rx_ready 6172  
               _uart2TxBufferRemaining 0032                      _UART2_is_tx_ready 6162  
                     _send_lcd_cmd_dma 56AC                  TMR5_ISR@CountCallBack 0026  
              __end_of_secs_II_message 4536       __end_of_INT1_SetInterruptHandler 5DC6  
            __size_of_UART1_Initialize 0064                        t_protocol@block 00E5  
                     ??_DMA1_DMAOR_ISR 005C               _UART1_TxInterruptHandler 000B  
                      t_protocol@retry 002B              __end_of_send_lcd_cmd_long 5C0E  
                  __end_of_Default_ISR 6196         __end_of_PIN_MANAGER_Initialize 5116  
                __size_of_run_checksum 002C                _eaDogM_WriteStringAtPos 5ABA  
            __size_of_UART2_Initialize 005E  
