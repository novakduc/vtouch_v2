

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Dec 27 20:22:20 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBIGRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    18                           	psect	dataBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    20                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    21                           	psect	text0,global,reloc=2,class=CODE,delta=1
    22                           	psect	text1,global,reloc=2,class=CODE,delta=1
    23                           	psect	text2,global,reloc=2,class=CODE,delta=1
    24                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text4,global,reloc=2,class=CODE,delta=1
    26                           	psect	text5,global,reloc=2,class=CODE,delta=1
    27                           	psect	text6,global,reloc=2,class=CODE,delta=1
    28                           	psect	text7,global,reloc=2,class=CODE,delta=1
    29                           	psect	text8,global,reloc=2,class=CODE,delta=1
    30                           	psect	text9,global,reloc=2,class=CODE,delta=1
    31                           	psect	text10,global,reloc=2,class=CODE,delta=1
    32                           	psect	text11,global,reloc=2,class=CODE,delta=1
    33                           	psect	text12,global,reloc=2,class=CODE,delta=1
    34                           	psect	text13,global,reloc=2,class=CODE,delta=1
    35                           	psect	text14,global,reloc=2,class=CODE,delta=1
    36                           	psect	text15,global,reloc=2,class=CODE,delta=1
    37                           	psect	text16,global,reloc=2,class=CODE,delta=1
    38                           	psect	text17,global,reloc=2,class=CODE,delta=1
    39                           	psect	text18,global,reloc=2,class=CODE,delta=1
    40                           	psect	text19,global,reloc=2,class=CODE,delta=1
    41                           	psect	text20,global,reloc=2,class=CODE,delta=1
    42                           	psect	text21,global,reloc=2,class=CODE,delta=1
    43                           	psect	text22,global,reloc=2,class=CODE,delta=1
    44                           	psect	text23,global,reloc=2,class=CODE,delta=1
    45                           	psect	text24,global,reloc=2,class=CODE,delta=1
    46                           	psect	text25,global,reloc=2,class=CODE,delta=1
    47                           	psect	text26,global,reloc=2,class=CODE,delta=1
    48                           	psect	text27,global,reloc=2,class=CODE,delta=1
    49                           	psect	text28,global,reloc=2,class=CODE,delta=1
    50                           	psect	text29,global,reloc=2,class=CODE,delta=1
    51                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text31,global,reloc=2,class=CODE,delta=1
    53                           	psect	text32,global,reloc=2,class=CODE,delta=1
    54                           	psect	text33,global,reloc=2,class=CODE,delta=1
    55                           	psect	text34,global,reloc=2,class=CODE,delta=1
    56                           	psect	text35,global,reloc=2,class=CODE,delta=1
    57                           	psect	text36,global,reloc=2,class=CODE,delta=1
    58                           	psect	text37,global,reloc=2,class=CODE,delta=1
    59                           	psect	text38,global,reloc=2,class=CODE,delta=1
    60                           	psect	text39,global,reloc=2,class=CODE,delta=1
    61                           	psect	text40,global,reloc=2,class=CODE,delta=1
    62                           	psect	text41,global,reloc=2,class=CODE,delta=1
    63                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    64                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text44,global,reloc=2,class=CODE,delta=1
    66                           	psect	text45,global,reloc=2,class=CODE,delta=1
    67                           	psect	text46,global,reloc=2,class=CODE,delta=1
    68                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    69                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    70                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    71                           	psect	text50,global,reloc=2,class=CODE,delta=1
    72                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=1
    73                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=1
    74                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=2
    75                           	psect	text54,global,reloc=2,class=CODE,delta=1
    76                           	psect	text55,global,reloc=2,class=CODE,delta=1
    77                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=2
    78                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=2
    79                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=2
    80                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=2
    81                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=2
    82                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=1
    83                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=1
    84                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=1
    85                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=1
    86                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=1
    87                           	psect	text66,global,reloc=2,class=CODE,delta=1
    88                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=2
    89                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=1
    90                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=1
    91                           	psect	text70,global,reloc=2,class=CODE,delta=1
    92                           	psect	text71,global,reloc=2,class=CODE,delta=1
    93                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=2
    94                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=2
    95                           	psect	text74,global,reloc=2,class=CODE,delta=1,group=2
    96                           	psect	text75,global,reloc=2,class=CODE,delta=1
    97                           	psect	text76,global,reloc=2,class=CODE,delta=1
    98                           	psect	text77,global,reloc=2,class=CODE,delta=1,group=2
    99                           	psect	text78,global,reloc=2,class=CODE,delta=1,group=2
   100                           	psect	text79,global,reloc=2,class=CODE,delta=1,group=2
   101                           	psect	text80,global,reloc=2,class=CODE,delta=1
   102                           	psect	text81,global,reloc=2,class=CODE,delta=1
   103                           	psect	text82,global,reloc=2,class=CODE,delta=1
   104                           	psect	text83,global,reloc=2,class=CODE,delta=1
   105                           	psect	text84,global,reloc=2,class=CODE,delta=1
   106                           	psect	text85,global,reloc=2,class=CODE,delta=1
   107                           	psect	text86,global,reloc=2,class=CODE,delta=1
   108                           	psect	text87,global,reloc=2,class=CODE,delta=1
   109                           	psect	text88,global,reloc=2,class=CODE,delta=1
   110                           	psect	text89,global,reloc=2,class=CODE,delta=1,inline
   111                           	psect	text90,global,reloc=2,class=CODE,delta=1,inline
   112                           	psect	text91,global,reloc=2,class=CODE,delta=1
   113                           	psect	text92,global,reloc=2,class=CODE,delta=1
   114                           	psect	text93,global,reloc=2,class=CODE,delta=1,group=2
   115                           	psect	text94,global,reloc=2,class=CODE,delta=1
   116                           	psect	text95,global,reloc=2,class=CODE,delta=1,group=2
   117                           	psect	text96,global,reloc=2,class=CODE,delta=1
   118                           	psect	text97,global,reloc=2,class=CODE,delta=1,group=1
   119                           	psect	text98,global,reloc=2,class=CODE,delta=1,group=1
   120                           	psect	text99,global,reloc=2,class=CODE,delta=1,group=1
   121                           	psect	text100,global,reloc=2,class=CODE,delta=1
   122                           	psect	text101,global,reloc=2,class=CODE,delta=1
   123                           	psect	text102,global,reloc=2,class=CODE,delta=1
   124                           	psect	text103,global,reloc=2,class=CODE,delta=1
   125                           	psect	text104,global,reloc=2,class=CODE,delta=1,group=1
   126                           	psect	text105,global,reloc=2,class=CODE,delta=1,group=1
   127                           	psect	text106,global,reloc=2,class=CODE,delta=1,group=1
   128                           	psect	text107,global,reloc=2,class=CODE,delta=1
   129                           	psect	text108,global,reloc=2,class=CODE,delta=1
   130                           	psect	text109,global,reloc=2,class=CODE,delta=1
   131                           	psect	text110,global,reloc=2,class=CODE,delta=1
   132                           	psect	text111,global,reloc=2,class=CODE,delta=1
   133                           	psect	text112,global,reloc=2,class=CODE,delta=1
   134                           	psect	text113,global,reloc=2,class=CODE,delta=1
   135                           	psect	text114,global,reloc=2,class=CODE,delta=1
   136                           	psect	text115,global,reloc=2,class=CODE,delta=1
   137                           	psect	text116,global,reloc=2,class=CODE,delta=1
   138                           	psect	text117,global,reloc=2,class=CODE,delta=1
   139                           	psect	text118,global,reloc=2,class=CODE,delta=1
   140                           	psect	text119,global,reloc=2,class=CODE,delta=1
   141                           	psect	text120,global,reloc=2,class=CODE,delta=1
   142                           	psect	text121,global,reloc=2,class=CODE,delta=1
   143                           	psect	text122,global,reloc=2,class=CODE,delta=1
   144                           	psect	text123,global,reloc=2,class=CODE,delta=1
   145                           	psect	text124,global,reloc=2,class=CODE,delta=1
   146                           	psect	text125,global,reloc=2,class=CODE,delta=1
   147                           	psect	text126,global,reloc=2,class=CODE,delta=1
   148                           	psect	text127,global,reloc=2,class=CODE,delta=1
   149                           	psect	text128,global,reloc=2,class=CODE,delta=1
   150                           	psect	text129,global,reloc=2,class=CODE,delta=1
   151                           	psect	text130,global,reloc=2,class=CODE,delta=1
   152                           	psect	text131,global,reloc=2,class=CODE,delta=1
   153                           	psect	text132,global,reloc=2,class=CODE,delta=1
   154                           	psect	text133,global,reloc=2,class=CODE,delta=1
   155                           	psect	text134,global,reloc=2,class=CODE,delta=1
   156                           	psect	text135,global,reloc=2,class=CODE,delta=1
   157                           	psect	text136,global,reloc=4,class=CODE,delta=1
   158                           	psect	text137,global,reloc=2,class=CODE,delta=1
   159                           	psect	text138,global,reloc=2,class=CODE,delta=1
   160                           	psect	text139,global,reloc=2,class=CODE,delta=1
   161                           	psect	text140,global,reloc=4,class=CODE,delta=1
   162                           	psect	text141,global,reloc=2,class=CODE,delta=1
   163                           	psect	text142,global,reloc=2,class=CODE,delta=1
   164                           	psect	text143,global,reloc=2,class=CODE,delta=1
   165                           	psect	text144,global,reloc=2,class=CODE,delta=1
   166                           	psect	text145,global,reloc=2,class=CODE,delta=1
   167                           	psect	text146,global,reloc=2,class=CODE,delta=1
   168                           	psect	text147,global,reloc=4,class=CODE,delta=1
   169                           	psect	text148,global,reloc=2,class=CODE,delta=1
   170                           	psect	text149,global,reloc=2,class=CODE,delta=1
   171                           	psect	text150,global,reloc=2,class=CODE,delta=1
   172                           	psect	text151,global,reloc=2,class=CODE,delta=1
   173                           	psect	text152,global,reloc=2,class=CODE,delta=1
   174                           	psect	text153,global,reloc=2,class=CODE,delta=1
   175                           	psect	text154,global,reloc=2,class=CODE,delta=1,group=1
   176                           	psect	text155,global,reloc=4,class=CODE,delta=1
   177                           	psect	text156,global,reloc=2,class=CODE,delta=1
   178                           	psect	text157,global,reloc=2,class=CODE,delta=1
   179                           	psect	text158,global,reloc=4,class=CODE,delta=1
   180                           	psect	text159,global,reloc=4,class=CODE,delta=1
   181                           	psect	text160,global,reloc=2,class=CODE,delta=1
   182                           	psect	text161,global,reloc=2,class=CODE,delta=1
   183                           	psect	text162,global,reloc=2,class=CODE,delta=1
   184                           	psect	text163,global,reloc=4,class=CODE,delta=1
   185                           	psect	text164,global,reloc=4,class=CODE,delta=1
   186                           	psect	text165,global,reloc=2,class=CODE,delta=1
   187                           	psect	text166,global,reloc=4,class=CODE,delta=1
   188                           	psect	text167,global,reloc=2,class=CODE,delta=1
   189                           	psect	text168,global,reloc=4,class=CODE,delta=1
   190                           	psect	text169,global,reloc=2,class=CODE,delta=1
   191                           	psect	text170,global,reloc=4,class=CODE,delta=1
   192                           	psect	text171,global,reloc=2,class=CODE,delta=1
   193                           	psect	text172,global,reloc=2,class=CODE,delta=1
   194                           	psect	text173,global,reloc=4,class=CODE,delta=1
   195                           	psect	text174,global,reloc=4,class=CODE,delta=1
   196                           	psect	text175,global,reloc=4,class=CODE,delta=1
   197                           	psect	text176,global,reloc=4,class=CODE,delta=1
   198                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   199                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   200                           	psect	text177,global,reloc=4,class=CODE,delta=1
   201                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   202                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   203  0000                     
   204                           ; Version 2.10
   205                           ; Generated 31/07/2019 GMT
   206                           ; 
   207                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   208                           ; All rights reserved.
   209                           ; 
   210                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   211                           ; 
   212                           ; Redistribution and use in source and binary forms, with or without modification, are
   213                           ; permitted provided that the following conditions are met:
   214                           ; 
   215                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   216                           ;        conditions and the following disclaimer.
   217                           ; 
   218                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   219                           ;        of conditions and the following disclaimer in the documentation and/or other
   220                           ;        materials provided with the distribution.
   221                           ; 
   222                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   223                           ;        software without specific prior written permission.
   224                           ; 
   225                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   226                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   227                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   228                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   229                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   230                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   231                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   232                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   233                           ; 
   234                           ; 
   235                           ; Code-generator required, PIC18F57K42 Definitions
   236                           ; 
   237                           ; SFR Addresses
   238  0000                     
   239 ;;_main$3754	offset	0
   240 ;;_main$3750	offset	2
   241 ;;_esr_temp	offset	4
   242 ;;_i_esr	offset	8
   243 ;;_shape	offset	10
   244 ;;_k	offset	11
   245 ;;_j	offset	12
   246 ;;_i	offset	13
   247 ;;_inp_index	offset	14
   248 ;;_mode	offset	15
   249 ;;_i_ror	offset	16
   250 ;;_s	offset=-2 (param)
   251 ;;_c	offset	0
   252 ;;_shape	offset=-1 (param)
   253 ;;_reset	offset=-2 (param)
   254 ;;_cmd	offset=-1 (param)
   255 ;;_cmd	offset=-1 (param)
   256 ;;_data	offset=-1 (param)
   257 ;;__this	offset=-2 (param)
   258 ;;_soc	offset	0
   259 ;;_slot	offset	4
   260 ;;_cvoltage	offset=-4 (param)
   261 ;;_h	offset=-1 (param)
   262 ;;_h	offset=-1 (param)
   263 ;;_i	offset=-1 (param)
   264 ;;_fsm	offset=-1 (param)
   265 ;;_channel	offset=-1 (param)
   266 ;;_mode	offset=-1 (param)
   267 ;;_mode	offset=-1 (param)
   268 ;;_cmd	offset=-1 (param)
   269 ;;_i	offset	0
   270 ;;_h	offset=-1 (param)
   271 ;;_flipper	offset=-1 (param)
   272 ;;_f	offset	0
   273 ;;_ap	offset	6
   274 ;;_s	offset=-3 (param)
   275 ;;_fmt	offset=-5 (param)
   276 ;;_line	offset=-1 (param)
   277 ;;_vterm	offset=-2 (param)
   278 ;;_numMilliseconds	offset=-2 (param)
   279 ;;_vterm	offset=-1 (param)
   280 ;;_r	offset=-1 (param)
   281 ;;_c	offset=-2 (param)
   282 ;;_strPtr	offset=-4 (param)
   283 ;;_strPtr	offset=-1 (param)
   284 ;;_delay	offset=-4 (param)
   285 ;;_strPtr	offset=-2 (param)
   286 ;;__this	offset=-2 (param)
   287 ;;_clearBuffer	offset=-3 (param)
   288 ;;_s	offset	0
   289 ;;_k	offset	2
   290 ;;_dest	offset=-2 (param)
   291 ;;_c	offset=-4 (param)
   292 ;;_n	offset=-6 (param)
   293 ;;_ap	offset	0
   294 ;;_fmt	offset=-3 (param)
   295 ;;_cfmt	offset	0
   296 ;;_fp	offset=-2 (param)
   297 ;;_fmt	offset=-4 (param)
   298 ;;_ap	offset=-6 (param)
   299 ;;_vfpfcnvrt$5548	offset	0
   300 ;;_vfpfcnvrt$5559	offset	2
   301 ;;_vfpfcnvrt$5547	offset	4
   302 ;;_llu	offset	6
   303 ;;_ll	offset	14
   304 ;;_f	offset	22
   305 ;;_ct	offset	26
   306 ;;_cp	offset	29
   307 ;;_c	offset	31
   308 ;;_fp	offset=-2 (param)
   309 ;;_fmt	offset=-4 (param)
   310 ;;_ap	offset=-6 (param)
   311 ;;_xtoa$5533	offset	0
   312 ;;_xtoa$5532	offset	2
   313 ;;_n	offset	4
   314 ;;_c	offset	12
   315 ;;_i	offset	14
   316 ;;_w	offset	16
   317 ;;_p	offset	18
   318 ;;_fp	offset=-2 (param)
   319 ;;_d	offset=-10 (param)
   320 ;;_x	offset=-11 (param)
   321 ;;_toupper$6339	offset	0
   322 ;;_c	offset=-2 (param)
   323 ;;_c	offset=-2 (param)
   324 ;;_c	offset=-2 (param)
   325 ;;_n	offset	0
   326 ;;_i	offset	8
   327 ;;_w	offset	10
   328 ;;_p	offset	12
   329 ;;_fp	offset=-2 (param)
   330 ;;_d	offset=-10 (param)
   331 ;;_counter	offset	0
   332 ;;_dividend	offset=-8 (param)
   333 ;;_divisor	offset=-16 (param)
   334 ;;_quotient	offset	0
   335 ;;_counter	offset	8
   336 ;;_dividend	offset=-8 (param)
   337 ;;_divisor	offset=-16 (param)
   338 ;;_r	offset	0
   339 ;;_l	offset	2
   340 ;;__l	offset=-2 (param)
   341 ;;__r	offset=-4 (param)
   342 ;;_n	offset=-6 (param)
   343 ;;_nuls	offset	0
   344 ;;_l	offset	7
   345 ;;_p	offset	9
   346 ;;_cp	offset	11
   347 ;;_w	offset	13
   348 ;;_i	offset	15
   349 ;;_fp	offset=-2 (param)
   350 ;;_s	offset=-4 (param)
   351 ;;_efgtoa$5505	offset	0
   352 ;;_efgtoa$5504	offset	2
   353 ;;_efgtoa$5503	offset	4
   354 ;;_efgtoa$5499	offset	6
   355 ;;_efgtoa$5495	offset	8
   356 ;;_efgtoa$5494	offset	10
   357 ;;_u	offset	12
   358 ;;_g	offset	16
   359 ;;_l	offset	20
   360 ;;_h	offset	24
   361 ;;_ou	offset	28
   362 ;;_n	offset	32
   363 ;;_e	offset	34
   364 ;;_i	offset	36
   365 ;;_w	offset	38
   366 ;;_p	offset	40
   367 ;;_sign	offset	42
   368 ;;_d	offset	44
   369 ;;_ne	offset	46
   370 ;;_m	offset	48
   371 ;;_pp	offset	50
   372 ;;_t	offset	52
   373 ;;_mode	offset	54
   374 ;;_nmode	offset	55
   375 ;;_fp	offset=-2 (param)
   376 ;;_f	offset=-6 (param)
   377 ;;_c	offset=-7 (param)
   378 ;;_tolower$6324	offset	0
   379 ;;_c	offset=-2 (param)
   380 ;;_c	offset=-2 (param)
   381 ;;_d	offset	0
   382 ;;_s	offset	2
   383 ;;_dest	offset=-2 (param)
   384 ;;_src	offset=-4 (param)
   385 ;;_u	offset	0
   386 ;;_m	offset	4
   387 ;;_e	offset	8
   388 ;;_x	offset=-4 (param)
   389 ;;_u	offset	0
   390 ;;_e	offset	4
   391 ;;_x	offset=-4 (param)
   392 ;;_exp1	offset	0
   393 ;;_sign1	offset	1
   394 ;;_f1	offset=-4 (param)
   395 ;;_f1	offset=-4 (param)
   396 ;;_ff1	offset=-4 (param)
   397 ;;_ff2	offset=-8 (param)
   398 ;;_sign	offset	0
   399 ;;_counter	offset	1
   400 ;;_dividend	offset=-2 (param)
   401 ;;_divisor	offset=-4 (param)
   402 ;;_quotient	offset	0
   403 ;;_sign	offset	2
   404 ;;_counter	offset	3
   405 ;;_dividend	offset=-2 (param)
   406 ;;_divisor	offset=-4 (param)
   407 ;;_dtoa$5471	offset	0
   408 ;;_n	offset	2
   409 ;;_i	offset	10
   410 ;;_s	offset	12
   411 ;;_w	offset	14
   412 ;;_p	offset	16
   413 ;;_fp	offset=-2 (param)
   414 ;;_d	offset=-10 (param)
   415 ;;_a	offset=-2 (param)
   416 ;;_sign	offset	0
   417 ;;_counter	offset	1
   418 ;;_dividend	offset=-8 (param)
   419 ;;_divisor	offset=-16 (param)
   420 ;;_quotient	offset	0
   421 ;;_sign	offset	8
   422 ;;_counter	offset	9
   423 ;;_dividend	offset=-8 (param)
   424 ;;_divisor	offset=-16 (param)
   425 ;;_w	offset	0
   426 ;;_fp	offset=-2 (param)
   427 ;;_c	offset=-3 (param)
   428 ;;_w	offset	0
   429 ;;_i	offset	2
   430 ;;_fp	offset=-2 (param)
   431 ;;_buf	offset=-4 (param)
   432 ;;_p	offset=-6 (param)
   433 ;;_a	offset	0
   434 ;;_s	offset=-2 (param)
   435 ;;_i	offset	0
   436 ;;_c	offset	2
   437 ;;_s	offset=-2 (param)
   438 ;;_fp	offset=-4 (param)
   439 ;;_c	offset=-2 (param)
   440 ;;_fp	offset=-4 (param)
   441 ;;_c	offset=-1 (param)
   442 ;;__this	offset=-2 (param)
   443 ;;_c	offset=-3 (param)
   444 ;;_atoi$6055	offset	0
   445 ;;_atoi$6053	offset	2
   446 ;;_atoi$6054	offset	4
   447 ;;_n	offset	5
   448 ;;_neg	offset	7
   449 ;;_s	offset=-2 (param)
   450 ;;_isspace$6104	offset	0
   451 ;;_c	offset=-2 (param)
   452 ;;_c	offset=-2 (param)
   453 ;;_vterm	offset=-1 (param)
   454 ;;_new_response_info	offset=-1 (param)
   455 ;;_new_response_info	offset=-1 (param)
   456 ;;_level	offset=-2 (param)
   457 ;;_dutyValue	offset=-2 (param)
   458 ;;_timer	offset=-1 (param)
   459 ;;_timer	offset=-1 (param)
   460 ;;_count	offset=-3 (param)
   461 ;;_h	offset=-1 (param)
   462 ;;_u	offset	0
   463 ;;_x	offset=-4 (param)
   464 ;;_chan	offset=-1 (param)
   465 ;;_to_what	offset=-2 (param)
   466 ;;_u	offset	0
   467 ;;_s	offset=-2 (param)
   468 ;;_index	offset=-1 (param)
   469 ;;_arg	offset	0
   470 ;;_exp	offset	4
   471 ;;_sign	offset=-1 (param)
   472 ;;_val	offset=-5 (param)
   473 ;;_grs	offset	0
   474 ;;_rem	offset	4
   475 ;;_new_exp	offset	8
   476 ;;_aexp	offset	10
   477 ;;_bexp	offset	11
   478 ;;_sign	offset	12
   479 ;;_b	offset=-4 (param)
   480 ;;_a	offset=-8 (param)
   481 ;;_ff1	offset=-4 (param)
   482 ;;_ff2	offset=-8 (param)
   483 ;;_lp_speed	offset	0
   484 ;;_new	offset=-4 (param)
   485 ;;_bn	offset=-5 (param)
   486 ;;_slow	offset=-6 (param)
   487 ;;_b	offset=-4 (param)
   488 ;;_a	offset=-8 (param)
   489 ;;_grs	offset	0
   490 ;;_bexp	offset	1
   491 ;;_aexp	offset	2
   492 ;;_signs	offset	3
   493 ;;_b	offset=-4 (param)
   494 ;;_a	offset=-8 (param)
   495 ;;_prod	offset	0
   496 ;;_grs	offset	4
   497 ;;_temp	offset	8
   498 ;;_bexp	offset	10
   499 ;;_aexp	offset	11
   500 ;;_sign	offset	12
   501 ;;_b	offset=-4 (param)
   502 ;;_a	offset=-8 (param)
   503 ;;_InterruptHandler	offset=-3 (param)
   504 ;;_InterruptHandler	offset=-3 (param)
   505 ;;_InterruptHandler	offset=-3 (param)
   506 ;;_InterruptHandler	offset=-3 (param)
   507 ;;_InterruptHandler	offset=-3 (param)
   508 ;;_InterruptHandler	offset=-3 (param)
   509 ;;_state	offset	0
   510 ;;_InterruptHandler	offset=-3 (param)
   511 ;;_InterruptHandler	offset=-3 (param)
   512 ;;_InterruptHandler	offset=-3 (param)
   513 ;;_InterruptHandler	offset=-3 (param)
   514 ;;_i	offset	0
   515 ;;_sw_value	offset	1
   516 ;;_timerVal	offset=-2 (param)
   517 ;;_light	offset	0
   518 ;;_mode	offset=-1 (param)
   519 ;;_chan	offset=-1 (param)
   520 ;;_to_what	offset=-2 (param)
   521 ;;_u	offset	0
   522 ;;_s	offset=-2 (param)
   523 ;;_index	offset=-1 (param)
   524 ;;_arg	offset	0
   525 ;;_exp	offset	4
   526 ;;_sign	offset=-1 (param)
   527 ;;_val	offset=-5 (param)
   528 ;;_b	offset=-4 (param)
   529 ;;_a	offset=-8 (param)
   530 ;;_grs	offset	0
   531 ;;_bexp	offset	1
   532 ;;_aexp	offset	2
   533 ;;_signs	offset	3
   534 ;;_b	offset=-4 (param)
   535 ;;_a	offset=-8 (param)
   536 ;;_prod	offset	0
   537 ;;_grs	offset	4
   538 ;;_temp	offset	8
   539 ;;_bexp	offset	10
   540 ;;_aexp	offset	11
   541 ;;_sign	offset	12
   542 ;;_b	offset=-4 (param)
   543 ;;_a	offset=-8 (param)
   544 ;;_grs	offset	0
   545 ;;_rem	offset	4
   546 ;;_new_exp	offset	8
   547 ;;_aexp	offset	10
   548 ;;_bexp	offset	11
   549 ;;_sign	offset	12
   550 ;;_b	offset=-4 (param)
   551 ;;_a	offset=-8 (param)
   552 ;;_ff1	offset=-4 (param)
   553 ;;_ff2	offset=-8 (param)
   554 ;;_timerVal	offset=-2 (param)
   555 ;;_log_ptr	offset	0
   556 ;;_f	offset	0
   557 ;;_ap	offset	6
   558 ;;_s	offset=-3 (param)
   559 ;;_fmt	offset=-5 (param)
   560 ;;_cfmt	offset	0
   561 ;;_fp	offset=-2 (param)
   562 ;;_fmt	offset=-4 (param)
   563 ;;_ap	offset=-6 (param)
   564 ;;_vfpfcnvrt$5548	offset	0
   565 ;;_vfpfcnvrt$5559	offset	2
   566 ;;_vfpfcnvrt$5547	offset	4
   567 ;;_llu	offset	6
   568 ;;_ll	offset	14
   569 ;;_f	offset	22
   570 ;;_ct	offset	26
   571 ;;_cp	offset	29
   572 ;;_c	offset	31
   573 ;;_fp	offset=-2 (param)
   574 ;;_fmt	offset=-4 (param)
   575 ;;_ap	offset=-6 (param)
   576 ;;_xtoa$5533	offset	0
   577 ;;_xtoa$5532	offset	2
   578 ;;_n	offset	4
   579 ;;_c	offset	12
   580 ;;_i	offset	14
   581 ;;_w	offset	16
   582 ;;_p	offset	18
   583 ;;_fp	offset=-2 (param)
   584 ;;_d	offset=-10 (param)
   585 ;;_x	offset=-11 (param)
   586 ;;_toupper$6339	offset	0
   587 ;;_c	offset=-2 (param)
   588 ;;_c	offset=-2 (param)
   589 ;;_c	offset=-2 (param)
   590 ;;_n	offset	0
   591 ;;_i	offset	8
   592 ;;_w	offset	10
   593 ;;_p	offset	12
   594 ;;_fp	offset=-2 (param)
   595 ;;_d	offset=-10 (param)
   596 ;;_counter	offset	0
   597 ;;_dividend	offset=-8 (param)
   598 ;;_divisor	offset=-16 (param)
   599 ;;_quotient	offset	0
   600 ;;_counter	offset	8
   601 ;;_dividend	offset=-8 (param)
   602 ;;_divisor	offset=-16 (param)
   603 ;;_r	offset	0
   604 ;;_l	offset	2
   605 ;;__l	offset=-2 (param)
   606 ;;__r	offset=-4 (param)
   607 ;;_n	offset=-6 (param)
   608 ;;_nuls	offset	0
   609 ;;_l	offset	7
   610 ;;_p	offset	9
   611 ;;_cp	offset	11
   612 ;;_w	offset	13
   613 ;;_i	offset	15
   614 ;;_fp	offset=-2 (param)
   615 ;;_s	offset=-4 (param)
   616 ;;_efgtoa$5505	offset	0
   617 ;;_efgtoa$5504	offset	2
   618 ;;_efgtoa$5503	offset	4
   619 ;;_efgtoa$5499	offset	6
   620 ;;_efgtoa$5495	offset	8
   621 ;;_efgtoa$5494	offset	10
   622 ;;_u	offset	12
   623 ;;_g	offset	16
   624 ;;_l	offset	20
   625 ;;_h	offset	24
   626 ;;_ou	offset	28
   627 ;;_n	offset	32
   628 ;;_e	offset	34
   629 ;;_i	offset	36
   630 ;;_w	offset	38
   631 ;;_p	offset	40
   632 ;;_sign	offset	42
   633 ;;_d	offset	44
   634 ;;_ne	offset	46
   635 ;;_m	offset	48
   636 ;;_pp	offset	50
   637 ;;_t	offset	52
   638 ;;_mode	offset	54
   639 ;;_nmode	offset	55
   640 ;;_fp	offset=-2 (param)
   641 ;;_f	offset=-6 (param)
   642 ;;_c	offset=-7 (param)
   643 ;;_tolower$6324	offset	0
   644 ;;_c	offset=-2 (param)
   645 ;;_c	offset=-2 (param)
   646 ;;_d	offset	0
   647 ;;_s	offset	2
   648 ;;_dest	offset=-2 (param)
   649 ;;_src	offset=-4 (param)
   650 ;;_u	offset	0
   651 ;;_m	offset	4
   652 ;;_e	offset	8
   653 ;;_x	offset=-4 (param)
   654 ;;_u	offset	0
   655 ;;_e	offset	4
   656 ;;_x	offset=-4 (param)
   657 ;;_exp1	offset	0
   658 ;;_sign1	offset	1
   659 ;;_f1	offset=-4 (param)
   660 ;;_f1	offset=-4 (param)
   661 ;;_ff1	offset=-4 (param)
   662 ;;_ff2	offset=-8 (param)
   663 ;;_sign	offset	0
   664 ;;_counter	offset	1
   665 ;;_dividend	offset=-2 (param)
   666 ;;_divisor	offset=-4 (param)
   667 ;;_quotient	offset	0
   668 ;;_sign	offset	2
   669 ;;_counter	offset	3
   670 ;;_dividend	offset=-2 (param)
   671 ;;_divisor	offset=-4 (param)
   672 ;;_dtoa$5471	offset	0
   673 ;;_n	offset	2
   674 ;;_i	offset	10
   675 ;;_s	offset	12
   676 ;;_w	offset	14
   677 ;;_p	offset	16
   678 ;;_fp	offset=-2 (param)
   679 ;;_d	offset=-10 (param)
   680 ;;_a	offset=-2 (param)
   681 ;;_sign	offset	0
   682 ;;_counter	offset	1
   683 ;;_dividend	offset=-8 (param)
   684 ;;_divisor	offset=-16 (param)
   685 ;;_quotient	offset	0
   686 ;;_sign	offset	8
   687 ;;_counter	offset	9
   688 ;;_dividend	offset=-8 (param)
   689 ;;_divisor	offset=-16 (param)
   690 ;;_w	offset	0
   691 ;;_fp	offset=-2 (param)
   692 ;;_c	offset=-3 (param)
   693 ;;_w	offset	0
   694 ;;_i	offset	2
   695 ;;_fp	offset=-2 (param)
   696 ;;_buf	offset=-4 (param)
   697 ;;_p	offset=-6 (param)
   698 ;;_a	offset	0
   699 ;;_s	offset=-2 (param)
   700 ;;_i	offset	0
   701 ;;_c	offset	2
   702 ;;_s	offset=-2 (param)
   703 ;;_fp	offset=-4 (param)
   704 ;;_c	offset=-2 (param)
   705 ;;_fp	offset=-4 (param)
   706 ;;_c	offset=-1 (param)
   707 ;;__this	offset=-2 (param)
   708 ;;_c	offset=-3 (param)
   709 ;;_atoi$6055	offset	0
   710 ;;_atoi$6053	offset	2
   711 ;;_atoi$6054	offset	4
   712 ;;_n	offset	5
   713 ;;_neg	offset	7
   714 ;;_s	offset=-2 (param)
   715 ;;_isspace$6104	offset	0
   716 ;;_c	offset=-2 (param)
   717 ;;_c	offset=-2 (param)
   718 ;;_dsize	offset=-2 (param)
   719 ;;_u	offset	0
   720 ;;_x	offset=-4 (param)
   721 ;;_f1p	offset=-2 (param)
   722 ;;_f2	offset=-6 (param)
   723 ;;_timer	offset=-1 (param)
   724 ;;_count	offset=-3 (param)
   725 ;;_channel	offset=-1 (param)
   726 ;;_i	offset	0
   727                           
   728                           	psect	idataBIGRAM
   729  016862                     __pidataBIGRAM:
   730                           	opt callstack 0
   731                           
   732                           ;initializer for _port_data
   733  016862  FF                 	db	255
   734  016863  00                 	db	0
   735  016864  FF                 	db	255
   736  016865  00                 	db	0
   737  016866  FF                 	db	255
   738  016867  00                 	db	0
   739  016868  FF                 	db	255
   740  016869  00                 	db	0
   741  01686A  FF                 	db	255
   742  01686B  00                 	db	0
   743  01686C  FF                 	db	255
   744  01686D  00                 	db	0
   745  01686E  FF                 	db	255
   746  01686F  00                 	db	0
   747  016870  FF                 	db	255
   748  016871  00                 	db	0
   749  016872  00                 	db	0
   750  016873  00                 	db	0
   751  016874  00                 	db	0
   752  016875  00                 	db	0
   753  016876  00                 	db	0
   754  016877  00                 	db	0
   755  016878  00                 	db	0
   756  016879  00                 	db	0
   757  01687A  00                 	db	0
   758  01687B  00                 	db	0
   759  01687C  00                 	db	0
   760  01687D  00                 	db	0
   761  01687E  00                 	db	0
   762  01687F  00                 	db	0
   763  016880  00                 	db	0
   764  016881  00                 	db	0
   765  016882  00                 	db	0
   766  016883  00                 	db	0
   767  016884  00                 	db	0
   768  016885  00                 	db	0
   769  016886  00                 	db	0
   770  016887  00                 	db	0
   771  016888  00                 	db	0
   772  016889  00                 	db	0
   773  01688A  00                 	db	0
   774  01688B  00                 	db	0
   775  01688C  00                 	db	0
   776  01688D  00                 	db	0
   777  01688E  00                 	db	0
   778  01688F  00                 	db	0
   779  016890  00                 	db	0
   780  016891  00                 	db	0
   781  016892  00                 	db	0
   782  016893  00                 	db	0
   783  016894  00                 	db	0
   784  016895  00                 	db	0
   785  016896  00                 	db	0
   786  016897  00                 	db	0
   787  016898  00                 	db	0
   788  016899  00                 	db	0
   789  01689A  00                 	db	0
   790  01689B  00                 	db	0
   791  01689C  00                 	db	0
   792  01689D  00                 	db	0
   793  01689E  00                 	db	0
   794  01689F  00                 	db	0
   795  0168A0  00                 	db	0
   796  0168A1  00                 	db	0
   797  0168A2  00                 	db	0
   798  0168A3  00                 	db	0
   799  0168A4  00                 	db	0
   800  0168A5  00                 	db	0
   801  0168A6  00                 	db	0
   802  0168A7  00                 	db	0
   803  0168A8  00                 	db	0
   804  0168A9  00                 	db	0
   805  0168AA  00                 	db	0
   806  0168AB  00                 	db	0
   807  0168AC  00                 	db	0
   808  0168AD  00                 	db	0
   809  0168AE  00                 	db	0
   810  0168AF  00                 	db	0
   811  0168B0  00                 	db	0
   812  0168B1  00                 	db	0
   813  0168B2  00                 	db	0
   814  0168B3  00                 	db	0
   815  0168B4  00                 	db	0
   816  0168B5  00                 	db	0
   817  0168B6  00                 	db	0
   818  0168B7  00                 	db	0
   819  0168B8  00                 	db	0
   820  0168B9  00                 	db	0
   821  0168BA  00                 	db	0
   822  0168BB  00                 	db	0
   823  0168BC  00                 	db	0
   824  0168BD  00                 	db	0
   825  0168BE  00                 	db	0
   826  0168BF  00                 	db	0
   827  0168C0  00                 	db	0
   828  0168C1  00                 	db	0
   829  0168C2  00                 	db	0
   830  0168C3  00                 	db	0
   831  0168C4  00                 	db	0
   832  0168C5  00                 	db	0
   833  0168C6  00                 	db	0
   834  0168C7  00                 	db	0
   835  0168C8  00                 	db	0
   836  0168C9  00                 	db	0
   837  0168CA  00                 	db	0
   838  0168CB  00                 	db	0
   839  0168CC  00                 	db	0
   840  0168CD  00                 	db	0
   841  0168CE  00                 	db	0
   842  0168CF  00                 	db	0
   843  0168D0  00                 	db	0
   844  0168D1  00                 	db	0
   845  0168D2  00                 	db	0
   846  0168D3  00                 	db	0
   847  0168D4  00                 	db	0
   848  0168D5  00                 	db	0
   849  0168D6  00                 	db	0
   850  0168D7  00                 	db	0
   851  0168D8  00                 	db	0
   852  0168D9  00                 	db	0
   853  0168DA  00                 	db	0
   854  0168DB  00                 	db	0
   855  0168DC  00                 	db	0
   856  0168DD  00                 	db	0
   857  0168DE  00                 	db	0
   858  0168DF  00                 	db	0
   859  0168E0  00                 	db	0
   860  0168E1  00                 	db	0
   861  0168E2  00                 	db	0
   862  0168E3  00                 	db	0
   863  0168E4  00                 	db	0
   864  0168E5  00                 	db	0
   865  0168E6  00                 	db	0
   866  0168E7  00                 	db	0
   867  0168E8  00                 	db	0
   868  0168E9  00                 	db	0
   869  0168EA  00                 	db	0
   870  0168EB  00                 	db	0
   871  0168EC  00                 	db	0
   872  0168ED  00                 	db	0
   873  0168EE  00                 	db	0
   874  0168EF  00                 	db	0
   875  0168F0  00                 	db	0
   876  0168F1  00                 	db	0
   877  0168F2  00                 	db	0
   878  0168F3  00                 	db	0
   879  0168F4  00                 	db	0
   880  0168F5  00                 	db	0
   881  0168F6  00                 	db	0
   882  0168F7  00                 	db	0
   883  0168F8  00                 	db	0
   884  0168F9  00                 	db	0
   885  0168FA  00                 	db	0
   886  0168FB  00                 	db	0
   887  0168FC  00                 	db	0
   888  0168FD  00                 	db	0
   889  0168FE  00                 	db	0
   890  0168FF  00                 	db	0
   891  016900  00                 	db	0
   892  016901  00                 	db	0
   893  016902  00                 	db	0
   894  016903  00                 	db	0
   895  016904  00                 	db	0
   896  016905  00                 	db	0
   897  016906  00                 	db	0
   898  016907  00                 	db	0
   899  016908  00                 	db	0
   900  016909  00                 	db	0
   901  01690A  00                 	db	0
   902  01690B  00                 	db	0
   903  01690C  00                 	db	0
   904  01690D  00                 	db	0
   905  01690E  00                 	db	0
   906  01690F  00                 	db	0
   907  016910  00                 	db	0
   908  016911  00                 	db	0
   909  016912  00                 	db	0
   910  016913  00                 	db	0
   911  016914  00                 	db	0
   912  016915  00                 	db	0
   913  016916  00                 	db	0
   914  016917  00                 	db	0
   915  016918  00                 	db	0
   916  016919  00                 	db	0
   917  01691A  00                 	db	0
   918  01691B  00                 	db	0
   919  01691C  00                 	db	0
   920  01691D  00                 	db	0
   921  01691E  00                 	db	0
   922  01691F  00                 	db	0
   923  016920  00                 	db	0
   924  016921  00                 	db	0
   925  016922  00                 	db	0
   926  016923  00                 	db	0
   927  016924  00                 	db	0
   928  016925  00                 	db	0
   929  016926  00                 	db	0
   930  016927  00                 	db	0
   931  016928  00                 	db	0
   932  016929  00                 	db	0
   933  01692A  00                 	db	0
   934  01692B  00                 	db	0
   935  01692C  00                 	db	0
   936  01692D  00                 	db	0
   937  01692E  00                 	db	0
   938  01692F  00                 	db	0
   939  016930  00                 	db	0
   940  016931  00                 	db	0
   941  016932  00                 	db	0
   942  016933  00                 	db	0
   943  016934  00                 	db	0
   944  016935  00                 	db	0
   945  016936  00                 	db	0
   946  016937  00                 	db	0
   947  016938  00                 	db	0
   948  016939  00                 	db	0
   949  01693A  00                 	db	0
   950  01693B  00                 	db	0
   951  01693C  00                 	db	0
   952  01693D  00                 	db	0
   953  01693E  00                 	db	0
   954  01693F  00                 	db	0
   955  016940  00                 	db	0
   956  016941  00                 	db	0
   957  016942  00                 	db	0
   958  016943  00                 	db	0
   959  016944  00                 	db	0
   960  016945  00                 	db	0
   961  016946  00                 	db	0
   962  016947  00                 	db	0
   963  016948  00                 	db	0
   964  016949  00                 	db	0
   965  01694A  00                 	db	0
   966  01694B  00                 	db	0
   967  01694C  00                 	db	0
   968  01694D  00                 	db	0
   969  01694E  00                 	db	0
   970  01694F  00                 	db	0
   971  016950  00                 	db	0
   972  016951  00                 	db	0
   973  016952  00                 	db	0
   974  016953  00                 	db	0
   975  016954  00                 	db	0
   976  016955  00                 	db	0
   977  016956  00                 	db	0
   978  016957  00                 	db	0
   979  016958  00                 	db	0
   980  016959  00                 	db	0
   981  01695A  00                 	db	0
   982  01695B  00                 	db	0
   983  01695C  00                 	db	0
   984  01695D  00                 	db	0
   985  01695E  00                 	db	0
   986  01695F  00                 	db	0
   987  016960  00                 	db	0
   988  016961  00                 	db	0
   989  016962  00                 	db	0
   990  016963  00                 	db	0
   991  016964  00                 	db	0
   992  016965  00                 	db	0
   993  016966  00                 	db	0
   994  016967  00                 	db	0
   995  016968  00                 	db	0
   996  016969  00                 	db	0
   997  01696A  00                 	db	0
   998  01696B  00                 	db	0
   999  01696C  00                 	db	0
  1000  01696D  00                 	db	0
  1001  01696E  00                 	db	0
  1002  01696F  00                 	db	0
  1003  016970  00                 	db	0
  1004  016971  00                 	db	0
  1005  016972  00                 	db	0
  1006  016973  00                 	db	0
  1007  016974  00                 	db	0
  1008  016975  00                 	db	0
  1009  016976  00                 	db	0
  1010  016977  00                 	db	0
  1011  016978  00                 	db	0
  1012  016979  00                 	db	0
  1013  01697A  00                 	db	0
  1014  01697B  00                 	db	0
  1015  01697C  00                 	db	0
  1016  01697D  00                 	db	0
  1017  01697E  00                 	db	0
  1018  01697F  00                 	db	0
  1019  016980  00                 	db	0
  1020  016981  00                 	db	0
  1021  016982  00                 	db	0
  1022  016983  00                 	db	0
  1023  016984  00                 	db	0
  1024  016985  00                 	db	0
  1025  016986  00                 	db	0
  1026  016987  00                 	db	0
  1027  016988  00                 	db	0
  1028  016989  00                 	db	0
  1029  01698A  00                 	db	0
  1030  01698B  00                 	db	0
  1031  01698C  00                 	db	0
  1032  01698D  00                 	db	0
  1033  01698E  00                 	db	0
  1034  01698F  00                 	db	0
  1035  016990  00                 	db	0
  1036  016991  00                 	db	0
  1037  016992  00                 	db	0
  1038  016993  00                 	db	0
  1039  016994  00                 	db	0
  1040  016995  00                 	db	0
  1041  016996  00                 	db	0
  1042  016997  00                 	db	0
  1043  016998  00                 	db	0
  1044  016999  00                 	db	0
  1045  01699A  00                 	db	0
  1046  01699B  00                 	db	0
  1047  01699C  00                 	db	0
  1048  01699D  00                 	db	0
  1049  01699E  00                 	db	0
  1050  01699F  00                 	db	0
  1051  0169A0  00                 	db	0
  1052  0169A1  00                 	db	0
  1053  0169A2  00                 	db	0
  1054  0169A3  00                 	db	0
  1055  0169A4  00                 	db	0
  1056  0169A5  00                 	db	0
  1057  0169A6  00                 	db	0
  1058  0169A7  00                 	db	0
  1059  0169A8  00                 	db	0
  1060  0169A9  00                 	db	0
  1061  0169AA  00                 	db	0
  1062  0169AB  00                 	db	0
  1063  0169AC  00                 	db	0
  1064  0169AD  00                 	db	0
  1065  0169AE  00                 	db	0
  1066  0169AF  00                 	db	0
  1067  0169B0  00                 	db	0
  1068  0169B1  00                 	db	0
  1069  0169B2  00                 	db	0
  1070  0169B3  00                 	db	0
  1071  0169B4  00                 	db	0
  1072  0169B5  00                 	db	0
  1073  0169B6  00                 	db	0
  1074  0169B7  00                 	db	0
  1075  0169B8  00                 	db	0
  1076  0169B9  00                 	db	0
  1077  0169BA  00                 	db	0
  1078  0169BB  00                 	db	0
  1079  0169BC  00                 	db	0
  1080  0169BD  00                 	db	0
  1081  0169BE  00                 	db	0
  1082  0169BF  00                 	db	0
  1083  0169C0  00                 	db	0
  1084  0169C1  00                 	db	0
  1085  0169C2  00                 	db	0
  1086  0169C3  00                 	db	0
  1087  0169C4  00                 	db	0
  1088  0169C5  00                 	db	0
  1089  0169C6  00                 	db	0
  1090  0169C7  00                 	db	0
  1091  0169C8  00                 	db	0
  1092  0169C9  00                 	db	0
  1093  0169CA  00                 	db	0
  1094  0169CB  00                 	db	0
  1095  0169CC  00                 	db	0
  1096  0169CD  00                 	db	0
  1097  0169CE  00                 	db	0
  1098  0169CF  00                 	db	0
  1099  0169D0  00                 	db	0
  1100  0169D1  00                 	db	0
  1101  0169D2  00                 	db	0
  1102  0169D3  00                 	db	0
  1103  0169D4  00                 	db	0
  1104  0169D5  00                 	db	0
  1105  0169D6  00                 	db	0
  1106  0169D7  00                 	db	0
  1107  0169D8  00                 	db	0
  1108  0169D9  00                 	db	0
  1109  0169DA  00                 	db	0
  1110  0169DB  00                 	db	0
  1111  0169DC  00                 	db	0
  1112  0169DD  00                 	db	0
  1113  0169DE  00                 	db	0
  1114  0169DF  00                 	db	0
  1115  0169E0  00                 	db	0
  1116  0169E1  00                 	db	0
  1117  0169E2  00                 	db	0
  1118  0169E3  00                 	db	0
  1119  0169E4  00                 	db	0
  1120  0169E5  00                 	db	0
  1121  0169E6  00                 	db	0
  1122  0169E7  00                 	db	0
  1123  0169E8  00                 	db	0
  1124  0169E9  00                 	db	0
  1125  0169EA  00                 	db	0
  1126  0169EB  00                 	db	0
  1127  0169EC  00                 	db	0
  1128  0169ED  00                 	db	0
  1129  0169EE  00                 	db	0
  1130  0169EF  00                 	db	0
  1131  0169F0  00                 	db	0
  1132  0169F1  00                 	db	0
  1133  0169F2  00                 	db	0
  1134  0169F3  00                 	db	0
  1135  0169F4  00                 	db	0
  1136  0169F5  00                 	db	0
  1137  0169F6  00                 	db	0
  1138  0169F7  00                 	db	0
  1139  0169F8  00                 	db	0
  1140  0169F9  00                 	db	0
  1141  0169FA  00                 	db	0
  1142  0169FB  00                 	db	0
  1143  0169FC  00                 	db	0
  1144  0169FD  00                 	db	0
  1145  0169FE  00                 	db	0
  1146  0169FF  00                 	db	0
  1147  016A00  00                 	db	0
  1148  016A01  00                 	db	0
  1149  016A02  00                 	db	0
  1150  016A03  00                 	db	0
  1151  016A04  00                 	db	0
  1152  016A05  00                 	db	0
  1153  016A06  00                 	db	0
  1154  016A07  00                 	db	0
  1155  016A08  00                 	db	0
  1156  016A09  00                 	db	0
  1157  016A0A  00                 	db	0
  1158  016A0B  00                 	db	0
  1159  016A0C  00                 	db	0
  1160  016A0D  00                 	db	0
  1161  016A0E  00                 	db	0
  1162  016A0F  00                 	db	0
  1163  016A10  00                 	db	0
  1164  016A11  00                 	db	0
  1165  016A12  00                 	db	0
  1166  016A13  00                 	db	0
  1167  016A14  00                 	db	0
  1168  016A15  00                 	db	0
  1169  016A16  00                 	db	0
  1170  016A17  00                 	db	0
  1171  016A18  00                 	db	0
  1172  016A19  00                 	db	0
  1173  016A1A  00                 	db	0
  1174  016A1B  00                 	db	0
  1175  016A1C  00                 	db	0
  1176  016A1D  00                 	db	0
  1177  016A1E  00                 	db	0
  1178  016A1F  00                 	db	0
  1179  016A20  00                 	db	0
  1180  016A21  00                 	db	0
  1181  016A22  00                 	db	0
  1182  016A23  00                 	db	0
  1183  016A24  00                 	db	0
  1184  016A25  00                 	db	0
  1185  016A26  00                 	db	0
  1186  016A27  00                 	db	0
  1187  016A28  00                 	db	0
  1188  016A29  00                 	db	0
  1189  016A2A  00                 	db	0
  1190  016A2B  00                 	db	0
  1191  016A2C  00                 	db	0
  1192  016A2D  00                 	db	0
  1193  016A2E  00                 	db	0
  1194  016A2F  00                 	db	0
  1195  016A30  00                 	db	0
  1196  016A31  00                 	db	0
  1197  016A32  00                 	db	0
  1198  016A33  00                 	db	0
  1199  016A34  00                 	db	0
  1200  016A35  00                 	db	0
  1201  016A36  00                 	db	0
  1202  016A37  00                 	db	0
  1203  016A38  00                 	db	0
  1204  016A39  00                 	db	0
  1205  016A3A  00                 	db	0
  1206  016A3B  00                 	db	0
  1207  016A3C  00                 	db	0
  1208  016A3D  00                 	db	0
  1209  016A3E  00                 	db	0
  1210  016A3F  00                 	db	0
  1211  016A40  00                 	db	0
  1212  016A41  00                 	db	0
  1213  016A42  00                 	db	0
  1214  016A43  00                 	db	0
  1215  016A44  00                 	db	0
  1216  016A45  00                 	db	0
  1217  016A46  00                 	db	0
  1218  016A47  00                 	db	0
  1219  016A48  00                 	db	0
  1220  016A49  00                 	db	0
  1221  016A4A  00                 	db	0
  1222  016A4B  00                 	db	0
  1223  016A4C  00                 	db	0
  1224  016A4D  00                 	db	0
  1225  016A4E  00                 	db	0
  1226  016A4F  00                 	db	0
  1227  016A50  00                 	db	0
  1228  016A51  00                 	db	0
  1229  016A52  00                 	db	0
  1230  016A53  00                 	db	0
  1231  016A54  00                 	db	0
  1232  016A55  00                 	db	0
  1233  016A56  00                 	db	0
  1234  016A57  00                 	db	0
  1235  016A58  00                 	db	0
  1236  016A59  00                 	db	0
  1237  016A5A  00                 	db	0
  1238  016A5B  00                 	db	0
  1239  016A5C  00                 	db	0
  1240  016A5D  00                 	db	0
  1241  016A5E  00                 	db	0
  1242  016A5F  00                 	db	0
  1243  016A60  00                 	db	0
  1244  016A61  00                 	db	0
  1245                           
  1246                           ;initializer for _C
  1247  016A62  0000               	dw	0
  1248  016A64  0000               	dw	0
  1249  016A66  0000               	dw	0
  1250  016A68  0000               	dw	0
  1251  016A6A  0000               	dw	0
  1252  016A6C  0000               	dw	0
  1253  016A6E  0000               	dw	0
  1254  016A70  0000               	dw	0
  1255  016A72  0000               	dw	0
  1256  016A74  0000               	dw	0
  1257  016A76  0000               	dw	0
  1258  016A78  0000               	dw	0
  1259  016A7A  0000               	dw	0
  1260  016A7C  0000               	dw	0
  1261  016A7E  0000               	dw	0
  1262  016A80  0000               	dw	0
  1263  016A82  0000               	dw	0
  1264  016A84  0000               	dw	0
  1265  016A86  0000               	dw	0
  1266  016A88  0000               	dw	0
  1267  016A8A  0000               	dw	0
  1268  016A8C  0000               	dw	0
  1269  016A8E  0000               	dw	0
  1270  016A90  0000               	dw	0
  1271  016A92  0000               	dw	0
  1272  016A94  0000               	dw	0
  1273  016A96  0000               	dw	0
  1274  016A98  0000               	dw	0
  1275  016A9A  0000               	dw	0
  1276  016A9C  0000               	dw	0
  1277  016A9E  0000               	dw	0
  1278  016AA0  0000               	dw	0
  1279  016AA2  0000               	dw	0
  1280  016AA4  0000               	dw	0
  1281  016AA6  0000               	dw	0
  1282  016AA8  0000               	dw	0
  1283  016AAA  0000               	dw	0
  1284  016AAC  0000               	dw	0
  1285  016AAE  0000               	dw	0
  1286  016AB0  0000               	dw	0
  1287  016AB2  0000               	dw	0
  1288  016AB4  0000               	dw	0
  1289  016AB6  0000               	dw	0
  1290  016AB8  0000               	dw	0
  1291  016ABA  0000               	dw	0
  1292  016ABC  0000               	dw	0
  1293  016ABE  0000               	dw	0
  1294  016AC0  0000               	dw	0
  1295  016AC2  0000               	dw	0
  1296  016AC4  0000               	dw	0
  1297  016AC6  0000               	dw	0
  1298  016AC8  0000               	dw	0
  1299  016ACA  0000               	dw	0
  1300  016ACC  0000               	dw	0
  1301  016ACE  0000               	dw	0
  1302  016AD0  0000               	dw	0
  1303  016AD2  0000               	dw	0
  1304  016AD4  0000               	dw	0
  1305  016AD6  0000               	dw	0
  1306  016AD8  0000               	dw	0
  1307  016ADA  0000               	dw	0
  1308  016ADC  0000               	dw	0
  1309  016ADE  0000               	dw	0
  1310  016AE0  0000               	dw	0
  1311  016AE2  0000               	dw	0
  1312  016AE4  0000               	dw	0
  1313  016AE6  0000               	dw	0
  1314  016AE8  0000               	dw	0
  1315  016AEA  0000               	dw	0
  1316  016AEC  0000               	dw	0
  1317  016AEE  0000               	dw	0
  1318  016AF0  42FA               	dw	17146
  1319  016AF2  0000               	dw	0
  1320  016AF4  0000               	dw	0
  1321  016AF6  0000               	dw	0
  1322  016AF8  0000               	dw	0
  1323  016AFA  0000               	dw	0
  1324  016AFC  0000               	dw	0
  1325  016AFE  0000               	dw	0
  1326  016B00  0000               	dw	0
  1327  016B02  0000               	dw	0
  1328  016B04  0000               	dw	0
  1329  016B06  0000               	dw	0
  1330  016B08  0000               	dw	0
  1331  016B0A  0000               	dw	0
  1332  016B0C  0000               	dw	0
  1333  016B0E  0000               	dw	0
  1334  016B10  0000               	dw	0
  1335  016B12  0000               	dw	0
  1336  016B14  0000               	dw	0
  1337  016B16  00                 	db	0
  1338  016B17  01                 	db	1
  1339  016B18  00                 	db	0
  1340  016B19  00                 	db	0
  1341  016B1A  00                 	db	0
  1342  016B1B  00                 	db	0
  1343  016B1C  00                 	db	0
  1344  016B1D  00                 	db	0
  1345  016B1E  00                 	db	0
  1346  016B1F  00                 	db	0
  1347  016B20  00                 	db	0
  1348  016B21  00                 	db	0
  1349  016B22  00                 	db	0
  1350  016B23  00                 	db	0
  1351  016B24  00                 	db	0
  1352  016B25  00                 	db	0
  1353  016B26  00                 	db	0
  1354  016B27  00                 	db	0
  1355  016B28  00                 	db	0
  1356  016B29  00                 	db	0
  1357  016B2A  00                 	db	0
  1358  016B2B  00                 	db	0
  1359  016B2C  00                 	db	0
  1360  016B2D  00                 	db	0
  1361  016B2E  00                 	db	0
  1362  016B2F  00                 	db	0
  1363  016B30  00                 	db	0
  1364  016B31  00                 	db	0
  1365  016B32  00                 	db	0
  1366  016B33  00                 	db	0
  1367  016B34  00                 	db	0
  1368  016B35  00                 	db	0
  1369  016B36  00                 	db	0
  1370  016B37  00                 	db	0
  1371  016B38  00                 	db	0
  1372  016B39  00                 	db	0
  1373  016B3A  00                 	db	0
  1374  016B3B  00                 	db	0
  1375  016B3C  00                 	db	0
  1376  016B3D  00                 	db	0
  1377  016B3E  00                 	db	0
  1378  016B3F  00                 	db	0
  1379  016B40  00                 	db	0
  1380  016B41  00                 	db	0
  1381  016B42  00                 	db	0
  1382  016B43  00                 	db	0
  1383  016B44  00                 	db	0
  1384  016B45  00                 	db	0
  1385  016B46  00                 	db	0
  1386  016B47  00                 	db	0
  1387  016B48  00                 	db	0
  1388  016B49  00                 	db	0
  1389  016B4A  00                 	db	0
  1390  016B4B  00                 	db	0
  1391  016B4C  00                 	db	0
  1392  016B4D  00                 	db	0
  1393  016B4E  00                 	db	0
  1394  016B4F  00                 	db	0
  1395  016B50  00                 	db	0
  1396  016B51  00                 	db	0
  1397  016B52  00                 	db	0
  1398  016B53  00                 	db	0
  1399  016B54  00                 	db	0
  1400  016B55  00                 	db	0
  1401  016B56  00                 	db	0
  1402  016B57  00                 	db	0
  1403  016B58  00                 	db	0
  1404  016B59  00                 	db	0
  1405  016B5A  00                 	db	0
  1406  016B5B  00                 	db	0
  1407  016B5C  00                 	db	0
  1408  016B5D  00                 	db	0
  1409  016B5E  00                 	db	0
  1410  016B5F  00                 	db	0
  1411  016B60  00                 	db	0
  1412  016B61  00                 	db	0
  1413  016B62  00                 	db	0
  1414  016B63  00                 	db	0
  1415  016B64  00                 	db	0
  1416  016B65  00                 	db	0
  1417  016B66  00                 	db	0
  1418  016B67  00                 	db	0
  1419  016B68  00                 	db	0
  1420  016B69  00                 	db	0
  1421  016B6A  00                 	db	0
  1422  016B6B  00                 	db	0
  1423  016B6C  0000               	dw	0
  1424  016B6E  0000               	dw	0
  1425  016B70  0000               	dw	0
  1426  016B72  0000               	dw	0
  1427  016B74  0000               	dw	0
  1428  016B76  0000               	dw	0
  1429  016B78  0000               	dw	0
  1430  016B7A  0000               	dw	0
  1431  016B7C  0000               	dw	0
  1432  016B7E  0000               	dw	0
  1433  016B80  01                 	db	1
  1434  016B81  00                 	db	0
  1435  016B82  00                 	db	0
  1436  016B83  00                 	db	0
  1437  016B84  00                 	db	0
  1438  016B85  00                 	db	0
  1439  016B86  00                 	db	0
  1440  016B87  00                 	db	0
  1441  016B88  00                 	db	0
  1442                           
  1443                           	psect	idataBANK0
  1444  01BD1E                     __pidataBANK0:
  1445                           	opt callstack 0
  1446                           
  1447                           ;initializer for stoa@F1166
  1448  01BD1E  28                 	db	40
  1449  01BD1F  6E                 	db	110
  1450  01BD20  75                 	db	117
  1451  01BD21  6C                 	db	108
  1452  01BD22  6C                 	db	108
  1453  01BD23  29                 	db	41
  1454  01BD24  00                 	db	0
  1455                           
  1456                           ;initializer for _H
  1457  01BD25  00                 	db	0
  1458  01BD26  00                 	db	0
  1459  01BD27  01                 	db	1
  1460  01BD28  00                 	db	0
  1461  01BD29  01                 	db	1
  1462  01BD2A  00                 	db	0
  1463  01BD2B  00                 	db	0
  1464                           
  1465                           	psect	idataBANK1
  1466  019C4E                     __pidataBANK1:
  1467                           	opt callstack 0
  1468                           
  1469                           ;initializer for _R
  1470  019C4E  0000               	dw	0
  1471  019C50  0000               	dw	0
  1472  019C52  0000               	dw	0
  1473  019C54  0000               	dw	0
  1474  019C56  0000               	dw	0
  1475  019C58  0000               	dw	0
  1476  019C5A  0000               	dw	0
  1477  019C5C  0000               	dw	0
  1478  019C5E  0000               	dw	0
  1479  019C60  0000               	dw	0
  1480  019C62  0000               	dw	0
  1481  019C64  0000               	dw	0
  1482  019C66  0000               	dw	0
  1483  019C68  0000               	dw	0
  1484  019C6A  0000               	dw	0
  1485  019C6C  0000               	dw	0
  1486  019C6E  0F67               	dw	3943
  1487  019C70  0F8F               	dw	3983
  1488  019C72  0000               	dw	0
  1489  019C74  0000               	dw	0
  1490  019C76  0000               	dw	0
  1491  019C78  0000               	dw	0
  1492  019C7A  00                 	db	0
  1493  019C7B  0000               	dw	0
  1494  019C7D  00                 	db	0
  1495                           
  1496                           ;initializer for _V
  1497  019C7E  00                 	db	0
  1498  019C7F  00                 	db	0
  1499  019C80  00                 	db	0
  1500  019C81  00                 	db	0
  1501  019C82  00                 	db	0
  1502  019C83  00                 	db	0
  1503  019C84  00                 	db	0
  1504  019C85  00                 	db	0
  1505  019C86  00                 	db	0
  1506  019C87  00                 	db	0
  1507  019C88  00                 	db	0
  1508  019C89  00                 	db	0
  1509  019C8A  00                 	db	0
  1510  019C8B  00                 	db	0
  1511  019C8C  00                 	db	0
  1512  019C8D  00                 	db	0
  1513  019C8E  00                 	db	0
  1514  019C8F  00                 	db	0
  1515  019C90  00                 	db	0
  1516  019C91  00                 	db	0
  1517  019C92  00                 	db	0
  1518  019C93  00                 	db	0
  1519  019C94  00                 	db	0
  1520  019C95  00                 	db	0
  1521  019C96  00                 	db	0
  1522  019C97  00                 	db	0
  1523  019C98  00                 	db	0
  1524  019C99  00                 	db	0
  1525  019C9A  00                 	db	0
  1526  019C9B  00                 	db	0
  1527  019C9C  00                 	db	0
  1528  019C9D  00                 	db	0
  1529  019C9E  00                 	db	0
  1530  019C9F  00                 	db	0
  1531  019CA0  00                 	db	0
  1532  019CA1  00                 	db	0
  1533  019CA2  00                 	db	0
  1534  019CA3  00                 	db	0
  1535  019CA4  00                 	db	0
  1536  019CA5  00                 	db	0
  1537  019CA6  00                 	db	0
  1538  019CA7  00                 	db	0
  1539  019CA8  00                 	db	0
  1540  019CA9  00                 	db	0
  1541  019CAA  00                 	db	0
  1542  019CAB  00                 	db	0
  1543  019CAC  00                 	db	0
  1544  019CAD  00                 	db	0
  1545  019CAE  00                 	db	0
  1546  019CAF  00                 	db	0
  1547  019CB0  00                 	db	0
  1548  019CB1  00                 	db	0
  1549  019CB2  00                 	db	0
  1550  019CB3  00                 	db	0
  1551  019CB4  00                 	db	0
  1552  019CB5  00                 	db	0
  1553  019CB6  00                 	db	0
  1554  019CB7  00                 	db	0
  1555  019CB8  00                 	db	0
  1556  019CB9  00                 	db	0
  1557  019CBA  00                 	db	0
  1558  019CBB  00                 	db	0
  1559  019CBC  00                 	db	0
  1560  019CBD  00                 	db	0
  1561  019CBE  00                 	db	0
  1562  019CBF  00                 	db	0
  1563  019CC0  00                 	db	0
  1564  019CC1  00                 	db	0
  1565  019CC2  00                 	db	0
  1566  019CC3  00                 	db	0
  1567  019CC4  00                 	db	0
  1568  019CC5  00                 	db	0
  1569  019CC6  00                 	db	0
  1570  019CC7  00                 	db	0
  1571  019CC8  00                 	db	0
  1572  019CC9  00                 	db	0
  1573  019CCA  00                 	db	0
  1574  019CCB  00                 	db	0
  1575  019CCC  00                 	db	0
  1576  019CCD  00                 	db	0
  1577  019CCE  00                 	db	0
  1578  019CCF  00                 	db	0
  1579  019CD0  00                 	db	0
  1580  019CD1  00                 	db	0
  1581  019CD2  00                 	db	0
  1582  019CD3  00                 	db	0
  1583  019CD4  00                 	db	0
  1584  019CD5  00                 	db	0
  1585  019CD6  00                 	db	0
  1586  019CD7  00                 	db	0
  1587  019CD8  00                 	db	0
  1588  019CD9  00                 	db	0
  1589  019CDA  00                 	db	0
  1590  019CDB  00                 	db	0
  1591  019CDC  00                 	db	0
  1592  019CDD  00                 	db	0
  1593  019CDE  00                 	db	0
  1594  019CDF  00                 	db	0
  1595  019CE0  00                 	db	0
  1596  019CE1  00                 	db	0
  1597  019CE2  00                 	db	0
  1598  019CE3  00                 	db	0
  1599  019CE4  00                 	db	0
  1600  019CE5  00                 	db	0
  1601  019CE6  00                 	db	0
  1602  019CE7  00                 	db	0
  1603  019CE8  00                 	db	0
  1604  019CE9  00                 	db	0
  1605  019CEA  00                 	db	0
  1606  019CEB  00                 	db	0
  1607  019CEC  00                 	db	0
  1608  019CED  00                 	db	0
  1609  019CEE  00                 	db	0
  1610  019CEF  00                 	db	0
  1611  019CF0  00                 	db	0
  1612  019CF1  00                 	db	0
  1613  019CF2  00                 	db	0
  1614  019CF3  00                 	db	0
  1615  019CF4  00                 	db	0
  1616  019CF5  00                 	db	0
  1617  019CF6  00                 	db	0
  1618  019CF7  00                 	db	0
  1619  019CF8  00                 	db	0
  1620  019CF9  00                 	db	0
  1621  019CFA  00                 	db	0
  1622  019CFB  00                 	db	0
  1623  019CFC  00                 	db	0
  1624  019CFD  00                 	db	0
  1625  019CFE  00                 	db	0
  1626  019CFF  0000               	dw	0
  1627  019D01  0000               	dw	0
  1628  019D03  0000               	dw	0
  1629  019D05  0000               	dw	0
  1630  019D07  00                 	db	0
  1631  019D08  00                 	db	0
  1632  019D09  00                 	db	0
  1633  019D0A  00                 	db	0
  1634  019D0B  00                 	db	0
  1635  019D0C  00                 	db	0
  1636  019D0D  0000               	dw	0
  1637  019D0F  0000               	dw	0
  1638  019D11  0000               	dw	0
  1639  019D13  0000               	dw	0
  1640  019D15  0000               	dw	0
  1641  019D17  0000               	dw	0
  1642  019D19  00                 	db	0
  1643  019D1A  00                 	db	0
  1644  019D1B  00                 	db	0
  1645  019D1C  00                 	db	0
  1646  019D1D  00                 	db	0
  1647  019D1E  00                 	db	0
  1648  019D1F  00                 	db	0
  1649  019D20  00                 	db	0
  1650  019D21  00                 	db	0
  1651  019D22  00                 	db	0
  1652  019D23  00                 	db	0
  1653  019D24  0000               	dw	0
  1654  019D26  0000               	dw	0
  1655  019D28  2D                 	db	45
  1656  019D29  00                 	db	0
  1657  019D2A  00                 	db	0
  1658  019D2B  00                 	db	0
  1659  019D2C  00                 	db	0
  1660  019D2D  0000               	dw	0
  1661  019D2F  0000               	dw	0
  1662  019D31  0000               	dw	0
  1663  019D33  0000               	dw	0
  1664  019D35  0000               	dw	0
  1665  019D37  0000               	dw	0
  1666  019D39  0000               	dw	0
  1667  019D3B  0000               	dw	0
  1668                           
  1669                           	psect	mediumconst
  1670  00FA66                     __pmediumconst:
  1671                           	opt callstack 0
  1672  00FA66  00                 	db	0
  1673  00FA67                     _BVSOC_TABLE:
  1674                           	opt callstack 0
  1675  00FA67  59D8               	dw	23000
  1676  00FA69  0000               	dw	0
  1677  00FA6B  0005               	dw	5
  1678  00FA6D  0000               	dw	0
  1679  00FA6F  5B68               	dw	23400
  1680  00FA71  0000               	dw	0
  1681  00FA73  000A               	dw	10
  1682  00FA75  0000               	dw	0
  1683  00FA77  5C30               	dw	23600
  1684  00FA79  0000               	dw	0
  1685  00FA7B  0014               	dw	20
  1686  00FA7D  0000               	dw	0
  1687  00FA7F  5E38               	dw	24120
  1688  00FA81  0000               	dw	0
  1689  00FA83  0019               	dw	25
  1690  00FA85  0000               	dw	0
  1691  00FA87  5E88               	dw	24200
  1692  00FA89  0000               	dw	0
  1693  00FA8B  001E               	dw	30
  1694  00FA8D  0000               	dw	0
  1695  00FA8F  5F78               	dw	24440
  1696  00FA91  0000               	dw	0
  1697  00FA93  0028               	dw	40
  1698  00FA95  0000               	dw	0
  1699  00FA97  5FDC               	dw	24540
  1700  00FA99  0000               	dw	0
  1701  00FA9B  002D               	dw	45
  1702  00FA9D  0000               	dw	0
  1703  00FA9F  6018               	dw	24600
  1704  00FAA1  0000               	dw	0
  1705  00FAA3  0032               	dw	50
  1706  00FAA5  0000               	dw	0
  1707  00FAA7  6046               	dw	24646
  1708  00FAA9  0000               	dw	0
  1709  00FAAB  0035               	dw	53
  1710  00FAAD  0000               	dw	0
  1711  00FAAF  607C               	dw	24700
  1712  00FAB1  0000               	dw	0
  1713  00FAB3  0037               	dw	55
  1714  00FAB5  0000               	dw	0
  1715  00FAB7  60AE               	dw	24750
  1716  00FAB9  0000               	dw	0
  1717  00FABB  0039               	dw	57
  1718  00FABD  0000               	dw	0
  1719  00FABF  60E0               	dw	24800
  1720  00FAC1  0000               	dw	0
  1721  00FAC3  003C               	dw	60
  1722  00FAC5  0000               	dw	0
  1723  00FAC7  6112               	dw	24850
  1724  00FAC9  0000               	dw	0
  1725  00FACB  003F               	dw	63
  1726  00FACD  0000               	dw	0
  1727  00FACF  615D               	dw	24925
  1728  00FAD1  0000               	dw	0
  1729  00FAD3  0043               	dw	67
  1730  00FAD5  0000               	dw	0
  1731  00FAD7  61A8               	dw	25000
  1732  00FAD9  0000               	dw	0
  1733  00FADB  0046               	dw	70
  1734  00FADD  0000               	dw	0
  1735  00FADF  61BC               	dw	25020
  1736  00FAE1  0000               	dw	0
  1737  00FAE3  0048               	dw	72
  1738  00FAE5  0000               	dw	0
  1739  00FAE7  61D0               	dw	25040
  1740  00FAE9  0000               	dw	0
  1741  00FAEB  004B               	dw	75
  1742  00FAED  0000               	dw	0
  1743  00FAEF  61DA               	dw	25050
  1744  00FAF1  0000               	dw	0
  1745  00FAF3  0050               	dw	80
  1746  00FAF5  0000               	dw	0
  1747  00FAF7  61E4               	dw	25060
  1748  00FAF9  0000               	dw	0
  1749  00FAFB  0055               	dw	85
  1750  00FAFD  0000               	dw	0
  1751  00FAFF  61F8               	dw	25080
  1752  00FB01  0000               	dw	0
  1753  00FB03  005A               	dw	90
  1754  00FB05  0000               	dw	0
  1755  00FB07  6208               	dw	25096
  1756  00FB09  0000               	dw	0
  1757  00FB0B  005C               	dw	92
  1758  00FB0D  0000               	dw	0
  1759  00FB0F  6222               	dw	25122
  1760  00FB11  0000               	dw	0
  1761  00FB13  005D               	dw	93
  1762  00FB15  0000               	dw	0
  1763  00FB17  6234               	dw	25140
  1764  00FB19  0000               	dw	0
  1765  00FB1B  005F               	dw	95
  1766  00FB1D  0000               	dw	0
  1767  00FB1F  6248               	dw	25160
  1768  00FB21  0000               	dw	0
  1769  00FB23  0061               	dw	97
  1770  00FB25  0000               	dw	0
  1771  00FB27  625C               	dw	25180
  1772  00FB29  0000               	dw	0
  1773  00FB2B  0064               	dw	100
  1774  00FB2D  0000               	dw	0
  1775  00FB2F  6784               	dw	26500
  1776  00FB31  0000               	dw	0
  1777  00FB33  0062               	dw	98
  1778  00FB35  0000               	dw	0
  1779  00FB37                     __end_of_BVSOC_TABLE:
  1780                           	opt callstack 0
  1781  00FB37                     _T:
  1782                           	opt callstack 0
  1783  00FB37  63                 	db	99
  1784  00FB38  6F                 	db	111
  1785  00FB39  6D                 	db	109
  1786  00FB3A  6D                 	db	109
  1787  00FB3B  61                 	db	97
  1788  00FB3C  6E                 	db	110
  1789  00FB3D  64                 	db	100
  1790  00FB3E  73                 	db	115
  1791  00FB3F  20                 	db	32
  1792  00FB40  31                 	db	49
  1793  00FB41  00                 	db	0
  1794  00FB42  00                 	db	0
  1795  00FB43  00                 	db	0
  1796  00FB44  00                 	db	0
  1797  00FB45  00                 	db	0
  1798  00FB46  00                 	db	0
  1799  00FB47  00                 	db	0
  1800  00FB48  00                 	db	0
  1801  00FB49  64                 	db	100
  1802  00FB4A  69                 	db	105
  1803  00FB4B  73                 	db	115
  1804  00FB4C  70                 	db	112
  1805  00FB4D  6C                 	db	108
  1806  00FB4E  61                 	db	97
  1807  00FB4F  79                 	db	121
  1808  00FB50  73                 	db	115
  1809  00FB51  20                 	db	32
  1810  00FB52  31                 	db	49
  1811  00FB53  00                 	db	0
  1812  00FB54  00                 	db	0
  1813  00FB55  00                 	db	0
  1814  00FB56  00                 	db	0
  1815  00FB57  00                 	db	0
  1816  00FB58  00                 	db	0
  1817  00FB59  00                 	db	0
  1818  00FB5A  00                 	db	0
  1819  00FB5B  63                 	db	99
  1820  00FB5C  6F                 	db	111
  1821  00FB5D  6D                 	db	109
  1822  00FB5E  6D                 	db	109
  1823  00FB5F  61                 	db	97
  1824  00FB60  6E                 	db	110
  1825  00FB61  64                 	db	100
  1826  00FB62  73                 	db	115
  1827  00FB63  20                 	db	32
  1828  00FB64  32                 	db	50
  1829  00FB65  00                 	db	0
  1830  00FB66  00                 	db	0
  1831  00FB67  00                 	db	0
  1832  00FB68  00                 	db	0
  1833  00FB69  00                 	db	0
  1834  00FB6A  00                 	db	0
  1835  00FB6B  00                 	db	0
  1836  00FB6C  00                 	db	0
  1837  00FB6D  64                 	db	100
  1838  00FB6E  69                 	db	105
  1839  00FB6F  73                 	db	115
  1840  00FB70  70                 	db	112
  1841  00FB71  6C                 	db	108
  1842  00FB72  61                 	db	97
  1843  00FB73  79                 	db	121
  1844  00FB74  73                 	db	115
  1845  00FB75  20                 	db	32
  1846  00FB76  32                 	db	50
  1847  00FB77  00                 	db	0
  1848  00FB78  00                 	db	0
  1849  00FB79  00                 	db	0
  1850  00FB7A  00                 	db	0
  1851  00FB7B  00                 	db	0
  1852  00FB7C  00                 	db	0
  1853  00FB7D  00                 	db	0
  1854  00FB7E  00                 	db	0
  1855  00FB7F  63                 	db	99
  1856  00FB80  6F                 	db	111
  1857  00FB81  6D                 	db	109
  1858  00FB82  6D                 	db	109
  1859  00FB83  61                 	db	97
  1860  00FB84  6E                 	db	110
  1861  00FB85  64                 	db	100
  1862  00FB86  73                 	db	115
  1863  00FB87  20                 	db	32
  1864  00FB88  33                 	db	51
  1865  00FB89  00                 	db	0
  1866  00FB8A  00                 	db	0
  1867  00FB8B  00                 	db	0
  1868  00FB8C  00                 	db	0
  1869  00FB8D  00                 	db	0
  1870  00FB8E  00                 	db	0
  1871  00FB8F  00                 	db	0
  1872  00FB90  00                 	db	0
  1873  00FB91  64                 	db	100
  1874  00FB92  69                 	db	105
  1875  00FB93  73                 	db	115
  1876  00FB94  70                 	db	112
  1877  00FB95  6C                 	db	108
  1878  00FB96  61                 	db	97
  1879  00FB97  79                 	db	121
  1880  00FB98  73                 	db	115
  1881  00FB99  20                 	db	32
  1882  00FB9A  33                 	db	51
  1883  00FB9B  00                 	db	0
  1884  00FB9C  00                 	db	0
  1885  00FB9D  00                 	db	0
  1886  00FB9E  00                 	db	0
  1887  00FB9F  00                 	db	0
  1888  00FBA0  00                 	db	0
  1889  00FBA1  00                 	db	0
  1890  00FBA2  00                 	db	0
  1891  00FBA3  63                 	db	99
  1892  00FBA4  6F                 	db	111
  1893  00FBA5  6D                 	db	109
  1894  00FBA6  6D                 	db	109
  1895  00FBA7  61                 	db	97
  1896  00FBA8  6E                 	db	110
  1897  00FBA9  64                 	db	100
  1898  00FBAA  73                 	db	115
  1899  00FBAB  20                 	db	32
  1900  00FBAC  34                 	db	52
  1901  00FBAD  00                 	db	0
  1902  00FBAE  00                 	db	0
  1903  00FBAF  00                 	db	0
  1904  00FBB0  00                 	db	0
  1905  00FBB1  00                 	db	0
  1906  00FBB2  00                 	db	0
  1907  00FBB3  00                 	db	0
  1908  00FBB4  00                 	db	0
  1909  00FBB5  64                 	db	100
  1910  00FBB6  69                 	db	105
  1911  00FBB7  73                 	db	115
  1912  00FBB8  70                 	db	112
  1913  00FBB9  6C                 	db	108
  1914  00FBBA  61                 	db	97
  1915  00FBBB  79                 	db	121
  1916  00FBBC  73                 	db	115
  1917  00FBBD  20                 	db	32
  1918  00FBBE  34                 	db	52
  1919  00FBBF  00                 	db	0
  1920  00FBC0  00                 	db	0
  1921  00FBC1  00                 	db	0
  1922  00FBC2  00                 	db	0
  1923  00FBC3  00                 	db	0
  1924  00FBC4  00                 	db	0
  1925  00FBC5  00                 	db	0
  1926  00FBC6  00                 	db	0
  1927  00FBC7                     __end_of_T:
  1928                           	opt callstack 0
  1929  00FBC7                     _spin:
  1930                           	opt callstack 0
  1931  00FBC7  7C                 	db	124
  1932  00FBC8  7C                 	db	124
  1933  00FBC9  2F                 	db	47
  1934  00FBCA  2F                 	db	47
  1935  00FBCB  2D                 	db	45
  1936  00FBCC  2D                 	db	45
  1937  00FBCD  00                 	db	0
  1938  00FBCE  00                 	db	0
  1939  00FBCF  00                 	db	0
  1940  00FBD0  00                 	db	0
  1941  00FBD1  00                 	db	0
  1942  00FBD2  00                 	db	0
  1943  00FBD3  00                 	db	0
  1944  00FBD4  00                 	db	0
  1945  00FBD5  00                 	db	0
  1946  00FBD6  00                 	db	0
  1947  00FBD7  00                 	db	0
  1948  00FBD8  00                 	db	0
  1949  00FBD9  00                 	db	0
  1950  00FBDA  00                 	db	0
  1951  00FBDB  7C                 	db	124
  1952  00FBDC  7C                 	db	124
  1953  00FBDD  2F                 	db	47
  1954  00FBDE  2F                 	db	47
  1955  00FBDF  2D                 	db	45
  1956  00FBE0  2D                 	db	45
  1957  00FBE1  5C                 	db	92
  1958  00FBE2  5C                 	db	92
  1959  00FBE3  00                 	db	0
  1960  00FBE4  00                 	db	0
  1961  00FBE5  00                 	db	0
  1962  00FBE6  00                 	db	0
  1963  00FBE7  00                 	db	0
  1964  00FBE8  00                 	db	0
  1965  00FBE9  00                 	db	0
  1966  00FBEA  00                 	db	0
  1967  00FBEB  00                 	db	0
  1968  00FBEC  00                 	db	0
  1969  00FBED  00                 	db	0
  1970  00FBEE  00                 	db	0
  1971  00FBEF  4F                 	db	79
  1972  00FBF0  4F                 	db	79
  1973  00FBF1  4F                 	db	79
  1974  00FBF2  4F                 	db	79
  1975  00FBF3  4F                 	db	79
  1976  00FBF4  4F                 	db	79
  1977  00FBF5  2D                 	db	45
  1978  00FBF6  2D                 	db	45
  1979  00FBF7  5F                 	db	95
  1980  00FBF8  5F                 	db	95
  1981  00FBF9  2D                 	db	45
  1982  00FBFA  00                 	db	0
  1983  00FBFB  00                 	db	0
  1984  00FBFC  00                 	db	0
  1985  00FBFD  00                 	db	0
  1986  00FBFE  00                 	db	0
  1987  00FBFF  00                 	db	0
  1988  00FC00  00                 	db	0
  1989  00FC01  00                 	db	0
  1990  00FC02  00                 	db	0
  1991  00FC03  76                 	db	118
  1992  00FC04  76                 	db	118
  1993  00FC05  3C                 	db	60
  1994  00FC06  3C                 	db	60
  1995  00FC07  5E                 	db	94
  1996  00FC08  5E                 	db	94
  1997  00FC09  3E                 	db	62
  1998  00FC0A  3E                 	db	62
  1999  00FC0B  00                 	db	0
  2000  00FC0C  00                 	db	0
  2001  00FC0D  00                 	db	0
  2002  00FC0E  00                 	db	0
  2003  00FC0F  00                 	db	0
  2004  00FC10  00                 	db	0
  2005  00FC11  00                 	db	0
  2006  00FC12  00                 	db	0
  2007  00FC13  00                 	db	0
  2008  00FC14  00                 	db	0
  2009  00FC15  00                 	db	0
  2010  00FC16  00                 	db	0
  2011  00FC17  2E                 	db	46
  2012  00FC18  2E                 	db	46
  2013  00FC19  2A                 	db	42
  2014  00FC1A  2A                 	db	42
  2015  00FC1B  78                 	db	120
  2016  00FC1C  23                 	db	35
  2017  00FC1D  78                 	db	120
  2018  00FC1E  23                 	db	35
  2019  00FC1F  58                 	db	88
  2020  00FC20  58                 	db	88
  2021  00FC21  7C                 	db	124
  2022  00FC22  7C                 	db	124
  2023  00FC23  2D                 	db	45
  2024  00FC24  2D                 	db	45
  2025  00FC25  00                 	db	0
  2026  00FC26  00                 	db	0
  2027  00FC27  00                 	db	0
  2028  00FC28  00                 	db	0
  2029  00FC29  00                 	db	0
  2030  00FC2A  00                 	db	0
  2031  00FC2B  2E                 	db	46
  2032  00FC2C  2E                 	db	46
  2033  00FC2D  6F                 	db	111
  2034  00FC2E  6F                 	db	111
  2035  00FC2F  4F                 	db	79
  2036  00FC30  4F                 	db	79
  2037  00FC31  6F                 	db	111
  2038  00FC32  6F                 	db	111
  2039  00FC33  00                 	db	0
  2040  00FC34  00                 	db	0
  2041  00FC35  00                 	db	0
  2042  00FC36  00                 	db	0
  2043  00FC37  00                 	db	0
  2044  00FC38  00                 	db	0
  2045  00FC39  00                 	db	0
  2046  00FC3A  00                 	db	0
  2047  00FC3B  00                 	db	0
  2048  00FC3C  00                 	db	0
  2049  00FC3D  00                 	db	0
  2050  00FC3E  00                 	db	0
  2051  00FC3F                     __end_of_spin:
  2052                           	opt callstack 0
  2053  00FC3F  0000               	dw	0
  2054  00FC41  3F80               	dw	16256
  2055  00FC43  0000               	dw	0
  2056  00FC45  3FC0               	dw	16320
  2057  00FC47                     __end_of_bp:
  2058                           	opt callstack 0
  2059  00FC47  AA00               	dw	43520
  2060  00FC49  3FB8               	dw	16312
  2061  00FC4B                     __end_of_ivln2_h:
  2062                           	opt callstack 0
  2063  00FC4B  23C6               	dw	9158
  2064  00FC4D  B8F6               	dw	47350
  2065  00FC4F                     __end_of_cp_l:
  2066                           	opt callstack 0
  2067  00FC4F  4000               	dw	16384
  2068  00FC51  3F76               	dw	16246
  2069  00FC53                     __end_of_cp_h:
  2070                           	opt callstack 0
  2071  0000                     _IVTADL	set	14493
  2072  0000                     _IVTADH	set	14494
  2073  0000                     _IVTADU	set	14495
  2074  0000                     _PIR6bits	set	14758
  2075  0000                     _PIR4bits	set	14756
  2076  0000                     _PIE8bits	set	14744
  2077  0000                     _PIR8bits	set	14760
  2078  0000                     _SCANPR	set	14839
  2079  0000                     _DMA2PR	set	14836
  2080  0000                     _DMA1PR	set	14835
  2081  0000                     _MAINPR	set	14834
  2082  0000                     _ISRPR	set	14833
  2083  0000                     _PIE2bits	set	14738
  2084  0000                     _PIR2bits	set	14754
  2085  0000                     _PIE9bits	set	14745
  2086  0000                     _PIR9bits	set	14761
  2087  0000                     _PIE6bits	set	14742
  2088  0000                     _PIE3bits	set	14739
  2089  0000                     _PMD7	set	14791
  2090  0000                     _PMD6	set	14790
  2091  0000                     _PMD5	set	14789
  2092  0000                     _PMD4	set	14788
  2093  0000                     _PMD3	set	14787
  2094  0000                     _PMD2	set	14786
  2095  0000                     _PMD1	set	14785
  2096  0000                     _PMD0	set	14784
  2097  0000                     _OSCTUNE	set	14814
  2098  0000                     _OSCFRQ	set	14815
  2099  0000                     _OSCEN	set	14813
  2100  0000                     _OSCCON3	set	14811
  2101  0000                     _OSCCON1	set	14809
  2102  0000                     _IPR8bits	set	14728
  2103  0000                     _IPR9bits	set	14729
  2104  0000                     _IPR5bits	set	14725
  2105  0000                     _IPR1bits	set	14721
  2106  0000                     _IPR3bits	set	14723
  2107  0000                     _IPR6bits	set	14726
  2108  0000                     _IPR2bits	set	14722
  2109  0000                     _PIE5bits	set	14741
  2110  0000                     _PIE1bits	set	14737
  2111  0000                     _PIR5bits	set	14757
  2112  0000                     _PIR1bits	set	14753
  2113  0000                     _PLLR	set	118496
  2114  0000                     _SPI1SDIPPS	set	15071
  2115  0000                     _U1RXPPS	set	15077
  2116  0000                     _RC6PPS	set	14870
  2117  0000                     _RC5PPS	set	14869
  2118  0000                     _INT1PPS	set	15041
  2119  0000                     _RD1PPS	set	14873
  2120  0000                     _INT0PPS	set	15040
  2121  0000                     _RC3PPS	set	14867
  2122  0000                     _RB6PPS	set	14862
  2123  0000                     _SPI1SCKPPS	set	15070
  2124  0000                     _U2RXPPS	set	15080
  2125  0000                     _SLRCONF	set	14995
  2126  0000                     _SLRCONE	set	14979
  2127  0000                     _SLRCOND	set	14963
  2128  0000                     _SLRCONC	set	14947
  2129  0000                     _SLRCONB	set	14931
  2130  0000                     _SLRCONA	set	14915
  2131  0000                     _ODCOND	set	14962
  2132  0000                     _ODCONC	set	14946
  2133  0000                     _ODCONB	set	14930
  2134  0000                     _ODCONA	set	14914
  2135  0000                     _ODCONF	set	14994
  2136  0000                     _ODCONE	set	14978
  2137  0000                     _WPUC	set	14945
  2138  0000                     _WPUA	set	14913
  2139  0000                     _WPUB	set	14929
  2140  0000                     _WPUE	set	14977
  2141  0000                     _WPUF	set	14993
  2142  0000                     _WPUD	set	14961
  2143  0000                     _ANSELA	set	14912
  2144  0000                     _ANSELF	set	14992
  2145  0000                     _ANSELE	set	14976
  2146  0000                     _ANSELB	set	14928
  2147  0000                     _ANSELC	set	14944
  2148  0000                     _ANSELD	set	14960
  2149  0000                     _DMA2SSA	set	15321
  2150  0000                     _DMA1SSA	set	15353
  2151  0000                     _DMA2DSZ	set	15310
  2152  0000                     _DMA2SSZ	set	15319
  2153  0000                     _DMA2DSA	set	15312
  2154  0000                     _DMA1DSZ	set	15342
  2155  0000                     _DMA1SSZ	set	15351
  2156  0000                     _DMA1DSA	set	15344
  2157  0000                     _DMA2CON0bits	set	15324
  2158  0000                     _DMA2CON1bits	set	15325
  2159  0000                     _DMA1CON0bits	set	15356
  2160  0000                     _DMA1CON1bits	set	15357
  2161  0000                     _DMA2CON0	set	15324
  2162  0000                     _DMA2AIRQ	set	15326
  2163  0000                     _DMA2SIRQ	set	15327
  2164  0000                     _DMA2CON1	set	15325
  2165  0000                     _DMA1CON0	set	15356
  2166  0000                     _DMA1AIRQ	set	15358
  2167  0000                     _DMA1SIRQ	set	15359
  2168  0000                     _DMA1CON1	set	15357
  2169  0000                     _CLKRCON	set	15589
  2170  0000                     _CLKRCLK	set	15590
  2171  0000                     _SPI1INTFbits	set	15642
  2172  0000                     _SPI1RXB	set	15632
  2173  0000                     _SPI1TXB	set	15633
  2174  0000                     _SPI1TCNTL	set	15634
  2175  0000                     _SPI1CON0	set	15636
  2176  0000                     _SPI1CLK	set	15644
  2177  0000                     _SPI1BAUD	set	15641
  2178  0000                     _SPI1CON2	set	15638
  2179  0000                     _SPI1CON1	set	15637
  2180  0000                     _U2RXB	set	15824
  2181  0000                     _U2TXB	set	15826
  2182  0000                     _U2ERRIE	set	15842
  2183  0000                     _U2ERRIR	set	15841
  2184  0000                     _U2UIR	set	15840
  2185  0000                     _U2FIFO	set	15839
  2186  0000                     _U2BRGH	set	15838
  2187  0000                     _U2BRGL	set	15837
  2188  0000                     _U2CON2	set	15836
  2189  0000                     _U2CON1	set	15835
  2190  0000                     _U2CON0	set	15834
  2191  0000                     _U2P3L	set	15832
  2192  0000                     _U2P2L	set	15830
  2193  0000                     _U2P1L	set	15828
  2194  0000                     _U1RXB	set	15848
  2195  0000                     _U1ERRIE	set	15866
  2196  0000                     _U1ERRIR	set	15865
  2197  0000                     _U1UIR	set	15864
  2198  0000                     _U1FIFO	set	15863
  2199  0000                     _U1BRGH	set	15862
  2200  0000                     _U1BRGL	set	15861
  2201  0000                     _U1CON2	set	15860
  2202  0000                     _U1CON1	set	15859
  2203  0000                     _U1CON0	set	15858
  2204  0000                     _U1P3H	set	15857
  2205  0000                     _U1P3L	set	15856
  2206  0000                     _U1P2H	set	15855
  2207  0000                     _U1P2L	set	15854
  2208  0000                     _U1P1H	set	15853
  2209  0000                     _U1P1L	set	15852
  2210  0000                     _FVRCON	set	16065
  2211  0000                     _ADFLTRL	set	16102
  2212  0000                     _ADFLTRH	set	16103
  2213  0000                     _ADCON0bits	set	16120
  2214  0000                     _ADCON0	set	16120
  2215  0000                     _ADCLK	set	16127
  2216  0000                     _ADACT	set	16126
  2217  0000                     _ADREF	set	16125
  2218  0000                     _ADSTAT	set	16124
  2219  0000                     _ADCON3	set	16123
  2220  0000                     _ADCON2	set	16122
  2221  0000                     _ADCON1	set	16121
  2222  0000                     _ADPREH	set	16119
  2223  0000                     _ADPREL	set	16118
  2224  0000                     _ADCAP	set	16117
  2225  0000                     _ADACQH	set	16116
  2226  0000                     _ADACQL	set	16115
  2227  0000                     _ADPCH	set	16113
  2228  0000                     _ADRPT	set	16108
  2229  0000                     _ADACCU	set	16106
  2230  0000                     _ADSTPTH	set	16101
  2231  0000                     _ADSTPTL	set	16100
  2232  0000                     _ADUTHH	set	16097
  2233  0000                     _ADUTHL	set	16096
  2234  0000                     _ADLTHH	set	16095
  2235  0000                     _ADLTHL	set	16094
  2236  0000                     _CCPTMRS1bits	set	16223
  2237  0000                     _PORTFbits	set	16335
  2238  0000                     _LATFbits	set	16319
  2239  0000                     _LATCbits	set	16316
  2240  0000                     _LATDbits	set	16317
  2241  0000                     _PORTBbits	set	16331
  2242  0000                     _T3CONbits	set	16294
  2243  0000                     _T3CON	set	16294
  2244  0000                     _TMR3L	set	16292
  2245  0000                     _TMR3H	set	16293
  2246  0000                     _T3CLK	set	16297
  2247  0000                     _T3GATE	set	16296
  2248  0000                     _T3GCON	set	16295
  2249  0000                     _T2CON	set	16300
  2250  0000                     _T2TMR	set	16298
  2251  0000                     _T2PR	set	16299
  2252  0000                     _T2RST	set	16303
  2253  0000                     _T2HLT	set	16301
  2254  0000                     _T2CLKCON	set	16302
  2255  0000                     _PWM8DCL	set	16224
  2256  0000                     _PWM8DCH	set	16225
  2257  0000                     _PWM8CON	set	16226
  2258  0000                     _LATEbits	set	16318
  2259  0000                     _T5CONbits	set	16282
  2260  0000                     _T5CON	set	16282
  2261  0000                     _TMR5L	set	16280
  2262  0000                     _TMR5H	set	16281
  2263  0000                     _T5CLK	set	16285
  2264  0000                     _T5GATE	set	16284
  2265  0000                     _T5GCON	set	16283
  2266  0000                     _T6CON	set	16276
  2267  0000                     _T6TMR	set	16274
  2268  0000                     _T6PR	set	16275
  2269  0000                     _T6RST	set	16279
  2270  0000                     _T6HLT	set	16277
  2271  0000                     _T6CLKCON	set	16278
  2272  0000                     _TRISD	set	16325
  2273  0000                     _TRISC	set	16324
  2274  0000                     _TRISB	set	16323
  2275  0000                     _TRISA	set	16322
  2276  0000                     _TRISF	set	16327
  2277  0000                     _TRISE	set	16326
  2278  0000                     _LATC	set	16316
  2279  0000                     _LATB	set	16315
  2280  0000                     _LATF	set	16319
  2281  0000                     _LATA	set	16314
  2282  0000                     _LATD	set	16317
  2283  0000                     _LATE	set	16318
  2284  0000                     _IVTLOCKbits	set	16340
  2285  0000                     _IVTLOCK	set	16340
  2286  0000                     _INTCON0bits	set	16338
  2287  0000                     _GIE	set	130711
  2288  00FC53                     STR_65:
  2289                           
  2290                           ; BSR set to: 57
  2291  00FC53  20                 	db	32
  2292  00FC54  25                 	db	37
  2293  00FC55  63                 	db	99	;'c'
  2294  00FC56  20                 	db	32
  2295  00FC57  2C                 	db	44
  2296  00FC58  25                 	db	37
  2297  00FC59  6C                 	db	108	;'l'
  2298  00FC5A  75                 	db	117	;'u'
  2299  00FC5B  2C                 	db	44
  2300  00FC5C  25                 	db	37
  2301  00FC5D  34                 	db	52	;'4'
  2302  00FC5E  2E                 	db	46
  2303  00FC5F  34                 	db	52	;'4'
  2304  00FC60  66                 	db	102	;'f'
  2305  00FC61  2C                 	db	44
  2306  00FC62  25                 	db	37
  2307  00FC63  34                 	db	52	;'4'
  2308  00FC64  2E                 	db	46
  2309  00FC65  34                 	db	52	;'4'
  2310  00FC66  66                 	db	102	;'f'
  2311  00FC67  2C                 	db	44
  2312  00FC68  25                 	db	37
  2313  00FC69  34                 	db	52	;'4'
  2314  00FC6A  2E                 	db	46
  2315  00FC6B  34                 	db	52	;'4'
  2316  00FC6C  66                 	db	102	;'f'
  2317  00FC6D  2C                 	db	44
  2318  00FC6E  25                 	db	37
  2319  00FC6F  34                 	db	52	;'4'
  2320  00FC70  2E                 	db	46
  2321  00FC71  34                 	db	52	;'4'
  2322  00FC72  66                 	db	102	;'f'
  2323  00FC73  2C                 	db	44
  2324  00FC74  25                 	db	37
  2325  00FC75  34                 	db	52	;'4'
  2326  00FC76  2E                 	db	46
  2327  00FC77  33                 	db	51	;'3'
  2328  00FC78  66                 	db	102	;'f'
  2329  00FC79  2C                 	db	44
  2330  00FC7A  25                 	db	37
  2331  00FC7B  34                 	db	52	;'4'
  2332  00FC7C  2E                 	db	46
  2333  00FC7D  33                 	db	51	;'3'
  2334  00FC7E  66                 	db	102	;'f'
  2335  00FC7F  2C                 	db	44
  2336  00FC80  25                 	db	37
  2337  00FC81  34                 	db	52	;'4'
  2338  00FC82  2E                 	db	46
  2339  00FC83  33                 	db	51	;'3'
  2340  00FC84  66                 	db	102	;'f'
  2341  00FC85  2C                 	db	44
  2342  00FC86  25                 	db	37
  2343  00FC87  34                 	db	52	;'4'
  2344  00FC88  2E                 	db	46
  2345  00FC89  33                 	db	51	;'3'
  2346  00FC8A  66                 	db	102	;'f'
  2347  00FC8B  2C                 	db	44
  2348  00FC8C  25                 	db	37
  2349  00FC8D  34                 	db	52	;'4'
  2350  00FC8E  2E                 	db	46
  2351  00FC8F  33                 	db	51	;'3'
  2352  00FC90  66                 	db	102	;'f'
  2353  00FC91  2C                 	db	44
  2354  00FC92  25                 	db	37
  2355  00FC93  34                 	db	52	;'4'
  2356  00FC94  2E                 	db	46
  2357  00FC95  33                 	db	51	;'3'
  2358  00FC96  66                 	db	102	;'f'
  2359  00FC97  2C                 	db	44
  2360  00FC98  25                 	db	37
  2361  00FC99  64                 	db	100	;'d'
  2362  00FC9A  2C                 	db	44
  2363  00FC9B  25                 	db	37
  2364  00FC9C  64                 	db	100	;'d'
  2365  00FC9D  2C                 	db	44
  2366  00FC9E  25                 	db	37
  2367  00FC9F  32                 	db	50	;'2'
  2368  00FCA0  2E                 	db	46
  2369  00FCA1  36                 	db	54	;'6'
  2370  00FCA2  66                 	db	102	;'f'
  2371  00FCA3  2C                 	db	44
  2372  00FCA4  25                 	db	37
  2373  00FCA5  34                 	db	52	;'4'
  2374  00FCA6  2E                 	db	46
  2375  00FCA7  33                 	db	51	;'3'
  2376  00FCA8  66                 	db	102	;'f'
  2377  00FCA9  2C                 	db	44
  2378  00FCAA  25                 	db	37
  2379  00FCAB  64                 	db	100	;'d'
  2380  00FCAC  2C                 	db	44
  2381  00FCAD  25                 	db	37
  2382  00FCAE  64                 	db	100	;'d'
  2383  00FCAF  2C                 	db	44
  2384  00FCB0  25                 	db	37
  2385  00FCB1  6C                 	db	108	;'l'
  2386  00FCB2  75                 	db	117	;'u'
  2387  00FCB3  2C                 	db	44
  2388  00FCB4  25                 	db	37
  2389  00FCB5  6C                 	db	108	;'l'
  2390  00FCB6  75                 	db	117	;'u'
  2391  00FCB7  0D                 	db	13
  2392  00FCB8  0A                 	db	10
  2393  00FCB9  00                 	db	0
  2394  00FCBA                     STR_17:
  2395                           
  2396                           ; BSR set to: 57
  2397  00FCBA  52                 	db	82	;'R'
  2398  00FCBB  31                 	db	49	;'1'
  2399  00FCBC  20                 	db	32
  2400  00FCBD  25                 	db	37
  2401  00FCBE  32                 	db	50	;'2'
  2402  00FCBF  2E                 	db	46
  2403  00FCC0  33                 	db	51	;'3'
  2404  00FCC1  66                 	db	102	;'f'
  2405  00FCC2  20                 	db	32
  2406  00FCC3  25                 	db	37
  2407  00FCC4  33                 	db	51	;'3'
  2408  00FCC5  2E                 	db	46
  2409  00FCC6  34                 	db	52	;'4'
  2410  00FCC7  66                 	db	102	;'f'
  2411  00FCC8  20                 	db	32
  2412  00FCC9  20                 	db	32
  2413  00FCCA  20                 	db	32
  2414  00FCCB  20                 	db	32
  2415  00FCCC  20                 	db	32
  2416  00FCCD  20                 	db	32
  2417  00FCCE  20                 	db	32
  2418  00FCCF  20                 	db	32
  2419  00FCD0  20                 	db	32
  2420  00FCD1  20                 	db	32
  2421  00FCD2  20                 	db	32
  2422  00FCD3  00                 	db	0
  2423  00FCD4                     STR_18:
  2424                           
  2425                           ; BSR set to: 57
  2426  00FCD4  52                 	db	82	;'R'
  2427  00FCD5  32                 	db	50	;'2'
  2428  00FCD6  20                 	db	32
  2429  00FCD7  25                 	db	37
  2430  00FCD8  32                 	db	50	;'2'
  2431  00FCD9  2E                 	db	46
  2432  00FCDA  33                 	db	51	;'3'
  2433  00FCDB  66                 	db	102	;'f'
  2434  00FCDC  20                 	db	32
  2435  00FCDD  25                 	db	37
  2436  00FCDE  33                 	db	51	;'3'
  2437  00FCDF  2E                 	db	46
  2438  00FCE0  34                 	db	52	;'4'
  2439  00FCE1  66                 	db	102	;'f'
  2440  00FCE2  20                 	db	32
  2441  00FCE3  20                 	db	32
  2442  00FCE4  20                 	db	32
  2443  00FCE5  20                 	db	32
  2444  00FCE6  20                 	db	32
  2445  00FCE7  20                 	db	32
  2446  00FCE8  20                 	db	32
  2447  00FCE9  20                 	db	32
  2448  00FCEA  20                 	db	32
  2449  00FCEB  20                 	db	32
  2450  00FCEC  20                 	db	32
  2451  00FCED  00                 	db	0
  2452  00FCEE                     
  2453                           ; BSR set to: 57
  2454  00FCEE  20                 	db	32
  2455  00FCEF  4D                 	db	77	;'M'
  2456  00FCF0  65                 	db	101	;'e'
  2457  00FCF1  73                 	db	115	;'s'
  2458  00FCF2  67                 	db	103	;'g'
  2459  00FCF3  20                 	db	32
  2460  00FCF4  25                 	db	37
  2461  00FCF5  64                 	db	100	;'d'
  2462  00FCF6  20                 	db	32
  2463  00FCF7  53                 	db	83	;'S'
  2464  00FCF8  74                 	db	116	;'t'
  2465  00FCF9  61                 	db	97	;'a'
  2466  00FCFA  63                 	db	99	;'c'
  2467  00FCFB  6B                 	db	107	;'k'
  2468  00FCFC  20                 	db	32
  2469  00FCFD  25                 	db	37
  2470  00FCFE  64                 	db	100	;'d'
  2471  00FCFF  20                 	db	32
  2472  00FD00  20                 	db	32
  2473  00FD01  20                 	db	32
  2474  00FD02  20                 	db	32
  2475  00FD03  20                 	db	32
  2476  00FD04  20                 	db	32
  2477  00FD05  00                 	db	0
  2478  00FD06                     STR_9:
  2479                           
  2480                           ; BSR set to: 57
  2481  00FD06  53                 	db	83	;'S'
  2482  00FD07  20                 	db	32
  2483  00FD08  53                 	db	83	;'S'
  2484  00FD09  25                 	db	37
  2485  00FD0A  63                 	db	99	;'c'
  2486  00FD0B  43                 	db	67	;'C'
  2487  00FD0C  20                 	db	32
  2488  00FD0D  25                 	db	37
  2489  00FD0E  64                 	db	100	;'d'
  2490  00FD0F  20                 	db	32
  2491  00FD10  25                 	db	37
  2492  00FD11  32                 	db	50	;'2'
  2493  00FD12  2E                 	db	46
  2494  00FD13  34                 	db	52	;'4'
  2495  00FD14  66                 	db	102	;'f'
  2496  00FD15  20                 	db	32
  2497  00FD16  20                 	db	32
  2498  00FD17  20                 	db	32
  2499  00FD18  20                 	db	32
  2500  00FD19  20                 	db	32
  2501  00FD1A  20                 	db	32
  2502  00FD1B  20                 	db	32
  2503  00FD1C  00                 	db	0
  2504  00FD1D                     STR_16:
  2505                           
  2506                           ; BSR set to: 57
  2507  00FD1D  45                 	db	69	;'E'
  2508  00FD1E  53                 	db	83	;'S'
  2509  00FD1F  52                 	db	82	;'R'
  2510  00FD20  20                 	db	32
  2511  00FD21  20                 	db	32
  2512  00FD22  25                 	db	37
  2513  00FD23  32                 	db	50	;'2'
  2514  00FD24  2E                 	db	46
  2515  00FD25  36                 	db	54	;'6'
  2516  00FD26  66                 	db	102	;'f'
  2517  00FD27  20                 	db	32
  2518  00FD28  20                 	db	32
  2519  00FD29  20                 	db	32
  2520  00FD2A  20                 	db	32
  2521  00FD2B  20                 	db	32
  2522  00FD2C  20                 	db	32
  2523  00FD2D  20                 	db	32
  2524  00FD2E  20                 	db	32
  2525  00FD2F  20                 	db	32
  2526  00FD30  20                 	db	32
  2527  00FD31  20                 	db	32
  2528  00FD32  00                 	db	0
  2529  00FD33                     STR_10:
  2530                           
  2531                           ; BSR set to: 57
  2532  00FD33  53                 	db	83	;'S'
  2533  00FD34  74                 	db	116	;'t'
  2534  00FD35  61                 	db	97	;'a'
  2535  00FD36  74                 	db	116	;'t'
  2536  00FD37  69                 	db	105	;'i'
  2537  00FD38  63                 	db	99	;'c'
  2538  00FD39  20                 	db	32
  2539  00FD3A  53                 	db	83	;'S'
  2540  00FD3B  4F                 	db	79	;'O'
  2541  00FD3C  43                 	db	67	;'C'
  2542  00FD3D  20                 	db	32
  2543  00FD3E  25                 	db	37
  2544  00FD3F  64                 	db	100	;'d'
  2545  00FD40  20                 	db	32
  2546  00FD41  20                 	db	32
  2547  00FD42  20                 	db	32
  2548  00FD43  20                 	db	32
  2549  00FD44  20                 	db	32
  2550  00FD45  20                 	db	32
  2551  00FD46  20                 	db	32
  2552  00FD47  20                 	db	32
  2553  00FD48  00                 	db	0
  2554  00FD49                     STR_11:
  2555                           
  2556                           ; BSR set to: 57
  2557  00FD49  42                 	db	66	;'B'
  2558  00FD4A  61                 	db	97	;'a'
  2559  00FD4B  74                 	db	116	;'t'
  2560  00FD4C  74                 	db	116	;'t'
  2561  00FD4D  65                 	db	101	;'e'
  2562  00FD4E  72                 	db	114	;'r'
  2563  00FD4F  79                 	db	121	;'y'
  2564  00FD50  20                 	db	32
  2565  00FD51  41                 	db	65	;'A'
  2566  00FD52  68                 	db	104	;'h'
  2567  00FD53  20                 	db	32
  2568  00FD54  25                 	db	37
  2569  00FD55  33                 	db	51	;'3'
  2570  00FD56  2E                 	db	46
  2571  00FD57  32                 	db	50	;'2'
  2572  00FD58  66                 	db	102	;'f'
  2573  00FD59  20                 	db	32
  2574  00FD5A  20                 	db	32
  2575  00FD5B  20                 	db	32
  2576  00FD5C  20                 	db	32
  2577  00FD5D  20                 	db	32
  2578  00FD5E  00                 	db	0
  2579  00FD5F                     STR_15:
  2580                           
  2581                           ; BSR set to: 57
  2582  00FD5F  43                 	db	67	;'C'
  2583  00FD60  68                 	db	104	;'h'
  2584  00FD61  65                 	db	101	;'e'
  2585  00FD62  63                 	db	99	;'c'
  2586  00FD63  6B                 	db	107	;'k'
  2587  00FD64  69                 	db	105	;'i'
  2588  00FD65  6E                 	db	110	;'n'
  2589  00FD66  67                 	db	103	;'g'
  2590  00FD67  20                 	db	32
  2591  00FD68  25                 	db	37
  2592  00FD69  63                 	db	99	;'c'
  2593  00FD6A  20                 	db	32
  2594  00FD6B  25                 	db	37
  2595  00FD6C  63                 	db	99	;'c'
  2596  00FD6D  20                 	db	32
  2597  00FD6E  20                 	db	32
  2598  00FD6F  20                 	db	32
  2599  00FD70  20                 	db	32
  2600  00FD71  20                 	db	32
  2601  00FD72  20                 	db	32
  2602  00FD73  00                 	db	0
  2603  00FD74                     STR_37:
  2604                           
  2605                           ; BSR set to: 57
  2606  00FD74  45                 	db	69	;'E'
  2607  00FD75  53                 	db	83	;'S'
  2608  00FD76  52                 	db	82	;'R'
  2609  00FD77  20                 	db	32
  2610  00FD78  20                 	db	32
  2611  00FD79  25                 	db	37
  2612  00FD7A  32                 	db	50	;'2'
  2613  00FD7B  2E                 	db	46
  2614  00FD7C  36                 	db	54	;'6'
  2615  00FD7D  66                 	db	102	;'f'
  2616  00FD7E  20                 	db	32
  2617  00FD7F  20                 	db	32
  2618  00FD80  20                 	db	32
  2619  00FD81  20                 	db	32
  2620  00FD82  20                 	db	32
  2621  00FD83  20                 	db	32
  2622  00FD84  20                 	db	32
  2623  00FD85  20                 	db	32
  2624  00FD86  20                 	db	32
  2625  00FD87  00                 	db	0
  2626  00FD88                     STR_36:
  2627                           
  2628                           ; BSR set to: 57
  2629  00FD88  53                 	db	83	;'S'
  2630  00FD89  25                 	db	37
  2631  00FD8A  63                 	db	99	;'c'
  2632  00FD8B  43                 	db	67	;'C'
  2633  00FD8C  20                 	db	32
  2634  00FD8D  25                 	db	37
  2635  00FD8E  64                 	db	100	;'d'
  2636  00FD8F  20                 	db	32
  2637  00FD90  52                 	db	82	;'R'
  2638  00FD91  55                 	db	85	;'U'
  2639  00FD92  4E                 	db	78	;'N'
  2640  00FD93  20                 	db	32
  2641  00FD94  25                 	db	37
  2642  00FD95  64                 	db	100	;'d'
  2643  00FD96  20                 	db	32
  2644  00FD97  20                 	db	32
  2645  00FD98  20                 	db	32
  2646  00FD99  20                 	db	32
  2647  00FD9A  20                 	db	32
  2648  00FD9B  00                 	db	0
  2649  00FD9C                     STR_25:
  2650                           
  2651                           ; BSR set to: 57
  2652  00FD9C  50                 	db	80	;'P'
  2653  00FD9D  56                 	db	86	;'V'
  2654  00FD9E  20                 	db	32
  2655  00FD9F  25                 	db	37
  2656  00FDA0  63                 	db	99	;'c'
  2657  00FDA1  20                 	db	32
  2658  00FDA2  57                 	db	87	;'W'
  2659  00FDA3  48                 	db	72	;'H'
  2660  00FDA4  20                 	db	32
  2661  00FDA5  25                 	db	37
  2662  00FDA6  33                 	db	51	;'3'
  2663  00FDA7  2E                 	db	46
  2664  00FDA8  32                 	db	50	;'2'
  2665  00FDA9  66                 	db	102	;'f'
  2666  00FDAA  20                 	db	32
  2667  00FDAB  20                 	db	32
  2668  00FDAC  20                 	db	32
  2669  00FDAD  20                 	db	32
  2670  00FDAE  20                 	db	32
  2671  00FDAF  00                 	db	0
  2672  00FDB0                     STR_34:
  2673                           
  2674                           ; BSR set to: 57
  2675  00FDB0  42                 	db	66	;'B'
  2676  00FDB1  41                 	db	65	;'A'
  2677  00FDB2  54                 	db	84	;'T'
  2678  00FDB3  54                 	db	84	;'T'
  2679  00FDB4  20                 	db	32
  2680  00FDB5  50                 	db	80	;'P'
  2681  00FDB6  57                 	db	87	;'W'
  2682  00FDB7  52                 	db	82	;'R'
  2683  00FDB8  20                 	db	32
  2684  00FDB9  25                 	db	37
  2685  00FDBA  33                 	db	51	;'3'
  2686  00FDBB  2E                 	db	46
  2687  00FDBC  32                 	db	50	;'2'
  2688  00FDBD  66                 	db	102	;'f'
  2689  00FDBE  20                 	db	32
  2690  00FDBF  20                 	db	32
  2691  00FDC0  20                 	db	32
  2692  00FDC1  20                 	db	32
  2693  00FDC2  20                 	db	32
  2694  00FDC3  00                 	db	0
  2695  00FDC4                     STR_38:
  2696                           
  2697                           ; BSR set to: 57
  2698  00FDC4  52                 	db	82	;'R'
  2699  00FDC5  31                 	db	49	;'1'
  2700  00FDC6  20                 	db	32
  2701  00FDC7  25                 	db	37
  2702  00FDC8  32                 	db	50	;'2'
  2703  00FDC9  2E                 	db	46
  2704  00FDCA  33                 	db	51	;'3'
  2705  00FDCB  66                 	db	102	;'f'
  2706  00FDCC  20                 	db	32
  2707  00FDCD  25                 	db	37
  2708  00FDCE  33                 	db	51	;'3'
  2709  00FDCF  2E                 	db	46
  2710  00FDD0  34                 	db	52	;'4'
  2711  00FDD1  66                 	db	102	;'f'
  2712  00FDD2  20                 	db	32
  2713  00FDD3  20                 	db	32
  2714  00FDD4  20                 	db	32
  2715  00FDD5  20                 	db	32
  2716  00FDD6  20                 	db	32
  2717  00FDD7  00                 	db	0
  2718  00FDD8                     STR_39:
  2719                           
  2720                           ; BSR set to: 57
  2721  00FDD8  52                 	db	82	;'R'
  2722  00FDD9  32                 	db	50	;'2'
  2723  00FDDA  20                 	db	32
  2724  00FDDB  25                 	db	37
  2725  00FDDC  32                 	db	50	;'2'
  2726  00FDDD  2E                 	db	46
  2727  00FDDE  33                 	db	51	;'3'
  2728  00FDDF  66                 	db	102	;'f'
  2729  00FDE0  20                 	db	32
  2730  00FDE1  25                 	db	37
  2731  00FDE2  33                 	db	51	;'3'
  2732  00FDE3  2E                 	db	46
  2733  00FDE4  34                 	db	52	;'4'
  2734  00FDE5  66                 	db	102	;'f'
  2735  00FDE6  20                 	db	32
  2736  00FDE7  20                 	db	32
  2737  00FDE8  20                 	db	32
  2738  00FDE9  20                 	db	32
  2739  00FDEA  20                 	db	32
  2740  00FDEB  00                 	db	0
  2741  00FDEC                     STR_22:
  2742                           
  2743                           ; BSR set to: 57
  2744  00FDEC  50                 	db	80	;'P'
  2745  00FDED  56                 	db	86	;'V'
  2746  00FDEE  20                 	db	32
  2747  00FDEF  25                 	db	37
  2748  00FDF0  63                 	db	99	;'c'
  2749  00FDF1  20                 	db	32
  2750  00FDF2  50                 	db	80	;'P'
  2751  00FDF3  57                 	db	87	;'W'
  2752  00FDF4  52                 	db	82	;'R'
  2753  00FDF5  20                 	db	32
  2754  00FDF6  25                 	db	37
  2755  00FDF7  33                 	db	51	;'3'
  2756  00FDF8  2E                 	db	46
  2757  00FDF9  32                 	db	50	;'2'
  2758  00FDFA  66                 	db	102	;'f'
  2759  00FDFB  20                 	db	32
  2760  00FDFC  20                 	db	32
  2761  00FDFD  20                 	db	32
  2762  00FDFE  20                 	db	32
  2763  00FDFF  00                 	db	0
  2764  00FE00                     STR_35:
  2765                           
  2766                           ; BSR set to: 57
  2767  00FE00  42                 	db	66	;'B'
  2768  00FE01  41                 	db	65	;'A'
  2769  00FE02  48                 	db	72	;'H'
  2770  00FE03  20                 	db	32
  2771  00FE04  25                 	db	37
  2772  00FE05  33                 	db	51	;'3'
  2773  00FE06  2E                 	db	46
  2774  00FE07  32                 	db	50	;'2'
  2775  00FE08  66                 	db	102	;'f'
  2776  00FE09  20                 	db	32
  2777  00FE0A  50                 	db	80	;'P'
  2778  00FE0B  25                 	db	37
  2779  00FE0C  33                 	db	51	;'3'
  2780  00FE0D  2E                 	db	46
  2781  00FE0E  32                 	db	50	;'2'
  2782  00FE0F  66                 	db	102	;'f'
  2783  00FE10  20                 	db	32
  2784  00FE11  20                 	db	32
  2785  00FE12  20                 	db	32
  2786  00FE13  00                 	db	0
  2787  00FE14                     STR_58:
  2788                           
  2789                           ; BSR set to: 57
  2790  00FE14  20                 	db	32
  2791  00FE15  20                 	db	32
  2792  00FE16  20                 	db	32
  2793  00FE17  20                 	db	32
  2794  00FE18  20                 	db	32
  2795  00FE19  20                 	db	32
  2796  00FE1A  20                 	db	32
  2797  00FE1B  20                 	db	32
  2798  00FE1C  20                 	db	32
  2799  00FE1D  20                 	db	32
  2800  00FE1E  20                 	db	32
  2801  00FE1F  20                 	db	32
  2802  00FE20  20                 	db	32
  2803  00FE21  20                 	db	32
  2804  00FE22  20                 	db	32
  2805  00FE23  20                 	db	32
  2806  00FE24  20                 	db	32
  2807  00FE25  20                 	db	32
  2808  00FE26  00                 	db	0
  2809  00FE27                     STR_48:
  2810                           
  2811                           ; BSR set to: 57
  2812  00FE27  48                 	db	72	;'H'
  2813  00FE28  45                 	db	69	;'E'
  2814  00FE29  4C                 	db	76	;'L'
  2815  00FE2A  50                 	db	80	;'P'
  2816  00FE2B  20                 	db	32
  2817  00FE2C  25                 	db	37
  2818  00FE2D  73                 	db	115	;'s'
  2819  00FE2E  20                 	db	32
  2820  00FE2F  20                 	db	32
  2821  00FE30  20                 	db	32
  2822  00FE31  20                 	db	32
  2823  00FE32  20                 	db	32
  2824  00FE33  20                 	db	32
  2825  00FE34  20                 	db	32
  2826  00FE35  20                 	db	32
  2827  00FE36  20                 	db	32
  2828  00FE37  20                 	db	32
  2829  00FE38  20                 	db	32
  2830  00FE39  00                 	db	0
  2831  00FE3A                     
  2832                           ; BSR set to: 57
  2833  00FE3A  44                 	db	68	;'D'
  2834  00FE3B  49                 	db	73	;'I'
  2835  00FE3C  53                 	db	83	;'S'
  2836  00FE3D  50                 	db	80	;'P'
  2837  00FE3E  4C                 	db	76	;'L'
  2838  00FE3F  41                 	db	65	;'A'
  2839  00FE40  59                 	db	89	;'Y'
  2840  00FE41  20                 	db	32
  2841  00FE42  25                 	db	37
  2842  00FE43  73                 	db	115	;'s'
  2843  00FE44  20                 	db	32
  2844  00FE45  20                 	db	32
  2845  00FE46  20                 	db	32
  2846  00FE47  20                 	db	32
  2847  00FE48  20                 	db	32
  2848  00FE49  20                 	db	32
  2849  00FE4A  20                 	db	32
  2850  00FE4B  20                 	db	32
  2851  00FE4C  00                 	db	0
  2852  00FE4D                     STR_31:
  2853                           
  2854                           ; BSR set to: 57
  2855  00FE4D  42                 	db	66	;'B'
  2856  00FE4E  41                 	db	65	;'A'
  2857  00FE4F  54                 	db	84	;'T'
  2858  00FE50  20                 	db	32
  2859  00FE51  49                 	db	73	;'I'
  2860  00FE52  57                 	db	87	;'W'
  2861  00FE53  48                 	db	72	;'H'
  2862  00FE54  20                 	db	32
  2863  00FE55  25                 	db	37
  2864  00FE56  34                 	db	52	;'4'
  2865  00FE57  2E                 	db	46
  2866  00FE58  31                 	db	49	;'1'
  2867  00FE59  66                 	db	102	;'f'
  2868  00FE5A  20                 	db	32
  2869  00FE5B  20                 	db	32
  2870  00FE5C  20                 	db	32
  2871  00FE5D  20                 	db	32
  2872  00FE5E  20                 	db	32
  2873  00FE5F  00                 	db	0
  2874  00FE60                     STR_32:
  2875                           
  2876                           ; BSR set to: 57
  2877  00FE60  42                 	db	66	;'B'
  2878  00FE61  41                 	db	65	;'A'
  2879  00FE62  54                 	db	84	;'T'
  2880  00FE63  20                 	db	32
  2881  00FE64  4F                 	db	79	;'O'
  2882  00FE65  57                 	db	87	;'W'
  2883  00FE66  48                 	db	72	;'H'
  2884  00FE67  20                 	db	32
  2885  00FE68  25                 	db	37
  2886  00FE69  34                 	db	52	;'4'
  2887  00FE6A  2E                 	db	46
  2888  00FE6B  31                 	db	49	;'1'
  2889  00FE6C  66                 	db	102	;'f'
  2890  00FE6D  20                 	db	32
  2891  00FE6E  20                 	db	32
  2892  00FE6F  20                 	db	32
  2893  00FE70  20                 	db	32
  2894  00FE71  20                 	db	32
  2895  00FE72  00                 	db	0
  2896  00FE73                     STR_33:
  2897                           
  2898                           ; BSR set to: 57
  2899  00FE73  42                 	db	66	;'B'
  2900  00FE74  41                 	db	65	;'A'
  2901  00FE75  54                 	db	84	;'T'
  2902  00FE76  20                 	db	32
  2903  00FE77  54                 	db	84	;'T'
  2904  00FE78  57                 	db	87	;'W'
  2905  00FE79  48                 	db	72	;'H'
  2906  00FE7A  20                 	db	32
  2907  00FE7B  25                 	db	37
  2908  00FE7C  34                 	db	52	;'4'
  2909  00FE7D  2E                 	db	46
  2910  00FE7E  31                 	db	49	;'1'
  2911  00FE7F  66                 	db	102	;'f'
  2912  00FE80  20                 	db	32
  2913  00FE81  20                 	db	32
  2914  00FE82  20                 	db	32
  2915  00FE83  20                 	db	32
  2916  00FE84  20                 	db	32
  2917  00FE85  00                 	db	0
  2918  00FE86                     STR_27:
  2919                           
  2920                           ; BSR set to: 57
  2921  00FE86  49                 	db	73	;'I'
  2922  00FE87  4E                 	db	78	;'N'
  2923  00FE88  56                 	db	86	;'V'
  2924  00FE89  20                 	db	32
  2925  00FE8A  20                 	db	32
  2926  00FE8B  57                 	db	87	;'W'
  2927  00FE8C  48                 	db	72	;'H'
  2928  00FE8D  20                 	db	32
  2929  00FE8E  25                 	db	37
  2930  00FE8F  33                 	db	51	;'3'
  2931  00FE90  2E                 	db	46
  2932  00FE91  32                 	db	50	;'2'
  2933  00FE92  66                 	db	102	;'f'
  2934  00FE93  20                 	db	32
  2935  00FE94  20                 	db	32
  2936  00FE95  20                 	db	32
  2937  00FE96  20                 	db	32
  2938  00FE97  20                 	db	32
  2939  00FE98  00                 	db	0
  2940  00FE99                     STR_26:
  2941                           
  2942                           ; BSR set to: 57
  2943  00FE99  4C                 	db	76	;'L'
  2944  00FE9A  4F                 	db	79	;'O'
  2945  00FE9B  41                 	db	65	;'A'
  2946  00FE9C  44                 	db	68	;'D'
  2947  00FE9D  20                 	db	32
  2948  00FE9E  57                 	db	87	;'W'
  2949  00FE9F  48                 	db	72	;'H'
  2950  00FEA0  20                 	db	32
  2951  00FEA1  25                 	db	37
  2952  00FEA2  33                 	db	51	;'3'
  2953  00FEA3  2E                 	db	46
  2954  00FEA4  32                 	db	50	;'2'
  2955  00FEA5  66                 	db	102	;'f'
  2956  00FEA6  20                 	db	32
  2957  00FEA7  20                 	db	32
  2958  00FEA8  20                 	db	32
  2959  00FEA9  20                 	db	32
  2960  00FEAA  20                 	db	32
  2961  00FEAB  00                 	db	0
  2962  00FEAC                     STR_24:
  2963                           
  2964                           ; BSR set to: 57
  2965  00FEAC  49                 	db	73	;'I'
  2966  00FEAD  4E                 	db	78	;'N'
  2967  00FEAE  56                 	db	86	;'V'
  2968  00FEAF  20                 	db	32
  2969  00FEB0  20                 	db	32
  2970  00FEB1  50                 	db	80	;'P'
  2971  00FEB2  57                 	db	87	;'W'
  2972  00FEB3  52                 	db	82	;'R'
  2973  00FEB4  20                 	db	32
  2974  00FEB5  25                 	db	37
  2975  00FEB6  33                 	db	51	;'3'
  2976  00FEB7  2E                 	db	46
  2977  00FEB8  32                 	db	50	;'2'
  2978  00FEB9  66                 	db	102	;'f'
  2979  00FEBA  20                 	db	32
  2980  00FEBB  20                 	db	32
  2981  00FEBC  20                 	db	32
  2982  00FEBD  20                 	db	32
  2983  00FEBE  00                 	db	0
  2984  00FEBF                     STR_23:
  2985                           
  2986                           ; BSR set to: 57
  2987  00FEBF  4C                 	db	76	;'L'
  2988  00FEC0  4F                 	db	79	;'O'
  2989  00FEC1  41                 	db	65	;'A'
  2990  00FEC2  44                 	db	68	;'D'
  2991  00FEC3  20                 	db	32
  2992  00FEC4  50                 	db	80	;'P'
  2993  00FEC5  57                 	db	87	;'W'
  2994  00FEC6  52                 	db	82	;'R'
  2995  00FEC7  20                 	db	32
  2996  00FEC8  25                 	db	37
  2997  00FEC9  33                 	db	51	;'3'
  2998  00FECA  2E                 	db	46
  2999  00FECB  32                 	db	50	;'2'
  3000  00FECC  66                 	db	102	;'f'
  3001  00FECD  20                 	db	32
  3002  00FECE  20                 	db	32
  3003  00FECF  20                 	db	32
  3004  00FED0  20                 	db	32
  3005  00FED1  00                 	db	0
  3006  00FED2                     STR_29:
  3007                           
  3008                           ; BSR set to: 57
  3009  00FED2  42                 	db	66	;'B'
  3010  00FED3  56                 	db	86	;'V'
  3011  00FED4  20                 	db	32
  3012  00FED5  25                 	db	37
  3013  00FED6  32                 	db	50	;'2'
  3014  00FED7  2E                 	db	46
  3015  00FED8  32                 	db	50	;'2'
  3016  00FED9  66                 	db	102	;'f'
  3017  00FEDA  20                 	db	32
  3018  00FEDB  42                 	db	66	;'B'
  3019  00FEDC  41                 	db	65	;'A'
  3020  00FEDD  20                 	db	32
  3021  00FEDE  25                 	db	37
  3022  00FEDF  32                 	db	50	;'2'
  3023  00FEE0  2E                 	db	46
  3024  00FEE1  32                 	db	50	;'2'
  3025  00FEE2  66                 	db	102	;'f'
  3026  00FEE3  20                 	db	32
  3027  00FEE4  00                 	db	0
  3028  00FEE5                     STR_30:
  3029                           
  3030                           ; BSR set to: 57
  3031  00FEE5  43                 	db	67	;'C'
  3032  00FEE6  56                 	db	86	;'V'
  3033  00FEE7  20                 	db	32
  3034  00FEE8  25                 	db	37
  3035  00FEE9  32                 	db	50	;'2'
  3036  00FEEA  2E                 	db	46
  3037  00FEEB  32                 	db	50	;'2'
  3038  00FEEC  66                 	db	102	;'f'
  3039  00FEED  20                 	db	32
  3040  00FEEE  4C                 	db	76	;'L'
  3041  00FEEF  41                 	db	65	;'A'
  3042  00FEF0  20                 	db	32
  3043  00FEF1  25                 	db	37
  3044  00FEF2  32                 	db	50	;'2'
  3045  00FEF3  2E                 	db	46
  3046  00FEF4  32                 	db	50	;'2'
  3047  00FEF5  66                 	db	102	;'f'
  3048  00FEF6  20                 	db	32
  3049  00FEF7  00                 	db	0
  3050  00FEF8                     STR_28:
  3051                           
  3052                           ; BSR set to: 57
  3053  00FEF8  50                 	db	80	;'P'
  3054  00FEF9  56                 	db	86	;'V'
  3055  00FEFA  20                 	db	32
  3056  00FEFB  25                 	db	37
  3057  00FEFC  32                 	db	50	;'2'
  3058  00FEFD  2E                 	db	46
  3059  00FEFE  32                 	db	50	;'2'
  3060  00FEFF  66                 	db	102	;'f'
  3061  00FF00  20                 	db	32
  3062  00FF01  50                 	db	80	;'P'
  3063  00FF02  41                 	db	65	;'A'
  3064  00FF03  20                 	db	32
  3065  00FF04  25                 	db	37
  3066  00FF05  32                 	db	50	;'2'
  3067  00FF06  2E                 	db	46
  3068  00FF07  32                 	db	50	;'2'
  3069  00FF08  66                 	db	102	;'f'
  3070  00FF09  20                 	db	32
  3071  00FF0A  00                 	db	0
  3072  00FF0B                     STR_8:
  3073                           
  3074                           ; BSR set to: 57
  3075  00FF0B  42                 	db	66	;'B'
  3076  00FF0C  56                 	db	86	;'V'
  3077  00FF0D  20                 	db	32
  3078  00FF0E  25                 	db	37
  3079  00FF0F  32                 	db	50	;'2'
  3080  00FF10  2E                 	db	46
  3081  00FF11  34                 	db	52	;'4'
  3082  00FF12  66                 	db	102	;'f'
  3083  00FF13  20                 	db	32
  3084  00FF14  20                 	db	32
  3085  00FF15  20                 	db	32
  3086  00FF16  20                 	db	32
  3087  00FF17  20                 	db	32
  3088  00FF18  20                 	db	32
  3089  00FF19  20                 	db	32
  3090  00FF1A  20                 	db	32
  3091  00FF1B  20                 	db	32
  3092  00FF1C  00                 	db	0
  3093  00FF1D                     STR_4:
  3094                           
  3095                           ; BSR set to: 57
  3096  00FF1D  20                 	db	32
  3097  00FF1E  4E                 	db	78	;'N'
  3098  00FF1F  53                 	db	83	;'S'
  3099  00FF20  41                 	db	65	;'A'
  3100  00FF21  53                 	db	83	;'S'
  3101  00FF22  50                 	db	80	;'P'
  3102  00FF23  4F                 	db	79	;'O'
  3103  00FF24  4F                 	db	79	;'O'
  3104  00FF25  4B                 	db	75	;'K'
  3105  00FF26  20                 	db	32
  3106  00FF27  20                 	db	32
  3107  00FF28  20                 	db	32
  3108  00FF29  20                 	db	32
  3109  00FF2A  20                 	db	32
  3110  00FF2B  20                 	db	32
  3111  00FF2C  20                 	db	32
  3112  00FF2D  00                 	db	0
  3113  00FF2E                     STR_12:
  3114                           
  3115                           ; BSR set to: 57
  3116  00FF2E  42                 	db	66	;'B'
  3117  00FF2F  61                 	db	97	;'a'
  3118  00FF30  74                 	db	116	;'t'
  3119  00FF31  74                 	db	116	;'t'
  3120  00FF32  65                 	db	101	;'e'
  3121  00FF33  72                 	db	114	;'r'
  3122  00FF34  79                 	db	121	;'y'
  3123  00FF35  20                 	db	32
  3124  00FF36  45                 	db	69	;'E'
  3125  00FF37  53                 	db	83	;'S'
  3126  00FF38  52                 	db	82	;'R'
  3127  00FF39  20                 	db	32
  3128  00FF3A  20                 	db	32
  3129  00FF3B  20                 	db	32
  3130  00FF3C  20                 	db	32
  3131  00FF3D  20                 	db	32
  3132  00FF3E  00                 	db	0
  3133  00FF3F                     STR_13:
  3134                           
  3135                           ; BSR set to: 57
  3136  00FF3F  43                 	db	67	;'C'
  3137  00FF40  61                 	db	97	;'a'
  3138  00FF41  6C                 	db	108	;'l'
  3139  00FF42  63                 	db	99	;'c'
  3140  00FF43  75                 	db	117	;'u'
  3141  00FF44  6C                 	db	108	;'l'
  3142  00FF45  61                 	db	97	;'a'
  3143  00FF46  74                 	db	116	;'t'
  3144  00FF47  69                 	db	105	;'i'
  3145  00FF48  6F                 	db	111	;'o'
  3146  00FF49  6E                 	db	110	;'n'
  3147  00FF4A  20                 	db	32
  3148  00FF4B  20                 	db	32
  3149  00FF4C  20                 	db	32
  3150  00FF4D  20                 	db	32
  3151  00FF4E  20                 	db	32
  3152  00FF4F  00                 	db	0
  3153  00FF50                     STR_1:
  3154                           
  3155                           ; BSR set to: 57
  3156  00FF50  20                 	db	32
  3157  00FF51  4D                 	db	77	;'M'
  3158  00FF52  42                 	db	66	;'B'
  3159  00FF53  4D                 	db	77	;'M'
  3160  00FF54  43                 	db	67	;'C'
  3161  00FF55  20                 	db	32
  3162  00FF56  53                 	db	83	;'S'
  3163  00FF57  4F                 	db	79	;'O'
  3164  00FF58  4C                 	db	76	;'L'
  3165  00FF59  41                 	db	65	;'A'
  3166  00FF5A  52                 	db	82	;'R'
  3167  00FF5B  4D                 	db	77	;'M'
  3168  00FF5C  4F                 	db	79	;'O'
  3169  00FF5D  4E                 	db	78	;'N'
  3170  00FF5E  20                 	db	32
  3171  00FF5F  20                 	db	32
  3172  00FF60  00                 	db	0
  3173  00FF61                     STR_21:
  3174                           
  3175                           ; BSR set to: 57
  3176  00FF61  25                 	db	37
  3177  00FF62  64                 	db	100	;'d'
  3178  00FF63  20                 	db	32
  3179  00FF64  25                 	db	37
  3180  00FF65  32                 	db	50	;'2'
  3181  00FF66  2E                 	db	46
  3182  00FF67  34                 	db	52	;'4'
  3183  00FF68  66                 	db	102	;'f'
  3184  00FF69  2C                 	db	44
  3185  00FF6A  20                 	db	32
  3186  00FF6B  25                 	db	37
  3187  00FF6C  64                 	db	100	;'d'
  3188  00FF6D  20                 	db	32
  3189  00FF6E  20                 	db	32
  3190  00FF6F  20                 	db	32
  3191  00FF70  23                 	db	35
  3192  00FF71  00                 	db	0
  3193  00FF72                     STR_14:
  3194                           
  3195                           ; BSR set to: 57
  3196  00FF72  43                 	db	67	;'C'
  3197  00FF73  68                 	db	104	;'h'
  3198  00FF74  65                 	db	101	;'e'
  3199  00FF75  63                 	db	99	;'c'
  3200  00FF76  6B                 	db	107	;'k'
  3201  00FF77  20                 	db	32
  3202  00FF78  33                 	db	51	;'3'
  3203  00FF79  30                 	db	48	;'0'
  3204  00FF7A  20                 	db	32
  3205  00FF7B  73                 	db	115	;'s'
  3206  00FF7C  65                 	db	101	;'e'
  3207  00FF7D  63                 	db	99	;'c'
  3208  00FF7E  6F                 	db	111	;'o'
  3209  00FF7F  6E                 	db	110	;'n'
  3210  00FF80  64                 	db	100	;'d'
  3211  00FF81  73                 	db	115	;'s'
  3212  00FF82  00                 	db	0
  3213  00FF83                     STR_19:
  3214                           
  3215                           ; BSR set to: 57
  3216  00FF83  25                 	db	37
  3217  00FF84  64                 	db	100	;'d'
  3218  00FF85  20                 	db	32
  3219  00FF86  25                 	db	37
  3220  00FF87  32                 	db	50	;'2'
  3221  00FF88  2E                 	db	46
  3222  00FF89  34                 	db	52	;'4'
  3223  00FF8A  66                 	db	102	;'f'
  3224  00FF8B  20                 	db	32
  3225  00FF8C  20                 	db	32
  3226  00FF8D  20                 	db	32
  3227  00FF8E  25                 	db	37
  3228  00FF8F  64                 	db	100	;'d'
  3229  00FF90  20                 	db	32
  3230  00FF91  20                 	db	32
  3231  00FF92  00                 	db	0
  3232  00FF93                     STR_52:
  3233                           
  3234                           ; BSR set to: 57
  3235  00FF93  76                 	db	118	;'v'
  3236  00FF94  74                 	db	116	;'t'
  3237  00FF95  65                 	db	101	;'e'
  3238  00FF96  72                 	db	114	;'r'
  3239  00FF97  6D                 	db	109	;'m'
  3240  00FF98  20                 	db	32
  3241  00FF99  25                 	db	37
  3242  00FF9A  78                 	db	120	;'x'
  3243  00FF9B  3A                 	db	58	;':'
  3244  00FF9C  25                 	db	37
  3245  00FF9D  78                 	db	120	;'x'
  3246  00FF9E  20                 	db	32
  3247  00FF9F  20                 	db	32
  3248  00FFA0  20                 	db	32
  3249  00FFA1  00                 	db	0
  3250  00FFA2                     STR_2:
  3251                           
  3252                           ; BSR set to: 57
  3253  00FFA2  20                 	db	32
  3254  00FFA3  56                 	db	86	;'V'
  3255  00FFA4  65                 	db	101	;'e'
  3256  00FFA5  72                 	db	114	;'r'
  3257  00FFA6  73                 	db	115	;'s'
  3258  00FFA7  69                 	db	105	;'i'
  3259  00FFA8  6F                 	db	111	;'o'
  3260  00FFA9  6E                 	db	110	;'n'
  3261  00FFAA  20                 	db	32
  3262  00FFAB  25                 	db	37
  3263  00FFAC  73                 	db	115	;'s'
  3264  00FFAD  20                 	db	32
  3265  00FFAE  20                 	db	32
  3266  00FFAF  20                 	db	32
  3267  00FFB0  00                 	db	0
  3268  00FFB1                     STR_46:
  3269                           
  3270                           ; BSR set to: 57
  3271  00FFB1  44                 	db	68	;'D'
  3272  00FFB2  65                 	db	101	;'e'
  3273  00FFB3  63                 	db	99	;'c'
  3274  00FFB4  20                 	db	32
  3275  00FFB5  32                 	db	50	;'2'
  3276  00FFB6  37                 	db	55	;'7'
  3277  00FFB7  20                 	db	32
  3278  00FFB8  32                 	db	50	;'2'
  3279  00FFB9  30                 	db	48	;'0'
  3280  00FFBA  31                 	db	49	;'1'
  3281  00FFBB  39                 	db	57	;'9'
  3282  00FFBC  00                 	db	0
  3283  00FFBD                     STR_50:
  3284                           
  3285                           ; BSR set to: 57
  3286  00FFBD  25                 	db	37
  3287  00FFBE  73                 	db	115	;'s'
  3288  00FFBF  20                 	db	32
  3289  00FFC0  20                 	db	32
  3290  00FFC1  20                 	db	32
  3291  00FFC2  20                 	db	32
  3292  00FFC3  20                 	db	32
  3293  00FFC4  20                 	db	32
  3294  00FFC5  20                 	db	32
  3295  00FFC6  00                 	db	0
  3296  00FFC7                     STR_47:
  3297                           
  3298                           ; BSR set to: 57
  3299  00FFC7  31                 	db	49	;'1'
  3300  00FFC8  32                 	db	50	;'2'
  3301  00FFC9  3A                 	db	58	;':'
  3302  00FFCA  32                 	db	50	;'2'
  3303  00FFCB  32                 	db	50	;'2'
  3304  00FFCC  3A                 	db	58	;':'
  3305  00FFCD  30                 	db	48	;'0'
  3306  00FFCE  36                 	db	54	;'6'
  3307  00FFCF  00                 	db	0
  3308  00FFD0                     STR_3:
  3309                           
  3310                           ; BSR set to: 57
  3311  00FFD0  31                 	db	49	;'1'
  3312  00FFD1  2E                 	db	46
  3313  00FFD2  30                 	db	48	;'0'
  3314  00FFD3  30                 	db	48	;'0'
  3315  00FFD4  37                 	db	55	;'7'
  3316  00FFD5  31                 	db	49	;'1'
  3317  00FFD6  00                 	db	0
  3318  00FFD7                     STR_66:
  3319                           
  3320                           ; BSR set to: 57
  3321  00FFD7  49                 	db	73	;'I'
  3322  00FFD8  4E                 	db	78	;'N'
  3323  00FFD9  46                 	db	70	;'F'
  3324  00FFDA  00                 	db	0
  3325  00FFDB                     STR_70:
  3326                           
  3327                           ; BSR set to: 57
  3328  00FFDB  4E                 	db	78	;'N'
  3329  00FFDC  41                 	db	65	;'A'
  3330  00FFDD  4E                 	db	78	;'N'
  3331  00FFDE  00                 	db	0
  3332  00FFDF                     STR_67:
  3333                           
  3334                           ; BSR set to: 57
  3335  00FFDF  69                 	db	105	;'i'
  3336  00FFE0  6E                 	db	110	;'n'
  3337  00FFE1  66                 	db	102	;'f'
  3338  00FFE2  00                 	db	0
  3339  00FFE3                     STR_71:
  3340                           
  3341                           ; BSR set to: 57
  3342  00FFE3  6E                 	db	110	;'n'
  3343  00FFE4  61                 	db	97	;'a'
  3344  00FFE5  6E                 	db	110	;'n'
  3345  00FFE6  00                 	db	0
  3346  00FFE7                     STR_97:
  3347                           
  3348                           ; BSR set to: 57
  3349  00FFE7  6C                 	db	108	;'l'
  3350  00FFE8  58                 	db	88	;'X'
  3351  00FFE9  00                 	db	0
  3352  00FFEA                     STR_74:
  3353                           
  3354                           ; BSR set to: 57
  3355  00FFEA  6C                 	db	108	;'l'
  3356  00FFEB  64                 	db	100	;'d'
  3357  00FFEC  00                 	db	0
  3358  00FFED                     STR_83:
  3359                           
  3360                           ; BSR set to: 57
  3361  00FFED  6C                 	db	108	;'l'
  3362  00FFEE  66                 	db	102	;'f'
  3363  00FFEF  00                 	db	0
  3364  00FFF0                     STR_78:
  3365                           
  3366                           ; BSR set to: 57
  3367  00FFF0  6C                 	db	108	;'l'
  3368  00FFF1  69                 	db	105	;'i'
  3369  00FFF2  00                 	db	0
  3370  00FFF3                     STR_88:
  3371                           
  3372                           ; BSR set to: 57
  3373  00FFF3  6C                 	db	108	;'l'
  3374  00FFF4  75                 	db	117	;'u'
  3375  00FFF5  00                 	db	0
  3376  00FFF6                     STR_93:
  3377                           
  3378                           ; BSR set to: 57
  3379  00FFF6  6C                 	db	108	;'l'
  3380  00FFF7  78                 	db	120	;'x'
  3381  00FFF8  00                 	db	0
  3382  00FFF9                     STR_44:
  3383                           
  3384                           ; BSR set to: 57
  3385  00FFF9  25                 	db	37
  3386  00FFFA  63                 	db	99	;'c'
  3387  00FFFB  00                 	db	0
  3388  00FFFC                     STR_43:
  3389                           
  3390                           ; BSR set to: 57
  3391  00FFFC  25                 	db	37
  3392  00FFFD  73                 	db	115	;'s'
  3393  00FFFE  00                 	db	0
  3394  0000                     
  3395                           ; #config settings
  3396  00FFFF  00                 	db	0	; dummy byte at the end
  3397  0000                     
  3398                           	psect	cinit
  3399  019FF2                     __pcinit:
  3400                           	opt callstack 0
  3401  019FF2                     start_initialization:
  3402                           	opt callstack 0
  3403  019FF2                     __initialization:
  3404                           	opt callstack 0
  3405                           
  3406                           ; Initialize objects allocated to BIGRAM (807 bytes)
  3407                           ; load TBLPTR registers with __pidataBIGRAM
  3408  019FF2  0E62               	movlw	low __pidataBIGRAM
  3409  019FF4  6EF6               	movwf	tblptrl,c
  3410  019FF6  0E68               	movlw	high __pidataBIGRAM
  3411  019FF8  6EF7               	movwf	tblptrh,c
  3412  019FFA  0E01               	movlw	low (__pidataBIGRAM shr (0+16))
  3413  019FFC  6EF8               	movwf	tblptru,c
  3414  019FFE  EE01  F0FF         	lfsr	0,__pdataBIGRAM
  3415  01A002  EE20 F327          	lfsr	2,807
  3416  01A006                     copy_data0:
  3417  01A006  0009               	tblrd		*+
  3418  01A008  006F FFD7 FFEE     	movff	tablat,postinc0
  3419  01A00E  50DD               	movf	postdec2,w,c
  3420  01A010  50D9               	movf	fsr2l,w,c
  3421  01A012  E1F9               	bnz	copy_data0
  3422  01A014  50DA               	movf	fsr2h,w,c
  3423  01A016  E1F7               	bnz	copy_data0
  3424                           
  3425                           ; Initialize objects allocated to BANK1 (239 bytes)
  3426                           ; load TBLPTR registers with __pidataBANK1
  3427  01A018  0E4E               	movlw	low __pidataBANK1
  3428  01A01A  6EF6               	movwf	tblptrl,c
  3429  01A01C  0E9C               	movlw	high __pidataBANK1
  3430  01A01E  6EF7               	movwf	tblptrh,c
  3431  01A020  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  3432  01A022  6EF8               	movwf	tblptru,c
  3433  01A024  EE00  F100         	lfsr	0,__pdataBANK1
  3434  01A028  EE20 F0EF          	lfsr	2,239
  3435  01A02C                     copy_data1:
  3436  01A02C  0009               	tblrd		*+
  3437  01A02E  006F FFD7 FFEE     	movff	tablat,postinc0
  3438  01A034  50DD               	movf	postdec2,w,c
  3439  01A036  50D9               	movf	fsr2l,w,c
  3440  01A038  E1F9               	bnz	copy_data1
  3441                           
  3442                           ; Initialize objects allocated to BANK0 (14 bytes)
  3443                           ; load TBLPTR registers with __pidataBANK0
  3444  01A03A  0E1E               	movlw	low __pidataBANK0
  3445  01A03C  6EF6               	movwf	tblptrl,c
  3446  01A03E  0EBD               	movlw	high __pidataBANK0
  3447  01A040  6EF7               	movwf	tblptrh,c
  3448  01A042  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  3449  01A044  6EF8               	movwf	tblptru,c
  3450  01A046  EE00  F0F0         	lfsr	0,__pdataBANK0
  3451  01A04A  EE20 F00E          	lfsr	2,14
  3452  01A04E                     copy_data2:
  3453  01A04E  0009               	tblrd		*+
  3454  01A050  006F FFD7 FFEE     	movff	tablat,postinc0
  3455  01A056  50DD               	movf	postdec2,w,c
  3456  01A058  50D9               	movf	fsr2l,w,c
  3457  01A05A  E1F9               	bnz	copy_data2
  3458                           
  3459                           ; Clear objects allocated to BIGRAM (482 bytes)
  3460  01A05C  EE02  F026         	lfsr	0,__pbssBIGRAM
  3461  01A060  EE20 F1E2          	lfsr	2,482
  3462  01A064                     clear_0:
  3463  01A064  6AEE               	clrf	postinc0,c
  3464  01A066  50DD               	movf	postdec2,w,c
  3465  01A068  50D9               	movf	fsr2l,w,c
  3466  01A06A  E1FC               	bnz	clear_0
  3467  01A06C  50DA               	movf	fsr2h,w,c
  3468  01A06E  E1FA               	bnz	clear_0
  3469                           
  3470                           ; Clear objects allocated to BANK4 (255 bytes)
  3471  01A070  EE01  F000         	lfsr	0,__pbssBANK4
  3472  01A074  EE20 F0FF          	lfsr	2,255
  3473  01A078                     clear_1:
  3474  01A078  6AEE               	clrf	postinc0,c
  3475  01A07A  50DD               	movf	postdec2,w,c
  3476  01A07C  50D9               	movf	fsr2l,w,c
  3477  01A07E  E1FC               	bnz	clear_1
  3478  01A080  50DA               	movf	fsr2h,w,c
  3479  01A082  E1FA               	bnz	clear_1
  3480                           
  3481                           ; Clear objects allocated to BANK3 (198 bytes)
  3482  01A084  EE00  F300         	lfsr	0,__pbssBANK3
  3483  01A088  0EC6               	movlw	198
  3484  01A08A                     clear_2:
  3485  01A08A  6AEE               	clrf	postinc0,c
  3486  01A08C  06E8               	decf	wreg,f,c
  3487  01A08E  E1FD               	bnz	clear_2
  3488                           
  3489                           ; Clear objects allocated to BANK2 (231 bytes)
  3490  01A090  EE00  F200         	lfsr	0,__pbssBANK2
  3491  01A094  0EE7               	movlw	231
  3492  01A096                     clear_3:
  3493  01A096  6AEE               	clrf	postinc0,c
  3494  01A098  06E8               	decf	wreg,f,c
  3495  01A09A  E1FD               	bnz	clear_3
  3496                           
  3497                           ; Clear objects allocated to BANK0 (119 bytes)
  3498  01A09C  EE00  F060         	lfsr	0,__pbssBANK0
  3499  01A0A0  0E77               	movlw	119
  3500  01A0A2                     clear_4:
  3501  01A0A2  6AEE               	clrf	postinc0,c
  3502  01A0A4  06E8               	decf	wreg,f,c
  3503  01A0A6  E1FD               	bnz	clear_4
  3504                           
  3505                           ; Clear objects allocated to COMRAM (14 bytes)
  3506  01A0A8  EE00  F03A         	lfsr	0,__pbssCOMRAM
  3507  01A0AC  0E0E               	movlw	14
  3508  01A0AE                     clear_5:
  3509  01A0AE  6AEE               	clrf	postinc0,c
  3510  01A0B0  06E8               	decf	wreg,f,c
  3511  01A0B2  E1FD               	bnz	clear_5
  3512                           
  3513                           ;
  3514                           ; Setup IVTBASE
  3515                           ;
  3516  01A0B4  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  3517  01A0B6  6ED5               	movwf	213,c
  3518  01A0B8  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  3519  01A0BA  6ED6               	movwf	214,c
  3520  01A0BC  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  3521  01A0BE  6ED7               	movwf	215,c
  3522  01A0C0                     end_of_initialization:
  3523                           	opt callstack 0
  3524  01A0C0                     __end_of__initialization:
  3525                           	opt callstack 0
  3526  01A0C0  0100               	movlb	0
  3527  01A0C2  EF22  F089         	goto	_main	;jump to C main() function
  3528                           
  3529                           	psect	bssCOMRAM
  3530  00003A                     __pbssCOMRAM:
  3531                           	opt callstack 0
  3532  00003A                     _width:
  3533                           	opt callstack 0
  3534  00003A                     	ds	2
  3535  00003C                     _prec:
  3536                           	opt callstack 0
  3537  00003C                     	ds	2
  3538  00003E                     _flags:
  3539                           	opt callstack 0
  3540  00003E                     	ds	2
  3541  000040                     esr_check@esr_state:
  3542                           	opt callstack 0
  3543  000040                     	ds	1
  3544  000041                     calc_bsoc@log_update_wait:
  3545                           	opt callstack 0
  3546  000041                     	ds	1
  3547  000042                     check_day_time@day_delay:
  3548                           	opt callstack 0
  3549  000042                     	ds	1
  3550  000043                     _uart2RxHead:
  3551                           	opt callstack 0
  3552  000043                     	ds	1
  3553  000044                     _uart2TxBufferRemaining:
  3554                           	opt callstack 0
  3555  000044                     	ds	1
  3556  000045                     _uart2TxTail:
  3557                           	opt callstack 0
  3558  000045                     	ds	1
  3559  000046                     _uart1RxTail:
  3560                           	opt callstack 0
  3561  000046                     	ds	1
  3562  000047                     _uart1RxHead:
  3563                           	opt callstack 0
  3564  000047                     	ds	1
  3565                           
  3566                           	psect	bssBANK0
  3567  000060                     __pbssBANK0:
  3568                           	opt callstack 0
  3569  000060                     _spi_link:
  3570                           	opt callstack 0
  3571  000060                     	ds	12
  3572  00006C                     _uart1RxBuffer:
  3573                           	opt callstack 0
  3574  00006C                     	ds	8
  3575  000074                     spinners@s:
  3576                           	opt callstack 0
  3577  000074                     	ds	6
  3578  00007A                     floorf@F524:
  3579                           	opt callstack 0
  3580  00007A                     	ds	4
  3581  00007E                     fabsf@F463:
  3582                           	opt callstack 0
  3583  00007E                     	ds	4
  3584  000082                     ___fpclassifyf@F463:
  3585                           	opt callstack 0
  3586  000082                     	ds	4
  3587  000086                     calc_ror_data@bcror:
  3588                           	opt callstack 0
  3589  000086                     	ds	4
  3590  00008A                     calc_ror_data@bvror:
  3591                           	opt callstack 0
  3592  00008A                     	ds	4
  3593  00008E                     calc_model_data@bcror:
  3594                           	opt callstack 0
  3595  00008E                     	ds	4
  3596  000092                     calc_model_data@bvror:
  3597                           	opt callstack 0
  3598  000092                     	ds	4
  3599  000096                     _utctime:
  3600                           	opt callstack 0
  3601  000096                     	ds	4
  3602  00009A                     wdtdelay@dcount:
  3603                           	opt callstack 0
  3604  00009A                     	ds	4
  3605  00009E                     _P:
  3606                           	opt callstack 0
  3607  00009E                     	ds	4
  3608  0000A2                     _TMR3_InterruptHandler:
  3609                           	opt callstack 0
  3610  0000A2                     	ds	3
  3611  0000A5                     _TMR5_InterruptHandler:
  3612                           	opt callstack 0
  3613  0000A5                     	ds	3
  3614  0000A8                     _TMR6_InterruptHandler:
  3615                           	opt callstack 0
  3616  0000A8                     	ds	3
  3617  0000AB                     _ADCC_ADTI_InterruptHandler:
  3618                           	opt callstack 0
  3619  0000AB                     	ds	3
  3620  0000AE                     _ADCC_ADI_InterruptHandler:
  3621                           	opt callstack 0
  3622  0000AE                     	ds	3
  3623  0000B1                     _UART1_RxInterruptHandler:
  3624                           	opt callstack 0
  3625  0000B1                     	ds	3
  3626  0000B4                     _UART2_TxInterruptHandler:
  3627                           	opt callstack 0
  3628  0000B4                     	ds	3
  3629  0000B7                     _UART2_RxInterruptHandler:
  3630                           	opt callstack 0
  3631  0000B7                     	ds	3
  3632  0000BA                     _INT1_InterruptHandler:
  3633                           	opt callstack 0
  3634  0000BA                     	ds	3
  3635  0000BD                     _INT0_InterruptHandler:
  3636                           	opt callstack 0
  3637  0000BD                     	ds	3
  3638  0000C0                     _nout:
  3639                           	opt callstack 0
  3640  0000C0                     	ds	2
  3641  0000C2                     TMR3_ISR@CountCallBack:
  3642                           	opt callstack 0
  3643  0000C2                     	ds	2
  3644  0000C4                     _timer3ReloadVal:
  3645                           	opt callstack 0
  3646  0000C4                     	ds	2
  3647  0000C6                     TMR5_ISR@CountCallBack:
  3648                           	opt callstack 0
  3649  0000C6                     	ds	2
  3650  0000C8                     _timer5ReloadVal:
  3651                           	opt callstack 0
  3652  0000C8                     	ds	2
  3653  0000CA                     _mode_sw:
  3654                           	opt callstack 0
  3655  0000CA                     	ds	1
  3656  0000CB                     _uart2RxCount:
  3657                           	opt callstack 0
  3658  0000CB                     	ds	1
  3659  0000CC                     _uart2RxTail:
  3660                           	opt callstack 0
  3661  0000CC                     	ds	1
  3662  0000CD                     _uart2TxHead:
  3663                           	opt callstack 0
  3664  0000CD                     	ds	1
  3665  0000CE                     _uart1RxCount:
  3666                           	opt callstack 0
  3667  0000CE                     	ds	1
  3668  0000CF                     _seed:
  3669                           	opt callstack 0
  3670  0000CF                     	ds	8
  3671                           
  3672                           	psect	dataBANK0
  3673  0000F0                     __pdataBANK0:
  3674                           	opt callstack 0
  3675  0000F0                     stoa@F1166:
  3676                           	opt callstack 0
  3677  0000F0                     	ds	7
  3678  0000F7                     _H:
  3679                           	opt callstack 0
  3680  0000F7                     	ds	7
  3681                           
  3682                           	psect	dataBANK1
  3683  000100                     __pdataBANK1:
  3684                           	opt callstack 0
  3685  000100                     _R:
  3686                           	opt callstack 0
  3687  000100                     	ds	48
  3688  000130                     _V:
  3689                           	opt callstack 0
  3690  000130                     	ds	191
  3691                           
  3692                           	psect	bssBANK2
  3693  000200                     __pbssBANK2:
  3694                           	opt callstack 0
  3695  000200                     lp_filter@smooth:
  3696                           	opt callstack 0
  3697  000200                     	ds	84
  3698  000254                     _S:
  3699                           	opt callstack 0
  3700  000254                     	ds	41
  3701  00027D                     _tickCount:
  3702                           	opt callstack 0
  3703  00027D                     	ds	26
  3704  000297                     _dbuf:
  3705                           	opt callstack 0
  3706  000297                     	ds	80
  3707                           
  3708                           	psect	bssBANK3
  3709  000300                     __pbssBANK3:
  3710                           	opt callstack 0
  3711  000300                     _uart2TxBuffer:
  3712                           	opt callstack 0
  3713  000300                     	ds	64
  3714  000340                     _ring_buf2:
  3715                           	opt callstack 0
  3716  000340                     	ds	67
  3717  000383                     _ring_buf1:
  3718                           	opt callstack 0
  3719  000383                     	ds	67
  3720                           
  3721                           	psect	bssBANK4
  3722  000400                     __pbssBANK4:
  3723                           	opt callstack 0
  3724  000400                     _uart2RxBuffer:
  3725                           	opt callstack 0
  3726  000400                     	ds	255
  3727                           
  3728                           	psect	bssBIGRAM
  3729  000826                     __pbssBIGRAM:
  3730                           	opt callstack 0
  3731  000826                     _D:
  3732                           	opt callstack 0
  3733  000826                     	ds	482
  3734                           
  3735                           	psect	dataBIGRAM
  3736  0004FF                     __pdataBIGRAM:
  3737                           	opt callstack 0
  3738  0004FF                     _port_data:
  3739                           	opt callstack 0
  3740  0004FF                     	ds	512
  3741  0006FF                     _C:
  3742                           	opt callstack 0
  3743  0006FF                     	ds	295
  3744                           
  3745                           	psect	cstackBANK0
  3746  0000D7                     __pcstackBANK0:
  3747                           	opt callstack 0
  3748  0000D7                     ??_TMR3_ISR:
  3749                           
  3750                           ; 1 bytes @ 0x0
  3751  0000D7                     	ds	25
  3752                           
  3753                           	psect	cstackCOMRAM
  3754  000021                     __pcstackCOMRAM:
  3755                           	opt callstack 0
  3756  000021                     ??_ADCC_ThresholdISR:
  3757  000021                     
  3758                           ; 1 bytes @ 0x0
  3759  000021                     	ds	5
  3760  000026                     ??_TMR6_ISR:
  3761                           
  3762                           ; 1 bytes @ 0x5
  3763  000026                     	ds	1
  3764  000027                     ??_INT1_ISR:
  3765  000027                     
  3766                           ; 1 bytes @ 0x6
  3767  000027                     	ds	4
  3768  00002B                     ??_TMR5_ISR:
  3769                           
  3770                           ; 1 bytes @ 0xA
  3771  00002B                     	ds	15
  3772                           
  3773 ;;
  3774 ;;Main: autosize = 17, tempsize = 0, incstack = 0, save=0
  3775 ;;
  3776 ;; *************** function _main *****************
  3777 ;; Defined at:
  3778 ;;		line 185 in file "main.c"
  3779 ;; Parameters:    Size  Location     Type
  3780 ;;		None
  3781 ;; Auto vars:     Size  Location     Type
  3782 ;;  esr_temp        4  [STACK] float 
  3783 ;;  i_esr           2  [STACK] unsigned short 
  3784 ;;  shape           1  [STACK] unsigned char 
  3785 ;;  k               1  [STACK] unsigned char 
  3786 ;;  j               1  [STACK] unsigned char 
  3787 ;;  i               1  [STACK] unsigned char 
  3788 ;;  inp_index       1  [STACK] unsigned char 
  3789 ;;  mode            1  [STACK] enum E17013
  3790 ;;  i_ror           1  [STACK] unsigned char 
  3791 ;; Return value:  Size  Location     Type
  3792 ;;                  1  [STACK] void 
  3793 ;; Registers used:
  3794 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  3795 ;; Tracked objects:
  3796 ;;		On entry : 0/0
  3797 ;;		On exit  : 0/0
  3798 ;;		Unchanged: 0/0
  3799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3800 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3801 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3802 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3803 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3804 ;;Total ram usage:        0 bytes
  3805 ;; Hardware stack levels required when called:   28
  3806 ;; This function calls:
  3807 ;;		_SYSTEM_Initialize
  3808 ;;		_StartTimer
  3809 ;;		_TimerDone
  3810 ;;		_WaitMs
  3811 ;;		___fladd
  3812 ;;		___flge
  3813 ;;		___fltol
  3814 ;;		_calc_model_data
  3815 ;;		_calc_ror_data
  3816 ;;		_check_adc_scan
  3817 ;;		_check_enter_button
  3818 ;;		_check_help
  3819 ;;		_clear_adc_scan
  3820 ;;		_clear_hid_pflags
  3821 ;;		_conv_raw_result
  3822 ;;		_convert_adc_data
  3823 ;;		_eaDogM_WriteCommand
  3824 ;;		_esr_check
  3825 ;;		_fabsf
  3826 ;;		_get_raw_result
  3827 ;;		_get_switch
  3828 ;;		_get_vterm_ptr
  3829 ;;		_hid_display
  3830 ;;		_init_bsoc
  3831 ;;		_init_display
  3832 ;;		_init_port_dma
  3833 ;;		_lp_filter
  3834 ;;		_mode_lamp_dim
  3835 ;;		_set_display_info
  3836 ;;		_set_load_relay_one
  3837 ;;		_set_load_relay_two
  3838 ;;		_set_vterm
  3839 ;;		_spinners
  3840 ;;		_sprintf
  3841 ;;		_srand
  3842 ;;		_start_adc_scan
  3843 ;;		_start_switch_handler
  3844 ;;		_static_soc
  3845 ;;		_update_lcd
  3846 ;; This function is called by:
  3847 ;;		Startup code after reset
  3848 ;; This function uses a reentrant model
  3849 ;;
  3850                           
  3851                           	psect	text0
  3852  011244                     __ptext0:
  3853                           	opt callstack 0
  3854  011244                     _main:
  3855                           	opt callstack 0
  3856                           
  3857                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  3858  011244  0E11               	movlw	17
  3859  011246  26E1               	addwf	fsr1l,f,c
  3860  011248  0E00               	movlw	0
  3861  01124A  22E2               	addwfc	fsr1h,f,c
  3862                           
  3863                           ;main.c: 187:  UI_STATES mode;;main.c: 188:  uint8_t inp_index = 0, i = C_BATT, j = C_PV
      +                          , k = V_CC, i_ror;
  3864                           ;stkvar	_inp_index @ sp[(-17)+14]
  3865                           
  3866                           ;incstack = 0
  3867  01124C  0EFD               	movlw	-3
  3868  01124E  6AE3               	clrf	plusw1,c
  3869                           
  3870                           ;stkvar	_i @ sp[(-17)+13]
  3871  011250  0EFC               	movlw	-4
  3872  011252  6AE3               	clrf	plusw1,c
  3873                           
  3874                           ;stkvar	_j @ sp[(-17)+12]
  3875  011254  0EFB               	movlw	-5
  3876  011256  6AE3               	clrf	plusw1,c
  3877  011258  2AE3               	incf	plusw1,f,c
  3878                           
  3879                           ;stkvar	_k @ sp[(-17)+11]
  3880  01125A  0EFA               	movlw	-6
  3881  01125C  6AE3               	clrf	plusw1,c
  3882  01125E  82E3               	bsf	plusw1,1,c
  3883                           
  3884                           ;main.c: 191:  SYSTEM_Initialize();
  3885  011260  EC30  F0D8         	call	_SYSTEM_Initialize	;wreg free
  3886                           
  3887                           ; BSR set to: 60
  3888                           ;main.c: 194:  (INTCON0bits.GIEH = 1);
  3889  011264  8ED2               	bsf	210,7,c	;volatile
  3890                           
  3891                           ; BSR set to: 60
  3892                           ;main.c: 197:  (INTCON0bits.GIEL = 1);
  3893  011266  8CD2               	bsf	210,6,c	;volatile
  3894                           
  3895                           ; BSR set to: 60
  3896                           ;main.c: 199:  V.ui_state = UI_STATE_INIT;
  3897  011268  0101               	movlb	1	; () banked
  3898  01126A  6B30               	clrf	_V& (0+255),b	;volatile
  3899                           
  3900                           ; BSR set to: 1
  3901                           ;main.c: 204:  WaitMs(300);
  3902  01126C  0E2C               	movlw	44
  3903  01126E  6EE6               	movwf	postinc1,c
  3904  011270  0E01               	movlw	1
  3905  011272  6EE6               	movwf	postinc1,c
  3906  011274  EC82  F0DA         	call	_WaitMs	;wreg free
  3907                           
  3908                           ;main.c: 205:  if (PORTBbits.RB0) {
  3909  011278  A0CB               	btfss	203,0,c	;volatile
  3910  01127A  D004               	goto	l12815
  3911                           
  3912                           ;main.c: 206:   mode = UI_STATE_HOST;
  3913                           ;stkvar	_mode @ sp[(-17)+15]
  3914  01127C  0EFE               	movlw	-2
  3915  01127E  6AE3               	clrf	plusw1,c
  3916  011280  2AE3               	incf	plusw1,f,c
  3917                           
  3918                           ;main.c: 207:  } else {
  3919  011282  D004               	goto	l12817
  3920  011284                     l12815:
  3921                           
  3922                           ;main.c: 208:   mode = UI_STATE_LOG;
  3923                           ;stkvar	_mode @ sp[(-17)+15]
  3924  011284  0EFE               	movlw	-2
  3925  011286  6AE3               	clrf	plusw1,c
  3926  011288  80E3               	bsf	plusw1,0,c
  3927  01128A  82E3               	bsf	plusw1,1,c	;indir
  3928  01128C                     l12817:
  3929                           
  3930                           ;main.c: 211:  if (mode == UI_STATE_HOST) {
  3931                           ;stkvar	_mode @ sp[(-17)+15]
  3932  01128C  0EFE               	movlw	-2
  3933  01128E  04E3               	decf	plusw1,w,c
  3934  011290  A4D8               	btfss	status,2,c
  3935  011292  D007               	goto	l1324
  3936                           
  3937                           ;main.c: 212:   do { LATDbits.LATD0 = 1; } while(0);
  3938  011294  80BD               	bsf	189,0,c	;volatile
  3939                           
  3940                           ;main.c: 213:   V.mode_pwm = 70;
  3941  011296  0E00               	movlw	0
  3942  011298  0101               	movlb	1	; () banked
  3943  01129A  6FC6               	movwf	(_V+150)& (0+255),b	;volatile
  3944  01129C  0E46               	movlw	70
  3945  01129E  6FC5               	movwf	(_V+149)& (0+255),b	;volatile
  3946                           
  3947                           ;main.c: 214:  } else {
  3948  0112A0  D004               	goto	l12821
  3949  0112A2                     l1324:
  3950  0112A2  90BD               	bcf	189,0,c	;volatile
  3951                           
  3952                           ;main.c: 216:   V.mode_pwm = 0;
  3953  0112A4  0101               	movlb	1	; () banked
  3954  0112A6  6BC5               	clrf	(_V+149)& (0+255),b	;volatile
  3955  0112A8  6BC6               	clrf	(_V+150)& (0+255),b	;volatile
  3956  0112AA                     l12821:
  3957                           
  3958                           ; BSR set to: 1
  3959                           ;main.c: 218:  mode_lamp_dim(V.mode_pwm);
  3960  0112AA  0060  F717  FFE6   	movff	_V+149,postinc1
  3961  0112B0  0060  F71B  FFE6   	movff	_V+150,postinc1
  3962  0112B6  EC23  F0DE         	call	_mode_lamp_dim	;wreg free
  3963  0112BA  D32C               	goto	l12943
  3964  0112BC                     l12823:
  3965                           
  3966                           ; BSR set to: 1
  3967                           ;main.c: 226:    init_port_dma();
  3968  0112BC  ECEC  F0DA         	call	_init_port_dma	;wreg free
  3969                           
  3970                           ; BSR set to: 59
  3971                           ;main.c: 228:    init_display();
  3972  0112C0  EC9F  F0CE         	call	_init_display	;wreg free
  3973                           
  3974                           ; BSR set to: 61
  3975                           ;main.c: 229:    eaDogM_WriteCommand(0b00001100);
  3976  0112C4  0E0C               	movlw	12
  3977  0112C6  6EE6               	movwf	postinc1,c
  3978  0112C8  EC96  F0DE         	call	_eaDogM_WriteCommand	;wreg free
  3979                           
  3980                           ; BSR set to: 0
  3981                           ;main.c: 233:    set_load_relay_one(1);
  3982  0112CC  0E01               	movlw	1
  3983  0112CE  6EE6               	movwf	postinc1,c
  3984  0112D0  EC77  F0DE         	call	_set_load_relay_one	;wreg free
  3985                           
  3986                           ;main.c: 234:    set_load_relay_two(1);
  3987  0112D4  0E01               	movlw	1
  3988  0112D6  6EE6               	movwf	postinc1,c
  3989  0112D8  EC6F  F0DE         	call	_set_load_relay_two	;wreg free
  3990                           
  3991                           ;main.c: 236:    V.ui_state = mode;
  3992                           ;stkvar	_mode @ sp[(-17)+15]
  3993  0112DC  0EFE               	movlw	-2
  3994  0112DE  006F FF8C  F130    	movff	plusw1,_V	;volatile
  3995                           
  3996                           ;main.c: 237:    srand(1957);
  3997  0112E4  0EA5               	movlw	165
  3998  0112E6  6EE6               	movwf	postinc1,c
  3999  0112E8  0E07               	movlw	7
  4000  0112EA  6EE6               	movwf	postinc1,c
  4001  0112EC  ECB8  F0DA         	call	_srand	;wreg free
  4002                           
  4003                           ; BSR set to: 0
  4004                           ;main.c: 238:    set_vterm(0);
  4005  0112F0  0E00               	movlw	0
  4006  0112F2  6EE6               	movwf	postinc1,c
  4007  0112F4  ECCD  F0DD         	call	_set_vterm	;wreg free
  4008                           
  4009                           ;main.c: 239:    sprintf(get_vterm_ptr(0, 0), " MBMC SOLARMON  ");
  4010  0112F8  0E50               	movlw	low STR_1
  4011  0112FA  6EE6               	movwf	postinc1,c
  4012  0112FC  0EFF               	movlw	high STR_1
  4013  0112FE  6EE6               	movwf	postinc1,c
  4014  011300  0E00               	movlw	0
  4015  011302  6EE6               	movwf	postinc1,c
  4016  011304  0E00               	movlw	0
  4017  011306  6EE6               	movwf	postinc1,c
  4018  011308  EC4C  F0DB         	call	_get_vterm_ptr	;wreg free
  4019  01130C  0060  F007  FFE6   	movff	btemp,postinc1
  4020  011312  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4021  011318  0E04               	movlw	4
  4022  01131A  6EE6               	movwf	postinc1,c
  4023  01131C  EC21  F0CD         	call	_sprintf	;wreg free
  4024                           
  4025                           ; BSR set to: 0
  4026                           ;main.c: 240:    sprintf(get_vterm_ptr(1, 0), " Version %s   ", "1.0071");
  4027  011320  0ED0               	movlw	low STR_3
  4028  011322  6EE6               	movwf	postinc1,c
  4029  011324  0EFF               	movlw	high STR_3
  4030  011326  6EE6               	movwf	postinc1,c
  4031  011328  0EA2               	movlw	low STR_2
  4032  01132A  6EE6               	movwf	postinc1,c
  4033  01132C  0EFF               	movlw	high STR_2
  4034  01132E  6EE6               	movwf	postinc1,c
  4035  011330  0E00               	movlw	0
  4036  011332  6EE6               	movwf	postinc1,c
  4037  011334  0E01               	movlw	1
  4038  011336  6EE6               	movwf	postinc1,c
  4039  011338  EC4C  F0DB         	call	_get_vterm_ptr	;wreg free
  4040  01133C  0060  F007  FFE6   	movff	btemp,postinc1
  4041  011342  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4042  011348  0E06               	movlw	6
  4043  01134A  6EE6               	movwf	postinc1,c
  4044  01134C  EC21  F0CD         	call	_sprintf	;wreg free
  4045                           
  4046                           ; BSR set to: 0
  4047                           ;main.c: 241:    sprintf(get_vterm_ptr(2, 0), " NSASPOOK       ");
  4048  011350  0E1D               	movlw	low STR_4
  4049  011352  6EE6               	movwf	postinc1,c
  4050  011354  0EFF               	movlw	high STR_4
  4051  011356  6EE6               	movwf	postinc1,c
  4052  011358  0E00               	movlw	0
  4053  01135A  6EE6               	movwf	postinc1,c
  4054  01135C  0E02               	movlw	2
  4055  01135E  6EE6               	movwf	postinc1,c
  4056  011360  EC4C  F0DB         	call	_get_vterm_ptr	;wreg free
  4057  011364  0060  F007  FFE6   	movff	btemp,postinc1
  4058  01136A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4059  011370  0E04               	movlw	4
  4060  011372  6EE6               	movwf	postinc1,c
  4061  011374  EC21  F0CD         	call	_sprintf	;wreg free
  4062                           
  4063                           ; BSR set to: 0
  4064                           ;main.c: 242:    sprintf(get_vterm_ptr(0, 2), "                ");
  4065  011378  0E16               	movlw	low (STR_58+2)
  4066  01137A  6EE6               	movwf	postinc1,c
  4067  01137C  0EFE               	movlw	high (STR_58+2)
  4068  01137E  6EE6               	movwf	postinc1,c
  4069  011380  0E02               	movlw	2
  4070  011382  6EE6               	movwf	postinc1,c
  4071  011384  0E00               	movlw	0
  4072  011386  6EE6               	movwf	postinc1,c
  4073  011388  EC4C  F0DB         	call	_get_vterm_ptr	;wreg free
  4074  01138C  0060  F007  FFE6   	movff	btemp,postinc1
  4075  011392  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4076  011398  0E04               	movlw	4
  4077  01139A  6EE6               	movwf	postinc1,c
  4078  01139C  EC21  F0CD         	call	_sprintf	;wreg free
  4079                           
  4080                           ; BSR set to: 0
  4081                           ;main.c: 243:    sprintf(get_vterm_ptr(1, 2), "                ");
  4082  0113A0  0E16               	movlw	low (STR_58+2)
  4083  0113A2  6EE6               	movwf	postinc1,c
  4084  0113A4  0EFE               	movlw	high (STR_58+2)
  4085  0113A6  6EE6               	movwf	postinc1,c
  4086  0113A8  0E02               	movlw	2
  4087  0113AA  6EE6               	movwf	postinc1,c
  4088  0113AC  0E01               	movlw	1
  4089  0113AE  6EE6               	movwf	postinc1,c
  4090  0113B0  EC4C  F0DB         	call	_get_vterm_ptr	;wreg free
  4091  0113B4  0060  F007  FFE6   	movff	btemp,postinc1
  4092  0113BA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4093  0113C0  0E04               	movlw	4
  4094  0113C2  6EE6               	movwf	postinc1,c
  4095  0113C4  EC21  F0CD         	call	_sprintf	;wreg free
  4096                           
  4097                           ; BSR set to: 0
  4098                           ;main.c: 244:    sprintf(get_vterm_ptr(2, 2), "                ");
  4099  0113C8  0E16               	movlw	low (STR_58+2)
  4100  0113CA  6EE6               	movwf	postinc1,c
  4101  0113CC  0EFE               	movlw	high (STR_58+2)
  4102  0113CE  6EE6               	movwf	postinc1,c
  4103  0113D0  0E02               	movlw	2
  4104  0113D2  6EE6               	movwf	postinc1,c
  4105  0113D4  0E02               	movlw	2
  4106  0113D6  6EE6               	movwf	postinc1,c
  4107  0113D8  EC4C  F0DB         	call	_get_vterm_ptr	;wreg free
  4108  0113DC  0060  F007  FFE6   	movff	btemp,postinc1
  4109  0113E2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4110  0113E8  0E04               	movlw	4
  4111  0113EA  6EE6               	movwf	postinc1,c
  4112  0113EC  EC21  F0CD         	call	_sprintf	;wreg free
  4113                           
  4114                           ; BSR set to: 0
  4115                           ;main.c: 245:    update_lcd(0);
  4116  0113F0  0E00               	movlw	0
  4117  0113F2  6EE6               	movwf	postinc1,c
  4118  0113F4  EC99  F0CC         	call	_update_lcd	;wreg free
  4119                           
  4120                           ;main.c: 246:    WaitMs(1000);
  4121  0113F8  0EE8               	movlw	232
  4122  0113FA  6EE6               	movwf	postinc1,c
  4123  0113FC  0E03               	movlw	3
  4124  0113FE  6EE6               	movwf	postinc1,c
  4125  011400  EC82  F0DA         	call	_WaitMs	;wreg free
  4126                           
  4127                           ;main.c: 247:    StartTimer(TMR_DISPLAY, 250);
  4128  011404  0EFA               	movlw	250
  4129  011406  6EE6               	movwf	postinc1,c
  4130  011408  0E00               	movlw	0
  4131  01140A  6EE6               	movwf	postinc1,c
  4132  01140C  0E0A               	movlw	10
  4133  01140E  6EE6               	movwf	postinc1,c
  4134  011410  EC6E  F0D9         	call	_StartTimer	;wreg free
  4135                           
  4136                           ;main.c: 248:    StartTimer(TMR_ADC, 200);
  4137  011414  0EC8               	movlw	200
  4138  011416  6EE6               	movwf	postinc1,c
  4139  011418  0E00               	movlw	0
  4140  01141A  6EE6               	movwf	postinc1,c
  4141  01141C  0E01               	movlw	1
  4142  01141E  6EE6               	movwf	postinc1,c
  4143  011420  EC6E  F0D9         	call	_StartTimer	;wreg free
  4144                           
  4145                           ;main.c: 249:    StartTimer(TMR_INFO, 3000);
  4146  011424  0EB8               	movlw	184
  4147  011426  6EE6               	movwf	postinc1,c
  4148  011428  0E0B               	movlw	11
  4149  01142A  6EE6               	movwf	postinc1,c
  4150  01142C  0E07               	movlw	7
  4151  01142E  6EE6               	movwf	postinc1,c
  4152  011430  EC6E  F0D9         	call	_StartTimer	;wreg free
  4153                           
  4154                           ;main.c: 250:    StartTimer(TMR_FLIPPER, 1500);
  4155  011434  0EDC               	movlw	220
  4156  011436  6EE6               	movwf	postinc1,c
  4157  011438  0E05               	movlw	5
  4158  01143A  6EE6               	movwf	postinc1,c
  4159  01143C  0E0B               	movlw	11
  4160  01143E  6EE6               	movwf	postinc1,c
  4161  011440  EC6E  F0D9         	call	_StartTimer	;wreg free
  4162                           
  4163                           ;main.c: 251:    StartTimer(TMR_HELPDIS, 3000);
  4164  011444  0EB8               	movlw	184
  4165  011446  6EE6               	movwf	postinc1,c
  4166  011448  0E0B               	movlw	11
  4167  01144A  6EE6               	movwf	postinc1,c
  4168  01144C  0E09               	movlw	9
  4169  01144E  6EE6               	movwf	postinc1,c
  4170  011450  EC6E  F0D9         	call	_StartTimer	;wreg free
  4171                           
  4172                           ;main.c: 253:    start_adc_scan();
  4173  011454  EC70  F0D6         	call	_start_adc_scan	;wreg free
  4174                           
  4175                           ;main.c: 254:    start_switch_handler();
  4176  011458  EC9E  F0DD         	call	_start_switch_handler	;wreg free
  4177                           
  4178                           ; BSR set to: 57
  4179                           ;main.c: 255:    WaitMs(1000);
  4180  01145C  0EE8               	movlw	232
  4181  01145E  6EE6               	movwf	postinc1,c
  4182  011460  0E03               	movlw	3
  4183  011462  6EE6               	movwf	postinc1,c
  4184  011464  EC82  F0DA         	call	_WaitMs	;wreg free
  4185                           
  4186                           ;main.c: 260:    i_ror = 1;
  4187                           ;stkvar	_i_ror @ sp[(-17)+16]
  4188  011468  0EFF               	movlw	-1
  4189  01146A  6AE3               	clrf	plusw1,c
  4190  01146C  2AE3               	incf	plusw1,f,c
  4191  01146E                     l12873:
  4192                           
  4193                           ;main.c: 262:     calc_ror_data();
  4194  01146E  EC45  F0C4         	call	_calc_ror_data	;wreg free
  4195                           
  4196                           ;main.c: 263:     sprintf(get_vterm_ptr(1, 0), "BV %2.4f         ", conv_raw_result(V_BA
      +                          T, CONV));
  4197  011472  0E00               	movlw	0
  4198  011474  6EE6               	movwf	postinc1,c
  4199  011476  0E04               	movlw	4
  4200  011478  6EE6               	movwf	postinc1,c
  4201  01147A  EC0E  F0A8         	call	_conv_raw_result	;wreg free
  4202  01147E  0060  F007  FFE6   	movff	btemp,postinc1
  4203  011484  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4204  01148A  0060  F00F  FFE6   	movff	btemp+2,postinc1
  4205  011490  0060  F013  FFE6   	movff	btemp+3,postinc1
  4206  011496  0E0B               	movlw	low STR_8
  4207  011498  6EE6               	movwf	postinc1,c
  4208  01149A  0EFF               	movlw	high STR_8
  4209  01149C  6EE6               	movwf	postinc1,c
  4210  01149E  0E00               	movlw	0
  4211  0114A0  6EE6               	movwf	postinc1,c
  4212  0114A2  0E01               	movlw	1
  4213  0114A4  6EE6               	movwf	postinc1,c
  4214  0114A6  EC4C  F0DB         	call	_get_vterm_ptr	;wreg free
  4215  0114AA  0060  F007  FFE6   	movff	btemp,postinc1
  4216  0114B0  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4217  0114B6  0E08               	movlw	8
  4218  0114B8  6EE6               	movwf	postinc1,c
  4219  0114BA  EC21  F0CD         	call	_sprintf	;wreg free
  4220                           
  4221                           ; BSR set to: 0
  4222                           ;main.c: 264:     sprintf(get_vterm_ptr(2, 0), "S S%cC %d %2.4f       ", spinners(5, 0),
      +                           i_ror, C.bv_ror);
  4223  0114BE  EE21  F36B         	lfsr	2,_C+108	;volatile
  4224  0114C2  006F FF7B FFE6     	movff	postinc2,postinc1
  4225  0114C8  006F FF7B FFE6     	movff	postinc2,postinc1
  4226  0114CE  006F FF7B FFE6     	movff	postinc2,postinc1
  4227  0114D4  006F FF7B FFE6     	movff	postinc2,postinc1
  4228                           
  4229                           ;stkvar	_i_ror @ sp[(-21)+16]
  4230  0114DA  0EFB               	movlw	-5
  4231  0114DC  50E3               	movf	plusw1,w,c
  4232  0114DE  6EE6               	movwf	postinc1,c
  4233  0114E0  0E00               	movlw	0
  4234  0114E2  6EE6               	movwf	postinc1,c
  4235  0114E4  0E00               	movlw	0
  4236  0114E6  6EE6               	movwf	postinc1,c
  4237  0114E8  0E05               	movlw	5
  4238  0114EA  6EE6               	movwf	postinc1,c
  4239  0114EC  EC14  F0CF         	call	_spinners	;wreg free
  4240  0114F0  5001               	movf	btemp^0,w,c
  4241  0114F2  6EE6               	movwf	postinc1,c
  4242  0114F4  0E00               	movlw	0
  4243  0114F6  6EE6               	movwf	postinc1,c
  4244  0114F8  0E06               	movlw	low STR_9
  4245  0114FA  6EE6               	movwf	postinc1,c
  4246  0114FC  0EFD               	movlw	high STR_9
  4247  0114FE  6EE6               	movwf	postinc1,c
  4248  011500  0E00               	movlw	0
  4249  011502  6EE6               	movwf	postinc1,c
  4250  011504  0E02               	movlw	2
  4251  011506  6EE6               	movwf	postinc1,c
  4252  011508  EC4C  F0DB         	call	_get_vterm_ptr	;wreg free
  4253  01150C  0060  F007  FFE6   	movff	btemp,postinc1
  4254  011512  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4255  011518  0E0C               	movlw	12
  4256  01151A  6EE6               	movwf	postinc1,c
  4257  01151C  EC21  F0CD         	call	_sprintf	;wreg free
  4258                           
  4259                           ; BSR set to: 0
  4260                           ;main.c: 265:     update_lcd(0);
  4261  011520  0E00               	movlw	0
  4262  011522  6EE6               	movwf	postinc1,c
  4263  011524  EC99  F0CC         	call	_update_lcd	;wreg free
  4264                           
  4265                           ;main.c: 266:     WaitMs(2000);
  4266  011528  0ED0               	movlw	208
  4267  01152A  6EE6               	movwf	postinc1,c
  4268  01152C  0E07               	movlw	7
  4269  01152E  6EE6               	movwf	postinc1,c
  4270  011530  EC82  F0DA         	call	_WaitMs	;wreg free
  4271                           
  4272                           ;main.c: 267:     clear_adc_scan();
  4273  011534  ECEB  F0DE         	call	_clear_adc_scan	;wreg free
  4274                           
  4275                           ; BSR set to: 1
  4276                           ;main.c: 268:     start_adc_scan();
  4277  011538  EC70  F0D6         	call	_start_adc_scan	;wreg free
  4278                           
  4279                           ;main.c: 269:     WaitMs(500);
  4280  01153C  0EF4               	movlw	244
  4281  01153E  6EE6               	movwf	postinc1,c
  4282  011540  0E01               	movlw	1
  4283  011542  6EE6               	movwf	postinc1,c
  4284  011544  EC82  F0DA         	call	_WaitMs	;wreg free
  4285                           
  4286                           ;main.c: 270:    } while ((i_ror++ < 30) && (C.bv_ror > 0.0140));
  4287                           ;stkvar	_i_ror @ sp[(-17)+16]
  4288  011548  0EFF               	movlw	-1
  4289  01154A  006F FF8C  F00C    	movff	plusw1,btemp+11
  4290  011550  2A0C               	incf	(btemp+11)^0,f,c
  4291  011552  0060  F033  FFE3   	movff	btemp+11,plusw1
  4292  011558  060C               	decf	(btemp+11)^0,f,c
  4293  01155A  0E1E               	movlw	30
  4294  01155C  600C               	cpfslt	(btemp+11)^0,c
  4295  01155E  D01A               	goto	u12480
  4296  011560  EE21  F36B         	lfsr	2,_C+108	;volatile
  4297  011564  006F FF7B FFE6     	movff	postinc2,postinc1
  4298  01156A  006F FF7B FFE6     	movff	postinc2,postinc1
  4299  011570  006F FF7B FFE6     	movff	postinc2,postinc1
  4300  011576  006F FF7B FFE6     	movff	postinc2,postinc1
  4301  01157C  0E42               	movlw	66
  4302  01157E  6EE6               	movwf	postinc1,c
  4303  011580  0E60               	movlw	96
  4304  011582  6EE6               	movwf	postinc1,c
  4305  011584  0E65               	movlw	101
  4306  011586  6EE6               	movwf	postinc1,c
  4307  011588  0E3C               	movlw	60
  4308  01158A  6EE6               	movwf	postinc1,c
  4309  01158C  EC81  F0C6         	call	___flge	;wreg free
  4310  011590  A001               	btfss	btemp& (0+255),0,c
  4311  011592  D76D               	goto	l12873
  4312  011594                     u12480:
  4313                           
  4314                           ;main.c: 272:    static_soc();
  4315  011594  ECEE  F0D9         	call	_static_soc	;wreg free
  4316                           
  4317                           ;main.c: 273:    init_bsoc();
  4318  011598  EC9C  F0BD         	call	_init_bsoc	;wreg free
  4319                           
  4320                           ;main.c: 274:    set_load_relay_one(0);
  4321  01159C  0E00               	movlw	0
  4322  01159E  6EE6               	movwf	postinc1,c
  4323  0115A0  EC77  F0DE         	call	_set_load_relay_one	;wreg free
  4324                           
  4325                           ;main.c: 275:    set_load_relay_two(0);
  4326  0115A4  0E00               	movlw	0
  4327  0115A6  6EE6               	movwf	postinc1,c
  4328  0115A8  EC6F  F0DE         	call	_set_load_relay_two	;wreg free
  4329                           
  4330                           ;main.c: 276:    sprintf(get_vterm_ptr(0, 0), "Static SOC %d        ", C.soc);
  4331  0115AC  EE21  F3B1         	lfsr	2,_C+178	;volatile
  4332  0115B0  006F FF78  F00B    	movff	postinc2,btemp+10
  4333  0115B6  006F FF74  F00C    	movff	postdec2,btemp+11
  4334  0115BC  0060  F02F  FFE6   	movff	btemp+10,postinc1
  4335  0115C2  0060  F033  FFE6   	movff	btemp+11,postinc1
  4336  0115C8  0E33               	movlw	low STR_10
  4337  0115CA  6EE6               	movwf	postinc1,c
  4338  0115CC  0EFD               	movlw	high STR_10
  4339  0115CE  6EE6               	movwf	postinc1,c
  4340  0115D0  0E00               	movlw	0
  4341  0115D2  6EE6               	movwf	postinc1,c
  4342  0115D4  0E00               	movlw	0
  4343  0115D6  6EE6               	movwf	postinc1,c
  4344  0115D8  EC4C  F0DB         	call	_get_vterm_ptr	;wreg free
  4345  0115DC  0060  F007  FFE6   	movff	btemp,postinc1
  4346  0115E2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4347  0115E8  0E06               	movlw	6
  4348  0115EA  6EE6               	movwf	postinc1,c
  4349  0115EC  EC21  F0CD         	call	_sprintf	;wreg free
  4350                           
  4351                           ; BSR set to: 0
  4352                           ;main.c: 277:    sprintf(get_vterm_ptr(1, 0), "Battery Ah %3.2f     ", C.dynamic_ah);
  4353  0115F0  EE21  F38F         	lfsr	2,_C+144	;volatile
  4354  0115F4  006F FF7B FFE6     	movff	postinc2,postinc1
  4355  0115FA  006F FF7B FFE6     	movff	postinc2,postinc1
  4356  011600  006F FF7B FFE6     	movff	postinc2,postinc1
  4357  011606  006F FF7B FFE6     	movff	postinc2,postinc1
  4358  01160C  0E49               	movlw	low STR_11
  4359  01160E  6EE6               	movwf	postinc1,c
  4360  011610  0EFD               	movlw	high STR_11
  4361  011612  6EE6               	movwf	postinc1,c
  4362  011614  0E00               	movlw	0
  4363  011616  6EE6               	movwf	postinc1,c
  4364  011618  0E01               	movlw	1
  4365  01161A  6EE6               	movwf	postinc1,c
  4366  01161C  EC4C  F0DB         	call	_get_vterm_ptr	;wreg free
  4367  011620  0060  F007  FFE6   	movff	btemp,postinc1
  4368  011626  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4369  01162C  0E08               	movlw	8
  4370  01162E  6EE6               	movwf	postinc1,c
  4371  011630  EC21  F0CD         	call	_sprintf	;wreg free
  4372                           
  4373                           ; BSR set to: 0
  4374                           ;main.c: 278:    update_lcd(0);
  4375  011634  0E00               	movlw	0
  4376  011636  6EE6               	movwf	postinc1,c
  4377  011638  EC99  F0CC         	call	_update_lcd	;wreg free
  4378                           
  4379                           ;main.c: 279:    WaitMs(2000);
  4380  01163C  0ED0               	movlw	208
  4381  01163E  6EE6               	movwf	postinc1,c
  4382  011640  0E07               	movlw	7
  4383  011642  6EE6               	movwf	postinc1,c
  4384  011644  EC82  F0DA         	call	_WaitMs	;wreg free
  4385                           
  4386                           ;main.c: 280:    sprintf(get_vterm_ptr(0, 0), "Battery ESR     ");
  4387  011648  0E2E               	movlw	low STR_12
  4388  01164A  6EE6               	movwf	postinc1,c
  4389  01164C  0EFF               	movlw	high STR_12
  4390  01164E  6EE6               	movwf	postinc1,c
  4391  011650  0E00               	movlw	0
  4392  011652  6EE6               	movwf	postinc1,c
  4393  011654  0E00               	movlw	0
  4394  011656  6EE6               	movwf	postinc1,c
  4395  011658  EC4C  F0DB         	call	_get_vterm_ptr	;wreg free
  4396  01165C  0060  F007  FFE6   	movff	btemp,postinc1
  4397  011662  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4398  011668  0E04               	movlw	4
  4399  01166A  6EE6               	movwf	postinc1,c
  4400  01166C  EC21  F0CD         	call	_sprintf	;wreg free
  4401                           
  4402                           ; BSR set to: 0
  4403                           ;main.c: 281:    sprintf(get_vterm_ptr(1, 0), "Calculation     ");
  4404  011670  0E3F               	movlw	low STR_13
  4405  011672  6EE6               	movwf	postinc1,c
  4406  011674  0EFF               	movlw	high STR_13
  4407  011676  6EE6               	movwf	postinc1,c
  4408  011678  0E00               	movlw	0
  4409  01167A  6EE6               	movwf	postinc1,c
  4410  01167C  0E01               	movlw	1
  4411  01167E  6EE6               	movwf	postinc1,c
  4412  011680  EC4C  F0DB         	call	_get_vterm_ptr	;wreg free
  4413  011684  0060  F007  FFE6   	movff	btemp,postinc1
  4414  01168A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4415  011690  0E04               	movlw	4
  4416  011692  6EE6               	movwf	postinc1,c
  4417  011694  EC21  F0CD         	call	_sprintf	;wreg free
  4418                           
  4419                           ; BSR set to: 0
  4420                           ;main.c: 282:    sprintf(get_vterm_ptr(2, 0), "Check 30 seconds");
  4421  011698  0E72               	movlw	low STR_14
  4422  01169A  6EE6               	movwf	postinc1,c
  4423  01169C  0EFF               	movlw	high STR_14
  4424  01169E  6EE6               	movwf	postinc1,c
  4425  0116A0  0E00               	movlw	0
  4426  0116A2  6EE6               	movwf	postinc1,c
  4427  0116A4  0E02               	movlw	2
  4428  0116A6  6EE6               	movwf	postinc1,c
  4429  0116A8  EC4C  F0DB         	call	_get_vterm_ptr	;wreg free
  4430  0116AC  0060  F007  FFE6   	movff	btemp,postinc1
  4431  0116B2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4432  0116B8  0E04               	movlw	4
  4433  0116BA  6EE6               	movwf	postinc1,c
  4434  0116BC  EC21  F0CD         	call	_sprintf	;wreg free
  4435                           
  4436                           ; BSR set to: 0
  4437                           ;main.c: 283:    update_lcd(0);
  4438  0116C0  0E00               	movlw	0
  4439  0116C2  6EE6               	movwf	postinc1,c
  4440  0116C4  EC99  F0CC         	call	_update_lcd	;wreg free
  4441                           
  4442                           ;main.c: 284:    uint16_t i_esr = 1;
  4443  0116C8  0E01               	movlw	1
  4444  0116CA  6E0B               	movwf	(btemp+10)^0,c
  4445  0116CC  0E00               	movlw	0
  4446  0116CE  6E0C               	movwf	(btemp+11)^0,c
  4447                           
  4448                           ;stkvar	_i_esr @ sp[(-17)+8]
  4449  0116D0  0EF7               	movlw	-9
  4450  0116D2  0060  F02F  FFE3   	movff	btemp+10,plusw1
  4451  0116D8  0EF8               	movlw	-8
  4452  0116DA  0060  F033  FFE3   	movff	btemp+11,plusw1
  4453                           
  4454                           ;main.c: 286:    float esr_temp;;main.c: 287:    while ((esr_temp = esr_check(0)) < 0.0)
      +                           {
  4455  0116E0  D06D               	goto	l12933
  4456  0116E2                     l12921:
  4457                           
  4458                           ;main.c: 288:     WaitMs(110);
  4459  0116E2  0E6E               	movlw	110
  4460  0116E4  6EE6               	movwf	postinc1,c
  4461  0116E6  0E00               	movlw	0
  4462  0116E8  6EE6               	movwf	postinc1,c
  4463  0116EA  EC82  F0DA         	call	_WaitMs	;wreg free
  4464                           
  4465                           ;main.c: 289:     shape = (uint8_t) fabsf(esr_temp);
  4466                           ;stkvar	_esr_temp @ sp[(-17)+4]
  4467  0116EE  0EF3               	movlw	-13
  4468  0116F0  006F FF8F FFE6     	movff	plusw1,postinc1
  4469  0116F6  006F FF8F FFE6     	movff	plusw1,postinc1
  4470  0116FC  006F FF8F FFE6     	movff	plusw1,postinc1
  4471  011702  006F FF8F FFE6     	movff	plusw1,postinc1
  4472  011708  EC8B  F0D1         	call	_fabsf	;wreg free
  4473  01170C  0060  F007  FFE6   	movff	btemp,postinc1
  4474  011712  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4475  011718  0060  F00F  FFE6   	movff	btemp+2,postinc1
  4476  01171E  0060  F013  FFE6   	movff	btemp+3,postinc1
  4477  011724  ECC8  F0C5         	call	___fltol	;wreg free
  4478  011728  0060  F004  F00C   	movff	btemp,btemp+11
  4479                           
  4480                           ;stkvar	_shape @ sp[(-17)+10]
  4481  01172E  0EF9               	movlw	-7
  4482  011730  0060  F033  FFE3   	movff	btemp+11,plusw1
  4483                           
  4484                           ;main.c: 290:     sprintf(get_vterm_ptr(2, 0), "Checking %c %c      ", spinners(0, 0), s
      +                          pinners(shape, 0));
  4485  011736  0E00               	movlw	0
  4486  011738  6EE6               	movwf	postinc1,c
  4487                           
  4488                           ;stkvar	_shape @ sp[(-18)+10]
  4489  01173A  0EF8               	movlw	-8
  4490  01173C  50E3               	movf	plusw1,w,c
  4491  01173E  6EE6               	movwf	postinc1,c
  4492  011740  EC14  F0CF         	call	_spinners	;wreg free
  4493  011744  5001               	movf	btemp^0,w,c
  4494  011746  6EE6               	movwf	postinc1,c
  4495  011748  0E00               	movlw	0
  4496  01174A  6EE6               	movwf	postinc1,c
  4497  01174C  0E00               	movlw	0
  4498  01174E  6EE6               	movwf	postinc1,c
  4499  011750  0E00               	movlw	0
  4500  011752  6EE6               	movwf	postinc1,c
  4501  011754  EC14  F0CF         	call	_spinners	;wreg free
  4502  011758  5001               	movf	btemp^0,w,c
  4503  01175A  6EE6               	movwf	postinc1,c
  4504  01175C  0E00               	movlw	0
  4505  01175E  6EE6               	movwf	postinc1,c
  4506  011760  0E5F               	movlw	low STR_15
  4507  011762  6EE6               	movwf	postinc1,c
  4508  011764  0EFD               	movlw	high STR_15
  4509  011766  6EE6               	movwf	postinc1,c
  4510  011768  0E00               	movlw	0
  4511  01176A  6EE6               	movwf	postinc1,c
  4512  01176C  0E02               	movlw	2
  4513  01176E  6EE6               	movwf	postinc1,c
  4514  011770  EC4C  F0DB         	call	_get_vterm_ptr	;wreg free
  4515  011774  0060  F007  FFE6   	movff	btemp,postinc1
  4516  01177A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4517  011780  0E08               	movlw	8
  4518  011782  6EE6               	movwf	postinc1,c
  4519  011784  EC21  F0CD         	call	_sprintf	;wreg free
  4520                           
  4521                           ; BSR set to: 0
  4522                           ;main.c: 291:     update_lcd(0);
  4523  011788  0E00               	movlw	0
  4524  01178A  6EE6               	movwf	postinc1,c
  4525  01178C  EC99  F0CC         	call	_update_lcd	;wreg free
  4526                           
  4527                           ;main.c: 293:     if (i_esr++ > 512)
  4528                           ;stkvar	_i_esr @ sp[(-17)+8]
  4529  011790  50E1               	movf	fsr1l,w,c
  4530  011792  0FF7               	addlw	-9
  4531  011794  6ED9               	movwf	fsr2l,c
  4532  011796  50E2               	movf	fsr1h,w,c
  4533  011798  6EDA               	movwf	fsr2h,c
  4534  01179A  0EFF               	movlw	255
  4535  01179C  22DA               	addwfc	fsr2h,f,c
  4536  01179E  006F FF7C  F00B    	movff	indf2,btemp+10
  4537  0117A4  0E01               	movlw	1
  4538  0117A6  26DE               	addwf	postinc2,f,c
  4539  0117A8  006F FF7C  F00C    	movff	indf2,btemp+11
  4540  0117AE  0E00               	movlw	0
  4541  0117B0  22DD               	addwfc	postdec2,f,c
  4542  0117B2  040B               	decf	(btemp+10)^0,w,c
  4543  0117B4  0E02               	movlw	2
  4544  0117B6  580C               	subwfb	(btemp+11)^0,w,c
  4545  0117B8  B0D8               	btfsc	status,0,c
  4546  0117BA  D017               	goto	u12500
  4547  0117BC                     l12933:
  4548                           
  4549                           ;main.c: 287:    while ((esr_temp = esr_check(0)) < 0.0) {
  4550  0117BC  0E00               	movlw	0
  4551  0117BE  6EE6               	movwf	postinc1,c
  4552  0117C0  EC3B  F0B7         	call	_esr_check	;wreg free
  4553                           
  4554                           ;stkvar	_esr_temp @ sp[(-17)+4]
  4555  0117C4  0EF3               	movlw	-13
  4556  0117C6  0060  F007  FFE3   	movff	btemp,plusw1
  4557  0117CC  0EF4               	movlw	-12
  4558  0117CE  0060  F00B  FFE3   	movff	btemp+1,plusw1
  4559  0117D4  0EF5               	movlw	-11
  4560  0117D6  0060  F00F  FFE3   	movff	btemp+2,plusw1
  4561  0117DC  0EF6               	movlw	-10
  4562  0117DE  0060  F013  FFE3   	movff	btemp+3,plusw1
  4563  0117E4  0EF6               	movlw	-10
  4564  0117E6  BEE3               	btfsc	plusw1,7,c
  4565  0117E8  D77C               	goto	l12921
  4566  0117EA                     u12500:
  4567                           
  4568                           ;main.c: 296:    sprintf(get_vterm_ptr(0, 0), "ESR  %2.6f           ", C.esr);
  4569  0117EA  EE21  F387         	lfsr	2,_C+136	;volatile
  4570  0117EE  006F FF7B FFE6     	movff	postinc2,postinc1
  4571  0117F4  006F FF7B FFE6     	movff	postinc2,postinc1
  4572  0117FA  006F FF7B FFE6     	movff	postinc2,postinc1
  4573  011800  006F FF7B FFE6     	movff	postinc2,postinc1
  4574  011806  0E1D               	movlw	low STR_16
  4575  011808  6EE6               	movwf	postinc1,c
  4576  01180A  0EFD               	movlw	high STR_16
  4577  01180C  6EE6               	movwf	postinc1,c
  4578  01180E  0E00               	movlw	0
  4579  011810  6EE6               	movwf	postinc1,c
  4580  011812  0E00               	movlw	0
  4581  011814  6EE6               	movwf	postinc1,c
  4582  011816  EC4C  F0DB         	call	_get_vterm_ptr	;wreg free
  4583  01181A  0060  F007  FFE6   	movff	btemp,postinc1
  4584  011820  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4585  011826  0E08               	movlw	8
  4586  011828  6EE6               	movwf	postinc1,c
  4587  01182A  EC21  F0CD         	call	_sprintf	;wreg free
  4588                           
  4589                           ;main.c: 297:    sprintf(get_vterm_ptr(1, 0), "R1 %2.3f %3.4f           ", C.bv_one_load
      +                          , C.load_i1);
  4590  01182E  EE22  F009         	lfsr	2,_C+266	;volatile
  4591  011832  006F FF7B FFE6     	movff	postinc2,postinc1
  4592  011838  006F FF7B FFE6     	movff	postinc2,postinc1
  4593  01183E  006F FF7B FFE6     	movff	postinc2,postinc1
  4594  011844  006F FF7B FFE6     	movff	postinc2,postinc1
  4595  01184A  EE22  F015         	lfsr	2,_C+278	;volatile
  4596  01184E  006F FF7B FFE6     	movff	postinc2,postinc1
  4597  011854  006F FF7B FFE6     	movff	postinc2,postinc1
  4598  01185A  006F FF7B FFE6     	movff	postinc2,postinc1
  4599  011860  006F FF7B FFE6     	movff	postinc2,postinc1
  4600  011866  0EBA               	movlw	low STR_17
  4601  011868  6EE6               	movwf	postinc1,c
  4602  01186A  0EFC               	movlw	high STR_17
  4603  01186C  6EE6               	movwf	postinc1,c
  4604  01186E  0E00               	movlw	0
  4605  011870  6EE6               	movwf	postinc1,c
  4606  011872  0E01               	movlw	1
  4607  011874  6EE6               	movwf	postinc1,c
  4608  011876  EC4C  F0DB         	call	_get_vterm_ptr	;wreg free
  4609  01187A  0060  F007  FFE6   	movff	btemp,postinc1
  4610  011880  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4611  011886  0E0C               	movlw	12
  4612  011888  6EE6               	movwf	postinc1,c
  4613  01188A  EC21  F0CD         	call	_sprintf	;wreg free
  4614                           
  4615                           ;main.c: 298:    sprintf(get_vterm_ptr(2, 0), "R2 %2.3f %3.4f           ", C.bv_full_loa
      +                          d, C.load_i2);
  4616  01188E  EE22  F00D         	lfsr	2,_C+270	;volatile
  4617  011892  006F FF7B FFE6     	movff	postinc2,postinc1
  4618  011898  006F FF7B FFE6     	movff	postinc2,postinc1
  4619  01189E  006F FF7B FFE6     	movff	postinc2,postinc1
  4620  0118A4  006F FF7B FFE6     	movff	postinc2,postinc1
  4621  0118AA  EE22  F019         	lfsr	2,_C+282	;volatile
  4622  0118AE  006F FF7B FFE6     	movff	postinc2,postinc1
  4623  0118B4  006F FF7B FFE6     	movff	postinc2,postinc1
  4624  0118BA  006F FF7B FFE6     	movff	postinc2,postinc1
  4625  0118C0  006F FF7B FFE6     	movff	postinc2,postinc1
  4626  0118C6  0ED4               	movlw	low STR_18
  4627  0118C8  6EE6               	movwf	postinc1,c
  4628  0118CA  0EFC               	movlw	high STR_18
  4629  0118CC  6EE6               	movwf	postinc1,c
  4630  0118CE  0E00               	movlw	0
  4631  0118D0  6EE6               	movwf	postinc1,c
  4632  0118D2  0E02               	movlw	2
  4633  0118D4  6EE6               	movwf	postinc1,c
  4634  0118D6  EC4C  F0DB         	call	_get_vterm_ptr	;wreg free
  4635  0118DA  0060  F007  FFE6   	movff	btemp,postinc1
  4636  0118E0  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4637  0118E6  0E0C               	movlw	12
  4638  0118E8  6EE6               	movwf	postinc1,c
  4639  0118EA  EC21  F0CD         	call	_sprintf	;wreg free
  4640                           
  4641                           ;main.c: 299:    update_lcd(0);
  4642  0118EE  0E00               	movlw	0
  4643  0118F0  6EE6               	movwf	postinc1,c
  4644  0118F2  EC99  F0CC         	call	_update_lcd	;wreg free
  4645                           
  4646                           ;main.c: 300:    WaitMs(5000);
  4647  0118F6  0E88               	movlw	136
  4648  0118F8  6EE6               	movwf	postinc1,c
  4649  0118FA  0E13               	movlw	19
  4650  0118FC  6EE6               	movwf	postinc1,c
  4651  0118FE  EC82  F0DA         	call	_WaitMs	;wreg free
  4652                           
  4653                           ;main.c: 301:    V.system_stable = 1;
  4654  011902  0E01               	movlw	1
  4655  011904  0101               	movlb	1	; () banked
  4656  011906  6FDE               	movwf	(_V+174)& (0+255),b	;volatile
  4657                           
  4658                           ;main.c: 302:    break;
  4659  011908  D01C               	goto	l12945
  4660  01190A                     l1340:
  4661                           
  4662                           ; BSR set to: 1
  4663                           ;main.c: 308:    P.SYSTEM_STABLE = 1;
  4664  01190A  0100               	movlb	0	; () banked
  4665  01190C  819F               	bsf	(_P+1)& (0+255),0,b	;volatile
  4666                           
  4667                           ;main.c: 309:    break;
  4668  01190E  D019               	goto	l12945
  4669  011910                     l1342:
  4670                           
  4671                           ; BSR set to: 1
  4672                           ;main.c: 312:    V.ui_state = UI_STATE_INIT;
  4673  011910  6B30               	clrf	_V& (0+255),b	;volatile
  4674                           
  4675                           ;main.c: 313:    break;
  4676  011912  D017               	goto	l12945
  4677  011914                     l12943:
  4678  011914  0101               	movlb	1	; () banked
  4679  011916  5130               	movf	_V& (0+255),w,b	;volatile
  4680  011918  6E0B               	movwf	(btemp+10)^0,c
  4681  01191A  6A0C               	clrf	(btemp+11)^0,c
  4682                           
  4683                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4684                           ; Switch size 1, requested type "simple"
  4685                           ; Number of cases is 1, Range of values is 0 to 0
  4686                           ; switch strategies available:
  4687                           ; Name         Instructions Cycles
  4688                           ; simple_byte            4     3 (average)
  4689                           ;	Chosen strategy is simple_byte
  4690  01191C  500C               	movf	(btemp+11)^0,w,c
  4691  01191E  0A00               	xorlw	0	; case 0
  4692  011920  A4D8               	btfss	status,2,c
  4693  011922  D7F6               	goto	l1342
  4694                           
  4695                           ; BSR set to: 1
  4696                           ; Switch size 1, requested type "simple"
  4697                           ; Number of cases is 5, Range of values is 0 to 5
  4698                           ; switch strategies available:
  4699                           ; Name         Instructions Cycles
  4700                           ; simple_byte           16     9 (average)
  4701                           ;	Chosen strategy is simple_byte
  4702  011924  500B               	movf	(btemp+10)^0,w,c
  4703  011926  0A00               	xorlw	0	; case 0
  4704  011928  B4D8               	btfsc	status,2,c
  4705  01192A  D4C8               	goto	l12823
  4706  01192C  0A01               	xorlw	1	; case 1
  4707  01192E  B4D8               	btfsc	status,2,c
  4708  011930  D008               	goto	l12945
  4709  011932  0A02               	xorlw	2	; case 3
  4710  011934  B4D8               	btfsc	status,2,c
  4711  011936  D005               	goto	l12945
  4712  011938  0A07               	xorlw	7	; case 4
  4713  01193A  B4D8               	btfsc	status,2,c
  4714  01193C  D7E6               	goto	l1340
  4715  01193E  0A01               	xorlw	1	; case 5
  4716  011940  D7E7               	goto	l1342
  4717  011942                     l12945:
  4718                           
  4719                           ;main.c: 316:   if (TimerDone(TMR_ADC) && check_adc_scan()) {
  4720  011942  0E01               	movlw	1
  4721  011944  6EE6               	movwf	postinc1,c
  4722  011946  ECF7  F0DB         	call	_TimerDone	;wreg free
  4723  01194A  5001               	movf	btemp^0,w,c
  4724  01194C  B4D8               	btfsc	status,2,c
  4725  01194E  D013               	goto	l12957
  4726  011950  ECDB  F0DE         	call	_check_adc_scan	;wreg free
  4727  011954  5001               	movf	btemp^0,w,c
  4728  011956  B4D8               	btfsc	status,2,c
  4729  011958  D00E               	goto	l12957
  4730                           
  4731                           ;main.c: 320:    convert_adc_data();
  4732  01195A  EC2F  F0D1         	call	_convert_adc_data	;wreg free
  4733                           
  4734                           ;main.c: 324:    clear_adc_scan();
  4735  01195E  ECEB  F0DE         	call	_clear_adc_scan	;wreg free
  4736                           
  4737                           ; BSR set to: 1
  4738                           ;main.c: 325:    start_adc_scan();
  4739  011962  EC70  F0D6         	call	_start_adc_scan	;wreg free
  4740                           
  4741                           ;main.c: 326:    StartTimer(TMR_ADC, 200);
  4742  011966  0EC8               	movlw	200
  4743  011968  6EE6               	movwf	postinc1,c
  4744  01196A  0E00               	movlw	0
  4745  01196C  6EE6               	movwf	postinc1,c
  4746  01196E  0E01               	movlw	1
  4747  011970  6EE6               	movwf	postinc1,c
  4748  011972  EC6E  F0D9         	call	_StartTimer	;wreg free
  4749  011976                     l12957:
  4750                           
  4751                           ;main.c: 333:   if (TimerDone(TMR_DISPLAY)) {
  4752                           
  4753                           ;main.c: 329:   if (V.ticks) {
  4754  011976  0E0A               	movlw	10
  4755  011978  6EE6               	movwf	postinc1,c
  4756  01197A  ECF7  F0DB         	call	_TimerDone	;wreg free
  4757  01197E  5001               	movf	btemp^0,w,c
  4758  011980  B4D8               	btfsc	status,2,c
  4759  011982  EF3F  F091         	goto	l13033
  4760                           
  4761                           ;main.c: 334:    if (TimerDone(TMR_HELPDIS)) {
  4762  011986  0E09               	movlw	9
  4763  011988  6EE6               	movwf	postinc1,c
  4764  01198A  ECF7  F0DB         	call	_TimerDone	;wreg free
  4765  01198E  5001               	movf	btemp^0,w,c
  4766  011990  B4D8               	btfsc	status,2,c
  4767  011992  D004               	goto	l12965
  4768                           
  4769                           ;main.c: 335:     set_display_info(DIS_STR);
  4770  011994  0E00               	movlw	0
  4771  011996  6EE6               	movwf	postinc1,c
  4772  011998  ECDC  F0DD         	call	_set_display_info	;wreg free
  4773  01199C                     l12965:
  4774                           
  4775                           ;main.c: 337:    calc_model_data();
  4776  01199C  ECD8  F0AC         	call	_calc_model_data	;wreg free
  4777                           
  4778                           ; BSR set to: 57
  4779                           ;main.c: 344:     hid_display(&H);
  4780                           
  4781                           ;main.c: 339:    if (0) {
  4782  0119A0  0EF7               	movlw	_H& (0+255)
  4783  0119A2  6EE6               	movwf	postinc1,c
  4784  0119A4  ECA6  F0CD         	call	_hid_display	;wreg free
  4785                           
  4786                           ;main.c: 345:     switch (H.hid_display) {
  4787  0119A8  EFEE  F090         	goto	l13013
  4788  0119AC                     l1350:
  4789                           
  4790                           ; BSR set to: 0
  4791                           ;main.c: 347:      V.calib = 0;
  4792  0119AC  0101               	movlb	1	; () banked
  4793  0119AE  6BDC               	clrf	(_V+172)& (0+255),b	;volatile
  4794                           
  4795                           ; BSR set to: 1
  4796                           ;main.c: 348:      sprintf(get_vterm_ptr(0, 0), "PV %c PWR %3.2f    ", (C.day) ? 'D' : '
      +                           ', C.p_pv);
  4797  0119B0  EE22  F01D         	lfsr	2,_C+286	;volatile
  4798  0119B4  50DF               	movf	indf2,w,c
  4799  0119B6  A4D8               	btfss	status,2,c
  4800  0119B8  D002               	goto	l12975
  4801                           
  4802                           ; BSR set to: 1
  4803  0119BA  0E20               	movlw	32
  4804  0119BC  D001               	goto	L1
  4805  0119BE                     l12975:
  4806                           
  4807                           ; BSR set to: 1
  4808  0119BE  0E44               	movlw	68
  4809  0119C0                     L1:
  4810  0119C0  6E0B               	movwf	(btemp+10)^0,c
  4811  0119C2  0E00               	movlw	0
  4812  0119C4  6E0C               	movwf	(btemp+11)^0,c
  4813                           
  4814                           ;stkvar	_main$3750 @ sp[(-17)+2]
  4815  0119C6  0EF1               	movlw	-15
  4816  0119C8  0060  F02F  FFE3   	movff	btemp+10,plusw1
  4817  0119CE  0EF2               	movlw	-14
  4818  0119D0  0060  F033  FFE3   	movff	btemp+11,plusw1
  4819                           
  4820                           ; BSR set to: 1
  4821  0119D6  EE21  F37B         	lfsr	2,_C+124	;volatile
  4822  0119DA  006F FF7B FFE6     	movff	postinc2,postinc1
  4823  0119E0  006F FF7B FFE6     	movff	postinc2,postinc1
  4824  0119E6  006F FF7B FFE6     	movff	postinc2,postinc1
  4825  0119EC  006F FF7B FFE6     	movff	postinc2,postinc1
  4826                           
  4827                           ;stkvar	_main$3750 @ sp[(-21)+2]
  4828  0119F2  0EED               	movlw	-19
  4829  0119F4  006F FF8F FFE6     	movff	plusw1,postinc1
  4830  0119FA  006F FF8F FFE6     	movff	plusw1,postinc1
  4831  011A00  0EEC               	movlw	low STR_22
  4832  011A02  6EE6               	movwf	postinc1,c
  4833  011A04  0EFD               	movlw	high STR_22
  4834  011A06  6EE6               	movwf	postinc1,c
  4835  011A08  0E00               	movlw	0
  4836  011A0A  6EE6               	movwf	postinc1,c
  4837  011A0C  0E00               	movlw	0
  4838  011A0E  6EE6               	movwf	postinc1,c
  4839  011A10  EC4C  F0DB         	call	_get_vterm_ptr	;wreg free
  4840  011A14  0060  F007  FFE6   	movff	btemp,postinc1
  4841  011A1A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4842  011A20  0E0A               	movlw	10
  4843  011A22  6EE6               	movwf	postinc1,c
  4844  011A24  EC21  F0CD         	call	_sprintf	;wreg free
  4845                           
  4846                           ; BSR set to: 0
  4847                           ;main.c: 349:      sprintf(get_vterm_ptr(1, 0), "LOAD PWR %3.2f    ", C.p_load);
  4848  011A28  EE21  F373         	lfsr	2,_C+116	;volatile
  4849  011A2C  006F FF7B FFE6     	movff	postinc2,postinc1
  4850  011A32  006F FF7B FFE6     	movff	postinc2,postinc1
  4851  011A38  006F FF7B FFE6     	movff	postinc2,postinc1
  4852  011A3E  006F FF7B FFE6     	movff	postinc2,postinc1
  4853  011A44  0EBF               	movlw	low STR_23
  4854  011A46  6EE6               	movwf	postinc1,c
  4855  011A48  0EFE               	movlw	high STR_23
  4856  011A4A  6EE6               	movwf	postinc1,c
  4857  011A4C  0E00               	movlw	0
  4858  011A4E  6EE6               	movwf	postinc1,c
  4859  011A50  0E01               	movlw	1
  4860  011A52  6EE6               	movwf	postinc1,c
  4861  011A54  EC4C  F0DB         	call	_get_vterm_ptr	;wreg free
  4862  011A58  0060  F007  FFE6   	movff	btemp,postinc1
  4863  011A5E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4864  011A64  0E08               	movlw	8
  4865  011A66  6EE6               	movwf	postinc1,c
  4866  011A68  EC21  F0CD         	call	_sprintf	;wreg free
  4867                           
  4868                           ; BSR set to: 0
  4869                           ;main.c: 350:      sprintf(get_vterm_ptr(2, 0), "INV  PWR %3.2f    ", C.p_inverter);
  4870  011A6C  EE21  F377         	lfsr	2,_C+120	;volatile
  4871  011A70  006F FF7B FFE6     	movff	postinc2,postinc1
  4872  011A76  006F FF7B FFE6     	movff	postinc2,postinc1
  4873  011A7C  006F FF7B FFE6     	movff	postinc2,postinc1
  4874  011A82  006F FF7B FFE6     	movff	postinc2,postinc1
  4875  011A88  0EAC               	movlw	low STR_24
  4876  011A8A  6EE6               	movwf	postinc1,c
  4877  011A8C  0EFE               	movlw	high STR_24
  4878  011A8E  6EE6               	movwf	postinc1,c
  4879  011A90  0E00               	movlw	0
  4880  011A92  6EE6               	movwf	postinc1,c
  4881  011A94  0E02               	movlw	2
  4882  011A96  6EE6               	movwf	postinc1,c
  4883  011A98  EC4C  F0DB         	call	_get_vterm_ptr	;wreg free
  4884  011A9C  0060  F007  FFE6   	movff	btemp,postinc1
  4885  011AA2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4886  011AA8  0E08               	movlw	8
  4887  011AAA  6EE6               	movwf	postinc1,c
  4888  011AAC  EC21  F0CD         	call	_sprintf	;wreg free
  4889                           
  4890                           ; BSR set to: 0
  4891                           ;main.c: 352:      sprintf(get_vterm_ptr(0, 1), "PV %c WH %3.2f     ", (C.day) ? 'D' : '
      +                           ', C.pvkw);
  4892  011AB0  EE22  F01D         	lfsr	2,_C+286	;volatile
  4893  011AB4  50DF               	movf	indf2,w,c
  4894  011AB6  A4D8               	btfss	status,2,c
  4895  011AB8  D002               	goto	l12987
  4896                           
  4897                           ; BSR set to: 0
  4898  011ABA  0E20               	movlw	32
  4899  011ABC  D001               	goto	L2
  4900  011ABE                     l12987:
  4901                           
  4902                           ; BSR set to: 0
  4903  011ABE  0E44               	movlw	68
  4904  011AC0                     L2:
  4905  011AC0  6E0B               	movwf	(btemp+10)^0,c
  4906  011AC2  0E00               	movlw	0
  4907  011AC4  6E0C               	movwf	(btemp+11)^0,c
  4908                           
  4909                           ;stkvar	_main$3754 @ sp[(-17)+0]
  4910  011AC6  0EEF               	movlw	-17
  4911  011AC8  0060  F02F  FFE3   	movff	btemp+10,plusw1
  4912  011ACE  0EF0               	movlw	-16
  4913  011AD0  0060  F033  FFE3   	movff	btemp+11,plusw1
  4914                           
  4915                           ; BSR set to: 0
  4916  011AD6  EE21  F3A3         	lfsr	2,_C+164	;volatile
  4917  011ADA  006F FF7B FFE6     	movff	postinc2,postinc1
  4918  011AE0  006F FF7B FFE6     	movff	postinc2,postinc1
  4919  011AE6  006F FF7B FFE6     	movff	postinc2,postinc1
  4920  011AEC  006F FF7B FFE6     	movff	postinc2,postinc1
  4921                           
  4922                           ;stkvar	_main$3754 @ sp[(-21)+0]
  4923  011AF2  0EEB               	movlw	-21
  4924  011AF4  006F FF8F FFE6     	movff	plusw1,postinc1
  4925  011AFA  006F FF8F FFE6     	movff	plusw1,postinc1
  4926  011B00  0E9C               	movlw	low STR_25
  4927  011B02  6EE6               	movwf	postinc1,c
  4928  011B04  0EFD               	movlw	high STR_25
  4929  011B06  6EE6               	movwf	postinc1,c
  4930  011B08  0E01               	movlw	1
  4931  011B0A  6EE6               	movwf	postinc1,c
  4932  011B0C  0E00               	movlw	0
  4933  011B0E  6EE6               	movwf	postinc1,c
  4934  011B10  EC4C  F0DB         	call	_get_vterm_ptr	;wreg free
  4935  011B14  0060  F007  FFE6   	movff	btemp,postinc1
  4936  011B1A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4937  011B20  0E0A               	movlw	10
  4938  011B22  6EE6               	movwf	postinc1,c
  4939  011B24  EC21  F0CD         	call	_sprintf	;wreg free
  4940                           
  4941                           ; BSR set to: 0
  4942                           ;main.c: 353:      sprintf(get_vterm_ptr(1, 1), "LOAD WH %3.2f     ", C.loadkw);
  4943  011B28  EE21  F3AB         	lfsr	2,_C+172	;volatile
  4944  011B2C  006F FF7B FFE6     	movff	postinc2,postinc1
  4945  011B32  006F FF7B FFE6     	movff	postinc2,postinc1
  4946  011B38  006F FF7B FFE6     	movff	postinc2,postinc1
  4947  011B3E  006F FF7B FFE6     	movff	postinc2,postinc1
  4948  011B44  0E99               	movlw	low STR_26
  4949  011B46  6EE6               	movwf	postinc1,c
  4950  011B48  0EFE               	movlw	high STR_26
  4951  011B4A  6EE6               	movwf	postinc1,c
  4952  011B4C  0E01               	movlw	1
  4953  011B4E  6EE6               	movwf	postinc1,c
  4954  011B50  0E01               	movlw	1
  4955  011B52  6EE6               	movwf	postinc1,c
  4956  011B54  EC4C  F0DB         	call	_get_vterm_ptr	;wreg free
  4957  011B58  0060  F007  FFE6   	movff	btemp,postinc1
  4958  011B5E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4959  011B64  0E08               	movlw	8
  4960  011B66  6EE6               	movwf	postinc1,c
  4961  011B68  EC21  F0CD         	call	_sprintf	;wreg free
  4962                           
  4963                           ; BSR set to: 0
  4964                           ;main.c: 354:      sprintf(get_vterm_ptr(2, 1), "INV  WH %3.2f     ", C.invkw);
  4965  011B6C  EE21  F3A7         	lfsr	2,_C+168	;volatile
  4966  011B70  006F FF7B FFE6     	movff	postinc2,postinc1
  4967  011B76  006F FF7B FFE6     	movff	postinc2,postinc1
  4968  011B7C  006F FF7B FFE6     	movff	postinc2,postinc1
  4969  011B82  006F FF7B FFE6     	movff	postinc2,postinc1
  4970  011B88  0E86               	movlw	low STR_27
  4971  011B8A  6EE6               	movwf	postinc1,c
  4972  011B8C  0EFE               	movlw	high STR_27
  4973  011B8E  6EE6               	movwf	postinc1,c
  4974  011B90  0E01               	movlw	1
  4975  011B92  6EE6               	movwf	postinc1,c
  4976  011B94  0E02               	movlw	2
  4977  011B96  6EE6               	movwf	postinc1,c
  4978  011B98  EC4C  F0DB         	call	_get_vterm_ptr	;wreg free
  4979  011B9C  0060  F007  FFE6   	movff	btemp,postinc1
  4980  011BA2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4981  011BA8  0E08               	movlw	8
  4982  011BAA  6EE6               	movwf	postinc1,c
  4983  011BAC  EC21  F0CD         	call	_sprintf	;wreg free
  4984                           
  4985                           ;main.c: 355:      break;
  4986  011BB0  D32B               	goto	l13015
  4987  011BB2                     l1360:
  4988                           
  4989                           ; BSR set to: 0
  4990                           ;main.c: 357:      V.calib = 0;
  4991  011BB2  0101               	movlb	1	; () banked
  4992  011BB4  6BDC               	clrf	(_V+172)& (0+255),b	;volatile
  4993                           
  4994                           ; BSR set to: 1
  4995                           ;main.c: 358:      sprintf(get_vterm_ptr(0, 0), "PV %2.2f PA %2.2f ", C.calc[V_PV], C.ca
      +                          lc[C_PV]);
  4996  011BB6  EE21  F303         	lfsr	2,_C+4	;volatile
  4997  011BBA  006F FF7B FFE6     	movff	postinc2,postinc1
  4998  011BC0  006F FF7B FFE6     	movff	postinc2,postinc1
  4999  011BC6  006F FF7B FFE6     	movff	postinc2,postinc1
  5000  011BCC  006F FF7B FFE6     	movff	postinc2,postinc1
  5001  011BD2  EE21  F313         	lfsr	2,_C+20	;volatile
  5002  011BD6  006F FF7B FFE6     	movff	postinc2,postinc1
  5003  011BDC  006F FF7B FFE6     	movff	postinc2,postinc1
  5004  011BE2  006F FF7B FFE6     	movff	postinc2,postinc1
  5005  011BE8  006F FF7B FFE6     	movff	postinc2,postinc1
  5006  011BEE  0EF8               	movlw	low STR_28
  5007  011BF0  6EE6               	movwf	postinc1,c
  5008  011BF2  0EFE               	movlw	high STR_28
  5009  011BF4  6EE6               	movwf	postinc1,c
  5010  011BF6  0E00               	movlw	0
  5011  011BF8  6EE6               	movwf	postinc1,c
  5012  011BFA  0E00               	movlw	0
  5013  011BFC  6EE6               	movwf	postinc1,c
  5014  011BFE  EC4C  F0DB         	call	_get_vterm_ptr	;wreg free
  5015  011C02  0060  F007  FFE6   	movff	btemp,postinc1
  5016  011C08  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5017  011C0E  0E0C               	movlw	12
  5018  011C10  6EE6               	movwf	postinc1,c
  5019  011C12  EC21  F0CD         	call	_sprintf	;wreg free
  5020                           
  5021                           ;main.c: 359:      sprintf(get_vterm_ptr(1, 0), "BV %2.2f BA %2.2f ", C.calc[V_BAT], C.c
      +                          alc[C_BATT]);
  5022  011C16  EE21  F2FF         	lfsr	2,_C
  5023  011C1A  006F FF7B FFE6     	movff	postinc2,postinc1
  5024  011C20  006F FF7B FFE6     	movff	postinc2,postinc1
  5025  011C26  006F FF7B FFE6     	movff	postinc2,postinc1
  5026  011C2C  006F FF7B FFE6     	movff	postinc2,postinc1
  5027  011C32  EE21  F30F         	lfsr	2,_C+16	;volatile
  5028  011C36  006F FF7B FFE6     	movff	postinc2,postinc1
  5029  011C3C  006F FF7B FFE6     	movff	postinc2,postinc1
  5030  011C42  006F FF7B FFE6     	movff	postinc2,postinc1
  5031  011C48  006F FF7B FFE6     	movff	postinc2,postinc1
  5032  011C4E  0ED2               	movlw	low STR_29
  5033  011C50  6EE6               	movwf	postinc1,c
  5034  011C52  0EFE               	movlw	high STR_29
  5035  011C54  6EE6               	movwf	postinc1,c
  5036  011C56  0E00               	movlw	0
  5037  011C58  6EE6               	movwf	postinc1,c
  5038  011C5A  0E01               	movlw	1
  5039  011C5C  6EE6               	movwf	postinc1,c
  5040  011C5E  EC4C  F0DB         	call	_get_vterm_ptr	;wreg free
  5041  011C62  0060  F007  FFE6   	movff	btemp,postinc1
  5042  011C68  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5043  011C6E  0E0C               	movlw	12
  5044  011C70  6EE6               	movwf	postinc1,c
  5045  011C72  EC21  F0CD         	call	_sprintf	;wreg free
  5046                           
  5047                           ;main.c: 360:      sprintf(get_vterm_ptr(2, 0), "CV %2.2f LA %2.2f ", C.calc[V_CC], C.c_
      +                          load);
  5048  011C76  EE21  F33F         	lfsr	2,_C+64	;volatile
  5049  011C7A  006F FF7B FFE6     	movff	postinc2,postinc1
  5050  011C80  006F FF7B FFE6     	movff	postinc2,postinc1
  5051  011C86  006F FF7B FFE6     	movff	postinc2,postinc1
  5052  011C8C  006F FF7B FFE6     	movff	postinc2,postinc1
  5053  011C92  EE21  F307         	lfsr	2,_C+8	;volatile
  5054  011C96  006F FF7B FFE6     	movff	postinc2,postinc1
  5055  011C9C  006F FF7B FFE6     	movff	postinc2,postinc1
  5056  011CA2  006F FF7B FFE6     	movff	postinc2,postinc1
  5057  011CA8  006F FF7B FFE6     	movff	postinc2,postinc1
  5058  011CAE  0EE5               	movlw	low STR_30
  5059  011CB0  6EE6               	movwf	postinc1,c
  5060  011CB2  0EFE               	movlw	high STR_30
  5061  011CB4  6EE6               	movwf	postinc1,c
  5062  011CB6  0E00               	movlw	0
  5063  011CB8  6EE6               	movwf	postinc1,c
  5064  011CBA  0E02               	movlw	2
  5065  011CBC  6EE6               	movwf	postinc1,c
  5066  011CBE  EC4C  F0DB         	call	_get_vterm_ptr	;wreg free
  5067  011CC2  0060  F007  FFE6   	movff	btemp,postinc1
  5068  011CC8  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5069  011CCE  0E0C               	movlw	12
  5070  011CD0  6EE6               	movwf	postinc1,c
  5071  011CD2  EC21  F0CD         	call	_sprintf	;wreg free
  5072                           
  5073                           ;main.c: 362:      sprintf(get_vterm_ptr(0, 1), "BAT IWH %4.1f     ", C.bkwi);
  5074  011CD6  EE21  F39B         	lfsr	2,_C+156	;volatile
  5075  011CDA  006F FF7B FFE6     	movff	postinc2,postinc1
  5076  011CE0  006F FF7B FFE6     	movff	postinc2,postinc1
  5077  011CE6  006F FF7B FFE6     	movff	postinc2,postinc1
  5078  011CEC  006F FF7B FFE6     	movff	postinc2,postinc1
  5079  011CF2  0E4D               	movlw	low STR_31
  5080  011CF4  6EE6               	movwf	postinc1,c
  5081  011CF6  0EFE               	movlw	high STR_31
  5082  011CF8  6EE6               	movwf	postinc1,c
  5083  011CFA  0E01               	movlw	1
  5084  011CFC  6EE6               	movwf	postinc1,c
  5085  011CFE  0E00               	movlw	0
  5086  011D00  6EE6               	movwf	postinc1,c
  5087  011D02  EC4C  F0DB         	call	_get_vterm_ptr	;wreg free
  5088  011D06  0060  F007  FFE6   	movff	btemp,postinc1
  5089  011D0C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5090  011D12  0E08               	movlw	8
  5091  011D14  6EE6               	movwf	postinc1,c
  5092  011D16  EC21  F0CD         	call	_sprintf	;wreg free
  5093                           
  5094                           ;main.c: 363:      sprintf(get_vterm_ptr(1, 1), "BAT OWH %4.1f     ", C.bkwo);
  5095  011D1A  EE21  F39F         	lfsr	2,_C+160	;volatile
  5096  011D1E  006F FF7B FFE6     	movff	postinc2,postinc1
  5097  011D24  006F FF7B FFE6     	movff	postinc2,postinc1
  5098  011D2A  006F FF7B FFE6     	movff	postinc2,postinc1
  5099  011D30  006F FF7B FFE6     	movff	postinc2,postinc1
  5100  011D36  0E60               	movlw	low STR_32
  5101  011D38  6EE6               	movwf	postinc1,c
  5102  011D3A  0EFE               	movlw	high STR_32
  5103  011D3C  6EE6               	movwf	postinc1,c
  5104  011D3E  0E01               	movlw	1
  5105  011D40  6EE6               	movwf	postinc1,c
  5106  011D42  0E01               	movlw	1
  5107  011D44  6EE6               	movwf	postinc1,c
  5108  011D46  EC4C  F0DB         	call	_get_vterm_ptr	;wreg free
  5109  011D4A  0060  F007  FFE6   	movff	btemp,postinc1
  5110  011D50  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5111  011D56  0E08               	movlw	8
  5112  011D58  6EE6               	movwf	postinc1,c
  5113  011D5A  EC21  F0CD         	call	_sprintf	;wreg free
  5114                           
  5115                           ;main.c: 364:      sprintf(get_vterm_ptr(2, 1), "BAT TWH %4.1f     ", C.bkwi + C.bkwo);
  5116  011D5E  EE21  F39F         	lfsr	2,_C+160	;volatile
  5117  011D62  006F FF7B FFE6     	movff	postinc2,postinc1
  5118  011D68  006F FF7B FFE6     	movff	postinc2,postinc1
  5119  011D6E  006F FF7B FFE6     	movff	postinc2,postinc1
  5120  011D74  006F FF7B FFE6     	movff	postinc2,postinc1
  5121  011D7A  EE21  F39B         	lfsr	2,_C+156	;volatile
  5122  011D7E  006F FF7B FFE6     	movff	postinc2,postinc1
  5123  011D84  006F FF7B FFE6     	movff	postinc2,postinc1
  5124  011D8A  006F FF7B FFE6     	movff	postinc2,postinc1
  5125  011D90  006F FF7B FFE6     	movff	postinc2,postinc1
  5126  011D96  ECB5  F09D         	call	___fladd	;wreg free
  5127  011D9A  0060  F007  FFE6   	movff	btemp,postinc1
  5128  011DA0  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5129  011DA6  0060  F00F  FFE6   	movff	btemp+2,postinc1
  5130  011DAC  0060  F013  FFE6   	movff	btemp+3,postinc1
  5131  011DB2  0E73               	movlw	low STR_33
  5132  011DB4  6EE6               	movwf	postinc1,c
  5133  011DB6  0EFE               	movlw	high STR_33
  5134  011DB8  6EE6               	movwf	postinc1,c
  5135  011DBA  0E01               	movlw	1
  5136  011DBC  6EE6               	movwf	postinc1,c
  5137  011DBE  0E02               	movlw	2
  5138  011DC0  6EE6               	movwf	postinc1,c
  5139  011DC2  EC4C  F0DB         	call	_get_vterm_ptr	;wreg free
  5140  011DC6  0060  F007  FFE6   	movff	btemp,postinc1
  5141  011DCC  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5142  011DD2  0E08               	movlw	8
  5143  011DD4  6EE6               	movwf	postinc1,c
  5144  011DD6  EC21  F0CD         	call	_sprintf	;wreg free
  5145                           
  5146                           ;main.c: 365:      break;
  5147  011DDA  D216               	goto	l13015
  5148  011DDC                     l1361:
  5149                           
  5150                           ; BSR set to: 0
  5151                           ;main.c: 367:      V.calib = 0;
  5152  011DDC  0101               	movlb	1	; () banked
  5153  011DDE  6BDC               	clrf	(_V+172)& (0+255),b	;volatile
  5154                           
  5155                           ; BSR set to: 1
  5156                           ;main.c: 368:      sprintf(get_vterm_ptr(0, 0), "BATT PWR %3.2f     ", C.p_bat);
  5157  011DE0  EE21  F37F         	lfsr	2,_C+128	;volatile
  5158  011DE4  006F FF7B FFE6     	movff	postinc2,postinc1
  5159  011DEA  006F FF7B FFE6     	movff	postinc2,postinc1
  5160  011DF0  006F FF7B FFE6     	movff	postinc2,postinc1
  5161  011DF6  006F FF7B FFE6     	movff	postinc2,postinc1
  5162  011DFC  0EB0               	movlw	low STR_34
  5163  011DFE  6EE6               	movwf	postinc1,c
  5164  011E00  0EFD               	movlw	high STR_34
  5165  011E02  6EE6               	movwf	postinc1,c
  5166  011E04  0E00               	movlw	0
  5167  011E06  6EE6               	movwf	postinc1,c
  5168  011E08  0E00               	movlw	0
  5169  011E0A  6EE6               	movwf	postinc1,c
  5170  011E0C  EC4C  F0DB         	call	_get_vterm_ptr	;wreg free
  5171  011E10  0060  F007  FFE6   	movff	btemp,postinc1
  5172  011E16  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5173  011E1C  0E08               	movlw	8
  5174  011E1E  6EE6               	movwf	postinc1,c
  5175  011E20  EC21  F0CD         	call	_sprintf	;wreg free
  5176                           
  5177                           ;main.c: 369:      sprintf(get_vterm_ptr(1, 0), "BAH %3.2f P%3.2f   ", C.dynamic_ah, C.p
      +                          v_ah);
  5178  011E24  EE21  F393         	lfsr	2,_C+148	;volatile
  5179  011E28  006F FF7B FFE6     	movff	postinc2,postinc1
  5180  011E2E  006F FF7B FFE6     	movff	postinc2,postinc1
  5181  011E34  006F FF7B FFE6     	movff	postinc2,postinc1
  5182  011E3A  006F FF7B FFE6     	movff	postinc2,postinc1
  5183  011E40  EE21  F38F         	lfsr	2,_C+144	;volatile
  5184  011E44  006F FF7B FFE6     	movff	postinc2,postinc1
  5185  011E4A  006F FF7B FFE6     	movff	postinc2,postinc1
  5186  011E50  006F FF7B FFE6     	movff	postinc2,postinc1
  5187  011E56  006F FF7B FFE6     	movff	postinc2,postinc1
  5188  011E5C  0E00               	movlw	low STR_35
  5189  011E5E  6EE6               	movwf	postinc1,c
  5190  011E60  0EFE               	movlw	high STR_35
  5191  011E62  6EE6               	movwf	postinc1,c
  5192  011E64  0E00               	movlw	0
  5193  011E66  6EE6               	movwf	postinc1,c
  5194  011E68  0E01               	movlw	1
  5195  011E6A  6EE6               	movwf	postinc1,c
  5196  011E6C  EC4C  F0DB         	call	_get_vterm_ptr	;wreg free
  5197  011E70  0060  F007  FFE6   	movff	btemp,postinc1
  5198  011E76  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5199  011E7C  0E0C               	movlw	12
  5200  011E7E  6EE6               	movwf	postinc1,c
  5201  011E80  EC21  F0CD         	call	_sprintf	;wreg free
  5202                           
  5203                           ;main.c: 370:      sprintf(get_vterm_ptr(2, 0), "S%cC %d RUN %d     ", spinners(5, 0), C
      +                          .soc, C.runtime);
  5204  011E84  EE21  F3AF         	lfsr	2,_C+176	;volatile
  5205  011E88  006F FF78  F00B    	movff	postinc2,btemp+10
  5206  011E8E  006F FF74  F00C    	movff	postdec2,btemp+11
  5207  011E94  0060  F02F  FFE6   	movff	btemp+10,postinc1
  5208  011E9A  0060  F033  FFE6   	movff	btemp+11,postinc1
  5209  011EA0  EE21  F3B1         	lfsr	2,_C+178	;volatile
  5210  011EA4  006F FF78  F00B    	movff	postinc2,btemp+10
  5211  011EAA  006F FF74  F00C    	movff	postdec2,btemp+11
  5212  011EB0  0060  F02F  FFE6   	movff	btemp+10,postinc1
  5213  011EB6  0060  F033  FFE6   	movff	btemp+11,postinc1
  5214  011EBC  0E00               	movlw	0
  5215  011EBE  6EE6               	movwf	postinc1,c
  5216  011EC0  0E05               	movlw	5
  5217  011EC2  6EE6               	movwf	postinc1,c
  5218  011EC4  EC14  F0CF         	call	_spinners	;wreg free
  5219  011EC8  5001               	movf	btemp^0,w,c
  5220  011ECA  6EE6               	movwf	postinc1,c
  5221  011ECC  0E00               	movlw	0
  5222  011ECE  6EE6               	movwf	postinc1,c
  5223  011ED0  0E88               	movlw	low STR_36
  5224  011ED2  6EE6               	movwf	postinc1,c
  5225  011ED4  0EFD               	movlw	high STR_36
  5226  011ED6  6EE6               	movwf	postinc1,c
  5227  011ED8  0E00               	movlw	0
  5228  011EDA  6EE6               	movwf	postinc1,c
  5229  011EDC  0E02               	movlw	2
  5230  011EDE  6EE6               	movwf	postinc1,c
  5231  011EE0  EC4C  F0DB         	call	_get_vterm_ptr	;wreg free
  5232  011EE4  0060  F007  FFE6   	movff	btemp,postinc1
  5233  011EEA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5234  011EF0  0E0A               	movlw	10
  5235  011EF2  6EE6               	movwf	postinc1,c
  5236  011EF4  EC21  F0CD         	call	_sprintf	;wreg free
  5237                           
  5238                           ;main.c: 372:      sprintf(get_vterm_ptr(0, 1), "ESR  %2.6f         ", C.esr);
  5239  011EF8  EE21  F387         	lfsr	2,_C+136	;volatile
  5240  011EFC  006F FF7B FFE6     	movff	postinc2,postinc1
  5241  011F02  006F FF7B FFE6     	movff	postinc2,postinc1
  5242  011F08  006F FF7B FFE6     	movff	postinc2,postinc1
  5243  011F0E  006F FF7B FFE6     	movff	postinc2,postinc1
  5244  011F14  0E74               	movlw	low STR_37
  5245  011F16  6EE6               	movwf	postinc1,c
  5246  011F18  0EFD               	movlw	high STR_37
  5247  011F1A  6EE6               	movwf	postinc1,c
  5248  011F1C  0E01               	movlw	1
  5249  011F1E  6EE6               	movwf	postinc1,c
  5250  011F20  0E00               	movlw	0
  5251  011F22  6EE6               	movwf	postinc1,c
  5252  011F24  EC4C  F0DB         	call	_get_vterm_ptr	;wreg free
  5253  011F28  0060  F007  FFE6   	movff	btemp,postinc1
  5254  011F2E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5255  011F34  0E08               	movlw	8
  5256  011F36  6EE6               	movwf	postinc1,c
  5257  011F38  EC21  F0CD         	call	_sprintf	;wreg free
  5258                           
  5259                           ;main.c: 373:      sprintf(get_vterm_ptr(1, 1), "R1 %2.3f %3.4f     ", C.bv_one_load, C.
      +                          load_i1);
  5260  011F3C  EE22  F009         	lfsr	2,_C+266	;volatile
  5261  011F40  006F FF7B FFE6     	movff	postinc2,postinc1
  5262  011F46  006F FF7B FFE6     	movff	postinc2,postinc1
  5263  011F4C  006F FF7B FFE6     	movff	postinc2,postinc1
  5264  011F52  006F FF7B FFE6     	movff	postinc2,postinc1
  5265  011F58  EE22  F015         	lfsr	2,_C+278	;volatile
  5266  011F5C  006F FF7B FFE6     	movff	postinc2,postinc1
  5267  011F62  006F FF7B FFE6     	movff	postinc2,postinc1
  5268  011F68  006F FF7B FFE6     	movff	postinc2,postinc1
  5269  011F6E  006F FF7B FFE6     	movff	postinc2,postinc1
  5270  011F74  0EC4               	movlw	low STR_38
  5271  011F76  6EE6               	movwf	postinc1,c
  5272  011F78  0EFD               	movlw	high STR_38
  5273  011F7A  6EE6               	movwf	postinc1,c
  5274  011F7C  0E01               	movlw	1
  5275  011F7E  6EE6               	movwf	postinc1,c
  5276  011F80  0E01               	movlw	1
  5277  011F82  6EE6               	movwf	postinc1,c
  5278  011F84  EC4C  F0DB         	call	_get_vterm_ptr	;wreg free
  5279  011F88  0060  F007  FFE6   	movff	btemp,postinc1
  5280  011F8E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5281  011F94  0E0C               	movlw	12
  5282  011F96  6EE6               	movwf	postinc1,c
  5283  011F98  EC21  F0CD         	call	_sprintf	;wreg free
  5284                           
  5285                           ;main.c: 374:      sprintf(get_vterm_ptr(2, 1), "R2 %2.3f %3.4f     ", C.bv_full_load, C
      +                          .load_i2);
  5286  011F9C  EE22  F00D         	lfsr	2,_C+270	;volatile
  5287  011FA0  006F FF7B FFE6     	movff	postinc2,postinc1
  5288  011FA6  006F FF7B FFE6     	movff	postinc2,postinc1
  5289  011FAC  006F FF7B FFE6     	movff	postinc2,postinc1
  5290  011FB2  006F FF7B FFE6     	movff	postinc2,postinc1
  5291  011FB8  EE22  F019         	lfsr	2,_C+282	;volatile
  5292  011FBC  006F FF7B FFE6     	movff	postinc2,postinc1
  5293  011FC2  006F FF7B FFE6     	movff	postinc2,postinc1
  5294  011FC8  006F FF7B FFE6     	movff	postinc2,postinc1
  5295  011FCE  006F FF7B FFE6     	movff	postinc2,postinc1
  5296  011FD4  0ED8               	movlw	low STR_39
  5297  011FD6  6EE6               	movwf	postinc1,c
  5298  011FD8  0EFD               	movlw	high STR_39
  5299  011FDA  6EE6               	movwf	postinc1,c
  5300  011FDC  0E01               	movlw	1
  5301  011FDE  6EE6               	movwf	postinc1,c
  5302  011FE0  0E02               	movlw	2
  5303  011FE2  6EE6               	movwf	postinc1,c
  5304  011FE4  EC4C  F0DB         	call	_get_vterm_ptr	;wreg free
  5305  011FE8  0060  F007  FFE6   	movff	btemp,postinc1
  5306  011FEE  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5307  011FF4  0E0C               	movlw	12
  5308  011FF6  6EE6               	movwf	postinc1,c
  5309  011FF8  EC21  F0CD         	call	_sprintf	;wreg free
  5310                           
  5311                           ;main.c: 375:      break;
  5312  011FFC  D105               	goto	l13015
  5313  011FFE                     l12999:
  5314                           
  5315                           ; BSR set to: 0
  5316                           ;main.c: 377:      if (!V.calib) {
  5317  011FFE  0101               	movlb	1	; () banked
  5318  012000  51DC               	movf	(_V+172)& (0+255),w,b	;volatile
  5319  012002  A4D8               	btfss	status,2,c
  5320  012004  D02D               	goto	l13003
  5321                           
  5322                           ; BSR set to: 1
  5323                           ;main.c: 378:       lp_filter(0.0, i, -1);
  5324  012006  0EFF               	movlw	255
  5325  012008  6EE6               	movwf	postinc1,c
  5326                           
  5327                           ;stkvar	_i @ sp[(-18)+13]
  5328  01200A  0EFB               	movlw	-5
  5329  01200C  50E3               	movf	plusw1,w,c
  5330  01200E  6EE6               	movwf	postinc1,c
  5331  012010  0E00               	movlw	0
  5332  012012  6EE6               	movwf	postinc1,c
  5333  012014  0E00               	movlw	0
  5334  012016  6EE6               	movwf	postinc1,c
  5335  012018  0E00               	movlw	0
  5336  01201A  6EE6               	movwf	postinc1,c
  5337  01201C  0E00               	movlw	0
  5338  01201E  6EE6               	movwf	postinc1,c
  5339  012020  ECCC  F0C1         	call	_lp_filter	;wreg free
  5340                           
  5341                           ;main.c: 379:       lp_filter(0.0, j, -1);
  5342  012024  0EFF               	movlw	255
  5343  012026  6EE6               	movwf	postinc1,c
  5344                           
  5345                           ;stkvar	_j @ sp[(-18)+12]
  5346  012028  0EFA               	movlw	-6
  5347  01202A  50E3               	movf	plusw1,w,c
  5348  01202C  6EE6               	movwf	postinc1,c
  5349  01202E  0E00               	movlw	0
  5350  012030  6EE6               	movwf	postinc1,c
  5351  012032  0E00               	movlw	0
  5352  012034  6EE6               	movwf	postinc1,c
  5353  012036  0E00               	movlw	0
  5354  012038  6EE6               	movwf	postinc1,c
  5355  01203A  0E00               	movlw	0
  5356  01203C  6EE6               	movwf	postinc1,c
  5357  01203E  ECCC  F0C1         	call	_lp_filter	;wreg free
  5358                           
  5359                           ;main.c: 380:       lp_filter(0.0, k, -1);
  5360  012042  0EFF               	movlw	255
  5361  012044  6EE6               	movwf	postinc1,c
  5362                           
  5363                           ;stkvar	_k @ sp[(-18)+11]
  5364  012046  0EF9               	movlw	-7
  5365  012048  50E3               	movf	plusw1,w,c
  5366  01204A  6EE6               	movwf	postinc1,c
  5367  01204C  0E00               	movlw	0
  5368  01204E  6EE6               	movwf	postinc1,c
  5369  012050  0E00               	movlw	0
  5370  012052  6EE6               	movwf	postinc1,c
  5371  012054  0E00               	movlw	0
  5372  012056  6EE6               	movwf	postinc1,c
  5373  012058  0E00               	movlw	0
  5374  01205A  6EE6               	movwf	postinc1,c
  5375  01205C  ECCC  F0C1         	call	_lp_filter	;wreg free
  5376  012060                     l13003:
  5377                           
  5378                           ;main.c: 382:      V.calib = 1;
  5379  012060  0E01               	movlw	1
  5380  012062  0101               	movlb	1	; () banked
  5381  012064  6FDC               	movwf	(_V+172)& (0+255),b	;volatile
  5382                           
  5383                           ; BSR set to: 1
  5384                           ;main.c: 383:      sprintf(get_vterm_ptr(0, 0), "%d %2.4f   %d  ", get_raw_result(i), C.
      +                          calc[i], get_switch(SSELECT));
  5385  012066  0E02               	movlw	2
  5386  012068  6EE6               	movwf	postinc1,c
  5387  01206A  EC63  F0DB         	call	_get_switch	;wreg free
  5388  01206E  5001               	movf	btemp^0,w,c
  5389  012070  6EE6               	movwf	postinc1,c
  5390  012072  0E00               	movlw	0
  5391  012074  6EE6               	movwf	postinc1,c
  5392                           
  5393                           ;stkvar	_i @ sp[(-19)+13]
  5394  012076  0EFA               	movlw	-6
  5395  012078  50E3               	movf	plusw1,w,c
  5396  01207A  0D04               	mullw	4
  5397  01207C  0EFF               	movlw	low _C
  5398  01207E  24F3               	addwf	243,w,c
  5399  012080  6ED9               	movwf	fsr2l,c
  5400  012082  0E06               	movlw	high _C
  5401  012084  20F4               	addwfc	prodh,w,c
  5402  012086  6EDA               	movwf	fsr2h,c
  5403  012088  006F FF7B FFE6     	movff	postinc2,postinc1
  5404  01208E  006F FF7B FFE6     	movff	postinc2,postinc1
  5405  012094  006F FF7B FFE6     	movff	postinc2,postinc1
  5406  01209A  006F FF7B FFE6     	movff	postinc2,postinc1
  5407                           
  5408                           ;stkvar	_i @ sp[(-23)+13]
  5409  0120A0  0EF6               	movlw	-10
  5410  0120A2  50E3               	movf	plusw1,w,c
  5411  0120A4  6EE6               	movwf	postinc1,c
  5412  0120A6  EC7C  F0DD         	call	_get_raw_result	;wreg free
  5413  0120AA  0060  F007  FFE6   	movff	btemp,postinc1
  5414  0120B0  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5415  0120B6  0E83               	movlw	low STR_19
  5416  0120B8  6EE6               	movwf	postinc1,c
  5417  0120BA  0EFF               	movlw	high STR_19
  5418  0120BC  6EE6               	movwf	postinc1,c
  5419  0120BE  0E00               	movlw	0
  5420  0120C0  6EE6               	movwf	postinc1,c
  5421  0120C2  0E00               	movlw	0
  5422  0120C4  6EE6               	movwf	postinc1,c
  5423  0120C6  EC4C  F0DB         	call	_get_vterm_ptr	;wreg free
  5424  0120CA  0060  F007  FFE6   	movff	btemp,postinc1
  5425  0120D0  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5426  0120D6  0E0C               	movlw	12
  5427  0120D8  6EE6               	movwf	postinc1,c
  5428  0120DA  EC21  F0CD         	call	_sprintf	;wreg free
  5429                           
  5430                           ; BSR set to: 0
  5431                           ;main.c: 384:      sprintf(get_vterm_ptr(1, 0), "%d %2.4f   %d  ", get_raw_result(j), C.
      +                          calc[j], get_switch(SENTER));
  5432  0120DE  0E03               	movlw	3
  5433  0120E0  6EE6               	movwf	postinc1,c
  5434  0120E2  EC63  F0DB         	call	_get_switch	;wreg free
  5435  0120E6  5001               	movf	btemp^0,w,c
  5436  0120E8  6EE6               	movwf	postinc1,c
  5437  0120EA  0E00               	movlw	0
  5438  0120EC  6EE6               	movwf	postinc1,c
  5439                           
  5440                           ;stkvar	_j @ sp[(-19)+12]
  5441  0120EE  0EF9               	movlw	-7
  5442  0120F0  50E3               	movf	plusw1,w,c
  5443  0120F2  0D04               	mullw	4
  5444  0120F4  0EFF               	movlw	low _C
  5445  0120F6  24F3               	addwf	243,w,c
  5446  0120F8  6ED9               	movwf	fsr2l,c
  5447  0120FA  0E06               	movlw	high _C
  5448  0120FC  20F4               	addwfc	prodh,w,c
  5449  0120FE  6EDA               	movwf	fsr2h,c
  5450  012100  006F FF7B FFE6     	movff	postinc2,postinc1
  5451  012106  006F FF7B FFE6     	movff	postinc2,postinc1
  5452  01210C  006F FF7B FFE6     	movff	postinc2,postinc1
  5453  012112  006F FF7B FFE6     	movff	postinc2,postinc1
  5454                           
  5455                           ;stkvar	_j @ sp[(-23)+12]
  5456  012118  0EF5               	movlw	-11
  5457  01211A  50E3               	movf	plusw1,w,c
  5458  01211C  6EE6               	movwf	postinc1,c
  5459  01211E  EC7C  F0DD         	call	_get_raw_result	;wreg free
  5460  012122  0060  F007  FFE6   	movff	btemp,postinc1
  5461  012128  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5462  01212E  0E83               	movlw	low STR_19
  5463  012130  6EE6               	movwf	postinc1,c
  5464  012132  0EFF               	movlw	high STR_19
  5465  012134  6EE6               	movwf	postinc1,c
  5466  012136  0E00               	movlw	0
  5467  012138  6EE6               	movwf	postinc1,c
  5468  01213A  0E01               	movlw	1
  5469  01213C  6EE6               	movwf	postinc1,c
  5470  01213E  EC4C  F0DB         	call	_get_vterm_ptr	;wreg free
  5471  012142  0060  F007  FFE6   	movff	btemp,postinc1
  5472  012148  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5473  01214E  0E0C               	movlw	12
  5474  012150  6EE6               	movwf	postinc1,c
  5475  012152  EC21  F0CD         	call	_sprintf	;wreg free
  5476                           
  5477                           ; BSR set to: 0
  5478                           ;main.c: 385:      sprintf(get_vterm_ptr(2, 0), "%d %2.4f, %d   #", get_raw_result(k), C
      +                          .calc[k], inp_index + 1);
  5479                           ;stkvar	_inp_index @ sp[(-17)+14]
  5480  012156  0EFD               	movlw	-3
  5481  012158  50E3               	movf	plusw1,w,c
  5482  01215A  6E0B               	movwf	(btemp+10)^0,c
  5483  01215C  6A0C               	clrf	(btemp+11)^0,c
  5484  01215E  0E01               	movlw	1
  5485  012160  260B               	addwf	(btemp+10)^0,f,c
  5486  012162  0E00               	movlw	0
  5487  012164  220C               	addwfc	(btemp+11)^0,f,c
  5488  012166  0060  F02F  FFE6   	movff	btemp+10,postinc1
  5489  01216C  0060  F033  FFE6   	movff	btemp+11,postinc1
  5490                           
  5491                           ;stkvar	_k @ sp[(-19)+11]
  5492  012172  0EF8               	movlw	-8
  5493  012174  50E3               	movf	plusw1,w,c
  5494  012176  0D04               	mullw	4
  5495  012178  0EFF               	movlw	low _C
  5496  01217A  24F3               	addwf	243,w,c
  5497  01217C  6ED9               	movwf	fsr2l,c
  5498  01217E  0E06               	movlw	high _C
  5499  012180  20F4               	addwfc	prodh,w,c
  5500  012182  6EDA               	movwf	fsr2h,c
  5501  012184  006F FF7B FFE6     	movff	postinc2,postinc1
  5502  01218A  006F FF7B FFE6     	movff	postinc2,postinc1
  5503  012190  006F FF7B FFE6     	movff	postinc2,postinc1
  5504  012196  006F FF7B FFE6     	movff	postinc2,postinc1
  5505                           
  5506                           ;stkvar	_k @ sp[(-23)+11]
  5507  01219C  0EF4               	movlw	-12
  5508  01219E  50E3               	movf	plusw1,w,c
  5509  0121A0  6EE6               	movwf	postinc1,c
  5510  0121A2  EC7C  F0DD         	call	_get_raw_result	;wreg free
  5511  0121A6  0060  F007  FFE6   	movff	btemp,postinc1
  5512  0121AC  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5513  0121B2  0E61               	movlw	low STR_21
  5514  0121B4  6EE6               	movwf	postinc1,c
  5515  0121B6  0EFF               	movlw	high STR_21
  5516  0121B8  6EE6               	movwf	postinc1,c
  5517  0121BA  0E00               	movlw	0
  5518  0121BC  6EE6               	movwf	postinc1,c
  5519  0121BE  0E02               	movlw	2
  5520  0121C0  6EE6               	movwf	postinc1,c
  5521  0121C2  EC4C  F0DB         	call	_get_vterm_ptr	;wreg free
  5522  0121C6  0060  F007  FFE6   	movff	btemp,postinc1
  5523  0121CC  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5524  0121D2  0E0C               	movlw	12
  5525  0121D4  6EE6               	movwf	postinc1,c
  5526  0121D6  EC21  F0CD         	call	_sprintf	;wreg free
  5527                           
  5528                           ;main.c: 386:      break;
  5529  0121DA  D016               	goto	l13015
  5530  0121DC                     l13013:
  5531  0121DC  0100               	movlb	0	; () banked
  5532  0121DE  51F7               	movf	_H& (0+255),w,b
  5533  0121E0  6E0B               	movwf	(btemp+10)^0,c
  5534  0121E2  6A0C               	clrf	(btemp+11)^0,c
  5535                           
  5536                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5537                           ; Switch size 1, requested type "simple"
  5538                           ; Number of cases is 1, Range of values is 0 to 0
  5539                           ; switch strategies available:
  5540                           ; Name         Instructions Cycles
  5541                           ; simple_byte            4     3 (average)
  5542                           ;	Chosen strategy is simple_byte
  5543  0121E4  500C               	movf	(btemp+11)^0,w,c
  5544  0121E6  0A00               	xorlw	0	; case 0
  5545  0121E8  A4D8               	btfss	status,2,c
  5546  0121EA  D00E               	goto	l13015
  5547                           
  5548                           ; BSR set to: 0
  5549                           ; Switch size 1, requested type "simple"
  5550                           ; Number of cases is 4, Range of values is 0 to 3
  5551                           ; switch strategies available:
  5552                           ; Name         Instructions Cycles
  5553                           ; simple_byte           13     7 (average)
  5554                           ;	Chosen strategy is simple_byte
  5555  0121EC  500B               	movf	(btemp+10)^0,w,c
  5556  0121EE  0A00               	xorlw	0	; case 0
  5557  0121F0  B4D8               	btfsc	status,2,c
  5558  0121F2  D4DF               	goto	l1360
  5559  0121F4  0A01               	xorlw	1	; case 1
  5560  0121F6  B4D8               	btfsc	status,2,c
  5561  0121F8  EFD6  F08C         	goto	l1350
  5562  0121FC  0A03               	xorlw	3	; case 2
  5563  0121FE  B4D8               	btfsc	status,2,c
  5564  012200  D5ED               	goto	l1361
  5565  012202  0A01               	xorlw	1	; case 3
  5566  012204  B4D8               	btfsc	status,2,c
  5567  012206  D6FB               	goto	l12999
  5568  012208                     l13015:
  5569                           
  5570                           ; BSR set to: 0
  5571                           ;main.c: 390:     clear_hid_pflags(&H);
  5572  012208  0EF7               	movlw	_H& (0+255)
  5573  01220A  6EE6               	movwf	postinc1,c
  5574  01220C  EC10  F0DD         	call	_clear_hid_pflags	;wreg free
  5575                           
  5576                           ;main.c: 392:    StartTimer(TMR_DISPLAY, 250);
  5577  012210  0EFA               	movlw	250
  5578  012212  6EE6               	movwf	postinc1,c
  5579  012214  0E00               	movlw	0
  5580  012216  6EE6               	movwf	postinc1,c
  5581  012218  0E0A               	movlw	10
  5582  01221A  6EE6               	movwf	postinc1,c
  5583  01221C  EC6E  F0D9         	call	_StartTimer	;wreg free
  5584                           
  5585                           ;main.c: 393:    V.enter = check_enter_button(&H);
  5586  012220  0EF7               	movlw	_H& (0+255)
  5587  012222  6EE6               	movwf	postinc1,c
  5588  012224  EC8E  F0D9         	call	_check_enter_button	;wreg free
  5589  012228  5001               	movf	btemp^0,w,c
  5590  01222A  0101               	movlb	1	; () banked
  5591  01222C  6FDD               	movwf	(_V+173)& (0+255),b	;volatile
  5592                           
  5593                           ; BSR set to: 1
  5594                           ;main.c: 394:    if (V.enter && (H.hid_display != HID_AUX)) {
  5595  01222E  51DD               	movf	(_V+173)& (0+255),w,b	;volatile
  5596  012230  B4D8               	btfsc	status,2,c
  5597  012232  D013               	goto	l13029
  5598                           
  5599                           ; BSR set to: 1
  5600  012234  0E03               	movlw	3
  5601  012236  0100               	movlb	0	; () banked
  5602  012238  19F7               	xorwf	_H& (0+255),w,b
  5603  01223A  B4D8               	btfsc	status,2,c
  5604  01223C  D00E               	goto	l13029
  5605                           
  5606                           ; BSR set to: 0
  5607                           ;main.c: 395:     V.enter = 0;
  5608  01223E  0101               	movlb	1	; () banked
  5609  012240  6BDD               	clrf	(_V+173)& (0+255),b	;volatile
  5610                           
  5611                           ; BSR set to: 1
  5612                           ;main.c: 396:     V.screen = ~V.screen;
  5613  012242  A1CC               	btfss	(_V+156)& (0+255),0,b	;volatile
  5614  012244  D002               	goto	u12600
  5615  012246  0E01               	movlw	1
  5616  012248  D001               	goto	u12606
  5617  01224A                     u12600:
  5618  01224A  0E00               	movlw	0
  5619  01224C                     u12606:
  5620  01224C  0AFF               	xorlw	255
  5621  01224E  6E0C               	movwf	(btemp+11)^0,c
  5622  012250  51CC               	movf	(_V+156)& (0+255),w,b	;volatile
  5623  012252  180C               	xorwf	(btemp+11)^0,w,c
  5624  012254  0BFE               	andlw	-2
  5625  012256  180C               	xorwf	(btemp+11)^0,w,c
  5626  012258  6FCC               	movwf	(_V+156)& (0+255),b	;volatile
  5627  01225A                     l13029:
  5628                           
  5629                           ;main.c: 398:    set_vterm(V.screen);
  5630  01225A  0101               	movlb	1	; () banked
  5631  01225C  A1CC               	btfss	(_V+156)& (0+255),0,b	;volatile
  5632  01225E  D002               	goto	u12610
  5633  012260  0E01               	movlw	1
  5634  012262  D001               	goto	u12616
  5635  012264                     u12610:
  5636  012264  0E00               	movlw	0
  5637  012266                     u12616:
  5638  012266  6EE6               	movwf	postinc1,c
  5639  012268  ECCD  F0DD         	call	_set_vterm	;wreg free
  5640                           
  5641                           ;main.c: 399:    update_lcd(V.screen);
  5642  01226C  0101               	movlb	1	; () banked
  5643  01226E  A1CC               	btfss	(_V+156)& (0+255),0,b	;volatile
  5644  012270  D002               	goto	u12620
  5645  012272  0E01               	movlw	1
  5646  012274  D001               	goto	u12626
  5647  012276                     u12620:
  5648  012276  0E00               	movlw	0
  5649  012278                     u12626:
  5650  012278  6EE6               	movwf	postinc1,c
  5651  01227A  EC99  F0CC         	call	_update_lcd	;wreg free
  5652  01227E                     l13033:
  5653                           
  5654                           ;main.c: 405:   check_help(V.flipper);
  5655  01227E  0101               	movlb	1	; () banked
  5656  012280  51DB               	movf	(_V+171)& (0+255),w,b	;volatile
  5657  012282  6EE6               	movwf	postinc1,c
  5658  012284  ECC1  F0BF         	call	_check_help	;wreg free
  5659                           
  5660                           ;main.c: 407:   if (V.enter) {
  5661  012288  0101               	movlb	1	; () banked
  5662  01228A  51DD               	movf	(_V+173)& (0+255),w,b	;volatile
  5663  01228C  B4D8               	btfsc	status,2,c
  5664  01228E  D062               	goto	l1366
  5665                           
  5666                           ; BSR set to: 1
  5667                           ;main.c: 408:    V.enter = 0;
  5668  012290  6BDD               	clrf	(_V+173)& (0+255),b	;volatile
  5669                           
  5670                           ;main.c: 409:    V.calib = 0;
  5671  012292  6BDC               	clrf	(_V+172)& (0+255),b	;volatile
  5672                           
  5673                           ; BSR set to: 1
  5674                           ;main.c: 410:    inp_index += 3;
  5675                           ;stkvar	_inp_index @ sp[(-17)+14]
  5676  012294  0EFD               	movlw	-3
  5677  012296  006F FF8C  F001    	movff	plusw1,btemp
  5678  01229C  0E03               	movlw	3
  5679  01229E  2601               	addwf	btemp^0,f,c
  5680  0122A0  0EFD               	movlw	-3
  5681  0122A2  0060  F007  FFE3   	movff	btemp,plusw1
  5682                           
  5683                           ;main.c: 411:    if (inp_index > 9)
  5684                           ;stkvar	_inp_index @ sp[(-17)+14]
  5685  0122A8  0EFD               	movlw	-3
  5686  0122AA  006F FF8C  F001    	movff	plusw1,btemp
  5687  0122B0  0E09               	movlw	9
  5688  0122B2  6401               	cpfsgt	btemp^0,c
  5689  0122B4  D03A               	goto	l13061
  5690                           
  5691                           ; BSR set to: 1
  5692                           ;main.c: 412:     inp_index = 0;
  5693                           ;stkvar	_inp_index @ sp[(-17)+14]
  5694  0122B6  0EFD               	movlw	-3
  5695  0122B8  6AE3               	clrf	plusw1,c
  5696  0122BA  D037               	goto	l13061
  5697  0122BC                     l13043:
  5698                           
  5699                           ; BSR set to: 1
  5700                           ;main.c: 415:     i = C_BATT;
  5701                           ;stkvar	_i @ sp[(-17)+13]
  5702  0122BC  0EFC               	movlw	-4
  5703  0122BE  6AE3               	clrf	plusw1,c
  5704                           
  5705                           ; BSR set to: 1
  5706                           ;main.c: 416:     j = C_PV;
  5707                           ;stkvar	_j @ sp[(-17)+12]
  5708  0122C0  0EFB               	movlw	-5
  5709  0122C2  6AE3               	clrf	plusw1,c
  5710  0122C4  2AE3               	incf	plusw1,f,c
  5711                           
  5712                           ; BSR set to: 1
  5713                           ;main.c: 417:     k = V_CC;
  5714                           ;stkvar	_k @ sp[(-17)+11]
  5715  0122C6  0EFA               	movlw	-6
  5716  0122C8  6AE3               	clrf	plusw1,c
  5717  0122CA  82E3               	bsf	plusw1,1,c
  5718                           
  5719                           ;main.c: 418:     break;
  5720  0122CC  D043               	goto	l1366
  5721  0122CE                     l13049:
  5722                           
  5723                           ; BSR set to: 1
  5724                           ;main.c: 420:     i = V_BAT;
  5725                           ;stkvar	_i @ sp[(-17)+13]
  5726  0122CE  0EFC               	movlw	-4
  5727  0122D0  6AE3               	clrf	plusw1,c
  5728  0122D2  84E3               	bsf	plusw1,2,c
  5729                           
  5730                           ;main.c: 421:     j = V_PV;
  5731                           ;stkvar	_j @ sp[(-17)+12]
  5732  0122D4  0EFB               	movlw	-5
  5733  0122D6  6AE3               	clrf	plusw1,c
  5734  0122D8  80E3               	bsf	plusw1,0,c
  5735  0122DA  84E3               	bsf	plusw1,2,c	;indir
  5736                           
  5737                           ;main.c: 422:     k = V_CBUS;
  5738                           ;stkvar	_k @ sp[(-17)+11]
  5739  0122DC  0EFA               	movlw	-6
  5740  0122DE  6AE3               	clrf	plusw1,c
  5741  0122E0  82E3               	bsf	plusw1,1,c
  5742  0122E2  84E3               	bsf	plusw1,2,c	;indir
  5743                           
  5744                           ;main.c: 423:     break;
  5745  0122E4  D037               	goto	l1366
  5746  0122E6                     l13051:
  5747                           
  5748                           ; BSR set to: 1
  5749                           ;main.c: 425:     i = V_BBAT;
  5750                           ;stkvar	_i @ sp[(-17)+13]
  5751  0122E6  0EFC               	movlw	-4
  5752  0122E8  6AE3               	clrf	plusw1,c
  5753  0122EA  82E3               	bsf	plusw1,1,c
  5754  0122EC  86E3               	bsf	plusw1,3,c	;indir
  5755                           
  5756                           ; BSR set to: 1
  5757                           ;main.c: 426:     j = V_TEMP;
  5758  0122EE  0E0B               	movlw	11
  5759  0122F0  6E0C               	movwf	(btemp+11)^0,c
  5760                           
  5761                           ;stkvar	_j @ sp[(-17)+12]
  5762  0122F2  0EFB               	movlw	-5
  5763  0122F4  0060  F033  FFE3   	movff	btemp+11,plusw1
  5764                           
  5765                           ; BSR set to: 1
  5766                           ;main.c: 427:     k = V_INVERTER;
  5767                           ;stkvar	_k @ sp[(-17)+11]
  5768  0122FA  0EFA               	movlw	-6
  5769  0122FC  6AE3               	clrf	plusw1,c
  5770  0122FE  84E3               	bsf	plusw1,2,c
  5771  012300  86E3               	bsf	plusw1,3,c	;indir
  5772                           
  5773                           ;main.c: 428:     break;
  5774  012302  D028               	goto	l1366
  5775  012304                     l13057:
  5776                           
  5777                           ; BSR set to: 1
  5778                           ;main.c: 430:     i = V_LIGHT_SENSOR;
  5779  012304  0E0D               	movlw	13
  5780  012306  6E0C               	movwf	(btemp+11)^0,c
  5781                           
  5782                           ;stkvar	_i @ sp[(-17)+13]
  5783  012308  0EFC               	movlw	-4
  5784  01230A  0060  F033  FFE3   	movff	btemp+11,plusw1
  5785                           
  5786                           ;main.c: 431:     j = V_LIGHT_SENSOR;
  5787  012310  0E0D               	movlw	13
  5788  012312  6E0C               	movwf	(btemp+11)^0,c
  5789                           
  5790                           ;stkvar	_j @ sp[(-17)+12]
  5791  012314  0EFB               	movlw	-5
  5792  012316  0060  F033  FFE3   	movff	btemp+11,plusw1
  5793                           
  5794                           ;main.c: 432:     k = V_LIGHT_SENSOR;
  5795  01231C  0E0D               	movlw	13
  5796  01231E  6E0C               	movwf	(btemp+11)^0,c
  5797                           
  5798                           ;stkvar	_k @ sp[(-17)+11]
  5799  012320  0EFA               	movlw	-6
  5800  012322  0060  F033  FFE3   	movff	btemp+11,plusw1
  5801                           
  5802                           ;main.c: 433:     break;
  5803  012328  D015               	goto	l1366
  5804  01232A                     l13061:
  5805                           
  5806                           ; BSR set to: 1
  5807                           ;stkvar	_inp_index @ sp[(-17)+14]
  5808  01232A  0EFD               	movlw	-3
  5809  01232C  50E3               	movf	plusw1,w,c
  5810  01232E  6E0B               	movwf	(btemp+10)^0,c
  5811  012330  6A0C               	clrf	(btemp+11)^0,c
  5812                           
  5813                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5814                           ; Switch size 1, requested type "simple"
  5815                           ; Number of cases is 1, Range of values is 0 to 0
  5816                           ; switch strategies available:
  5817                           ; Name         Instructions Cycles
  5818                           ; simple_byte            4     3 (average)
  5819                           ;	Chosen strategy is simple_byte
  5820  012332  500C               	movf	(btemp+11)^0,w,c
  5821  012334  0A00               	xorlw	0	; case 0
  5822  012336  A4D8               	btfss	status,2,c
  5823  012338  D00D               	goto	l1366
  5824                           
  5825                           ; BSR set to: 1
  5826                           ; Switch size 1, requested type "simple"
  5827                           ; Number of cases is 4, Range of values is 0 to 9
  5828                           ; switch strategies available:
  5829                           ; Name         Instructions Cycles
  5830                           ; simple_byte           13     7 (average)
  5831                           ;	Chosen strategy is simple_byte
  5832  01233A  500B               	movf	(btemp+10)^0,w,c
  5833  01233C  0A00               	xorlw	0	; case 0
  5834  01233E  B4D8               	btfsc	status,2,c
  5835  012340  D7BD               	goto	l13043
  5836  012342  0A03               	xorlw	3	; case 3
  5837  012344  B4D8               	btfsc	status,2,c
  5838  012346  D7C3               	goto	l13049
  5839  012348  0A05               	xorlw	5	; case 6
  5840  01234A  B4D8               	btfsc	status,2,c
  5841  01234C  D7CC               	goto	l13051
  5842  01234E  0A0F               	xorlw	15	; case 9
  5843  012350  B4D8               	btfsc	status,2,c
  5844  012352  D7D8               	goto	l13057
  5845  012354                     l1366:
  5846                           
  5847                           ; BSR set to: 1
  5848                           ;main.c: 442:   if (V.set_sequ) {
  5849  012354  A1CB               	btfss	(_V+155)& (0+255),0,b	;volatile
  5850  012356  EF8A  F08C         	goto	l12943
  5851                           
  5852                           ; BSR set to: 1
  5853                           ;main.c: 443:    if (TimerDone(TMR_INFO)) {
  5854  01235A  0E07               	movlw	7
  5855  01235C  6EE6               	movwf	postinc1,c
  5856  01235E  ECF7  F0DB         	call	_TimerDone	;wreg free
  5857  012362  5001               	movf	btemp^0,w,c
  5858  012364  B4D8               	btfsc	status,2,c
  5859  012366  D00C               	goto	l13071
  5860                           
  5861                           ;main.c: 444:     V.set_sequ = 0;
  5862  012368  0101               	movlb	1	; () banked
  5863  01236A  91CB               	bcf	(_V+155)& (0+255),0,b	;volatile
  5864                           
  5865                           ; BSR set to: 1
  5866                           ;main.c: 445:     set_vterm(0);
  5867  01236C  0E00               	movlw	0
  5868  01236E  6EE6               	movwf	postinc1,c
  5869  012370  ECCD  F0DD         	call	_set_vterm	;wreg free
  5870                           
  5871                           ;main.c: 446:     update_lcd(0);
  5872  012374  0E00               	movlw	0
  5873  012376  6EE6               	movwf	postinc1,c
  5874  012378  EC99  F0CC         	call	_update_lcd	;wreg free
  5875                           
  5876                           ;main.c: 447:    } else {
  5877  01237C  EF8A  F08C         	goto	l12943
  5878  012380                     l13071:
  5879                           
  5880                           ;main.c: 448:     set_vterm(2);
  5881  012380  0E02               	movlw	2
  5882  012382  6EE6               	movwf	postinc1,c
  5883  012384  ECCD  F0DD         	call	_set_vterm	;wreg free
  5884                           
  5885                           ;main.c: 449:     update_lcd(2);
  5886  012388  0E02               	movlw	2
  5887  01238A  6EE6               	movwf	postinc1,c
  5888  01238C  EC99  F0CC         	call	_update_lcd	;wreg free
  5889  012390  EF8A  F08C         	goto	l12943
  5890  012394                     __end_of_main:
  5891                           	opt callstack 0
  5892                           
  5893 ;; *************** function _static_soc *****************
  5894 ;; Defined at:
  5895 ;;		line 117 in file "mbmc.c"
  5896 ;; Parameters:    Size  Location     Type
  5897 ;;		None
  5898 ;; Auto vars:     Size  Location     Type
  5899 ;;		None
  5900 ;; Return value:  Size  Location     Type
  5901 ;;                  1  [STACK] void 
  5902 ;; Registers used:
  5903 ;;		wreg, fsr2l, fsr2h
  5904 ;; Tracked objects:
  5905 ;;		On entry : 0/1
  5906 ;;		On exit  : 0/0
  5907 ;;		Unchanged: 0/0
  5908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5909 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5910 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5911 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5912 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5913 ;;Total ram usage:        0 bytes
  5914 ;; Hardware stack levels used:    1
  5915 ;; Hardware stack levels required when called:   15
  5916 ;; This function calls:
  5917 ;;		Nothing
  5918 ;; This function is called by:
  5919 ;;		_main
  5920 ;; This function uses a reentrant model
  5921 ;;
  5922                           
  5923                           	psect	text1
  5924  01B3DC                     __ptext1:
  5925                           	opt callstack 0
  5926  01B3DC                     _static_soc:
  5927                           	opt callstack 15
  5928                           
  5929                           ;mbmc.c: 119:  C.runtime = 120;
  5930                           
  5931                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5932                           ;incstack = 0
  5933  01B3DC  0E78               	movlw	120
  5934  01B3DE  006F FFA0  F7AF    	movff	wreg,_C+176	;volatile
  5935  01B3E4  0E00               	movlw	0
  5936  01B3E6  006F FFA0  F7B0    	movff	wreg,_C+177	;volatile
  5937                           
  5938                           ;mbmc.c: 120:  C.soc = 100;
  5939  01B3EC  0E64               	movlw	100
  5940  01B3EE  006F FFA0  F7B1    	movff	wreg,_C+178	;volatile
  5941  01B3F4  0E00               	movlw	0
  5942  01B3F6  006F FFA0  F7B2    	movff	wreg,_C+179	;volatile
  5943                           
  5944                           ;mbmc.c: 121:  C.dynamic_ah = C.bank_ah;
  5945  01B3FC  EE21  F38B         	lfsr	2,_C+140	;volatile
  5946  01B400  006F FF78  F78F    	movff	postinc2,_C+144	;volatile
  5947  01B406  006F FF78  F790    	movff	postinc2,_C+145	;volatile
  5948  01B40C  006F FF78  F791    	movff	postinc2,_C+146	;volatile
  5949  01B412  006F FF74  F792    	movff	postdec2,_C+147	;volatile
  5950                           
  5951                           ; _static_soc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  5952  01B418  0012               	return		;funcret
  5953  01B41A                     __end_of_static_soc:
  5954                           	opt callstack 0
  5955                           
  5956 ;; *************** function _start_switch_handler *****************
  5957 ;; Defined at:
  5958 ;;		line 124 in file "dio.c"
  5959 ;; Parameters:    Size  Location     Type
  5960 ;;		None
  5961 ;; Auto vars:     Size  Location     Type
  5962 ;;		None
  5963 ;; Return value:  Size  Location     Type
  5964 ;;                  1  [STACK] void 
  5965 ;; Registers used:
  5966 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
  5967 ;; Tracked objects:
  5968 ;;		On entry : 0/0
  5969 ;;		On exit  : 3F/39
  5970 ;;		Unchanged: 0/0
  5971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5972 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5973 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5974 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5975 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5976 ;;Total ram usage:        0 bytes
  5977 ;; Hardware stack levels used:    1
  5978 ;; Hardware stack levels required when called:   16
  5979 ;; This function calls:
  5980 ;;		_INT1_SetInterruptHandler
  5981 ;; This function is called by:
  5982 ;;		_main
  5983 ;; This function uses a reentrant model
  5984 ;;
  5985                           
  5986                           	psect	text2
  5987  01BB3C                     __ptext2:
  5988                           	opt callstack 0
  5989  01BB3C                     _start_switch_handler:
  5990                           	opt callstack 14
  5991                           
  5992                           ;dio.c: 126:  (PIE5bits.INT1IE = 0);
  5993                           
  5994                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5995                           ;incstack = 0
  5996  01BB3C  0139               	movlb	57	; () banked
  5997  01BB3E  9195               	bcf	149,0,b	;volatile
  5998                           
  5999                           ; BSR set to: 57
  6000                           ;dio.c: 127:  INT1_SetInterruptHandler(switch_handler);
  6001  01BB40  0E14               	movlw	low _switch_handler
  6002  01BB42  6EE6               	movwf	postinc1,c
  6003  01BB44  0E91               	movlw	high _switch_handler
  6004  01BB46  6EE6               	movwf	postinc1,c
  6005  01BB48  0E01               	movlw	low (_switch_handler shr (0+16))
  6006  01BB4A  6EE6               	movwf	postinc1,c
  6007  01BB4C  EC83  F0DC         	call	_INT1_SetInterruptHandler	;wreg free
  6008                           
  6009                           ;dio.c: 128:  S.button[SNULL].sw = SW_INVALID;
  6010  01BB50  0E02               	movlw	2
  6011  01BB52  0102               	movlb	2	; () banked
  6012  01BB54  6F77               	movwf	(_S+35)& (0+255),b	;volatile
  6013                           
  6014                           ; BSR set to: 2
  6015                           ;dio.c: 129:  (PIE5bits.INT1IE = 1);
  6016  01BB56  0139               	movlb	57	; () banked
  6017  01BB58  8195               	bsf	149,0,b	;volatile
  6018                           
  6019                           ; BSR set to: 57
  6020                           ; _start_switch_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
  6021  01BB5A  0012               	return		;funcret
  6022  01BB5C                     __end_of_start_switch_handler:
  6023                           	opt callstack 0
  6024                           
  6025 ;; *************** function _srand *****************
  6026 ;; Defined at:
  6027 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/rand.c"
  6028 ;; Parameters:    Size  Location     Type
  6029 ;;  s               2  [STACK] unsigned int 
  6030 ;; Auto vars:     Size  Location     Type
  6031 ;;		None
  6032 ;; Return value:  Size  Location     Type
  6033 ;;                  1  [STACK] void 
  6034 ;; Registers used:
  6035 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+10, btemp+11
  6036 ;; Tracked objects:
  6037 ;;		On entry : 0/0
  6038 ;;		On exit  : 3F/0
  6039 ;;		Unchanged: 0/0
  6040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6041 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6042 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6043 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6044 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6045 ;;Total ram usage:        0 bytes
  6046 ;; Hardware stack levels used:    1
  6047 ;; Hardware stack levels required when called:   15
  6048 ;; This function calls:
  6049 ;;		Nothing
  6050 ;; This function is called by:
  6051 ;;		_main
  6052 ;; This function uses a reentrant model
  6053 ;;
  6054                           
  6055                           	psect	text3
  6056  01B570                     __ptext3:
  6057                           	opt callstack 0
  6058  01B570                     _srand:
  6059                           	opt callstack 15
  6060                           
  6061                           ;stkvar	_s @ sp[(0)+-2]
  6062                           
  6063                           ; BSR set to: 57
  6064                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6065                           ;incstack = 0
  6066  01B570  0EFE               	movlw	-2
  6067  01B572  50E3               	movf	plusw1,w,c
  6068  01B574  0FFF               	addlw	255
  6069  01B576  6E0B               	movwf	(btemp+10)^0,c
  6070  01B578  0EFF               	movlw	-1
  6071  01B57A  006F FF8C  F00C    	movff	plusw1,btemp+11
  6072  01B580  0EFF               	movlw	255
  6073  01B582  220C               	addwfc	(btemp+11)^0,f,c
  6074  01B584  0060  F02C  F0CF   	movff	btemp+10,_seed
  6075  01B58A  0060  F030  F0D0   	movff	btemp+11,_seed+1
  6076  01B590  0100               	movlb	0	; () banked
  6077  01B592  6BD1               	clrf	(_seed+2)& (0+255),b
  6078  01B594  6BD2               	clrf	(_seed+3)& (0+255),b
  6079  01B596  6BD3               	clrf	(_seed+4)& (0+255),b
  6080  01B598  6BD4               	clrf	(_seed+5)& (0+255),b
  6081  01B59A  6BD5               	clrf	(_seed+6)& (0+255),b
  6082  01B59C  6BD6               	clrf	(_seed+7)& (0+255),b
  6083                           
  6084                           ; BSR set to: 0
  6085                           ; _srand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize
      +                           = 2, vargsize = 0
  6086  01B59E  52E5               	movf	postdec1,f,c
  6087  01B5A0  52E5               	movf	postdec1,f,c
  6088  01B5A2  0012               	return		;funcret
  6089  01B5A4                     __end_of_srand:
  6090                           	opt callstack 0
  6091                           
  6092 ;; *************** function _spinners *****************
  6093 ;; Defined at:
  6094 ;;		line 145 in file "mbmc.c"
  6095 ;; Parameters:    Size  Location     Type
  6096 ;;  shape           1  [STACK] unsigned char 
  6097 ;;  reset           1  [STACK] unsigned char 
  6098 ;; Auto vars:     Size  Location     Type
  6099 ;;  c               1  [STACK] unsigned char 
  6100 ;; Return value:  Size  Location     Type
  6101 ;;                  1  [STACK] unsigned char 
  6102 ;; Registers used:
  6103 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+9, btemp+10, btemp+11, tbl
      +ptrl, tblptrh, tblptru, prodl, prodh
  6104 ;; Tracked objects:
  6105 ;;		On entry : 0/0
  6106 ;;		On exit  : 0/0
  6107 ;;		Unchanged: 0/0
  6108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6109 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6110 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6111 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6112 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6113 ;;Total ram usage:        0 bytes
  6114 ;; Hardware stack levels used:    1
  6115 ;; Hardware stack levels required when called:   16
  6116 ;; This function calls:
  6117 ;;		_strlen
  6118 ;; This function is called by:
  6119 ;;		_main
  6120 ;; This function uses a reentrant model
  6121 ;;
  6122                           
  6123                           	psect	text4
  6124  019E28                     __ptext4:
  6125                           	opt callstack 0
  6126  019E28                     _spinners:
  6127                           	opt callstack 0
  6128                           
  6129                           ; BSR set to: 0
  6130                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6131  019E28  52E6               	movf	postinc1,f,c
  6132                           
  6133                           ;mbmc.c: 145: char spinners(uint8_t shape, uint8_t reset);mbmc.c: 146: {;mbmc.c: 147:  s
      +                          tatic uint8_t s[6];;mbmc.c: 148:  char c;;mbmc.c: 150:  if (shape > (6 - 1))
  6134                           ;stkvar	_shape @ sp[(-1)+-1]
  6135                           
  6136                           ;incstack = 0
  6137  019E2A  0EFE               	movlw	-2
  6138  019E2C  006F FF8C  F001    	movff	plusw1,btemp
  6139  019E32  0E05               	movlw	5
  6140  019E34  6401               	cpfsgt	btemp^0,c
  6141  019E36  D002               	goto	l1882
  6142                           
  6143                           ;mbmc.c: 151:   shape = 0;
  6144                           ;stkvar	_shape @ sp[(-1)+-1]
  6145  019E38  0EFE               	movlw	-2
  6146  019E3A  6AE3               	clrf	plusw1,c
  6147  019E3C                     l1882:
  6148                           
  6149                           ;mbmc.c: 152:  if (reset)
  6150                           ;stkvar	_reset @ sp[(-1)+-2]
  6151  019E3C  0EFD               	movlw	-3
  6152  019E3E  50E3               	movf	plusw1,w,c
  6153  019E40  B4D8               	btfsc	status,2,c
  6154  019E42  D00A               	goto	l10761
  6155                           
  6156                           ;mbmc.c: 153:   s[shape] = 0;
  6157                           ;stkvar	_shape @ sp[(-1)+-1]
  6158  019E44  0EFE               	movlw	-2
  6159  019E46  006F FF8C  F00C    	movff	plusw1,btemp+11
  6160  019E4C  500C               	movf	(btemp+11)^0,w,c
  6161  019E4E  0F74               	addlw	low spinners@s
  6162  019E50  6ED9               	movwf	fsr2l,c
  6163  019E52  6ADA               	clrf	fsr2h,c
  6164  019E54  0E00               	movlw	0
  6165  019E56  6EDF               	movwf	indf2,c
  6166  019E58                     l10761:
  6167                           
  6168                           ;mbmc.c: 154:  c = spin[shape][s[shape]];
  6169                           ;stkvar	_shape @ sp[(-1)+-1]
  6170  019E58  0EFE               	movlw	-2
  6171  019E5A  50E3               	movf	plusw1,w,c
  6172  019E5C  0D14               	mullw	20
  6173  019E5E  0EC7               	movlw	low _spin
  6174  019E60  6E0B               	movwf	(btemp+10)^0,c
  6175  019E62  0EFB               	movlw	high _spin
  6176  019E64  6E0C               	movwf	(btemp+11)^0,c
  6177  019E66  50F3               	movf	243,w,c
  6178  019E68  260B               	addwf	(btemp+10)^0,f,c
  6179  019E6A  50F4               	movf	244,w,c
  6180  019E6C  220C               	addwfc	(btemp+11)^0,f,c
  6181                           
  6182                           ;stkvar	_shape @ sp[(-1)+-1]
  6183  019E6E  0EFE               	movlw	-2
  6184  019E70  006F FF8C  F00A    	movff	plusw1,btemp+9
  6185  019E76  500A               	movf	(btemp+9)^0,w,c
  6186  019E78  0F74               	addlw	low spinners@s
  6187  019E7A  6ED9               	movwf	fsr2l,c
  6188  019E7C  6ADA               	clrf	fsr2h,c
  6189  019E7E  50DF               	movf	indf2,w,c
  6190  019E80  260B               	addwf	(btemp+10)^0,f,c
  6191  019E82  0E00               	movlw	0
  6192  019E84  220C               	addwfc	(btemp+11)^0,f,c
  6193  019E86  0060  F02F  FFF6   	movff	btemp+10,tblptrl
  6194  019E8C  0060  F033  FFF7   	movff	btemp+11,tblptrh
  6195  019E92                     	if	0	;tblptru may be non-zero
  6196  019E92                     	endif
  6197  019E92                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6198  019E92  0E00               	movlw	low (__mediumconst shr (0+16))
  6199  019E94  6EF8               	movwf	tblptru,c
  6200  019E96                     	endif
  6201                           
  6202                           ;stkvar	_c @ sp[(-1)+0]
  6203  019E96  0008               	tblrd		*
  6204  019E98  0EFF               	movlw	-1
  6205  019E9A  006F FFD7 FFE3     	movff	tablat,plusw1
  6206                           
  6207                           ;mbmc.c: 155:  if (++s[shape] >= strlen(spin[shape]))
  6208                           ;stkvar	_shape @ sp[(-1)+-1]
  6209  019EA0  0EFE               	movlw	-2
  6210  019EA2  50E3               	movf	plusw1,w,c
  6211  019EA4  0D14               	mullw	20
  6212  019EA6  0EC7               	movlw	low _spin
  6213  019EA8  6E0B               	movwf	(btemp+10)^0,c
  6214  019EAA  0EFB               	movlw	high _spin
  6215  019EAC  6E0C               	movwf	(btemp+11)^0,c
  6216  019EAE  50F3               	movf	243,w,c
  6217  019EB0  260B               	addwf	(btemp+10)^0,f,c
  6218  019EB2  50F4               	movf	244,w,c
  6219  019EB4  220C               	addwfc	(btemp+11)^0,f,c
  6220  019EB6  0060  F02F  FFE6   	movff	btemp+10,postinc1
  6221  019EBC  0060  F033  FFE6   	movff	btemp+11,postinc1
  6222  019EC2  ECE0  F0D2         	call	_strlen	;wreg free
  6223                           
  6224                           ;stkvar	_shape @ sp[(-1)+-1]
  6225  019EC6  0EFE               	movlw	-2
  6226  019EC8  006F FF8C  F00C    	movff	plusw1,btemp+11
  6227  019ECE  500C               	movf	(btemp+11)^0,w,c
  6228  019ED0  0F74               	addlw	low spinners@s
  6229  019ED2  6ED9               	movwf	fsr2l,c
  6230  019ED4  6ADA               	clrf	fsr2h,c
  6231  019ED6  2ADF               	incf	indf2,f,c
  6232  019ED8  50DF               	movf	indf2,w,c
  6233  019EDA  6E0B               	movwf	(btemp+10)^0,c
  6234  019EDC  6A0C               	clrf	(btemp+11)^0,c
  6235  019EDE  5001               	movf	btemp^0,w,c
  6236  019EE0  5C0B               	subwf	(btemp+10)^0,w,c
  6237  019EE2  5002               	movf	(btemp+1)^0,w,c
  6238  019EE4  580C               	subwfb	(btemp+11)^0,w,c
  6239  019EE6  A0D8               	btfss	status,0,c
  6240  019EE8  D00A               	goto	l10767
  6241                           
  6242                           ;mbmc.c: 156:   s[shape] = 0;
  6243                           ;stkvar	_shape @ sp[(-1)+-1]
  6244  019EEA  0EFE               	movlw	-2
  6245  019EEC  006F FF8C  F00C    	movff	plusw1,btemp+11
  6246  019EF2  500C               	movf	(btemp+11)^0,w,c
  6247  019EF4  0F74               	addlw	low spinners@s
  6248  019EF6  6ED9               	movwf	fsr2l,c
  6249  019EF8  6ADA               	clrf	fsr2h,c
  6250  019EFA  0E00               	movlw	0
  6251  019EFC  6EDF               	movwf	indf2,c
  6252  019EFE                     l10767:
  6253                           
  6254                           ;mbmc.c: 157:  return c;
  6255                           ;stkvar	_c @ sp[(-1)+0]
  6256  019EFE  0EFF               	movlw	-1
  6257  019F00  006F FF8C  F001    	movff	plusw1,btemp
  6258                           
  6259                           ; _spinners: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, args
      +                          ize = 2, vargsize = 0
  6260  019F06  52E5               	movf	postdec1,f,c
  6261  019F08  52E5               	movf	postdec1,f,c
  6262  019F0A  52E5               	movf	postdec1,f,c
  6263  019F0C  0012               	return		;funcret
  6264  019F0E                     __end_of_spinners:
  6265                           	opt callstack 0
  6266                           
  6267 ;; *************** function _init_port_dma *****************
  6268 ;; Defined at:
  6269 ;;		line 90 in file "eadog.c"
  6270 ;; Parameters:    Size  Location     Type
  6271 ;;		None
  6272 ;; Auto vars:     Size  Location     Type
  6273 ;;		None
  6274 ;; Return value:  Size  Location     Type
  6275 ;;                  1  [STACK] void 
  6276 ;; Registers used:
  6277 ;;		wreg, status,2
  6278 ;; Tracked objects:
  6279 ;;		On entry : 0/1
  6280 ;;		On exit  : 3F/3B
  6281 ;;		Unchanged: 0/0
  6282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6283 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6284 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6286 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6287 ;;Total ram usage:        0 bytes
  6288 ;; Hardware stack levels used:    1
  6289 ;; Hardware stack levels required when called:   15
  6290 ;; This function calls:
  6291 ;;		Nothing
  6292 ;; This function is called by:
  6293 ;;		_main
  6294 ;; This function uses a reentrant model
  6295 ;;
  6296                           
  6297                           	psect	text5
  6298  01B5D8                     __ptext5:
  6299                           	opt callstack 0
  6300  01B5D8                     _init_port_dma:
  6301                           	opt callstack 15
  6302                           
  6303                           ;eadog.c: 92:  DMA2CON1bits.DMODE = 0;
  6304                           
  6305                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6306                           ;incstack = 0
  6307  01B5D8  0E3F               	movlw	-193
  6308  01B5DA  013B               	movlb	59	; () banked
  6309  01B5DC  17DD               	andwf	221,f,b	;volatile
  6310                           
  6311                           ; BSR set to: 59
  6312                           ;eadog.c: 93:  DMA2CON1bits.DSTP = 0;
  6313  01B5DE  9BDD               	bcf	221,5,b	;volatile
  6314                           
  6315                           ;eadog.c: 94:  DMA2CON1bits.SMODE = 1;
  6316  01B5E0  51DD               	movf	221,w,b	;volatile
  6317  01B5E2  0BF9               	andlw	-7
  6318  01B5E4  0902               	iorlw	2
  6319  01B5E6  6FDD               	movwf	221,b	;volatile
  6320                           
  6321                           ;eadog.c: 95:  DMA2CON1bits.SMR = 0;
  6322  01B5E8  0EE7               	movlw	-25
  6323  01B5EA  17DD               	andwf	221,f,b	;volatile
  6324                           
  6325                           ; BSR set to: 59
  6326                           ;eadog.c: 96:  DMA2CON1bits.SSTP = 1;
  6327  01B5EC  81DD               	bsf	221,0,b	;volatile
  6328                           
  6329                           ; BSR set to: 59
  6330                           ;eadog.c: 97:  DMA2CON0bits.SIRQEN = 0;
  6331  01B5EE  9DDC               	bcf	220,6,b	;volatile
  6332                           
  6333                           ;eadog.c: 98:  DMA2DSA = 0x3DEA;
  6334  01B5F0  0E3D               	movlw	61
  6335  01B5F2  6FD1               	movwf	209,b	;volatile
  6336  01B5F4  0EEA               	movlw	234
  6337  01B5F6  6FD0               	movwf	208,b	;volatile
  6338                           
  6339                           ;eadog.c: 99:  DMA2SSA = (uint32_t) port_data;
  6340  01B5F8  0EFF               	movlw	low _port_data
  6341  01B5FA  6FD9               	movwf	217,b	;volatile
  6342  01B5FC  0E04               	movlw	high _port_data
  6343  01B5FE  6FDA               	movwf	218,b	;volatile
  6344  01B600  0E00               	movlw	low (_port_data shr (0+16))
  6345  01B602  6FDB               	movwf	219,b	;volatile
  6346                           
  6347                           ; BSR set to: 59
  6348                           ;eadog.c: 100:  DMA2CON0bits.DGO = 0;
  6349  01B604  9BDC               	bcf	220,5,b	;volatile
  6350                           
  6351                           ; BSR set to: 59
  6352                           ; _init_port_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  6353  01B606  0012               	return		;funcret
  6354  01B608                     __end_of_init_port_dma:
  6355                           	opt callstack 0
  6356                           
  6357 ;; *************** function _init_display *****************
  6358 ;; Defined at:
  6359 ;;		line 38 in file "eadog.c"
  6360 ;; Parameters:    Size  Location     Type
  6361 ;;		None
  6362 ;; Auto vars:     Size  Location     Type
  6363 ;;		None
  6364 ;; Return value:  Size  Location     Type
  6365 ;;                  1  [STACK] void 
  6366 ;; Registers used:
  6367 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  6368 ;; Tracked objects:
  6369 ;;		On entry : 3F/3B
  6370 ;;		On exit  : 3F/3D
  6371 ;;		Unchanged: 0/0
  6372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6373 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6374 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6375 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6376 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6377 ;;Total ram usage:        0 bytes
  6378 ;; Hardware stack levels used:    1
  6379 ;; Hardware stack levels required when called:   17
  6380 ;; This function calls:
  6381 ;;		_ringBufS_init
  6382 ;;		_send_lcd_cmd
  6383 ;;		_send_lcd_cmd_long
  6384 ;;		_wdtdelay
  6385 ;; This function is called by:
  6386 ;;		_main
  6387 ;; This function uses a reentrant model
  6388 ;;
  6389                           
  6390                           	psect	text6
  6391  019D3E                     __ptext6:
  6392                           	opt callstack 0
  6393  019D3E                     _init_display:
  6394                           	opt callstack 13
  6395                           
  6396                           ;eadog.c: 40:  spi_link.tx1a = &ring_buf1;
  6397                           
  6398                           ; BSR set to: 59
  6399                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6400                           ;incstack = 0
  6401  019D3E  0E83               	movlw	low _ring_buf1
  6402  019D40  0100               	movlb	0	; () banked
  6403  019D42  6F66               	movwf	(_spi_link+6)& (0+255),b	;volatile
  6404  019D44  0E03               	movlw	high _ring_buf1
  6405  019D46  6F67               	movwf	(_spi_link+7)& (0+255),b	;volatile
  6406                           
  6407                           ;eadog.c: 41:  spi_link.tx1b = &ring_buf2;
  6408  019D48  0E40               	movlw	low _ring_buf2
  6409  019D4A  6F64               	movwf	(_spi_link+4)& (0+255),b	;volatile
  6410  019D4C  0E03               	movlw	high _ring_buf2
  6411  019D4E  6F65               	movwf	(_spi_link+5)& (0+255),b	;volatile
  6412                           
  6413                           ; BSR set to: 0
  6414                           ;eadog.c: 42:  ringBufS_init(spi_link.tx1a);
  6415  019D50  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
  6416  019D56  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
  6417  019D5C  ECE3  F0DB         	call	_ringBufS_init	;wreg free
  6418                           
  6419                           ;eadog.c: 43:  ringBufS_init(spi_link.tx1b);
  6420  019D60  0060  F193  FFE6   	movff	_spi_link+4,postinc1
  6421  019D66  0060  F197  FFE6   	movff	_spi_link+5,postinc1
  6422  019D6C  ECE3  F0DB         	call	_ringBufS_init	;wreg free
  6423                           
  6424                           ;eadog.c: 45:  LATEbits.LATE2 = 1;
  6425  019D70  84BE               	bsf	190,2,c	;volatile
  6426  019D72  84BC               	bsf	188,2,c	;volatile
  6427                           
  6428                           ;eadog.c: 59:  wdtdelay(350000);
  6429  019D74  0E30               	movlw	48
  6430  019D76  6EE6               	movwf	postinc1,c
  6431  019D78  0E57               	movlw	87
  6432  019D7A  6EE6               	movwf	postinc1,c
  6433  019D7C  0E05               	movlw	5
  6434  019D7E  6EE6               	movwf	postinc1,c
  6435  019D80  0E00               	movlw	0
  6436  019D82  6EE6               	movwf	postinc1,c
  6437  019D84  EC34  F0D7         	call	_wdtdelay	;wreg free
  6438                           
  6439                           ; BSR set to: 0
  6440                           ;eadog.c: 60:  send_lcd_cmd(0x39);
  6441  019D88  0E39               	movlw	57
  6442  019D8A  6EE6               	movwf	postinc1,c
  6443  019D8C  ECCF  F0DB         	call	_send_lcd_cmd	;wreg free
  6444                           
  6445                           ; BSR set to: 0
  6446                           ;eadog.c: 61:  send_lcd_cmd(0x1d);
  6447  019D90  0E1D               	movlw	29
  6448  019D92  6EE6               	movwf	postinc1,c
  6449  019D94  ECCF  F0DB         	call	_send_lcd_cmd	;wreg free
  6450                           
  6451                           ; BSR set to: 0
  6452                           ;eadog.c: 62:  send_lcd_cmd(0x50);
  6453  019D98  0E50               	movlw	80
  6454  019D9A  6EE6               	movwf	postinc1,c
  6455  019D9C  ECCF  F0DB         	call	_send_lcd_cmd	;wreg free
  6456                           
  6457                           ; BSR set to: 0
  6458                           ;eadog.c: 63:  send_lcd_cmd(0x6c);
  6459  019DA0  0E6C               	movlw	108
  6460  019DA2  6EE6               	movwf	postinc1,c
  6461  019DA4  ECCF  F0DB         	call	_send_lcd_cmd	;wreg free
  6462                           
  6463                           ; BSR set to: 0
  6464                           ;eadog.c: 64:  send_lcd_cmd(0x76);
  6465  019DA8  0E76               	movlw	118
  6466  019DAA  6EE6               	movwf	postinc1,c
  6467  019DAC  ECCF  F0DB         	call	_send_lcd_cmd	;wreg free
  6468                           
  6469                           ; BSR set to: 0
  6470                           ;eadog.c: 65:  send_lcd_cmd_long(0x38);
  6471  019DB0  0E38               	movlw	56
  6472  019DB2  6EE6               	movwf	postinc1,c
  6473  019DB4  ECBB  F0DB         	call	_send_lcd_cmd_long	;wreg free
  6474                           
  6475                           ; BSR set to: 0
  6476                           ;eadog.c: 66:  send_lcd_cmd(0x0f);
  6477  019DB8  0E0F               	movlw	15
  6478  019DBA  6EE6               	movwf	postinc1,c
  6479  019DBC  ECCF  F0DB         	call	_send_lcd_cmd	;wreg free
  6480                           
  6481                           ; BSR set to: 0
  6482                           ;eadog.c: 67:  send_lcd_cmd_long(0x01);
  6483  019DC0  0E01               	movlw	1
  6484  019DC2  6EE6               	movwf	postinc1,c
  6485  019DC4  ECBB  F0DB         	call	_send_lcd_cmd_long	;wreg free
  6486                           
  6487                           ; BSR set to: 0
  6488                           ;eadog.c: 68:  send_lcd_cmd(0x02);
  6489  019DC8  0E02               	movlw	2
  6490  019DCA  6EE6               	movwf	postinc1,c
  6491  019DCC  ECCF  F0DB         	call	_send_lcd_cmd	;wreg free
  6492                           
  6493                           ; BSR set to: 0
  6494                           ;eadog.c: 69:  send_lcd_cmd(0x06);
  6495  019DD0  0E06               	movlw	6
  6496  019DD2  6EE6               	movwf	postinc1,c
  6497  019DD4  ECCF  F0DB         	call	_send_lcd_cmd	;wreg free
  6498                           
  6499                           ; BSR set to: 0
  6500                           ;eadog.c: 70:  wdtdelay(30);
  6501  019DD8  0E1E               	movlw	30
  6502  019DDA  6EE6               	movwf	postinc1,c
  6503  019DDC  0E00               	movlw	0
  6504  019DDE  6EE6               	movwf	postinc1,c
  6505  019DE0  0E00               	movlw	0
  6506  019DE2  6EE6               	movwf	postinc1,c
  6507  019DE4  0E00               	movlw	0
  6508  019DE6  6EE6               	movwf	postinc1,c
  6509  019DE8  EC34  F0D7         	call	_wdtdelay	;wreg free
  6510                           
  6511                           ; BSR set to: 0
  6512                           ;eadog.c: 71:  SPI1CON2 = 0x02;
  6513  019DEC  0E02               	movlw	2
  6514  019DEE  013D               	movlb	61	; () banked
  6515  019DF0  6F16               	movwf	22,b	;volatile
  6516                           
  6517                           ; BSR set to: 61
  6518                           ;eadog.c: 72:  SPI1CON1 = 0x40;
  6519  019DF2  0E40               	movlw	64
  6520  019DF4  6F15               	movwf	21,b	;volatile
  6521                           
  6522                           ; BSR set to: 61
  6523                           ;eadog.c: 73:  SPI1CON0 = 0x83;
  6524  019DF6  0E83               	movlw	131
  6525  019DF8  6F14               	movwf	20,b	;volatile
  6526                           
  6527                           ; BSR set to: 61
  6528                           ;eadog.c: 75:  SPI1INTFbits.SPI1TXUIF = 0;
  6529  019DFA  931A               	bcf	26,1,b	;volatile
  6530                           
  6531                           ; BSR set to: 61
  6532                           ;eadog.c: 76:  DMA1CON1bits.DMODE = 0;
  6533  019DFC  0E3F               	movlw	-193
  6534  019DFE  013B               	movlb	59	; () banked
  6535  019E00  17FD               	andwf	253,f,b	;volatile
  6536                           
  6537                           ; BSR set to: 59
  6538                           ;eadog.c: 77:  DMA1CON1bits.DSTP = 0;
  6539  019E02  9BFD               	bcf	253,5,b	;volatile
  6540                           
  6541                           ; BSR set to: 59
  6542                           ;eadog.c: 78:  DMA1CON1bits.SMODE = 1;
  6543  019E04  51FD               	movf	253,w,b	;volatile
  6544  019E06  0BF9               	andlw	-7
  6545  019E08  0902               	iorlw	2
  6546  019E0A  6FFD               	movwf	253,b	;volatile
  6547                           
  6548                           ; BSR set to: 59
  6549                           ;eadog.c: 79:  DMA1CON1bits.SMR = 0;
  6550  019E0C  0EE7               	movlw	-25
  6551  019E0E  17FD               	andwf	253,f,b	;volatile
  6552                           
  6553                           ; BSR set to: 59
  6554                           ;eadog.c: 80:  DMA1CON1bits.SSTP = 1;
  6555  019E10  81FD               	bsf	253,0,b	;volatile
  6556                           
  6557                           ; BSR set to: 59
  6558                           ;eadog.c: 81:  DMA1SSA = (uint32_t) & ring_buf1;
  6559  019E12  0E83               	movlw	low _ring_buf1
  6560  019E14  6FF9               	movwf	249,b	;volatile
  6561  019E16  0E03               	movlw	high _ring_buf1
  6562  019E18  6FFA               	movwf	250,b	;volatile
  6563  019E1A  0E00               	movlw	low (_ring_buf1 shr (0+16))
  6564  019E1C  6FFB               	movwf	251,b	;volatile
  6565                           
  6566                           ; BSR set to: 59
  6567                           ;eadog.c: 82:  DMA1CON0bits.DGO = 0;
  6568  019E1E  9BFC               	bcf	252,5,b	;volatile
  6569                           
  6570                           ; BSR set to: 59
  6571                           ;eadog.c: 83:  SPI1INTFbits.SPI1TXUIF = 1;
  6572  019E20  013D               	movlb	61	; () banked
  6573  019E22  831A               	bsf	26,1,b	;volatile
  6574                           
  6575                           ; BSR set to: 61
  6576                           ;eadog.c: 84:  LATEbits.LATE2 = 0;
  6577  019E24  94BE               	bcf	190,2,c	;volatile
  6578                           
  6579                           ; BSR set to: 61
  6580                           ; _init_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  6581  019E26  0012               	return		;funcret
  6582  019E28                     __end_of_init_display:
  6583                           	opt callstack 0
  6584                           
  6585 ;; *************** function _send_lcd_cmd_long *****************
  6586 ;; Defined at:
  6587 ;;		line 129 in file "eadog.c"
  6588 ;; Parameters:    Size  Location     Type
  6589 ;;  cmd             1  [STACK] const unsigned char 
  6590 ;; Auto vars:     Size  Location     Type
  6591 ;;		None
  6592 ;; Return value:  Size  Location     Type
  6593 ;;                  1  [STACK] void 
  6594 ;; Registers used:
  6595 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  6596 ;; Tracked objects:
  6597 ;;		On entry : 3F/0
  6598 ;;		On exit  : 3F/0
  6599 ;;		Unchanged: 0/0
  6600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6601 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6602 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6604 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6605 ;;Total ram usage:        0 bytes
  6606 ;; Hardware stack levels used:    1
  6607 ;; Hardware stack levels required when called:   16
  6608 ;; This function calls:
  6609 ;;		_SPI1_Exchange8bit
  6610 ;;		_wdtdelay
  6611 ;; This function is called by:
  6612 ;;		_init_display
  6613 ;; This function uses a reentrant model
  6614 ;;
  6615                           
  6616                           	psect	text7
  6617  01B776                     __ptext7:
  6618                           	opt callstack 0
  6619  01B776                     _send_lcd_cmd_long:
  6620                           	opt callstack 13
  6621                           
  6622                           ; BSR set to: 61
  6623                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6624                           ;incstack = 0
  6625                           ;eadog.c: 129: static void send_lcd_cmd_long(const uint8_t cmd);eadog.c: 130: {;eadog.c:
      +                           131:  do { LATCbits.LATC1 = 0; } while(0);
  6626  01B776  92BC               	bcf	188,1,c	;volatile
  6627                           
  6628                           ;eadog.c: 132:  do { LATCbits.LATC2 = 0; } while(0);
  6629  01B778  94BC               	bcf	188,2,c	;volatile
  6630                           
  6631                           ;eadog.c: 133:  SPI1_Exchange8bit(cmd);
  6632                           ;stkvar	_cmd @ sp[(0)+-1]
  6633  01B77A  0EFF               	movlw	-1
  6634  01B77C  50E3               	movf	plusw1,w,c
  6635  01B77E  6EE6               	movwf	postinc1,c
  6636  01B780  ECBE  F0DD         	call	_SPI1_Exchange8bit	;wreg free
  6637                           
  6638                           ; BSR set to: 57
  6639                           ;eadog.c: 134:  wdtdelay(800);
  6640  01B784  0E20               	movlw	32
  6641  01B786  6EE6               	movwf	postinc1,c
  6642  01B788  0E03               	movlw	3
  6643  01B78A  6EE6               	movwf	postinc1,c
  6644  01B78C  0E00               	movlw	0
  6645  01B78E  6EE6               	movwf	postinc1,c
  6646  01B790  0E00               	movlw	0
  6647  01B792  6EE6               	movwf	postinc1,c
  6648  01B794  EC34  F0D7         	call	_wdtdelay	;wreg free
  6649                           
  6650                           ; BSR set to: 0
  6651  01B798  82BC               	bsf	188,1,c	;volatile
  6652                           
  6653                           ; BSR set to: 0
  6654                           ; _send_lcd_cmd_long: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  6655  01B79A  52E5               	movf	postdec1,f,c
  6656  01B79C  0012               	return		;funcret
  6657  01B79E                     __end_of_send_lcd_cmd_long:
  6658                           	opt callstack 0
  6659                           
  6660 ;; *************** function _send_lcd_cmd *****************
  6661 ;; Defined at:
  6662 ;;		line 117 in file "eadog.c"
  6663 ;; Parameters:    Size  Location     Type
  6664 ;;  cmd             1  [STACK] const unsigned char 
  6665 ;; Auto vars:     Size  Location     Type
  6666 ;;		None
  6667 ;; Return value:  Size  Location     Type
  6668 ;;                  1  [STACK] void 
  6669 ;; Registers used:
  6670 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  6671 ;; Tracked objects:
  6672 ;;		On entry : 3F/0
  6673 ;;		On exit  : 3F/0
  6674 ;;		Unchanged: 0/0
  6675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6676 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6677 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6678 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6679 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6680 ;;Total ram usage:        0 bytes
  6681 ;; Hardware stack levels used:    1
  6682 ;; Hardware stack levels required when called:   16
  6683 ;; This function calls:
  6684 ;;		_SPI1_Exchange8bit
  6685 ;;		_wdtdelay
  6686 ;; This function is called by:
  6687 ;;		_init_display
  6688 ;; This function uses a reentrant model
  6689 ;;
  6690                           
  6691                           	psect	text8
  6692  01B79E                     __ptext8:
  6693                           	opt callstack 0
  6694  01B79E                     _send_lcd_cmd:
  6695                           	opt callstack 13
  6696                           
  6697                           ; BSR set to: 0
  6698                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6699                           ;incstack = 0
  6700                           ;eadog.c: 117: static void send_lcd_cmd(const uint8_t cmd);eadog.c: 118: {;eadog.c: 119:
      +                            do { LATCbits.LATC1 = 0; } while(0);
  6701  01B79E  92BC               	bcf	188,1,c	;volatile
  6702                           
  6703                           ;eadog.c: 120:  do { LATCbits.LATC2 = 0; } while(0);
  6704  01B7A0  94BC               	bcf	188,2,c	;volatile
  6705                           
  6706                           ;eadog.c: 121:  SPI1_Exchange8bit(cmd);
  6707                           ;stkvar	_cmd @ sp[(0)+-1]
  6708  01B7A2  0EFF               	movlw	-1
  6709  01B7A4  50E3               	movf	plusw1,w,c
  6710  01B7A6  6EE6               	movwf	postinc1,c
  6711  01B7A8  ECBE  F0DD         	call	_SPI1_Exchange8bit	;wreg free
  6712                           
  6713                           ; BSR set to: 57
  6714                           ;eadog.c: 122:  wdtdelay(30);
  6715  01B7AC  0E1E               	movlw	30
  6716  01B7AE  6EE6               	movwf	postinc1,c
  6717  01B7B0  0E00               	movlw	0
  6718  01B7B2  6EE6               	movwf	postinc1,c
  6719  01B7B4  0E00               	movlw	0
  6720  01B7B6  6EE6               	movwf	postinc1,c
  6721  01B7B8  0E00               	movlw	0
  6722  01B7BA  6EE6               	movwf	postinc1,c
  6723  01B7BC  EC34  F0D7         	call	_wdtdelay	;wreg free
  6724                           
  6725                           ; BSR set to: 0
  6726  01B7C0  82BC               	bsf	188,1,c	;volatile
  6727                           
  6728                           ; BSR set to: 0
  6729                           ; _send_lcd_cmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
  6730  01B7C2  52E5               	movf	postdec1,f,c
  6731  01B7C4  0012               	return		;funcret
  6732  01B7C6                     __end_of_send_lcd_cmd:
  6733                           	opt callstack 0
  6734                           
  6735 ;; *************** function _SPI1_Exchange8bit *****************
  6736 ;; Defined at:
  6737 ;;		line 79 in file "mcc_generated_files/spi1.c"
  6738 ;; Parameters:    Size  Location     Type
  6739 ;;  data            1  [STACK] unsigned char 
  6740 ;; Auto vars:     Size  Location     Type
  6741 ;;		None
  6742 ;; Return value:  Size  Location     Type
  6743 ;;                  1  [STACK] unsigned char 
  6744 ;; Registers used:
  6745 ;;		wreg, fsr1l, fsr1h, status,2, btemp
  6746 ;; Tracked objects:
  6747 ;;		On entry : 0/0
  6748 ;;		On exit  : 3F/39
  6749 ;;		Unchanged: 0/0
  6750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6751 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6752 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6753 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6754 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6755 ;;Total ram usage:        0 bytes
  6756 ;; Hardware stack levels used:    1
  6757 ;; Hardware stack levels required when called:   15
  6758 ;; This function calls:
  6759 ;;		Nothing
  6760 ;; This function is called by:
  6761 ;;		_send_lcd_cmd
  6762 ;;		_send_lcd_cmd_long
  6763 ;; This function uses a reentrant model
  6764 ;;
  6765                           
  6766                           	psect	text9
  6767  01BB7C                     __ptext9:
  6768                           	opt callstack 0
  6769  01BB7C                     _SPI1_Exchange8bit:
  6770                           	opt callstack 13
  6771                           
  6772                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
  6773                           
  6774                           ; BSR set to: 0
  6775                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6776                           ;incstack = 0
  6777  01BB7C  0E01               	movlw	1
  6778  01BB7E  013D               	movlb	61	; () banked
  6779  01BB80  6F12               	movwf	18,b	;volatile
  6780                           
  6781                           ; BSR set to: 61
  6782                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
  6783                           ;stkvar	_data @ sp[(0)+-1]
  6784  01BB82  0EFF               	movlw	-1
  6785  01BB84  006F FF8F FD11     	movff	plusw1,15633	;volatile
  6786  01BB8A                     l807:
  6787                           
  6788                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
  6789  01BB8A  0139               	movlb	57	; () banked
  6790  01BB8C  A9A2               	btfss	162,4,b	;volatile
  6791  01BB8E  D7FD               	goto	l807
  6792                           
  6793                           ; BSR set to: 57
  6794                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
  6795  01BB90  006F F440  F001    	movff	15632,btemp	;volatile
  6796                           
  6797                           ; BSR set to: 57
  6798                           ; _SPI1_Exchange8bit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  6799  01BB96  52E5               	movf	postdec1,f,c
  6800  01BB98  0012               	return		;funcret
  6801  01BB9A                     __end_of_SPI1_Exchange8bit:
  6802                           	opt callstack 0
  6803                           
  6804 ;; *************** function _ringBufS_init *****************
  6805 ;; Defined at:
  6806 ;;		line 22 in file "ringbufs.c"
  6807 ;; Parameters:    Size  Location     Type
  6808 ;;  _this           2  [STACK] PTR volatile struct ring
  6809 ;;		 -> ring_buf2(67), ring_buf1(67), 
  6810 ;; Auto vars:     Size  Location     Type
  6811 ;;		None
  6812 ;; Return value:  Size  Location     Type
  6813 ;;                  1  [STACK] void 
  6814 ;; Registers used:
  6815 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  6816 ;; Tracked objects:
  6817 ;;		On entry : 0/0
  6818 ;;		On exit  : 0/0
  6819 ;;		Unchanged: 0/0
  6820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6821 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6822 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6823 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6824 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6825 ;;Total ram usage:        0 bytes
  6826 ;; Hardware stack levels used:    1
  6827 ;; Hardware stack levels required when called:   16
  6828 ;; This function calls:
  6829 ;;		_memset
  6830 ;; This function is called by:
  6831 ;;		_init_display
  6832 ;; This function uses a reentrant model
  6833 ;;
  6834                           
  6835                           	psect	text10
  6836  01B7C6                     __ptext10:
  6837                           	opt callstack 0
  6838  01B7C6                     _ringBufS_init:
  6839                           	opt callstack 13
  6840                           
  6841                           ;ringbufs.c: 22: void ringBufS_init(volatile ringBufS_t *_this);ringbufs.c: 23: {;ringbu
      +                          fs.c: 32:  memset((void*)_this, 0, sizeof(*_this));
  6842                           
  6843                           ; BSR set to: 57
  6844                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6845                           ;incstack = 0
  6846  01B7C6  0E43               	movlw	67
  6847  01B7C8  6EE6               	movwf	postinc1,c
  6848  01B7CA  0E00               	movlw	0
  6849  01B7CC  6EE6               	movwf	postinc1,c
  6850  01B7CE  0E00               	movlw	0
  6851  01B7D0  6EE6               	movwf	postinc1,c
  6852  01B7D2  0E00               	movlw	0
  6853  01B7D4  6EE6               	movwf	postinc1,c
  6854                           
  6855                           ;stkvar	__this @ sp[(-4)+-2]
  6856  01B7D6  0EFA               	movlw	-6
  6857  01B7D8  006F FF8F FFE6     	movff	plusw1,postinc1
  6858  01B7DE  006F FF8F FFE6     	movff	plusw1,postinc1
  6859  01B7E4  ECC5  F0B5         	call	_memset	;wreg free
  6860                           
  6861                           ; _ringBufS_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  6862  01B7E8  52E5               	movf	postdec1,f,c
  6863  01B7EA  52E5               	movf	postdec1,f,c
  6864  01B7EC  0012               	return		;funcret
  6865  01B7EE                     __end_of_ringBufS_init:
  6866                           	opt callstack 0
  6867                           
  6868 ;; *************** function _init_bsoc *****************
  6869 ;; Defined at:
  6870 ;;		line 95 in file "bsoc.c"
  6871 ;; Parameters:    Size  Location     Type
  6872 ;;		None
  6873 ;; Auto vars:     Size  Location     Type
  6874 ;;		None
  6875 ;; Return value:  Size  Location     Type
  6876 ;;                  1  [STACK] void 
  6877 ;; Registers used:
  6878 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
  6879 ;; Tracked objects:
  6880 ;;		On entry : 0/1
  6881 ;;		On exit  : 0/0
  6882 ;;		Unchanged: 0/0
  6883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6884 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6885 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6886 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6887 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6888 ;;Total ram usage:        0 bytes
  6889 ;; Hardware stack levels used:    1
  6890 ;; Hardware stack levels required when called:   18
  6891 ;; This function calls:
  6892 ;;		_TMR3_SetInterruptHandler
  6893 ;;		_Volts_to_SOC
  6894 ;;		___fldiv
  6895 ;;		___flmul
  6896 ;;		___fltol
  6897 ;;		___xxtofl
  6898 ;;		_conv_raw_result
  6899 ;; This function is called by:
  6900 ;;		_main
  6901 ;; This function uses a reentrant model
  6902 ;;
  6903                           
  6904                           	psect	text11
  6905  017B38                     __ptext11:
  6906                           	opt callstack 0
  6907  017B38                     _init_bsoc:
  6908                           	opt callstack 12
  6909                           
  6910                           ;bsoc.c: 100:  C.soc = Volts_to_SOC((uint32_t) conv_raw_result(V_BAT, CONV) * 1000.0);
  6911                           
  6912                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6913                           ;incstack = 0
  6914  017B38  0E00               	movlw	0
  6915  017B3A  6EE6               	movwf	postinc1,c
  6916  017B3C  0E00               	movlw	0
  6917  017B3E  6EE6               	movwf	postinc1,c
  6918  017B40  0E7A               	movlw	122
  6919  017B42  6EE6               	movwf	postinc1,c
  6920  017B44  0E44               	movlw	68
  6921  017B46  6EE6               	movwf	postinc1,c
  6922  017B48  0E00               	movlw	0
  6923  017B4A  6EE6               	movwf	postinc1,c
  6924  017B4C  0E04               	movlw	4
  6925  017B4E  6EE6               	movwf	postinc1,c
  6926  017B50  EC0E  F0A8         	call	_conv_raw_result	;wreg free
  6927  017B54  0060  F007  FFE6   	movff	btemp,postinc1
  6928  017B5A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6929  017B60  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6930  017B66  0060  F013  FFE6   	movff	btemp+3,postinc1
  6931  017B6C  ECC8  F0C5         	call	___fltol	;wreg free
  6932  017B70  0060  F007  FFE6   	movff	btemp,postinc1
  6933  017B76  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6934  017B7C  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6935  017B82  0060  F013  FFE6   	movff	btemp+3,postinc1
  6936  017B88  0E00               	movlw	0
  6937  017B8A  6EE6               	movwf	postinc1,c
  6938  017B8C  ECCA  F0C0         	call	___xxtofl	;wreg free
  6939  017B90  0060  F007  FFE6   	movff	btemp,postinc1
  6940  017B96  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6941  017B9C  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6942  017BA2  0060  F013  FFE6   	movff	btemp+3,postinc1
  6943  017BA8  ECA0  F099         	call	___flmul	;wreg free
  6944  017BAC  0060  F007  FFE6   	movff	btemp,postinc1
  6945  017BB2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6946  017BB8  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6947  017BBE  0060  F013  FFE6   	movff	btemp+3,postinc1
  6948  017BC4  ECC8  F0C5         	call	___fltol	;wreg free
  6949  017BC8  0060  F007  FFE6   	movff	btemp,postinc1
  6950  017BCE  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6951  017BD4  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6952  017BDA  0060  F013  FFE6   	movff	btemp+3,postinc1
  6953  017BE0  ECF6  F0CA         	call	_Volts_to_SOC	;wreg free
  6954  017BE4  0060  F004  F7B1   	movff	btemp,_C+178	;volatile
  6955  017BEA  0060  F008  F7B2   	movff	btemp+1,_C+179	;volatile
  6956                           
  6957                           ;bsoc.c: 101:  C.dynamic_ah = C.bank_ah * (Volts_to_SOC((uint32_t) conv_raw_result(V_BAT
      +                          , CONV) * 1000.0) / 100.0);
  6958  017BF0  EE21  F38B         	lfsr	2,_C+140	;volatile
  6959  017BF4  006F FF7B FFE6     	movff	postinc2,postinc1
  6960  017BFA  006F FF7B FFE6     	movff	postinc2,postinc1
  6961  017C00  006F FF7B FFE6     	movff	postinc2,postinc1
  6962  017C06  006F FF7B FFE6     	movff	postinc2,postinc1
  6963  017C0C  0E00               	movlw	0
  6964  017C0E  6EE6               	movwf	postinc1,c
  6965  017C10  0E00               	movlw	0
  6966  017C12  6EE6               	movwf	postinc1,c
  6967  017C14  0EC8               	movlw	200
  6968  017C16  6EE6               	movwf	postinc1,c
  6969  017C18  0E42               	movlw	66
  6970  017C1A  6EE6               	movwf	postinc1,c
  6971  017C1C  0E00               	movlw	0
  6972  017C1E  6EE6               	movwf	postinc1,c
  6973  017C20  0E00               	movlw	0
  6974  017C22  6EE6               	movwf	postinc1,c
  6975  017C24  0E7A               	movlw	122
  6976  017C26  6EE6               	movwf	postinc1,c
  6977  017C28  0E44               	movlw	68
  6978  017C2A  6EE6               	movwf	postinc1,c
  6979  017C2C  0E00               	movlw	0
  6980  017C2E  6EE6               	movwf	postinc1,c
  6981  017C30  0E04               	movlw	4
  6982  017C32  6EE6               	movwf	postinc1,c
  6983  017C34  EC0E  F0A8         	call	_conv_raw_result	;wreg free
  6984  017C38  0060  F007  FFE6   	movff	btemp,postinc1
  6985  017C3E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6986  017C44  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6987  017C4A  0060  F013  FFE6   	movff	btemp+3,postinc1
  6988  017C50  ECC8  F0C5         	call	___fltol	;wreg free
  6989  017C54  0060  F007  FFE6   	movff	btemp,postinc1
  6990  017C5A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6991  017C60  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6992  017C66  0060  F013  FFE6   	movff	btemp+3,postinc1
  6993  017C6C  0E00               	movlw	0
  6994  017C6E  6EE6               	movwf	postinc1,c
  6995  017C70  ECCA  F0C0         	call	___xxtofl	;wreg free
  6996  017C74  0060  F007  FFE6   	movff	btemp,postinc1
  6997  017C7A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6998  017C80  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6999  017C86  0060  F013  FFE6   	movff	btemp+3,postinc1
  7000  017C8C  ECA0  F099         	call	___flmul	;wreg free
  7001  017C90  0060  F007  FFE6   	movff	btemp,postinc1
  7002  017C96  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7003  017C9C  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7004  017CA2  0060  F013  FFE6   	movff	btemp+3,postinc1
  7005  017CA8  ECC8  F0C5         	call	___fltol	;wreg free
  7006  017CAC  0060  F007  FFE6   	movff	btemp,postinc1
  7007  017CB2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7008  017CB8  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7009  017CBE  0060  F013  FFE6   	movff	btemp+3,postinc1
  7010  017CC4  ECF6  F0CA         	call	_Volts_to_SOC	;wreg free
  7011  017CC8  0060  F004  F00B   	movff	btemp,btemp+10
  7012  017CCE  0060  F008  F00C   	movff	btemp+1,btemp+11
  7013  017CD4  500B               	movf	(btemp+10)^0,w,c
  7014  017CD6  6E05               	movwf	(btemp+4)^0,c
  7015  017CD8  500C               	movf	(btemp+11)^0,w,c
  7016  017CDA  6E06               	movwf	(btemp+5)^0,c
  7017  017CDC  6A07               	clrf	(btemp+6)^0,c
  7018  017CDE  6A08               	clrf	(btemp+7)^0,c
  7019  017CE0  0060  F017  FFE6   	movff	btemp+4,postinc1
  7020  017CE6  0060  F01B  FFE6   	movff	btemp+5,postinc1
  7021  017CEC  0060  F01F  FFE6   	movff	btemp+6,postinc1
  7022  017CF2  0060  F023  FFE6   	movff	btemp+7,postinc1
  7023  017CF8  0E00               	movlw	0
  7024  017CFA  6EE6               	movwf	postinc1,c
  7025  017CFC  ECCA  F0C0         	call	___xxtofl	;wreg free
  7026  017D00  0060  F007  FFE6   	movff	btemp,postinc1
  7027  017D06  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7028  017D0C  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7029  017D12  0060  F013  FFE6   	movff	btemp+3,postinc1
  7030  017D18  EC51  F0A5         	call	___fldiv	;wreg free
  7031  017D1C  0060  F007  FFE6   	movff	btemp,postinc1
  7032  017D22  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7033  017D28  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7034  017D2E  0060  F013  FFE6   	movff	btemp+3,postinc1
  7035  017D34  ECA0  F099         	call	___flmul	;wreg free
  7036  017D38  0060  F004  F78F   	movff	btemp,_C+144	;volatile
  7037  017D3E  0060  F008  F790   	movff	btemp+1,_C+145	;volatile
  7038  017D44  0060  F00C  F791   	movff	btemp+2,_C+146	;volatile
  7039  017D4A  0060  F010  F792   	movff	btemp+3,_C+147	;volatile
  7040                           
  7041                           ;bsoc.c: 102:  TMR3_SetInterruptHandler(calc_bsoc);
  7042  017D50  0E26               	movlw	low _calc_bsoc
  7043  017D52  6EE6               	movwf	postinc1,c
  7044  017D54  0E43               	movlw	high _calc_bsoc
  7045  017D56  6EE6               	movwf	postinc1,c
  7046  017D58  0E01               	movlw	low (_calc_bsoc shr (0+16))
  7047  017D5A  6EE6               	movwf	postinc1,c
  7048  017D5C  EC6F  F0DC         	call	_TMR3_SetInterruptHandler	;wreg free
  7049                           
  7050                           ; _init_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  7051  017D60  0012               	return		;funcret
  7052  017D62                     __end_of_init_bsoc:
  7053                           	opt callstack 0
  7054                           
  7055 ;; *************** function _Volts_to_SOC *****************
  7056 ;; Defined at:
  7057 ;;		line 159 in file "bsoc.c"
  7058 ;; Parameters:    Size  Location     Type
  7059 ;;  cvoltage        4  [STACK] unsigned long 
  7060 ;; Auto vars:     Size  Location     Type
  7061 ;;  soc             4  [STACK] float 
  7062 ;;  slot            1  [STACK] unsigned char 
  7063 ;; Return value:  Size  Location     Type
  7064 ;;                  2  [STACK] unsigned short 
  7065 ;; Registers used:
  7066 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
  7067 ;; Tracked objects:
  7068 ;;		On entry : 0/1
  7069 ;;		On exit  : 0/0
  7070 ;;		Unchanged: 0/0
  7071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7072 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7073 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7074 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7075 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7076 ;;Total ram usage:        0 bytes
  7077 ;; Hardware stack levels used:    1
  7078 ;; Hardware stack levels required when called:   16
  7079 ;; This function calls:
  7080 ;;		___fltol
  7081 ;;		___xxtofl
  7082 ;; This function is called by:
  7083 ;;		_init_bsoc
  7084 ;; This function uses a reentrant model
  7085 ;;
  7086                           
  7087                           	psect	text12
  7088  0195EC                     __ptext12:
  7089                           	opt callstack 0
  7090  0195EC                     _Volts_to_SOC:
  7091                           	opt callstack 0
  7092                           
  7093                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7094  0195EC  0E05               	movlw	5
  7095  0195EE  26E1               	addwf	fsr1l,f,c
  7096  0195F0  0E00               	movlw	0
  7097  0195F2  22E2               	addwfc	fsr1h,f,c
  7098                           
  7099                           ;bsoc.c: 159: uint16_t Volts_to_SOC(uint32_t cvoltage);bsoc.c: 160: {;bsoc.c: 161:  uint
      +                          8_t slot;;bsoc.c: 162:  float soc = 0;
  7100                           
  7101                           ;incstack = 0
  7102  0195F4  0E00               	movlw	0
  7103  0195F6  6E09               	movwf	(btemp+8)^0,c
  7104  0195F8  0E00               	movlw	0
  7105  0195FA  6E0A               	movwf	(btemp+9)^0,c
  7106  0195FC  0E00               	movlw	0
  7107  0195FE  6E0B               	movwf	(btemp+10)^0,c
  7108  019600  0E00               	movlw	0
  7109  019602  6E0C               	movwf	(btemp+11)^0,c
  7110                           
  7111                           ;stkvar	_soc @ sp[(-5)+0]
  7112  019604  0EFB               	movlw	-5
  7113  019606  0060  F027  FFE3   	movff	btemp+8,plusw1
  7114  01960C  0EFC               	movlw	-4
  7115  01960E  0060  F02B  FFE3   	movff	btemp+9,plusw1
  7116  019614  0EFD               	movlw	-3
  7117  019616  0060  F02F  FFE3   	movff	btemp+10,plusw1
  7118  01961C  0EFE               	movlw	-2
  7119  01961E  0060  F033  FFE3   	movff	btemp+11,plusw1
  7120                           
  7121                           ;bsoc.c: 164:  for (slot = 0; slot < 26; slot++) {
  7122                           ;stkvar	_slot @ sp[(-5)+4]
  7123  019624  0EFF               	movlw	-1
  7124  019626  6AE3               	clrf	plusw1,c
  7125  019628                     l10537:
  7126                           
  7127                           ;bsoc.c: 165:   if (cvoltage > BVSOC_TABLE[slot][0]) {
  7128                           ;stkvar	_cvoltage @ sp[(-5)+-4]
  7129                           ;stkvar	_slot @ sp[(-5)+4]
  7130  019628  0EFF               	movlw	-1
  7131  01962A  50E3               	movf	plusw1,w,c
  7132  01962C  0D08               	mullw	8
  7133  01962E  0E67               	movlw	low _BVSOC_TABLE
  7134  019630  24F3               	addwf	243,w,c
  7135  019632  6EF6               	movwf	tblptrl,c
  7136  019634  0EFA               	movlw	high _BVSOC_TABLE
  7137  019636  20F4               	addwfc	244,w,c
  7138  019638  6EF7               	movwf	tblptrh,c
  7139  01963A                     	if	1	;There are 3 active tblptr bytes
  7140  01963A  6AF8               	clrf	tblptru,c
  7141  01963C  0E00               	movlw	low (__mediumconst shr (0+16))
  7142  01963E  22F8               	addwfc	tblptru,f,c
  7143  019640                     	endif
  7144  019640  0EF7               	movlw	-9
  7145  019642  50E3               	movf	plusw1,w,c
  7146  019644  0009               	tblrd		*+
  7147  019646  5CF5               	subwf	tablat,w,c
  7148  019648  0EF8               	movlw	-8
  7149  01964A  50E3               	movf	plusw1,w,c
  7150  01964C  0009               	tblrd		*+
  7151  01964E  58F5               	subwfb	tablat,w,c
  7152  019650  0EF9               	movlw	-7
  7153  019652  50E3               	movf	plusw1,w,c
  7154  019654  0009               	tblrd		*+
  7155  019656  58F5               	subwfb	tablat,w,c
  7156  019658  0EFA               	movlw	-6
  7157  01965A  50E3               	movf	plusw1,w,c
  7158  01965C  0009               	tblrd		*+
  7159  01965E  58F5               	subwfb	tablat,w,c
  7160  019660  B0D8               	btfsc	status,0,c
  7161  019662  D034               	goto	l10541
  7162                           
  7163                           ;bsoc.c: 166:    soc = BVSOC_TABLE[slot][1];
  7164                           ;stkvar	_slot @ sp[(-5)+4]
  7165  019664  0EFF               	movlw	-1
  7166  019666  50E3               	movf	plusw1,w,c
  7167  019668  0D08               	mullw	8
  7168  01966A  0E04               	movlw	4
  7169  01966C  26F3               	addwf	243,f,c
  7170  01966E  0E00               	movlw	0
  7171  019670  22F4               	addwfc	244,f,c
  7172  019672  0E67               	movlw	low _BVSOC_TABLE
  7173  019674  24F3               	addwf	243,w,c
  7174  019676  6EF6               	movwf	tblptrl,c
  7175  019678  0EFA               	movlw	high _BVSOC_TABLE
  7176  01967A  20F4               	addwfc	244,w,c
  7177  01967C  6EF7               	movwf	tblptrh,c
  7178  01967E                     	if	1	;There are 3 active tblptr bytes
  7179  01967E  6AF8               	clrf	tblptru,c
  7180  019680  0E00               	movlw	low (__mediumconst shr (0+16))
  7181  019682  22F8               	addwfc	tblptru,f,c
  7182  019684                     	endif
  7183  019684  0009               	tblrd		*+
  7184  019686  006F FFD7 FFE6     	movff	tablat,postinc1
  7185  01968C  0009               	tblrd		*+
  7186  01968E  006F FFD7 FFE6     	movff	tablat,postinc1
  7187  019694  0009               	tblrd		*+
  7188  019696  006F FFD7 FFE6     	movff	tablat,postinc1
  7189  01969C  0009               	tblrd		*+
  7190  01969E  006F FFD7 FFE6     	movff	tablat,postinc1
  7191  0196A4  0E00               	movlw	0
  7192  0196A6  6EE6               	movwf	postinc1,c
  7193  0196A8  ECCA  F0C0         	call	___xxtofl	;wreg free
  7194                           
  7195                           ;stkvar	_soc @ sp[(-5)+0]
  7196  0196AC  0EFB               	movlw	-5
  7197  0196AE  0060  F007  FFE3   	movff	btemp,plusw1
  7198  0196B4  0EFC               	movlw	-4
  7199  0196B6  0060  F00B  FFE3   	movff	btemp+1,plusw1
  7200  0196BC  0EFD               	movlw	-3
  7201  0196BE  0060  F00F  FFE3   	movff	btemp+2,plusw1
  7202  0196C4  0EFE               	movlw	-2
  7203  0196C6  0060  F013  FFE3   	movff	btemp+3,plusw1
  7204  0196CC                     l10541:
  7205                           
  7206                           ;bsoc.c: 168:  }
  7207                           ;stkvar	_slot @ sp[(-5)+4]
  7208  0196CC  0EFF               	movlw	-1
  7209  0196CE  2AE3               	incf	plusw1,f,c
  7210                           
  7211                           ;stkvar	_slot @ sp[(-5)+4]
  7212  0196D0  0EFF               	movlw	-1
  7213  0196D2  006F FF8C  F001    	movff	plusw1,btemp
  7214  0196D8  0E19               	movlw	25
  7215  0196DA  6401               	cpfsgt	btemp^0,c
  7216  0196DC  D7A5               	goto	l10537
  7217                           
  7218                           ;bsoc.c: 169:  return soc;
  7219                           ;stkvar	_soc @ sp[(-5)+0]
  7220  0196DE  0EFB               	movlw	-5
  7221  0196E0  006F FF8F FFE6     	movff	plusw1,postinc1
  7222  0196E6  006F FF8F FFE6     	movff	plusw1,postinc1
  7223  0196EC  006F FF8F FFE6     	movff	plusw1,postinc1
  7224  0196F2  006F FF8F FFE6     	movff	plusw1,postinc1
  7225  0196F8  ECC8  F0C5         	call	___fltol	;wreg free
  7226                           
  7227                           ; _Volts_to_SOC: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, 
      +                          argsize = 4, vargsize = 0
  7228  0196FC  0EF7               	movlw	247
  7229  0196FE  26E1               	addwf	fsr1l,f,c
  7230  019700  0EFF               	movlw	255
  7231  019702  22E2               	addwfc	fsr1h,f,c
  7232  019704  0012               	return		;funcret
  7233  019706                     __end_of_Volts_to_SOC:
  7234                           	opt callstack 0
  7235                           
  7236 ;; *************** function _hid_display *****************
  7237 ;; Defined at:
  7238 ;;		line 17 in file "hid.c"
  7239 ;; Parameters:    Size  Location     Type
  7240 ;;  h               1  [STACK] PTR struct H_data
  7241 ;;		 -> H(7), 
  7242 ;; Auto vars:     Size  Location     Type
  7243 ;;		None
  7244 ;; Return value:  Size  Location     Type
  7245 ;;                  1  [STACK] PTR struct H_data
  7246 ;; Registers used:
  7247 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
  7248 ;; Tracked objects:
  7249 ;;		On entry : 3F/39
  7250 ;;		On exit  : 0/0
  7251 ;;		Unchanged: 0/0
  7252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7253 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7254 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7256 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7257 ;;Total ram usage:        0 bytes
  7258 ;; Hardware stack levels used:    1
  7259 ;; Hardware stack levels required when called:   17
  7260 ;; This function calls:
  7261 ;;		_hid_input
  7262 ;; This function is called by:
  7263 ;;		_main
  7264 ;; This function uses a reentrant model
  7265 ;;
  7266                           
  7267                           	psect	text13
  7268  019B4C                     __ptext13:
  7269                           	opt callstack 0
  7270  019B4C                     _hid_display:
  7271                           	opt callstack 13
  7272                           
  7273                           ;hid.c: 17: H_data* hid_display(H_data* h);hid.c: 18: {;hid.c: 19:  hid_input(h);
  7274                           ;stkvar	_h @ sp[(0)+-1]
  7275                           
  7276                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7277                           ;incstack = 0
  7278  019B4C  0EFF               	movlw	-1
  7279  019B4E  50E3               	movf	plusw1,w,c
  7280  019B50  6EE6               	movwf	postinc1,c
  7281  019B52  EC10  F0D4         	call	_hid_input	;wreg free
  7282                           
  7283                           ;hid.c: 21:  switch (h->h_state) {
  7284  019B56  D066               	goto	l10943
  7285  019B58                     l10921:
  7286                           
  7287                           ;hid.c: 23:   h->h_state = H_STATE_DISPLAY;
  7288                           ;stkvar	_h @ sp[(0)+-1]
  7289  019B58  0EFF               	movlw	-1
  7290  019B5A  50E3               	movf	plusw1,w,c
  7291  019B5C  6ED9               	movwf	fsr2l,c
  7292  019B5E  6ADA               	clrf	fsr2h,c
  7293  019B60  0E01               	movlw	1
  7294  019B62  26D9               	addwf	fsr2l,f,c
  7295  019B64  0E01               	movlw	1
  7296  019B66  6EDF               	movwf	indf2,c
  7297                           
  7298                           ;hid.c: 24:   h->hid_display = HID_MAIN;
  7299                           ;stkvar	_h @ sp[(0)+-1]
  7300  019B68  0EFF               	movlw	-1
  7301  019B6A  50E3               	movf	plusw1,w,c
  7302  019B6C  6ED9               	movwf	fsr2l,c
  7303  019B6E  6ADA               	clrf	fsr2h,c
  7304  019B70  0E00               	movlw	0
  7305  019B72  6EDF               	movwf	indf2,c
  7306                           
  7307                           ;hid.c: 25:   h->wait_enter = 1;
  7308                           ;stkvar	_h @ sp[(0)+-1]
  7309  019B74  0EFF               	movlw	-1
  7310  019B76  50E3               	movf	plusw1,w,c
  7311  019B78  6ED9               	movwf	fsr2l,c
  7312  019B7A  6ADA               	clrf	fsr2h,c
  7313  019B7C  0E04               	movlw	4
  7314  019B7E  26D9               	addwf	fsr2l,f,c
  7315  019B80  0E01               	movlw	1
  7316  019B82  6EDF               	movwf	indf2,c
  7317                           
  7318                           ;hid.c: 26:   h->wait_select = 1;
  7319                           ;stkvar	_h @ sp[(0)+-1]
  7320  019B84  0EFF               	movlw	-1
  7321  019B86  50E3               	movf	plusw1,w,c
  7322  019B88  6ED9               	movwf	fsr2l,c
  7323  019B8A  6ADA               	clrf	fsr2h,c
  7324  019B8C  0E02               	movlw	2
  7325  019B8E  26D9               	addwf	fsr2l,f,c
  7326  019B90  0E01               	movlw	1
  7327  019B92  6EDF               	movwf	indf2,c
  7328                           
  7329                           ;hid.c: 27:   h->select_p = SW_OFF;
  7330                           ;stkvar	_h @ sp[(0)+-1]
  7331  019B94  0EFF               	movlw	-1
  7332  019B96  50E3               	movf	plusw1,w,c
  7333  019B98  6ED9               	movwf	fsr2l,c
  7334  019B9A  6ADA               	clrf	fsr2h,c
  7335  019B9C  0E03               	movlw	3
  7336  019B9E  26D9               	addwf	fsr2l,f,c
  7337  019BA0  0E00               	movlw	0
  7338  019BA2  6EDF               	movwf	indf2,c
  7339                           
  7340                           ;hid.c: 28:   h->enter_p = SW_OFF;
  7341                           ;stkvar	_h @ sp[(0)+-1]
  7342  019BA4  0EFF               	movlw	-1
  7343  019BA6  50E3               	movf	plusw1,w,c
  7344  019BA8  6ED9               	movwf	fsr2l,c
  7345  019BAA  6ADA               	clrf	fsr2h,c
  7346  019BAC  0E05               	movlw	5
  7347  019BAE  26D9               	addwf	fsr2l,f,c
  7348  019BB0  0E00               	movlw	0
  7349  019BB2  D036               	goto	L3
  7350  019BB4                     l10933:
  7351                           
  7352                           ;hid.c: 32:   if (!h->wait_select && (h->select_p == SW_OFF)) {
  7353                           ;stkvar	_h @ sp[(0)+-1]
  7354  019BB4  0EFF               	movlw	-1
  7355  019BB6  50E3               	movf	plusw1,w,c
  7356  019BB8  6ED9               	movwf	fsr2l,c
  7357  019BBA  6ADA               	clrf	fsr2h,c
  7358  019BBC  0E02               	movlw	2
  7359  019BBE  26D9               	addwf	fsr2l,f,c
  7360  019BC0  50DF               	movf	indf2,w,c
  7361  019BC2  A4D8               	btfss	status,2,c
  7362  019BC4  D042               	goto	l1976
  7363                           
  7364                           ;stkvar	_h @ sp[(0)+-1]
  7365  019BC6  0EFF               	movlw	-1
  7366  019BC8  50E3               	movf	plusw1,w,c
  7367  019BCA  6ED9               	movwf	fsr2l,c
  7368  019BCC  6ADA               	clrf	fsr2h,c
  7369  019BCE  0E03               	movlw	3
  7370  019BD0  26D9               	addwf	fsr2l,f,c
  7371  019BD2  50DF               	movf	indf2,w,c
  7372  019BD4  A4D8               	btfss	status,2,c
  7373  019BD6  D039               	goto	l1976
  7374                           
  7375                           ;hid.c: 33:    h->sequence = ++h->sequence & 0x3;
  7376                           ;stkvar	_h @ sp[(0)+-1]
  7377  019BD8  0EFF               	movlw	-1
  7378  019BDA  50E3               	movf	plusw1,w,c
  7379  019BDC  6ED9               	movwf	fsr2l,c
  7380  019BDE  6ADA               	clrf	fsr2h,c
  7381  019BE0  0E06               	movlw	6
  7382  019BE2  26D9               	addwf	fsr2l,f,c
  7383                           
  7384                           ;stkvar	_h @ sp[(0)+-1]
  7385  019BE4  0EFF               	movlw	-1
  7386  019BE6  50E3               	movf	plusw1,w,c
  7387  019BE8  6EE9               	movwf	fsr0l,c
  7388  019BEA  6AEA               	clrf	fsr0h,c
  7389  019BEC  0E06               	movlw	6
  7390  019BEE  26E9               	addwf	fsr0l,f,c
  7391  019BF0  2AEF               	incf	indf0,f,c
  7392  019BF2  50EF               	movf	indf0,w,c
  7393  019BF4  0B03               	andlw	3
  7394  019BF6  6EDF               	movwf	indf2,c
  7395                           
  7396                           ;hid.c: 34:    h->hid_display = h->sequence;
  7397                           ;stkvar	_h @ sp[(0)+-1]
  7398  019BF8  0EFF               	movlw	-1
  7399  019BFA  50E3               	movf	plusw1,w,c
  7400  019BFC  6ED9               	movwf	fsr2l,c
  7401  019BFE  6ADA               	clrf	fsr2h,c
  7402  019C00  0E06               	movlw	6
  7403  019C02  26D9               	addwf	fsr2l,f,c
  7404                           
  7405                           ;stkvar	_h @ sp[(0)+-1]
  7406  019C04  0EFF               	movlw	-1
  7407  019C06  50E3               	movf	plusw1,w,c
  7408  019C08  6EE9               	movwf	fsr0l,c
  7409  019C0A  6AEA               	clrf	fsr0h,c
  7410  019C0C  006F FF7F FFEF     	movff	indf2,indf0
  7411                           
  7412                           ;hid.c: 35:    h->wait_select = 1;
  7413                           ;stkvar	_h @ sp[(0)+-1]
  7414  019C12  0EFF               	movlw	-1
  7415  019C14  50E3               	movf	plusw1,w,c
  7416  019C16  6ED9               	movwf	fsr2l,c
  7417  019C18  6ADA               	clrf	fsr2h,c
  7418  019C1A  0E02               	movlw	2
  7419  019C1C  26D9               	addwf	fsr2l,f,c
  7420  019C1E  0E01               	movlw	1
  7421  019C20                     L3:
  7422  019C20  6EDF               	movwf	indf2,c
  7423  019C22  D013               	goto	l1976
  7424  019C24                     l10943:
  7425                           
  7426                           ;stkvar	_h @ sp[(0)+-1]
  7427  019C24  0EFF               	movlw	-1
  7428  019C26  50E3               	movf	plusw1,w,c
  7429  019C28  6ED9               	movwf	fsr2l,c
  7430  019C2A  6ADA               	clrf	fsr2h,c
  7431  019C2C  0E01               	movlw	1
  7432  019C2E  26D9               	addwf	fsr2l,f,c
  7433  019C30  50DF               	movf	indf2,w,c
  7434  019C32  6E0B               	movwf	(btemp+10)^0,c
  7435  019C34  6A0C               	clrf	(btemp+11)^0,c
  7436                           
  7437                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7438                           ; Switch size 1, requested type "simple"
  7439                           ; Number of cases is 1, Range of values is 0 to 0
  7440                           ; switch strategies available:
  7441                           ; Name         Instructions Cycles
  7442                           ; simple_byte            4     3 (average)
  7443                           ;	Chosen strategy is simple_byte
  7444  019C36  500C               	movf	(btemp+11)^0,w,c
  7445  019C38  0A00               	xorlw	0	; case 0
  7446  019C3A  A4D8               	btfss	status,2,c
  7447  019C3C  D7BB               	goto	l10933
  7448                           
  7449                           ; Switch size 1, requested type "simple"
  7450                           ; Number of cases is 2, Range of values is 0 to 1
  7451                           ; switch strategies available:
  7452                           ; Name         Instructions Cycles
  7453                           ; simple_byte            7     4 (average)
  7454                           ;	Chosen strategy is simple_byte
  7455  019C3E  500B               	movf	(btemp+10)^0,w,c
  7456  019C40  0A00               	xorlw	0	; case 0
  7457  019C42  B4D8               	btfsc	status,2,c
  7458  019C44  D789               	goto	l10921
  7459  019C46  0A01               	xorlw	1	; case 1
  7460  019C48  D7B5               	goto	l10933
  7461  019C4A                     l1976:
  7462                           
  7463                           ; _hid_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, a
      +                          rgsize = 1, vargsize = 0
  7464  019C4A  52E5               	movf	postdec1,f,c
  7465  019C4C  0012               	return		;funcret
  7466  019C4E                     __end_of_hid_display:
  7467                           	opt callstack 0
  7468                           
  7469 ;; *************** function _hid_input *****************
  7470 ;; Defined at:
  7471 ;;		line 3 in file "hid.c"
  7472 ;; Parameters:    Size  Location     Type
  7473 ;;  h               1  [STACK] PTR struct H_data
  7474 ;;		 -> H(7), 
  7475 ;; Auto vars:     Size  Location     Type
  7476 ;;		None
  7477 ;; Return value:  Size  Location     Type
  7478 ;;                  1  [STACK] PTR struct H_data
  7479 ;; Registers used:
  7480 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+11, prodl, prodh
  7481 ;; Tracked objects:
  7482 ;;		On entry : 0/39
  7483 ;;		On exit  : 0/0
  7484 ;;		Unchanged: 0/0
  7485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7486 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7487 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7488 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7489 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7490 ;;Total ram usage:        0 bytes
  7491 ;; Hardware stack levels used:    1
  7492 ;; Hardware stack levels required when called:   16
  7493 ;; This function calls:
  7494 ;;		_get_switch
  7495 ;; This function is called by:
  7496 ;;		_hid_display
  7497 ;; This function uses a reentrant model
  7498 ;;
  7499                           
  7500                           	psect	text14
  7501  01A820                     __ptext14:
  7502                           	opt callstack 0
  7503  01A820                     _hid_input:
  7504                           	opt callstack 13
  7505                           
  7506                           ;hid.c: 3: H_data* hid_input(H_data* h);hid.c: 4: {;hid.c: 5:  if (get_switch(SSELECT)) 
      +                          {
  7507                           
  7508                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7509                           ;incstack = 0
  7510  01A820  0E02               	movlw	2
  7511  01A822  6EE6               	movwf	postinc1,c
  7512  01A824  EC63  F0DB         	call	_get_switch	;wreg free
  7513  01A828  5001               	movf	btemp^0,w,c
  7514  01A82A  B4D8               	btfsc	status,2,c
  7515  01A82C  D01C               	goto	l10471
  7516                           
  7517                           ;hid.c: 6:   h->wait_select = 0;
  7518                           ;stkvar	_h @ sp[(0)+-1]
  7519  01A82E  0EFF               	movlw	-1
  7520  01A830  50E3               	movf	plusw1,w,c
  7521  01A832  6ED9               	movwf	fsr2l,c
  7522  01A834  6ADA               	clrf	fsr2h,c
  7523  01A836  0E02               	movlw	2
  7524  01A838  26D9               	addwf	fsr2l,f,c
  7525  01A83A  0E00               	movlw	0
  7526  01A83C  6EDF               	movwf	indf2,c
  7527                           
  7528                           ;hid.c: 7:   h->select_p = get_switch(SSELECT);
  7529  01A83E  0E02               	movlw	2
  7530  01A840  6EE6               	movwf	postinc1,c
  7531  01A842  EC63  F0DB         	call	_get_switch	;wreg free
  7532  01A846  5001               	movf	btemp^0,w,c
  7533  01A848  B4D8               	btfsc	status,2,c
  7534  01A84A  D003               	goto	u9710
  7535  01A84C  6A0C               	clrf	(btemp+11)^0,c
  7536  01A84E  2A0C               	incf	(btemp+11)^0,f,c
  7537  01A850  D001               	goto	u9728
  7538  01A852                     u9710:
  7539  01A852  6A0C               	clrf	(btemp+11)^0,c
  7540  01A854                     u9728:
  7541                           
  7542                           ;stkvar	_h @ sp[(0)+-1]
  7543  01A854  0EFF               	movlw	-1
  7544  01A856  50E3               	movf	plusw1,w,c
  7545  01A858  6ED9               	movwf	fsr2l,c
  7546  01A85A  6ADA               	clrf	fsr2h,c
  7547  01A85C  0E03               	movlw	3
  7548  01A85E  26D9               	addwf	fsr2l,f,c
  7549  01A860  0060  F033  FFDF   	movff	btemp+11,indf2
  7550  01A866                     l10471:
  7551                           
  7552                           ;hid.c: 10:  if (get_switch(SENTER)) {
  7553  01A866  0E03               	movlw	3
  7554  01A868  6EE6               	movwf	postinc1,c
  7555  01A86A  EC63  F0DB         	call	_get_switch	;wreg free
  7556  01A86E  5001               	movf	btemp^0,w,c
  7557  01A870  B4D8               	btfsc	status,2,c
  7558  01A872  D01C               	goto	l1967
  7559                           
  7560                           ;hid.c: 11:   h->wait_enter = 0;
  7561                           ;stkvar	_h @ sp[(0)+-1]
  7562  01A874  0EFF               	movlw	-1
  7563  01A876  50E3               	movf	plusw1,w,c
  7564  01A878  6ED9               	movwf	fsr2l,c
  7565  01A87A  6ADA               	clrf	fsr2h,c
  7566  01A87C  0E04               	movlw	4
  7567  01A87E  26D9               	addwf	fsr2l,f,c
  7568  01A880  0E00               	movlw	0
  7569  01A882  6EDF               	movwf	indf2,c
  7570                           
  7571                           ;hid.c: 12:   h->enter_p = get_switch(SENTER);
  7572  01A884  0E03               	movlw	3
  7573  01A886  6EE6               	movwf	postinc1,c
  7574  01A888  EC63  F0DB         	call	_get_switch	;wreg free
  7575  01A88C  5001               	movf	btemp^0,w,c
  7576  01A88E  B4D8               	btfsc	status,2,c
  7577  01A890  D003               	goto	u9740
  7578  01A892  6A0C               	clrf	(btemp+11)^0,c
  7579  01A894  2A0C               	incf	(btemp+11)^0,f,c
  7580  01A896  D001               	goto	u9758
  7581  01A898                     u9740:
  7582  01A898  6A0C               	clrf	(btemp+11)^0,c
  7583  01A89A                     u9758:
  7584                           
  7585                           ;stkvar	_h @ sp[(0)+-1]
  7586  01A89A  0EFF               	movlw	-1
  7587  01A89C  50E3               	movf	plusw1,w,c
  7588  01A89E  6ED9               	movwf	fsr2l,c
  7589  01A8A0  6ADA               	clrf	fsr2h,c
  7590  01A8A2  0E05               	movlw	5
  7591  01A8A4  26D9               	addwf	fsr2l,f,c
  7592  01A8A6  0060  F033  FFDF   	movff	btemp+11,indf2
  7593  01A8AC                     l1967:
  7594                           
  7595                           ; _hid_input: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
  7596  01A8AC  52E5               	movf	postdec1,f,c
  7597  01A8AE  0012               	return		;funcret
  7598  01A8B0                     __end_of_hid_input:
  7599                           	opt callstack 0
  7600                           
  7601 ;; *************** function _get_switch *****************
  7602 ;; Defined at:
  7603 ;;		line 18 in file "dio.c"
  7604 ;; Parameters:    Size  Location     Type
  7605 ;;  i               1  [STACK] unsigned char 
  7606 ;; Auto vars:     Size  Location     Type
  7607 ;;		None
  7608 ;; Return value:  Size  Location     Type
  7609 ;;                  1  [STACK] enum E17021
  7610 ;; Registers used:
  7611 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
  7612 ;; Tracked objects:
  7613 ;;		On entry : 0/1
  7614 ;;		On exit  : 0/0
  7615 ;;		Unchanged: 0/0
  7616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7617 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7618 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7619 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7620 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7621 ;;Total ram usage:        0 bytes
  7622 ;; Hardware stack levels used:    1
  7623 ;; Hardware stack levels required when called:   15
  7624 ;; This function calls:
  7625 ;;		Nothing
  7626 ;; This function is called by:
  7627 ;;		_main
  7628 ;;		_hid_input
  7629 ;; This function uses a reentrant model
  7630 ;;
  7631                           
  7632                           	psect	text15
  7633  01B6C6                     __ptext15:
  7634                           	opt callstack 0
  7635  01B6C6                     _get_switch:
  7636                           	opt callstack 13
  7637                           
  7638                           ;dio.c: 18: SW_STATES get_switch(uint8_t i);dio.c: 19: {;dio.c: 20:  if (i >= 4)
  7639                           ;stkvar	_i @ sp[(0)+-1]
  7640                           
  7641                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7642                           ;incstack = 0
  7643  01B6C6  0EFF               	movlw	-1
  7644  01B6C8  006F FF8C  F001    	movff	plusw1,btemp
  7645  01B6CE  0E03               	movlw	3
  7646  01B6D0  6401               	cpfsgt	btemp^0,c
  7647  01B6D2  D002               	goto	l9851
  7648                           
  7649                           ;dio.c: 21:   return SW_OFF;
  7650  01B6D4  0E00               	movlw	0
  7651  01B6D6  D00A               	goto	L4
  7652  01B6D8                     l9851:
  7653                           
  7654                           ;dio.c: 23:  return S.button[i].sw;
  7655                           ;stkvar	_i @ sp[(0)+-1]
  7656  01B6D8  0EFF               	movlw	-1
  7657  01B6DA  50E3               	movf	plusw1,w,c
  7658  01B6DC  0D05               	mullw	5
  7659  01B6DE  0E54               	movlw	low _S
  7660  01B6E0  24F3               	addwf	243,w,c
  7661  01B6E2  6ED9               	movwf	fsr2l,c
  7662  01B6E4  0E02               	movlw	high _S
  7663  01B6E6  20F4               	addwfc	prodh,w,c
  7664  01B6E8  6EDA               	movwf	fsr2h,c
  7665  01B6EA  50DF               	movf	indf2,w,c
  7666  01B6EC                     L4:
  7667  01B6EC  6E01               	movwf	btemp^0,c
  7668                           
  7669                           ; _get_switch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  7670  01B6EE  52E5               	movf	postdec1,f,c
  7671  01B6F0  0012               	return		;funcret
  7672  01B6F2                     __end_of_get_switch:
  7673                           	opt callstack 0
  7674                           
  7675 ;; *************** function _esr_check *****************
  7676 ;; Defined at:
  7677 ;;		line 178 in file "bsoc.c"
  7678 ;; Parameters:    Size  Location     Type
  7679 ;;  fsm             1  [STACK] unsigned char 
  7680 ;; Auto vars:     Size  Location     Type
  7681 ;;		None
  7682 ;; Return value:  Size  Location     Type
  7683 ;;                  4  [STACK] float 
  7684 ;; Registers used:
  7685 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  7686 ;; Tracked objects:
  7687 ;;		On entry : 0/0
  7688 ;;		On exit  : 0/0
  7689 ;;		Unchanged: 0/0
  7690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7691 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7692 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7693 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7694 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7695 ;;Total ram usage:        0 bytes
  7696 ;; Hardware stack levels used:    1
  7697 ;; Hardware stack levels required when called:   18
  7698 ;; This function calls:
  7699 ;;		_StartTimer
  7700 ;;		_TimerDone
  7701 ;;		___fldiv
  7702 ;;		___flsub
  7703 ;;		_conv_raw_result
  7704 ;;		_fabsf
  7705 ;;		_set_load_relay_one
  7706 ;;		_set_load_relay_two
  7707 ;;		_update_adc_result
  7708 ;; This function is called by:
  7709 ;;		_main
  7710 ;; This function uses a reentrant model
  7711 ;;
  7712                           
  7713                           	psect	text16
  7714  016E76                     __ptext16:
  7715                           	opt callstack 0
  7716  016E76                     _esr_check:
  7717                           	opt callstack 12
  7718                           
  7719                           ;bsoc.c: 178: float esr_check(uint8_t fsm);bsoc.c: 179: {;bsoc.c: 180:  static uint8_t e
      +                          sr_state = 0;;bsoc.c: 182:  if (fsm) {
  7720                           ;stkvar	_fsm @ sp[(0)+-1]
  7721                           
  7722                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7723                           ;incstack = 0
  7724  016E76  0EFF               	movlw	-1
  7725  016E78  50E3               	movf	plusw1,w,c
  7726  016E7A  B4D8               	btfsc	status,2,c
  7727  016E7C  D146               	goto	l10855
  7728                           
  7729                           ;bsoc.c: 183:   esr_state = 0;
  7730  016E7E  6A40               	clrf	esr_check@esr_state^0,c
  7731                           
  7732                           ;bsoc.c: 184:   return -10.0;
  7733  016E80  0E00               	movlw	0
  7734  016E82  6E01               	movwf	btemp^0,c
  7735  016E84  0E00               	movlw	0
  7736  016E86  6E02               	movwf	(btemp+1)^0,c
  7737  016E88  0E20               	movlw	32
  7738  016E8A  6E03               	movwf	(btemp+2)^0,c
  7739  016E8C  0EC1               	movlw	193
  7740  016E8E  D158               	goto	L5
  7741  016E90                     l10787:
  7742                           
  7743                           ;bsoc.c: 189:   StartTimer(TMR_ESR, 10000);
  7744  016E90  0E10               	movlw	16
  7745  016E92  6EE6               	movwf	postinc1,c
  7746  016E94  0E27               	movlw	39
  7747  016E96  6EE6               	movwf	postinc1,c
  7748  016E98  0E0C               	movlw	12
  7749  016E9A  6EE6               	movwf	postinc1,c
  7750  016E9C  EC6E  F0D9         	call	_StartTimer	;wreg free
  7751  016EA0                     l10789:
  7752                           
  7753                           ;bsoc.c: 190:   esr_state++;
  7754  016EA0  2A40               	incf	esr_check@esr_state^0,f,c
  7755                           
  7756                           ;bsoc.c: 191:   break;
  7757  016EA2  D147               	goto	l10857
  7758  016EA4                     l10791:
  7759                           
  7760                           ;bsoc.c: 196:   set_load_relay_one(0);
  7761  016EA4  0E00               	movlw	0
  7762  016EA6  6EE6               	movwf	postinc1,c
  7763  016EA8  EC77  F0DE         	call	_set_load_relay_one	;wreg free
  7764                           
  7765                           ;bsoc.c: 197:   set_load_relay_two(0);
  7766  016EAC  0E00               	movlw	0
  7767  016EAE  6EE6               	movwf	postinc1,c
  7768  016EB0  EC6F  F0DE         	call	_set_load_relay_two	;wreg free
  7769                           
  7770                           ;bsoc.c: 198:   if (TimerDone(TMR_ESR)) {
  7771  016EB4  0E0C               	movlw	12
  7772  016EB6  6EE6               	movwf	postinc1,c
  7773  016EB8  ECF7  F0DB         	call	_TimerDone	;wreg free
  7774  016EBC  5001               	movf	btemp^0,w,c
  7775  016EBE  B4D8               	btfsc	status,2,c
  7776  016EC0  D009               	goto	l10797
  7777                           
  7778                           ;bsoc.c: 199:    StartTimer(TMR_ESR, 10000);
  7779  016EC2  0E10               	movlw	16
  7780  016EC4  6EE6               	movwf	postinc1,c
  7781  016EC6  0E27               	movlw	39
  7782  016EC8  6EE6               	movwf	postinc1,c
  7783  016ECA  0E0C               	movlw	12
  7784  016ECC  6EE6               	movwf	postinc1,c
  7785  016ECE  EC6E  F0D9         	call	_StartTimer	;wreg free
  7786                           
  7787                           ;bsoc.c: 200:   } else {
  7788  016ED2  D006               	goto	l10801
  7789  016ED4                     l10797:
  7790                           
  7791                           ;bsoc.c: 201:    return -2.0;
  7792  016ED4  0E00               	movlw	0
  7793  016ED6  6E01               	movwf	btemp^0,c
  7794  016ED8  0E00               	movlw	0
  7795  016EDA  6E02               	movwf	(btemp+1)^0,c
  7796  016EDC  0E00               	movlw	0
  7797  016EDE  D066               	goto	L7
  7798  016EE0                     l10801:
  7799                           
  7800                           ;bsoc.c: 206:   update_adc_result();
  7801  016EE0  EC2D  F0DA         	call	_update_adc_result	;wreg free
  7802                           
  7803                           ;bsoc.c: 207:   C.bv_noload = conv_raw_result(V_BAT, CONV);
  7804  016EE4  0E00               	movlw	0
  7805  016EE6  6EE6               	movwf	postinc1,c
  7806  016EE8  0E04               	movlw	4
  7807  016EEA  6EE6               	movwf	postinc1,c
  7808  016EEC  EC0E  F0A8         	call	_conv_raw_result	;wreg free
  7809  016EF0  0060  F004  F811   	movff	btemp,_C+274	;volatile
  7810  016EF6  0060  F008  F812   	movff	btemp+1,_C+275	;volatile
  7811  016EFC  0060  F00C  F813   	movff	btemp+2,_C+276	;volatile
  7812  016F02  0060  F010  F814   	movff	btemp+3,_C+277	;volatile
  7813  016F08  D7CB               	goto	l10789
  7814  016F0A                     l10807:
  7815                           
  7816                           ;bsoc.c: 211:   set_load_relay_one(1);
  7817  016F0A  0E01               	movlw	1
  7818  016F0C  6EE6               	movwf	postinc1,c
  7819  016F0E  EC77  F0DE         	call	_set_load_relay_one	;wreg free
  7820                           
  7821                           ;bsoc.c: 212:   if (TimerDone(TMR_ESR)) {
  7822  016F12  0E0C               	movlw	12
  7823  016F14  6EE6               	movwf	postinc1,c
  7824  016F16  ECF7  F0DB         	call	_TimerDone	;wreg free
  7825  016F1A  5001               	movf	btemp^0,w,c
  7826  016F1C  B4D8               	btfsc	status,2,c
  7827  016F1E  D009               	goto	l10813
  7828                           
  7829                           ;bsoc.c: 213:    StartTimer(TMR_ESR, 10000);
  7830  016F20  0E10               	movlw	16
  7831  016F22  6EE6               	movwf	postinc1,c
  7832  016F24  0E27               	movlw	39
  7833  016F26  6EE6               	movwf	postinc1,c
  7834  016F28  0E0C               	movlw	12
  7835  016F2A  6EE6               	movwf	postinc1,c
  7836  016F2C  EC6E  F0D9         	call	_StartTimer	;wreg free
  7837                           
  7838                           ;bsoc.c: 214:   } else {
  7839  016F30  D006               	goto	l10817
  7840  016F32                     l10813:
  7841                           
  7842                           ;bsoc.c: 215:    return -3.0;
  7843  016F32  0E00               	movlw	0
  7844  016F34  6E01               	movwf	btemp^0,c
  7845  016F36  0E00               	movlw	0
  7846  016F38  6E02               	movwf	(btemp+1)^0,c
  7847  016F3A  0E40               	movlw	64
  7848  016F3C  D037               	goto	L7
  7849  016F3E                     l10817:
  7850                           
  7851                           ;bsoc.c: 218:   update_adc_result();
  7852  016F3E  EC2D  F0DA         	call	_update_adc_result	;wreg free
  7853                           
  7854                           ;bsoc.c: 219:   C.bv_one_load = conv_raw_result(V_BAT, CONV);
  7855  016F42  0E00               	movlw	0
  7856  016F44  6EE6               	movwf	postinc1,c
  7857  016F46  0E04               	movlw	4
  7858  016F48  6EE6               	movwf	postinc1,c
  7859  016F4A  EC0E  F0A8         	call	_conv_raw_result	;wreg free
  7860  016F4E  0060  F004  F815   	movff	btemp,_C+278	;volatile
  7861  016F54  0060  F008  F816   	movff	btemp+1,_C+279	;volatile
  7862  016F5A  0060  F00C  F817   	movff	btemp+2,_C+280	;volatile
  7863  016F60  0060  F010  F818   	movff	btemp+3,_C+281	;volatile
  7864                           
  7865                           ;bsoc.c: 220:   C.load_i1 = conv_raw_result(C_BATT, CONV);
  7866  016F66  0E00               	movlw	0
  7867  016F68  6EE6               	movwf	postinc1,c
  7868  016F6A  0E00               	movlw	0
  7869  016F6C  6EE6               	movwf	postinc1,c
  7870  016F6E  EC0E  F0A8         	call	_conv_raw_result	;wreg free
  7871  016F72  0060  F004  F809   	movff	btemp,_C+266	;volatile
  7872  016F78  0060  F008  F80A   	movff	btemp+1,_C+267	;volatile
  7873  016F7E  0060  F00C  F80B   	movff	btemp+2,_C+268	;volatile
  7874  016F84  0060  F010  F80C   	movff	btemp+3,_C+269	;volatile
  7875  016F8A  D78A               	goto	l10789
  7876  016F8C                     l10825:
  7877                           
  7878                           ;bsoc.c: 224:   set_load_relay_two(1);
  7879  016F8C  0E01               	movlw	1
  7880  016F8E  6EE6               	movwf	postinc1,c
  7881  016F90  EC6F  F0DE         	call	_set_load_relay_two	;wreg free
  7882                           
  7883                           ;bsoc.c: 225:   if (!TimerDone(TMR_ESR))
  7884  016F94  0E0C               	movlw	12
  7885  016F96  6EE6               	movwf	postinc1,c
  7886  016F98  ECF7  F0DB         	call	_TimerDone	;wreg free
  7887  016F9C  5001               	movf	btemp^0,w,c
  7888  016F9E  A4D8               	btfss	status,2,c
  7889  016FA0  D008               	goto	l10833
  7890                           
  7891                           ;bsoc.c: 226:    return -4.0;
  7892  016FA2  0E00               	movlw	0
  7893  016FA4  6E01               	movwf	btemp^0,c
  7894  016FA6  0E00               	movlw	0
  7895  016FA8  6E02               	movwf	(btemp+1)^0,c
  7896  016FAA  0E80               	movlw	128
  7897  016FAC                     L7:
  7898  016FAC  6E03               	movwf	(btemp+2)^0,c
  7899  016FAE  0EC0               	movlw	192
  7900  016FB0  D0C7               	goto	L5
  7901  016FB2                     l10833:
  7902                           
  7903                           ;bsoc.c: 228:   update_adc_result();
  7904  016FB2  EC2D  F0DA         	call	_update_adc_result	;wreg free
  7905                           
  7906                           ;bsoc.c: 229:   C.bv_full_load = conv_raw_result(V_BAT, CONV);
  7907  016FB6  0E00               	movlw	0
  7908  016FB8  6EE6               	movwf	postinc1,c
  7909  016FBA  0E04               	movlw	4
  7910  016FBC  6EE6               	movwf	postinc1,c
  7911  016FBE  EC0E  F0A8         	call	_conv_raw_result	;wreg free
  7912  016FC2  0060  F004  F819   	movff	btemp,_C+282	;volatile
  7913  016FC8  0060  F008  F81A   	movff	btemp+1,_C+283	;volatile
  7914  016FCE  0060  F00C  F81B   	movff	btemp+2,_C+284	;volatile
  7915  016FD4  0060  F010  F81C   	movff	btemp+3,_C+285	;volatile
  7916                           
  7917                           ;bsoc.c: 230:   C.load_i2 = conv_raw_result(C_BATT, CONV);
  7918  016FDA  0E00               	movlw	0
  7919  016FDC  6EE6               	movwf	postinc1,c
  7920  016FDE  0E00               	movlw	0
  7921  016FE0  6EE6               	movwf	postinc1,c
  7922  016FE2  EC0E  F0A8         	call	_conv_raw_result	;wreg free
  7923  016FE6  0060  F004  F80D   	movff	btemp,_C+270	;volatile
  7924  016FEC  0060  F008  F80E   	movff	btemp+1,_C+271	;volatile
  7925  016FF2  0060  F00C  F80F   	movff	btemp+2,_C+272	;volatile
  7926  016FF8  0060  F010  F810   	movff	btemp+3,_C+273	;volatile
  7927                           
  7928                           ;bsoc.c: 232:   C.esr = fabsf((C.bv_one_load - C.bv_full_load) / (C.load_i1 - C.load_i2)
      +                          );
  7929  016FFE  EE22  F00D         	lfsr	2,_C+270	;volatile
  7930  017002  006F FF7B FFE6     	movff	postinc2,postinc1
  7931  017008  006F FF7B FFE6     	movff	postinc2,postinc1
  7932  01700E  006F FF7B FFE6     	movff	postinc2,postinc1
  7933  017014  006F FF7B FFE6     	movff	postinc2,postinc1
  7934  01701A  EE22  F009         	lfsr	2,_C+266	;volatile
  7935  01701E  006F FF7B FFE6     	movff	postinc2,postinc1
  7936  017024  006F FF7B FFE6     	movff	postinc2,postinc1
  7937  01702A  006F FF7B FFE6     	movff	postinc2,postinc1
  7938  017030  006F FF7B FFE6     	movff	postinc2,postinc1
  7939  017036  EC08  F0D9         	call	___flsub	;wreg free
  7940  01703A  0060  F007  FFE6   	movff	btemp,postinc1
  7941  017040  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7942  017046  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7943  01704C  0060  F013  FFE6   	movff	btemp+3,postinc1
  7944  017052  EE22  F019         	lfsr	2,_C+282	;volatile
  7945  017056  006F FF7B FFE6     	movff	postinc2,postinc1
  7946  01705C  006F FF7B FFE6     	movff	postinc2,postinc1
  7947  017062  006F FF7B FFE6     	movff	postinc2,postinc1
  7948  017068  006F FF7B FFE6     	movff	postinc2,postinc1
  7949  01706E  EE22  F015         	lfsr	2,_C+278	;volatile
  7950  017072  006F FF7B FFE6     	movff	postinc2,postinc1
  7951  017078  006F FF7B FFE6     	movff	postinc2,postinc1
  7952  01707E  006F FF7B FFE6     	movff	postinc2,postinc1
  7953  017084  006F FF7B FFE6     	movff	postinc2,postinc1
  7954  01708A  EC08  F0D9         	call	___flsub	;wreg free
  7955  01708E  0060  F007  FFE6   	movff	btemp,postinc1
  7956  017094  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7957  01709A  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7958  0170A0  0060  F013  FFE6   	movff	btemp+3,postinc1
  7959  0170A6  EC51  F0A5         	call	___fldiv	;wreg free
  7960  0170AA  0060  F007  FFE6   	movff	btemp,postinc1
  7961  0170B0  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7962  0170B6  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7963  0170BC  0060  F013  FFE6   	movff	btemp+3,postinc1
  7964  0170C2  EC8B  F0D1         	call	_fabsf	;wreg free
  7965  0170C6  0060  F004  F787   	movff	btemp,_C+136	;volatile
  7966  0170CC  0060  F008  F788   	movff	btemp+1,_C+137	;volatile
  7967  0170D2  0060  F00C  F789   	movff	btemp+2,_C+138	;volatile
  7968  0170D8  0060  F010  F78A   	movff	btemp+3,_C+139	;volatile
  7969                           
  7970                           ;bsoc.c: 233:   set_load_relay_one(0);
  7971  0170DE  0E00               	movlw	0
  7972  0170E0  6EE6               	movwf	postinc1,c
  7973  0170E2  EC77  F0DE         	call	_set_load_relay_one	;wreg free
  7974                           
  7975                           ;bsoc.c: 234:   set_load_relay_two(0);
  7976  0170E6  0E00               	movlw	0
  7977  0170E8  6EE6               	movwf	postinc1,c
  7978  0170EA  EC6F  F0DE         	call	_set_load_relay_two	;wreg free
  7979                           
  7980                           ;bsoc.c: 235:   esr_state = 0;
  7981  0170EE  6A40               	clrf	esr_check@esr_state^0,c
  7982                           
  7983                           ;bsoc.c: 236:   return C.esr;
  7984  0170F0  0061  FE1C  F001   	movff	_C+136,btemp	;volatile
  7985  0170F6  0061  FE20  F002   	movff	_C+137,btemp+1	;volatile
  7986  0170FC  0061  FE24  F003   	movff	_C+138,btemp+2	;volatile
  7987  017102  0061  FE28  F004   	movff	_C+139,btemp+3	;volatile
  7988  017108  D01C               	goto	l2084
  7989  01710A                     l10855:
  7990  01710A  5040               	movf	esr_check@esr_state^0,w,c
  7991  01710C  6E0B               	movwf	(btemp+10)^0,c
  7992  01710E  6A0C               	clrf	(btemp+11)^0,c
  7993                           
  7994                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7995                           ; Switch size 1, requested type "simple"
  7996                           ; Number of cases is 1, Range of values is 0 to 0
  7997                           ; switch strategies available:
  7998                           ; Name         Instructions Cycles
  7999                           ; simple_byte            4     3 (average)
  8000                           ;	Chosen strategy is simple_byte
  8001  017110  500C               	movf	(btemp+11)^0,w,c
  8002  017112  0A00               	xorlw	0	; case 0
  8003  017114  A4D8               	btfss	status,2,c
  8004  017116  D00D               	goto	l10857
  8005                           
  8006                           ; Switch size 1, requested type "simple"
  8007                           ; Number of cases is 4, Range of values is 0 to 3
  8008                           ; switch strategies available:
  8009                           ; Name         Instructions Cycles
  8010                           ; simple_byte           13     7 (average)
  8011                           ;	Chosen strategy is simple_byte
  8012  017118  500B               	movf	(btemp+10)^0,w,c
  8013  01711A  0A00               	xorlw	0	; case 0
  8014  01711C  B4D8               	btfsc	status,2,c
  8015  01711E  D6B8               	goto	l10787
  8016  017120  0A01               	xorlw	1	; case 1
  8017  017122  B4D8               	btfsc	status,2,c
  8018  017124  D6BF               	goto	l10791
  8019  017126  0A03               	xorlw	3	; case 2
  8020  017128  B4D8               	btfsc	status,2,c
  8021  01712A  D6EF               	goto	l10807
  8022  01712C  0A01               	xorlw	1	; case 3
  8023  01712E  B4D8               	btfsc	status,2,c
  8024  017130  D72D               	goto	l10825
  8025  017132                     l10857:
  8026                           
  8027                           ;bsoc.c: 241:  return -1.0;
  8028  017132  0E00               	movlw	0
  8029  017134  6E01               	movwf	btemp^0,c
  8030  017136  0E00               	movlw	0
  8031  017138  6E02               	movwf	(btemp+1)^0,c
  8032  01713A  0E80               	movlw	128
  8033  01713C  6E03               	movwf	(btemp+2)^0,c
  8034  01713E  0EBF               	movlw	191
  8035  017140                     L5:
  8036  017140  6E04               	movwf	(btemp+3)^0,c
  8037  017142                     l2084:
  8038                           
  8039                           ; _esr_check: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
  8040  017142  52E5               	movf	postdec1,f,c
  8041  017144  0012               	return		;funcret
  8042  017146                     __end_of_esr_check:
  8043                           	opt callstack 0
  8044                           
  8045 ;; *************** function _update_adc_result *****************
  8046 ;; Defined at:
  8047 ;;		line 74 in file "daq.c"
  8048 ;; Parameters:    Size  Location     Type
  8049 ;;		None
  8050 ;; Auto vars:     Size  Location     Type
  8051 ;;		None
  8052 ;; Return value:  Size  Location     Type
  8053 ;;                  1  [STACK] _Bool 
  8054 ;; Registers used:
  8055 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl, p
      +rodh
  8056 ;; Tracked objects:
  8057 ;;		On entry : 0/0
  8058 ;;		On exit  : 0/0
  8059 ;;		Unchanged: 0/0
  8060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8061 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8062 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8063 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8064 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8065 ;;Total ram usage:        0 bytes
  8066 ;; Hardware stack levels used:    1
  8067 ;; Hardware stack levels required when called:   17
  8068 ;; This function calls:
  8069 ;;		_StartTimer
  8070 ;;		_TimerDone
  8071 ;;		_check_adc_scan
  8072 ;;		_clear_adc_scan
  8073 ;;		_start_adc_scan
  8074 ;; This function is called by:
  8075 ;;		_esr_check
  8076 ;; This function uses a reentrant model
  8077 ;;
  8078                           
  8079                           	psect	text17
  8080  01B45A                     __ptext17:
  8081                           	opt callstack 0
  8082  01B45A                     _update_adc_result:
  8083                           	opt callstack 12
  8084                           
  8085                           ;daq.c: 76:  if (R.done) {
  8086                           
  8087                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8088                           ;incstack = 0
  8089  01B45A  0101               	movlb	1	; () banked
  8090  01B45C  512F               	movf	(_R+47)& (0+255),w,b	;volatile
  8091  01B45E  B4D8               	btfsc	status,2,c
  8092  01B460  0012               	return	
  8093                           
  8094                           ; BSR set to: 1
  8095                           ;daq.c: 77:   clear_adc_scan();
  8096  01B462  ECEB  F0DE         	call	_clear_adc_scan	;wreg free
  8097                           
  8098                           ; BSR set to: 1
  8099                           ;daq.c: 78:   start_adc_scan();
  8100  01B466  EC70  F0D6         	call	_start_adc_scan	;wreg free
  8101                           
  8102                           ;daq.c: 79:   StartTimer(TMR_ADC, 200);
  8103  01B46A  0EC8               	movlw	200
  8104  01B46C  6EE6               	movwf	postinc1,c
  8105  01B46E  0E00               	movlw	0
  8106  01B470  6EE6               	movwf	postinc1,c
  8107  01B472  0E01               	movlw	1
  8108  01B474  6EE6               	movwf	postinc1,c
  8109  01B476  EC6E  F0D9         	call	_StartTimer	;wreg free
  8110  01B47A                     l10401:
  8111  01B47A  0E01               	movlw	1
  8112  01B47C  6EE6               	movwf	postinc1,c
  8113  01B47E  ECF7  F0DB         	call	_TimerDone	;wreg free
  8114  01B482  5001               	movf	btemp^0,w,c
  8115  01B484  A4D8               	btfss	status,2,c
  8116  01B486  0012               	return	
  8117  01B488  ECDB  F0DE         	call	_check_adc_scan	;wreg free
  8118  01B48C  5001               	movf	btemp^0,w,c
  8119  01B48E  A4D8               	btfss	status,2,c
  8120  01B490  0012               	return	
  8121  01B492  D7F3               	goto	l10401
  8122  01B494                     __end_of_update_adc_result:
  8123                           	opt callstack 0
  8124                           
  8125 ;; *************** function _start_adc_scan *****************
  8126 ;; Defined at:
  8127 ;;		line 35 in file "daq.c"
  8128 ;; Parameters:    Size  Location     Type
  8129 ;;		None
  8130 ;; Auto vars:     Size  Location     Type
  8131 ;;		None
  8132 ;; Return value:  Size  Location     Type
  8133 ;;                  1  [STACK] _Bool 
  8134 ;; Registers used:
  8135 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
  8136 ;; Tracked objects:
  8137 ;;		On entry : 0/0
  8138 ;;		On exit  : 0/0
  8139 ;;		Unchanged: 0/0
  8140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8141 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8142 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8143 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8144 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8145 ;;Total ram usage:        0 bytes
  8146 ;; Hardware stack levels used:    1
  8147 ;; Hardware stack levels required when called:   16
  8148 ;; This function calls:
  8149 ;;		_ADCC_DischargeSampleCapacitor
  8150 ;;		_ADCC_SetADIInterruptHandler
  8151 ;;		_ADCC_SetADTIInterruptHandler
  8152 ;;		_ADCC_StartConversion
  8153 ;; This function is called by:
  8154 ;;		_main
  8155 ;;		_update_adc_result
  8156 ;; This function uses a reentrant model
  8157 ;;
  8158                           
  8159                           	psect	text18
  8160  01ACE0                     __ptext18:
  8161                           	opt callstack 0
  8162  01ACE0                     _start_adc_scan:
  8163                           	opt callstack 14
  8164                           
  8165                           ;daq.c: 37:  if (R.done)
  8166                           
  8167                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8168                           ;incstack = 0
  8169  01ACE0  0101               	movlb	1	; () banked
  8170  01ACE2  512F               	movf	(_R+47)& (0+255),w,b	;volatile
  8171  01ACE4  A4D8               	btfss	status,2,c
  8172  01ACE6  0012               	return	
  8173                           
  8174                           ; BSR set to: 1
  8175                           ;daq.c: 40:  R.scan_index = 0;
  8176  01ACE8  6B2C               	clrf	(_R+44)& (0+255),b	;volatile
  8177                           
  8178                           ; BSR set to: 1
  8179                           ;daq.c: 41:  R.scan_select = (uint16_t) ((ANSELB << 8) + ANSELA) & 0b0011110001110111;
  8180  01ACEA  013A               	movlb	58	; () banked
  8181  01ACEC  5140               	movf	64,w,b	;volatile
  8182  01ACEE  006E F940  F001    	movff	14928,btemp	;volatile
  8183  01ACF4  6A02               	clrf	(btemp+1)^0,c
  8184  01ACF6  0060  F004  F002   	movff	btemp,btemp+1
  8185  01ACFC  6A01               	clrf	btemp^0,c
  8186  01ACFE  2601               	addwf	btemp^0,f,c
  8187  01AD00  0E00               	movlw	0
  8188  01AD02  2202               	addwfc	(btemp+1)^0,f,c
  8189  01AD04  0E77               	movlw	119
  8190  01AD06  1401               	andwf	btemp^0,w,c
  8191  01AD08  0101               	movlb	1	; () banked
  8192  01AD0A  6F2D               	movwf	(_R+45)& (0+255),b	;volatile
  8193  01AD0C  0E3C               	movlw	60
  8194  01AD0E  1402               	andwf	(btemp+1)^0,w,c
  8195  01AD10  6F2E               	movwf	(_R+46)& (0+255),b	;volatile
  8196                           
  8197                           ; BSR set to: 1
  8198                           ;daq.c: 42:  ADCC_SetADIInterruptHandler(adc_int_handler);
  8199  01AD12  0EFE               	movlw	low _adc_int_handler
  8200  01AD14  6EE6               	movwf	postinc1,c
  8201  01AD16  0EBD               	movlw	high _adc_int_handler
  8202  01AD18  6EE6               	movwf	postinc1,c
  8203  01AD1A  0E01               	movlw	low (_adc_int_handler shr (0+16))
  8204  01AD1C  6EE6               	movwf	postinc1,c
  8205  01AD1E  ECBF  F0DC         	call	_ADCC_SetADIInterruptHandler	;wreg free
  8206                           
  8207                           ;daq.c: 43:  ADCC_SetADTIInterruptHandler(adc_int_t_handler);
  8208  01AD22  0E40               	movlw	low _adc_int_t_handler
  8209  01AD24  6EE6               	movwf	postinc1,c
  8210  01AD26  0EAA               	movlw	high _adc_int_t_handler
  8211  01AD28  6EE6               	movwf	postinc1,c
  8212  01AD2A  0E01               	movlw	low (_adc_int_t_handler shr (0+16))
  8213  01AD2C  6EE6               	movwf	postinc1,c
  8214  01AD2E  ECAB  F0DC         	call	_ADCC_SetADTIInterruptHandler	;wreg free
  8215                           
  8216                           ;daq.c: 44:  ADCC_DischargeSampleCapacitor();
  8217  01AD32  ECD7  F0DE         	call	_ADCC_DischargeSampleCapacitor	;wreg free
  8218                           
  8219                           ; BSR set to: 62
  8220                           ;daq.c: 45:  ADCC_StartConversion(R.scan_index & 0xf);
  8221  01AD36  0101               	movlb	1	; () banked
  8222  01AD38  512C               	movf	(_R+44)& (0+255),w,b	;volatile
  8223  01AD3A  0B0F               	andlw	15
  8224  01AD3C  6EE6               	movwf	postinc1,c
  8225  01AD3E  EC66  F0DE         	call	_ADCC_StartConversion	;wreg free
  8226                           
  8227                           ; _start_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  8228  01AD42  0012               	return		;funcret
  8229  01AD44                     __end_of_start_adc_scan:
  8230                           	opt callstack 0
  8231                           
  8232 ;; *************** function _ADCC_StartConversion *****************
  8233 ;; Defined at:
  8234 ;;		line 128 in file "mcc_generated_files/adcc.c"
  8235 ;; Parameters:    Size  Location     Type
  8236 ;;  channel         1  [STACK] enum E16136
  8237 ;; Auto vars:     Size  Location     Type
  8238 ;;		None
  8239 ;; Return value:  Size  Location     Type
  8240 ;;                  1  [STACK] void 
  8241 ;; Registers used:
  8242 ;;		fsr1l, fsr1h
  8243 ;; Tracked objects:
  8244 ;;		On entry : 3F/1
  8245 ;;		On exit  : 3F/3E
  8246 ;;		Unchanged: 0/0
  8247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8248 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8249 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8251 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8252 ;;Total ram usage:        0 bytes
  8253 ;; Hardware stack levels used:    1
  8254 ;; Hardware stack levels required when called:   15
  8255 ;; This function calls:
  8256 ;;		Nothing
  8257 ;; This function is called by:
  8258 ;;		_start_adc_scan
  8259 ;;		_adc_int_t_handler
  8260 ;; This function uses a reentrant model
  8261 ;;
  8262                           
  8263                           	psect	text19
  8264  01BCCC                     __ptext19:
  8265                           	opt callstack 0
  8266  01BCCC                     _ADCC_StartConversion:
  8267                           	opt callstack 0
  8268                           
  8269                           ;mcc_generated_files/adcc.c: 128: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 129: {;mcc_generated_files/adcc.c: 131:     ADPCH = channel;
  8270                           ;stkvar	_channel @ sp[(0)+-1]
  8271                           
  8272                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8273                           ;incstack = 0
  8274 ;; hardware stack exceeded
  8275  01BCCC  0EFF               	movlw	-1
  8276  01BCCE  006F FF8F FEF1     	movff	plusw1,16113	;volatile
  8277                           
  8278                           ;mcc_generated_files/adcc.c: 134:     ADCON0bits.ADON = 1;
  8279  01BCD4  013E               	movlb	62	; () banked
  8280  01BCD6  8FF8               	bsf	248,7,b	;volatile
  8281                           
  8282                           ; BSR set to: 62
  8283                           ;mcc_generated_files/adcc.c: 137:     ADCON0bits.ADGO = 1;
  8284  01BCD8  81F8               	bsf	248,0,b	;volatile
  8285                           
  8286                           ; BSR set to: 62
  8287                           ; _ADCC_StartConversion: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
  8288  01BCDA  52E5               	movf	postdec1,f,c
  8289  01BCDC  0012               	return		;funcret
  8290  01BCDE                     __end_of_ADCC_StartConversion:
  8291                           	opt callstack 0
  8292                           
  8293 ;; *************** function _ADCC_DischargeSampleCapacitor *****************
  8294 ;; Defined at:
  8295 ;;		line 189 in file "mcc_generated_files/adcc.c"
  8296 ;; Parameters:    Size  Location     Type
  8297 ;;		None
  8298 ;; Auto vars:     Size  Location     Type
  8299 ;;		None
  8300 ;; Return value:  Size  Location     Type
  8301 ;;                  1  [STACK] void 
  8302 ;; Registers used:
  8303 ;;		wreg, status,2
  8304 ;; Tracked objects:
  8305 ;;		On entry : 0/1
  8306 ;;		On exit  : 3F/3E
  8307 ;;		Unchanged: 0/0
  8308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8309 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8310 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8311 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8312 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8313 ;;Total ram usage:        0 bytes
  8314 ;; Hardware stack levels used:    1
  8315 ;; Hardware stack levels required when called:   15
  8316 ;; This function calls:
  8317 ;;		Nothing
  8318 ;; This function is called by:
  8319 ;;		_start_adc_scan
  8320 ;;		_adc_int_t_handler
  8321 ;; This function uses a reentrant model
  8322 ;;
  8323                           
  8324                           	psect	text20
  8325  01BDAE                     __ptext20:
  8326                           	opt callstack 0
  8327  01BDAE                     _ADCC_DischargeSampleCapacitor:
  8328                           	opt callstack 0
  8329                           
  8330                           ;mcc_generated_files/adcc.c: 192:     ADPCH = 0x3b;
  8331                           
  8332                           ; BSR set to: 62
  8333                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8334                           ;incstack = 0
  8335 ;; hardware stack exceeded
  8336  01BDAE  0E3B               	movlw	59
  8337  01BDB0  013E               	movlb	62	; () banked
  8338  01BDB2  6FF1               	movwf	241,b	;volatile
  8339                           
  8340                           ; BSR set to: 62
  8341                           ; _ADCC_DischargeSampleCapacitor: autosize = 0, savesize = 0, parsavesize = 0, tempsize 
      +                          = 0 parsize = 0, argsize = 0, vargsize = 0
  8342  01BDB4  0012               	return		;funcret
  8343  01BDB6                     __end_of_ADCC_DischargeSampleCapacitor:
  8344                           	opt callstack 0
  8345                           
  8346 ;; *************** function _clear_adc_scan *****************
  8347 ;; Defined at:
  8348 ;;		line 66 in file "daq.c"
  8349 ;; Parameters:    Size  Location     Type
  8350 ;;		None
  8351 ;; Auto vars:     Size  Location     Type
  8352 ;;		None
  8353 ;; Return value:  Size  Location     Type
  8354 ;;                  1  [STACK] void 
  8355 ;; Registers used:
  8356 ;;		None
  8357 ;; Tracked objects:
  8358 ;;		On entry : 0/0
  8359 ;;		On exit  : 3F/1
  8360 ;;		Unchanged: 0/0
  8361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8363 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8365 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8366 ;;Total ram usage:        0 bytes
  8367 ;; Hardware stack levels used:    1
  8368 ;; Hardware stack levels required when called:   15
  8369 ;; This function calls:
  8370 ;;		Nothing
  8371 ;; This function is called by:
  8372 ;;		_main
  8373 ;;		_update_adc_result
  8374 ;; This function uses a reentrant model
  8375 ;;
  8376                           
  8377                           	psect	text21
  8378  01BDD6                     __ptext21:
  8379                           	opt callstack 0
  8380  01BDD6                     _clear_adc_scan:
  8381                           	opt callstack 13
  8382                           
  8383                           ;daq.c: 68:  R.done = 0;
  8384                           
  8385                           ; BSR set to: 62
  8386                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8387                           ;incstack = 0
  8388  01BDD6  0101               	movlb	1	; () banked
  8389  01BDD8  6B2F               	clrf	(_R+47)& (0+255),b	;volatile
  8390                           
  8391                           ; BSR set to: 1
  8392                           ; _clear_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  8393  01BDDA  0012               	return		;funcret
  8394  01BDDC                     __end_of_clear_adc_scan:
  8395                           	opt callstack 0
  8396                           
  8397 ;; *************** function _check_adc_scan *****************
  8398 ;; Defined at:
  8399 ;;		line 58 in file "daq.c"
  8400 ;; Parameters:    Size  Location     Type
  8401 ;;		None
  8402 ;; Auto vars:     Size  Location     Type
  8403 ;;		None
  8404 ;; Return value:  Size  Location     Type
  8405 ;;                  1  [STACK] _Bool 
  8406 ;; Registers used:
  8407 ;;		btemp
  8408 ;; Tracked objects:
  8409 ;;		On entry : 0/1
  8410 ;;		On exit  : 0/0
  8411 ;;		Unchanged: 0/0
  8412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8413 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8414 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8415 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8416 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8417 ;;Total ram usage:        0 bytes
  8418 ;; Hardware stack levels used:    1
  8419 ;; Hardware stack levels required when called:   15
  8420 ;; This function calls:
  8421 ;;		Nothing
  8422 ;; This function is called by:
  8423 ;;		_main
  8424 ;;		_update_adc_result
  8425 ;; This function uses a reentrant model
  8426 ;;
  8427                           
  8428                           	psect	text22
  8429  01BDB6                     __ptext22:
  8430                           	opt callstack 0
  8431  01BDB6                     _check_adc_scan:
  8432                           	opt callstack 13
  8433                           
  8434                           ;daq.c: 60:  return R.done;
  8435                           
  8436                           ; BSR set to: 1
  8437                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8438                           ;incstack = 0
  8439  01BDB6  0060  F4BC  F001   	movff	_R+47,btemp	;volatile
  8440                           
  8441                           ; _check_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  8442  01BDBC  0012               	return		;funcret
  8443  01BDBE                     __end_of_check_adc_scan:
  8444                           	opt callstack 0
  8445                           
  8446 ;; *************** function _set_load_relay_two *****************
  8447 ;; Defined at:
  8448 ;;		line 129 in file "mbmc.c"
  8449 ;; Parameters:    Size  Location     Type
  8450 ;;  mode            1  [STACK] _Bool 
  8451 ;; Auto vars:     Size  Location     Type
  8452 ;;		None
  8453 ;; Return value:  Size  Location     Type
  8454 ;;                  1  [STACK] void 
  8455 ;; Registers used:
  8456 ;;		wreg, fsr1l, fsr1h
  8457 ;; Tracked objects:
  8458 ;;		On entry : 0/0
  8459 ;;		On exit  : 0/0
  8460 ;;		Unchanged: 0/0
  8461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8462 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8463 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8465 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8466 ;;Total ram usage:        0 bytes
  8467 ;; Hardware stack levels used:    1
  8468 ;; Hardware stack levels required when called:   15
  8469 ;; This function calls:
  8470 ;;		Nothing
  8471 ;; This function is called by:
  8472 ;;		_main
  8473 ;;		_esr_check
  8474 ;; This function uses a reentrant model
  8475 ;;
  8476                           
  8477                           	psect	text23
  8478  01BCDE                     __ptext23:
  8479                           	opt callstack 0
  8480  01BCDE                     _set_load_relay_two:
  8481                           	opt callstack 15
  8482                           
  8483                           ;mbmc.c: 129: void set_load_relay_two(_Bool mode);mbmc.c: 130: {;mbmc.c: 131:  LATDbits.
      +                          LATD5 = mode;
  8484                           ;stkvar	_mode @ sp[(0)+-1]
  8485                           
  8486                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8487                           ;incstack = 0
  8488  01BCDE  0EFF               	movlw	-1
  8489  01BCE0  B0E3               	btfsc	plusw1,0,c
  8490  01BCE2  D002               	bra	u9475
  8491  01BCE4  9ABD               	bcf	189,5,c	;volatile
  8492  01BCE6  D001               	bra	u9476
  8493  01BCE8                     u9475:
  8494  01BCE8  8ABD               	bsf	189,5,c	;volatile
  8495  01BCEA                     u9476:
  8496                           
  8497                           ; _set_load_relay_two: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
  8498  01BCEA  52E5               	movf	postdec1,f,c
  8499  01BCEC  0012               	return		;funcret
  8500  01BCEE                     __end_of_set_load_relay_two:
  8501                           	opt callstack 0
  8502                           
  8503 ;; *************** function _set_load_relay_one *****************
  8504 ;; Defined at:
  8505 ;;		line 124 in file "mbmc.c"
  8506 ;; Parameters:    Size  Location     Type
  8507 ;;  mode            1  [STACK] _Bool 
  8508 ;; Auto vars:     Size  Location     Type
  8509 ;;		None
  8510 ;; Return value:  Size  Location     Type
  8511 ;;                  1  [STACK] void 
  8512 ;; Registers used:
  8513 ;;		wreg, fsr1l, fsr1h
  8514 ;; Tracked objects:
  8515 ;;		On entry : 0/0
  8516 ;;		On exit  : 0/0
  8517 ;;		Unchanged: 0/0
  8518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8519 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8520 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8521 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8522 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8523 ;;Total ram usage:        0 bytes
  8524 ;; Hardware stack levels used:    1
  8525 ;; Hardware stack levels required when called:   15
  8526 ;; This function calls:
  8527 ;;		Nothing
  8528 ;; This function is called by:
  8529 ;;		_main
  8530 ;;		_esr_check
  8531 ;; This function uses a reentrant model
  8532 ;;
  8533                           
  8534                           	psect	text24
  8535  01BCEE                     __ptext24:
  8536                           	opt callstack 0
  8537  01BCEE                     _set_load_relay_one:
  8538                           	opt callstack 15
  8539                           
  8540                           ;mbmc.c: 124: void set_load_relay_one(_Bool mode);mbmc.c: 125: {;mbmc.c: 126:  LATDbits.
      +                          LATD4 = mode;
  8541                           ;stkvar	_mode @ sp[(0)+-1]
  8542                           
  8543                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8544                           ;incstack = 0
  8545  01BCEE  0EFF               	movlw	-1
  8546  01BCF0  B0E3               	btfsc	plusw1,0,c
  8547  01BCF2  D002               	bra	u9465
  8548  01BCF4  98BD               	bcf	189,4,c	;volatile
  8549  01BCF6  D001               	bra	u9466
  8550  01BCF8                     u9465:
  8551  01BCF8  88BD               	bsf	189,4,c	;volatile
  8552  01BCFA                     u9466:
  8553                           
  8554                           ; _set_load_relay_one: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
  8555  01BCFA  52E5               	movf	postdec1,f,c
  8556  01BCFC  0012               	return		;funcret
  8557  01BCFE                     __end_of_set_load_relay_one:
  8558                           	opt callstack 0
  8559                           
  8560 ;; *************** function _eaDogM_WriteCommand *****************
  8561 ;; Defined at:
  8562 ;;		line 175 in file "eadog.c"
  8563 ;; Parameters:    Size  Location     Type
  8564 ;;  cmd             1  [STACK] const unsigned char 
  8565 ;; Auto vars:     Size  Location     Type
  8566 ;;		None
  8567 ;; Return value:  Size  Location     Type
  8568 ;;                  1  [STACK] void 
  8569 ;; Registers used:
  8570 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  8571 ;; Tracked objects:
  8572 ;;		On entry : 3F/3D
  8573 ;;		On exit  : 3F/0
  8574 ;;		Unchanged: 0/0
  8575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8576 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8577 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8578 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8579 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8580 ;;Total ram usage:        0 bytes
  8581 ;; Hardware stack levels used:    1
  8582 ;; Hardware stack levels required when called:   25
  8583 ;; This function calls:
  8584 ;;		_send_lcd_cmd_dma
  8585 ;; This function is called by:
  8586 ;;		_main
  8587 ;; This function uses a reentrant model
  8588 ;;
  8589                           
  8590                           	psect	text25
  8591  01BD2C                     __ptext25:
  8592                           	opt callstack 0
  8593  01BD2C                     _eaDogM_WriteCommand:
  8594                           	opt callstack 5
  8595                           
  8596                           ;eadog.c: 175: void eaDogM_WriteCommand(const uint8_t cmd);eadog.c: 176: {;eadog.c: 177:
      +                            send_lcd_cmd_dma(cmd);
  8597                           ;stkvar	_cmd @ sp[(0)+-1]
  8598                           
  8599                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8600                           ;incstack = 0
  8601  01BD2C  0EFF               	movlw	-1
  8602  01BD2E  50E3               	movf	plusw1,w,c
  8603  01BD30  6EE6               	movwf	postinc1,c
  8604  01BD32  EC8E  F0D7         	call	_send_lcd_cmd_dma	;wreg free
  8605                           
  8606                           ; BSR set to: 0
  8607                           ; _eaDogM_WriteCommand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 1, argsize = 1, vargsize = 0
  8608  01BD36  52E5               	movf	postdec1,f,c
  8609  01BD38  0012               	return		;funcret
  8610  01BD3A                     __end_of_eaDogM_WriteCommand:
  8611                           	opt callstack 0
  8612                           
  8613 ;; *************** function _convert_adc_data *****************
  8614 ;; Defined at:
  8615 ;;		line 51 in file "mbmc.c"
  8616 ;; Parameters:    Size  Location     Type
  8617 ;;		None
  8618 ;; Auto vars:     Size  Location     Type
  8619 ;;  i               1  [STACK] unsigned char 
  8620 ;; Return value:  Size  Location     Type
  8621 ;;                  1  [STACK] void 
  8622 ;; Registers used:
  8623 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  8624 ;; Tracked objects:
  8625 ;;		On entry : 0/1
  8626 ;;		On exit  : 0/0
  8627 ;;		Unchanged: 0/0
  8628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8629 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8630 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8631 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8632 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8633 ;;Total ram usage:        0 bytes
  8634 ;; Hardware stack levels used:    1
  8635 ;; Hardware stack levels required when called:   18
  8636 ;; This function calls:
  8637 ;;		_conv_raw_result
  8638 ;;		_lp_filter
  8639 ;; This function is called by:
  8640 ;;		_main
  8641 ;; This function uses a reentrant model
  8642 ;;
  8643                           
  8644                           	psect	text26
  8645  01A25E                     __ptext26:
  8646                           	opt callstack 0
  8647  01A25E                     _convert_adc_data:
  8648                           	opt callstack 0
  8649                           
  8650                           ; BSR set to: 0
  8651                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8652  01A25E  52E6               	movf	postinc1,f,c
  8653                           
  8654                           ;mbmc.c: 53:  uint8_t i = 0;
  8655                           ;stkvar	_i @ sp[(-1)+0]
  8656                           
  8657                           ;incstack = 0
  8658  01A260  0EFF               	movlw	-1
  8659  01A262  6AE3               	clrf	plusw1,c
  8660  01A264                     l10867:
  8661                           
  8662                           ;mbmc.c: 56:   if (V.calib) {
  8663  01A264  0101               	movlb	1	; () banked
  8664  01A266  51DC               	movf	(_V+172)& (0+255),w,b	;volatile
  8665  01A268  B4D8               	btfsc	status,2,c
  8666  01A26A  D01B               	goto	l10871
  8667                           
  8668                           ; BSR set to: 1
  8669                           ;mbmc.c: 57:    C.calc[i] = lp_filter(conv_raw_result(i, O_CONV), i, 1);
  8670  01A26C  0E01               	movlw	1
  8671  01A26E  6EE6               	movwf	postinc1,c
  8672                           
  8673                           ;stkvar	_i @ sp[(-2)+0]
  8674  01A270  0EFE               	movlw	-2
  8675  01A272  50E3               	movf	plusw1,w,c
  8676  01A274  6EE6               	movwf	postinc1,c
  8677  01A276  0E01               	movlw	1
  8678  01A278  6EE6               	movwf	postinc1,c
  8679                           
  8680                           ;stkvar	_i @ sp[(-4)+0]
  8681  01A27A  0EFC               	movlw	-4
  8682  01A27C  50E3               	movf	plusw1,w,c
  8683  01A27E  6EE6               	movwf	postinc1,c
  8684  01A280  EC0E  F0A8         	call	_conv_raw_result	;wreg free
  8685  01A284  0060  F007  FFE6   	movff	btemp,postinc1
  8686  01A28A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8687  01A290  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8688  01A296  0060  F013  FFE6   	movff	btemp+3,postinc1
  8689  01A29C  ECCC  F0C1         	call	_lp_filter	;wreg free
  8690  01A2A0  D01A               	goto	L8
  8691  01A2A2                     l10871:
  8692                           
  8693                           ; BSR set to: 1
  8694                           ;mbmc.c: 59:    C.calc[i] = lp_filter(conv_raw_result(i, CONV), i, 0);
  8695  01A2A2  0E00               	movlw	0
  8696  01A2A4  6EE6               	movwf	postinc1,c
  8697                           
  8698                           ;stkvar	_i @ sp[(-2)+0]
  8699  01A2A6  0EFE               	movlw	-2
  8700  01A2A8  50E3               	movf	plusw1,w,c
  8701  01A2AA  6EE6               	movwf	postinc1,c
  8702  01A2AC  0E00               	movlw	0
  8703  01A2AE  6EE6               	movwf	postinc1,c
  8704                           
  8705                           ;stkvar	_i @ sp[(-4)+0]
  8706  01A2B0  0EFC               	movlw	-4
  8707  01A2B2  50E3               	movf	plusw1,w,c
  8708  01A2B4  6EE6               	movwf	postinc1,c
  8709  01A2B6  EC0E  F0A8         	call	_conv_raw_result	;wreg free
  8710  01A2BA  0060  F007  FFE6   	movff	btemp,postinc1
  8711  01A2C0  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8712  01A2C6  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8713  01A2CC  0060  F013  FFE6   	movff	btemp+3,postinc1
  8714  01A2D2  ECCC  F0C1         	call	_lp_filter	;wreg free
  8715  01A2D6                     L8:
  8716                           
  8717                           ;stkvar	_i @ sp[(-1)+0]
  8718  01A2D6  0EFF               	movlw	-1
  8719  01A2D8  50E3               	movf	plusw1,w,c
  8720  01A2DA  0D04               	mullw	4
  8721  01A2DC  0EFF               	movlw	low _C
  8722  01A2DE  24F3               	addwf	243,w,c
  8723  01A2E0  6ED9               	movwf	fsr2l,c
  8724  01A2E2  0E06               	movlw	high _C
  8725  01A2E4  20F4               	addwfc	prodh,w,c
  8726  01A2E6  6EDA               	movwf	fsr2h,c
  8727  01A2E8  0060  F007  FFDE   	movff	btemp,postinc2
  8728  01A2EE  0060  F00B  FFDE   	movff	btemp+1,postinc2
  8729  01A2F4  0060  F00F  FFDE   	movff	btemp+2,postinc2
  8730  01A2FA  0060  F013  FFDE   	movff	btemp+3,postinc2
  8731                           
  8732                           ;mbmc.c: 61:  } while (++i < 16);
  8733                           ;stkvar	_i @ sp[(-1)+0]
  8734  01A300  0EFF               	movlw	-1
  8735  01A302  2AE3               	incf	plusw1,f,c
  8736  01A304  0EFF               	movlw	-1
  8737  01A306  006F FF8C  F001    	movff	plusw1,btemp
  8738  01A30C  0E0F               	movlw	15
  8739  01A30E  6401               	cpfsgt	btemp^0,c
  8740  01A310  D7A9               	goto	l10867
  8741                           
  8742                           ; _convert_adc_data: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
  8743  01A312  52E5               	movf	postdec1,f,c
  8744  01A314  0012               	return		;funcret
  8745  01A316                     __end_of_convert_adc_data:
  8746                           	opt callstack 0
  8747                           
  8748 ;; *************** function _clear_hid_pflags *****************
  8749 ;; Defined at:
  8750 ;;		line 51 in file "hid.c"
  8751 ;; Parameters:    Size  Location     Type
  8752 ;;  h               1  [STACK] PTR struct H_data
  8753 ;;		 -> H(7), 
  8754 ;; Auto vars:     Size  Location     Type
  8755 ;;		None
  8756 ;; Return value:  Size  Location     Type
  8757 ;;                  1  [STACK] void 
  8758 ;; Registers used:
  8759 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  8760 ;; Tracked objects:
  8761 ;;		On entry : 3F/0
  8762 ;;		On exit  : 0/0
  8763 ;;		Unchanged: 0/0
  8764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8765 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8766 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8767 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8768 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8769 ;;Total ram usage:        0 bytes
  8770 ;; Hardware stack levels used:    1
  8771 ;; Hardware stack levels required when called:   15
  8772 ;; This function calls:
  8773 ;;		Nothing
  8774 ;; This function is called by:
  8775 ;;		_main
  8776 ;; This function uses a reentrant model
  8777 ;;
  8778                           
  8779                           	psect	text27
  8780  01BA20                     __ptext27:
  8781                           	opt callstack 0
  8782  01BA20                     _clear_hid_pflags:
  8783                           	opt callstack 15
  8784                           
  8785                           ;hid.c: 51: void clear_hid_pflags(H_data* h);hid.c: 52: {;hid.c: 53:  h->select_p = SW_O
      +                          FF;
  8786                           ;stkvar	_h @ sp[(0)+-1]
  8787                           
  8788                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8789                           ;incstack = 0
  8790  01BA20  0EFF               	movlw	-1
  8791  01BA22  50E3               	movf	plusw1,w,c
  8792  01BA24  6ED9               	movwf	fsr2l,c
  8793  01BA26  6ADA               	clrf	fsr2h,c
  8794  01BA28  0E03               	movlw	3
  8795  01BA2A  26D9               	addwf	fsr2l,f,c
  8796  01BA2C  0E00               	movlw	0
  8797  01BA2E  6EDF               	movwf	indf2,c
  8798                           
  8799                           ;hid.c: 54:  h->enter_p = SW_OFF;
  8800                           ;stkvar	_h @ sp[(0)+-1]
  8801  01BA30  0EFF               	movlw	-1
  8802  01BA32  50E3               	movf	plusw1,w,c
  8803  01BA34  6ED9               	movwf	fsr2l,c
  8804  01BA36  6ADA               	clrf	fsr2h,c
  8805  01BA38  0E05               	movlw	5
  8806  01BA3A  26D9               	addwf	fsr2l,f,c
  8807  01BA3C  0E00               	movlw	0
  8808  01BA3E  6EDF               	movwf	indf2,c
  8809                           
  8810                           ; _clear_hid_pflags: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  8811  01BA40  52E5               	movf	postdec1,f,c
  8812  01BA42  0012               	return		;funcret
  8813  01BA44                     __end_of_clear_hid_pflags:
  8814                           	opt callstack 0
  8815                           
  8816 ;; *************** function _check_help *****************
  8817 ;; Defined at:
  8818 ;;		line 40 in file "mconfig.c"
  8819 ;; Parameters:    Size  Location     Type
  8820 ;;  flipper         1  [STACK] const _Bool 
  8821 ;; Auto vars:     Size  Location     Type
  8822 ;;  estatus         1    0        _Bool 
  8823 ;; Return value:  Size  Location     Type
  8824 ;;                  1  [STACK] _Bool 
  8825 ;; Registers used:
  8826 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  8827 ;; Tracked objects:
  8828 ;;		On entry : 3F/1
  8829 ;;		On exit  : 0/0
  8830 ;;		Unchanged: 0/0
  8831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8832 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8833 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8834 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8835 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8836 ;;Total ram usage:        0 bytes
  8837 ;; Hardware stack levels used:    1
  8838 ;; Hardware stack levels required when called:   27
  8839 ;; This function calls:
  8840 ;;		_StartTimer
  8841 ;;		_TimerDone
  8842 ;;		_display_help
  8843 ;;		_display_info
  8844 ;;		_get_vterm_ptr
  8845 ;;		_help_button
  8846 ;;		_mode_lamp_bright
  8847 ;;		_mode_lamp_dim
  8848 ;;		_set_display_info
  8849 ;;		_set_temp_display_help
  8850 ;;		_set_vterm
  8851 ;;		_sprintf
  8852 ;;		_update_lcd
  8853 ;;		_vterm_dump
  8854 ;; This function is called by:
  8855 ;;		_main
  8856 ;; This function uses a reentrant model
  8857 ;;
  8858                           
  8859                           	psect	text28
  8860  017F82                     __ptext28:
  8861                           	opt callstack 0
  8862  017F82                     _check_help:
  8863                           	opt callstack 3
  8864                           
  8865                           ;mconfig.c: 46:  if (help_button() && display_info() != DIS_HELP) {
  8866                           
  8867                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8868                           ;incstack = 0
  8869  017F82  EC4A  F0DA         	call	_help_button	;wreg free
  8870  017F86  5001               	movf	btemp^0,w,c
  8871  017F88  B4D8               	btfsc	status,2,c
  8872  017F8A  D0D0               	goto	l12767
  8873  017F8C  ECDF  F0DE         	call	_display_info	;wreg free
  8874  017F90  0401               	decf	btemp^0,w,c
  8875  017F92  B4D8               	btfsc	status,2,c
  8876  017F94  D0CB               	goto	l12767
  8877                           
  8878                           ;mconfig.c: 47:   StartTimer(TMR_FLIPPER, 1500);
  8879  017F96  0EDC               	movlw	220
  8880  017F98  6EE6               	movwf	postinc1,c
  8881  017F9A  0E05               	movlw	5
  8882  017F9C  6EE6               	movwf	postinc1,c
  8883  017F9E  0E0B               	movlw	11
  8884  017FA0  6EE6               	movwf	postinc1,c
  8885  017FA2  EC6E  F0D9         	call	_StartTimer	;wreg free
  8886                           
  8887                           ;mconfig.c: 48:   if (V.debug)
  8888  017FA6  0101               	movlb	1	; () banked
  8889  017FA8  B3CB               	btfsc	(_V+155)& (0+255),1,b	;volatile
  8890                           
  8891                           ; BSR set to: 1
  8892                           ;mconfig.c: 49:    vterm_dump();
  8893  017FAA  ECCD  F0C9         	call	_vterm_dump	;wreg free
  8894                           
  8895                           ;mconfig.c: 51:   set_vterm(1);
  8896  017FAE  0E01               	movlw	1
  8897  017FB0  6EE6               	movwf	postinc1,c
  8898  017FB2  ECCD  F0DD         	call	_set_vterm	;wreg free
  8899                           
  8900                           ;mconfig.c: 52:   set_temp_display_help(display_info());
  8901  017FB6  ECDF  F0DE         	call	_display_info	;wreg free
  8902  017FBA  5001               	movf	btemp^0,w,c
  8903  017FBC  6EE6               	movwf	postinc1,c
  8904  017FBE  EC7F  F0DE         	call	_set_temp_display_help	;wreg free
  8905                           
  8906                           ; BSR set to: 1
  8907                           ;mconfig.c: 53:   set_display_info(DIS_HELP);
  8908  017FC2  0E01               	movlw	1
  8909  017FC4  6EE6               	movwf	postinc1,c
  8910  017FC6  ECDC  F0DD         	call	_set_display_info	;wreg free
  8911                           
  8912                           ;mconfig.c: 54:   if (flipper) {
  8913                           ;stkvar	_flipper @ sp[(0)+-1]
  8914  017FCA  0EFF               	movlw	-1
  8915  017FCC  50E3               	movf	plusw1,w,c
  8916  017FCE  B4D8               	btfsc	status,2,c
  8917  017FD0  D019               	goto	l12753
  8918                           
  8919                           ;mconfig.c: 55:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_date);
  8920  017FD2  0EB1               	movlw	low STR_46
  8921  017FD4  6EE6               	movwf	postinc1,c
  8922  017FD6  0EFF               	movlw	high STR_46
  8923  017FD8  6EE6               	movwf	postinc1,c
  8924  017FDA  0E27               	movlw	low STR_48
  8925  017FDC  6EE6               	movwf	postinc1,c
  8926  017FDE  0EFE               	movlw	high STR_48
  8927  017FE0  6EE6               	movwf	postinc1,c
  8928  017FE2  0E01               	movlw	1
  8929  017FE4  6EE6               	movwf	postinc1,c
  8930  017FE6  0E00               	movlw	0
  8931  017FE8  6EE6               	movwf	postinc1,c
  8932  017FEA  EC4C  F0DB         	call	_get_vterm_ptr	;wreg free
  8933  017FEE  0060  F007  FFE6   	movff	btemp,postinc1
  8934  017FF4  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8935  017FFA  0E06               	movlw	6
  8936  017FFC  6EE6               	movwf	postinc1,c
  8937  017FFE  EC21  F0CD         	call	_sprintf	;wreg free
  8938                           
  8939                           ;mconfig.c: 56:   } else {
  8940  018002  D018               	goto	l1674
  8941  018004                     l12753:
  8942                           
  8943                           ;mconfig.c: 57:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_time);
  8944  018004  0EC7               	movlw	low STR_47
  8945  018006  6EE6               	movwf	postinc1,c
  8946  018008  0EFF               	movlw	high STR_47
  8947  01800A  6EE6               	movwf	postinc1,c
  8948  01800C  0E27               	movlw	low STR_48
  8949  01800E  6EE6               	movwf	postinc1,c
  8950  018010  0EFE               	movlw	high STR_48
  8951  018012  6EE6               	movwf	postinc1,c
  8952  018014  0E01               	movlw	1
  8953  018016  6EE6               	movwf	postinc1,c
  8954  018018  0E00               	movlw	0
  8955  01801A  6EE6               	movwf	postinc1,c
  8956  01801C  EC4C  F0DB         	call	_get_vterm_ptr	;wreg free
  8957  018020  0060  F007  FFE6   	movff	btemp,postinc1
  8958  018026  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8959  01802C  0E06               	movlw	6
  8960  01802E  6EE6               	movwf	postinc1,c
  8961  018030  EC21  F0CD         	call	_sprintf	;wreg free
  8962  018034                     l1674:
  8963                           
  8964                           ; BSR set to: 0
  8965                           ;mconfig.c: 59:   sprintf(get_vterm_ptr(1, 1), "%s       ", T[V.help_id].display);
  8966  018034  0101               	movlb	1	; () banked
  8967  018036  39CB               	swapf	(_V+155)& (0+255),w,b	;volatile
  8968  018038  32E8               	rrcf	wreg,f,c
  8969  01803A  32E8               	rrcf	wreg,f,c
  8970  01803C  0B03               	andlw	3
  8971  01803E  0D24               	mullw	36
  8972  018040  0E12               	movlw	18
  8973  018042  26F3               	addwf	243,f,c
  8974  018044  0E00               	movlw	0
  8975  018046  22F4               	addwfc	244,f,c
  8976  018048  0E37               	movlw	low _T
  8977  01804A  6E0B               	movwf	(btemp+10)^0,c
  8978  01804C  0EFB               	movlw	high _T
  8979  01804E  6E0C               	movwf	(btemp+11)^0,c
  8980  018050  50F3               	movf	243,w,c
  8981  018052  260B               	addwf	(btemp+10)^0,f,c
  8982  018054  50F4               	movf	244,w,c
  8983  018056  220C               	addwfc	(btemp+11)^0,f,c
  8984  018058  0060  F02F  FFE6   	movff	btemp+10,postinc1
  8985  01805E  0060  F033  FFE6   	movff	btemp+11,postinc1
  8986  018064  0EBD               	movlw	low STR_50
  8987  018066  6EE6               	movwf	postinc1,c
  8988  018068  0EFF               	movlw	high STR_50
  8989  01806A  6EE6               	movwf	postinc1,c
  8990  01806C  0E01               	movlw	1
  8991  01806E  6EE6               	movwf	postinc1,c
  8992  018070  0E01               	movlw	1
  8993  018072  6EE6               	movwf	postinc1,c
  8994  018074  EC4C  F0DB         	call	_get_vterm_ptr	;wreg free
  8995  018078  0060  F007  FFE6   	movff	btemp,postinc1
  8996  01807E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8997  018084  0E06               	movlw	6
  8998  018086  6EE6               	movwf	postinc1,c
  8999  018088  EC21  F0CD         	call	_sprintf	;wreg free
  9000                           
  9001                           ;mconfig.c: 60:   sprintf(get_vterm_ptr(2, 1), "%s       ", T[V.help_id].message);
  9002  01808C  0101               	movlb	1	; () banked
  9003  01808E  39CB               	swapf	(_V+155)& (0+255),w,b	;volatile
  9004  018090  32E8               	rrcf	wreg,f,c
  9005  018092  32E8               	rrcf	wreg,f,c
  9006  018094  0B03               	andlw	3
  9007  018096  0D24               	mullw	36
  9008  018098  0E37               	movlw	low _T
  9009  01809A  6E0B               	movwf	(btemp+10)^0,c
  9010  01809C  0EFB               	movlw	high _T
  9011  01809E  6E0C               	movwf	(btemp+11)^0,c
  9012  0180A0  50F3               	movf	243,w,c
  9013  0180A2  260B               	addwf	(btemp+10)^0,f,c
  9014  0180A4  50F4               	movf	244,w,c
  9015  0180A6  220C               	addwfc	(btemp+11)^0,f,c
  9016  0180A8  0060  F02F  FFE6   	movff	btemp+10,postinc1
  9017  0180AE  0060  F033  FFE6   	movff	btemp+11,postinc1
  9018  0180B4  0EBD               	movlw	low STR_50
  9019  0180B6  6EE6               	movwf	postinc1,c
  9020  0180B8  0EFF               	movlw	high STR_50
  9021  0180BA  6EE6               	movwf	postinc1,c
  9022  0180BC  0E01               	movlw	1
  9023  0180BE  6EE6               	movwf	postinc1,c
  9024  0180C0  0E02               	movlw	2
  9025  0180C2  6EE6               	movwf	postinc1,c
  9026  0180C4  EC4C  F0DB         	call	_get_vterm_ptr	;wreg free
  9027  0180C8  0060  F007  FFE6   	movff	btemp,postinc1
  9028  0180CE  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9029  0180D4  0E06               	movlw	6
  9030  0180D6  6EE6               	movwf	postinc1,c
  9031  0180D8  EC21  F0CD         	call	_sprintf	;wreg free
  9032                           
  9033                           ; BSR set to: 0
  9034                           ;mconfig.c: 61:   V.help_id++;
  9035  0180DC  EE20  F1CB         	lfsr	2,_V+155	;volatile
  9036  0180E0  38DF               	swapf	223,w,c
  9037  0180E2  6E0C               	movwf	(btemp+11)^0,c
  9038  0180E4  320C               	rrcf	(btemp+11)^0,f,c
  9039  0180E6  300C               	rrcf	(btemp+11)^0,w,c
  9040  0180E8  0B03               	andlw	3
  9041  0180EA  6E0C               	movwf	(btemp+11)^0,c
  9042  0180EC  2A0C               	incf	(btemp+11)^0,f,c
  9043  0180EE  3A0C               	swapf	(btemp+11)^0,f,c
  9044  0180F0  360C               	rlcf	(btemp+11)^0,f,c
  9045  0180F2  360C               	rlcf	(btemp+11)^0,f,c
  9046  0180F4  50DF               	movf	223,w,c
  9047  0180F6  180C               	xorwf	(btemp+11)^0,w,c
  9048  0180F8  0B3F               	andlw	-193
  9049  0180FA  180C               	xorwf	(btemp+11)^0,w,c
  9050  0180FC  6EDF               	movwf	223,c
  9051                           
  9052                           ; BSR set to: 0
  9053                           ;mconfig.c: 62:   StartTimer(TMR_HELPDIS, 3000);
  9054  0180FE  0EB8               	movlw	184
  9055  018100  6EE6               	movwf	postinc1,c
  9056  018102  0E0B               	movlw	11
  9057  018104  6EE6               	movwf	postinc1,c
  9058  018106  0E09               	movlw	9
  9059  018108  6EE6               	movwf	postinc1,c
  9060  01810A  EC6E  F0D9         	call	_StartTimer	;wreg free
  9061                           
  9062                           ;mconfig.c: 63:   StartTimer(TMR_INFO, 3000);
  9063  01810E  0EB8               	movlw	184
  9064  018110  6EE6               	movwf	postinc1,c
  9065  018112  0E0B               	movlw	11
  9066  018114  6EE6               	movwf	postinc1,c
  9067  018116  0E07               	movlw	7
  9068  018118  6EE6               	movwf	postinc1,c
  9069  01811A  EC6E  F0D9         	call	_StartTimer	;wreg free
  9070                           
  9071                           ;mconfig.c: 64:   mode_lamp_bright();
  9072  01811E  EC9D  F0DE         	call	_mode_lamp_bright	;wreg free
  9073                           
  9074                           ;mconfig.c: 65:   update_lcd(1);
  9075  018122  0E01               	movlw	1
  9076  018124  6EE6               	movwf	postinc1,c
  9077  018126  EC99  F0CC         	call	_update_lcd	;wreg free
  9078                           
  9079                           ;mconfig.c: 67:  } else {
  9080  01812A  D032               	goto	l1675
  9081  01812C                     l12767:
  9082                           
  9083                           ;mconfig.c: 68:   if (TimerDone(TMR_HELPDIS)) {
  9084  01812C  0E09               	movlw	9
  9085  01812E  6EE6               	movwf	postinc1,c
  9086  018130  ECF7  F0DB         	call	_TimerDone	;wreg free
  9087  018134  5001               	movf	btemp^0,w,c
  9088  018136  B4D8               	btfsc	status,2,c
  9089  018138  D02B               	goto	l1675
  9090                           
  9091                           ;mconfig.c: 69:    set_vterm(0);
  9092  01813A  0E00               	movlw	0
  9093  01813C  6EE6               	movwf	postinc1,c
  9094  01813E  ECCD  F0DD         	call	_set_vterm	;wreg free
  9095                           
  9096                           ;mconfig.c: 70:    V.help = 0;
  9097  018142  0101               	movlb	1	; () banked
  9098  018144  95CB               	bcf	(_V+155)& (0+255),2,b	;volatile
  9099                           
  9100                           ; BSR set to: 1
  9101                           ;mconfig.c: 71:    set_display_info(display_help());
  9102  018146  ECE3  F0DE         	call	_display_help	;wreg free
  9103  01814A  5001               	movf	btemp^0,w,c
  9104  01814C  6EE6               	movwf	postinc1,c
  9105  01814E  ECDC  F0DD         	call	_set_display_info	;wreg free
  9106                           
  9107                           ;mconfig.c: 72:    mode_lamp_dim(V.mode_pwm);
  9108  018152  0060  F717  FFE6   	movff	_V+149,postinc1
  9109  018158  0060  F71B  FFE6   	movff	_V+150,postinc1
  9110  01815E  EC23  F0DE         	call	_mode_lamp_dim	;wreg free
  9111                           
  9112                           ;mconfig.c: 73:    if (TimerDone(TMR_FLIPPER)) {
  9113  018162  0E0B               	movlw	11
  9114  018164  6EE6               	movwf	postinc1,c
  9115  018166  ECF7  F0DB         	call	_TimerDone	;wreg free
  9116  01816A  5001               	movf	btemp^0,w,c
  9117  01816C  B4D8               	btfsc	status,2,c
  9118  01816E  D010               	goto	l1675
  9119                           
  9120                           ;mconfig.c: 74:     V.flipper = !V.flipper;
  9121  018170  0101               	movlb	1	; () banked
  9122  018172  51DB               	movf	(_V+171)& (0+255),w,b	;volatile
  9123  018174  A4D8               	btfss	status,2,c
  9124  018176  D002               	goto	u12420
  9125  018178  0E01               	movlw	1
  9126  01817A  D001               	goto	u12430
  9127  01817C                     u12420:
  9128  01817C  0E00               	movlw	0
  9129  01817E                     u12430:
  9130  01817E  6FDB               	movwf	(_V+171)& (0+255),b	;volatile
  9131                           
  9132                           ; BSR set to: 1
  9133                           ;mconfig.c: 75:     StartTimer(TMR_FLIPPER, 1500);
  9134  018180  0EDC               	movlw	220
  9135  018182  6EE6               	movwf	postinc1,c
  9136  018184  0E05               	movlw	5
  9137  018186  6EE6               	movwf	postinc1,c
  9138  018188  0E0B               	movlw	11
  9139  01818A  6EE6               	movwf	postinc1,c
  9140  01818C  EC6E  F0D9         	call	_StartTimer	;wreg free
  9141  018190                     l1675:
  9142                           
  9143                           ; _check_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  9144  018190  52E5               	movf	postdec1,f,c
  9145  018192  0012               	return		;funcret
  9146  018194                     __end_of_check_help:
  9147                           	opt callstack 0
  9148                           
  9149 ;; *************** function _vterm_dump *****************
  9150 ;; Defined at:
  9151 ;;		line 121 in file "mconfig.c"
  9152 ;; Parameters:    Size  Location     Type
  9153 ;;		None
  9154 ;; Auto vars:     Size  Location     Type
  9155 ;;		None
  9156 ;; Return value:  Size  Location     Type
  9157 ;;                  1  [STACK] void 
  9158 ;; Registers used:
  9159 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  9160 ;; Tracked objects:
  9161 ;;		On entry : 3F/1
  9162 ;;		On exit  : 0/0
  9163 ;;		Unchanged: 0/0
  9164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9165 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9166 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9167 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9168 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9169 ;;Total ram usage:        0 bytes
  9170 ;; Hardware stack levels used:    1
  9171 ;; Hardware stack levels required when called:   26
  9172 ;; This function calls:
  9173 ;;		_WaitMs
  9174 ;;		_eaDogM_WriteStringAtPos
  9175 ;;		_get_vterm_ptr
  9176 ;;		_sprintf
  9177 ;;		_wait_lcd_done
  9178 ;; This function is called by:
  9179 ;;		_check_help
  9180 ;; This function uses a reentrant model
  9181 ;;
  9182                           
  9183                           	psect	text29
  9184  01939A                     __ptext29:
  9185                           	opt callstack 0
  9186  01939A                     _vterm_dump:
  9187                           	opt callstack 3
  9188                           
  9189                           ;mconfig.c: 123:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(0, 0), get_vterm_ptr(0,
      +                           1));
  9190                           
  9191                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9192                           ;incstack = 0
  9193  01939A  0E01               	movlw	1
  9194  01939C  6EE6               	movwf	postinc1,c
  9195  01939E  0E00               	movlw	0
  9196  0193A0  6EE6               	movwf	postinc1,c
  9197  0193A2  EC4C  F0DB         	call	_get_vterm_ptr	;wreg free
  9198  0193A6  0060  F007  FFE6   	movff	btemp,postinc1
  9199  0193AC  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9200  0193B2  0E00               	movlw	0
  9201  0193B4  6EE6               	movwf	postinc1,c
  9202  0193B6  0E00               	movlw	0
  9203  0193B8  6EE6               	movwf	postinc1,c
  9204  0193BA  EC4C  F0DB         	call	_get_vterm_ptr	;wreg free
  9205  0193BE  0060  F007  FFE6   	movff	btemp,postinc1
  9206  0193C4  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9207  0193CA  0E93               	movlw	low STR_52
  9208  0193CC  6EE6               	movwf	postinc1,c
  9209  0193CE  0EFF               	movlw	high STR_52
  9210  0193D0  6EE6               	movwf	postinc1,c
  9211  0193D2  0E31               	movlw	low (_V+1)
  9212  0193D4  6EE6               	movwf	postinc1,c
  9213  0193D6  0E01               	movlw	high (_V+1)
  9214  0193D8  6EE6               	movwf	postinc1,c
  9215  0193DA  0E08               	movlw	8
  9216  0193DC  6EE6               	movwf	postinc1,c
  9217  0193DE  EC21  F0CD         	call	_sprintf	;wreg free
  9218                           
  9219                           ; BSR set to: 0
  9220                           ;mconfig.c: 124:  wait_lcd_done();
  9221  0193E2  ECFA  F0DD         	call	_wait_lcd_done	;wreg free
  9222                           
  9223                           ; BSR set to: 0
  9224                           ;mconfig.c: 125:  eaDogM_WriteStringAtPos(0, 0, V.buf);
  9225  0193E6  0E31               	movlw	low (_V+1)
  9226  0193E8  6EE6               	movwf	postinc1,c
  9227  0193EA  0E01               	movlw	high (_V+1)
  9228  0193EC  6EE6               	movwf	postinc1,c
  9229  0193EE  0E00               	movlw	0
  9230  0193F0  6EE6               	movwf	postinc1,c
  9231  0193F2  0E00               	movlw	0
  9232  0193F4  6EE6               	movwf	postinc1,c
  9233  0193F6  EC9D  F0DA         	call	_eaDogM_WriteStringAtPos	;wreg free
  9234                           
  9235                           ; BSR set to: 59
  9236                           ;mconfig.c: 126:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(1, 0), get_vterm_ptr(1,
      +                           1));
  9237  0193FA  0E01               	movlw	1
  9238  0193FC  6EE6               	movwf	postinc1,c
  9239  0193FE  0E01               	movlw	1
  9240  019400  6EE6               	movwf	postinc1,c
  9241  019402  EC4C  F0DB         	call	_get_vterm_ptr	;wreg free
  9242  019406  0060  F007  FFE6   	movff	btemp,postinc1
  9243  01940C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9244  019412  0E00               	movlw	0
  9245  019414  6EE6               	movwf	postinc1,c
  9246  019416  0E01               	movlw	1
  9247  019418  6EE6               	movwf	postinc1,c
  9248  01941A  EC4C  F0DB         	call	_get_vterm_ptr	;wreg free
  9249  01941E  0060  F007  FFE6   	movff	btemp,postinc1
  9250  019424  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9251  01942A  0E93               	movlw	low STR_52
  9252  01942C  6EE6               	movwf	postinc1,c
  9253  01942E  0EFF               	movlw	high STR_52
  9254  019430  6EE6               	movwf	postinc1,c
  9255  019432  0E31               	movlw	low (_V+1)
  9256  019434  6EE6               	movwf	postinc1,c
  9257  019436  0E01               	movlw	high (_V+1)
  9258  019438  6EE6               	movwf	postinc1,c
  9259  01943A  0E08               	movlw	8
  9260  01943C  6EE6               	movwf	postinc1,c
  9261  01943E  EC21  F0CD         	call	_sprintf	;wreg free
  9262                           
  9263                           ; BSR set to: 0
  9264                           ;mconfig.c: 127:  wait_lcd_done();
  9265  019442  ECFA  F0DD         	call	_wait_lcd_done	;wreg free
  9266                           
  9267                           ;mconfig.c: 128:  eaDogM_WriteStringAtPos(1, 0, V.buf);
  9268  019446  0E31               	movlw	low (_V+1)
  9269  019448  6EE6               	movwf	postinc1,c
  9270  01944A  0E01               	movlw	high (_V+1)
  9271  01944C  6EE6               	movwf	postinc1,c
  9272  01944E  0E00               	movlw	0
  9273  019450  6EE6               	movwf	postinc1,c
  9274  019452  0E01               	movlw	1
  9275  019454  6EE6               	movwf	postinc1,c
  9276  019456  EC9D  F0DA         	call	_eaDogM_WriteStringAtPos	;wreg free
  9277                           
  9278                           ;mconfig.c: 129:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(2, 0), get_vterm_ptr(2,
      +                           1));
  9279  01945A  0E01               	movlw	1
  9280  01945C  6EE6               	movwf	postinc1,c
  9281  01945E  0E02               	movlw	2
  9282  019460  6EE6               	movwf	postinc1,c
  9283  019462  EC4C  F0DB         	call	_get_vterm_ptr	;wreg free
  9284  019466  0060  F007  FFE6   	movff	btemp,postinc1
  9285  01946C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9286  019472  0E00               	movlw	0
  9287  019474  6EE6               	movwf	postinc1,c
  9288  019476  0E02               	movlw	2
  9289  019478  6EE6               	movwf	postinc1,c
  9290  01947A  EC4C  F0DB         	call	_get_vterm_ptr	;wreg free
  9291  01947E  0060  F007  FFE6   	movff	btemp,postinc1
  9292  019484  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9293  01948A  0E93               	movlw	low STR_52
  9294  01948C  6EE6               	movwf	postinc1,c
  9295  01948E  0EFF               	movlw	high STR_52
  9296  019490  6EE6               	movwf	postinc1,c
  9297  019492  0E31               	movlw	low (_V+1)
  9298  019494  6EE6               	movwf	postinc1,c
  9299  019496  0E01               	movlw	high (_V+1)
  9300  019498  6EE6               	movwf	postinc1,c
  9301  01949A  0E08               	movlw	8
  9302  01949C  6EE6               	movwf	postinc1,c
  9303  01949E  EC21  F0CD         	call	_sprintf	;wreg free
  9304                           
  9305                           ; BSR set to: 0
  9306                           ;mconfig.c: 130:  wait_lcd_done();
  9307  0194A2  ECFA  F0DD         	call	_wait_lcd_done	;wreg free
  9308                           
  9309                           ; BSR set to: 0
  9310                           ;mconfig.c: 131:  eaDogM_WriteStringAtPos(2, 0, V.buf);
  9311  0194A6  0E31               	movlw	low (_V+1)
  9312  0194A8  6EE6               	movwf	postinc1,c
  9313  0194AA  0E01               	movlw	high (_V+1)
  9314  0194AC  6EE6               	movwf	postinc1,c
  9315  0194AE  0E00               	movlw	0
  9316  0194B0  6EE6               	movwf	postinc1,c
  9317  0194B2  0E02               	movlw	2
  9318  0194B4  6EE6               	movwf	postinc1,c
  9319  0194B6  EC9D  F0DA         	call	_eaDogM_WriteStringAtPos	;wreg free
  9320                           
  9321                           ; BSR set to: 59
  9322                           ;mconfig.c: 132:  WaitMs(3000);
  9323  0194BA  0EB8               	movlw	184
  9324  0194BC  6EE6               	movwf	postinc1,c
  9325  0194BE  0E0B               	movlw	11
  9326  0194C0  6EE6               	movwf	postinc1,c
  9327  0194C2  EC82  F0DA         	call	_WaitMs	;wreg free
  9328                           
  9329                           ; _vterm_dump: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  9330  0194C6  0012               	return		;funcret
  9331  0194C8                     __end_of_vterm_dump:
  9332                           	opt callstack 0
  9333                           
  9334 ;; *************** function _sprintf *****************
  9335 ;; Defined at:
  9336 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_sprintf.c"
  9337 ;; Parameters:    Size  Location     Type
  9338 ;;  s               2  [STACK] PTR unsigned char 
  9339 ;;		 -> D.lcd(480), D(482), port_data(512), V(191), 
  9340 ;;  fmt             2  [STACK] PTR const unsigned char 
  9341 ;;		 -> STR_65(103), STR_63(3), STR_62(3), STR_61(19), 
  9342 ;;		 -> STR_60(19), STR_59(19), STR_58(19), STR_57(19), 
  9343 ;;		 -> STR_56(19), STR_55(24), STR_54(15), STR_53(15), 
  9344 ;;		 -> STR_52(15), STR_51(10), STR_50(10), STR_49(19), 
  9345 ;;		 -> STR_48(19), STR_42(17), STR_41(16), STR_40(16), 
  9346 ;;		 -> STR_39(20), STR_38(20), STR_37(20), STR_36(20), 
  9347 ;;		 -> STR_35(20), STR_34(20), STR_33(19), STR_32(19), 
  9348 ;;		 -> STR_31(19), STR_30(19), STR_29(19), STR_28(19), 
  9349 ;;		 -> STR_27(19), STR_26(19), STR_25(20), STR_24(19), 
  9350 ;;		 -> STR_23(19), STR_22(20), STR_21(17), STR_20(16), 
  9351 ;;		 -> STR_19(16), STR_18(26), STR_17(26), STR_16(22), 
  9352 ;;		 -> STR_15(21), STR_14(17), STR_13(17), STR_12(17), 
  9353 ;;		 -> STR_11(22), STR_10(22), STR_9(23), STR_8(18), 
  9354 ;;		 -> STR_7(17), STR_6(17), STR_5(17), STR_4(17), 
  9355 ;;		 -> STR_2(15), STR_1(17), 
  9356 ;; Auto vars:     Size  Location     Type
  9357 ;;  f               6  [STACK] struct _IO_FILE
  9358 ;;  ap              2  [STACK] PTR void [1]
  9359 ;;		 -> ?_printf(2), ?_sprintf(2), 
  9360 ;;  ret             2    0        int 
  9361 ;; Return value:  Size  Location     Type
  9362 ;;                  2  [STACK] int 
  9363 ;; Registers used:
  9364 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  9365 ;; Tracked objects:
  9366 ;;		On entry : 0/0
  9367 ;;		On exit  : 3F/0
  9368 ;;		Unchanged: 0/0
  9369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9370 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9371 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9372 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9373 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9374 ;;Total ram usage:        0 bytes
  9375 ;; Hardware stack levels used:    1
  9376 ;; Hardware stack levels required when called:   23
  9377 ;; This function calls:
  9378 ;;		_vfprintf
  9379 ;; This function is called by:
  9380 ;;		_main
  9381 ;;		_check_help
  9382 ;;		_vterm_dump
  9383 ;;		_calc_bsoc
  9384 ;; This function uses a reentrant model
  9385 ;;
  9386                           
  9387                           	psect	text30
  9388  019A42                     __ptext30:
  9389                           	opt callstack 0
  9390  019A42                     _sprintf:
  9391                           	opt callstack 0
  9392                           
  9393                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 74, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  9394  019A42  0E08               	movlw	8
  9395  019A44  26E1               	addwf	fsr1l,f,c
  9396  019A46  0E00               	movlw	0
  9397  019A48  22E2               	addwfc	fsr1h,f,c
  9398                           
  9399                           ;incstack = 0
  9400 ;; hardware stack exceeded
  9401  019A4A  0EFE               	movlw	254
  9402  019A4C  6E0B               	movwf	(btemp+10)^0,c
  9403  019A4E  0EFF               	movlw	255
  9404  019A50  6E0C               	movwf	(btemp+11)^0,c
  9405                           
  9406                           ;stkvar	?_sprintf @ sp[(-8)+-3]
  9407  019A52  0EF5               	movlw	245
  9408  019A54  24E1               	addwf	fsr1l,w,c
  9409  019A56  6E09               	movwf	(btemp+8)^0,c
  9410  019A58  0EFF               	movlw	255
  9411  019A5A  20E2               	addwfc	fsr1h,w,c
  9412  019A5C  6E0A               	movwf	(btemp+9)^0,c
  9413  019A5E  500B               	movf	(btemp+10)^0,w,c
  9414  019A60  2609               	addwf	(btemp+8)^0,f,c
  9415  019A62  500C               	movf	(btemp+11)^0,w,c
  9416  019A64  220A               	addwfc	(btemp+9)^0,f,c
  9417                           
  9418                           ;stkvar	_ap @ sp[(-8)+6]
  9419  019A66  0EFF               	movlw	-1
  9420  019A68  0060  F02B  FFE3   	movff	btemp+9,plusw1
  9421  019A6E  0EFE               	movlw	-2
  9422  019A70  0060  F027  FFE3   	movff	btemp+8,plusw1
  9423                           
  9424                           ;stkvar	_s @ sp[(-8)+-3]
  9425  019A76  0EF5               	movlw	-11
  9426  019A78  006F FF8C  F00B    	movff	plusw1,btemp+10
  9427  019A7E  0EF6               	movlw	-10
  9428  019A80  006F FF8C  F00C    	movff	plusw1,btemp+11
  9429                           
  9430                           ;stkvar	_f @ sp[(-8)+0]
  9431  019A86  0EF9               	movlw	-7
  9432  019A88  0060  F033  FFE3   	movff	btemp+11,plusw1
  9433  019A8E  0EF8               	movlw	-8
  9434  019A90  0060  F02F  FFE3   	movff	btemp+10,plusw1
  9435                           
  9436                           ;stkvar	_f @ sp[(-8)+0]
  9437  019A96  0EFA               	movlw	250
  9438  019A98  24E1               	addwf	fsr1l,w,c
  9439  019A9A  6ED9               	movwf	fsr2l,c
  9440  019A9C  0EFF               	movlw	255
  9441  019A9E  20E2               	addwfc	fsr1h,w,c
  9442  019AA0  6EDA               	movwf	fsr2h,c
  9443  019AA2  0E00               	movlw	0
  9444  019AA4  6EDE               	movwf	postinc2,c
  9445  019AA6  0E00               	movlw	0
  9446  019AA8  6EDD               	movwf	postdec2,c
  9447                           
  9448                           ;stkvar	_f @ sp[(-8)+0]
  9449  019AAA  0EFC               	movlw	252
  9450  019AAC  24E1               	addwf	fsr1l,w,c
  9451  019AAE  6ED9               	movwf	fsr2l,c
  9452  019AB0  0EFF               	movlw	255
  9453  019AB2  20E2               	addwfc	fsr1h,w,c
  9454  019AB4  6EDA               	movwf	fsr2h,c
  9455  019AB6  0E00               	movlw	0
  9456  019AB8  6EDE               	movwf	postinc2,c
  9457  019ABA  0E00               	movlw	0
  9458  019ABC  6EDD               	movwf	postdec2,c
  9459                           
  9460                           ;stkvar	_ap @ sp[(-8)+6]
  9461  019ABE  0EFE               	movlw	254
  9462  019AC0  24E1               	addwf	fsr1l,w,c
  9463  019AC2  6E01               	movwf	btemp^0,c
  9464  019AC4  0EFF               	movlw	255
  9465  019AC6  20E2               	addwfc	fsr1h,w,c
  9466  019AC8  6E02               	movwf	(btemp+1)^0,c
  9467  019ACA  0060  F007  FFE6   	movff	btemp,postinc1
  9468  019AD0  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9469                           
  9470                           ;stkvar	_fmt @ sp[(-10)+-5]
  9471  019AD6  0EF1               	movlw	-15
  9472  019AD8  006F FF8F FFE6     	movff	plusw1,postinc1
  9473  019ADE  006F FF8F FFE6     	movff	plusw1,postinc1
  9474                           
  9475                           ;stkvar	_f @ sp[(-12)+0]
  9476  019AE4  0EF4               	movlw	244
  9477  019AE6  24E1               	addwf	fsr1l,w,c
  9478  019AE8  6E01               	movwf	btemp^0,c
  9479  019AEA  0EFF               	movlw	255
  9480  019AEC  20E2               	addwfc	fsr1h,w,c
  9481  019AEE  6E02               	movwf	(btemp+1)^0,c
  9482  019AF0  0060  F007  FFE6   	movff	btemp,postinc1
  9483  019AF6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9484  019AFC  ECE2  F0D1         	call	_vfprintf	;wreg free
  9485                           
  9486                           ; BSR set to: 0
  9487                           ;stkvar	_f @ sp[(-8)+0]
  9488  019B00  0EFA               	movlw	250
  9489  019B02  24E1               	addwf	fsr1l,w,c
  9490  019B04  6ED9               	movwf	fsr2l,c
  9491  019B06  0EFF               	movlw	255
  9492  019B08  20E2               	addwfc	fsr1h,w,c
  9493  019B0A  6EDA               	movwf	fsr2h,c
  9494  019B0C  006F FF78  F00B    	movff	postinc2,btemp+10
  9495  019B12  006F FF74  F00C    	movff	postdec2,btemp+11
  9496                           
  9497                           ;stkvar	_s @ sp[(-8)+-3]
  9498  019B18  0EF5               	movlw	-11
  9499  019B1A  006F FF8C  F009    	movff	plusw1,btemp+8
  9500  019B20  0EF6               	movlw	-10
  9501  019B22  006F FF8C  F00A    	movff	plusw1,btemp+9
  9502  019B28  500B               	movf	(btemp+10)^0,w,c
  9503  019B2A  2409               	addwf	(btemp+8)^0,w,c
  9504  019B2C  6ED9               	movwf	fsr2l,c
  9505  019B2E  500C               	movf	(btemp+11)^0,w,c
  9506  019B30  200A               	addwfc	(btemp+9)^0,w,c
  9507  019B32  6EDA               	movwf	fsr2h,c
  9508  019B34  0E00               	movlw	0
  9509  019B36  6EDF               	movwf	indf2,c
  9510                           
  9511                           ; BSR set to: 0
  9512                           ; _sprintf: autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 74, args
      +                          ize = 4, vargsize = 0
  9513  019B38  0EF8               	movlw	248
  9514  019B3A  26E1               	addwf	fsr1l,f,c
  9515  019B3C  0EFF               	movlw	255
  9516  019B3E  22E2               	addwfc	fsr1h,f,c
  9517  019B40  52E5               	movf	postdec1,f,c
  9518  019B42  50E7               	movf	indf1,w,c
  9519  019B44  5EE1               	subwf	fsr1l,f,c
  9520  019B46  0E00               	movlw	0
  9521  019B48  5AE2               	subwfb	fsr1h,f,c
  9522  019B4A  0012               	return		;funcret
  9523  019B4C                     __end_of_sprintf:
  9524                           	opt callstack 0
  9525                           
  9526 ;; *************** function _get_vterm_ptr *****************
  9527 ;; Defined at:
  9528 ;;		line 116 in file "mconfig.c"
  9529 ;; Parameters:    Size  Location     Type
  9530 ;;  line            1  [STACK] const unsigned char 
  9531 ;;  vterm           1  [STACK] const unsigned char 
  9532 ;; Auto vars:     Size  Location     Type
  9533 ;;		None
  9534 ;; Return value:  Size  Location     Type
  9535 ;;                  2  [STACK] PTR unsigned char 
  9536 ;; Registers used:
  9537 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, prodl, prodh
  9538 ;; Tracked objects:
  9539 ;;		On entry : 0/0
  9540 ;;		On exit  : 0/0
  9541 ;;		Unchanged: 0/0
  9542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9543 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9544 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9545 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9546 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9547 ;;Total ram usage:        0 bytes
  9548 ;; Hardware stack levels used:    1
  9549 ;; Hardware stack levels required when called:   15
  9550 ;; This function calls:
  9551 ;;		Nothing
  9552 ;; This function is called by:
  9553 ;;		_main
  9554 ;;		_check_help
  9555 ;;		_vterm_dump
  9556 ;; This function uses a reentrant model
  9557 ;;
  9558                           
  9559                           	psect	text31
  9560  01B698                     __ptext31:
  9561                           	opt callstack 0
  9562  01B698                     _get_vterm_ptr:
  9563                           	opt callstack 15
  9564                           
  9565                           ;mconfig.c: 116: char * get_vterm_ptr(const uint8_t line, const uint8_t vterm);mconfig.c
      +                          : 117: {;mconfig.c: 118:  return D.lcd[vterm & 0x03][line & 0x03];
  9566                           ;stkvar	_vterm @ sp[(0)+-2]
  9567                           
  9568                           ; BSR set to: 0
  9569                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9570                           ;incstack = 0
  9571  01B698  0EFE               	movlw	-2
  9572  01B69A  50E3               	movf	plusw1,w,c
  9573  01B69C  0B03               	andlw	3
  9574  01B69E  0D78               	mullw	120
  9575  01B6A0  0E26               	movlw	low _D
  9576  01B6A2  6E01               	movwf	btemp^0,c
  9577  01B6A4  0E08               	movlw	high _D
  9578  01B6A6  6E02               	movwf	(btemp+1)^0,c
  9579  01B6A8  50F3               	movf	243,w,c
  9580  01B6AA  2601               	addwf	btemp^0,f,c
  9581  01B6AC  50F4               	movf	244,w,c
  9582  01B6AE  2202               	addwfc	(btemp+1)^0,f,c
  9583                           
  9584                           ;stkvar	_line @ sp[(0)+-1]
  9585  01B6B0  0EFF               	movlw	-1
  9586  01B6B2  50E3               	movf	plusw1,w,c
  9587  01B6B4  0B03               	andlw	3
  9588  01B6B6  0D28               	mullw	40
  9589  01B6B8  50F3               	movf	243,w,c
  9590  01B6BA  2601               	addwf	btemp^0,f,c
  9591  01B6BC  50F4               	movf	244,w,c
  9592  01B6BE  2202               	addwfc	(btemp+1)^0,f,c
  9593                           
  9594                           ; _get_vterm_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  9595  01B6C0  52E5               	movf	postdec1,f,c
  9596  01B6C2  52E5               	movf	postdec1,f,c
  9597  01B6C4  0012               	return		;funcret
  9598  01B6C6                     __end_of_get_vterm_ptr:
  9599                           	opt callstack 0
  9600                           
  9601 ;; *************** function _WaitMs *****************
  9602 ;; Defined at:
  9603 ;;		line 32 in file "timers.c"
  9604 ;; Parameters:    Size  Location     Type
  9605 ;;  numMilliseco    2  [STACK] const unsigned short 
  9606 ;; Auto vars:     Size  Location     Type
  9607 ;;		None
  9608 ;; Return value:  Size  Location     Type
  9609 ;;                  1  [STACK] void 
  9610 ;; Registers used:
  9611 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  9612 ;; Tracked objects:
  9613 ;;		On entry : 0/1
  9614 ;;		On exit  : 0/0
  9615 ;;		Unchanged: 0/0
  9616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9617 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9618 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9619 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9620 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9621 ;;Total ram usage:        0 bytes
  9622 ;; Hardware stack levels used:    1
  9623 ;; Hardware stack levels required when called:   16
  9624 ;; This function calls:
  9625 ;;		_StartTimer
  9626 ;;		_TimerDone
  9627 ;; This function is called by:
  9628 ;;		_main
  9629 ;;		_vterm_dump
  9630 ;; This function uses a reentrant model
  9631 ;;
  9632                           
  9633                           	psect	text32
  9634  01B504                     __ptext32:
  9635                           	opt callstack 0
  9636  01B504                     _WaitMs:
  9637                           	opt callstack 12
  9638                           
  9639                           ;timers.c: 32: void WaitMs(const uint16_t numMilliseconds);timers.c: 33: {;timers.c: 34:
      +                            StartTimer(TMR_INTERNAL, numMilliseconds);
  9640                           ;stkvar	_numMilliseconds @ sp[(0)+-2]
  9641                           
  9642                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9643                           ;incstack = 0
  9644  01B504  0EFE               	movlw	-2
  9645  01B506  006F FF8F FFE6     	movff	plusw1,postinc1
  9646  01B50C  006F FF8F FFE6     	movff	plusw1,postinc1
  9647  01B512  0E00               	movlw	0
  9648  01B514  6EE6               	movwf	postinc1,c
  9649  01B516  EC6E  F0D9         	call	_StartTimer	;wreg free
  9650                           
  9651                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  9652  01B51A  D005               	goto	l9793
  9653  01B51C                     l1606:
  9654                           
  9655                           ;timers.c: 36:   __nop();
  9656  01B51C  F000               	nop	
  9657                           
  9658                           ;timers.c: 37:   __nop();
  9659  01B51E  F000               	nop	
  9660                           
  9661                           ;timers.c: 38:   __nop();
  9662  01B520  F000               	nop	
  9663                           
  9664                           ;timers.c: 39:   __nop();
  9665  01B522  F000               	nop	
  9666  01B524  0004               	clrwdt		;# 
  9667  01B526                     l9793:
  9668                           
  9669                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  9670  01B526  0E00               	movlw	0
  9671  01B528  6EE6               	movwf	postinc1,c
  9672  01B52A  ECF7  F0DB         	call	_TimerDone	;wreg free
  9673  01B52E  5001               	movf	btemp^0,w,c
  9674  01B530  B4D8               	btfsc	status,2,c
  9675  01B532  D7F4               	goto	l1606
  9676                           
  9677                           ; _WaitMs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
  9678  01B534  52E5               	movf	postdec1,f,c
  9679  01B536  52E5               	movf	postdec1,f,c
  9680  01B538  0012               	return		;funcret
  9681  01B53A                     __end_of_WaitMs:
  9682                           	opt callstack 0
  9683                           
  9684 ;; *************** function _update_lcd *****************
  9685 ;; Defined at:
  9686 ;;		line 85 in file "mconfig.c"
  9687 ;; Parameters:    Size  Location     Type
  9688 ;;  vterm           1  [STACK] unsigned char 
  9689 ;; Auto vars:     Size  Location     Type
  9690 ;;		None
  9691 ;; Return value:  Size  Location     Type
  9692 ;;                  1  [STACK] unsigned char 
  9693 ;; Registers used:
  9694 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  9695 ;; Tracked objects:
  9696 ;;		On entry : 0/0
  9697 ;;		On exit  : 0/0
  9698 ;;		Unchanged: 0/0
  9699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9700 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9701 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9702 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9703 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9704 ;;Total ram usage:        0 bytes
  9705 ;; Hardware stack levels used:    1
  9706 ;; Hardware stack levels required when called:   26
  9707 ;; This function calls:
  9708 ;;		_eaDogM_WriteStringAtPos
  9709 ;;		_wait_lcd_done
  9710 ;; This function is called by:
  9711 ;;		_main
  9712 ;;		_check_help
  9713 ;; This function uses a reentrant model
  9714 ;;
  9715                           
  9716                           	psect	text33
  9717  019932                     __ptext33:
  9718                           	opt callstack 0
  9719  019932                     _update_lcd:
  9720                           	opt callstack 4
  9721                           
  9722                           ;mconfig.c: 85: uint8_t update_lcd(uint8_t vterm);mconfig.c: 86: {;mconfig.c: 87:  vterm
      +                           = vterm & 0x03;
  9723                           ;stkvar	_vterm @ sp[(0)+-1]
  9724                           
  9725                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9726                           ;incstack = 0
  9727  019932  0EFF               	movlw	-1
  9728  019934  006F FF8C  F001    	movff	plusw1,btemp
  9729  01993A  0E03               	movlw	3
  9730  01993C  1601               	andwf	btemp^0,f,c
  9731  01993E  0EFF               	movlw	-1
  9732  019940  0060  F007  FFE3   	movff	btemp,plusw1
  9733                           
  9734                           ;mconfig.c: 89:  if (D.vterm >= 1 && vterm == 0)
  9735  019946  EE22  F206         	lfsr	2,_D+480
  9736  01994A  A0DF               	btfss	indf2,0,c
  9737  01994C  D004               	goto	l12577
  9738                           
  9739                           ;stkvar	_vterm @ sp[(0)+-1]
  9740  01994E  0EFF               	movlw	-1
  9741  019950  50E3               	movf	plusw1,w,c
  9742  019952  B4D8               	btfsc	status,2,c
  9743  019954  D074               	goto	l1682
  9744  019956                     l12577:
  9745                           
  9746                           ;mconfig.c: 92:  D.lcd[vterm][0][16] = 0;
  9747                           ;stkvar	_vterm @ sp[(0)+-1]
  9748  019956  0EFF               	movlw	-1
  9749  019958  50E3               	movf	plusw1,w,c
  9750  01995A  0D78               	mullw	120
  9751  01995C  0E36               	movlw	low (_D+16)
  9752  01995E  24F3               	addwf	243,w,c
  9753  019960  6ED9               	movwf	fsr2l,c
  9754  019962  0E08               	movlw	high (_D+16)
  9755  019964  20F4               	addwfc	prodh,w,c
  9756  019966  6EDA               	movwf	fsr2h,c
  9757  019968  0E00               	movlw	0
  9758  01996A  6EDF               	movwf	indf2,c
  9759                           
  9760                           ;mconfig.c: 93:  D.lcd[vterm][1][16] = 0;
  9761                           ;stkvar	_vterm @ sp[(0)+-1]
  9762  01996C  0EFF               	movlw	-1
  9763  01996E  50E3               	movf	plusw1,w,c
  9764  019970  0D78               	mullw	120
  9765  019972  0E5E               	movlw	low (_D+56)
  9766  019974  24F3               	addwf	243,w,c
  9767  019976  6ED9               	movwf	fsr2l,c
  9768  019978  0E08               	movlw	high (_D+56)
  9769  01997A  20F4               	addwfc	prodh,w,c
  9770  01997C  6EDA               	movwf	fsr2h,c
  9771  01997E  0E00               	movlw	0
  9772  019980  6EDF               	movwf	indf2,c
  9773                           
  9774                           ;mconfig.c: 94:  D.lcd[vterm][2][16] = 0;
  9775                           ;stkvar	_vterm @ sp[(0)+-1]
  9776  019982  0EFF               	movlw	-1
  9777  019984  50E3               	movf	plusw1,w,c
  9778  019986  0D78               	mullw	120
  9779  019988  0E86               	movlw	low (_D+96)
  9780  01998A  24F3               	addwf	243,w,c
  9781  01998C  6ED9               	movwf	fsr2l,c
  9782  01998E  0E08               	movlw	high (_D+96)
  9783  019990  20F4               	addwfc	prodh,w,c
  9784  019992  6EDA               	movwf	fsr2h,c
  9785  019994  0E00               	movlw	0
  9786  019996  6EDF               	movwf	indf2,c
  9787                           
  9788                           ;mconfig.c: 95:  wait_lcd_done();
  9789  019998  ECFA  F0DD         	call	_wait_lcd_done	;wreg free
  9790                           
  9791                           ; BSR set to: 0
  9792                           ;mconfig.c: 96:  eaDogM_WriteStringAtPos(0, 0, D.lcd[vterm][0]);
  9793                           ;stkvar	_vterm @ sp[(0)+-1]
  9794  01999C  0EFF               	movlw	-1
  9795  01999E  50E3               	movf	plusw1,w,c
  9796  0199A0  0D78               	mullw	120
  9797  0199A2  0E26               	movlw	low _D
  9798  0199A4  6E0B               	movwf	(btemp+10)^0,c
  9799  0199A6  0E08               	movlw	high _D
  9800  0199A8  6E0C               	movwf	(btemp+11)^0,c
  9801  0199AA  50F3               	movf	243,w,c
  9802  0199AC  260B               	addwf	(btemp+10)^0,f,c
  9803  0199AE  50F4               	movf	244,w,c
  9804  0199B0  220C               	addwfc	(btemp+11)^0,f,c
  9805  0199B2  0060  F02F  FFE6   	movff	btemp+10,postinc1
  9806  0199B8  0060  F033  FFE6   	movff	btemp+11,postinc1
  9807  0199BE  0E00               	movlw	0
  9808  0199C0  6EE6               	movwf	postinc1,c
  9809  0199C2  0E00               	movlw	0
  9810  0199C4  6EE6               	movwf	postinc1,c
  9811  0199C6  EC9D  F0DA         	call	_eaDogM_WriteStringAtPos	;wreg free
  9812                           
  9813                           ; BSR set to: 59
  9814                           ;mconfig.c: 97:  wait_lcd_done();
  9815  0199CA  ECFA  F0DD         	call	_wait_lcd_done	;wreg free
  9816                           
  9817                           ; BSR set to: 0
  9818                           ;mconfig.c: 98:  eaDogM_WriteStringAtPos(1, 0, D.lcd[vterm][1]);
  9819                           ;stkvar	_vterm @ sp[(0)+-1]
  9820  0199CE  0EFF               	movlw	-1
  9821  0199D0  50E3               	movf	plusw1,w,c
  9822  0199D2  0D78               	mullw	120
  9823  0199D4  0E26               	movlw	low _D
  9824  0199D6  6E0B               	movwf	(btemp+10)^0,c
  9825  0199D8  0E08               	movlw	high _D
  9826  0199DA  6E0C               	movwf	(btemp+11)^0,c
  9827  0199DC  0E28               	movlw	40
  9828  0199DE  260B               	addwf	(btemp+10)^0,f,c
  9829  0199E0  0E00               	movlw	0
  9830  0199E2  220C               	addwfc	(btemp+11)^0,f,c
  9831  0199E4  50F3               	movf	243,w,c
  9832  0199E6  260B               	addwf	(btemp+10)^0,f,c
  9833  0199E8  50F4               	movf	244,w,c
  9834  0199EA  220C               	addwfc	(btemp+11)^0,f,c
  9835  0199EC  0060  F02F  FFE6   	movff	btemp+10,postinc1
  9836  0199F2  0060  F033  FFE6   	movff	btemp+11,postinc1
  9837  0199F8  0E00               	movlw	0
  9838  0199FA  6EE6               	movwf	postinc1,c
  9839  0199FC  0E01               	movlw	1
  9840  0199FE  6EE6               	movwf	postinc1,c
  9841  019A00  EC9D  F0DA         	call	_eaDogM_WriteStringAtPos	;wreg free
  9842                           
  9843                           ; BSR set to: 59
  9844                           ;mconfig.c: 99:  wait_lcd_done();
  9845  019A04  ECFA  F0DD         	call	_wait_lcd_done	;wreg free
  9846                           
  9847                           ; BSR set to: 0
  9848                           ;mconfig.c: 100:  eaDogM_WriteStringAtPos(2, 0, D.lcd[vterm][2]);
  9849                           ;stkvar	_vterm @ sp[(0)+-1]
  9850  019A08  0EFF               	movlw	-1
  9851  019A0A  50E3               	movf	plusw1,w,c
  9852  019A0C  0D78               	mullw	120
  9853  019A0E  0E26               	movlw	low _D
  9854  019A10  6E0B               	movwf	(btemp+10)^0,c
  9855  019A12  0E08               	movlw	high _D
  9856  019A14  6E0C               	movwf	(btemp+11)^0,c
  9857  019A16  0E50               	movlw	80
  9858  019A18  260B               	addwf	(btemp+10)^0,f,c
  9859  019A1A  0E00               	movlw	0
  9860  019A1C  220C               	addwfc	(btemp+11)^0,f,c
  9861  019A1E  50F3               	movf	243,w,c
  9862  019A20  260B               	addwf	(btemp+10)^0,f,c
  9863  019A22  50F4               	movf	244,w,c
  9864  019A24  220C               	addwfc	(btemp+11)^0,f,c
  9865  019A26  0060  F02F  FFE6   	movff	btemp+10,postinc1
  9866  019A2C  0060  F033  FFE6   	movff	btemp+11,postinc1
  9867  019A32  0E00               	movlw	0
  9868  019A34  6EE6               	movwf	postinc1,c
  9869  019A36  0E02               	movlw	2
  9870  019A38  6EE6               	movwf	postinc1,c
  9871  019A3A  EC9D  F0DA         	call	_eaDogM_WriteStringAtPos	;wreg free
  9872  019A3E                     l1682:
  9873                           
  9874                           ; _update_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  9875  019A3E  52E5               	movf	postdec1,f,c
  9876  019A40  0012               	return		;funcret
  9877  019A42                     __end_of_update_lcd:
  9878                           	opt callstack 0
  9879                           
  9880 ;; *************** function _eaDogM_WriteStringAtPos *****************
  9881 ;; Defined at:
  9882 ;;		line 278 in file "eadog.c"
  9883 ;; Parameters:    Size  Location     Type
  9884 ;;  r               1  [STACK] const unsigned char 
  9885 ;;  c               1  [STACK] const unsigned char 
  9886 ;;  strPtr          2  [STACK] PTR unsigned char 
  9887 ;;		 -> D.lcd(480), D(482), V(191), 
  9888 ;; Auto vars:     Size  Location     Type
  9889 ;;		None
  9890 ;; Return value:  Size  Location     Type
  9891 ;;                  1  [STACK] void 
  9892 ;; Registers used:
  9893 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  9894 ;; Tracked objects:
  9895 ;;		On entry : 3F/0
  9896 ;;		On exit  : 3F/3B
  9897 ;;		Unchanged: 0/0
  9898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9899 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9900 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9902 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9903 ;;Total ram usage:        0 bytes
  9904 ;; Hardware stack levels used:    1
  9905 ;; Hardware stack levels required when called:   25
  9906 ;; This function calls:
  9907 ;;		_eaDogM_WriteString
  9908 ;;		_send_lcd_cmd_dma
  9909 ;; This function is called by:
  9910 ;;		_update_lcd
  9911 ;;		_vterm_dump
  9912 ;; This function uses a reentrant model
  9913 ;;
  9914                           
  9915                           	psect	text34
  9916  01B53A                     __ptext34:
  9917                           	opt callstack 0
  9918  01B53A                     _eaDogM_WriteStringAtPos:
  9919                           	opt callstack 4
  9920                           
  9921                           ;eadog.c: 278: void eaDogM_WriteStringAtPos(const uint8_t r, const uint8_t c, char *strP
      +                          tr);eadog.c: 279: {;eadog.c: 280:  send_lcd_cmd_dma((0b10000000 + (r * 16) + c));
  9922                           ;stkvar	_c @ sp[(0)+-2]
  9923                           
  9924                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9925                           ;incstack = 0
  9926  01B53A  0EFE               	movlw	-2
  9927  01B53C  006F FF8C  F00C    	movff	plusw1,btemp+11
  9928                           
  9929                           ;stkvar	_r @ sp[(0)+-1]
  9930  01B542  0EFF               	movlw	-1
  9931  01B544  50E3               	movf	plusw1,w,c
  9932  01B546  0D10               	mullw	16
  9933  01B548  50F3               	movf	243,w,c
  9934  01B54A  240C               	addwf	(btemp+11)^0,w,c
  9935  01B54C  0F80               	addlw	128
  9936  01B54E  6EE6               	movwf	postinc1,c
  9937  01B550  EC8E  F0D7         	call	_send_lcd_cmd_dma	;wreg free
  9938                           
  9939                           ;eadog.c: 281:  eaDogM_WriteString(strPtr);
  9940                           ;stkvar	_strPtr @ sp[(0)+-4]
  9941  01B554  0EFC               	movlw	-4
  9942  01B556  006F FF8F FFE6     	movff	plusw1,postinc1
  9943  01B55C  006F FF8F FFE6     	movff	plusw1,postinc1
  9944  01B562  EC8D  F0D2         	call	_eaDogM_WriteString	;wreg free
  9945                           
  9946                           ; BSR set to: 59
  9947                           ; _eaDogM_WriteStringAtPos: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 4, argsize = 4, vargsize = 0
  9948  01B566  52E5               	movf	postdec1,f,c
  9949  01B568  52E5               	movf	postdec1,f,c
  9950  01B56A  52E5               	movf	postdec1,f,c
  9951  01B56C  52E5               	movf	postdec1,f,c
  9952  01B56E  0012               	return		;funcret
  9953  01B570                     __end_of_eaDogM_WriteStringAtPos:
  9954                           	opt callstack 0
  9955                           
  9956 ;; *************** function _send_lcd_cmd_dma *****************
  9957 ;; Defined at:
  9958 ;;		line 220 in file "eadog.c"
  9959 ;; Parameters:    Size  Location     Type
  9960 ;;  strPtr          1  [STACK] unsigned char 
  9961 ;; Auto vars:     Size  Location     Type
  9962 ;;		None
  9963 ;; Return value:  Size  Location     Type
  9964 ;;                  1  [STACK] void 
  9965 ;; Registers used:
  9966 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  9967 ;; Tracked objects:
  9968 ;;		On entry : 0/3D
  9969 ;;		On exit  : 3F/0
  9970 ;;		Unchanged: 0/0
  9971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9972 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9973 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9974 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9975 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9976 ;;Total ram usage:        0 bytes
  9977 ;; Hardware stack levels used:    1
  9978 ;; Hardware stack levels required when called:   24
  9979 ;; This function calls:
  9980 ;;		_printf
  9981 ;;		_ringBufS_flush
  9982 ;;		_start_lcd
  9983 ;;		_wait_lcd_done
  9984 ;;		_wait_lcd_set
  9985 ;; This function is called by:
  9986 ;;		_eaDogM_WriteCommand
  9987 ;;		_eaDogM_WriteStringAtPos
  9988 ;; This function uses a reentrant model
  9989 ;;
  9990                           
  9991                           	psect	text35
  9992  01AF1C                     __ptext35:
  9993                           	opt callstack 0
  9994  01AF1C                     _send_lcd_cmd_dma:
  9995                           	opt callstack 4
  9996                           
  9997                           ;eadog.c: 220: void send_lcd_cmd_dma(uint8_t strPtr);eadog.c: 221: {;eadog.c: 223:  wait
      +                          _lcd_set();
  9998                           
  9999                           ; BSR set to: 59
 10000                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10001                           ;incstack = 0
 10002  01AF1C  ECEE  F0DE         	call	_wait_lcd_set	;wreg free
 10003                           
 10004                           ; BSR set to: 0
 10005                           ;eadog.c: 225:  ringBufS_flush(spi_link.tx1a, 0);
 10006  01AF20  0E00               	movlw	0
 10007  01AF22  6EE6               	movwf	postinc1,c
 10008  01AF24  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
 10009  01AF2A  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
 10010  01AF30  ECC7  F0D3         	call	_ringBufS_flush	;wreg free
 10011  01AF34  92BC               	bcf	188,1,c	;volatile
 10012  01AF36  94BC               	bcf	188,2,c	;volatile
 10013                           
 10014                           ;eadog.c: 228:  DMA1CON0bits.EN = 0;
 10015  01AF38  013B               	movlb	59	; () banked
 10016  01AF3A  9FFC               	bcf	252,7,b	;volatile
 10017                           
 10018                           ; BSR set to: 59
 10019                           ;eadog.c: 229:  DMA1SSZ = 1;
 10020  01AF3C  0E00               	movlw	0
 10021  01AF3E  6FF8               	movwf	248,b	;volatile
 10022  01AF40  0E01               	movlw	1
 10023  01AF42  6FF7               	movwf	247,b	;volatile
 10024                           
 10025                           ; BSR set to: 59
 10026                           ;eadog.c: 230:  DMA1CON0bits.EN = 1;
 10027  01AF44  8FFC               	bsf	252,7,b	;volatile
 10028                           
 10029                           ; BSR set to: 59
 10030                           ;eadog.c: 231:  printf("%c", strPtr);
 10031                           ;stkvar	_strPtr @ sp[(0)+-1]
 10032  01AF46  0EFF               	movlw	-1
 10033  01AF48  50E3               	movf	plusw1,w,c
 10034  01AF4A  6EE6               	movwf	postinc1,c
 10035  01AF4C  0E00               	movlw	0
 10036  01AF4E  6EE6               	movwf	postinc1,c
 10037  01AF50  0EF9               	movlw	low STR_44
 10038  01AF52  6EE6               	movwf	postinc1,c
 10039  01AF54  0EFF               	movlw	high STR_44
 10040  01AF56  6EE6               	movwf	postinc1,c
 10041  01AF58  0E04               	movlw	4
 10042  01AF5A  6EE6               	movwf	postinc1,c
 10043  01AF5C  ECA2  F0D6         	call	_printf	;wreg free
 10044                           
 10045                           ; BSR set to: 0
 10046                           ;eadog.c: 232:  start_lcd();
 10047  01AF60  ECF1  F0DE         	call	_start_lcd	;wreg free
 10048                           
 10049                           ; BSR set to: 59
 10050                           ;eadog.c: 233:  wait_lcd_done();
 10051  01AF64  ECFA  F0DD         	call	_wait_lcd_done	;wreg free
 10052                           
 10053                           ; BSR set to: 0
 10054  01AF68  82BC               	bsf	188,1,c	;volatile
 10055                           
 10056                           ; BSR set to: 0
 10057                           ; _send_lcd_cmd_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 10058  01AF6A  52E5               	movf	postdec1,f,c
 10059  01AF6C  0012               	return		;funcret
 10060  01AF6E                     __end_of_send_lcd_cmd_dma:
 10061                           	opt callstack 0
 10062                           
 10063 ;; *************** function _wait_lcd_done *****************
 10064 ;; Defined at:
 10065 ;;		line 156 in file "eadog.c"
 10066 ;; Parameters:    Size  Location     Type
 10067 ;;		None
 10068 ;; Auto vars:     Size  Location     Type
 10069 ;;		None
 10070 ;; Return value:  Size  Location     Type
 10071 ;;                  1  [STACK] void 
 10072 ;; Registers used:
 10073 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
 10074 ;; Tracked objects:
 10075 ;;		On entry : 0/0
 10076 ;;		On exit  : 3F/0
 10077 ;;		Unchanged: 0/0
 10078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10079 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10080 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10081 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10082 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10083 ;;Total ram usage:        0 bytes
 10084 ;; Hardware stack levels used:    1
 10085 ;; Hardware stack levels required when called:   16
 10086 ;; This function calls:
 10087 ;;		_wdtdelay
 10088 ;; This function is called by:
 10089 ;;		_send_lcd_cmd_dma
 10090 ;;		_update_lcd
 10091 ;;		_vterm_dump
 10092 ;; This function uses a reentrant model
 10093 ;;
 10094                           
 10095                           	psect	text36
 10096  01BBF4                     __ptext36:
 10097                           	opt callstack 0
 10098  01BBF4                     _wait_lcd_done:
 10099                           	opt callstack 13
 10100                           
 10101                           ;eadog.c: 158:  while (spi_link.LCD_DATA);
 10102                           
 10103                           ; BSR set to: 0
 10104                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10105                           ;incstack = 0
 10106  01BBF4  0100               	movlb	0	; () banked
 10107  01BBF6  B760               	btfsc	_spi_link& (0+255),3,b	;volatile
 10108  01BBF8  D7FD               	goto	_wait_lcd_done
 10109                           
 10110                           ; BSR set to: 0
 10111                           ;eadog.c: 159:  wdtdelay(50);
 10112  01BBFA  0E32               	movlw	50
 10113  01BBFC  6EE6               	movwf	postinc1,c
 10114  01BBFE  0E00               	movlw	0
 10115  01BC00  6EE6               	movwf	postinc1,c
 10116  01BC02  0E00               	movlw	0
 10117  01BC04  6EE6               	movwf	postinc1,c
 10118  01BC06  0E00               	movlw	0
 10119  01BC08  6EE6               	movwf	postinc1,c
 10120  01BC0A  EC34  F0D7         	call	_wdtdelay	;wreg free
 10121                           
 10122                           ; BSR set to: 0
 10123                           ; _wait_lcd_done: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
 10124  01BC0E  0012               	return		;funcret
 10125  01BC10                     __end_of_wait_lcd_done:
 10126                           	opt callstack 0
 10127                           
 10128 ;; *************** function _wdtdelay *****************
 10129 ;; Defined at:
 10130 ;;		line 23 in file "eadog.c"
 10131 ;; Parameters:    Size  Location     Type
 10132 ;;  delay           4  [STACK] const unsigned long 
 10133 ;; Auto vars:     Size  Location     Type
 10134 ;;		None
 10135 ;; Return value:  Size  Location     Type
 10136 ;;                  1  [STACK] void 
 10137 ;; Registers used:
 10138 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
 10139 ;; Tracked objects:
 10140 ;;		On entry : 0/0
 10141 ;;		On exit  : 3F/0
 10142 ;;		Unchanged: 0/0
 10143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10144 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10145 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10147 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10148 ;;Total ram usage:        0 bytes
 10149 ;; Hardware stack levels used:    1
 10150 ;; Hardware stack levels required when called:   15
 10151 ;; This function calls:
 10152 ;;		Nothing
 10153 ;; This function is called by:
 10154 ;;		_init_display
 10155 ;;		_send_lcd_cmd
 10156 ;;		_send_lcd_cmd_long
 10157 ;;		_wait_lcd_done
 10158 ;; This function uses a reentrant model
 10159 ;;
 10160                           
 10161                           	psect	text37
 10162  01AE68                     __ptext37:
 10163                           	opt callstack 0
 10164  01AE68                     _wdtdelay:
 10165                           	opt callstack 13
 10166                           
 10167                           ;eadog.c: 23: void wdtdelay(const uint32_t delay);eadog.c: 24: {;eadog.c: 25:  static ui
      +                          nt32_t dcount;;eadog.c: 27:  for (dcount = 0; dcount <= delay; dcount++) {
 10168                           
 10169                           ; BSR set to: 0
 10170                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10171                           ;incstack = 0
 10172  01AE68  0100               	movlb	0	; () banked
 10173  01AE6A  6B9A               	clrf	wdtdelay@dcount& (0+255),b
 10174  01AE6C  6B9B               	clrf	(wdtdelay@dcount+1)& (0+255),b
 10175  01AE6E  6B9C               	clrf	(wdtdelay@dcount+2)& (0+255),b
 10176  01AE70  6B9D               	clrf	(wdtdelay@dcount+3)& (0+255),b
 10177  01AE72                     l1447:
 10178                           
 10179                           ; BSR set to: 0
 10180                           ;eadog.c: 28:   __nop();
 10181  01AE72  F000               	nop	
 10182  01AE74  0004               	clrwdt		;# 
 10183                           
 10184                           ;eadog.c: 30:  };
 10185  01AE76  0E01               	movlw	1
 10186  01AE78  0100               	movlb	0	; () banked
 10187  01AE7A  279A               	addwf	wdtdelay@dcount& (0+255),f,b
 10188  01AE7C  0E00               	movlw	0
 10189  01AE7E  239B               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
 10190  01AE80  239C               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
 10191  01AE82  239D               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
 10192                           
 10193                           ; BSR set to: 0
 10194                           ;stkvar	_delay @ sp[(0)+-4]
 10195  01AE84  0EFC               	movlw	-4
 10196  01AE86  006F FF8C  F001    	movff	plusw1,btemp
 10197  01AE8C  519A               	movf	wdtdelay@dcount& (0+255),w,b
 10198  01AE8E  5C01               	subwf	btemp^0,w,c
 10199  01AE90  0EFD               	movlw	-3
 10200  01AE92  006F FF8C  F001    	movff	plusw1,btemp
 10201  01AE98  519B               	movf	(wdtdelay@dcount+1)& (0+255),w,b
 10202  01AE9A  5801               	subwfb	btemp^0,w,c
 10203  01AE9C  0EFE               	movlw	-2
 10204  01AE9E  006F FF8C  F001    	movff	plusw1,btemp
 10205  01AEA4  519C               	movf	(wdtdelay@dcount+2)& (0+255),w,b
 10206  01AEA6  5801               	subwfb	btemp^0,w,c
 10207  01AEA8  0EFF               	movlw	-1
 10208  01AEAA  006F FF8C  F001    	movff	plusw1,btemp
 10209  01AEB0  519D               	movf	(wdtdelay@dcount+3)& (0+255),w,b
 10210  01AEB2  5801               	subwfb	btemp^0,w,c
 10211  01AEB4  B0D8               	btfsc	status,0,c
 10212  01AEB6  D7DD               	goto	l1447
 10213                           
 10214                           ; BSR set to: 0
 10215                           ; _wdtdelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
 10216  01AEB8  52E5               	movf	postdec1,f,c
 10217  01AEBA  52E5               	movf	postdec1,f,c
 10218  01AEBC  52E5               	movf	postdec1,f,c
 10219  01AEBE  52E5               	movf	postdec1,f,c
 10220  01AEC0  0012               	return		;funcret
 10221  01AEC2                     __end_of_wdtdelay:
 10222                           	opt callstack 0
 10223                           
 10224 ;; *************** function _eaDogM_WriteString *****************
 10225 ;; Defined at:
 10226 ;;		line 199 in file "eadog.c"
 10227 ;; Parameters:    Size  Location     Type
 10228 ;;  strPtr          2  [STACK] PTR unsigned char 
 10229 ;;		 -> D.lcd(480), D(482), V(191), 
 10230 ;; Auto vars:     Size  Location     Type
 10231 ;;		None
 10232 ;; Return value:  Size  Location     Type
 10233 ;;                  1  [STACK] void 
 10234 ;; Registers used:
 10235 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 10236 ;; Tracked objects:
 10237 ;;		On entry : 3F/0
 10238 ;;		On exit  : 3F/3B
 10239 ;;		Unchanged: 0/0
 10240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10241 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10242 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10243 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10244 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10245 ;;Total ram usage:        0 bytes
 10246 ;; Hardware stack levels used:    1
 10247 ;; Hardware stack levels required when called:   24
 10248 ;; This function calls:
 10249 ;;		_printf
 10250 ;;		_ringBufS_flush
 10251 ;;		_start_lcd
 10252 ;;		_strlen
 10253 ;;		_wait_lcd_set
 10254 ;; This function is called by:
 10255 ;;		_eaDogM_WriteStringAtPos
 10256 ;; This function uses a reentrant model
 10257 ;;
 10258                           
 10259                           	psect	text38
 10260  01A51A                     __ptext38:
 10261                           	opt callstack 0
 10262  01A51A                     _eaDogM_WriteString:
 10263                           	opt callstack 4
 10264                           
 10265                           ;eadog.c: 199: void eaDogM_WriteString(char *strPtr);eadog.c: 200: {;eadog.c: 202:  wait
      +                          _lcd_set();
 10266                           
 10267                           ; BSR set to: 0
 10268                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10269                           ;incstack = 0
 10270  01A51A  ECEE  F0DE         	call	_wait_lcd_set	;wreg free
 10271                           
 10272                           ; BSR set to: 0
 10273                           ;eadog.c: 204:  ringBufS_flush(spi_link.tx1a, 0);
 10274  01A51E  0E00               	movlw	0
 10275  01A520  6EE6               	movwf	postinc1,c
 10276  01A522  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
 10277  01A528  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
 10278  01A52E  ECC7  F0D3         	call	_ringBufS_flush	;wreg free
 10279  01A532  94BC               	bcf	188,2,c	;volatile
 10280                           
 10281                           ;eadog.c: 206:  if (strlen(strPtr) > 64) strPtr[64] = 0;
 10282                           ;stkvar	_strPtr @ sp[(0)+-2]
 10283  01A534  0EFE               	movlw	-2
 10284  01A536  006F FF8F FFE6     	movff	plusw1,postinc1
 10285  01A53C  006F FF8F FFE6     	movff	plusw1,postinc1
 10286  01A542  ECE0  F0D2         	call	_strlen	;wreg free
 10287  01A546  5002               	movf	(btemp+1)^0,w,c
 10288  01A548  E104               	bnz	u12200
 10289  01A54A  0E41               	movlw	65
 10290  01A54C  5C01               	subwf	btemp^0,w,c
 10291  01A54E  A0D8               	btfss	status,0,c
 10292  01A550  D010               	goto	l12531
 10293  01A552                     u12200:
 10294                           
 10295                           ;stkvar	_strPtr @ sp[(0)+-2]
 10296  01A552  0EFE               	movlw	-2
 10297  01A554  006F FF8C  F00B    	movff	plusw1,btemp+10
 10298  01A55A  0EFF               	movlw	-1
 10299  01A55C  006F FF8C  F00C    	movff	plusw1,btemp+11
 10300  01A562  0E40               	movlw	64
 10301  01A564  240B               	addwf	(btemp+10)^0,w,c
 10302  01A566  6ED9               	movwf	fsr2l,c
 10303  01A568  0E00               	movlw	0
 10304  01A56A  200C               	addwfc	(btemp+11)^0,w,c
 10305  01A56C  6EDA               	movwf	fsr2h,c
 10306  01A56E  0E00               	movlw	0
 10307  01A570  6EDF               	movwf	indf2,c
 10308  01A572                     l12531:
 10309                           
 10310                           ;eadog.c: 207:  DMA1CON0bits.EN = 0;
 10311  01A572  013B               	movlb	59	; () banked
 10312  01A574  9FFC               	bcf	252,7,b	;volatile
 10313                           
 10314                           ; BSR set to: 59
 10315                           ;eadog.c: 208:  DMA1SSZ = strlen(strPtr);
 10316                           ;stkvar	_strPtr @ sp[(0)+-2]
 10317  01A576  0EFE               	movlw	-2
 10318  01A578  006F FF8F FFE6     	movff	plusw1,postinc1
 10319  01A57E  006F FF8F FFE6     	movff	plusw1,postinc1
 10320  01A584  ECE0  F0D2         	call	_strlen	;wreg free
 10321  01A588  0060  F007  FBF7   	movff	btemp,15351	;volatile
 10322  01A58E  0060  F00B  FBF8   	movff	btemp+1,15352	;volatile
 10323                           
 10324                           ;eadog.c: 209:  DMA1CON0bits.EN = 1;
 10325  01A594  013B               	movlb	59	; () banked
 10326  01A596  8FFC               	bsf	252,7,b	;volatile
 10327                           
 10328                           ; BSR set to: 59
 10329                           ;eadog.c: 210:  printf("%s", strPtr);
 10330                           ;stkvar	_strPtr @ sp[(0)+-2]
 10331  01A598  0EFE               	movlw	-2
 10332  01A59A  006F FF8F FFE6     	movff	plusw1,postinc1
 10333  01A5A0  006F FF8F FFE6     	movff	plusw1,postinc1
 10334  01A5A6  0EFC               	movlw	low STR_43
 10335  01A5A8  6EE6               	movwf	postinc1,c
 10336  01A5AA  0EFF               	movlw	high STR_43
 10337  01A5AC  6EE6               	movwf	postinc1,c
 10338  01A5AE  0E04               	movlw	4
 10339  01A5B0  6EE6               	movwf	postinc1,c
 10340  01A5B2  ECA2  F0D6         	call	_printf	;wreg free
 10341                           
 10342                           ; BSR set to: 0
 10343                           ;eadog.c: 211:  start_lcd();
 10344  01A5B6  ECF1  F0DE         	call	_start_lcd	;wreg free
 10345                           
 10346                           ; BSR set to: 59
 10347                           ; _eaDogM_WriteString: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 10348  01A5BA  52E5               	movf	postdec1,f,c
 10349  01A5BC  52E5               	movf	postdec1,f,c
 10350  01A5BE  0012               	return		;funcret
 10351  01A5C0                     __end_of_eaDogM_WriteString:
 10352                           	opt callstack 0
 10353                           
 10354 ;; *************** function _wait_lcd_set *****************
 10355 ;; Defined at:
 10356 ;;		line 146 in file "eadog.c"
 10357 ;; Parameters:    Size  Location     Type
 10358 ;;		None
 10359 ;; Auto vars:     Size  Location     Type
 10360 ;;		None
 10361 ;; Return value:  Size  Location     Type
 10362 ;;                  1  [STACK] void 
 10363 ;; Registers used:
 10364 ;;		None
 10365 ;; Tracked objects:
 10366 ;;		On entry : 0/3D
 10367 ;;		On exit  : 3F/0
 10368 ;;		Unchanged: 0/0
 10369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10370 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10371 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10372 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10373 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10374 ;;Total ram usage:        0 bytes
 10375 ;; Hardware stack levels used:    1
 10376 ;; Hardware stack levels required when called:   15
 10377 ;; This function calls:
 10378 ;;		Nothing
 10379 ;; This function is called by:
 10380 ;;		_eaDogM_WriteString
 10381 ;;		_send_lcd_cmd_dma
 10382 ;; This function uses a reentrant model
 10383 ;;
 10384                           
 10385                           	psect	text39
 10386  01BDDC                     __ptext39:
 10387                           	opt callstack 0
 10388  01BDDC                     _wait_lcd_set:
 10389                           	opt callstack 12
 10390                           
 10391                           ;eadog.c: 148:  spi_link.LCD_DATA = 1;
 10392                           
 10393                           ; BSR set to: 59
 10394                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10395                           ;incstack = 0
 10396  01BDDC  0100               	movlb	0	; () banked
 10397  01BDDE  8760               	bsf	_spi_link& (0+255),3,b	;volatile
 10398                           
 10399                           ; BSR set to: 0
 10400                           ; _wait_lcd_set: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 10401  01BDE0  0012               	return		;funcret
 10402  01BDE2                     __end_of_wait_lcd_set:
 10403                           	opt callstack 0
 10404                           
 10405 ;; *************** function _start_lcd *****************
 10406 ;; Defined at:
 10407 ;;		line 141 in file "eadog.c"
 10408 ;; Parameters:    Size  Location     Type
 10409 ;;		None
 10410 ;; Auto vars:     Size  Location     Type
 10411 ;;		None
 10412 ;; Return value:  Size  Location     Type
 10413 ;;                  1  [STACK] void 
 10414 ;; Registers used:
 10415 ;;		None
 10416 ;; Tracked objects:
 10417 ;;		On entry : 3F/0
 10418 ;;		On exit  : 3F/3B
 10419 ;;		Unchanged: 0/0
 10420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10421 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10422 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10423 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10424 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10425 ;;Total ram usage:        0 bytes
 10426 ;; Hardware stack levels used:    1
 10427 ;; Hardware stack levels required when called:   15
 10428 ;; This function calls:
 10429 ;;		Nothing
 10430 ;; This function is called by:
 10431 ;;		_eaDogM_WriteString
 10432 ;;		_send_lcd_cmd_dma
 10433 ;; This function uses a reentrant model
 10434 ;;
 10435                           
 10436                           	psect	text40
 10437  01BDE2                     __ptext40:
 10438                           	opt callstack 0
 10439  01BDE2                     _start_lcd:
 10440                           	opt callstack 12
 10441                           
 10442                           ;eadog.c: 143:  DMA1CON0bits.DMA1SIRQEN = 1;
 10443                           
 10444                           ; BSR set to: 0
 10445                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10446                           ;incstack = 0
 10447  01BDE2  013B               	movlb	59	; () banked
 10448  01BDE4  8DFC               	bsf	252,6,b	;volatile
 10449                           
 10450                           ; BSR set to: 59
 10451                           ; _start_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 10452  01BDE6  0012               	return		;funcret
 10453  01BDE8                     __end_of_start_lcd:
 10454                           	opt callstack 0
 10455                           
 10456 ;; *************** function _ringBufS_flush *****************
 10457 ;; Defined at:
 10458 ;;		line 76 in file "ringbufs.c"
 10459 ;; Parameters:    Size  Location     Type
 10460 ;;  _this           2  [STACK] PTR struct ringBufS_t
 10461 ;;		 -> ring_buf1(67), 
 10462 ;;  clearBuffer     1  [STACK] const char 
 10463 ;; Auto vars:     Size  Location     Type
 10464 ;;		None
 10465 ;; Return value:  Size  Location     Type
 10466 ;;                  1  [STACK] void 
 10467 ;; Registers used:
 10468 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
 10469 ;; Tracked objects:
 10470 ;;		On entry : 3F/0
 10471 ;;		On exit  : 0/0
 10472 ;;		Unchanged: 0/0
 10473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10474 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10475 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10476 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10477 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10478 ;;Total ram usage:        0 bytes
 10479 ;; Hardware stack levels used:    1
 10480 ;; Hardware stack levels required when called:   16
 10481 ;; This function calls:
 10482 ;;		_memset
 10483 ;; This function is called by:
 10484 ;;		_eaDogM_WriteString
 10485 ;;		_send_lcd_cmd_dma
 10486 ;; This function uses a reentrant model
 10487 ;;
 10488                           
 10489                           	psect	text41
 10490  01A78E                     __ptext41:
 10491                           	opt callstack 0
 10492  01A78E                     _ringBufS_flush:
 10493                           	opt callstack 11
 10494                           
 10495                           ;ringbufs.c: 76: void ringBufS_flush(ringBufS_t *_this, const int8_t clearBuffer);ringbu
      +                          fs.c: 77: {;ringbufs.c: 78:  _this->count = 0;
 10496                           ;stkvar	__this @ sp[(0)+-2]
 10497                           
 10498                           ; BSR set to: 59
 10499                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10500                           ;incstack = 0
 10501  01A78E  0EFE               	movlw	-2
 10502  01A790  006F FF8C  F00B    	movff	plusw1,btemp+10
 10503  01A796  0EFF               	movlw	-1
 10504  01A798  006F FF8C  F00C    	movff	plusw1,btemp+11
 10505  01A79E  0E42               	movlw	66
 10506  01A7A0  240B               	addwf	(btemp+10)^0,w,c
 10507  01A7A2  6ED9               	movwf	fsr2l,c
 10508  01A7A4  0E00               	movlw	0
 10509  01A7A6  200C               	addwfc	(btemp+11)^0,w,c
 10510  01A7A8  6EDA               	movwf	fsr2h,c
 10511  01A7AA  0E00               	movlw	0
 10512  01A7AC  6EDF               	movwf	indf2,c
 10513                           
 10514                           ;ringbufs.c: 79:  _this->head = 0;
 10515                           ;stkvar	__this @ sp[(0)+-2]
 10516  01A7AE  0EFE               	movlw	-2
 10517  01A7B0  006F FF8C  F00B    	movff	plusw1,btemp+10
 10518  01A7B6  0EFF               	movlw	-1
 10519  01A7B8  006F FF8C  F00C    	movff	plusw1,btemp+11
 10520  01A7BE  0E40               	movlw	64
 10521  01A7C0  240B               	addwf	(btemp+10)^0,w,c
 10522  01A7C2  6ED9               	movwf	fsr2l,c
 10523  01A7C4  0E00               	movlw	0
 10524  01A7C6  200C               	addwfc	(btemp+11)^0,w,c
 10525  01A7C8  6EDA               	movwf	fsr2h,c
 10526  01A7CA  0E00               	movlw	0
 10527  01A7CC  6EDF               	movwf	indf2,c
 10528                           
 10529                           ;ringbufs.c: 80:  _this->tail = 0;
 10530                           ;stkvar	__this @ sp[(0)+-2]
 10531  01A7CE  0EFE               	movlw	-2
 10532  01A7D0  006F FF8C  F00B    	movff	plusw1,btemp+10
 10533  01A7D6  0EFF               	movlw	-1
 10534  01A7D8  006F FF8C  F00C    	movff	plusw1,btemp+11
 10535  01A7DE  0E41               	movlw	65
 10536  01A7E0  240B               	addwf	(btemp+10)^0,w,c
 10537  01A7E2  6ED9               	movwf	fsr2l,c
 10538  01A7E4  0E00               	movlw	0
 10539  01A7E6  200C               	addwfc	(btemp+11)^0,w,c
 10540  01A7E8  6EDA               	movwf	fsr2h,c
 10541  01A7EA  0E00               	movlw	0
 10542  01A7EC  6EDF               	movwf	indf2,c
 10543                           
 10544                           ;ringbufs.c: 81:  if (clearBuffer) {
 10545                           ;stkvar	_clearBuffer @ sp[(0)+-3]
 10546  01A7EE  0EFD               	movlw	-3
 10547  01A7F0  50E3               	movf	plusw1,w,c
 10548  01A7F2  B4D8               	btfsc	status,2,c
 10549  01A7F4  D011               	goto	l1591
 10550                           
 10551                           ;ringbufs.c: 82:   memset(_this->buf, 0, sizeof(_this->buf));
 10552  01A7F6  0E40               	movlw	64
 10553  01A7F8  6EE6               	movwf	postinc1,c
 10554  01A7FA  0E00               	movlw	0
 10555  01A7FC  6EE6               	movwf	postinc1,c
 10556  01A7FE  0E00               	movlw	0
 10557  01A800  6EE6               	movwf	postinc1,c
 10558  01A802  0E00               	movlw	0
 10559  01A804  6EE6               	movwf	postinc1,c
 10560                           
 10561                           ;stkvar	__this @ sp[(-4)+-2]
 10562  01A806  0EFA               	movlw	-6
 10563  01A808  006F FF8F FFE6     	movff	plusw1,postinc1
 10564  01A80E  006F FF8F FFE6     	movff	plusw1,postinc1
 10565  01A814  ECC5  F0B5         	call	_memset	;wreg free
 10566  01A818                     l1591:
 10567                           
 10568                           ; _ringBufS_flush: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3
      +                          , argsize = 3, vargsize = 0
 10569  01A818  52E5               	movf	postdec1,f,c
 10570  01A81A  52E5               	movf	postdec1,f,c
 10571  01A81C  52E5               	movf	postdec1,f,c
 10572  01A81E  0012               	return		;funcret
 10573  01A820                     __end_of_ringBufS_flush:
 10574                           	opt callstack 0
 10575                           
 10576 ;; *************** function _memset *****************
 10577 ;; Defined at:
 10578 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/memset.c"
 10579 ;; Parameters:    Size  Location     Type
 10580 ;;  dest            2  [STACK] PTR void 
 10581 ;;		 -> ring_buf2(67), ring_buf1(67), 
 10582 ;;  c               2  [STACK] int 
 10583 ;;  n               2  [STACK] unsigned int 
 10584 ;; Auto vars:     Size  Location     Type
 10585 ;;  s               2  [STACK] PTR unsigned char 
 10586 ;;		 -> ring_buf2(67), ring_buf1(67), 
 10587 ;;  k               2  [STACK] unsigned int 
 10588 ;; Return value:  Size  Location     Type
 10589 ;;                  2  [STACK] PTR void 
 10590 ;; Registers used:
 10591 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
 10592 ;; Tracked objects:
 10593 ;;		On entry : 0/0
 10594 ;;		On exit  : 0/0
 10595 ;;		Unchanged: 0/0
 10596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10597 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10598 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10599 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10600 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10601 ;;Total ram usage:        0 bytes
 10602 ;; Hardware stack levels used:    1
 10603 ;; Hardware stack levels required when called:   15
 10604 ;; This function calls:
 10605 ;;		Nothing
 10606 ;; This function is called by:
 10607 ;;		_ringBufS_init
 10608 ;;		_ringBufS_flush
 10609 ;; This function uses a reentrant model
 10610 ;;
 10611                           
 10612                           	psect	text42
 10613  016B8A                     __ptext42:
 10614                           	opt callstack 0
 10615  016B8A                     _memset:
 10616                           	opt callstack 0
 10617                           
 10618                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10619  016B8A  52E6               	movf	postinc1,f,c
 10620  016B8C  52E6               	movf	postinc1,f,c
 10621  016B8E  52E6               	movf	postinc1,f,c
 10622  016B90  52E6               	movf	postinc1,f,c
 10623                           
 10624                           ;stkvar	_dest @ sp[(-4)+-2]
 10625                           
 10626                           ;incstack = 0
 10627  016B92  0EFA               	movlw	-6
 10628  016B94  006F FF8C  F00B    	movff	plusw1,btemp+10
 10629  016B9A  0EFB               	movlw	-5
 10630  016B9C  006F FF8C  F00C    	movff	plusw1,btemp+11
 10631                           
 10632                           ;stkvar	_s @ sp[(-4)+0]
 10633  016BA2  0EFD               	movlw	-3
 10634  016BA4  0060  F033  FFE3   	movff	btemp+11,plusw1
 10635  016BAA  0EFC               	movlw	-4
 10636  016BAC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 10637                           
 10638                           ;stkvar	_n @ sp[(-4)+-6]
 10639  016BB2  0EF6               	movlw	-10
 10640  016BB4  006F FF8C  F001    	movff	plusw1,btemp
 10641  016BBA  0EF7               	movlw	-9
 10642  016BBC  50E3               	movf	plusw1,w,c
 10643  016BBE  1001               	iorwf	btemp^0,w,c
 10644  016BC0  B4D8               	btfsc	status,2,c
 10645  016BC2  D154               	goto	u10810
 10646                           
 10647                           ;stkvar	_c @ sp[(-4)+-4]
 10648                           ;stkvar	_s @ sp[(-4)+0]
 10649  016BC4  0EFC               	movlw	-4
 10650  016BC6  006F FF8F FFD9     	movff	plusw1,fsr2l
 10651  016BCC  0EFD               	movlw	-3
 10652  016BCE  006F FF8F FFDA     	movff	plusw1,fsr2h
 10653  016BD4  0EF8               	movlw	-8
 10654  016BD6  006F FF8F FFDF     	movff	plusw1,indf2
 10655                           
 10656                           ;stkvar	_c @ sp[(-4)+-4]
 10657                           ;stkvar	_n @ sp[(-4)+-6]
 10658                           ;stkvar	_s @ sp[(-4)+0]
 10659  016BDC  0EFC               	movlw	-4
 10660  016BDE  006F FF8C  F00B    	movff	plusw1,btemp+10
 10661  016BE4  0EFD               	movlw	-3
 10662  016BE6  006F FF8C  F00C    	movff	plusw1,btemp+11
 10663  016BEC  0EF6               	movlw	-10
 10664  016BEE  50E3               	movf	plusw1,w,c
 10665  016BF0  260B               	addwf	(btemp+10)^0,f,c
 10666  016BF2  0EF7               	movlw	-9
 10667  016BF4  50E3               	movf	plusw1,w,c
 10668  016BF6  220C               	addwfc	(btemp+11)^0,f,c
 10669  016BF8  0EFF               	movlw	255
 10670  016BFA  240B               	addwf	(btemp+10)^0,w,c
 10671  016BFC  6ED9               	movwf	fsr2l,c
 10672  016BFE  0EFF               	movlw	255
 10673  016C00  200C               	addwfc	(btemp+11)^0,w,c
 10674  016C02  6EDA               	movwf	fsr2h,c
 10675  016C04  0EF8               	movlw	-8
 10676  016C06  006F FF8F FFDF     	movff	plusw1,indf2
 10677                           
 10678                           ;stkvar	_n @ sp[(-4)+-6]
 10679  016C0C  0EF7               	movlw	-9
 10680  016C0E  50E3               	movf	plusw1,w,c
 10681  016C10  E108               	bnz	l11703
 10682  016C12  0EF6               	movlw	-10
 10683  016C14  006F FF8C  F001    	movff	plusw1,btemp
 10684  016C1A  0E03               	movlw	3
 10685  016C1C  5E01               	subwf	btemp^0,f,c
 10686  016C1E  A0D8               	btfss	status,0,c
 10687  016C20  D125               	goto	u10810
 10688  016C22                     l11703:
 10689                           
 10690                           ;stkvar	_c @ sp[(-4)+-4]
 10691                           ;stkvar	_s @ sp[(-4)+0]
 10692  016C22  0EFC               	movlw	-4
 10693  016C24  006F FF8C  F00B    	movff	plusw1,btemp+10
 10694  016C2A  0EFD               	movlw	-3
 10695  016C2C  006F FF8C  F00C    	movff	plusw1,btemp+11
 10696  016C32  0E01               	movlw	1
 10697  016C34  240B               	addwf	(btemp+10)^0,w,c
 10698  016C36  6ED9               	movwf	fsr2l,c
 10699  016C38  0E00               	movlw	0
 10700  016C3A  200C               	addwfc	(btemp+11)^0,w,c
 10701  016C3C  6EDA               	movwf	fsr2h,c
 10702  016C3E  0EF8               	movlw	-8
 10703  016C40  006F FF8F FFDF     	movff	plusw1,indf2
 10704                           
 10705                           ;stkvar	_c @ sp[(-4)+-4]
 10706                           ;stkvar	_s @ sp[(-4)+0]
 10707  016C46  0EFC               	movlw	-4
 10708  016C48  006F FF8C  F00B    	movff	plusw1,btemp+10
 10709  016C4E  0EFD               	movlw	-3
 10710  016C50  006F FF8C  F00C    	movff	plusw1,btemp+11
 10711  016C56  0E02               	movlw	2
 10712  016C58  240B               	addwf	(btemp+10)^0,w,c
 10713  016C5A  6ED9               	movwf	fsr2l,c
 10714  016C5C  0E00               	movlw	0
 10715  016C5E  200C               	addwfc	(btemp+11)^0,w,c
 10716  016C60  6EDA               	movwf	fsr2h,c
 10717  016C62  0EF8               	movlw	-8
 10718  016C64  006F FF8F FFDF     	movff	plusw1,indf2
 10719                           
 10720                           ;stkvar	_c @ sp[(-4)+-4]
 10721                           ;stkvar	_n @ sp[(-4)+-6]
 10722                           ;stkvar	_s @ sp[(-4)+0]
 10723  016C6A  0EFC               	movlw	-4
 10724  016C6C  006F FF8C  F00B    	movff	plusw1,btemp+10
 10725  016C72  0EFD               	movlw	-3
 10726  016C74  006F FF8C  F00C    	movff	plusw1,btemp+11
 10727  016C7A  0EF6               	movlw	-10
 10728  016C7C  50E3               	movf	plusw1,w,c
 10729  016C7E  260B               	addwf	(btemp+10)^0,f,c
 10730  016C80  0EF7               	movlw	-9
 10731  016C82  50E3               	movf	plusw1,w,c
 10732  016C84  220C               	addwfc	(btemp+11)^0,f,c
 10733  016C86  0EFE               	movlw	254
 10734  016C88  240B               	addwf	(btemp+10)^0,w,c
 10735  016C8A  6ED9               	movwf	fsr2l,c
 10736  016C8C  0EFF               	movlw	255
 10737  016C8E  200C               	addwfc	(btemp+11)^0,w,c
 10738  016C90  6EDA               	movwf	fsr2h,c
 10739  016C92  0EF8               	movlw	-8
 10740  016C94  006F FF8F FFDF     	movff	plusw1,indf2
 10741                           
 10742                           ;stkvar	_c @ sp[(-4)+-4]
 10743                           ;stkvar	_n @ sp[(-4)+-6]
 10744                           ;stkvar	_s @ sp[(-4)+0]
 10745  016C9A  0EFC               	movlw	-4
 10746  016C9C  006F FF8C  F00B    	movff	plusw1,btemp+10
 10747  016CA2  0EFD               	movlw	-3
 10748  016CA4  006F FF8C  F00C    	movff	plusw1,btemp+11
 10749  016CAA  0EF6               	movlw	-10
 10750  016CAC  50E3               	movf	plusw1,w,c
 10751  016CAE  260B               	addwf	(btemp+10)^0,f,c
 10752  016CB0  0EF7               	movlw	-9
 10753  016CB2  50E3               	movf	plusw1,w,c
 10754  016CB4  220C               	addwfc	(btemp+11)^0,f,c
 10755  016CB6  0EFD               	movlw	253
 10756  016CB8  240B               	addwf	(btemp+10)^0,w,c
 10757  016CBA  6ED9               	movwf	fsr2l,c
 10758  016CBC  0EFF               	movlw	255
 10759  016CBE  200C               	addwfc	(btemp+11)^0,w,c
 10760  016CC0  6EDA               	movwf	fsr2h,c
 10761  016CC2  0EF8               	movlw	-8
 10762  016CC4  006F FF8F FFDF     	movff	plusw1,indf2
 10763                           
 10764                           ;stkvar	_n @ sp[(-4)+-6]
 10765  016CCA  0EF7               	movlw	-9
 10766  016CCC  50E3               	movf	plusw1,w,c
 10767  016CCE  E108               	bnz	l11709
 10768  016CD0  0EF6               	movlw	-10
 10769  016CD2  006F FF8C  F001    	movff	plusw1,btemp
 10770  016CD8  0E07               	movlw	7
 10771  016CDA  5E01               	subwf	btemp^0,f,c
 10772  016CDC  A0D8               	btfss	status,0,c
 10773  016CDE  D0C6               	goto	u10810
 10774  016CE0                     l11709:
 10775                           
 10776                           ;stkvar	_c @ sp[(-4)+-4]
 10777                           ;stkvar	_s @ sp[(-4)+0]
 10778  016CE0  0EFC               	movlw	-4
 10779  016CE2  006F FF8C  F00B    	movff	plusw1,btemp+10
 10780  016CE8  0EFD               	movlw	-3
 10781  016CEA  006F FF8C  F00C    	movff	plusw1,btemp+11
 10782  016CF0  0E03               	movlw	3
 10783  016CF2  240B               	addwf	(btemp+10)^0,w,c
 10784  016CF4  6ED9               	movwf	fsr2l,c
 10785  016CF6  0E00               	movlw	0
 10786  016CF8  200C               	addwfc	(btemp+11)^0,w,c
 10787  016CFA  6EDA               	movwf	fsr2h,c
 10788  016CFC  0EF8               	movlw	-8
 10789  016CFE  006F FF8F FFDF     	movff	plusw1,indf2
 10790                           
 10791                           ;stkvar	_c @ sp[(-4)+-4]
 10792                           ;stkvar	_n @ sp[(-4)+-6]
 10793                           ;stkvar	_s @ sp[(-4)+0]
 10794  016D04  0EFC               	movlw	-4
 10795  016D06  006F FF8C  F00B    	movff	plusw1,btemp+10
 10796  016D0C  0EFD               	movlw	-3
 10797  016D0E  006F FF8C  F00C    	movff	plusw1,btemp+11
 10798  016D14  0EF6               	movlw	-10
 10799  016D16  50E3               	movf	plusw1,w,c
 10800  016D18  260B               	addwf	(btemp+10)^0,f,c
 10801  016D1A  0EF7               	movlw	-9
 10802  016D1C  50E3               	movf	plusw1,w,c
 10803  016D1E  220C               	addwfc	(btemp+11)^0,f,c
 10804  016D20  0EFC               	movlw	252
 10805  016D22  240B               	addwf	(btemp+10)^0,w,c
 10806  016D24  6ED9               	movwf	fsr2l,c
 10807  016D26  0EFF               	movlw	255
 10808  016D28  200C               	addwfc	(btemp+11)^0,w,c
 10809  016D2A  6EDA               	movwf	fsr2h,c
 10810  016D2C  0EF8               	movlw	-8
 10811  016D2E  006F FF8F FFDF     	movff	plusw1,indf2
 10812                           
 10813                           ;stkvar	_n @ sp[(-4)+-6]
 10814  016D34  0EF7               	movlw	-9
 10815  016D36  50E3               	movf	plusw1,w,c
 10816  016D38  E108               	bnz	l11715
 10817  016D3A  0EF6               	movlw	-10
 10818  016D3C  006F FF8C  F001    	movff	plusw1,btemp
 10819  016D42  0E09               	movlw	9
 10820  016D44  5E01               	subwf	btemp^0,f,c
 10821  016D46  A0D8               	btfss	status,0,c
 10822  016D48  D091               	goto	u10810
 10823  016D4A                     l11715:
 10824                           
 10825                           ;stkvar	_s @ sp[(-4)+0]
 10826  016D4A  0EFC               	movlw	-4
 10827  016D4C  006F FF8C  F00B    	movff	plusw1,btemp+10
 10828  016D52  1E0B               	comf	(btemp+10)^0,f,c
 10829  016D54  0EFD               	movlw	-3
 10830  016D56  006F FF8C  F00C    	movff	plusw1,btemp+11
 10831  016D5C  1E0C               	comf	(btemp+11)^0,f,c
 10832  016D5E  2A0B               	incf	(btemp+10)^0,f,c
 10833  016D60  B4D8               	btfsc	status,2,c
 10834  016D62  2A0C               	incf	(btemp+11)^0,f,c
 10835  016D64  0E03               	movlw	3
 10836  016D66  160B               	andwf	(btemp+10)^0,f,c
 10837  016D68  0E00               	movlw	0
 10838  016D6A  160C               	andwf	(btemp+11)^0,f,c
 10839                           
 10840                           ;stkvar	_k @ sp[(-4)+2]
 10841  016D6C  0EFE               	movlw	-2
 10842  016D6E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 10843  016D74  0EFF               	movlw	-1
 10844  016D76  0060  F033  FFE3   	movff	btemp+11,plusw1
 10845                           
 10846                           ;stkvar	_k @ sp[(-4)+2]
 10847                           ;stkvar	_s @ sp[(-4)+0]
 10848  016D7C  0EFC               	movlw	-4
 10849  016D7E  50E3               	movf	plusw1,w,c
 10850  016D80  6E01               	movwf	btemp^0,c
 10851  016D82  0EFE               	movlw	-2
 10852  016D84  50E3               	movf	plusw1,w,c
 10853  016D86  2601               	addwf	btemp^0,f,c
 10854  016D88  0EFC               	movlw	-4
 10855  016D8A  0060  F007  FFE3   	movff	btemp,plusw1
 10856  016D90  0EFD               	movlw	-3
 10857  016D92  50E3               	movf	plusw1,w,c
 10858  016D94  6E01               	movwf	btemp^0,c
 10859  016D96  0EFF               	movlw	-1
 10860  016D98  50E3               	movf	plusw1,w,c
 10861  016D9A  2201               	addwfc	btemp^0,f,c
 10862  016D9C  0EFD               	movlw	-3
 10863  016D9E  0060  F007  FFE3   	movff	btemp,plusw1
 10864                           
 10865                           ;stkvar	_k @ sp[(-4)+2]
 10866                           ;stkvar	_n @ sp[(-4)+-6]
 10867  016DA4  0EF6               	movlw	-10
 10868  016DA6  50E3               	movf	plusw1,w,c
 10869  016DA8  6E01               	movwf	btemp^0,c
 10870  016DAA  0EFE               	movlw	-2
 10871  016DAC  50E3               	movf	plusw1,w,c
 10872  016DAE  5E01               	subwf	btemp^0,f,c
 10873  016DB0  0EF6               	movlw	-10
 10874  016DB2  0060  F007  FFE3   	movff	btemp,plusw1
 10875  016DB8  0EF7               	movlw	-9
 10876  016DBA  50E3               	movf	plusw1,w,c
 10877  016DBC  6E01               	movwf	btemp^0,c
 10878  016DBE  0EFF               	movlw	-1
 10879  016DC0  50E3               	movf	plusw1,w,c
 10880  016DC2  5A01               	subwfb	btemp^0,f,c
 10881  016DC4  0EF7               	movlw	-9
 10882  016DC6  0060  F007  FFE3   	movff	btemp,plusw1
 10883  016DCC  0EFC               	movlw	252
 10884  016DCE  6E0B               	movwf	(btemp+10)^0,c
 10885  016DD0  0EFF               	movlw	255
 10886  016DD2  6E0C               	movwf	(btemp+11)^0,c
 10887                           
 10888                           ;stkvar	_n @ sp[(-4)+-6]
 10889  016DD4  0EF6               	movlw	-10
 10890  016DD6  006F FF8C  F001    	movff	plusw1,btemp
 10891  016DDC  500B               	movf	(btemp+10)^0,w,c
 10892  016DDE  1601               	andwf	btemp^0,f,c
 10893  016DE0  0EF6               	movlw	-10
 10894  016DE2  0060  F007  FFE3   	movff	btemp,plusw1
 10895  016DE8  0EF7               	movlw	-9
 10896  016DEA  006F FF8C  F001    	movff	plusw1,btemp
 10897  016DF0  500C               	movf	(btemp+11)^0,w,c
 10898  016DF2  1601               	andwf	btemp^0,f,c
 10899  016DF4  0EF7               	movlw	-9
 10900  016DF6  D02E               	goto	L9
 10901  016DF8                     l11723:
 10902                           
 10903                           ;stkvar	_c @ sp[(-4)+-4]
 10904                           ;stkvar	_s @ sp[(-4)+0]
 10905  016DF8  0EFC               	movlw	-4
 10906  016DFA  006F FF8F FFD9     	movff	plusw1,fsr2l
 10907  016E00  0EFD               	movlw	-3
 10908  016E02  006F FF8F FFDA     	movff	plusw1,fsr2h
 10909  016E08  0EF8               	movlw	-8
 10910  016E0A  006F FF8F FFDF     	movff	plusw1,indf2
 10911                           
 10912                           ;stkvar	_n @ sp[(-4)+-6]
 10913  016E10  0EF6               	movlw	-10
 10914  016E12  006F FF8C  F001    	movff	plusw1,btemp
 10915  016E18  0E01               	movlw	1
 10916  016E1A  5E01               	subwf	btemp^0,f,c
 10917  016E1C  0EF6               	movlw	-10
 10918  016E1E  0060  F007  FFE3   	movff	btemp,plusw1
 10919  016E24  0EF7               	movlw	-9
 10920  016E26  006F FF8C  F001    	movff	plusw1,btemp
 10921  016E2C  0E00               	movlw	0
 10922  016E2E  5A01               	subwfb	btemp^0,f,c
 10923  016E30  0EF7               	movlw	-9
 10924  016E32  0060  F007  FFE3   	movff	btemp,plusw1
 10925                           
 10926                           ;stkvar	_s @ sp[(-4)+0]
 10927  016E38  0EFC               	movlw	-4
 10928  016E3A  50E3               	movf	plusw1,w,c
 10929  016E3C  0F01               	addlw	1
 10930  016E3E  6E01               	movwf	btemp^0,c
 10931  016E40  0EFC               	movlw	-4
 10932  016E42  0060  F007  FFE3   	movff	btemp,plusw1
 10933  016E48  6A01               	clrf	btemp^0,c
 10934  016E4A  0EFD               	movlw	-3
 10935  016E4C  50E3               	movf	plusw1,w,c
 10936  016E4E  2001               	addwfc	btemp^0,w,c
 10937  016E50  6E01               	movwf	btemp^0,c
 10938  016E52  0EFD               	movlw	-3
 10939  016E54                     L9:
 10940  016E54  0060  F007  FFE3   	movff	btemp,plusw1
 10941                           
 10942                           ;stkvar	_n @ sp[(-4)+-6]
 10943  016E5A  0EF6               	movlw	-10
 10944  016E5C  006F FF8C  F001    	movff	plusw1,btemp
 10945  016E62  0EF7               	movlw	-9
 10946  016E64  50E3               	movf	plusw1,w,c
 10947  016E66  1001               	iorwf	btemp^0,w,c
 10948  016E68  A4D8               	btfss	status,2,c
 10949  016E6A  D7C6               	goto	l11723
 10950  016E6C                     u10810:
 10951                           
 10952                           ; _memset: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsiz
      +                          e = 6, vargsize = 0
 10953  016E6C  0EF6               	movlw	246
 10954  016E6E  26E1               	addwf	fsr1l,f,c
 10955  016E70  0EFF               	movlw	255
 10956  016E72  22E2               	addwfc	fsr1h,f,c
 10957  016E74  0012               	return		;funcret
 10958  016E76                     __end_of_memset:
 10959                           	opt callstack 0
 10960                           
 10961 ;; *************** function _printf *****************
 10962 ;; Defined at:
 10963 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/printf.c"
 10964 ;; Parameters:    Size  Location     Type
 10965 ;;  fmt             2  [STACK] PTR const unsigned char 
 10966 ;;		 -> STR_45(3), STR_44(3), STR_43(3), 
 10967 ;; Auto vars:     Size  Location     Type
 10968 ;;  ap              2  [STACK] PTR void [1]
 10969 ;;		 -> ?_printf(2), ?_sprintf(2), 
 10970 ;;  ret             2    0        int 
 10971 ;; Return value:  Size  Location     Type
 10972 ;;                  2  [STACK] int 
 10973 ;; Registers used:
 10974 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 10975 ;; Tracked objects:
 10976 ;;		On entry : 3F/3B
 10977 ;;		On exit  : 3F/0
 10978 ;;		Unchanged: 0/0
 10979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10980 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10981 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10982 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10983 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10984 ;;Total ram usage:        0 bytes
 10985 ;; Hardware stack levels used:    1
 10986 ;; Hardware stack levels required when called:   23
 10987 ;; This function calls:
 10988 ;;		_vfprintf
 10989 ;; This function is called by:
 10990 ;;		_eaDogM_WriteString
 10991 ;;		_send_lcd_cmd_dma
 10992 ;; This function uses a reentrant model
 10993 ;;
 10994                           
 10995                           	psect	text43
 10996  01AD44                     __ptext43:
 10997                           	opt callstack 0
 10998  01AD44                     _printf:
 10999                           	opt callstack 0
 11000                           
 11001                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11002  01AD44  52E6               	movf	postinc1,f,c
 11003  01AD46  52E6               	movf	postinc1,f,c
 11004                           
 11005                           ;stkvar	?_printf @ sp[(-2)+-3]
 11006                           
 11007                           ;incstack = 0
 11008  01AD48  0EFB               	movlw	251
 11009  01AD4A  24E1               	addwf	fsr1l,w,c
 11010  01AD4C  6E0B               	movwf	(btemp+10)^0,c
 11011  01AD4E  0EFF               	movlw	255
 11012  01AD50  20E2               	addwfc	fsr1h,w,c
 11013  01AD52  6E0C               	movwf	(btemp+11)^0,c
 11014                           
 11015                           ;stkvar	_ap @ sp[(-2)+0]
 11016  01AD54  0EFF               	movlw	-1
 11017  01AD56  0060  F033  FFE3   	movff	btemp+11,plusw1
 11018  01AD5C  0EFE               	movlw	-2
 11019  01AD5E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11020                           
 11021                           ;stkvar	_ap @ sp[(-2)+0]
 11022  01AD64  0EFE               	movlw	254
 11023  01AD66  24E1               	addwf	fsr1l,w,c
 11024  01AD68  6E01               	movwf	btemp^0,c
 11025  01AD6A  0EFF               	movlw	255
 11026  01AD6C  20E2               	addwfc	fsr1h,w,c
 11027  01AD6E  6E02               	movwf	(btemp+1)^0,c
 11028  01AD70  0060  F007  FFE6   	movff	btemp,postinc1
 11029  01AD76  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11030                           
 11031                           ;stkvar	_fmt @ sp[(-4)+-3]
 11032  01AD7C  0EF9               	movlw	-7
 11033  01AD7E  006F FF8F FFE6     	movff	plusw1,postinc1
 11034  01AD84  006F FF8F FFE6     	movff	plusw1,postinc1
 11035  01AD8A  0E00               	movlw	0
 11036  01AD8C  6EE6               	movwf	postinc1,c
 11037  01AD8E  0E00               	movlw	0
 11038  01AD90  6EE6               	movwf	postinc1,c
 11039  01AD92  ECE2  F0D1         	call	_vfprintf	;wreg free
 11040                           
 11041                           ; BSR set to: 0
 11042                           ; _printf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 2, vargsize = 0
 11043  01AD96  52E5               	movf	postdec1,f,c
 11044  01AD98  52E5               	movf	postdec1,f,c
 11045  01AD9A  52E5               	movf	postdec1,f,c
 11046  01AD9C  50E7               	movf	indf1,w,c
 11047  01AD9E  5EE1               	subwf	fsr1l,f,c
 11048  01ADA0  0E00               	movlw	0
 11049  01ADA2  5AE2               	subwfb	fsr1h,f,c
 11050  01ADA4  0012               	return		;funcret
 11051  01ADA6                     __end_of_printf:
 11052                           	opt callstack 0
 11053                           
 11054 ;; *************** function _vfprintf *****************
 11055 ;; Defined at:
 11056 ;;		line 1368 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 11057 ;; Parameters:    Size  Location     Type
 11058 ;;  fp              2  [STACK] PTR struct _IO_FILE
 11059 ;;		 -> f(6), NULL(0), 
 11060 ;;  fmt             2  [STACK] PTR const unsigned char 
 11061 ;;		 -> STR_65(103), STR_63(3), STR_62(3), STR_61(19), 
 11062 ;;		 -> STR_60(19), STR_59(19), STR_58(19), STR_57(19), 
 11063 ;;		 -> STR_56(19), STR_55(24), STR_54(15), STR_53(15), 
 11064 ;;		 -> STR_52(15), STR_51(10), STR_50(10), STR_49(19), 
 11065 ;;		 -> STR_48(19), STR_45(3), STR_44(3), STR_43(3), 
 11066 ;;		 -> STR_42(17), STR_41(16), STR_40(16), STR_39(20), 
 11067 ;;		 -> STR_38(20), STR_37(20), STR_36(20), STR_35(20), 
 11068 ;;		 -> STR_34(20), STR_33(19), STR_32(19), STR_31(19), 
 11069 ;;		 -> STR_30(19), STR_29(19), STR_28(19), STR_27(19), 
 11070 ;;		 -> STR_26(19), STR_25(20), STR_24(19), STR_23(19), 
 11071 ;;		 -> STR_22(20), STR_21(17), STR_20(16), STR_19(16), 
 11072 ;;		 -> STR_18(26), STR_17(26), STR_16(22), STR_15(21), 
 11073 ;;		 -> STR_14(17), STR_13(17), STR_12(17), STR_11(22), 
 11074 ;;		 -> STR_10(22), STR_9(23), STR_8(18), STR_7(17), 
 11075 ;;		 -> STR_6(17), STR_5(17), STR_4(17), STR_2(15), 
 11076 ;;		 -> STR_1(17), 
 11077 ;;  ap              2  [STACK] PTR PTR void 
 11078 ;;		 -> ap(2), ap(2), 
 11079 ;; Auto vars:     Size  Location     Type
 11080 ;;  cfmt            2  [STACK] PTR unsigned char 
 11081 ;;		 -> STR_65(103), STR_63(3), STR_62(3), STR_61(19), 
 11082 ;;		 -> STR_60(19), STR_59(19), STR_58(19), STR_57(19), 
 11083 ;;		 -> STR_56(19), STR_55(24), STR_54(15), STR_53(15), 
 11084 ;;		 -> STR_52(15), STR_51(10), STR_50(10), STR_49(19), 
 11085 ;;		 -> STR_48(19), STR_45(3), STR_44(3), STR_43(3), 
 11086 ;;		 -> STR_42(17), STR_41(16), STR_40(16), STR_39(20), 
 11087 ;;		 -> STR_38(20), STR_37(20), STR_36(20), STR_35(20), 
 11088 ;;		 -> STR_34(20), STR_33(19), STR_32(19), STR_31(19), 
 11089 ;;		 -> STR_30(19), STR_29(19), STR_28(19), STR_27(19), 
 11090 ;;		 -> STR_26(19), STR_25(20), STR_24(19), STR_23(19), 
 11091 ;;		 -> STR_22(20), STR_21(17), STR_20(16), STR_19(16), 
 11092 ;;		 -> STR_18(26), STR_17(26), STR_16(22), STR_15(21), 
 11093 ;;		 -> STR_14(17), STR_13(17), STR_12(17), STR_11(22), 
 11094 ;;		 -> STR_10(22), STR_9(23), STR_8(18), STR_7(17), 
 11095 ;;		 -> STR_6(17), STR_5(17), STR_4(17), STR_2(15), 
 11096 ;;		 -> STR_1(17), 
 11097 ;; Return value:  Size  Location     Type
 11098 ;;                  2  [STACK] int 
 11099 ;; Registers used:
 11100 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 11101 ;; Tracked objects:
 11102 ;;		On entry : 0/0
 11103 ;;		On exit  : 3F/0
 11104 ;;		Unchanged: 0/0
 11105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11106 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11107 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11108 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11109 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11110 ;;Total ram usage:        0 bytes
 11111 ;; Hardware stack levels used:    1
 11112 ;; Hardware stack levels required when called:   22
 11113 ;; This function calls:
 11114 ;;		_vfpfcnvrt
 11115 ;; This function is called by:
 11116 ;;		_sprintf
 11117 ;;		_printf
 11118 ;; This function uses a reentrant model
 11119 ;;
 11120                           
 11121                           	psect	text44
 11122  01A3C4                     __ptext44:
 11123                           	opt callstack 0
 11124  01A3C4                     _vfprintf:
 11125                           	opt callstack 0
 11126                           
 11127                           ; BSR set to: 0
 11128                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11129  01A3C4  52E6               	movf	postinc1,f,c
 11130  01A3C6  52E6               	movf	postinc1,f,c
 11131                           
 11132                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
 11133                           ;stkvar	_fmt @ sp[(-2)+-4]
 11134                           
 11135                           ;incstack = 0
 11136 ;; hardware stack exceeded
 11137  01A3C8  0EFA               	movlw	-6
 11138  01A3CA  006F FF8C  F00B    	movff	plusw1,btemp+10
 11139  01A3D0  0EFB               	movlw	-5
 11140  01A3D2  006F FF8C  F00C    	movff	plusw1,btemp+11
 11141                           
 11142                           ;stkvar	_cfmt @ sp[(-2)+0]
 11143  01A3D8  0EFF               	movlw	-1
 11144  01A3DA  0060  F033  FFE3   	movff	btemp+11,plusw1
 11145  01A3E0  0EFE               	movlw	-2
 11146  01A3E2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11147                           
 11148                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
 11149  01A3E8  0100               	movlb	0	; () banked
 11150  01A3EA  6BC0               	clrf	_nout& (0+255),b
 11151  01A3EC  6BC1               	clrf	(_nout+1)& (0+255),b
 11152                           
 11153                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 11154  01A3EE  D021               	goto	l12547
 11155  01A3F0                     l12545:
 11156                           
 11157                           ; BSR set to: 0
 11158                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
 11159                           ;stkvar	_ap @ sp[(-2)+-6]
 11160  01A3F0  0EF8               	movlw	-8
 11161  01A3F2  006F FF8F FFE6     	movff	plusw1,postinc1
 11162  01A3F8  006F FF8F FFE6     	movff	plusw1,postinc1
 11163                           
 11164                           ;stkvar	_cfmt @ sp[(-4)+0]
 11165  01A3FE  0EFC               	movlw	252
 11166  01A400  24E1               	addwf	fsr1l,w,c
 11167  01A402  6E01               	movwf	btemp^0,c
 11168  01A404  0EFF               	movlw	255
 11169  01A406  20E2               	addwfc	fsr1h,w,c
 11170  01A408  6E02               	movwf	(btemp+1)^0,c
 11171  01A40A  0060  F007  FFE6   	movff	btemp,postinc1
 11172  01A410  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11173                           
 11174                           ;stkvar	_fp @ sp[(-6)+-2]
 11175  01A416  0EF8               	movlw	-8
 11176  01A418  006F FF8F FFE6     	movff	plusw1,postinc1
 11177  01A41E  006F FF8F FFE6     	movff	plusw1,postinc1
 11178  01A424  ECCA  F091         	call	_vfpfcnvrt	;wreg free
 11179  01A428  5001               	movf	btemp^0,w,c
 11180  01A42A  0100               	movlb	0	; () banked
 11181  01A42C  27C0               	addwf	_nout& (0+255),f,b
 11182  01A42E  5002               	movf	(btemp+1)^0,w,c
 11183  01A430  23C1               	addwfc	(_nout+1)& (0+255),f,b
 11184  01A432                     l12547:
 11185                           
 11186                           ; BSR set to: 0
 11187                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 11188                           ;stkvar	_cfmt @ sp[(-2)+0]
 11189  01A432  50E1               	movf	fsr1l,w,c
 11190  01A434  0FFE               	addlw	-2
 11191  01A436  6ED9               	movwf	fsr2l,c
 11192  01A438  50E2               	movf	fsr1h,w,c
 11193  01A43A  6EDA               	movwf	fsr2h,c
 11194  01A43C  0EFF               	movlw	255
 11195  01A43E  22DA               	addwfc	fsr2h,f,c
 11196  01A440  006F FF7B FFF6     	movff	postinc2,tblptrl
 11197  01A446  006F FF77 FFF7     	movff	postdec2,tblptrh
 11198  01A44C                     	if	0	;tblptru may be non-zero
 11199  01A44C                     	endif
 11200  01A44C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11201  01A44C  0E00               	movlw	low (__mediumconst shr (0+16))
 11202  01A44E  6EF8               	movwf	tblptru,c
 11203  01A450                     	endif
 11204  01A450  0008               	tblrd		*
 11205  01A452  50F5               	movf	tablat,w,c
 11206  01A454  0900               	iorlw	0
 11207  01A456  A4D8               	btfss	status,2,c
 11208  01A458  D7CB               	goto	l12545
 11209                           
 11210                           ; BSR set to: 0
 11211                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1378:     return nout;
 11212  01A45A  0060  F300  F001   	movff	_nout,btemp
 11213  01A460  0060  F304  F002   	movff	_nout+1,btemp+1
 11214                           
 11215                           ; BSR set to: 0
 11216                           ; _vfprintf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, args
      +                          ize = 6, vargsize = 0
 11217  01A466  0EF8               	movlw	248
 11218  01A468  26E1               	addwf	fsr1l,f,c
 11219  01A46A  0EFF               	movlw	255
 11220  01A46C  22E2               	addwfc	fsr1h,f,c
 11221  01A46E  0012               	return		;funcret
 11222  01A470                     __end_of_vfprintf:
 11223                           	opt callstack 0
 11224                           
 11225 ;; *************** function _vfpfcnvrt *****************
 11226 ;; Defined at:
 11227 ;;		line 670 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 11228 ;; Parameters:    Size  Location     Type
 11229 ;;  fp              2  [STACK] PTR struct _IO_FILE
 11230 ;;		 -> f(6), NULL(0), 
 11231 ;;  fmt             2  [STACK] PTR PTR unsigned char 
 11232 ;;		 -> cfmt(2), 
 11233 ;;  ap              2  [STACK] PTR PTR void 
 11234 ;;		 -> ap(2), ap(2), 
 11235 ;; Auto vars:     Size  Location     Type
 11236 ;;  llu             8  [STACK] unsigned long long 
 11237 ;;  ll              8  [STACK] long long 
 11238 ;;  f               4  [STACK] long long 
 11239 ;;  ct              3  [STACK] unsigned char [3]
 11240 ;;  vp              3    0        PTR void 
 11241 ;;  cp              2  [STACK] PTR unsigned char 
 11242 ;;		 -> ?_printf(2), ?_sprintf(2), STR_47(9), STR_46(12), 
 11243 ;;		 -> D.lcd(480), D(482), T(144), STR_3(7), 
 11244 ;;		 -> V(191), 
 11245 ;;  i               2    0        int 
 11246 ;;  done            2    0        int 
 11247 ;;  c               1  [STACK] unsigned char 
 11248 ;; Return value:  Size  Location     Type
 11249 ;;                  2  [STACK] int 
 11250 ;; Registers used:
 11251 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 11252 ;; Tracked objects:
 11253 ;;		On entry : 0/0
 11254 ;;		On exit  : 0/0
 11255 ;;		Unchanged: 0/0
 11256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11257 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11258 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11259 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11260 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11261 ;;Total ram usage:        0 bytes
 11262 ;; Hardware stack levels used:    1
 11263 ;; Hardware stack levels required when called:   21
 11264 ;; This function calls:
 11265 ;;		_atoi
 11266 ;;		_ctoa
 11267 ;;		_dtoa
 11268 ;;		_efgtoa
 11269 ;;		_fputc
 11270 ;;		_isdigit
 11271 ;;		_isupper
 11272 ;;		_stoa
 11273 ;;		_strncmp
 11274 ;;		_tolower
 11275 ;;		_utoa
 11276 ;;		_xtoa
 11277 ;; This function is called by:
 11278 ;;		_vfprintf
 11279 ;; This function uses a reentrant model
 11280 ;;
 11281                           
 11282                           	psect	text45
 11283  012394                     __ptext45:
 11284                           	opt callstack 0
 11285  012394                     _vfpfcnvrt:
 11286                           	opt callstack 0
 11287                           
 11288                           ; BSR set to: 0
 11289                           ; autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 11290  012394  0E20               	movlw	32
 11291  012396  26E1               	addwf	fsr1l,f,c
 11292  012398  0E00               	movlw	0
 11293  01239A  22E2               	addwfc	fsr1h,f,c
 11294                           
 11295                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
 11296                           ;stkvar	_fmt @ sp[(-32)+-4]
 11297                           
 11298                           ;incstack = 0
 11299 ;; hardware stack exceeded
 11300  01239C  0EDC               	movlw	-36
 11301  01239E  006F FF8F FFD9     	movff	plusw1,fsr2l
 11302  0123A4  0EDD               	movlw	-35
 11303  0123A6  006F FF8F FFDA     	movff	plusw1,fsr2h
 11304  0123AC  006F FF7B FFF6     	movff	postinc2,tblptrl
 11305  0123B2  006F FF77 FFF7     	movff	postdec2,tblptrh
 11306  0123B8                     	if	0	;tblptru may be non-zero
 11307  0123B8                     	endif
 11308  0123B8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11309  0123B8  0E00               	movlw	low (__mediumconst shr (0+16))
 11310  0123BA  6EF8               	movwf	tblptru,c
 11311  0123BC                     	endif
 11312  0123BC  0008               	tblrd		*
 11313  0123BE  50F5               	movf	tablat,w,c
 11314  0123C0  0A25               	xorlw	37
 11315  0123C2  A4D8               	btfss	status,2,c
 11316  0123C4  EF71  F099         	goto	l12491
 11317                           
 11318                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
 11319                           ;stkvar	_fmt @ sp[(-32)+-4]
 11320  0123C8  0EDC               	movlw	-36
 11321  0123CA  006F FF8F FFD9     	movff	plusw1,fsr2l
 11322  0123D0  0EDD               	movlw	-35
 11323  0123D2  006F FF8F FFDA     	movff	plusw1,fsr2h
 11324  0123D8  2ADE               	incf	postinc2,f,c
 11325  0123DA  0E00               	movlw	0
 11326  0123DC  22DD               	addwfc	postdec2,f,c
 11327                           
 11328                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
 11329  0123DE  6A3A               	clrf	_width^0,c
 11330  0123E0  6A3B               	clrf	(_width+1)^0,c
 11331  0123E2  6A3E               	clrf	_flags^0,c
 11332  0123E4  6A3F               	clrf	(_flags+1)^0,c
 11333                           
 11334                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
 11335  0123E6  683C               	setf	_prec^0,c
 11336  0123E8  683D               	setf	(_prec+1)^0,c
 11337                           
 11338                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 723:         if ((*fmt)[0] ==
      +                           '*') {
 11339                           ;stkvar	_fmt @ sp[(-32)+-4]
 11340  0123EA  0EDC               	movlw	-36
 11341  0123EC  006F FF8F FFD9     	movff	plusw1,fsr2l
 11342  0123F2  0EDD               	movlw	-35
 11343  0123F4  006F FF8F FFDA     	movff	plusw1,fsr2h
 11344  0123FA  006F FF7B FFF6     	movff	postinc2,tblptrl
 11345  012400  006F FF77 FFF7     	movff	postdec2,tblptrh
 11346  012406                     	if	0	;tblptru may be non-zero
 11347  012406                     	endif
 11348  012406                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11349  012406  0E00               	movlw	low (__mediumconst shr (0+16))
 11350  012408  6EF8               	movwf	tblptru,c
 11351  01240A                     	endif
 11352  01240A  0008               	tblrd		*
 11353  01240C  50F5               	movf	tablat,w,c
 11354  01240E  0A2A               	xorlw	42
 11355  012410  A4D8               	btfss	status,2,c
 11356  012412  D031               	goto	l12309
 11357                           
 11358                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 724:             ++*fmt;
 11359                           ;stkvar	_fmt @ sp[(-32)+-4]
 11360  012414  0EDC               	movlw	-36
 11361  012416  006F FF8F FFD9     	movff	plusw1,fsr2l
 11362  01241C  0EDD               	movlw	-35
 11363  01241E  006F FF8F FFDA     	movff	plusw1,fsr2h
 11364  012424  2ADE               	incf	postinc2,f,c
 11365  012426  0E00               	movlw	0
 11366  012428  22DD               	addwfc	postdec2,f,c
 11367                           
 11368                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 725:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
 11369                           ;stkvar	_ap @ sp[(-32)+-6]
 11370  01242A  0EDA               	movlw	-38
 11371  01242C  006F FF8F FFD9     	movff	plusw1,fsr2l
 11372  012432  0EDB               	movlw	-37
 11373  012434  006F FF8F FFDA     	movff	plusw1,fsr2h
 11374  01243A  0E02               	movlw	2
 11375  01243C  5EDE               	subwf	postinc2,f,c
 11376  01243E  0E00               	movlw	0
 11377  012440  5ADD               	subwfb	postdec2,f,c
 11378  012442  006F FF78  F00B    	movff	postinc2,btemp+10
 11379  012448  006F FF74  F00C    	movff	postdec2,btemp+11
 11380  01244E  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 11381  012454  0060  F033  FFDA   	movff	btemp+11,fsr2h
 11382  01245A  006F FF78  F03A    	movff	postinc2,_width
 11383  012460  006F FF74  F03B    	movff	postdec2,_width+1
 11384                           
 11385                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 726:             if (width < 
      +                          0) {
 11386  012466  AE3B               	btfss	(_width+1)^0,7,c
 11387  012468  D066               	goto	u11940
 11388                           
 11389                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 727:                 flags |=
      +                           (1 << 0);
 11390  01246A  803E               	bsf	_flags^0,0,c
 11391                           
 11392                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 728:                 width = 
      +                          -width;
 11393  01246C  6C3A               	negf	_width^0,c
 11394  01246E  1E3B               	comf	(_width+1)^0,f,c
 11395  012470  B0D8               	btfsc	status,0,c
 11396  012472  2A3B               	incf	(_width+1)^0,f,c
 11397  012474  D060               	goto	u11940
 11398  012476                     l12309:
 11399                           
 11400                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 731:             width = atoi
      +                          (*fmt);
 11401                           ;stkvar	_fmt @ sp[(-32)+-4]
 11402  012476  0EDC               	movlw	-36
 11403  012478  006F FF8F FFD9     	movff	plusw1,fsr2l
 11404  01247E  0EDD               	movlw	-35
 11405  012480  006F FF8F FFDA     	movff	plusw1,fsr2h
 11406  012486  006F FF78  F00B    	movff	postinc2,btemp+10
 11407  01248C  006F FF74  F00C    	movff	postdec2,btemp+11
 11408  012492  0060  F02F  FFE6   	movff	btemp+10,postinc1
 11409  012498  0060  F033  FFE6   	movff	btemp+11,postinc1
 11410  01249E  EC42  F0BB         	call	_atoi	;wreg free
 11411  0124A2  0060  F004  F03A   	movff	btemp,_width
 11412  0124A8  0060  F008  F03B   	movff	btemp+1,_width+1
 11413                           
 11414                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 732:             while ((0 ? 
      +                          isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 11415  0124AE  D00B               	goto	l12313
 11416  0124B0                     l12311:
 11417                           
 11418                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 733:                 ++*fmt;
 11419                           ;stkvar	_fmt @ sp[(-32)+-4]
 11420  0124B0  0EDC               	movlw	-36
 11421  0124B2  006F FF8F FFD9     	movff	plusw1,fsr2l
 11422  0124B8  0EDD               	movlw	-35
 11423  0124BA  006F FF8F FFDA     	movff	plusw1,fsr2h
 11424  0124C0  2ADE               	incf	postinc2,f,c
 11425  0124C2  0E00               	movlw	0
 11426  0124C4  22DD               	addwfc	postdec2,f,c
 11427  0124C6                     l12313:
 11428  0124C6  0ED0               	movlw	208
 11429  0124C8  6E0B               	movwf	(btemp+10)^0,c
 11430  0124CA  0EFF               	movlw	255
 11431  0124CC  6E0C               	movwf	(btemp+11)^0,c
 11432                           
 11433                           ;stkvar	_fmt @ sp[(-32)+-4]
 11434  0124CE  0EDC               	movlw	-36
 11435  0124D0  006F FF8F FFD9     	movff	plusw1,fsr2l
 11436  0124D6  0EDD               	movlw	-35
 11437  0124D8  006F FF8F FFDA     	movff	plusw1,fsr2h
 11438  0124DE  006F FF7B FFF6     	movff	postinc2,tblptrl
 11439  0124E4  006F FF77 FFF7     	movff	postdec2,tblptrh
 11440  0124EA                     	if	0	;tblptru may be non-zero
 11441  0124EA                     	endif
 11442  0124EA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11443  0124EA  0E00               	movlw	low (__mediumconst shr (0+16))
 11444  0124EC  6EF8               	movwf	tblptru,c
 11445  0124EE                     	endif
 11446  0124EE  0008               	tblrd		*
 11447  0124F0  50F5               	movf	tablat,w,c
 11448  0124F2  6E09               	movwf	(btemp+8)^0,c
 11449  0124F4  6A0A               	clrf	(btemp+9)^0,c
 11450  0124F6  500B               	movf	(btemp+10)^0,w,c
 11451  0124F8  2609               	addwf	(btemp+8)^0,f,c
 11452  0124FA  500C               	movf	(btemp+11)^0,w,c
 11453  0124FC  220A               	addwfc	(btemp+9)^0,f,c
 11454  0124FE  500A               	movf	(btemp+9)^0,w,c
 11455  012500  E106               	bnz	u11920
 11456  012502  0E0A               	movlw	10
 11457  012504  5C09               	subwf	(btemp+8)^0,w,c
 11458  012506  B0D8               	btfsc	status,0,c
 11459  012508  D002               	goto	u11920
 11460  01250A  0E01               	movlw	1
 11461  01250C  D001               	goto	u11930
 11462  01250E                     u11920:
 11463  01250E  0E00               	movlw	0
 11464  012510                     u11930:
 11465  012510  6E0B               	movwf	(btemp+10)^0,c
 11466  012512  6A0C               	clrf	(btemp+11)^0,c
 11467                           
 11468                           ;stkvar	_vfpfcnvrt$5547 @ sp[(-32)+4]
 11469  012514  0EE4               	movlw	-28
 11470  012516  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11471  01251C  0EE5               	movlw	-27
 11472  01251E  0060  F033  FFE3   	movff	btemp+11,plusw1
 11473                           
 11474                           ;stkvar	_vfpfcnvrt$5547 @ sp[(-32)+4]
 11475  012524  0EE4               	movlw	-28
 11476  012526  006F FF8C  F001    	movff	plusw1,btemp
 11477  01252C  0EE5               	movlw	-27
 11478  01252E  50E3               	movf	plusw1,w,c
 11479  012530  1001               	iorwf	btemp^0,w,c
 11480  012532  A4D8               	btfss	status,2,c
 11481  012534  D7BD               	goto	l12311
 11482  012536                     u11940:
 11483                           
 11484                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 740:         if ((*fmt)[0] ==
      +                           '.') {
 11485                           ;stkvar	_fmt @ sp[(-32)+-4]
 11486  012536  0EDC               	movlw	-36
 11487  012538  006F FF8F FFD9     	movff	plusw1,fsr2l
 11488  01253E  0EDD               	movlw	-35
 11489  012540  006F FF8F FFDA     	movff	plusw1,fsr2h
 11490  012546  006F FF7B FFF6     	movff	postinc2,tblptrl
 11491  01254C  006F FF77 FFF7     	movff	postdec2,tblptrh
 11492  012552                     	if	0	;tblptru may be non-zero
 11493  012552                     	endif
 11494  012552                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11495  012552  0E00               	movlw	low (__mediumconst shr (0+16))
 11496  012554  6EF8               	movwf	tblptru,c
 11497  012556                     	endif
 11498  012556  0008               	tblrd		*
 11499  012558  50F5               	movf	tablat,w,c
 11500  01255A  0A2E               	xorlw	46
 11501  01255C  A4D8               	btfss	status,2,c
 11502  01255E  D0AC               	goto	u11990
 11503                           
 11504                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 741:             prec = 0;
 11505  012560  6A3C               	clrf	_prec^0,c
 11506  012562  6A3D               	clrf	(_prec+1)^0,c
 11507                           
 11508                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 742:             ++*fmt;
 11509                           ;stkvar	_fmt @ sp[(-32)+-4]
 11510  012564  0EDC               	movlw	-36
 11511  012566  006F FF8F FFD9     	movff	plusw1,fsr2l
 11512  01256C  0EDD               	movlw	-35
 11513  01256E  006F FF8F FFDA     	movff	plusw1,fsr2h
 11514  012574  2ADE               	incf	postinc2,f,c
 11515  012576  0E00               	movlw	0
 11516  012578  22DD               	addwfc	postdec2,f,c
 11517                           
 11518                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 743:             if ((*fmt)[0
      +                          ] == '*') {
 11519                           ;stkvar	_fmt @ sp[(-32)+-4]
 11520  01257A  0EDC               	movlw	-36
 11521  01257C  006F FF8F FFD9     	movff	plusw1,fsr2l
 11522  012582  0EDD               	movlw	-35
 11523  012584  006F FF8F FFDA     	movff	plusw1,fsr2h
 11524  01258A  006F FF7B FFF6     	movff	postinc2,tblptrl
 11525  012590  006F FF77 FFF7     	movff	postdec2,tblptrh
 11526  012596                     	if	0	;tblptru may be non-zero
 11527  012596                     	endif
 11528  012596                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11529  012596  0E00               	movlw	low (__mediumconst shr (0+16))
 11530  012598  6EF8               	movwf	tblptru,c
 11531  01259A                     	endif
 11532  01259A  0008               	tblrd		*
 11533  01259C  50F5               	movf	tablat,w,c
 11534  01259E  0A2A               	xorlw	42
 11535  0125A0  A4D8               	btfss	status,2,c
 11536  0125A2  D02A               	goto	l12331
 11537                           
 11538                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 744:                 ++*fmt;
 11539                           ;stkvar	_fmt @ sp[(-32)+-4]
 11540  0125A4  0EDC               	movlw	-36
 11541  0125A6  006F FF8F FFD9     	movff	plusw1,fsr2l
 11542  0125AC  0EDD               	movlw	-35
 11543  0125AE  006F FF8F FFDA     	movff	plusw1,fsr2h
 11544  0125B4  2ADE               	incf	postinc2,f,c
 11545  0125B6  0E00               	movlw	0
 11546  0125B8  22DD               	addwfc	postdec2,f,c
 11547                           
 11548                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 745:                 prec = (
      +                          *(int *)__va_arg(*(int **)ap, (int)0));
 11549                           ;stkvar	_ap @ sp[(-32)+-6]
 11550  0125BA  0EDA               	movlw	-38
 11551  0125BC  006F FF8F FFD9     	movff	plusw1,fsr2l
 11552  0125C2  0EDB               	movlw	-37
 11553  0125C4  006F FF8F FFDA     	movff	plusw1,fsr2h
 11554  0125CA  0E02               	movlw	2
 11555  0125CC  5EDE               	subwf	postinc2,f,c
 11556  0125CE  0E00               	movlw	0
 11557  0125D0  5ADD               	subwfb	postdec2,f,c
 11558  0125D2  006F FF78  F00B    	movff	postinc2,btemp+10
 11559  0125D8  006F FF74  F00C    	movff	postdec2,btemp+11
 11560  0125DE  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 11561  0125E4  0060  F033  FFDA   	movff	btemp+11,fsr2h
 11562  0125EA  006F FF78  F03C    	movff	postinc2,_prec
 11563  0125F0  006F FF74  F03D    	movff	postdec2,_prec+1
 11564                           
 11565                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 746:             } else {
 11566  0125F6  D060               	goto	u11990
 11567  0125F8                     l12331:
 11568                           
 11569                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 747:                 prec = a
      +                          toi(*fmt);
 11570                           ;stkvar	_fmt @ sp[(-32)+-4]
 11571  0125F8  0EDC               	movlw	-36
 11572  0125FA  006F FF8F FFD9     	movff	plusw1,fsr2l
 11573  012600  0EDD               	movlw	-35
 11574  012602  006F FF8F FFDA     	movff	plusw1,fsr2h
 11575  012608  006F FF78  F00B    	movff	postinc2,btemp+10
 11576  01260E  006F FF74  F00C    	movff	postdec2,btemp+11
 11577  012614  0060  F02F  FFE6   	movff	btemp+10,postinc1
 11578  01261A  0060  F033  FFE6   	movff	btemp+11,postinc1
 11579  012620  EC42  F0BB         	call	_atoi	;wreg free
 11580  012624  0060  F004  F03C   	movff	btemp,_prec
 11581  01262A  0060  F008  F03D   	movff	btemp+1,_prec+1
 11582                           
 11583                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 748:                 while ((
      +                          0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 11584  012630  D00B               	goto	l12335
 11585  012632                     l12333:
 11586                           
 11587                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 749:                     ++*f
      +                          mt;
 11588                           ;stkvar	_fmt @ sp[(-32)+-4]
 11589  012632  0EDC               	movlw	-36
 11590  012634  006F FF8F FFD9     	movff	plusw1,fsr2l
 11591  01263A  0EDD               	movlw	-35
 11592  01263C  006F FF8F FFDA     	movff	plusw1,fsr2h
 11593  012642  2ADE               	incf	postinc2,f,c
 11594  012644  0E00               	movlw	0
 11595  012646  22DD               	addwfc	postdec2,f,c
 11596  012648                     l12335:
 11597  012648  0ED0               	movlw	208
 11598  01264A  6E0B               	movwf	(btemp+10)^0,c
 11599  01264C  0EFF               	movlw	255
 11600  01264E  6E0C               	movwf	(btemp+11)^0,c
 11601                           
 11602                           ;stkvar	_fmt @ sp[(-32)+-4]
 11603  012650  0EDC               	movlw	-36
 11604  012652  006F FF8F FFD9     	movff	plusw1,fsr2l
 11605  012658  0EDD               	movlw	-35
 11606  01265A  006F FF8F FFDA     	movff	plusw1,fsr2h
 11607  012660  006F FF7B FFF6     	movff	postinc2,tblptrl
 11608  012666  006F FF77 FFF7     	movff	postdec2,tblptrh
 11609  01266C                     	if	0	;tblptru may be non-zero
 11610  01266C                     	endif
 11611  01266C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11612  01266C  0E00               	movlw	low (__mediumconst shr (0+16))
 11613  01266E  6EF8               	movwf	tblptru,c
 11614  012670                     	endif
 11615  012670  0008               	tblrd		*
 11616  012672  50F5               	movf	tablat,w,c
 11617  012674  6E09               	movwf	(btemp+8)^0,c
 11618  012676  6A0A               	clrf	(btemp+9)^0,c
 11619  012678  500B               	movf	(btemp+10)^0,w,c
 11620  01267A  2609               	addwf	(btemp+8)^0,f,c
 11621  01267C  500C               	movf	(btemp+11)^0,w,c
 11622  01267E  220A               	addwfc	(btemp+9)^0,f,c
 11623  012680  500A               	movf	(btemp+9)^0,w,c
 11624  012682  E106               	bnz	u11970
 11625  012684  0E0A               	movlw	10
 11626  012686  5C09               	subwf	(btemp+8)^0,w,c
 11627  012688  B0D8               	btfsc	status,0,c
 11628  01268A  D002               	goto	u11970
 11629  01268C  0E01               	movlw	1
 11630  01268E  D001               	goto	u11980
 11631  012690                     u11970:
 11632  012690  0E00               	movlw	0
 11633  012692                     u11980:
 11634  012692  6E0B               	movwf	(btemp+10)^0,c
 11635  012694  6A0C               	clrf	(btemp+11)^0,c
 11636                           
 11637                           ;stkvar	_vfpfcnvrt$5548 @ sp[(-32)+0]
 11638  012696  0EE0               	movlw	-32
 11639  012698  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11640  01269E  0EE1               	movlw	-31
 11641  0126A0  0060  F033  FFE3   	movff	btemp+11,plusw1
 11642                           
 11643                           ;stkvar	_vfpfcnvrt$5548 @ sp[(-32)+0]
 11644  0126A6  0EE0               	movlw	-32
 11645  0126A8  006F FF8C  F001    	movff	plusw1,btemp
 11646  0126AE  0EE1               	movlw	-31
 11647  0126B0  50E3               	movf	plusw1,w,c
 11648  0126B2  1001               	iorwf	btemp^0,w,c
 11649  0126B4  A4D8               	btfss	status,2,c
 11650  0126B6  D7BD               	goto	l12333
 11651  0126B8                     u11990:
 11652                           
 11653                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 757:         ct[0] = tolower(
      +                          (int)(*fmt)[0]);
 11654                           ;stkvar	_fmt @ sp[(-32)+-4]
 11655  0126B8  0EDC               	movlw	-36
 11656  0126BA  006F FF8F FFD9     	movff	plusw1,fsr2l
 11657  0126C0  0EDD               	movlw	-35
 11658  0126C2  006F FF8F FFDA     	movff	plusw1,fsr2h
 11659  0126C8  006F FF7B FFF6     	movff	postinc2,tblptrl
 11660  0126CE  006F FF77 FFF7     	movff	postdec2,tblptrh
 11661  0126D4                     	if	0	;tblptru may be non-zero
 11662  0126D4                     	endif
 11663  0126D4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11664  0126D4  0E00               	movlw	low (__mediumconst shr (0+16))
 11665  0126D6  6EF8               	movwf	tblptru,c
 11666  0126D8                     	endif
 11667  0126D8  0008               	tblrd		*
 11668  0126DA  50F5               	movf	tablat,w,c
 11669  0126DC  6EE6               	movwf	postinc1,c
 11670  0126DE  0E00               	movlw	0
 11671  0126E0  6EE6               	movwf	postinc1,c
 11672  0126E2  ECDE  F0D4         	call	_tolower	;wreg free
 11673                           
 11674                           ;stkvar	_ct @ sp[(-32)+26]
 11675  0126E6  0EFA               	movlw	-6
 11676  0126E8  0060  F007  FFE3   	movff	btemp,plusw1
 11677                           
 11678                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 758:         if (ct[0]) {
 11679                           ;stkvar	_ct @ sp[(-32)+26]
 11680  0126EE  0EFA               	movlw	-6
 11681  0126F0  50E3               	movf	plusw1,w,c
 11682  0126F2  B4D8               	btfsc	status,2,c
 11683  0126F4  D05B               	goto	l12351
 11684                           
 11685                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 759:             ct[1] = tolo
      +                          wer((int)(*fmt)[1]);
 11686                           ;stkvar	_ct @ sp[(-32)+26]
 11687  0126F6  0EFB               	movlw	251
 11688  0126F8  24E1               	addwf	fsr1l,w,c
 11689  0126FA  6ED9               	movwf	fsr2l,c
 11690  0126FC  0EFF               	movlw	255
 11691  0126FE  20E2               	addwfc	fsr1h,w,c
 11692  012700  6EDA               	movwf	fsr2h,c
 11693                           
 11694                           ;stkvar	_fmt @ sp[(-32)+-4]
 11695  012702  0EDC               	movlw	-36
 11696  012704  006F FF8F FFE9     	movff	plusw1,fsr0l
 11697  01270A  0EDD               	movlw	-35
 11698  01270C  006F FF8F FFEA     	movff	plusw1,fsr0h
 11699  012712  006F FFB8  F00B    	movff	postinc0,btemp+10
 11700  012718  006F FFB4  F00C    	movff	postdec0,btemp+11
 11701  01271E  0E01               	movlw	1
 11702  012720  260B               	addwf	(btemp+10)^0,f,c
 11703  012722  0E00               	movlw	0
 11704  012724  220C               	addwfc	(btemp+11)^0,f,c
 11705  012726  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 11706  01272C  0060  F033  FFF7   	movff	btemp+11,tblptrh
 11707  012732                     	if	0	;tblptru may be non-zero
 11708  012732                     	endif
 11709  012732                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11710  012732  0E00               	movlw	low (__mediumconst shr (0+16))
 11711  012734  6EF8               	movwf	tblptru,c
 11712  012736                     	endif
 11713  012736  0008               	tblrd		*
 11714  012738  50F5               	movf	tablat,w,c
 11715  01273A  6EE6               	movwf	postinc1,c
 11716  01273C  0E00               	movlw	0
 11717  01273E  6EE6               	movwf	postinc1,c
 11718  012740  ECDE  F0D4         	call	_tolower	;wreg free
 11719  012744  5001               	movf	btemp^0,w,c
 11720  012746  6EDF               	movwf	indf2,c
 11721                           
 11722                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 760:             if (ct[1]) {
 11723                           ;stkvar	_ct @ sp[(-32)+26]
 11724  012748  0EFB               	movlw	251
 11725  01274A  24E1               	addwf	fsr1l,w,c
 11726  01274C  6ED9               	movwf	fsr2l,c
 11727  01274E  0EFF               	movlw	255
 11728  012750  20E2               	addwfc	fsr1h,w,c
 11729  012752  6EDA               	movwf	fsr2h,c
 11730  012754  50DF               	movf	indf2,w,c
 11731  012756  B4D8               	btfsc	status,2,c
 11732  012758  D029               	goto	l12351
 11733                           
 11734                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 761:                 ct[2] = 
      +                          tolower((int)(*fmt)[2]);
 11735                           ;stkvar	_ct @ sp[(-32)+26]
 11736  01275A  0EFC               	movlw	252
 11737  01275C  24E1               	addwf	fsr1l,w,c
 11738  01275E  6ED9               	movwf	fsr2l,c
 11739  012760  0EFF               	movlw	255
 11740  012762  20E2               	addwfc	fsr1h,w,c
 11741  012764  6EDA               	movwf	fsr2h,c
 11742                           
 11743                           ;stkvar	_fmt @ sp[(-32)+-4]
 11744  012766  0EDC               	movlw	-36
 11745  012768  006F FF8F FFE9     	movff	plusw1,fsr0l
 11746  01276E  0EDD               	movlw	-35
 11747  012770  006F FF8F FFEA     	movff	plusw1,fsr0h
 11748  012776  006F FFB8  F00B    	movff	postinc0,btemp+10
 11749  01277C  006F FFB4  F00C    	movff	postdec0,btemp+11
 11750  012782  0E02               	movlw	2
 11751  012784  260B               	addwf	(btemp+10)^0,f,c
 11752  012786  0E00               	movlw	0
 11753  012788  220C               	addwfc	(btemp+11)^0,f,c
 11754  01278A  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 11755  012790  0060  F033  FFF7   	movff	btemp+11,tblptrh
 11756  012796                     	if	0	;tblptru may be non-zero
 11757  012796                     	endif
 11758  012796                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11759  012796  0E00               	movlw	low (__mediumconst shr (0+16))
 11760  012798  6EF8               	movwf	tblptru,c
 11761  01279A                     	endif
 11762  01279A  0008               	tblrd		*
 11763  01279C  50F5               	movf	tablat,w,c
 11764  01279E  6EE6               	movwf	postinc1,c
 11765  0127A0  0E00               	movlw	0
 11766  0127A2  6EE6               	movwf	postinc1,c
 11767  0127A4  ECDE  F0D4         	call	_tolower	;wreg free
 11768  0127A8  5001               	movf	btemp^0,w,c
 11769  0127AA  6EDF               	movwf	indf2,c
 11770  0127AC                     l12351:
 11771                           
 11772                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
 11773                           ;stkvar	_fmt @ sp[(-32)+-4]
 11774  0127AC  0EDC               	movlw	-36
 11775  0127AE  006F FF8F FFD9     	movff	plusw1,fsr2l
 11776  0127B4  0EDD               	movlw	-35
 11777  0127B6  006F FF8F FFDA     	movff	plusw1,fsr2h
 11778  0127BC  006F FF7B FFF6     	movff	postinc2,tblptrl
 11779  0127C2  006F FF77 FFF7     	movff	postdec2,tblptrh
 11780  0127C8                     	if	0	;tblptru may be non-zero
 11781  0127C8                     	endif
 11782  0127C8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11783  0127C8  0E00               	movlw	low (__mediumconst shr (0+16))
 11784  0127CA  6EF8               	movwf	tblptru,c
 11785  0127CC                     	endif
 11786  0127CC  0008               	tblrd		*
 11787  0127CE  50F5               	movf	tablat,w,c
 11788  0127D0  0A63               	xorlw	99
 11789  0127D2  A4D8               	btfss	status,2,c
 11790  0127D4  D037               	goto	l12361
 11791                           
 11792                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
 11793                           ;stkvar	_fmt @ sp[(-32)+-4]
 11794  0127D6  0EDC               	movlw	-36
 11795  0127D8  006F FF8F FFD9     	movff	plusw1,fsr2l
 11796  0127DE  0EDD               	movlw	-35
 11797  0127E0  006F FF8F FFDA     	movff	plusw1,fsr2h
 11798  0127E6  2ADE               	incf	postinc2,f,c
 11799  0127E8  0E00               	movlw	0
 11800  0127EA  22DD               	addwfc	postdec2,f,c
 11801                           
 11802                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
 11803                           ;stkvar	_ap @ sp[(-32)+-6]
 11804  0127EC  0EDA               	movlw	-38
 11805  0127EE  006F FF8F FFD9     	movff	plusw1,fsr2l
 11806  0127F4  0EDB               	movlw	-37
 11807  0127F6  006F FF8F FFDA     	movff	plusw1,fsr2h
 11808  0127FC  0E02               	movlw	2
 11809  0127FE  5EDE               	subwf	postinc2,f,c
 11810  012800  0E00               	movlw	0
 11811  012802  5ADD               	subwfb	postdec2,f,c
 11812  012804  006F FF78  F00B    	movff	postinc2,btemp+10
 11813  01280A  006F FF74  F00C    	movff	postdec2,btemp+11
 11814  012810  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 11815  012816  0060  F033  FFDA   	movff	btemp+11,fsr2h
 11816  01281C  50DF               	movf	indf2,w,c
 11817  01281E  6E0C               	movwf	(btemp+11)^0,c
 11818                           
 11819                           ;stkvar	_c @ sp[(-32)+31]
 11820  012820  0EFF               	movlw	-1
 11821  012822  0060  F033  FFE3   	movff	btemp+11,plusw1
 11822                           
 11823                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
 11824                           ;stkvar	_c @ sp[(-32)+31]
 11825  012828  0EFF               	movlw	-1
 11826  01282A  50E3               	movf	plusw1,w,c
 11827  01282C  6EE6               	movwf	postinc1,c
 11828                           
 11829                           ;stkvar	_fp @ sp[(-33)+-2]
 11830  01282E  0EDD               	movlw	-35
 11831  012830  006F FF8F FFE6     	movff	plusw1,postinc1
 11832  012836  006F FF8F FFE6     	movff	plusw1,postinc1
 11833  01283C  EC58  F0D4         	call	_ctoa	;wreg free
 11834  012840  EF9B  F099         	goto	l2367
 11835  012844                     l12361:
 11836                           
 11837                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
 11838                           ;stkvar	_fmt @ sp[(-32)+-4]
 11839  012844  0EDC               	movlw	-36
 11840  012846  006F FF8F FFD9     	movff	plusw1,fsr2l
 11841  01284C  0EDD               	movlw	-35
 11842  01284E  006F FF8F FFDA     	movff	plusw1,fsr2h
 11843  012854  006F FF7B FFF6     	movff	postinc2,tblptrl
 11844  01285A  006F FF77 FFF7     	movff	postdec2,tblptrh
 11845  012860                     	if	0	;tblptru may be non-zero
 11846  012860                     	endif
 11847  012860                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11848  012860  0E00               	movlw	low (__mediumconst shr (0+16))
 11849  012862  6EF8               	movwf	tblptru,c
 11850  012864                     	endif
 11851  012864  0008               	tblrd		*
 11852  012866  50F5               	movf	tablat,w,c
 11853  012868  0A64               	xorlw	100
 11854  01286A  B4D8               	btfsc	status,2,c
 11855  01286C  D015               	goto	u12040
 11856                           
 11857                           ;stkvar	_fmt @ sp[(-32)+-4]
 11858  01286E  0EDC               	movlw	-36
 11859  012870  006F FF8F FFD9     	movff	plusw1,fsr2l
 11860  012876  0EDD               	movlw	-35
 11861  012878  006F FF8F FFDA     	movff	plusw1,fsr2h
 11862  01287E  006F FF7B FFF6     	movff	postinc2,tblptrl
 11863  012884  006F FF77 FFF7     	movff	postdec2,tblptrh
 11864  01288A                     	if	0	;tblptru may be non-zero
 11865  01288A                     	endif
 11866  01288A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11867  01288A  0E00               	movlw	low (__mediumconst shr (0+16))
 11868  01288C  6EF8               	movwf	tblptru,c
 11869  01288E                     	endif
 11870  01288E  0008               	tblrd		*
 11871  012890  50F5               	movf	tablat,w,c
 11872  012892  0A69               	xorlw	105
 11873  012894  A4D8               	btfss	status,2,c
 11874  012896  D076               	goto	l12373
 11875  012898                     u12040:
 11876                           
 11877                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
 11878                           ;stkvar	_fmt @ sp[(-32)+-4]
 11879  012898  0EDC               	movlw	-36
 11880  01289A  006F FF8F FFD9     	movff	plusw1,fsr2l
 11881  0128A0  0EDD               	movlw	-35
 11882  0128A2  006F FF8F FFDA     	movff	plusw1,fsr2h
 11883  0128A8  2ADE               	incf	postinc2,f,c
 11884  0128AA  0E00               	movlw	0
 11885  0128AC  22DD               	addwfc	postdec2,f,c
 11886                           
 11887                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
 11888                           ;stkvar	_ap @ sp[(-32)+-6]
 11889  0128AE  0EDA               	movlw	-38
 11890  0128B0  006F FF8F FFD9     	movff	plusw1,fsr2l
 11891  0128B6  0EDB               	movlw	-37
 11892  0128B8  006F FF8F FFDA     	movff	plusw1,fsr2h
 11893  0128BE  0E02               	movlw	2
 11894  0128C0  5EDE               	subwf	postinc2,f,c
 11895  0128C2  0E00               	movlw	0
 11896  0128C4  5ADD               	subwfb	postdec2,f,c
 11897  0128C6  006F FF78  F00B    	movff	postinc2,btemp+10
 11898  0128CC  006F FF74  F00C    	movff	postdec2,btemp+11
 11899  0128D2  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 11900  0128D8  0060  F033  FFDA   	movff	btemp+11,fsr2h
 11901  0128DE  006F FF78  F00B    	movff	postinc2,btemp+10
 11902  0128E4  006F FF74  F00C    	movff	postdec2,btemp+11
 11903                           
 11904                           ;stkvar	_ll @ sp[(-32)+14]
 11905  0128EA  0EEE               	movlw	-18
 11906  0128EC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11907  0128F2  0EEF               	movlw	-17
 11908  0128F4  0060  F033  FFE3   	movff	btemp+11,plusw1
 11909  0128FA  6A01               	clrf	btemp^0,c
 11910  0128FC  BEE3               	btfsc	plusw1,7,c
 11911  0128FE  6801               	setf	btemp^0,c
 11912  012900  0EF0               	movlw	-16
 11913  012902  0060  F007  FFE3   	movff	btemp,plusw1
 11914  012908  0EF1               	movlw	-15
 11915  01290A  0060  F007  FFE3   	movff	btemp,plusw1
 11916  012910  0EF2               	movlw	-14
 11917  012912  0060  F007  FFE3   	movff	btemp,plusw1
 11918  012918  0EF3               	movlw	-13
 11919  01291A  0060  F007  FFE3   	movff	btemp,plusw1
 11920  012920  0EF4               	movlw	-12
 11921  012922  0060  F007  FFE3   	movff	btemp,plusw1
 11922  012928  0EF5               	movlw	-11
 11923  01292A  0060  F007  FFE3   	movff	btemp,plusw1
 11924  012930                     l12369:
 11925                           
 11926                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
 11927                           ;stkvar	_ll @ sp[(-32)+14]
 11928  012930  50E1               	movf	fsr1l,w,c
 11929  012932  0FEE               	addlw	-18
 11930  012934  6ED9               	movwf	fsr2l,c
 11931  012936  50E2               	movf	fsr1h,w,c
 11932  012938  6EDA               	movwf	fsr2h,c
 11933  01293A  0EFF               	movlw	255
 11934  01293C  22DA               	addwfc	fsr2h,f,c
 11935  01293E  006F FF7B FFE6     	movff	postinc2,postinc1
 11936  012944  006F FF7B FFE6     	movff	postinc2,postinc1
 11937  01294A  006F FF7B FFE6     	movff	postinc2,postinc1
 11938  012950  006F FF7B FFE6     	movff	postinc2,postinc1
 11939  012956  006F FF7B FFE6     	movff	postinc2,postinc1
 11940  01295C  006F FF7B FFE6     	movff	postinc2,postinc1
 11941  012962  006F FF7B FFE6     	movff	postinc2,postinc1
 11942  012968  006F FF7B FFE6     	movff	postinc2,postinc1
 11943                           
 11944                           ;stkvar	_fp @ sp[(-40)+-2]
 11945  01296E  0ED6               	movlw	-42
 11946  012970  006F FF8F FFE6     	movff	plusw1,postinc1
 11947  012976  006F FF8F FFE6     	movff	plusw1,postinc1
 11948  01297C  EC98  F0AA         	call	_dtoa	;wreg free
 11949  012980  EF9B  F099         	goto	l2367
 11950  012984                     l12373:
 11951                           
 11952                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 835:         if (!strncmp(*fm
      +                          t, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", ((sizeof("li")/size
      +                          of("li"[0]))-1))) {
 11953  012984  0E02               	movlw	2
 11954  012986  6EE6               	movwf	postinc1,c
 11955  012988  0E00               	movlw	0
 11956  01298A  6EE6               	movwf	postinc1,c
 11957  01298C  0EEA               	movlw	low STR_74
 11958  01298E  6EE6               	movwf	postinc1,c
 11959  012990  0EFF               	movlw	high STR_74
 11960  012992  6EE6               	movwf	postinc1,c
 11961                           
 11962                           ;stkvar	_fmt @ sp[(-36)+-4]
 11963  012994  0ED8               	movlw	-40
 11964  012996  006F FF8F FFD9     	movff	plusw1,fsr2l
 11965  01299C  0ED9               	movlw	-39
 11966  01299E  006F FF8F FFDA     	movff	plusw1,fsr2h
 11967  0129A4  006F FF78  F00B    	movff	postinc2,btemp+10
 11968  0129AA  006F FF74  F00C    	movff	postdec2,btemp+11
 11969  0129B0  0060  F02F  FFE6   	movff	btemp+10,postinc1
 11970  0129B6  0060  F033  FFE6   	movff	btemp+11,postinc1
 11971  0129BC  ECB1  F0BE         	call	_strncmp	;wreg free
 11972  0129C0  5001               	movf	btemp^0,w,c
 11973  0129C2  1002               	iorwf	(btemp+1)^0,w,c
 11974  0129C4  B4D8               	btfsc	status,2,c
 11975  0129C6  D022               	goto	u12060
 11976  0129C8  0E02               	movlw	2
 11977  0129CA  6EE6               	movwf	postinc1,c
 11978  0129CC  0E00               	movlw	0
 11979  0129CE  6EE6               	movwf	postinc1,c
 11980  0129D0  0EF0               	movlw	low STR_78
 11981  0129D2  6EE6               	movwf	postinc1,c
 11982  0129D4  0EFF               	movlw	high STR_78
 11983  0129D6  6EE6               	movwf	postinc1,c
 11984                           
 11985                           ;stkvar	_fmt @ sp[(-36)+-4]
 11986  0129D8  0ED8               	movlw	-40
 11987  0129DA  006F FF8F FFD9     	movff	plusw1,fsr2l
 11988  0129E0  0ED9               	movlw	-39
 11989  0129E2  006F FF8F FFDA     	movff	plusw1,fsr2h
 11990  0129E8  006F FF78  F00B    	movff	postinc2,btemp+10
 11991  0129EE  006F FF74  F00C    	movff	postdec2,btemp+11
 11992  0129F4  0060  F02F  FFE6   	movff	btemp+10,postinc1
 11993  0129FA  0060  F033  FFE6   	movff	btemp+11,postinc1
 11994  012A00  ECB1  F0BE         	call	_strncmp	;wreg free
 11995  012A04  5001               	movf	btemp^0,w,c
 11996  012A06  1002               	iorwf	(btemp+1)^0,w,c
 11997  012A08  A4D8               	btfss	status,2,c
 11998  012A0A  D069               	goto	l12385
 11999  012A0C                     u12060:
 12000                           
 12001                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 836: ;/opt/microchip/xc8/v2.1
      +                          0/pic/sources/c99/common/doprnt.c: 838:             *fmt += ((sizeof("ld")/sizeof("ld"[0
      +                          ]))-1);
 12002                           ;stkvar	_fmt @ sp[(-32)+-4]
 12003  012A0C  0EDC               	movlw	-36
 12004  012A0E  006F FF8F FFD9     	movff	plusw1,fsr2l
 12005  012A14  0EDD               	movlw	-35
 12006  012A16  006F FF8F FFDA     	movff	plusw1,fsr2h
 12007  012A1C  0E02               	movlw	2
 12008  012A1E  26DE               	addwf	postinc2,f,c
 12009  012A20  0E00               	movlw	0
 12010  012A22  22DD               	addwfc	postdec2,f,c
 12011                           
 12012                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 839:             ll = (long l
      +                          ong)(*(long *)__va_arg(*(long **)ap, (long)0));
 12013                           ;stkvar	_ap @ sp[(-32)+-6]
 12014  012A24  0EDA               	movlw	-38
 12015  012A26  006F FF8F FFD9     	movff	plusw1,fsr2l
 12016  012A2C  0EDB               	movlw	-37
 12017  012A2E  006F FF8F FFDA     	movff	plusw1,fsr2h
 12018  012A34  0E04               	movlw	4
 12019  012A36  5EDE               	subwf	postinc2,f,c
 12020  012A38  0E00               	movlw	0
 12021  012A3A  5ADD               	subwfb	postdec2,f,c
 12022  012A3C  006F FF78  F00B    	movff	postinc2,btemp+10
 12023  012A42  006F FF74  F00C    	movff	postdec2,btemp+11
 12024  012A48  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 12025  012A4E  0060  F033  FFDA   	movff	btemp+11,fsr2h
 12026  012A54  006F FF78  F009    	movff	postinc2,btemp+8
 12027  012A5A  006F FF78  F00A    	movff	postinc2,btemp+9
 12028  012A60  006F FF78  F00B    	movff	postinc2,btemp+10
 12029  012A66  006F FF78  F00C    	movff	postinc2,btemp+11
 12030  012A6C  0060  F024  F011   	movff	btemp+8,btemp+16
 12031  012A72  0060  F028  F012   	movff	btemp+9,btemp+17
 12032  012A78  0060  F02C  F013   	movff	btemp+10,btemp+18
 12033  012A7E  0060  F030  F014   	movff	btemp+11,btemp+19
 12034  012A84  6A15               	clrf	(btemp+20)^0,c
 12035  012A86  BE14               	btfsc	(btemp+19)^0,7,c
 12036  012A88  6815               	setf	(btemp+20)^0,c
 12037  012A8A  0060  F054  F016   	movff	btemp+20,btemp+21
 12038  012A90  0060  F054  F017   	movff	btemp+20,btemp+22
 12039  012A96  0060  F054  F018   	movff	btemp+20,btemp+23
 12040                           
 12041                           ;stkvar	_ll @ sp[(-32)+14]
 12042  012A9C  0EEE               	movlw	-18
 12043  012A9E  0060  F047  FFE3   	movff	btemp+16,plusw1
 12044  012AA4  0EEF               	movlw	-17
 12045  012AA6  0060  F04B  FFE3   	movff	btemp+17,plusw1
 12046  012AAC  0EF0               	movlw	-16
 12047  012AAE  0060  F04F  FFE3   	movff	btemp+18,plusw1
 12048  012AB4  0EF1               	movlw	-15
 12049  012AB6  0060  F053  FFE3   	movff	btemp+19,plusw1
 12050  012ABC  0EF2               	movlw	-14
 12051  012ABE  0060  F057  FFE3   	movff	btemp+20,plusw1
 12052  012AC4  0EF3               	movlw	-13
 12053  012AC6  0060  F05B  FFE3   	movff	btemp+21,plusw1
 12054  012ACC  0EF4               	movlw	-12
 12055  012ACE  0060  F05F  FFE3   	movff	btemp+22,plusw1
 12056  012AD4  0EF5               	movlw	-11
 12057  012AD6  0060  F063  FFE3   	movff	btemp+23,plusw1
 12058  012ADC  D729               	goto	l12369
 12059  012ADE                     l12385:
 12060                           
 12061                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 920:         if (ct[0] == 'f'
      +                          ) {
 12062                           ;stkvar	_ct @ sp[(-32)+26]
 12063  012ADE  0EFA               	movlw	-6
 12064  012AE0  006F FF8C  F001    	movff	plusw1,btemp
 12065  012AE6  0E66               	movlw	102
 12066  012AE8  1801               	xorwf	btemp^0,w,c
 12067  012AEA  A4D8               	btfss	status,2,c
 12068  012AEC  D06E               	goto	l12397
 12069                           
 12070                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 922:             c = (*fmt)[0
      +                          ];
 12071                           ;stkvar	_fmt @ sp[(-32)+-4]
 12072  012AEE  0EDC               	movlw	-36
 12073  012AF0  006F FF8F FFD9     	movff	plusw1,fsr2l
 12074  012AF6  0EDD               	movlw	-35
 12075  012AF8  006F FF8F FFDA     	movff	plusw1,fsr2h
 12076  012AFE  006F FF7B FFF6     	movff	postinc2,tblptrl
 12077  012B04  006F FF77 FFF7     	movff	postdec2,tblptrh
 12078  012B0A                     	if	0	;tblptru may be non-zero
 12079  012B0A                     	endif
 12080  012B0A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12081  012B0A  0E00               	movlw	low (__mediumconst shr (0+16))
 12082  012B0C  6EF8               	movwf	tblptru,c
 12083  012B0E                     	endif
 12084                           
 12085                           ;stkvar	_c @ sp[(-32)+31]
 12086  012B0E  0008               	tblrd		*
 12087  012B10  0EFF               	movlw	-1
 12088  012B12  006F FFD7 FFE3     	movff	tablat,plusw1
 12089                           
 12090                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 923:             ++*fmt;
 12091                           ;stkvar	_fmt @ sp[(-32)+-4]
 12092  012B18  0EDC               	movlw	-36
 12093  012B1A  006F FF8F FFD9     	movff	plusw1,fsr2l
 12094  012B20  0EDD               	movlw	-35
 12095  012B22  006F FF8F FFDA     	movff	plusw1,fsr2h
 12096  012B28  2ADE               	incf	postinc2,f,c
 12097  012B2A  0E00               	movlw	0
 12098  012B2C  22DD               	addwfc	postdec2,f,c
 12099                           
 12100                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 924:             f = (long do
      +                          uble)(*(double *)__va_arg(*(double **)ap, (double)0));
 12101                           ;stkvar	_ap @ sp[(-32)+-6]
 12102  012B2E  0EDA               	movlw	-38
 12103  012B30  006F FF8F FFD9     	movff	plusw1,fsr2l
 12104  012B36  0EDB               	movlw	-37
 12105  012B38  006F FF8F FFDA     	movff	plusw1,fsr2h
 12106  012B3E  0E04               	movlw	4
 12107  012B40  5EDE               	subwf	postinc2,f,c
 12108  012B42  0E00               	movlw	0
 12109  012B44  5ADD               	subwfb	postdec2,f,c
 12110  012B46  006F FF78  F00B    	movff	postinc2,btemp+10
 12111  012B4C  006F FF74  F00C    	movff	postdec2,btemp+11
 12112  012B52  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 12113  012B58  0060  F033  FFDA   	movff	btemp+11,fsr2h
 12114  012B5E  006F FF78  F009    	movff	postinc2,btemp+8
 12115  012B64  006F FF78  F00A    	movff	postinc2,btemp+9
 12116  012B6A  006F FF78  F00B    	movff	postinc2,btemp+10
 12117  012B70  006F FF78  F00C    	movff	postinc2,btemp+11
 12118                           
 12119                           ;stkvar	_f @ sp[(-32)+22]
 12120  012B76  0EF6               	movlw	-10
 12121  012B78  0060  F027  FFE3   	movff	btemp+8,plusw1
 12122  012B7E  0EF7               	movlw	-9
 12123  012B80  0060  F02B  FFE3   	movff	btemp+9,plusw1
 12124  012B86  0EF8               	movlw	-8
 12125  012B88  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12126  012B8E  0EF9               	movlw	-7
 12127  012B90  0060  F033  FFE3   	movff	btemp+11,plusw1
 12128  012B96                     l12393:
 12129                           
 12130                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 926:             return efgto
      +                          a(fp, f, c);
 12131                           ;stkvar	_c @ sp[(-32)+31]
 12132  012B96  0EFF               	movlw	-1
 12133  012B98  50E3               	movf	plusw1,w,c
 12134  012B9A  6EE6               	movwf	postinc1,c
 12135                           
 12136                           ;stkvar	_f @ sp[(-33)+22]
 12137  012B9C  0EF5               	movlw	-11
 12138  012B9E  006F FF8F FFE6     	movff	plusw1,postinc1
 12139  012BA4  006F FF8F FFE6     	movff	plusw1,postinc1
 12140  012BAA  006F FF8F FFE6     	movff	plusw1,postinc1
 12141  012BB0  006F FF8F FFE6     	movff	plusw1,postinc1
 12142                           
 12143                           ;stkvar	_fp @ sp[(-37)+-2]
 12144  012BB6  0ED9               	movlw	-39
 12145  012BB8  006F FF8F FFE6     	movff	plusw1,postinc1
 12146  012BBE  006F FF8F FFE6     	movff	plusw1,postinc1
 12147  012BC4  EC00  F080         	call	_efgtoa	;wreg free
 12148  012BC8  D3B6               	goto	l2367
 12149  012BCA                     l12397:
 12150                           
 12151                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 928:         if (!strncmp(ct,
      +                           "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
 12152  012BCA  0E02               	movlw	2
 12153  012BCC  6EE6               	movwf	postinc1,c
 12154  012BCE  0E00               	movlw	0
 12155  012BD0  6EE6               	movwf	postinc1,c
 12156  012BD2  0EED               	movlw	low STR_83
 12157  012BD4  6EE6               	movwf	postinc1,c
 12158  012BD6  0EFF               	movlw	high STR_83
 12159  012BD8  6EE6               	movwf	postinc1,c
 12160                           
 12161                           ;stkvar	_ct @ sp[(-36)+26]
 12162  012BDA  0EF6               	movlw	246
 12163  012BDC  24E1               	addwf	fsr1l,w,c
 12164  012BDE  6E01               	movwf	btemp^0,c
 12165  012BE0  0EFF               	movlw	255
 12166  012BE2  20E2               	addwfc	fsr1h,w,c
 12167  012BE4  6E02               	movwf	(btemp+1)^0,c
 12168  012BE6  0060  F007  FFE6   	movff	btemp,postinc1
 12169  012BEC  0060  F00B  FFE6   	movff	btemp+1,postinc1
 12170  012BF2  ECB1  F0BE         	call	_strncmp	;wreg free
 12171  012BF6  5001               	movf	btemp^0,w,c
 12172  012BF8  1002               	iorwf	(btemp+1)^0,w,c
 12173  012BFA  A4D8               	btfss	status,2,c
 12174  012BFC  D096               	goto	l12417
 12175                           
 12176                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 931:             if ((0 ? isu
      +                          pper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
 12177                           ;stkvar	_fmt @ sp[(-32)+-4]
 12178  012BFE  0EDC               	movlw	-36
 12179  012C00  006F FF8F FFD9     	movff	plusw1,fsr2l
 12180  012C06  0EDD               	movlw	-35
 12181  012C08  006F FF8F FFDA     	movff	plusw1,fsr2h
 12182  012C0E  006F FF78  F00B    	movff	postinc2,btemp+10
 12183  012C14  006F FF74  F00C    	movff	postdec2,btemp+11
 12184  012C1A  0E01               	movlw	1
 12185  012C1C  260B               	addwf	(btemp+10)^0,f,c
 12186  012C1E  0E00               	movlw	0
 12187  012C20  220C               	addwfc	(btemp+11)^0,f,c
 12188  012C22  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 12189  012C28  0060  F033  FFF7   	movff	btemp+11,tblptrh
 12190  012C2E                     	if	0	;tblptru may be non-zero
 12191  012C2E                     	endif
 12192  012C2E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12193  012C2E  0E00               	movlw	low (__mediumconst shr (0+16))
 12194  012C30  6EF8               	movwf	tblptru,c
 12195  012C32                     	endif
 12196                           
 12197                           ;stkvar	_c @ sp[(-32)+31]
 12198  012C32  0008               	tblrd		*
 12199  012C34  0EFF               	movlw	-1
 12200  012C36  006F FFD7 FFE3     	movff	tablat,plusw1
 12201  012C3C  0EBF               	movlw	191
 12202  012C3E  6E0B               	movwf	(btemp+10)^0,c
 12203  012C40  0EFF               	movlw	255
 12204  012C42  6E0C               	movwf	(btemp+11)^0,c
 12205                           
 12206                           ;stkvar	_fmt @ sp[(-32)+-4]
 12207  012C44  0EDC               	movlw	-36
 12208  012C46  006F FF8F FFD9     	movff	plusw1,fsr2l
 12209  012C4C  0EDD               	movlw	-35
 12210  012C4E  006F FF8F FFDA     	movff	plusw1,fsr2h
 12211  012C54  006F FF7B FFF6     	movff	postinc2,tblptrl
 12212  012C5A  006F FF77 FFF7     	movff	postdec2,tblptrh
 12213  012C60                     	if	0	;tblptru may be non-zero
 12214  012C60                     	endif
 12215  012C60                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12216  012C60  0E00               	movlw	low (__mediumconst shr (0+16))
 12217  012C62  6EF8               	movwf	tblptru,c
 12218  012C64                     	endif
 12219  012C64  0008               	tblrd		*
 12220  012C66  50F5               	movf	tablat,w,c
 12221  012C68  6E09               	movwf	(btemp+8)^0,c
 12222  012C6A  6A0A               	clrf	(btemp+9)^0,c
 12223  012C6C  500B               	movf	(btemp+10)^0,w,c
 12224  012C6E  2609               	addwf	(btemp+8)^0,f,c
 12225  012C70  500C               	movf	(btemp+11)^0,w,c
 12226  012C72  220A               	addwfc	(btemp+9)^0,f,c
 12227  012C74  500A               	movf	(btemp+9)^0,w,c
 12228  012C76  E106               	bnz	u12090
 12229  012C78  0E1A               	movlw	26
 12230  012C7A  5C09               	subwf	(btemp+8)^0,w,c
 12231  012C7C  B0D8               	btfsc	status,0,c
 12232  012C7E  D002               	goto	u12090
 12233  012C80  0E01               	movlw	1
 12234  012C82  D001               	goto	u12100
 12235  012C84                     u12090:
 12236  012C84  0E00               	movlw	0
 12237  012C86                     u12100:
 12238  012C86  6E0B               	movwf	(btemp+10)^0,c
 12239  012C88  6A0C               	clrf	(btemp+11)^0,c
 12240                           
 12241                           ;stkvar	_vfpfcnvrt$5559 @ sp[(-32)+2]
 12242  012C8A  0EE2               	movlw	-30
 12243  012C8C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12244  012C92  0EE3               	movlw	-29
 12245  012C94  0060  F033  FFE3   	movff	btemp+11,plusw1
 12246                           
 12247                           ;stkvar	_vfpfcnvrt$5559 @ sp[(-32)+2]
 12248  012C9A  0EE2               	movlw	-30
 12249  012C9C  006F FF8C  F001    	movff	plusw1,btemp
 12250  012CA2  0EE3               	movlw	-29
 12251  012CA4  50E3               	movf	plusw1,w,c
 12252  012CA6  1001               	iorwf	btemp^0,w,c
 12253                           
 12254                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 934:                 f = (lon
      +                          g double)(*(double *)__va_arg(*(double **)ap, (double)0));
 12255                           ;stkvar	_ap @ sp[(-32)+-6]
 12256                           
 12257                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 933:             } else {
 12258                           
 12259                           ;stkvar	_f @ sp[(-32)+22]
 12260                           
 12261                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 932:                 f = (*(l
      +                          ong double *)__va_arg(*(long double **)ap, (long double)0));
 12262                           ;stkvar	_ap @ sp[(-32)+-6]
 12263  012CA8  0EDA               	movlw	-38
 12264  012CAA  006F FF8F FFD9     	movff	plusw1,fsr2l
 12265  012CB0  0EDB               	movlw	-37
 12266  012CB2  006F FF8F FFDA     	movff	plusw1,fsr2h
 12267  012CB8  0E04               	movlw	4
 12268  012CBA  5EDE               	subwf	postinc2,f,c
 12269  012CBC  0E00               	movlw	0
 12270  012CBE  5ADD               	subwfb	postdec2,f,c
 12271  012CC0  006F FF78  F00B    	movff	postinc2,btemp+10
 12272  012CC6  006F FF74  F00C    	movff	postdec2,btemp+11
 12273  012CCC  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 12274  012CD2  0060  F033  FFDA   	movff	btemp+11,fsr2h
 12275  012CD8  006F FF78  F009    	movff	postinc2,btemp+8
 12276  012CDE  006F FF78  F00A    	movff	postinc2,btemp+9
 12277  012CE4  006F FF78  F00B    	movff	postinc2,btemp+10
 12278  012CEA  006F FF78  F00C    	movff	postinc2,btemp+11
 12279                           
 12280                           ;stkvar	_f @ sp[(-32)+22]
 12281  012CF0  0EF6               	movlw	-10
 12282  012CF2  0060  F027  FFE3   	movff	btemp+8,plusw1
 12283  012CF8  0EF7               	movlw	-9
 12284  012CFA  0060  F02B  FFE3   	movff	btemp+9,plusw1
 12285  012D00  0EF8               	movlw	-8
 12286  012D02  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12287  012D08  0EF9               	movlw	-7
 12288  012D0A  0060  F033  FFE3   	movff	btemp+11,plusw1
 12289                           
 12290                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 936:             *fmt += ((si
      +                          zeof("lf")/sizeof("lf"[0]))-1);
 12291                           ;stkvar	_fmt @ sp[(-32)+-4]
 12292  012D10  0EDC               	movlw	-36
 12293  012D12  006F FF8F FFD9     	movff	plusw1,fsr2l
 12294  012D18  0EDD               	movlw	-35
 12295  012D1A  006F FF8F FFDA     	movff	plusw1,fsr2h
 12296  012D20  0E02               	movlw	2
 12297  012D22  26DE               	addwf	postinc2,f,c
 12298  012D24  0E00               	movlw	0
 12299  012D26  22DD               	addwfc	postdec2,f,c
 12300  012D28  D736               	goto	l12393
 12301  012D2A                     l12417:
 12302                           
 12303                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
 12304                           ;stkvar	_fmt @ sp[(-32)+-4]
 12305  012D2A  0EDC               	movlw	-36
 12306  012D2C  006F FF8F FFD9     	movff	plusw1,fsr2l
 12307  012D32  0EDD               	movlw	-35
 12308  012D34  006F FF8F FFDA     	movff	plusw1,fsr2h
 12309  012D3A  006F FF7B FFF6     	movff	postinc2,tblptrl
 12310  012D40  006F FF77 FFF7     	movff	postdec2,tblptrh
 12311  012D46                     	if	0	;tblptru may be non-zero
 12312  012D46                     	endif
 12313  012D46                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12314  012D46  0E00               	movlw	low (__mediumconst shr (0+16))
 12315  012D48  6EF8               	movwf	tblptru,c
 12316  012D4A                     	endif
 12317  012D4A  0008               	tblrd		*
 12318  012D4C  50F5               	movf	tablat,w,c
 12319  012D4E  0A73               	xorlw	115
 12320  012D50  A4D8               	btfss	status,2,c
 12321  012D52  D042               	goto	l12427
 12322                           
 12323                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
 12324                           ;stkvar	_fmt @ sp[(-32)+-4]
 12325  012D54  0EDC               	movlw	-36
 12326  012D56  006F FF8F FFD9     	movff	plusw1,fsr2l
 12327  012D5C  0EDD               	movlw	-35
 12328  012D5E  006F FF8F FFDA     	movff	plusw1,fsr2h
 12329  012D64  2ADE               	incf	postinc2,f,c
 12330  012D66  0E00               	movlw	0
 12331  012D68  22DD               	addwfc	postdec2,f,c
 12332                           
 12333                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
 12334                           ;stkvar	_ap @ sp[(-32)+-6]
 12335  012D6A  0EDA               	movlw	-38
 12336  012D6C  006F FF8F FFD9     	movff	plusw1,fsr2l
 12337  012D72  0EDB               	movlw	-37
 12338  012D74  006F FF8F FFDA     	movff	plusw1,fsr2h
 12339  012D7A  0E02               	movlw	2
 12340  012D7C  5EDE               	subwf	postinc2,f,c
 12341  012D7E  0E00               	movlw	0
 12342  012D80  5ADD               	subwfb	postdec2,f,c
 12343  012D82  006F FF78  F00B    	movff	postinc2,btemp+10
 12344  012D88  006F FF74  F00C    	movff	postdec2,btemp+11
 12345  012D8E  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 12346  012D94  0060  F033  FFDA   	movff	btemp+11,fsr2h
 12347  012D9A  006F FF78  F00B    	movff	postinc2,btemp+10
 12348  012DA0  006F FF74  F00C    	movff	postdec2,btemp+11
 12349                           
 12350                           ;stkvar	_cp @ sp[(-32)+29]
 12351  012DA6  0EFE               	movlw	-2
 12352  012DA8  0060  F033  FFE3   	movff	btemp+11,plusw1
 12353  012DAE  0EFD               	movlw	-3
 12354  012DB0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12355                           
 12356                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
 12357                           ;stkvar	_cp @ sp[(-32)+29]
 12358  012DB6  0EFD               	movlw	-3
 12359  012DB8  006F FF8F FFE6     	movff	plusw1,postinc1
 12360  012DBE  006F FF8F FFE6     	movff	plusw1,postinc1
 12361                           
 12362                           ;stkvar	_fp @ sp[(-34)+-2]
 12363  012DC4  0EDC               	movlw	-36
 12364  012DC6  006F FF8F FFE6     	movff	plusw1,postinc1
 12365  012DCC  006F FF8F FFE6     	movff	plusw1,postinc1
 12366  012DD2  ECA3  F0B8         	call	_stoa	;wreg free
 12367  012DD6  D2AF               	goto	l2367
 12368  012DD8                     l12427:
 12369                           
 12370                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1182:         if (*fmt[0] == 
      +                          'u') {
 12371                           ;stkvar	_fmt @ sp[(-32)+-4]
 12372  012DD8  0EDC               	movlw	-36
 12373  012DDA  006F FF8F FFD9     	movff	plusw1,fsr2l
 12374  012DE0  0EDD               	movlw	-35
 12375  012DE2  006F FF8F FFDA     	movff	plusw1,fsr2h
 12376  012DE8  006F FF7B FFF6     	movff	postinc2,tblptrl
 12377  012DEE  006F FF77 FFF7     	movff	postdec2,tblptrh
 12378  012DF4                     	if	0	;tblptru may be non-zero
 12379  012DF4                     	endif
 12380  012DF4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12381  012DF4  0E00               	movlw	low (__mediumconst shr (0+16))
 12382  012DF6  6EF8               	movwf	tblptru,c
 12383  012DF8                     	endif
 12384  012DF8  0008               	tblrd		*
 12385  012DFA  50F5               	movf	tablat,w,c
 12386  012DFC  0A75               	xorlw	117
 12387  012DFE  A4D8               	btfss	status,2,c
 12388  012E00  D07C               	goto	l12437
 12389                           
 12390                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1184:             ++*fmt;
 12391                           ;stkvar	_fmt @ sp[(-32)+-4]
 12392  012E02  0EDC               	movlw	-36
 12393  012E04  006F FF8F FFD9     	movff	plusw1,fsr2l
 12394  012E0A  0EDD               	movlw	-35
 12395  012E0C  006F FF8F FFDA     	movff	plusw1,fsr2h
 12396  012E12  2ADE               	incf	postinc2,f,c
 12397  012E14  0E00               	movlw	0
 12398  012E16  22DD               	addwfc	postdec2,f,c
 12399                           
 12400                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1185:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
 12401                           ;stkvar	_ap @ sp[(-32)+-6]
 12402  012E18  0EDA               	movlw	-38
 12403  012E1A  006F FF8F FFD9     	movff	plusw1,fsr2l
 12404  012E20  0EDB               	movlw	-37
 12405  012E22  006F FF8F FFDA     	movff	plusw1,fsr2h
 12406  012E28  0E02               	movlw	2
 12407  012E2A  5EDE               	subwf	postinc2,f,c
 12408  012E2C  0E00               	movlw	0
 12409  012E2E  5ADD               	subwfb	postdec2,f,c
 12410  012E30  006F FF78  F00B    	movff	postinc2,btemp+10
 12411  012E36  006F FF74  F00C    	movff	postdec2,btemp+11
 12412  012E3C  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 12413  012E42  0060  F033  FFDA   	movff	btemp+11,fsr2h
 12414  012E48  006F FF78  F00B    	movff	postinc2,btemp+10
 12415  012E4E  006F FF74  F00C    	movff	postdec2,btemp+11
 12416  012E54  500B               	movf	(btemp+10)^0,w,c
 12417  012E56  6E11               	movwf	(btemp+16)^0,c
 12418  012E58  500C               	movf	(btemp+11)^0,w,c
 12419  012E5A  6E12               	movwf	(btemp+17)^0,c
 12420  012E5C  6A13               	clrf	(btemp+18)^0,c
 12421  012E5E  6A14               	clrf	(btemp+19)^0,c
 12422  012E60  6A15               	clrf	(btemp+20)^0,c
 12423  012E62  6A16               	clrf	(btemp+21)^0,c
 12424  012E64  6A17               	clrf	(btemp+22)^0,c
 12425  012E66  6A18               	clrf	(btemp+23)^0,c
 12426                           
 12427                           ;stkvar	_llu @ sp[(-32)+6]
 12428  012E68  0EE6               	movlw	-26
 12429  012E6A  0060  F047  FFE3   	movff	btemp+16,plusw1
 12430  012E70  0EE7               	movlw	-25
 12431  012E72  0060  F04B  FFE3   	movff	btemp+17,plusw1
 12432  012E78  0EE8               	movlw	-24
 12433  012E7A  0060  F04F  FFE3   	movff	btemp+18,plusw1
 12434  012E80  0EE9               	movlw	-23
 12435  012E82  0060  F053  FFE3   	movff	btemp+19,plusw1
 12436  012E88  0EEA               	movlw	-22
 12437  012E8A  0060  F057  FFE3   	movff	btemp+20,plusw1
 12438  012E90  0EEB               	movlw	-21
 12439  012E92  0060  F05B  FFE3   	movff	btemp+21,plusw1
 12440  012E98  0EEC               	movlw	-20
 12441  012E9A  0060  F05F  FFE3   	movff	btemp+22,plusw1
 12442  012EA0  0EED               	movlw	-19
 12443  012EA2  0060  F063  FFE3   	movff	btemp+23,plusw1
 12444                           
 12445                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1187:             return utoa
      +                          (fp, llu);
 12446                           ;stkvar	_llu @ sp[(-32)+6]
 12447  012EA8  50E1               	movf	fsr1l,w,c
 12448  012EAA  0FE6               	addlw	-26
 12449  012EAC  6ED9               	movwf	fsr2l,c
 12450  012EAE  50E2               	movf	fsr1h,w,c
 12451  012EB0  6EDA               	movwf	fsr2h,c
 12452  012EB2  0EFF               	movlw	255
 12453  012EB4  22DA               	addwfc	fsr2h,f,c
 12454  012EB6  006F FF7B FFE6     	movff	postinc2,postinc1
 12455  012EBC  006F FF7B FFE6     	movff	postinc2,postinc1
 12456  012EC2  006F FF7B FFE6     	movff	postinc2,postinc1
 12457  012EC8  006F FF7B FFE6     	movff	postinc2,postinc1
 12458  012ECE  006F FF7B FFE6     	movff	postinc2,postinc1
 12459  012ED4  006F FF7B FFE6     	movff	postinc2,postinc1
 12460  012EDA  006F FF7B FFE6     	movff	postinc2,postinc1
 12461  012EE0  006F FF7B FFE6     	movff	postinc2,postinc1
 12462                           
 12463                           ;stkvar	_fp @ sp[(-40)+-2]
 12464  012EE6  0ED6               	movlw	-42
 12465  012EE8  006F FF8F FFE6     	movff	plusw1,postinc1
 12466  012EEE  006F FF8F FFE6     	movff	plusw1,postinc1
 12467  012EF4  EC91  F0B2         	call	_utoa	;wreg free
 12468  012EF8  D21E               	goto	l2367
 12469  012EFA                     l12437:
 12470                           
 12471                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1192:         if (!strncmp(*f
      +                          mt, "lu", ((sizeof("lu")/sizeof("lu"[0]))-1))) {
 12472  012EFA  0E02               	movlw	2
 12473  012EFC  6EE6               	movwf	postinc1,c
 12474  012EFE  0E00               	movlw	0
 12475  012F00  6EE6               	movwf	postinc1,c
 12476  012F02  0EF3               	movlw	low STR_88
 12477  012F04  6EE6               	movwf	postinc1,c
 12478  012F06  0EFF               	movlw	high STR_88
 12479  012F08  6EE6               	movwf	postinc1,c
 12480                           
 12481                           ;stkvar	_fmt @ sp[(-36)+-4]
 12482  012F0A  0ED8               	movlw	-40
 12483  012F0C  006F FF8F FFD9     	movff	plusw1,fsr2l
 12484  012F12  0ED9               	movlw	-39
 12485  012F14  006F FF8F FFDA     	movff	plusw1,fsr2h
 12486  012F1A  006F FF78  F00B    	movff	postinc2,btemp+10
 12487  012F20  006F FF74  F00C    	movff	postdec2,btemp+11
 12488  012F26  0060  F02F  FFE6   	movff	btemp+10,postinc1
 12489  012F2C  0060  F033  FFE6   	movff	btemp+11,postinc1
 12490  012F32  ECB1  F0BE         	call	_strncmp	;wreg free
 12491  012F36  5001               	movf	btemp^0,w,c
 12492  012F38  1002               	iorwf	(btemp+1)^0,w,c
 12493  012F3A  A4D8               	btfss	status,2,c
 12494  012F3C  D039               	goto	l12447
 12495                           
 12496                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1194:             *fmt += ((s
      +                          izeof("lu")/sizeof("lu"[0]))-1);
 12497                           ;stkvar	_fmt @ sp[(-32)+-4]
 12498  012F3E  0EDC               	movlw	-36
 12499  012F40  006F FF8F FFD9     	movff	plusw1,fsr2l
 12500  012F46  0EDD               	movlw	-35
 12501  012F48  006F FF8F FFDA     	movff	plusw1,fsr2h
 12502  012F4E  0E02               	movlw	2
 12503  012F50  26DE               	addwf	postinc2,f,c
 12504  012F52  0E00               	movlw	0
 12505  012F54  22DD               	addwfc	postdec2,f,c
 12506                           
 12507                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1195:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
 12508                           ;stkvar	_ap @ sp[(-32)+-6]
 12509  012F56  0EDA               	movlw	-38
 12510  012F58  006F FF8F FFD9     	movff	plusw1,fsr2l
 12511  012F5E  0EDB               	movlw	-37
 12512  012F60  006F FF8F FFDA     	movff	plusw1,fsr2h
 12513  012F66  0E04               	movlw	4
 12514  012F68  5EDE               	subwf	postinc2,f,c
 12515  012F6A  0E00               	movlw	0
 12516  012F6C  5ADD               	subwfb	postdec2,f,c
 12517  012F6E  006F FF78  F00B    	movff	postinc2,btemp+10
 12518  012F74  006F FF74  F00C    	movff	postdec2,btemp+11
 12519  012F7A  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 12520  012F80  0060  F033  FFDA   	movff	btemp+11,fsr2h
 12521  012F86  006F FF78  F009    	movff	postinc2,btemp+8
 12522  012F8C  006F FF78  F00A    	movff	postinc2,btemp+9
 12523  012F92  006F FF78  F00B    	movff	postinc2,btemp+10
 12524  012F98  006F FF78  F00C    	movff	postinc2,btemp+11
 12525  012F9E  5009               	movf	(btemp+8)^0,w,c
 12526  012FA0  6E11               	movwf	(btemp+16)^0,c
 12527  012FA2  500A               	movf	(btemp+9)^0,w,c
 12528  012FA4  6E12               	movwf	(btemp+17)^0,c
 12529  012FA6  500B               	movf	(btemp+10)^0,w,c
 12530  012FA8  6E13               	movwf	(btemp+18)^0,c
 12531  012FAA  500C               	movf	(btemp+11)^0,w,c
 12532  012FAC  6E14               	movwf	(btemp+19)^0,c
 12533  012FAE  D758               	goto	L10
 12534  012FB0                     l12447:
 12535                           
 12536                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1274:         if ((*fmt[0] ==
      +                           'x') || (*fmt[0] == 'X')) {
 12537                           ;stkvar	_fmt @ sp[(-32)+-4]
 12538  012FB0  0EDC               	movlw	-36
 12539  012FB2  006F FF8F FFD9     	movff	plusw1,fsr2l
 12540  012FB8  0EDD               	movlw	-35
 12541  012FBA  006F FF8F FFDA     	movff	plusw1,fsr2h
 12542  012FC0  006F FF7B FFF6     	movff	postinc2,tblptrl
 12543  012FC6  006F FF77 FFF7     	movff	postdec2,tblptrh
 12544  012FCC                     	if	0	;tblptru may be non-zero
 12545  012FCC                     	endif
 12546  012FCC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12547  012FCC  0E00               	movlw	low (__mediumconst shr (0+16))
 12548  012FCE  6EF8               	movwf	tblptru,c
 12549  012FD0                     	endif
 12550  012FD0  0008               	tblrd		*
 12551  012FD2  50F5               	movf	tablat,w,c
 12552  012FD4  0A78               	xorlw	120
 12553  012FD6  B4D8               	btfsc	status,2,c
 12554  012FD8  D015               	goto	u12160
 12555                           
 12556                           ;stkvar	_fmt @ sp[(-32)+-4]
 12557  012FDA  0EDC               	movlw	-36
 12558  012FDC  006F FF8F FFD9     	movff	plusw1,fsr2l
 12559  012FE2  0EDD               	movlw	-35
 12560  012FE4  006F FF8F FFDA     	movff	plusw1,fsr2h
 12561  012FEA  006F FF7B FFF6     	movff	postinc2,tblptrl
 12562  012FF0  006F FF77 FFF7     	movff	postdec2,tblptrh
 12563  012FF6                     	if	0	;tblptru may be non-zero
 12564  012FF6                     	endif
 12565  012FF6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12566  012FF6  0E00               	movlw	low (__mediumconst shr (0+16))
 12567  012FF8  6EF8               	movwf	tblptru,c
 12568  012FFA                     	endif
 12569  012FFA  0008               	tblrd		*
 12570  012FFC  50F5               	movf	tablat,w,c
 12571  012FFE  0A58               	xorlw	88
 12572  013000  A4D8               	btfss	status,2,c
 12573  013002  D094               	goto	l12461
 12574  013004                     u12160:
 12575                           
 12576                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1276:             c = (*fmt)[
      +                          0];
 12577                           ;stkvar	_fmt @ sp[(-32)+-4]
 12578  013004  0EDC               	movlw	-36
 12579  013006  006F FF8F FFD9     	movff	plusw1,fsr2l
 12580  01300C  0EDD               	movlw	-35
 12581  01300E  006F FF8F FFDA     	movff	plusw1,fsr2h
 12582  013014  006F FF7B FFF6     	movff	postinc2,tblptrl
 12583  01301A  006F FF77 FFF7     	movff	postdec2,tblptrh
 12584  013020                     	if	0	;tblptru may be non-zero
 12585  013020                     	endif
 12586  013020                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12587  013020  0E00               	movlw	low (__mediumconst shr (0+16))
 12588  013022  6EF8               	movwf	tblptru,c
 12589  013024                     	endif
 12590                           
 12591                           ;stkvar	_c @ sp[(-32)+31]
 12592  013024  0008               	tblrd		*
 12593  013026  0EFF               	movlw	-1
 12594  013028  006F FFD7 FFE3     	movff	tablat,plusw1
 12595                           
 12596                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1277:             ++*fmt;
 12597                           ;stkvar	_fmt @ sp[(-32)+-4]
 12598  01302E  0EDC               	movlw	-36
 12599  013030  006F FF8F FFD9     	movff	plusw1,fsr2l
 12600  013036  0EDD               	movlw	-35
 12601  013038  006F FF8F FFDA     	movff	plusw1,fsr2h
 12602  01303E  2ADE               	incf	postinc2,f,c
 12603  013040  0E00               	movlw	0
 12604  013042  22DD               	addwfc	postdec2,f,c
 12605                           
 12606                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1278:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
 12607                           ;stkvar	_ap @ sp[(-32)+-6]
 12608  013044  0EDA               	movlw	-38
 12609  013046  006F FF8F FFD9     	movff	plusw1,fsr2l
 12610  01304C  0EDB               	movlw	-37
 12611  01304E  006F FF8F FFDA     	movff	plusw1,fsr2h
 12612  013054  0E02               	movlw	2
 12613  013056  5EDE               	subwf	postinc2,f,c
 12614  013058  0E00               	movlw	0
 12615  01305A  5ADD               	subwfb	postdec2,f,c
 12616  01305C  006F FF78  F00B    	movff	postinc2,btemp+10
 12617  013062  006F FF74  F00C    	movff	postdec2,btemp+11
 12618  013068  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 12619  01306E  0060  F033  FFDA   	movff	btemp+11,fsr2h
 12620  013074  006F FF78  F00B    	movff	postinc2,btemp+10
 12621  01307A  006F FF74  F00C    	movff	postdec2,btemp+11
 12622  013080  500B               	movf	(btemp+10)^0,w,c
 12623  013082  6E11               	movwf	(btemp+16)^0,c
 12624  013084  500C               	movf	(btemp+11)^0,w,c
 12625  013086  6E12               	movwf	(btemp+17)^0,c
 12626  013088  6A13               	clrf	(btemp+18)^0,c
 12627  01308A  6A14               	clrf	(btemp+19)^0,c
 12628  01308C  6A15               	clrf	(btemp+20)^0,c
 12629  01308E  6A16               	clrf	(btemp+21)^0,c
 12630  013090  6A17               	clrf	(btemp+22)^0,c
 12631  013092  6A18               	clrf	(btemp+23)^0,c
 12632                           
 12633                           ;stkvar	_llu @ sp[(-32)+6]
 12634  013094  0EE6               	movlw	-26
 12635  013096  0060  F047  FFE3   	movff	btemp+16,plusw1
 12636  01309C  0EE7               	movlw	-25
 12637  01309E  0060  F04B  FFE3   	movff	btemp+17,plusw1
 12638  0130A4  0EE8               	movlw	-24
 12639  0130A6  0060  F04F  FFE3   	movff	btemp+18,plusw1
 12640  0130AC  0EE9               	movlw	-23
 12641  0130AE  0060  F053  FFE3   	movff	btemp+19,plusw1
 12642  0130B4  0EEA               	movlw	-22
 12643  0130B6  0060  F057  FFE3   	movff	btemp+20,plusw1
 12644  0130BC  0EEB               	movlw	-21
 12645  0130BE  0060  F05B  FFE3   	movff	btemp+21,plusw1
 12646  0130C4  0EEC               	movlw	-20
 12647  0130C6  0060  F05F  FFE3   	movff	btemp+22,plusw1
 12648  0130CC  0EED               	movlw	-19
 12649  0130CE  0060  F063  FFE3   	movff	btemp+23,plusw1
 12650                           
 12651                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1280:             return xtoa
      +                          (fp, llu, c);
 12652                           ;stkvar	_c @ sp[(-32)+31]
 12653  0130D4  0EFF               	movlw	-1
 12654  0130D6  50E3               	movf	plusw1,w,c
 12655  0130D8  6EE6               	movwf	postinc1,c
 12656                           
 12657                           ;stkvar	_llu @ sp[(-33)+6]
 12658  0130DA  50E1               	movf	fsr1l,w,c
 12659  0130DC  0FE5               	addlw	-27
 12660  0130DE  6ED9               	movwf	fsr2l,c
 12661  0130E0  50E2               	movf	fsr1h,w,c
 12662  0130E2  6EDA               	movwf	fsr2h,c
 12663  0130E4  0EFF               	movlw	255
 12664  0130E6  22DA               	addwfc	fsr2h,f,c
 12665  0130E8  006F FF7B FFE6     	movff	postinc2,postinc1
 12666  0130EE  006F FF7B FFE6     	movff	postinc2,postinc1
 12667  0130F4  006F FF7B FFE6     	movff	postinc2,postinc1
 12668  0130FA  006F FF7B FFE6     	movff	postinc2,postinc1
 12669  013100  006F FF7B FFE6     	movff	postinc2,postinc1
 12670  013106  006F FF7B FFE6     	movff	postinc2,postinc1
 12671  01310C  006F FF7B FFE6     	movff	postinc2,postinc1
 12672  013112  006F FF7B FFE6     	movff	postinc2,postinc1
 12673                           
 12674                           ;stkvar	_fp @ sp[(-41)+-2]
 12675  013118  0ED5               	movlw	-43
 12676  01311A  006F FF8F FFE6     	movff	plusw1,postinc1
 12677  013120  006F FF8F FFE6     	movff	plusw1,postinc1
 12678  013126  ECFE  F0AE         	call	_xtoa	;wreg free
 12679  01312A  D105               	goto	l2367
 12680  01312C                     l12461:
 12681                           
 12682                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1285:         if (!strncmp(*f
      +                          mt, "lx", ((sizeof("lx")/sizeof("lx"[0]))-1)) || !strncmp(*fmt, "lX", ((sizeof("lX")/siz
      +                          eof("lX"[0]))-1))) {
 12683  01312C  0E02               	movlw	2
 12684  01312E  6EE6               	movwf	postinc1,c
 12685  013130  0E00               	movlw	0
 12686  013132  6EE6               	movwf	postinc1,c
 12687  013134  0EF6               	movlw	low STR_93
 12688  013136  6EE6               	movwf	postinc1,c
 12689  013138  0EFF               	movlw	high STR_93
 12690  01313A  6EE6               	movwf	postinc1,c
 12691                           
 12692                           ;stkvar	_fmt @ sp[(-36)+-4]
 12693  01313C  0ED8               	movlw	-40
 12694  01313E  006F FF8F FFD9     	movff	plusw1,fsr2l
 12695  013144  0ED9               	movlw	-39
 12696  013146  006F FF8F FFDA     	movff	plusw1,fsr2h
 12697  01314C  006F FF78  F00B    	movff	postinc2,btemp+10
 12698  013152  006F FF74  F00C    	movff	postdec2,btemp+11
 12699  013158  0060  F02F  FFE6   	movff	btemp+10,postinc1
 12700  01315E  0060  F033  FFE6   	movff	btemp+11,postinc1
 12701  013164  ECB1  F0BE         	call	_strncmp	;wreg free
 12702  013168  5001               	movf	btemp^0,w,c
 12703  01316A  1002               	iorwf	(btemp+1)^0,w,c
 12704  01316C  B4D8               	btfsc	status,2,c
 12705  01316E  D022               	goto	u12180
 12706  013170  0E02               	movlw	2
 12707  013172  6EE6               	movwf	postinc1,c
 12708  013174  0E00               	movlw	0
 12709  013176  6EE6               	movwf	postinc1,c
 12710  013178  0EE7               	movlw	low STR_97
 12711  01317A  6EE6               	movwf	postinc1,c
 12712  01317C  0EFF               	movlw	high STR_97
 12713  01317E  6EE6               	movwf	postinc1,c
 12714                           
 12715                           ;stkvar	_fmt @ sp[(-36)+-4]
 12716  013180  0ED8               	movlw	-40
 12717  013182  006F FF8F FFD9     	movff	plusw1,fsr2l
 12718  013188  0ED9               	movlw	-39
 12719  01318A  006F FF8F FFDA     	movff	plusw1,fsr2h
 12720  013190  006F FF78  F00B    	movff	postinc2,btemp+10
 12721  013196  006F FF74  F00C    	movff	postdec2,btemp+11
 12722  01319C  0060  F02F  FFE6   	movff	btemp+10,postinc1
 12723  0131A2  0060  F033  FFE6   	movff	btemp+11,postinc1
 12724  0131A8  ECB1  F0BE         	call	_strncmp	;wreg free
 12725  0131AC  5001               	movf	btemp^0,w,c
 12726  0131AE  1002               	iorwf	(btemp+1)^0,w,c
 12727  0131B0  A4D8               	btfss	status,2,c
 12728  0131B2  D058               	goto	l12475
 12729  0131B4                     u12180:
 12730                           
 12731                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1286: ;/opt/microchip/xc8/v2.
      +                          10/pic/sources/c99/common/doprnt.c: 1288:             c = (*fmt)[1];
 12732                           ;stkvar	_fmt @ sp[(-32)+-4]
 12733  0131B4  0EDC               	movlw	-36
 12734  0131B6  006F FF8F FFD9     	movff	plusw1,fsr2l
 12735  0131BC  0EDD               	movlw	-35
 12736  0131BE  006F FF8F FFDA     	movff	plusw1,fsr2h
 12737  0131C4  006F FF78  F00B    	movff	postinc2,btemp+10
 12738  0131CA  006F FF74  F00C    	movff	postdec2,btemp+11
 12739  0131D0  0E01               	movlw	1
 12740  0131D2  260B               	addwf	(btemp+10)^0,f,c
 12741  0131D4  0E00               	movlw	0
 12742  0131D6  220C               	addwfc	(btemp+11)^0,f,c
 12743  0131D8  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 12744  0131DE  0060  F033  FFF7   	movff	btemp+11,tblptrh
 12745  0131E4                     	if	0	;tblptru may be non-zero
 12746  0131E4                     	endif
 12747  0131E4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12748  0131E4  0E00               	movlw	low (__mediumconst shr (0+16))
 12749  0131E6  6EF8               	movwf	tblptru,c
 12750  0131E8                     	endif
 12751                           
 12752                           ;stkvar	_c @ sp[(-32)+31]
 12753  0131E8  0008               	tblrd		*
 12754  0131EA  0EFF               	movlw	-1
 12755  0131EC  006F FFD7 FFE3     	movff	tablat,plusw1
 12756                           
 12757                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1289:             *fmt += ((s
      +                          izeof("lx")/sizeof("lx"[0]))-1);
 12758                           ;stkvar	_fmt @ sp[(-32)+-4]
 12759  0131F2  0EDC               	movlw	-36
 12760  0131F4  006F FF8F FFD9     	movff	plusw1,fsr2l
 12761  0131FA  0EDD               	movlw	-35
 12762  0131FC  006F FF8F FFDA     	movff	plusw1,fsr2h
 12763  013202  0E02               	movlw	2
 12764  013204  26DE               	addwf	postinc2,f,c
 12765  013206  0E00               	movlw	0
 12766  013208  22DD               	addwfc	postdec2,f,c
 12767                           
 12768                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1290:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
 12769                           ;stkvar	_ap @ sp[(-32)+-6]
 12770  01320A  0EDA               	movlw	-38
 12771  01320C  006F FF8F FFD9     	movff	plusw1,fsr2l
 12772  013212  0EDB               	movlw	-37
 12773  013214  006F FF8F FFDA     	movff	plusw1,fsr2h
 12774  01321A  0E04               	movlw	4
 12775  01321C  5EDE               	subwf	postinc2,f,c
 12776  01321E  0E00               	movlw	0
 12777  013220  5ADD               	subwfb	postdec2,f,c
 12778  013222  006F FF78  F00B    	movff	postinc2,btemp+10
 12779  013228  006F FF74  F00C    	movff	postdec2,btemp+11
 12780  01322E  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 12781  013234  0060  F033  FFDA   	movff	btemp+11,fsr2h
 12782  01323A  006F FF78  F009    	movff	postinc2,btemp+8
 12783  013240  006F FF78  F00A    	movff	postinc2,btemp+9
 12784  013246  006F FF78  F00B    	movff	postinc2,btemp+10
 12785  01324C  006F FF78  F00C    	movff	postinc2,btemp+11
 12786  013252  5009               	movf	(btemp+8)^0,w,c
 12787  013254  6E11               	movwf	(btemp+16)^0,c
 12788  013256  500A               	movf	(btemp+9)^0,w,c
 12789  013258  6E12               	movwf	(btemp+17)^0,c
 12790  01325A  500B               	movf	(btemp+10)^0,w,c
 12791  01325C  6E13               	movwf	(btemp+18)^0,c
 12792  01325E  500C               	movf	(btemp+11)^0,w,c
 12793  013260  6E14               	movwf	(btemp+19)^0,c
 12794  013262  D714               	goto	L11
 12795  013264                     l12475:
 12796                           
 12797                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
 12798                           ;stkvar	_fmt @ sp[(-32)+-4]
 12799  013264  0EDC               	movlw	-36
 12800  013266  006F FF8F FFD9     	movff	plusw1,fsr2l
 12801  01326C  0EDD               	movlw	-35
 12802  01326E  006F FF8F FFDA     	movff	plusw1,fsr2h
 12803  013274  006F FF7B FFF6     	movff	postinc2,tblptrl
 12804  01327A  006F FF77 FFF7     	movff	postdec2,tblptrh
 12805  013280                     	if	0	;tblptru may be non-zero
 12806  013280                     	endif
 12807  013280                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12808  013280  0E00               	movlw	low (__mediumconst shr (0+16))
 12809  013282  6EF8               	movwf	tblptru,c
 12810  013284                     	endif
 12811  013284  0008               	tblrd		*
 12812  013286  50F5               	movf	tablat,w,c
 12813  013288  0A25               	xorlw	37
 12814  01328A  A4D8               	btfss	status,2,c
 12815  01328C  D01A               	goto	l12485
 12816                           
 12817                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
 12818                           ;stkvar	_fmt @ sp[(-32)+-4]
 12819  01328E  0EDC               	movlw	-36
 12820  013290  006F FF8F FFD9     	movff	plusw1,fsr2l
 12821  013296  0EDD               	movlw	-35
 12822  013298  006F FF8F FFDA     	movff	plusw1,fsr2h
 12823  01329E  2ADE               	incf	postinc2,f,c
 12824  0132A0  0E00               	movlw	0
 12825  0132A2  22DD               	addwfc	postdec2,f,c
 12826                           
 12827                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
 12828                           ;stkvar	_fp @ sp[(-32)+-2]
 12829  0132A4  0EDE               	movlw	-34
 12830  0132A6  006F FF8F FFE6     	movff	plusw1,postinc1
 12831  0132AC  006F FF8F FFE6     	movff	plusw1,postinc1
 12832  0132B2  0E25               	movlw	37
 12833  0132B4  6EE6               	movwf	postinc1,c
 12834  0132B6  0E00               	movlw	0
 12835  0132B8  6EE6               	movwf	postinc1,c
 12836  0132BA  EC64  F0CA         	call	_fputc	;wreg free
 12837  0132BE                     l12481:
 12838                           
 12839                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1353:             return 1;
 12840  0132BE  0E01               	movlw	1
 12841  0132C0  D00C               	goto	L12
 12842  0132C2                     l12485:
 12843                           
 12844                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
 12845                           ;stkvar	_fmt @ sp[(-32)+-4]
 12846  0132C2  0EDC               	movlw	-36
 12847  0132C4  006F FF8F FFD9     	movff	plusw1,fsr2l
 12848  0132CA  0EDD               	movlw	-35
 12849  0132CC  006F FF8F FFDA     	movff	plusw1,fsr2h
 12850  0132D2  2ADE               	incf	postinc2,f,c
 12851  0132D4  0E00               	movlw	0
 12852  0132D6  22DD               	addwfc	postdec2,f,c
 12853                           
 12854                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1358:         return 0;
 12855  0132D8  0E00               	movlw	0
 12856  0132DA                     L12:
 12857  0132DA  6E01               	movwf	btemp^0,c
 12858  0132DC  0E00               	movlw	0
 12859  0132DE  6E02               	movwf	(btemp+1)^0,c
 12860  0132E0  D02A               	goto	l2367
 12861  0132E2                     l12491:
 12862                           
 12863                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
 12864                           ;stkvar	_fp @ sp[(-32)+-2]
 12865  0132E2  0EDE               	movlw	-34
 12866  0132E4  006F FF8F FFE6     	movff	plusw1,postinc1
 12867  0132EA  006F FF8F FFE6     	movff	plusw1,postinc1
 12868                           
 12869                           ;stkvar	_fmt @ sp[(-34)+-4]
 12870  0132F0  0EDA               	movlw	-38
 12871  0132F2  006F FF8F FFD9     	movff	plusw1,fsr2l
 12872  0132F8  0EDB               	movlw	-37
 12873  0132FA  006F FF8F FFDA     	movff	plusw1,fsr2h
 12874  013300  006F FF7B FFF6     	movff	postinc2,tblptrl
 12875  013306  006F FF77 FFF7     	movff	postdec2,tblptrh
 12876  01330C                     	if	0	;tblptru may be non-zero
 12877  01330C                     	endif
 12878  01330C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12879  01330C  0E00               	movlw	low (__mediumconst shr (0+16))
 12880  01330E  6EF8               	movwf	tblptru,c
 12881  013310                     	endif
 12882  013310  0008               	tblrd		*
 12883  013312  50F5               	movf	tablat,w,c
 12884  013314  6EE6               	movwf	postinc1,c
 12885  013316  0E00               	movlw	0
 12886  013318  6EE6               	movwf	postinc1,c
 12887  01331A  EC64  F0CA         	call	_fputc	;wreg free
 12888                           
 12889                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
 12890                           ;stkvar	_fmt @ sp[(-32)+-4]
 12891  01331E  0EDC               	movlw	-36
 12892  013320  006F FF8F FFD9     	movff	plusw1,fsr2l
 12893  013326  0EDD               	movlw	-35
 12894  013328  006F FF8F FFDA     	movff	plusw1,fsr2h
 12895  01332E  2ADE               	incf	postinc2,f,c
 12896  013330  0E00               	movlw	0
 12897  013332  22DD               	addwfc	postdec2,f,c
 12898  013334  D7C4               	goto	l12481
 12899  013336                     l2367:
 12900                           
 12901                           ; _vfpfcnvrt: autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, ar
      +                          gsize = 6, vargsize = 0
 12902  013336  0EDA               	movlw	218
 12903  013338  26E1               	addwf	fsr1l,f,c
 12904  01333A  0EFF               	movlw	255
 12905  01333C  22E2               	addwfc	fsr1h,f,c
 12906  01333E  0012               	return		;funcret
 12907  013340                     __end_of_vfpfcnvrt:
 12908                           	opt callstack 0
 12909                           
 12910 ;; *************** function _xtoa *****************
 12911 ;; Defined at:
 12912 ;;		line 623 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 12913 ;; Parameters:    Size  Location     Type
 12914 ;;  fp              2  [STACK] PTR struct _IO_FILE
 12915 ;;		 -> f(6), NULL(0), 
 12916 ;;  d               8  [STACK] unsigned long long 
 12917 ;;  x               1  [STACK] unsigned char 
 12918 ;; Auto vars:     Size  Location     Type
 12919 ;;  n               8  [STACK] unsigned long long 
 12920 ;;  c               2  [STACK] int 
 12921 ;;  i               2  [STACK] int 
 12922 ;;  w               2  [STACK] int 
 12923 ;;  p               2  [STACK] int 
 12924 ;; Return value:  Size  Location     Type
 12925 ;;                  2  [STACK] int 
 12926 ;; Registers used:
 12927 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 12928 ;; Tracked objects:
 12929 ;;		On entry : 0/0
 12930 ;;		On exit  : 0/0
 12931 ;;		Unchanged: 0/0
 12932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12933 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12934 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12935 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12936 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12937 ;;Total ram usage:        0 bytes
 12938 ;; Hardware stack levels used:    1
 12939 ;; Hardware stack levels required when called:   20
 12940 ;; This function calls:
 12941 ;;		_isalpha
 12942 ;;		_isupper
 12943 ;;		_pad
 12944 ;;		_toupper
 12945 ;; This function is called by:
 12946 ;;		_vfpfcnvrt
 12947 ;; This function uses a reentrant model
 12948 ;;
 12949                           
 12950                           	psect	text46
 12951  015DFC                     __ptext46:
 12952                           	opt callstack 0
 12953  015DFC                     _xtoa:
 12954                           	opt callstack 0
 12955                           
 12956                           ; autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsize = 11 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 12957  015DFC  0E14               	movlw	20
 12958  015DFE  26E1               	addwf	fsr1l,f,c
 12959  015E00  0E00               	movlw	0
 12960  015E02  22E2               	addwfc	fsr1h,f,c
 12961                           
 12962                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 623: static int xtoa(FILE *fp
      +                          , unsigned long long d, char x);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 624: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 625:     int c, i, p,
      +                           w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 626:     unsigned long lon
      +                          g n;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 629:     if (!(prec < 0))
      +                           {
 12963                           
 12964                           ;incstack = 0
 12965 ;; hardware stack exceeded
 12966  015E04  AE3D               	btfss	(_prec+1)^0,7,c
 12967                           
 12968                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 630:         flags &= ~(1 << 
      +                          1);
 12969  015E06  923E               	bcf	_flags^0,1,c
 12970                           
 12971                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 632:     p = (0 < prec) ? pre
      +                          c : 1;
 12972  015E08  BE3D               	btfsc	(_prec+1)^0,7,c
 12973  015E0A  D005               	goto	u11710
 12974  015E0C  503D               	movf	(_prec+1)^0,w,c
 12975  015E0E  E110               	bnz	l12215
 12976  015E10  043C               	decf	_prec^0,w,c
 12977  015E12  B0D8               	btfsc	status,0,c
 12978  015E14  D00D               	goto	l12215
 12979  015E16                     u11710:
 12980  015E16  0E01               	movlw	1
 12981  015E18  6E0B               	movwf	(btemp+10)^0,c
 12982  015E1A  0E00               	movlw	0
 12983  015E1C  6E0C               	movwf	(btemp+11)^0,c
 12984                           
 12985                           ;stkvar	_p @ sp[(-20)+18]
 12986  015E1E  0EFE               	movlw	-2
 12987  015E20  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12988  015E26  0EFF               	movlw	-1
 12989  015E28  0060  F033  FFE3   	movff	btemp+11,plusw1
 12990  015E2E  D008               	goto	l2317
 12991  015E30                     l12215:
 12992                           
 12993                           ;stkvar	_p @ sp[(-20)+18]
 12994  015E30  0EFE               	movlw	-2
 12995  015E32  0060  F0F3  FFE3   	movff	_prec,plusw1
 12996  015E38  0EFF               	movlw	-1
 12997  015E3A  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 12998  015E40                     l2317:
 12999                           
 13000                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 633:     w = width;
 13001                           ;stkvar	_w @ sp[(-20)+16]
 13002  015E40  0EFC               	movlw	-4
 13003  015E42  0060  F0EB  FFE3   	movff	_width,plusw1
 13004  015E48  0EFD               	movlw	-3
 13005  015E4A  0060  F0EF  FFE3   	movff	_width+1,plusw1
 13006                           
 13007                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 634:     if (flags & (1 << 4)
      +                          ) {
 13008  015E50  A83E               	btfss	_flags^0,4,c
 13009  015E52  D00B               	goto	l12221
 13010                           
 13011                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
 13012                           ;stkvar	_w @ sp[(-20)+16]
 13013  015E54  50E1               	movf	fsr1l,w,c
 13014  015E56  0FFC               	addlw	-4
 13015  015E58  6ED9               	movwf	fsr2l,c
 13016  015E5A  50E2               	movf	fsr1h,w,c
 13017  015E5C  6EDA               	movwf	fsr2h,c
 13018  015E5E  0EFF               	movlw	255
 13019  015E60  22DA               	addwfc	fsr2h,f,c
 13020  015E62  0EFE               	movlw	254
 13021  015E64  26DE               	addwf	postinc2,f,c
 13022  015E66  0EFF               	movlw	255
 13023  015E68  22DD               	addwfc	postdec2,f,c
 13024  015E6A                     l12221:
 13025                           
 13026                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 639:     n = d;
 13027                           ;stkvar	_d @ sp[(-20)+-10]
 13028  015E6A  0EE2               	movlw	226
 13029  015E6C  24E1               	addwf	fsr1l,w,c
 13030  015E6E  6ED9               	movwf	fsr2l,c
 13031  015E70  0EFF               	movlw	255
 13032  015E72  20E2               	addwfc	fsr1h,w,c
 13033  015E74  6EDA               	movwf	fsr2h,c
 13034                           
 13035                           ;stkvar	_n @ sp[(-20)+4]
 13036  015E76  0E08               	movlw	8
 13037  015E78  6E01               	movwf	btemp^0,c
 13038  015E7A  0EF0               	movlw	-16
 13039  015E7C                     us1173999:
 13040  015E7C  006F FF7B FFE3     	movff	postinc2,plusw1
 13041  015E82  28E8               	incf	wreg,w,c
 13042  015E84  2E01               	decfsz	btemp^0,f,c
 13043  015E86  D7FA               	bra	us1173999
 13044                           
 13045                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(dbuf) - 1
      +                          ;
 13046  015E88  0E4F               	movlw	79
 13047  015E8A  6E0B               	movwf	(btemp+10)^0,c
 13048  015E8C  0E00               	movlw	0
 13049  015E8E  6E0C               	movwf	(btemp+11)^0,c
 13050                           
 13051                           ;stkvar	_i @ sp[(-20)+14]
 13052  015E90  0EFA               	movlw	-6
 13053  015E92  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13054  015E98  0EFB               	movlw	-5
 13055  015E9A  0060  F033  FFE3   	movff	btemp+11,plusw1
 13056                           
 13057                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '\0';
 13058  015EA0  0102               	movlb	2	; () banked
 13059  015EA2  6BE6               	clrf	(_dbuf+79)& (0+255),b
 13060                           
 13061                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 13062  015EA4  D0EE               	goto	l12259
 13063  015EA6                     l12227:
 13064                           
 13065                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 643:         --i;
 13066                           ;stkvar	_i @ sp[(-20)+14]
 13067  015EA6  50E1               	movf	fsr1l,w,c
 13068  015EA8  0FFA               	addlw	-6
 13069  015EAA  6ED9               	movwf	fsr2l,c
 13070  015EAC  50E2               	movf	fsr1h,w,c
 13071  015EAE  6EDA               	movwf	fsr2h,c
 13072  015EB0  0EFF               	movlw	255
 13073  015EB2  22DA               	addwfc	fsr2h,f,c
 13074  015EB4  06DE               	decf	postinc2,f,c
 13075  015EB6  0E00               	movlw	0
 13076  015EB8  5ADD               	subwfb	postdec2,f,c
 13077                           
 13078                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 644:         c = n & 0x0f;
 13079                           ;stkvar	_n @ sp[(-20)+4]
 13080  015EBA  0EF0               	movlw	-16
 13081  015EBC  006F FF8C  F00B    	movff	plusw1,btemp+10
 13082  015EC2  0EF1               	movlw	-15
 13083  015EC4  006F FF8C  F00C    	movff	plusw1,btemp+11
 13084  015ECA  0E0F               	movlw	15
 13085  015ECC  160B               	andwf	(btemp+10)^0,f,c
 13086  015ECE  0E00               	movlw	0
 13087  015ED0  160C               	andwf	(btemp+11)^0,f,c
 13088                           
 13089                           ;stkvar	_c @ sp[(-20)+12]
 13090  015ED2  0EF8               	movlw	-8
 13091  015ED4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13092  015EDA  0EF9               	movlw	-7
 13093  015EDC  0060  F033  FFE3   	movff	btemp+11,plusw1
 13094                           
 13095                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 645:         c = (c < 10) ? '
      +                          0' + c : 'a' + (c - 10);
 13096                           ;stkvar	_c @ sp[(-20)+12]
 13097  015EE2  0EF9               	movlw	-7
 13098  015EE4  BEE3               	btfsc	plusw1,7,c
 13099  015EE6  D00F               	goto	l12235
 13100  015EE8  0EF9               	movlw	-7
 13101  015EEA  50E3               	movf	plusw1,w,c
 13102  015EEC  E108               	bnz	u11740
 13103  015EEE  0EF8               	movlw	-8
 13104  015EF0  006F FF8C  F001    	movff	plusw1,btemp
 13105  015EF6  0E0A               	movlw	10
 13106  015EF8  5E01               	subwf	btemp^0,f,c
 13107  015EFA  A0D8               	btfss	status,0,c
 13108  015EFC  D004               	goto	l12235
 13109  015EFE                     u11740:
 13110                           
 13111                           ;stkvar	_c @ sp[(-20)+12]
 13112  015EFE  0EF8               	movlw	-8
 13113  015F00  50E3               	movf	plusw1,w,c
 13114  015F02  0F57               	addlw	87
 13115  015F04  D003               	goto	L13
 13116  015F06                     l12235:
 13117                           
 13118                           ;stkvar	_c @ sp[(-20)+12]
 13119  015F06  0EF8               	movlw	-8
 13120  015F08  50E3               	movf	plusw1,w,c
 13121  015F0A  0F30               	addlw	48
 13122  015F0C                     L13:
 13123  015F0C  6E0B               	movwf	(btemp+10)^0,c
 13124  015F0E  0EF9               	movlw	-7
 13125  015F10  006F FF8C  F00C    	movff	plusw1,btemp+11
 13126  015F16  0E00               	movlw	0
 13127  015F18  220C               	addwfc	(btemp+11)^0,f,c
 13128                           
 13129                           ;stkvar	_c @ sp[(-20)+12]
 13130  015F1A  0EF8               	movlw	-8
 13131  015F1C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13132  015F22  0EF9               	movlw	-7
 13133  015F24  0060  F033  FFE3   	movff	btemp+11,plusw1
 13134  015F2A  0EBF               	movlw	191
 13135  015F2C  6E0B               	movwf	(btemp+10)^0,c
 13136  015F2E  0EFF               	movlw	255
 13137  015F30  6E0C               	movwf	(btemp+11)^0,c
 13138                           
 13139                           ;stkvar	_x @ sp[(-20)+-11]
 13140  015F32  0EE1               	movlw	-31
 13141  015F34  50E3               	movf	plusw1,w,c
 13142  015F36  6E09               	movwf	(btemp+8)^0,c
 13143  015F38  6A0A               	clrf	(btemp+9)^0,c
 13144  015F3A  500B               	movf	(btemp+10)^0,w,c
 13145  015F3C  2609               	addwf	(btemp+8)^0,f,c
 13146  015F3E  500C               	movf	(btemp+11)^0,w,c
 13147  015F40  220A               	addwfc	(btemp+9)^0,f,c
 13148  015F42  500A               	movf	(btemp+9)^0,w,c
 13149  015F44  E106               	bnz	u11750
 13150  015F46  0E1A               	movlw	26
 13151  015F48  5C09               	subwf	(btemp+8)^0,w,c
 13152  015F4A  B0D8               	btfsc	status,0,c
 13153  015F4C  D002               	goto	u11750
 13154  015F4E  0E01               	movlw	1
 13155  015F50  D001               	goto	u11760
 13156  015F52                     u11750:
 13157  015F52  0E00               	movlw	0
 13158  015F54                     u11760:
 13159  015F54  6E0B               	movwf	(btemp+10)^0,c
 13160  015F56  6A0C               	clrf	(btemp+11)^0,c
 13161                           
 13162                           ;stkvar	_xtoa$5532 @ sp[(-20)+2]
 13163  015F58  0EEE               	movlw	-18
 13164  015F5A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13165  015F60  0EEF               	movlw	-17
 13166  015F62  0060  F033  FFE3   	movff	btemp+11,plusw1
 13167                           
 13168                           ;stkvar	_xtoa$5532 @ sp[(-20)+2]
 13169  015F68  0EEE               	movlw	-18
 13170  015F6A  006F FF8C  F001    	movff	plusw1,btemp
 13171  015F70  0EEF               	movlw	-17
 13172  015F72  50E3               	movf	plusw1,w,c
 13173  015F74  1001               	iorwf	btemp^0,w,c
 13174  015F76  B4D8               	btfsc	status,2,c
 13175  015F78  D041               	goto	l12251
 13176  015F7A  0E9F               	movlw	159
 13177  015F7C  6E0B               	movwf	(btemp+10)^0,c
 13178  015F7E  0EFF               	movlw	255
 13179  015F80  6E0C               	movwf	(btemp+11)^0,c
 13180                           
 13181                           ;stkvar	_c @ sp[(-20)+12]
 13182  015F82  0EF8               	movlw	-8
 13183  015F84  006F FF8C  F009    	movff	plusw1,btemp+8
 13184  015F8A  0EF9               	movlw	-7
 13185  015F8C  006F FF8C  F00A    	movff	plusw1,btemp+9
 13186  015F92  0E20               	movlw	32
 13187  015F94  1209               	iorwf	(btemp+8)^0,f,c
 13188  015F96  0E00               	movlw	0
 13189  015F98  120A               	iorwf	(btemp+9)^0,f,c
 13190  015F9A  500B               	movf	(btemp+10)^0,w,c
 13191  015F9C  2609               	addwf	(btemp+8)^0,f,c
 13192  015F9E  500C               	movf	(btemp+11)^0,w,c
 13193  015FA0  220A               	addwfc	(btemp+9)^0,f,c
 13194  015FA2  500A               	movf	(btemp+9)^0,w,c
 13195  015FA4  E106               	bnz	u11780
 13196  015FA6  0E1A               	movlw	26
 13197  015FA8  5C09               	subwf	(btemp+8)^0,w,c
 13198  015FAA  B0D8               	btfsc	status,0,c
 13199  015FAC  D002               	goto	u11780
 13200  015FAE  0E01               	movlw	1
 13201  015FB0  D001               	goto	u11790
 13202  015FB2                     u11780:
 13203  015FB2  0E00               	movlw	0
 13204  015FB4                     u11790:
 13205  015FB4  6E0B               	movwf	(btemp+10)^0,c
 13206  015FB6  6A0C               	clrf	(btemp+11)^0,c
 13207                           
 13208                           ;stkvar	_xtoa$5533 @ sp[(-20)+0]
 13209  015FB8  0EEC               	movlw	-20
 13210  015FBA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13211  015FC0  0EED               	movlw	-19
 13212  015FC2  0060  F033  FFE3   	movff	btemp+11,plusw1
 13213                           
 13214                           ;stkvar	_xtoa$5533 @ sp[(-20)+0]
 13215  015FC8  0EEC               	movlw	-20
 13216  015FCA  006F FF8C  F001    	movff	plusw1,btemp
 13217  015FD0  0EED               	movlw	-19
 13218  015FD2  50E3               	movf	plusw1,w,c
 13219  015FD4  1001               	iorwf	btemp^0,w,c
 13220  015FD6  B4D8               	btfsc	status,2,c
 13221  015FD8  D011               	goto	l12251
 13222                           
 13223                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 647:             c = toupper(
      +                          c);
 13224                           ;stkvar	_c @ sp[(-20)+12]
 13225  015FDA  0EF8               	movlw	-8
 13226  015FDC  006F FF8F FFE6     	movff	plusw1,postinc1
 13227  015FE2  006F FF8F FFE6     	movff	plusw1,postinc1
 13228  015FE8  EC9C  F0D4         	call	_toupper	;wreg free
 13229                           
 13230                           ;stkvar	_c @ sp[(-20)+12]
 13231  015FEC  0EF8               	movlw	-8
 13232  015FEE  0060  F007  FFE3   	movff	btemp,plusw1
 13233  015FF4  0EF9               	movlw	-7
 13234  015FF6  0060  F00B  FFE3   	movff	btemp+1,plusw1
 13235  015FFC                     l12251:
 13236                           
 13237                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 649:         dbuf[i] = (char)
      +                          c;
 13238                           ;stkvar	_c @ sp[(-20)+12]
 13239                           ;stkvar	_i @ sp[(-20)+14]
 13240  015FFC  0EFA               	movlw	-6
 13241  015FFE  006F FF8C  F00B    	movff	plusw1,btemp+10
 13242  016004  0EFB               	movlw	-5
 13243  016006  006F FF8C  F00C    	movff	plusw1,btemp+11
 13244  01600C  0E97               	movlw	low _dbuf
 13245  01600E  240B               	addwf	(btemp+10)^0,w,c
 13246  016010  6ED9               	movwf	fsr2l,c
 13247  016012  0E02               	movlw	high _dbuf
 13248  016014  200C               	addwfc	(btemp+11)^0,w,c
 13249  016016  6EDA               	movwf	fsr2h,c
 13250  016018  0EF8               	movlw	-8
 13251  01601A  006F FF8F FFDF     	movff	plusw1,indf2
 13252                           
 13253                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 650:         --p;
 13254                           ;stkvar	_p @ sp[(-20)+18]
 13255  016020  50E1               	movf	fsr1l,w,c
 13256  016022  0FFE               	addlw	-2
 13257  016024  6ED9               	movwf	fsr2l,c
 13258  016026  50E2               	movf	fsr1h,w,c
 13259  016028  6EDA               	movwf	fsr2h,c
 13260  01602A  0EFF               	movlw	255
 13261  01602C  22DA               	addwfc	fsr2h,f,c
 13262  01602E  06DE               	decf	postinc2,f,c
 13263  016030  0E00               	movlw	0
 13264  016032  5ADD               	subwfb	postdec2,f,c
 13265                           
 13266                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 651:         --w;
 13267                           ;stkvar	_w @ sp[(-20)+16]
 13268  016034  50E1               	movf	fsr1l,w,c
 13269  016036  0FFC               	addlw	-4
 13270  016038  6ED9               	movwf	fsr2l,c
 13271  01603A  50E2               	movf	fsr1h,w,c
 13272  01603C  6EDA               	movwf	fsr2h,c
 13273  01603E  0EFF               	movlw	255
 13274  016040  22DA               	addwfc	fsr2h,f,c
 13275  016042  06DE               	decf	postinc2,f,c
 13276  016044  0E00               	movlw	0
 13277  016046  5ADD               	subwfb	postdec2,f,c
 13278                           
 13279                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 652:         n = n >> 4;
 13280  016048  0E04               	movlw	4
 13281  01604A  6E0C               	movwf	(btemp+11)^0,c
 13282                           
 13283                           ;stkvar	_n @ sp[(-20)+4]
 13284  01604C  50E1               	movf	fsr1l,w,c
 13285  01604E  0FF0               	addlw	-16
 13286  016050  6ED9               	movwf	fsr2l,c
 13287  016052  50E2               	movf	fsr1h,w,c
 13288  016054  6EDA               	movwf	fsr2h,c
 13289  016056  0EFF               	movlw	255
 13290  016058  22DA               	addwfc	fsr2h,f,c
 13291  01605A  280C               	incf	(btemp+11)^0,w,c
 13292  01605C  52DE               	movf	postinc2,f,c
 13293  01605E  D00F               	goto	u11810
 13294  016060                     u11815:
 13295  016060  52DE               	movf	postinc2,f,c
 13296  016062  52DE               	movf	postinc2,f,c
 13297  016064  52DE               	movf	postinc2,f,c
 13298  016066  52DE               	movf	postinc2,f,c
 13299  016068  52DE               	movf	postinc2,f,c
 13300  01606A  52DE               	movf	postinc2,f,c
 13301  01606C  90D8               	bcf	status,0,c
 13302  01606E  32DD               	rrcf	postdec2,f,c
 13303  016070  32DD               	rrcf	postdec2,f,c
 13304  016072  32DD               	rrcf	postdec2,f,c
 13305  016074  32DD               	rrcf	postdec2,f,c
 13306  016076  32DD               	rrcf	postdec2,f,c
 13307  016078  32DD               	rrcf	postdec2,f,c
 13308  01607A  32DD               	rrcf	postdec2,f,c
 13309  01607C  32DE               	rrcf	postinc2,f,c
 13310  01607E                     u11810:
 13311  01607E  2EE8               	decfsz	wreg,f,c
 13312  016080  D7EF               	goto	u11815
 13313  016082                     l12259:
 13314                           
 13315                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 13316                           ;stkvar	_i @ sp[(-20)+14]
 13317  016082  0EFB               	movlw	-5
 13318  016084  BEE3               	btfsc	plusw1,7,c
 13319  016086  D03A               	goto	u11860
 13320  016088  0EFB               	movlw	-5
 13321  01608A  50E3               	movf	plusw1,w,c
 13322  01608C  E108               	bnz	u11820
 13323  01608E  0EFA               	movlw	-6
 13324  016090  006F FF8C  F001    	movff	plusw1,btemp
 13325  016096  0E02               	movlw	2
 13326  016098  5E01               	subwf	btemp^0,f,c
 13327  01609A  A0D8               	btfss	status,0,c
 13328  01609C  D02F               	goto	u11860
 13329  01609E                     u11820:
 13330                           
 13331                           ;stkvar	_n @ sp[(-20)+4]
 13332  01609E  0EF0               	movlw	-16
 13333  0160A0  50E3               	movf	plusw1,w,c
 13334  0160A2  E115               	bnz	u11831
 13335  0160A4  0EF1               	movlw	-15
 13336  0160A6  50E3               	movf	plusw1,w,c
 13337  0160A8  E112               	bnz	u11831
 13338  0160AA  0EF2               	movlw	-14
 13339  0160AC  50E3               	movf	plusw1,w,c
 13340  0160AE  E10F               	bnz	u11831
 13341  0160B0  0EF3               	movlw	-13
 13342  0160B2  50E3               	movf	plusw1,w,c
 13343  0160B4  E10C               	bnz	u11831
 13344  0160B6  0EF4               	movlw	-12
 13345  0160B8  50E3               	movf	plusw1,w,c
 13346  0160BA  E109               	bnz	u11831
 13347  0160BC  0EF5               	movlw	-11
 13348  0160BE  50E3               	movf	plusw1,w,c
 13349  0160C0  E106               	bnz	u11831
 13350  0160C2  0EF6               	movlw	-10
 13351  0160C4  50E3               	movf	plusw1,w,c
 13352  0160C6  E103               	bnz	u11831
 13353  0160C8  0EF7               	movlw	-9
 13354  0160CA  50E3               	movf	plusw1,w,c
 13355  0160CC  A4D8               	btfss	status,2,c
 13356  0160CE                     u11831:
 13357  0160CE  D6EB               	goto	l12227
 13358                           
 13359                           ;stkvar	_p @ sp[(-20)+18]
 13360  0160D0  0EFF               	movlw	-1
 13361  0160D2  BEE3               	btfsc	plusw1,7,c
 13362  0160D4  D007               	goto	u11840
 13363  0160D6  0EFF               	movlw	-1
 13364  0160D8  50E3               	movf	plusw1,w,c
 13365  0160DA  E103               	bnz	u11841
 13366  0160DC  0EFE               	movlw	-2
 13367  0160DE  04E3               	decf	plusw1,w,c
 13368  0160E0  B0D8               	btfsc	status,0,c
 13369  0160E2                     u11841:
 13370  0160E2  D6E1               	goto	l12227
 13371  0160E4                     u11840:
 13372                           
 13373                           ;stkvar	_w @ sp[(-20)+16]
 13374  0160E4  0EFD               	movlw	-3
 13375  0160E6  BEE3               	btfsc	plusw1,7,c
 13376  0160E8  D009               	goto	u11860
 13377  0160EA  0EFD               	movlw	-3
 13378  0160EC  50E3               	movf	plusw1,w,c
 13379  0160EE  E104               	bnz	u11850
 13380  0160F0  0EFC               	movlw	-4
 13381  0160F2  04E3               	decf	plusw1,w,c
 13382  0160F4  A0D8               	btfss	status,0,c
 13383  0160F6  D002               	goto	u11860
 13384  0160F8                     u11850:
 13385  0160F8  B23E               	btfsc	_flags^0,1,c
 13386  0160FA  D6D5               	goto	l12227
 13387  0160FC                     u11860:
 13388                           
 13389                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 656:     if (flags & (1 << 4)
      +                          ) {
 13390  0160FC  A83E               	btfss	_flags^0,4,c
 13391  0160FE  D036               	goto	l12275
 13392                           
 13393                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 657:         --i;
 13394                           ;stkvar	_i @ sp[(-20)+14]
 13395  016100  50E1               	movf	fsr1l,w,c
 13396  016102  0FFA               	addlw	-6
 13397  016104  6ED9               	movwf	fsr2l,c
 13398  016106  50E2               	movf	fsr1h,w,c
 13399  016108  6EDA               	movwf	fsr2h,c
 13400  01610A  0EFF               	movlw	255
 13401  01610C  22DA               	addwfc	fsr2h,f,c
 13402  01610E  06DE               	decf	postinc2,f,c
 13403  016110  0E00               	movlw	0
 13404  016112  5ADD               	subwfb	postdec2,f,c
 13405                           
 13406                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 658:         dbuf[i] = x;
 13407                           ;stkvar	_x @ sp[(-20)+-11]
 13408                           ;stkvar	_i @ sp[(-20)+14]
 13409  016114  0EFA               	movlw	-6
 13410  016116  006F FF8C  F00B    	movff	plusw1,btemp+10
 13411  01611C  0EFB               	movlw	-5
 13412  01611E  006F FF8C  F00C    	movff	plusw1,btemp+11
 13413  016124  0E97               	movlw	low _dbuf
 13414  016126  240B               	addwf	(btemp+10)^0,w,c
 13415  016128  6ED9               	movwf	fsr2l,c
 13416  01612A  0E02               	movlw	high _dbuf
 13417  01612C  200C               	addwfc	(btemp+11)^0,w,c
 13418  01612E  6EDA               	movwf	fsr2h,c
 13419  016130  0EE1               	movlw	-31
 13420  016132  006F FF8F FFDF     	movff	plusw1,indf2
 13421                           
 13422                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 659:         --i;
 13423                           ;stkvar	_i @ sp[(-20)+14]
 13424  016138  50E1               	movf	fsr1l,w,c
 13425  01613A  0FFA               	addlw	-6
 13426  01613C  6ED9               	movwf	fsr2l,c
 13427  01613E  50E2               	movf	fsr1h,w,c
 13428  016140  6EDA               	movwf	fsr2h,c
 13429  016142  0EFF               	movlw	255
 13430  016144  22DA               	addwfc	fsr2h,f,c
 13431  016146  06DE               	decf	postinc2,f,c
 13432  016148  0E00               	movlw	0
 13433  01614A  5ADD               	subwfb	postdec2,f,c
 13434                           
 13435                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 660:         dbuf[i] = '0';
 13436                           ;stkvar	_i @ sp[(-20)+14]
 13437  01614C  0EFA               	movlw	-6
 13438  01614E  006F FF8C  F00B    	movff	plusw1,btemp+10
 13439  016154  0EFB               	movlw	-5
 13440  016156  006F FF8C  F00C    	movff	plusw1,btemp+11
 13441  01615C  0E97               	movlw	low _dbuf
 13442  01615E  240B               	addwf	(btemp+10)^0,w,c
 13443  016160  6ED9               	movwf	fsr2l,c
 13444  016162  0E02               	movlw	high _dbuf
 13445  016164  200C               	addwfc	(btemp+11)^0,w,c
 13446  016166  6EDA               	movwf	fsr2h,c
 13447  016168  0E30               	movlw	48
 13448  01616A  6EDF               	movwf	indf2,c
 13449  01616C                     l12275:
 13450                           
 13451                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 664:     return pad(fp, &dbuf
      +                          [i], w);
 13452                           ;stkvar	_w @ sp[(-20)+16]
 13453  01616C  0EFC               	movlw	-4
 13454  01616E  006F FF8F FFE6     	movff	plusw1,postinc1
 13455  016174  006F FF8F FFE6     	movff	plusw1,postinc1
 13456                           
 13457                           ;stkvar	_i @ sp[(-22)+14]
 13458  01617A  0E97               	movlw	low _dbuf
 13459  01617C  6E0B               	movwf	(btemp+10)^0,c
 13460  01617E  0E02               	movlw	high _dbuf
 13461  016180  6E0C               	movwf	(btemp+11)^0,c
 13462  016182  0EF8               	movlw	-8
 13463  016184  50E3               	movf	plusw1,w,c
 13464  016186  260B               	addwf	(btemp+10)^0,f,c
 13465  016188  0EF9               	movlw	-7
 13466  01618A  50E3               	movf	plusw1,w,c
 13467  01618C  220C               	addwfc	(btemp+11)^0,f,c
 13468  01618E  0060  F02F  FFE6   	movff	btemp+10,postinc1
 13469  016194  0060  F033  FFE6   	movff	btemp+11,postinc1
 13470                           
 13471                           ;stkvar	_fp @ sp[(-24)+-2]
 13472  01619A  0EE6               	movlw	-26
 13473  01619C  006F FF8F FFE6     	movff	plusw1,postinc1
 13474  0161A2  006F FF8F FFE6     	movff	plusw1,postinc1
 13475  0161A8  EC0F  F0CC         	call	_pad	;wreg free
 13476                           
 13477                           ; _xtoa: autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsiz
      +                          e = 11, vargsize = 0
 13478  0161AC  0EE1               	movlw	225
 13479  0161AE  26E1               	addwf	fsr1l,f,c
 13480  0161B0  0EFF               	movlw	255
 13481  0161B2  22E2               	addwfc	fsr1h,f,c
 13482  0161B4  0012               	return		;funcret
 13483  0161B6                     __end_of_xtoa:
 13484                           	opt callstack 0
 13485                           
 13486 ;; *************** function _toupper *****************
 13487 ;; Defined at:
 13488 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/toupper.c"
 13489 ;; Parameters:    Size  Location     Type
 13490 ;;  c               2  [STACK] int 
 13491 ;; Auto vars:     Size  Location     Type
 13492 ;;		None
 13493 ;; Return value:  Size  Location     Type
 13494 ;;                  2  [STACK] int 
 13495 ;; Registers used:
 13496 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 13497 ;; Tracked objects:
 13498 ;;		On entry : 0/2
 13499 ;;		On exit  : 0/0
 13500 ;;		Unchanged: 0/0
 13501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13502 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13503 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13504 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13505 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13506 ;;Total ram usage:        0 bytes
 13507 ;; Hardware stack levels used:    1
 13508 ;; Hardware stack levels required when called:   16
 13509 ;; This function calls:
 13510 ;;		_islower
 13511 ;; This function is called by:
 13512 ;;		_xtoa
 13513 ;; This function uses a reentrant model
 13514 ;;
 13515                           
 13516                           	psect	text47
 13517  01A938                     __ptext47:
 13518                           	opt callstack 0
 13519  01A938                     _toupper:
 13520                           	opt callstack 0
 13521                           
 13522                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13523  01A938  52E6               	movf	postinc1,f,c
 13524  01A93A  52E6               	movf	postinc1,f,c
 13525                           
 13526                           ;stkvar	_c @ sp[(-2)+-2]
 13527                           
 13528                           ;incstack = 0
 13529 ;; hardware stack exceeded
 13530  01A93C  0EFC               	movlw	-4
 13531  01A93E  50E3               	movf	plusw1,w,c
 13532  01A940  0F9F               	addlw	159
 13533  01A942  6E0B               	movwf	(btemp+10)^0,c
 13534  01A944  0EFD               	movlw	-3
 13535  01A946  006F FF8C  F00C    	movff	plusw1,btemp+11
 13536  01A94C  0EFF               	movlw	255
 13537  01A94E  220C               	addwfc	(btemp+11)^0,f,c
 13538  01A950  500C               	movf	(btemp+11)^0,w,c
 13539  01A952  E106               	bnz	u6160
 13540  01A954  0E1A               	movlw	26
 13541  01A956  5C0B               	subwf	(btemp+10)^0,w,c
 13542  01A958  B0D8               	btfsc	status,0,c
 13543  01A95A  D002               	goto	u6160
 13544  01A95C  0E01               	movlw	1
 13545  01A95E  D001               	goto	u6170
 13546  01A960                     u6160:
 13547  01A960  0E00               	movlw	0
 13548  01A962                     u6170:
 13549  01A962  6E0B               	movwf	(btemp+10)^0,c
 13550  01A964  6A0C               	clrf	(btemp+11)^0,c
 13551                           
 13552                           ;stkvar	_toupper$6339 @ sp[(-2)+0]
 13553  01A966  0EFE               	movlw	-2
 13554  01A968  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13555  01A96E  0EFF               	movlw	-1
 13556  01A970  0060  F033  FFE3   	movff	btemp+11,plusw1
 13557                           
 13558                           ;stkvar	_toupper$6339 @ sp[(-2)+0]
 13559  01A976  0EFE               	movlw	-2
 13560  01A978  006F FF8C  F001    	movff	plusw1,btemp
 13561  01A97E  0EFF               	movlw	-1
 13562  01A980  50E3               	movf	plusw1,w,c
 13563  01A982  1001               	iorwf	btemp^0,w,c
 13564  01A984  B4D8               	btfsc	status,2,c
 13565  01A986  D00D               	goto	l7985
 13566                           
 13567                           ;stkvar	_c @ sp[(-2)+-2]
 13568  01A988  0EFC               	movlw	-4
 13569  01A98A  006F FF8C  F001    	movff	plusw1,btemp
 13570  01A990  0EFD               	movlw	-3
 13571  01A992  006F FF8C  F002    	movff	plusw1,btemp+1
 13572  01A998  0E5F               	movlw	95
 13573  01A99A  1601               	andwf	btemp^0,f,c
 13574  01A99C  0E00               	movlw	0
 13575  01A99E  1602               	andwf	(btemp+1)^0,f,c
 13576  01A9A0  D008               	goto	l3484
 13577  01A9A2                     l7985:
 13578                           
 13579                           ;stkvar	_c @ sp[(-2)+-2]
 13580  01A9A2  0EFC               	movlw	-4
 13581  01A9A4  006F FF8C  F001    	movff	plusw1,btemp
 13582  01A9AA  0EFD               	movlw	-3
 13583  01A9AC  006F FF8C  F002    	movff	plusw1,btemp+1
 13584  01A9B2                     l3484:
 13585                           
 13586                           ; _toupper: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 13587  01A9B2  52E5               	movf	postdec1,f,c
 13588  01A9B4  52E5               	movf	postdec1,f,c
 13589  01A9B6  52E5               	movf	postdec1,f,c
 13590  01A9B8  52E5               	movf	postdec1,f,c
 13591  01A9BA  0012               	return		;funcret
 13592  01A9BC                     __end_of_toupper:
 13593                           	opt callstack 0
 13594                           
 13595 ;; *************** function _islower *****************
 13596 ;; Defined at:
 13597 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/islower.c"
 13598 ;; Parameters:    Size  Location     Type
 13599 ;;  c               2  [STACK] int 
 13600 ;; Auto vars:     Size  Location     Type
 13601 ;;		None
 13602 ;; Return value:  Size  Location     Type
 13603 ;;                  2  [STACK] int 
 13604 ;; Registers used:
 13605 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 13606 ;; Tracked objects:
 13607 ;;		On entry : 0/0
 13608 ;;		On exit  : 0/0
 13609 ;;		Unchanged: 0/0
 13610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13611 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13612 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13613 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13614 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13615 ;;Total ram usage:        0 bytes
 13616 ;; Hardware stack levels used:    1
 13617 ;; Hardware stack levels required when called:   15
 13618 ;; This function calls:
 13619 ;;		Nothing
 13620 ;; This function is called by:
 13621 ;;		_toupper
 13622 ;; This function uses a reentrant model
 13623 ;;
 13624                           
 13625                           	psect	text48
 13626  01B608                     __ptext48:
 13627                           	opt callstack 0
 13628  01B608                     _islower:
 13629                           	opt callstack 0
 13630                           
 13631                           ;stkvar	_c @ sp[(0)+-2]
 13632                           
 13633                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13634                           ;incstack = 0
 13635 ;; hardware stack exceeded
 13636  01B608  0EFE               	movlw	-2
 13637  01B60A  50E3               	movf	plusw1,w,c
 13638  01B60C  0F9F               	addlw	159
 13639  01B60E  6E0B               	movwf	(btemp+10)^0,c
 13640  01B610  0EFF               	movlw	-1
 13641  01B612  006F FF8C  F00C    	movff	plusw1,btemp+11
 13642  01B618  0EFF               	movlw	255
 13643  01B61A  220C               	addwfc	(btemp+11)^0,f,c
 13644  01B61C  500C               	movf	(btemp+11)^0,w,c
 13645  01B61E  E106               	bnz	u5850
 13646  01B620  0E1A               	movlw	26
 13647  01B622  5C0B               	subwf	(btemp+10)^0,w,c
 13648  01B624  B0D8               	btfsc	status,0,c
 13649  01B626  D002               	goto	u5850
 13650  01B628  0E01               	movlw	1
 13651  01B62A  D001               	goto	u5860
 13652  01B62C                     u5850:
 13653  01B62C  0E00               	movlw	0
 13654  01B62E                     u5860:
 13655  01B62E  6E01               	movwf	btemp^0,c
 13656  01B630  6A02               	clrf	(btemp+1)^0,c
 13657                           
 13658                           ; _islower: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 13659  01B632  52E5               	movf	postdec1,f,c
 13660  01B634  52E5               	movf	postdec1,f,c
 13661  01B636  0012               	return		;funcret
 13662  01B638                     __end_of_islower:
 13663                           	opt callstack 0
 13664                           
 13665 ;; *************** function _isalpha *****************
 13666 ;; Defined at:
 13667 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isalpha.c"
 13668 ;; Parameters:    Size  Location     Type
 13669 ;;  c               2  [STACK] int 
 13670 ;; Auto vars:     Size  Location     Type
 13671 ;;		None
 13672 ;; Return value:  Size  Location     Type
 13673 ;;                  2  [STACK] int 
 13674 ;; Registers used:
 13675 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11
 13676 ;; Tracked objects:
 13677 ;;		On entry : 0/0
 13678 ;;		On exit  : 0/0
 13679 ;;		Unchanged: 0/0
 13680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13681 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13682 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13683 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13684 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13685 ;;Total ram usage:        0 bytes
 13686 ;; Hardware stack levels used:    1
 13687 ;; Hardware stack levels required when called:   15
 13688 ;; This function calls:
 13689 ;;		Nothing
 13690 ;; This function is called by:
 13691 ;;		_xtoa
 13692 ;; This function uses a reentrant model
 13693 ;;
 13694                           
 13695                           	psect	text49
 13696  01B256                     __ptext49:
 13697                           	opt callstack 0
 13698  01B256                     _isalpha:
 13699                           	opt callstack 0
 13700                           
 13701                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13702                           ;incstack = 0
 13703 ;; hardware stack exceeded
 13704  01B256  0E9F               	movlw	159
 13705  01B258  6E0B               	movwf	(btemp+10)^0,c
 13706  01B25A  0EFF               	movlw	255
 13707  01B25C  6E0C               	movwf	(btemp+11)^0,c
 13708                           
 13709                           ;stkvar	_c @ sp[(0)+-2]
 13710  01B25E  0EFE               	movlw	-2
 13711  01B260  006F FF8C  F009    	movff	plusw1,btemp+8
 13712  01B266  0EFF               	movlw	-1
 13713  01B268  006F FF8C  F00A    	movff	plusw1,btemp+9
 13714  01B26E  0E20               	movlw	32
 13715  01B270  1209               	iorwf	(btemp+8)^0,f,c
 13716  01B272  0E00               	movlw	0
 13717  01B274  120A               	iorwf	(btemp+9)^0,f,c
 13718  01B276  500B               	movf	(btemp+10)^0,w,c
 13719  01B278  2609               	addwf	(btemp+8)^0,f,c
 13720  01B27A  500C               	movf	(btemp+11)^0,w,c
 13721  01B27C  220A               	addwfc	(btemp+9)^0,f,c
 13722  01B27E  500A               	movf	(btemp+9)^0,w,c
 13723  01B280  E106               	bnz	u6140
 13724  01B282  0E1A               	movlw	26
 13725  01B284  5C09               	subwf	(btemp+8)^0,w,c
 13726  01B286  B0D8               	btfsc	status,0,c
 13727  01B288  D002               	goto	u6140
 13728  01B28A  0E01               	movlw	1
 13729  01B28C  D001               	goto	u6150
 13730  01B28E                     u6140:
 13731  01B28E  0E00               	movlw	0
 13732  01B290                     u6150:
 13733  01B290  6E01               	movwf	btemp^0,c
 13734  01B292  6A02               	clrf	(btemp+1)^0,c
 13735                           
 13736                           ; _isalpha: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 13737  01B294  52E5               	movf	postdec1,f,c
 13738  01B296  52E5               	movf	postdec1,f,c
 13739  01B298  0012               	return		;funcret
 13740  01B29A                     __end_of_isalpha:
 13741                           	opt callstack 0
 13742                           
 13743 ;; *************** function _utoa *****************
 13744 ;; Defined at:
 13745 ;;		line 593 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 13746 ;; Parameters:    Size  Location     Type
 13747 ;;  fp              2  [STACK] PTR struct _IO_FILE
 13748 ;;		 -> f(6), NULL(0), 
 13749 ;;  d               8  [STACK] unsigned long long 
 13750 ;; Auto vars:     Size  Location     Type
 13751 ;;  n               8  [STACK] unsigned long long 
 13752 ;;  i               2  [STACK] int 
 13753 ;;  w               2  [STACK] int 
 13754 ;;  p               2  [STACK] int 
 13755 ;; Return value:  Size  Location     Type
 13756 ;;                  2  [STACK] int 
 13757 ;; Registers used:
 13758 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 13759 ;; Tracked objects:
 13760 ;;		On entry : 0/0
 13761 ;;		On exit  : 0/0
 13762 ;;		Unchanged: 0/0
 13763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13764 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13765 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13766 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13767 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13768 ;;Total ram usage:        0 bytes
 13769 ;; Hardware stack levels used:    1
 13770 ;; Hardware stack levels required when called:   20
 13771 ;; This function calls:
 13772 ;;		___lodiv
 13773 ;;		___lomod
 13774 ;;		_pad
 13775 ;; This function is called by:
 13776 ;;		_vfpfcnvrt
 13777 ;; This function uses a reentrant model
 13778 ;;
 13779                           
 13780                           	psect	text50
 13781  016522                     __ptext50:
 13782                           	opt callstack 0
 13783  016522                     _utoa:
 13784                           	opt callstack 0
 13785                           
 13786                           ; autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 13787  016522  0E0E               	movlw	14
 13788  016524  26E1               	addwf	fsr1l,f,c
 13789  016526  0E00               	movlw	0
 13790  016528  22E2               	addwfc	fsr1h,f,c
 13791                           
 13792                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 593: static int utoa(FILE *fp
      +                          , unsigned long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 594: {
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 595:     int i, p, w;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 596:     unsigned long long n;;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 599:     if (!(prec < 0)) {
 13793                           
 13794                           ;incstack = 0
 13795 ;; hardware stack exceeded
 13796  01652A  AE3D               	btfss	(_prec+1)^0,7,c
 13797                           
 13798                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 600:         flags &= ~(1 << 
      +                          1);
 13799  01652C  923E               	bcf	_flags^0,1,c
 13800                           
 13801                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 602:     p = (0 < prec) ? pre
      +                          c : 1;
 13802  01652E  BE3D               	btfsc	(_prec+1)^0,7,c
 13803  016530  D005               	goto	u11630
 13804  016532  503D               	movf	(_prec+1)^0,w,c
 13805  016534  E110               	bnz	l12175
 13806  016536  043C               	decf	_prec^0,w,c
 13807  016538  B0D8               	btfsc	status,0,c
 13808  01653A  D00D               	goto	l12175
 13809  01653C                     u11630:
 13810  01653C  0E01               	movlw	1
 13811  01653E  6E0B               	movwf	(btemp+10)^0,c
 13812  016540  0E00               	movlw	0
 13813  016542  6E0C               	movwf	(btemp+11)^0,c
 13814                           
 13815                           ;stkvar	_p @ sp[(-14)+12]
 13816  016544  0EFE               	movlw	-2
 13817  016546  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13818  01654C  0EFF               	movlw	-1
 13819  01654E  0060  F033  FFE3   	movff	btemp+11,plusw1
 13820  016554  D008               	goto	l2302
 13821  016556                     l12175:
 13822                           
 13823                           ;stkvar	_p @ sp[(-14)+12]
 13824  016556  0EFE               	movlw	-2
 13825  016558  0060  F0F3  FFE3   	movff	_prec,plusw1
 13826  01655E  0EFF               	movlw	-1
 13827  016560  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 13828  016566                     l2302:
 13829                           
 13830                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 603:     w = width;
 13831                           ;stkvar	_w @ sp[(-14)+10]
 13832  016566  0EFC               	movlw	-4
 13833  016568  0060  F0EB  FFE3   	movff	_width,plusw1
 13834  01656E  0EFD               	movlw	-3
 13835  016570  0060  F0EF  FFE3   	movff	_width+1,plusw1
 13836                           
 13837                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 606:     n = d;
 13838                           ;stkvar	_d @ sp[(-14)+-10]
 13839  016576  0EE8               	movlw	232
 13840  016578  24E1               	addwf	fsr1l,w,c
 13841  01657A  6ED9               	movwf	fsr2l,c
 13842  01657C  0EFF               	movlw	255
 13843  01657E  20E2               	addwfc	fsr1h,w,c
 13844  016580  6EDA               	movwf	fsr2h,c
 13845                           
 13846                           ;stkvar	_n @ sp[(-14)+0]
 13847  016582  0E08               	movlw	8
 13848  016584  6E01               	movwf	btemp^0,c
 13849  016586  0EF2               	movlw	-14
 13850  016588                     us1164999:
 13851  016588  006F FF7B FFE3     	movff	postinc2,plusw1
 13852  01658E  28E8               	incf	wreg,w,c
 13853  016590  2E01               	decfsz	btemp^0,f,c
 13854  016592  D7FA               	bra	us1164999
 13855                           
 13856                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 607:     i = sizeof(dbuf) - 1
      +                          ;
 13857  016594  0E4F               	movlw	79
 13858  016596  6E0B               	movwf	(btemp+10)^0,c
 13859  016598  0E00               	movlw	0
 13860  01659A  6E0C               	movwf	(btemp+11)^0,c
 13861                           
 13862                           ;stkvar	_i @ sp[(-14)+8]
 13863  01659C  0EFA               	movlw	-6
 13864  01659E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13865  0165A4  0EFB               	movlw	-5
 13866  0165A6  0060  F033  FFE3   	movff	btemp+11,plusw1
 13867                           
 13868                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 608:     dbuf[i] = '\0';
 13869  0165AC  0102               	movlb	2	; () banked
 13870  0165AE  6BE6               	clrf	(_dbuf+79)& (0+255),b
 13871                           
 13872                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
 13873  0165B0  D0FB               	goto	l12193
 13874  0165B2                     l12183:
 13875                           
 13876                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 610:         --i;
 13877                           ;stkvar	_i @ sp[(-14)+8]
 13878  0165B2  50E1               	movf	fsr1l,w,c
 13879  0165B4  0FFA               	addlw	-6
 13880  0165B6  6ED9               	movwf	fsr2l,c
 13881  0165B8  50E2               	movf	fsr1h,w,c
 13882  0165BA  6EDA               	movwf	fsr2h,c
 13883  0165BC  0EFF               	movlw	255
 13884  0165BE  22DA               	addwfc	fsr2h,f,c
 13885  0165C0  06DE               	decf	postinc2,f,c
 13886  0165C2  0E00               	movlw	0
 13887  0165C4  5ADD               	subwfb	postdec2,f,c
 13888                           
 13889                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 611:         dbuf[i] = '0' + 
      +                          (n % 10);
 13890  0165C6  0E0A               	movlw	10
 13891  0165C8  6EE6               	movwf	postinc1,c
 13892  0165CA  0E00               	movlw	0
 13893  0165CC  6EE6               	movwf	postinc1,c
 13894  0165CE  0E00               	movlw	0
 13895  0165D0  6EE6               	movwf	postinc1,c
 13896  0165D2  0E00               	movlw	0
 13897  0165D4  6EE6               	movwf	postinc1,c
 13898  0165D6  0E00               	movlw	0
 13899  0165D8  6EE6               	movwf	postinc1,c
 13900  0165DA  0E00               	movlw	0
 13901  0165DC  6EE6               	movwf	postinc1,c
 13902  0165DE  0E00               	movlw	0
 13903  0165E0  6EE6               	movwf	postinc1,c
 13904  0165E2  0E00               	movlw	0
 13905  0165E4  6EE6               	movwf	postinc1,c
 13906                           
 13907                           ;stkvar	_n @ sp[(-22)+0]
 13908  0165E6  50E1               	movf	fsr1l,w,c
 13909  0165E8  0FEA               	addlw	-22
 13910  0165EA  6ED9               	movwf	fsr2l,c
 13911  0165EC  50E2               	movf	fsr1h,w,c
 13912  0165EE  6EDA               	movwf	fsr2h,c
 13913  0165F0  0EFF               	movlw	255
 13914  0165F2  22DA               	addwfc	fsr2h,f,c
 13915  0165F4  006F FF7B FFE6     	movff	postinc2,postinc1
 13916  0165FA  006F FF7B FFE6     	movff	postinc2,postinc1
 13917  016600  006F FF7B FFE6     	movff	postinc2,postinc1
 13918  016606  006F FF7B FFE6     	movff	postinc2,postinc1
 13919  01660C  006F FF7B FFE6     	movff	postinc2,postinc1
 13920  016612  006F FF7B FFE6     	movff	postinc2,postinc1
 13921  016618  006F FF7B FFE6     	movff	postinc2,postinc1
 13922  01661E  006F FF7B FFE6     	movff	postinc2,postinc1
 13923  016624  EC2D  F0C9         	call	___lomod	;wreg free
 13924  016628  52E5               	movf	postdec1,f,c
 13925  01662A  006F FF9C  F018    	movff	indf1,btemp+23
 13926  016630  52E5               	movf	postdec1,f,c
 13927  016632  006F FF9C  F017    	movff	indf1,btemp+22
 13928  016638  52E5               	movf	postdec1,f,c
 13929  01663A  006F FF9C  F016    	movff	indf1,btemp+21
 13930  016640  52E5               	movf	postdec1,f,c
 13931  016642  006F FF9C  F015    	movff	indf1,btemp+20
 13932  016648  52E5               	movf	postdec1,f,c
 13933  01664A  006F FF9C  F014    	movff	indf1,btemp+19
 13934  016650  52E5               	movf	postdec1,f,c
 13935  016652  006F FF9C  F013    	movff	indf1,btemp+18
 13936  016658  52E5               	movf	postdec1,f,c
 13937  01665A  006F FF9C  F012    	movff	indf1,btemp+17
 13938  016660  52E5               	movf	postdec1,f,c
 13939  016662  006F FF9C  F011    	movff	indf1,btemp+16
 13940  016668  0EF8               	movlw	248
 13941  01666A  26E1               	addwf	fsr1l,f,c
 13942  01666C  0EFF               	movlw	255
 13943  01666E  22E2               	addwfc	fsr1h,f,c
 13944  016670  0E30               	movlw	48
 13945  016672  2611               	addwf	(btemp+16)^0,f,c
 13946                           
 13947                           ;stkvar	_i @ sp[(-14)+8]
 13948  016674  0EFA               	movlw	-6
 13949  016676  006F FF8C  F00B    	movff	plusw1,btemp+10
 13950  01667C  0EFB               	movlw	-5
 13951  01667E  006F FF8C  F00C    	movff	plusw1,btemp+11
 13952  016684  0E97               	movlw	low _dbuf
 13953  016686  240B               	addwf	(btemp+10)^0,w,c
 13954  016688  6ED9               	movwf	fsr2l,c
 13955  01668A  0E02               	movlw	high _dbuf
 13956  01668C  200C               	addwfc	(btemp+11)^0,w,c
 13957  01668E  6EDA               	movwf	fsr2h,c
 13958  016690  0060  F047  FFDF   	movff	btemp+16,indf2
 13959                           
 13960                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 612:         --p;
 13961                           ;stkvar	_p @ sp[(-14)+12]
 13962  016696  50E1               	movf	fsr1l,w,c
 13963  016698  0FFE               	addlw	-2
 13964  01669A  6ED9               	movwf	fsr2l,c
 13965  01669C  50E2               	movf	fsr1h,w,c
 13966  01669E  6EDA               	movwf	fsr2h,c
 13967  0166A0  0EFF               	movlw	255
 13968  0166A2  22DA               	addwfc	fsr2h,f,c
 13969  0166A4  06DE               	decf	postinc2,f,c
 13970  0166A6  0E00               	movlw	0
 13971  0166A8  5ADD               	subwfb	postdec2,f,c
 13972                           
 13973                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 613:         --w;
 13974                           ;stkvar	_w @ sp[(-14)+10]
 13975  0166AA  50E1               	movf	fsr1l,w,c
 13976  0166AC  0FFC               	addlw	-4
 13977  0166AE  6ED9               	movwf	fsr2l,c
 13978  0166B0  50E2               	movf	fsr1h,w,c
 13979  0166B2  6EDA               	movwf	fsr2h,c
 13980  0166B4  0EFF               	movlw	255
 13981  0166B6  22DA               	addwfc	fsr2h,f,c
 13982  0166B8  06DE               	decf	postinc2,f,c
 13983  0166BA  0E00               	movlw	0
 13984  0166BC  5ADD               	subwfb	postdec2,f,c
 13985                           
 13986                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 614:         n = n / 10;
 13987  0166BE  0E0A               	movlw	10
 13988  0166C0  6EE6               	movwf	postinc1,c
 13989  0166C2  0E00               	movlw	0
 13990  0166C4  6EE6               	movwf	postinc1,c
 13991  0166C6  0E00               	movlw	0
 13992  0166C8  6EE6               	movwf	postinc1,c
 13993  0166CA  0E00               	movlw	0
 13994  0166CC  6EE6               	movwf	postinc1,c
 13995  0166CE  0E00               	movlw	0
 13996  0166D0  6EE6               	movwf	postinc1,c
 13997  0166D2  0E00               	movlw	0
 13998  0166D4  6EE6               	movwf	postinc1,c
 13999  0166D6  0E00               	movlw	0
 14000  0166D8  6EE6               	movwf	postinc1,c
 14001  0166DA  0E00               	movlw	0
 14002  0166DC  6EE6               	movwf	postinc1,c
 14003                           
 14004                           ;stkvar	_n @ sp[(-22)+0]
 14005  0166DE  50E1               	movf	fsr1l,w,c
 14006  0166E0  0FEA               	addlw	-22
 14007  0166E2  6ED9               	movwf	fsr2l,c
 14008  0166E4  50E2               	movf	fsr1h,w,c
 14009  0166E6  6EDA               	movwf	fsr2h,c
 14010  0166E8  0EFF               	movlw	255
 14011  0166EA  22DA               	addwfc	fsr2h,f,c
 14012  0166EC  006F FF7B FFE6     	movff	postinc2,postinc1
 14013  0166F2  006F FF7B FFE6     	movff	postinc2,postinc1
 14014  0166F8  006F FF7B FFE6     	movff	postinc2,postinc1
 14015  0166FE  006F FF7B FFE6     	movff	postinc2,postinc1
 14016  016704  006F FF7B FFE6     	movff	postinc2,postinc1
 14017  01670A  006F FF7B FFE6     	movff	postinc2,postinc1
 14018  016710  006F FF7B FFE6     	movff	postinc2,postinc1
 14019  016716  006F FF7B FFE6     	movff	postinc2,postinc1
 14020  01671C  EC08  F0C5         	call	___lodiv	;wreg free
 14021  016720  52E5               	movf	postdec1,f,c
 14022  016722  006F FF9C  F018    	movff	indf1,btemp+23
 14023  016728  52E5               	movf	postdec1,f,c
 14024  01672A  006F FF9C  F017    	movff	indf1,btemp+22
 14025  016730  52E5               	movf	postdec1,f,c
 14026  016732  006F FF9C  F016    	movff	indf1,btemp+21
 14027  016738  52E5               	movf	postdec1,f,c
 14028  01673A  006F FF9C  F015    	movff	indf1,btemp+20
 14029  016740  52E5               	movf	postdec1,f,c
 14030  016742  006F FF9C  F014    	movff	indf1,btemp+19
 14031  016748  52E5               	movf	postdec1,f,c
 14032  01674A  006F FF9C  F013    	movff	indf1,btemp+18
 14033  016750  52E5               	movf	postdec1,f,c
 14034  016752  006F FF9C  F012    	movff	indf1,btemp+17
 14035  016758  52E5               	movf	postdec1,f,c
 14036  01675A  006F FF9C  F011    	movff	indf1,btemp+16
 14037  016760  0EF8               	movlw	248
 14038  016762  26E1               	addwf	fsr1l,f,c
 14039  016764  0EFF               	movlw	255
 14040  016766  22E2               	addwfc	fsr1h,f,c
 14041                           
 14042                           ;stkvar	_n @ sp[(-14)+0]
 14043  016768  0EF2               	movlw	-14
 14044  01676A  0060  F047  FFE3   	movff	btemp+16,plusw1
 14045  016770  0EF3               	movlw	-13
 14046  016772  0060  F04B  FFE3   	movff	btemp+17,plusw1
 14047  016778  0EF4               	movlw	-12
 14048  01677A  0060  F04F  FFE3   	movff	btemp+18,plusw1
 14049  016780  0EF5               	movlw	-11
 14050  016782  0060  F053  FFE3   	movff	btemp+19,plusw1
 14051  016788  0EF6               	movlw	-10
 14052  01678A  0060  F057  FFE3   	movff	btemp+20,plusw1
 14053  016790  0EF7               	movlw	-9
 14054  016792  0060  F05B  FFE3   	movff	btemp+21,plusw1
 14055  016798  0EF8               	movlw	-8
 14056  01679A  0060  F05F  FFE3   	movff	btemp+22,plusw1
 14057  0167A0  0EF9               	movlw	-7
 14058  0167A2  0060  F063  FFE3   	movff	btemp+23,plusw1
 14059  0167A8                     l12193:
 14060                           
 14061                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
 14062                           ;stkvar	_i @ sp[(-14)+8]
 14063  0167A8  0EFA               	movlw	-6
 14064  0167AA  006F FF8C  F001    	movff	plusw1,btemp
 14065  0167B0  0EFB               	movlw	-5
 14066  0167B2  50E3               	movf	plusw1,w,c
 14067  0167B4  1001               	iorwf	btemp^0,w,c
 14068  0167B6  B4D8               	btfsc	status,2,c
 14069  0167B8  D02F               	goto	u11690
 14070                           
 14071                           ;stkvar	_n @ sp[(-14)+0]
 14072  0167BA  0EF2               	movlw	-14
 14073  0167BC  50E3               	movf	plusw1,w,c
 14074  0167BE  E115               	bnz	u11661
 14075  0167C0  0EF3               	movlw	-13
 14076  0167C2  50E3               	movf	plusw1,w,c
 14077  0167C4  E112               	bnz	u11661
 14078  0167C6  0EF4               	movlw	-12
 14079  0167C8  50E3               	movf	plusw1,w,c
 14080  0167CA  E10F               	bnz	u11661
 14081  0167CC  0EF5               	movlw	-11
 14082  0167CE  50E3               	movf	plusw1,w,c
 14083  0167D0  E10C               	bnz	u11661
 14084  0167D2  0EF6               	movlw	-10
 14085  0167D4  50E3               	movf	plusw1,w,c
 14086  0167D6  E109               	bnz	u11661
 14087  0167D8  0EF7               	movlw	-9
 14088  0167DA  50E3               	movf	plusw1,w,c
 14089  0167DC  E106               	bnz	u11661
 14090  0167DE  0EF8               	movlw	-8
 14091  0167E0  50E3               	movf	plusw1,w,c
 14092  0167E2  E103               	bnz	u11661
 14093  0167E4  0EF9               	movlw	-7
 14094  0167E6  50E3               	movf	plusw1,w,c
 14095  0167E8  A4D8               	btfss	status,2,c
 14096  0167EA                     u11661:
 14097  0167EA  D6E3               	goto	l12183
 14098                           
 14099                           ;stkvar	_p @ sp[(-14)+12]
 14100  0167EC  0EFF               	movlw	-1
 14101  0167EE  BEE3               	btfsc	plusw1,7,c
 14102  0167F0  D007               	goto	u11670
 14103  0167F2  0EFF               	movlw	-1
 14104  0167F4  50E3               	movf	plusw1,w,c
 14105  0167F6  E103               	bnz	u11671
 14106  0167F8  0EFE               	movlw	-2
 14107  0167FA  04E3               	decf	plusw1,w,c
 14108  0167FC  B0D8               	btfsc	status,0,c
 14109  0167FE                     u11671:
 14110  0167FE  D6D9               	goto	l12183
 14111  016800                     u11670:
 14112                           
 14113                           ;stkvar	_w @ sp[(-14)+10]
 14114  016800  0EFD               	movlw	-3
 14115  016802  BEE3               	btfsc	plusw1,7,c
 14116  016804  D009               	goto	u11690
 14117  016806  0EFD               	movlw	-3
 14118  016808  50E3               	movf	plusw1,w,c
 14119  01680A  E104               	bnz	u11680
 14120  01680C  0EFC               	movlw	-4
 14121  01680E  04E3               	decf	plusw1,w,c
 14122  016810  A0D8               	btfss	status,0,c
 14123  016812  D002               	goto	u11690
 14124  016814                     u11680:
 14125  016814  B23E               	btfsc	_flags^0,1,c
 14126  016816  D6CD               	goto	l12183
 14127  016818                     u11690:
 14128                           
 14129                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 618:     return pad(fp, &dbuf
      +                          [i], w);
 14130                           ;stkvar	_w @ sp[(-14)+10]
 14131  016818  0EFC               	movlw	-4
 14132  01681A  006F FF8F FFE6     	movff	plusw1,postinc1
 14133  016820  006F FF8F FFE6     	movff	plusw1,postinc1
 14134                           
 14135                           ;stkvar	_i @ sp[(-16)+8]
 14136  016826  0E97               	movlw	low _dbuf
 14137  016828  6E0B               	movwf	(btemp+10)^0,c
 14138  01682A  0E02               	movlw	high _dbuf
 14139  01682C  6E0C               	movwf	(btemp+11)^0,c
 14140  01682E  0EF8               	movlw	-8
 14141  016830  50E3               	movf	plusw1,w,c
 14142  016832  260B               	addwf	(btemp+10)^0,f,c
 14143  016834  0EF9               	movlw	-7
 14144  016836  50E3               	movf	plusw1,w,c
 14145  016838  220C               	addwfc	(btemp+11)^0,f,c
 14146  01683A  0060  F02F  FFE6   	movff	btemp+10,postinc1
 14147  016840  0060  F033  FFE6   	movff	btemp+11,postinc1
 14148                           
 14149                           ;stkvar	_fp @ sp[(-18)+-2]
 14150  016846  0EEC               	movlw	-20
 14151  016848  006F FF8F FFE6     	movff	plusw1,postinc1
 14152  01684E  006F FF8F FFE6     	movff	plusw1,postinc1
 14153  016854  EC0F  F0CC         	call	_pad	;wreg free
 14154                           
 14155                           ; _utoa: autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 14156  016858  0EE8               	movlw	232
 14157  01685A  26E1               	addwf	fsr1l,f,c
 14158  01685C  0EFF               	movlw	255
 14159  01685E  22E2               	addwfc	fsr1h,f,c
 14160  016860  0012               	return		;funcret
 14161  016862                     __end_of_utoa:
 14162                           	opt callstack 0
 14163                           
 14164 ;; *************** function ___lomod *****************
 14165 ;; Defined at:
 14166 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lomod.c"
 14167 ;; Parameters:    Size  Location     Type
 14168 ;;  dividend        8  [STACK] unsigned long long 
 14169 ;;  divisor         8  [STACK] unsigned long long 
 14170 ;; Auto vars:     Size  Location     Type
 14171 ;;  counter         1  [STACK] unsigned char 
 14172 ;; Return value:  Size  Location     Type
 14173 ;;                  8  [STACK] unsigned long long 
 14174 ;; Registers used:
 14175 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 14176 ;; Tracked objects:
 14177 ;;		On entry : 0/2
 14178 ;;		On exit  : 0/0
 14179 ;;		Unchanged: 0/0
 14180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14181 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14182 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14183 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14184 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14185 ;;Total ram usage:        0 bytes
 14186 ;; Hardware stack levels used:    1
 14187 ;; Hardware stack levels required when called:   15
 14188 ;; This function calls:
 14189 ;;		Nothing
 14190 ;; This function is called by:
 14191 ;;		_utoa
 14192 ;; This function uses a reentrant model
 14193 ;;
 14194                           
 14195                           	psect	text51
 14196  01925A                     __ptext51:
 14197                           	opt callstack 0
 14198  01925A                     ___lomod:
 14199                           	opt callstack 0
 14200                           
 14201                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 14202  01925A  52E6               	movf	postinc1,f,c
 14203                           
 14204                           ;stkvar	_divisor @ sp[(-1)+-16]
 14205                           
 14206                           ;incstack = 0
 14207 ;; hardware stack exceeded
 14208  01925C  0EEF               	movlw	-17
 14209  01925E  50E3               	movf	plusw1,w,c
 14210  019260  E116               	bnz	u7290
 14211  019262  0EF0               	movlw	-16
 14212  019264  50E3               	movf	plusw1,w,c
 14213  019266  E113               	bnz	u7290
 14214  019268  0EF1               	movlw	-15
 14215  01926A  50E3               	movf	plusw1,w,c
 14216  01926C  E110               	bnz	u7290
 14217  01926E  0EF2               	movlw	-14
 14218  019270  50E3               	movf	plusw1,w,c
 14219  019272  E10D               	bnz	u7290
 14220  019274  0EF3               	movlw	-13
 14221  019276  50E3               	movf	plusw1,w,c
 14222  019278  E10A               	bnz	u7290
 14223  01927A  0EF4               	movlw	-12
 14224  01927C  50E3               	movf	plusw1,w,c
 14225  01927E  E107               	bnz	u7290
 14226  019280  0EF5               	movlw	-11
 14227  019282  50E3               	movf	plusw1,w,c
 14228  019284  E104               	bnz	u7290
 14229  019286  0EF6               	movlw	-10
 14230  019288  50E3               	movf	plusw1,w,c
 14231  01928A  B4D8               	btfsc	status,2,c
 14232  01928C  D075               	goto	u7320
 14233  01928E                     u7290:
 14234                           
 14235                           ;stkvar	_counter @ sp[(-1)+0]
 14236  01928E  0EFF               	movlw	-1
 14237  019290  6AE3               	clrf	plusw1,c
 14238  019292  D012               	goto	L14
 14239  019294                     l8595:
 14240                           
 14241                           ;stkvar	_divisor @ sp[(-1)+-16]
 14242  019294  90D8               	bcf	status,0,c
 14243  019296  0EEF               	movlw	-17
 14244  019298  36E3               	rlcf	plusw1,f,c
 14245  01929A  0EF0               	movlw	-16
 14246  01929C  36E3               	rlcf	plusw1,f,c
 14247  01929E  0EF1               	movlw	-15
 14248  0192A0  36E3               	rlcf	plusw1,f,c
 14249  0192A2  0EF2               	movlw	-14
 14250  0192A4  36E3               	rlcf	plusw1,f,c
 14251  0192A6  0EF3               	movlw	-13
 14252  0192A8  36E3               	rlcf	plusw1,f,c
 14253  0192AA  0EF4               	movlw	-12
 14254  0192AC  36E3               	rlcf	plusw1,f,c
 14255  0192AE  0EF5               	movlw	-11
 14256  0192B0  36E3               	rlcf	plusw1,f,c
 14257  0192B2  0EF6               	movlw	-10
 14258  0192B4  36E3               	rlcf	plusw1,f,c
 14259                           
 14260                           ;stkvar	_counter @ sp[(-1)+0]
 14261  0192B6  0EFF               	movlw	-1
 14262  0192B8                     L14:
 14263  0192B8  2AE3               	incf	plusw1,f,c
 14264                           
 14265                           ;stkvar	_divisor @ sp[(-1)+-16]
 14266  0192BA  0EF6               	movlw	-10
 14267  0192BC  AEE3               	btfss	plusw1,7,c
 14268  0192BE  D7EA               	goto	l8595
 14269  0192C0                     u7300:
 14270                           
 14271                           ;stkvar	_divisor @ sp[(-1)+-16]
 14272                           ;stkvar	_dividend @ sp[(-1)+-8]
 14273  0192C0  50E1               	movf	fsr1l,w,c
 14274  0192C2  0FF7               	addlw	-9
 14275  0192C4  6ED9               	movwf	fsr2l,c
 14276  0192C6  50E2               	movf	fsr1h,w,c
 14277  0192C8  6EDA               	movwf	fsr2h,c
 14278  0192CA  0EFF               	movlw	255
 14279  0192CC  22DA               	addwfc	fsr2h,f,c
 14280  0192CE  0EEF               	movlw	-17
 14281  0192D0  50E3               	movf	plusw1,w,c
 14282  0192D2  5CDE               	subwf	postinc2,w,c
 14283  0192D4  0EF0               	movlw	-16
 14284  0192D6  50E3               	movf	plusw1,w,c
 14285  0192D8  58DE               	subwfb	postinc2,w,c
 14286  0192DA  0EF1               	movlw	-15
 14287  0192DC  50E3               	movf	plusw1,w,c
 14288  0192DE  58DE               	subwfb	postinc2,w,c
 14289  0192E0  0EF2               	movlw	-14
 14290  0192E2  50E3               	movf	plusw1,w,c
 14291  0192E4  58DE               	subwfb	postinc2,w,c
 14292  0192E6  0EF3               	movlw	-13
 14293  0192E8  50E3               	movf	plusw1,w,c
 14294  0192EA  58DE               	subwfb	postinc2,w,c
 14295  0192EC  0EF4               	movlw	-12
 14296  0192EE  50E3               	movf	plusw1,w,c
 14297  0192F0  58DE               	subwfb	postinc2,w,c
 14298  0192F2  0EF5               	movlw	-11
 14299  0192F4  50E3               	movf	plusw1,w,c
 14300  0192F6  58DE               	subwfb	postinc2,w,c
 14301  0192F8  0EF6               	movlw	-10
 14302  0192FA  50E3               	movf	plusw1,w,c
 14303  0192FC  58DE               	subwfb	postinc2,w,c
 14304  0192FE  A0D8               	btfss	status,0,c
 14305  019300  D01F               	goto	l8603
 14306                           
 14307                           ;stkvar	_divisor @ sp[(-1)+-16]
 14308                           ;stkvar	_dividend @ sp[(-1)+-8]
 14309  019302  50E1               	movf	fsr1l,w,c
 14310  019304  0FF7               	addlw	-9
 14311  019306  6ED9               	movwf	fsr2l,c
 14312  019308  50E2               	movf	fsr1h,w,c
 14313  01930A  6EDA               	movwf	fsr2h,c
 14314  01930C  0EFF               	movlw	255
 14315  01930E  22DA               	addwfc	fsr2h,f,c
 14316  019310  0EEF               	movlw	-17
 14317  019312  50E3               	movf	plusw1,w,c
 14318  019314  5EDE               	subwf	postinc2,f,c
 14319  019316  0EF0               	movlw	-16
 14320  019318  50E3               	movf	plusw1,w,c
 14321  01931A  5ADE               	subwfb	postinc2,f,c
 14322  01931C  0EF1               	movlw	-15
 14323  01931E  50E3               	movf	plusw1,w,c
 14324  019320  5ADE               	subwfb	postinc2,f,c
 14325  019322  0EF2               	movlw	-14
 14326  019324  50E3               	movf	plusw1,w,c
 14327  019326  5ADE               	subwfb	postinc2,f,c
 14328  019328  0EF3               	movlw	-13
 14329  01932A  50E3               	movf	plusw1,w,c
 14330  01932C  5ADE               	subwfb	postinc2,f,c
 14331  01932E  0EF4               	movlw	-12
 14332  019330  50E3               	movf	plusw1,w,c
 14333  019332  5ADE               	subwfb	postinc2,f,c
 14334  019334  0EF5               	movlw	-11
 14335  019336  50E3               	movf	plusw1,w,c
 14336  019338  5ADE               	subwfb	postinc2,f,c
 14337  01933A  0EF6               	movlw	-10
 14338  01933C  50E3               	movf	plusw1,w,c
 14339  01933E  5ADE               	subwfb	postinc2,f,c
 14340  019340                     l8603:
 14341                           
 14342                           ;stkvar	_divisor @ sp[(-1)+-16]
 14343  019340  90D8               	bcf	status,0,c
 14344  019342  0EF6               	movlw	-10
 14345  019344  32E3               	rrcf	plusw1,f,c
 14346  019346  0EF5               	movlw	-11
 14347  019348  32E3               	rrcf	plusw1,f,c
 14348  01934A  0EF4               	movlw	-12
 14349  01934C  32E3               	rrcf	plusw1,f,c
 14350  01934E  0EF3               	movlw	-13
 14351  019350  32E3               	rrcf	plusw1,f,c
 14352  019352  0EF2               	movlw	-14
 14353  019354  32E3               	rrcf	plusw1,f,c
 14354  019356  0EF1               	movlw	-15
 14355  019358  32E3               	rrcf	plusw1,f,c
 14356  01935A  0EF0               	movlw	-16
 14357  01935C  32E3               	rrcf	plusw1,f,c
 14358  01935E  0EEF               	movlw	-17
 14359  019360  32E3               	rrcf	plusw1,f,c
 14360                           
 14361                           ;stkvar	_counter @ sp[(-1)+0]
 14362  019362  0EFF               	movlw	-1
 14363  019364  50E3               	movf	plusw1,w,c
 14364  019366  6E01               	movwf	btemp^0,c
 14365  019368  0E01               	movlw	1
 14366  01936A  5E01               	subwf	btemp^0,f,c
 14367  01936C  0EFF               	movlw	-1
 14368  01936E  0060  F007  FFE3   	movff	btemp,plusw1
 14369  019374  A4D8               	btfss	status,2,c
 14370  019376  D7A4               	goto	u7300
 14371  019378                     u7320:
 14372                           
 14373                           ;stkvar	_dividend @ sp[(-1)+-8]
 14374  019378  0EF7               	movlw	247
 14375  01937A  24E1               	addwf	fsr1l,w,c
 14376  01937C  6ED9               	movwf	fsr2l,c
 14377  01937E  0EFF               	movlw	255
 14378  019380  20E2               	addwfc	fsr1h,w,c
 14379  019382  6EDA               	movwf	fsr2h,c
 14380                           
 14381                           ;stkvar	?___lomod @ sp[(-1)+-8]
 14382  019384  0E08               	movlw	8
 14383  019386  6E01               	movwf	btemp^0,c
 14384  019388  0EF7               	movlw	-9
 14385  01938A                     us733999:
 14386  01938A  006F FF7B FFE3     	movff	postinc2,plusw1
 14387  019390  28E8               	incf	wreg,w,c
 14388  019392  2E01               	decfsz	btemp^0,f,c
 14389  019394  D7FA               	bra	us733999
 14390                           
 14391                           ; ___lomod: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 14392  019396  52E5               	movf	postdec1,f,c
 14393  019398  0012               	return		;funcret
 14394  01939A                     __end_of___lomod:
 14395                           	opt callstack 0
 14396                           
 14397 ;; *************** function ___lodiv *****************
 14398 ;; Defined at:
 14399 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lodiv.c"
 14400 ;; Parameters:    Size  Location     Type
 14401 ;;  dividend        8  [STACK] unsigned long long 
 14402 ;;  divisor         8  [STACK] unsigned long long 
 14403 ;; Auto vars:     Size  Location     Type
 14404 ;;  quotient        8  [STACK] unsigned long long 
 14405 ;;  counter         1  [STACK] unsigned char 
 14406 ;; Return value:  Size  Location     Type
 14407 ;;                  8  [STACK] unsigned long long 
 14408 ;; Registers used:
 14409 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 14410 ;; Tracked objects:
 14411 ;;		On entry : 0/2
 14412 ;;		On exit  : 0/0
 14413 ;;		Unchanged: 0/0
 14414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14415 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14416 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14418 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14419 ;;Total ram usage:        0 bytes
 14420 ;; Hardware stack levels used:    1
 14421 ;; Hardware stack levels required when called:   15
 14422 ;; This function calls:
 14423 ;;		Nothing
 14424 ;; This function is called by:
 14425 ;;		_utoa
 14426 ;; This function uses a reentrant model
 14427 ;;
 14428                           
 14429                           	psect	text52
 14430  018A10                     __ptext52:
 14431                           	opt callstack 0
 14432  018A10                     ___lodiv:
 14433                           	opt callstack 0
 14434                           
 14435                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 14436  018A10  0E09               	movlw	9
 14437  018A12  26E1               	addwf	fsr1l,f,c
 14438  018A14  0E00               	movlw	0
 14439  018A16  22E2               	addwfc	fsr1h,f,c
 14440                           
 14441                           ;stkvar	_quotient @ sp[(-9)+0]
 14442                           
 14443                           ;incstack = 0
 14444 ;; hardware stack exceeded
 14445  018A18  0E07               	movlw	7
 14446  018A1A  6E01               	movwf	btemp^0,c
 14447  018A1C  0EF7               	movlw	-9
 14448  018A1E                     u7231:
 14449  018A1E  6AE3               	clrf	plusw1,c
 14450  018A20  2AE8               	incf	wreg,f,c
 14451  018A22  0601               	decf	btemp^0,f,c
 14452  018A24  E2FC               	bc	u7231
 14453                           
 14454                           ;stkvar	_divisor @ sp[(-9)+-16]
 14455  018A26  0EE7               	movlw	-25
 14456  018A28  50E3               	movf	plusw1,w,c
 14457  018A2A  E116               	bnz	u7240
 14458  018A2C  0EE8               	movlw	-24
 14459  018A2E  50E3               	movf	plusw1,w,c
 14460  018A30  E113               	bnz	u7240
 14461  018A32  0EE9               	movlw	-23
 14462  018A34  50E3               	movf	plusw1,w,c
 14463  018A36  E110               	bnz	u7240
 14464  018A38  0EEA               	movlw	-22
 14465  018A3A  50E3               	movf	plusw1,w,c
 14466  018A3C  E10D               	bnz	u7240
 14467  018A3E  0EEB               	movlw	-21
 14468  018A40  50E3               	movf	plusw1,w,c
 14469  018A42  E10A               	bnz	u7240
 14470  018A44  0EEC               	movlw	-20
 14471  018A46  50E3               	movf	plusw1,w,c
 14472  018A48  E107               	bnz	u7240
 14473  018A4A  0EED               	movlw	-19
 14474  018A4C  50E3               	movf	plusw1,w,c
 14475  018A4E  E104               	bnz	u7240
 14476  018A50  0EEE               	movlw	-18
 14477  018A52  50E3               	movf	plusw1,w,c
 14478  018A54  B4D8               	btfsc	status,2,c
 14479  018A56  D088               	goto	u7270
 14480  018A58                     u7240:
 14481                           
 14482                           ;stkvar	_counter @ sp[(-9)+8]
 14483  018A58  0EFF               	movlw	-1
 14484  018A5A  6AE3               	clrf	plusw1,c
 14485  018A5C  D012               	goto	L15
 14486  018A5E                     l8571:
 14487                           
 14488                           ;stkvar	_divisor @ sp[(-9)+-16]
 14489  018A5E  90D8               	bcf	status,0,c
 14490  018A60  0EE7               	movlw	-25
 14491  018A62  36E3               	rlcf	plusw1,f,c
 14492  018A64  0EE8               	movlw	-24
 14493  018A66  36E3               	rlcf	plusw1,f,c
 14494  018A68  0EE9               	movlw	-23
 14495  018A6A  36E3               	rlcf	plusw1,f,c
 14496  018A6C  0EEA               	movlw	-22
 14497  018A6E  36E3               	rlcf	plusw1,f,c
 14498  018A70  0EEB               	movlw	-21
 14499  018A72  36E3               	rlcf	plusw1,f,c
 14500  018A74  0EEC               	movlw	-20
 14501  018A76  36E3               	rlcf	plusw1,f,c
 14502  018A78  0EED               	movlw	-19
 14503  018A7A  36E3               	rlcf	plusw1,f,c
 14504  018A7C  0EEE               	movlw	-18
 14505  018A7E  36E3               	rlcf	plusw1,f,c
 14506                           
 14507                           ;stkvar	_counter @ sp[(-9)+8]
 14508  018A80  0EFF               	movlw	-1
 14509  018A82                     L15:
 14510  018A82  2AE3               	incf	plusw1,f,c
 14511                           
 14512                           ;stkvar	_divisor @ sp[(-9)+-16]
 14513  018A84  0EEE               	movlw	-18
 14514  018A86  AEE3               	btfss	plusw1,7,c
 14515  018A88  D7EA               	goto	l8571
 14516  018A8A                     u7250:
 14517                           
 14518                           ;stkvar	_quotient @ sp[(-9)+0]
 14519  018A8A  90D8               	bcf	status,0,c
 14520  018A8C  0EF7               	movlw	-9
 14521  018A8E  36E3               	rlcf	plusw1,f,c
 14522  018A90  0EF8               	movlw	-8
 14523  018A92  36E3               	rlcf	plusw1,f,c
 14524  018A94  0EF9               	movlw	-7
 14525  018A96  36E3               	rlcf	plusw1,f,c
 14526  018A98  0EFA               	movlw	-6
 14527  018A9A  36E3               	rlcf	plusw1,f,c
 14528  018A9C  0EFB               	movlw	-5
 14529  018A9E  36E3               	rlcf	plusw1,f,c
 14530  018AA0  0EFC               	movlw	-4
 14531  018AA2  36E3               	rlcf	plusw1,f,c
 14532  018AA4  0EFD               	movlw	-3
 14533  018AA6  36E3               	rlcf	plusw1,f,c
 14534  018AA8  0EFE               	movlw	-2
 14535  018AAA  36E3               	rlcf	plusw1,f,c
 14536                           
 14537                           ;stkvar	_divisor @ sp[(-9)+-16]
 14538                           ;stkvar	_dividend @ sp[(-9)+-8]
 14539  018AAC  50E1               	movf	fsr1l,w,c
 14540  018AAE  0FEF               	addlw	-17
 14541  018AB0  6ED9               	movwf	fsr2l,c
 14542  018AB2  50E2               	movf	fsr1h,w,c
 14543  018AB4  6EDA               	movwf	fsr2h,c
 14544  018AB6  0EFF               	movlw	255
 14545  018AB8  22DA               	addwfc	fsr2h,f,c
 14546  018ABA  0EE7               	movlw	-25
 14547  018ABC  50E3               	movf	plusw1,w,c
 14548  018ABE  5CDE               	subwf	postinc2,w,c
 14549  018AC0  0EE8               	movlw	-24
 14550  018AC2  50E3               	movf	plusw1,w,c
 14551  018AC4  58DE               	subwfb	postinc2,w,c
 14552  018AC6  0EE9               	movlw	-23
 14553  018AC8  50E3               	movf	plusw1,w,c
 14554  018ACA  58DE               	subwfb	postinc2,w,c
 14555  018ACC  0EEA               	movlw	-22
 14556  018ACE  50E3               	movf	plusw1,w,c
 14557  018AD0  58DE               	subwfb	postinc2,w,c
 14558  018AD2  0EEB               	movlw	-21
 14559  018AD4  50E3               	movf	plusw1,w,c
 14560  018AD6  58DE               	subwfb	postinc2,w,c
 14561  018AD8  0EEC               	movlw	-20
 14562  018ADA  50E3               	movf	plusw1,w,c
 14563  018ADC  58DE               	subwfb	postinc2,w,c
 14564  018ADE  0EED               	movlw	-19
 14565  018AE0  50E3               	movf	plusw1,w,c
 14566  018AE2  58DE               	subwfb	postinc2,w,c
 14567  018AE4  0EEE               	movlw	-18
 14568  018AE6  50E3               	movf	plusw1,w,c
 14569  018AE8  58DE               	subwfb	postinc2,w,c
 14570  018AEA  A0D8               	btfss	status,0,c
 14571  018AEC  D021               	goto	l8583
 14572                           
 14573                           ;stkvar	_divisor @ sp[(-9)+-16]
 14574                           ;stkvar	_dividend @ sp[(-9)+-8]
 14575  018AEE  50E1               	movf	fsr1l,w,c
 14576  018AF0  0FEF               	addlw	-17
 14577  018AF2  6ED9               	movwf	fsr2l,c
 14578  018AF4  50E2               	movf	fsr1h,w,c
 14579  018AF6  6EDA               	movwf	fsr2h,c
 14580  018AF8  0EFF               	movlw	255
 14581  018AFA  22DA               	addwfc	fsr2h,f,c
 14582  018AFC  0EE7               	movlw	-25
 14583  018AFE  50E3               	movf	plusw1,w,c
 14584  018B00  5EDE               	subwf	postinc2,f,c
 14585  018B02  0EE8               	movlw	-24
 14586  018B04  50E3               	movf	plusw1,w,c
 14587  018B06  5ADE               	subwfb	postinc2,f,c
 14588  018B08  0EE9               	movlw	-23
 14589  018B0A  50E3               	movf	plusw1,w,c
 14590  018B0C  5ADE               	subwfb	postinc2,f,c
 14591  018B0E  0EEA               	movlw	-22
 14592  018B10  50E3               	movf	plusw1,w,c
 14593  018B12  5ADE               	subwfb	postinc2,f,c
 14594  018B14  0EEB               	movlw	-21
 14595  018B16  50E3               	movf	plusw1,w,c
 14596  018B18  5ADE               	subwfb	postinc2,f,c
 14597  018B1A  0EEC               	movlw	-20
 14598  018B1C  50E3               	movf	plusw1,w,c
 14599  018B1E  5ADE               	subwfb	postinc2,f,c
 14600  018B20  0EED               	movlw	-19
 14601  018B22  50E3               	movf	plusw1,w,c
 14602  018B24  5ADE               	subwfb	postinc2,f,c
 14603  018B26  0EEE               	movlw	-18
 14604  018B28  50E3               	movf	plusw1,w,c
 14605  018B2A  5ADE               	subwfb	postinc2,f,c
 14606                           
 14607                           ;stkvar	_quotient @ sp[(-9)+0]
 14608  018B2C  0EF7               	movlw	-9
 14609  018B2E  80E3               	bsf	plusw1,0,c
 14610  018B30                     l8583:
 14611                           
 14612                           ;stkvar	_divisor @ sp[(-9)+-16]
 14613  018B30  90D8               	bcf	status,0,c
 14614  018B32  0EEE               	movlw	-18
 14615  018B34  32E3               	rrcf	plusw1,f,c
 14616  018B36  0EED               	movlw	-19
 14617  018B38  32E3               	rrcf	plusw1,f,c
 14618  018B3A  0EEC               	movlw	-20
 14619  018B3C  32E3               	rrcf	plusw1,f,c
 14620  018B3E  0EEB               	movlw	-21
 14621  018B40  32E3               	rrcf	plusw1,f,c
 14622  018B42  0EEA               	movlw	-22
 14623  018B44  32E3               	rrcf	plusw1,f,c
 14624  018B46  0EE9               	movlw	-23
 14625  018B48  32E3               	rrcf	plusw1,f,c
 14626  018B4A  0EE8               	movlw	-24
 14627  018B4C  32E3               	rrcf	plusw1,f,c
 14628  018B4E  0EE7               	movlw	-25
 14629  018B50  32E3               	rrcf	plusw1,f,c
 14630                           
 14631                           ;stkvar	_counter @ sp[(-9)+8]
 14632  018B52  0EFF               	movlw	-1
 14633  018B54  50E3               	movf	plusw1,w,c
 14634  018B56  6E01               	movwf	btemp^0,c
 14635  018B58  0E01               	movlw	1
 14636  018B5A  5E01               	subwf	btemp^0,f,c
 14637  018B5C  0EFF               	movlw	-1
 14638  018B5E  0060  F007  FFE3   	movff	btemp,plusw1
 14639  018B64  A4D8               	btfss	status,2,c
 14640  018B66  D791               	goto	u7250
 14641  018B68                     u7270:
 14642                           
 14643                           ;stkvar	_quotient @ sp[(-9)+0]
 14644  018B68  0EF7               	movlw	247
 14645  018B6A  24E1               	addwf	fsr1l,w,c
 14646  018B6C  6ED9               	movwf	fsr2l,c
 14647  018B6E  0EFF               	movlw	255
 14648  018B70  20E2               	addwfc	fsr1h,w,c
 14649  018B72  6EDA               	movwf	fsr2h,c
 14650                           
 14651                           ;stkvar	?___lodiv @ sp[(-9)+-8]
 14652  018B74  0E08               	movlw	8
 14653  018B76  6E01               	movwf	btemp^0,c
 14654  018B78  0EEF               	movlw	-17
 14655  018B7A                     us728999:
 14656  018B7A  006F FF7B FFE3     	movff	postinc2,plusw1
 14657  018B80  28E8               	incf	wreg,w,c
 14658  018B82  2E01               	decfsz	btemp^0,f,c
 14659  018B84  D7FA               	bra	us728999
 14660                           
 14661                           ; ___lodiv: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 14662  018B86  0EF7               	movlw	247
 14663  018B88  26E1               	addwf	fsr1l,f,c
 14664  018B8A  0EFF               	movlw	255
 14665  018B8C  22E2               	addwfc	fsr1h,f,c
 14666  018B8E  0012               	return		;funcret
 14667  018B90                     __end_of___lodiv:
 14668                           	opt callstack 0
 14669                           
 14670 ;; *************** function _strncmp *****************
 14671 ;; Defined at:
 14672 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strncmp.c"
 14673 ;; Parameters:    Size  Location     Type
 14674 ;;  _l              2  [STACK] PTR const unsigned char 
 14675 ;;		 -> ct(3), STR_65(103), STR_63(3), STR_62(3), 
 14676 ;;		 -> STR_61(19), STR_60(19), STR_59(19), STR_58(19), 
 14677 ;;		 -> STR_57(19), STR_56(19), STR_55(24), STR_54(15), 
 14678 ;;		 -> STR_53(15), STR_52(15), STR_51(10), STR_50(10), 
 14679 ;;		 -> STR_49(19), STR_48(19), STR_45(3), STR_44(3), 
 14680 ;;		 -> STR_43(3), STR_42(17), STR_41(16), STR_40(16), 
 14681 ;;		 -> STR_39(20), STR_38(20), STR_37(20), STR_36(20), 
 14682 ;;		 -> STR_35(20), STR_34(20), STR_33(19), STR_32(19), 
 14683 ;;		 -> STR_31(19), STR_30(19), STR_29(19), STR_28(19), 
 14684 ;;		 -> STR_27(19), STR_26(19), STR_25(20), STR_24(19), 
 14685 ;;		 -> STR_23(19), STR_22(20), STR_21(17), STR_20(16), 
 14686 ;;		 -> STR_19(16), STR_18(26), STR_17(26), STR_16(22), 
 14687 ;;		 -> STR_15(21), STR_14(17), STR_13(17), STR_12(17), 
 14688 ;;		 -> STR_11(22), STR_10(22), STR_9(23), STR_8(18), 
 14689 ;;		 -> STR_7(17), STR_6(17), STR_5(17), STR_4(17), 
 14690 ;;		 -> STR_2(15), STR_1(17), 
 14691 ;;  _r              2  [STACK] PTR const unsigned char 
 14692 ;;		 -> STR_99(3), STR_95(3), STR_90(3), STR_85(3), 
 14693 ;;		 -> STR_80(3), STR_76(3), 
 14694 ;;  n               2  [STACK] unsigned int 
 14695 ;; Auto vars:     Size  Location     Type
 14696 ;;  r               2  [STACK] PTR const unsigned char 
 14697 ;;		 -> STR_99(3), STR_95(3), STR_90(3), STR_85(3), 
 14698 ;;		 -> STR_80(3), STR_76(3), 
 14699 ;;  l               2  [STACK] PTR const unsigned char 
 14700 ;;		 -> ct(3), STR_65(103), STR_63(3), STR_62(3), 
 14701 ;;		 -> STR_61(19), STR_60(19), STR_59(19), STR_58(19), 
 14702 ;;		 -> STR_57(19), STR_56(19), STR_55(24), STR_54(15), 
 14703 ;;		 -> STR_53(15), STR_52(15), STR_51(10), STR_50(10), 
 14704 ;;		 -> STR_49(19), STR_48(19), STR_45(3), STR_44(3), 
 14705 ;;		 -> STR_43(3), STR_42(17), STR_41(16), STR_40(16), 
 14706 ;;		 -> STR_39(20), STR_38(20), STR_37(20), STR_36(20), 
 14707 ;;		 -> STR_35(20), STR_34(20), STR_33(19), STR_32(19), 
 14708 ;;		 -> STR_31(19), STR_30(19), STR_29(19), STR_28(19), 
 14709 ;;		 -> STR_27(19), STR_26(19), STR_25(20), STR_24(19), 
 14710 ;;		 -> STR_23(19), STR_22(20), STR_21(17), STR_20(16), 
 14711 ;;		 -> STR_19(16), STR_18(26), STR_17(26), STR_16(22), 
 14712 ;;		 -> STR_15(21), STR_14(17), STR_13(17), STR_12(17), 
 14713 ;;		 -> STR_11(22), STR_10(22), STR_9(23), STR_8(18), 
 14714 ;;		 -> STR_7(17), STR_6(17), STR_5(17), STR_4(17), 
 14715 ;;		 -> STR_2(15), STR_1(17), 
 14716 ;; Return value:  Size  Location     Type
 14717 ;;                  2  [STACK] int 
 14718 ;; Registers used:
 14719 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tbl
      +ptrh, tblptru, prodl
 14720 ;; Tracked objects:
 14721 ;;		On entry : 0/0
 14722 ;;		On exit  : 0/0
 14723 ;;		Unchanged: 0/0
 14724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14725 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14726 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14728 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14729 ;;Total ram usage:        0 bytes
 14730 ;; Hardware stack levels used:    1
 14731 ;; Hardware stack levels required when called:   15
 14732 ;; This function calls:
 14733 ;;		Nothing
 14734 ;; This function is called by:
 14735 ;;		_vfpfcnvrt
 14736 ;; This function uses a reentrant model
 14737 ;;
 14738                           
 14739                           	psect	text53
 14740  017D62                     __ptext53:
 14741                           	opt callstack 0
 14742  017D62                     _strncmp:
 14743                           	opt callstack 0
 14744                           
 14745                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14746  017D62  52E6               	movf	postinc1,f,c
 14747  017D64  52E6               	movf	postinc1,f,c
 14748  017D66  52E6               	movf	postinc1,f,c
 14749  017D68  52E6               	movf	postinc1,f,c
 14750                           
 14751                           ;stkvar	__l @ sp[(-4)+-2]
 14752                           
 14753                           ;incstack = 0
 14754 ;; hardware stack exceeded
 14755  017D6A  0EFA               	movlw	-6
 14756  017D6C  006F FF8C  F00B    	movff	plusw1,btemp+10
 14757  017D72  0EFB               	movlw	-5
 14758  017D74  006F FF8C  F00C    	movff	plusw1,btemp+11
 14759                           
 14760                           ;stkvar	_l @ sp[(-4)+2]
 14761  017D7A  0EFF               	movlw	-1
 14762  017D7C  0060  F033  FFE3   	movff	btemp+11,plusw1
 14763  017D82  0EFE               	movlw	-2
 14764  017D84  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14765                           
 14766                           ;stkvar	__r @ sp[(-4)+-4]
 14767  017D8A  0EF8               	movlw	-8
 14768  017D8C  006F FF8C  F00B    	movff	plusw1,btemp+10
 14769  017D92  0EF9               	movlw	-7
 14770  017D94  006F FF8C  F00C    	movff	plusw1,btemp+11
 14771                           
 14772                           ;stkvar	_r @ sp[(-4)+0]
 14773  017D9A  0EFD               	movlw	-3
 14774  017D9C  0060  F033  FFE3   	movff	btemp+11,plusw1
 14775  017DA2  0EFC               	movlw	-4
 14776  017DA4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14777                           
 14778                           ;stkvar	_n @ sp[(-4)+-6]
 14779  017DAA  0EF6               	movlw	-10
 14780  017DAC  006F FF8C  F001    	movff	plusw1,btemp
 14781  017DB2  0E01               	movlw	1
 14782  017DB4  5E01               	subwf	btemp^0,f,c
 14783  017DB6  0EF6               	movlw	-10
 14784  017DB8  0060  F007  FFE3   	movff	btemp,plusw1
 14785  017DBE  0EF7               	movlw	-9
 14786  017DC0  006F FF8C  F001    	movff	plusw1,btemp
 14787  017DC6  0E00               	movlw	0
 14788  017DC8  5A01               	subwfb	btemp^0,f,c
 14789  017DCA  0EF7               	movlw	-9
 14790  017DCC  0060  F007  FFE3   	movff	btemp,plusw1
 14791  017DD2  0EF6               	movlw	-10
 14792  017DD4  28E3               	incf	plusw1,w,c
 14793  017DD6  E13F               	bnz	l9279
 14794  017DD8  0EF7               	movlw	-9
 14795  017DDA  28E3               	incf	plusw1,w,c
 14796  017DDC  A4D8               	btfss	status,2,c
 14797  017DDE  D03B               	goto	l9279
 14798  017DE0  0E00               	movlw	0
 14799  017DE2  6E01               	movwf	btemp^0,c
 14800  017DE4  0E00               	movlw	0
 14801  017DE6  6E02               	movwf	(btemp+1)^0,c
 14802  017DE8  D0C7               	goto	l3456
 14803  017DEA                     l9277:
 14804                           
 14805                           ;stkvar	_l @ sp[(-4)+2]
 14806  017DEA  0EFE               	movlw	-2
 14807  017DEC  50E3               	movf	plusw1,w,c
 14808  017DEE  0F01               	addlw	1
 14809  017DF0  6E01               	movwf	btemp^0,c
 14810  017DF2  0EFE               	movlw	-2
 14811  017DF4  0060  F007  FFE3   	movff	btemp,plusw1
 14812  017DFA  6A01               	clrf	btemp^0,c
 14813  017DFC  0EFF               	movlw	-1
 14814  017DFE  50E3               	movf	plusw1,w,c
 14815  017E00  2001               	addwfc	btemp^0,w,c
 14816  017E02  6E01               	movwf	btemp^0,c
 14817  017E04  0EFF               	movlw	-1
 14818  017E06  0060  F007  FFE3   	movff	btemp,plusw1
 14819                           
 14820                           ;stkvar	_r @ sp[(-4)+0]
 14821  017E0C  0EFC               	movlw	-4
 14822  017E0E  50E3               	movf	plusw1,w,c
 14823  017E10  0F01               	addlw	1
 14824  017E12  6E01               	movwf	btemp^0,c
 14825  017E14  0EFC               	movlw	-4
 14826  017E16  0060  F007  FFE3   	movff	btemp,plusw1
 14827  017E1C  6A01               	clrf	btemp^0,c
 14828  017E1E  0EFD               	movlw	-3
 14829  017E20  50E3               	movf	plusw1,w,c
 14830  017E22  2001               	addwfc	btemp^0,w,c
 14831  017E24  6E01               	movwf	btemp^0,c
 14832  017E26  0EFD               	movlw	-3
 14833  017E28  0060  F007  FFE3   	movff	btemp,plusw1
 14834                           
 14835                           ;stkvar	_n @ sp[(-4)+-6]
 14836  017E2E  0EF6               	movlw	-10
 14837  017E30  006F FF8C  F001    	movff	plusw1,btemp
 14838  017E36  0E01               	movlw	1
 14839  017E38  5E01               	subwf	btemp^0,f,c
 14840  017E3A  0EF6               	movlw	-10
 14841  017E3C  0060  F007  FFE3   	movff	btemp,plusw1
 14842  017E42  0EF7               	movlw	-9
 14843  017E44  006F FF8C  F001    	movff	plusw1,btemp
 14844  017E4A  0E00               	movlw	0
 14845  017E4C  5A01               	subwfb	btemp^0,f,c
 14846  017E4E  0EF7               	movlw	-9
 14847  017E50  0060  F007  FFE3   	movff	btemp,plusw1
 14848  017E56                     l9279:
 14849                           
 14850                           ;stkvar	_l @ sp[(-4)+2]
 14851  017E56  0EFE               	movlw	-2
 14852  017E58  006F FF8F FFF6     	movff	plusw1,tblptrl
 14853  017E5E  0EFF               	movlw	-1
 14854  017E60  006F FF8F FFF7     	movff	plusw1,tblptrh
 14855  017E66  0E00               	movlw	low (__mediumconst shr (0+16))
 14856  017E68  6EF8               	movwf	tblptru,c
 14857  017E6A  0E1F               	movlw	(high __ramtop+-1)
 14858  017E6C  64F7               	cpfsgt	tblptrh,c
 14859  017E6E  D003               	bra	u8567
 14860  017E70  0008               	tblrd		*
 14861  017E72  50F5               	movf	tablat,w,c
 14862  017E74  D007               	bra	u8560
 14863  017E76                     u8567:
 14864  017E76  006F FFDB FFE9     	movff	tblptrl,fsr0l
 14865  017E7C  006F FFDF FFEA     	movff	tblptrh,fsr0h
 14866  017E82  50EF               	movf	indf0,w,c
 14867  017E84                     u8560:
 14868  017E84  0900               	iorlw	0
 14869  017E86  B4D8               	btfsc	status,2,c
 14870  017E88  D04A               	goto	u8600
 14871                           
 14872                           ;stkvar	_r @ sp[(-4)+0]
 14873  017E8A  50E1               	movf	fsr1l,w,c
 14874  017E8C  0FFC               	addlw	-4
 14875  017E8E  6ED9               	movwf	fsr2l,c
 14876  017E90  50E2               	movf	fsr1h,w,c
 14877  017E92  6EDA               	movwf	fsr2h,c
 14878  017E94  0EFF               	movlw	255
 14879  017E96  22DA               	addwfc	fsr2h,f,c
 14880  017E98  006F FF7B FFF6     	movff	postinc2,tblptrl
 14881  017E9E  006F FF77 FFF7     	movff	postdec2,tblptrh
 14882  017EA4                     	if	0	;tblptru may be non-zero
 14883  017EA4                     	endif
 14884  017EA4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14885  017EA4  0E00               	movlw	low (__mediumconst shr (0+16))
 14886  017EA6  6EF8               	movwf	tblptru,c
 14887  017EA8                     	endif
 14888  017EA8  0008               	tblrd		*
 14889  017EAA  50F5               	movf	tablat,w,c
 14890  017EAC  0900               	iorlw	0
 14891  017EAE  B4D8               	btfsc	status,2,c
 14892  017EB0  D036               	goto	u8600
 14893                           
 14894                           ;stkvar	_n @ sp[(-4)+-6]
 14895  017EB2  0EF6               	movlw	-10
 14896  017EB4  006F FF8C  F001    	movff	plusw1,btemp
 14897  017EBA  0EF7               	movlw	-9
 14898  017EBC  50E3               	movf	plusw1,w,c
 14899  017EBE  1001               	iorwf	btemp^0,w,c
 14900  017EC0  B4D8               	btfsc	status,2,c
 14901  017EC2  D02D               	goto	u8600
 14902                           
 14903                           ;stkvar	_r @ sp[(-4)+0]
 14904  017EC4  50E1               	movf	fsr1l,w,c
 14905  017EC6  0FFC               	addlw	-4
 14906  017EC8  6ED9               	movwf	fsr2l,c
 14907  017ECA  50E2               	movf	fsr1h,w,c
 14908  017ECC  6EDA               	movwf	fsr2h,c
 14909  017ECE  0EFF               	movlw	255
 14910  017ED0  22DA               	addwfc	fsr2h,f,c
 14911  017ED2  006F FF7B FFF6     	movff	postinc2,tblptrl
 14912  017ED8  006F FF77 FFF7     	movff	postdec2,tblptrh
 14913  017EDE                     	if	0	;tblptru may be non-zero
 14914  017EDE                     	endif
 14915  017EDE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14916  017EDE  0E00               	movlw	low (__mediumconst shr (0+16))
 14917  017EE0  6EF8               	movwf	tblptru,c
 14918  017EE2                     	endif
 14919  017EE2  0008               	tblrd		*
 14920  017EE4  006F FFD4  F00C    	movff	tablat,btemp+11
 14921                           
 14922                           ;stkvar	_l @ sp[(-4)+2]
 14923  017EEA  0EFE               	movlw	-2
 14924  017EEC  006F FF8F FFF6     	movff	plusw1,tblptrl
 14925  017EF2  0EFF               	movlw	-1
 14926  017EF4  006F FF8F FFF7     	movff	plusw1,tblptrh
 14927  017EFA  0E00               	movlw	low (__mediumconst shr (0+16))
 14928  017EFC  6EF8               	movwf	tblptru,c
 14929  017EFE  0E1F               	movlw	(high __ramtop+-1)
 14930  017F00  64F7               	cpfsgt	tblptrh,c
 14931  017F02  D003               	bra	u8607
 14932  017F04  0008               	tblrd		*
 14933  017F06  50F5               	movf	tablat,w,c
 14934  017F08  D007               	bra	u8605
 14935  017F0A                     u8607:
 14936  017F0A  006F FFDB FFE9     	movff	tblptrl,fsr0l
 14937  017F10  006F FFDF FFEA     	movff	tblptrh,fsr0h
 14938  017F16  50EF               	movf	indf0,w,c
 14939  017F18                     u8605:
 14940  017F18  180C               	xorwf	(btemp+11)^0,w,c
 14941  017F1A  B4D8               	btfsc	status,2,c
 14942  017F1C  D766               	goto	l9277
 14943  017F1E                     u8600:
 14944                           
 14945                           ;stkvar	_l @ sp[(-4)+2]
 14946  017F1E  0EFE               	movlw	-2
 14947  017F20  006F FF8F FFF6     	movff	plusw1,tblptrl
 14948  017F26  0EFF               	movlw	-1
 14949  017F28  006F FF8F FFF7     	movff	plusw1,tblptrh
 14950  017F2E  0E00               	movlw	low (__mediumconst shr (0+16))
 14951  017F30  6EF8               	movwf	tblptru,c
 14952  017F32  0E1F               	movlw	(high __ramtop+-1)
 14953  017F34  64F7               	cpfsgt	tblptrh,c
 14954  017F36  D003               	bra	u8617
 14955  017F38  0008               	tblrd		*
 14956  017F3A  50F5               	movf	tablat,w,c
 14957  017F3C  D007               	bra	u8610
 14958  017F3E                     u8617:
 14959  017F3E  006F FFDB FFE9     	movff	tblptrl,fsr0l
 14960  017F44  006F FFDF FFEA     	movff	tblptrh,fsr0h
 14961  017F4A  50EF               	movf	indf0,w,c
 14962  017F4C                     u8610:
 14963  017F4C  6E01               	movwf	btemp^0,c
 14964  017F4E  6A02               	clrf	(btemp+1)^0,c
 14965                           
 14966                           ;stkvar	_r @ sp[(-4)+0]
 14967  017F50  50E1               	movf	fsr1l,w,c
 14968  017F52  0FFC               	addlw	-4
 14969  017F54  6ED9               	movwf	fsr2l,c
 14970  017F56  50E2               	movf	fsr1h,w,c
 14971  017F58  6EDA               	movwf	fsr2h,c
 14972  017F5A  0EFF               	movlw	255
 14973  017F5C  22DA               	addwfc	fsr2h,f,c
 14974  017F5E  006F FF7B FFF6     	movff	postinc2,tblptrl
 14975  017F64  006F FF77 FFF7     	movff	postdec2,tblptrh
 14976  017F6A                     	if	0	;tblptru may be non-zero
 14977  017F6A                     	endif
 14978  017F6A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14979  017F6A  0E00               	movlw	low (__mediumconst shr (0+16))
 14980  017F6C  6EF8               	movwf	tblptru,c
 14981  017F6E                     	endif
 14982  017F6E  0008               	tblrd		*
 14983  017F70  50F5               	movf	tablat,w,c
 14984  017F72  5E01               	subwf	btemp^0,f,c
 14985  017F74  0E00               	movlw	0
 14986  017F76  5A02               	subwfb	(btemp+1)^0,f,c
 14987  017F78                     l3456:
 14988                           
 14989                           ; _strncmp: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsi
      +                          ze = 6, vargsize = 0
 14990  017F78  0EF6               	movlw	246
 14991  017F7A  26E1               	addwf	fsr1l,f,c
 14992  017F7C  0EFF               	movlw	255
 14993  017F7E  22E2               	addwfc	fsr1h,f,c
 14994  017F80  0012               	return		;funcret
 14995  017F82                     __end_of_strncmp:
 14996                           	opt callstack 0
 14997                           
 14998 ;; *************** function _stoa *****************
 14999 ;; Defined at:
 15000 ;;		line 546 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 15001 ;; Parameters:    Size  Location     Type
 15002 ;;  fp              2  [STACK] PTR struct _IO_FILE
 15003 ;;		 -> f(6), NULL(0), 
 15004 ;;  s               2  [STACK] PTR unsigned char 
 15005 ;;		 -> ?_printf(2), ?_sprintf(2), STR_47(9), STR_46(12), 
 15006 ;;		 -> D.lcd(480), D(482), T(144), STR_3(7), 
 15007 ;;		 -> V(191), 
 15008 ;; Auto vars:     Size  Location     Type
 15009 ;;  nuls            7  [STACK] unsigned char [7]
 15010 ;;  l               2  [STACK] int 
 15011 ;;  p               2  [STACK] int 
 15012 ;;  cp              2  [STACK] PTR unsigned char 
 15013 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), STR_47(9), 
 15014 ;;		 -> STR_46(12), D.lcd(480), D(482), T(144), 
 15015 ;;		 -> STR_3(7), V(191), 
 15016 ;;  w               2  [STACK] int 
 15017 ;;  i               2  [STACK] int 
 15018 ;; Return value:  Size  Location     Type
 15019 ;;                  2  [STACK] int 
 15020 ;; Registers used:
 15021 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 15022 ;; Tracked objects:
 15023 ;;		On entry : 0/0
 15024 ;;		On exit  : 0/0
 15025 ;;		Unchanged: 0/0
 15026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15027 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15028 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15030 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15031 ;;Total ram usage:        0 bytes
 15032 ;; Hardware stack levels used:    1
 15033 ;; Hardware stack levels required when called:   18
 15034 ;; This function calls:
 15035 ;;		_fputc
 15036 ;;		_strlen
 15037 ;; This function is called by:
 15038 ;;		_vfpfcnvrt
 15039 ;; This function uses a reentrant model
 15040 ;;
 15041                           
 15042                           	psect	text54
 15043  017146                     __ptext54:
 15044                           	opt callstack 0
 15045  017146                     _stoa:
 15046                           	opt callstack 0
 15047                           
 15048                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 15049  017146  0E11               	movlw	17
 15050  017148  26E1               	addwf	fsr1l,f,c
 15051  01714A  0E00               	movlw	0
 15052  01714C  22E2               	addwfc	fsr1h,f,c
 15053                           
 15054                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
 15055                           
 15056                           ;incstack = 0
 15057 ;; hardware stack exceeded
 15058  01714E  EE20  F0F0         	lfsr	2,stoa@F1166
 15059                           
 15060                           ;stkvar	_nuls @ sp[(-17)+0]
 15061  017152  0E07               	movlw	7
 15062  017154  6E01               	movwf	btemp^0,c
 15063  017156  0EEF               	movlw	-17
 15064  017158                     us1152999:
 15065  017158  006F FF7B FFE3     	movff	postinc2,plusw1
 15066  01715E  28E8               	incf	wreg,w,c
 15067  017160  2E01               	decfsz	btemp^0,f,c
 15068  017162  D7FA               	bra	us1152999
 15069                           
 15070                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 552:     cp = s;
 15071                           ;stkvar	_s @ sp[(-17)+-4]
 15072  017164  0EEB               	movlw	-21
 15073  017166  006F FF8C  F00B    	movff	plusw1,btemp+10
 15074  01716C  0EEC               	movlw	-20
 15075  01716E  006F FF8C  F00C    	movff	plusw1,btemp+11
 15076                           
 15077                           ;stkvar	_cp @ sp[(-17)+11]
 15078  017174  0EFB               	movlw	-5
 15079  017176  0060  F033  FFE3   	movff	btemp+11,plusw1
 15080  01717C  0EFA               	movlw	-6
 15081  01717E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15082                           
 15083                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
 15084                           ;stkvar	_cp @ sp[(-17)+11]
 15085  017184  0EFA               	movlw	-6
 15086  017186  006F FF8C  F001    	movff	plusw1,btemp
 15087  01718C  0EFB               	movlw	-5
 15088  01718E  50E3               	movf	plusw1,w,c
 15089  017190  1001               	iorwf	btemp^0,w,c
 15090  017192  A4D8               	btfss	status,2,c
 15091  017194  D00E               	goto	l12123
 15092                           
 15093                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
 15094                           ;stkvar	_nuls @ sp[(-17)+0]
 15095  017196  0EEF               	movlw	239
 15096  017198  24E1               	addwf	fsr1l,w,c
 15097  01719A  6E0B               	movwf	(btemp+10)^0,c
 15098  01719C  0EFF               	movlw	255
 15099  01719E  20E2               	addwfc	fsr1h,w,c
 15100  0171A0  6E0C               	movwf	(btemp+11)^0,c
 15101                           
 15102                           ;stkvar	_cp @ sp[(-17)+11]
 15103  0171A2  0EFB               	movlw	-5
 15104  0171A4  0060  F033  FFE3   	movff	btemp+11,plusw1
 15105  0171AA  0EFA               	movlw	-6
 15106  0171AC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15107  0171B2                     l12123:
 15108                           
 15109                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
 15110                           ;stkvar	_cp @ sp[(-17)+11]
 15111  0171B2  0EFA               	movlw	-6
 15112  0171B4  006F FF8F FFE6     	movff	plusw1,postinc1
 15113  0171BA  006F FF8F FFE6     	movff	plusw1,postinc1
 15114  0171C0  ECE0  F0D2         	call	_strlen	;wreg free
 15115                           
 15116                           ;stkvar	_l @ sp[(-17)+7]
 15117  0171C4  0EF6               	movlw	-10
 15118  0171C6  0060  F007  FFE3   	movff	btemp,plusw1
 15119  0171CC  0EF7               	movlw	-9
 15120  0171CE  0060  F00B  FFE3   	movff	btemp+1,plusw1
 15121                           
 15122                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 559:     p = prec;
 15123                           ;stkvar	_p @ sp[(-17)+9]
 15124  0171D4  0EF8               	movlw	-8
 15125  0171D6  0060  F0F3  FFE3   	movff	_prec,plusw1
 15126  0171DC  0EF9               	movlw	-7
 15127  0171DE  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 15128                           
 15129                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
 15130                           ;stkvar	_p @ sp[(-17)+9]
 15131  0171E4  0EF9               	movlw	-7
 15132  0171E6  BEE3               	btfsc	plusw1,7,c
 15133  0171E8  D023               	goto	l2281
 15134                           
 15135                           ;stkvar	_l @ sp[(-17)+7]
 15136                           ;stkvar	_p @ sp[(-17)+9]
 15137  0171EA  50E1               	movf	fsr1l,w,c
 15138  0171EC  0FF8               	addlw	-8
 15139  0171EE  6ED9               	movwf	fsr2l,c
 15140  0171F0  50E2               	movf	fsr1h,w,c
 15141  0171F2  6EDA               	movwf	fsr2h,c
 15142  0171F4  0EFF               	movlw	255
 15143  0171F6  22DA               	addwfc	fsr2h,f,c
 15144  0171F8  0EF6               	movlw	-10
 15145  0171FA  50E3               	movf	plusw1,w,c
 15146  0171FC  5CDE               	subwf	postinc2,w,c
 15147  0171FE  50DE               	movf	postinc2,w,c
 15148  017200  0A80               	xorlw	128
 15149  017202  6E01               	movwf	btemp^0,c
 15150  017204  0EF7               	movlw	-9
 15151  017206  50E3               	movf	plusw1,w,c
 15152  017208  0A80               	xorlw	128
 15153  01720A  5801               	subwfb	btemp^0,w,c
 15154  01720C  B0D8               	btfsc	status,0,c
 15155  01720E  D010               	goto	l2281
 15156                           
 15157                           ;stkvar	_p @ sp[(-17)+9]
 15158                           ;stkvar	_l @ sp[(-17)+7]
 15159  017210  0EF8               	movlw	-8
 15160  017212  006F FF8C  F001    	movff	plusw1,btemp
 15161  017218  0EF6               	movlw	-10
 15162  01721A  0060  F007  FFE3   	movff	btemp,plusw1
 15163  017220  0EF9               	movlw	-7
 15164  017222  006F FF8C  F001    	movff	plusw1,btemp
 15165  017228  0EF7               	movlw	-9
 15166  01722A  0060  F007  FFE3   	movff	btemp,plusw1
 15167  017230                     l2281:
 15168                           
 15169                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 561:     p = l;
 15170                           ;stkvar	_l @ sp[(-17)+7]
 15171                           ;stkvar	_p @ sp[(-17)+9]
 15172  017230  0EF6               	movlw	-10
 15173  017232  006F FF8C  F001    	movff	plusw1,btemp
 15174  017238  0EF8               	movlw	-8
 15175  01723A  0060  F007  FFE3   	movff	btemp,plusw1
 15176  017240  0EF7               	movlw	-9
 15177  017242  006F FF8C  F001    	movff	plusw1,btemp
 15178  017248  0EF9               	movlw	-7
 15179  01724A  0060  F007  FFE3   	movff	btemp,plusw1
 15180                           
 15181                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 562:     w = width;
 15182                           ;stkvar	_w @ sp[(-17)+13]
 15183  017250  0EFC               	movlw	-4
 15184  017252  0060  F0EB  FFE3   	movff	_width,plusw1
 15185  017258  0EFD               	movlw	-3
 15186  01725A  0060  F0EF  FFE3   	movff	_width+1,plusw1
 15187                           
 15188                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
 15189  017260  A03E               	btfss	_flags^0,0,c
 15190  017262  D01F               	goto	l12143
 15191  017264  D031               	goto	u11570
 15192  017266                     l12139:
 15193                           
 15194                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
 15195                           ;stkvar	_fp @ sp[(-17)+-2]
 15196  017266  0EED               	movlw	-19
 15197  017268  006F FF8F FFE6     	movff	plusw1,postinc1
 15198  01726E  006F FF8F FFE6     	movff	plusw1,postinc1
 15199  017274  0E20               	movlw	32
 15200  017276  6EE6               	movwf	postinc1,c
 15201  017278  0E00               	movlw	0
 15202  01727A  6EE6               	movwf	postinc1,c
 15203  01727C  EC64  F0CA         	call	_fputc	;wreg free
 15204                           
 15205                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 568:             ++l;
 15206                           ;stkvar	_l @ sp[(-17)+7]
 15207  017280  0EF6               	movlw	-10
 15208  017282  50E3               	movf	plusw1,w,c
 15209  017284  0F01               	addlw	1
 15210  017286  6E01               	movwf	btemp^0,c
 15211  017288  0EF6               	movlw	-10
 15212  01728A  0060  F007  FFE3   	movff	btemp,plusw1
 15213  017290  6A01               	clrf	btemp^0,c
 15214  017292  0EF7               	movlw	-9
 15215  017294  50E3               	movf	plusw1,w,c
 15216  017296  2001               	addwfc	btemp^0,w,c
 15217  017298  6E01               	movwf	btemp^0,c
 15218  01729A  0EF7               	movlw	-9
 15219  01729C  0060  F007  FFE3   	movff	btemp,plusw1
 15220  0172A2                     l12143:
 15221                           
 15222                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
 15223                           ;stkvar	_w @ sp[(-17)+13]
 15224                           ;stkvar	_l @ sp[(-17)+7]
 15225  0172A2  50E1               	movf	fsr1l,w,c
 15226  0172A4  0FF6               	addlw	-10
 15227  0172A6  6ED9               	movwf	fsr2l,c
 15228  0172A8  50E2               	movf	fsr1h,w,c
 15229  0172AA  6EDA               	movwf	fsr2h,c
 15230  0172AC  0EFF               	movlw	255
 15231  0172AE  22DA               	addwfc	fsr2h,f,c
 15232  0172B0  0EFC               	movlw	-4
 15233  0172B2  50E3               	movf	plusw1,w,c
 15234  0172B4  5CDE               	subwf	postinc2,w,c
 15235  0172B6  50DE               	movf	postinc2,w,c
 15236  0172B8  0A80               	xorlw	128
 15237  0172BA  6E01               	movwf	btemp^0,c
 15238  0172BC  0EFD               	movlw	-3
 15239  0172BE  50E3               	movf	plusw1,w,c
 15240  0172C0  0A80               	xorlw	128
 15241  0172C2  5801               	subwfb	btemp^0,w,c
 15242  0172C4  A0D8               	btfss	status,0,c
 15243  0172C6  D7CF               	goto	l12139
 15244  0172C8                     u11570:
 15245                           
 15246                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 573:     i = 0;
 15247                           ;stkvar	_i @ sp[(-17)+15]
 15248  0172C8  0EFE               	movlw	-2
 15249  0172CA  6AE3               	clrf	plusw1,c
 15250  0172CC  0EFF               	movlw	-1
 15251  0172CE  6AE3               	clrf	plusw1,c
 15252                           
 15253                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 15254  0172D0  D045               	goto	l12153
 15255  0172D2                     l12147:
 15256                           
 15257                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
 15258                           ;stkvar	_fp @ sp[(-17)+-2]
 15259  0172D2  0EED               	movlw	-19
 15260  0172D4  006F FF8F FFE6     	movff	plusw1,postinc1
 15261  0172DA  006F FF8F FFE6     	movff	plusw1,postinc1
 15262                           
 15263                           ;stkvar	_cp @ sp[(-19)+11]
 15264  0172E0  0EF8               	movlw	-8
 15265  0172E2  006F FF8F FFF6     	movff	plusw1,tblptrl
 15266  0172E8  0EF9               	movlw	-7
 15267  0172EA  006F FF8F FFF7     	movff	plusw1,tblptrh
 15268  0172F0  0E00               	movlw	low (__mediumconst shr (0+16))
 15269  0172F2  6EF8               	movwf	tblptru,c
 15270  0172F4  0E1F               	movlw	(high __ramtop+-1)
 15271  0172F6  64F7               	cpfsgt	tblptrh,c
 15272  0172F8  D003               	bra	u11587
 15273  0172FA  0008               	tblrd		*
 15274  0172FC  50F5               	movf	tablat,w,c
 15275  0172FE  D007               	bra	u11580
 15276  017300                     u11587:
 15277  017300  006F FFDB FFE9     	movff	tblptrl,fsr0l
 15278  017306  006F FFDF FFEA     	movff	tblptrh,fsr0h
 15279  01730C  50EF               	movf	indf0,w,c
 15280  01730E                     u11580:
 15281  01730E  6EE6               	movwf	postinc1,c
 15282  017310  0E00               	movlw	0
 15283  017312  6EE6               	movwf	postinc1,c
 15284  017314  EC64  F0CA         	call	_fputc	;wreg free
 15285                           
 15286                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 576:         ++cp;
 15287                           ;stkvar	_cp @ sp[(-17)+11]
 15288  017318  0EFA               	movlw	-6
 15289  01731A  50E3               	movf	plusw1,w,c
 15290  01731C  0F01               	addlw	1
 15291  01731E  6E01               	movwf	btemp^0,c
 15292  017320  0EFA               	movlw	-6
 15293  017322  0060  F007  FFE3   	movff	btemp,plusw1
 15294  017328  6A01               	clrf	btemp^0,c
 15295  01732A  0EFB               	movlw	-5
 15296  01732C  50E3               	movf	plusw1,w,c
 15297  01732E  2001               	addwfc	btemp^0,w,c
 15298  017330  6E01               	movwf	btemp^0,c
 15299  017332  0EFB               	movlw	-5
 15300  017334  0060  F007  FFE3   	movff	btemp,plusw1
 15301                           
 15302                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 577:         ++i;
 15303                           ;stkvar	_i @ sp[(-17)+15]
 15304  01733A  0EFE               	movlw	-2
 15305  01733C  50E3               	movf	plusw1,w,c
 15306  01733E  0F01               	addlw	1
 15307  017340  6E01               	movwf	btemp^0,c
 15308  017342  0EFE               	movlw	-2
 15309  017344  0060  F007  FFE3   	movff	btemp,plusw1
 15310  01734A  6A01               	clrf	btemp^0,c
 15311  01734C  0EFF               	movlw	-1
 15312  01734E  50E3               	movf	plusw1,w,c
 15313  017350  2001               	addwfc	btemp^0,w,c
 15314  017352  6E01               	movwf	btemp^0,c
 15315  017354  0EFF               	movlw	-1
 15316  017356  0060  F007  FFE3   	movff	btemp,plusw1
 15317  01735C                     l12153:
 15318                           
 15319                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 15320                           ;stkvar	_p @ sp[(-17)+9]
 15321                           ;stkvar	_i @ sp[(-17)+15]
 15322  01735C  50E1               	movf	fsr1l,w,c
 15323  01735E  0FFE               	addlw	-2
 15324  017360  6ED9               	movwf	fsr2l,c
 15325  017362  50E2               	movf	fsr1h,w,c
 15326  017364  6EDA               	movwf	fsr2h,c
 15327  017366  0EFF               	movlw	255
 15328  017368  22DA               	addwfc	fsr2h,f,c
 15329  01736A  0EF8               	movlw	-8
 15330  01736C  50E3               	movf	plusw1,w,c
 15331  01736E  5CDE               	subwf	postinc2,w,c
 15332  017370  50DE               	movf	postinc2,w,c
 15333  017372  0A80               	xorlw	128
 15334  017374  6E01               	movwf	btemp^0,c
 15335  017376  0EF9               	movlw	-7
 15336  017378  50E3               	movf	plusw1,w,c
 15337  01737A  0A80               	xorlw	128
 15338  01737C  5801               	subwfb	btemp^0,w,c
 15339  01737E  A0D8               	btfss	status,0,c
 15340  017380  D7A8               	goto	l12147
 15341                           
 15342                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
 15343  017382  B03E               	btfsc	_flags^0,0,c
 15344  017384  D01F               	goto	l12161
 15345  017386  D031               	goto	u11610
 15346  017388                     l12157:
 15347                           
 15348                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
 15349                           ;stkvar	_fp @ sp[(-17)+-2]
 15350  017388  0EED               	movlw	-19
 15351  01738A  006F FF8F FFE6     	movff	plusw1,postinc1
 15352  017390  006F FF8F FFE6     	movff	plusw1,postinc1
 15353  017396  0E20               	movlw	32
 15354  017398  6EE6               	movwf	postinc1,c
 15355  01739A  0E00               	movlw	0
 15356  01739C  6EE6               	movwf	postinc1,c
 15357  01739E  EC64  F0CA         	call	_fputc	;wreg free
 15358                           
 15359                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 584:             ++l;
 15360                           ;stkvar	_l @ sp[(-17)+7]
 15361  0173A2  0EF6               	movlw	-10
 15362  0173A4  50E3               	movf	plusw1,w,c
 15363  0173A6  0F01               	addlw	1
 15364  0173A8  6E01               	movwf	btemp^0,c
 15365  0173AA  0EF6               	movlw	-10
 15366  0173AC  0060  F007  FFE3   	movff	btemp,plusw1
 15367  0173B2  6A01               	clrf	btemp^0,c
 15368  0173B4  0EF7               	movlw	-9
 15369  0173B6  50E3               	movf	plusw1,w,c
 15370  0173B8  2001               	addwfc	btemp^0,w,c
 15371  0173BA  6E01               	movwf	btemp^0,c
 15372  0173BC  0EF7               	movlw	-9
 15373  0173BE  0060  F007  FFE3   	movff	btemp,plusw1
 15374  0173C4                     l12161:
 15375                           
 15376                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
 15377                           ;stkvar	_w @ sp[(-17)+13]
 15378                           ;stkvar	_l @ sp[(-17)+7]
 15379  0173C4  50E1               	movf	fsr1l,w,c
 15380  0173C6  0FF6               	addlw	-10
 15381  0173C8  6ED9               	movwf	fsr2l,c
 15382  0173CA  50E2               	movf	fsr1h,w,c
 15383  0173CC  6EDA               	movwf	fsr2h,c
 15384  0173CE  0EFF               	movlw	255
 15385  0173D0  22DA               	addwfc	fsr2h,f,c
 15386  0173D2  0EFC               	movlw	-4
 15387  0173D4  50E3               	movf	plusw1,w,c
 15388  0173D6  5CDE               	subwf	postinc2,w,c
 15389  0173D8  50DE               	movf	postinc2,w,c
 15390  0173DA  0A80               	xorlw	128
 15391  0173DC  6E01               	movwf	btemp^0,c
 15392  0173DE  0EFD               	movlw	-3
 15393  0173E0  50E3               	movf	plusw1,w,c
 15394  0173E2  0A80               	xorlw	128
 15395  0173E4  5801               	subwfb	btemp^0,w,c
 15396  0173E6  A0D8               	btfss	status,0,c
 15397  0173E8  D7CF               	goto	l12157
 15398  0173EA                     u11610:
 15399                           
 15400                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 588:     return l;
 15401                           ;stkvar	_l @ sp[(-17)+7]
 15402  0173EA  0EF6               	movlw	-10
 15403  0173EC  006F FF8C  F001    	movff	plusw1,btemp
 15404  0173F2  0EF7               	movlw	-9
 15405  0173F4  006F FF8C  F002    	movff	plusw1,btemp+1
 15406                           
 15407                           ; _stoa: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 15408  0173FA  0EEB               	movlw	235
 15409  0173FC  26E1               	addwf	fsr1l,f,c
 15410  0173FE  0EFF               	movlw	255
 15411  017400  22E2               	addwfc	fsr1h,f,c
 15412  017402  0012               	return		;funcret
 15413  017404                     __end_of_stoa:
 15414                           	opt callstack 0
 15415                           
 15416 ;; *************** function _efgtoa *****************
 15417 ;; Defined at:
 15418 ;;		line 319 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 15419 ;; Parameters:    Size  Location     Type
 15420 ;;  fp              2  [STACK] PTR struct _IO_FILE
 15421 ;;		 -> f(6), NULL(0), 
 15422 ;;  f               4  [STACK] PTR struct _IO_FILE
 15423 ;;  c               1  [STACK] unsigned char 
 15424 ;; Auto vars:     Size  Location     Type
 15425 ;;  u               4  [STACK] unsigned char 
 15426 ;;  g               4  [STACK] unsigned char 
 15427 ;;  l               4  [STACK] unsigned char 
 15428 ;;  h               4  [STACK] unsigned char 
 15429 ;;  ou              4  [STACK] unsigned char 
 15430 ;;  n               2  [STACK] int 
 15431 ;;  e               2  [STACK] int 
 15432 ;;  i               2  [STACK] int 
 15433 ;;  w               2  [STACK] int 
 15434 ;;  p               2  [STACK] int 
 15435 ;;  sign            2  [STACK] int 
 15436 ;;  d               2  [STACK] int 
 15437 ;;  ne              2  [STACK] int 
 15438 ;;  m               2  [STACK] int 
 15439 ;;  pp              2  [STACK] int 
 15440 ;;  t               2  [STACK] int 
 15441 ;;  mode            1  [STACK] unsigned char 
 15442 ;;  nmode           1  [STACK] unsigned char 
 15443 ;; Return value:  Size  Location     Type
 15444 ;;                  2  [STACK] int 
 15445 ;; Registers used:
 15446 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 15447 ;; Tracked objects:
 15448 ;;		On entry : 0/0
 15449 ;;		On exit  : 0/0
 15450 ;;		Unchanged: 0/0
 15451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15452 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15453 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15455 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15456 ;;Total ram usage:        0 bytes
 15457 ;; Hardware stack levels used:    1
 15458 ;; Hardware stack levels required when called:   20
 15459 ;; This function calls:
 15460 ;;		___awdiv
 15461 ;;		___awmod
 15462 ;;		___fladd
 15463 ;;		___fldiv
 15464 ;;		___fleq
 15465 ;;		___flge
 15466 ;;		___flmul
 15467 ;;		___flneg
 15468 ;;		___flsub
 15469 ;;		___fltol
 15470 ;;		___fpclassifyf
 15471 ;;		_floorf
 15472 ;;		_isupper
 15473 ;;		_pad
 15474 ;;		_strcpy
 15475 ;;		_tolower
 15476 ;; This function is called by:
 15477 ;;		_vfpfcnvrt
 15478 ;; This function uses a reentrant model
 15479 ;;
 15480                           
 15481                           	psect	text55
 15482  010000                     __ptext55:
 15483                           	opt callstack 0
 15484  010000                     _efgtoa:
 15485                           	opt callstack 0
 15486                           
 15487                           ; autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsize = 7 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 15488  010000  0E38               	movlw	56
 15489  010002  26E1               	addwf	fsr1l,f,c
 15490  010004  0E00               	movlw	0
 15491  010006  22E2               	addwfc	fsr1h,f,c
 15492                           
 15493                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 319: static int efgtoa(FILE *
      +                          fp, long double f, char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 320
      +                          : {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 321:     char mode, nmode;
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 322:     int d, e, i, m, n, n
      +                          e, p, pp, sign, t, w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 323:    
      +                           long double g, h, l, ou, u;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 3
      +                          26:     sign = 0;
 15494                           ;stkvar	_sign @ sp[(-56)+42]
 15495                           
 15496                           ;incstack = 0
 15497 ;; hardware stack exceeded
 15498  010008  0EF2               	movlw	-14
 15499  01000A  6AE3               	clrf	plusw1,c
 15500  01000C  0EF3               	movlw	-13
 15501  01000E  6AE3               	clrf	plusw1,c
 15502                           
 15503                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 327:     g = f;
 15504                           ;stkvar	_f @ sp[(-56)+-6]
 15505  010010  0EC2               	movlw	-62
 15506  010012  006F FF8C  F009    	movff	plusw1,btemp+8
 15507  010018  0EC3               	movlw	-61
 15508  01001A  006F FF8C  F00A    	movff	plusw1,btemp+9
 15509  010020  0EC4               	movlw	-60
 15510  010022  006F FF8C  F00B    	movff	plusw1,btemp+10
 15511  010028  0EC5               	movlw	-59
 15512  01002A  006F FF8C  F00C    	movff	plusw1,btemp+11
 15513                           
 15514                           ;stkvar	_g @ sp[(-56)+16]
 15515  010030  0ED8               	movlw	-40
 15516  010032  0060  F027  FFE3   	movff	btemp+8,plusw1
 15517  010038  0ED9               	movlw	-39
 15518  01003A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 15519  010040  0EDA               	movlw	-38
 15520  010042  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15521  010048  0EDB               	movlw	-37
 15522  01004A  0060  F033  FFE3   	movff	btemp+11,plusw1
 15523                           
 15524                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 328:     if (g < 0.0) {
 15525                           ;stkvar	_g @ sp[(-56)+16]
 15526  010050  0EDB               	movlw	-37
 15527  010052  AEE3               	btfss	plusw1,7,c
 15528  010054  D02B               	goto	l11821
 15529                           
 15530                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 329:         sign = 1;
 15531  010056  0E01               	movlw	1
 15532  010058  6E0B               	movwf	(btemp+10)^0,c
 15533  01005A  0E00               	movlw	0
 15534  01005C  6E0C               	movwf	(btemp+11)^0,c
 15535                           
 15536                           ;stkvar	_sign @ sp[(-56)+42]
 15537  01005E  0EF2               	movlw	-14
 15538  010060  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15539  010066  0EF3               	movlw	-13
 15540  010068  0060  F033  FFE3   	movff	btemp+11,plusw1
 15541                           
 15542                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 330:         g = -g;
 15543                           ;stkvar	_g @ sp[(-56)+16]
 15544  01006E  0ED8               	movlw	-40
 15545  010070  006F FF8F FFE6     	movff	plusw1,postinc1
 15546  010076  006F FF8F FFE6     	movff	plusw1,postinc1
 15547  01007C  006F FF8F FFE6     	movff	plusw1,postinc1
 15548  010082  006F FF8F FFE6     	movff	plusw1,postinc1
 15549  010088  EC55  F0D8         	call	___flneg	;wreg free
 15550                           
 15551                           ;stkvar	_g @ sp[(-56)+16]
 15552  01008C  0ED8               	movlw	-40
 15553  01008E  0060  F007  FFE3   	movff	btemp,plusw1
 15554  010094  0ED9               	movlw	-39
 15555  010096  0060  F00B  FFE3   	movff	btemp+1,plusw1
 15556  01009C  0EDA               	movlw	-38
 15557  01009E  0060  F00F  FFE3   	movff	btemp+2,plusw1
 15558  0100A4  0EDB               	movlw	-37
 15559  0100A6  0060  F013  FFE3   	movff	btemp+3,plusw1
 15560  0100AC                     l11821:
 15561                           
 15562                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 334:     n = 0;
 15563                           ;stkvar	_n @ sp[(-56)+32]
 15564  0100AC  0EE8               	movlw	-24
 15565  0100AE  6AE3               	clrf	plusw1,c
 15566  0100B0  0EE9               	movlw	-23
 15567  0100B2  6AE3               	clrf	plusw1,c
 15568                           
 15569                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 335:     w = width;
 15570                           ;stkvar	_w @ sp[(-56)+38]
 15571  0100B4  0EEE               	movlw	-18
 15572  0100B6  0060  F0EB  FFE3   	movff	_width,plusw1
 15573  0100BC  0EEF               	movlw	-17
 15574  0100BE  0060  F0EF  FFE3   	movff	_width+1,plusw1
 15575                           
 15576                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 336:     if (sign || (flags &
      +                           (1 << 2))) {
 15577                           ;stkvar	_sign @ sp[(-56)+42]
 15578  0100C4  0EF2               	movlw	-14
 15579  0100C6  006F FF8C  F001    	movff	plusw1,btemp
 15580  0100CC  0EF3               	movlw	-13
 15581  0100CE  50E3               	movf	plusw1,w,c
 15582  0100D0  1001               	iorwf	btemp^0,w,c
 15583  0100D2  A4D8               	btfss	status,2,c
 15584  0100D4  D002               	goto	u11020
 15585  0100D6  A43E               	btfss	_flags^0,2,c
 15586  0100D8  D036               	goto	l11841
 15587  0100DA                     u11020:
 15588                           
 15589                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 337:         dbuf[n] = sign ?
      +                           '-' : '+';
 15590                           ;stkvar	_sign @ sp[(-56)+42]
 15591  0100DA  0EF2               	movlw	-14
 15592  0100DC  006F FF8C  F001    	movff	plusw1,btemp
 15593  0100E2  0EF3               	movlw	-13
 15594  0100E4  50E3               	movf	plusw1,w,c
 15595  0100E6  1001               	iorwf	btemp^0,w,c
 15596  0100E8  A4D8               	btfss	status,2,c
 15597  0100EA  D002               	goto	l11833
 15598  0100EC  0E2B               	movlw	43
 15599  0100EE  D001               	goto	L16
 15600  0100F0                     l11833:
 15601  0100F0  0E2D               	movlw	45
 15602  0100F2                     L16:
 15603  0100F2  6E0B               	movwf	(btemp+10)^0,c
 15604  0100F4  0E00               	movlw	0
 15605  0100F6  6E0C               	movwf	(btemp+11)^0,c
 15606                           
 15607                           ;stkvar	_efgtoa$5494 @ sp[(-56)+10]
 15608  0100F8  0ED2               	movlw	-46
 15609  0100FA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15610  010100  0ED3               	movlw	-45
 15611  010102  0060  F033  FFE3   	movff	btemp+11,plusw1
 15612                           
 15613                           ;stkvar	_efgtoa$5494 @ sp[(-56)+10]
 15614  010108  0ED2               	movlw	-46
 15615  01010A  006F FF8C  F297    	movff	plusw1,_dbuf
 15616                           
 15617                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 338:         ++n;
 15618                           ;stkvar	_n @ sp[(-56)+32]
 15619  010110  0EE8               	movlw	-24
 15620  010112  50E3               	movf	plusw1,w,c
 15621  010114  0F01               	addlw	1
 15622  010116  6E01               	movwf	btemp^0,c
 15623  010118  0EE8               	movlw	-24
 15624  01011A  0060  F007  FFE3   	movff	btemp,plusw1
 15625  010120  6A01               	clrf	btemp^0,c
 15626  010122  0EE9               	movlw	-23
 15627  010124  50E3               	movf	plusw1,w,c
 15628  010126  2001               	addwfc	btemp^0,w,c
 15629  010128  6E01               	movwf	btemp^0,c
 15630  01012A  0EE9               	movlw	-23
 15631  01012C  0060  F007  FFE3   	movff	btemp,plusw1
 15632                           
 15633                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 339:         --w;
 15634                           ;stkvar	_w @ sp[(-56)+38]
 15635  010132  50E1               	movf	fsr1l,w,c
 15636  010134  0FEE               	addlw	-18
 15637  010136  6ED9               	movwf	fsr2l,c
 15638  010138  50E2               	movf	fsr1h,w,c
 15639  01013A  6EDA               	movwf	fsr2h,c
 15640  01013C  0EFF               	movlw	255
 15641  01013E  22DA               	addwfc	fsr2h,f,c
 15642  010140  06DE               	decf	postinc2,f,c
 15643  010142  0E00               	movlw	0
 15644  010144  5ADD               	subwfb	postdec2,f,c
 15645  010146                     l11841:
 15646                           
 15647                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 344:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 15648                           ;stkvar	_g @ sp[(-56)+16]
 15649  010146  0ED8               	movlw	-40
 15650  010148  006F FF8F FFE6     	movff	plusw1,postinc1
 15651  01014E  006F FF8F FFE6     	movff	plusw1,postinc1
 15652  010154  006F FF8F FFE6     	movff	plusw1,postinc1
 15653  01015A  006F FF8F FFE6     	movff	plusw1,postinc1
 15654  010160  EC7A  F0C3         	call	___fpclassifyf	;wreg free
 15655  010164  0401               	decf	btemp^0,w,c
 15656  010166  1002               	iorwf	(btemp+1)^0,w,c
 15657  010168  A4D8               	btfss	status,2,c
 15658  01016A  D076               	goto	l11859
 15659  01016C  0EBF               	movlw	191
 15660  01016E  6E0B               	movwf	(btemp+10)^0,c
 15661  010170  0EFF               	movlw	255
 15662  010172  6E0C               	movwf	(btemp+11)^0,c
 15663                           
 15664                           ;stkvar	_c @ sp[(-56)+-7]
 15665  010174  0EC1               	movlw	-63
 15666  010176  50E3               	movf	plusw1,w,c
 15667  010178  6E09               	movwf	(btemp+8)^0,c
 15668  01017A  6A0A               	clrf	(btemp+9)^0,c
 15669  01017C  500B               	movf	(btemp+10)^0,w,c
 15670  01017E  2609               	addwf	(btemp+8)^0,f,c
 15671  010180  500C               	movf	(btemp+11)^0,w,c
 15672  010182  220A               	addwfc	(btemp+9)^0,f,c
 15673  010184  500A               	movf	(btemp+9)^0,w,c
 15674  010186  E106               	bnz	u11050
 15675  010188  0E1A               	movlw	26
 15676  01018A  5C09               	subwf	(btemp+8)^0,w,c
 15677  01018C  B0D8               	btfsc	status,0,c
 15678  01018E  D002               	goto	u11050
 15679  010190  0E01               	movlw	1
 15680  010192  D001               	goto	u11060
 15681  010194                     u11050:
 15682  010194  0E00               	movlw	0
 15683  010196                     u11060:
 15684  010196  6E0B               	movwf	(btemp+10)^0,c
 15685  010198  6A0C               	clrf	(btemp+11)^0,c
 15686                           
 15687                           ;stkvar	_efgtoa$5495 @ sp[(-56)+8]
 15688  01019A  0ED0               	movlw	-48
 15689  01019C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15690  0101A2  0ED1               	movlw	-47
 15691  0101A4  0060  F033  FFE3   	movff	btemp+11,plusw1
 15692                           
 15693                           ;stkvar	_efgtoa$5495 @ sp[(-56)+8]
 15694  0101AA  0ED0               	movlw	-48
 15695  0101AC  006F FF8C  F001    	movff	plusw1,btemp
 15696  0101B2  0ED1               	movlw	-47
 15697  0101B4  50E3               	movf	plusw1,w,c
 15698  0101B6  1001               	iorwf	btemp^0,w,c
 15699  0101B8  B4D8               	btfsc	status,2,c
 15700  0101BA  D017               	goto	l11851
 15701                           
 15702                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 345:             strcpy(&dbuf
      +                          [n], "INF");
 15703  0101BC  0ED7               	movlw	low STR_66
 15704  0101BE  6EE6               	movwf	postinc1,c
 15705  0101C0  0EFF               	movlw	high STR_66
 15706  0101C2  6EE6               	movwf	postinc1,c
 15707                           
 15708                           ;stkvar	_n @ sp[(-58)+32]
 15709  0101C4  0E97               	movlw	low _dbuf
 15710  0101C6  6E0B               	movwf	(btemp+10)^0,c
 15711  0101C8  0E02               	movlw	high _dbuf
 15712  0101CA  6E0C               	movwf	(btemp+11)^0,c
 15713  0101CC  0EE6               	movlw	-26
 15714  0101CE  50E3               	movf	plusw1,w,c
 15715  0101D0  260B               	addwf	(btemp+10)^0,f,c
 15716  0101D2  0EE7               	movlw	-25
 15717  0101D4  50E3               	movf	plusw1,w,c
 15718  0101D6  220C               	addwfc	(btemp+11)^0,f,c
 15719  0101D8  0060  F02F  FFE6   	movff	btemp+10,postinc1
 15720  0101DE  0060  F033  FFE6   	movff	btemp+11,postinc1
 15721  0101E4  EC63  F0D0         	call	_strcpy	;wreg free
 15722                           
 15723                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 346:         } else {
 15724  0101E8  D016               	goto	l11853
 15725  0101EA                     l11851:
 15726                           
 15727                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 347:             strcpy(&dbuf
      +                          [n], "inf");
 15728  0101EA  0EDF               	movlw	low STR_67
 15729  0101EC  6EE6               	movwf	postinc1,c
 15730  0101EE  0EFF               	movlw	high STR_67
 15731  0101F0  6EE6               	movwf	postinc1,c
 15732                           
 15733                           ;stkvar	_n @ sp[(-58)+32]
 15734  0101F2  0E97               	movlw	low _dbuf
 15735  0101F4  6E0B               	movwf	(btemp+10)^0,c
 15736  0101F6  0E02               	movlw	high _dbuf
 15737  0101F8  6E0C               	movwf	(btemp+11)^0,c
 15738  0101FA  0EE6               	movlw	-26
 15739  0101FC  50E3               	movf	plusw1,w,c
 15740  0101FE  260B               	addwf	(btemp+10)^0,f,c
 15741  010200  0EE7               	movlw	-25
 15742  010202  50E3               	movf	plusw1,w,c
 15743  010204  220C               	addwfc	(btemp+11)^0,f,c
 15744  010206  0060  F02F  FFE6   	movff	btemp+10,postinc1
 15745  01020C  0060  F033  FFE6   	movff	btemp+11,postinc1
 15746  010212  EC63  F0D0         	call	_strcpy	;wreg free
 15747  010216                     l11853:
 15748                           
 15749                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 349:         w -= ((sizeof("i
      +                          nf")/sizeof("inf"[0]))-1);
 15750                           ;stkvar	_w @ sp[(-56)+38]
 15751  010216  50E1               	movf	fsr1l,w,c
 15752  010218  0FEE               	addlw	-18
 15753  01021A  6ED9               	movwf	fsr2l,c
 15754  01021C  50E2               	movf	fsr1h,w,c
 15755  01021E  6EDA               	movwf	fsr2h,c
 15756  010220  0EFF               	movlw	255
 15757  010222  22DA               	addwfc	fsr2h,f,c
 15758  010224  0EFD               	movlw	253
 15759  010226  26DE               	addwf	postinc2,f,c
 15760  010228  0EFF               	movlw	255
 15761  01022A  22DD               	addwfc	postdec2,f,c
 15762  01022C                     l11855:
 15763                           
 15764                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 350:         return pad(fp, &
      +                          dbuf[0], w);
 15765                           ;stkvar	_w @ sp[(-56)+38]
 15766  01022C  0EEE               	movlw	-18
 15767  01022E  006F FF8F FFE6     	movff	plusw1,postinc1
 15768  010234  006F FF8F FFE6     	movff	plusw1,postinc1
 15769  01023A  0E97               	movlw	low _dbuf
 15770  01023C  6EE6               	movwf	postinc1,c
 15771  01023E  0E02               	movlw	high _dbuf
 15772  010240  6EE6               	movwf	postinc1,c
 15773                           
 15774                           ;stkvar	_fp @ sp[(-60)+-2]
 15775  010242  0EC2               	movlw	-62
 15776  010244  006F FF8F FFE6     	movff	plusw1,postinc1
 15777  01024A  006F FF8F FFE6     	movff	plusw1,postinc1
 15778  010250  EC0F  F0CC         	call	_pad	;wreg free
 15779  010254  EF1D  F089         	goto	l2199
 15780  010258                     l11859:
 15781                           
 15782                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 353:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 15783                           ;stkvar	_g @ sp[(-56)+16]
 15784  010258  0ED8               	movlw	-40
 15785  01025A  006F FF8F FFE6     	movff	plusw1,postinc1
 15786  010260  006F FF8F FFE6     	movff	plusw1,postinc1
 15787  010266  006F FF8F FFE6     	movff	plusw1,postinc1
 15788  01026C  006F FF8F FFE6     	movff	plusw1,postinc1
 15789  010272  EC7A  F0C3         	call	___fpclassifyf	;wreg free
 15790  010276  5001               	movf	btemp^0,w,c
 15791  010278  1002               	iorwf	(btemp+1)^0,w,c
 15792  01027A  A4D8               	btfss	status,2,c
 15793  01027C  D056               	goto	l11877
 15794  01027E  0EBF               	movlw	191
 15795  010280  6E0B               	movwf	(btemp+10)^0,c
 15796  010282  0EFF               	movlw	255
 15797  010284  6E0C               	movwf	(btemp+11)^0,c
 15798                           
 15799                           ;stkvar	_c @ sp[(-56)+-7]
 15800  010286  0EC1               	movlw	-63
 15801  010288  50E3               	movf	plusw1,w,c
 15802  01028A  6E09               	movwf	(btemp+8)^0,c
 15803  01028C  6A0A               	clrf	(btemp+9)^0,c
 15804  01028E  500B               	movf	(btemp+10)^0,w,c
 15805  010290  2609               	addwf	(btemp+8)^0,f,c
 15806  010292  500C               	movf	(btemp+11)^0,w,c
 15807  010294  220A               	addwfc	(btemp+9)^0,f,c
 15808  010296  500A               	movf	(btemp+9)^0,w,c
 15809  010298  E106               	bnz	u11090
 15810  01029A  0E1A               	movlw	26
 15811  01029C  5C09               	subwf	(btemp+8)^0,w,c
 15812  01029E  B0D8               	btfsc	status,0,c
 15813  0102A0  D002               	goto	u11090
 15814  0102A2  0E01               	movlw	1
 15815  0102A4  D001               	goto	u11100
 15816  0102A6                     u11090:
 15817  0102A6  0E00               	movlw	0
 15818  0102A8                     u11100:
 15819  0102A8  6E0B               	movwf	(btemp+10)^0,c
 15820  0102AA  6A0C               	clrf	(btemp+11)^0,c
 15821                           
 15822                           ;stkvar	_efgtoa$5499 @ sp[(-56)+6]
 15823  0102AC  0ECE               	movlw	-50
 15824  0102AE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15825  0102B4  0ECF               	movlw	-49
 15826  0102B6  0060  F033  FFE3   	movff	btemp+11,plusw1
 15827                           
 15828                           ;stkvar	_efgtoa$5499 @ sp[(-56)+6]
 15829  0102BC  0ECE               	movlw	-50
 15830  0102BE  006F FF8C  F001    	movff	plusw1,btemp
 15831  0102C4  0ECF               	movlw	-49
 15832  0102C6  50E3               	movf	plusw1,w,c
 15833  0102C8  1001               	iorwf	btemp^0,w,c
 15834  0102CA  B4D8               	btfsc	status,2,c
 15835  0102CC  D017               	goto	l11869
 15836                           
 15837                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 354:             strcpy(&dbuf
      +                          [n], "NAN");
 15838  0102CE  0EDB               	movlw	low STR_70
 15839  0102D0  6EE6               	movwf	postinc1,c
 15840  0102D2  0EFF               	movlw	high STR_70
 15841  0102D4  6EE6               	movwf	postinc1,c
 15842                           
 15843                           ;stkvar	_n @ sp[(-58)+32]
 15844  0102D6  0E97               	movlw	low _dbuf
 15845  0102D8  6E0B               	movwf	(btemp+10)^0,c
 15846  0102DA  0E02               	movlw	high _dbuf
 15847  0102DC  6E0C               	movwf	(btemp+11)^0,c
 15848  0102DE  0EE6               	movlw	-26
 15849  0102E0  50E3               	movf	plusw1,w,c
 15850  0102E2  260B               	addwf	(btemp+10)^0,f,c
 15851  0102E4  0EE7               	movlw	-25
 15852  0102E6  50E3               	movf	plusw1,w,c
 15853  0102E8  220C               	addwfc	(btemp+11)^0,f,c
 15854  0102EA  0060  F02F  FFE6   	movff	btemp+10,postinc1
 15855  0102F0  0060  F033  FFE6   	movff	btemp+11,postinc1
 15856  0102F6  EC63  F0D0         	call	_strcpy	;wreg free
 15857                           
 15858                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 355:         } else {
 15859  0102FA  D78D               	goto	l11853
 15860  0102FC                     l11869:
 15861                           
 15862                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 356:             strcpy(&dbuf
      +                          [n], "nan");
 15863  0102FC  0EE3               	movlw	low STR_71
 15864  0102FE  6EE6               	movwf	postinc1,c
 15865  010300  0EFF               	movlw	high STR_71
 15866  010302  6EE6               	movwf	postinc1,c
 15867                           
 15868                           ;stkvar	_n @ sp[(-58)+32]
 15869  010304  0E97               	movlw	low _dbuf
 15870  010306  6E0B               	movwf	(btemp+10)^0,c
 15871  010308  0E02               	movlw	high _dbuf
 15872  01030A  6E0C               	movwf	(btemp+11)^0,c
 15873  01030C  0EE6               	movlw	-26
 15874  01030E  50E3               	movf	plusw1,w,c
 15875  010310  260B               	addwf	(btemp+10)^0,f,c
 15876  010312  0EE7               	movlw	-25
 15877  010314  50E3               	movf	plusw1,w,c
 15878  010316  220C               	addwfc	(btemp+11)^0,f,c
 15879  010318  0060  F02F  FFE6   	movff	btemp+10,postinc1
 15880  01031E  0060  F033  FFE6   	movff	btemp+11,postinc1
 15881  010324  EC63  F0D0         	call	_strcpy	;wreg free
 15882  010328  D776               	goto	l11853
 15883  01032A                     l11877:
 15884                           
 15885                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 363:     u = 1.0;
 15886  01032A  0E00               	movlw	0
 15887  01032C  6E09               	movwf	(btemp+8)^0,c
 15888  01032E  0E00               	movlw	0
 15889  010330  6E0A               	movwf	(btemp+9)^0,c
 15890  010332  0E80               	movlw	128
 15891  010334  6E0B               	movwf	(btemp+10)^0,c
 15892  010336  0E3F               	movlw	63
 15893  010338  6E0C               	movwf	(btemp+11)^0,c
 15894                           
 15895                           ;stkvar	_u @ sp[(-56)+12]
 15896  01033A  0ED4               	movlw	-44
 15897  01033C  0060  F027  FFE3   	movff	btemp+8,plusw1
 15898  010342  0ED5               	movlw	-43
 15899  010344  0060  F02B  FFE3   	movff	btemp+9,plusw1
 15900  01034A  0ED6               	movlw	-42
 15901  01034C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15902  010352  0ED7               	movlw	-41
 15903  010354  0060  F033  FFE3   	movff	btemp+11,plusw1
 15904                           
 15905                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 364:     e = 0;
 15906                           ;stkvar	_e @ sp[(-56)+34]
 15907  01035A  0EEA               	movlw	-22
 15908  01035C  6AE3               	clrf	plusw1,c
 15909  01035E  0EEB               	movlw	-21
 15910  010360  6AE3               	clrf	plusw1,c
 15911                           
 15912                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 365:     if (!(g == 0.0)) {
 15913  010362  0E00               	movlw	0
 15914  010364  6EE6               	movwf	postinc1,c
 15915  010366  0E00               	movlw	0
 15916  010368  6EE6               	movwf	postinc1,c
 15917  01036A  0E00               	movlw	0
 15918  01036C  6EE6               	movwf	postinc1,c
 15919  01036E  0E00               	movlw	0
 15920  010370  6EE6               	movwf	postinc1,c
 15921                           
 15922                           ;stkvar	_g @ sp[(-60)+16]
 15923  010372  0ED4               	movlw	-44
 15924  010374  006F FF8F FFE6     	movff	plusw1,postinc1
 15925  01037A  006F FF8F FFE6     	movff	plusw1,postinc1
 15926  010380  006F FF8F FFE6     	movff	plusw1,postinc1
 15927  010386  006F FF8F FFE6     	movff	plusw1,postinc1
 15928  01038C  ECCD  F0D0         	call	___fleq	;wreg free
 15929  010390  A001               	btfss	btemp& (0+255),0,c
 15930  010392  D039               	goto	l11889
 15931  010394  D0BC               	goto	u11140
 15932  010396                     l11885:
 15933                           
 15934                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 367:             u = u*10.0;
 15935  010396  0E00               	movlw	0
 15936  010398  6EE6               	movwf	postinc1,c
 15937  01039A  0E00               	movlw	0
 15938  01039C  6EE6               	movwf	postinc1,c
 15939  01039E  0E20               	movlw	32
 15940  0103A0  6EE6               	movwf	postinc1,c
 15941  0103A2  0E41               	movlw	65
 15942  0103A4  6EE6               	movwf	postinc1,c
 15943                           
 15944                           ;stkvar	_u @ sp[(-60)+12]
 15945  0103A6  0ED0               	movlw	-48
 15946  0103A8  006F FF8F FFE6     	movff	plusw1,postinc1
 15947  0103AE  006F FF8F FFE6     	movff	plusw1,postinc1
 15948  0103B4  006F FF8F FFE6     	movff	plusw1,postinc1
 15949  0103BA  006F FF8F FFE6     	movff	plusw1,postinc1
 15950  0103C0  ECA0  F099         	call	___flmul	;wreg free
 15951                           
 15952                           ;stkvar	_u @ sp[(-56)+12]
 15953  0103C4  0ED4               	movlw	-44
 15954  0103C6  0060  F007  FFE3   	movff	btemp,plusw1
 15955  0103CC  0ED5               	movlw	-43
 15956  0103CE  0060  F00B  FFE3   	movff	btemp+1,plusw1
 15957  0103D4  0ED6               	movlw	-42
 15958  0103D6  0060  F00F  FFE3   	movff	btemp+2,plusw1
 15959  0103DC  0ED7               	movlw	-41
 15960  0103DE  0060  F013  FFE3   	movff	btemp+3,plusw1
 15961                           
 15962                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 368:             ++e;
 15963                           ;stkvar	_e @ sp[(-56)+34]
 15964  0103E4  0EEA               	movlw	-22
 15965  0103E6  50E3               	movf	plusw1,w,c
 15966  0103E8  0F01               	addlw	1
 15967  0103EA  6E01               	movwf	btemp^0,c
 15968  0103EC  0EEA               	movlw	-22
 15969  0103EE  0060  F007  FFE3   	movff	btemp,plusw1
 15970  0103F4  6A01               	clrf	btemp^0,c
 15971  0103F6  0EEB               	movlw	-21
 15972  0103F8  50E3               	movf	plusw1,w,c
 15973  0103FA  2001               	addwfc	btemp^0,w,c
 15974  0103FC  6E01               	movwf	btemp^0,c
 15975  0103FE  0EEB               	movlw	-21
 15976  010400  0060  F007  FFE3   	movff	btemp,plusw1
 15977  010406                     l11889:
 15978                           
 15979                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 366:         while (!(g < (u*
      +                          10.0))) {
 15980  010406  0E00               	movlw	0
 15981  010408  6EE6               	movwf	postinc1,c
 15982  01040A  0E00               	movlw	0
 15983  01040C  6EE6               	movwf	postinc1,c
 15984  01040E  0E20               	movlw	32
 15985  010410  6EE6               	movwf	postinc1,c
 15986  010412  0E41               	movlw	65
 15987  010414  6EE6               	movwf	postinc1,c
 15988                           
 15989                           ;stkvar	_u @ sp[(-60)+12]
 15990  010416  0ED0               	movlw	-48
 15991  010418  006F FF8F FFE6     	movff	plusw1,postinc1
 15992  01041E  006F FF8F FFE6     	movff	plusw1,postinc1
 15993  010424  006F FF8F FFE6     	movff	plusw1,postinc1
 15994  01042A  006F FF8F FFE6     	movff	plusw1,postinc1
 15995  010430  ECA0  F099         	call	___flmul	;wreg free
 15996  010434  0060  F007  FFE6   	movff	btemp,postinc1
 15997  01043A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 15998  010440  0060  F00F  FFE6   	movff	btemp+2,postinc1
 15999  010446  0060  F013  FFE6   	movff	btemp+3,postinc1
 16000                           
 16001                           ;stkvar	_g @ sp[(-60)+16]
 16002  01044C  0ED4               	movlw	-44
 16003  01044E  006F FF8F FFE6     	movff	plusw1,postinc1
 16004  010454  006F FF8F FFE6     	movff	plusw1,postinc1
 16005  01045A  006F FF8F FFE6     	movff	plusw1,postinc1
 16006  010460  006F FF8F FFE6     	movff	plusw1,postinc1
 16007  010466  EC81  F0C6         	call	___flge	;wreg free
 16008  01046A  A001               	btfss	btemp& (0+255),0,c
 16009  01046C  D032               	goto	l11895
 16010  01046E  D793               	goto	l11885
 16011  010470                     l11891:
 16012                           
 16013                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 371:             u = u/10.0;
 16014  010470  0E00               	movlw	0
 16015  010472  6EE6               	movwf	postinc1,c
 16016  010474  0E00               	movlw	0
 16017  010476  6EE6               	movwf	postinc1,c
 16018  010478  0E20               	movlw	32
 16019  01047A  6EE6               	movwf	postinc1,c
 16020  01047C  0E41               	movlw	65
 16021  01047E  6EE6               	movwf	postinc1,c
 16022                           
 16023                           ;stkvar	_u @ sp[(-60)+12]
 16024  010480  0ED0               	movlw	-48
 16025  010482  006F FF8F FFE6     	movff	plusw1,postinc1
 16026  010488  006F FF8F FFE6     	movff	plusw1,postinc1
 16027  01048E  006F FF8F FFE6     	movff	plusw1,postinc1
 16028  010494  006F FF8F FFE6     	movff	plusw1,postinc1
 16029  01049A  EC51  F0A5         	call	___fldiv	;wreg free
 16030                           
 16031                           ;stkvar	_u @ sp[(-56)+12]
 16032  01049E  0ED4               	movlw	-44
 16033  0104A0  0060  F007  FFE3   	movff	btemp,plusw1
 16034  0104A6  0ED5               	movlw	-43
 16035  0104A8  0060  F00B  FFE3   	movff	btemp+1,plusw1
 16036  0104AE  0ED6               	movlw	-42
 16037  0104B0  0060  F00F  FFE3   	movff	btemp+2,plusw1
 16038  0104B6  0ED7               	movlw	-41
 16039  0104B8  0060  F013  FFE3   	movff	btemp+3,plusw1
 16040                           
 16041                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 372:             --e;
 16042                           ;stkvar	_e @ sp[(-56)+34]
 16043  0104BE  50E1               	movf	fsr1l,w,c
 16044  0104C0  0FEA               	addlw	-22
 16045  0104C2  6ED9               	movwf	fsr2l,c
 16046  0104C4  50E2               	movf	fsr1h,w,c
 16047  0104C6  6EDA               	movwf	fsr2h,c
 16048  0104C8  0EFF               	movlw	255
 16049  0104CA  22DA               	addwfc	fsr2h,f,c
 16050  0104CC  06DE               	decf	postinc2,f,c
 16051  0104CE  0E00               	movlw	0
 16052  0104D0  5ADD               	subwfb	postdec2,f,c
 16053  0104D2                     l11895:
 16054                           
 16055                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 370:         while (g < u) {
 16056                           ;stkvar	_u @ sp[(-56)+12]
 16057  0104D2  0ED4               	movlw	-44
 16058  0104D4  006F FF8F FFE6     	movff	plusw1,postinc1
 16059  0104DA  006F FF8F FFE6     	movff	plusw1,postinc1
 16060  0104E0  006F FF8F FFE6     	movff	plusw1,postinc1
 16061  0104E6  006F FF8F FFE6     	movff	plusw1,postinc1
 16062                           
 16063                           ;stkvar	_g @ sp[(-60)+16]
 16064  0104EC  0ED4               	movlw	-44
 16065  0104EE  006F FF8F FFE6     	movff	plusw1,postinc1
 16066  0104F4  006F FF8F FFE6     	movff	plusw1,postinc1
 16067  0104FA  006F FF8F FFE6     	movff	plusw1,postinc1
 16068  010500  006F FF8F FFE6     	movff	plusw1,postinc1
 16069  010506  EC81  F0C6         	call	___flge	;wreg free
 16070  01050A  A001               	btfss	btemp& (0+255),0,c
 16071  01050C  D7B1               	goto	l11891
 16072  01050E                     u11140:
 16073                           
 16074                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 377:     mode = tolower((int)
      +                          c);
 16075                           ;stkvar	_c @ sp[(-56)+-7]
 16076  01050E  0EC1               	movlw	-63
 16077  010510  50E3               	movf	plusw1,w,c
 16078  010512  6EE6               	movwf	postinc1,c
 16079  010514  0E00               	movlw	0
 16080  010516  6EE6               	movwf	postinc1,c
 16081  010518  ECDE  F0D4         	call	_tolower	;wreg free
 16082                           
 16083                           ;stkvar	_mode @ sp[(-56)+54]
 16084  01051C  0EFE               	movlw	-2
 16085  01051E  0060  F007  FFE3   	movff	btemp,plusw1
 16086                           
 16087                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 378:     nmode = mode;
 16088                           ;stkvar	_mode @ sp[(-56)+54]
 16089                           ;stkvar	_nmode @ sp[(-56)+55]
 16090  010524  0EFE               	movlw	-2
 16091  010526  006F FF8C  F001    	movff	plusw1,btemp
 16092  01052C  0EFF               	movlw	-1
 16093  01052E  0060  F007  FFE3   	movff	btemp,plusw1
 16094                           
 16095                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 379:     if (mode == 'g') {
 16096                           ;stkvar	_mode @ sp[(-56)+54]
 16097  010534  0EFE               	movlw	-2
 16098  010536  006F FF8C  F001    	movff	plusw1,btemp
 16099  01053C  0E67               	movlw	103
 16100  01053E  1801               	xorwf	btemp^0,w,c
 16101  010540  A4D8               	btfss	status,2,c
 16102  010542  D025               	goto	l11913
 16103                           
 16104                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 380:   if (prec == 0) {
 16105  010544  503C               	movf	_prec^0,w,c
 16106  010546  103D               	iorwf	(_prec+1)^0,w,c
 16107  010548  A4D8               	btfss	status,2,c
 16108  01054A  D004               	goto	l11907
 16109                           
 16110                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 381:    prec = 1;
 16111  01054C  0E00               	movlw	0
 16112  01054E  6E3D               	movwf	(_prec+1)^0,c
 16113  010550  0E01               	movlw	1
 16114  010552  6E3C               	movwf	_prec^0,c
 16115  010554                     l11907:
 16116                           
 16117                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 383:         p = (0 < prec) ?
      +                           prec : 6;
 16118  010554  BE3D               	btfsc	(_prec+1)^0,7,c
 16119  010556  D005               	goto	u11170
 16120  010558  503D               	movf	(_prec+1)^0,w,c
 16121  01055A  E110               	bnz	l11911
 16122  01055C  043C               	decf	_prec^0,w,c
 16123  01055E  B0D8               	btfsc	status,0,c
 16124  010560  D00D               	goto	l11911
 16125  010562                     u11170:
 16126  010562  0E06               	movlw	6
 16127  010564  6E0B               	movwf	(btemp+10)^0,c
 16128  010566  0E00               	movlw	0
 16129  010568  6E0C               	movwf	(btemp+11)^0,c
 16130                           
 16131                           ;stkvar	_p @ sp[(-56)+40]
 16132  01056A  0EF0               	movlw	-16
 16133  01056C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16134  010572  0EF1               	movlw	-15
 16135  010574  0060  F033  FFE3   	movff	btemp+11,plusw1
 16136  01057A  D00C               	goto	l11919
 16137  01057C                     l11911:
 16138                           
 16139                           ;stkvar	_p @ sp[(-56)+40]
 16140  01057C  0EF0               	movlw	-16
 16141  01057E  0060  F0F3  FFE3   	movff	_prec,plusw1
 16142  010584  0EF1               	movlw	-15
 16143  010586  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 16144  01058C  D003               	goto	l11919
 16145  01058E                     l11913:
 16146                           
 16147                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 385:         p = (prec < 0) ?
      +                           6 : prec;
 16148  01058E  AE3D               	btfss	(_prec+1)^0,7,c
 16149  010590  D7F5               	goto	l11911
 16150  010592  D7E7               	goto	u11170
 16151  010594                     l11919:
 16152                           
 16153                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 389:     if (mode == 'g') {
 16154                           ;stkvar	_mode @ sp[(-56)+54]
 16155  010594  0EFE               	movlw	-2
 16156  010596  006F FF8C  F001    	movff	plusw1,btemp
 16157  01059C  0E67               	movlw	103
 16158  01059E  1801               	xorwf	btemp^0,w,c
 16159  0105A0  A4D8               	btfss	status,2,c
 16160  0105A2  D02F               	goto	l11929
 16161                           
 16162                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 390:         if (!(e < -4) &&
      +                           !((p - 1) < e)) {
 16163                           ;stkvar	_e @ sp[(-56)+34]
 16164  0105A4  0EEB               	movlw	-21
 16165  0105A6  AEE3               	btfss	plusw1,7,c
 16166  0105A8  D00E               	goto	u11200
 16167  0105AA  0EEA               	movlw	-22
 16168  0105AC  006F FF8C  F001    	movff	plusw1,btemp
 16169  0105B2  0EFC               	movlw	252
 16170  0105B4  5E01               	subwf	btemp^0,f,c
 16171  0105B6  0EEB               	movlw	-21
 16172  0105B8  006F FF8C  F001    	movff	plusw1,btemp
 16173  0105BE  0EFF               	movlw	255
 16174  0105C0  5A01               	subwfb	btemp^0,f,c
 16175  0105C2  A0D8               	btfss	status,0,c
 16176  0105C4  D018               	goto	l11927
 16177  0105C6                     u11200:
 16178                           
 16179                           ;stkvar	_e @ sp[(-56)+34]
 16180                           ;stkvar	_p @ sp[(-56)+40]
 16181  0105C6  0EF0               	movlw	-16
 16182  0105C8  50E3               	movf	plusw1,w,c
 16183  0105CA  0FFF               	addlw	255
 16184  0105CC  6E0B               	movwf	(btemp+10)^0,c
 16185  0105CE  0EF1               	movlw	-15
 16186  0105D0  006F FF8C  F00C    	movff	plusw1,btemp+11
 16187  0105D6  0EFF               	movlw	255
 16188  0105D8  220C               	addwfc	(btemp+11)^0,f,c
 16189  0105DA  0EEA               	movlw	-22
 16190  0105DC  50E3               	movf	plusw1,w,c
 16191  0105DE  5C0B               	subwf	(btemp+10)^0,w,c
 16192  0105E0  500C               	movf	(btemp+11)^0,w,c
 16193  0105E2  0A80               	xorlw	128
 16194  0105E4  6E01               	movwf	btemp^0,c
 16195  0105E6  0EEB               	movlw	-21
 16196  0105E8  50E3               	movf	plusw1,w,c
 16197  0105EA  0A80               	xorlw	128
 16198  0105EC  5801               	subwfb	btemp^0,w,c
 16199  0105EE  A0D8               	btfss	status,0,c
 16200  0105F0  D002               	goto	l11927
 16201                           
 16202                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 391:             nmode = 'f';
 16203  0105F2  0E66               	movlw	102
 16204  0105F4  D001               	goto	L17
 16205  0105F6                     l11927:
 16206                           
 16207                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 393:             nmode = 'e';
 16208  0105F6  0E65               	movlw	101
 16209  0105F8                     L17:
 16210  0105F8  6E0C               	movwf	(btemp+11)^0,c
 16211                           
 16212                           ;stkvar	_nmode @ sp[(-56)+55]
 16213  0105FA  0EFF               	movlw	-1
 16214  0105FC  0060  F033  FFE3   	movff	btemp+11,plusw1
 16215  010602                     l11929:
 16216                           
 16217                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 398:     m = p;
 16218                           ;stkvar	_p @ sp[(-56)+40]
 16219                           ;stkvar	_m @ sp[(-56)+48]
 16220  010602  0EF0               	movlw	-16
 16221  010604  006F FF8C  F001    	movff	plusw1,btemp
 16222  01060A  0EF8               	movlw	-8
 16223  01060C  0060  F007  FFE3   	movff	btemp,plusw1
 16224  010612  0EF1               	movlw	-15
 16225  010614  006F FF8C  F001    	movff	plusw1,btemp
 16226  01061A  0EF9               	movlw	-7
 16227  01061C  0060  F007  FFE3   	movff	btemp,plusw1
 16228                           
 16229                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 399:     if (!(mode == 'g') |
      +                          | ((nmode == 'f') && (e < 0))) {
 16230                           ;stkvar	_mode @ sp[(-56)+54]
 16231  010622  0EFE               	movlw	-2
 16232  010624  006F FF8C  F001    	movff	plusw1,btemp
 16233  01062A  0E67               	movlw	103
 16234  01062C  1801               	xorwf	btemp^0,w,c
 16235  01062E  A4D8               	btfss	status,2,c
 16236  010630  D00B               	goto	u11240
 16237                           
 16238                           ;stkvar	_nmode @ sp[(-56)+55]
 16239  010632  0EFF               	movlw	-1
 16240  010634  006F FF8C  F001    	movff	plusw1,btemp
 16241  01063A  0E66               	movlw	102
 16242  01063C  1801               	xorwf	btemp^0,w,c
 16243  01063E  A4D8               	btfss	status,2,c
 16244  010640  D014               	goto	l2228
 16245                           
 16246                           ;stkvar	_e @ sp[(-56)+34]
 16247  010642  0EEB               	movlw	-21
 16248  010644  AEE3               	btfss	plusw1,7,c
 16249  010646  D011               	goto	l2228
 16250  010648                     u11240:
 16251                           
 16252                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 400:         ++m;
 16253                           ;stkvar	_m @ sp[(-56)+48]
 16254  010648  0EF8               	movlw	-8
 16255  01064A  50E3               	movf	plusw1,w,c
 16256  01064C  0F01               	addlw	1
 16257  01064E  6E01               	movwf	btemp^0,c
 16258  010650  0EF8               	movlw	-8
 16259  010652  0060  F007  FFE3   	movff	btemp,plusw1
 16260  010658  6A01               	clrf	btemp^0,c
 16261  01065A  0EF9               	movlw	-7
 16262  01065C  50E3               	movf	plusw1,w,c
 16263  01065E  2001               	addwfc	btemp^0,w,c
 16264  010660  6E01               	movwf	btemp^0,c
 16265  010662  0EF9               	movlw	-7
 16266  010664  0060  F007  FFE3   	movff	btemp,plusw1
 16267  01066A                     l2228:
 16268                           
 16269                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 404:     if (nmode == 'f') {
 16270                           ;stkvar	_nmode @ sp[(-56)+55]
 16271  01066A  0EFF               	movlw	-1
 16272  01066C  006F FF8C  F001    	movff	plusw1,btemp
 16273  010672  0E66               	movlw	102
 16274  010674  1801               	xorwf	btemp^0,w,c
 16275  010676  A4D8               	btfss	status,2,c
 16276  010678  D03B               	goto	l11949
 16277                           
 16278                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 405:         if (e < 0) {
 16279                           ;stkvar	_e @ sp[(-56)+34]
 16280  01067A  0EEB               	movlw	-21
 16281  01067C  AEE3               	btfss	plusw1,7,c
 16282  01067E  D01C               	goto	l11945
 16283                           
 16284                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 406:             u = 1.0;
 16285  010680  0E00               	movlw	0
 16286  010682  6E09               	movwf	(btemp+8)^0,c
 16287  010684  0E00               	movlw	0
 16288  010686  6E0A               	movwf	(btemp+9)^0,c
 16289  010688  0E80               	movlw	128
 16290  01068A  6E0B               	movwf	(btemp+10)^0,c
 16291  01068C  0E3F               	movlw	63
 16292  01068E  6E0C               	movwf	(btemp+11)^0,c
 16293                           
 16294                           ;stkvar	_u @ sp[(-56)+12]
 16295  010690  0ED4               	movlw	-44
 16296  010692  0060  F027  FFE3   	movff	btemp+8,plusw1
 16297  010698  0ED5               	movlw	-43
 16298  01069A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 16299  0106A0  0ED6               	movlw	-42
 16300  0106A2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16301  0106A8  0ED7               	movlw	-41
 16302  0106AA  0060  F033  FFE3   	movff	btemp+11,plusw1
 16303                           
 16304                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 407:             e = 0;
 16305                           ;stkvar	_e @ sp[(-56)+34]
 16306  0106B0  0EEA               	movlw	-22
 16307  0106B2  6AE3               	clrf	plusw1,c
 16308  0106B4  0EEB               	movlw	-21
 16309  0106B6  6AE3               	clrf	plusw1,c
 16310  0106B8                     l11945:
 16311                           
 16312                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 409:         if (!(mode == 'g
      +                          ')) {
 16313                           ;stkvar	_mode @ sp[(-56)+54]
 16314  0106B8  0EFE               	movlw	-2
 16315  0106BA  006F FF8C  F001    	movff	plusw1,btemp
 16316  0106C0  0E67               	movlw	103
 16317  0106C2  1801               	xorwf	btemp^0,w,c
 16318  0106C4  B4D8               	btfsc	status,2,c
 16319  0106C6  D014               	goto	l11949
 16320                           
 16321                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 410:             m += e;
 16322                           ;stkvar	_e @ sp[(-56)+34]
 16323                           ;stkvar	_m @ sp[(-56)+48]
 16324  0106C8  0EF8               	movlw	-8
 16325  0106CA  50E3               	movf	plusw1,w,c
 16326  0106CC  6E01               	movwf	btemp^0,c
 16327  0106CE  0EEA               	movlw	-22
 16328  0106D0  50E3               	movf	plusw1,w,c
 16329  0106D2  2601               	addwf	btemp^0,f,c
 16330  0106D4  0EF8               	movlw	-8
 16331  0106D6  0060  F007  FFE3   	movff	btemp,plusw1
 16332  0106DC  0EF9               	movlw	-7
 16333  0106DE  50E3               	movf	plusw1,w,c
 16334  0106E0  6E01               	movwf	btemp^0,c
 16335  0106E2  0EEB               	movlw	-21
 16336  0106E4  50E3               	movf	plusw1,w,c
 16337  0106E6  2201               	addwfc	btemp^0,f,c
 16338  0106E8  0EF9               	movlw	-7
 16339  0106EA  0060  F007  FFE3   	movff	btemp,plusw1
 16340  0106F0                     l11949:
 16341                           
 16342                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 415:     i = 0;
 16343                           ;stkvar	_i @ sp[(-56)+36]
 16344  0106F0  0EEC               	movlw	-20
 16345  0106F2  6AE3               	clrf	plusw1,c
 16346  0106F4  0EED               	movlw	-19
 16347  0106F6  6AE3               	clrf	plusw1,c
 16348                           
 16349                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 416:     h = g;
 16350                           ;stkvar	_g @ sp[(-56)+16]
 16351  0106F8  0ED8               	movlw	-40
 16352  0106FA  006F FF8C  F009    	movff	plusw1,btemp+8
 16353  010700  0ED9               	movlw	-39
 16354  010702  006F FF8C  F00A    	movff	plusw1,btemp+9
 16355  010708  0EDA               	movlw	-38
 16356  01070A  006F FF8C  F00B    	movff	plusw1,btemp+10
 16357  010710  0EDB               	movlw	-37
 16358  010712  006F FF8C  F00C    	movff	plusw1,btemp+11
 16359                           
 16360                           ;stkvar	_h @ sp[(-56)+24]
 16361  010718  0EE0               	movlw	-32
 16362  01071A  0060  F027  FFE3   	movff	btemp+8,plusw1
 16363  010720  0EE1               	movlw	-31
 16364  010722  0060  F02B  FFE3   	movff	btemp+9,plusw1
 16365  010728  0EE2               	movlw	-30
 16366  01072A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16367  010730  0EE3               	movlw	-29
 16368  010732  0060  F033  FFE3   	movff	btemp+11,plusw1
 16369                           
 16370                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 417:     ou = u;
 16371                           ;stkvar	_u @ sp[(-56)+12]
 16372  010738  0ED4               	movlw	-44
 16373  01073A  006F FF8C  F009    	movff	plusw1,btemp+8
 16374  010740  0ED5               	movlw	-43
 16375  010742  006F FF8C  F00A    	movff	plusw1,btemp+9
 16376  010748  0ED6               	movlw	-42
 16377  01074A  006F FF8C  F00B    	movff	plusw1,btemp+10
 16378  010750  0ED7               	movlw	-41
 16379  010752  006F FF8C  F00C    	movff	plusw1,btemp+11
 16380                           
 16381                           ;stkvar	_ou @ sp[(-56)+28]
 16382  010758  0EE4               	movlw	-28
 16383  01075A  0060  F027  FFE3   	movff	btemp+8,plusw1
 16384  010760  0EE5               	movlw	-27
 16385  010762  0060  F02B  FFE3   	movff	btemp+9,plusw1
 16386  010768  0EE6               	movlw	-26
 16387  01076A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16388  010770  0EE7               	movlw	-25
 16389  010772  0060  F033  FFE3   	movff	btemp+11,plusw1
 16390                           
 16391                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 16392  010778  D0D6               	goto	l11965
 16393  01077A                     l11955:
 16394                           
 16395                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 419:         l = floorf(h/u);
 16396                           ;stkvar	_u @ sp[(-56)+12]
 16397  01077A  0ED4               	movlw	-44
 16398  01077C  006F FF8F FFE6     	movff	plusw1,postinc1
 16399  010782  006F FF8F FFE6     	movff	plusw1,postinc1
 16400  010788  006F FF8F FFE6     	movff	plusw1,postinc1
 16401  01078E  006F FF8F FFE6     	movff	plusw1,postinc1
 16402                           
 16403                           ;stkvar	_h @ sp[(-60)+24]
 16404  010794  0EDC               	movlw	-36
 16405  010796  006F FF8F FFE6     	movff	plusw1,postinc1
 16406  01079C  006F FF8F FFE6     	movff	plusw1,postinc1
 16407  0107A2  006F FF8F FFE6     	movff	plusw1,postinc1
 16408  0107A8  006F FF8F FFE6     	movff	plusw1,postinc1
 16409  0107AE  EC51  F0A5         	call	___fldiv	;wreg free
 16410  0107B2  0060  F007  FFE6   	movff	btemp,postinc1
 16411  0107B8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 16412  0107BE  0060  F00F  FFE6   	movff	btemp+2,postinc1
 16413  0107C4  0060  F013  FFE6   	movff	btemp+3,postinc1
 16414  0107CA  ECDB  F0B0         	call	_floorf	;wreg free
 16415                           
 16416                           ;stkvar	_l @ sp[(-56)+20]
 16417  0107CE  0EDC               	movlw	-36
 16418  0107D0  0060  F007  FFE3   	movff	btemp,plusw1
 16419  0107D6  0EDD               	movlw	-35
 16420  0107D8  0060  F00B  FFE3   	movff	btemp+1,plusw1
 16421  0107DE  0EDE               	movlw	-34
 16422  0107E0  0060  F00F  FFE3   	movff	btemp+2,plusw1
 16423  0107E6  0EDF               	movlw	-33
 16424  0107E8  0060  F013  FFE3   	movff	btemp+3,plusw1
 16425                           
 16426                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 420:         d = (int)l;
 16427                           ;stkvar	_l @ sp[(-56)+20]
 16428  0107EE  0EDC               	movlw	-36
 16429  0107F0  006F FF8F FFE6     	movff	plusw1,postinc1
 16430  0107F6  006F FF8F FFE6     	movff	plusw1,postinc1
 16431  0107FC  006F FF8F FFE6     	movff	plusw1,postinc1
 16432  010802  006F FF8F FFE6     	movff	plusw1,postinc1
 16433  010808  ECC8  F0C5         	call	___fltol	;wreg free
 16434  01080C  0060  F004  F00B   	movff	btemp,btemp+10
 16435  010812  0060  F008  F00C   	movff	btemp+1,btemp+11
 16436                           
 16437                           ;stkvar	_d @ sp[(-56)+44]
 16438  010818  0EF4               	movlw	-12
 16439  01081A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16440  010820  0EF5               	movlw	-11
 16441  010822  0060  F033  FFE3   	movff	btemp+11,plusw1
 16442                           
 16443                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 421:         h -= l*u;
 16444                           ;stkvar	_u @ sp[(-56)+12]
 16445  010828  0ED4               	movlw	-44
 16446  01082A  006F FF8F FFE6     	movff	plusw1,postinc1
 16447  010830  006F FF8F FFE6     	movff	plusw1,postinc1
 16448  010836  006F FF8F FFE6     	movff	plusw1,postinc1
 16449  01083C  006F FF8F FFE6     	movff	plusw1,postinc1
 16450                           
 16451                           ;stkvar	_l @ sp[(-60)+20]
 16452  010842  0ED8               	movlw	-40
 16453  010844  006F FF8F FFE6     	movff	plusw1,postinc1
 16454  01084A  006F FF8F FFE6     	movff	plusw1,postinc1
 16455  010850  006F FF8F FFE6     	movff	plusw1,postinc1
 16456  010856  006F FF8F FFE6     	movff	plusw1,postinc1
 16457  01085C  ECA0  F099         	call	___flmul	;wreg free
 16458  010860  0060  F007  FFE6   	movff	btemp,postinc1
 16459  010866  0060  F00B  FFE6   	movff	btemp+1,postinc1
 16460  01086C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 16461  010872  0060  F013  FFE6   	movff	btemp+3,postinc1
 16462                           
 16463                           ;stkvar	_h @ sp[(-60)+24]
 16464  010878  0EDC               	movlw	-36
 16465  01087A  006F FF8F FFE6     	movff	plusw1,postinc1
 16466  010880  006F FF8F FFE6     	movff	plusw1,postinc1
 16467  010886  006F FF8F FFE6     	movff	plusw1,postinc1
 16468  01088C  006F FF8F FFE6     	movff	plusw1,postinc1
 16469  010892  EC08  F0D9         	call	___flsub	;wreg free
 16470                           
 16471                           ;stkvar	_h @ sp[(-56)+24]
 16472  010896  0EE0               	movlw	-32
 16473  010898  0060  F007  FFE3   	movff	btemp,plusw1
 16474  01089E  0EE1               	movlw	-31
 16475  0108A0  0060  F00B  FFE3   	movff	btemp+1,plusw1
 16476  0108A6  0EE2               	movlw	-30
 16477  0108A8  0060  F00F  FFE3   	movff	btemp+2,plusw1
 16478  0108AE  0EE3               	movlw	-29
 16479  0108B0  0060  F013  FFE3   	movff	btemp+3,plusw1
 16480                           
 16481                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 422:         u = u/10.0;
 16482  0108B6  0E00               	movlw	0
 16483  0108B8  6EE6               	movwf	postinc1,c
 16484  0108BA  0E00               	movlw	0
 16485  0108BC  6EE6               	movwf	postinc1,c
 16486  0108BE  0E20               	movlw	32
 16487  0108C0  6EE6               	movwf	postinc1,c
 16488  0108C2  0E41               	movlw	65
 16489  0108C4  6EE6               	movwf	postinc1,c
 16490                           
 16491                           ;stkvar	_u @ sp[(-60)+12]
 16492  0108C6  0ED0               	movlw	-48
 16493  0108C8  006F FF8F FFE6     	movff	plusw1,postinc1
 16494  0108CE  006F FF8F FFE6     	movff	plusw1,postinc1
 16495  0108D4  006F FF8F FFE6     	movff	plusw1,postinc1
 16496  0108DA  006F FF8F FFE6     	movff	plusw1,postinc1
 16497  0108E0  EC51  F0A5         	call	___fldiv	;wreg free
 16498                           
 16499                           ;stkvar	_u @ sp[(-56)+12]
 16500  0108E4  0ED4               	movlw	-44
 16501  0108E6  0060  F007  FFE3   	movff	btemp,plusw1
 16502  0108EC  0ED5               	movlw	-43
 16503  0108EE  0060  F00B  FFE3   	movff	btemp+1,plusw1
 16504  0108F4  0ED6               	movlw	-42
 16505  0108F6  0060  F00F  FFE3   	movff	btemp+2,plusw1
 16506  0108FC  0ED7               	movlw	-41
 16507  0108FE  0060  F013  FFE3   	movff	btemp+3,plusw1
 16508                           
 16509                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 423:         ++i;
 16510                           ;stkvar	_i @ sp[(-56)+36]
 16511  010904  0EEC               	movlw	-20
 16512  010906  50E3               	movf	plusw1,w,c
 16513  010908  0F01               	addlw	1
 16514  01090A  6E01               	movwf	btemp^0,c
 16515  01090C  0EEC               	movlw	-20
 16516  01090E  0060  F007  FFE3   	movff	btemp,plusw1
 16517  010914  6A01               	clrf	btemp^0,c
 16518  010916  0EED               	movlw	-19
 16519  010918  50E3               	movf	plusw1,w,c
 16520  01091A  2001               	addwfc	btemp^0,w,c
 16521  01091C  6E01               	movwf	btemp^0,c
 16522  01091E  0EED               	movlw	-19
 16523  010920  0060  F007  FFE3   	movff	btemp,plusw1
 16524  010926                     l11965:
 16525                           
 16526                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 16527                           ;stkvar	_m @ sp[(-56)+48]
 16528                           ;stkvar	_i @ sp[(-56)+36]
 16529  010926  50E1               	movf	fsr1l,w,c
 16530  010928  0FEC               	addlw	-20
 16531  01092A  6ED9               	movwf	fsr2l,c
 16532  01092C  50E2               	movf	fsr1h,w,c
 16533  01092E  6EDA               	movwf	fsr2h,c
 16534  010930  0EFF               	movlw	255
 16535  010932  22DA               	addwfc	fsr2h,f,c
 16536  010934  0EF8               	movlw	-8
 16537  010936  50E3               	movf	plusw1,w,c
 16538  010938  5CDE               	subwf	postinc2,w,c
 16539  01093A  50DE               	movf	postinc2,w,c
 16540  01093C  0A80               	xorlw	128
 16541  01093E  6E01               	movwf	btemp^0,c
 16542  010940  0EF9               	movlw	-7
 16543  010942  50E3               	movf	plusw1,w,c
 16544  010944  0A80               	xorlw	128
 16545  010946  5801               	subwfb	btemp^0,w,c
 16546  010948  A0D8               	btfss	status,0,c
 16547  01094A  D717               	goto	l11955
 16548                           
 16549                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 427:     l = u*5.0;
 16550  01094C  0E00               	movlw	0
 16551  01094E  6EE6               	movwf	postinc1,c
 16552  010950  0E00               	movlw	0
 16553  010952  6EE6               	movwf	postinc1,c
 16554  010954  0EA0               	movlw	160
 16555  010956  6EE6               	movwf	postinc1,c
 16556  010958  0E40               	movlw	64
 16557  01095A  6EE6               	movwf	postinc1,c
 16558                           
 16559                           ;stkvar	_u @ sp[(-60)+12]
 16560  01095C  0ED0               	movlw	-48
 16561  01095E  006F FF8F FFE6     	movff	plusw1,postinc1
 16562  010964  006F FF8F FFE6     	movff	plusw1,postinc1
 16563  01096A  006F FF8F FFE6     	movff	plusw1,postinc1
 16564  010970  006F FF8F FFE6     	movff	plusw1,postinc1
 16565  010976  ECA0  F099         	call	___flmul	;wreg free
 16566                           
 16567                           ;stkvar	_l @ sp[(-56)+20]
 16568  01097A  0EDC               	movlw	-36
 16569  01097C  0060  F007  FFE3   	movff	btemp,plusw1
 16570  010982  0EDD               	movlw	-35
 16571  010984  0060  F00B  FFE3   	movff	btemp+1,plusw1
 16572  01098A  0EDE               	movlw	-34
 16573  01098C  0060  F00F  FFE3   	movff	btemp+2,plusw1
 16574  010992  0EDF               	movlw	-33
 16575  010994  0060  F013  FFE3   	movff	btemp+3,plusw1
 16576                           
 16577                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 428:     if (h < l) {
 16578                           ;stkvar	_l @ sp[(-56)+20]
 16579  01099A  0EDC               	movlw	-36
 16580  01099C  006F FF8F FFE6     	movff	plusw1,postinc1
 16581  0109A2  006F FF8F FFE6     	movff	plusw1,postinc1
 16582  0109A8  006F FF8F FFE6     	movff	plusw1,postinc1
 16583  0109AE  006F FF8F FFE6     	movff	plusw1,postinc1
 16584                           
 16585                           ;stkvar	_h @ sp[(-60)+24]
 16586  0109B4  0EDC               	movlw	-36
 16587  0109B6  006F FF8F FFE6     	movff	plusw1,postinc1
 16588  0109BC  006F FF8F FFE6     	movff	plusw1,postinc1
 16589  0109C2  006F FF8F FFE6     	movff	plusw1,postinc1
 16590  0109C8  006F FF8F FFE6     	movff	plusw1,postinc1
 16591  0109CE  EC81  F0C6         	call	___flge	;wreg free
 16592  0109D2  A001               	btfss	btemp& (0+255),0,c
 16593  0109D4  D021               	goto	u11310
 16594                           
 16595                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 432:         if ((h == l) && 
      +                          !(d % 2)) {
 16596                           ;stkvar	_l @ sp[(-56)+20]
 16597                           
 16598                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 430:     } else {
 16599                           
 16600                           ;stkvar	_l @ sp[(-56)+20]
 16601                           
 16602                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 429:         l = 0.0;
 16603  0109D6  0EDC               	movlw	-36
 16604  0109D8  006F FF8F FFE6     	movff	plusw1,postinc1
 16605  0109DE  006F FF8F FFE6     	movff	plusw1,postinc1
 16606  0109E4  006F FF8F FFE6     	movff	plusw1,postinc1
 16607  0109EA  006F FF8F FFE6     	movff	plusw1,postinc1
 16608                           
 16609                           ;stkvar	_h @ sp[(-60)+24]
 16610  0109F0  0EDC               	movlw	-36
 16611  0109F2  006F FF8F FFE6     	movff	plusw1,postinc1
 16612  0109F8  006F FF8F FFE6     	movff	plusw1,postinc1
 16613  0109FE  006F FF8F FFE6     	movff	plusw1,postinc1
 16614  010A04  006F FF8F FFE6     	movff	plusw1,postinc1
 16615  010A0A  ECCD  F0D0         	call	___fleq	;wreg free
 16616  010A0E  A001               	btfss	btemp& (0+255),0,c
 16617  010A10  D01B               	goto	l11979
 16618                           
 16619                           ;stkvar	_d @ sp[(-56)+44]
 16620  010A12  0EF4               	movlw	-12
 16621  010A14  B0E3               	btfsc	plusw1,0,c
 16622  010A16  D018               	goto	l11979
 16623  010A18                     u11310:
 16624                           
 16625                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 433:             l = 0.0;
 16626  010A18  0E00               	movlw	0
 16627  010A1A  6E09               	movwf	(btemp+8)^0,c
 16628  010A1C  0E00               	movlw	0
 16629  010A1E  6E0A               	movwf	(btemp+9)^0,c
 16630  010A20  0E00               	movlw	0
 16631  010A22  6E0B               	movwf	(btemp+10)^0,c
 16632  010A24  0E00               	movlw	0
 16633  010A26  6E0C               	movwf	(btemp+11)^0,c
 16634                           
 16635                           ;stkvar	_l @ sp[(-56)+20]
 16636  010A28  0EDC               	movlw	-36
 16637  010A2A  0060  F027  FFE3   	movff	btemp+8,plusw1
 16638  010A30  0EDD               	movlw	-35
 16639  010A32  0060  F02B  FFE3   	movff	btemp+9,plusw1
 16640  010A38  0EDE               	movlw	-34
 16641  010A3A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16642  010A40  0EDF               	movlw	-33
 16643  010A42  0060  F033  FFE3   	movff	btemp+11,plusw1
 16644  010A48                     l11979:
 16645                           
 16646                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 438:     h = g + l;
 16647                           ;stkvar	_l @ sp[(-56)+20]
 16648  010A48  0EDC               	movlw	-36
 16649  010A4A  006F FF8F FFE6     	movff	plusw1,postinc1
 16650  010A50  006F FF8F FFE6     	movff	plusw1,postinc1
 16651  010A56  006F FF8F FFE6     	movff	plusw1,postinc1
 16652  010A5C  006F FF8F FFE6     	movff	plusw1,postinc1
 16653                           
 16654                           ;stkvar	_g @ sp[(-60)+16]
 16655  010A62  0ED4               	movlw	-44
 16656  010A64  006F FF8F FFE6     	movff	plusw1,postinc1
 16657  010A6A  006F FF8F FFE6     	movff	plusw1,postinc1
 16658  010A70  006F FF8F FFE6     	movff	plusw1,postinc1
 16659  010A76  006F FF8F FFE6     	movff	plusw1,postinc1
 16660  010A7C  ECB5  F09D         	call	___fladd	;wreg free
 16661                           
 16662                           ;stkvar	_h @ sp[(-56)+24]
 16663  010A80  0EE0               	movlw	-32
 16664  010A82  0060  F007  FFE3   	movff	btemp,plusw1
 16665  010A88  0EE1               	movlw	-31
 16666  010A8A  0060  F00B  FFE3   	movff	btemp+1,plusw1
 16667  010A90  0EE2               	movlw	-30
 16668  010A92  0060  F00F  FFE3   	movff	btemp+2,plusw1
 16669  010A98  0EE3               	movlw	-29
 16670  010A9A  0060  F013  FFE3   	movff	btemp+3,plusw1
 16671                           
 16672                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 441:     u = ou;
 16673                           ;stkvar	_ou @ sp[(-56)+28]
 16674  010AA0  0EE4               	movlw	-28
 16675  010AA2  006F FF8C  F009    	movff	plusw1,btemp+8
 16676  010AA8  0EE5               	movlw	-27
 16677  010AAA  006F FF8C  F00A    	movff	plusw1,btemp+9
 16678  010AB0  0EE6               	movlw	-26
 16679  010AB2  006F FF8C  F00B    	movff	plusw1,btemp+10
 16680  010AB8  0EE7               	movlw	-25
 16681  010ABA  006F FF8C  F00C    	movff	plusw1,btemp+11
 16682                           
 16683                           ;stkvar	_u @ sp[(-56)+12]
 16684  010AC0  0ED4               	movlw	-44
 16685  010AC2  0060  F027  FFE3   	movff	btemp+8,plusw1
 16686  010AC8  0ED5               	movlw	-43
 16687  010ACA  0060  F02B  FFE3   	movff	btemp+9,plusw1
 16688  010AD0  0ED6               	movlw	-42
 16689  010AD2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16690  010AD8  0ED7               	movlw	-41
 16691  010ADA  0060  F033  FFE3   	movff	btemp+11,plusw1
 16692                           
 16693                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 442:     ne = (nmode == 'e') 
      +                          ? 0 : e;
 16694                           ;stkvar	_nmode @ sp[(-56)+55]
 16695  010AE0  0EFF               	movlw	-1
 16696  010AE2  006F FF8C  F001    	movff	plusw1,btemp
 16697  010AE8  0E65               	movlw	101
 16698  010AEA  1801               	xorwf	btemp^0,w,c
 16699  010AEC  B4D8               	btfsc	status,2,c
 16700  010AEE  D011               	goto	l11987
 16701                           
 16702                           ;stkvar	_e @ sp[(-56)+34]
 16703                           ;stkvar	_ne @ sp[(-56)+46]
 16704  010AF0  0EEA               	movlw	-22
 16705  010AF2  006F FF8C  F001    	movff	plusw1,btemp
 16706  010AF8  0EF6               	movlw	-10
 16707  010AFA  0060  F007  FFE3   	movff	btemp,plusw1
 16708  010B00  0EEB               	movlw	-21
 16709  010B02  006F FF8C  F001    	movff	plusw1,btemp
 16710  010B08  0EF7               	movlw	-9
 16711  010B0A  0060  F007  FFE3   	movff	btemp,plusw1
 16712  010B10  D004               	goto	l2243
 16713  010B12                     l11987:
 16714                           
 16715                           ;stkvar	_ne @ sp[(-56)+46]
 16716  010B12  0EF6               	movlw	-10
 16717  010B14  6AE3               	clrf	plusw1,c
 16718  010B16  0EF7               	movlw	-9
 16719  010B18  6AE3               	clrf	plusw1,c
 16720  010B1A                     l2243:
 16721                           
 16722                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 443:     pp = 0;
 16723                           ;stkvar	_pp @ sp[(-56)+50]
 16724  010B1A  0EFA               	movlw	-6
 16725  010B1C  6AE3               	clrf	plusw1,c
 16726  010B1E  0EFB               	movlw	-5
 16727  010B20  6AE3               	clrf	plusw1,c
 16728                           
 16729                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 444:     t = 0;
 16730                           ;stkvar	_t @ sp[(-56)+52]
 16731  010B22  0EFC               	movlw	-4
 16732  010B24  6AE3               	clrf	plusw1,c
 16733  010B26  0EFD               	movlw	-3
 16734  010B28  6AE3               	clrf	plusw1,c
 16735                           
 16736                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 445:     i = 0;
 16737                           ;stkvar	_i @ sp[(-56)+36]
 16738  010B2A  0EEC               	movlw	-20
 16739  010B2C  6AE3               	clrf	plusw1,c
 16740  010B2E  0EED               	movlw	-19
 16741  010B30  6AE3               	clrf	plusw1,c
 16742                           
 16743                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 16744  010B32  D1B7               	goto	l12039
 16745  010B34                     l11989:
 16746                           
 16747                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 447:         l = floorf(h/u);
 16748                           ;stkvar	_u @ sp[(-56)+12]
 16749  010B34  0ED4               	movlw	-44
 16750  010B36  006F FF8F FFE6     	movff	plusw1,postinc1
 16751  010B3C  006F FF8F FFE6     	movff	plusw1,postinc1
 16752  010B42  006F FF8F FFE6     	movff	plusw1,postinc1
 16753  010B48  006F FF8F FFE6     	movff	plusw1,postinc1
 16754                           
 16755                           ;stkvar	_h @ sp[(-60)+24]
 16756  010B4E  0EDC               	movlw	-36
 16757  010B50  006F FF8F FFE6     	movff	plusw1,postinc1
 16758  010B56  006F FF8F FFE6     	movff	plusw1,postinc1
 16759  010B5C  006F FF8F FFE6     	movff	plusw1,postinc1
 16760  010B62  006F FF8F FFE6     	movff	plusw1,postinc1
 16761  010B68  EC51  F0A5         	call	___fldiv	;wreg free
 16762  010B6C  0060  F007  FFE6   	movff	btemp,postinc1
 16763  010B72  0060  F00B  FFE6   	movff	btemp+1,postinc1
 16764  010B78  0060  F00F  FFE6   	movff	btemp+2,postinc1
 16765  010B7E  0060  F013  FFE6   	movff	btemp+3,postinc1
 16766  010B84  ECDB  F0B0         	call	_floorf	;wreg free
 16767                           
 16768                           ;stkvar	_l @ sp[(-56)+20]
 16769  010B88  0EDC               	movlw	-36
 16770  010B8A  0060  F007  FFE3   	movff	btemp,plusw1
 16771  010B90  0EDD               	movlw	-35
 16772  010B92  0060  F00B  FFE3   	movff	btemp+1,plusw1
 16773  010B98  0EDE               	movlw	-34
 16774  010B9A  0060  F00F  FFE3   	movff	btemp+2,plusw1
 16775  010BA0  0EDF               	movlw	-33
 16776  010BA2  0060  F013  FFE3   	movff	btemp+3,plusw1
 16777                           
 16778                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 448:         d = (int)l;
 16779                           ;stkvar	_l @ sp[(-56)+20]
 16780  010BA8  0EDC               	movlw	-36
 16781  010BAA  006F FF8F FFE6     	movff	plusw1,postinc1
 16782  010BB0  006F FF8F FFE6     	movff	plusw1,postinc1
 16783  010BB6  006F FF8F FFE6     	movff	plusw1,postinc1
 16784  010BBC  006F FF8F FFE6     	movff	plusw1,postinc1
 16785  010BC2  ECC8  F0C5         	call	___fltol	;wreg free
 16786  010BC6  0060  F004  F00B   	movff	btemp,btemp+10
 16787  010BCC  0060  F008  F00C   	movff	btemp+1,btemp+11
 16788                           
 16789                           ;stkvar	_d @ sp[(-56)+44]
 16790  010BD2  0EF4               	movlw	-12
 16791  010BD4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16792  010BDA  0EF5               	movlw	-11
 16793  010BDC  0060  F033  FFE3   	movff	btemp+11,plusw1
 16794                           
 16795                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 449:         if (!(flags & (1
      +                           << 4)) && !d && (mode == 'g') && (ne < 0)) {
 16796  010BE2  B83E               	btfsc	_flags^0,4,c
 16797  010BE4  D026               	goto	l12003
 16798                           
 16799                           ;stkvar	_d @ sp[(-56)+44]
 16800  010BE6  0EF4               	movlw	-12
 16801  010BE8  006F FF8C  F001    	movff	plusw1,btemp
 16802  010BEE  0EF5               	movlw	-11
 16803  010BF0  50E3               	movf	plusw1,w,c
 16804  010BF2  1001               	iorwf	btemp^0,w,c
 16805  010BF4  A4D8               	btfss	status,2,c
 16806  010BF6  D01D               	goto	l12003
 16807                           
 16808                           ;stkvar	_mode @ sp[(-56)+54]
 16809  010BF8  0EFE               	movlw	-2
 16810  010BFA  006F FF8C  F001    	movff	plusw1,btemp
 16811  010C00  0E67               	movlw	103
 16812  010C02  1801               	xorwf	btemp^0,w,c
 16813  010C04  A4D8               	btfss	status,2,c
 16814  010C06  D015               	goto	l12003
 16815                           
 16816                           ;stkvar	_ne @ sp[(-56)+46]
 16817  010C08  0EF7               	movlw	-9
 16818  010C0A  AEE3               	btfss	plusw1,7,c
 16819  010C0C  D012               	goto	l12003
 16820                           
 16821                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 450:             ++t;
 16822                           ;stkvar	_t @ sp[(-56)+52]
 16823  010C0E  0EFC               	movlw	-4
 16824  010C10  50E3               	movf	plusw1,w,c
 16825  010C12  0F01               	addlw	1
 16826  010C14  6E01               	movwf	btemp^0,c
 16827  010C16  0EFC               	movlw	-4
 16828  010C18  0060  F007  FFE3   	movff	btemp,plusw1
 16829  010C1E  6A01               	clrf	btemp^0,c
 16830  010C20  0EFD               	movlw	-3
 16831  010C22  50E3               	movf	plusw1,w,c
 16832  010C24  2001               	addwfc	btemp^0,w,c
 16833  010C26  6E01               	movwf	btemp^0,c
 16834  010C28  0EFD               	movlw	-3
 16835  010C2A  0060  F007  FFE3   	movff	btemp,plusw1
 16836                           
 16837                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 451:         } else {
 16838  010C30  D0AF               	goto	l12031
 16839  010C32                     l12003:
 16840                           
 16841                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 452:             if (!pp && (
      +                          ne < 0)) {
 16842                           ;stkvar	_pp @ sp[(-56)+50]
 16843  010C32  0EFA               	movlw	-6
 16844  010C34  006F FF8C  F001    	movff	plusw1,btemp
 16845  010C3A  0EFB               	movlw	-5
 16846  010C3C  50E3               	movf	plusw1,w,c
 16847  010C3E  1001               	iorwf	btemp^0,w,c
 16848  010C40  A4D8               	btfss	status,2,c
 16849  010C42  D070               	goto	l12023
 16850                           
 16851                           ;stkvar	_ne @ sp[(-56)+46]
 16852  010C44  0EF7               	movlw	-9
 16853  010C46  AEE3               	btfss	plusw1,7,c
 16854  010C48  D06D               	goto	l12023
 16855                           
 16856                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 453:                 dbuf[n++
      +                          ] = '.';
 16857                           ;stkvar	_n @ sp[(-56)+32]
 16858  010C4A  0EE8               	movlw	-24
 16859  010C4C  006F FF8C  F00B    	movff	plusw1,btemp+10
 16860  010C52  0EE9               	movlw	-23
 16861  010C54  006F FF8C  F00C    	movff	plusw1,btemp+11
 16862  010C5A  0E97               	movlw	low _dbuf
 16863  010C5C  240B               	addwf	(btemp+10)^0,w,c
 16864  010C5E  6ED9               	movwf	fsr2l,c
 16865  010C60  0E02               	movlw	high _dbuf
 16866  010C62  200C               	addwfc	(btemp+11)^0,w,c
 16867  010C64  6EDA               	movwf	fsr2h,c
 16868  010C66  0E2E               	movlw	46
 16869  010C68  6EDF               	movwf	indf2,c
 16870                           
 16871                           ;stkvar	_n @ sp[(-56)+32]
 16872  010C6A  0EE8               	movlw	-24
 16873  010C6C  50E3               	movf	plusw1,w,c
 16874  010C6E  0F01               	addlw	1
 16875  010C70  6E01               	movwf	btemp^0,c
 16876  010C72  0EE8               	movlw	-24
 16877  010C74  0060  F007  FFE3   	movff	btemp,plusw1
 16878  010C7A  6A01               	clrf	btemp^0,c
 16879  010C7C  0EE9               	movlw	-23
 16880  010C7E  50E3               	movf	plusw1,w,c
 16881  010C80  2001               	addwfc	btemp^0,w,c
 16882  010C82  6E01               	movwf	btemp^0,c
 16883  010C84  0EE9               	movlw	-23
 16884  010C86  0060  F007  FFE3   	movff	btemp,plusw1
 16885                           
 16886                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 454:                 --w;
 16887                           ;stkvar	_w @ sp[(-56)+38]
 16888  010C8C  50E1               	movf	fsr1l,w,c
 16889  010C8E  0FEE               	addlw	-18
 16890  010C90  6ED9               	movwf	fsr2l,c
 16891  010C92  50E2               	movf	fsr1h,w,c
 16892  010C94  6EDA               	movwf	fsr2h,c
 16893  010C96  0EFF               	movlw	255
 16894  010C98  22DA               	addwfc	fsr2h,f,c
 16895  010C9A  06DE               	decf	postinc2,f,c
 16896  010C9C  0E00               	movlw	0
 16897  010C9E  5ADD               	subwfb	postdec2,f,c
 16898                           
 16899                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 455:                 pp = 1;
 16900  010CA0  0E01               	movlw	1
 16901  010CA2  6E0B               	movwf	(btemp+10)^0,c
 16902  010CA4  0E00               	movlw	0
 16903  010CA6  6E0C               	movwf	(btemp+11)^0,c
 16904                           
 16905                           ;stkvar	_pp @ sp[(-56)+50]
 16906  010CA8  0EFA               	movlw	-6
 16907  010CAA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16908  010CB0  0EFB               	movlw	-5
 16909  010CB2  0060  F033  FFE3   	movff	btemp+11,plusw1
 16910  010CB8  D035               	goto	l12023
 16911  010CBA                     l12015:
 16912                           
 16913                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 458:                 dbuf[n++
      +                          ] = '0';
 16914                           ;stkvar	_n @ sp[(-56)+32]
 16915  010CBA  0EE8               	movlw	-24
 16916  010CBC  006F FF8C  F00B    	movff	plusw1,btemp+10
 16917  010CC2  0EE9               	movlw	-23
 16918  010CC4  006F FF8C  F00C    	movff	plusw1,btemp+11
 16919  010CCA  0E97               	movlw	low _dbuf
 16920  010CCC  240B               	addwf	(btemp+10)^0,w,c
 16921  010CCE  6ED9               	movwf	fsr2l,c
 16922  010CD0  0E02               	movlw	high _dbuf
 16923  010CD2  200C               	addwfc	(btemp+11)^0,w,c
 16924  010CD4  6EDA               	movwf	fsr2h,c
 16925  010CD6  0E30               	movlw	48
 16926  010CD8  6EDF               	movwf	indf2,c
 16927                           
 16928                           ;stkvar	_n @ sp[(-56)+32]
 16929  010CDA  0EE8               	movlw	-24
 16930  010CDC  50E3               	movf	plusw1,w,c
 16931  010CDE  0F01               	addlw	1
 16932  010CE0  6E01               	movwf	btemp^0,c
 16933  010CE2  0EE8               	movlw	-24
 16934  010CE4  0060  F007  FFE3   	movff	btemp,plusw1
 16935  010CEA  6A01               	clrf	btemp^0,c
 16936  010CEC  0EE9               	movlw	-23
 16937  010CEE  50E3               	movf	plusw1,w,c
 16938  010CF0  2001               	addwfc	btemp^0,w,c
 16939  010CF2  6E01               	movwf	btemp^0,c
 16940  010CF4  0EE9               	movlw	-23
 16941  010CF6  0060  F007  FFE3   	movff	btemp,plusw1
 16942                           
 16943                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 459:                 --w;
 16944                           ;stkvar	_w @ sp[(-56)+38]
 16945  010CFC  50E1               	movf	fsr1l,w,c
 16946  010CFE  0FEE               	addlw	-18
 16947  010D00  6ED9               	movwf	fsr2l,c
 16948  010D02  50E2               	movf	fsr1h,w,c
 16949  010D04  6EDA               	movwf	fsr2h,c
 16950  010D06  0EFF               	movlw	255
 16951  010D08  22DA               	addwfc	fsr2h,f,c
 16952  010D0A  06DE               	decf	postinc2,f,c
 16953  010D0C  0E00               	movlw	0
 16954  010D0E  5ADD               	subwfb	postdec2,f,c
 16955                           
 16956                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 460:                 --t;
 16957                           ;stkvar	_t @ sp[(-56)+52]
 16958  010D10  50E1               	movf	fsr1l,w,c
 16959  010D12  0FFC               	addlw	-4
 16960  010D14  6ED9               	movwf	fsr2l,c
 16961  010D16  50E2               	movf	fsr1h,w,c
 16962  010D18  6EDA               	movwf	fsr2h,c
 16963  010D1A  0EFF               	movlw	255
 16964  010D1C  22DA               	addwfc	fsr2h,f,c
 16965  010D1E  06DE               	decf	postinc2,f,c
 16966  010D20  0E00               	movlw	0
 16967  010D22  5ADD               	subwfb	postdec2,f,c
 16968  010D24                     l12023:
 16969                           
 16970                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 457:             while (t) {
 16971                           ;stkvar	_t @ sp[(-56)+52]
 16972  010D24  0EFC               	movlw	-4
 16973  010D26  006F FF8C  F001    	movff	plusw1,btemp
 16974  010D2C  0EFD               	movlw	-3
 16975  010D2E  50E3               	movf	plusw1,w,c
 16976  010D30  1001               	iorwf	btemp^0,w,c
 16977  010D32  A4D8               	btfss	status,2,c
 16978  010D34  D7C2               	goto	l12015
 16979                           
 16980                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 462:             dbuf[n++] = 
      +                          '0' + d;
 16981                           ;stkvar	_n @ sp[(-56)+32]
 16982  010D36  0EE8               	movlw	-24
 16983  010D38  006F FF8C  F00B    	movff	plusw1,btemp+10
 16984  010D3E  0EE9               	movlw	-23
 16985  010D40  006F FF8C  F00C    	movff	plusw1,btemp+11
 16986  010D46  0E97               	movlw	low _dbuf
 16987  010D48  240B               	addwf	(btemp+10)^0,w,c
 16988  010D4A  6ED9               	movwf	fsr2l,c
 16989  010D4C  0E02               	movlw	high _dbuf
 16990  010D4E  200C               	addwfc	(btemp+11)^0,w,c
 16991  010D50  6EDA               	movwf	fsr2h,c
 16992                           
 16993                           ;stkvar	_d @ sp[(-56)+44]
 16994  010D52  0EF4               	movlw	-12
 16995  010D54  50E3               	movf	plusw1,w,c
 16996  010D56  0F30               	addlw	48
 16997  010D58  6EDF               	movwf	indf2,c
 16998                           
 16999                           ;stkvar	_n @ sp[(-56)+32]
 17000  010D5A  0EE8               	movlw	-24
 17001  010D5C  50E3               	movf	plusw1,w,c
 17002  010D5E  0F01               	addlw	1
 17003  010D60  6E01               	movwf	btemp^0,c
 17004  010D62  0EE8               	movlw	-24
 17005  010D64  0060  F007  FFE3   	movff	btemp,plusw1
 17006  010D6A  6A01               	clrf	btemp^0,c
 17007  010D6C  0EE9               	movlw	-23
 17008  010D6E  50E3               	movf	plusw1,w,c
 17009  010D70  2001               	addwfc	btemp^0,w,c
 17010  010D72  6E01               	movwf	btemp^0,c
 17011  010D74  0EE9               	movlw	-23
 17012  010D76  0060  F007  FFE3   	movff	btemp,plusw1
 17013                           
 17014                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 463:             --w;
 17015                           ;stkvar	_w @ sp[(-56)+38]
 17016  010D7C  50E1               	movf	fsr1l,w,c
 17017  010D7E  0FEE               	addlw	-18
 17018  010D80  6ED9               	movwf	fsr2l,c
 17019  010D82  50E2               	movf	fsr1h,w,c
 17020  010D84  6EDA               	movwf	fsr2h,c
 17021  010D86  0EFF               	movlw	255
 17022  010D88  22DA               	addwfc	fsr2h,f,c
 17023  010D8A  06DE               	decf	postinc2,f,c
 17024  010D8C  0E00               	movlw	0
 17025  010D8E  5ADD               	subwfb	postdec2,f,c
 17026  010D90                     l12031:
 17027                           
 17028                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 465:         h -= l*u;
 17029                           ;stkvar	_u @ sp[(-56)+12]
 17030  010D90  0ED4               	movlw	-44
 17031  010D92  006F FF8F FFE6     	movff	plusw1,postinc1
 17032  010D98  006F FF8F FFE6     	movff	plusw1,postinc1
 17033  010D9E  006F FF8F FFE6     	movff	plusw1,postinc1
 17034  010DA4  006F FF8F FFE6     	movff	plusw1,postinc1
 17035                           
 17036                           ;stkvar	_l @ sp[(-60)+20]
 17037  010DAA  0ED8               	movlw	-40
 17038  010DAC  006F FF8F FFE6     	movff	plusw1,postinc1
 17039  010DB2  006F FF8F FFE6     	movff	plusw1,postinc1
 17040  010DB8  006F FF8F FFE6     	movff	plusw1,postinc1
 17041  010DBE  006F FF8F FFE6     	movff	plusw1,postinc1
 17042  010DC4  ECA0  F099         	call	___flmul	;wreg free
 17043  010DC8  0060  F007  FFE6   	movff	btemp,postinc1
 17044  010DCE  0060  F00B  FFE6   	movff	btemp+1,postinc1
 17045  010DD4  0060  F00F  FFE6   	movff	btemp+2,postinc1
 17046  010DDA  0060  F013  FFE6   	movff	btemp+3,postinc1
 17047                           
 17048                           ;stkvar	_h @ sp[(-60)+24]
 17049  010DE0  0EDC               	movlw	-36
 17050  010DE2  006F FF8F FFE6     	movff	plusw1,postinc1
 17051  010DE8  006F FF8F FFE6     	movff	plusw1,postinc1
 17052  010DEE  006F FF8F FFE6     	movff	plusw1,postinc1
 17053  010DF4  006F FF8F FFE6     	movff	plusw1,postinc1
 17054  010DFA  EC08  F0D9         	call	___flsub	;wreg free
 17055                           
 17056                           ;stkvar	_h @ sp[(-56)+24]
 17057  010DFE  0EE0               	movlw	-32
 17058  010E00  0060  F007  FFE3   	movff	btemp,plusw1
 17059  010E06  0EE1               	movlw	-31
 17060  010E08  0060  F00B  FFE3   	movff	btemp+1,plusw1
 17061  010E0E  0EE2               	movlw	-30
 17062  010E10  0060  F00F  FFE3   	movff	btemp+2,plusw1
 17063  010E16  0EE3               	movlw	-29
 17064  010E18  0060  F013  FFE3   	movff	btemp+3,plusw1
 17065                           
 17066                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 466:         u = u/10.0;
 17067  010E1E  0E00               	movlw	0
 17068  010E20  6EE6               	movwf	postinc1,c
 17069  010E22  0E00               	movlw	0
 17070  010E24  6EE6               	movwf	postinc1,c
 17071  010E26  0E20               	movlw	32
 17072  010E28  6EE6               	movwf	postinc1,c
 17073  010E2A  0E41               	movlw	65
 17074  010E2C  6EE6               	movwf	postinc1,c
 17075                           
 17076                           ;stkvar	_u @ sp[(-60)+12]
 17077  010E2E  0ED0               	movlw	-48
 17078  010E30  006F FF8F FFE6     	movff	plusw1,postinc1
 17079  010E36  006F FF8F FFE6     	movff	plusw1,postinc1
 17080  010E3C  006F FF8F FFE6     	movff	plusw1,postinc1
 17081  010E42  006F FF8F FFE6     	movff	plusw1,postinc1
 17082  010E48  EC51  F0A5         	call	___fldiv	;wreg free
 17083                           
 17084                           ;stkvar	_u @ sp[(-56)+12]
 17085  010E4C  0ED4               	movlw	-44
 17086  010E4E  0060  F007  FFE3   	movff	btemp,plusw1
 17087  010E54  0ED5               	movlw	-43
 17088  010E56  0060  F00B  FFE3   	movff	btemp+1,plusw1
 17089  010E5C  0ED6               	movlw	-42
 17090  010E5E  0060  F00F  FFE3   	movff	btemp+2,plusw1
 17091  010E64  0ED7               	movlw	-41
 17092  010E66  0060  F013  FFE3   	movff	btemp+3,plusw1
 17093                           
 17094                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 467:         --ne;
 17095                           ;stkvar	_ne @ sp[(-56)+46]
 17096  010E6C  50E1               	movf	fsr1l,w,c
 17097  010E6E  0FF6               	addlw	-10
 17098  010E70  6ED9               	movwf	fsr2l,c
 17099  010E72  50E2               	movf	fsr1h,w,c
 17100  010E74  6EDA               	movwf	fsr2h,c
 17101  010E76  0EFF               	movlw	255
 17102  010E78  22DA               	addwfc	fsr2h,f,c
 17103  010E7A  06DE               	decf	postinc2,f,c
 17104  010E7C  0E00               	movlw	0
 17105  010E7E  5ADD               	subwfb	postdec2,f,c
 17106                           
 17107                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 468:         ++i;
 17108                           ;stkvar	_i @ sp[(-56)+36]
 17109  010E80  0EEC               	movlw	-20
 17110  010E82  50E3               	movf	plusw1,w,c
 17111  010E84  0F01               	addlw	1
 17112  010E86  6E01               	movwf	btemp^0,c
 17113  010E88  0EEC               	movlw	-20
 17114  010E8A  0060  F007  FFE3   	movff	btemp,plusw1
 17115  010E90  6A01               	clrf	btemp^0,c
 17116  010E92  0EED               	movlw	-19
 17117  010E94  50E3               	movf	plusw1,w,c
 17118  010E96  2001               	addwfc	btemp^0,w,c
 17119  010E98  6E01               	movwf	btemp^0,c
 17120  010E9A  0EED               	movlw	-19
 17121  010E9C  0060  F007  FFE3   	movff	btemp,plusw1
 17122  010EA2                     l12039:
 17123                           
 17124                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 17125                           ;stkvar	_m @ sp[(-56)+48]
 17126                           ;stkvar	_i @ sp[(-56)+36]
 17127  010EA2  50E1               	movf	fsr1l,w,c
 17128  010EA4  0FEC               	addlw	-20
 17129  010EA6  6ED9               	movwf	fsr2l,c
 17130  010EA8  50E2               	movf	fsr1h,w,c
 17131  010EAA  6EDA               	movwf	fsr2h,c
 17132  010EAC  0EFF               	movlw	255
 17133  010EAE  22DA               	addwfc	fsr2h,f,c
 17134  010EB0  0EF8               	movlw	-8
 17135  010EB2  50E3               	movf	plusw1,w,c
 17136  010EB4  5CDE               	subwf	postinc2,w,c
 17137  010EB6  50DE               	movf	postinc2,w,c
 17138  010EB8  0A80               	xorlw	128
 17139  010EBA  6E01               	movwf	btemp^0,c
 17140  010EBC  0EF9               	movlw	-7
 17141  010EBE  50E3               	movf	plusw1,w,c
 17142  010EC0  0A80               	xorlw	128
 17143  010EC2  5801               	subwfb	btemp^0,w,c
 17144  010EC4  B0D8               	btfsc	status,0,c
 17145  010EC6  D00E               	goto	u11410
 17146                           
 17147                           ;stkvar	_n @ sp[(-56)+32]
 17148  010EC8  0EE9               	movlw	-23
 17149  010ECA  BEE3               	btfsc	plusw1,7,c
 17150  010ECC  D633               	goto	l11989
 17151  010ECE  0EE9               	movlw	-23
 17152  010ED0  50E3               	movf	plusw1,w,c
 17153  010ED2  E108               	bnz	u11410
 17154  010ED4  0EE8               	movlw	-24
 17155  010ED6  006F FF8C  F001    	movff	plusw1,btemp
 17156  010EDC  0E4B               	movlw	75
 17157  010EDE  5E01               	subwf	btemp^0,f,c
 17158  010EE0  A0D8               	btfss	status,0,c
 17159  010EE2  D628               	goto	l11989
 17160  010EE4                     u11410:
 17161                           
 17162                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 470:     if (!pp && (flags & 
      +                          (1 << 4))) {
 17163                           ;stkvar	_pp @ sp[(-56)+50]
 17164  010EE4  0EFA               	movlw	-6
 17165  010EE6  006F FF8C  F001    	movff	plusw1,btemp
 17166  010EEC  0EFB               	movlw	-5
 17167  010EEE  50E3               	movf	plusw1,w,c
 17168  010EF0  1001               	iorwf	btemp^0,w,c
 17169  010EF2  B4D8               	btfsc	status,2,c
 17170  010EF4  A83E               	btfss	_flags^0,4,c
 17171  010EF6  D021               	goto	l12051
 17172                           
 17173                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 471:         dbuf[n++] = '.';
 17174                           ;stkvar	_n @ sp[(-56)+32]
 17175  010EF8  0EE8               	movlw	-24
 17176  010EFA  006F FF8C  F00B    	movff	plusw1,btemp+10
 17177  010F00  0EE9               	movlw	-23
 17178  010F02  006F FF8C  F00C    	movff	plusw1,btemp+11
 17179  010F08  0E97               	movlw	low _dbuf
 17180  010F0A  240B               	addwf	(btemp+10)^0,w,c
 17181  010F0C  6ED9               	movwf	fsr2l,c
 17182  010F0E  0E02               	movlw	high _dbuf
 17183  010F10  200C               	addwfc	(btemp+11)^0,w,c
 17184  010F12  6EDA               	movwf	fsr2h,c
 17185  010F14  0E2E               	movlw	46
 17186  010F16  6EDF               	movwf	indf2,c
 17187                           
 17188                           ;stkvar	_n @ sp[(-56)+32]
 17189  010F18  0EE8               	movlw	-24
 17190  010F1A  50E3               	movf	plusw1,w,c
 17191  010F1C  0F01               	addlw	1
 17192  010F1E  6E01               	movwf	btemp^0,c
 17193  010F20  0EE8               	movlw	-24
 17194  010F22  0060  F007  FFE3   	movff	btemp,plusw1
 17195  010F28  6A01               	clrf	btemp^0,c
 17196  010F2A  0EE9               	movlw	-23
 17197  010F2C  50E3               	movf	plusw1,w,c
 17198  010F2E  2001               	addwfc	btemp^0,w,c
 17199  010F30  6E01               	movwf	btemp^0,c
 17200  010F32  0EE9               	movlw	-23
 17201  010F34  0060  F007  FFE3   	movff	btemp,plusw1
 17202  010F3A                     l12051:
 17203                           
 17204                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 473:     dbuf[n] = '\0';
 17205                           ;stkvar	_n @ sp[(-56)+32]
 17206  010F3A  0EE8               	movlw	-24
 17207  010F3C  006F FF8C  F00B    	movff	plusw1,btemp+10
 17208  010F42  0EE9               	movlw	-23
 17209  010F44  006F FF8C  F00C    	movff	plusw1,btemp+11
 17210  010F4A  0E97               	movlw	low _dbuf
 17211  010F4C  240B               	addwf	(btemp+10)^0,w,c
 17212  010F4E  6ED9               	movwf	fsr2l,c
 17213  010F50  0E02               	movlw	high _dbuf
 17214  010F52  200C               	addwfc	(btemp+11)^0,w,c
 17215  010F54  6EDA               	movwf	fsr2h,c
 17216  010F56  0E00               	movlw	0
 17217  010F58  6EDF               	movwf	indf2,c
 17218                           
 17219                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 476:     if (nmode == 'e') {
 17220                           ;stkvar	_nmode @ sp[(-56)+55]
 17221  010F5A  0EFF               	movlw	-1
 17222  010F5C  006F FF8C  F001    	movff	plusw1,btemp
 17223  010F62  0E65               	movlw	101
 17224  010F64  1801               	xorwf	btemp^0,w,c
 17225  010F66  A4D8               	btfss	status,2,c
 17226  010F68  EF16  F081         	goto	l11855
 17227                           
 17228                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 477:         i = sizeof(dbuf)
      +                           - 1;
 17229  010F6C  0E4F               	movlw	79
 17230  010F6E  6E0B               	movwf	(btemp+10)^0,c
 17231  010F70  0E00               	movlw	0
 17232  010F72  6E0C               	movwf	(btemp+11)^0,c
 17233                           
 17234                           ;stkvar	_i @ sp[(-56)+36]
 17235  010F74  0EEC               	movlw	-20
 17236  010F76  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17237  010F7C  0EED               	movlw	-19
 17238  010F7E  0060  F033  FFE3   	movff	btemp+11,plusw1
 17239                           
 17240                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 478:         dbuf[i] = '\0';
 17241                           ;stkvar	_i @ sp[(-56)+36]
 17242  010F84  0EEC               	movlw	-20
 17243  010F86  006F FF8C  F00B    	movff	plusw1,btemp+10
 17244  010F8C  0EED               	movlw	-19
 17245  010F8E  006F FF8C  F00C    	movff	plusw1,btemp+11
 17246  010F94  0E97               	movlw	low _dbuf
 17247  010F96  240B               	addwf	(btemp+10)^0,w,c
 17248  010F98  6ED9               	movwf	fsr2l,c
 17249  010F9A  0E02               	movlw	high _dbuf
 17250  010F9C  200C               	addwfc	(btemp+11)^0,w,c
 17251  010F9E  6EDA               	movwf	fsr2h,c
 17252  010FA0  0E00               	movlw	0
 17253  010FA2  6EDF               	movwf	indf2,c
 17254                           
 17255                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 479:         sign = 0;
 17256                           ;stkvar	_sign @ sp[(-56)+42]
 17257  010FA4  0EF2               	movlw	-14
 17258  010FA6  6AE3               	clrf	plusw1,c
 17259  010FA8  0EF3               	movlw	-13
 17260  010FAA  6AE3               	clrf	plusw1,c
 17261                           
 17262                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 480:         if (e < 0) {
 17263                           ;stkvar	_e @ sp[(-56)+34]
 17264  010FAC  0EEB               	movlw	-21
 17265  010FAE  AEE3               	btfss	plusw1,7,c
 17266  010FB0  D012               	goto	l12065
 17267                           
 17268                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 481:             sign = 1;
 17269  010FB2  0E01               	movlw	1
 17270  010FB4  6E0B               	movwf	(btemp+10)^0,c
 17271  010FB6  0E00               	movlw	0
 17272  010FB8  6E0C               	movwf	(btemp+11)^0,c
 17273                           
 17274                           ;stkvar	_sign @ sp[(-56)+42]
 17275  010FBA  0EF2               	movlw	-14
 17276  010FBC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17277  010FC2  0EF3               	movlw	-13
 17278  010FC4  0060  F033  FFE3   	movff	btemp+11,plusw1
 17279                           
 17280                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 482:             e = -e;
 17281                           ;stkvar	_e @ sp[(-56)+34]
 17282                           ;stkvar	_e @ sp[(-56)+34]
 17283  010FCA  0EEA               	movlw	-22
 17284  010FCC  6CE3               	negf	plusw1,c
 17285  010FCE  0EEB               	movlw	-21
 17286  010FD0  1EE3               	comf	plusw1,f,c
 17287  010FD2  B0D8               	btfsc	status,0,c
 17288  010FD4  2AE3               	incf	plusw1,f,c
 17289  010FD6                     l12065:
 17290                           
 17291                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 484:         p = 2;
 17292  010FD6  0E02               	movlw	2
 17293  010FD8  6E0B               	movwf	(btemp+10)^0,c
 17294  010FDA  0E00               	movlw	0
 17295  010FDC  6E0C               	movwf	(btemp+11)^0,c
 17296                           
 17297                           ;stkvar	_p @ sp[(-56)+40]
 17298  010FDE  0EF0               	movlw	-16
 17299  010FE0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17300  010FE6  0EF1               	movlw	-15
 17301  010FE8  0060  F033  FFE3   	movff	btemp+11,plusw1
 17302                           
 17303                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 17304  010FEE  D051               	goto	l12077
 17305  010FF0                     l12067:
 17306                           
 17307                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 486:             --i;
 17308                           ;stkvar	_i @ sp[(-56)+36]
 17309  010FF0  50E1               	movf	fsr1l,w,c
 17310  010FF2  0FEC               	addlw	-20
 17311  010FF4  6ED9               	movwf	fsr2l,c
 17312  010FF6  50E2               	movf	fsr1h,w,c
 17313  010FF8  6EDA               	movwf	fsr2h,c
 17314  010FFA  0EFF               	movlw	255
 17315  010FFC  22DA               	addwfc	fsr2h,f,c
 17316  010FFE  06DE               	decf	postinc2,f,c
 17317  011000  0E00               	movlw	0
 17318  011002  5ADD               	subwfb	postdec2,f,c
 17319                           
 17320                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 487:             dbuf[i] = '0
      +                          ' + (e % 10);
 17321                           ;stkvar	_i @ sp[(-56)+36]
 17322  011004  0EEC               	movlw	-20
 17323  011006  006F FF8C  F00B    	movff	plusw1,btemp+10
 17324  01100C  0EED               	movlw	-19
 17325  01100E  006F FF8C  F00C    	movff	plusw1,btemp+11
 17326  011014  0E97               	movlw	low _dbuf
 17327  011016  240B               	addwf	(btemp+10)^0,w,c
 17328  011018  6ED9               	movwf	fsr2l,c
 17329  01101A  0E02               	movlw	high _dbuf
 17330  01101C  200C               	addwfc	(btemp+11)^0,w,c
 17331  01101E  6EDA               	movwf	fsr2h,c
 17332  011020  0E0A               	movlw	10
 17333  011022  6EE6               	movwf	postinc1,c
 17334  011024  0E00               	movlw	0
 17335  011026  6EE6               	movwf	postinc1,c
 17336                           
 17337                           ;stkvar	_e @ sp[(-58)+34]
 17338  011028  0EE8               	movlw	-24
 17339  01102A  006F FF8F FFE6     	movff	plusw1,postinc1
 17340  011030  006F FF8F FFE6     	movff	plusw1,postinc1
 17341  011036  EC83  F0CB         	call	___awmod	;wreg free
 17342  01103A  5001               	movf	btemp^0,w,c
 17343  01103C  0F30               	addlw	48
 17344  01103E  6EDF               	movwf	indf2,c
 17345                           
 17346                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 488:             e = e / 10;
 17347  011040  0E0A               	movlw	10
 17348  011042  6EE6               	movwf	postinc1,c
 17349  011044  0E00               	movlw	0
 17350  011046  6EE6               	movwf	postinc1,c
 17351                           
 17352                           ;stkvar	_e @ sp[(-58)+34]
 17353  011048  0EE8               	movlw	-24
 17354  01104A  006F FF8F FFE6     	movff	plusw1,postinc1
 17355  011050  006F FF8F FFE6     	movff	plusw1,postinc1
 17356  011056  ECE3  F0C7         	call	___awdiv	;wreg free
 17357                           
 17358                           ;stkvar	_e @ sp[(-56)+34]
 17359  01105A  0EEA               	movlw	-22
 17360  01105C  0060  F007  FFE3   	movff	btemp,plusw1
 17361  011062  0EEB               	movlw	-21
 17362  011064  0060  F00B  FFE3   	movff	btemp+1,plusw1
 17363                           
 17364                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 489:             --p;
 17365                           ;stkvar	_p @ sp[(-56)+40]
 17366  01106A  50E1               	movf	fsr1l,w,c
 17367  01106C  0FF0               	addlw	-16
 17368  01106E  6ED9               	movwf	fsr2l,c
 17369  011070  50E2               	movf	fsr1h,w,c
 17370  011072  6EDA               	movwf	fsr2h,c
 17371  011074  0EFF               	movlw	255
 17372  011076  22DA               	addwfc	fsr2h,f,c
 17373  011078  06DE               	decf	postinc2,f,c
 17374  01107A  0E00               	movlw	0
 17375  01107C  5ADD               	subwfb	postdec2,f,c
 17376                           
 17377                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 490:             --w;
 17378                           ;stkvar	_w @ sp[(-56)+38]
 17379  01107E  50E1               	movf	fsr1l,w,c
 17380  011080  0FEE               	addlw	-18
 17381  011082  6ED9               	movwf	fsr2l,c
 17382  011084  50E2               	movf	fsr1h,w,c
 17383  011086  6EDA               	movwf	fsr2h,c
 17384  011088  0EFF               	movlw	255
 17385  01108A  22DA               	addwfc	fsr2h,f,c
 17386  01108C  06DE               	decf	postinc2,f,c
 17387  01108E  0E00               	movlw	0
 17388  011090  5ADD               	subwfb	postdec2,f,c
 17389  011092                     l12077:
 17390                           
 17391                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 17392                           ;stkvar	_e @ sp[(-56)+34]
 17393  011092  0EEA               	movlw	-22
 17394  011094  006F FF8C  F001    	movff	plusw1,btemp
 17395  01109A  0EEB               	movlw	-21
 17396  01109C  50E3               	movf	plusw1,w,c
 17397  01109E  1001               	iorwf	btemp^0,w,c
 17398  0110A0  A4D8               	btfss	status,2,c
 17399  0110A2  D7A6               	goto	l12067
 17400                           
 17401                           ;stkvar	_p @ sp[(-56)+40]
 17402  0110A4  0EF1               	movlw	-15
 17403  0110A6  BEE3               	btfsc	plusw1,7,c
 17404  0110A8  D007               	goto	u11470
 17405  0110AA  0EF1               	movlw	-15
 17406  0110AC  50E3               	movf	plusw1,w,c
 17407  0110AE  E1A0               	bnz	l12067
 17408  0110B0  0EF0               	movlw	-16
 17409  0110B2  04E3               	decf	plusw1,w,c
 17410  0110B4  B0D8               	btfsc	status,0,c
 17411  0110B6  D79C               	goto	l12067
 17412  0110B8                     u11470:
 17413                           
 17414                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 492:         --i;
 17415                           ;stkvar	_i @ sp[(-56)+36]
 17416  0110B8  50E1               	movf	fsr1l,w,c
 17417  0110BA  0FEC               	addlw	-20
 17418  0110BC  6ED9               	movwf	fsr2l,c
 17419  0110BE  50E2               	movf	fsr1h,w,c
 17420  0110C0  6EDA               	movwf	fsr2h,c
 17421  0110C2  0EFF               	movlw	255
 17422  0110C4  22DA               	addwfc	fsr2h,f,c
 17423  0110C6  06DE               	decf	postinc2,f,c
 17424  0110C8  0E00               	movlw	0
 17425  0110CA  5ADD               	subwfb	postdec2,f,c
 17426                           
 17427                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 493:         dbuf[i] = sign ?
      +                           '-' : '+';
 17428                           ;stkvar	_sign @ sp[(-56)+42]
 17429  0110CC  0EF2               	movlw	-14
 17430  0110CE  006F FF8C  F001    	movff	plusw1,btemp
 17431  0110D4  0EF3               	movlw	-13
 17432  0110D6  50E3               	movf	plusw1,w,c
 17433  0110D8  1001               	iorwf	btemp^0,w,c
 17434  0110DA  A4D8               	btfss	status,2,c
 17435  0110DC  D002               	goto	l12087
 17436  0110DE  0E2B               	movlw	43
 17437  0110E0  D001               	goto	L18
 17438  0110E2                     l12087:
 17439  0110E2  0E2D               	movlw	45
 17440  0110E4                     L18:
 17441  0110E4  6E0B               	movwf	(btemp+10)^0,c
 17442  0110E6  0E00               	movlw	0
 17443  0110E8  6E0C               	movwf	(btemp+11)^0,c
 17444                           
 17445                           ;stkvar	_efgtoa$5503 @ sp[(-56)+4]
 17446  0110EA  0ECC               	movlw	-52
 17447  0110EC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17448  0110F2  0ECD               	movlw	-51
 17449  0110F4  0060  F033  FFE3   	movff	btemp+11,plusw1
 17450                           
 17451                           ;stkvar	_efgtoa$5503 @ sp[(-56)+4]
 17452                           ;stkvar	_i @ sp[(-56)+36]
 17453  0110FA  0EEC               	movlw	-20
 17454  0110FC  006F FF8C  F00B    	movff	plusw1,btemp+10
 17455  011102  0EED               	movlw	-19
 17456  011104  006F FF8C  F00C    	movff	plusw1,btemp+11
 17457  01110A  0E97               	movlw	low _dbuf
 17458  01110C  240B               	addwf	(btemp+10)^0,w,c
 17459  01110E  6ED9               	movwf	fsr2l,c
 17460  011110  0E02               	movlw	high _dbuf
 17461  011112  200C               	addwfc	(btemp+11)^0,w,c
 17462  011114  6EDA               	movwf	fsr2h,c
 17463  011116  0ECC               	movlw	-52
 17464  011118  006F FF8F FFDF     	movff	plusw1,indf2
 17465                           
 17466                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 494:         --w;
 17467                           ;stkvar	_w @ sp[(-56)+38]
 17468  01111E  50E1               	movf	fsr1l,w,c
 17469  011120  0FEE               	addlw	-18
 17470  011122  6ED9               	movwf	fsr2l,c
 17471  011124  50E2               	movf	fsr1h,w,c
 17472  011126  6EDA               	movwf	fsr2h,c
 17473  011128  0EFF               	movlw	255
 17474  01112A  22DA               	addwfc	fsr2h,f,c
 17475  01112C  06DE               	decf	postinc2,f,c
 17476  01112E  0E00               	movlw	0
 17477  011130  5ADD               	subwfb	postdec2,f,c
 17478                           
 17479                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 496:         dbuf[i] = (0 ? i
      +                          supper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
 17480                           ;stkvar	_i @ sp[(-56)+36]
 17481  011132  50E1               	movf	fsr1l,w,c
 17482  011134  0FEC               	addlw	-20
 17483  011136  6ED9               	movwf	fsr2l,c
 17484  011138  50E2               	movf	fsr1h,w,c
 17485  01113A  6EDA               	movwf	fsr2h,c
 17486  01113C  0EFF               	movlw	255
 17487  01113E  22DA               	addwfc	fsr2h,f,c
 17488  011140  06DE               	decf	postinc2,f,c
 17489  011142  0E00               	movlw	0
 17490  011144  5ADD               	subwfb	postdec2,f,c
 17491  011146  0EBF               	movlw	191
 17492  011148  6E0B               	movwf	(btemp+10)^0,c
 17493  01114A  0EFF               	movlw	255
 17494  01114C  6E0C               	movwf	(btemp+11)^0,c
 17495                           
 17496                           ;stkvar	_c @ sp[(-56)+-7]
 17497  01114E  0EC1               	movlw	-63
 17498  011150  50E3               	movf	plusw1,w,c
 17499  011152  6E09               	movwf	(btemp+8)^0,c
 17500  011154  6A0A               	clrf	(btemp+9)^0,c
 17501  011156  500B               	movf	(btemp+10)^0,w,c
 17502  011158  2609               	addwf	(btemp+8)^0,f,c
 17503  01115A  500C               	movf	(btemp+11)^0,w,c
 17504  01115C  220A               	addwfc	(btemp+9)^0,f,c
 17505  01115E  500A               	movf	(btemp+9)^0,w,c
 17506  011160  E106               	bnz	u11490
 17507  011162  0E1A               	movlw	26
 17508  011164  5C09               	subwf	(btemp+8)^0,w,c
 17509  011166  B0D8               	btfsc	status,0,c
 17510  011168  D002               	goto	u11490
 17511  01116A  0E01               	movlw	1
 17512  01116C  D001               	goto	u11500
 17513  01116E                     u11490:
 17514  01116E  0E00               	movlw	0
 17515  011170                     u11500:
 17516  011170  6E0B               	movwf	(btemp+10)^0,c
 17517  011172  6A0C               	clrf	(btemp+11)^0,c
 17518                           
 17519                           ;stkvar	_efgtoa$5505 @ sp[(-56)+0]
 17520  011174  0EC8               	movlw	-56
 17521  011176  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17522  01117C  0EC9               	movlw	-55
 17523  01117E  0060  F033  FFE3   	movff	btemp+11,plusw1
 17524                           
 17525                           ;stkvar	_efgtoa$5505 @ sp[(-56)+0]
 17526  011184  0EC8               	movlw	-56
 17527  011186  006F FF8C  F001    	movff	plusw1,btemp
 17528  01118C  0EC9               	movlw	-55
 17529  01118E  50E3               	movf	plusw1,w,c
 17530  011190  1001               	iorwf	btemp^0,w,c
 17531  011192  A4D8               	btfss	status,2,c
 17532  011194  D002               	goto	l12103
 17533  011196  0E65               	movlw	101
 17534  011198  D001               	goto	L19
 17535  01119A                     l12103:
 17536  01119A  0E45               	movlw	69
 17537  01119C                     L19:
 17538  01119C  6E0B               	movwf	(btemp+10)^0,c
 17539  01119E  0E00               	movlw	0
 17540  0111A0  6E0C               	movwf	(btemp+11)^0,c
 17541                           
 17542                           ;stkvar	_efgtoa$5504 @ sp[(-56)+2]
 17543  0111A2  0ECA               	movlw	-54
 17544  0111A4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17545  0111AA  0ECB               	movlw	-53
 17546  0111AC  0060  F033  FFE3   	movff	btemp+11,plusw1
 17547                           
 17548                           ;stkvar	_efgtoa$5504 @ sp[(-56)+2]
 17549                           ;stkvar	_i @ sp[(-56)+36]
 17550  0111B2  0EEC               	movlw	-20
 17551  0111B4  006F FF8C  F00B    	movff	plusw1,btemp+10
 17552  0111BA  0EED               	movlw	-19
 17553  0111BC  006F FF8C  F00C    	movff	plusw1,btemp+11
 17554  0111C2  0E97               	movlw	low _dbuf
 17555  0111C4  240B               	addwf	(btemp+10)^0,w,c
 17556  0111C6  6ED9               	movwf	fsr2l,c
 17557  0111C8  0E02               	movlw	high _dbuf
 17558  0111CA  200C               	addwfc	(btemp+11)^0,w,c
 17559  0111CC  6EDA               	movwf	fsr2h,c
 17560  0111CE  0ECA               	movlw	-54
 17561  0111D0  006F FF8F FFDF     	movff	plusw1,indf2
 17562                           
 17563                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 497:         --w;
 17564                           ;stkvar	_w @ sp[(-56)+38]
 17565  0111D6  50E1               	movf	fsr1l,w,c
 17566  0111D8  0FEE               	addlw	-18
 17567  0111DA  6ED9               	movwf	fsr2l,c
 17568  0111DC  50E2               	movf	fsr1h,w,c
 17569  0111DE  6EDA               	movwf	fsr2h,c
 17570  0111E0  0EFF               	movlw	255
 17571  0111E2  22DA               	addwfc	fsr2h,f,c
 17572  0111E4  06DE               	decf	postinc2,f,c
 17573  0111E6  0E00               	movlw	0
 17574  0111E8  5ADD               	subwfb	postdec2,f,c
 17575                           
 17576                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 498:         strcpy(&dbuf[n],
      +                           &dbuf[i]);
 17577                           ;stkvar	_i @ sp[(-56)+36]
 17578  0111EA  0EEC               	movlw	-20
 17579  0111EC  006F FF8C  F00B    	movff	plusw1,btemp+10
 17580  0111F2  0EED               	movlw	-19
 17581  0111F4  006F FF8C  F00C    	movff	plusw1,btemp+11
 17582  0111FA  0E97               	movlw	low _dbuf
 17583  0111FC  240B               	addwf	(btemp+10)^0,w,c
 17584  0111FE  6E09               	movwf	(btemp+8)^0,c
 17585  011200  0E02               	movlw	high _dbuf
 17586  011202  200C               	addwfc	(btemp+11)^0,w,c
 17587  011204  6E0A               	movwf	(btemp+9)^0,c
 17588  011206  0060  F027  FFE6   	movff	btemp+8,postinc1
 17589  01120C  0060  F02B  FFE6   	movff	btemp+9,postinc1
 17590                           
 17591                           ;stkvar	_n @ sp[(-58)+32]
 17592  011212  0E97               	movlw	low _dbuf
 17593  011214  6E0B               	movwf	(btemp+10)^0,c
 17594  011216  0E02               	movlw	high _dbuf
 17595  011218  6E0C               	movwf	(btemp+11)^0,c
 17596  01121A  0EE6               	movlw	-26
 17597  01121C  50E3               	movf	plusw1,w,c
 17598  01121E  260B               	addwf	(btemp+10)^0,f,c
 17599  011220  0EE7               	movlw	-25
 17600  011222  50E3               	movf	plusw1,w,c
 17601  011224  220C               	addwfc	(btemp+11)^0,f,c
 17602  011226  0060  F02F  FFE6   	movff	btemp+10,postinc1
 17603  01122C  0060  F033  FFE6   	movff	btemp+11,postinc1
 17604  011232  EC63  F0D0         	call	_strcpy	;wreg free
 17605  011236  EF16  F081         	goto	l11855
 17606  01123A                     l2199:
 17607                           
 17608                           ; _efgtoa: autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsi
      +                          ze = 7, vargsize = 0
 17609  01123A  0EC1               	movlw	193
 17610  01123C  26E1               	addwf	fsr1l,f,c
 17611  01123E  0EFF               	movlw	255
 17612  011240  22E2               	addwfc	fsr1h,f,c
 17613  011242  0012               	return		;funcret
 17614  011244                     __end_of_efgtoa:
 17615                           	opt callstack 0
 17616                           
 17617 ;; *************** function _tolower *****************
 17618 ;; Defined at:
 17619 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/tolower.c"
 17620 ;; Parameters:    Size  Location     Type
 17621 ;;  c               2  [STACK] int 
 17622 ;; Auto vars:     Size  Location     Type
 17623 ;;		None
 17624 ;; Return value:  Size  Location     Type
 17625 ;;                  2  [STACK] int 
 17626 ;; Registers used:
 17627 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 17628 ;; Tracked objects:
 17629 ;;		On entry : 0/0
 17630 ;;		On exit  : 0/0
 17631 ;;		Unchanged: 0/0
 17632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17633 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17634 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17636 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17637 ;;Total ram usage:        0 bytes
 17638 ;; Hardware stack levels used:    1
 17639 ;; Hardware stack levels required when called:   16
 17640 ;; This function calls:
 17641 ;;		_isupper
 17642 ;; This function is called by:
 17643 ;;		_efgtoa
 17644 ;;		_vfpfcnvrt
 17645 ;; This function uses a reentrant model
 17646 ;;
 17647                           
 17648                           	psect	text56
 17649  01A9BC                     __ptext56:
 17650                           	opt callstack 0
 17651  01A9BC                     _tolower:
 17652                           	opt callstack 0
 17653                           
 17654                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17655  01A9BC  52E6               	movf	postinc1,f,c
 17656  01A9BE  52E6               	movf	postinc1,f,c
 17657                           
 17658                           ;stkvar	_c @ sp[(-2)+-2]
 17659                           
 17660                           ;incstack = 0
 17661 ;; hardware stack exceeded
 17662  01A9C0  0EFC               	movlw	-4
 17663  01A9C2  50E3               	movf	plusw1,w,c
 17664  01A9C4  0FBF               	addlw	191
 17665  01A9C6  6E0B               	movwf	(btemp+10)^0,c
 17666  01A9C8  0EFD               	movlw	-3
 17667  01A9CA  006F FF8C  F00C    	movff	plusw1,btemp+11
 17668  01A9D0  0EFF               	movlw	255
 17669  01A9D2  220C               	addwfc	(btemp+11)^0,f,c
 17670  01A9D4  500C               	movf	(btemp+11)^0,w,c
 17671  01A9D6  E106               	bnz	u6010
 17672  01A9D8  0E1A               	movlw	26
 17673  01A9DA  5C0B               	subwf	(btemp+10)^0,w,c
 17674  01A9DC  B0D8               	btfsc	status,0,c
 17675  01A9DE  D002               	goto	u6010
 17676  01A9E0  0E01               	movlw	1
 17677  01A9E2  D001               	goto	u6020
 17678  01A9E4                     u6010:
 17679  01A9E4  0E00               	movlw	0
 17680  01A9E6                     u6020:
 17681  01A9E6  6E0B               	movwf	(btemp+10)^0,c
 17682  01A9E8  6A0C               	clrf	(btemp+11)^0,c
 17683                           
 17684                           ;stkvar	_tolower$6324 @ sp[(-2)+0]
 17685  01A9EA  0EFE               	movlw	-2
 17686  01A9EC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17687  01A9F2  0EFF               	movlw	-1
 17688  01A9F4  0060  F033  FFE3   	movff	btemp+11,plusw1
 17689                           
 17690                           ;stkvar	_tolower$6324 @ sp[(-2)+0]
 17691  01A9FA  0EFE               	movlw	-2
 17692  01A9FC  006F FF8C  F001    	movff	plusw1,btemp
 17693  01AA02  0EFF               	movlw	-1
 17694  01AA04  50E3               	movf	plusw1,w,c
 17695  01AA06  1001               	iorwf	btemp^0,w,c
 17696  01AA08  B4D8               	btfsc	status,2,c
 17697  01AA0A  D00D               	goto	l7929
 17698                           
 17699                           ;stkvar	_c @ sp[(-2)+-2]
 17700  01AA0C  0EFC               	movlw	-4
 17701  01AA0E  006F FF8C  F001    	movff	plusw1,btemp
 17702  01AA14  0EFD               	movlw	-3
 17703  01AA16  006F FF8C  F002    	movff	plusw1,btemp+1
 17704  01AA1C  0E20               	movlw	32
 17705  01AA1E  1201               	iorwf	btemp^0,f,c
 17706  01AA20  0E00               	movlw	0
 17707  01AA22  1202               	iorwf	(btemp+1)^0,f,c
 17708  01AA24  D008               	goto	l3471
 17709  01AA26                     l7929:
 17710                           
 17711                           ;stkvar	_c @ sp[(-2)+-2]
 17712  01AA26  0EFC               	movlw	-4
 17713  01AA28  006F FF8C  F001    	movff	plusw1,btemp
 17714  01AA2E  0EFD               	movlw	-3
 17715  01AA30  006F FF8C  F002    	movff	plusw1,btemp+1
 17716  01AA36                     l3471:
 17717                           
 17718                           ; _tolower: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 17719  01AA36  52E5               	movf	postdec1,f,c
 17720  01AA38  52E5               	movf	postdec1,f,c
 17721  01AA3A  52E5               	movf	postdec1,f,c
 17722  01AA3C  52E5               	movf	postdec1,f,c
 17723  01AA3E  0012               	return		;funcret
 17724  01AA40                     __end_of_tolower:
 17725                           	opt callstack 0
 17726                           
 17727 ;; *************** function _isupper *****************
 17728 ;; Defined at:
 17729 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isupper.c"
 17730 ;; Parameters:    Size  Location     Type
 17731 ;;  c               2  [STACK] int 
 17732 ;; Auto vars:     Size  Location     Type
 17733 ;;		None
 17734 ;; Return value:  Size  Location     Type
 17735 ;;                  2  [STACK] int 
 17736 ;; Registers used:
 17737 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 17738 ;; Tracked objects:
 17739 ;;		On entry : 0/0
 17740 ;;		On exit  : 0/0
 17741 ;;		Unchanged: 0/0
 17742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17743 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17744 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17745 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17746 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17747 ;;Total ram usage:        0 bytes
 17748 ;; Hardware stack levels used:    1
 17749 ;; Hardware stack levels required when called:   15
 17750 ;; This function calls:
 17751 ;;		Nothing
 17752 ;; This function is called by:
 17753 ;;		_efgtoa
 17754 ;;		_xtoa
 17755 ;;		_vfpfcnvrt
 17756 ;;		_tolower
 17757 ;; This function uses a reentrant model
 17758 ;;
 17759                           
 17760                           	psect	text57
 17761  01B638                     __ptext57:
 17762                           	opt callstack 0
 17763  01B638                     _isupper:
 17764                           	opt callstack 0
 17765                           
 17766                           ;stkvar	_c @ sp[(0)+-2]
 17767                           
 17768                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17769                           ;incstack = 0
 17770 ;; hardware stack exceeded
 17771  01B638  0EFE               	movlw	-2
 17772  01B63A  50E3               	movf	plusw1,w,c
 17773  01B63C  0FBF               	addlw	191
 17774  01B63E  6E0B               	movwf	(btemp+10)^0,c
 17775  01B640  0EFF               	movlw	-1
 17776  01B642  006F FF8C  F00C    	movff	plusw1,btemp+11
 17777  01B648  0EFF               	movlw	255
 17778  01B64A  220C               	addwfc	(btemp+11)^0,f,c
 17779  01B64C  500C               	movf	(btemp+11)^0,w,c
 17780  01B64E  E106               	bnz	u5410
 17781  01B650  0E1A               	movlw	26
 17782  01B652  5C0B               	subwf	(btemp+10)^0,w,c
 17783  01B654  B0D8               	btfsc	status,0,c
 17784  01B656  D002               	goto	u5410
 17785  01B658  0E01               	movlw	1
 17786  01B65A  D001               	goto	u5420
 17787  01B65C                     u5410:
 17788  01B65C  0E00               	movlw	0
 17789  01B65E                     u5420:
 17790  01B65E  6E01               	movwf	btemp^0,c
 17791  01B660  6A02               	clrf	(btemp+1)^0,c
 17792                           
 17793                           ; _isupper: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 17794  01B662  52E5               	movf	postdec1,f,c
 17795  01B664  52E5               	movf	postdec1,f,c
 17796  01B666  0012               	return		;funcret
 17797  01B668                     __end_of_isupper:
 17798                           	opt callstack 0
 17799                           
 17800 ;; *************** function _strcpy *****************
 17801 ;; Defined at:
 17802 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strcpy.c"
 17803 ;; Parameters:    Size  Location     Type
 17804 ;;  dest            2  [STACK] PTR unsigned char 
 17805 ;;		 -> dbuf(80), 
 17806 ;;  src             2  [STACK] PTR const unsigned char 
 17807 ;;		 -> STR_71(4), STR_70(4), STR_67(4), STR_66(4), 
 17808 ;;		 -> dbuf(80), 
 17809 ;; Auto vars:     Size  Location     Type
 17810 ;;  d               2  [STACK] PTR unsigned char 
 17811 ;;		 -> dbuf(80), 
 17812 ;;  s               2  [STACK] PTR const unsigned char 
 17813 ;;		 -> STR_71(4), STR_70(4), STR_67(4), STR_66(4), 
 17814 ;;		 -> dbuf(80), 
 17815 ;; Return value:  Size  Location     Type
 17816 ;;                  2  [STACK] PTR unsigned char 
 17817 ;; Registers used:
 17818 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, tblptrl, tblptrh, tbl
      +ptru
 17819 ;; Tracked objects:
 17820 ;;		On entry : 0/0
 17821 ;;		On exit  : 0/0
 17822 ;;		Unchanged: 0/0
 17823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17825 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17827 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17828 ;;Total ram usage:        0 bytes
 17829 ;; Hardware stack levels used:    1
 17830 ;; Hardware stack levels required when called:   15
 17831 ;; This function calls:
 17832 ;;		Nothing
 17833 ;; This function is called by:
 17834 ;;		_efgtoa
 17835 ;; This function uses a reentrant model
 17836 ;;
 17837                           
 17838                           	psect	text58
 17839  01A0C6                     __ptext58:
 17840                           	opt callstack 0
 17841  01A0C6                     _strcpy:
 17842                           	opt callstack 0
 17843                           
 17844                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17845  01A0C6  52E6               	movf	postinc1,f,c
 17846  01A0C8  52E6               	movf	postinc1,f,c
 17847  01A0CA  52E6               	movf	postinc1,f,c
 17848  01A0CC  52E6               	movf	postinc1,f,c
 17849                           
 17850                           ;stkvar	_src @ sp[(-4)+-4]
 17851                           
 17852                           ;incstack = 0
 17853 ;; hardware stack exceeded
 17854  01A0CE  0EF8               	movlw	-8
 17855  01A0D0  006F FF8C  F00B    	movff	plusw1,btemp+10
 17856  01A0D6  0EF9               	movlw	-7
 17857  01A0D8  006F FF8C  F00C    	movff	plusw1,btemp+11
 17858                           
 17859                           ;stkvar	_s @ sp[(-4)+2]
 17860  01A0DE  0EFF               	movlw	-1
 17861  01A0E0  0060  F033  FFE3   	movff	btemp+11,plusw1
 17862  01A0E6  0EFE               	movlw	-2
 17863  01A0E8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17864                           
 17865                           ;stkvar	_dest @ sp[(-4)+-2]
 17866  01A0EE  0EFA               	movlw	-6
 17867  01A0F0  006F FF8C  F00B    	movff	plusw1,btemp+10
 17868  01A0F6  0EFB               	movlw	-5
 17869  01A0F8  006F FF8C  F00C    	movff	plusw1,btemp+11
 17870                           
 17871                           ;stkvar	_d @ sp[(-4)+0]
 17872  01A0FE  0EFD               	movlw	-3
 17873  01A100  0060  F033  FFE3   	movff	btemp+11,plusw1
 17874  01A106  0EFC               	movlw	-4
 17875  01A108  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17876  01A10E                     l11687:
 17877                           
 17878                           ;stkvar	_s @ sp[(-4)+2]
 17879  01A10E  50E1               	movf	fsr1l,w,c
 17880  01A110  0FFE               	addlw	-2
 17881  01A112  6ED9               	movwf	fsr2l,c
 17882  01A114  50E2               	movf	fsr1h,w,c
 17883  01A116  6EDA               	movwf	fsr2h,c
 17884  01A118  0EFF               	movlw	255
 17885  01A11A  22DA               	addwfc	fsr2h,f,c
 17886  01A11C  006F FF7C  F00B    	movff	indf2,btemp+10
 17887  01A122  0E01               	movlw	1
 17888  01A124  26DE               	addwf	postinc2,f,c
 17889  01A126  006F FF7C  F00C    	movff	indf2,btemp+11
 17890  01A12C  0E00               	movlw	0
 17891  01A12E  22DD               	addwfc	postdec2,f,c
 17892  01A130  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 17893  01A136  0060  F033  FFF7   	movff	btemp+11,tblptrh
 17894  01A13C  0E00               	movlw	low (__mediumconst shr (0+16))
 17895  01A13E  6EF8               	movwf	tblptru,c
 17896                           
 17897                           ;stkvar	_d @ sp[(-4)+0]
 17898  01A140  50E1               	movf	fsr1l,w,c
 17899  01A142  0FFC               	addlw	-4
 17900  01A144  6ED9               	movwf	fsr2l,c
 17901  01A146  50E2               	movf	fsr1h,w,c
 17902  01A148  6EDA               	movwf	fsr2h,c
 17903  01A14A  0EFF               	movlw	255
 17904  01A14C  22DA               	addwfc	fsr2h,f,c
 17905  01A14E  006F FF7C  F00B    	movff	indf2,btemp+10
 17906  01A154  0E01               	movlw	1
 17907  01A156  26DE               	addwf	postinc2,f,c
 17908  01A158  006F FF7C  F00C    	movff	indf2,btemp+11
 17909  01A15E  0E00               	movlw	0
 17910  01A160  22DD               	addwfc	postdec2,f,c
 17911  01A162  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 17912  01A168  0060  F033  FFDA   	movff	btemp+11,fsr2h
 17913  01A16E  0E1F               	movlw	(high __ramtop+-1)
 17914  01A170  64F7               	cpfsgt	tblptrh,c
 17915  01A172  D003               	bra	u10757
 17916  01A174  0008               	tblrd		*
 17917  01A176  50F5               	movf	tablat,w,c
 17918  01A178  D007               	bra	u10750
 17919  01A17A                     u10757:
 17920  01A17A  006F FFDB FFE9     	movff	tblptrl,fsr0l
 17921  01A180  006F FFDF FFEA     	movff	tblptrh,fsr0h
 17922  01A186  50EF               	movf	indf0,w,c
 17923  01A188                     u10750:
 17924  01A188  6EDF               	movwf	indf2,c
 17925  01A18A  50DF               	movf	indf2,w,c
 17926  01A18C  A4D8               	btfss	status,2,c
 17927  01A18E  D7BF               	goto	l11687
 17928                           
 17929                           ; _strcpy: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 4, vargsize = 0
 17930  01A190  0EF8               	movlw	248
 17931  01A192  26E1               	addwf	fsr1l,f,c
 17932  01A194  0EFF               	movlw	255
 17933  01A196  22E2               	addwfc	fsr1h,f,c
 17934  01A198  0012               	return		;funcret
 17935  01A19A                     __end_of_strcpy:
 17936                           	opt callstack 0
 17937                           
 17938 ;; *************** function _floorf *****************
 17939 ;; Defined at:
 17940 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/floorf.c"
 17941 ;; Parameters:    Size  Location     Type
 17942 ;;  x               4  [STACK] float 
 17943 ;; Auto vars:     Size  Location     Type
 17944 ;;  u               4  [STACK] struct .
 17945 ;;  m               4  [STACK] unsigned long 
 17946 ;;  e               2  [STACK] int 
 17947 ;; Return value:  Size  Location     Type
 17948 ;;                  4  [STACK] float 
 17949 ;; Registers used:
 17950 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 17951 ;; Tracked objects:
 17952 ;;		On entry : 0/0
 17953 ;;		On exit  : 0/0
 17954 ;;		Unchanged: 0/0
 17955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17956 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17957 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17958 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17959 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17960 ;;Total ram usage:        0 bytes
 17961 ;; Hardware stack levels used:    1
 17962 ;; Hardware stack levels required when called:   15
 17963 ;; This function calls:
 17964 ;;		Nothing
 17965 ;; This function is called by:
 17966 ;;		_efgtoa
 17967 ;; This function uses a reentrant model
 17968 ;;
 17969                           
 17970                           	psect	text59
 17971  0161B6                     __ptext59:
 17972                           	opt callstack 0
 17973  0161B6                     _floorf:
 17974                           	opt callstack 0
 17975                           
 17976                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 17977  0161B6  0E0A               	movlw	10
 17978  0161B8  26E1               	addwf	fsr1l,f,c
 17979  0161BA  0E00               	movlw	0
 17980  0161BC  22E2               	addwfc	fsr1h,f,c
 17981                           
 17982                           ;incstack = 0
 17983 ;; hardware stack exceeded
 17984  0161BE  0060  F1E8  F009   	movff	floorf@F524,btemp+8
 17985  0161C4  0060  F1EC  F00A   	movff	floorf@F524+1,btemp+9
 17986  0161CA  0060  F1F0  F00B   	movff	floorf@F524+2,btemp+10
 17987  0161D0  0060  F1F4  F00C   	movff	floorf@F524+3,btemp+11
 17988                           
 17989                           ;stkvar	_u @ sp[(-10)+0]
 17990  0161D6  0EF6               	movlw	-10
 17991  0161D8  0060  F027  FFE3   	movff	btemp+8,plusw1
 17992  0161DE  0EF7               	movlw	-9
 17993  0161E0  0060  F02B  FFE3   	movff	btemp+9,plusw1
 17994  0161E6  0EF8               	movlw	-8
 17995  0161E8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17996  0161EE  0EF9               	movlw	-7
 17997  0161F0  0060  F033  FFE3   	movff	btemp+11,plusw1
 17998                           
 17999                           ;stkvar	_x @ sp[(-10)+-4]
 18000  0161F6  0EF2               	movlw	-14
 18001  0161F8  006F FF8C  F009    	movff	plusw1,btemp+8
 18002  0161FE  0EF3               	movlw	-13
 18003  016200  006F FF8C  F00A    	movff	plusw1,btemp+9
 18004  016206  0EF4               	movlw	-12
 18005  016208  006F FF8C  F00B    	movff	plusw1,btemp+10
 18006  01620E  0EF5               	movlw	-11
 18007  016210  006F FF8C  F00C    	movff	plusw1,btemp+11
 18008                           
 18009                           ;stkvar	_u @ sp[(-10)+0]
 18010  016216  0EF6               	movlw	-10
 18011  016218  0060  F027  FFE3   	movff	btemp+8,plusw1
 18012  01621E  0EF7               	movlw	-9
 18013  016220  0060  F02B  FFE3   	movff	btemp+9,plusw1
 18014  016226  0EF8               	movlw	-8
 18015  016228  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18016  01622E  0EF9               	movlw	-7
 18017  016230  0060  F033  FFE3   	movff	btemp+11,plusw1
 18018  016236  0E81               	movlw	129
 18019  016238  6E0B               	movwf	(btemp+10)^0,c
 18020  01623A  0EFF               	movlw	255
 18021  01623C  6E0C               	movwf	(btemp+11)^0,c
 18022                           
 18023                           ;stkvar	_u @ sp[(-10)+0]
 18024  01623E  0EF6               	movlw	-10
 18025  016240  006F FF8C  F005    	movff	plusw1,btemp+4
 18026  016246  0EF7               	movlw	-9
 18027  016248  006F FF8C  F006    	movff	plusw1,btemp+5
 18028  01624E  0EF8               	movlw	-8
 18029  016250  006F FF8C  F007    	movff	plusw1,btemp+6
 18030  016256  0EF9               	movlw	-7
 18031  016258  006F FF8C  F008    	movff	plusw1,btemp+7
 18032  01625E  0E18               	movlw	24
 18033  016260  D005               	goto	u6040
 18034  016262                     u6045:
 18035  016262  90D8               	bcf	status,0,c
 18036  016264  3208               	rrcf	(btemp+7)^0,f,c
 18037  016266  3207               	rrcf	(btemp+6)^0,f,c
 18038  016268  3206               	rrcf	(btemp+5)^0,f,c
 18039  01626A  3205               	rrcf	(btemp+4)^0,f,c
 18040  01626C                     u6040:
 18041  01626C  2EE8               	decfsz	wreg,f,c
 18042  01626E  D7F9               	goto	u6045
 18043  016270  0060  F014  F009   	movff	btemp+4,btemp+8
 18044  016276  0060  F018  F00A   	movff	btemp+5,btemp+9
 18045  01627C  0EFF               	movlw	255
 18046  01627E  1609               	andwf	(btemp+8)^0,f,c
 18047  016280  0E00               	movlw	0
 18048  016282  160A               	andwf	(btemp+9)^0,f,c
 18049  016284  500B               	movf	(btemp+10)^0,w,c
 18050  016286  2609               	addwf	(btemp+8)^0,f,c
 18051  016288  500C               	movf	(btemp+11)^0,w,c
 18052  01628A  220A               	addwfc	(btemp+9)^0,f,c
 18053                           
 18054                           ;stkvar	_e @ sp[(-10)+8]
 18055  01628C  0EFE               	movlw	-2
 18056  01628E  0060  F027  FFE3   	movff	btemp+8,plusw1
 18057  016294  0EFF               	movlw	-1
 18058  016296  0060  F02B  FFE3   	movff	btemp+9,plusw1
 18059                           
 18060                           ;stkvar	_e @ sp[(-10)+8]
 18061  01629C  0EFF               	movlw	-1
 18062  01629E  BEE3               	btfsc	plusw1,7,c
 18063  0162A0  D019               	goto	l7943
 18064  0162A2  0EFF               	movlw	-1
 18065  0162A4  50E3               	movf	plusw1,w,c
 18066  0162A6  E108               	bnz	u6050
 18067  0162A8  0EFE               	movlw	-2
 18068  0162AA  006F FF8C  F001    	movff	plusw1,btemp
 18069  0162B0  0E17               	movlw	23
 18070  0162B2  5E01               	subwf	btemp^0,f,c
 18071  0162B4  A0D8               	btfss	status,0,c
 18072  0162B6  D00E               	goto	l7943
 18073  0162B8                     u6050:
 18074                           
 18075                           ;stkvar	_x @ sp[(-10)+-4]
 18076  0162B8  0EF2               	movlw	-14
 18077  0162BA  006F FF8C  F001    	movff	plusw1,btemp
 18078  0162C0  0EF3               	movlw	-13
 18079  0162C2  006F FF8C  F002    	movff	plusw1,btemp+1
 18080  0162C8  0EF4               	movlw	-12
 18081  0162CA  006F FF8C  F003    	movff	plusw1,btemp+2
 18082  0162D0  0EF5               	movlw	-11
 18083  0162D2  D11F               	goto	L20
 18084  0162D4                     l7943:
 18085                           
 18086                           ;stkvar	_e @ sp[(-10)+8]
 18087  0162D4  0EFF               	movlw	-1
 18088  0162D6  BEE3               	btfsc	plusw1,7,c
 18089  0162D8  D0B4               	goto	l7959
 18090                           
 18091                           ;stkvar	_e @ sp[(-10)+8]
 18092  0162DA  0EFE               	movlw	-2
 18093  0162DC  006F FF8C  F00C    	movff	plusw1,btemp+11
 18094  0162E2  0EFF               	movlw	255
 18095  0162E4  6E05               	movwf	(btemp+4)^0,c
 18096  0162E6  0EFF               	movlw	255
 18097  0162E8  6E06               	movwf	(btemp+5)^0,c
 18098  0162EA  0E7F               	movlw	127
 18099  0162EC  6E07               	movwf	(btemp+6)^0,c
 18100  0162EE  0E00               	movlw	0
 18101  0162F0  6E08               	movwf	(btemp+7)^0,c
 18102  0162F2                     u6075:
 18103  0162F2  660C               	tstfsz	(btemp+11)^0,c
 18104  0162F4  D001               	goto	u6076
 18105  0162F6  D007               	goto	u6077
 18106  0162F8                     u6076:
 18107  0162F8  3408               	rlcf	(btemp+7)^0,w,c
 18108  0162FA  3208               	rrcf	(btemp+7)^0,f,c
 18109  0162FC  3207               	rrcf	(btemp+6)^0,f,c
 18110  0162FE  3206               	rrcf	(btemp+5)^0,f,c
 18111  016300  3205               	rrcf	(btemp+4)^0,f,c
 18112  016302  2E0C               	decfsz	(btemp+11)^0,f,c
 18113  016304  D7F6               	goto	u6075
 18114  016306                     u6077:
 18115                           
 18116                           ;stkvar	_m @ sp[(-10)+4]
 18117  016306  0EFA               	movlw	-6
 18118  016308  0060  F017  FFE3   	movff	btemp+4,plusw1
 18119  01630E  0EFB               	movlw	-5
 18120  016310  0060  F01B  FFE3   	movff	btemp+5,plusw1
 18121  016316  0EFC               	movlw	-4
 18122  016318  0060  F01F  FFE3   	movff	btemp+6,plusw1
 18123  01631E  0EFD               	movlw	-3
 18124  016320  0060  F023  FFE3   	movff	btemp+7,plusw1
 18125                           
 18126                           ;stkvar	_m @ sp[(-10)+4]
 18127                           ;stkvar	_u @ sp[(-10)+0]
 18128  016326  0EF6               	movlw	-10
 18129  016328  006F FF8C  F009    	movff	plusw1,btemp+8
 18130  01632E  0EF7               	movlw	-9
 18131  016330  006F FF8C  F00A    	movff	plusw1,btemp+9
 18132  016336  0EF8               	movlw	-8
 18133  016338  006F FF8C  F00B    	movff	plusw1,btemp+10
 18134  01633E  0EF9               	movlw	-7
 18135  016340  006F FF8C  F00C    	movff	plusw1,btemp+11
 18136  016346  0EFA               	movlw	-6
 18137  016348  50E3               	movf	plusw1,w,c
 18138  01634A  1609               	andwf	(btemp+8)^0,f,c
 18139  01634C  0EFB               	movlw	-5
 18140  01634E  50E3               	movf	plusw1,w,c
 18141  016350  160A               	andwf	(btemp+9)^0,f,c
 18142  016352  0EFC               	movlw	-4
 18143  016354  50E3               	movf	plusw1,w,c
 18144  016356  160B               	andwf	(btemp+10)^0,f,c
 18145  016358  0EFD               	movlw	-3
 18146  01635A  50E3               	movf	plusw1,w,c
 18147  01635C  160C               	andwf	(btemp+11)^0,f,c
 18148  01635E  5009               	movf	(btemp+8)^0,w,c
 18149  016360  100A               	iorwf	(btemp+9)^0,w,c
 18150  016362  100B               	iorwf	(btemp+10)^0,w,c
 18151  016364  100C               	iorwf	(btemp+11)^0,w,c
 18152  016366  B4D8               	btfsc	status,2,c
 18153  016368  D7A7               	goto	u6050
 18154                           
 18155                           ;stkvar	_u @ sp[(-10)+0]
 18156  01636A  0EF6               	movlw	-10
 18157  01636C  006F FF8C  F009    	movff	plusw1,btemp+8
 18158  016372  0EF7               	movlw	-9
 18159  016374  006F FF8C  F00A    	movff	plusw1,btemp+9
 18160  01637A  0EF8               	movlw	-8
 18161  01637C  006F FF8C  F00B    	movff	plusw1,btemp+10
 18162  016382  0EF9               	movlw	-7
 18163  016384  006F FF8C  F00C    	movff	plusw1,btemp+11
 18164  01638A  0E20               	movlw	32
 18165  01638C  D005               	goto	u6090
 18166  01638E                     u6095:
 18167  01638E  90D8               	bcf	status,0,c
 18168  016390  320C               	rrcf	(btemp+11)^0,f,c
 18169  016392  320B               	rrcf	(btemp+10)^0,f,c
 18170  016394  320A               	rrcf	(btemp+9)^0,f,c
 18171  016396  3209               	rrcf	(btemp+8)^0,f,c
 18172  016398                     u6090:
 18173  016398  2EE8               	decfsz	wreg,f,c
 18174  01639A  D7F9               	goto	u6095
 18175  01639C  5009               	movf	(btemp+8)^0,w,c
 18176  01639E  B4D8               	btfsc	status,2,c
 18177  0163A0  D028               	goto	l7957
 18178                           
 18179                           ;stkvar	_m @ sp[(-10)+4]
 18180                           ;stkvar	_u @ sp[(-10)+0]
 18181  0163A2  0EF6               	movlw	-10
 18182  0163A4  50E3               	movf	plusw1,w,c
 18183  0163A6  6E01               	movwf	btemp^0,c
 18184  0163A8  0EFA               	movlw	-6
 18185  0163AA  50E3               	movf	plusw1,w,c
 18186  0163AC  2601               	addwf	btemp^0,f,c
 18187  0163AE  0EF6               	movlw	-10
 18188  0163B0  0060  F007  FFE3   	movff	btemp,plusw1
 18189  0163B6  0EF7               	movlw	-9
 18190  0163B8  50E3               	movf	plusw1,w,c
 18191  0163BA  6E01               	movwf	btemp^0,c
 18192  0163BC  0EFB               	movlw	-5
 18193  0163BE  50E3               	movf	plusw1,w,c
 18194  0163C0  2201               	addwfc	btemp^0,f,c
 18195  0163C2  0EF7               	movlw	-9
 18196  0163C4  0060  F007  FFE3   	movff	btemp,plusw1
 18197  0163CA  0EF8               	movlw	-8
 18198  0163CC  50E3               	movf	plusw1,w,c
 18199  0163CE  6E01               	movwf	btemp^0,c
 18200  0163D0  0EFC               	movlw	-4
 18201  0163D2  50E3               	movf	plusw1,w,c
 18202  0163D4  2201               	addwfc	btemp^0,f,c
 18203  0163D6  0EF8               	movlw	-8
 18204  0163D8  0060  F007  FFE3   	movff	btemp,plusw1
 18205  0163DE  0EF9               	movlw	-7
 18206  0163E0  50E3               	movf	plusw1,w,c
 18207  0163E2  6E01               	movwf	btemp^0,c
 18208  0163E4  0EFD               	movlw	-3
 18209  0163E6  50E3               	movf	plusw1,w,c
 18210  0163E8  2201               	addwfc	btemp^0,f,c
 18211  0163EA  0EF9               	movlw	-7
 18212  0163EC  0060  F007  FFE3   	movff	btemp,plusw1
 18213  0163F2                     l7957:
 18214                           
 18215                           ;stkvar	_m @ sp[(-10)+4]
 18216  0163F2  0EFA               	movlw	-6
 18217  0163F4  006F FF8C  F009    	movff	plusw1,btemp+8
 18218  0163FA  0EFB               	movlw	-5
 18219  0163FC  006F FF8C  F00A    	movff	plusw1,btemp+9
 18220  016402  0EFC               	movlw	-4
 18221  016404  006F FF8C  F00B    	movff	plusw1,btemp+10
 18222  01640A  0EFD               	movlw	-3
 18223  01640C  006F FF8C  F00C    	movff	plusw1,btemp+11
 18224  016412  1C09               	comf	(btemp+8)^0,w,c
 18225  016414  6E05               	movwf	(btemp+4)^0,c
 18226  016416  1C0A               	comf	(btemp+9)^0,w,c
 18227  016418  6E06               	movwf	(btemp+5)^0,c
 18228  01641A  1C0B               	comf	(btemp+10)^0,w,c
 18229  01641C  6E07               	movwf	(btemp+6)^0,c
 18230  01641E  1C0C               	comf	(btemp+11)^0,w,c
 18231  016420  6E08               	movwf	(btemp+7)^0,c
 18232                           
 18233                           ;stkvar	_u @ sp[(-10)+0]
 18234  016422  50E1               	movf	fsr1l,w,c
 18235  016424  0FF6               	addlw	-10
 18236  016426  6ED9               	movwf	fsr2l,c
 18237  016428  50E2               	movf	fsr1h,w,c
 18238  01642A  6EDA               	movwf	fsr2h,c
 18239  01642C  0EFF               	movlw	255
 18240  01642E  22DA               	addwfc	fsr2h,f,c
 18241  016430  5005               	movf	(btemp+4)^0,w,c
 18242  016432  16DE               	andwf	postinc2,f,c
 18243  016434  5006               	movf	(btemp+5)^0,w,c
 18244  016436  16DE               	andwf	postinc2,f,c
 18245  016438  5007               	movf	(btemp+6)^0,w,c
 18246  01643A  16DE               	andwf	postinc2,f,c
 18247  01643C  5008               	movf	(btemp+7)^0,w,c
 18248  01643E  16DE               	andwf	postinc2,f,c
 18249  016440  D05B               	goto	l7967
 18250  016442                     l7959:
 18251                           
 18252                           ;stkvar	_u @ sp[(-10)+0]
 18253  016442  0EF6               	movlw	-10
 18254  016444  006F FF8C  F009    	movff	plusw1,btemp+8
 18255  01644A  0EF7               	movlw	-9
 18256  01644C  006F FF8C  F00A    	movff	plusw1,btemp+9
 18257  016452  0EF8               	movlw	-8
 18258  016454  006F FF8C  F00B    	movff	plusw1,btemp+10
 18259  01645A  0EF9               	movlw	-7
 18260  01645C  006F FF8C  F00C    	movff	plusw1,btemp+11
 18261  016462  0E20               	movlw	32
 18262  016464  D005               	goto	u6110
 18263  016466                     u6115:
 18264  016466  90D8               	bcf	status,0,c
 18265  016468  320C               	rrcf	(btemp+11)^0,f,c
 18266  01646A  320B               	rrcf	(btemp+10)^0,f,c
 18267  01646C  320A               	rrcf	(btemp+9)^0,f,c
 18268  01646E  3209               	rrcf	(btemp+8)^0,f,c
 18269  016470                     u6110:
 18270  016470  2EE8               	decfsz	wreg,f,c
 18271  016472  D7F9               	goto	u6115
 18272  016474  6609               	tstfsz	(btemp+8)^0,c
 18273  016476  D009               	goto	l7963
 18274                           
 18275                           ;stkvar	_u @ sp[(-10)+0]
 18276  016478  0EF6               	movlw	-10
 18277  01647A  6AE3               	clrf	plusw1,c
 18278  01647C  0EF7               	movlw	-9
 18279  01647E  6AE3               	clrf	plusw1,c
 18280  016480  0EF8               	movlw	-8
 18281  016482  6AE3               	clrf	plusw1,c
 18282  016484  0EF9               	movlw	-7
 18283  016486  6AE3               	clrf	plusw1,c
 18284  016488  D037               	goto	l7967
 18285  01648A                     l7963:
 18286                           
 18287                           ;stkvar	_u @ sp[(-10)+0]
 18288  01648A  0EF6               	movlw	-10
 18289  01648C  006F FF8C  F009    	movff	plusw1,btemp+8
 18290  016492  0EF7               	movlw	-9
 18291  016494  006F FF8C  F00A    	movff	plusw1,btemp+9
 18292  01649A  0EF8               	movlw	-8
 18293  01649C  006F FF8C  F00B    	movff	plusw1,btemp+10
 18294  0164A2  0EF9               	movlw	-7
 18295  0164A4  006F FF8C  F00C    	movff	plusw1,btemp+11
 18296  0164AA  90D8               	bcf	status,0,c
 18297  0164AC  3409               	rlcf	(btemp+8)^0,w,c
 18298  0164AE  6E05               	movwf	(btemp+4)^0,c
 18299  0164B0  340A               	rlcf	(btemp+9)^0,w,c
 18300  0164B2  6E06               	movwf	(btemp+5)^0,c
 18301  0164B4  340B               	rlcf	(btemp+10)^0,w,c
 18302  0164B6  6E07               	movwf	(btemp+6)^0,c
 18303  0164B8  340C               	rlcf	(btemp+11)^0,w,c
 18304  0164BA  6E08               	movwf	(btemp+7)^0,c
 18305  0164BC  5005               	movf	(btemp+4)^0,w,c
 18306  0164BE  1006               	iorwf	(btemp+5)^0,w,c
 18307  0164C0  1007               	iorwf	(btemp+6)^0,w,c
 18308  0164C2  1008               	iorwf	(btemp+7)^0,w,c
 18309  0164C4  B4D8               	btfsc	status,2,c
 18310  0164C6  D018               	goto	l7967
 18311  0164C8  0E00               	movlw	0
 18312  0164CA  6E09               	movwf	(btemp+8)^0,c
 18313  0164CC  0E00               	movlw	0
 18314  0164CE  6E0A               	movwf	(btemp+9)^0,c
 18315  0164D0  0E80               	movlw	128
 18316  0164D2  6E0B               	movwf	(btemp+10)^0,c
 18317  0164D4  0EBF               	movlw	191
 18318  0164D6  6E0C               	movwf	(btemp+11)^0,c
 18319                           
 18320                           ;stkvar	_u @ sp[(-10)+0]
 18321  0164D8  0EF6               	movlw	-10
 18322  0164DA  0060  F027  FFE3   	movff	btemp+8,plusw1
 18323  0164E0  0EF7               	movlw	-9
 18324  0164E2  0060  F02B  FFE3   	movff	btemp+9,plusw1
 18325  0164E8  0EF8               	movlw	-8
 18326  0164EA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18327  0164F0  0EF9               	movlw	-7
 18328  0164F2  0060  F033  FFE3   	movff	btemp+11,plusw1
 18329  0164F8                     l7967:
 18330                           
 18331                           ;stkvar	_u @ sp[(-10)+0]
 18332  0164F8  0EF6               	movlw	-10
 18333  0164FA  006F FF8C  F001    	movff	plusw1,btemp
 18334  016500  0EF7               	movlw	-9
 18335  016502  006F FF8C  F002    	movff	plusw1,btemp+1
 18336  016508  0EF8               	movlw	-8
 18337  01650A  006F FF8C  F003    	movff	plusw1,btemp+2
 18338  016510  0EF9               	movlw	-7
 18339  016512                     L20:
 18340  016512  006F FF8C  F004    	movff	plusw1,btemp+3
 18341                           
 18342                           ; _floorf: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 18343  016518  0EF2               	movlw	242
 18344  01651A  26E1               	addwf	fsr1l,f,c
 18345  01651C  0EFF               	movlw	255
 18346  01651E  22E2               	addwfc	fsr1h,f,c
 18347  016520  0012               	return		;funcret
 18348  016522                     __end_of_floorf:
 18349                           	opt callstack 0
 18350                           
 18351 ;; *************** function ___fpclassifyf *****************
 18352 ;; Defined at:
 18353 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__fpclassifyf.c"
 18354 ;; Parameters:    Size  Location     Type
 18355 ;;  x               4  [STACK] float 
 18356 ;; Auto vars:     Size  Location     Type
 18357 ;;  u               4  [STACK] struct .
 18358 ;;  e               2  [STACK] int 
 18359 ;; Return value:  Size  Location     Type
 18360 ;;                  2  [STACK] int 
 18361 ;; Registers used:
 18362 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+
      +10, btemp+11, prodl
 18363 ;; Tracked objects:
 18364 ;;		On entry : 0/0
 18365 ;;		On exit  : 0/0
 18366 ;;		Unchanged: 0/0
 18367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18368 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18369 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18370 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18371 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18372 ;;Total ram usage:        0 bytes
 18373 ;; Hardware stack levels used:    1
 18374 ;; Hardware stack levels required when called:   15
 18375 ;; This function calls:
 18376 ;;		Nothing
 18377 ;; This function is called by:
 18378 ;;		_efgtoa
 18379 ;; This function uses a reentrant model
 18380 ;;
 18381                           
 18382                           	psect	text60
 18383  0186F4                     __ptext60:
 18384                           	opt callstack 0
 18385  0186F4                     ___fpclassifyf:
 18386                           	opt callstack 0
 18387                           
 18388                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18389  0186F4  0E06               	movlw	6
 18390  0186F6  26E1               	addwf	fsr1l,f,c
 18391  0186F8  0E00               	movlw	0
 18392  0186FA  22E2               	addwfc	fsr1h,f,c
 18393                           
 18394                           ;incstack = 0
 18395 ;; hardware stack exceeded
 18396  0186FC  0060  F208  F009   	movff	___fpclassifyf@F463,btemp+8
 18397  018702  0060  F20C  F00A   	movff	___fpclassifyf@F463+1,btemp+9
 18398  018708  0060  F210  F00B   	movff	___fpclassifyf@F463+2,btemp+10
 18399  01870E  0060  F214  F00C   	movff	___fpclassifyf@F463+3,btemp+11
 18400                           
 18401                           ;stkvar	_u @ sp[(-6)+0]
 18402  018714  0EFA               	movlw	-6
 18403  018716  0060  F027  FFE3   	movff	btemp+8,plusw1
 18404  01871C  0EFB               	movlw	-5
 18405  01871E  0060  F02B  FFE3   	movff	btemp+9,plusw1
 18406  018724  0EFC               	movlw	-4
 18407  018726  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18408  01872C  0EFD               	movlw	-3
 18409  01872E  0060  F033  FFE3   	movff	btemp+11,plusw1
 18410                           
 18411                           ;stkvar	_x @ sp[(-6)+-4]
 18412  018734  0EF6               	movlw	-10
 18413  018736  006F FF8C  F009    	movff	plusw1,btemp+8
 18414  01873C  0EF7               	movlw	-9
 18415  01873E  006F FF8C  F00A    	movff	plusw1,btemp+9
 18416  018744  0EF8               	movlw	-8
 18417  018746  006F FF8C  F00B    	movff	plusw1,btemp+10
 18418  01874C  0EF9               	movlw	-7
 18419  01874E  006F FF8C  F00C    	movff	plusw1,btemp+11
 18420                           
 18421                           ;stkvar	_u @ sp[(-6)+0]
 18422  018754  0EFA               	movlw	-6
 18423  018756  0060  F027  FFE3   	movff	btemp+8,plusw1
 18424  01875C  0EFB               	movlw	-5
 18425  01875E  0060  F02B  FFE3   	movff	btemp+9,plusw1
 18426  018764  0EFC               	movlw	-4
 18427  018766  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18428  01876C  0EFD               	movlw	-3
 18429  01876E  0060  F033  FFE3   	movff	btemp+11,plusw1
 18430                           
 18431                           ;stkvar	_u @ sp[(-6)+0]
 18432  018774  0EFA               	movlw	-6
 18433  018776  006F FF8C  F009    	movff	plusw1,btemp+8
 18434  01877C  0EFB               	movlw	-5
 18435  01877E  006F FF8C  F00A    	movff	plusw1,btemp+9
 18436  018784  0EFC               	movlw	-4
 18437  018786  006F FF8C  F00B    	movff	plusw1,btemp+10
 18438  01878C  0EFD               	movlw	-3
 18439  01878E  006F FF8C  F00C    	movff	plusw1,btemp+11
 18440  018794  0E18               	movlw	24
 18441  018796  D005               	goto	u5920
 18442  018798                     u5925:
 18443  018798  90D8               	bcf	status,0,c
 18444  01879A  320C               	rrcf	(btemp+11)^0,f,c
 18445  01879C  320B               	rrcf	(btemp+10)^0,f,c
 18446  01879E  320A               	rrcf	(btemp+9)^0,f,c
 18447  0187A0  3209               	rrcf	(btemp+8)^0,f,c
 18448  0187A2                     u5920:
 18449  0187A2  2EE8               	decfsz	wreg,f,c
 18450  0187A4  D7F9               	goto	u5925
 18451  0187A6  0060  F024  F007   	movff	btemp+8,btemp+6
 18452  0187AC  0060  F028  F008   	movff	btemp+9,btemp+7
 18453  0187B2  0EFF               	movlw	255
 18454  0187B4  1607               	andwf	(btemp+6)^0,f,c
 18455  0187B6  0E00               	movlw	0
 18456  0187B8  1608               	andwf	(btemp+7)^0,f,c
 18457                           
 18458                           ;stkvar	_e @ sp[(-6)+4]
 18459  0187BA  0EFE               	movlw	-2
 18460  0187BC  0060  F01F  FFE3   	movff	btemp+6,plusw1
 18461  0187C2  0EFF               	movlw	-1
 18462  0187C4  0060  F023  FFE3   	movff	btemp+7,plusw1
 18463                           
 18464                           ;stkvar	_e @ sp[(-6)+4]
 18465  0187CA  0EFE               	movlw	-2
 18466  0187CC  006F FF8C  F001    	movff	plusw1,btemp
 18467  0187D2  0EFF               	movlw	-1
 18468  0187D4  50E3               	movf	plusw1,w,c
 18469  0187D6  1001               	iorwf	btemp^0,w,c
 18470  0187D8  A4D8               	btfss	status,2,c
 18471  0187DA  D023               	goto	l7905
 18472                           
 18473                           ;stkvar	_u @ sp[(-6)+0]
 18474  0187DC  0EFA               	movlw	-6
 18475  0187DE  006F FF8C  F009    	movff	plusw1,btemp+8
 18476  0187E4  0EFB               	movlw	-5
 18477  0187E6  006F FF8C  F00A    	movff	plusw1,btemp+9
 18478  0187EC  0EFC               	movlw	-4
 18479  0187EE  006F FF8C  F00B    	movff	plusw1,btemp+10
 18480  0187F4  0EFD               	movlw	-3
 18481  0187F6  006F FF8C  F00C    	movff	plusw1,btemp+11
 18482  0187FC  90D8               	bcf	status,0,c
 18483  0187FE  3409               	rlcf	(btemp+8)^0,w,c
 18484  018800  6E05               	movwf	(btemp+4)^0,c
 18485  018802  340A               	rlcf	(btemp+9)^0,w,c
 18486  018804  6E06               	movwf	(btemp+5)^0,c
 18487  018806  340B               	rlcf	(btemp+10)^0,w,c
 18488  018808  6E07               	movwf	(btemp+6)^0,c
 18489  01880A  340C               	rlcf	(btemp+11)^0,w,c
 18490  01880C  6E08               	movwf	(btemp+7)^0,c
 18491  01880E  5005               	movf	(btemp+4)^0,w,c
 18492  018810  1006               	iorwf	(btemp+5)^0,w,c
 18493  018812  1007               	iorwf	(btemp+6)^0,w,c
 18494  018814  1008               	iorwf	(btemp+7)^0,w,c
 18495  018816  A4D8               	btfss	status,2,c
 18496  018818  D002               	goto	l7901
 18497  01881A  0E02               	movlw	2
 18498  01881C  D02E               	goto	L21
 18499  01881E                     l7901:
 18500  01881E  0E03               	movlw	3
 18501  018820  D02C               	goto	L21
 18502  018822                     l7905:
 18503                           
 18504                           ;stkvar	_e @ sp[(-6)+4]
 18505  018822  0EFE               	movlw	-2
 18506  018824  28E3               	incf	plusw1,w,c
 18507  018826  E128               	bnz	l7911
 18508  018828  0EFF               	movlw	-1
 18509  01882A  50E3               	movf	plusw1,w,c
 18510  01882C  A4D8               	btfss	status,2,c
 18511  01882E  D024               	goto	l7911
 18512                           
 18513                           ;stkvar	_u @ sp[(-6)+0]
 18514  018830  0EFA               	movlw	-6
 18515  018832  006F FF8C  F009    	movff	plusw1,btemp+8
 18516  018838  0EFB               	movlw	-5
 18517  01883A  006F FF8C  F00A    	movff	plusw1,btemp+9
 18518  018840  0EFC               	movlw	-4
 18519  018842  006F FF8C  F00B    	movff	plusw1,btemp+10
 18520  018848  0EFD               	movlw	-3
 18521  01884A  006F FF8C  F00C    	movff	plusw1,btemp+11
 18522  018850  0E09               	movlw	9
 18523  018852                     u5965:
 18524  018852  90D8               	bcf	status,0,c
 18525  018854  3609               	rlcf	(btemp+8)^0,f,c
 18526  018856  360A               	rlcf	(btemp+9)^0,f,c
 18527  018858  360B               	rlcf	(btemp+10)^0,f,c
 18528  01885A  360C               	rlcf	(btemp+11)^0,f,c
 18529  01885C  2EE8               	decfsz	wreg,f,c
 18530  01885E  D7F9               	goto	u5965
 18531  018860  5009               	movf	(btemp+8)^0,w,c
 18532  018862  100A               	iorwf	(btemp+9)^0,w,c
 18533  018864  100B               	iorwf	(btemp+10)^0,w,c
 18534  018866  100C               	iorwf	(btemp+11)^0,w,c
 18535  018868  A4D8               	btfss	status,2,c
 18536  01886A  D002               	goto	u5970
 18537  01886C  0E01               	movlw	1
 18538  01886E  D001               	goto	u5980
 18539  018870                     u5970:
 18540  018870  0E00               	movlw	0
 18541  018872                     u5980:
 18542  018872  6E01               	movwf	btemp^0,c
 18543  018874  6A02               	clrf	(btemp+1)^0,c
 18544  018876  D004               	goto	l3081
 18545  018878                     l7911:
 18546  018878  0E04               	movlw	4
 18547  01887A                     L21:
 18548  01887A  6E01               	movwf	btemp^0,c
 18549  01887C  0E00               	movlw	0
 18550  01887E  6E02               	movwf	(btemp+1)^0,c
 18551  018880                     l3081:
 18552                           
 18553                           ; ___fpclassifyf: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4,
      +                           argsize = 4, vargsize = 0
 18554  018880  0EF6               	movlw	246
 18555  018882  26E1               	addwf	fsr1l,f,c
 18556  018884  0EFF               	movlw	255
 18557  018886  22E2               	addwfc	fsr1h,f,c
 18558  018888  0012               	return		;funcret
 18559  01888A                     __end_of___fpclassifyf:
 18560                           	opt callstack 0
 18561                           
 18562 ;; *************** function ___fltol *****************
 18563 ;; Defined at:
 18564 ;;		line 43 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fltol.c"
 18565 ;; Parameters:    Size  Location     Type
 18566 ;;  f1              4  [STACK] int 
 18567 ;; Auto vars:     Size  Location     Type
 18568 ;;  exp1            1  [STACK] unsigned char 
 18569 ;;  sign1           1  [STACK] unsigned char 
 18570 ;; Return value:  Size  Location     Type
 18571 ;;                  4  [STACK] long 
 18572 ;; Registers used:
 18573 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 18574 ;; Tracked objects:
 18575 ;;		On entry : 0/0
 18576 ;;		On exit  : 0/0
 18577 ;;		Unchanged: 0/0
 18578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18579 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18580 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18581 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18582 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18583 ;;Total ram usage:        0 bytes
 18584 ;; Hardware stack levels used:    1
 18585 ;; Hardware stack levels required when called:   15
 18586 ;; This function calls:
 18587 ;;		Nothing
 18588 ;; This function is called by:
 18589 ;;		_main
 18590 ;;		_calc_bsoc
 18591 ;;		_init_bsoc
 18592 ;;		_Volts_to_SOC
 18593 ;;		_efgtoa
 18594 ;; This function uses a reentrant model
 18595 ;;
 18596                           
 18597                           	psect	text61
 18598  018B90                     __ptext61:
 18599                           	opt callstack 0
 18600  018B90                     ___fltol:
 18601                           	opt callstack 0
 18602                           
 18603                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18604  018B90  52E6               	movf	postinc1,f,c
 18605  018B92  52E6               	movf	postinc1,f,c
 18606                           
 18607                           ;stkvar	_f1 @ sp[(-2)+-4]
 18608                           
 18609                           ;incstack = 0
 18610 ;; hardware stack exceeded
 18611  018B94  0EFA               	movlw	-6
 18612  018B96  006F FF8C  F009    	movff	plusw1,btemp+8
 18613  018B9C  0EFB               	movlw	-5
 18614  018B9E  006F FF8C  F00A    	movff	plusw1,btemp+9
 18615  018BA4  0EFC               	movlw	-4
 18616  018BA6  006F FF8C  F00B    	movff	plusw1,btemp+10
 18617  018BAC  0EFD               	movlw	-3
 18618  018BAE  006F FF8C  F00C    	movff	plusw1,btemp+11
 18619  018BB4  0E18               	movlw	24
 18620  018BB6  D005               	goto	u7130
 18621  018BB8                     u7135:
 18622  018BB8  90D8               	bcf	status,0,c
 18623  018BBA  320C               	rrcf	(btemp+11)^0,f,c
 18624  018BBC  320B               	rrcf	(btemp+10)^0,f,c
 18625  018BBE  320A               	rrcf	(btemp+9)^0,f,c
 18626  018BC0  3209               	rrcf	(btemp+8)^0,f,c
 18627  018BC2                     u7130:
 18628  018BC2  2EE8               	decfsz	wreg,f,c
 18629  018BC4  D7F9               	goto	u7135
 18630                           
 18631                           ;stkvar	_exp1 @ sp[(-2)+0]
 18632  018BC6  0EFE               	movlw	-2
 18633  018BC8  0060  F027  FFE3   	movff	btemp+8,plusw1
 18634  018BCE  0EFE               	movlw	-2
 18635  018BD0  50E3               	movf	plusw1,w,c
 18636  018BD2  A4D8               	btfss	status,2,c
 18637  018BD4  D006               	goto	l8531
 18638  018BD6                     u7140:
 18639  018BD6  0E00               	movlw	0
 18640  018BD8  6E01               	movwf	btemp^0,c
 18641  018BDA  6A02               	clrf	(btemp+1)^0,c
 18642  018BDC  6A03               	clrf	(btemp+2)^0,c
 18643  018BDE  6A04               	clrf	(btemp+3)^0,c
 18644  018BE0  D08B               	goto	l2697
 18645  018BE2                     l8531:
 18646                           
 18647                           ;stkvar	_f1 @ sp[(-2)+-4]
 18648  018BE2  0EFA               	movlw	-6
 18649  018BE4  006F FF8C  F009    	movff	plusw1,btemp+8
 18650  018BEA  0EFB               	movlw	-5
 18651  018BEC  006F FF8C  F00A    	movff	plusw1,btemp+9
 18652  018BF2  0EFC               	movlw	-4
 18653  018BF4  006F FF8C  F00B    	movff	plusw1,btemp+10
 18654  018BFA  0EFD               	movlw	-3
 18655  018BFC  006F FF8C  F00C    	movff	plusw1,btemp+11
 18656  018C02  0E20               	movlw	32
 18657  018C04  D005               	goto	u7150
 18658  018C06                     u7155:
 18659  018C06  90D8               	bcf	status,0,c
 18660  018C08  320C               	rrcf	(btemp+11)^0,f,c
 18661  018C0A  320B               	rrcf	(btemp+10)^0,f,c
 18662  018C0C  320A               	rrcf	(btemp+9)^0,f,c
 18663  018C0E  3209               	rrcf	(btemp+8)^0,f,c
 18664  018C10                     u7150:
 18665  018C10  2EE8               	decfsz	wreg,f,c
 18666  018C12  D7F9               	goto	u7155
 18667                           
 18668                           ;stkvar	_sign1 @ sp[(-2)+1]
 18669  018C14  0EFF               	movlw	-1
 18670  018C16  0060  F027  FFE3   	movff	btemp+8,plusw1
 18671                           
 18672                           ;stkvar	_f1 @ sp[(-2)+-4]
 18673  018C1C  0EFC               	movlw	-4
 18674  018C1E  8EE3               	bsf	plusw1,7,c
 18675                           
 18676                           ;stkvar	_f1 @ sp[(-2)+-4]
 18677  018C20  50E1               	movf	fsr1l,w,c
 18678  018C22  0FFA               	addlw	-6
 18679  018C24  6ED9               	movwf	fsr2l,c
 18680  018C26  50E2               	movf	fsr1h,w,c
 18681  018C28  6EDA               	movwf	fsr2h,c
 18682  018C2A  0EFF               	movlw	255
 18683  018C2C  22DA               	addwfc	fsr2h,f,c
 18684  018C2E  0EFF               	movlw	255
 18685  018C30  16DE               	andwf	postinc2,f,c
 18686  018C32  0EFF               	movlw	255
 18687  018C34  16DE               	andwf	postinc2,f,c
 18688  018C36  0EFF               	movlw	255
 18689  018C38  16DE               	andwf	postinc2,f,c
 18690  018C3A  0E00               	movlw	0
 18691  018C3C  16DE               	andwf	postinc2,f,c
 18692                           
 18693                           ;stkvar	_exp1 @ sp[(-2)+0]
 18694  018C3E  0EFE               	movlw	-2
 18695  018C40  006F FF8C  F001    	movff	plusw1,btemp
 18696  018C46  0E96               	movlw	150
 18697  018C48  5E01               	subwf	btemp^0,f,c
 18698  018C4A  0EFE               	movlw	-2
 18699  018C4C  0060  F007  FFE3   	movff	btemp,plusw1
 18700                           
 18701                           ;stkvar	_exp1 @ sp[(-2)+0]
 18702  018C52  0EFE               	movlw	-2
 18703  018C54  AEE3               	btfss	plusw1,7,c
 18704  018C56  D014               	goto	l8549
 18705                           
 18706                           ;stkvar	_exp1 @ sp[(-2)+0]
 18707  018C58  0EFE               	movlw	-2
 18708  018C5A  50E3               	movf	plusw1,w,c
 18709  018C5C  0A80               	xorlw	128
 18710  018C5E  0F97               	addlw	151
 18711  018C60  A0D8               	btfss	status,0,c
 18712  018C62  D7B9               	goto	u7140
 18713  018C64                     l8547:
 18714                           
 18715                           ;stkvar	_f1 @ sp[(-2)+-4]
 18716  018C64  90D8               	bcf	status,0,c
 18717  018C66  0EFD               	movlw	-3
 18718  018C68  32E3               	rrcf	plusw1,f,c
 18719  018C6A  0EFC               	movlw	-4
 18720  018C6C  32E3               	rrcf	plusw1,f,c
 18721  018C6E  0EFB               	movlw	-5
 18722  018C70  32E3               	rrcf	plusw1,f,c
 18723  018C72  0EFA               	movlw	-6
 18724  018C74  32E3               	rrcf	plusw1,f,c
 18725                           
 18726                           ;stkvar	_exp1 @ sp[(-2)+0]
 18727  018C76  0EFE               	movlw	-2
 18728  018C78  2AE3               	incf	plusw1,f,c
 18729  018C7A  B4D8               	btfsc	status,2,c
 18730  018C7C  D018               	goto	u7200
 18731  018C7E  D7F2               	goto	l8547
 18732  018C80                     l8549:
 18733                           
 18734                           ;stkvar	_exp1 @ sp[(-2)+0]
 18735  018C80  0EFE               	movlw	-2
 18736  018C82  006F FF8C  F001    	movff	plusw1,btemp
 18737  018C88  0E1F               	movlw	31
 18738  018C8A  6401               	cpfsgt	btemp^0,c
 18739  018C8C  D00C               	goto	l8557
 18740  018C8E  D7A3               	goto	u7140
 18741  018C90                     l8555:
 18742                           
 18743                           ;stkvar	_f1 @ sp[(-2)+-4]
 18744  018C90  90D8               	bcf	status,0,c
 18745  018C92  0EFA               	movlw	-6
 18746  018C94  36E3               	rlcf	plusw1,f,c
 18747  018C96  0EFB               	movlw	-5
 18748  018C98  36E3               	rlcf	plusw1,f,c
 18749  018C9A  0EFC               	movlw	-4
 18750  018C9C  36E3               	rlcf	plusw1,f,c
 18751  018C9E  0EFD               	movlw	-3
 18752  018CA0  36E3               	rlcf	plusw1,f,c
 18753                           
 18754                           ;stkvar	_exp1 @ sp[(-2)+0]
 18755  018CA2  0EFE               	movlw	-2
 18756  018CA4  06E3               	decf	plusw1,f,c
 18757  018CA6                     l8557:
 18758                           
 18759                           ;stkvar	_exp1 @ sp[(-2)+0]
 18760  018CA6  0EFE               	movlw	-2
 18761  018CA8  50E3               	movf	plusw1,w,c
 18762  018CAA  A4D8               	btfss	status,2,c
 18763  018CAC  D7F1               	goto	l8555
 18764  018CAE                     u7200:
 18765                           
 18766                           ;stkvar	_sign1 @ sp[(-2)+1]
 18767  018CAE  0EFF               	movlw	-1
 18768  018CB0  50E3               	movf	plusw1,w,c
 18769  018CB2  B4D8               	btfsc	status,2,c
 18770  018CB4  D011               	goto	u7220
 18771                           
 18772                           ;stkvar	_f1 @ sp[(-2)+-4]
 18773                           ;stkvar	_f1 @ sp[(-2)+-4]
 18774  018CB6  0EFA               	movlw	-6
 18775  018CB8  6CE3               	negf	plusw1,c
 18776  018CBA  0EFB               	movlw	-5
 18777  018CBC  1EE3               	comf	plusw1,f,c
 18778  018CBE  0EFC               	movlw	-4
 18779  018CC0  1EE3               	comf	plusw1,f,c
 18780  018CC2  0EFD               	movlw	-3
 18781  018CC4  1EE3               	comf	plusw1,f,c
 18782  018CC6  E308               	bnc	u7220
 18783  018CC8  0EFB               	movlw	-5
 18784  018CCA  2AE3               	incf	plusw1,f,c
 18785  018CCC  E305               	bnc	u7220
 18786  018CCE  0EFC               	movlw	-4
 18787  018CD0  2AE3               	incf	plusw1,f,c
 18788  018CD2  E302               	bnc	u7220
 18789  018CD4  0EFD               	movlw	-3
 18790  018CD6  2AE3               	incf	plusw1,f,c
 18791  018CD8                     u7220:
 18792                           
 18793                           ;stkvar	_f1 @ sp[(-2)+-4]
 18794  018CD8  0EFA               	movlw	-6
 18795  018CDA  006F FF8C  F001    	movff	plusw1,btemp
 18796  018CE0  0EFB               	movlw	-5
 18797  018CE2  006F FF8C  F002    	movff	plusw1,btemp+1
 18798  018CE8  0EFC               	movlw	-4
 18799  018CEA  006F FF8C  F003    	movff	plusw1,btemp+2
 18800  018CF0  0EFD               	movlw	-3
 18801  018CF2  006F FF8C  F004    	movff	plusw1,btemp+3
 18802  018CF8                     l2697:
 18803                           
 18804                           ; ___fltol: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 18805  018CF8  0EFA               	movlw	250
 18806  018CFA  26E1               	addwf	fsr1l,f,c
 18807  018CFC  0EFF               	movlw	255
 18808  018CFE  22E2               	addwfc	fsr1h,f,c
 18809  018D00  0012               	return		;funcret
 18810  018D02                     __end_of___fltol:
 18811                           	opt callstack 0
 18812                           
 18813 ;; *************** function ___flneg *****************
 18814 ;; Defined at:
 18815 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flneg.c"
 18816 ;; Parameters:    Size  Location     Type
 18817 ;;  f1              4  [STACK] long 
 18818 ;; Auto vars:     Size  Location     Type
 18819 ;;		None
 18820 ;; Return value:  Size  Location     Type
 18821 ;;                  4  [STACK] long 
 18822 ;; Registers used:
 18823 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 18824 ;; Tracked objects:
 18825 ;;		On entry : 0/0
 18826 ;;		On exit  : 0/0
 18827 ;;		Unchanged: 0/0
 18828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18829 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18830 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18831 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18832 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18833 ;;Total ram usage:        0 bytes
 18834 ;; Hardware stack levels used:    1
 18835 ;; Hardware stack levels required when called:   15
 18836 ;; This function calls:
 18837 ;;		Nothing
 18838 ;; This function is called by:
 18839 ;;		_calc_bsoc
 18840 ;;		_efgtoa
 18841 ;; This function uses a reentrant model
 18842 ;;
 18843                           
 18844                           	psect	text62
 18845  01B0AA                     __ptext62:
 18846                           	opt callstack 0
 18847  01B0AA                     ___flneg:
 18848                           	opt callstack 0
 18849                           
 18850                           ;stkvar	_f1 @ sp[(0)+-4]
 18851                           
 18852                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18853                           ;incstack = 0
 18854 ;; hardware stack exceeded
 18855  01B0AA  0EFC               	movlw	-4
 18856  01B0AC  50E3               	movf	plusw1,w,c
 18857  01B0AE  E10A               	bnz	u7120
 18858  01B0B0  0EFD               	movlw	-3
 18859  01B0B2  50E3               	movf	plusw1,w,c
 18860  01B0B4  E107               	bnz	u7120
 18861  01B0B6  0EFE               	movlw	-2
 18862  01B0B8  50E3               	movf	plusw1,w,c
 18863  01B0BA  E104               	bnz	u7120
 18864  01B0BC  0EFF               	movlw	-1
 18865  01B0BE  50E3               	movf	plusw1,w,c
 18866  01B0C0  B4D8               	btfsc	status,2,c
 18867  01B0C2  D002               	goto	l8521
 18868  01B0C4                     u7120:
 18869                           
 18870                           ;stkvar	_f1 @ sp[(0)+-4]
 18871  01B0C4  0EFF               	movlw	-1
 18872  01B0C6  7EE3               	btg	plusw1,7,c
 18873  01B0C8                     l8521:
 18874                           
 18875                           ;stkvar	_f1 @ sp[(0)+-4]
 18876  01B0C8  0EFC               	movlw	-4
 18877  01B0CA  006F FF8C  F001    	movff	plusw1,btemp
 18878  01B0D0  0EFD               	movlw	-3
 18879  01B0D2  006F FF8C  F002    	movff	plusw1,btemp+1
 18880  01B0D8  0EFE               	movlw	-2
 18881  01B0DA  006F FF8C  F003    	movff	plusw1,btemp+2
 18882  01B0E0  0EFF               	movlw	-1
 18883  01B0E2  006F FF8C  F004    	movff	plusw1,btemp+3
 18884                           
 18885                           ; ___flneg: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 18886  01B0E8  52E5               	movf	postdec1,f,c
 18887  01B0EA  52E5               	movf	postdec1,f,c
 18888  01B0EC  52E5               	movf	postdec1,f,c
 18889  01B0EE  52E5               	movf	postdec1,f,c
 18890  01B0F0  0012               	return		;funcret
 18891  01B0F2                     __end_of___flneg:
 18892                           	opt callstack 0
 18893                           
 18894 ;; *************** function ___fleq *****************
 18895 ;; Defined at:
 18896 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fleq.c"
 18897 ;; Parameters:    Size  Location     Type
 18898 ;;  ff1             4  [STACK] long 
 18899 ;;  ff2             4  [STACK] long 
 18900 ;; Auto vars:     Size  Location     Type
 18901 ;;		None
 18902 ;; Return value:  Size  Location     Type
 18903 ;;		None               void
 18904 ;; Registers used:
 18905 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 18906 ;; Tracked objects:
 18907 ;;		On entry : 0/0
 18908 ;;		On exit  : 0/0
 18909 ;;		Unchanged: 0/0
 18910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18911 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18912 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18913 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18914 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18915 ;;Total ram usage:        0 bytes
 18916 ;; Hardware stack levels used:    1
 18917 ;; Hardware stack levels required when called:   15
 18918 ;; This function calls:
 18919 ;;		Nothing
 18920 ;; This function is called by:
 18921 ;;		_efgtoa
 18922 ;; This function uses a reentrant model
 18923 ;;
 18924                           
 18925                           	psect	text63
 18926  01A19A                     __ptext63:
 18927                           	opt callstack 0
 18928  01A19A                     ___fleq:
 18929                           	opt callstack 0
 18930                           
 18931                           ;stkvar	_ff1 @ sp[(0)+-4]
 18932                           
 18933                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18934                           ;incstack = 0
 18935 ;; hardware stack exceeded
 18936  01A19A  50E1               	movf	fsr1l,w,c
 18937  01A19C  0FFC               	addlw	-4
 18938  01A19E  6ED9               	movwf	fsr2l,c
 18939  01A1A0  50E2               	movf	fsr1h,w,c
 18940  01A1A2  6EDA               	movwf	fsr2h,c
 18941  01A1A4  0EFF               	movlw	255
 18942  01A1A6  22DA               	addwfc	fsr2h,f,c
 18943  01A1A8  0E00               	movlw	0
 18944  01A1AA  14DE               	andwf	postinc2,w,c
 18945  01A1AC  6E09               	movwf	(btemp+8)^0,c
 18946  01A1AE  0E00               	movlw	0
 18947  01A1B0  14DE               	andwf	postinc2,w,c
 18948  01A1B2  6E0A               	movwf	(btemp+9)^0,c
 18949  01A1B4  0E80               	movlw	128
 18950  01A1B6  14DE               	andwf	postinc2,w,c
 18951  01A1B8  6E0B               	movwf	(btemp+10)^0,c
 18952  01A1BA  0E7F               	movlw	127
 18953  01A1BC  14DE               	andwf	postinc2,w,c
 18954  01A1BE  6E0C               	movwf	(btemp+11)^0,c
 18955  01A1C0  5009               	movf	(btemp+8)^0,w,c
 18956  01A1C2  100A               	iorwf	(btemp+9)^0,w,c
 18957  01A1C4  100B               	iorwf	(btemp+10)^0,w,c
 18958  01A1C6  100C               	iorwf	(btemp+11)^0,w,c
 18959  01A1C8  A4D8               	btfss	status,2,c
 18960  01A1CA  D008               	goto	l8479
 18961                           
 18962                           ;stkvar	_ff1 @ sp[(0)+-4]
 18963  01A1CC  0EFC               	movlw	-4
 18964  01A1CE  6AE3               	clrf	plusw1,c
 18965  01A1D0  0EFD               	movlw	-3
 18966  01A1D2  6AE3               	clrf	plusw1,c
 18967  01A1D4  0EFE               	movlw	-2
 18968  01A1D6  6AE3               	clrf	plusw1,c
 18969  01A1D8  0EFF               	movlw	-1
 18970  01A1DA  6AE3               	clrf	plusw1,c
 18971  01A1DC                     l8479:
 18972                           
 18973                           ;stkvar	_ff2 @ sp[(0)+-8]
 18974  01A1DC  50E1               	movf	fsr1l,w,c
 18975  01A1DE  0FF8               	addlw	-8
 18976  01A1E0  6ED9               	movwf	fsr2l,c
 18977  01A1E2  50E2               	movf	fsr1h,w,c
 18978  01A1E4  6EDA               	movwf	fsr2h,c
 18979  01A1E6  0EFF               	movlw	255
 18980  01A1E8  22DA               	addwfc	fsr2h,f,c
 18981  01A1EA  0E00               	movlw	0
 18982  01A1EC  14DE               	andwf	postinc2,w,c
 18983  01A1EE  6E09               	movwf	(btemp+8)^0,c
 18984  01A1F0  0E00               	movlw	0
 18985  01A1F2  14DE               	andwf	postinc2,w,c
 18986  01A1F4  6E0A               	movwf	(btemp+9)^0,c
 18987  01A1F6  0E80               	movlw	128
 18988  01A1F8  14DE               	andwf	postinc2,w,c
 18989  01A1FA  6E0B               	movwf	(btemp+10)^0,c
 18990  01A1FC  0E7F               	movlw	127
 18991  01A1FE  14DE               	andwf	postinc2,w,c
 18992  01A200  6E0C               	movwf	(btemp+11)^0,c
 18993  01A202  5009               	movf	(btemp+8)^0,w,c
 18994  01A204  100A               	iorwf	(btemp+9)^0,w,c
 18995  01A206  100B               	iorwf	(btemp+10)^0,w,c
 18996  01A208  100C               	iorwf	(btemp+11)^0,w,c
 18997  01A20A  A4D8               	btfss	status,2,c
 18998  01A20C  D008               	goto	l8483
 18999                           
 19000                           ;stkvar	_ff2 @ sp[(0)+-8]
 19001  01A20E  0EF8               	movlw	-8
 19002  01A210  6AE3               	clrf	plusw1,c
 19003  01A212  0EF9               	movlw	-7
 19004  01A214  6AE3               	clrf	plusw1,c
 19005  01A216  0EFA               	movlw	-6
 19006  01A218  6AE3               	clrf	plusw1,c
 19007  01A21A  0EFB               	movlw	-5
 19008  01A21C  6AE3               	clrf	plusw1,c
 19009  01A21E                     l8483:
 19010                           
 19011                           ;stkvar	_ff2 @ sp[(0)+-8]
 19012                           ;stkvar	_ff1 @ sp[(0)+-4]
 19013  01A21E  50E1               	movf	fsr1l,w,c
 19014  01A220  0FFC               	addlw	-4
 19015  01A222  6ED9               	movwf	fsr2l,c
 19016  01A224  50E2               	movf	fsr1h,w,c
 19017  01A226  6EDA               	movwf	fsr2h,c
 19018  01A228  0EFF               	movlw	255
 19019  01A22A  22DA               	addwfc	fsr2h,f,c
 19020  01A22C  0EF8               	movlw	-8
 19021  01A22E  50E3               	movf	plusw1,w,c
 19022  01A230  18DE               	xorwf	postinc2,w,c
 19023  01A232  E10D               	bnz	u7060
 19024  01A234  0EF9               	movlw	-7
 19025  01A236  50E3               	movf	plusw1,w,c
 19026  01A238  18DE               	xorwf	postinc2,w,c
 19027  01A23A  E109               	bnz	u7060
 19028  01A23C  0EFA               	movlw	-6
 19029  01A23E  50E3               	movf	plusw1,w,c
 19030  01A240  18DE               	xorwf	postinc2,w,c
 19031  01A242  E105               	bnz	u7060
 19032  01A244  0EFB               	movlw	-5
 19033  01A246  50E3               	movf	plusw1,w,c
 19034  01A248  18DE               	xorwf	postinc2,w,c
 19035  01A24A  B4D8               	btfsc	status,2,c
 19036  01A24C  D002               	goto	l8487
 19037  01A24E                     u7060:
 19038  01A24E  9001               	bcf	btemp& (0+255),0,c
 19039  01A250  D001               	goto	l2659
 19040  01A252                     l8487:
 19041  01A252  8001               	bsf	btemp& (0+255),0,c
 19042  01A254                     l2659:
 19043                           
 19044                           ; ___fleq: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 19045  01A254  0EF8               	movlw	248
 19046  01A256  26E1               	addwf	fsr1l,f,c
 19047  01A258  0EFF               	movlw	255
 19048  01A25A  22E2               	addwfc	fsr1h,f,c
 19049  01A25C  0012               	return		;funcret
 19050  01A25E                     __end_of___fleq:
 19051                           	opt callstack 0
 19052                           
 19053 ;; *************** function ___awmod *****************
 19054 ;; Defined at:
 19055 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awmod.c"
 19056 ;; Parameters:    Size  Location     Type
 19057 ;;  dividend        2  [STACK] int 
 19058 ;;  divisor         2  [STACK] int 
 19059 ;; Auto vars:     Size  Location     Type
 19060 ;;  sign            1  [STACK] unsigned char 
 19061 ;;  counter         1  [STACK] unsigned char 
 19062 ;; Return value:  Size  Location     Type
 19063 ;;                  2  [STACK] int 
 19064 ;; Registers used:
 19065 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 19066 ;; Tracked objects:
 19067 ;;		On entry : 0/0
 19068 ;;		On exit  : 0/0
 19069 ;;		Unchanged: 0/0
 19070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19071 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19072 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19073 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19074 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19075 ;;Total ram usage:        0 bytes
 19076 ;; Hardware stack levels used:    1
 19077 ;; Hardware stack levels required when called:   15
 19078 ;; This function calls:
 19079 ;;		Nothing
 19080 ;; This function is called by:
 19081 ;;		_efgtoa
 19082 ;; This function uses a reentrant model
 19083 ;;
 19084                           
 19085                           	psect	text64
 19086  019706                     __ptext64:
 19087                           	opt callstack 0
 19088  019706                     ___awmod:
 19089                           	opt callstack 0
 19090                           
 19091                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19092  019706  52E6               	movf	postinc1,f,c
 19093  019708  52E6               	movf	postinc1,f,c
 19094                           
 19095                           ;stkvar	_sign @ sp[(-2)+0]
 19096                           
 19097                           ;incstack = 0
 19098 ;; hardware stack exceeded
 19099  01970A  0EFE               	movlw	-2
 19100  01970C  6AE3               	clrf	plusw1,c
 19101                           
 19102                           ;stkvar	_dividend @ sp[(-2)+-2]
 19103  01970E  0EFD               	movlw	-3
 19104  019710  AEE3               	btfss	plusw1,7,c
 19105  019712  D009               	goto	l8445
 19106                           
 19107                           ;stkvar	_dividend @ sp[(-2)+-2]
 19108                           ;stkvar	_dividend @ sp[(-2)+-2]
 19109  019714  0EFC               	movlw	-4
 19110  019716  6CE3               	negf	plusw1,c
 19111  019718  0EFD               	movlw	-3
 19112  01971A  1EE3               	comf	plusw1,f,c
 19113  01971C  B0D8               	btfsc	status,0,c
 19114  01971E  2AE3               	incf	plusw1,f,c
 19115                           
 19116                           ;stkvar	_sign @ sp[(-2)+0]
 19117  019720  0EFE               	movlw	-2
 19118  019722  6AE3               	clrf	plusw1,c
 19119  019724  2AE3               	incf	plusw1,f,c
 19120  019726                     l8445:
 19121                           
 19122                           ;stkvar	_divisor @ sp[(-2)+-4]
 19123  019726  0EFB               	movlw	-5
 19124  019728  AEE3               	btfss	plusw1,7,c
 19125  01972A  D006               	goto	l8449
 19126                           
 19127                           ;stkvar	_divisor @ sp[(-2)+-4]
 19128                           ;stkvar	_divisor @ sp[(-2)+-4]
 19129  01972C  0EFA               	movlw	-6
 19130  01972E  6CE3               	negf	plusw1,c
 19131  019730  0EFB               	movlw	-5
 19132  019732  1EE3               	comf	plusw1,f,c
 19133  019734  B0D8               	btfsc	status,0,c
 19134  019736  2AE3               	incf	plusw1,f,c
 19135  019738                     l8449:
 19136                           
 19137                           ;stkvar	_divisor @ sp[(-2)+-4]
 19138  019738  0EFA               	movlw	-6
 19139  01973A  006F FF8C  F001    	movff	plusw1,btemp
 19140  019740  0EFB               	movlw	-5
 19141  019742  50E3               	movf	plusw1,w,c
 19142  019744  1001               	iorwf	btemp^0,w,c
 19143  019746  B4D8               	btfsc	status,2,c
 19144  019748  D053               	goto	u7020
 19145                           
 19146                           ;stkvar	_counter @ sp[(-2)+1]
 19147  01974A  0EFF               	movlw	-1
 19148  01974C  6AE3               	clrf	plusw1,c
 19149  01974E  D012               	goto	L22
 19150  019750                     l8453:
 19151                           
 19152                           ;stkvar	_divisor @ sp[(-2)+-4]
 19153  019750  0EFA               	movlw	-6
 19154  019752  50E3               	movf	plusw1,w,c
 19155  019754  90D8               	bcf	status,0,c
 19156  019756  34E8               	rlcf	wreg,w,c
 19157  019758  6E01               	movwf	btemp^0,c
 19158  01975A  0EFA               	movlw	-6
 19159  01975C  0060  F007  FFE3   	movff	btemp,plusw1
 19160  019762  0EFB               	movlw	-5
 19161  019764  50E3               	movf	plusw1,w,c
 19162  019766  34E8               	rlcf	wreg,w,c
 19163  019768  6E01               	movwf	btemp^0,c
 19164  01976A  0EFB               	movlw	-5
 19165  01976C  0060  F007  FFE3   	movff	btemp,plusw1
 19166                           
 19167                           ;stkvar	_counter @ sp[(-2)+1]
 19168  019772  0EFF               	movlw	-1
 19169  019774                     L22:
 19170  019774  2AE3               	incf	plusw1,f,c
 19171                           
 19172                           ;stkvar	_divisor @ sp[(-2)+-4]
 19173  019776  0EFB               	movlw	-5
 19174  019778  AEE3               	btfss	plusw1,7,c
 19175  01977A  D7EA               	goto	l8453
 19176  01977C                     u7000:
 19177                           
 19178                           ;stkvar	_divisor @ sp[(-2)+-4]
 19179  01977C  0EFA               	movlw	-6
 19180  01977E  006F FF8C  F00B    	movff	plusw1,btemp+10
 19181  019784  0EFB               	movlw	-5
 19182  019786  006F FF8C  F00C    	movff	plusw1,btemp+11
 19183                           
 19184                           ;stkvar	_dividend @ sp[(-2)+-2]
 19185  01978C  0EFC               	movlw	-4
 19186  01978E  006F FF8C  F009    	movff	plusw1,btemp+8
 19187  019794  0EFD               	movlw	-3
 19188  019796  006F FF8C  F00A    	movff	plusw1,btemp+9
 19189  01979C  500B               	movf	(btemp+10)^0,w,c
 19190  01979E  5C09               	subwf	(btemp+8)^0,w,c
 19191  0197A0  500C               	movf	(btemp+11)^0,w,c
 19192  0197A2  580A               	subwfb	(btemp+9)^0,w,c
 19193  0197A4  A0D8               	btfss	status,0,c
 19194  0197A6  D014               	goto	l8463
 19195                           
 19196                           ;stkvar	_divisor @ sp[(-2)+-4]
 19197                           ;stkvar	_dividend @ sp[(-2)+-2]
 19198  0197A8  0EFC               	movlw	-4
 19199  0197AA  50E3               	movf	plusw1,w,c
 19200  0197AC  6E01               	movwf	btemp^0,c
 19201  0197AE  0EFA               	movlw	-6
 19202  0197B0  50E3               	movf	plusw1,w,c
 19203  0197B2  5E01               	subwf	btemp^0,f,c
 19204  0197B4  0EFC               	movlw	-4
 19205  0197B6  0060  F007  FFE3   	movff	btemp,plusw1
 19206  0197BC  0EFD               	movlw	-3
 19207  0197BE  50E3               	movf	plusw1,w,c
 19208  0197C0  6E01               	movwf	btemp^0,c
 19209  0197C2  0EFB               	movlw	-5
 19210  0197C4  50E3               	movf	plusw1,w,c
 19211  0197C6  5A01               	subwfb	btemp^0,f,c
 19212  0197C8  0EFD               	movlw	-3
 19213  0197CA  0060  F007  FFE3   	movff	btemp,plusw1
 19214  0197D0                     l8463:
 19215                           
 19216                           ;stkvar	_divisor @ sp[(-2)+-4]
 19217  0197D0  90D8               	bcf	status,0,c
 19218  0197D2  0EFB               	movlw	-5
 19219  0197D4  32E3               	rrcf	plusw1,f,c
 19220  0197D6  0EFA               	movlw	-6
 19221  0197D8  32E3               	rrcf	plusw1,f,c
 19222                           
 19223                           ;stkvar	_counter @ sp[(-2)+1]
 19224  0197DA  0EFF               	movlw	-1
 19225  0197DC  50E3               	movf	plusw1,w,c
 19226  0197DE  6E01               	movwf	btemp^0,c
 19227  0197E0  0E01               	movlw	1
 19228  0197E2  5E01               	subwf	btemp^0,f,c
 19229  0197E4  0EFF               	movlw	-1
 19230  0197E6  0060  F007  FFE3   	movff	btemp,plusw1
 19231  0197EC  A4D8               	btfss	status,2,c
 19232  0197EE  D7C6               	goto	u7000
 19233  0197F0                     u7020:
 19234                           
 19235                           ;stkvar	_sign @ sp[(-2)+0]
 19236  0197F0  0EFE               	movlw	-2
 19237  0197F2  50E3               	movf	plusw1,w,c
 19238  0197F4  B4D8               	btfsc	status,2,c
 19239  0197F6  D006               	goto	l8471
 19240                           
 19241                           ;stkvar	_dividend @ sp[(-2)+-2]
 19242                           ;stkvar	_dividend @ sp[(-2)+-2]
 19243  0197F8  0EFC               	movlw	-4
 19244  0197FA  6CE3               	negf	plusw1,c
 19245  0197FC  0EFD               	movlw	-3
 19246  0197FE  1EE3               	comf	plusw1,f,c
 19247  019800  B0D8               	btfsc	status,0,c
 19248  019802  2AE3               	incf	plusw1,f,c
 19249  019804                     l8471:
 19250                           
 19251                           ;stkvar	_dividend @ sp[(-2)+-2]
 19252  019804  0EFC               	movlw	-4
 19253  019806  006F FF8C  F001    	movff	plusw1,btemp
 19254  01980C  0EFD               	movlw	-3
 19255  01980E  006F FF8C  F002    	movff	plusw1,btemp+1
 19256                           
 19257                           ; ___awmod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 19258  019814  0EFA               	movlw	250
 19259  019816  26E1               	addwf	fsr1l,f,c
 19260  019818  0EFF               	movlw	255
 19261  01981A  22E2               	addwfc	fsr1h,f,c
 19262  01981C  0012               	return		;funcret
 19263  01981E                     __end_of___awmod:
 19264                           	opt callstack 0
 19265                           
 19266 ;; *************** function ___awdiv *****************
 19267 ;; Defined at:
 19268 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awdiv.c"
 19269 ;; Parameters:    Size  Location     Type
 19270 ;;  dividend        2  [STACK] int 
 19271 ;;  divisor         2  [STACK] int 
 19272 ;; Auto vars:     Size  Location     Type
 19273 ;;  quotient        2  [STACK] int 
 19274 ;;  sign            1  [STACK] unsigned char 
 19275 ;;  counter         1  [STACK] unsigned char 
 19276 ;; Return value:  Size  Location     Type
 19277 ;;                  2  [STACK] int 
 19278 ;; Registers used:
 19279 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 19280 ;; Tracked objects:
 19281 ;;		On entry : 0/0
 19282 ;;		On exit  : 0/0
 19283 ;;		Unchanged: 0/0
 19284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19285 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19286 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19288 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19289 ;;Total ram usage:        0 bytes
 19290 ;; Hardware stack levels used:    1
 19291 ;; Hardware stack levels required when called:   15
 19292 ;; This function calls:
 19293 ;;		Nothing
 19294 ;; This function is called by:
 19295 ;;		_efgtoa
 19296 ;; This function uses a reentrant model
 19297 ;;
 19298                           
 19299                           	psect	text65
 19300  018FC6                     __ptext65:
 19301                           	opt callstack 0
 19302  018FC6                     ___awdiv:
 19303                           	opt callstack 0
 19304                           
 19305                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19306  018FC6  52E6               	movf	postinc1,f,c
 19307  018FC8  52E6               	movf	postinc1,f,c
 19308  018FCA  52E6               	movf	postinc1,f,c
 19309  018FCC  52E6               	movf	postinc1,f,c
 19310                           
 19311                           ;stkvar	_sign @ sp[(-4)+2]
 19312                           
 19313                           ;incstack = 0
 19314 ;; hardware stack exceeded
 19315  018FCE  0EFE               	movlw	-2
 19316  018FD0  6AE3               	clrf	plusw1,c
 19317                           
 19318                           ;stkvar	_divisor @ sp[(-4)+-4]
 19319  018FD2  0EF9               	movlw	-7
 19320  018FD4  AEE3               	btfss	plusw1,7,c
 19321  018FD6  D009               	goto	l8399
 19322                           
 19323                           ;stkvar	_divisor @ sp[(-4)+-4]
 19324                           ;stkvar	_divisor @ sp[(-4)+-4]
 19325  018FD8  0EF8               	movlw	-8
 19326  018FDA  6CE3               	negf	plusw1,c
 19327  018FDC  0EF9               	movlw	-7
 19328  018FDE  1EE3               	comf	plusw1,f,c
 19329  018FE0  B0D8               	btfsc	status,0,c
 19330  018FE2  2AE3               	incf	plusw1,f,c
 19331                           
 19332                           ;stkvar	_sign @ sp[(-4)+2]
 19333  018FE4  0EFE               	movlw	-2
 19334  018FE6  6AE3               	clrf	plusw1,c
 19335  018FE8  2AE3               	incf	plusw1,f,c
 19336  018FEA                     l8399:
 19337                           
 19338                           ;stkvar	_dividend @ sp[(-4)+-2]
 19339  018FEA  0EFB               	movlw	-5
 19340  018FEC  AEE3               	btfss	plusw1,7,c
 19341  018FEE  D008               	goto	l8405
 19342                           
 19343                           ;stkvar	_dividend @ sp[(-4)+-2]
 19344                           ;stkvar	_dividend @ sp[(-4)+-2]
 19345  018FF0  0EFA               	movlw	-6
 19346  018FF2  6CE3               	negf	plusw1,c
 19347  018FF4  0EFB               	movlw	-5
 19348  018FF6  1EE3               	comf	plusw1,f,c
 19349  018FF8  B0D8               	btfsc	status,0,c
 19350  018FFA  2AE3               	incf	plusw1,f,c
 19351                           
 19352                           ;stkvar	_sign @ sp[(-4)+2]
 19353  018FFC  0EFE               	movlw	-2
 19354  018FFE  70E3               	btg	plusw1,0,c
 19355  019000                     l8405:
 19356                           
 19357                           ;stkvar	_quotient @ sp[(-4)+0]
 19358  019000  0EFC               	movlw	-4
 19359  019002  6AE3               	clrf	plusw1,c
 19360  019004  0EFD               	movlw	-3
 19361  019006  6AE3               	clrf	plusw1,c
 19362                           
 19363                           ;stkvar	_divisor @ sp[(-4)+-4]
 19364  019008  0EF8               	movlw	-8
 19365  01900A  006F FF8C  F001    	movff	plusw1,btemp
 19366  019010  0EF9               	movlw	-7
 19367  019012  50E3               	movf	plusw1,w,c
 19368  019014  1001               	iorwf	btemp^0,w,c
 19369  019016  B4D8               	btfsc	status,2,c
 19370  019018  D066               	goto	u6950
 19371                           
 19372                           ;stkvar	_counter @ sp[(-4)+3]
 19373  01901A  0EFF               	movlw	-1
 19374  01901C  6AE3               	clrf	plusw1,c
 19375  01901E  D012               	goto	L23
 19376  019020                     l8411:
 19377                           
 19378                           ;stkvar	_divisor @ sp[(-4)+-4]
 19379  019020  0EF8               	movlw	-8
 19380  019022  50E3               	movf	plusw1,w,c
 19381  019024  90D8               	bcf	status,0,c
 19382  019026  34E8               	rlcf	wreg,w,c
 19383  019028  6E01               	movwf	btemp^0,c
 19384  01902A  0EF8               	movlw	-8
 19385  01902C  0060  F007  FFE3   	movff	btemp,plusw1
 19386  019032  0EF9               	movlw	-7
 19387  019034  50E3               	movf	plusw1,w,c
 19388  019036  34E8               	rlcf	wreg,w,c
 19389  019038  6E01               	movwf	btemp^0,c
 19390  01903A  0EF9               	movlw	-7
 19391  01903C  0060  F007  FFE3   	movff	btemp,plusw1
 19392                           
 19393                           ;stkvar	_counter @ sp[(-4)+3]
 19394  019042  0EFF               	movlw	-1
 19395  019044                     L23:
 19396  019044  2AE3               	incf	plusw1,f,c
 19397                           
 19398                           ;stkvar	_divisor @ sp[(-4)+-4]
 19399  019046  0EF9               	movlw	-7
 19400  019048  AEE3               	btfss	plusw1,7,c
 19401  01904A  D7EA               	goto	l8411
 19402  01904C                     u6930:
 19403                           
 19404                           ;stkvar	_quotient @ sp[(-4)+0]
 19405  01904C  0EFC               	movlw	-4
 19406  01904E  50E3               	movf	plusw1,w,c
 19407  019050  90D8               	bcf	status,0,c
 19408  019052  34E8               	rlcf	wreg,w,c
 19409  019054  6E01               	movwf	btemp^0,c
 19410  019056  0EFC               	movlw	-4
 19411  019058  0060  F007  FFE3   	movff	btemp,plusw1
 19412  01905E  0EFD               	movlw	-3
 19413  019060  50E3               	movf	plusw1,w,c
 19414  019062  34E8               	rlcf	wreg,w,c
 19415  019064  6E01               	movwf	btemp^0,c
 19416  019066  0EFD               	movlw	-3
 19417  019068  0060  F007  FFE3   	movff	btemp,plusw1
 19418                           
 19419                           ;stkvar	_divisor @ sp[(-4)+-4]
 19420  01906E  0EF8               	movlw	-8
 19421  019070  006F FF8C  F00B    	movff	plusw1,btemp+10
 19422  019076  0EF9               	movlw	-7
 19423  019078  006F FF8C  F00C    	movff	plusw1,btemp+11
 19424                           
 19425                           ;stkvar	_dividend @ sp[(-4)+-2]
 19426  01907E  0EFA               	movlw	-6
 19427  019080  006F FF8C  F009    	movff	plusw1,btemp+8
 19428  019086  0EFB               	movlw	-5
 19429  019088  006F FF8C  F00A    	movff	plusw1,btemp+9
 19430  01908E  500B               	movf	(btemp+10)^0,w,c
 19431  019090  5C09               	subwf	(btemp+8)^0,w,c
 19432  019092  500C               	movf	(btemp+11)^0,w,c
 19433  019094  580A               	subwfb	(btemp+9)^0,w,c
 19434  019096  A0D8               	btfss	status,0,c
 19435  019098  D016               	goto	l8425
 19436                           
 19437                           ;stkvar	_divisor @ sp[(-4)+-4]
 19438                           ;stkvar	_dividend @ sp[(-4)+-2]
 19439  01909A  0EFA               	movlw	-6
 19440  01909C  50E3               	movf	plusw1,w,c
 19441  01909E  6E01               	movwf	btemp^0,c
 19442  0190A0  0EF8               	movlw	-8
 19443  0190A2  50E3               	movf	plusw1,w,c
 19444  0190A4  5E01               	subwf	btemp^0,f,c
 19445  0190A6  0EFA               	movlw	-6
 19446  0190A8  0060  F007  FFE3   	movff	btemp,plusw1
 19447  0190AE  0EFB               	movlw	-5
 19448  0190B0  50E3               	movf	plusw1,w,c
 19449  0190B2  6E01               	movwf	btemp^0,c
 19450  0190B4  0EF9               	movlw	-7
 19451  0190B6  50E3               	movf	plusw1,w,c
 19452  0190B8  5A01               	subwfb	btemp^0,f,c
 19453  0190BA  0EFB               	movlw	-5
 19454  0190BC  0060  F007  FFE3   	movff	btemp,plusw1
 19455                           
 19456                           ;stkvar	_quotient @ sp[(-4)+0]
 19457  0190C2  0EFC               	movlw	-4
 19458  0190C4  80E3               	bsf	plusw1,0,c
 19459  0190C6                     l8425:
 19460                           
 19461                           ;stkvar	_divisor @ sp[(-4)+-4]
 19462  0190C6  90D8               	bcf	status,0,c
 19463  0190C8  0EF9               	movlw	-7
 19464  0190CA  32E3               	rrcf	plusw1,f,c
 19465  0190CC  0EF8               	movlw	-8
 19466  0190CE  32E3               	rrcf	plusw1,f,c
 19467                           
 19468                           ;stkvar	_counter @ sp[(-4)+3]
 19469  0190D0  0EFF               	movlw	-1
 19470  0190D2  50E3               	movf	plusw1,w,c
 19471  0190D4  6E01               	movwf	btemp^0,c
 19472  0190D6  0E01               	movlw	1
 19473  0190D8  5E01               	subwf	btemp^0,f,c
 19474  0190DA  0EFF               	movlw	-1
 19475  0190DC  0060  F007  FFE3   	movff	btemp,plusw1
 19476  0190E2  A4D8               	btfss	status,2,c
 19477  0190E4  D7B3               	goto	u6930
 19478  0190E6                     u6950:
 19479                           
 19480                           ;stkvar	_sign @ sp[(-4)+2]
 19481  0190E6  0EFE               	movlw	-2
 19482  0190E8  50E3               	movf	plusw1,w,c
 19483  0190EA  B4D8               	btfsc	status,2,c
 19484  0190EC  D006               	goto	l8433
 19485                           
 19486                           ;stkvar	_quotient @ sp[(-4)+0]
 19487                           ;stkvar	_quotient @ sp[(-4)+0]
 19488  0190EE  0EFC               	movlw	-4
 19489  0190F0  6CE3               	negf	plusw1,c
 19490  0190F2  0EFD               	movlw	-3
 19491  0190F4  1EE3               	comf	plusw1,f,c
 19492  0190F6  B0D8               	btfsc	status,0,c
 19493  0190F8  2AE3               	incf	plusw1,f,c
 19494  0190FA                     l8433:
 19495                           
 19496                           ;stkvar	_quotient @ sp[(-4)+0]
 19497  0190FA  0EFC               	movlw	-4
 19498  0190FC  006F FF8C  F001    	movff	plusw1,btemp
 19499  019102  0EFD               	movlw	-3
 19500  019104  006F FF8C  F002    	movff	plusw1,btemp+1
 19501                           
 19502                           ; ___awdiv: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 19503  01910A  0EF8               	movlw	248
 19504  01910C  26E1               	addwf	fsr1l,f,c
 19505  01910E  0EFF               	movlw	255
 19506  019110  22E2               	addwfc	fsr1h,f,c
 19507  019112  0012               	return		;funcret
 19508  019114                     __end_of___awdiv:
 19509                           	opt callstack 0
 19510                           
 19511 ;; *************** function _dtoa *****************
 19512 ;; Defined at:
 19513 ;;		line 274 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 19514 ;; Parameters:    Size  Location     Type
 19515 ;;  fp              2  [STACK] PTR struct _IO_FILE
 19516 ;;		 -> f(6), NULL(0), 
 19517 ;;  d               8  [STACK] long long 
 19518 ;; Auto vars:     Size  Location     Type
 19519 ;;  n               8  [STACK] long long 
 19520 ;;  i               2  [STACK] int 
 19521 ;;  s               2  [STACK] int 
 19522 ;;  w               2  [STACK] int 
 19523 ;;  p               2  [STACK] int 
 19524 ;; Return value:  Size  Location     Type
 19525 ;;                  2  [STACK] int 
 19526 ;; Registers used:
 19527 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 19528 ;; Tracked objects:
 19529 ;;		On entry : 0/0
 19530 ;;		On exit  : 0/0
 19531 ;;		Unchanged: 0/0
 19532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19533 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19534 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19535 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19536 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19537 ;;Total ram usage:        0 bytes
 19538 ;; Hardware stack levels used:    1
 19539 ;; Hardware stack levels required when called:   20
 19540 ;; This function calls:
 19541 ;;		___aodiv
 19542 ;;		___aomod
 19543 ;;		_abs
 19544 ;;		_pad
 19545 ;; This function is called by:
 19546 ;;		_vfpfcnvrt
 19547 ;; This function uses a reentrant model
 19548 ;;
 19549                           
 19550                           	psect	text66
 19551  015530                     __ptext66:
 19552                           	opt callstack 0
 19553  015530                     _dtoa:
 19554                           	opt callstack 0
 19555                           
 19556                           ; autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 19557  015530  0E12               	movlw	18
 19558  015532  26E1               	addwf	fsr1l,f,c
 19559  015534  0E00               	movlw	0
 19560  015536  22E2               	addwfc	fsr1h,f,c
 19561                           
 19562                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .10/pic/sources/c99/common/doprnt.c: 280:     n = d;
 19563                           ;stkvar	_d @ sp[(-18)+-10]
 19564                           
 19565                           ;incstack = 0
 19566 ;; hardware stack exceeded
 19567  015538  0EE4               	movlw	228
 19568  01553A  24E1               	addwf	fsr1l,w,c
 19569  01553C  6ED9               	movwf	fsr2l,c
 19570  01553E  0EFF               	movlw	255
 19571  015540  20E2               	addwfc	fsr1h,w,c
 19572  015542  6EDA               	movwf	fsr2h,c
 19573                           
 19574                           ;stkvar	_n @ sp[(-18)+2]
 19575  015544  0E08               	movlw	8
 19576  015546  6E01               	movwf	btemp^0,c
 19577  015548  0EF0               	movlw	-16
 19578  01554A                     us1083999:
 19579  01554A  006F FF7B FFE3     	movff	postinc2,plusw1
 19580  015550  28E8               	incf	wreg,w,c
 19581  015552  2E01               	decfsz	btemp^0,f,c
 19582  015554  D7FA               	bra	us1083999
 19583                           
 19584                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
 19585                           ;stkvar	_n @ sp[(-18)+2]
 19586  015556  0EF7               	movlw	-9
 19587  015558  AEE3               	btfss	plusw1,7,c
 19588  01555A  D002               	goto	u10840
 19589  01555C  0E01               	movlw	1
 19590  01555E  D001               	goto	u10850
 19591  015560                     u10840:
 19592  015560  0E00               	movlw	0
 19593  015562                     u10850:
 19594  015562  6E0B               	movwf	(btemp+10)^0,c
 19595  015564  6A0C               	clrf	(btemp+11)^0,c
 19596                           
 19597                           ;stkvar	_s @ sp[(-18)+12]
 19598  015566  0EFA               	movlw	-6
 19599  015568  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19600  01556E  0EFB               	movlw	-5
 19601  015570  0060  F033  FFE3   	movff	btemp+11,plusw1
 19602                           
 19603                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 282:     if (s) {
 19604                           ;stkvar	_s @ sp[(-18)+12]
 19605  015576  0EFA               	movlw	-6
 19606  015578  006F FF8C  F001    	movff	plusw1,btemp
 19607  01557E  0EFB               	movlw	-5
 19608  015580  50E3               	movf	plusw1,w,c
 19609  015582  1001               	iorwf	btemp^0,w,c
 19610  015584  B4D8               	btfsc	status,2,c
 19611  015586  D025               	goto	u10870
 19612                           
 19613                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 283:         n = -n;
 19614                           ;stkvar	_n @ sp[(-18)+2]
 19615                           ;stkvar	_n @ sp[(-18)+2]
 19616  015588  0EF0               	movlw	-16
 19617  01558A  6CE3               	negf	plusw1,c
 19618  01558C  0EF1               	movlw	-15
 19619  01558E  1EE3               	comf	plusw1,f,c
 19620  015590  0EF2               	movlw	-14
 19621  015592  1EE3               	comf	plusw1,f,c
 19622  015594  0EF3               	movlw	-13
 19623  015596  1EE3               	comf	plusw1,f,c
 19624  015598  0EF4               	movlw	-12
 19625  01559A  1EE3               	comf	plusw1,f,c
 19626  01559C  0EF5               	movlw	-11
 19627  01559E  1EE3               	comf	plusw1,f,c
 19628  0155A0  0EF6               	movlw	-10
 19629  0155A2  1EE3               	comf	plusw1,f,c
 19630  0155A4  0EF7               	movlw	-9
 19631  0155A6  1EE3               	comf	plusw1,f,c
 19632  0155A8  E314               	bnc	u10870
 19633  0155AA  0EF1               	movlw	-15
 19634  0155AC  2AE3               	incf	plusw1,f,c
 19635  0155AE  E311               	bnc	u10870
 19636  0155B0  0EF2               	movlw	-14
 19637  0155B2  2AE3               	incf	plusw1,f,c
 19638  0155B4  E30E               	bnc	u10870
 19639  0155B6  0EF3               	movlw	-13
 19640  0155B8  2AE3               	incf	plusw1,f,c
 19641  0155BA  E30B               	bnc	u10870
 19642  0155BC  0EF4               	movlw	-12
 19643  0155BE  2AE3               	incf	plusw1,f,c
 19644  0155C0  E308               	bnc	u10870
 19645  0155C2  0EF5               	movlw	-11
 19646  0155C4  2AE3               	incf	plusw1,f,c
 19647  0155C6  E305               	bnc	u10870
 19648  0155C8  0EF6               	movlw	-10
 19649  0155CA  2AE3               	incf	plusw1,f,c
 19650  0155CC  E302               	bnc	u10870
 19651  0155CE  0EF7               	movlw	-9
 19652  0155D0  2AE3               	incf	plusw1,f,c
 19653  0155D2                     u10870:
 19654                           
 19655                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
 19656  0155D2  AE3D               	btfss	(_prec+1)^0,7,c
 19657                           
 19658                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
 19659  0155D4  923E               	bcf	_flags^0,1,c
 19660                           
 19661                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
 19662  0155D6  BE3D               	btfsc	(_prec+1)^0,7,c
 19663  0155D8  D005               	goto	u10890
 19664  0155DA  503D               	movf	(_prec+1)^0,w,c
 19665  0155DC  E110               	bnz	l11761
 19666  0155DE  043C               	decf	_prec^0,w,c
 19667  0155E0  B0D8               	btfsc	status,0,c
 19668  0155E2  D00D               	goto	l11761
 19669  0155E4                     u10890:
 19670  0155E4  0E01               	movlw	1
 19671  0155E6  6E0B               	movwf	(btemp+10)^0,c
 19672  0155E8  0E00               	movlw	0
 19673  0155EA  6E0C               	movwf	(btemp+11)^0,c
 19674                           
 19675                           ;stkvar	_p @ sp[(-18)+16]
 19676  0155EC  0EFE               	movlw	-2
 19677  0155EE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19678  0155F4  0EFF               	movlw	-1
 19679  0155F6  0060  F033  FFE3   	movff	btemp+11,plusw1
 19680  0155FC  D008               	goto	l2163
 19681  0155FE                     l11761:
 19682                           
 19683                           ;stkvar	_p @ sp[(-18)+16]
 19684  0155FE  0EFE               	movlw	-2
 19685  015600  0060  F0F3  FFE3   	movff	_prec,plusw1
 19686  015606  0EFF               	movlw	-1
 19687  015608  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 19688  01560E                     l2163:
 19689                           
 19690                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 291:     w = width;
 19691                           ;stkvar	_w @ sp[(-18)+14]
 19692  01560E  0EFC               	movlw	-4
 19693  015610  0060  F0EB  FFE3   	movff	_width,plusw1
 19694  015616  0EFD               	movlw	-3
 19695  015618  0060  F0EF  FFE3   	movff	_width+1,plusw1
 19696                           
 19697                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
 19698                           ;stkvar	_s @ sp[(-18)+12]
 19699  01561E  0EFA               	movlw	-6
 19700  015620  006F FF8C  F001    	movff	plusw1,btemp
 19701  015626  0EFB               	movlw	-5
 19702  015628  50E3               	movf	plusw1,w,c
 19703  01562A  1001               	iorwf	btemp^0,w,c
 19704  01562C  A4D8               	btfss	status,2,c
 19705  01562E  D002               	goto	u10910
 19706  015630  A43E               	btfss	_flags^0,2,c
 19707  015632  D00A               	goto	l11769
 19708  015634                     u10910:
 19709                           
 19710                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 293:         --w;
 19711                           ;stkvar	_w @ sp[(-18)+14]
 19712  015634  50E1               	movf	fsr1l,w,c
 19713  015636  0FFC               	addlw	-4
 19714  015638  6ED9               	movwf	fsr2l,c
 19715  01563A  50E2               	movf	fsr1h,w,c
 19716  01563C  6EDA               	movwf	fsr2h,c
 19717  01563E  0EFF               	movlw	255
 19718  015640  22DA               	addwfc	fsr2h,f,c
 19719  015642  06DE               	decf	postinc2,f,c
 19720  015644  0E00               	movlw	0
 19721  015646  5ADD               	subwfb	postdec2,f,c
 19722  015648                     l11769:
 19723                           
 19724                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
 19725  015648  0E4F               	movlw	79
 19726  01564A  6E0B               	movwf	(btemp+10)^0,c
 19727  01564C  0E00               	movlw	0
 19728  01564E  6E0C               	movwf	(btemp+11)^0,c
 19729                           
 19730                           ;stkvar	_i @ sp[(-18)+10]
 19731  015650  0EF8               	movlw	-8
 19732  015652  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19733  015658  0EF9               	movlw	-7
 19734  01565A  0060  F033  FFE3   	movff	btemp+11,plusw1
 19735                           
 19736                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
 19737  015660  0102               	movlb	2	; () banked
 19738  015662  6BE6               	clrf	(_dbuf+79)& (0+255),b
 19739                           
 19740                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 19741  015664  D109               	goto	l11783
 19742  015666                     l11773:
 19743                           
 19744                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 300:         --i;
 19745                           ;stkvar	_i @ sp[(-18)+10]
 19746  015666  50E1               	movf	fsr1l,w,c
 19747  015668  0FF8               	addlw	-8
 19748  01566A  6ED9               	movwf	fsr2l,c
 19749  01566C  50E2               	movf	fsr1h,w,c
 19750  01566E  6EDA               	movwf	fsr2h,c
 19751  015670  0EFF               	movlw	255
 19752  015672  22DA               	addwfc	fsr2h,f,c
 19753  015674  06DE               	decf	postinc2,f,c
 19754  015676  0E00               	movlw	0
 19755  015678  5ADD               	subwfb	postdec2,f,c
 19756                           
 19757                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
 19758  01567A  0E0A               	movlw	10
 19759  01567C  6EE6               	movwf	postinc1,c
 19760  01567E  0E00               	movlw	0
 19761  015680  6EE6               	movwf	postinc1,c
 19762  015682  0E00               	movlw	0
 19763  015684  6EE6               	movwf	postinc1,c
 19764  015686  0E00               	movlw	0
 19765  015688  6EE6               	movwf	postinc1,c
 19766  01568A  0E00               	movlw	0
 19767  01568C  6EE6               	movwf	postinc1,c
 19768  01568E  0E00               	movlw	0
 19769  015690  6EE6               	movwf	postinc1,c
 19770  015692  0E00               	movlw	0
 19771  015694  6EE6               	movwf	postinc1,c
 19772  015696  0E00               	movlw	0
 19773  015698  6EE6               	movwf	postinc1,c
 19774                           
 19775                           ;stkvar	_n @ sp[(-26)+2]
 19776  01569A  50E1               	movf	fsr1l,w,c
 19777  01569C  0FE8               	addlw	-24
 19778  01569E  6ED9               	movwf	fsr2l,c
 19779  0156A0  50E2               	movf	fsr1h,w,c
 19780  0156A2  6EDA               	movwf	fsr2h,c
 19781  0156A4  0EFF               	movlw	255
 19782  0156A6  22DA               	addwfc	fsr2h,f,c
 19783  0156A8  006F FF7B FFE6     	movff	postinc2,postinc1
 19784  0156AE  006F FF7B FFE6     	movff	postinc2,postinc1
 19785  0156B4  006F FF7B FFE6     	movff	postinc2,postinc1
 19786  0156BA  006F FF7B FFE6     	movff	postinc2,postinc1
 19787  0156C0  006F FF7B FFE6     	movff	postinc2,postinc1
 19788  0156C6  006F FF7B FFE6     	movff	postinc2,postinc1
 19789  0156CC  006F FF7B FFE6     	movff	postinc2,postinc1
 19790  0156D2  006F FF7B FFE6     	movff	postinc2,postinc1
 19791  0156D8  EC7C  F0BC         	call	___aomod	;wreg free
 19792  0156DC  52E5               	movf	postdec1,f,c
 19793  0156DE  006F FF9C  F018    	movff	indf1,btemp+23
 19794  0156E4  52E5               	movf	postdec1,f,c
 19795  0156E6  006F FF9C  F017    	movff	indf1,btemp+22
 19796  0156EC  52E5               	movf	postdec1,f,c
 19797  0156EE  006F FF9C  F016    	movff	indf1,btemp+21
 19798  0156F4  52E5               	movf	postdec1,f,c
 19799  0156F6  006F FF9C  F015    	movff	indf1,btemp+20
 19800  0156FC  52E5               	movf	postdec1,f,c
 19801  0156FE  006F FF9C  F014    	movff	indf1,btemp+19
 19802  015704  52E5               	movf	postdec1,f,c
 19803  015706  006F FF9C  F013    	movff	indf1,btemp+18
 19804  01570C  52E5               	movf	postdec1,f,c
 19805  01570E  006F FF9C  F012    	movff	indf1,btemp+17
 19806  015714  52E5               	movf	postdec1,f,c
 19807  015716  006F FF9C  F011    	movff	indf1,btemp+16
 19808  01571C  0EF8               	movlw	248
 19809  01571E  26E1               	addwf	fsr1l,f,c
 19810  015720  0EFF               	movlw	255
 19811  015722  22E2               	addwfc	fsr1h,f,c
 19812  015724  0060  F044  F00B   	movff	btemp+16,btemp+10
 19813  01572A  0060  F048  F00C   	movff	btemp+17,btemp+11
 19814  015730  0060  F02F  FFE6   	movff	btemp+10,postinc1
 19815  015736  0060  F033  FFE6   	movff	btemp+11,postinc1
 19816  01573C  ECE5  F0D8         	call	_abs	;wreg free
 19817  015740  0E30               	movlw	48
 19818  015742  2601               	addwf	btemp^0,f,c
 19819                           
 19820                           ;stkvar	_i @ sp[(-18)+10]
 19821  015744  0EF8               	movlw	-8
 19822  015746  006F FF8C  F00B    	movff	plusw1,btemp+10
 19823  01574C  0EF9               	movlw	-7
 19824  01574E  006F FF8C  F00C    	movff	plusw1,btemp+11
 19825  015754  0E97               	movlw	low _dbuf
 19826  015756  240B               	addwf	(btemp+10)^0,w,c
 19827  015758  6ED9               	movwf	fsr2l,c
 19828  01575A  0E02               	movlw	high _dbuf
 19829  01575C  200C               	addwfc	(btemp+11)^0,w,c
 19830  01575E  6EDA               	movwf	fsr2h,c
 19831  015760  0060  F007  FFDF   	movff	btemp,indf2
 19832                           
 19833                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 302:         --p;
 19834                           ;stkvar	_p @ sp[(-18)+16]
 19835  015766  50E1               	movf	fsr1l,w,c
 19836  015768  0FFE               	addlw	-2
 19837  01576A  6ED9               	movwf	fsr2l,c
 19838  01576C  50E2               	movf	fsr1h,w,c
 19839  01576E  6EDA               	movwf	fsr2h,c
 19840  015770  0EFF               	movlw	255
 19841  015772  22DA               	addwfc	fsr2h,f,c
 19842  015774  06DE               	decf	postinc2,f,c
 19843  015776  0E00               	movlw	0
 19844  015778  5ADD               	subwfb	postdec2,f,c
 19845                           
 19846                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 303:         --w;
 19847                           ;stkvar	_w @ sp[(-18)+14]
 19848  01577A  50E1               	movf	fsr1l,w,c
 19849  01577C  0FFC               	addlw	-4
 19850  01577E  6ED9               	movwf	fsr2l,c
 19851  015780  50E2               	movf	fsr1h,w,c
 19852  015782  6EDA               	movwf	fsr2h,c
 19853  015784  0EFF               	movlw	255
 19854  015786  22DA               	addwfc	fsr2h,f,c
 19855  015788  06DE               	decf	postinc2,f,c
 19856  01578A  0E00               	movlw	0
 19857  01578C  5ADD               	subwfb	postdec2,f,c
 19858                           
 19859                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
 19860  01578E  0E0A               	movlw	10
 19861  015790  6EE6               	movwf	postinc1,c
 19862  015792  0E00               	movlw	0
 19863  015794  6EE6               	movwf	postinc1,c
 19864  015796  0E00               	movlw	0
 19865  015798  6EE6               	movwf	postinc1,c
 19866  01579A  0E00               	movlw	0
 19867  01579C  6EE6               	movwf	postinc1,c
 19868  01579E  0E00               	movlw	0
 19869  0157A0  6EE6               	movwf	postinc1,c
 19870  0157A2  0E00               	movlw	0
 19871  0157A4  6EE6               	movwf	postinc1,c
 19872  0157A6  0E00               	movlw	0
 19873  0157A8  6EE6               	movwf	postinc1,c
 19874  0157AA  0E00               	movlw	0
 19875  0157AC  6EE6               	movwf	postinc1,c
 19876                           
 19877                           ;stkvar	_n @ sp[(-26)+2]
 19878  0157AE  50E1               	movf	fsr1l,w,c
 19879  0157B0  0FE8               	addlw	-24
 19880  0157B2  6ED9               	movwf	fsr2l,c
 19881  0157B4  50E2               	movf	fsr1h,w,c
 19882  0157B6  6EDA               	movwf	fsr2h,c
 19883  0157B8  0EFF               	movlw	255
 19884  0157BA  22DA               	addwfc	fsr2h,f,c
 19885  0157BC  006F FF7B FFE6     	movff	postinc2,postinc1
 19886  0157C2  006F FF7B FFE6     	movff	postinc2,postinc1
 19887  0157C8  006F FF7B FFE6     	movff	postinc2,postinc1
 19888  0157CE  006F FF7B FFE6     	movff	postinc2,postinc1
 19889  0157D4  006F FF7B FFE6     	movff	postinc2,postinc1
 19890  0157DA  006F FF7B FFE6     	movff	postinc2,postinc1
 19891  0157E0  006F FF7B FFE6     	movff	postinc2,postinc1
 19892  0157E6  006F FF7B FFE6     	movff	postinc2,postinc1
 19893  0157EC  EC02  F0BA         	call	___aodiv	;wreg free
 19894  0157F0  52E5               	movf	postdec1,f,c
 19895  0157F2  006F FF9C  F018    	movff	indf1,btemp+23
 19896  0157F8  52E5               	movf	postdec1,f,c
 19897  0157FA  006F FF9C  F017    	movff	indf1,btemp+22
 19898  015800  52E5               	movf	postdec1,f,c
 19899  015802  006F FF9C  F016    	movff	indf1,btemp+21
 19900  015808  52E5               	movf	postdec1,f,c
 19901  01580A  006F FF9C  F015    	movff	indf1,btemp+20
 19902  015810  52E5               	movf	postdec1,f,c
 19903  015812  006F FF9C  F014    	movff	indf1,btemp+19
 19904  015818  52E5               	movf	postdec1,f,c
 19905  01581A  006F FF9C  F013    	movff	indf1,btemp+18
 19906  015820  52E5               	movf	postdec1,f,c
 19907  015822  006F FF9C  F012    	movff	indf1,btemp+17
 19908  015828  52E5               	movf	postdec1,f,c
 19909  01582A  006F FF9C  F011    	movff	indf1,btemp+16
 19910  015830  0EF8               	movlw	248
 19911  015832  26E1               	addwf	fsr1l,f,c
 19912  015834  0EFF               	movlw	255
 19913  015836  22E2               	addwfc	fsr1h,f,c
 19914                           
 19915                           ;stkvar	_n @ sp[(-18)+2]
 19916  015838  0EF0               	movlw	-16
 19917  01583A  0060  F047  FFE3   	movff	btemp+16,plusw1
 19918  015840  0EF1               	movlw	-15
 19919  015842  0060  F04B  FFE3   	movff	btemp+17,plusw1
 19920  015848  0EF2               	movlw	-14
 19921  01584A  0060  F04F  FFE3   	movff	btemp+18,plusw1
 19922  015850  0EF3               	movlw	-13
 19923  015852  0060  F053  FFE3   	movff	btemp+19,plusw1
 19924  015858  0EF4               	movlw	-12
 19925  01585A  0060  F057  FFE3   	movff	btemp+20,plusw1
 19926  015860  0EF5               	movlw	-11
 19927  015862  0060  F05B  FFE3   	movff	btemp+21,plusw1
 19928  015868  0EF6               	movlw	-10
 19929  01586A  0060  F05F  FFE3   	movff	btemp+22,plusw1
 19930  015870  0EF7               	movlw	-9
 19931  015872  0060  F063  FFE3   	movff	btemp+23,plusw1
 19932  015878                     l11783:
 19933                           
 19934                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 19935                           ;stkvar	_i @ sp[(-18)+10]
 19936  015878  0EF9               	movlw	-7
 19937  01587A  BEE3               	btfsc	plusw1,7,c
 19938  01587C  D036               	goto	u10960
 19939  01587E  0EF9               	movlw	-7
 19940  015880  50E3               	movf	plusw1,w,c
 19941  015882  E104               	bnz	u10920
 19942  015884  0EF8               	movlw	-8
 19943  015886  04E3               	decf	plusw1,w,c
 19944  015888  A0D8               	btfss	status,0,c
 19945  01588A  D02F               	goto	u10960
 19946  01588C                     u10920:
 19947                           
 19948                           ;stkvar	_n @ sp[(-18)+2]
 19949  01588C  0EF0               	movlw	-16
 19950  01588E  50E3               	movf	plusw1,w,c
 19951  015890  E115               	bnz	u10931
 19952  015892  0EF1               	movlw	-15
 19953  015894  50E3               	movf	plusw1,w,c
 19954  015896  E112               	bnz	u10931
 19955  015898  0EF2               	movlw	-14
 19956  01589A  50E3               	movf	plusw1,w,c
 19957  01589C  E10F               	bnz	u10931
 19958  01589E  0EF3               	movlw	-13
 19959  0158A0  50E3               	movf	plusw1,w,c
 19960  0158A2  E10C               	bnz	u10931
 19961  0158A4  0EF4               	movlw	-12
 19962  0158A6  50E3               	movf	plusw1,w,c
 19963  0158A8  E109               	bnz	u10931
 19964  0158AA  0EF5               	movlw	-11
 19965  0158AC  50E3               	movf	plusw1,w,c
 19966  0158AE  E106               	bnz	u10931
 19967  0158B0  0EF6               	movlw	-10
 19968  0158B2  50E3               	movf	plusw1,w,c
 19969  0158B4  E103               	bnz	u10931
 19970  0158B6  0EF7               	movlw	-9
 19971  0158B8  50E3               	movf	plusw1,w,c
 19972  0158BA  A4D8               	btfss	status,2,c
 19973  0158BC                     u10931:
 19974  0158BC  D6D4               	goto	l11773
 19975                           
 19976                           ;stkvar	_p @ sp[(-18)+16]
 19977  0158BE  0EFF               	movlw	-1
 19978  0158C0  BEE3               	btfsc	plusw1,7,c
 19979  0158C2  D007               	goto	u10940
 19980  0158C4  0EFF               	movlw	-1
 19981  0158C6  50E3               	movf	plusw1,w,c
 19982  0158C8  E103               	bnz	u10941
 19983  0158CA  0EFE               	movlw	-2
 19984  0158CC  04E3               	decf	plusw1,w,c
 19985  0158CE  B0D8               	btfsc	status,0,c
 19986  0158D0                     u10941:
 19987  0158D0  D6CA               	goto	l11773
 19988  0158D2                     u10940:
 19989                           
 19990                           ;stkvar	_w @ sp[(-18)+14]
 19991  0158D2  0EFD               	movlw	-3
 19992  0158D4  BEE3               	btfsc	plusw1,7,c
 19993  0158D6  D009               	goto	u10960
 19994  0158D8  0EFD               	movlw	-3
 19995  0158DA  50E3               	movf	plusw1,w,c
 19996  0158DC  E104               	bnz	u10950
 19997  0158DE  0EFC               	movlw	-4
 19998  0158E0  04E3               	decf	plusw1,w,c
 19999  0158E2  A0D8               	btfss	status,0,c
 20000  0158E4  D002               	goto	u10960
 20001  0158E6                     u10950:
 20002  0158E6  B23E               	btfsc	_flags^0,1,c
 20003  0158E8  D6BE               	goto	l11773
 20004  0158EA                     u10960:
 20005                           
 20006                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
 20007                           ;stkvar	_s @ sp[(-18)+12]
 20008  0158EA  0EFA               	movlw	-6
 20009  0158EC  006F FF8C  F001    	movff	plusw1,btemp
 20010  0158F2  0EFB               	movlw	-5
 20011  0158F4  50E3               	movf	plusw1,w,c
 20012  0158F6  1001               	iorwf	btemp^0,w,c
 20013  0158F8  A4D8               	btfss	status,2,c
 20014  0158FA  D002               	goto	u10980
 20015  0158FC  A43E               	btfss	_flags^0,2,c
 20016  0158FE  D033               	goto	l11807
 20017  015900                     u10980:
 20018                           
 20019                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 309:         --i;
 20020                           ;stkvar	_i @ sp[(-18)+10]
 20021  015900  50E1               	movf	fsr1l,w,c
 20022  015902  0FF8               	addlw	-8
 20023  015904  6ED9               	movwf	fsr2l,c
 20024  015906  50E2               	movf	fsr1h,w,c
 20025  015908  6EDA               	movwf	fsr2h,c
 20026  01590A  0EFF               	movlw	255
 20027  01590C  22DA               	addwfc	fsr2h,f,c
 20028  01590E  06DE               	decf	postinc2,f,c
 20029  015910  0E00               	movlw	0
 20030  015912  5ADD               	subwfb	postdec2,f,c
 20031                           
 20032                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
 20033                           ;stkvar	_s @ sp[(-18)+12]
 20034  015914  0EFA               	movlw	-6
 20035  015916  006F FF8C  F001    	movff	plusw1,btemp
 20036  01591C  0EFB               	movlw	-5
 20037  01591E  50E3               	movf	plusw1,w,c
 20038  015920  1001               	iorwf	btemp^0,w,c
 20039  015922  A4D8               	btfss	status,2,c
 20040  015924  D002               	goto	l11803
 20041  015926  0E2B               	movlw	43
 20042  015928  D001               	goto	L24
 20043  01592A                     l11803:
 20044  01592A  0E2D               	movlw	45
 20045  01592C                     L24:
 20046  01592C  6E0B               	movwf	(btemp+10)^0,c
 20047  01592E  0E00               	movlw	0
 20048  015930  6E0C               	movwf	(btemp+11)^0,c
 20049                           
 20050                           ;stkvar	_dtoa$5471 @ sp[(-18)+0]
 20051  015932  0EEE               	movlw	-18
 20052  015934  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20053  01593A  0EEF               	movlw	-17
 20054  01593C  0060  F033  FFE3   	movff	btemp+11,plusw1
 20055                           
 20056                           ;stkvar	_dtoa$5471 @ sp[(-18)+0]
 20057                           ;stkvar	_i @ sp[(-18)+10]
 20058  015942  0EF8               	movlw	-8
 20059  015944  006F FF8C  F00B    	movff	plusw1,btemp+10
 20060  01594A  0EF9               	movlw	-7
 20061  01594C  006F FF8C  F00C    	movff	plusw1,btemp+11
 20062  015952  0E97               	movlw	low _dbuf
 20063  015954  240B               	addwf	(btemp+10)^0,w,c
 20064  015956  6ED9               	movwf	fsr2l,c
 20065  015958  0E02               	movlw	high _dbuf
 20066  01595A  200C               	addwfc	(btemp+11)^0,w,c
 20067  01595C  6EDA               	movwf	fsr2h,c
 20068  01595E  0EEE               	movlw	-18
 20069  015960  006F FF8F FFDF     	movff	plusw1,indf2
 20070  015966                     l11807:
 20071                           
 20072                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
 20073                           ;stkvar	_w @ sp[(-18)+14]
 20074  015966  0EFC               	movlw	-4
 20075  015968  006F FF8F FFE6     	movff	plusw1,postinc1
 20076  01596E  006F FF8F FFE6     	movff	plusw1,postinc1
 20077                           
 20078                           ;stkvar	_i @ sp[(-20)+10]
 20079  015974  0E97               	movlw	low _dbuf
 20080  015976  6E0B               	movwf	(btemp+10)^0,c
 20081  015978  0E02               	movlw	high _dbuf
 20082  01597A  6E0C               	movwf	(btemp+11)^0,c
 20083  01597C  0EF6               	movlw	-10
 20084  01597E  50E3               	movf	plusw1,w,c
 20085  015980  260B               	addwf	(btemp+10)^0,f,c
 20086  015982  0EF7               	movlw	-9
 20087  015984  50E3               	movf	plusw1,w,c
 20088  015986  220C               	addwfc	(btemp+11)^0,f,c
 20089  015988  0060  F02F  FFE6   	movff	btemp+10,postinc1
 20090  01598E  0060  F033  FFE6   	movff	btemp+11,postinc1
 20091                           
 20092                           ;stkvar	_fp @ sp[(-22)+-2]
 20093  015994  0EE8               	movlw	-24
 20094  015996  006F FF8F FFE6     	movff	plusw1,postinc1
 20095  01599C  006F FF8F FFE6     	movff	plusw1,postinc1
 20096  0159A2  EC0F  F0CC         	call	_pad	;wreg free
 20097                           
 20098                           ; _dtoa: autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 20099  0159A6  0EE4               	movlw	228
 20100  0159A8  26E1               	addwf	fsr1l,f,c
 20101  0159AA  0EFF               	movlw	255
 20102  0159AC  22E2               	addwfc	fsr1h,f,c
 20103  0159AE  0012               	return		;funcret
 20104  0159B0                     __end_of_dtoa:
 20105                           	opt callstack 0
 20106                           
 20107 ;; *************** function _abs *****************
 20108 ;; Defined at:
 20109 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/abs.c"
 20110 ;; Parameters:    Size  Location     Type
 20111 ;;  a               2  [STACK] int 
 20112 ;; Auto vars:     Size  Location     Type
 20113 ;;		None
 20114 ;; Return value:  Size  Location     Type
 20115 ;;                  2  [STACK] int 
 20116 ;; Registers used:
 20117 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
 20118 ;; Tracked objects:
 20119 ;;		On entry : 0/2
 20120 ;;		On exit  : 0/0
 20121 ;;		Unchanged: 0/0
 20122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20123 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20124 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20125 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20126 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20127 ;;Total ram usage:        0 bytes
 20128 ;; Hardware stack levels used:    1
 20129 ;; Hardware stack levels required when called:   15
 20130 ;; This function calls:
 20131 ;;		Nothing
 20132 ;; This function is called by:
 20133 ;;		_dtoa
 20134 ;; This function uses a reentrant model
 20135 ;;
 20136                           
 20137                           	psect	text67
 20138  01B1CA                     __ptext67:
 20139                           	opt callstack 0
 20140  01B1CA                     _abs:
 20141                           	opt callstack 0
 20142                           
 20143                           ;stkvar	_a @ sp[(0)+-2]
 20144                           
 20145                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20146                           ;incstack = 0
 20147 ;; hardware stack exceeded
 20148  01B1CA  0EFF               	movlw	-1
 20149  01B1CC  BEE3               	btfsc	plusw1,7,c
 20150  01B1CE  D007               	goto	u5910
 20151  01B1D0  0EFF               	movlw	-1
 20152  01B1D2  50E3               	movf	plusw1,w,c
 20153  01B1D4  E112               	bnz	l7887
 20154  01B1D6  0EFE               	movlw	-2
 20155  01B1D8  04E3               	decf	plusw1,w,c
 20156  01B1DA  B0D8               	btfsc	status,0,c
 20157  01B1DC  D00E               	goto	l7887
 20158  01B1DE                     u5910:
 20159                           
 20160                           ;stkvar	_a @ sp[(0)+-2]
 20161  01B1DE  0EFE               	movlw	-2
 20162  01B1E0  006F FF8C  F001    	movff	plusw1,btemp
 20163  01B1E6  1E01               	comf	btemp^0,f,c
 20164  01B1E8  0EFF               	movlw	-1
 20165  01B1EA  006F FF8C  F002    	movff	plusw1,btemp+1
 20166  01B1F0  1E02               	comf	(btemp+1)^0,f,c
 20167  01B1F2  2A01               	incf	btemp^0,f,c
 20168  01B1F4  B4D8               	btfsc	status,2,c
 20169  01B1F6  2A02               	incf	(btemp+1)^0,f,c
 20170  01B1F8  D008               	goto	l3089
 20171  01B1FA                     l7887:
 20172                           
 20173                           ;stkvar	_a @ sp[(0)+-2]
 20174  01B1FA  0EFE               	movlw	-2
 20175  01B1FC  006F FF8C  F001    	movff	plusw1,btemp
 20176  01B202  0EFF               	movlw	-1
 20177  01B204  006F FF8C  F002    	movff	plusw1,btemp+1
 20178  01B20A                     l3089:
 20179                           
 20180                           ; _abs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize =
      +                           2, vargsize = 0
 20181  01B20A  52E5               	movf	postdec1,f,c
 20182  01B20C  52E5               	movf	postdec1,f,c
 20183  01B20E  0012               	return		;funcret
 20184  01B210                     __end_of_abs:
 20185                           	opt callstack 0
 20186                           
 20187 ;; *************** function ___aomod *****************
 20188 ;; Defined at:
 20189 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aomod.c"
 20190 ;; Parameters:    Size  Location     Type
 20191 ;;  dividend        8  [STACK] long long 
 20192 ;;  divisor         8  [STACK] long long 
 20193 ;; Auto vars:     Size  Location     Type
 20194 ;;  sign            1  [STACK] unsigned char 
 20195 ;;  counter         1  [STACK] unsigned char 
 20196 ;; Return value:  Size  Location     Type
 20197 ;;                  8  [STACK] long long 
 20198 ;; Registers used:
 20199 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 20200 ;; Tracked objects:
 20201 ;;		On entry : 0/2
 20202 ;;		On exit  : 0/0
 20203 ;;		Unchanged: 0/0
 20204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20205 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20206 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20207 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20208 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20209 ;;Total ram usage:        0 bytes
 20210 ;; Hardware stack levels used:    1
 20211 ;; Hardware stack levels required when called:   15
 20212 ;; This function calls:
 20213 ;;		Nothing
 20214 ;; This function is called by:
 20215 ;;		_dtoa
 20216 ;; This function uses a reentrant model
 20217 ;;
 20218                           
 20219                           	psect	text68
 20220  0178F8                     __ptext68:
 20221                           	opt callstack 0
 20222  0178F8                     ___aomod:
 20223                           	opt callstack 0
 20224                           
 20225                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 20226  0178F8  52E6               	movf	postinc1,f,c
 20227  0178FA  52E6               	movf	postinc1,f,c
 20228                           
 20229                           ;stkvar	_sign @ sp[(-2)+0]
 20230                           
 20231                           ;incstack = 0
 20232 ;; hardware stack exceeded
 20233  0178FC  0EFE               	movlw	-2
 20234  0178FE  6AE3               	clrf	plusw1,c
 20235                           
 20236                           ;stkvar	_dividend @ sp[(-2)+-8]
 20237  017900  0EFD               	movlw	-3
 20238  017902  AEE3               	btfss	plusw1,7,c
 20239  017904  D028               	goto	l8045
 20240                           
 20241                           ;stkvar	_dividend @ sp[(-2)+-8]
 20242                           ;stkvar	_dividend @ sp[(-2)+-8]
 20243  017906  0EF6               	movlw	-10
 20244  017908  6CE3               	negf	plusw1,c
 20245  01790A  0EF7               	movlw	-9
 20246  01790C  1EE3               	comf	plusw1,f,c
 20247  01790E  0EF8               	movlw	-8
 20248  017910  1EE3               	comf	plusw1,f,c
 20249  017912  0EF9               	movlw	-7
 20250  017914  1EE3               	comf	plusw1,f,c
 20251  017916  0EFA               	movlw	-6
 20252  017918  1EE3               	comf	plusw1,f,c
 20253  01791A  0EFB               	movlw	-5
 20254  01791C  1EE3               	comf	plusw1,f,c
 20255  01791E  0EFC               	movlw	-4
 20256  017920  1EE3               	comf	plusw1,f,c
 20257  017922  0EFD               	movlw	-3
 20258  017924  1EE3               	comf	plusw1,f,c
 20259  017926  E314               	bnc	u6340
 20260  017928  0EF7               	movlw	-9
 20261  01792A  2AE3               	incf	plusw1,f,c
 20262  01792C  E311               	bnc	u6340
 20263  01792E  0EF8               	movlw	-8
 20264  017930  2AE3               	incf	plusw1,f,c
 20265  017932  E30E               	bnc	u6340
 20266  017934  0EF9               	movlw	-7
 20267  017936  2AE3               	incf	plusw1,f,c
 20268  017938  E30B               	bnc	u6340
 20269  01793A  0EFA               	movlw	-6
 20270  01793C  2AE3               	incf	plusw1,f,c
 20271  01793E  E308               	bnc	u6340
 20272  017940  0EFB               	movlw	-5
 20273  017942  2AE3               	incf	plusw1,f,c
 20274  017944  E305               	bnc	u6340
 20275  017946  0EFC               	movlw	-4
 20276  017948  2AE3               	incf	plusw1,f,c
 20277  01794A  E302               	bnc	u6340
 20278  01794C  0EFD               	movlw	-3
 20279  01794E  2AE3               	incf	plusw1,f,c
 20280  017950                     u6340:
 20281                           
 20282                           ;stkvar	_sign @ sp[(-2)+0]
 20283  017950  0EFE               	movlw	-2
 20284  017952  6AE3               	clrf	plusw1,c
 20285  017954  2AE3               	incf	plusw1,f,c
 20286  017956                     l8045:
 20287                           
 20288                           ;stkvar	_divisor @ sp[(-2)+-16]
 20289  017956  0EF5               	movlw	-11
 20290  017958  AEE3               	btfss	plusw1,7,c
 20291  01795A  D025               	goto	u6360
 20292                           
 20293                           ;stkvar	_divisor @ sp[(-2)+-16]
 20294                           ;stkvar	_divisor @ sp[(-2)+-16]
 20295  01795C  0EEE               	movlw	-18
 20296  01795E  6CE3               	negf	plusw1,c
 20297  017960  0EEF               	movlw	-17
 20298  017962  1EE3               	comf	plusw1,f,c
 20299  017964  0EF0               	movlw	-16
 20300  017966  1EE3               	comf	plusw1,f,c
 20301  017968  0EF1               	movlw	-15
 20302  01796A  1EE3               	comf	plusw1,f,c
 20303  01796C  0EF2               	movlw	-14
 20304  01796E  1EE3               	comf	plusw1,f,c
 20305  017970  0EF3               	movlw	-13
 20306  017972  1EE3               	comf	plusw1,f,c
 20307  017974  0EF4               	movlw	-12
 20308  017976  1EE3               	comf	plusw1,f,c
 20309  017978  0EF5               	movlw	-11
 20310  01797A  1EE3               	comf	plusw1,f,c
 20311  01797C  E314               	bnc	u6360
 20312  01797E  0EEF               	movlw	-17
 20313  017980  2AE3               	incf	plusw1,f,c
 20314  017982  E311               	bnc	u6360
 20315  017984  0EF0               	movlw	-16
 20316  017986  2AE3               	incf	plusw1,f,c
 20317  017988  E30E               	bnc	u6360
 20318  01798A  0EF1               	movlw	-15
 20319  01798C  2AE3               	incf	plusw1,f,c
 20320  01798E  E30B               	bnc	u6360
 20321  017990  0EF2               	movlw	-14
 20322  017992  2AE3               	incf	plusw1,f,c
 20323  017994  E308               	bnc	u6360
 20324  017996  0EF3               	movlw	-13
 20325  017998  2AE3               	incf	plusw1,f,c
 20326  01799A  E305               	bnc	u6360
 20327  01799C  0EF4               	movlw	-12
 20328  01799E  2AE3               	incf	plusw1,f,c
 20329  0179A0  E302               	bnc	u6360
 20330  0179A2  0EF5               	movlw	-11
 20331  0179A4  2AE3               	incf	plusw1,f,c
 20332  0179A6                     u6360:
 20333                           
 20334                           ;stkvar	_divisor @ sp[(-2)+-16]
 20335  0179A6  0EEE               	movlw	-18
 20336  0179A8  50E3               	movf	plusw1,w,c
 20337  0179AA  E116               	bnz	u6370
 20338  0179AC  0EEF               	movlw	-17
 20339  0179AE  50E3               	movf	plusw1,w,c
 20340  0179B0  E113               	bnz	u6370
 20341  0179B2  0EF0               	movlw	-16
 20342  0179B4  50E3               	movf	plusw1,w,c
 20343  0179B6  E110               	bnz	u6370
 20344  0179B8  0EF1               	movlw	-15
 20345  0179BA  50E3               	movf	plusw1,w,c
 20346  0179BC  E10D               	bnz	u6370
 20347  0179BE  0EF2               	movlw	-14
 20348  0179C0  50E3               	movf	plusw1,w,c
 20349  0179C2  E10A               	bnz	u6370
 20350  0179C4  0EF3               	movlw	-13
 20351  0179C6  50E3               	movf	plusw1,w,c
 20352  0179C8  E107               	bnz	u6370
 20353  0179CA  0EF4               	movlw	-12
 20354  0179CC  50E3               	movf	plusw1,w,c
 20355  0179CE  E104               	bnz	u6370
 20356  0179D0  0EF5               	movlw	-11
 20357  0179D2  50E3               	movf	plusw1,w,c
 20358  0179D4  B4D8               	btfsc	status,2,c
 20359  0179D6  D075               	goto	u6400
 20360  0179D8                     u6370:
 20361                           
 20362                           ;stkvar	_counter @ sp[(-2)+1]
 20363  0179D8  0EFF               	movlw	-1
 20364  0179DA  6AE3               	clrf	plusw1,c
 20365  0179DC  D012               	goto	L25
 20366  0179DE                     l8053:
 20367                           
 20368                           ;stkvar	_divisor @ sp[(-2)+-16]
 20369  0179DE  90D8               	bcf	status,0,c
 20370  0179E0  0EEE               	movlw	-18
 20371  0179E2  36E3               	rlcf	plusw1,f,c
 20372  0179E4  0EEF               	movlw	-17
 20373  0179E6  36E3               	rlcf	plusw1,f,c
 20374  0179E8  0EF0               	movlw	-16
 20375  0179EA  36E3               	rlcf	plusw1,f,c
 20376  0179EC  0EF1               	movlw	-15
 20377  0179EE  36E3               	rlcf	plusw1,f,c
 20378  0179F0  0EF2               	movlw	-14
 20379  0179F2  36E3               	rlcf	plusw1,f,c
 20380  0179F4  0EF3               	movlw	-13
 20381  0179F6  36E3               	rlcf	plusw1,f,c
 20382  0179F8  0EF4               	movlw	-12
 20383  0179FA  36E3               	rlcf	plusw1,f,c
 20384  0179FC  0EF5               	movlw	-11
 20385  0179FE  36E3               	rlcf	plusw1,f,c
 20386                           
 20387                           ;stkvar	_counter @ sp[(-2)+1]
 20388  017A00  0EFF               	movlw	-1
 20389  017A02                     L25:
 20390  017A02  2AE3               	incf	plusw1,f,c
 20391                           
 20392                           ;stkvar	_divisor @ sp[(-2)+-16]
 20393  017A04  0EF5               	movlw	-11
 20394  017A06  AEE3               	btfss	plusw1,7,c
 20395  017A08  D7EA               	goto	l8053
 20396  017A0A                     u6380:
 20397                           
 20398                           ;stkvar	_divisor @ sp[(-2)+-16]
 20399                           ;stkvar	_dividend @ sp[(-2)+-8]
 20400  017A0A  50E1               	movf	fsr1l,w,c
 20401  017A0C  0FF6               	addlw	-10
 20402  017A0E  6ED9               	movwf	fsr2l,c
 20403  017A10  50E2               	movf	fsr1h,w,c
 20404  017A12  6EDA               	movwf	fsr2h,c
 20405  017A14  0EFF               	movlw	255
 20406  017A16  22DA               	addwfc	fsr2h,f,c
 20407  017A18  0EEE               	movlw	-18
 20408  017A1A  50E3               	movf	plusw1,w,c
 20409  017A1C  5CDE               	subwf	postinc2,w,c
 20410  017A1E  0EEF               	movlw	-17
 20411  017A20  50E3               	movf	plusw1,w,c
 20412  017A22  58DE               	subwfb	postinc2,w,c
 20413  017A24  0EF0               	movlw	-16
 20414  017A26  50E3               	movf	plusw1,w,c
 20415  017A28  58DE               	subwfb	postinc2,w,c
 20416  017A2A  0EF1               	movlw	-15
 20417  017A2C  50E3               	movf	plusw1,w,c
 20418  017A2E  58DE               	subwfb	postinc2,w,c
 20419  017A30  0EF2               	movlw	-14
 20420  017A32  50E3               	movf	plusw1,w,c
 20421  017A34  58DE               	subwfb	postinc2,w,c
 20422  017A36  0EF3               	movlw	-13
 20423  017A38  50E3               	movf	plusw1,w,c
 20424  017A3A  58DE               	subwfb	postinc2,w,c
 20425  017A3C  0EF4               	movlw	-12
 20426  017A3E  50E3               	movf	plusw1,w,c
 20427  017A40  58DE               	subwfb	postinc2,w,c
 20428  017A42  0EF5               	movlw	-11
 20429  017A44  50E3               	movf	plusw1,w,c
 20430  017A46  58DE               	subwfb	postinc2,w,c
 20431  017A48  A0D8               	btfss	status,0,c
 20432  017A4A  D01F               	goto	l8061
 20433                           
 20434                           ;stkvar	_divisor @ sp[(-2)+-16]
 20435                           ;stkvar	_dividend @ sp[(-2)+-8]
 20436  017A4C  50E1               	movf	fsr1l,w,c
 20437  017A4E  0FF6               	addlw	-10
 20438  017A50  6ED9               	movwf	fsr2l,c
 20439  017A52  50E2               	movf	fsr1h,w,c
 20440  017A54  6EDA               	movwf	fsr2h,c
 20441  017A56  0EFF               	movlw	255
 20442  017A58  22DA               	addwfc	fsr2h,f,c
 20443  017A5A  0EEE               	movlw	-18
 20444  017A5C  50E3               	movf	plusw1,w,c
 20445  017A5E  5EDE               	subwf	postinc2,f,c
 20446  017A60  0EEF               	movlw	-17
 20447  017A62  50E3               	movf	plusw1,w,c
 20448  017A64  5ADE               	subwfb	postinc2,f,c
 20449  017A66  0EF0               	movlw	-16
 20450  017A68  50E3               	movf	plusw1,w,c
 20451  017A6A  5ADE               	subwfb	postinc2,f,c
 20452  017A6C  0EF1               	movlw	-15
 20453  017A6E  50E3               	movf	plusw1,w,c
 20454  017A70  5ADE               	subwfb	postinc2,f,c
 20455  017A72  0EF2               	movlw	-14
 20456  017A74  50E3               	movf	plusw1,w,c
 20457  017A76  5ADE               	subwfb	postinc2,f,c
 20458  017A78  0EF3               	movlw	-13
 20459  017A7A  50E3               	movf	plusw1,w,c
 20460  017A7C  5ADE               	subwfb	postinc2,f,c
 20461  017A7E  0EF4               	movlw	-12
 20462  017A80  50E3               	movf	plusw1,w,c
 20463  017A82  5ADE               	subwfb	postinc2,f,c
 20464  017A84  0EF5               	movlw	-11
 20465  017A86  50E3               	movf	plusw1,w,c
 20466  017A88  5ADE               	subwfb	postinc2,f,c
 20467  017A8A                     l8061:
 20468                           
 20469                           ;stkvar	_divisor @ sp[(-2)+-16]
 20470  017A8A  90D8               	bcf	status,0,c
 20471  017A8C  0EF5               	movlw	-11
 20472  017A8E  32E3               	rrcf	plusw1,f,c
 20473  017A90  0EF4               	movlw	-12
 20474  017A92  32E3               	rrcf	plusw1,f,c
 20475  017A94  0EF3               	movlw	-13
 20476  017A96  32E3               	rrcf	plusw1,f,c
 20477  017A98  0EF2               	movlw	-14
 20478  017A9A  32E3               	rrcf	plusw1,f,c
 20479  017A9C  0EF1               	movlw	-15
 20480  017A9E  32E3               	rrcf	plusw1,f,c
 20481  017AA0  0EF0               	movlw	-16
 20482  017AA2  32E3               	rrcf	plusw1,f,c
 20483  017AA4  0EEF               	movlw	-17
 20484  017AA6  32E3               	rrcf	plusw1,f,c
 20485  017AA8  0EEE               	movlw	-18
 20486  017AAA  32E3               	rrcf	plusw1,f,c
 20487                           
 20488                           ;stkvar	_counter @ sp[(-2)+1]
 20489  017AAC  0EFF               	movlw	-1
 20490  017AAE  50E3               	movf	plusw1,w,c
 20491  017AB0  6E01               	movwf	btemp^0,c
 20492  017AB2  0E01               	movlw	1
 20493  017AB4  5E01               	subwf	btemp^0,f,c
 20494  017AB6  0EFF               	movlw	-1
 20495  017AB8  0060  F007  FFE3   	movff	btemp,plusw1
 20496  017ABE  A4D8               	btfss	status,2,c
 20497  017AC0  D7A4               	goto	u6380
 20498  017AC2                     u6400:
 20499                           
 20500                           ;stkvar	_sign @ sp[(-2)+0]
 20501  017AC2  0EFE               	movlw	-2
 20502  017AC4  50E3               	movf	plusw1,w,c
 20503  017AC6  B4D8               	btfsc	status,2,c
 20504  017AC8  D025               	goto	u6420
 20505                           
 20506                           ;stkvar	_dividend @ sp[(-2)+-8]
 20507                           ;stkvar	_dividend @ sp[(-2)+-8]
 20508  017ACA  0EF6               	movlw	-10
 20509  017ACC  6CE3               	negf	plusw1,c
 20510  017ACE  0EF7               	movlw	-9
 20511  017AD0  1EE3               	comf	plusw1,f,c
 20512  017AD2  0EF8               	movlw	-8
 20513  017AD4  1EE3               	comf	plusw1,f,c
 20514  017AD6  0EF9               	movlw	-7
 20515  017AD8  1EE3               	comf	plusw1,f,c
 20516  017ADA  0EFA               	movlw	-6
 20517  017ADC  1EE3               	comf	plusw1,f,c
 20518  017ADE  0EFB               	movlw	-5
 20519  017AE0  1EE3               	comf	plusw1,f,c
 20520  017AE2  0EFC               	movlw	-4
 20521  017AE4  1EE3               	comf	plusw1,f,c
 20522  017AE6  0EFD               	movlw	-3
 20523  017AE8  1EE3               	comf	plusw1,f,c
 20524  017AEA  E314               	bnc	u6420
 20525  017AEC  0EF7               	movlw	-9
 20526  017AEE  2AE3               	incf	plusw1,f,c
 20527  017AF0  E311               	bnc	u6420
 20528  017AF2  0EF8               	movlw	-8
 20529  017AF4  2AE3               	incf	plusw1,f,c
 20530  017AF6  E30E               	bnc	u6420
 20531  017AF8  0EF9               	movlw	-7
 20532  017AFA  2AE3               	incf	plusw1,f,c
 20533  017AFC  E30B               	bnc	u6420
 20534  017AFE  0EFA               	movlw	-6
 20535  017B00  2AE3               	incf	plusw1,f,c
 20536  017B02  E308               	bnc	u6420
 20537  017B04  0EFB               	movlw	-5
 20538  017B06  2AE3               	incf	plusw1,f,c
 20539  017B08  E305               	bnc	u6420
 20540  017B0A  0EFC               	movlw	-4
 20541  017B0C  2AE3               	incf	plusw1,f,c
 20542  017B0E  E302               	bnc	u6420
 20543  017B10  0EFD               	movlw	-3
 20544  017B12  2AE3               	incf	plusw1,f,c
 20545  017B14                     u6420:
 20546                           
 20547                           ;stkvar	_dividend @ sp[(-2)+-8]
 20548  017B14  0EF6               	movlw	246
 20549  017B16  24E1               	addwf	fsr1l,w,c
 20550  017B18  6ED9               	movwf	fsr2l,c
 20551  017B1A  0EFF               	movlw	255
 20552  017B1C  20E2               	addwfc	fsr1h,w,c
 20553  017B1E  6EDA               	movwf	fsr2h,c
 20554                           
 20555                           ;stkvar	?___aomod @ sp[(-2)+-8]
 20556  017B20  0E08               	movlw	8
 20557  017B22  6E01               	movwf	btemp^0,c
 20558  017B24  0EF6               	movlw	-10
 20559  017B26                     us643999:
 20560  017B26  006F FF7B FFE3     	movff	postinc2,plusw1
 20561  017B2C  28E8               	incf	wreg,w,c
 20562  017B2E  2E01               	decfsz	btemp^0,f,c
 20563  017B30  D7FA               	bra	us643999
 20564                           
 20565                           ; ___aomod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 20566  017B32  52E5               	movf	postdec1,f,c
 20567  017B34  52E5               	movf	postdec1,f,c
 20568  017B36  0012               	return		;funcret
 20569  017B38                     __end_of___aomod:
 20570                           	opt callstack 0
 20571                           
 20572 ;; *************** function ___aodiv *****************
 20573 ;; Defined at:
 20574 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aodiv.c"
 20575 ;; Parameters:    Size  Location     Type
 20576 ;;  dividend        8  [STACK] long long 
 20577 ;;  divisor         8  [STACK] long long 
 20578 ;; Auto vars:     Size  Location     Type
 20579 ;;  quotient        8  [STACK] long long 
 20580 ;;  sign            1  [STACK] unsigned char 
 20581 ;;  counter         1  [STACK] unsigned char 
 20582 ;; Return value:  Size  Location     Type
 20583 ;;                  8  [STACK] long long 
 20584 ;; Registers used:
 20585 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 20586 ;; Tracked objects:
 20587 ;;		On entry : 0/2
 20588 ;;		On exit  : 0/0
 20589 ;;		Unchanged: 0/0
 20590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20591 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20592 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20593 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20594 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20595 ;;Total ram usage:        0 bytes
 20596 ;; Hardware stack levels used:    1
 20597 ;; Hardware stack levels required when called:   15
 20598 ;; This function calls:
 20599 ;;		Nothing
 20600 ;; This function is called by:
 20601 ;;		_dtoa
 20602 ;; This function uses a reentrant model
 20603 ;;
 20604                           
 20605                           	psect	text69
 20606  017404                     __ptext69:
 20607                           	opt callstack 0
 20608  017404                     ___aodiv:
 20609                           	opt callstack 0
 20610                           
 20611                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 
      +                          vargsize = 0, retsize = 8 argfudge = 0
 20612  017404  0E0A               	movlw	10
 20613  017406  26E1               	addwf	fsr1l,f,c
 20614  017408  0E00               	movlw	0
 20615  01740A  22E2               	addwfc	fsr1h,f,c
 20616                           
 20617                           ;stkvar	_sign @ sp[(-10)+8]
 20618                           
 20619                           ;incstack = 0
 20620 ;; hardware stack exceeded
 20621  01740C  0EFE               	movlw	-2
 20622  01740E  6AE3               	clrf	plusw1,c
 20623                           
 20624                           ;stkvar	_divisor @ sp[(-10)+-16]
 20625  017410  0EED               	movlw	-19
 20626  017412  AEE3               	btfss	plusw1,7,c
 20627  017414  D028               	goto	l8001
 20628                           
 20629                           ;stkvar	_divisor @ sp[(-10)+-16]
 20630                           ;stkvar	_divisor @ sp[(-10)+-16]
 20631  017416  0EE6               	movlw	-26
 20632  017418  6CE3               	negf	plusw1,c
 20633  01741A  0EE7               	movlw	-25
 20634  01741C  1EE3               	comf	plusw1,f,c
 20635  01741E  0EE8               	movlw	-24
 20636  017420  1EE3               	comf	plusw1,f,c
 20637  017422  0EE9               	movlw	-23
 20638  017424  1EE3               	comf	plusw1,f,c
 20639  017426  0EEA               	movlw	-22
 20640  017428  1EE3               	comf	plusw1,f,c
 20641  01742A  0EEB               	movlw	-21
 20642  01742C  1EE3               	comf	plusw1,f,c
 20643  01742E  0EEC               	movlw	-20
 20644  017430  1EE3               	comf	plusw1,f,c
 20645  017432  0EED               	movlw	-19
 20646  017434  1EE3               	comf	plusw1,f,c
 20647  017436  E314               	bnc	u6220
 20648  017438  0EE7               	movlw	-25
 20649  01743A  2AE3               	incf	plusw1,f,c
 20650  01743C  E311               	bnc	u6220
 20651  01743E  0EE8               	movlw	-24
 20652  017440  2AE3               	incf	plusw1,f,c
 20653  017442  E30E               	bnc	u6220
 20654  017444  0EE9               	movlw	-23
 20655  017446  2AE3               	incf	plusw1,f,c
 20656  017448  E30B               	bnc	u6220
 20657  01744A  0EEA               	movlw	-22
 20658  01744C  2AE3               	incf	plusw1,f,c
 20659  01744E  E308               	bnc	u6220
 20660  017450  0EEB               	movlw	-21
 20661  017452  2AE3               	incf	plusw1,f,c
 20662  017454  E305               	bnc	u6220
 20663  017456  0EEC               	movlw	-20
 20664  017458  2AE3               	incf	plusw1,f,c
 20665  01745A  E302               	bnc	u6220
 20666  01745C  0EED               	movlw	-19
 20667  01745E  2AE3               	incf	plusw1,f,c
 20668  017460                     u6220:
 20669                           
 20670                           ;stkvar	_sign @ sp[(-10)+8]
 20671  017460  0EFE               	movlw	-2
 20672  017462  6AE3               	clrf	plusw1,c
 20673  017464  2AE3               	incf	plusw1,f,c
 20674  017466                     l8001:
 20675                           
 20676                           ;stkvar	_dividend @ sp[(-10)+-8]
 20677  017466  0EF5               	movlw	-11
 20678  017468  AEE3               	btfss	plusw1,7,c
 20679  01746A  D027               	goto	l8007
 20680                           
 20681                           ;stkvar	_dividend @ sp[(-10)+-8]
 20682                           ;stkvar	_dividend @ sp[(-10)+-8]
 20683  01746C  0EEE               	movlw	-18
 20684  01746E  6CE3               	negf	plusw1,c
 20685  017470  0EEF               	movlw	-17
 20686  017472  1EE3               	comf	plusw1,f,c
 20687  017474  0EF0               	movlw	-16
 20688  017476  1EE3               	comf	plusw1,f,c
 20689  017478  0EF1               	movlw	-15
 20690  01747A  1EE3               	comf	plusw1,f,c
 20691  01747C  0EF2               	movlw	-14
 20692  01747E  1EE3               	comf	plusw1,f,c
 20693  017480  0EF3               	movlw	-13
 20694  017482  1EE3               	comf	plusw1,f,c
 20695  017484  0EF4               	movlw	-12
 20696  017486  1EE3               	comf	plusw1,f,c
 20697  017488  0EF5               	movlw	-11
 20698  01748A  1EE3               	comf	plusw1,f,c
 20699  01748C  E314               	bnc	u6240
 20700  01748E  0EEF               	movlw	-17
 20701  017490  2AE3               	incf	plusw1,f,c
 20702  017492  E311               	bnc	u6240
 20703  017494  0EF0               	movlw	-16
 20704  017496  2AE3               	incf	plusw1,f,c
 20705  017498  E30E               	bnc	u6240
 20706  01749A  0EF1               	movlw	-15
 20707  01749C  2AE3               	incf	plusw1,f,c
 20708  01749E  E30B               	bnc	u6240
 20709  0174A0  0EF2               	movlw	-14
 20710  0174A2  2AE3               	incf	plusw1,f,c
 20711  0174A4  E308               	bnc	u6240
 20712  0174A6  0EF3               	movlw	-13
 20713  0174A8  2AE3               	incf	plusw1,f,c
 20714  0174AA  E305               	bnc	u6240
 20715  0174AC  0EF4               	movlw	-12
 20716  0174AE  2AE3               	incf	plusw1,f,c
 20717  0174B0  E302               	bnc	u6240
 20718  0174B2  0EF5               	movlw	-11
 20719  0174B4  2AE3               	incf	plusw1,f,c
 20720  0174B6                     u6240:
 20721                           
 20722                           ;stkvar	_sign @ sp[(-10)+8]
 20723  0174B6  0EFE               	movlw	-2
 20724  0174B8  70E3               	btg	plusw1,0,c
 20725  0174BA                     l8007:
 20726                           
 20727                           ;stkvar	_quotient @ sp[(-10)+0]
 20728  0174BA  0E07               	movlw	7
 20729  0174BC  6E01               	movwf	btemp^0,c
 20730  0174BE  0EF6               	movlw	-10
 20731  0174C0                     u6251:
 20732  0174C0  6AE3               	clrf	plusw1,c
 20733  0174C2  2AE8               	incf	wreg,f,c
 20734  0174C4  0601               	decf	btemp^0,f,c
 20735  0174C6  E2FC               	bc	u6251
 20736                           
 20737                           ;stkvar	_divisor @ sp[(-10)+-16]
 20738  0174C8  0EE6               	movlw	-26
 20739  0174CA  50E3               	movf	plusw1,w,c
 20740  0174CC  E116               	bnz	u6260
 20741  0174CE  0EE7               	movlw	-25
 20742  0174D0  50E3               	movf	plusw1,w,c
 20743  0174D2  E113               	bnz	u6260
 20744  0174D4  0EE8               	movlw	-24
 20745  0174D6  50E3               	movf	plusw1,w,c
 20746  0174D8  E110               	bnz	u6260
 20747  0174DA  0EE9               	movlw	-23
 20748  0174DC  50E3               	movf	plusw1,w,c
 20749  0174DE  E10D               	bnz	u6260
 20750  0174E0  0EEA               	movlw	-22
 20751  0174E2  50E3               	movf	plusw1,w,c
 20752  0174E4  E10A               	bnz	u6260
 20753  0174E6  0EEB               	movlw	-21
 20754  0174E8  50E3               	movf	plusw1,w,c
 20755  0174EA  E107               	bnz	u6260
 20756  0174EC  0EEC               	movlw	-20
 20757  0174EE  50E3               	movf	plusw1,w,c
 20758  0174F0  E104               	bnz	u6260
 20759  0174F2  0EED               	movlw	-19
 20760  0174F4  50E3               	movf	plusw1,w,c
 20761  0174F6  B4D8               	btfsc	status,2,c
 20762  0174F8  D088               	goto	u6290
 20763  0174FA                     u6260:
 20764                           
 20765                           ;stkvar	_counter @ sp[(-10)+9]
 20766  0174FA  0EFF               	movlw	-1
 20767  0174FC  6AE3               	clrf	plusw1,c
 20768  0174FE  D012               	goto	L26
 20769  017500                     l8013:
 20770                           
 20771                           ;stkvar	_divisor @ sp[(-10)+-16]
 20772  017500  90D8               	bcf	status,0,c
 20773  017502  0EE6               	movlw	-26
 20774  017504  36E3               	rlcf	plusw1,f,c
 20775  017506  0EE7               	movlw	-25
 20776  017508  36E3               	rlcf	plusw1,f,c
 20777  01750A  0EE8               	movlw	-24
 20778  01750C  36E3               	rlcf	plusw1,f,c
 20779  01750E  0EE9               	movlw	-23
 20780  017510  36E3               	rlcf	plusw1,f,c
 20781  017512  0EEA               	movlw	-22
 20782  017514  36E3               	rlcf	plusw1,f,c
 20783  017516  0EEB               	movlw	-21
 20784  017518  36E3               	rlcf	plusw1,f,c
 20785  01751A  0EEC               	movlw	-20
 20786  01751C  36E3               	rlcf	plusw1,f,c
 20787  01751E  0EED               	movlw	-19
 20788  017520  36E3               	rlcf	plusw1,f,c
 20789                           
 20790                           ;stkvar	_counter @ sp[(-10)+9]
 20791  017522  0EFF               	movlw	-1
 20792  017524                     L26:
 20793  017524  2AE3               	incf	plusw1,f,c
 20794                           
 20795                           ;stkvar	_divisor @ sp[(-10)+-16]
 20796  017526  0EED               	movlw	-19
 20797  017528  AEE3               	btfss	plusw1,7,c
 20798  01752A  D7EA               	goto	l8013
 20799  01752C                     u6270:
 20800                           
 20801                           ;stkvar	_quotient @ sp[(-10)+0]
 20802  01752C  90D8               	bcf	status,0,c
 20803  01752E  0EF6               	movlw	-10
 20804  017530  36E3               	rlcf	plusw1,f,c
 20805  017532  0EF7               	movlw	-9
 20806  017534  36E3               	rlcf	plusw1,f,c
 20807  017536  0EF8               	movlw	-8
 20808  017538  36E3               	rlcf	plusw1,f,c
 20809  01753A  0EF9               	movlw	-7
 20810  01753C  36E3               	rlcf	plusw1,f,c
 20811  01753E  0EFA               	movlw	-6
 20812  017540  36E3               	rlcf	plusw1,f,c
 20813  017542  0EFB               	movlw	-5
 20814  017544  36E3               	rlcf	plusw1,f,c
 20815  017546  0EFC               	movlw	-4
 20816  017548  36E3               	rlcf	plusw1,f,c
 20817  01754A  0EFD               	movlw	-3
 20818  01754C  36E3               	rlcf	plusw1,f,c
 20819                           
 20820                           ;stkvar	_divisor @ sp[(-10)+-16]
 20821                           ;stkvar	_dividend @ sp[(-10)+-8]
 20822  01754E  50E1               	movf	fsr1l,w,c
 20823  017550  0FEE               	addlw	-18
 20824  017552  6ED9               	movwf	fsr2l,c
 20825  017554  50E2               	movf	fsr1h,w,c
 20826  017556  6EDA               	movwf	fsr2h,c
 20827  017558  0EFF               	movlw	255
 20828  01755A  22DA               	addwfc	fsr2h,f,c
 20829  01755C  0EE6               	movlw	-26
 20830  01755E  50E3               	movf	plusw1,w,c
 20831  017560  5CDE               	subwf	postinc2,w,c
 20832  017562  0EE7               	movlw	-25
 20833  017564  50E3               	movf	plusw1,w,c
 20834  017566  58DE               	subwfb	postinc2,w,c
 20835  017568  0EE8               	movlw	-24
 20836  01756A  50E3               	movf	plusw1,w,c
 20837  01756C  58DE               	subwfb	postinc2,w,c
 20838  01756E  0EE9               	movlw	-23
 20839  017570  50E3               	movf	plusw1,w,c
 20840  017572  58DE               	subwfb	postinc2,w,c
 20841  017574  0EEA               	movlw	-22
 20842  017576  50E3               	movf	plusw1,w,c
 20843  017578  58DE               	subwfb	postinc2,w,c
 20844  01757A  0EEB               	movlw	-21
 20845  01757C  50E3               	movf	plusw1,w,c
 20846  01757E  58DE               	subwfb	postinc2,w,c
 20847  017580  0EEC               	movlw	-20
 20848  017582  50E3               	movf	plusw1,w,c
 20849  017584  58DE               	subwfb	postinc2,w,c
 20850  017586  0EED               	movlw	-19
 20851  017588  50E3               	movf	plusw1,w,c
 20852  01758A  58DE               	subwfb	postinc2,w,c
 20853  01758C  A0D8               	btfss	status,0,c
 20854  01758E  D021               	goto	l8025
 20855                           
 20856                           ;stkvar	_divisor @ sp[(-10)+-16]
 20857                           ;stkvar	_dividend @ sp[(-10)+-8]
 20858  017590  50E1               	movf	fsr1l,w,c
 20859  017592  0FEE               	addlw	-18
 20860  017594  6ED9               	movwf	fsr2l,c
 20861  017596  50E2               	movf	fsr1h,w,c
 20862  017598  6EDA               	movwf	fsr2h,c
 20863  01759A  0EFF               	movlw	255
 20864  01759C  22DA               	addwfc	fsr2h,f,c
 20865  01759E  0EE6               	movlw	-26
 20866  0175A0  50E3               	movf	plusw1,w,c
 20867  0175A2  5EDE               	subwf	postinc2,f,c
 20868  0175A4  0EE7               	movlw	-25
 20869  0175A6  50E3               	movf	plusw1,w,c
 20870  0175A8  5ADE               	subwfb	postinc2,f,c
 20871  0175AA  0EE8               	movlw	-24
 20872  0175AC  50E3               	movf	plusw1,w,c
 20873  0175AE  5ADE               	subwfb	postinc2,f,c
 20874  0175B0  0EE9               	movlw	-23
 20875  0175B2  50E3               	movf	plusw1,w,c
 20876  0175B4  5ADE               	subwfb	postinc2,f,c
 20877  0175B6  0EEA               	movlw	-22
 20878  0175B8  50E3               	movf	plusw1,w,c
 20879  0175BA  5ADE               	subwfb	postinc2,f,c
 20880  0175BC  0EEB               	movlw	-21
 20881  0175BE  50E3               	movf	plusw1,w,c
 20882  0175C0  5ADE               	subwfb	postinc2,f,c
 20883  0175C2  0EEC               	movlw	-20
 20884  0175C4  50E3               	movf	plusw1,w,c
 20885  0175C6  5ADE               	subwfb	postinc2,f,c
 20886  0175C8  0EED               	movlw	-19
 20887  0175CA  50E3               	movf	plusw1,w,c
 20888  0175CC  5ADE               	subwfb	postinc2,f,c
 20889                           
 20890                           ;stkvar	_quotient @ sp[(-10)+0]
 20891  0175CE  0EF6               	movlw	-10
 20892  0175D0  80E3               	bsf	plusw1,0,c
 20893  0175D2                     l8025:
 20894                           
 20895                           ;stkvar	_divisor @ sp[(-10)+-16]
 20896  0175D2  90D8               	bcf	status,0,c
 20897  0175D4  0EED               	movlw	-19
 20898  0175D6  32E3               	rrcf	plusw1,f,c
 20899  0175D8  0EEC               	movlw	-20
 20900  0175DA  32E3               	rrcf	plusw1,f,c
 20901  0175DC  0EEB               	movlw	-21
 20902  0175DE  32E3               	rrcf	plusw1,f,c
 20903  0175E0  0EEA               	movlw	-22
 20904  0175E2  32E3               	rrcf	plusw1,f,c
 20905  0175E4  0EE9               	movlw	-23
 20906  0175E6  32E3               	rrcf	plusw1,f,c
 20907  0175E8  0EE8               	movlw	-24
 20908  0175EA  32E3               	rrcf	plusw1,f,c
 20909  0175EC  0EE7               	movlw	-25
 20910  0175EE  32E3               	rrcf	plusw1,f,c
 20911  0175F0  0EE6               	movlw	-26
 20912  0175F2  32E3               	rrcf	plusw1,f,c
 20913                           
 20914                           ;stkvar	_counter @ sp[(-10)+9]
 20915  0175F4  0EFF               	movlw	-1
 20916  0175F6  50E3               	movf	plusw1,w,c
 20917  0175F8  6E01               	movwf	btemp^0,c
 20918  0175FA  0E01               	movlw	1
 20919  0175FC  5E01               	subwf	btemp^0,f,c
 20920  0175FE  0EFF               	movlw	-1
 20921  017600  0060  F007  FFE3   	movff	btemp,plusw1
 20922  017606  A4D8               	btfss	status,2,c
 20923  017608  D791               	goto	u6270
 20924  01760A                     u6290:
 20925                           
 20926                           ;stkvar	_sign @ sp[(-10)+8]
 20927  01760A  0EFE               	movlw	-2
 20928  01760C  50E3               	movf	plusw1,w,c
 20929  01760E  B4D8               	btfsc	status,2,c
 20930  017610  D025               	goto	u6310
 20931                           
 20932                           ;stkvar	_quotient @ sp[(-10)+0]
 20933                           ;stkvar	_quotient @ sp[(-10)+0]
 20934  017612  0EF6               	movlw	-10
 20935  017614  6CE3               	negf	plusw1,c
 20936  017616  0EF7               	movlw	-9
 20937  017618  1EE3               	comf	plusw1,f,c
 20938  01761A  0EF8               	movlw	-8
 20939  01761C  1EE3               	comf	plusw1,f,c
 20940  01761E  0EF9               	movlw	-7
 20941  017620  1EE3               	comf	plusw1,f,c
 20942  017622  0EFA               	movlw	-6
 20943  017624  1EE3               	comf	plusw1,f,c
 20944  017626  0EFB               	movlw	-5
 20945  017628  1EE3               	comf	plusw1,f,c
 20946  01762A  0EFC               	movlw	-4
 20947  01762C  1EE3               	comf	plusw1,f,c
 20948  01762E  0EFD               	movlw	-3
 20949  017630  1EE3               	comf	plusw1,f,c
 20950  017632  E314               	bnc	u6310
 20951  017634  0EF7               	movlw	-9
 20952  017636  2AE3               	incf	plusw1,f,c
 20953  017638  E311               	bnc	u6310
 20954  01763A  0EF8               	movlw	-8
 20955  01763C  2AE3               	incf	plusw1,f,c
 20956  01763E  E30E               	bnc	u6310
 20957  017640  0EF9               	movlw	-7
 20958  017642  2AE3               	incf	plusw1,f,c
 20959  017644  E30B               	bnc	u6310
 20960  017646  0EFA               	movlw	-6
 20961  017648  2AE3               	incf	plusw1,f,c
 20962  01764A  E308               	bnc	u6310
 20963  01764C  0EFB               	movlw	-5
 20964  01764E  2AE3               	incf	plusw1,f,c
 20965  017650  E305               	bnc	u6310
 20966  017652  0EFC               	movlw	-4
 20967  017654  2AE3               	incf	plusw1,f,c
 20968  017656  E302               	bnc	u6310
 20969  017658  0EFD               	movlw	-3
 20970  01765A  2AE3               	incf	plusw1,f,c
 20971  01765C                     u6310:
 20972                           
 20973                           ;stkvar	_quotient @ sp[(-10)+0]
 20974  01765C  0EF6               	movlw	246
 20975  01765E  24E1               	addwf	fsr1l,w,c
 20976  017660  6ED9               	movwf	fsr2l,c
 20977  017662  0EFF               	movlw	255
 20978  017664  20E2               	addwfc	fsr1h,w,c
 20979  017666  6EDA               	movwf	fsr2h,c
 20980                           
 20981                           ;stkvar	?___aodiv @ sp[(-10)+-8]
 20982  017668  0E08               	movlw	8
 20983  01766A  6E01               	movwf	btemp^0,c
 20984  01766C  0EEE               	movlw	-18
 20985  01766E                     us632999:
 20986  01766E  006F FF7B FFE3     	movff	postinc2,plusw1
 20987  017674  28E8               	incf	wreg,w,c
 20988  017676  2E01               	decfsz	btemp^0,f,c
 20989  017678  D7FA               	bra	us632999
 20990                           
 20991                           ; ___aodiv: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, arg
      +                          size = 16, vargsize = 0
 20992  01767A  0EF6               	movlw	246
 20993  01767C  26E1               	addwf	fsr1l,f,c
 20994  01767E  0EFF               	movlw	255
 20995  017680  22E2               	addwfc	fsr1h,f,c
 20996  017682  0012               	return		;funcret
 20997  017684                     __end_of___aodiv:
 20998                           	opt callstack 0
 20999                           
 21000 ;; *************** function _ctoa *****************
 21001 ;; Defined at:
 21002 ;;		line 259 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 21003 ;; Parameters:    Size  Location     Type
 21004 ;;  fp              2  [STACK] PTR struct _IO_FILE
 21005 ;;		 -> f(6), NULL(0), 
 21006 ;;  c               1  [STACK] unsigned char 
 21007 ;; Auto vars:     Size  Location     Type
 21008 ;;  w               2  [STACK] int 
 21009 ;;  l               2    0        int 
 21010 ;; Return value:  Size  Location     Type
 21011 ;;                  2  [STACK] int 
 21012 ;; Registers used:
 21013 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 21014 ;; Tracked objects:
 21015 ;;		On entry : 0/0
 21016 ;;		On exit  : 0/0
 21017 ;;		Unchanged: 0/0
 21018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21019 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21020 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21021 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21022 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21023 ;;Total ram usage:        0 bytes
 21024 ;; Hardware stack levels used:    1
 21025 ;; Hardware stack levels required when called:   20
 21026 ;; This function calls:
 21027 ;;		_pad
 21028 ;; This function is called by:
 21029 ;;		_vfpfcnvrt
 21030 ;; This function uses a reentrant model
 21031 ;;
 21032                           
 21033                           	psect	text70
 21034  01A8B0                     __ptext70:
 21035                           	opt callstack 0
 21036  01A8B0                     _ctoa:
 21037                           	opt callstack 0
 21038                           
 21039                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21040  01A8B0  52E6               	movf	postinc1,f,c
 21041  01A8B2  52E6               	movf	postinc1,f,c
 21042                           
 21043                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.10
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
 21044                           
 21045                           ;incstack = 0
 21046 ;; hardware stack exceeded
 21047  01A8B4  503A               	movf	_width^0,w,c
 21048  01A8B6  103B               	iorwf	(_width+1)^0,w,c
 21049  01A8B8  A4D8               	btfss	status,2,c
 21050  01A8BA  D009               	goto	l11735
 21051                           
 21052                           ;stkvar	_w @ sp[(-2)+0]
 21053  01A8BC  0EFE               	movlw	-2
 21054  01A8BE  0060  F0EB  FFE3   	movff	_width,plusw1
 21055  01A8C4  0EFF               	movlw	-1
 21056  01A8C6  0060  F0EF  FFE3   	movff	_width+1,plusw1
 21057  01A8CC  D016               	goto	l11737
 21058  01A8CE                     l11735:
 21059  01A8CE  0EFF               	movlw	255
 21060  01A8D0  6E0B               	movwf	(btemp+10)^0,c
 21061  01A8D2  0EFF               	movlw	255
 21062  01A8D4  6E0C               	movwf	(btemp+11)^0,c
 21063  01A8D6  0060  F0E8  F009   	movff	_width,btemp+8
 21064  01A8DC  0060  F0EC  F00A   	movff	_width+1,btemp+9
 21065  01A8E2  500B               	movf	(btemp+10)^0,w,c
 21066  01A8E4  2609               	addwf	(btemp+8)^0,f,c
 21067  01A8E6  500C               	movf	(btemp+11)^0,w,c
 21068  01A8E8  220A               	addwfc	(btemp+9)^0,f,c
 21069                           
 21070                           ;stkvar	_w @ sp[(-2)+0]
 21071  01A8EA  0EFE               	movlw	-2
 21072  01A8EC  0060  F027  FFE3   	movff	btemp+8,plusw1
 21073  01A8F2  0EFF               	movlw	-1
 21074  01A8F4  0060  F02B  FFE3   	movff	btemp+9,plusw1
 21075  01A8FA                     l11737:
 21076                           
 21077                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
 21078                           ;stkvar	_c @ sp[(-2)+-3]
 21079  01A8FA  0EFB               	movlw	-5
 21080  01A8FC  006F FF8C  F297    	movff	plusw1,_dbuf
 21081                           
 21082                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
 21083  01A902  0102               	movlb	2	; () banked
 21084  01A904  6B98               	clrf	(_dbuf+1)& (0+255),b
 21085                           
 21086                           ; BSR set to: 2
 21087                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
 21088                           ;stkvar	_w @ sp[(-2)+0]
 21089  01A906  0EFE               	movlw	-2
 21090  01A908  006F FF8F FFE6     	movff	plusw1,postinc1
 21091  01A90E  006F FF8F FFE6     	movff	plusw1,postinc1
 21092  01A914  0E97               	movlw	low _dbuf
 21093  01A916  6EE6               	movwf	postinc1,c
 21094  01A918  0E02               	movlw	high _dbuf
 21095  01A91A  6EE6               	movwf	postinc1,c
 21096                           
 21097                           ;stkvar	_fp @ sp[(-6)+-2]
 21098  01A91C  0EF8               	movlw	-8
 21099  01A91E  006F FF8F FFE6     	movff	plusw1,postinc1
 21100  01A924  006F FF8F FFE6     	movff	plusw1,postinc1
 21101  01A92A  EC0F  F0CC         	call	_pad	;wreg free
 21102                           
 21103                           ; _ctoa: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize 
      +                          = 3, vargsize = 0
 21104  01A92E  0EFB               	movlw	251
 21105  01A930  26E1               	addwf	fsr1l,f,c
 21106  01A932  0EFF               	movlw	255
 21107  01A934  22E2               	addwfc	fsr1h,f,c
 21108  01A936  0012               	return		;funcret
 21109  01A938                     __end_of_ctoa:
 21110                           	opt callstack 0
 21111                           
 21112 ;; *************** function _pad *****************
 21113 ;; Defined at:
 21114 ;;		line 72 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 21115 ;; Parameters:    Size  Location     Type
 21116 ;;  fp              2  [STACK] PTR struct _IO_FILE
 21117 ;;		 -> f(6), NULL(0), 
 21118 ;;  buf             2  [STACK] PTR unsigned char 
 21119 ;;		 -> dbuf(80), 
 21120 ;;  p               2  [STACK] int 
 21121 ;; Auto vars:     Size  Location     Type
 21122 ;;  w               2  [STACK] int 
 21123 ;;  i               2  [STACK] int 
 21124 ;; Return value:  Size  Location     Type
 21125 ;;                  2  [STACK] int 
 21126 ;; Registers used:
 21127 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 21128 ;; Tracked objects:
 21129 ;;		On entry : 0/2
 21130 ;;		On exit  : 0/0
 21131 ;;		Unchanged: 0/0
 21132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21133 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21134 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21136 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21137 ;;Total ram usage:        0 bytes
 21138 ;; Hardware stack levels used:    1
 21139 ;; Hardware stack levels required when called:   19
 21140 ;; This function calls:
 21141 ;;		_fputc
 21142 ;;		_fputs
 21143 ;;		_strlen
 21144 ;; This function is called by:
 21145 ;;		_ctoa
 21146 ;;		_dtoa
 21147 ;;		_efgtoa
 21148 ;;		_utoa
 21149 ;;		_xtoa
 21150 ;; This function uses a reentrant model
 21151 ;;
 21152                           
 21153                           	psect	text71
 21154  01981E                     __ptext71:
 21155                           	opt callstack 0
 21156  01981E                     _pad:
 21157                           	opt callstack 0
 21158                           
 21159                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21160  01981E  52E6               	movf	postinc1,f,c
 21161  019820  52E6               	movf	postinc1,f,c
 21162  019822  52E6               	movf	postinc1,f,c
 21163  019824  52E6               	movf	postinc1,f,c
 21164                           
 21165                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.10/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
 21166                           
 21167                           ;incstack = 0
 21168 ;; hardware stack exceeded
 21169  019826  A03E               	btfss	_flags^0,0,c
 21170  019828  D010               	goto	l11667
 21171                           
 21172                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
 21173                           ;stkvar	_fp @ sp[(-4)+-2]
 21174  01982A  0EFA               	movlw	-6
 21175  01982C  006F FF8F FFE6     	movff	plusw1,postinc1
 21176  019832  006F FF8F FFE6     	movff	plusw1,postinc1
 21177                           
 21178                           ;stkvar	_buf @ sp[(-6)+-4]
 21179  019838  0EF6               	movlw	-10
 21180  01983A  006F FF8F FFE6     	movff	plusw1,postinc1
 21181  019840  006F FF8F FFE6     	movff	plusw1,postinc1
 21182  019846  EC31  F0D3         	call	_fputs	;wreg free
 21183  01984A                     l11667:
 21184                           
 21185                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
 21186                           ;stkvar	_p @ sp[(-4)+-6]
 21187  01984A  0EF7               	movlw	-9
 21188  01984C  BEE3               	btfsc	plusw1,7,c
 21189  01984E  D011               	goto	l11671
 21190                           
 21191                           ;stkvar	_p @ sp[(-4)+-6]
 21192                           ;stkvar	_w @ sp[(-4)+0]
 21193  019850  0EF6               	movlw	-10
 21194  019852  006F FF8C  F001    	movff	plusw1,btemp
 21195  019858  0EFC               	movlw	-4
 21196  01985A  0060  F007  FFE3   	movff	btemp,plusw1
 21197  019860  0EF7               	movlw	-9
 21198  019862  006F FF8C  F001    	movff	plusw1,btemp
 21199  019868  0EFD               	movlw	-3
 21200  01986A  0060  F007  FFE3   	movff	btemp,plusw1
 21201  019870  D004               	goto	l2143
 21202  019872                     l11671:
 21203                           
 21204                           ;stkvar	_w @ sp[(-4)+0]
 21205  019872  0EFC               	movlw	-4
 21206  019874  6AE3               	clrf	plusw1,c
 21207  019876  0EFD               	movlw	-3
 21208  019878  6AE3               	clrf	plusw1,c
 21209  01987A                     l2143:
 21210                           
 21211                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 21212                           ;stkvar	_i @ sp[(-4)+2]
 21213  01987A  0EFE               	movlw	-2
 21214  01987C  6AE3               	clrf	plusw1,c
 21215  01987E  0EFF               	movlw	-1
 21216  019880  6AE3               	clrf	plusw1,c
 21217                           
 21218                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 21219  019882  D01E               	goto	l11677
 21220  019884                     l11673:
 21221                           
 21222                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
 21223                           ;stkvar	_fp @ sp[(-4)+-2]
 21224  019884  0EFA               	movlw	-6
 21225  019886  006F FF8F FFE6     	movff	plusw1,postinc1
 21226  01988C  006F FF8F FFE6     	movff	plusw1,postinc1
 21227  019892  0E20               	movlw	32
 21228  019894  6EE6               	movwf	postinc1,c
 21229  019896  0E00               	movlw	0
 21230  019898  6EE6               	movwf	postinc1,c
 21231  01989A  EC64  F0CA         	call	_fputc	;wreg free
 21232                           
 21233                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 86:         ++i;
 21234                           ;stkvar	_i @ sp[(-4)+2]
 21235  01989E  0EFE               	movlw	-2
 21236  0198A0  50E3               	movf	plusw1,w,c
 21237  0198A2  0F01               	addlw	1
 21238  0198A4  6E01               	movwf	btemp^0,c
 21239  0198A6  0EFE               	movlw	-2
 21240  0198A8  0060  F007  FFE3   	movff	btemp,plusw1
 21241  0198AE  6A01               	clrf	btemp^0,c
 21242  0198B0  0EFF               	movlw	-1
 21243  0198B2  50E3               	movf	plusw1,w,c
 21244  0198B4  2001               	addwfc	btemp^0,w,c
 21245  0198B6  6E01               	movwf	btemp^0,c
 21246  0198B8  0EFF               	movlw	-1
 21247  0198BA  0060  F007  FFE3   	movff	btemp,plusw1
 21248  0198C0                     l11677:
 21249                           
 21250                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 21251                           ;stkvar	_w @ sp[(-4)+0]
 21252                           ;stkvar	_i @ sp[(-4)+2]
 21253  0198C0  50E1               	movf	fsr1l,w,c
 21254  0198C2  0FFE               	addlw	-2
 21255  0198C4  6ED9               	movwf	fsr2l,c
 21256  0198C6  50E2               	movf	fsr1h,w,c
 21257  0198C8  6EDA               	movwf	fsr2h,c
 21258  0198CA  0EFF               	movlw	255
 21259  0198CC  22DA               	addwfc	fsr2h,f,c
 21260  0198CE  0EFC               	movlw	-4
 21261  0198D0  50E3               	movf	plusw1,w,c
 21262  0198D2  5CDE               	subwf	postinc2,w,c
 21263  0198D4  50DE               	movf	postinc2,w,c
 21264  0198D6  0A80               	xorlw	128
 21265  0198D8  6E01               	movwf	btemp^0,c
 21266  0198DA  0EFD               	movlw	-3
 21267  0198DC  50E3               	movf	plusw1,w,c
 21268  0198DE  0A80               	xorlw	128
 21269  0198E0  5801               	subwfb	btemp^0,w,c
 21270  0198E2  A0D8               	btfss	status,0,c
 21271  0198E4  D7CF               	goto	l11673
 21272                           
 21273                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
 21274  0198E6  B03E               	btfsc	_flags^0,0,c
 21275  0198E8  D010               	goto	l11681
 21276                           
 21277                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
 21278                           ;stkvar	_fp @ sp[(-4)+-2]
 21279  0198EA  0EFA               	movlw	-6
 21280  0198EC  006F FF8F FFE6     	movff	plusw1,postinc1
 21281  0198F2  006F FF8F FFE6     	movff	plusw1,postinc1
 21282                           
 21283                           ;stkvar	_buf @ sp[(-6)+-4]
 21284  0198F8  0EF6               	movlw	-10
 21285  0198FA  006F FF8F FFE6     	movff	plusw1,postinc1
 21286  019900  006F FF8F FFE6     	movff	plusw1,postinc1
 21287  019906  EC31  F0D3         	call	_fputs	;wreg free
 21288  01990A                     l11681:
 21289                           
 21290                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
 21291                           ;stkvar	_w @ sp[(-4)+0]
 21292                           ;stkvar	_buf @ sp[(-4)+-4]
 21293  01990A  0EF8               	movlw	-8
 21294  01990C  006F FF8F FFE6     	movff	plusw1,postinc1
 21295  019912  006F FF8F FFE6     	movff	plusw1,postinc1
 21296  019918  ECE0  F0D2         	call	_strlen	;wreg free
 21297  01991C  0EFC               	movlw	-4
 21298  01991E  50E3               	movf	plusw1,w,c
 21299  019920  2601               	addwf	btemp^0,f,c
 21300  019922  0EFD               	movlw	-3
 21301  019924  50E3               	movf	plusw1,w,c
 21302  019926  2202               	addwfc	(btemp+1)^0,f,c
 21303                           
 21304                           ; _pad: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize =
      +                           6, vargsize = 0
 21305  019928  0EF6               	movlw	246
 21306  01992A  26E1               	addwf	fsr1l,f,c
 21307  01992C  0EFF               	movlw	255
 21308  01992E  22E2               	addwfc	fsr1h,f,c
 21309  019930  0012               	return		;funcret
 21310  019932                     __end_of_pad:
 21311                           	opt callstack 0
 21312                           
 21313 ;; *************** function _strlen *****************
 21314 ;; Defined at:
 21315 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strlen.c"
 21316 ;; Parameters:    Size  Location     Type
 21317 ;;  s               2  [STACK] PTR const unsigned char 
 21318 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 21319 ;;		 -> spin(120), STR_47(9), STR_46(12), D.lcd(480), 
 21320 ;;		 -> D(482), T(144), port_data(512), STR_3(7), 
 21321 ;;		 -> V(191), 
 21322 ;; Auto vars:     Size  Location     Type
 21323 ;;  a               2  [STACK] PTR const unsigned char 
 21324 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 21325 ;;		 -> spin(120), STR_47(9), STR_46(12), D.lcd(480), 
 21326 ;;		 -> D(482), T(144), port_data(512), STR_3(7), 
 21327 ;;		 -> V(191), 
 21328 ;; Return value:  Size  Location     Type
 21329 ;;                  2  [STACK] unsigned int 
 21330 ;; Registers used:
 21331 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru
 21332 ;; Tracked objects:
 21333 ;;		On entry : 0/0
 21334 ;;		On exit  : 0/0
 21335 ;;		Unchanged: 0/0
 21336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21337 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21338 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21340 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21341 ;;Total ram usage:        0 bytes
 21342 ;; Hardware stack levels used:    1
 21343 ;; Hardware stack levels required when called:   15
 21344 ;; This function calls:
 21345 ;;		Nothing
 21346 ;; This function is called by:
 21347 ;;		_eaDogM_WriteString
 21348 ;;		_spinners
 21349 ;;		_calc_bsoc
 21350 ;;		_pad
 21351 ;;		_stoa
 21352 ;; This function uses a reentrant model
 21353 ;;
 21354                           
 21355                           	psect	text72
 21356  01A5C0                     __ptext72:
 21357                           	opt callstack 0
 21358  01A5C0                     _strlen:
 21359                           	opt callstack 0
 21360                           
 21361                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21362  01A5C0  52E6               	movf	postinc1,f,c
 21363  01A5C2  52E6               	movf	postinc1,f,c
 21364                           
 21365                           ;stkvar	_s @ sp[(-2)+-2]
 21366                           
 21367                           ;incstack = 0
 21368 ;; hardware stack exceeded
 21369  01A5C4  0EFC               	movlw	-4
 21370  01A5C6  006F FF8C  F00B    	movff	plusw1,btemp+10
 21371  01A5CC  0EFD               	movlw	-3
 21372  01A5CE  006F FF8C  F00C    	movff	plusw1,btemp+11
 21373                           
 21374                           ;stkvar	_a @ sp[(-2)+0]
 21375  01A5D4  0EFF               	movlw	-1
 21376  01A5D6  0060  F033  FFE3   	movff	btemp+11,plusw1
 21377  01A5DC  0EFE               	movlw	-2
 21378  01A5DE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21379  01A5E4  D011               	goto	l7619
 21380  01A5E6                     l7617:
 21381                           
 21382                           ;stkvar	_s @ sp[(-2)+-2]
 21383  01A5E6  0EFC               	movlw	-4
 21384  01A5E8  50E3               	movf	plusw1,w,c
 21385  01A5EA  0F01               	addlw	1
 21386  01A5EC  6E01               	movwf	btemp^0,c
 21387  01A5EE  0EFC               	movlw	-4
 21388  01A5F0  0060  F007  FFE3   	movff	btemp,plusw1
 21389  01A5F6  6A01               	clrf	btemp^0,c
 21390  01A5F8  0EFD               	movlw	-3
 21391  01A5FA  50E3               	movf	plusw1,w,c
 21392  01A5FC  2001               	addwfc	btemp^0,w,c
 21393  01A5FE  6E01               	movwf	btemp^0,c
 21394  01A600  0EFD               	movlw	-3
 21395  01A602  0060  F007  FFE3   	movff	btemp,plusw1
 21396  01A608                     l7619:
 21397                           
 21398                           ;stkvar	_s @ sp[(-2)+-2]
 21399  01A608  0EFC               	movlw	-4
 21400  01A60A  006F FF8F FFF6     	movff	plusw1,tblptrl
 21401  01A610  0EFD               	movlw	-3
 21402  01A612  006F FF8F FFF7     	movff	plusw1,tblptrh
 21403  01A618  0E00               	movlw	low (__mediumconst shr (0+16))
 21404  01A61A  6EF8               	movwf	tblptru,c
 21405  01A61C  0E1F               	movlw	(high __ramtop+-1)
 21406  01A61E  64F7               	cpfsgt	tblptrh,c
 21407  01A620  D003               	bra	u5387
 21408  01A622  0008               	tblrd		*
 21409  01A624  50F5               	movf	tablat,w,c
 21410  01A626  D007               	bra	u5380
 21411  01A628                     u5387:
 21412  01A628  006F FFDB FFE9     	movff	tblptrl,fsr0l
 21413  01A62E  006F FFDF FFEA     	movff	tblptrh,fsr0h
 21414  01A634  50EF               	movf	indf0,w,c
 21415  01A636                     u5380:
 21416  01A636  0900               	iorlw	0
 21417  01A638  A4D8               	btfss	status,2,c
 21418  01A63A  D7D5               	goto	l7617
 21419                           
 21420                           ;stkvar	_a @ sp[(-2)+0]
 21421                           ;stkvar	_s @ sp[(-2)+-2]
 21422  01A63C  0EFC               	movlw	-4
 21423  01A63E  006F FF8C  F001    	movff	plusw1,btemp
 21424  01A644  0EFD               	movlw	-3
 21425  01A646  006F FF8C  F002    	movff	plusw1,btemp+1
 21426  01A64C  0EFE               	movlw	-2
 21427  01A64E  50E3               	movf	plusw1,w,c
 21428  01A650  5E01               	subwf	btemp^0,f,c
 21429  01A652  0EFF               	movlw	-1
 21430  01A654  50E3               	movf	plusw1,w,c
 21431  01A656  5A02               	subwfb	(btemp+1)^0,f,c
 21432                           
 21433                           ; _strlen: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 21434  01A658  52E5               	movf	postdec1,f,c
 21435  01A65A  52E5               	movf	postdec1,f,c
 21436  01A65C  52E5               	movf	postdec1,f,c
 21437  01A65E  52E5               	movf	postdec1,f,c
 21438  01A660  0012               	return		;funcret
 21439  01A662                     __end_of_strlen:
 21440                           	opt callstack 0
 21441                           
 21442 ;; *************** function _fputs *****************
 21443 ;; Defined at:
 21444 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputs.c"
 21445 ;; Parameters:    Size  Location     Type
 21446 ;;  s               2  [STACK] PTR const unsigned char 
 21447 ;;		 -> dbuf(80), 
 21448 ;;  fp              2  [STACK] PTR struct _IO_FILE
 21449 ;;		 -> f(6), NULL(0), 
 21450 ;; Auto vars:     Size  Location     Type
 21451 ;;  i               2  [STACK] int 
 21452 ;;  c               1  [STACK] unsigned char 
 21453 ;; Return value:  Size  Location     Type
 21454 ;;                  2  [STACK] int 
 21455 ;; Registers used:
 21456 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 21457 ;; Tracked objects:
 21458 ;;		On entry : 0/2
 21459 ;;		On exit  : 0/0
 21460 ;;		Unchanged: 0/0
 21461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21462 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21463 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21465 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21466 ;;Total ram usage:        0 bytes
 21467 ;; Hardware stack levels used:    1
 21468 ;; Hardware stack levels required when called:   18
 21469 ;; This function calls:
 21470 ;;		_fputc
 21471 ;; This function is called by:
 21472 ;;		_pad
 21473 ;; This function uses a reentrant model
 21474 ;;
 21475                           
 21476                           	psect	text73
 21477  01A662                     __ptext73:
 21478                           	opt callstack 0
 21479  01A662                     _fputs:
 21480                           	opt callstack 0
 21481                           
 21482                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21483  01A662  52E6               	movf	postinc1,f,c
 21484  01A664  52E6               	movf	postinc1,f,c
 21485  01A666  52E6               	movf	postinc1,f,c
 21486                           
 21487                           ;stkvar	_i @ sp[(-3)+0]
 21488                           
 21489                           ;incstack = 0
 21490 ;; hardware stack exceeded
 21491  01A668  0EFD               	movlw	-3
 21492  01A66A  6AE3               	clrf	plusw1,c
 21493  01A66C  0EFE               	movlw	-2
 21494  01A66E  6AE3               	clrf	plusw1,c
 21495  01A670  D01F               	goto	l11661
 21496  01A672                     l11657:
 21497                           
 21498                           ;stkvar	_fp @ sp[(-3)+-4]
 21499  01A672  0EF9               	movlw	-7
 21500  01A674  006F FF8F FFE6     	movff	plusw1,postinc1
 21501  01A67A  006F FF8F FFE6     	movff	plusw1,postinc1
 21502                           
 21503                           ;stkvar	_c @ sp[(-5)+2]
 21504  01A680  0EFD               	movlw	-3
 21505  01A682  50E3               	movf	plusw1,w,c
 21506  01A684  6EE6               	movwf	postinc1,c
 21507  01A686  0E00               	movlw	0
 21508  01A688  6EE6               	movwf	postinc1,c
 21509  01A68A  EC64  F0CA         	call	_fputc	;wreg free
 21510                           
 21511                           ;stkvar	_i @ sp[(-3)+0]
 21512  01A68E  0EFD               	movlw	-3
 21513  01A690  50E3               	movf	plusw1,w,c
 21514  01A692  0F01               	addlw	1
 21515  01A694  6E01               	movwf	btemp^0,c
 21516  01A696  0EFD               	movlw	-3
 21517  01A698  0060  F007  FFE3   	movff	btemp,plusw1
 21518  01A69E  6A01               	clrf	btemp^0,c
 21519  01A6A0  0EFE               	movlw	-2
 21520  01A6A2  50E3               	movf	plusw1,w,c
 21521  01A6A4  2001               	addwfc	btemp^0,w,c
 21522  01A6A6  6E01               	movwf	btemp^0,c
 21523  01A6A8  0EFE               	movlw	-2
 21524  01A6AA  0060  F007  FFE3   	movff	btemp,plusw1
 21525  01A6B0                     l11661:
 21526                           
 21527                           ;stkvar	_i @ sp[(-3)+0]
 21528  01A6B0  0EFD               	movlw	-3
 21529  01A6B2  006F FF8C  F00B    	movff	plusw1,btemp+10
 21530  01A6B8  0EFE               	movlw	-2
 21531  01A6BA  006F FF8C  F00C    	movff	plusw1,btemp+11
 21532                           
 21533                           ;stkvar	_s @ sp[(-3)+-2]
 21534  01A6C0  0EFB               	movlw	-5
 21535  01A6C2  006F FF8C  F009    	movff	plusw1,btemp+8
 21536  01A6C8  0EFC               	movlw	-4
 21537  01A6CA  006F FF8C  F00A    	movff	plusw1,btemp+9
 21538  01A6D0  500B               	movf	(btemp+10)^0,w,c
 21539  01A6D2  2409               	addwf	(btemp+8)^0,w,c
 21540  01A6D4  6ED9               	movwf	fsr2l,c
 21541  01A6D6  500C               	movf	(btemp+11)^0,w,c
 21542  01A6D8  200A               	addwfc	(btemp+9)^0,w,c
 21543  01A6DA  6EDA               	movwf	fsr2h,c
 21544  01A6DC  50DF               	movf	indf2,w,c
 21545  01A6DE  6E0C               	movwf	(btemp+11)^0,c
 21546                           
 21547                           ;stkvar	_c @ sp[(-3)+2]
 21548  01A6E0  0EFF               	movlw	-1
 21549  01A6E2  0060  F033  FFE3   	movff	btemp+11,plusw1
 21550  01A6E8  0EFF               	movlw	-1
 21551  01A6EA  50E3               	movf	plusw1,w,c
 21552  01A6EC  A4D8               	btfss	status,2,c
 21553  01A6EE  D7C1               	goto	l11657
 21554                           
 21555                           ; _fputs: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 21556  01A6F0  0EF9               	movlw	249
 21557  01A6F2  26E1               	addwf	fsr1l,f,c
 21558  01A6F4  0EFF               	movlw	255
 21559  01A6F6  22E2               	addwfc	fsr1h,f,c
 21560  01A6F8  0012               	return		;funcret
 21561  01A6FA                     __end_of_fputs:
 21562                           	opt callstack 0
 21563                           
 21564 ;; *************** function _fputc *****************
 21565 ;; Defined at:
 21566 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputc.c"
 21567 ;; Parameters:    Size  Location     Type
 21568 ;;  c               2  [STACK] int 
 21569 ;;  fp              2  [STACK] PTR struct _IO_FILE
 21570 ;;		 -> f(6), NULL(0), 
 21571 ;; Auto vars:     Size  Location     Type
 21572 ;;		None
 21573 ;; Return value:  Size  Location     Type
 21574 ;;                  2  [STACK] int 
 21575 ;; Registers used:
 21576 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 21577 ;; Tracked objects:
 21578 ;;		On entry : 0/0
 21579 ;;		On exit  : 0/0
 21580 ;;		Unchanged: 0/0
 21581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21582 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21583 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21584 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21585 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21586 ;;Total ram usage:        0 bytes
 21587 ;; Hardware stack levels used:    1
 21588 ;; Hardware stack levels required when called:   17
 21589 ;; This function calls:
 21590 ;;		_putch
 21591 ;; This function is called by:
 21592 ;;		_pad
 21593 ;;		_stoa
 21594 ;;		_vfpfcnvrt
 21595 ;;		_fputs
 21596 ;; This function uses a reentrant model
 21597 ;;
 21598                           
 21599                           	psect	text74
 21600  0194C8                     __ptext74:
 21601                           	opt callstack 0
 21602  0194C8                     _fputc:
 21603                           	opt callstack 0
 21604                           
 21605                           ;stkvar	_fp @ sp[(0)+-4]
 21606                           
 21607                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21608                           ;incstack = 0
 21609 ;; hardware stack exceeded
 21610  0194C8  0EFC               	movlw	-4
 21611  0194CA  006F FF8C  F001    	movff	plusw1,btemp
 21612  0194D0  0EFD               	movlw	-3
 21613  0194D2  50E3               	movf	plusw1,w,c
 21614  0194D4  1001               	iorwf	btemp^0,w,c
 21615  0194D6  B4D8               	btfsc	status,2,c
 21616  0194D8  D009               	goto	u10670
 21617                           
 21618                           ;stkvar	_fp @ sp[(0)+-4]
 21619  0194DA  0EFC               	movlw	-4
 21620  0194DC  006F FF8C  F001    	movff	plusw1,btemp
 21621  0194E2  0EFD               	movlw	-3
 21622  0194E4  50E3               	movf	plusw1,w,c
 21623  0194E6  1001               	iorwf	btemp^0,w,c
 21624  0194E8  A4D8               	btfss	status,2,c
 21625  0194EA  D006               	goto	l11645
 21626  0194EC                     u10670:
 21627                           
 21628                           ;stkvar	_c @ sp[(0)+-2]
 21629  0194EC  0EFE               	movlw	-2
 21630  0194EE  50E3               	movf	plusw1,w,c
 21631  0194F0  6EE6               	movwf	postinc1,c
 21632  0194F2  EC08  F0DE         	call	_putch	;wreg free
 21633  0194F6  D075               	goto	l3189
 21634  0194F8                     l11645:
 21635                           
 21636                           ;stkvar	_fp @ sp[(0)+-4]
 21637  0194F8  0EFC               	movlw	-4
 21638  0194FA  006F FF8C  F00B    	movff	plusw1,btemp+10
 21639  019500  0EFD               	movlw	-3
 21640  019502  006F FF8C  F00C    	movff	plusw1,btemp+11
 21641  019508  0E04               	movlw	4
 21642  01950A  240B               	addwf	(btemp+10)^0,w,c
 21643  01950C  6ED9               	movwf	fsr2l,c
 21644  01950E  0E00               	movlw	0
 21645  019510  200C               	addwfc	(btemp+11)^0,w,c
 21646  019512  6EDA               	movwf	fsr2h,c
 21647  019514  50DE               	movf	postinc2,w,c
 21648  019516  10DE               	iorwf	postinc2,w,c
 21649  019518  B4D8               	btfsc	status,2,c
 21650  01951A  D026               	goto	u10690
 21651                           
 21652                           ;stkvar	_fp @ sp[(0)+-4]
 21653  01951C  0EFC               	movlw	-4
 21654  01951E  006F FF8C  F00B    	movff	plusw1,btemp+10
 21655  019524  0EFD               	movlw	-3
 21656  019526  006F FF8C  F00C    	movff	plusw1,btemp+11
 21657  01952C  0E04               	movlw	4
 21658  01952E  240B               	addwf	(btemp+10)^0,w,c
 21659  019530  6ED9               	movwf	fsr2l,c
 21660  019532  0E00               	movlw	0
 21661  019534  200C               	addwfc	(btemp+11)^0,w,c
 21662  019536  6EDA               	movwf	fsr2h,c
 21663                           
 21664                           ;stkvar	_fp @ sp[(0)+-4]
 21665  019538  0EFC               	movlw	-4
 21666  01953A  006F FF8C  F00B    	movff	plusw1,btemp+10
 21667  019540  0EFD               	movlw	-3
 21668  019542  006F FF8C  F00C    	movff	plusw1,btemp+11
 21669  019548  0E02               	movlw	2
 21670  01954A  240B               	addwf	(btemp+10)^0,w,c
 21671  01954C  6EE9               	movwf	fsr0l,c
 21672  01954E  0E00               	movlw	0
 21673  019550  200C               	addwfc	(btemp+11)^0,w,c
 21674  019552  6EEA               	movwf	fsr0h,c
 21675  019554  50DE               	movf	postinc2,w,c
 21676  019556  5CEE               	subwf	postinc0,w,c
 21677  019558  50EE               	movf	postinc0,w,c
 21678  01955A  0A80               	xorlw	128
 21679  01955C  6E01               	movwf	btemp^0,c
 21680  01955E  50DE               	movf	postinc2,w,c
 21681  019560  0A80               	xorlw	128
 21682  019562  5801               	subwfb	btemp^0,w,c
 21683  019564  B0D8               	btfsc	status,0,c
 21684  019566  D03D               	goto	l3189
 21685  019568                     u10690:
 21686                           
 21687                           ;stkvar	_c @ sp[(0)+-2]
 21688                           ;stkvar	_fp @ sp[(0)+-4]
 21689  019568  0EFC               	movlw	-4
 21690  01956A  006F FF8C  F00B    	movff	plusw1,btemp+10
 21691  019570  0EFD               	movlw	-3
 21692  019572  006F FF8C  F00C    	movff	plusw1,btemp+11
 21693  019578  0E02               	movlw	2
 21694  01957A  240B               	addwf	(btemp+10)^0,w,c
 21695  01957C  6ED9               	movwf	fsr2l,c
 21696  01957E  0E00               	movlw	0
 21697  019580  200C               	addwfc	(btemp+11)^0,w,c
 21698  019582  6EDA               	movwf	fsr2h,c
 21699  019584  006F FF78  F00B    	movff	postinc2,btemp+10
 21700  01958A  006F FF74  F00C    	movff	postdec2,btemp+11
 21701                           
 21702                           ;stkvar	_fp @ sp[(0)+-4]
 21703  019590  0EFC               	movlw	-4
 21704  019592  006F FF8F FFD9     	movff	plusw1,fsr2l
 21705  019598  0EFD               	movlw	-3
 21706  01959A  006F FF8F FFDA     	movff	plusw1,fsr2h
 21707  0195A0  006F FF78  F009    	movff	postinc2,btemp+8
 21708  0195A6  006F FF74  F00A    	movff	postdec2,btemp+9
 21709  0195AC  500B               	movf	(btemp+10)^0,w,c
 21710  0195AE  2409               	addwf	(btemp+8)^0,w,c
 21711  0195B0  6ED9               	movwf	fsr2l,c
 21712  0195B2  500C               	movf	(btemp+11)^0,w,c
 21713  0195B4  200A               	addwfc	(btemp+9)^0,w,c
 21714  0195B6  6EDA               	movwf	fsr2h,c
 21715  0195B8  0EFE               	movlw	-2
 21716  0195BA  006F FF8F FFDF     	movff	plusw1,indf2
 21717                           
 21718                           ;stkvar	_fp @ sp[(0)+-4]
 21719  0195C0  0EFC               	movlw	-4
 21720  0195C2  006F FF8C  F00B    	movff	plusw1,btemp+10
 21721  0195C8  0EFD               	movlw	-3
 21722  0195CA  006F FF8C  F00C    	movff	plusw1,btemp+11
 21723  0195D0  0E02               	movlw	2
 21724  0195D2  240B               	addwf	(btemp+10)^0,w,c
 21725  0195D4  6ED9               	movwf	fsr2l,c
 21726  0195D6  0E00               	movlw	0
 21727  0195D8  200C               	addwfc	(btemp+11)^0,w,c
 21728  0195DA  6EDA               	movwf	fsr2h,c
 21729  0195DC  2ADE               	incf	postinc2,f,c
 21730  0195DE  0E00               	movlw	0
 21731  0195E0  22DD               	addwfc	postdec2,f,c
 21732  0195E2                     l3189:
 21733                           
 21734                           ; _fputc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 21735  0195E2  52E5               	movf	postdec1,f,c
 21736  0195E4  52E5               	movf	postdec1,f,c
 21737  0195E6  52E5               	movf	postdec1,f,c
 21738  0195E8  52E5               	movf	postdec1,f,c
 21739  0195EA  0012               	return		;funcret
 21740  0195EC                     __end_of_fputc:
 21741                           	opt callstack 0
 21742                           
 21743 ;; *************** function _putch *****************
 21744 ;; Defined at:
 21745 ;;		line 170 in file "eadog.c"
 21746 ;; Parameters:    Size  Location     Type
 21747 ;;  c               1  [STACK] unsigned char 
 21748 ;; Auto vars:     Size  Location     Type
 21749 ;;		None
 21750 ;; Return value:  Size  Location     Type
 21751 ;;                  1  [STACK] void 
 21752 ;; Registers used:
 21753 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 21754 ;; Tracked objects:
 21755 ;;		On entry : 0/0
 21756 ;;		On exit  : 0/0
 21757 ;;		Unchanged: 0/0
 21758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21759 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21760 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21762 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21763 ;;Total ram usage:        0 bytes
 21764 ;; Hardware stack levels used:    1
 21765 ;; Hardware stack levels required when called:   16
 21766 ;; This function calls:
 21767 ;;		_ringBufS_put_dma
 21768 ;; This function is called by:
 21769 ;;		_fputc
 21770 ;; This function uses a reentrant model
 21771 ;;
 21772                           
 21773                           	psect	text75
 21774  01BC10                     __ptext75:
 21775                           	opt callstack 0
 21776  01BC10                     _putch:
 21777                           	opt callstack 0
 21778                           
 21779                           ;eadog.c: 170: void putch(char c);eadog.c: 171: {;eadog.c: 172:  ringBufS_put_dma(spi_li
      +                          nk.tx1a, c);
 21780                           ;stkvar	_c @ sp[(0)+-1]
 21781                           
 21782                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21783                           ;incstack = 0
 21784 ;; hardware stack exceeded
 21785  01BC10  0EFF               	movlw	-1
 21786  01BC12  50E3               	movf	plusw1,w,c
 21787  01BC14  6EE6               	movwf	postinc1,c
 21788  01BC16  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
 21789  01BC1C  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
 21790  01BC22  EC38  F0D2         	call	_ringBufS_put_dma	;wreg free
 21791                           
 21792                           ; _putch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
 21793  01BC26  52E5               	movf	postdec1,f,c
 21794  01BC28  0012               	return		;funcret
 21795  01BC2A                     __end_of_putch:
 21796                           	opt callstack 0
 21797                           
 21798 ;; *************** function _ringBufS_put_dma *****************
 21799 ;; Defined at:
 21800 ;;		line 67 in file "ringbufs.c"
 21801 ;; Parameters:    Size  Location     Type
 21802 ;;  _this           2  [STACK] PTR struct ringBufS_t
 21803 ;;		 -> ring_buf1(67), 
 21804 ;;  c               1  [STACK] const unsigned char 
 21805 ;; Auto vars:     Size  Location     Type
 21806 ;;		None
 21807 ;; Return value:  Size  Location     Type
 21808 ;;                  1  [STACK] void 
 21809 ;; Registers used:
 21810 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 21811 ;; Tracked objects:
 21812 ;;		On entry : 0/0
 21813 ;;		On exit  : 0/0
 21814 ;;		Unchanged: 0/0
 21815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21816 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21817 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21818 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21819 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21820 ;;Total ram usage:        0 bytes
 21821 ;; Hardware stack levels used:    1
 21822 ;; Hardware stack levels required when called:   15
 21823 ;; This function calls:
 21824 ;;		Nothing
 21825 ;; This function is called by:
 21826 ;;		_putch
 21827 ;; This function uses a reentrant model
 21828 ;;
 21829                           
 21830                           	psect	text76
 21831  01A470                     __ptext76:
 21832                           	opt callstack 0
 21833  01A470                     _ringBufS_put_dma:
 21834                           	opt callstack 0
 21835                           
 21836                           ;ringbufs.c: 67: void ringBufS_put_dma(ringBufS_t *_this, const uint8_t c);ringbufs.c: 6
      +                          8: {;ringbufs.c: 69:  if (_this->count < 64) {
 21837                           ;stkvar	__this @ sp[(0)+-2]
 21838                           
 21839                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21840                           ;incstack = 0
 21841 ;; hardware stack exceeded
 21842  01A470  0EFE               	movlw	-2
 21843  01A472  006F FF8C  F00B    	movff	plusw1,btemp+10
 21844  01A478  0EFF               	movlw	-1
 21845  01A47A  006F FF8C  F00C    	movff	plusw1,btemp+11
 21846  01A480  0E42               	movlw	66
 21847  01A482  240B               	addwf	(btemp+10)^0,w,c
 21848  01A484  6ED9               	movwf	fsr2l,c
 21849  01A486  0E00               	movlw	0
 21850  01A488  200C               	addwfc	(btemp+11)^0,w,c
 21851  01A48A  6EDA               	movwf	fsr2h,c
 21852  01A48C  0E40               	movlw	64
 21853  01A48E  60DF               	cpfslt	indf2,c
 21854  01A490  D040               	goto	l1587
 21855                           
 21856                           ;ringbufs.c: 70:   _this->buf[_this->head] = c;
 21857                           ;stkvar	_c @ sp[(0)+-3]
 21858                           ;stkvar	__this @ sp[(0)+-2]
 21859  01A492  0EFE               	movlw	-2
 21860  01A494  006F FF8C  F00B    	movff	plusw1,btemp+10
 21861  01A49A  0EFF               	movlw	-1
 21862  01A49C  006F FF8C  F00C    	movff	plusw1,btemp+11
 21863  01A4A2  0E40               	movlw	64
 21864  01A4A4  240B               	addwf	(btemp+10)^0,w,c
 21865  01A4A6  6ED9               	movwf	fsr2l,c
 21866  01A4A8  0E00               	movlw	0
 21867  01A4AA  200C               	addwfc	(btemp+11)^0,w,c
 21868  01A4AC  6EDA               	movwf	fsr2h,c
 21869  01A4AE  50DF               	movf	indf2,w,c
 21870  01A4B0  6E0C               	movwf	(btemp+11)^0,c
 21871                           
 21872                           ;stkvar	__this @ sp[(0)+-2]
 21873  01A4B2  0EFE               	movlw	-2
 21874  01A4B4  006F FF8C  F009    	movff	plusw1,btemp+8
 21875  01A4BA  0EFF               	movlw	-1
 21876  01A4BC  006F FF8C  F00A    	movff	plusw1,btemp+9
 21877  01A4C2  500C               	movf	(btemp+11)^0,w,c
 21878  01A4C4  2409               	addwf	(btemp+8)^0,w,c
 21879  01A4C6  6ED9               	movwf	fsr2l,c
 21880  01A4C8  0E00               	movlw	0
 21881  01A4CA  200A               	addwfc	(btemp+9)^0,w,c
 21882  01A4CC  6EDA               	movwf	fsr2h,c
 21883  01A4CE  0EFD               	movlw	-3
 21884  01A4D0  006F FF8F FFDF     	movff	plusw1,indf2
 21885                           
 21886                           ;ringbufs.c: 71:   ++_this->head;
 21887                           ;stkvar	__this @ sp[(0)+-2]
 21888  01A4D6  0EFE               	movlw	-2
 21889  01A4D8  006F FF8C  F00B    	movff	plusw1,btemp+10
 21890  01A4DE  0EFF               	movlw	-1
 21891  01A4E0  006F FF8C  F00C    	movff	plusw1,btemp+11
 21892  01A4E6  0E40               	movlw	64
 21893  01A4E8  240B               	addwf	(btemp+10)^0,w,c
 21894  01A4EA  6ED9               	movwf	fsr2l,c
 21895  01A4EC  0E00               	movlw	0
 21896  01A4EE  200C               	addwfc	(btemp+11)^0,w,c
 21897  01A4F0  6EDA               	movwf	fsr2h,c
 21898  01A4F2  2ADF               	incf	indf2,f,c
 21899                           
 21900                           ;ringbufs.c: 72:   ++_this->count;
 21901                           ;stkvar	__this @ sp[(0)+-2]
 21902  01A4F4  0EFE               	movlw	-2
 21903  01A4F6  006F FF8C  F00B    	movff	plusw1,btemp+10
 21904  01A4FC  0EFF               	movlw	-1
 21905  01A4FE  006F FF8C  F00C    	movff	plusw1,btemp+11
 21906  01A504  0E42               	movlw	66
 21907  01A506  240B               	addwf	(btemp+10)^0,w,c
 21908  01A508  6ED9               	movwf	fsr2l,c
 21909  01A50A  0E00               	movlw	0
 21910  01A50C  200C               	addwfc	(btemp+11)^0,w,c
 21911  01A50E  6EDA               	movwf	fsr2h,c
 21912  01A510  2ADF               	incf	indf2,f,c
 21913  01A512                     l1587:
 21914                           
 21915                           ; _ringBufS_put_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 21916  01A512  52E5               	movf	postdec1,f,c
 21917  01A514  52E5               	movf	postdec1,f,c
 21918  01A516  52E5               	movf	postdec1,f,c
 21919  01A518  0012               	return		;funcret
 21920  01A51A                     __end_of_ringBufS_put_dma:
 21921                           	opt callstack 0
 21922                           
 21923 ;; *************** function _atoi *****************
 21924 ;; Defined at:
 21925 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/atoi.c"
 21926 ;; Parameters:    Size  Location     Type
 21927 ;;  s               2  [STACK] PTR const unsigned char 
 21928 ;;		 -> STR_65(103), STR_63(3), STR_62(3), STR_61(19), 
 21929 ;;		 -> STR_60(19), STR_59(19), STR_58(19), STR_57(19), 
 21930 ;;		 -> STR_56(19), STR_55(24), STR_54(15), STR_53(15), 
 21931 ;;		 -> STR_52(15), STR_51(10), STR_50(10), STR_49(19), 
 21932 ;;		 -> STR_48(19), STR_45(3), STR_44(3), STR_43(3), 
 21933 ;;		 -> STR_42(17), STR_41(16), STR_40(16), STR_39(20), 
 21934 ;;		 -> STR_38(20), STR_37(20), STR_36(20), STR_35(20), 
 21935 ;;		 -> STR_34(20), STR_33(19), STR_32(19), STR_31(19), 
 21936 ;;		 -> STR_30(19), STR_29(19), STR_28(19), STR_27(19), 
 21937 ;;		 -> STR_26(19), STR_25(20), STR_24(19), STR_23(19), 
 21938 ;;		 -> STR_22(20), STR_21(17), STR_20(16), STR_19(16), 
 21939 ;;		 -> STR_18(26), STR_17(26), STR_16(22), STR_15(21), 
 21940 ;;		 -> STR_14(17), STR_13(17), STR_12(17), STR_11(22), 
 21941 ;;		 -> STR_10(22), STR_9(23), STR_8(18), STR_7(17), 
 21942 ;;		 -> STR_6(17), STR_5(17), STR_4(17), STR_2(15), 
 21943 ;;		 -> STR_1(17), 
 21944 ;; Auto vars:     Size  Location     Type
 21945 ;;  n               2  [STACK] int 
 21946 ;;  neg             2  [STACK] int 
 21947 ;; Return value:  Size  Location     Type
 21948 ;;                  2  [STACK] int 
 21949 ;; Registers used:
 21950 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl,
      + tblptrh, tblptru, prodl, prodh
 21951 ;; Tracked objects:
 21952 ;;		On entry : 0/0
 21953 ;;		On exit  : 0/0
 21954 ;;		Unchanged: 0/0
 21955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21956 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21957 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21958 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21959 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21960 ;;Total ram usage:        0 bytes
 21961 ;; Hardware stack levels used:    1
 21962 ;; Hardware stack levels required when called:   16
 21963 ;; This function calls:
 21964 ;;		_isdigit
 21965 ;;		_isspace
 21966 ;; This function is called by:
 21967 ;;		_vfpfcnvrt
 21968 ;; This function uses a reentrant model
 21969 ;;
 21970                           
 21971                           	psect	text77
 21972  017684                     __ptext77:
 21973                           	opt callstack 0
 21974  017684                     _atoi:
 21975                           	opt callstack 0
 21976                           
 21977                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21978  017684  0E09               	movlw	9
 21979  017686  26E1               	addwf	fsr1l,f,c
 21980  017688  0E00               	movlw	0
 21981  01768A  22E2               	addwfc	fsr1h,f,c
 21982                           
 21983                           ;stkvar	_n @ sp[(-9)+5]
 21984                           
 21985                           ;incstack = 0
 21986 ;; hardware stack exceeded
 21987  01768C  0EFC               	movlw	-4
 21988  01768E  6AE3               	clrf	plusw1,c
 21989  017690  0EFD               	movlw	-3
 21990  017692  6AE3               	clrf	plusw1,c
 21991                           
 21992                           ;stkvar	_neg @ sp[(-9)+7]
 21993  017694  0EFE               	movlw	-2
 21994  017696  6AE3               	clrf	plusw1,c
 21995  017698  0EFF               	movlw	-1
 21996  01769A  6AE3               	clrf	plusw1,c
 21997  01769C  D011               	goto	l9227
 21998  01769E                     l9225:
 21999                           
 22000                           ;stkvar	_s @ sp[(-9)+-2]
 22001  01769E  0EF5               	movlw	-11
 22002  0176A0  50E3               	movf	plusw1,w,c
 22003  0176A2  0F01               	addlw	1
 22004  0176A4  6E01               	movwf	btemp^0,c
 22005  0176A6  0EF5               	movlw	-11
 22006  0176A8  0060  F007  FFE3   	movff	btemp,plusw1
 22007  0176AE  6A01               	clrf	btemp^0,c
 22008  0176B0  0EF6               	movlw	-10
 22009  0176B2  50E3               	movf	plusw1,w,c
 22010  0176B4  2001               	addwfc	btemp^0,w,c
 22011  0176B6  6E01               	movwf	btemp^0,c
 22012  0176B8  0EF6               	movlw	-10
 22013  0176BA  0060  F007  FFE3   	movff	btemp,plusw1
 22014  0176C0                     l9227:
 22015                           
 22016                           ;stkvar	_atoi$6054 @ sp[(-9)+4]
 22017  0176C0  0EFB               	movlw	-5
 22018  0176C2  6AE3               	clrf	plusw1,c
 22019  0176C4  2AE3               	incf	plusw1,f,c
 22020                           
 22021                           ;stkvar	_s @ sp[(-9)+-2]
 22022  0176C6  50E1               	movf	fsr1l,w,c
 22023  0176C8  0FF5               	addlw	-11
 22024  0176CA  6ED9               	movwf	fsr2l,c
 22025  0176CC  50E2               	movf	fsr1h,w,c
 22026  0176CE  6EDA               	movwf	fsr2h,c
 22027  0176D0  0EFF               	movlw	255
 22028  0176D2  22DA               	addwfc	fsr2h,f,c
 22029  0176D4  006F FF7B FFF6     	movff	postinc2,tblptrl
 22030  0176DA  006F FF77 FFF7     	movff	postdec2,tblptrh
 22031  0176E0                     	if	0	;tblptru may be non-zero
 22032  0176E0                     	endif
 22033  0176E0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 22034  0176E0  0E00               	movlw	low (__mediumconst shr (0+16))
 22035  0176E2  6EF8               	movwf	tblptru,c
 22036  0176E4                     	endif
 22037  0176E4  0008               	tblrd		*
 22038  0176E6  50F5               	movf	tablat,w,c
 22039  0176E8  0A20               	xorlw	32
 22040  0176EA  B4D8               	btfsc	status,2,c
 22041  0176EC  D023               	goto	l9235
 22042  0176EE  0EF7               	movlw	247
 22043  0176F0  6E0B               	movwf	(btemp+10)^0,c
 22044  0176F2  0EFF               	movlw	255
 22045  0176F4  6E0C               	movwf	(btemp+11)^0,c
 22046                           
 22047                           ;stkvar	_s @ sp[(-9)+-2]
 22048  0176F6  50E1               	movf	fsr1l,w,c
 22049  0176F8  0FF5               	addlw	-11
 22050  0176FA  6ED9               	movwf	fsr2l,c
 22051  0176FC  50E2               	movf	fsr1h,w,c
 22052  0176FE  6EDA               	movwf	fsr2h,c
 22053  017700  0EFF               	movlw	255
 22054  017702  22DA               	addwfc	fsr2h,f,c
 22055  017704  006F FF7B FFF6     	movff	postinc2,tblptrl
 22056  01770A  006F FF77 FFF7     	movff	postdec2,tblptrh
 22057  017710                     	if	0	;tblptru may be non-zero
 22058  017710                     	endif
 22059  017710                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 22060  017710  0E00               	movlw	low (__mediumconst shr (0+16))
 22061  017712  6EF8               	movwf	tblptru,c
 22062  017714                     	endif
 22063  017714  0008               	tblrd		*
 22064  017716  50F5               	movf	tablat,w,c
 22065  017718  6E09               	movwf	(btemp+8)^0,c
 22066  01771A  6A0A               	clrf	(btemp+9)^0,c
 22067  01771C  500B               	movf	(btemp+10)^0,w,c
 22068  01771E  2609               	addwf	(btemp+8)^0,f,c
 22069  017720  500C               	movf	(btemp+11)^0,w,c
 22070  017722  220A               	addwfc	(btemp+9)^0,f,c
 22071  017724  500A               	movf	(btemp+9)^0,w,c
 22072  017726  E104               	bnz	u8490
 22073  017728  0E05               	movlw	5
 22074  01772A  5C09               	subwf	(btemp+8)^0,w,c
 22075  01772C  A0D8               	btfss	status,0,c
 22076  01772E  D002               	goto	l9235
 22077  017730                     u8490:
 22078                           
 22079                           ;stkvar	_atoi$6054 @ sp[(-9)+4]
 22080  017730  0EFB               	movlw	-5
 22081  017732  6AE3               	clrf	plusw1,c
 22082  017734                     l9235:
 22083                           
 22084                           ;stkvar	_atoi$6054 @ sp[(-9)+4]
 22085  017734  0EFB               	movlw	-5
 22086  017736  50E3               	movf	plusw1,w,c
 22087  017738  6E0B               	movwf	(btemp+10)^0,c
 22088  01773A  6A0C               	clrf	(btemp+11)^0,c
 22089                           
 22090                           ;stkvar	_atoi$6053 @ sp[(-9)+2]
 22091  01773C  0EF9               	movlw	-7
 22092  01773E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22093  017744  0EFA               	movlw	-6
 22094  017746  0060  F033  FFE3   	movff	btemp+11,plusw1
 22095                           
 22096                           ;stkvar	_atoi$6053 @ sp[(-9)+2]
 22097  01774C  0EF9               	movlw	-7
 22098  01774E  006F FF8C  F001    	movff	plusw1,btemp
 22099  017754  0EFA               	movlw	-6
 22100  017756  50E3               	movf	plusw1,w,c
 22101  017758  1001               	iorwf	btemp^0,w,c
 22102  01775A  B4D8               	btfsc	status,2,c
 22103  01775C  D01F               	goto	l9245
 22104  01775E  D79F               	goto	l9225
 22105  017760                     l9241:
 22106  017760  0E01               	movlw	1
 22107  017762  6E0B               	movwf	(btemp+10)^0,c
 22108  017764  0E00               	movlw	0
 22109  017766  6E0C               	movwf	(btemp+11)^0,c
 22110                           
 22111                           ;stkvar	_neg @ sp[(-9)+7]
 22112  017768  0EFE               	movlw	-2
 22113  01776A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22114  017770  0EFF               	movlw	-1
 22115  017772  0060  F033  FFE3   	movff	btemp+11,plusw1
 22116  017778                     l9243:
 22117                           
 22118                           ;stkvar	_s @ sp[(-9)+-2]
 22119  017778  0EF5               	movlw	-11
 22120  01777A  50E3               	movf	plusw1,w,c
 22121  01777C  0F01               	addlw	1
 22122  01777E  6E01               	movwf	btemp^0,c
 22123  017780  0EF5               	movlw	-11
 22124  017782  0060  F007  FFE3   	movff	btemp,plusw1
 22125  017788  6A01               	clrf	btemp^0,c
 22126  01778A  0EF6               	movlw	-10
 22127  01778C  50E3               	movf	plusw1,w,c
 22128  01778E  2001               	addwfc	btemp^0,w,c
 22129  017790  6E01               	movwf	btemp^0,c
 22130  017792  0EF6               	movlw	-10
 22131  017794  0060  F007  FFE3   	movff	btemp,plusw1
 22132  01779A  D053               	goto	l9251
 22133  01779C                     l9245:
 22134                           
 22135                           ;stkvar	_s @ sp[(-9)+-2]
 22136  01779C  50E1               	movf	fsr1l,w,c
 22137  01779E  0FF5               	addlw	-11
 22138  0177A0  6ED9               	movwf	fsr2l,c
 22139  0177A2  50E2               	movf	fsr1h,w,c
 22140  0177A4  6EDA               	movwf	fsr2h,c
 22141  0177A6  0EFF               	movlw	255
 22142  0177A8  22DA               	addwfc	fsr2h,f,c
 22143  0177AA  006F FF7B FFF6     	movff	postinc2,tblptrl
 22144  0177B0  006F FF77 FFF7     	movff	postdec2,tblptrh
 22145  0177B6                     	if	0	;tblptru may be non-zero
 22146  0177B6                     	endif
 22147  0177B6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 22148  0177B6  0E00               	movlw	low (__mediumconst shr (0+16))
 22149  0177B8  6EF8               	movwf	tblptru,c
 22150  0177BA                     	endif
 22151  0177BA  0008               	tblrd		*
 22152  0177BC  50F5               	movf	tablat,w,c
 22153  0177BE  6E0B               	movwf	(btemp+10)^0,c
 22154  0177C0  6A0C               	clrf	(btemp+11)^0,c
 22155                           
 22156                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 22157                           ; Switch size 1, requested type "simple"
 22158                           ; Number of cases is 1, Range of values is 0 to 0
 22159                           ; switch strategies available:
 22160                           ; Name         Instructions Cycles
 22161                           ; simple_byte            4     3 (average)
 22162                           ;	Chosen strategy is simple_byte
 22163  0177C2  500C               	movf	(btemp+11)^0,w,c
 22164  0177C4  0A00               	xorlw	0	; case 0
 22165  0177C6  A4D8               	btfss	status,2,c
 22166  0177C8  D03C               	goto	l9251
 22167                           
 22168                           ; Switch size 1, requested type "simple"
 22169                           ; Number of cases is 2, Range of values is 43 to 45
 22170                           ; switch strategies available:
 22171                           ; Name         Instructions Cycles
 22172                           ; simple_byte            7     4 (average)
 22173                           ;	Chosen strategy is simple_byte
 22174  0177CA  500B               	movf	(btemp+10)^0,w,c
 22175  0177CC  0A2B               	xorlw	43	; case 43
 22176  0177CE  B4D8               	btfsc	status,2,c
 22177  0177D0  D7D3               	goto	l9243
 22178  0177D2  0A06               	xorlw	6	; case 45
 22179  0177D4  B4D8               	btfsc	status,2,c
 22180  0177D6  D7C4               	goto	l9241
 22181  0177D8  D034               	goto	l9251
 22182  0177DA                     l9247:
 22183                           
 22184                           ;stkvar	_n @ sp[(-9)+5]
 22185  0177DA  0EFC               	movlw	-4
 22186  0177DC  006F FF8C  F00B    	movff	plusw1,btemp+10
 22187  0177E2  0EFD               	movlw	-3
 22188  0177E4  006F FF8C  F00C    	movff	plusw1,btemp+11
 22189  0177EA  0E0A               	movlw	10
 22190  0177EC  020B               	mulwf	(btemp+10)^0,c
 22191  0177EE  006F FFCC  F009    	movff	prodl,btemp+8
 22192  0177F4  006F FFD0  F00A    	movff	prodh,btemp+9
 22193  0177FA  020C               	mulwf	(btemp+11)^0,c
 22194  0177FC  50F3               	movf	prodl,w,c
 22195  0177FE  260A               	addwf	(btemp+9)^0,f,c
 22196                           
 22197                           ;stkvar	_s @ sp[(-9)+-2]
 22198  017800  50E1               	movf	fsr1l,w,c
 22199  017802  0FF5               	addlw	-11
 22200  017804  6ED9               	movwf	fsr2l,c
 22201  017806  50E2               	movf	fsr1h,w,c
 22202  017808  6EDA               	movwf	fsr2h,c
 22203  01780A  0EFF               	movlw	255
 22204  01780C  22DA               	addwfc	fsr2h,f,c
 22205  01780E  006F FF7B FFF6     	movff	postinc2,tblptrl
 22206  017814  006F FF77 FFF7     	movff	postdec2,tblptrh
 22207  01781A                     	if	0	;tblptru may be non-zero
 22208  01781A                     	endif
 22209  01781A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 22210  01781A  0E00               	movlw	low (__mediumconst shr (0+16))
 22211  01781C  6EF8               	movwf	tblptru,c
 22212  01781E                     	endif
 22213  01781E  0008               	tblrd		*
 22214  017820  50F5               	movf	tablat,w,c
 22215  017822  5E09               	subwf	(btemp+8)^0,f,c
 22216  017824  0E00               	movlw	0
 22217  017826  5A0A               	subwfb	(btemp+9)^0,f,c
 22218  017828  0E30               	movlw	48
 22219  01782A  2609               	addwf	(btemp+8)^0,f,c
 22220  01782C  0E00               	movlw	0
 22221  01782E  220A               	addwfc	(btemp+9)^0,f,c
 22222                           
 22223                           ;stkvar	_n @ sp[(-9)+5]
 22224  017830  0EFC               	movlw	-4
 22225  017832  0060  F027  FFE3   	movff	btemp+8,plusw1
 22226  017838  0EFD               	movlw	-3
 22227  01783A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 22228  017840  D79B               	goto	l9243
 22229  017842                     l9251:
 22230  017842  0ED0               	movlw	208
 22231  017844  6E0B               	movwf	(btemp+10)^0,c
 22232  017846  0EFF               	movlw	255
 22233  017848  6E0C               	movwf	(btemp+11)^0,c
 22234                           
 22235                           ;stkvar	_s @ sp[(-9)+-2]
 22236  01784A  50E1               	movf	fsr1l,w,c
 22237  01784C  0FF5               	addlw	-11
 22238  01784E  6ED9               	movwf	fsr2l,c
 22239  017850  50E2               	movf	fsr1h,w,c
 22240  017852  6EDA               	movwf	fsr2h,c
 22241  017854  0EFF               	movlw	255
 22242  017856  22DA               	addwfc	fsr2h,f,c
 22243  017858  006F FF7B FFF6     	movff	postinc2,tblptrl
 22244  01785E  006F FF77 FFF7     	movff	postdec2,tblptrh
 22245  017864                     	if	0	;tblptru may be non-zero
 22246  017864                     	endif
 22247  017864                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 22248  017864  0E00               	movlw	low (__mediumconst shr (0+16))
 22249  017866  6EF8               	movwf	tblptru,c
 22250  017868                     	endif
 22251  017868  0008               	tblrd		*
 22252  01786A  50F5               	movf	tablat,w,c
 22253  01786C  6E09               	movwf	(btemp+8)^0,c
 22254  01786E  6A0A               	clrf	(btemp+9)^0,c
 22255  017870  500B               	movf	(btemp+10)^0,w,c
 22256  017872  2609               	addwf	(btemp+8)^0,f,c
 22257  017874  500C               	movf	(btemp+11)^0,w,c
 22258  017876  220A               	addwfc	(btemp+9)^0,f,c
 22259  017878  500A               	movf	(btemp+9)^0,w,c
 22260  01787A  E106               	bnz	u8510
 22261  01787C  0E0A               	movlw	10
 22262  01787E  5C09               	subwf	(btemp+8)^0,w,c
 22263  017880  B0D8               	btfsc	status,0,c
 22264  017882  D002               	goto	u8510
 22265  017884  0E01               	movlw	1
 22266  017886  D001               	goto	u8520
 22267  017888                     u8510:
 22268  017888  0E00               	movlw	0
 22269  01788A                     u8520:
 22270  01788A  6E0B               	movwf	(btemp+10)^0,c
 22271  01788C  6A0C               	clrf	(btemp+11)^0,c
 22272                           
 22273                           ;stkvar	_atoi$6055 @ sp[(-9)+0]
 22274  01788E  0EF7               	movlw	-9
 22275  017890  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22276  017896  0EF8               	movlw	-8
 22277  017898  0060  F033  FFE3   	movff	btemp+11,plusw1
 22278                           
 22279                           ;stkvar	_atoi$6055 @ sp[(-9)+0]
 22280  01789E  0EF7               	movlw	-9
 22281  0178A0  006F FF8C  F001    	movff	plusw1,btemp
 22282  0178A6  0EF8               	movlw	-8
 22283  0178A8  50E3               	movf	plusw1,w,c
 22284  0178AA  1001               	iorwf	btemp^0,w,c
 22285  0178AC  A4D8               	btfss	status,2,c
 22286  0178AE  D795               	goto	l9247
 22287                           
 22288                           ;stkvar	_neg @ sp[(-9)+7]
 22289  0178B0  0EFE               	movlw	-2
 22290  0178B2  006F FF8C  F001    	movff	plusw1,btemp
 22291  0178B8  0EFF               	movlw	-1
 22292  0178BA  50E3               	movf	plusw1,w,c
 22293  0178BC  1001               	iorwf	btemp^0,w,c
 22294  0178BE  A4D8               	btfss	status,2,c
 22295  0178C0  D00E               	goto	l9261
 22296                           
 22297                           ;stkvar	_n @ sp[(-9)+5]
 22298  0178C2  0EFC               	movlw	-4
 22299  0178C4  006F FF8C  F001    	movff	plusw1,btemp
 22300  0178CA  1E01               	comf	btemp^0,f,c
 22301  0178CC  0EFD               	movlw	-3
 22302  0178CE  006F FF8C  F002    	movff	plusw1,btemp+1
 22303  0178D4  1E02               	comf	(btemp+1)^0,f,c
 22304  0178D6  2A01               	incf	btemp^0,f,c
 22305  0178D8  B4D8               	btfsc	status,2,c
 22306  0178DA  2A02               	incf	(btemp+1)^0,f,c
 22307  0178DC  D008               	goto	l3120
 22308  0178DE                     l9261:
 22309                           
 22310                           ;stkvar	_n @ sp[(-9)+5]
 22311  0178DE  0EFC               	movlw	-4
 22312  0178E0  006F FF8C  F001    	movff	plusw1,btemp
 22313  0178E6  0EFD               	movlw	-3
 22314  0178E8  006F FF8C  F002    	movff	plusw1,btemp+1
 22315  0178EE                     l3120:
 22316                           
 22317                           ; _atoi: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 22318  0178EE  0EF5               	movlw	245
 22319  0178F0  26E1               	addwf	fsr1l,f,c
 22320  0178F2  0EFF               	movlw	255
 22321  0178F4  22E2               	addwfc	fsr1h,f,c
 22322  0178F6  0012               	return		;funcret
 22323  0178F8                     __end_of_atoi:
 22324                           	opt callstack 0
 22325                           
 22326 ;; *************** function _isspace *****************
 22327 ;; Defined at:
 22328 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isspace.c"
 22329 ;; Parameters:    Size  Location     Type
 22330 ;;  c               2  [STACK] int 
 22331 ;; Auto vars:     Size  Location     Type
 22332 ;;		None
 22333 ;; Return value:  Size  Location     Type
 22334 ;;                  2  [STACK] int 
 22335 ;; Registers used:
 22336 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 22337 ;; Tracked objects:
 22338 ;;		On entry : 0/0
 22339 ;;		On exit  : 0/0
 22340 ;;		Unchanged: 0/0
 22341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22342 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22343 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22345 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22346 ;;Total ram usage:        0 bytes
 22347 ;; Hardware stack levels used:    1
 22348 ;; Hardware stack levels required when called:   15
 22349 ;; This function calls:
 22350 ;;		Nothing
 22351 ;; This function is called by:
 22352 ;;		_atoi
 22353 ;; This function uses a reentrant model
 22354 ;;
 22355                           
 22356                           	psect	text78
 22357  01AF6E                     __ptext78:
 22358                           	opt callstack 0
 22359  01AF6E                     _isspace:
 22360                           	opt callstack 0
 22361                           
 22362                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22363  01AF6E  52E6               	movf	postinc1,f,c
 22364                           
 22365                           ;stkvar	_isspace$6104 @ sp[(-1)+0]
 22366                           
 22367                           ;incstack = 0
 22368 ;; hardware stack exceeded
 22369  01AF70  0EFF               	movlw	-1
 22370  01AF72  6AE3               	clrf	plusw1,c
 22371  01AF74  2AE3               	incf	plusw1,f,c
 22372                           
 22373                           ;stkvar	_c @ sp[(-1)+-2]
 22374  01AF76  0EFD               	movlw	-3
 22375  01AF78  006F FF8C  F001    	movff	plusw1,btemp
 22376  01AF7E  0E20               	movlw	32
 22377  01AF80  1801               	xorwf	btemp^0,w,c
 22378  01AF82  E104               	bnz	u7340
 22379  01AF84  0EFE               	movlw	-2
 22380  01AF86  50E3               	movf	plusw1,w,c
 22381  01AF88  B4D8               	btfsc	status,2,c
 22382  01AF8A  D012               	goto	l8619
 22383  01AF8C                     u7340:
 22384                           
 22385                           ;stkvar	_c @ sp[(-1)+-2]
 22386  01AF8C  0EFD               	movlw	-3
 22387  01AF8E  50E3               	movf	plusw1,w,c
 22388  01AF90  0FF7               	addlw	247
 22389  01AF92  6E0B               	movwf	(btemp+10)^0,c
 22390  01AF94  0EFE               	movlw	-2
 22391  01AF96  006F FF8C  F00C    	movff	plusw1,btemp+11
 22392  01AF9C  0EFF               	movlw	255
 22393  01AF9E  220C               	addwfc	(btemp+11)^0,f,c
 22394  01AFA0  500C               	movf	(btemp+11)^0,w,c
 22395  01AFA2  E104               	bnz	u7350
 22396  01AFA4  0E05               	movlw	5
 22397  01AFA6  5C0B               	subwf	(btemp+10)^0,w,c
 22398  01AFA8  A0D8               	btfss	status,0,c
 22399  01AFAA  D002               	goto	l8619
 22400  01AFAC                     u7350:
 22401                           
 22402                           ;stkvar	_isspace$6104 @ sp[(-1)+0]
 22403  01AFAC  0EFF               	movlw	-1
 22404  01AFAE  6AE3               	clrf	plusw1,c
 22405  01AFB0                     l8619:
 22406                           
 22407                           ;stkvar	_isspace$6104 @ sp[(-1)+0]
 22408  01AFB0  0EFF               	movlw	-1
 22409  01AFB2  50E3               	movf	plusw1,w,c
 22410  01AFB4  6E01               	movwf	btemp^0,c
 22411  01AFB6  6A02               	clrf	(btemp+1)^0,c
 22412                           
 22413                           ; _isspace: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 22414  01AFB8  52E5               	movf	postdec1,f,c
 22415  01AFBA  52E5               	movf	postdec1,f,c
 22416  01AFBC  52E5               	movf	postdec1,f,c
 22417  01AFBE  0012               	return		;funcret
 22418  01AFC0                     __end_of_isspace:
 22419                           	opt callstack 0
 22420                           
 22421 ;; *************** function _isdigit *****************
 22422 ;; Defined at:
 22423 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isdigit.c"
 22424 ;; Parameters:    Size  Location     Type
 22425 ;;  c               2  [STACK] int 
 22426 ;; Auto vars:     Size  Location     Type
 22427 ;;		None
 22428 ;; Return value:  Size  Location     Type
 22429 ;;                  2  [STACK] int 
 22430 ;; Registers used:
 22431 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 22432 ;; Tracked objects:
 22433 ;;		On entry : 0/0
 22434 ;;		On exit  : 0/0
 22435 ;;		Unchanged: 0/0
 22436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22437 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22438 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22439 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22440 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22441 ;;Total ram usage:        0 bytes
 22442 ;; Hardware stack levels used:    1
 22443 ;; Hardware stack levels required when called:   15
 22444 ;; This function calls:
 22445 ;;		Nothing
 22446 ;; This function is called by:
 22447 ;;		_vfpfcnvrt
 22448 ;;		_atoi
 22449 ;; This function uses a reentrant model
 22450 ;;
 22451                           
 22452                           	psect	text79
 22453  01B668                     __ptext79:
 22454                           	opt callstack 0
 22455  01B668                     _isdigit:
 22456                           	opt callstack 0
 22457                           
 22458                           ;stkvar	_c @ sp[(0)+-2]
 22459                           
 22460                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22461                           ;incstack = 0
 22462 ;; hardware stack exceeded
 22463  01B668  0EFE               	movlw	-2
 22464  01B66A  50E3               	movf	plusw1,w,c
 22465  01B66C  0FD0               	addlw	208
 22466  01B66E  6E0B               	movwf	(btemp+10)^0,c
 22467  01B670  0EFF               	movlw	-1
 22468  01B672  006F FF8C  F00C    	movff	plusw1,btemp+11
 22469  01B678  0EFF               	movlw	255
 22470  01B67A  220C               	addwfc	(btemp+11)^0,f,c
 22471  01B67C  500C               	movf	(btemp+11)^0,w,c
 22472  01B67E  E106               	bnz	u6190
 22473  01B680  0E0A               	movlw	10
 22474  01B682  5C0B               	subwf	(btemp+10)^0,w,c
 22475  01B684  B0D8               	btfsc	status,0,c
 22476  01B686  D002               	goto	u6190
 22477  01B688  0E01               	movlw	1
 22478  01B68A  D001               	goto	u6200
 22479  01B68C                     u6190:
 22480  01B68C  0E00               	movlw	0
 22481  01B68E                     u6200:
 22482  01B68E  6E01               	movwf	btemp^0,c
 22483  01B690  6A02               	clrf	(btemp+1)^0,c
 22484                           
 22485                           ; _isdigit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 22486  01B692  52E5               	movf	postdec1,f,c
 22487  01B694  52E5               	movf	postdec1,f,c
 22488  01B696  0012               	return		;funcret
 22489  01B698                     __end_of_isdigit:
 22490                           	opt callstack 0
 22491                           
 22492 ;; *************** function _set_vterm *****************
 22493 ;; Defined at:
 22494 ;;		line 107 in file "mconfig.c"
 22495 ;; Parameters:    Size  Location     Type
 22496 ;;  vterm           1  [STACK] const unsigned char 
 22497 ;; Auto vars:     Size  Location     Type
 22498 ;;		None
 22499 ;; Return value:  Size  Location     Type
 22500 ;;                  1  [STACK] unsigned char 
 22501 ;; Registers used:
 22502 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+11
 22503 ;; Tracked objects:
 22504 ;;		On entry : 0/0
 22505 ;;		On exit  : 0/0
 22506 ;;		Unchanged: 0/0
 22507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22508 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22509 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22510 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22511 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22512 ;;Total ram usage:        0 bytes
 22513 ;; Hardware stack levels used:    1
 22514 ;; Hardware stack levels required when called:   15
 22515 ;; This function calls:
 22516 ;;		Nothing
 22517 ;; This function is called by:
 22518 ;;		_main
 22519 ;;		_check_help
 22520 ;; This function uses a reentrant model
 22521 ;;
 22522                           
 22523                           	psect	text80
 22524  01BB9A                     __ptext80:
 22525                           	opt callstack 0
 22526  01BB9A                     _set_vterm:
 22527                           	opt callstack 15
 22528                           
 22529                           ;mconfig.c: 107: uint8_t set_vterm(const uint8_t vterm);mconfig.c: 108: {;mconfig.c: 109
      +                          :  D.vterm = vterm & 0x03;
 22530                           ;stkvar	_vterm @ sp[(0)+-1]
 22531                           
 22532                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22533                           ;incstack = 0
 22534  01BB9A  0EFF               	movlw	-1
 22535  01BB9C  006F FF8C  F00C    	movff	plusw1,btemp+11
 22536  01BBA2  0E03               	movlw	3
 22537  01BBA4  160C               	andwf	(btemp+11)^0,f,c
 22538  01BBA6  EE22  F206         	lfsr	2,_D+480
 22539  01BBAA  50DF               	movf	223,w,c
 22540  01BBAC  180C               	xorwf	(btemp+11)^0,w,c
 22541  01BBAE  0BFE               	andlw	-2
 22542  01BBB0  180C               	xorwf	(btemp+11)^0,w,c
 22543  01BBB2  6EDF               	movwf	223,c
 22544                           
 22545                           ; _set_vterm: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 22546  01BBB4  52E5               	movf	postdec1,f,c
 22547  01BBB6  0012               	return		;funcret
 22548  01BBB8                     __end_of_set_vterm:
 22549                           	opt callstack 0
 22550                           
 22551 ;; *************** function _set_temp_display_help *****************
 22552 ;; Defined at:
 22553 ;;		line 211 in file "mconfig.c"
 22554 ;; Parameters:    Size  Location     Type
 22555 ;;  new_response    1  [STACK] const enum E16509
 22556 ;; Auto vars:     Size  Location     Type
 22557 ;;		None
 22558 ;; Return value:  Size  Location     Type
 22559 ;;                  1  [STACK] enum E16509
 22560 ;; Registers used:
 22561 ;;		wreg, fsr1l, fsr1h
 22562 ;; Tracked objects:
 22563 ;;		On entry : 0/1
 22564 ;;		On exit  : 3F/1
 22565 ;;		Unchanged: 0/0
 22566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22567 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22568 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22569 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22570 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22571 ;;Total ram usage:        0 bytes
 22572 ;; Hardware stack levels used:    1
 22573 ;; Hardware stack levels required when called:   15
 22574 ;; This function calls:
 22575 ;;		Nothing
 22576 ;; This function is called by:
 22577 ;;		_check_help
 22578 ;; This function uses a reentrant model
 22579 ;;
 22580                           
 22581                           	psect	text81
 22582  01BCFE                     __ptext81:
 22583                           	opt callstack 0
 22584  01BCFE                     _set_temp_display_help:
 22585                           	opt callstack 14
 22586                           
 22587                           ;mconfig.c: 211: D_CODES set_temp_display_help(const D_CODES new_response_info);mconfig.
      +                          c: 212: {;mconfig.c: 213:  static D_CODES old_info;;mconfig.c: 215:  old_info = V.respon
      +                          se.help_temp;
 22588                           
 22589                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22590                           ;incstack = 0
 22591  01BCFE  0101               	movlb	1	; () banked
 22592  01BD00  51D5               	movf	(_V+165)& (0+255),w,b	;volatile
 22593                           
 22594                           ; BSR set to: 1
 22595                           ;mconfig.c: 216:  V.response.help_temp = new_response_info;
 22596                           ;stkvar	_new_response_info @ sp[(0)+-1]
 22597  01BD02  0EFF               	movlw	-1
 22598  01BD04  006F FF8C  F1D5    	movff	plusw1,_V+165	;volatile
 22599                           
 22600                           ; BSR set to: 1
 22601                           ; _set_temp_display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 1, argsize = 1, vargsize = 0
 22602  01BD0A  52E5               	movf	postdec1,f,c
 22603  01BD0C  0012               	return		;funcret
 22604  01BD0E                     __end_of_set_temp_display_help:
 22605                           	opt callstack 0
 22606                           
 22607 ;; *************** function _set_display_info *****************
 22608 ;; Defined at:
 22609 ;;		line 200 in file "mconfig.c"
 22610 ;; Parameters:    Size  Location     Type
 22611 ;;  new_response    1  [STACK] const enum E16509
 22612 ;; Auto vars:     Size  Location     Type
 22613 ;;		None
 22614 ;; Return value:  Size  Location     Type
 22615 ;;                  1  [STACK] enum E16994
 22616 ;; Registers used:
 22617 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 22618 ;; Tracked objects:
 22619 ;;		On entry : 0/1
 22620 ;;		On exit  : 0/0
 22621 ;;		Unchanged: 0/0
 22622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22623 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22624 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22625 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22626 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22627 ;;Total ram usage:        0 bytes
 22628 ;; Hardware stack levels used:    1
 22629 ;; Hardware stack levels required when called:   16
 22630 ;; This function calls:
 22631 ;;		_TimerDone
 22632 ;; This function is called by:
 22633 ;;		_main
 22634 ;;		_check_help
 22635 ;; This function uses a reentrant model
 22636 ;;
 22637                           
 22638                           	psect	text82
 22639  01BBB8                     __ptext82:
 22640                           	opt callstack 0
 22641  01BBB8                     _set_display_info:
 22642                           	opt callstack 14
 22643                           
 22644                           ;mconfig.c: 200: D_CODES set_display_info(const D_CODES new_response_info);mconfig.c: 20
      +                          1: {;mconfig.c: 202:  static D_CODES old_info = DIS_STR;;mconfig.c: 204:  if (TimerDone(
      +                          TMR_INFO)) {
 22645                           
 22646                           ; BSR set to: 1
 22647                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22648                           ;incstack = 0
 22649  01BBB8  0E07               	movlw	7
 22650  01BBBA  6EE6               	movwf	postinc1,c
 22651  01BBBC  ECF7  F0DB         	call	_TimerDone	;wreg free
 22652  01BBC0  5001               	movf	btemp^0,w,c
 22653  01BBC2  B4D8               	btfsc	status,2,c
 22654  01BBC4  D006               	goto	l1722
 22655                           
 22656                           ;mconfig.c: 205:   old_info = V.response.info;
 22657  01BBC6  0101               	movlb	1	; () banked
 22658  01BBC8  51D4               	movf	(_V+164)& (0+255),w,b	;volatile
 22659                           
 22660                           ; BSR set to: 1
 22661                           ;mconfig.c: 206:   V.response.info = new_response_info;
 22662                           ;stkvar	_new_response_info @ sp[(0)+-1]
 22663  01BBCA  0EFF               	movlw	-1
 22664  01BBCC  006F FF8C  F1D4    	movff	plusw1,_V+164	;volatile
 22665  01BBD2                     l1722:
 22666                           
 22667                           ; _set_display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 22668  01BBD2  52E5               	movf	postdec1,f,c
 22669  01BBD4  0012               	return		;funcret
 22670  01BBD6                     __end_of_set_display_info:
 22671                           	opt callstack 0
 22672                           
 22673 ;; *************** function _mode_lamp_dim *****************
 22674 ;; Defined at:
 22675 ;;		line 13 in file "mconfig.c"
 22676 ;; Parameters:    Size  Location     Type
 22677 ;;  level           2  [STACK] const unsigned short 
 22678 ;; Auto vars:     Size  Location     Type
 22679 ;;		None
 22680 ;; Return value:  Size  Location     Type
 22681 ;;                  1  [STACK] void 
 22682 ;; Registers used:
 22683 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 22684 ;; Tracked objects:
 22685 ;;		On entry : 0/1
 22686 ;;		On exit  : 0/0
 22687 ;;		Unchanged: 0/0
 22688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22689 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22690 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22691 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22692 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22693 ;;Total ram usage:        0 bytes
 22694 ;; Hardware stack levels used:    1
 22695 ;; Hardware stack levels required when called:   16
 22696 ;; This function calls:
 22697 ;;		_PWM8_LoadDutyValue
 22698 ;; This function is called by:
 22699 ;;		_main
 22700 ;;		_check_help
 22701 ;; This function uses a reentrant model
 22702 ;;
 22703                           
 22704                           	psect	text83
 22705  01BC46                     __ptext83:
 22706                           	opt callstack 0
 22707  01BC46                     _mode_lamp_dim:
 22708                           	opt callstack 14
 22709                           
 22710                           ;mconfig.c: 13: void mode_lamp_dim(const uint16_t level);mconfig.c: 14: {;mconfig.c: 15:
      +                            PWM8_LoadDutyValue(level);
 22711                           ;stkvar	_level @ sp[(0)+-2]
 22712                           
 22713                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22714                           ;incstack = 0
 22715  01BC46  0EFE               	movlw	-2
 22716  01BC48  006F FF8F FFE6     	movff	plusw1,postinc1
 22717  01BC4E  006F FF8F FFE6     	movff	plusw1,postinc1
 22718  01BC54  EC4D  F0D9         	call	_PWM8_LoadDutyValue	;wreg free
 22719                           
 22720                           ; _mode_lamp_dim: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 22721  01BC58  52E5               	movf	postdec1,f,c
 22722  01BC5A  52E5               	movf	postdec1,f,c
 22723  01BC5C  0012               	return		;funcret
 22724  01BC5E                     __end_of_mode_lamp_dim:
 22725                           	opt callstack 0
 22726                           
 22727 ;; *************** function _mode_lamp_bright *****************
 22728 ;; Defined at:
 22729 ;;		line 18 in file "mconfig.c"
 22730 ;; Parameters:    Size  Location     Type
 22731 ;;		None
 22732 ;; Auto vars:     Size  Location     Type
 22733 ;;		None
 22734 ;; Return value:  Size  Location     Type
 22735 ;;                  1  [STACK] void 
 22736 ;; Registers used:
 22737 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 22738 ;; Tracked objects:
 22739 ;;		On entry : 0/0
 22740 ;;		On exit  : 0/0
 22741 ;;		Unchanged: 0/0
 22742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22743 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22744 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22745 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22746 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22747 ;;Total ram usage:        0 bytes
 22748 ;; Hardware stack levels used:    1
 22749 ;; Hardware stack levels required when called:   16
 22750 ;; This function calls:
 22751 ;;		_PWM8_LoadDutyValue
 22752 ;; This function is called by:
 22753 ;;		_check_help
 22754 ;; This function uses a reentrant model
 22755 ;;
 22756                           
 22757                           	psect	text84
 22758  01BD3A                     __ptext84:
 22759                           	opt callstack 0
 22760  01BD3A                     _mode_lamp_bright:
 22761                           	opt callstack 13
 22762                           
 22763                           ;mconfig.c: 20:  PWM8_LoadDutyValue(300);
 22764                           
 22765                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22766                           ;incstack = 0
 22767  01BD3A  0E2C               	movlw	44
 22768  01BD3C  6EE6               	movwf	postinc1,c
 22769  01BD3E  0E01               	movlw	1
 22770  01BD40  6EE6               	movwf	postinc1,c
 22771  01BD42  EC4D  F0D9         	call	_PWM8_LoadDutyValue	;wreg free
 22772                           
 22773                           ; _mode_lamp_bright: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 22774  01BD46  0012               	return		;funcret
 22775  01BD48                     __end_of_mode_lamp_bright:
 22776                           	opt callstack 0
 22777                           
 22778 ;; *************** function _PWM8_LoadDutyValue *****************
 22779 ;; Defined at:
 22780 ;;		line 74 in file "mcc_generated_files/pwm8.c"
 22781 ;; Parameters:    Size  Location     Type
 22782 ;;  dutyValue       2  [STACK] unsigned short 
 22783 ;; Auto vars:     Size  Location     Type
 22784 ;;		None
 22785 ;; Return value:  Size  Location     Type
 22786 ;;                  1  [STACK] void 
 22787 ;; Registers used:
 22788 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 22789 ;; Tracked objects:
 22790 ;;		On entry : 0/1
 22791 ;;		On exit  : 0/0
 22792 ;;		Unchanged: 0/0
 22793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22794 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22795 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22796 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22797 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22798 ;;Total ram usage:        0 bytes
 22799 ;; Hardware stack levels used:    1
 22800 ;; Hardware stack levels required when called:   15
 22801 ;; This function calls:
 22802 ;;		Nothing
 22803 ;; This function is called by:
 22804 ;;		_mode_lamp_dim
 22805 ;;		_mode_lamp_bright
 22806 ;; This function uses a reentrant model
 22807 ;;
 22808                           
 22809                           	psect	text85
 22810  01B29A                     __ptext85:
 22811                           	opt callstack 0
 22812  01B29A                     _PWM8_LoadDutyValue:
 22813                           	opt callstack 14
 22814                           
 22815                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 22816                           ;stkvar	_dutyValue @ sp[(0)+-2]
 22817                           
 22818                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22819                           ;incstack = 0
 22820  01B29A  0EFE               	movlw	-2
 22821  01B29C  006F FF8C  F00B    	movff	plusw1,btemp+10
 22822  01B2A2  0EFF               	movlw	-1
 22823  01B2A4  006F FF8C  F00C    	movff	plusw1,btemp+11
 22824  01B2AA  90D8               	bcf	status,0,c
 22825  01B2AC  320C               	rrcf	(btemp+11)^0,f,c
 22826  01B2AE  320B               	rrcf	(btemp+10)^0,f,c
 22827  01B2B0  90D8               	bcf	status,0,c
 22828  01B2B2  320C               	rrcf	(btemp+11)^0,f,c
 22829  01B2B4  320B               	rrcf	(btemp+10)^0,f,c
 22830  01B2B6  500B               	movf	(btemp+10)^0,w,c
 22831  01B2B8  6E61               	movwf	97,c	;volatile
 22832                           
 22833                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
 22834                           ;stkvar	_dutyValue @ sp[(0)+-2]
 22835  01B2BA  0EFE               	movlw	-2
 22836  01B2BC  006F FF8C  F00C    	movff	plusw1,btemp+11
 22837  01B2C2  0E03               	movlw	3
 22838  01B2C4  160C               	andwf	(btemp+11)^0,f,c
 22839  01B2C6  0E06               	movlw	6
 22840  01B2C8  6E01               	movwf	btemp^0,c
 22841  01B2CA                     u9335:
 22842  01B2CA  90D8               	bcf	status,0,c
 22843  01B2CC  360C               	rlcf	(btemp+11)^0,f,c
 22844  01B2CE  2E01               	decfsz	btemp^0,f,c
 22845  01B2D0  D7FC               	goto	u9335
 22846  01B2D2  500C               	movf	(btemp+11)^0,w,c
 22847  01B2D4  6E60               	movwf	96,c	;volatile
 22848                           
 22849                           ; _PWM8_LoadDutyValue: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 22850  01B2D6  52E5               	movf	postdec1,f,c
 22851  01B2D8  52E5               	movf	postdec1,f,c
 22852  01B2DA  0012               	return		;funcret
 22853  01B2DC                     __end_of_PWM8_LoadDutyValue:
 22854                           	opt callstack 0
 22855                           
 22856 ;; *************** function _help_button *****************
 22857 ;; Defined at:
 22858 ;;		line 26 in file "mconfig.c"
 22859 ;; Parameters:    Size  Location     Type
 22860 ;;		None
 22861 ;; Auto vars:     Size  Location     Type
 22862 ;;		None
 22863 ;; Return value:  Size  Location     Type
 22864 ;;                  1  [STACK] _Bool 
 22865 ;; Registers used:
 22866 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 22867 ;; Tracked objects:
 22868 ;;		On entry : 0/1
 22869 ;;		On exit  : 0/0
 22870 ;;		Unchanged: 0/0
 22871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22872 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22873 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22875 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22876 ;;Total ram usage:        0 bytes
 22877 ;; Hardware stack levels used:    1
 22878 ;; Hardware stack levels required when called:   16
 22879 ;; This function calls:
 22880 ;;		_StartTimer
 22881 ;;		_TimerDone
 22882 ;; This function is called by:
 22883 ;;		_check_help
 22884 ;; This function uses a reentrant model
 22885 ;;
 22886                           
 22887                           	psect	text86
 22888  01B494                     __ptext86:
 22889                           	opt callstack 0
 22890  01B494                     _help_button:
 22891                           	opt callstack 13
 22892                           
 22893                           ;mconfig.c: 28:  if (!PORTBbits.RB0) {
 22894                           
 22895                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22896                           ;incstack = 0
 22897  01B494  B0CB               	btfsc	203,0,c	;volatile
 22898  01B496  D00C               	goto	l1665
 22899                           
 22900                           ;mconfig.c: 29:   V.help = 1;
 22901  01B498  0101               	movlb	1	; () banked
 22902  01B49A  85CB               	bsf	(_V+155)& (0+255),2,b	;volatile
 22903                           
 22904                           ; BSR set to: 1
 22905                           ;mconfig.c: 30:   if (TimerDone(TMR_HELP))
 22906  01B49C  0E08               	movlw	8
 22907  01B49E  6EE6               	movwf	postinc1,c
 22908  01B4A0  ECF7  F0DB         	call	_TimerDone	;wreg free
 22909  01B4A4  5001               	movf	btemp^0,w,c
 22910  01B4A6  B4D8               	btfsc	status,2,c
 22911  01B4A8  D003               	goto	l1665
 22912                           
 22913                           ;mconfig.c: 31:    return 1;
 22914  01B4AA  0E01               	movlw	1
 22915  01B4AC  6E01               	movwf	btemp^0,c
 22916  01B4AE  0012               	return	
 22917  01B4B0                     l1665:
 22918                           
 22919                           ;mconfig.c: 34:  if (!V.help)
 22920  01B4B0  0101               	movlb	1	; () banked
 22921  01B4B2  B5CB               	btfsc	(_V+155)& (0+255),2,b	;volatile
 22922  01B4B4  D008               	goto	l10359
 22923                           
 22924                           ; BSR set to: 1
 22925                           ;mconfig.c: 35:   StartTimer(TMR_HELP, 300);
 22926  01B4B6  0E2C               	movlw	44
 22927  01B4B8  6EE6               	movwf	postinc1,c
 22928  01B4BA  0E01               	movlw	1
 22929  01B4BC  6EE6               	movwf	postinc1,c
 22930  01B4BE  0E08               	movlw	8
 22931  01B4C0  6EE6               	movwf	postinc1,c
 22932  01B4C2  EC6E  F0D9         	call	_StartTimer	;wreg free
 22933  01B4C6                     l10359:
 22934                           
 22935                           ;mconfig.c: 37:  return 0;
 22936  01B4C6  0E00               	movlw	0
 22937  01B4C8  6E01               	movwf	btemp^0,c
 22938                           
 22939                           ; _help_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
 22940  01B4CA  0012               	return		;funcret
 22941  01B4CC                     __end_of_help_button:
 22942                           	opt callstack 0
 22943                           
 22944 ;; *************** function _TimerDone *****************
 22945 ;; Defined at:
 22946 ;;		line 20 in file "timers.c"
 22947 ;; Parameters:    Size  Location     Type
 22948 ;;  timer           1  [STACK] const unsigned char 
 22949 ;; Auto vars:     Size  Location     Type
 22950 ;;		None
 22951 ;; Return value:  Size  Location     Type
 22952 ;;                  1  [STACK] _Bool 
 22953 ;; Registers used:
 22954 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 22955 ;; Tracked objects:
 22956 ;;		On entry : 0/1
 22957 ;;		On exit  : 0/0
 22958 ;;		Unchanged: 0/0
 22959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22960 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22961 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22962 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22963 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22964 ;;Total ram usage:        0 bytes
 22965 ;; Hardware stack levels used:    1
 22966 ;; Hardware stack levels required when called:   15
 22967 ;; This function calls:
 22968 ;;		Nothing
 22969 ;; This function is called by:
 22970 ;;		_main
 22971 ;;		_WaitMs
 22972 ;;		_help_button
 22973 ;;		_check_help
 22974 ;;		_set_display_info
 22975 ;;		_update_adc_result
 22976 ;;		_esr_check
 22977 ;; This function uses a reentrant model
 22978 ;;
 22979                           
 22980                           	psect	text87
 22981  01B7EE                     __ptext87:
 22982                           	opt callstack 0
 22983  01B7EE                     _TimerDone:
 22984                           	opt callstack 14
 22985                           
 22986                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22987                           ;incstack = 0
 22988  01B7EE  0004               	clrwdt		;# 
 22989                           
 22990                           ;timers.c: 23:  if (tickCount[timer] == 0) {
 22991                           ;stkvar	_timer @ sp[(0)+-1]
 22992  01B7F0  0EFF               	movlw	-1
 22993  01B7F2  50E3               	movf	plusw1,w,c
 22994  01B7F4  0D02               	mullw	2
 22995  01B7F6  0E7D               	movlw	low _tickCount
 22996  01B7F8  24F3               	addwf	243,w,c
 22997  01B7FA  6ED9               	movwf	fsr2l,c
 22998  01B7FC  0E02               	movlw	high _tickCount
 22999  01B7FE  20F4               	addwfc	prodh,w,c
 23000  01B800  6EDA               	movwf	fsr2h,c
 23001  01B802  50DE               	movf	postinc2,w,c
 23002  01B804  10DE               	iorwf	postinc2,w,c
 23003  01B806  A4D8               	btfss	status,2,c
 23004  01B808  D002               	goto	l9659
 23005                           
 23006                           ;timers.c: 24:   return 1;
 23007  01B80A  0E01               	movlw	1
 23008  01B80C  D001               	goto	L27
 23009  01B80E                     l9659:
 23010                           
 23011                           ;timers.c: 26:  return 0;
 23012  01B80E  0E00               	movlw	0
 23013  01B810                     L27:
 23014  01B810  6E01               	movwf	btemp^0,c
 23015                           
 23016                           ; _TimerDone: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 23017  01B812  52E5               	movf	postdec1,f,c
 23018  01B814  0012               	return		;funcret
 23019  01B816                     __end_of_TimerDone:
 23020                           	opt callstack 0
 23021                           
 23022 ;; *************** function _StartTimer *****************
 23023 ;; Defined at:
 23024 ;;		line 12 in file "timers.c"
 23025 ;; Parameters:    Size  Location     Type
 23026 ;;  timer           1  [STACK] const unsigned char 
 23027 ;;  count           2  [STACK] const unsigned short 
 23028 ;; Auto vars:     Size  Location     Type
 23029 ;;		None
 23030 ;; Return value:  Size  Location     Type
 23031 ;;                  1  [STACK] void 
 23032 ;; Registers used:
 23033 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 23034 ;; Tracked objects:
 23035 ;;		On entry : 0/0
 23036 ;;		On exit  : 0/0
 23037 ;;		Unchanged: 0/0
 23038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23039 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23040 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23041 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23042 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23043 ;;Total ram usage:        0 bytes
 23044 ;; Hardware stack levels used:    1
 23045 ;; Hardware stack levels required when called:   15
 23046 ;; This function calls:
 23047 ;;		Nothing
 23048 ;; This function is called by:
 23049 ;;		_main
 23050 ;;		_WaitMs
 23051 ;;		_help_button
 23052 ;;		_check_help
 23053 ;;		_update_adc_result
 23054 ;;		_calc_bsoc
 23055 ;;		_esr_check
 23056 ;; This function uses a reentrant model
 23057 ;;
 23058                           
 23059                           	psect	text88
 23060  01B2DC                     __ptext88:
 23061                           	opt callstack 0
 23062  01B2DC                     _StartTimer:
 23063                           	opt callstack 0
 23064                           
 23065                           ;timers.c: 12: void StartTimer(const uint8_t timer, const uint16_t count);timers.c: 13: 
      +                          {;timers.c: 14:  tickCount[timer] = count << 1;
 23066                           ;stkvar	_count @ sp[(0)+-3]
 23067                           
 23068                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23069                           ;incstack = 0
 23070 ;; hardware stack exceeded
 23071  01B2DC  0EFD               	movlw	-3
 23072  01B2DE  006F FF8C  F00B    	movff	plusw1,btemp+10
 23073  01B2E4  0EFE               	movlw	-2
 23074  01B2E6  006F FF8C  F00C    	movff	plusw1,btemp+11
 23075  01B2EC  90D8               	bcf	status,0,c
 23076  01B2EE  340B               	rlcf	(btemp+10)^0,w,c
 23077  01B2F0  6E09               	movwf	(btemp+8)^0,c
 23078  01B2F2  340C               	rlcf	(btemp+11)^0,w,c
 23079  01B2F4  6E0A               	movwf	(btemp+9)^0,c
 23080                           
 23081                           ;stkvar	_timer @ sp[(0)+-1]
 23082  01B2F6  0EFF               	movlw	-1
 23083  01B2F8  50E3               	movf	plusw1,w,c
 23084  01B2FA  0D02               	mullw	2
 23085  01B2FC  0E7D               	movlw	low _tickCount
 23086  01B2FE  24F3               	addwf	243,w,c
 23087  01B300  6ED9               	movwf	fsr2l,c
 23088  01B302  0E02               	movlw	high _tickCount
 23089  01B304  20F4               	addwfc	prodh,w,c
 23090  01B306  6EDA               	movwf	fsr2h,c
 23091  01B308  0060  F027  FFDE   	movff	btemp+8,postinc2
 23092  01B30E  0060  F02B  FFDD   	movff	btemp+9,postdec2
 23093                           
 23094                           ; _StartTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
 23095  01B314  52E5               	movf	postdec1,f,c
 23096  01B316  52E5               	movf	postdec1,f,c
 23097  01B318  52E5               	movf	postdec1,f,c
 23098  01B31A  0012               	return		;funcret
 23099  01B31C                     __end_of_StartTimer:
 23100                           	opt callstack 0
 23101                           
 23102 ;; *************** function _display_info *****************
 23103 ;; Defined at:
 23104 ;;		line 190 in file "mconfig.c"
 23105 ;; Parameters:    Size  Location     Type
 23106 ;;		None
 23107 ;; Auto vars:     Size  Location     Type
 23108 ;;		None
 23109 ;; Return value:  Size  Location     Type
 23110 ;;                  1  [STACK] enum E16509
 23111 ;; Registers used:
 23112 ;;		btemp
 23113 ;; Tracked objects:
 23114 ;;		On entry : 0/1
 23115 ;;		On exit  : 0/0
 23116 ;;		Unchanged: 0/0
 23117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23118 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23119 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23121 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23122 ;;Total ram usage:        0 bytes
 23123 ;; Hardware stack levels used:    1
 23124 ;; Hardware stack levels required when called:   15
 23125 ;; This function calls:
 23126 ;;		Nothing
 23127 ;; This function is called by:
 23128 ;;		_check_help
 23129 ;; This function uses a reentrant model
 23130 ;;
 23131                           
 23132                           	psect	text89
 23133  01BDBE                     __ptext89:
 23134                           	opt callstack 0
 23135  01BDBE                     _display_info:
 23136                           	opt callstack 14
 23137                           
 23138                           ;mconfig.c: 192:  return V.response.info;
 23139                           
 23140                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23141                           ;incstack = 0
 23142  01BDBE  0060  F750  F001   	movff	_V+164,btemp	;volatile
 23143                           
 23144                           ; _display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 23145  01BDC4  0012               	return		;funcret
 23146  01BDC6                     __end_of_display_info:
 23147                           	opt callstack 0
 23148                           
 23149 ;; *************** function _display_help *****************
 23150 ;; Defined at:
 23151 ;;		line 195 in file "mconfig.c"
 23152 ;; Parameters:    Size  Location     Type
 23153 ;;		None
 23154 ;; Auto vars:     Size  Location     Type
 23155 ;;		None
 23156 ;; Return value:  Size  Location     Type
 23157 ;;                  1  [STACK] enum E16509
 23158 ;; Registers used:
 23159 ;;		btemp
 23160 ;; Tracked objects:
 23161 ;;		On entry : 3F/1
 23162 ;;		On exit  : 0/0
 23163 ;;		Unchanged: 0/0
 23164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23165 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23166 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23167 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23168 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23169 ;;Total ram usage:        0 bytes
 23170 ;; Hardware stack levels used:    1
 23171 ;; Hardware stack levels required when called:   15
 23172 ;; This function calls:
 23173 ;;		Nothing
 23174 ;; This function is called by:
 23175 ;;		_check_help
 23176 ;; This function uses a reentrant model
 23177 ;;
 23178                           
 23179                           	psect	text90
 23180  01BDC6                     __ptext90:
 23181                           	opt callstack 0
 23182  01BDC6                     _display_help:
 23183                           	opt callstack 14
 23184                           
 23185                           ;mconfig.c: 197:  return V.response.help_temp;
 23186                           
 23187                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23188                           ;incstack = 0
 23189  01BDC6  0060  F754  F001   	movff	_V+165,btemp	;volatile
 23190                           
 23191                           ; _display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 23192  01BDCC  0012               	return		;funcret
 23193  01BDCE                     __end_of_display_help:
 23194                           	opt callstack 0
 23195                           
 23196 ;; *************** function _check_enter_button *****************
 23197 ;; Defined at:
 23198 ;;		line 42 in file "hid.c"
 23199 ;; Parameters:    Size  Location     Type
 23200 ;;  h               1  [STACK] PTR struct H_data
 23201 ;;		 -> H(7), 
 23202 ;; Auto vars:     Size  Location     Type
 23203 ;;		None
 23204 ;; Return value:  Size  Location     Type
 23205 ;;                  1  [STACK] _Bool 
 23206 ;; Registers used:
 23207 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 23208 ;; Tracked objects:
 23209 ;;		On entry : 0/0
 23210 ;;		On exit  : 0/0
 23211 ;;		Unchanged: 0/0
 23212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23213 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23214 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23215 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23216 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23217 ;;Total ram usage:        0 bytes
 23218 ;; Hardware stack levels used:    1
 23219 ;; Hardware stack levels required when called:   15
 23220 ;; This function calls:
 23221 ;;		Nothing
 23222 ;; This function is called by:
 23223 ;;		_main
 23224 ;; This function uses a reentrant model
 23225 ;;
 23226                           
 23227                           	psect	text91
 23228  01B31C                     __ptext91:
 23229                           	opt callstack 0
 23230  01B31C                     _check_enter_button:
 23231                           	opt callstack 15
 23232                           
 23233                           ;hid.c: 42: _Bool check_enter_button(H_data* h);hid.c: 43: {;hid.c: 44:  if (!h->wait_en
      +                          ter && (h->enter_p == SW_OFF)) {
 23234                           ;stkvar	_h @ sp[(0)+-1]
 23235                           
 23236                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23237                           ;incstack = 0
 23238  01B31C  0EFF               	movlw	-1
 23239  01B31E  50E3               	movf	plusw1,w,c
 23240  01B320  6ED9               	movwf	fsr2l,c
 23241  01B322  6ADA               	clrf	fsr2h,c
 23242  01B324  0E04               	movlw	4
 23243  01B326  26D9               	addwf	fsr2l,f,c
 23244  01B328  50DF               	movf	indf2,w,c
 23245  01B32A  A4D8               	btfss	status,2,c
 23246  01B32C  D013               	goto	l10961
 23247                           
 23248                           ;stkvar	_h @ sp[(0)+-1]
 23249  01B32E  0EFF               	movlw	-1
 23250  01B330  50E3               	movf	plusw1,w,c
 23251  01B332  6ED9               	movwf	fsr2l,c
 23252  01B334  6ADA               	clrf	fsr2h,c
 23253  01B336  0E05               	movlw	5
 23254  01B338  26D9               	addwf	fsr2l,f,c
 23255  01B33A  50DF               	movf	indf2,w,c
 23256  01B33C  A4D8               	btfss	status,2,c
 23257  01B33E  D00A               	goto	l10961
 23258                           
 23259                           ;hid.c: 45:   h->wait_enter = 1;
 23260                           ;stkvar	_h @ sp[(0)+-1]
 23261  01B340  0EFF               	movlw	-1
 23262  01B342  50E3               	movf	plusw1,w,c
 23263  01B344  6ED9               	movwf	fsr2l,c
 23264  01B346  6ADA               	clrf	fsr2h,c
 23265  01B348  0E04               	movlw	4
 23266  01B34A  26D9               	addwf	fsr2l,f,c
 23267  01B34C  0E01               	movlw	1
 23268  01B34E  6EDF               	movwf	indf2,c
 23269                           
 23270                           ;hid.c: 46:   return 1;
 23271  01B350  0E01               	movlw	1
 23272  01B352  D001               	goto	L28
 23273  01B354                     l10961:
 23274                           
 23275                           ;hid.c: 48:  return 0;
 23276  01B354  0E00               	movlw	0
 23277  01B356                     L28:
 23278  01B356  6E01               	movwf	btemp^0,c
 23279                           
 23280                           ; _check_enter_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
 23281  01B358  52E5               	movf	postdec1,f,c
 23282  01B35A  0012               	return		;funcret
 23283  01B35C                     __end_of_check_enter_button:
 23284                           	opt callstack 0
 23285                           
 23286 ;; *************** function _calc_ror_data *****************
 23287 ;; Defined at:
 23288 ;;		line 102 in file "mbmc.c"
 23289 ;; Parameters:    Size  Location     Type
 23290 ;;		None
 23291 ;; Auto vars:     Size  Location     Type
 23292 ;;		None
 23293 ;; Return value:  Size  Location     Type
 23294 ;;                  1  [STACK] void 
 23295 ;; Registers used:
 23296 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 23297 ;; Tracked objects:
 23298 ;;		On entry : 0/39
 23299 ;;		On exit  : 0/0
 23300 ;;		Unchanged: 0/0
 23301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23302 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23303 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23304 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23305 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23306 ;;Total ram usage:        0 bytes
 23307 ;; Hardware stack levels used:    1
 23308 ;; Hardware stack levels required when called:   18
 23309 ;; This function calls:
 23310 ;;		___flge
 23311 ;;		___flsub
 23312 ;;		_conv_raw_result
 23313 ;;		_fabsf
 23314 ;; This function is called by:
 23315 ;;		_main
 23316 ;; This function uses a reentrant model
 23317 ;;
 23318                           
 23319                           	psect	text92
 23320  01888A                     __ptext92:
 23321                           	opt callstack 0
 23322  01888A                     _calc_ror_data:
 23323                           	opt callstack 12
 23324                           
 23325                           ;mbmc.c: 104:  static float bvror = 0.0, bcror = 0.0;;mbmc.c: 106:  C.bc_ror = fabsf(con
      +                          v_raw_result(C_BATT, CONV) - bcror);
 23326                           
 23327                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23328                           ;incstack = 0
 23329  01888A  0060  F21B  FFE6   	movff	calc_ror_data@bcror,postinc1
 23330  018890  0060  F21F  FFE6   	movff	calc_ror_data@bcror+1,postinc1
 23331  018896  0060  F223  FFE6   	movff	calc_ror_data@bcror+2,postinc1
 23332  01889C  0060  F227  FFE6   	movff	calc_ror_data@bcror+3,postinc1
 23333  0188A2  0E00               	movlw	0
 23334  0188A4  6EE6               	movwf	postinc1,c
 23335  0188A6  0E00               	movlw	0
 23336  0188A8  6EE6               	movwf	postinc1,c
 23337  0188AA  EC0E  F0A8         	call	_conv_raw_result	;wreg free
 23338  0188AE  0060  F007  FFE6   	movff	btemp,postinc1
 23339  0188B4  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23340  0188BA  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23341  0188C0  0060  F013  FFE6   	movff	btemp+3,postinc1
 23342  0188C6  EC08  F0D9         	call	___flsub	;wreg free
 23343  0188CA  0060  F007  FFE6   	movff	btemp,postinc1
 23344  0188D0  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23345  0188D6  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23346  0188DC  0060  F013  FFE6   	movff	btemp+3,postinc1
 23347  0188E2  EC8B  F0D1         	call	_fabsf	;wreg free
 23348  0188E6  0060  F004  F76F   	movff	btemp,_C+112	;volatile
 23349  0188EC  0060  F008  F770   	movff	btemp+1,_C+113	;volatile
 23350  0188F2  0060  F00C  F771   	movff	btemp+2,_C+114	;volatile
 23351  0188F8  0060  F010  F772   	movff	btemp+3,_C+115	;volatile
 23352                           
 23353                           ;mbmc.c: 107:  bcror = conv_raw_result(C_BATT, CONV);
 23354  0188FE  0E00               	movlw	0
 23355  018900  6EE6               	movwf	postinc1,c
 23356  018902  0E00               	movlw	0
 23357  018904  6EE6               	movwf	postinc1,c
 23358  018906  EC0E  F0A8         	call	_conv_raw_result	;wreg free
 23359  01890A  0060  F004  F086   	movff	btemp,calc_ror_data@bcror
 23360  018910  0060  F008  F087   	movff	btemp+1,calc_ror_data@bcror+1
 23361  018916  0060  F00C  F088   	movff	btemp+2,calc_ror_data@bcror+2
 23362  01891C  0060  F010  F089   	movff	btemp+3,calc_ror_data@bcror+3
 23363                           
 23364                           ;mbmc.c: 108:  C.bv_ror = fabsf(conv_raw_result(V_BAT, CONV) - bvror);
 23365  018922  0060  F22B  FFE6   	movff	calc_ror_data@bvror,postinc1
 23366  018928  0060  F22F  FFE6   	movff	calc_ror_data@bvror+1,postinc1
 23367  01892E  0060  F233  FFE6   	movff	calc_ror_data@bvror+2,postinc1
 23368  018934  0060  F237  FFE6   	movff	calc_ror_data@bvror+3,postinc1
 23369  01893A  0E00               	movlw	0
 23370  01893C  6EE6               	movwf	postinc1,c
 23371  01893E  0E04               	movlw	4
 23372  018940  6EE6               	movwf	postinc1,c
 23373  018942  EC0E  F0A8         	call	_conv_raw_result	;wreg free
 23374  018946  0060  F007  FFE6   	movff	btemp,postinc1
 23375  01894C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23376  018952  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23377  018958  0060  F013  FFE6   	movff	btemp+3,postinc1
 23378  01895E  EC08  F0D9         	call	___flsub	;wreg free
 23379  018962  0060  F007  FFE6   	movff	btemp,postinc1
 23380  018968  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23381  01896E  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23382  018974  0060  F013  FFE6   	movff	btemp+3,postinc1
 23383  01897A  EC8B  F0D1         	call	_fabsf	;wreg free
 23384  01897E  0060  F004  F76B   	movff	btemp,_C+108	;volatile
 23385  018984  0060  F008  F76C   	movff	btemp+1,_C+109	;volatile
 23386  01898A  0060  F00C  F76D   	movff	btemp+2,_C+110	;volatile
 23387  018990  0060  F010  F76E   	movff	btemp+3,_C+111	;volatile
 23388                           
 23389                           ;mbmc.c: 109:  if (C.bv_ror < 0.0051)
 23390  018996  0EE7               	movlw	231
 23391  018998  6EE6               	movwf	postinc1,c
 23392  01899A  0E1D               	movlw	29
 23393  01899C  6EE6               	movwf	postinc1,c
 23394  01899E  0EA7               	movlw	167
 23395  0189A0  6EE6               	movwf	postinc1,c
 23396  0189A2  0E3B               	movlw	59
 23397  0189A4  6EE6               	movwf	postinc1,c
 23398  0189A6  EE21  F36B         	lfsr	2,_C+108	;volatile
 23399  0189AA  006F FF7B FFE6     	movff	postinc2,postinc1
 23400  0189B0  006F FF7B FFE6     	movff	postinc2,postinc1
 23401  0189B6  006F FF7B FFE6     	movff	postinc2,postinc1
 23402  0189BC  006F FF7B FFE6     	movff	postinc2,postinc1
 23403  0189C2  EC81  F0C6         	call	___flge	;wreg free
 23404  0189C6  B001               	btfsc	btemp& (0+255),0,c
 23405  0189C8  D010               	goto	l10753
 23406                           
 23407                           ;mbmc.c: 110:   C.bv_ror = 0.0140 + 0.0001;
 23408  0189CA  0EB0               	movlw	176
 23409  0189CC  006F FFA0  F76B    	movff	wreg,_C+108	;volatile
 23410  0189D2  0E03               	movlw	3
 23411  0189D4  006F FFA0  F76C    	movff	wreg,_C+109	;volatile
 23412  0189DA  0E67               	movlw	103
 23413  0189DC  006F FFA0  F76D    	movff	wreg,_C+110	;volatile
 23414  0189E2  0E3C               	movlw	60
 23415  0189E4  006F FFA0  F76E    	movff	wreg,_C+111	;volatile
 23416  0189EA                     l10753:
 23417                           
 23418                           ;mbmc.c: 111:  bvror = conv_raw_result(V_BAT, CONV);
 23419  0189EA  0E00               	movlw	0
 23420  0189EC  6EE6               	movwf	postinc1,c
 23421  0189EE  0E04               	movlw	4
 23422  0189F0  6EE6               	movwf	postinc1,c
 23423  0189F2  EC0E  F0A8         	call	_conv_raw_result	;wreg free
 23424  0189F6  0060  F004  F08A   	movff	btemp,calc_ror_data@bvror
 23425  0189FC  0060  F008  F08B   	movff	btemp+1,calc_ror_data@bvror+1
 23426  018A02  0060  F00C  F08C   	movff	btemp+2,calc_ror_data@bvror+2
 23427  018A08  0060  F010  F08D   	movff	btemp+3,calc_ror_data@bvror+3
 23428                           
 23429                           ; _calc_ror_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
 23430  018A0E  0012               	return		;funcret
 23431  018A10                     __end_of_calc_ror_data:
 23432                           	opt callstack 0
 23433                           
 23434 ;; *************** function _fabsf *****************
 23435 ;; Defined at:
 23436 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fabsf.c"
 23437 ;; Parameters:    Size  Location     Type
 23438 ;;  x               4  [STACK] float 
 23439 ;; Auto vars:     Size  Location     Type
 23440 ;;  u               4  [STACK] struct .
 23441 ;; Return value:  Size  Location     Type
 23442 ;;                  4  [STACK] float 
 23443 ;; Registers used:
 23444 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
 23445 ;; Tracked objects:
 23446 ;;		On entry : 0/0
 23447 ;;		On exit  : 0/0
 23448 ;;		Unchanged: 0/0
 23449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23450 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23451 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23452 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23453 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23454 ;;Total ram usage:        0 bytes
 23455 ;; Hardware stack levels used:    1
 23456 ;; Hardware stack levels required when called:   15
 23457 ;; This function calls:
 23458 ;;		Nothing
 23459 ;; This function is called by:
 23460 ;;		_main
 23461 ;;		_calc_ror_data
 23462 ;;		_calc_bsoc
 23463 ;;		_esr_check
 23464 ;; This function uses a reentrant model
 23465 ;;
 23466                           
 23467                           	psect	text93
 23468  01A316                     __ptext93:
 23469                           	opt callstack 0
 23470  01A316                     _fabsf:
 23471                           	opt callstack 0
 23472                           
 23473                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23474  01A316  52E6               	movf	postinc1,f,c
 23475  01A318  52E6               	movf	postinc1,f,c
 23476  01A31A  52E6               	movf	postinc1,f,c
 23477  01A31C  52E6               	movf	postinc1,f,c
 23478                           
 23479                           ;incstack = 0
 23480 ;; hardware stack exceeded
 23481  01A31E  0060  F1F8  F009   	movff	fabsf@F463,btemp+8
 23482  01A324  0060  F1FC  F00A   	movff	fabsf@F463+1,btemp+9
 23483  01A32A  0060  F200  F00B   	movff	fabsf@F463+2,btemp+10
 23484  01A330  0060  F204  F00C   	movff	fabsf@F463+3,btemp+11
 23485                           
 23486                           ;stkvar	_u @ sp[(-4)+0]
 23487  01A336  0EFC               	movlw	-4
 23488  01A338  0060  F027  FFE3   	movff	btemp+8,plusw1
 23489  01A33E  0EFD               	movlw	-3
 23490  01A340  0060  F02B  FFE3   	movff	btemp+9,plusw1
 23491  01A346  0EFE               	movlw	-2
 23492  01A348  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23493  01A34E  0EFF               	movlw	-1
 23494  01A350  0060  F033  FFE3   	movff	btemp+11,plusw1
 23495                           
 23496                           ;stkvar	_x @ sp[(-4)+-4]
 23497  01A356  0EF8               	movlw	-8
 23498  01A358  006F FF8C  F009    	movff	plusw1,btemp+8
 23499  01A35E  0EF9               	movlw	-7
 23500  01A360  006F FF8C  F00A    	movff	plusw1,btemp+9
 23501  01A366  0EFA               	movlw	-6
 23502  01A368  006F FF8C  F00B    	movff	plusw1,btemp+10
 23503  01A36E  0EFB               	movlw	-5
 23504  01A370  006F FF8C  F00C    	movff	plusw1,btemp+11
 23505                           
 23506                           ;stkvar	_u @ sp[(-4)+0]
 23507  01A376  0EFC               	movlw	-4
 23508  01A378  0060  F027  FFE3   	movff	btemp+8,plusw1
 23509  01A37E  0EFD               	movlw	-3
 23510  01A380  0060  F02B  FFE3   	movff	btemp+9,plusw1
 23511  01A386  0EFE               	movlw	-2
 23512  01A388  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23513  01A38E  0EFF               	movlw	-1
 23514  01A390  0060  F033  FFE3   	movff	btemp+11,plusw1
 23515                           
 23516                           ;stkvar	_u @ sp[(-4)+0]
 23517  01A396  0EFF               	movlw	-1
 23518  01A398  9EE3               	bcf	plusw1,7,c
 23519                           
 23520                           ;stkvar	_u @ sp[(-4)+0]
 23521  01A39A  0EFC               	movlw	-4
 23522  01A39C  006F FF8C  F001    	movff	plusw1,btemp
 23523  01A3A2  0EFD               	movlw	-3
 23524  01A3A4  006F FF8C  F002    	movff	plusw1,btemp+1
 23525  01A3AA  0EFE               	movlw	-2
 23526  01A3AC  006F FF8C  F003    	movff	plusw1,btemp+2
 23527  01A3B2  0EFF               	movlw	-1
 23528  01A3B4  006F FF8C  F004    	movff	plusw1,btemp+3
 23529                           
 23530                           ; _fabsf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 23531  01A3BA  0EF8               	movlw	248
 23532  01A3BC  26E1               	addwf	fsr1l,f,c
 23533  01A3BE  0EFF               	movlw	255
 23534  01A3C0  22E2               	addwfc	fsr1h,f,c
 23535  01A3C2  0012               	return		;funcret
 23536  01A3C4                     __end_of_fabsf:
 23537                           	opt callstack 0
 23538                           
 23539 ;; *************** function _conv_raw_result *****************
 23540 ;; Defined at:
 23541 ;;		line 98 in file "daq.c"
 23542 ;; Parameters:    Size  Location     Type
 23543 ;;  chan            1  [STACK] const enum E16582
 23544 ;;  to_what         1  [STACK] const enum E16644
 23545 ;; Auto vars:     Size  Location     Type
 23546 ;;		None
 23547 ;; Return value:  Size  Location     Type
 23548 ;;                  4  [STACK] float 
 23549 ;; Registers used:
 23550 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 23551 ;; Tracked objects:
 23552 ;;		On entry : 0/39
 23553 ;;		On exit  : 0/0
 23554 ;;		Unchanged: 0/0
 23555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23556 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23557 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23559 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23560 ;;Total ram usage:        0 bytes
 23561 ;; Hardware stack levels used:    1
 23562 ;; Hardware stack levels required when called:   17
 23563 ;; This function calls:
 23564 ;;		___fladd
 23565 ;;		___fldiv
 23566 ;;		___flmul
 23567 ;;		___flsub
 23568 ;;		___xxtofl
 23569 ;;		_get_raw_result
 23570 ;;		_nanf
 23571 ;; This function is called by:
 23572 ;;		_main
 23573 ;;		_convert_adc_data
 23574 ;;		_calc_ror_data
 23575 ;;		_check_day_time
 23576 ;;		_init_bsoc
 23577 ;;		_esr_check
 23578 ;; This function uses a reentrant model
 23579 ;;
 23580                           
 23581                           	psect	text94
 23582  01501C                     __ptext94:
 23583                           	opt callstack 0
 23584  01501C                     _conv_raw_result:
 23585                           	opt callstack 0
 23586                           
 23587                           ;daq.c: 98: float conv_raw_result(const adcc_channel_t chan, const adc_conv_t to_what);d
      +                          aq.c: 99: {;daq.c: 101:  switch (to_what) {
 23588                           
 23589                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23590                           ;incstack = 0
 23591 ;; hardware stack exceeded
 23592  01501C  D276               	goto	l9641
 23593  01501E                     l9587:
 23594                           
 23595                           ;daq.c: 103:   if (!(0b0011110001110111 >> chan & 0x1))
 23596                           ;stkvar	_chan @ sp[(0)+-1]
 23597  01501E  0EFF               	movlw	-1
 23598  015020  006F FF8C  F00C    	movff	plusw1,btemp+11
 23599  015026  0E77               	movlw	119
 23600  015028  6E09               	movwf	(btemp+8)^0,c
 23601  01502A  0E3C               	movlw	60
 23602  01502C  6E0A               	movwf	(btemp+9)^0,c
 23603  01502E  2A0C               	incf	(btemp+11)^0,f,c
 23604  015030  D003               	goto	u9054
 23605  015032                     u9055:
 23606  015032  340A               	rlcf	(btemp+9)^0,w,c
 23607  015034  320A               	rrcf	(btemp+9)^0,f,c
 23608  015036  3209               	rrcf	(btemp+8)^0,f,c
 23609  015038                     u9054:
 23610  015038  2E0C               	decfsz	(btemp+11)^0,f,c
 23611  01503A  D7FB               	goto	u9055
 23612  01503C  B009               	btfsc	(btemp+8)^0,0,c
 23613  01503E  D007               	goto	l9593
 23614                           
 23615                           ;daq.c: 104:    return nanf("");
 23616  015040  0EB9               	movlw	low (STR_65+102)
 23617  015042  6EE6               	movwf	postinc1,c
 23618  015044  0EFC               	movlw	high (STR_65+102)
 23619  015046  6EE6               	movwf	postinc1,c
 23620  015048  ECD3  F0D6         	call	_nanf	;wreg free
 23621  01504C  D26E               	goto	l1784
 23622  01504E                     l9593:
 23623                           
 23624                           ;daq.c: 106:   if (0b0000000000000011 >> chan & 0x1) {
 23625                           ;stkvar	_chan @ sp[(0)+-1]
 23626  01504E  0EFF               	movlw	-1
 23627  015050  006F FF8C  F00C    	movff	plusw1,btemp+11
 23628  015056  0E03               	movlw	3
 23629  015058  6E09               	movwf	(btemp+8)^0,c
 23630  01505A  0E00               	movlw	0
 23631  01505C  6E0A               	movwf	(btemp+9)^0,c
 23632  01505E  2A0C               	incf	(btemp+11)^0,f,c
 23633  015060  D003               	goto	u9074
 23634  015062                     u9075:
 23635  015062  340A               	rlcf	(btemp+9)^0,w,c
 23636  015064  320A               	rrcf	(btemp+9)^0,f,c
 23637  015066  3209               	rrcf	(btemp+8)^0,f,c
 23638  015068                     u9074:
 23639  015068  2E0C               	decfsz	(btemp+11)^0,f,c
 23640  01506A  D7FB               	goto	u9075
 23641  01506C  A009               	btfss	(btemp+8)^0,0,c
 23642  01506E  D11F               	goto	l9607
 23643                           
 23644                           ;daq.c: 107:    if (0b0000000000000001 >> chan & 0x1) {
 23645                           ;stkvar	_chan @ sp[(0)+-1]
 23646  015070  0EFF               	movlw	-1
 23647  015072  006F FF8C  F00C    	movff	plusw1,btemp+11
 23648  015078  0E01               	movlw	1
 23649  01507A  6E09               	movwf	(btemp+8)^0,c
 23650  01507C  0E00               	movlw	0
 23651  01507E  6E0A               	movwf	(btemp+9)^0,c
 23652  015080  2A0C               	incf	(btemp+11)^0,f,c
 23653  015082  D003               	goto	u9094
 23654  015084                     u9095:
 23655  015084  340A               	rlcf	(btemp+9)^0,w,c
 23656  015086  320A               	rrcf	(btemp+9)^0,f,c
 23657  015088  3209               	rrcf	(btemp+8)^0,f,c
 23658  01508A                     u9094:
 23659  01508A  2E0C               	decfsz	(btemp+11)^0,f,c
 23660  01508C  D7FB               	goto	u9095
 23661  01508E  A009               	btfss	(btemp+8)^0,0,c
 23662  015090  D087               	goto	l9603
 23663                           
 23664                           ;daq.c: 108:     return R.n_zero[0]+((float) ((int16_t) get_raw_result(chan)) - R.n_offs
      +                          et[0]) * 0.0850000;
 23665  015092  0060  F493  FFE6   	movff	_R+36,postinc1
 23666  015098  0060  F497  FFE6   	movff	_R+37,postinc1
 23667  01509E  0060  F49B  FFE6   	movff	_R+38,postinc1
 23668  0150A4  0060  F49F  FFE6   	movff	_R+39,postinc1
 23669  0150AA  0E7B               	movlw	123
 23670  0150AC  6EE6               	movwf	postinc1,c
 23671  0150AE  0E14               	movlw	20
 23672  0150B0  6EE6               	movwf	postinc1,c
 23673  0150B2  0EAE               	movlw	174
 23674  0150B4  6EE6               	movwf	postinc1,c
 23675  0150B6  0E3D               	movlw	61
 23676  0150B8  6EE6               	movwf	postinc1,c
 23677  0150BA  0060  F480  F009   	movff	_R+32,btemp+8	;volatile
 23678  0150C0  0060  F484  F00A   	movff	_R+33,btemp+9	;volatile
 23679  0150C6  0E00               	movlw	0
 23680  0150C8  BE0A               	btfsc	(btemp+9)^0,7,c
 23681  0150CA  0EFF               	movlw	255
 23682  0150CC  6E0B               	movwf	(btemp+10)^0,c
 23683  0150CE  6E0C               	movwf	(btemp+11)^0,c
 23684  0150D0  0060  F027  FFE6   	movff	btemp+8,postinc1
 23685  0150D6  0060  F02B  FFE6   	movff	btemp+9,postinc1
 23686  0150DC  0060  F02F  FFE6   	movff	btemp+10,postinc1
 23687  0150E2  0060  F033  FFE6   	movff	btemp+11,postinc1
 23688  0150E8  0E01               	movlw	1
 23689  0150EA  6EE6               	movwf	postinc1,c
 23690  0150EC  ECCA  F0C0         	call	___xxtofl	;wreg free
 23691  0150F0  0060  F007  FFE6   	movff	btemp,postinc1
 23692  0150F6  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23693  0150FC  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23694  015102  0060  F013  FFE6   	movff	btemp+3,postinc1
 23695                           
 23696                           ;stkvar	_chan @ sp[(-12)+-1]
 23697  015108  0EF3               	movlw	-13
 23698  01510A  50E3               	movf	plusw1,w,c
 23699  01510C  6EE6               	movwf	postinc1,c
 23700  01510E  EC7C  F0DD         	call	_get_raw_result	;wreg free
 23701  015112  0060  F004  F00B   	movff	btemp,btemp+10
 23702  015118  0060  F008  F00C   	movff	btemp+1,btemp+11
 23703  01511E  500B               	movf	(btemp+10)^0,w,c
 23704  015120  6E05               	movwf	(btemp+4)^0,c
 23705  015122  500C               	movf	(btemp+11)^0,w,c
 23706  015124  6E06               	movwf	(btemp+5)^0,c
 23707  015126  6A07               	clrf	(btemp+6)^0,c
 23708  015128  6A08               	clrf	(btemp+7)^0,c
 23709  01512A  0060  F017  FFE6   	movff	btemp+4,postinc1
 23710  015130  0060  F01B  FFE6   	movff	btemp+5,postinc1
 23711  015136  0060  F01F  FFE6   	movff	btemp+6,postinc1
 23712  01513C  0060  F023  FFE6   	movff	btemp+7,postinc1
 23713  015142  0E00               	movlw	0
 23714  015144  6EE6               	movwf	postinc1,c
 23715  015146  ECCA  F0C0         	call	___xxtofl	;wreg free
 23716  01514A  0060  F007  FFE6   	movff	btemp,postinc1
 23717  015150  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23718  015156  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23719  01515C  0060  F013  FFE6   	movff	btemp+3,postinc1
 23720  015162  EC08  F0D9         	call	___flsub	;wreg free
 23721  015166  0060  F007  FFE6   	movff	btemp,postinc1
 23722  01516C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23723  015172  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23724  015178  0060  F013  FFE6   	movff	btemp+3,postinc1
 23725  01517E  ECA0  F099         	call	___flmul	;wreg free
 23726  015182  0060  F007  FFE6   	movff	btemp,postinc1
 23727  015188  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23728  01518E  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23729  015194  0060  F013  FFE6   	movff	btemp+3,postinc1
 23730  01519A  ECB5  F09D         	call	___fladd	;wreg free
 23731  01519E  D1C5               	goto	l1784
 23732  0151A0                     l9603:
 23733                           
 23734                           ;daq.c: 110:     return R.n_zero[1]+((float) ((int16_t) get_raw_result(chan)) - R.n_offs
      +                          et[1]) * 0.0350000;
 23735  0151A0  0060  F4A3  FFE6   	movff	_R+40,postinc1
 23736  0151A6  0060  F4A7  FFE6   	movff	_R+41,postinc1
 23737  0151AC  0060  F4AB  FFE6   	movff	_R+42,postinc1
 23738  0151B2  0060  F4AF  FFE6   	movff	_R+43,postinc1
 23739  0151B8  0E29               	movlw	41
 23740  0151BA  6EE6               	movwf	postinc1,c
 23741  0151BC  0E5C               	movlw	92
 23742  0151BE  6EE6               	movwf	postinc1,c
 23743  0151C0  0E0F               	movlw	15
 23744  0151C2  6EE6               	movwf	postinc1,c
 23745  0151C4  0E3D               	movlw	61
 23746  0151C6  6EE6               	movwf	postinc1,c
 23747  0151C8  0060  F488  F009   	movff	_R+34,btemp+8	;volatile
 23748  0151CE  0060  F48C  F00A   	movff	_R+35,btemp+9	;volatile
 23749  0151D4  0E00               	movlw	0
 23750  0151D6  BE0A               	btfsc	(btemp+9)^0,7,c
 23751  0151D8  0EFF               	movlw	255
 23752  0151DA  6E0B               	movwf	(btemp+10)^0,c
 23753  0151DC  6E0C               	movwf	(btemp+11)^0,c
 23754  0151DE  0060  F027  FFE6   	movff	btemp+8,postinc1
 23755  0151E4  0060  F02B  FFE6   	movff	btemp+9,postinc1
 23756  0151EA  0060  F02F  FFE6   	movff	btemp+10,postinc1
 23757  0151F0  0060  F033  FFE6   	movff	btemp+11,postinc1
 23758  0151F6  0E01               	movlw	1
 23759  0151F8  6EE6               	movwf	postinc1,c
 23760  0151FA  ECCA  F0C0         	call	___xxtofl	;wreg free
 23761  0151FE  0060  F007  FFE6   	movff	btemp,postinc1
 23762  015204  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23763  01520A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23764  015210  0060  F013  FFE6   	movff	btemp+3,postinc1
 23765                           
 23766                           ;stkvar	_chan @ sp[(-12)+-1]
 23767  015216  0EF3               	movlw	-13
 23768  015218  50E3               	movf	plusw1,w,c
 23769  01521A  6EE6               	movwf	postinc1,c
 23770  01521C  EC7C  F0DD         	call	_get_raw_result	;wreg free
 23771  015220  0060  F004  F00B   	movff	btemp,btemp+10
 23772  015226  0060  F008  F00C   	movff	btemp+1,btemp+11
 23773  01522C  500B               	movf	(btemp+10)^0,w,c
 23774  01522E  6E05               	movwf	(btemp+4)^0,c
 23775  015230  500C               	movf	(btemp+11)^0,w,c
 23776  015232  6E06               	movwf	(btemp+5)^0,c
 23777  015234  6A07               	clrf	(btemp+6)^0,c
 23778  015236  6A08               	clrf	(btemp+7)^0,c
 23779  015238  0060  F017  FFE6   	movff	btemp+4,postinc1
 23780  01523E  0060  F01B  FFE6   	movff	btemp+5,postinc1
 23781  015244  0060  F01F  FFE6   	movff	btemp+6,postinc1
 23782  01524A  0060  F023  FFE6   	movff	btemp+7,postinc1
 23783  015250  0E00               	movlw	0
 23784  015252  6EE6               	movwf	postinc1,c
 23785  015254  ECCA  F0C0         	call	___xxtofl	;wreg free
 23786  015258  0060  F007  FFE6   	movff	btemp,postinc1
 23787  01525E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23788  015264  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23789  01526A  0060  F013  FFE6   	movff	btemp+3,postinc1
 23790  015270  EC08  F0D9         	call	___flsub	;wreg free
 23791  015274  0060  F007  FFE6   	movff	btemp,postinc1
 23792  01527A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23793  015280  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23794  015286  0060  F013  FFE6   	movff	btemp+3,postinc1
 23795  01528C  ECA0  F099         	call	___flmul	;wreg free
 23796  015290  0060  F007  FFE6   	movff	btemp,postinc1
 23797  015296  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23798  01529C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23799  0152A2  0060  F013  FFE6   	movff	btemp+3,postinc1
 23800  0152A8  ECB5  F09D         	call	___fladd	;wreg free
 23801  0152AC  D13E               	goto	l1784
 23802  0152AE                     l9607:
 23803                           
 23804                           ;daq.c: 113:    if (0b0000100000000000 >> chan & 0x1) {
 23805                           ;stkvar	_chan @ sp[(0)+-1]
 23806  0152AE  0EFF               	movlw	-1
 23807  0152B0  006F FF8C  F00C    	movff	plusw1,btemp+11
 23808  0152B6  0E00               	movlw	0
 23809  0152B8  6E09               	movwf	(btemp+8)^0,c
 23810  0152BA  0E08               	movlw	8
 23811  0152BC  6E0A               	movwf	(btemp+9)^0,c
 23812  0152BE  2A0C               	incf	(btemp+11)^0,f,c
 23813  0152C0  D003               	goto	u9114
 23814  0152C2                     u9115:
 23815  0152C2  340A               	rlcf	(btemp+9)^0,w,c
 23816  0152C4  320A               	rrcf	(btemp+9)^0,f,c
 23817  0152C6  3209               	rrcf	(btemp+8)^0,f,c
 23818  0152C8                     u9114:
 23819  0152C8  2E0C               	decfsz	(btemp+11)^0,f,c
 23820  0152CA  D7FB               	goto	u9115
 23821  0152CC  A009               	btfss	(btemp+8)^0,0,c
 23822  0152CE  D008               	goto	l9615
 23823                           
 23824                           ;daq.c: 114:     return 25.0;
 23825  0152D0  0E00               	movlw	0
 23826  0152D2  6E01               	movwf	btemp^0,c
 23827  0152D4  0E00               	movlw	0
 23828  0152D6  6E02               	movwf	(btemp+1)^0,c
 23829  0152D8  0EC8               	movlw	200
 23830  0152DA  6E03               	movwf	(btemp+2)^0,c
 23831  0152DC  0E41               	movlw	65
 23832  0152DE  D113               	goto	L29
 23833  0152E0                     l9615:
 23834                           
 23835                           ;daq.c: 116:     return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
 23836  0152E0  0E00               	movlw	0
 23837  0152E2  6EE6               	movwf	postinc1,c
 23838  0152E4  0E00               	movlw	0
 23839  0152E6  6EE6               	movwf	postinc1,c
 23840  0152E8  0E7A               	movlw	122
 23841  0152EA  6EE6               	movwf	postinc1,c
 23842  0152EC  0E44               	movlw	68
 23843  0152EE  6EE6               	movwf	postinc1,c
 23844  0152F0  0E61               	movlw	97
 23845  0152F2  6EE6               	movwf	postinc1,c
 23846  0152F4  0E03               	movlw	3
 23847  0152F6  6EE6               	movwf	postinc1,c
 23848  0152F8  0E84               	movlw	132
 23849  0152FA  6EE6               	movwf	postinc1,c
 23850  0152FC  0E40               	movlw	64
 23851  0152FE  6EE6               	movwf	postinc1,c
 23852                           
 23853                           ;stkvar	_chan @ sp[(-8)+-1]
 23854  015300  0EF7               	movlw	-9
 23855  015302  50E3               	movf	plusw1,w,c
 23856  015304  6EE6               	movwf	postinc1,c
 23857  015306  EC7C  F0DD         	call	_get_raw_result	;wreg free
 23858  01530A  0060  F004  F00B   	movff	btemp,btemp+10
 23859  015310  0060  F008  F00C   	movff	btemp+1,btemp+11
 23860  015316  500B               	movf	(btemp+10)^0,w,c
 23861  015318  6E05               	movwf	(btemp+4)^0,c
 23862  01531A  500C               	movf	(btemp+11)^0,w,c
 23863  01531C  6E06               	movwf	(btemp+5)^0,c
 23864  01531E  6A07               	clrf	(btemp+6)^0,c
 23865  015320  6A08               	clrf	(btemp+7)^0,c
 23866  015322  0060  F017  FFE6   	movff	btemp+4,postinc1
 23867  015328  0060  F01B  FFE6   	movff	btemp+5,postinc1
 23868  01532E  0060  F01F  FFE6   	movff	btemp+6,postinc1
 23869  015334  0060  F023  FFE6   	movff	btemp+7,postinc1
 23870  01533A  0E00               	movlw	0
 23871  01533C  6EE6               	movwf	postinc1,c
 23872  01533E  ECCA  F0C0         	call	___xxtofl	;wreg free
 23873  015342  0060  F007  FFE6   	movff	btemp,postinc1
 23874  015348  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23875  01534E  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23876  015354  0060  F013  FFE6   	movff	btemp+3,postinc1
 23877  01535A  ECA0  F099         	call	___flmul	;wreg free
 23878  01535E  0060  F007  FFE6   	movff	btemp,postinc1
 23879  015364  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23880  01536A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23881  015370  0060  F013  FFE6   	movff	btemp+3,postinc1
 23882  015376  EC51  F0A5         	call	___fldiv	;wreg free
 23883  01537A  D0D7               	goto	l1784
 23884  01537C                     l9619:
 23885                           
 23886                           ;daq.c: 121:   if (0b0000000000000011 >> chan & 0x1 || 0b0000100000000000 >> chan & 0x1)
 23887                           ;stkvar	_chan @ sp[(0)+-1]
 23888  01537C  0EFF               	movlw	-1
 23889  01537E  006F FF8C  F00C    	movff	plusw1,btemp+11
 23890  015384  0E03               	movlw	3
 23891  015386  6E09               	movwf	(btemp+8)^0,c
 23892  015388  0E00               	movlw	0
 23893  01538A  6E0A               	movwf	(btemp+9)^0,c
 23894  01538C  2A0C               	incf	(btemp+11)^0,f,c
 23895  01538E  D003               	goto	u9134
 23896  015390                     u9135:
 23897  015390  340A               	rlcf	(btemp+9)^0,w,c
 23898  015392  320A               	rrcf	(btemp+9)^0,f,c
 23899  015394  3209               	rrcf	(btemp+8)^0,f,c
 23900  015396                     u9134:
 23901  015396  2E0C               	decfsz	(btemp+11)^0,f,c
 23902  015398  D7FB               	goto	u9135
 23903  01539A  B009               	btfsc	(btemp+8)^0,0,c
 23904  01539C  D011               	goto	u9160
 23905                           
 23906                           ;stkvar	_chan @ sp[(0)+-1]
 23907  01539E  0EFF               	movlw	-1
 23908  0153A0  006F FF8C  F00C    	movff	plusw1,btemp+11
 23909  0153A6  0E00               	movlw	0
 23910  0153A8  6E09               	movwf	(btemp+8)^0,c
 23911  0153AA  0E08               	movlw	8
 23912  0153AC  6E0A               	movwf	(btemp+9)^0,c
 23913  0153AE  2A0C               	incf	(btemp+11)^0,f,c
 23914  0153B0  D003               	goto	u9154
 23915  0153B2                     u9155:
 23916  0153B2  340A               	rlcf	(btemp+9)^0,w,c
 23917  0153B4  320A               	rrcf	(btemp+9)^0,f,c
 23918  0153B6  3209               	rrcf	(btemp+8)^0,f,c
 23919  0153B8                     u9154:
 23920  0153B8  2E0C               	decfsz	(btemp+11)^0,f,c
 23921  0153BA  D7FB               	goto	u9155
 23922  0153BC  A009               	btfss	(btemp+8)^0,0,c
 23923  0153BE  D04E               	goto	l9627
 23924  0153C0                     u9160:
 23925                           
 23926                           ;daq.c: 122:    return((float) get_raw_result(chan) * 0.6250000) / 1000.0;
 23927  0153C0  0E00               	movlw	0
 23928  0153C2  6EE6               	movwf	postinc1,c
 23929  0153C4  0E00               	movlw	0
 23930  0153C6  6EE6               	movwf	postinc1,c
 23931  0153C8  0E7A               	movlw	122
 23932  0153CA  6EE6               	movwf	postinc1,c
 23933  0153CC  0E44               	movlw	68
 23934  0153CE  6EE6               	movwf	postinc1,c
 23935  0153D0  0E00               	movlw	0
 23936  0153D2  6EE6               	movwf	postinc1,c
 23937  0153D4  0E00               	movlw	0
 23938  0153D6  6EE6               	movwf	postinc1,c
 23939  0153D8  0E20               	movlw	32
 23940  0153DA  6EE6               	movwf	postinc1,c
 23941  0153DC  0E3F               	movlw	63
 23942  0153DE  6EE6               	movwf	postinc1,c
 23943                           
 23944                           ;stkvar	_chan @ sp[(-8)+-1]
 23945  0153E0  0EF7               	movlw	-9
 23946  0153E2  50E3               	movf	plusw1,w,c
 23947  0153E4  6EE6               	movwf	postinc1,c
 23948  0153E6  EC7C  F0DD         	call	_get_raw_result	;wreg free
 23949  0153EA  0060  F004  F00B   	movff	btemp,btemp+10
 23950  0153F0  0060  F008  F00C   	movff	btemp+1,btemp+11
 23951  0153F6  500B               	movf	(btemp+10)^0,w,c
 23952  0153F8  6E05               	movwf	(btemp+4)^0,c
 23953  0153FA  500C               	movf	(btemp+11)^0,w,c
 23954  0153FC  6E06               	movwf	(btemp+5)^0,c
 23955  0153FE  6A07               	clrf	(btemp+6)^0,c
 23956  015400  6A08               	clrf	(btemp+7)^0,c
 23957  015402  0060  F017  FFE6   	movff	btemp+4,postinc1
 23958  015408  0060  F01B  FFE6   	movff	btemp+5,postinc1
 23959  01540E  0060  F01F  FFE6   	movff	btemp+6,postinc1
 23960  015414  0060  F023  FFE6   	movff	btemp+7,postinc1
 23961  01541A  0E00               	movlw	0
 23962  01541C  6EE6               	movwf	postinc1,c
 23963  01541E  ECCA  F0C0         	call	___xxtofl	;wreg free
 23964  015422  0060  F007  FFE6   	movff	btemp,postinc1
 23965  015428  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23966  01542E  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23967  015434  0060  F013  FFE6   	movff	btemp+3,postinc1
 23968  01543A  ECA0  F099         	call	___flmul	;wreg free
 23969  01543E  0060  F007  FFE6   	movff	btemp,postinc1
 23970  015444  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23971  01544A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23972  015450  0060  F013  FFE6   	movff	btemp+3,postinc1
 23973  015456  EC51  F0A5         	call	___fldiv	;wreg free
 23974  01545A  D067               	goto	l1784
 23975  01545C                     l9627:
 23976                           
 23977                           ;daq.c: 124:   return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
 23978  01545C  0E00               	movlw	0
 23979  01545E  6EE6               	movwf	postinc1,c
 23980  015460  0E00               	movlw	0
 23981  015462  6EE6               	movwf	postinc1,c
 23982  015464  0E7A               	movlw	122
 23983  015466  6EE6               	movwf	postinc1,c
 23984  015468  0E44               	movlw	68
 23985  01546A  6EE6               	movwf	postinc1,c
 23986  01546C  0E61               	movlw	97
 23987  01546E  6EE6               	movwf	postinc1,c
 23988  015470  0E03               	movlw	3
 23989  015472  6EE6               	movwf	postinc1,c
 23990  015474  0E84               	movlw	132
 23991  015476  6EE6               	movwf	postinc1,c
 23992  015478  0E40               	movlw	64
 23993  01547A  6EE6               	movwf	postinc1,c
 23994                           
 23995                           ;stkvar	_chan @ sp[(-8)+-1]
 23996  01547C  0EF7               	movlw	-9
 23997  01547E  50E3               	movf	plusw1,w,c
 23998  015480  6EE6               	movwf	postinc1,c
 23999  015482  EC7C  F0DD         	call	_get_raw_result	;wreg free
 24000  015486  0060  F004  F00B   	movff	btemp,btemp+10
 24001  01548C  0060  F008  F00C   	movff	btemp+1,btemp+11
 24002  015492  500B               	movf	(btemp+10)^0,w,c
 24003  015494  6E05               	movwf	(btemp+4)^0,c
 24004  015496  500C               	movf	(btemp+11)^0,w,c
 24005  015498  6E06               	movwf	(btemp+5)^0,c
 24006  01549A  6A07               	clrf	(btemp+6)^0,c
 24007  01549C  6A08               	clrf	(btemp+7)^0,c
 24008  01549E  0060  F017  FFE6   	movff	btemp+4,postinc1
 24009  0154A4  0060  F01B  FFE6   	movff	btemp+5,postinc1
 24010  0154AA  0060  F01F  FFE6   	movff	btemp+6,postinc1
 24011  0154B0  0060  F023  FFE6   	movff	btemp+7,postinc1
 24012  0154B6  0E00               	movlw	0
 24013  0154B8  6EE6               	movwf	postinc1,c
 24014  0154BA  ECCA  F0C0         	call	___xxtofl	;wreg free
 24015  0154BE  0060  F007  FFE6   	movff	btemp,postinc1
 24016  0154C4  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24017  0154CA  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24018  0154D0  0060  F013  FFE6   	movff	btemp+3,postinc1
 24019  0154D6  ECA0  F099         	call	___flmul	;wreg free
 24020  0154DA  0060  F007  FFE6   	movff	btemp,postinc1
 24021  0154E0  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24022  0154E6  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24023  0154EC  0060  F013  FFE6   	movff	btemp+3,postinc1
 24024  0154F2  EC51  F0A5         	call	___fldiv	;wreg free
 24025  0154F6  D019               	goto	l1784
 24026  0154F8                     l9633:
 24027                           
 24028                           ;daq.c: 127:   return 0.0;
 24029  0154F8  0E00               	movlw	0
 24030  0154FA  6E01               	movwf	btemp^0,c
 24031  0154FC  0E00               	movlw	0
 24032  0154FE  6E02               	movwf	(btemp+1)^0,c
 24033  015500  0E00               	movlw	0
 24034  015502  6E03               	movwf	(btemp+2)^0,c
 24035  015504  0E00               	movlw	0
 24036  015506                     L29:
 24037  015506  6E04               	movwf	(btemp+3)^0,c
 24038  015508  D010               	goto	l1784
 24039  01550A                     l9641:
 24040                           
 24041                           ;stkvar	_to_what @ sp[(0)+-2]
 24042  01550A  0EFE               	movlw	-2
 24043  01550C  50E3               	movf	plusw1,w,c
 24044  01550E  6E0B               	movwf	(btemp+10)^0,c
 24045  015510  6A0C               	clrf	(btemp+11)^0,c
 24046                           
 24047                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 24048                           ; Switch size 1, requested type "simple"
 24049                           ; Number of cases is 1, Range of values is 0 to 0
 24050                           ; switch strategies available:
 24051                           ; Name         Instructions Cycles
 24052                           ; simple_byte            4     3 (average)
 24053                           ;	Chosen strategy is simple_byte
 24054  015512  500C               	movf	(btemp+11)^0,w,c
 24055  015514  0A00               	xorlw	0	; case 0
 24056  015516  A4D8               	btfss	status,2,c
 24057  015518  D7EF               	goto	l9633
 24058                           
 24059                           ; Switch size 1, requested type "simple"
 24060                           ; Number of cases is 2, Range of values is 0 to 1
 24061                           ; switch strategies available:
 24062                           ; Name         Instructions Cycles
 24063                           ; simple_byte            7     4 (average)
 24064                           ;	Chosen strategy is simple_byte
 24065  01551A  500B               	movf	(btemp+10)^0,w,c
 24066  01551C  0A00               	xorlw	0	; case 0
 24067  01551E  B4D8               	btfsc	status,2,c
 24068  015520  D57E               	goto	l9587
 24069  015522  0A01               	xorlw	1	; case 1
 24070  015524  B4D8               	btfsc	status,2,c
 24071  015526  D72A               	goto	l9619
 24072  015528  D7E7               	goto	l9633
 24073  01552A                     l1784:
 24074                           
 24075                           ; _conv_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 24076  01552A  52E5               	movf	postdec1,f,c
 24077  01552C  52E5               	movf	postdec1,f,c
 24078  01552E  0012               	return		;funcret
 24079  015530                     __end_of_conv_raw_result:
 24080                           	opt callstack 0
 24081                           
 24082 ;; *************** function _nanf *****************
 24083 ;; Defined at:
 24084 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nanf.c"
 24085 ;; Parameters:    Size  Location     Type
 24086 ;;  s               2  [STACK] PTR const unsigned char 
 24087 ;;		 -> STR_102(1), STR_64(1), 
 24088 ;; Auto vars:     Size  Location     Type
 24089 ;;  u               4  [STACK] struct .
 24090 ;; Return value:  Size  Location     Type
 24091 ;;                  4  [STACK] float 
 24092 ;; Registers used:
 24093 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
 24094 ;; Tracked objects:
 24095 ;;		On entry : 0/39
 24096 ;;		On exit  : 0/0
 24097 ;;		Unchanged: 0/0
 24098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24099 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24100 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24102 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24103 ;;Total ram usage:        0 bytes
 24104 ;; Hardware stack levels used:    1
 24105 ;; Hardware stack levels required when called:   15
 24106 ;; This function calls:
 24107 ;;		Nothing
 24108 ;; This function is called by:
 24109 ;;		_conv_raw_result
 24110 ;; This function uses a reentrant model
 24111 ;;
 24112                           
 24113                           	psect	text95
 24114  01ADA6                     __ptext95:
 24115                           	opt callstack 0
 24116  01ADA6                     _nanf:
 24117                           	opt callstack 0
 24118                           
 24119                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24120  01ADA6  52E6               	movf	postinc1,f,c
 24121  01ADA8  52E6               	movf	postinc1,f,c
 24122  01ADAA  52E6               	movf	postinc1,f,c
 24123  01ADAC  52E6               	movf	postinc1,f,c
 24124                           
 24125                           ;incstack = 0
 24126 ;; hardware stack exceeded
 24127  01ADAE  0EFF               	movlw	255
 24128  01ADB0  6E09               	movwf	(btemp+8)^0,c
 24129  01ADB2  0EFF               	movlw	255
 24130  01ADB4  6E0A               	movwf	(btemp+9)^0,c
 24131  01ADB6  0EFF               	movlw	255
 24132  01ADB8  6E0B               	movwf	(btemp+10)^0,c
 24133  01ADBA  0E7F               	movlw	127
 24134  01ADBC  6E0C               	movwf	(btemp+11)^0,c
 24135                           
 24136                           ;stkvar	_u @ sp[(-4)+0]
 24137  01ADBE  0EFC               	movlw	-4
 24138  01ADC0  0060  F027  FFE3   	movff	btemp+8,plusw1
 24139  01ADC6  0EFD               	movlw	-3
 24140  01ADC8  0060  F02B  FFE3   	movff	btemp+9,plusw1
 24141  01ADCE  0EFE               	movlw	-2
 24142  01ADD0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24143  01ADD6  0EFF               	movlw	-1
 24144  01ADD8  0060  F033  FFE3   	movff	btemp+11,plusw1
 24145                           
 24146                           ;stkvar	_u @ sp[(-4)+0]
 24147  01ADDE  0EFC               	movlw	-4
 24148  01ADE0  006F FF8C  F001    	movff	plusw1,btemp
 24149  01ADE6  0EFD               	movlw	-3
 24150  01ADE8  006F FF8C  F002    	movff	plusw1,btemp+1
 24151  01ADEE  0EFE               	movlw	-2
 24152  01ADF0  006F FF8C  F003    	movff	plusw1,btemp+2
 24153  01ADF6  0EFF               	movlw	-1
 24154  01ADF8  006F FF8C  F004    	movff	plusw1,btemp+3
 24155                           
 24156                           ; _nanf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 24157  01ADFE  0EFA               	movlw	250
 24158  01AE00  26E1               	addwf	fsr1l,f,c
 24159  01AE02  0EFF               	movlw	255
 24160  01AE04  22E2               	addwfc	fsr1h,f,c
 24161  01AE06  0012               	return		;funcret
 24162  01AE08                     __end_of_nanf:
 24163                           	opt callstack 0
 24164                           
 24165 ;; *************** function _get_raw_result *****************
 24166 ;; Defined at:
 24167 ;;		line 90 in file "daq.c"
 24168 ;; Parameters:    Size  Location     Type
 24169 ;;  index           1  [STACK] const enum E16582
 24170 ;; Auto vars:     Size  Location     Type
 24171 ;;		None
 24172 ;; Return value:  Size  Location     Type
 24173 ;;                  2  [STACK] unsigned short 
 24174 ;; Registers used:
 24175 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, prodl, prodh
 24176 ;; Tracked objects:
 24177 ;;		On entry : 0/1
 24178 ;;		On exit  : 0/0
 24179 ;;		Unchanged: 0/0
 24180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24181 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24182 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24183 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24184 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24185 ;;Total ram usage:        0 bytes
 24186 ;; Hardware stack levels used:    1
 24187 ;; Hardware stack levels required when called:   15
 24188 ;; This function calls:
 24189 ;;		Nothing
 24190 ;; This function is called by:
 24191 ;;		_main
 24192 ;;		_conv_raw_result
 24193 ;; This function uses a reentrant model
 24194 ;;
 24195                           
 24196                           	psect	text96
 24197  01BAF8                     __ptext96:
 24198                           	opt callstack 0
 24199  01BAF8                     _get_raw_result:
 24200                           	opt callstack 0
 24201                           
 24202                           ;daq.c: 90: adc_result_t get_raw_result(const adcc_channel_t index);daq.c: 91: {;daq.c: 
      +                          92:  return R.raw_adc[index];
 24203                           ;stkvar	_index @ sp[(0)+-1]
 24204                           
 24205                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24206                           ;incstack = 0
 24207 ;; hardware stack exceeded
 24208  01BAF8  0EFF               	movlw	-1
 24209  01BAFA  50E3               	movf	plusw1,w,c
 24210  01BAFC  0D02               	mullw	2
 24211  01BAFE  0E00               	movlw	low _R
 24212  01BB00  24F3               	addwf	243,w,c
 24213  01BB02  6ED9               	movwf	fsr2l,c
 24214  01BB04  0E01               	movlw	high _R
 24215  01BB06  20F4               	addwfc	prodh,w,c
 24216  01BB08  6EDA               	movwf	fsr2h,c
 24217  01BB0A  006F FF78  F001    	movff	postinc2,btemp
 24218  01BB10  006F FF74  F002    	movff	postdec2,btemp+1
 24219                           
 24220                           ; _get_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1
      +                          , argsize = 1, vargsize = 0
 24221  01BB16  52E5               	movf	postdec1,f,c
 24222  01BB18  0012               	return		;funcret
 24223  01BB1A                     __end_of_get_raw_result:
 24224                           	opt callstack 0
 24225                           
 24226 ;; *************** function ___xxtofl *****************
 24227 ;; Defined at:
 24228 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/xxtofl.c"
 24229 ;; Parameters:    Size  Location     Type
 24230 ;;  sign            1  [STACK] unsigned char 
 24231 ;;  val             4  [STACK] long 
 24232 ;; Auto vars:     Size  Location     Type
 24233 ;;  arg             4  [STACK] unsigned long 
 24234 ;;  exp             1  [STACK] unsigned char 
 24235 ;; Return value:  Size  Location     Type
 24236 ;;                  4  [STACK] unsigned char 
 24237 ;; Registers used:
 24238 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 24239 ;; Tracked objects:
 24240 ;;		On entry : 0/1
 24241 ;;		On exit  : 0/0
 24242 ;;		Unchanged: 0/0
 24243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24244 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24245 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24246 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24247 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24248 ;;Total ram usage:        0 bytes
 24249 ;; Hardware stack levels used:    1
 24250 ;; Hardware stack levels required when called:   15
 24251 ;; This function calls:
 24252 ;;		Nothing
 24253 ;; This function is called by:
 24254 ;;		_conv_raw_result
 24255 ;;		_init_bsoc
 24256 ;;		_Volts_to_SOC
 24257 ;; This function uses a reentrant model
 24258 ;;
 24259                           
 24260                           	psect	text97
 24261  018194                     __ptext97:
 24262                           	opt callstack 0
 24263  018194                     ___xxtofl:
 24264                           	opt callstack 0
 24265                           
 24266                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24267  018194  0E05               	movlw	5
 24268  018196  26E1               	addwf	fsr1l,f,c
 24269  018198  0E00               	movlw	0
 24270  01819A  22E2               	addwfc	fsr1h,f,c
 24271                           
 24272                           ;stkvar	_sign @ sp[(-5)+-1]
 24273                           
 24274                           ;incstack = 0
 24275 ;; hardware stack exceeded
 24276  01819C  0EFA               	movlw	-6
 24277  01819E  50E3               	movf	plusw1,w,c
 24278  0181A0  B4D8               	btfsc	status,2,c
 24279  0181A2  D01D               	goto	l9535
 24280                           
 24281                           ;stkvar	_val @ sp[(-5)+-5]
 24282  0181A4  0EF9               	movlw	-7
 24283  0181A6  AEE3               	btfss	plusw1,7,c
 24284  0181A8  D01A               	goto	l9535
 24285                           
 24286                           ;stkvar	_val @ sp[(-5)+-5]
 24287  0181AA  0EF6               	movlw	-10
 24288  0181AC  006F FF8C  F009    	movff	plusw1,btemp+8
 24289  0181B2  0EF7               	movlw	-9
 24290  0181B4  006F FF8C  F00A    	movff	plusw1,btemp+9
 24291  0181BA  0EF8               	movlw	-8
 24292  0181BC  006F FF8C  F00B    	movff	plusw1,btemp+10
 24293  0181C2  0EF9               	movlw	-7
 24294  0181C4  006F FF8C  F00C    	movff	plusw1,btemp+11
 24295  0181CA  1E09               	comf	(btemp+8)^0,f,c
 24296  0181CC  1E0A               	comf	(btemp+9)^0,f,c
 24297  0181CE  1E0B               	comf	(btemp+10)^0,f,c
 24298  0181D0  1E0C               	comf	(btemp+11)^0,f,c
 24299  0181D2  2A09               	incf	(btemp+8)^0,f,c
 24300  0181D4  0E00               	movlw	0
 24301  0181D6  220A               	addwfc	(btemp+9)^0,f,c
 24302  0181D8  220B               	addwfc	(btemp+10)^0,f,c
 24303  0181DA  220C               	addwfc	(btemp+11)^0,f,c
 24304  0181DC  D010               	goto	L30
 24305  0181DE                     l9535:
 24306                           
 24307                           ;stkvar	_val @ sp[(-5)+-5]
 24308  0181DE  0EF6               	movlw	-10
 24309  0181E0  006F FF8C  F009    	movff	plusw1,btemp+8
 24310  0181E6  0EF7               	movlw	-9
 24311  0181E8  006F FF8C  F00A    	movff	plusw1,btemp+9
 24312  0181EE  0EF8               	movlw	-8
 24313  0181F0  006F FF8C  F00B    	movff	plusw1,btemp+10
 24314  0181F6  0EF9               	movlw	-7
 24315  0181F8  006F FF8C  F00C    	movff	plusw1,btemp+11
 24316  0181FE                     L30:
 24317                           
 24318                           ;stkvar	_arg @ sp[(-5)+0]
 24319  0181FE  0EFB               	movlw	-5
 24320  018200  0060  F027  FFE3   	movff	btemp+8,plusw1
 24321  018206  0EFC               	movlw	-4
 24322  018208  0060  F02B  FFE3   	movff	btemp+9,plusw1
 24323  01820E  0EFD               	movlw	-3
 24324  018210  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24325  018216  0EFE               	movlw	-2
 24326  018218  0060  F033  FFE3   	movff	btemp+11,plusw1
 24327                           
 24328                           ;stkvar	_val @ sp[(-5)+-5]
 24329  01821E  0EF6               	movlw	-10
 24330  018220  50E3               	movf	plusw1,w,c
 24331  018222  E113               	bnz	l9543
 24332  018224  0EF7               	movlw	-9
 24333  018226  50E3               	movf	plusw1,w,c
 24334  018228  E110               	bnz	l9543
 24335  01822A  0EF8               	movlw	-8
 24336  01822C  50E3               	movf	plusw1,w,c
 24337  01822E  E10D               	bnz	l9543
 24338  018230  0EF9               	movlw	-7
 24339  018232  50E3               	movf	plusw1,w,c
 24340  018234  A4D8               	btfss	status,2,c
 24341  018236  D009               	goto	l9543
 24342  018238  0E00               	movlw	0
 24343  01823A  6E01               	movwf	btemp^0,c
 24344  01823C  0E00               	movlw	0
 24345  01823E  6E02               	movwf	(btemp+1)^0,c
 24346  018240  0E00               	movlw	0
 24347  018242  6E03               	movwf	(btemp+2)^0,c
 24348  018244  0E00               	movlw	0
 24349  018246  6E04               	movwf	(btemp+3)^0,c
 24350  018248  D0A2               	goto	l3058
 24351  01824A                     l9543:
 24352  01824A  0E96               	movlw	150
 24353  01824C  6E0C               	movwf	(btemp+11)^0,c
 24354                           
 24355                           ;stkvar	_exp @ sp[(-5)+4]
 24356  01824E  0EFF               	movlw	-1
 24357  018250  0060  F033  FFE3   	movff	btemp+11,plusw1
 24358  018256  D00B               	goto	l9547
 24359  018258                     l9545:
 24360                           
 24361                           ;stkvar	_exp @ sp[(-5)+4]
 24362  018258  0EFF               	movlw	-1
 24363  01825A  2AE3               	incf	plusw1,f,c
 24364                           
 24365                           ;stkvar	_arg @ sp[(-5)+0]
 24366  01825C  90D8               	bcf	status,0,c
 24367  01825E  0EFE               	movlw	-2
 24368  018260  32E3               	rrcf	plusw1,f,c
 24369  018262  0EFD               	movlw	-3
 24370  018264  32E3               	rrcf	plusw1,f,c
 24371  018266  0EFC               	movlw	-4
 24372  018268  32E3               	rrcf	plusw1,f,c
 24373  01826A  0EFB               	movlw	-5
 24374  01826C  32E3               	rrcf	plusw1,f,c
 24375  01826E                     l9547:
 24376                           
 24377                           ;stkvar	_arg @ sp[(-5)+0]
 24378  01826E  50E1               	movf	fsr1l,w,c
 24379  018270  0FFB               	addlw	-5
 24380  018272  6ED9               	movwf	fsr2l,c
 24381  018274  50E2               	movf	fsr1h,w,c
 24382  018276  6EDA               	movwf	fsr2h,c
 24383  018278  0EFF               	movlw	255
 24384  01827A  22DA               	addwfc	fsr2h,f,c
 24385  01827C  52DE               	movf	postinc2,f,c
 24386  01827E  52DE               	movf	postinc2,f,c
 24387  018280  52DE               	movf	postinc2,f,c
 24388  018282  0EFE               	movlw	254
 24389  018284  14DD               	andwf	postdec2,w,c
 24390  018286  B4D8               	btfsc	status,2,c
 24391  018288  D018               	goto	l9555
 24392  01828A  D7E6               	goto	l9545
 24393  01828C                     l9549:
 24394                           
 24395                           ;stkvar	_exp @ sp[(-5)+4]
 24396  01828C  0EFF               	movlw	-1
 24397  01828E  2AE3               	incf	plusw1,f,c
 24398                           
 24399                           ;stkvar	_arg @ sp[(-5)+0]
 24400  018290  50E1               	movf	fsr1l,w,c
 24401  018292  0FFB               	addlw	-5
 24402  018294  6ED9               	movwf	fsr2l,c
 24403  018296  50E2               	movf	fsr1h,w,c
 24404  018298  6EDA               	movwf	fsr2h,c
 24405  01829A  0EFF               	movlw	255
 24406  01829C  22DA               	addwfc	fsr2h,f,c
 24407  01829E  2ADE               	incf	postinc2,f,c
 24408  0182A0  0E00               	movlw	0
 24409  0182A2  22DE               	addwfc	postinc2,f,c
 24410  0182A4  22DE               	addwfc	postinc2,f,c
 24411  0182A6  22DE               	addwfc	postinc2,f,c
 24412                           
 24413                           ;stkvar	_arg @ sp[(-5)+0]
 24414  0182A8  90D8               	bcf	status,0,c
 24415  0182AA  0EFE               	movlw	-2
 24416  0182AC  32E3               	rrcf	plusw1,f,c
 24417  0182AE  0EFD               	movlw	-3
 24418  0182B0  32E3               	rrcf	plusw1,f,c
 24419  0182B2  0EFC               	movlw	-4
 24420  0182B4  32E3               	rrcf	plusw1,f,c
 24421  0182B6  0EFB               	movlw	-5
 24422  0182B8  32E3               	rrcf	plusw1,f,c
 24423  0182BA                     l9555:
 24424                           
 24425                           ;stkvar	_arg @ sp[(-5)+0]
 24426  0182BA  50E1               	movf	fsr1l,w,c
 24427  0182BC  0FFB               	addlw	-5
 24428  0182BE  6ED9               	movwf	fsr2l,c
 24429  0182C0  50E2               	movf	fsr1h,w,c
 24430  0182C2  6EDA               	movwf	fsr2h,c
 24431  0182C4  0EFF               	movlw	255
 24432  0182C6  22DA               	addwfc	fsr2h,f,c
 24433  0182C8  52DE               	movf	postinc2,f,c
 24434  0182CA  52DE               	movf	postinc2,f,c
 24435  0182CC  52DE               	movf	postinc2,f,c
 24436  0182CE  0EFF               	movlw	255
 24437  0182D0  14DD               	andwf	postdec2,w,c
 24438  0182D2  B4D8               	btfsc	status,2,c
 24439  0182D4  D00C               	goto	l9559
 24440  0182D6  D7DA               	goto	l9549
 24441  0182D8                     l9557:
 24442                           
 24443                           ;stkvar	_exp @ sp[(-5)+4]
 24444  0182D8  0EFF               	movlw	-1
 24445  0182DA  06E3               	decf	plusw1,f,c
 24446                           
 24447                           ;stkvar	_arg @ sp[(-5)+0]
 24448  0182DC  90D8               	bcf	status,0,c
 24449  0182DE  0EFB               	movlw	-5
 24450  0182E0  36E3               	rlcf	plusw1,f,c
 24451  0182E2  0EFC               	movlw	-4
 24452  0182E4  36E3               	rlcf	plusw1,f,c
 24453  0182E6  0EFD               	movlw	-3
 24454  0182E8  36E3               	rlcf	plusw1,f,c
 24455  0182EA  0EFE               	movlw	-2
 24456  0182EC  36E3               	rlcf	plusw1,f,c
 24457  0182EE                     l9559:
 24458                           
 24459                           ;stkvar	_arg @ sp[(-5)+0]
 24460  0182EE  0EFD               	movlw	-3
 24461  0182F0  BEE3               	btfsc	plusw1,7,c
 24462  0182F2  D007               	goto	u9010
 24463                           
 24464                           ;stkvar	_exp @ sp[(-5)+4]
 24465  0182F4  0EFF               	movlw	-1
 24466  0182F6  006F FF8C  F001    	movff	plusw1,btemp
 24467  0182FC  0E02               	movlw	2
 24468  0182FE  6001               	cpfslt	btemp^0,c
 24469  018300  D7EB               	goto	l9557
 24470  018302                     u9010:
 24471                           
 24472                           ;stkvar	_exp @ sp[(-5)+4]
 24473  018302  0EFF               	movlw	-1
 24474  018304  B0E3               	btfsc	plusw1,0,c
 24475  018306  D002               	goto	l9567
 24476                           
 24477                           ;stkvar	_arg @ sp[(-5)+0]
 24478  018308  0EFD               	movlw	-3
 24479  01830A  9EE3               	bcf	plusw1,7,c
 24480  01830C                     l9567:
 24481                           
 24482                           ;stkvar	_exp @ sp[(-5)+4]
 24483  01830C  50E1               	movf	fsr1l,w,c
 24484  01830E  0FFF               	addlw	-1
 24485  018310  6ED9               	movwf	fsr2l,c
 24486  018312  50E2               	movf	fsr1h,w,c
 24487  018314  6EDA               	movwf	fsr2h,c
 24488  018316  0EFF               	movlw	255
 24489  018318  22DA               	addwfc	fsr2h,f,c
 24490  01831A  90D8               	bcf	status,0,c
 24491  01831C  32DF               	rrcf	indf2,f,c
 24492                           
 24493                           ;stkvar	_exp @ sp[(-5)+4]
 24494  01831E  0EFF               	movlw	-1
 24495  018320  006F FF8C  F00C    	movff	plusw1,btemp+11
 24496  018326  0060  F030  F005   	movff	btemp+11,btemp+4
 24497  01832C  6A06               	clrf	(btemp+5)^0,c
 24498  01832E  6A07               	clrf	(btemp+6)^0,c
 24499  018330  6A08               	clrf	(btemp+7)^0,c
 24500  018332  0060  F014  F008   	movff	btemp+4,btemp+7
 24501  018338  6A07               	clrf	(btemp+6)^0,c
 24502  01833A  6A06               	clrf	(btemp+5)^0,c
 24503  01833C  6A05               	clrf	(btemp+4)^0,c
 24504                           
 24505                           ;stkvar	_arg @ sp[(-5)+0]
 24506  01833E  50E1               	movf	fsr1l,w,c
 24507  018340  0FFB               	addlw	-5
 24508  018342  6ED9               	movwf	fsr2l,c
 24509  018344  50E2               	movf	fsr1h,w,c
 24510  018346  6EDA               	movwf	fsr2h,c
 24511  018348  0EFF               	movlw	255
 24512  01834A  22DA               	addwfc	fsr2h,f,c
 24513  01834C  5005               	movf	(btemp+4)^0,w,c
 24514  01834E  12DE               	iorwf	postinc2,f,c
 24515  018350  5006               	movf	(btemp+5)^0,w,c
 24516  018352  12DE               	iorwf	postinc2,f,c
 24517  018354  5007               	movf	(btemp+6)^0,w,c
 24518  018356  12DE               	iorwf	postinc2,f,c
 24519  018358  5008               	movf	(btemp+7)^0,w,c
 24520  01835A  12DE               	iorwf	postinc2,f,c
 24521                           
 24522                           ;stkvar	_sign @ sp[(-5)+-1]
 24523  01835C  0EFA               	movlw	-6
 24524  01835E  50E3               	movf	plusw1,w,c
 24525  018360  B4D8               	btfsc	status,2,c
 24526  018362  D005               	goto	l9577
 24527                           
 24528                           ;stkvar	_val @ sp[(-5)+-5]
 24529  018364  0EF9               	movlw	-7
 24530  018366  AEE3               	btfss	plusw1,7,c
 24531  018368  D002               	goto	l9577
 24532                           
 24533                           ;stkvar	_arg @ sp[(-5)+0]
 24534  01836A  0EFE               	movlw	-2
 24535  01836C  8EE3               	bsf	plusw1,7,c
 24536  01836E                     l9577:
 24537                           
 24538                           ;stkvar	_arg @ sp[(-5)+0]
 24539  01836E  0EFB               	movlw	-5
 24540  018370  006F FF8C  F001    	movff	plusw1,btemp
 24541  018376  0EFC               	movlw	-4
 24542  018378  006F FF8C  F002    	movff	plusw1,btemp+1
 24543  01837E  0EFD               	movlw	-3
 24544  018380  006F FF8C  F003    	movff	plusw1,btemp+2
 24545  018386  0EFE               	movlw	-2
 24546  018388  006F FF8C  F004    	movff	plusw1,btemp+3
 24547  01838E                     l3058:
 24548                           
 24549                           ; ___xxtofl: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, args
      +                          ize = 5, vargsize = 0
 24550  01838E  0EF6               	movlw	246
 24551  018390  26E1               	addwf	fsr1l,f,c
 24552  018392  0EFF               	movlw	255
 24553  018394  22E2               	addwfc	fsr1h,f,c
 24554  018396  0012               	return		;funcret
 24555  018398                     __end_of___xxtofl:
 24556                           	opt callstack 0
 24557                           
 24558 ;; *************** function ___fldiv *****************
 24559 ;; Defined at:
 24560 ;;		line 11 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcdiv.c"
 24561 ;; Parameters:    Size  Location     Type
 24562 ;;  b               4  [STACK] unsigned char 
 24563 ;;  a               4  [STACK] unsigned char 
 24564 ;; Auto vars:     Size  Location     Type
 24565 ;;  grs             4  [STACK] unsigned long 
 24566 ;;  rem             4  [STACK] unsigned long 
 24567 ;;  new_exp         2  [STACK] short 
 24568 ;;  aexp            1  [STACK] unsigned char 
 24569 ;;  bexp            1  [STACK] unsigned char 
 24570 ;;  sign            1  [STACK] unsigned char 
 24571 ;; Return value:  Size  Location     Type
 24572 ;;                  4  [STACK] unsigned char 
 24573 ;; Registers used:
 24574 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 24575 ;; Tracked objects:
 24576 ;;		On entry : 0/1
 24577 ;;		On exit  : 0/0
 24578 ;;		Unchanged: 0/0
 24579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24580 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24581 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24582 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24583 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24584 ;;Total ram usage:        0 bytes
 24585 ;; Hardware stack levels used:    1
 24586 ;; Hardware stack levels required when called:   15
 24587 ;; This function calls:
 24588 ;;		Nothing
 24589 ;; This function is called by:
 24590 ;;		_conv_raw_result
 24591 ;;		_calc_bsoc
 24592 ;;		_init_bsoc
 24593 ;;		_esr_check
 24594 ;;		_efgtoa
 24595 ;; This function uses a reentrant model
 24596 ;;
 24597                           
 24598                           	psect	text98
 24599  014AA2                     __ptext98:
 24600                           	opt callstack 0
 24601  014AA2                     ___fldiv:
 24602                           	opt callstack 0
 24603                           
 24604                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 24605  014AA2  0E0D               	movlw	13
 24606  014AA4  26E1               	addwf	fsr1l,f,c
 24607  014AA6  0E00               	movlw	0
 24608  014AA8  22E2               	addwfc	fsr1h,f,c
 24609                           
 24610                           ;stkvar	_b @ sp[(-13)+-4]
 24611                           
 24612                           ;incstack = 0
 24613 ;; hardware stack exceeded
 24614  014AAA  0EF2               	movlw	242
 24615  014AAC  24E1               	addwf	fsr1l,w,c
 24616  014AAE  6ED9               	movwf	fsr2l,c
 24617  014AB0  0EFF               	movlw	255
 24618  014AB2  20E2               	addwfc	fsr1h,w,c
 24619  014AB4  6EDA               	movwf	fsr2h,c
 24620  014AB6  50DF               	movf	indf2,w,c
 24621  014AB8  6E0C               	movwf	(btemp+11)^0,c
 24622  014ABA  0E80               	movlw	128
 24623  014ABC  160C               	andwf	(btemp+11)^0,f,c
 24624                           
 24625                           ;stkvar	_sign @ sp[(-13)+12]
 24626  014ABE  0EFF               	movlw	-1
 24627  014AC0  0060  F033  FFE3   	movff	btemp+11,plusw1
 24628                           
 24629                           ;stkvar	_b @ sp[(-13)+-4]
 24630  014AC6  0EF2               	movlw	242
 24631  014AC8  24E1               	addwf	fsr1l,w,c
 24632  014ACA  6ED9               	movwf	fsr2l,c
 24633  014ACC  0EFF               	movlw	255
 24634  014ACE  20E2               	addwfc	fsr1h,w,c
 24635  014AD0  6EDA               	movwf	fsr2h,c
 24636  014AD2  50DF               	movf	indf2,w,c
 24637  014AD4  6E0C               	movwf	(btemp+11)^0,c
 24638  014AD6  90D8               	bcf	status,0,c
 24639  014AD8  340C               	rlcf	(btemp+11)^0,w,c
 24640  014ADA  6E0B               	movwf	(btemp+10)^0,c
 24641                           
 24642                           ;stkvar	_bexp @ sp[(-13)+11]
 24643  014ADC  0EFE               	movlw	-2
 24644  014ADE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24645                           
 24646                           ;stkvar	_b @ sp[(-13)+-4]
 24647  014AE4  0EF1               	movlw	241
 24648  014AE6  24E1               	addwf	fsr1l,w,c
 24649  014AE8  6ED9               	movwf	fsr2l,c
 24650  014AEA  0EFF               	movlw	255
 24651  014AEC  20E2               	addwfc	fsr1h,w,c
 24652  014AEE  6EDA               	movwf	fsr2h,c
 24653  014AF0  AEDF               	btfss	indf2,7,c
 24654  014AF2  D002               	goto	l8081
 24655                           
 24656                           ;stkvar	_bexp @ sp[(-13)+11]
 24657  014AF4  0EFE               	movlw	-2
 24658  014AF6  80E3               	bsf	plusw1,0,c
 24659  014AF8                     l8081:
 24660                           
 24661                           ;stkvar	_bexp @ sp[(-13)+11]
 24662  014AF8  0EFE               	movlw	-2
 24663  014AFA  50E3               	movf	plusw1,w,c
 24664  014AFC  B4D8               	btfsc	status,2,c
 24665  014AFE  D027               	goto	l8091
 24666                           
 24667                           ;stkvar	_bexp @ sp[(-13)+11]
 24668  014B00  0EFE               	movlw	-2
 24669  014B02  28E3               	incf	plusw1,w,c
 24670  014B04  A4D8               	btfss	status,2,c
 24671  014B06  D018               	goto	l8087
 24672  014B08  0E00               	movlw	0
 24673  014B0A  6E09               	movwf	(btemp+8)^0,c
 24674  014B0C  0E00               	movlw	0
 24675  014B0E  6E0A               	movwf	(btemp+9)^0,c
 24676  014B10  0E00               	movlw	0
 24677  014B12  6E0B               	movwf	(btemp+10)^0,c
 24678  014B14  0E00               	movlw	0
 24679  014B16  6E0C               	movwf	(btemp+11)^0,c
 24680                           
 24681                           ;stkvar	_b @ sp[(-13)+-4]
 24682  014B18  0EEF               	movlw	-17
 24683  014B1A  0060  F027  FFE3   	movff	btemp+8,plusw1
 24684  014B20  0EF0               	movlw	-16
 24685  014B22  0060  F02B  FFE3   	movff	btemp+9,plusw1
 24686  014B28  0EF1               	movlw	-15
 24687  014B2A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24688  014B30  0EF2               	movlw	-14
 24689  014B32  0060  F033  FFE3   	movff	btemp+11,plusw1
 24690  014B38                     l8087:
 24691                           
 24692                           ;stkvar	_b @ sp[(-13)+-4]
 24693  014B38  0EF1               	movlw	-15
 24694  014B3A  8EE3               	bsf	plusw1,7,c
 24695                           
 24696                           ;stkvar	_b @ sp[(-13)+-4]
 24697  014B3C  0EF2               	movlw	242
 24698  014B3E  24E1               	addwf	fsr1l,w,c
 24699  014B40  6ED9               	movwf	fsr2l,c
 24700  014B42  0EFF               	movlw	255
 24701  014B44  20E2               	addwfc	fsr1h,w,c
 24702  014B46  6EDA               	movwf	fsr2h,c
 24703  014B48  0E00               	movlw	0
 24704  014B4A  6EDF               	movwf	indf2,c
 24705  014B4C  D018               	goto	l8093
 24706  014B4E                     l8091:
 24707  014B4E  0E00               	movlw	0
 24708  014B50  6E09               	movwf	(btemp+8)^0,c
 24709  014B52  0E00               	movlw	0
 24710  014B54  6E0A               	movwf	(btemp+9)^0,c
 24711  014B56  0E00               	movlw	0
 24712  014B58  6E0B               	movwf	(btemp+10)^0,c
 24713  014B5A  0E00               	movlw	0
 24714  014B5C  6E0C               	movwf	(btemp+11)^0,c
 24715                           
 24716                           ;stkvar	_b @ sp[(-13)+-4]
 24717  014B5E  0EEF               	movlw	-17
 24718  014B60  0060  F027  FFE3   	movff	btemp+8,plusw1
 24719  014B66  0EF0               	movlw	-16
 24720  014B68  0060  F02B  FFE3   	movff	btemp+9,plusw1
 24721  014B6E  0EF1               	movlw	-15
 24722  014B70  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24723  014B76  0EF2               	movlw	-14
 24724  014B78  0060  F033  FFE3   	movff	btemp+11,plusw1
 24725  014B7E                     l8093:
 24726                           
 24727                           ;stkvar	_a @ sp[(-13)+-8]
 24728  014B7E  0EEE               	movlw	238
 24729  014B80  24E1               	addwf	fsr1l,w,c
 24730  014B82  6ED9               	movwf	fsr2l,c
 24731  014B84  0EFF               	movlw	255
 24732  014B86  20E2               	addwfc	fsr1h,w,c
 24733  014B88  6EDA               	movwf	fsr2h,c
 24734  014B8A  50DF               	movf	indf2,w,c
 24735  014B8C  6E0C               	movwf	(btemp+11)^0,c
 24736  014B8E  0E80               	movlw	128
 24737  014B90  160C               	andwf	(btemp+11)^0,f,c
 24738                           
 24739                           ;stkvar	_sign @ sp[(-13)+12]
 24740  014B92  50E1               	movf	fsr1l,w,c
 24741  014B94  0FFF               	addlw	-1
 24742  014B96  6ED9               	movwf	fsr2l,c
 24743  014B98  50E2               	movf	fsr1h,w,c
 24744  014B9A  6EDA               	movwf	fsr2h,c
 24745  014B9C  0EFF               	movlw	255
 24746  014B9E  22DA               	addwfc	fsr2h,f,c
 24747  014BA0  500C               	movf	(btemp+11)^0,w,c
 24748  014BA2  1ADF               	xorwf	indf2,f,c
 24749                           
 24750                           ;stkvar	_a @ sp[(-13)+-8]
 24751  014BA4  0EEE               	movlw	238
 24752  014BA6  24E1               	addwf	fsr1l,w,c
 24753  014BA8  6ED9               	movwf	fsr2l,c
 24754  014BAA  0EFF               	movlw	255
 24755  014BAC  20E2               	addwfc	fsr1h,w,c
 24756  014BAE  6EDA               	movwf	fsr2h,c
 24757  014BB0  50DF               	movf	indf2,w,c
 24758  014BB2  6E0C               	movwf	(btemp+11)^0,c
 24759  014BB4  90D8               	bcf	status,0,c
 24760  014BB6  340C               	rlcf	(btemp+11)^0,w,c
 24761  014BB8  6E0B               	movwf	(btemp+10)^0,c
 24762                           
 24763                           ;stkvar	_aexp @ sp[(-13)+10]
 24764  014BBA  0EFD               	movlw	-3
 24765  014BBC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24766                           
 24767                           ;stkvar	_a @ sp[(-13)+-8]
 24768  014BC2  0EED               	movlw	237
 24769  014BC4  24E1               	addwf	fsr1l,w,c
 24770  014BC6  6ED9               	movwf	fsr2l,c
 24771  014BC8  0EFF               	movlw	255
 24772  014BCA  20E2               	addwfc	fsr1h,w,c
 24773  014BCC  6EDA               	movwf	fsr2h,c
 24774  014BCE  AEDF               	btfss	indf2,7,c
 24775  014BD0  D002               	goto	l8101
 24776                           
 24777                           ;stkvar	_aexp @ sp[(-13)+10]
 24778  014BD2  0EFD               	movlw	-3
 24779  014BD4  80E3               	bsf	plusw1,0,c
 24780  014BD6                     l8101:
 24781                           
 24782                           ;stkvar	_aexp @ sp[(-13)+10]
 24783  014BD6  0EFD               	movlw	-3
 24784  014BD8  50E3               	movf	plusw1,w,c
 24785  014BDA  B4D8               	btfsc	status,2,c
 24786  014BDC  D027               	goto	l8111
 24787                           
 24788                           ;stkvar	_aexp @ sp[(-13)+10]
 24789  014BDE  0EFD               	movlw	-3
 24790  014BE0  28E3               	incf	plusw1,w,c
 24791  014BE2  A4D8               	btfss	status,2,c
 24792  014BE4  D018               	goto	l8107
 24793  014BE6  0E00               	movlw	0
 24794  014BE8  6E09               	movwf	(btemp+8)^0,c
 24795  014BEA  0E00               	movlw	0
 24796  014BEC  6E0A               	movwf	(btemp+9)^0,c
 24797  014BEE  0E00               	movlw	0
 24798  014BF0  6E0B               	movwf	(btemp+10)^0,c
 24799  014BF2  0E00               	movlw	0
 24800  014BF4  6E0C               	movwf	(btemp+11)^0,c
 24801                           
 24802                           ;stkvar	_a @ sp[(-13)+-8]
 24803  014BF6  0EEB               	movlw	-21
 24804  014BF8  0060  F027  FFE3   	movff	btemp+8,plusw1
 24805  014BFE  0EEC               	movlw	-20
 24806  014C00  0060  F02B  FFE3   	movff	btemp+9,plusw1
 24807  014C06  0EED               	movlw	-19
 24808  014C08  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24809  014C0E  0EEE               	movlw	-18
 24810  014C10  0060  F033  FFE3   	movff	btemp+11,plusw1
 24811  014C16                     l8107:
 24812                           
 24813                           ;stkvar	_a @ sp[(-13)+-8]
 24814  014C16  0EED               	movlw	-19
 24815  014C18  8EE3               	bsf	plusw1,7,c
 24816                           
 24817                           ;stkvar	_a @ sp[(-13)+-8]
 24818  014C1A  0EEE               	movlw	238
 24819  014C1C  24E1               	addwf	fsr1l,w,c
 24820  014C1E  6ED9               	movwf	fsr2l,c
 24821  014C20  0EFF               	movlw	255
 24822  014C22  20E2               	addwfc	fsr1h,w,c
 24823  014C24  6EDA               	movwf	fsr2h,c
 24824  014C26  0E00               	movlw	0
 24825  014C28  6EDF               	movwf	indf2,c
 24826  014C2A  D018               	goto	l8113
 24827  014C2C                     l8111:
 24828  014C2C  0E00               	movlw	0
 24829  014C2E  6E09               	movwf	(btemp+8)^0,c
 24830  014C30  0E00               	movlw	0
 24831  014C32  6E0A               	movwf	(btemp+9)^0,c
 24832  014C34  0E00               	movlw	0
 24833  014C36  6E0B               	movwf	(btemp+10)^0,c
 24834  014C38  0E00               	movlw	0
 24835  014C3A  6E0C               	movwf	(btemp+11)^0,c
 24836                           
 24837                           ;stkvar	_a @ sp[(-13)+-8]
 24838  014C3C  0EEB               	movlw	-21
 24839  014C3E  0060  F027  FFE3   	movff	btemp+8,plusw1
 24840  014C44  0EEC               	movlw	-20
 24841  014C46  0060  F02B  FFE3   	movff	btemp+9,plusw1
 24842  014C4C  0EED               	movlw	-19
 24843  014C4E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24844  014C54  0EEE               	movlw	-18
 24845  014C56  0060  F033  FFE3   	movff	btemp+11,plusw1
 24846  014C5C                     l8113:
 24847                           
 24848                           ;stkvar	_a @ sp[(-13)+-8]
 24849  014C5C  0EEB               	movlw	-21
 24850  014C5E  50E3               	movf	plusw1,w,c
 24851  014C60  E139               	bnz	l8125
 24852  014C62  0EEC               	movlw	-20
 24853  014C64  50E3               	movf	plusw1,w,c
 24854  014C66  E136               	bnz	l8125
 24855  014C68  0EED               	movlw	-19
 24856  014C6A  50E3               	movf	plusw1,w,c
 24857  014C6C  E133               	bnz	l8125
 24858  014C6E  0EEE               	movlw	-18
 24859  014C70  50E3               	movf	plusw1,w,c
 24860  014C72  A4D8               	btfss	status,2,c
 24861  014C74  D02F               	goto	l8125
 24862                           
 24863                           ;stkvar	_b @ sp[(-13)+-4]
 24864  014C76  0EEF               	movlw	-17
 24865  014C78  6AE3               	clrf	plusw1,c
 24866  014C7A  0EF0               	movlw	-16
 24867  014C7C  6AE3               	clrf	plusw1,c
 24868  014C7E  0EF1               	movlw	-15
 24869  014C80  6AE3               	clrf	plusw1,c
 24870  014C82  0EF2               	movlw	-14
 24871  014C84  6AE3               	clrf	plusw1,c
 24872                           
 24873                           ;stkvar	_b @ sp[(-13)+-4]
 24874  014C86  0EF1               	movlw	241
 24875  014C88  24E1               	addwf	fsr1l,w,c
 24876  014C8A  6ED9               	movwf	fsr2l,c
 24877  014C8C  0EFF               	movlw	255
 24878  014C8E  20E2               	addwfc	fsr1h,w,c
 24879  014C90  6EDA               	movwf	fsr2h,c
 24880  014C92  0E80               	movlw	128
 24881  014C94  12DE               	iorwf	postinc2,f,c
 24882  014C96  0E7F               	movlw	127
 24883  014C98  12DD               	iorwf	postdec2,f,c
 24884  014C9A                     l8119:
 24885                           
 24886                           ;stkvar	_sign @ sp[(-13)+12]
 24887  014C9A  0EFF               	movlw	-1
 24888  014C9C  006F FF8C  F00C    	movff	plusw1,btemp+11
 24889                           
 24890                           ;stkvar	_b @ sp[(-13)+-4]
 24891  014CA2  0EF2               	movlw	242
 24892  014CA4  24E1               	addwf	fsr1l,w,c
 24893  014CA6  6ED9               	movwf	fsr2l,c
 24894  014CA8  0EFF               	movlw	255
 24895  014CAA  20E2               	addwfc	fsr1h,w,c
 24896  014CAC  6EDA               	movwf	fsr2h,c
 24897  014CAE  500C               	movf	(btemp+11)^0,w,c
 24898  014CB0  12DF               	iorwf	indf2,f,c
 24899                           
 24900                           ;stkvar	_b @ sp[(-13)+-4]
 24901  014CB2  0EEF               	movlw	-17
 24902  014CB4  006F FF8C  F001    	movff	plusw1,btemp
 24903  014CBA  0EF0               	movlw	-16
 24904  014CBC  006F FF8C  F002    	movff	plusw1,btemp+1
 24905  014CC2  0EF1               	movlw	-15
 24906  014CC4  006F FF8C  F003    	movff	plusw1,btemp+2
 24907  014CCA  0EF2               	movlw	-14
 24908  014CCC  006F FF8C  F004    	movff	plusw1,btemp+3
 24909  014CD2  D19F               	goto	l2982
 24910  014CD4                     l8125:
 24911                           
 24912                           ;stkvar	_bexp @ sp[(-13)+11]
 24913  014CD4  0EFE               	movlw	-2
 24914  014CD6  50E3               	movf	plusw1,w,c
 24915  014CD8  A4D8               	btfss	status,2,c
 24916  014CDA  D009               	goto	l8133
 24917  014CDC  0E00               	movlw	0
 24918  014CDE  6E01               	movwf	btemp^0,c
 24919  014CE0  0E00               	movlw	0
 24920  014CE2  6E02               	movwf	(btemp+1)^0,c
 24921  014CE4  0E00               	movlw	0
 24922  014CE6  6E03               	movwf	(btemp+2)^0,c
 24923  014CE8  0E00               	movlw	0
 24924  014CEA  6E04               	movwf	(btemp+3)^0,c
 24925  014CEC  D192               	goto	l2982
 24926  014CEE                     l8133:
 24927                           
 24928                           ;stkvar	_bexp @ sp[(-13)+11]
 24929  014CEE  0EFE               	movlw	-2
 24930  014CF0  50E3               	movf	plusw1,w,c
 24931  014CF2  6E0B               	movwf	(btemp+10)^0,c
 24932  014CF4  6A0C               	clrf	(btemp+11)^0,c
 24933                           
 24934                           ;stkvar	_aexp @ sp[(-13)+10]
 24935  014CF6  0EFD               	movlw	-3
 24936  014CF8  50E3               	movf	plusw1,w,c
 24937  014CFA  5E0B               	subwf	(btemp+10)^0,f,c
 24938  014CFC  0E00               	movlw	0
 24939  014CFE  5A0C               	subwfb	(btemp+11)^0,f,c
 24940  014D00  0E7F               	movlw	127
 24941  014D02  260B               	addwf	(btemp+10)^0,f,c
 24942  014D04  0E00               	movlw	0
 24943  014D06  220C               	addwfc	(btemp+11)^0,f,c
 24944                           
 24945                           ;stkvar	_new_exp @ sp[(-13)+8]
 24946  014D08  0EFB               	movlw	-5
 24947  014D0A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24948  014D10  0EFC               	movlw	-4
 24949  014D12  0060  F033  FFE3   	movff	btemp+11,plusw1
 24950                           
 24951                           ;stkvar	_b @ sp[(-13)+-4]
 24952  014D18  0EEF               	movlw	-17
 24953  014D1A  006F FF8C  F009    	movff	plusw1,btemp+8
 24954  014D20  0EF0               	movlw	-16
 24955  014D22  006F FF8C  F00A    	movff	plusw1,btemp+9
 24956  014D28  0EF1               	movlw	-15
 24957  014D2A  006F FF8C  F00B    	movff	plusw1,btemp+10
 24958  014D30  0EF2               	movlw	-14
 24959  014D32  006F FF8C  F00C    	movff	plusw1,btemp+11
 24960                           
 24961                           ;stkvar	_rem @ sp[(-13)+4]
 24962  014D38  0EF7               	movlw	-9
 24963  014D3A  0060  F027  FFE3   	movff	btemp+8,plusw1
 24964  014D40  0EF8               	movlw	-8
 24965  014D42  0060  F02B  FFE3   	movff	btemp+9,plusw1
 24966  014D48  0EF9               	movlw	-7
 24967  014D4A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24968  014D50  0EFA               	movlw	-6
 24969  014D52  0060  F033  FFE3   	movff	btemp+11,plusw1
 24970                           
 24971                           ;stkvar	_b @ sp[(-13)+-4]
 24972  014D58  0EEF               	movlw	-17
 24973  014D5A  6AE3               	clrf	plusw1,c
 24974  014D5C  0EF0               	movlw	-16
 24975  014D5E  6AE3               	clrf	plusw1,c
 24976  014D60  0EF1               	movlw	-15
 24977  014D62  6AE3               	clrf	plusw1,c
 24978  014D64  0EF2               	movlw	-14
 24979  014D66  6AE3               	clrf	plusw1,c
 24980                           
 24981                           ;stkvar	_grs @ sp[(-13)+0]
 24982  014D68  0EF3               	movlw	-13
 24983  014D6A  6AE3               	clrf	plusw1,c
 24984  014D6C  0EF4               	movlw	-12
 24985  014D6E  6AE3               	clrf	plusw1,c
 24986  014D70  0EF5               	movlw	-11
 24987  014D72  6AE3               	clrf	plusw1,c
 24988  014D74  0EF6               	movlw	-10
 24989  014D76  6AE3               	clrf	plusw1,c
 24990                           
 24991                           ;stkvar	_aexp @ sp[(-13)+10]
 24992  014D78  0EFD               	movlw	-3
 24993  014D7A  6AE3               	clrf	plusw1,c
 24994  014D7C  D050               	goto	l8161
 24995  014D7E                     l8143:
 24996                           
 24997                           ;stkvar	_aexp @ sp[(-13)+10]
 24998  014D7E  0EFD               	movlw	-3
 24999  014D80  50E3               	movf	plusw1,w,c
 25000  014D82  B4D8               	btfsc	status,2,c
 25001  014D84  D020               	goto	l8153
 25002                           
 25003                           ;stkvar	_rem @ sp[(-13)+4]
 25004  014D86  90D8               	bcf	status,0,c
 25005  014D88  0EF7               	movlw	-9
 25006  014D8A  36E3               	rlcf	plusw1,f,c
 25007  014D8C  0EF8               	movlw	-8
 25008  014D8E  36E3               	rlcf	plusw1,f,c
 25009  014D90  0EF9               	movlw	-7
 25010  014D92  36E3               	rlcf	plusw1,f,c
 25011  014D94  0EFA               	movlw	-6
 25012  014D96  36E3               	rlcf	plusw1,f,c
 25013                           
 25014                           ;stkvar	_b @ sp[(-13)+-4]
 25015  014D98  90D8               	bcf	status,0,c
 25016  014D9A  0EEF               	movlw	-17
 25017  014D9C  36E3               	rlcf	plusw1,f,c
 25018  014D9E  0EF0               	movlw	-16
 25019  014DA0  36E3               	rlcf	plusw1,f,c
 25020  014DA2  0EF1               	movlw	-15
 25021  014DA4  36E3               	rlcf	plusw1,f,c
 25022  014DA6  0EF2               	movlw	-14
 25023  014DA8  36E3               	rlcf	plusw1,f,c
 25024                           
 25025                           ;stkvar	_grs @ sp[(-13)+0]
 25026  014DAA  0EF6               	movlw	-10
 25027  014DAC  AEE3               	btfss	plusw1,7,c
 25028  014DAE  D002               	goto	l8151
 25029                           
 25030                           ;stkvar	_b @ sp[(-13)+-4]
 25031  014DB0  0EEF               	movlw	-17
 25032  014DB2  80E3               	bsf	plusw1,0,c
 25033  014DB4                     l8151:
 25034                           
 25035                           ;stkvar	_grs @ sp[(-13)+0]
 25036  014DB4  90D8               	bcf	status,0,c
 25037  014DB6  0EF3               	movlw	-13
 25038  014DB8  36E3               	rlcf	plusw1,f,c
 25039  014DBA  0EF4               	movlw	-12
 25040  014DBC  36E3               	rlcf	plusw1,f,c
 25041  014DBE  0EF5               	movlw	-11
 25042  014DC0  36E3               	rlcf	plusw1,f,c
 25043  014DC2  0EF6               	movlw	-10
 25044  014DC4  36E3               	rlcf	plusw1,f,c
 25045  014DC6                     l8153:
 25046                           
 25047                           ;stkvar	_a @ sp[(-13)+-8]
 25048                           ;stkvar	_rem @ sp[(-13)+4]
 25049  014DC6  50E1               	movf	fsr1l,w,c
 25050  014DC8  0FF7               	addlw	-9
 25051  014DCA  6ED9               	movwf	fsr2l,c
 25052  014DCC  50E2               	movf	fsr1h,w,c
 25053  014DCE  6EDA               	movwf	fsr2h,c
 25054  014DD0  0EFF               	movlw	255
 25055  014DD2  22DA               	addwfc	fsr2h,f,c
 25056  014DD4  0EEB               	movlw	-21
 25057  014DD6  50E3               	movf	plusw1,w,c
 25058  014DD8  5CDE               	subwf	postinc2,w,c
 25059  014DDA  0EEC               	movlw	-20
 25060  014DDC  50E3               	movf	plusw1,w,c
 25061  014DDE  58DE               	subwfb	postinc2,w,c
 25062  014DE0  0EED               	movlw	-19
 25063  014DE2  50E3               	movf	plusw1,w,c
 25064  014DE4  58DE               	subwfb	postinc2,w,c
 25065  014DE6  0EEE               	movlw	-18
 25066  014DE8  50E3               	movf	plusw1,w,c
 25067  014DEA  58DE               	subwfb	postinc2,w,c
 25068  014DEC  A0D8               	btfss	status,0,c
 25069  014DEE  D015               	goto	l8159
 25070                           
 25071                           ;stkvar	_grs @ sp[(-13)+0]
 25072  014DF0  0EF6               	movlw	-10
 25073  014DF2  8CE3               	bsf	plusw1,6,c
 25074                           
 25075                           ;stkvar	_a @ sp[(-13)+-8]
 25076                           ;stkvar	_rem @ sp[(-13)+4]
 25077  014DF4  50E1               	movf	fsr1l,w,c
 25078  014DF6  0FF7               	addlw	-9
 25079  014DF8  6ED9               	movwf	fsr2l,c
 25080  014DFA  50E2               	movf	fsr1h,w,c
 25081  014DFC  6EDA               	movwf	fsr2h,c
 25082  014DFE  0EFF               	movlw	255
 25083  014E00  22DA               	addwfc	fsr2h,f,c
 25084  014E02  0EEB               	movlw	-21
 25085  014E04  50E3               	movf	plusw1,w,c
 25086  014E06  5EDE               	subwf	postinc2,f,c
 25087  014E08  0EEC               	movlw	-20
 25088  014E0A  50E3               	movf	plusw1,w,c
 25089  014E0C  5ADE               	subwfb	postinc2,f,c
 25090  014E0E  0EED               	movlw	-19
 25091  014E10  50E3               	movf	plusw1,w,c
 25092  014E12  5ADE               	subwfb	postinc2,f,c
 25093  014E14  0EEE               	movlw	-18
 25094  014E16  50E3               	movf	plusw1,w,c
 25095  014E18  5ADE               	subwfb	postinc2,f,c
 25096  014E1A                     l8159:
 25097                           
 25098                           ;stkvar	_aexp @ sp[(-13)+10]
 25099  014E1A  0EFD               	movlw	-3
 25100  014E1C  2AE3               	incf	plusw1,f,c
 25101  014E1E                     l8161:
 25102                           
 25103                           ;stkvar	_aexp @ sp[(-13)+10]
 25104  014E1E  0EFD               	movlw	-3
 25105  014E20  006F FF8C  F001    	movff	plusw1,btemp
 25106  014E26  0E19               	movlw	25
 25107  014E28  6401               	cpfsgt	btemp^0,c
 25108  014E2A  D7A9               	goto	l8143
 25109                           
 25110                           ;stkvar	_rem @ sp[(-13)+4]
 25111  014E2C  0EF7               	movlw	-9
 25112  014E2E  50E3               	movf	plusw1,w,c
 25113  014E30  E10A               	bnz	u6560
 25114  014E32  0EF8               	movlw	-8
 25115  014E34  50E3               	movf	plusw1,w,c
 25116  014E36  E107               	bnz	u6560
 25117  014E38  0EF9               	movlw	-7
 25118  014E3A  50E3               	movf	plusw1,w,c
 25119  014E3C  E104               	bnz	u6560
 25120  014E3E  0EFA               	movlw	-6
 25121  014E40  50E3               	movf	plusw1,w,c
 25122  014E42  B4D8               	btfsc	status,2,c
 25123  014E44  D024               	goto	l8177
 25124  014E46                     u6560:
 25125                           
 25126                           ;stkvar	_grs @ sp[(-13)+0]
 25127  014E46  0EF3               	movlw	-13
 25128  014E48  80E3               	bsf	plusw1,0,c
 25129  014E4A  D021               	goto	l8177
 25130  014E4C                     l8167:
 25131                           
 25132                           ;stkvar	_b @ sp[(-13)+-4]
 25133  014E4C  90D8               	bcf	status,0,c
 25134  014E4E  0EEF               	movlw	-17
 25135  014E50  36E3               	rlcf	plusw1,f,c
 25136  014E52  0EF0               	movlw	-16
 25137  014E54  36E3               	rlcf	plusw1,f,c
 25138  014E56  0EF1               	movlw	-15
 25139  014E58  36E3               	rlcf	plusw1,f,c
 25140  014E5A  0EF2               	movlw	-14
 25141  014E5C  36E3               	rlcf	plusw1,f,c
 25142                           
 25143                           ;stkvar	_grs @ sp[(-13)+0]
 25144  014E5E  0EF6               	movlw	-10
 25145  014E60  AEE3               	btfss	plusw1,7,c
 25146  014E62  D002               	goto	l8173
 25147                           
 25148                           ;stkvar	_b @ sp[(-13)+-4]
 25149  014E64  0EEF               	movlw	-17
 25150  014E66  80E3               	bsf	plusw1,0,c
 25151  014E68                     l8173:
 25152                           
 25153                           ;stkvar	_grs @ sp[(-13)+0]
 25154  014E68  90D8               	bcf	status,0,c
 25155  014E6A  0EF3               	movlw	-13
 25156  014E6C  36E3               	rlcf	plusw1,f,c
 25157  014E6E  0EF4               	movlw	-12
 25158  014E70  36E3               	rlcf	plusw1,f,c
 25159  014E72  0EF5               	movlw	-11
 25160  014E74  36E3               	rlcf	plusw1,f,c
 25161  014E76  0EF6               	movlw	-10
 25162  014E78  36E3               	rlcf	plusw1,f,c
 25163                           
 25164                           ;stkvar	_new_exp @ sp[(-13)+8]
 25165  014E7A  50E1               	movf	fsr1l,w,c
 25166  014E7C  0FFB               	addlw	-5
 25167  014E7E  6ED9               	movwf	fsr2l,c
 25168  014E80  50E2               	movf	fsr1h,w,c
 25169  014E82  6EDA               	movwf	fsr2h,c
 25170  014E84  0EFF               	movlw	255
 25171  014E86  22DA               	addwfc	fsr2h,f,c
 25172  014E88  06DE               	decf	postinc2,f,c
 25173  014E8A  0E00               	movlw	0
 25174  014E8C  5ADD               	subwfb	postdec2,f,c
 25175  014E8E                     l8177:
 25176                           
 25177                           ;stkvar	_b @ sp[(-13)+-4]
 25178  014E8E  0EF1               	movlw	-15
 25179  014E90  AEE3               	btfss	plusw1,7,c
 25180  014E92  D7DC               	goto	l8167
 25181                           
 25182                           ;stkvar	_aexp @ sp[(-13)+10]
 25183  014E94  0EFD               	movlw	-3
 25184  014E96  6AE3               	clrf	plusw1,c
 25185                           
 25186                           ;stkvar	_grs @ sp[(-13)+0]
 25187  014E98  0EF6               	movlw	-10
 25188  014E9A  AEE3               	btfss	plusw1,7,c
 25189  014E9C  D020               	goto	l8191
 25190                           
 25191                           ;stkvar	_grs @ sp[(-13)+0]
 25192  014E9E  50E1               	movf	fsr1l,w,c
 25193  014EA0  0FF3               	addlw	-13
 25194  014EA2  6ED9               	movwf	fsr2l,c
 25195  014EA4  50E2               	movf	fsr1h,w,c
 25196  014EA6  6EDA               	movwf	fsr2h,c
 25197  014EA8  0EFF               	movlw	255
 25198  014EAA  22DA               	addwfc	fsr2h,f,c
 25199  014EAC  0EFF               	movlw	255
 25200  014EAE  14DE               	andwf	postinc2,w,c
 25201  014EB0  6E09               	movwf	(btemp+8)^0,c
 25202  014EB2  0EFF               	movlw	255
 25203  014EB4  14DE               	andwf	postinc2,w,c
 25204  014EB6  6E0A               	movwf	(btemp+9)^0,c
 25205  014EB8  0EFF               	movlw	255
 25206  014EBA  14DE               	andwf	postinc2,w,c
 25207  014EBC  6E0B               	movwf	(btemp+10)^0,c
 25208  014EBE  0E7F               	movlw	127
 25209  014EC0  14DE               	andwf	postinc2,w,c
 25210  014EC2  6E0C               	movwf	(btemp+11)^0,c
 25211  014EC4  5009               	movf	(btemp+8)^0,w,c
 25212  014EC6  100A               	iorwf	(btemp+9)^0,w,c
 25213  014EC8  100B               	iorwf	(btemp+10)^0,w,c
 25214  014ECA  100C               	iorwf	(btemp+11)^0,w,c
 25215  014ECC  B4D8               	btfsc	status,2,c
 25216  014ECE  D004               	goto	l8187
 25217  014ED0                     u6600:
 25218                           
 25219                           ;stkvar	_aexp @ sp[(-13)+10]
 25220  014ED0  0EFD               	movlw	-3
 25221  014ED2  6AE3               	clrf	plusw1,c
 25222  014ED4  2AE3               	incf	plusw1,f,c
 25223  014ED6  D003               	goto	l8191
 25224  014ED8                     l8187:
 25225                           
 25226                           ;stkvar	_b @ sp[(-13)+-4]
 25227  014ED8  0EEF               	movlw	-17
 25228  014EDA  B0E3               	btfsc	plusw1,0,c
 25229  014EDC  D7F9               	goto	u6600
 25230  014EDE                     l8191:
 25231                           
 25232                           ;stkvar	_aexp @ sp[(-13)+10]
 25233  014EDE  0EFD               	movlw	-3
 25234  014EE0  50E3               	movf	plusw1,w,c
 25235  014EE2  B4D8               	btfsc	status,2,c
 25236  014EE4  D036               	goto	l8201
 25237                           
 25238                           ;stkvar	_b @ sp[(-13)+-4]
 25239  014EE6  50E1               	movf	fsr1l,w,c
 25240  014EE8  0FEF               	addlw	-17
 25241  014EEA  6ED9               	movwf	fsr2l,c
 25242  014EEC  50E2               	movf	fsr1h,w,c
 25243  014EEE  6EDA               	movwf	fsr2h,c
 25244  014EF0  0EFF               	movlw	255
 25245  014EF2  22DA               	addwfc	fsr2h,f,c
 25246  014EF4  2ADE               	incf	postinc2,f,c
 25247  014EF6  0E00               	movlw	0
 25248  014EF8  22DE               	addwfc	postinc2,f,c
 25249  014EFA  22DE               	addwfc	postinc2,f,c
 25250  014EFC  22DE               	addwfc	postinc2,f,c
 25251                           
 25252                           ;stkvar	_b @ sp[(-13)+-4]
 25253  014EFE  0EF2               	movlw	-14
 25254  014F00  A0E3               	btfss	plusw1,0,c
 25255  014F02  D027               	goto	l8201
 25256  014F04  0E01               	movlw	1
 25257  014F06  6E0C               	movwf	(btemp+11)^0,c
 25258                           
 25259                           ;stkvar	_b @ sp[(-13)+-4]
 25260  014F08  50E1               	movf	fsr1l,w,c
 25261  014F0A  0FEF               	addlw	-17
 25262  014F0C  6ED9               	movwf	fsr2l,c
 25263  014F0E  50E2               	movf	fsr1h,w,c
 25264  014F10  6EDA               	movwf	fsr2h,c
 25265  014F12  0EFF               	movlw	255
 25266  014F14  22DA               	addwfc	fsr2h,f,c
 25267  014F16  280C               	incf	(btemp+11)^0,w,c
 25268  014F18  52DE               	movf	postinc2,f,c
 25269  014F1A  D008               	goto	u6640
 25270  014F1C                     u6645:
 25271  014F1C  52DE               	movf	postinc2,f,c
 25272  014F1E  90D8               	bcf	status,0,c
 25273  014F20  BEDC               	btfsc	preinc2,7,c
 25274  014F22  80D8               	bsf	status,0,c
 25275  014F24  32DD               	rrcf	postdec2,f,c
 25276  014F26  32DD               	rrcf	postdec2,f,c
 25277  014F28  32DD               	rrcf	postdec2,f,c
 25278  014F2A  32DE               	rrcf	postinc2,f,c
 25279  014F2C                     u6640:
 25280  014F2C  2EE8               	decfsz	wreg,f,c
 25281  014F2E  D7F6               	goto	u6645
 25282                           
 25283                           ;stkvar	_new_exp @ sp[(-13)+8]
 25284  014F30  0EFB               	movlw	-5
 25285  014F32  50E3               	movf	plusw1,w,c
 25286  014F34  0F01               	addlw	1
 25287  014F36  6E01               	movwf	btemp^0,c
 25288  014F38  0EFB               	movlw	-5
 25289  014F3A  0060  F007  FFE3   	movff	btemp,plusw1
 25290  014F40  6A01               	clrf	btemp^0,c
 25291  014F42  0EFC               	movlw	-4
 25292  014F44  50E3               	movf	plusw1,w,c
 25293  014F46  2001               	addwfc	btemp^0,w,c
 25294  014F48  6E01               	movwf	btemp^0,c
 25295  014F4A  0EFC               	movlw	-4
 25296  014F4C  0060  F007  FFE3   	movff	btemp,plusw1
 25297  014F52                     l8201:
 25298                           
 25299                           ;stkvar	_new_exp @ sp[(-13)+8]
 25300  014F52  0EFC               	movlw	-4
 25301  014F54  BEE3               	btfsc	plusw1,7,c
 25302  014F56  D01B               	goto	l8207
 25303  014F58  0EFC               	movlw	-4
 25304  014F5A  50E3               	movf	plusw1,w,c
 25305  014F5C  E104               	bnz	u6650
 25306  014F5E  0EFB               	movlw	-5
 25307  014F60  28E3               	incf	plusw1,w,c
 25308  014F62  A0D8               	btfss	status,0,c
 25309  014F64  D014               	goto	l8207
 25310  014F66                     u6650:
 25311  014F66  0EFF               	movlw	255
 25312  014F68  6E0B               	movwf	(btemp+10)^0,c
 25313  014F6A  0E00               	movlw	0
 25314  014F6C  6E0C               	movwf	(btemp+11)^0,c
 25315                           
 25316                           ;stkvar	_new_exp @ sp[(-13)+8]
 25317  014F6E  0EFB               	movlw	-5
 25318  014F70  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25319  014F76  0EFC               	movlw	-4
 25320  014F78  0060  F033  FFE3   	movff	btemp+11,plusw1
 25321                           
 25322                           ;stkvar	_b @ sp[(-13)+-4]
 25323  014F7E  0EEF               	movlw	-17
 25324  014F80  6AE3               	clrf	plusw1,c
 25325  014F82  0EF0               	movlw	-16
 25326  014F84  6AE3               	clrf	plusw1,c
 25327  014F86  0EF1               	movlw	-15
 25328  014F88  6AE3               	clrf	plusw1,c
 25329  014F8A  0EF2               	movlw	-14
 25330  014F8C  6AE3               	clrf	plusw1,c
 25331  014F8E                     l8207:
 25332                           
 25333                           ;stkvar	_new_exp @ sp[(-13)+8]
 25334  014F8E  0EFC               	movlw	-4
 25335  014F90  BEE3               	btfsc	plusw1,7,c
 25336  014F92  D007               	goto	u6660
 25337  014F94  0EFC               	movlw	-4
 25338  014F96  50E3               	movf	plusw1,w,c
 25339  014F98  E112               	bnz	l8213
 25340  014F9A  0EFB               	movlw	-5
 25341  014F9C  04E3               	decf	plusw1,w,c
 25342  014F9E  B0D8               	btfsc	status,0,c
 25343  014FA0  D00E               	goto	l8213
 25344  014FA2                     u6660:
 25345                           
 25346                           ;stkvar	_new_exp @ sp[(-13)+8]
 25347  014FA2  0EFB               	movlw	-5
 25348  014FA4  6AE3               	clrf	plusw1,c
 25349  014FA6  0EFC               	movlw	-4
 25350  014FA8  6AE3               	clrf	plusw1,c
 25351                           
 25352                           ;stkvar	_b @ sp[(-13)+-4]
 25353  014FAA  0EEF               	movlw	-17
 25354  014FAC  6AE3               	clrf	plusw1,c
 25355  014FAE  0EF0               	movlw	-16
 25356  014FB0  6AE3               	clrf	plusw1,c
 25357  014FB2  0EF1               	movlw	-15
 25358  014FB4  6AE3               	clrf	plusw1,c
 25359  014FB6  0EF2               	movlw	-14
 25360  014FB8  6AE3               	clrf	plusw1,c
 25361                           
 25362                           ;stkvar	_sign @ sp[(-13)+12]
 25363  014FBA  0EFF               	movlw	-1
 25364  014FBC  6AE3               	clrf	plusw1,c
 25365  014FBE                     l8213:
 25366                           
 25367                           ;stkvar	_new_exp @ sp[(-13)+8]
 25368                           ;stkvar	_bexp @ sp[(-13)+11]
 25369  014FBE  0EFB               	movlw	-5
 25370  014FC0  006F FF8C  F001    	movff	plusw1,btemp
 25371  014FC6  0EFE               	movlw	-2
 25372  014FC8  0060  F007  FFE3   	movff	btemp,plusw1
 25373                           
 25374                           ;stkvar	_bexp @ sp[(-13)+11]
 25375  014FCE  0EFE               	movlw	-2
 25376  014FD0  A0E3               	btfss	plusw1,0,c
 25377  014FD2  D009               	goto	l8219
 25378                           
 25379                           ;stkvar	_b @ sp[(-13)+-4]
 25380  014FD4  0EF1               	movlw	241
 25381  014FD6  24E1               	addwf	fsr1l,w,c
 25382  014FD8  6ED9               	movwf	fsr2l,c
 25383  014FDA  0EFF               	movlw	255
 25384  014FDC  20E2               	addwfc	fsr1h,w,c
 25385  014FDE  6EDA               	movwf	fsr2h,c
 25386  014FE0  0E00               	movlw	0
 25387  014FE2  8EDB               	bsf	plusw2,7,c
 25388  014FE4  D008               	goto	l8221
 25389  014FE6                     l8219:
 25390                           
 25391                           ;stkvar	_b @ sp[(-13)+-4]
 25392  014FE6  0EF1               	movlw	241
 25393  014FE8  24E1               	addwf	fsr1l,w,c
 25394  014FEA  6ED9               	movwf	fsr2l,c
 25395  014FEC  0EFF               	movlw	255
 25396  014FEE  20E2               	addwfc	fsr1h,w,c
 25397  014FF0  6EDA               	movwf	fsr2h,c
 25398  014FF2  0E7F               	movlw	127
 25399  014FF4  16DF               	andwf	indf2,f,c
 25400  014FF6                     l8221:
 25401                           
 25402                           ;stkvar	_b @ sp[(-13)+-4]
 25403  014FF6  0EF2               	movlw	242
 25404  014FF8  24E1               	addwf	fsr1l,w,c
 25405  014FFA  6ED9               	movwf	fsr2l,c
 25406  014FFC  0EFF               	movlw	255
 25407  014FFE  20E2               	addwfc	fsr1h,w,c
 25408  015000  6EDA               	movwf	fsr2h,c
 25409                           
 25410                           ;stkvar	_bexp @ sp[(-13)+11]
 25411  015002  0EFE               	movlw	-2
 25412  015004  006F FF8C  F00C    	movff	plusw1,btemp+11
 25413  01500A  90D8               	bcf	status,0,c
 25414  01500C  300C               	rrcf	(btemp+11)^0,w,c
 25415  01500E  6EDF               	movwf	indf2,c
 25416  015010  D644               	goto	l8119
 25417  015012                     l2982:
 25418                           
 25419                           ; ___fldiv: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 25420  015012  0EEB               	movlw	235
 25421  015014  26E1               	addwf	fsr1l,f,c
 25422  015016  0EFF               	movlw	255
 25423  015018  22E2               	addwfc	fsr1h,f,c
 25424  01501A  0012               	return		;funcret
 25425  01501C                     __end_of___fldiv:
 25426                           	opt callstack 0
 25427                           
 25428 ;; *************** function ___flge *****************
 25429 ;; Defined at:
 25430 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flge.c"
 25431 ;; Parameters:    Size  Location     Type
 25432 ;;  ff1             4  [STACK] unsigned char 
 25433 ;;  ff2             4  [STACK] unsigned char 
 25434 ;; Auto vars:     Size  Location     Type
 25435 ;;		None
 25436 ;; Return value:  Size  Location     Type
 25437 ;;		None               void
 25438 ;; Registers used:
 25439 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 25440 ;; Tracked objects:
 25441 ;;		On entry : 0/1
 25442 ;;		On exit  : 0/0
 25443 ;;		Unchanged: 0/0
 25444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25445 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25446 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25447 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25448 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25449 ;;Total ram usage:        0 bytes
 25450 ;; Hardware stack levels used:    1
 25451 ;; Hardware stack levels required when called:   15
 25452 ;; This function calls:
 25453 ;;		Nothing
 25454 ;; This function is called by:
 25455 ;;		_main
 25456 ;;		_calc_ror_data
 25457 ;;		_check_day_time
 25458 ;;		_calc_bsoc
 25459 ;;		_efgtoa
 25460 ;; This function uses a reentrant model
 25461 ;;
 25462                           
 25463                           	psect	text99
 25464  018D02                     __ptext99:
 25465                           	opt callstack 0
 25466  018D02                     ___flge:
 25467                           	opt callstack 0
 25468                           
 25469                           ;stkvar	_ff1 @ sp[(0)+-4]
 25470                           
 25471                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25472                           ;incstack = 0
 25473 ;; hardware stack exceeded
 25474  018D02  50E1               	movf	fsr1l,w,c
 25475  018D04  0FFC               	addlw	-4
 25476  018D06  6ED9               	movwf	fsr2l,c
 25477  018D08  50E2               	movf	fsr1h,w,c
 25478  018D0A  6EDA               	movwf	fsr2h,c
 25479  018D0C  0EFF               	movlw	255
 25480  018D0E  22DA               	addwfc	fsr2h,f,c
 25481  018D10  0E00               	movlw	0
 25482  018D12  14DE               	andwf	postinc2,w,c
 25483  018D14  6E09               	movwf	(btemp+8)^0,c
 25484  018D16  0E00               	movlw	0
 25485  018D18  14DE               	andwf	postinc2,w,c
 25486  018D1A  6E0A               	movwf	(btemp+9)^0,c
 25487  018D1C  0E80               	movlw	128
 25488  018D1E  14DE               	andwf	postinc2,w,c
 25489  018D20  6E0B               	movwf	(btemp+10)^0,c
 25490  018D22  0E7F               	movlw	127
 25491  018D24  14DE               	andwf	postinc2,w,c
 25492  018D26  6E0C               	movwf	(btemp+11)^0,c
 25493  018D28  5009               	movf	(btemp+8)^0,w,c
 25494  018D2A  100A               	iorwf	(btemp+9)^0,w,c
 25495  018D2C  100B               	iorwf	(btemp+10)^0,w,c
 25496  018D2E  100C               	iorwf	(btemp+11)^0,w,c
 25497  018D30  A4D8               	btfss	status,2,c
 25498  018D32  D008               	goto	l8495
 25499                           
 25500                           ;stkvar	_ff1 @ sp[(0)+-4]
 25501  018D34  0EFC               	movlw	-4
 25502  018D36  6AE3               	clrf	plusw1,c
 25503  018D38  0EFD               	movlw	-3
 25504  018D3A  6AE3               	clrf	plusw1,c
 25505  018D3C  0EFE               	movlw	-2
 25506  018D3E  6AE3               	clrf	plusw1,c
 25507  018D40  0EFF               	movlw	-1
 25508  018D42  6AE3               	clrf	plusw1,c
 25509  018D44                     l8495:
 25510                           
 25511                           ;stkvar	_ff2 @ sp[(0)+-8]
 25512  018D44  50E1               	movf	fsr1l,w,c
 25513  018D46  0FF8               	addlw	-8
 25514  018D48  6ED9               	movwf	fsr2l,c
 25515  018D4A  50E2               	movf	fsr1h,w,c
 25516  018D4C  6EDA               	movwf	fsr2h,c
 25517  018D4E  0EFF               	movlw	255
 25518  018D50  22DA               	addwfc	fsr2h,f,c
 25519  018D52  0E00               	movlw	0
 25520  018D54  14DE               	andwf	postinc2,w,c
 25521  018D56  6E09               	movwf	(btemp+8)^0,c
 25522  018D58  0E00               	movlw	0
 25523  018D5A  14DE               	andwf	postinc2,w,c
 25524  018D5C  6E0A               	movwf	(btemp+9)^0,c
 25525  018D5E  0E80               	movlw	128
 25526  018D60  14DE               	andwf	postinc2,w,c
 25527  018D62  6E0B               	movwf	(btemp+10)^0,c
 25528  018D64  0E7F               	movlw	127
 25529  018D66  14DE               	andwf	postinc2,w,c
 25530  018D68  6E0C               	movwf	(btemp+11)^0,c
 25531  018D6A  5009               	movf	(btemp+8)^0,w,c
 25532  018D6C  100A               	iorwf	(btemp+9)^0,w,c
 25533  018D6E  100B               	iorwf	(btemp+10)^0,w,c
 25534  018D70  100C               	iorwf	(btemp+11)^0,w,c
 25535  018D72  A4D8               	btfss	status,2,c
 25536  018D74  D008               	goto	l2663
 25537                           
 25538                           ;stkvar	_ff2 @ sp[(0)+-8]
 25539  018D76  0EF8               	movlw	-8
 25540  018D78  6AE3               	clrf	plusw1,c
 25541  018D7A  0EF9               	movlw	-7
 25542  018D7C  6AE3               	clrf	plusw1,c
 25543  018D7E  0EFA               	movlw	-6
 25544  018D80  6AE3               	clrf	plusw1,c
 25545  018D82  0EFB               	movlw	-5
 25546  018D84  6AE3               	clrf	plusw1,c
 25547  018D86                     l2663:
 25548                           
 25549                           ;stkvar	_ff1 @ sp[(0)+-4]
 25550  018D86  0EFF               	movlw	-1
 25551  018D88  AEE3               	btfss	plusw1,7,c
 25552  018D8A  D024               	goto	l8501
 25553                           
 25554                           ;stkvar	_ff1 @ sp[(0)+-4]
 25555  018D8C  0E00               	movlw	0
 25556  018D8E  6E09               	movwf	(btemp+8)^0,c
 25557  018D90  0E00               	movlw	0
 25558  018D92  6E0A               	movwf	(btemp+9)^0,c
 25559  018D94  0E00               	movlw	0
 25560  018D96  6E0B               	movwf	(btemp+10)^0,c
 25561  018D98  0E80               	movlw	128
 25562  018D9A  6E0C               	movwf	(btemp+11)^0,c
 25563  018D9C  0EFC               	movlw	-4
 25564  018D9E  50E3               	movf	plusw1,w,c
 25565  018DA0  5E09               	subwf	(btemp+8)^0,f,c
 25566  018DA2  0EFD               	movlw	-3
 25567  018DA4  50E3               	movf	plusw1,w,c
 25568  018DA6  5A0A               	subwfb	(btemp+9)^0,f,c
 25569  018DA8  0EFE               	movlw	-2
 25570  018DAA  50E3               	movf	plusw1,w,c
 25571  018DAC  5A0B               	subwfb	(btemp+10)^0,f,c
 25572  018DAE  0EFF               	movlw	-1
 25573  018DB0  50E3               	movf	plusw1,w,c
 25574  018DB2  5A0C               	subwfb	(btemp+11)^0,f,c
 25575                           
 25576                           ;stkvar	_ff1 @ sp[(0)+-4]
 25577  018DB4  0EFC               	movlw	-4
 25578  018DB6  0060  F027  FFE3   	movff	btemp+8,plusw1
 25579  018DBC  0EFD               	movlw	-3
 25580  018DBE  0060  F02B  FFE3   	movff	btemp+9,plusw1
 25581  018DC4  0EFE               	movlw	-2
 25582  018DC6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25583  018DCC  0EFF               	movlw	-1
 25584  018DCE  0060  F033  FFE3   	movff	btemp+11,plusw1
 25585  018DD4                     l8501:
 25586                           
 25587                           ;stkvar	_ff2 @ sp[(0)+-8]
 25588  018DD4  0EFB               	movlw	-5
 25589  018DD6  AEE3               	btfss	plusw1,7,c
 25590  018DD8  D024               	goto	l8505
 25591                           
 25592                           ;stkvar	_ff2 @ sp[(0)+-8]
 25593  018DDA  0E00               	movlw	0
 25594  018DDC  6E09               	movwf	(btemp+8)^0,c
 25595  018DDE  0E00               	movlw	0
 25596  018DE0  6E0A               	movwf	(btemp+9)^0,c
 25597  018DE2  0E00               	movlw	0
 25598  018DE4  6E0B               	movwf	(btemp+10)^0,c
 25599  018DE6  0E80               	movlw	128
 25600  018DE8  6E0C               	movwf	(btemp+11)^0,c
 25601  018DEA  0EF8               	movlw	-8
 25602  018DEC  50E3               	movf	plusw1,w,c
 25603  018DEE  5E09               	subwf	(btemp+8)^0,f,c
 25604  018DF0  0EF9               	movlw	-7
 25605  018DF2  50E3               	movf	plusw1,w,c
 25606  018DF4  5A0A               	subwfb	(btemp+9)^0,f,c
 25607  018DF6  0EFA               	movlw	-6
 25608  018DF8  50E3               	movf	plusw1,w,c
 25609  018DFA  5A0B               	subwfb	(btemp+10)^0,f,c
 25610  018DFC  0EFB               	movlw	-5
 25611  018DFE  50E3               	movf	plusw1,w,c
 25612  018E00  5A0C               	subwfb	(btemp+11)^0,f,c
 25613                           
 25614                           ;stkvar	_ff2 @ sp[(0)+-8]
 25615  018E02  0EF8               	movlw	-8
 25616  018E04  0060  F027  FFE3   	movff	btemp+8,plusw1
 25617  018E0A  0EF9               	movlw	-7
 25618  018E0C  0060  F02B  FFE3   	movff	btemp+9,plusw1
 25619  018E12  0EFA               	movlw	-6
 25620  018E14  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25621  018E1A  0EFB               	movlw	-5
 25622  018E1C  0060  F033  FFE3   	movff	btemp+11,plusw1
 25623  018E22                     l8505:
 25624                           
 25625                           ;stkvar	_ff1 @ sp[(0)+-4]
 25626  018E22  0EFF               	movlw	-1
 25627  018E24  7EE3               	btg	plusw1,7,c
 25628                           
 25629                           ;stkvar	_ff2 @ sp[(0)+-8]
 25630  018E26  0EFB               	movlw	-5
 25631  018E28  7EE3               	btg	plusw1,7,c
 25632                           
 25633                           ;stkvar	_ff2 @ sp[(0)+-8]
 25634                           ;stkvar	_ff1 @ sp[(0)+-4]
 25635  018E2A  50E1               	movf	fsr1l,w,c
 25636  018E2C  0FFC               	addlw	-4
 25637  018E2E  6ED9               	movwf	fsr2l,c
 25638  018E30  50E2               	movf	fsr1h,w,c
 25639  018E32  6EDA               	movwf	fsr2h,c
 25640  018E34  0EFF               	movlw	255
 25641  018E36  22DA               	addwfc	fsr2h,f,c
 25642  018E38  0EF8               	movlw	-8
 25643  018E3A  50E3               	movf	plusw1,w,c
 25644  018E3C  5CDE               	subwf	postinc2,w,c
 25645  018E3E  0EF9               	movlw	-7
 25646  018E40  50E3               	movf	plusw1,w,c
 25647  018E42  58DE               	subwfb	postinc2,w,c
 25648  018E44  0EFA               	movlw	-6
 25649  018E46  50E3               	movf	plusw1,w,c
 25650  018E48  58DE               	subwfb	postinc2,w,c
 25651  018E4A  0EFB               	movlw	-5
 25652  018E4C  50E3               	movf	plusw1,w,c
 25653  018E4E  58DE               	subwfb	postinc2,w,c
 25654  018E50  B0D8               	btfsc	status,0,c
 25655  018E52  D002               	goto	l8513
 25656  018E54  9001               	bcf	btemp& (0+255),0,c
 25657  018E56  D001               	goto	l2670
 25658  018E58                     l8513:
 25659  018E58  8001               	bsf	btemp& (0+255),0,c
 25660  018E5A                     l2670:
 25661                           
 25662                           ; ___flge: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 25663  018E5A  0EF8               	movlw	248
 25664  018E5C  26E1               	addwf	fsr1l,f,c
 25665  018E5E  0EFF               	movlw	255
 25666  018E60  22E2               	addwfc	fsr1h,f,c
 25667  018E62  0012               	return		;funcret
 25668  018E64                     __end_of___flge:
 25669                           	opt callstack 0
 25670                           
 25671 ;; *************** function _calc_model_data *****************
 25672 ;; Defined at:
 25673 ;;		line 67 in file "mbmc.c"
 25674 ;; Parameters:    Size  Location     Type
 25675 ;;		None
 25676 ;; Auto vars:     Size  Location     Type
 25677 ;;		None
 25678 ;; Return value:  Size  Location     Type
 25679 ;;                  1  [STACK] void 
 25680 ;; Registers used:
 25681 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 25682 ;; Tracked objects:
 25683 ;;		On entry : 0/1
 25684 ;;		On exit  : 3F/39
 25685 ;;		Unchanged: 0/0
 25686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25687 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25688 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25690 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25691 ;;Total ram usage:        0 bytes
 25692 ;; Hardware stack levels used:    1
 25693 ;; Hardware stack levels required when called:   18
 25694 ;; This function calls:
 25695 ;;		___fladd
 25696 ;;		___flmul
 25697 ;;		___flsub
 25698 ;;		_lp_filter
 25699 ;;		_start_bsoc
 25700 ;;		_stop_bsoc
 25701 ;; This function is called by:
 25702 ;;		_main
 25703 ;; This function uses a reentrant model
 25704 ;;
 25705                           
 25706                           	psect	text100
 25707  0159B0                     __ptext100:
 25708                           	opt callstack 0
 25709  0159B0                     _calc_model_data:
 25710                           	opt callstack 12
 25711                           
 25712                           ;mbmc.c: 69:  static float bvror = 0.0, bcror = 0.0;;mbmc.c: 70:  stop_bsoc();
 25713                           
 25714                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25715                           ;incstack = 0
 25716  0159B0  ECF4  F0DE         	call	_stop_bsoc	;wreg free
 25717                           
 25718                           ; BSR set to: 57
 25719                           ;mbmc.c: 72:  if (!V.calib) {
 25720  0159B4  0101               	movlb	1	; () banked
 25721  0159B6  51DC               	movf	(_V+172)& (0+255),w,b	;volatile
 25722  0159B8  A4D8               	btfss	status,2,c
 25723  0159BA  D219               	goto	l10915
 25724                           
 25725                           ; BSR set to: 1
 25726                           ;mbmc.c: 73:   C.c_bat = C.calc[C_BATT];
 25727  0159BC  EE21  F2FF         	lfsr	2,_C
 25728  0159C0  006F FF78  F743    	movff	postinc2,_C+68	;volatile
 25729  0159C6  006F FF78  F744    	movff	postinc2,_C+69	;volatile
 25730  0159CC  006F FF78  F745    	movff	postinc2,_C+70	;volatile
 25731  0159D2  006F FF74  F746    	movff	postdec2,_C+71	;volatile
 25732                           
 25733                           ; BSR set to: 1
 25734                           ;mbmc.c: 74:   C.bc_ror = C.c_bat - bcror;
 25735  0159D8  0060  F23B  FFE6   	movff	calc_model_data@bcror,postinc1
 25736  0159DE  0060  F23F  FFE6   	movff	calc_model_data@bcror+1,postinc1
 25737  0159E4  0060  F243  FFE6   	movff	calc_model_data@bcror+2,postinc1
 25738  0159EA  0060  F247  FFE6   	movff	calc_model_data@bcror+3,postinc1
 25739  0159F0  EE21  F343         	lfsr	2,_C+68	;volatile
 25740  0159F4  006F FF7B FFE6     	movff	postinc2,postinc1
 25741  0159FA  006F FF7B FFE6     	movff	postinc2,postinc1
 25742  015A00  006F FF7B FFE6     	movff	postinc2,postinc1
 25743  015A06  006F FF7B FFE6     	movff	postinc2,postinc1
 25744  015A0C  EC08  F0D9         	call	___flsub	;wreg free
 25745  015A10  0060  F004  F76F   	movff	btemp,_C+112	;volatile
 25746  015A16  0060  F008  F770   	movff	btemp+1,_C+113	;volatile
 25747  015A1C  0060  F00C  F771   	movff	btemp+2,_C+114	;volatile
 25748  015A22  0060  F010  F772   	movff	btemp+3,_C+115	;volatile
 25749                           
 25750                           ;mbmc.c: 75:   bcror = C.c_bat;
 25751  015A28  C743  F08E         	movff	_C+68,calc_model_data@bcror	;volatile
 25752  015A2C  C744  F08F         	movff	_C+69,calc_model_data@bcror+1	;volatile
 25753  015A30  C745  F090         	movff	_C+70,calc_model_data@bcror+2	;volatile
 25754  015A34  C746  F091         	movff	_C+71,calc_model_data@bcror+3	;volatile
 25755                           
 25756                           ;mbmc.c: 76:   C.c_pv = C.calc[C_PV];
 25757  015A38  EE21  F303         	lfsr	2,_C+4	;volatile
 25758  015A3C  006F FF78  F747    	movff	postinc2,_C+72	;volatile
 25759  015A42  006F FF78  F748    	movff	postinc2,_C+73	;volatile
 25760  015A48  006F FF78  F749    	movff	postinc2,_C+74	;volatile
 25761  015A4E  006F FF74  F74A    	movff	postdec2,_C+75	;volatile
 25762                           
 25763                           ;mbmc.c: 77:   C.v_bat = C.calc[V_BAT];
 25764  015A54  EE21  F30F         	lfsr	2,_C+16	;volatile
 25765  015A58  006F FF78  F753    	movff	postinc2,_C+84	;volatile
 25766  015A5E  006F FF78  F754    	movff	postinc2,_C+85	;volatile
 25767  015A64  006F FF78  F755    	movff	postinc2,_C+86	;volatile
 25768  015A6A  006F FF74  F756    	movff	postdec2,_C+87	;volatile
 25769                           
 25770                           ;mbmc.c: 78:   C.v_sensor = C.calc[V_LIGHT_SENSOR];
 25771  015A70  EE21  F333         	lfsr	2,_C+52	;volatile
 25772  015A74  006F FF78  F767    	movff	postinc2,_C+104	;volatile
 25773  015A7A  006F FF78  F768    	movff	postinc2,_C+105	;volatile
 25774  015A80  006F FF78  F769    	movff	postinc2,_C+106	;volatile
 25775  015A86  006F FF74  F76A    	movff	postdec2,_C+107	;volatile
 25776                           
 25777                           ;mbmc.c: 79:   C.bv_ror = C.v_bat - bvror;
 25778  015A8C  0060  F24B  FFE6   	movff	calc_model_data@bvror,postinc1
 25779  015A92  0060  F24F  FFE6   	movff	calc_model_data@bvror+1,postinc1
 25780  015A98  0060  F253  FFE6   	movff	calc_model_data@bvror+2,postinc1
 25781  015A9E  0060  F257  FFE6   	movff	calc_model_data@bvror+3,postinc1
 25782  015AA4  EE21  F353         	lfsr	2,_C+84	;volatile
 25783  015AA8  006F FF7B FFE6     	movff	postinc2,postinc1
 25784  015AAE  006F FF7B FFE6     	movff	postinc2,postinc1
 25785  015AB4  006F FF7B FFE6     	movff	postinc2,postinc1
 25786  015ABA  006F FF7B FFE6     	movff	postinc2,postinc1
 25787  015AC0  EC08  F0D9         	call	___flsub	;wreg free
 25788  015AC4  0060  F004  F76B   	movff	btemp,_C+108	;volatile
 25789  015ACA  0060  F008  F76C   	movff	btemp+1,_C+109	;volatile
 25790  015AD0  0060  F00C  F76D   	movff	btemp+2,_C+110	;volatile
 25791  015AD6  0060  F010  F76E   	movff	btemp+3,_C+111	;volatile
 25792                           
 25793                           ;mbmc.c: 80:   bvror = C.v_bat;
 25794  015ADC  C753  F092         	movff	_C+84,calc_model_data@bvror	;volatile
 25795  015AE0  C754  F093         	movff	_C+85,calc_model_data@bvror+1	;volatile
 25796  015AE4  C755  F094         	movff	_C+86,calc_model_data@bvror+2	;volatile
 25797  015AE8  C756  F095         	movff	_C+87,calc_model_data@bvror+3	;volatile
 25798                           
 25799                           ;mbmc.c: 81:   C.v_pv = C.calc[V_PV];
 25800  015AEC  EE21  F313         	lfsr	2,_C+20	;volatile
 25801  015AF0  006F FF78  F74F    	movff	postinc2,_C+80	;volatile
 25802  015AF6  006F FF78  F750    	movff	postinc2,_C+81	;volatile
 25803  015AFC  006F FF78  F751    	movff	postinc2,_C+82	;volatile
 25804  015B02  006F FF74  F752    	movff	postdec2,_C+83	;volatile
 25805                           
 25806                           ;mbmc.c: 82:   C.v_cc = C.calc[V_CC];
 25807  015B08  EE21  F307         	lfsr	2,_C+8	;volatile
 25808  015B0C  006F FF78  F74B    	movff	postinc2,_C+76	;volatile
 25809  015B12  006F FF78  F74C    	movff	postinc2,_C+77	;volatile
 25810  015B18  006F FF78  F74D    	movff	postinc2,_C+78	;volatile
 25811  015B1E  006F FF74  F74E    	movff	postdec2,_C+79	;volatile
 25812                           
 25813                           ;mbmc.c: 83:   C.v_inverter = C.calc[V_INVERTER];
 25814  015B24  EE21  F32F         	lfsr	2,_C+48	;volatile
 25815  015B28  006F FF78  F763    	movff	postinc2,_C+100	;volatile
 25816  015B2E  006F FF78  F764    	movff	postinc2,_C+101	;volatile
 25817  015B34  006F FF78  F765    	movff	postinc2,_C+102	;volatile
 25818  015B3A  006F FF74  F766    	movff	postdec2,_C+103	;volatile
 25819                           
 25820                           ;mbmc.c: 84:   C.c_load = lp_filter(C.calc[C_PV]+(-(C.calc[C_BATT])), 16, 1);
 25821  015B40  0E01               	movlw	1
 25822  015B42  6EE6               	movwf	postinc1,c
 25823  015B44  0E10               	movlw	16
 25824  015B46  6EE6               	movwf	postinc1,c
 25825  015B48  EE21  F2FF         	lfsr	2,_C
 25826  015B4C  006F FF7B FFE6     	movff	postinc2,postinc1
 25827  015B52  006F FF7B FFE6     	movff	postinc2,postinc1
 25828  015B58  006F FF7B FFE6     	movff	postinc2,postinc1
 25829  015B5E  006F FF7B FFE6     	movff	postinc2,postinc1
 25830  015B64  EE21  F303         	lfsr	2,_C+4	;volatile
 25831  015B68  006F FF7B FFE6     	movff	postinc2,postinc1
 25832  015B6E  006F FF7B FFE6     	movff	postinc2,postinc1
 25833  015B74  006F FF7B FFE6     	movff	postinc2,postinc1
 25834  015B7A  006F FF7B FFE6     	movff	postinc2,postinc1
 25835  015B80  EC08  F0D9         	call	___flsub	;wreg free
 25836  015B84  0060  F007  FFE6   	movff	btemp,postinc1
 25837  015B8A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 25838  015B90  0060  F00F  FFE6   	movff	btemp+2,postinc1
 25839  015B96  0060  F013  FFE6   	movff	btemp+3,postinc1
 25840  015B9C  ECCC  F0C1         	call	_lp_filter	;wreg free
 25841  015BA0  0060  F004  F73F   	movff	btemp,_C+64	;volatile
 25842  015BA6  0060  F008  F740   	movff	btemp+1,_C+65	;volatile
 25843  015BAC  0060  F00C  F741   	movff	btemp+2,_C+66	;volatile
 25844  015BB2  0060  F010  F742   	movff	btemp+3,_C+67	;volatile
 25845                           
 25846                           ;mbmc.c: 85:   C.p_load = lp_filter(C.c_load * C.v_bat, 17, 1);
 25847  015BB8  0E01               	movlw	1
 25848  015BBA  6EE6               	movwf	postinc1,c
 25849  015BBC  0E11               	movlw	17
 25850  015BBE  6EE6               	movwf	postinc1,c
 25851  015BC0  EE21  F353         	lfsr	2,_C+84	;volatile
 25852  015BC4  006F FF7B FFE6     	movff	postinc2,postinc1
 25853  015BCA  006F FF7B FFE6     	movff	postinc2,postinc1
 25854  015BD0  006F FF7B FFE6     	movff	postinc2,postinc1
 25855  015BD6  006F FF7B FFE6     	movff	postinc2,postinc1
 25856  015BDC  EE21  F33F         	lfsr	2,_C+64	;volatile
 25857  015BE0  006F FF7B FFE6     	movff	postinc2,postinc1
 25858  015BE6  006F FF7B FFE6     	movff	postinc2,postinc1
 25859  015BEC  006F FF7B FFE6     	movff	postinc2,postinc1
 25860  015BF2  006F FF7B FFE6     	movff	postinc2,postinc1
 25861  015BF8  ECA0  F099         	call	___flmul	;wreg free
 25862  015BFC  0060  F007  FFE6   	movff	btemp,postinc1
 25863  015C02  0060  F00B  FFE6   	movff	btemp+1,postinc1
 25864  015C08  0060  F00F  FFE6   	movff	btemp+2,postinc1
 25865  015C0E  0060  F013  FFE6   	movff	btemp+3,postinc1
 25866  015C14  ECCC  F0C1         	call	_lp_filter	;wreg free
 25867  015C18  0060  F004  F773   	movff	btemp,_C+116	;volatile
 25868  015C1E  0060  F008  F774   	movff	btemp+1,_C+117	;volatile
 25869  015C24  0060  F00C  F775   	movff	btemp+2,_C+118	;volatile
 25870  015C2A  0060  F010  F776   	movff	btemp+3,_C+119	;volatile
 25871                           
 25872                           ;mbmc.c: 86:   C.p_pv = lp_filter(C.c_pv * C.v_pv, 18, 1);
 25873  015C30  0E01               	movlw	1
 25874  015C32  6EE6               	movwf	postinc1,c
 25875  015C34  0E12               	movlw	18
 25876  015C36  6EE6               	movwf	postinc1,c
 25877  015C38  EE21  F34F         	lfsr	2,_C+80	;volatile
 25878  015C3C  006F FF7B FFE6     	movff	postinc2,postinc1
 25879  015C42  006F FF7B FFE6     	movff	postinc2,postinc1
 25880  015C48  006F FF7B FFE6     	movff	postinc2,postinc1
 25881  015C4E  006F FF7B FFE6     	movff	postinc2,postinc1
 25882  015C54  EE21  F347         	lfsr	2,_C+72	;volatile
 25883  015C58  006F FF7B FFE6     	movff	postinc2,postinc1
 25884  015C5E  006F FF7B FFE6     	movff	postinc2,postinc1
 25885  015C64  006F FF7B FFE6     	movff	postinc2,postinc1
 25886  015C6A  006F FF7B FFE6     	movff	postinc2,postinc1
 25887  015C70  ECA0  F099         	call	___flmul	;wreg free
 25888  015C74  0060  F007  FFE6   	movff	btemp,postinc1
 25889  015C7A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 25890  015C80  0060  F00F  FFE6   	movff	btemp+2,postinc1
 25891  015C86  0060  F013  FFE6   	movff	btemp+3,postinc1
 25892  015C8C  ECCC  F0C1         	call	_lp_filter	;wreg free
 25893  015C90  0060  F004  F77B   	movff	btemp,_C+124	;volatile
 25894  015C96  0060  F008  F77C   	movff	btemp+1,_C+125	;volatile
 25895  015C9C  0060  F00C  F77D   	movff	btemp+2,_C+126	;volatile
 25896  015CA2  0060  F010  F77E   	movff	btemp+3,_C+127	;volatile
 25897                           
 25898                           ;mbmc.c: 87:   C.p_inverter = lp_filter((C.c_load * C.v_inverter) - 14.00, 19, 1);
 25899  015CA8  0E01               	movlw	1
 25900  015CAA  6EE6               	movwf	postinc1,c
 25901  015CAC  0E13               	movlw	19
 25902  015CAE  6EE6               	movwf	postinc1,c
 25903  015CB0  0E00               	movlw	0
 25904  015CB2  6EE6               	movwf	postinc1,c
 25905  015CB4  0E00               	movlw	0
 25906  015CB6  6EE6               	movwf	postinc1,c
 25907  015CB8  0E60               	movlw	96
 25908  015CBA  6EE6               	movwf	postinc1,c
 25909  015CBC  0EC1               	movlw	193
 25910  015CBE  6EE6               	movwf	postinc1,c
 25911  015CC0  EE21  F363         	lfsr	2,_C+100	;volatile
 25912  015CC4  006F FF7B FFE6     	movff	postinc2,postinc1
 25913  015CCA  006F FF7B FFE6     	movff	postinc2,postinc1
 25914  015CD0  006F FF7B FFE6     	movff	postinc2,postinc1
 25915  015CD6  006F FF7B FFE6     	movff	postinc2,postinc1
 25916  015CDC  EE21  F33F         	lfsr	2,_C+64	;volatile
 25917  015CE0  006F FF7B FFE6     	movff	postinc2,postinc1
 25918  015CE6  006F FF7B FFE6     	movff	postinc2,postinc1
 25919  015CEC  006F FF7B FFE6     	movff	postinc2,postinc1
 25920  015CF2  006F FF7B FFE6     	movff	postinc2,postinc1
 25921  015CF8  ECA0  F099         	call	___flmul	;wreg free
 25922  015CFC  0060  F007  FFE6   	movff	btemp,postinc1
 25923  015D02  0060  F00B  FFE6   	movff	btemp+1,postinc1
 25924  015D08  0060  F00F  FFE6   	movff	btemp+2,postinc1
 25925  015D0E  0060  F013  FFE6   	movff	btemp+3,postinc1
 25926  015D14  ECB5  F09D         	call	___fladd	;wreg free
 25927  015D18  0060  F007  FFE6   	movff	btemp,postinc1
 25928  015D1E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 25929  015D24  0060  F00F  FFE6   	movff	btemp+2,postinc1
 25930  015D2A  0060  F013  FFE6   	movff	btemp+3,postinc1
 25931  015D30  ECCC  F0C1         	call	_lp_filter	;wreg free
 25932  015D34  0060  F004  F777   	movff	btemp,_C+120	;volatile
 25933  015D3A  0060  F008  F778   	movff	btemp+1,_C+121	;volatile
 25934  015D40  0060  F00C  F779   	movff	btemp+2,_C+122	;volatile
 25935  015D46  0060  F010  F77A   	movff	btemp+3,_C+123	;volatile
 25936                           
 25937                           ;mbmc.c: 88:   C.p_bat = lp_filter(C.c_bat * C.v_bat, 20, 1);
 25938  015D4C  0E01               	movlw	1
 25939  015D4E  6EE6               	movwf	postinc1,c
 25940  015D50  0E14               	movlw	20
 25941  015D52  6EE6               	movwf	postinc1,c
 25942  015D54  EE21  F353         	lfsr	2,_C+84	;volatile
 25943  015D58  006F FF7B FFE6     	movff	postinc2,postinc1
 25944  015D5E  006F FF7B FFE6     	movff	postinc2,postinc1
 25945  015D64  006F FF7B FFE6     	movff	postinc2,postinc1
 25946  015D6A  006F FF7B FFE6     	movff	postinc2,postinc1
 25947  015D70  EE21  F343         	lfsr	2,_C+68	;volatile
 25948  015D74  006F FF7B FFE6     	movff	postinc2,postinc1
 25949  015D7A  006F FF7B FFE6     	movff	postinc2,postinc1
 25950  015D80  006F FF7B FFE6     	movff	postinc2,postinc1
 25951  015D86  006F FF7B FFE6     	movff	postinc2,postinc1
 25952  015D8C  ECA0  F099         	call	___flmul	;wreg free
 25953  015D90  0060  F007  FFE6   	movff	btemp,postinc1
 25954  015D96  0060  F00B  FFE6   	movff	btemp+1,postinc1
 25955  015D9C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 25956  015DA2  0060  F013  FFE6   	movff	btemp+3,postinc1
 25957  015DA8  ECCC  F0C1         	call	_lp_filter	;wreg free
 25958  015DAC  0060  F004  F77F   	movff	btemp,_C+128	;volatile
 25959  015DB2  0060  F008  F780   	movff	btemp+1,_C+129	;volatile
 25960  015DB8  0060  F00C  F781   	movff	btemp+2,_C+130	;volatile
 25961  015DBE  0060  F010  F782   	movff	btemp+3,_C+131	;volatile
 25962                           
 25963                           ;mbmc.c: 92:   if (C.p_inverter < 0.0)
 25964  015DC4  EE21  F377         	lfsr	2,_C+120	;volatile
 25965  015DC8  0E03               	movlw	3
 25966  015DCA  AEDB               	btfss	plusw2,7,c
 25967  015DCC  D010               	goto	l10915
 25968                           
 25969                           ;mbmc.c: 93:    C.p_inverter = 0.0001;
 25970  015DCE  0E17               	movlw	23
 25971  015DD0  006F FFA0  F777    	movff	wreg,_C+120	;volatile
 25972  015DD6  0EB7               	movlw	183
 25973  015DD8  006F FFA0  F778    	movff	wreg,_C+121	;volatile
 25974  015DDE  0ED1               	movlw	209
 25975  015DE0  006F FFA0  F779    	movff	wreg,_C+122	;volatile
 25976  015DE6  0E38               	movlw	56
 25977  015DE8  006F FFA0  F77A    	movff	wreg,_C+123	;volatile
 25978  015DEE                     l10915:
 25979                           
 25980                           ;mbmc.c: 95:  start_bsoc();
 25981  015DEE  EC8D  F0DD         	call	_start_bsoc	;wreg free
 25982                           
 25983                           ; BSR set to: 57
 25984                           ;mbmc.c: 96:  C.update = 1;
 25985  015DF2  0E01               	movlw	1
 25986  015DF4  006F FFA0  F7B3    	movff	wreg,_C+180	;volatile
 25987                           
 25988                           ; BSR set to: 57
 25989                           ; _calc_model_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 25990  015DFA  0012               	return		;funcret
 25991  015DFC                     __end_of_calc_model_data:
 25992                           	opt callstack 0
 25993                           
 25994 ;; *************** function _stop_bsoc *****************
 25995 ;; Defined at:
 25996 ;;		line 114 in file "bsoc.c"
 25997 ;; Parameters:    Size  Location     Type
 25998 ;;		None
 25999 ;; Auto vars:     Size  Location     Type
 26000 ;;		None
 26001 ;; Return value:  Size  Location     Type
 26002 ;;                  1  [STACK] void 
 26003 ;; Registers used:
 26004 ;;		None
 26005 ;; Tracked objects:
 26006 ;;		On entry : 0/1
 26007 ;;		On exit  : 3F/39
 26008 ;;		Unchanged: 0/0
 26009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26010 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26011 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26012 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26013 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26014 ;;Total ram usage:        0 bytes
 26015 ;; Hardware stack levels used:    1
 26016 ;; Hardware stack levels required when called:   15
 26017 ;; This function calls:
 26018 ;;		Nothing
 26019 ;; This function is called by:
 26020 ;;		_calc_model_data
 26021 ;; This function uses a reentrant model
 26022 ;;
 26023                           
 26024                           	psect	text101
 26025  01BDE8                     __ptext101:
 26026                           	opt callstack 0
 26027  01BDE8                     _stop_bsoc:
 26028                           	opt callstack 14
 26029                           
 26030                           ;bsoc.c: 117:  PIE6bits.TMR3IE = 0;
 26031                           
 26032                           ; BSR set to: 57
 26033                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26034                           ;incstack = 0
 26035  01BDE8  0139               	movlb	57	; () banked
 26036  01BDEA  9D96               	bcf	150,6,b	;volatile
 26037                           
 26038                           ; BSR set to: 57
 26039                           ; _stop_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 26040  01BDEC  0012               	return		;funcret
 26041  01BDEE                     __end_of_stop_bsoc:
 26042                           	opt callstack 0
 26043                           
 26044 ;; *************** function _start_bsoc *****************
 26045 ;; Defined at:
 26046 ;;		line 105 in file "bsoc.c"
 26047 ;; Parameters:    Size  Location     Type
 26048 ;;		None
 26049 ;; Auto vars:     Size  Location     Type
 26050 ;;		None
 26051 ;; Return value:  Size  Location     Type
 26052 ;;                  1  [STACK] void 
 26053 ;; Registers used:
 26054 ;;		wreg, status,2, status,0, btemp+11
 26055 ;; Tracked objects:
 26056 ;;		On entry : 0/1
 26057 ;;		On exit  : 3F/39
 26058 ;;		Unchanged: 0/0
 26059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26060 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26061 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26062 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26063 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26064 ;;Total ram usage:        0 bytes
 26065 ;; Hardware stack levels used:    1
 26066 ;; Hardware stack levels required when called:   15
 26067 ;; This function calls:
 26068 ;;		Nothing
 26069 ;; This function is called by:
 26070 ;;		_calc_model_data
 26071 ;; This function uses a reentrant model
 26072 ;;
 26073                           
 26074                           	psect	text102
 26075  01BB1A                     __ptext102:
 26076                           	opt callstack 0
 26077  01BB1A                     _start_bsoc:
 26078                           	opt callstack 14
 26079                           
 26080                           ;bsoc.c: 108:  PIE6bits.TMR3IE = 1;
 26081                           
 26082                           ; BSR set to: 57
 26083                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26084                           ;incstack = 0
 26085  01BB1A  0139               	movlb	57	; () banked
 26086  01BB1C  8D96               	bsf	150,6,b	;volatile
 26087                           
 26088                           ; BSR set to: 57
 26089  01BB1E  A4BE               	btfss	190,2,c	;volatile
 26090  01BB20  D002               	goto	u9600
 26091  01BB22  0E01               	movlw	1
 26092  01BB24  D001               	goto	u9606
 26093  01BB26                     u9600:
 26094  01BB26  0E00               	movlw	0
 26095  01BB28                     u9606:
 26096  01BB28  0AFF               	xorlw	255
 26097  01BB2A  6E0C               	movwf	(btemp+11)^0,c
 26098  01BB2C  460C               	rlncf	(btemp+11)^0,f,c
 26099  01BB2E  460C               	rlncf	(btemp+11)^0,f,c
 26100  01BB30  50BE               	movf	190,w,c	;volatile
 26101  01BB32  180C               	xorwf	(btemp+11)^0,w,c
 26102  01BB34  0BFB               	andlw	-5
 26103  01BB36  180C               	xorwf	(btemp+11)^0,w,c
 26104  01BB38  6EBE               	movwf	190,c	;volatile
 26105                           
 26106                           ; BSR set to: 57
 26107                           ; _start_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 26108  01BB3A  0012               	return		;funcret
 26109  01BB3C                     __end_of_start_bsoc:
 26110                           	opt callstack 0
 26111                           
 26112 ;; *************** function _lp_filter *****************
 26113 ;; Defined at:
 26114 ;;		line 29 in file "mbmc.c"
 26115 ;; Parameters:    Size  Location     Type
 26116 ;;  new             4  [STACK] const float 
 26117 ;;  bn              1  [STACK] const unsigned char 
 26118 ;;  slow            1  [STACK] const char 
 26119 ;; Auto vars:     Size  Location     Type
 26120 ;;  lp_speed        4  [STACK] float 
 26121 ;; Return value:  Size  Location     Type
 26122 ;;                  4  [STACK] float 
 26123 ;; Registers used:
 26124 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 26125 ;; Tracked objects:
 26126 ;;		On entry : 0/1
 26127 ;;		On exit  : 0/0
 26128 ;;		Unchanged: 0/0
 26129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26130 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26131 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26133 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26134 ;;Total ram usage:        0 bytes
 26135 ;; Hardware stack levels used:    1
 26136 ;; Hardware stack levels required when called:   17
 26137 ;; This function calls:
 26138 ;;		___fladd
 26139 ;;		___flmul
 26140 ;;		___flsub
 26141 ;; This function is called by:
 26142 ;;		_main
 26143 ;;		_convert_adc_data
 26144 ;;		_calc_model_data
 26145 ;; This function uses a reentrant model
 26146 ;;
 26147                           
 26148                           	psect	text103
 26149  018398                     __ptext103:
 26150                           	opt callstack 0
 26151  018398                     _lp_filter:
 26152                           	opt callstack 0
 26153                           
 26154                           ; BSR set to: 57
 26155                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26156  018398  52E6               	movf	postinc1,f,c
 26157  01839A  52E6               	movf	postinc1,f,c
 26158  01839C  52E6               	movf	postinc1,f,c
 26159  01839E  52E6               	movf	postinc1,f,c
 26160                           
 26161                           ;mbmc.c: 29: float lp_filter(const float new, const uint8_t bn, const int8_t slow);mbmc.
      +                          c: 30: {;mbmc.c: 31:  static float smooth[16 +5];;mbmc.c: 32:  float lp_speed;;mbmc.c: 3
      +                          4:  if (bn >= 16 +5)
 26162                           ;stkvar	_bn @ sp[(-4)+-5]
 26163                           
 26164                           ;incstack = 0
 26165  0183A0  0EF7               	movlw	-9
 26166  0183A2  006F FF8C  F001    	movff	plusw1,btemp
 26167  0183A8  0E14               	movlw	20
 26168  0183AA  6401               	cpfsgt	btemp^0,c
 26169  0183AC  D011               	goto	l10313
 26170  0183AE                     u9510:
 26171                           
 26172                           ;mbmc.c: 35:   return new;
 26173                           ;stkvar	_new @ sp[(-4)+-4]
 26174  0183AE  0EF8               	movlw	-8
 26175  0183B0  006F FF8C  F001    	movff	plusw1,btemp
 26176  0183B6  0EF9               	movlw	-7
 26177  0183B8  006F FF8C  F002    	movff	plusw1,btemp+1
 26178  0183BE  0EFA               	movlw	-6
 26179  0183C0  006F FF8C  F003    	movff	plusw1,btemp+2
 26180  0183C6  0EFB               	movlw	-5
 26181  0183C8  006F FF8C  F004    	movff	plusw1,btemp+3
 26182  0183CE  D0BD               	goto	l1835
 26183  0183D0                     l10313:
 26184                           
 26185                           ;mbmc.c: 37:  if (slow == (-1)) {
 26186                           ;stkvar	_slow @ sp[(-4)+-6]
 26187  0183D0  0EF6               	movlw	-10
 26188  0183D2  28E3               	incf	plusw1,w,c
 26189  0183D4  A4D8               	btfss	status,2,c
 26190  0183D6  D012               	goto	l10321
 26191                           
 26192                           ;mbmc.c: 38:   smooth[bn] = 0.0;
 26193                           ;stkvar	_bn @ sp[(-4)+-5]
 26194  0183D8  0EF7               	movlw	-9
 26195  0183DA  50E3               	movf	plusw1,w,c
 26196  0183DC  0D04               	mullw	4
 26197  0183DE  0E00               	movlw	low lp_filter@smooth
 26198  0183E0  24F3               	addwf	243,w,c
 26199  0183E2  6ED9               	movwf	fsr2l,c
 26200  0183E4  0E02               	movlw	high lp_filter@smooth
 26201  0183E6  20F4               	addwfc	prodh,w,c
 26202  0183E8  6EDA               	movwf	fsr2h,c
 26203  0183EA  0E00               	movlw	0
 26204  0183EC  6EDE               	movwf	postinc2,c
 26205  0183EE  0E00               	movlw	0
 26206  0183F0  6EDE               	movwf	postinc2,c
 26207  0183F2  0E00               	movlw	0
 26208  0183F4  6EDE               	movwf	postinc2,c
 26209  0183F6  0E00               	movlw	0
 26210  0183F8  6EDD               	movwf	postdec2,c
 26211  0183FA  D7D9               	goto	u9510
 26212  0183FC                     l10321:
 26213                           
 26214                           ;mbmc.c: 42:  if (slow) {
 26215                           ;stkvar	_slow @ sp[(-4)+-6]
 26216  0183FC  0EF6               	movlw	-10
 26217  0183FE  50E3               	movf	plusw1,w,c
 26218  018400  B4D8               	btfsc	status,2,c
 26219  018402  D006               	goto	l10325
 26220                           
 26221                           ;mbmc.c: 43:   lp_speed = 0.033;
 26222  018404  0E02               	movlw	2
 26223  018406  6E09               	movwf	(btemp+8)^0,c
 26224  018408  0E2B               	movlw	43
 26225  01840A  6E0A               	movwf	(btemp+9)^0,c
 26226  01840C  0E07               	movlw	7
 26227  01840E  D005               	goto	L31
 26228  018410                     l10325:
 26229                           
 26230                           ;mbmc.c: 45:   lp_speed = 0.066;
 26231  018410  0E02               	movlw	2
 26232  018412  6E09               	movwf	(btemp+8)^0,c
 26233  018414  0E2B               	movlw	43
 26234  018416  6E0A               	movwf	(btemp+9)^0,c
 26235  018418  0E87               	movlw	135
 26236  01841A                     L31:
 26237  01841A  6E0B               	movwf	(btemp+10)^0,c
 26238  01841C  0E3D               	movlw	61
 26239  01841E  6E0C               	movwf	(btemp+11)^0,c
 26240                           
 26241                           ;stkvar	_lp_speed @ sp[(-4)+0]
 26242  018420  0EFC               	movlw	-4
 26243  018422  0060  F027  FFE3   	movff	btemp+8,plusw1
 26244  018428  0EFD               	movlw	-3
 26245  01842A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 26246  018430  0EFE               	movlw	-2
 26247  018432  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26248  018438  0EFF               	movlw	-1
 26249  01843A  0060  F033  FFE3   	movff	btemp+11,plusw1
 26250                           
 26251                           ;mbmc.c: 48:  return smooth[bn] = smooth[bn] + ((new - smooth[bn]) * lp_speed);
 26252                           ;stkvar	_bn @ sp[(-4)+-5]
 26253  018440  0EF7               	movlw	-9
 26254  018442  50E3               	movf	plusw1,w,c
 26255  018444  0D04               	mullw	4
 26256  018446  0E00               	movlw	low lp_filter@smooth
 26257  018448  24F3               	addwf	243,w,c
 26258  01844A  6ED9               	movwf	fsr2l,c
 26259  01844C  0E02               	movlw	high lp_filter@smooth
 26260  01844E  20F4               	addwfc	prodh,w,c
 26261  018450  6EDA               	movwf	fsr2h,c
 26262  018452  006F FF7B FFE6     	movff	postinc2,postinc1
 26263  018458  006F FF7B FFE6     	movff	postinc2,postinc1
 26264  01845E  006F FF7B FFE6     	movff	postinc2,postinc1
 26265  018464  006F FF7B FFE6     	movff	postinc2,postinc1
 26266                           
 26267                           ;stkvar	_lp_speed @ sp[(-8)+0]
 26268  01846A  0EF8               	movlw	-8
 26269  01846C  006F FF8F FFE6     	movff	plusw1,postinc1
 26270  018472  006F FF8F FFE6     	movff	plusw1,postinc1
 26271  018478  006F FF8F FFE6     	movff	plusw1,postinc1
 26272  01847E  006F FF8F FFE6     	movff	plusw1,postinc1
 26273                           
 26274                           ;stkvar	_bn @ sp[(-12)+-5]
 26275  018484  0EEF               	movlw	-17
 26276  018486  50E3               	movf	plusw1,w,c
 26277  018488  0D04               	mullw	4
 26278  01848A  0E00               	movlw	low lp_filter@smooth
 26279  01848C  24F3               	addwf	243,w,c
 26280  01848E  6ED9               	movwf	fsr2l,c
 26281  018490  0E02               	movlw	high lp_filter@smooth
 26282  018492  20F4               	addwfc	prodh,w,c
 26283  018494  6EDA               	movwf	fsr2h,c
 26284  018496  006F FF7B FFE6     	movff	postinc2,postinc1
 26285  01849C  006F FF7B FFE6     	movff	postinc2,postinc1
 26286  0184A2  006F FF7B FFE6     	movff	postinc2,postinc1
 26287  0184A8  006F FF7B FFE6     	movff	postinc2,postinc1
 26288                           
 26289                           ;stkvar	_new @ sp[(-16)+-4]
 26290  0184AE  0EEC               	movlw	-20
 26291  0184B0  006F FF8F FFE6     	movff	plusw1,postinc1
 26292  0184B6  006F FF8F FFE6     	movff	plusw1,postinc1
 26293  0184BC  006F FF8F FFE6     	movff	plusw1,postinc1
 26294  0184C2  006F FF8F FFE6     	movff	plusw1,postinc1
 26295  0184C8  EC08  F0D9         	call	___flsub	;wreg free
 26296  0184CC  0060  F007  FFE6   	movff	btemp,postinc1
 26297  0184D2  0060  F00B  FFE6   	movff	btemp+1,postinc1
 26298  0184D8  0060  F00F  FFE6   	movff	btemp+2,postinc1
 26299  0184DE  0060  F013  FFE6   	movff	btemp+3,postinc1
 26300  0184E4  ECA0  F099         	call	___flmul	;wreg free
 26301  0184E8  0060  F007  FFE6   	movff	btemp,postinc1
 26302  0184EE  0060  F00B  FFE6   	movff	btemp+1,postinc1
 26303  0184F4  0060  F00F  FFE6   	movff	btemp+2,postinc1
 26304  0184FA  0060  F013  FFE6   	movff	btemp+3,postinc1
 26305  018500  ECB5  F09D         	call	___fladd	;wreg free
 26306                           
 26307                           ;stkvar	_bn @ sp[(-4)+-5]
 26308  018504  0EF7               	movlw	-9
 26309  018506  50E3               	movf	plusw1,w,c
 26310  018508  0D04               	mullw	4
 26311  01850A  0E00               	movlw	low lp_filter@smooth
 26312  01850C  24F3               	addwf	243,w,c
 26313  01850E  6ED9               	movwf	fsr2l,c
 26314  018510  0E02               	movlw	high lp_filter@smooth
 26315  018512  20F4               	addwfc	prodh,w,c
 26316  018514  6EDA               	movwf	fsr2h,c
 26317  018516  0060  F007  FFDE   	movff	btemp,postinc2
 26318  01851C  0060  F00B  FFDE   	movff	btemp+1,postinc2
 26319  018522  0060  F00F  FFDE   	movff	btemp+2,postinc2
 26320  018528  0060  F013  FFDD   	movff	btemp+3,postdec2
 26321  01852E  52DD               	movf	postdec2,f,c
 26322  018530  52DD               	movf	postdec2,f,c
 26323  018532  006F FF78  F001    	movff	postinc2,btemp
 26324  018538  006F FF78  F002    	movff	postinc2,btemp+1
 26325  01853E  006F FF78  F003    	movff	postinc2,btemp+2
 26326  018544  006F FF78  F004    	movff	postinc2,btemp+3
 26327  01854A                     l1835:
 26328                           
 26329                           ; _lp_filter: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
 26330  01854A  0EF6               	movlw	246
 26331  01854C  26E1               	addwf	fsr1l,f,c
 26332  01854E  0EFF               	movlw	255
 26333  018550  22E2               	addwfc	fsr1h,f,c
 26334  018552  0012               	return		;funcret
 26335  018554                     __end_of_lp_filter:
 26336                           	opt callstack 0
 26337                           
 26338 ;; *************** function ___flsub *****************
 26339 ;; Defined at:
 26340 ;;		line 245 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 26341 ;; Parameters:    Size  Location     Type
 26342 ;;  b               4  [STACK] float 
 26343 ;;  a               4  [STACK] float 
 26344 ;; Auto vars:     Size  Location     Type
 26345 ;;		None
 26346 ;; Return value:  Size  Location     Type
 26347 ;;                  4  [STACK] float 
 26348 ;; Registers used:
 26349 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 26350 ;; Tracked objects:
 26351 ;;		On entry : 0/0
 26352 ;;		On exit  : 0/0
 26353 ;;		Unchanged: 0/0
 26354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26355 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26356 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26357 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26358 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26359 ;;Total ram usage:        0 bytes
 26360 ;; Hardware stack levels used:    1
 26361 ;; Hardware stack levels required when called:   16
 26362 ;; This function calls:
 26363 ;;		___fladd
 26364 ;; This function is called by:
 26365 ;;		_conv_raw_result
 26366 ;;		_lp_filter
 26367 ;;		_calc_model_data
 26368 ;;		_calc_ror_data
 26369 ;;		_esr_check
 26370 ;;		_efgtoa
 26371 ;; This function uses a reentrant model
 26372 ;;
 26373                           
 26374                           	psect	text104
 26375  01B210                     __ptext104:
 26376                           	opt callstack 0
 26377  01B210                     ___flsub:
 26378                           	opt callstack 0
 26379                           
 26380                           ;stkvar	_a @ sp[(0)+-8]
 26381                           
 26382                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26383                           ;incstack = 0
 26384 ;; hardware stack exceeded
 26385  01B210  0EFB               	movlw	-5
 26386  01B212  7EE3               	btg	plusw1,7,c
 26387                           
 26388                           ;stkvar	_a @ sp[(0)+-8]
 26389  01B214  0EF8               	movlw	-8
 26390  01B216  006F FF8F FFE6     	movff	plusw1,postinc1
 26391  01B21C  006F FF8F FFE6     	movff	plusw1,postinc1
 26392  01B222  006F FF8F FFE6     	movff	plusw1,postinc1
 26393  01B228  006F FF8F FFE6     	movff	plusw1,postinc1
 26394                           
 26395                           ;stkvar	_b @ sp[(-4)+-4]
 26396  01B22E  0EF8               	movlw	-8
 26397  01B230  006F FF8F FFE6     	movff	plusw1,postinc1
 26398  01B236  006F FF8F FFE6     	movff	plusw1,postinc1
 26399  01B23C  006F FF8F FFE6     	movff	plusw1,postinc1
 26400  01B242  006F FF8F FFE6     	movff	plusw1,postinc1
 26401  01B248  ECB5  F09D         	call	___fladd	;wreg free
 26402                           
 26403                           ; ___flsub: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 26404  01B24C  0EF8               	movlw	248
 26405  01B24E  26E1               	addwf	fsr1l,f,c
 26406  01B250  0EFF               	movlw	255
 26407  01B252  22E2               	addwfc	fsr1h,f,c
 26408  01B254  0012               	return		;funcret
 26409  01B256                     __end_of___flsub:
 26410                           	opt callstack 0
 26411                           
 26412 ;; *************** function ___fladd *****************
 26413 ;; Defined at:
 26414 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 26415 ;; Parameters:    Size  Location     Type
 26416 ;;  b               4  [STACK] float 
 26417 ;;  a               4  [STACK] float 
 26418 ;; Auto vars:     Size  Location     Type
 26419 ;;  grs             1  [STACK] unsigned char 
 26420 ;;  bexp            1  [STACK] unsigned char 
 26421 ;;  aexp            1  [STACK] unsigned char 
 26422 ;;  signs           1  [STACK] unsigned char 
 26423 ;; Return value:  Size  Location     Type
 26424 ;;                  4  [STACK] unsigned char 
 26425 ;; Registers used:
 26426 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 26427 ;; Tracked objects:
 26428 ;;		On entry : 0/0
 26429 ;;		On exit  : 0/0
 26430 ;;		Unchanged: 0/0
 26431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26432 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26433 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26434 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26435 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26436 ;;Total ram usage:        0 bytes
 26437 ;; Hardware stack levels used:    1
 26438 ;; Hardware stack levels required when called:   15
 26439 ;; This function calls:
 26440 ;;		Nothing
 26441 ;; This function is called by:
 26442 ;;		_main
 26443 ;;		_conv_raw_result
 26444 ;;		_lp_filter
 26445 ;;		_calc_model_data
 26446 ;;		_efgtoa
 26447 ;;		___asfladd
 26448 ;;		___flsub
 26449 ;; This function uses a reentrant model
 26450 ;;
 26451                           
 26452                           	psect	text105
 26453  013B6A                     __ptext105:
 26454                           	opt callstack 0
 26455  013B6A                     ___fladd:
 26456                           	opt callstack 0
 26457                           
 26458                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26459  013B6A  52E6               	movf	postinc1,f,c
 26460  013B6C  52E6               	movf	postinc1,f,c
 26461  013B6E  52E6               	movf	postinc1,f,c
 26462  013B70  52E6               	movf	postinc1,f,c
 26463                           
 26464                           ;stkvar	_b @ sp[(-4)+-4]
 26465                           
 26466                           ;incstack = 0
 26467 ;; hardware stack exceeded
 26468  013B72  0EFB               	movlw	251
 26469  013B74  24E1               	addwf	fsr1l,w,c
 26470  013B76  6ED9               	movwf	fsr2l,c
 26471  013B78  0EFF               	movlw	255
 26472  013B7A  20E2               	addwfc	fsr1h,w,c
 26473  013B7C  6EDA               	movwf	fsr2h,c
 26474  013B7E  50DF               	movf	indf2,w,c
 26475  013B80  6E0C               	movwf	(btemp+11)^0,c
 26476  013B82  0E80               	movlw	128
 26477  013B84  160C               	andwf	(btemp+11)^0,f,c
 26478                           
 26479                           ;stkvar	_signs @ sp[(-4)+3]
 26480  013B86  0EFF               	movlw	-1
 26481  013B88  0060  F033  FFE3   	movff	btemp+11,plusw1
 26482                           
 26483                           ;stkvar	_b @ sp[(-4)+-4]
 26484  013B8E  0EFB               	movlw	251
 26485  013B90  24E1               	addwf	fsr1l,w,c
 26486  013B92  6ED9               	movwf	fsr2l,c
 26487  013B94  0EFF               	movlw	255
 26488  013B96  20E2               	addwfc	fsr1h,w,c
 26489  013B98  6EDA               	movwf	fsr2h,c
 26490  013B9A  50DF               	movf	indf2,w,c
 26491  013B9C  6E0C               	movwf	(btemp+11)^0,c
 26492  013B9E  90D8               	bcf	status,0,c
 26493  013BA0  340C               	rlcf	(btemp+11)^0,w,c
 26494  013BA2  6E0B               	movwf	(btemp+10)^0,c
 26495                           
 26496                           ;stkvar	_bexp @ sp[(-4)+1]
 26497  013BA4  0EFD               	movlw	-3
 26498  013BA6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26499                           
 26500                           ;stkvar	_b @ sp[(-4)+-4]
 26501  013BAC  0EFA               	movlw	250
 26502  013BAE  24E1               	addwf	fsr1l,w,c
 26503  013BB0  6ED9               	movwf	fsr2l,c
 26504  013BB2  0EFF               	movlw	255
 26505  013BB4  20E2               	addwfc	fsr1h,w,c
 26506  013BB6  6EDA               	movwf	fsr2h,c
 26507  013BB8  AEDF               	btfss	indf2,7,c
 26508  013BBA  D002               	goto	l7645
 26509                           
 26510                           ;stkvar	_bexp @ sp[(-4)+1]
 26511  013BBC  0EFD               	movlw	-3
 26512  013BBE  80E3               	bsf	plusw1,0,c
 26513  013BC0                     l7645:
 26514                           
 26515                           ;stkvar	_bexp @ sp[(-4)+1]
 26516  013BC0  0EFD               	movlw	-3
 26517  013BC2  50E3               	movf	plusw1,w,c
 26518  013BC4  B4D8               	btfsc	status,2,c
 26519  013BC6  D027               	goto	l7655
 26520                           
 26521                           ;stkvar	_bexp @ sp[(-4)+1]
 26522  013BC8  0EFD               	movlw	-3
 26523  013BCA  28E3               	incf	plusw1,w,c
 26524  013BCC  A4D8               	btfss	status,2,c
 26525  013BCE  D018               	goto	l7651
 26526  013BD0  0E00               	movlw	0
 26527  013BD2  6E09               	movwf	(btemp+8)^0,c
 26528  013BD4  0E00               	movlw	0
 26529  013BD6  6E0A               	movwf	(btemp+9)^0,c
 26530  013BD8  0E00               	movlw	0
 26531  013BDA  6E0B               	movwf	(btemp+10)^0,c
 26532  013BDC  0E00               	movlw	0
 26533  013BDE  6E0C               	movwf	(btemp+11)^0,c
 26534                           
 26535                           ;stkvar	_b @ sp[(-4)+-4]
 26536  013BE0  0EF8               	movlw	-8
 26537  013BE2  0060  F027  FFE3   	movff	btemp+8,plusw1
 26538  013BE8  0EF9               	movlw	-7
 26539  013BEA  0060  F02B  FFE3   	movff	btemp+9,plusw1
 26540  013BF0  0EFA               	movlw	-6
 26541  013BF2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26542  013BF8  0EFB               	movlw	-5
 26543  013BFA  0060  F033  FFE3   	movff	btemp+11,plusw1
 26544  013C00                     l7651:
 26545                           
 26546                           ;stkvar	_b @ sp[(-4)+-4]
 26547  013C00  0EFA               	movlw	-6
 26548  013C02  8EE3               	bsf	plusw1,7,c
 26549                           
 26550                           ;stkvar	_b @ sp[(-4)+-4]
 26551  013C04  0EFB               	movlw	251
 26552  013C06  24E1               	addwf	fsr1l,w,c
 26553  013C08  6ED9               	movwf	fsr2l,c
 26554  013C0A  0EFF               	movlw	255
 26555  013C0C  20E2               	addwfc	fsr1h,w,c
 26556  013C0E  6EDA               	movwf	fsr2h,c
 26557  013C10  0E00               	movlw	0
 26558  013C12  6EDF               	movwf	indf2,c
 26559  013C14  D018               	goto	l7657
 26560  013C16                     l7655:
 26561  013C16  0E00               	movlw	0
 26562  013C18  6E09               	movwf	(btemp+8)^0,c
 26563  013C1A  0E00               	movlw	0
 26564  013C1C  6E0A               	movwf	(btemp+9)^0,c
 26565  013C1E  0E00               	movlw	0
 26566  013C20  6E0B               	movwf	(btemp+10)^0,c
 26567  013C22  0E00               	movlw	0
 26568  013C24  6E0C               	movwf	(btemp+11)^0,c
 26569                           
 26570                           ;stkvar	_b @ sp[(-4)+-4]
 26571  013C26  0EF8               	movlw	-8
 26572  013C28  0060  F027  FFE3   	movff	btemp+8,plusw1
 26573  013C2E  0EF9               	movlw	-7
 26574  013C30  0060  F02B  FFE3   	movff	btemp+9,plusw1
 26575  013C36  0EFA               	movlw	-6
 26576  013C38  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26577  013C3E  0EFB               	movlw	-5
 26578  013C40  0060  F033  FFE3   	movff	btemp+11,plusw1
 26579  013C46                     l7657:
 26580                           
 26581                           ;stkvar	_a @ sp[(-4)+-8]
 26582  013C46  0EF7               	movlw	247
 26583  013C48  24E1               	addwf	fsr1l,w,c
 26584  013C4A  6ED9               	movwf	fsr2l,c
 26585  013C4C  0EFF               	movlw	255
 26586  013C4E  20E2               	addwfc	fsr1h,w,c
 26587  013C50  6EDA               	movwf	fsr2h,c
 26588  013C52  50DF               	movf	indf2,w,c
 26589  013C54  6E0C               	movwf	(btemp+11)^0,c
 26590  013C56  0E80               	movlw	128
 26591  013C58  160C               	andwf	(btemp+11)^0,f,c
 26592                           
 26593                           ;stkvar	_aexp @ sp[(-4)+2]
 26594  013C5A  0EFE               	movlw	-2
 26595  013C5C  0060  F033  FFE3   	movff	btemp+11,plusw1
 26596                           
 26597                           ;stkvar	_signs @ sp[(-4)+3]
 26598                           ;stkvar	_aexp @ sp[(-4)+2]
 26599  013C62  50E1               	movf	fsr1l,w,c
 26600  013C64  0FFE               	addlw	-2
 26601  013C66  6ED9               	movwf	fsr2l,c
 26602  013C68  50E2               	movf	fsr1h,w,c
 26603  013C6A  6EDA               	movwf	fsr2h,c
 26604  013C6C  0EFF               	movlw	255
 26605  013C6E  22DA               	addwfc	fsr2h,f,c
 26606  013C70  0EFF               	movlw	-1
 26607  013C72  50E3               	movf	plusw1,w,c
 26608  013C74  18DE               	xorwf	postinc2,w,c
 26609  013C76  B4D8               	btfsc	status,2,c
 26610  013C78  D002               	goto	l7663
 26611                           
 26612                           ;stkvar	_signs @ sp[(-4)+3]
 26613  013C7A  0EFF               	movlw	-1
 26614  013C7C  8CE3               	bsf	plusw1,6,c
 26615  013C7E                     l7663:
 26616                           
 26617                           ;stkvar	_a @ sp[(-4)+-8]
 26618  013C7E  0EF7               	movlw	247
 26619  013C80  24E1               	addwf	fsr1l,w,c
 26620  013C82  6ED9               	movwf	fsr2l,c
 26621  013C84  0EFF               	movlw	255
 26622  013C86  20E2               	addwfc	fsr1h,w,c
 26623  013C88  6EDA               	movwf	fsr2h,c
 26624  013C8A  50DF               	movf	indf2,w,c
 26625  013C8C  6E0C               	movwf	(btemp+11)^0,c
 26626  013C8E  90D8               	bcf	status,0,c
 26627  013C90  340C               	rlcf	(btemp+11)^0,w,c
 26628  013C92  6E0B               	movwf	(btemp+10)^0,c
 26629                           
 26630                           ;stkvar	_aexp @ sp[(-4)+2]
 26631  013C94  0EFE               	movlw	-2
 26632  013C96  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26633                           
 26634                           ;stkvar	_a @ sp[(-4)+-8]
 26635  013C9C  0EF6               	movlw	246
 26636  013C9E  24E1               	addwf	fsr1l,w,c
 26637  013CA0  6ED9               	movwf	fsr2l,c
 26638  013CA2  0EFF               	movlw	255
 26639  013CA4  20E2               	addwfc	fsr1h,w,c
 26640  013CA6  6EDA               	movwf	fsr2h,c
 26641  013CA8  AEDF               	btfss	indf2,7,c
 26642  013CAA  D002               	goto	l7669
 26643                           
 26644                           ;stkvar	_aexp @ sp[(-4)+2]
 26645  013CAC  0EFE               	movlw	-2
 26646  013CAE  80E3               	bsf	plusw1,0,c
 26647  013CB0                     l7669:
 26648                           
 26649                           ;stkvar	_aexp @ sp[(-4)+2]
 26650  013CB0  0EFE               	movlw	-2
 26651  013CB2  50E3               	movf	plusw1,w,c
 26652  013CB4  B4D8               	btfsc	status,2,c
 26653  013CB6  D027               	goto	l7679
 26654                           
 26655                           ;stkvar	_aexp @ sp[(-4)+2]
 26656  013CB8  0EFE               	movlw	-2
 26657  013CBA  28E3               	incf	plusw1,w,c
 26658  013CBC  A4D8               	btfss	status,2,c
 26659  013CBE  D018               	goto	l7675
 26660  013CC0  0E00               	movlw	0
 26661  013CC2  6E09               	movwf	(btemp+8)^0,c
 26662  013CC4  0E00               	movlw	0
 26663  013CC6  6E0A               	movwf	(btemp+9)^0,c
 26664  013CC8  0E00               	movlw	0
 26665  013CCA  6E0B               	movwf	(btemp+10)^0,c
 26666  013CCC  0E00               	movlw	0
 26667  013CCE  6E0C               	movwf	(btemp+11)^0,c
 26668                           
 26669                           ;stkvar	_a @ sp[(-4)+-8]
 26670  013CD0  0EF4               	movlw	-12
 26671  013CD2  0060  F027  FFE3   	movff	btemp+8,plusw1
 26672  013CD8  0EF5               	movlw	-11
 26673  013CDA  0060  F02B  FFE3   	movff	btemp+9,plusw1
 26674  013CE0  0EF6               	movlw	-10
 26675  013CE2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26676  013CE8  0EF7               	movlw	-9
 26677  013CEA  0060  F033  FFE3   	movff	btemp+11,plusw1
 26678  013CF0                     l7675:
 26679                           
 26680                           ;stkvar	_a @ sp[(-4)+-8]
 26681  013CF0  0EF6               	movlw	-10
 26682  013CF2  8EE3               	bsf	plusw1,7,c
 26683                           
 26684                           ;stkvar	_a @ sp[(-4)+-8]
 26685  013CF4  0EF7               	movlw	247
 26686  013CF6  24E1               	addwf	fsr1l,w,c
 26687  013CF8  6ED9               	movwf	fsr2l,c
 26688  013CFA  0EFF               	movlw	255
 26689  013CFC  20E2               	addwfc	fsr1h,w,c
 26690  013CFE  6EDA               	movwf	fsr2h,c
 26691  013D00  0E00               	movlw	0
 26692  013D02  6EDF               	movwf	indf2,c
 26693  013D04  D018               	goto	l7681
 26694  013D06                     l7679:
 26695  013D06  0E00               	movlw	0
 26696  013D08  6E09               	movwf	(btemp+8)^0,c
 26697  013D0A  0E00               	movlw	0
 26698  013D0C  6E0A               	movwf	(btemp+9)^0,c
 26699  013D0E  0E00               	movlw	0
 26700  013D10  6E0B               	movwf	(btemp+10)^0,c
 26701  013D12  0E00               	movlw	0
 26702  013D14  6E0C               	movwf	(btemp+11)^0,c
 26703                           
 26704                           ;stkvar	_a @ sp[(-4)+-8]
 26705  013D16  0EF4               	movlw	-12
 26706  013D18  0060  F027  FFE3   	movff	btemp+8,plusw1
 26707  013D1E  0EF5               	movlw	-11
 26708  013D20  0060  F02B  FFE3   	movff	btemp+9,plusw1
 26709  013D26  0EF6               	movlw	-10
 26710  013D28  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26711  013D2E  0EF7               	movlw	-9
 26712  013D30  0060  F033  FFE3   	movff	btemp+11,plusw1
 26713  013D36                     l7681:
 26714                           
 26715                           ;stkvar	_bexp @ sp[(-4)+1]
 26716                           ;stkvar	_aexp @ sp[(-4)+2]
 26717  013D36  50E1               	movf	fsr1l,w,c
 26718  013D38  0FFE               	addlw	-2
 26719  013D3A  6ED9               	movwf	fsr2l,c
 26720  013D3C  50E2               	movf	fsr1h,w,c
 26721  013D3E  6EDA               	movwf	fsr2h,c
 26722  013D40  0EFF               	movlw	255
 26723  013D42  22DA               	addwfc	fsr2h,f,c
 26724  013D44  0EFD               	movlw	-3
 26725  013D46  50E3               	movf	plusw1,w,c
 26726  013D48  5CDE               	subwf	postinc2,w,c
 26727  013D4A  B0D8               	btfsc	status,0,c
 26728  013D4C  D0A4               	goto	l7717
 26729                           
 26730                           ;stkvar	_signs @ sp[(-4)+3]
 26731  013D4E  0EFF               	movlw	-1
 26732  013D50  ACE3               	btfss	plusw1,6,c
 26733  013D52  D002               	goto	l7687
 26734                           
 26735                           ;stkvar	_signs @ sp[(-4)+3]
 26736  013D54  0EFF               	movlw	-1
 26737  013D56  7EE3               	btg	plusw1,7,c
 26738  013D58                     l7687:
 26739                           
 26740                           ;stkvar	_bexp @ sp[(-4)+1]
 26741                           ;stkvar	_grs @ sp[(-4)+0]
 26742  013D58  0EFD               	movlw	-3
 26743  013D5A  006F FF8C  F001    	movff	plusw1,btemp
 26744  013D60  0EFC               	movlw	-4
 26745  013D62  0060  F007  FFE3   	movff	btemp,plusw1
 26746                           
 26747                           ;stkvar	_aexp @ sp[(-4)+2]
 26748                           ;stkvar	_bexp @ sp[(-4)+1]
 26749  013D68  0EFE               	movlw	-2
 26750  013D6A  006F FF8C  F001    	movff	plusw1,btemp
 26751  013D70  0EFD               	movlw	-3
 26752  013D72  0060  F007  FFE3   	movff	btemp,plusw1
 26753                           
 26754                           ;stkvar	_grs @ sp[(-4)+0]
 26755                           ;stkvar	_aexp @ sp[(-4)+2]
 26756  013D78  0EFC               	movlw	-4
 26757  013D7A  006F FF8C  F001    	movff	plusw1,btemp
 26758  013D80  0EFE               	movlw	-2
 26759  013D82  0060  F007  FFE3   	movff	btemp,plusw1
 26760                           
 26761                           ;stkvar	_b @ sp[(-4)+-4]
 26762                           ;stkvar	_grs @ sp[(-4)+0]
 26763  013D88  0EF8               	movlw	-8
 26764  013D8A  006F FF8C  F001    	movff	plusw1,btemp
 26765  013D90  0EFC               	movlw	-4
 26766  013D92  0060  F007  FFE3   	movff	btemp,plusw1
 26767                           
 26768                           ;stkvar	_a @ sp[(-4)+-8]
 26769                           ;stkvar	_b @ sp[(-4)+-4]
 26770  013D98  0EF4               	movlw	-12
 26771  013D9A  006F FF8C  F001    	movff	plusw1,btemp
 26772  013DA0  0EF8               	movlw	-8
 26773  013DA2  0060  F007  FFE3   	movff	btemp,plusw1
 26774                           
 26775                           ;stkvar	_grs @ sp[(-4)+0]
 26776                           ;stkvar	_a @ sp[(-4)+-8]
 26777  013DA8  0EFC               	movlw	-4
 26778  013DAA  006F FF8C  F001    	movff	plusw1,btemp
 26779  013DB0  0EF4               	movlw	-12
 26780  013DB2  0060  F007  FFE3   	movff	btemp,plusw1
 26781                           
 26782                           ;stkvar	_b @ sp[(-4)+-4]
 26783  013DB8  0EF9               	movlw	249
 26784  013DBA  24E1               	addwf	fsr1l,w,c
 26785  013DBC  6ED9               	movwf	fsr2l,c
 26786  013DBE  0EFF               	movlw	255
 26787  013DC0  20E2               	addwfc	fsr1h,w,c
 26788  013DC2  6EDA               	movwf	fsr2h,c
 26789  013DC4  50DF               	movf	indf2,w,c
 26790  013DC6  6E0C               	movwf	(btemp+11)^0,c
 26791                           
 26792                           ;stkvar	_grs @ sp[(-4)+0]
 26793  013DC8  0EFC               	movlw	-4
 26794  013DCA  0060  F033  FFE3   	movff	btemp+11,plusw1
 26795                           
 26796                           ;stkvar	_a @ sp[(-4)+-8]
 26797  013DD0  0EF5               	movlw	245
 26798  013DD2  24E1               	addwf	fsr1l,w,c
 26799  013DD4  6ED9               	movwf	fsr2l,c
 26800  013DD6  0EFF               	movlw	255
 26801  013DD8  20E2               	addwfc	fsr1h,w,c
 26802  013DDA  6EDA               	movwf	fsr2h,c
 26803                           
 26804                           ;stkvar	_b @ sp[(-4)+-4]
 26805  013DDC  0EF9               	movlw	249
 26806  013DDE  24E1               	addwf	fsr1l,w,c
 26807  013DE0  6EE9               	movwf	fsr0l,c
 26808  013DE2  0EFF               	movlw	255
 26809  013DE4  20E2               	addwfc	fsr1h,w,c
 26810  013DE6  6EEA               	movwf	fsr0h,c
 26811  013DE8  006F FF7F FFEF     	movff	indf2,indf0
 26812                           
 26813                           ;stkvar	_grs @ sp[(-4)+0]
 26814                           ;stkvar	_a @ sp[(-4)+-8]
 26815  013DEE  0EF5               	movlw	245
 26816  013DF0  24E1               	addwf	fsr1l,w,c
 26817  013DF2  6ED9               	movwf	fsr2l,c
 26818  013DF4  0EFF               	movlw	255
 26819  013DF6  20E2               	addwfc	fsr1h,w,c
 26820  013DF8  6EDA               	movwf	fsr2h,c
 26821  013DFA  0EFC               	movlw	-4
 26822  013DFC  006F FF8F FFDF     	movff	plusw1,indf2
 26823                           
 26824                           ;stkvar	_b @ sp[(-4)+-4]
 26825  013E02  0EFA               	movlw	250
 26826  013E04  24E1               	addwf	fsr1l,w,c
 26827  013E06  6ED9               	movwf	fsr2l,c
 26828  013E08  0EFF               	movlw	255
 26829  013E0A  20E2               	addwfc	fsr1h,w,c
 26830  013E0C  6EDA               	movwf	fsr2h,c
 26831  013E0E  50DF               	movf	indf2,w,c
 26832  013E10  6E0C               	movwf	(btemp+11)^0,c
 26833                           
 26834                           ;stkvar	_grs @ sp[(-4)+0]
 26835  013E12  0EFC               	movlw	-4
 26836  013E14  0060  F033  FFE3   	movff	btemp+11,plusw1
 26837                           
 26838                           ;stkvar	_a @ sp[(-4)+-8]
 26839  013E1A  0EF6               	movlw	246
 26840  013E1C  24E1               	addwf	fsr1l,w,c
 26841  013E1E  6ED9               	movwf	fsr2l,c
 26842  013E20  0EFF               	movlw	255
 26843  013E22  20E2               	addwfc	fsr1h,w,c
 26844  013E24  6EDA               	movwf	fsr2h,c
 26845                           
 26846                           ;stkvar	_b @ sp[(-4)+-4]
 26847  013E26  0EFA               	movlw	250
 26848  013E28  24E1               	addwf	fsr1l,w,c
 26849  013E2A  6EE9               	movwf	fsr0l,c
 26850  013E2C  0EFF               	movlw	255
 26851  013E2E  20E2               	addwfc	fsr1h,w,c
 26852  013E30  6EEA               	movwf	fsr0h,c
 26853  013E32  006F FF7F FFEF     	movff	indf2,indf0
 26854                           
 26855                           ;stkvar	_grs @ sp[(-4)+0]
 26856                           ;stkvar	_a @ sp[(-4)+-8]
 26857  013E38  0EF6               	movlw	246
 26858  013E3A  24E1               	addwf	fsr1l,w,c
 26859  013E3C  6ED9               	movwf	fsr2l,c
 26860  013E3E  0EFF               	movlw	255
 26861  013E40  20E2               	addwfc	fsr1h,w,c
 26862  013E42  6EDA               	movwf	fsr2h,c
 26863  013E44  0EFC               	movlw	-4
 26864  013E46  006F FF8F FFDF     	movff	plusw1,indf2
 26865                           
 26866                           ;stkvar	_b @ sp[(-4)+-4]
 26867  013E4C  0EFB               	movlw	251
 26868  013E4E  24E1               	addwf	fsr1l,w,c
 26869  013E50  6ED9               	movwf	fsr2l,c
 26870  013E52  0EFF               	movlw	255
 26871  013E54  20E2               	addwfc	fsr1h,w,c
 26872  013E56  6EDA               	movwf	fsr2h,c
 26873  013E58  50DF               	movf	indf2,w,c
 26874  013E5A  6E0C               	movwf	(btemp+11)^0,c
 26875                           
 26876                           ;stkvar	_grs @ sp[(-4)+0]
 26877  013E5C  0EFC               	movlw	-4
 26878  013E5E  0060  F033  FFE3   	movff	btemp+11,plusw1
 26879                           
 26880                           ;stkvar	_a @ sp[(-4)+-8]
 26881  013E64  0EF7               	movlw	247
 26882  013E66  24E1               	addwf	fsr1l,w,c
 26883  013E68  6ED9               	movwf	fsr2l,c
 26884  013E6A  0EFF               	movlw	255
 26885  013E6C  20E2               	addwfc	fsr1h,w,c
 26886  013E6E  6EDA               	movwf	fsr2h,c
 26887                           
 26888                           ;stkvar	_b @ sp[(-4)+-4]
 26889  013E70  0EFB               	movlw	251
 26890  013E72  24E1               	addwf	fsr1l,w,c
 26891  013E74  6EE9               	movwf	fsr0l,c
 26892  013E76  0EFF               	movlw	255
 26893  013E78  20E2               	addwfc	fsr1h,w,c
 26894  013E7A  6EEA               	movwf	fsr0h,c
 26895  013E7C  006F FF7F FFEF     	movff	indf2,indf0
 26896                           
 26897                           ;stkvar	_grs @ sp[(-4)+0]
 26898                           ;stkvar	_a @ sp[(-4)+-8]
 26899  013E82  0EF7               	movlw	247
 26900  013E84  24E1               	addwf	fsr1l,w,c
 26901  013E86  6ED9               	movwf	fsr2l,c
 26902  013E88  0EFF               	movlw	255
 26903  013E8A  20E2               	addwfc	fsr1h,w,c
 26904  013E8C  6EDA               	movwf	fsr2h,c
 26905  013E8E  0EFC               	movlw	-4
 26906  013E90  006F FF8F FFDF     	movff	plusw1,indf2
 26907  013E96                     l7717:
 26908                           
 26909                           ;stkvar	_grs @ sp[(-4)+0]
 26910  013E96  0EFC               	movlw	-4
 26911  013E98  6AE3               	clrf	plusw1,c
 26912                           
 26913                           ;stkvar	_aexp @ sp[(-4)+2]
 26914  013E9A  0EFE               	movlw	-2
 26915  013E9C  50E3               	movf	plusw1,w,c
 26916  013E9E  6E0B               	movwf	(btemp+10)^0,c
 26917  013EA0  6A0C               	clrf	(btemp+11)^0,c
 26918                           
 26919                           ;stkvar	_bexp @ sp[(-4)+1]
 26920  013EA2  0EFD               	movlw	-3
 26921  013EA4  50E3               	movf	plusw1,w,c
 26922  013EA6  5E0B               	subwf	(btemp+10)^0,f,c
 26923  013EA8  0E00               	movlw	0
 26924  013EAA  5A0C               	subwfb	(btemp+11)^0,f,c
 26925  013EAC  BE0C               	btfsc	(btemp+11)^0,7,c
 26926  013EAE  D062               	goto	l7741
 26927  013EB0  500C               	movf	(btemp+11)^0,w,c
 26928  013EB2  E104               	bnz	u5520
 26929  013EB4  0E1A               	movlw	26
 26930  013EB6  5C0B               	subwf	(btemp+10)^0,w,c
 26931  013EB8  A0D8               	btfss	status,0,c
 26932  013EBA  D05C               	goto	l7741
 26933  013EBC                     u5520:
 26934                           
 26935                           ;stkvar	_b @ sp[(-4)+-4]
 26936  013EBC  0EF8               	movlw	-8
 26937  013EBE  50E3               	movf	plusw1,w,c
 26938  013EC0  E10A               	bnz	u5531
 26939  013EC2  0EF9               	movlw	-7
 26940  013EC4  50E3               	movf	plusw1,w,c
 26941  013EC6  E107               	bnz	u5531
 26942  013EC8  0EFA               	movlw	-6
 26943  013ECA  50E3               	movf	plusw1,w,c
 26944  013ECC  E104               	bnz	u5531
 26945  013ECE  0EFB               	movlw	-5
 26946  013ED0  50E3               	movf	plusw1,w,c
 26947  013ED2  B4D8               	btfsc	status,2,c
 26948  013ED4  D003               	goto	u5530
 26949  013ED6                     u5531:
 26950  013ED6  6A0C               	clrf	(btemp+11)^0,c
 26951  013ED8  2A0C               	incf	(btemp+11)^0,f,c
 26952  013EDA  D001               	goto	u5548
 26953  013EDC                     u5530:
 26954  013EDC  6A0C               	clrf	(btemp+11)^0,c
 26955  013EDE                     u5548:
 26956                           
 26957                           ;stkvar	_grs @ sp[(-4)+0]
 26958  013EDE  0EFC               	movlw	-4
 26959  013EE0  0060  F033  FFE3   	movff	btemp+11,plusw1
 26960                           
 26961                           ;stkvar	_b @ sp[(-4)+-4]
 26962  013EE6  0EF8               	movlw	-8
 26963  013EE8  6AE3               	clrf	plusw1,c
 26964  013EEA  0EF9               	movlw	-7
 26965  013EEC  6AE3               	clrf	plusw1,c
 26966  013EEE  0EFA               	movlw	-6
 26967  013EF0  6AE3               	clrf	plusw1,c
 26968  013EF2  0EFB               	movlw	-5
 26969  013EF4  6AE3               	clrf	plusw1,c
 26970                           
 26971                           ;stkvar	_aexp @ sp[(-4)+2]
 26972                           ;stkvar	_bexp @ sp[(-4)+1]
 26973  013EF6  0EFE               	movlw	-2
 26974  013EF8  006F FF8C  F001    	movff	plusw1,btemp
 26975  013EFE  0EFD               	movlw	-3
 26976  013F00  0060  F007  FFE3   	movff	btemp,plusw1
 26977  013F06  D042               	goto	u5580
 26978  013F08                     l7727:
 26979                           
 26980                           ;stkvar	_grs @ sp[(-4)+0]
 26981  013F08  0EFC               	movlw	-4
 26982  013F0A  A0E3               	btfss	plusw1,0,c
 26983  013F0C  D00D               	goto	l7731
 26984                           
 26985                           ;stkvar	_grs @ sp[(-4)+0]
 26986  013F0E  0EFC               	movlw	-4
 26987  013F10  006F FF8C  F00C    	movff	plusw1,btemp+11
 26988  013F16  90D8               	bcf	status,0,c
 26989  013F18  320C               	rrcf	(btemp+11)^0,f,c
 26990  013F1A  0E01               	movlw	1
 26991  013F1C  120C               	iorwf	(btemp+11)^0,f,c
 26992                           
 26993                           ;stkvar	_grs @ sp[(-4)+0]
 26994  013F1E  0EFC               	movlw	-4
 26995  013F20  0060  F033  FFE3   	movff	btemp+11,plusw1
 26996  013F26  D009               	goto	l7733
 26997  013F28                     l7731:
 26998                           
 26999                           ;stkvar	_grs @ sp[(-4)+0]
 27000  013F28  50E1               	movf	fsr1l,w,c
 27001  013F2A  0FFC               	addlw	-4
 27002  013F2C  6ED9               	movwf	fsr2l,c
 27003  013F2E  50E2               	movf	fsr1h,w,c
 27004  013F30  6EDA               	movwf	fsr2h,c
 27005  013F32  0EFF               	movlw	255
 27006  013F34  22DA               	addwfc	fsr2h,f,c
 27007  013F36  90D8               	bcf	status,0,c
 27008  013F38  32DF               	rrcf	indf2,f,c
 27009  013F3A                     l7733:
 27010                           
 27011                           ;stkvar	_b @ sp[(-4)+-4]
 27012  013F3A  0EF8               	movlw	-8
 27013  013F3C  A0E3               	btfss	plusw1,0,c
 27014  013F3E  D002               	goto	l7737
 27015                           
 27016                           ;stkvar	_grs @ sp[(-4)+0]
 27017  013F40  0EFC               	movlw	-4
 27018  013F42  8EE3               	bsf	plusw1,7,c
 27019  013F44                     l7737:
 27020  013F44  0E01               	movlw	1
 27021  013F46  6E0C               	movwf	(btemp+11)^0,c
 27022                           
 27023                           ;stkvar	_b @ sp[(-4)+-4]
 27024  013F48  50E1               	movf	fsr1l,w,c
 27025  013F4A  0FF8               	addlw	-8
 27026  013F4C  6ED9               	movwf	fsr2l,c
 27027  013F4E  50E2               	movf	fsr1h,w,c
 27028  013F50  6EDA               	movwf	fsr2h,c
 27029  013F52  0EFF               	movlw	255
 27030  013F54  22DA               	addwfc	fsr2h,f,c
 27031  013F56  280C               	incf	(btemp+11)^0,w,c
 27032  013F58  52DE               	movf	postinc2,f,c
 27033  013F5A  D008               	goto	u5570
 27034  013F5C                     u5575:
 27035  013F5C  52DE               	movf	postinc2,f,c
 27036  013F5E  90D8               	bcf	status,0,c
 27037  013F60  BEDC               	btfsc	preinc2,7,c
 27038  013F62  80D8               	bsf	status,0,c
 27039  013F64  32DD               	rrcf	postdec2,f,c
 27040  013F66  32DD               	rrcf	postdec2,f,c
 27041  013F68  32DD               	rrcf	postdec2,f,c
 27042  013F6A  32DE               	rrcf	postinc2,f,c
 27043  013F6C                     u5570:
 27044  013F6C  2EE8               	decfsz	wreg,f,c
 27045  013F6E  D7F6               	goto	u5575
 27046                           
 27047                           ;stkvar	_bexp @ sp[(-4)+1]
 27048  013F70  0EFD               	movlw	-3
 27049  013F72  2AE3               	incf	plusw1,f,c
 27050  013F74                     l7741:
 27051                           
 27052                           ;stkvar	_aexp @ sp[(-4)+2]
 27053                           ;stkvar	_bexp @ sp[(-4)+1]
 27054  013F74  50E1               	movf	fsr1l,w,c
 27055  013F76  0FFD               	addlw	-3
 27056  013F78  6ED9               	movwf	fsr2l,c
 27057  013F7A  50E2               	movf	fsr1h,w,c
 27058  013F7C  6EDA               	movwf	fsr2h,c
 27059  013F7E  0EFF               	movlw	255
 27060  013F80  22DA               	addwfc	fsr2h,f,c
 27061  013F82  0EFE               	movlw	-2
 27062  013F84  50E3               	movf	plusw1,w,c
 27063  013F86  5CDE               	subwf	postinc2,w,c
 27064  013F88  A0D8               	btfss	status,0,c
 27065  013F8A  D7BE               	goto	l7727
 27066  013F8C                     u5580:
 27067                           
 27068                           ;stkvar	_signs @ sp[(-4)+3]
 27069  013F8C  0EFF               	movlw	-1
 27070  013F8E  BCE3               	btfsc	plusw1,6,c
 27071  013F90  D066               	goto	l7769
 27072                           
 27073                           ;stkvar	_bexp @ sp[(-4)+1]
 27074  013F92  0EFD               	movlw	-3
 27075  013F94  50E3               	movf	plusw1,w,c
 27076  013F96  B4D8               	btfsc	status,2,c
 27077  013F98  D0F2               	goto	u5680
 27078                           
 27079                           ;stkvar	_a @ sp[(-4)+-8]
 27080                           ;stkvar	_b @ sp[(-4)+-4]
 27081  013F9A  0EF8               	movlw	-8
 27082  013F9C  50E3               	movf	plusw1,w,c
 27083  013F9E  6E01               	movwf	btemp^0,c
 27084  013FA0  0EF4               	movlw	-12
 27085  013FA2  50E3               	movf	plusw1,w,c
 27086  013FA4  2601               	addwf	btemp^0,f,c
 27087  013FA6  0EF8               	movlw	-8
 27088  013FA8  0060  F007  FFE3   	movff	btemp,plusw1
 27089  013FAE  0EF9               	movlw	-7
 27090  013FB0  50E3               	movf	plusw1,w,c
 27091  013FB2  6E01               	movwf	btemp^0,c
 27092  013FB4  0EF5               	movlw	-11
 27093  013FB6  50E3               	movf	plusw1,w,c
 27094  013FB8  2201               	addwfc	btemp^0,f,c
 27095  013FBA  0EF9               	movlw	-7
 27096  013FBC  0060  F007  FFE3   	movff	btemp,plusw1
 27097  013FC2  0EFA               	movlw	-6
 27098  013FC4  50E3               	movf	plusw1,w,c
 27099  013FC6  6E01               	movwf	btemp^0,c
 27100  013FC8  0EF6               	movlw	-10
 27101  013FCA  50E3               	movf	plusw1,w,c
 27102  013FCC  2201               	addwfc	btemp^0,f,c
 27103  013FCE  0EFA               	movlw	-6
 27104  013FD0  0060  F007  FFE3   	movff	btemp,plusw1
 27105  013FD6  0EFB               	movlw	-5
 27106  013FD8  50E3               	movf	plusw1,w,c
 27107  013FDA  6E01               	movwf	btemp^0,c
 27108  013FDC  0EF7               	movlw	-9
 27109  013FDE  50E3               	movf	plusw1,w,c
 27110  013FE0  2201               	addwfc	btemp^0,f,c
 27111  013FE2  0EFB               	movlw	-5
 27112  013FE4  0060  F007  FFE3   	movff	btemp,plusw1
 27113                           
 27114                           ;stkvar	_b @ sp[(-4)+-4]
 27115  013FEA  0EFB               	movlw	-5
 27116  013FEC  A0E3               	btfss	plusw1,0,c
 27117  013FEE  D101               	goto	u5720
 27118                           
 27119                           ;stkvar	_grs @ sp[(-4)+0]
 27120  013FF0  0EFC               	movlw	-4
 27121  013FF2  A0E3               	btfss	plusw1,0,c
 27122  013FF4  D00D               	goto	l7759
 27123                           
 27124                           ;stkvar	_grs @ sp[(-4)+0]
 27125  013FF6  0EFC               	movlw	-4
 27126  013FF8  006F FF8C  F00C    	movff	plusw1,btemp+11
 27127  013FFE  90D8               	bcf	status,0,c
 27128  014000  320C               	rrcf	(btemp+11)^0,f,c
 27129  014002  0E01               	movlw	1
 27130  014004  120C               	iorwf	(btemp+11)^0,f,c
 27131                           
 27132                           ;stkvar	_grs @ sp[(-4)+0]
 27133  014006  0EFC               	movlw	-4
 27134  014008  0060  F033  FFE3   	movff	btemp+11,plusw1
 27135  01400E  D009               	goto	l7761
 27136  014010                     l7759:
 27137                           
 27138                           ;stkvar	_grs @ sp[(-4)+0]
 27139  014010  50E1               	movf	fsr1l,w,c
 27140  014012  0FFC               	addlw	-4
 27141  014014  6ED9               	movwf	fsr2l,c
 27142  014016  50E2               	movf	fsr1h,w,c
 27143  014018  6EDA               	movwf	fsr2h,c
 27144  01401A  0EFF               	movlw	255
 27145  01401C  22DA               	addwfc	fsr2h,f,c
 27146  01401E  90D8               	bcf	status,0,c
 27147  014020  32DF               	rrcf	indf2,f,c
 27148  014022                     l7761:
 27149                           
 27150                           ;stkvar	_b @ sp[(-4)+-4]
 27151  014022  0EF8               	movlw	-8
 27152  014024  A0E3               	btfss	plusw1,0,c
 27153  014026  D002               	goto	l7765
 27154                           
 27155                           ;stkvar	_grs @ sp[(-4)+0]
 27156  014028  0EFC               	movlw	-4
 27157  01402A  8EE3               	bsf	plusw1,7,c
 27158  01402C                     l7765:
 27159  01402C  0E01               	movlw	1
 27160  01402E  6E0C               	movwf	(btemp+11)^0,c
 27161                           
 27162                           ;stkvar	_b @ sp[(-4)+-4]
 27163  014030  50E1               	movf	fsr1l,w,c
 27164  014032  0FF8               	addlw	-8
 27165  014034  6ED9               	movwf	fsr2l,c
 27166  014036  50E2               	movf	fsr1h,w,c
 27167  014038  6EDA               	movwf	fsr2h,c
 27168  01403A  0EFF               	movlw	255
 27169  01403C  22DA               	addwfc	fsr2h,f,c
 27170  01403E  280C               	incf	(btemp+11)^0,w,c
 27171  014040  52DE               	movf	postinc2,f,c
 27172  014042  D008               	goto	u5640
 27173  014044                     u5645:
 27174  014044  52DE               	movf	postinc2,f,c
 27175  014046  90D8               	bcf	status,0,c
 27176  014048  BEDC               	btfsc	preinc2,7,c
 27177  01404A  80D8               	bsf	status,0,c
 27178  01404C  32DD               	rrcf	postdec2,f,c
 27179  01404E  32DD               	rrcf	postdec2,f,c
 27180  014050  32DD               	rrcf	postdec2,f,c
 27181  014052  32DE               	rrcf	postinc2,f,c
 27182  014054                     u5640:
 27183  014054  2EE8               	decfsz	wreg,f,c
 27184  014056  D7F6               	goto	u5645
 27185                           
 27186                           ;stkvar	_bexp @ sp[(-4)+1]
 27187  014058  0EFD               	movlw	-3
 27188  01405A  2AE3               	incf	plusw1,f,c
 27189  01405C  D0CA               	goto	u5720
 27190  01405E                     l7769:
 27191                           
 27192                           ;stkvar	_a @ sp[(-4)+-8]
 27193                           ;stkvar	_b @ sp[(-4)+-4]
 27194  01405E  50E1               	movf	fsr1l,w,c
 27195  014060  0FF8               	addlw	-8
 27196  014062  6ED9               	movwf	fsr2l,c
 27197  014064  50E2               	movf	fsr1h,w,c
 27198  014066  6EDA               	movwf	fsr2h,c
 27199  014068  0EFF               	movlw	255
 27200  01406A  22DA               	addwfc	fsr2h,f,c
 27201  01406C  0EF4               	movlw	-12
 27202  01406E  50E3               	movf	plusw1,w,c
 27203  014070  5CDE               	subwf	postinc2,w,c
 27204  014072  0EF5               	movlw	-11
 27205  014074  50E3               	movf	plusw1,w,c
 27206  014076  58DE               	subwfb	postinc2,w,c
 27207  014078  0EF6               	movlw	-10
 27208  01407A  50E3               	movf	plusw1,w,c
 27209  01407C  58DE               	subwfb	postinc2,w,c
 27210  01407E  50DE               	movf	postinc2,w,c
 27211  014080  0A80               	xorlw	128
 27212  014082  6E01               	movwf	btemp^0,c
 27213  014084  0EF7               	movlw	-9
 27214  014086  50E3               	movf	plusw1,w,c
 27215  014088  0A80               	xorlw	128
 27216  01408A  5801               	subwfb	btemp^0,w,c
 27217  01408C  B0D8               	btfsc	status,0,c
 27218  01408E  D053               	goto	l7781
 27219                           
 27220                           ;stkvar	_b @ sp[(-4)+-4]
 27221                           ;stkvar	_a @ sp[(-4)+-8]
 27222  014090  0EF4               	movlw	-12
 27223  014092  006F FF8C  F009    	movff	plusw1,btemp+8
 27224  014098  0EF5               	movlw	-11
 27225  01409A  006F FF8C  F00A    	movff	plusw1,btemp+9
 27226  0140A0  0EF6               	movlw	-10
 27227  0140A2  006F FF8C  F00B    	movff	plusw1,btemp+10
 27228  0140A8  0EF7               	movlw	-9
 27229  0140AA  006F FF8C  F00C    	movff	plusw1,btemp+11
 27230  0140B0  0EF8               	movlw	-8
 27231  0140B2  50E3               	movf	plusw1,w,c
 27232  0140B4  5E09               	subwf	(btemp+8)^0,f,c
 27233  0140B6  0EF9               	movlw	-7
 27234  0140B8  50E3               	movf	plusw1,w,c
 27235  0140BA  5A0A               	subwfb	(btemp+9)^0,f,c
 27236  0140BC  0EFA               	movlw	-6
 27237  0140BE  50E3               	movf	plusw1,w,c
 27238  0140C0  5A0B               	subwfb	(btemp+10)^0,f,c
 27239  0140C2  0EFB               	movlw	-5
 27240  0140C4  50E3               	movf	plusw1,w,c
 27241  0140C6  5A0C               	subwfb	(btemp+11)^0,f,c
 27242  0140C8  0EFF               	movlw	255
 27243  0140CA  2409               	addwf	(btemp+8)^0,w,c
 27244  0140CC  6E05               	movwf	(btemp+4)^0,c
 27245  0140CE  0EFF               	movlw	255
 27246  0140D0  200A               	addwfc	(btemp+9)^0,w,c
 27247  0140D2  6E06               	movwf	(btemp+5)^0,c
 27248  0140D4  0EFF               	movlw	255
 27249  0140D6  200B               	addwfc	(btemp+10)^0,w,c
 27250  0140D8  6E07               	movwf	(btemp+6)^0,c
 27251  0140DA  0EFF               	movlw	255
 27252  0140DC  200C               	addwfc	(btemp+11)^0,w,c
 27253  0140DE  6E08               	movwf	(btemp+7)^0,c
 27254                           
 27255                           ;stkvar	_b @ sp[(-4)+-4]
 27256  0140E0  0EF8               	movlw	-8
 27257  0140E2  0060  F017  FFE3   	movff	btemp+4,plusw1
 27258  0140E8  0EF9               	movlw	-7
 27259  0140EA  0060  F01B  FFE3   	movff	btemp+5,plusw1
 27260  0140F0  0EFA               	movlw	-6
 27261  0140F2  0060  F01F  FFE3   	movff	btemp+6,plusw1
 27262  0140F8  0EFB               	movlw	-5
 27263  0140FA  0060  F023  FFE3   	movff	btemp+7,plusw1
 27264                           
 27265                           ;stkvar	_signs @ sp[(-4)+3]
 27266  014100  0EFF               	movlw	-1
 27267  014102  7EE3               	btg	plusw1,7,c
 27268                           
 27269                           ;stkvar	_grs @ sp[(-4)+0]
 27270  014104  0EFC               	movlw	-4
 27271  014106  50E3               	movf	plusw1,w,c
 27272  014108  0800               	sublw	0
 27273  01410A  6E0C               	movwf	(btemp+11)^0,c
 27274                           
 27275                           ;stkvar	_grs @ sp[(-4)+0]
 27276  01410C  0EFC               	movlw	-4
 27277  01410E  0060  F033  FFE3   	movff	btemp+11,plusw1
 27278                           
 27279                           ;stkvar	_grs @ sp[(-4)+0]
 27280  014114  0EFC               	movlw	-4
 27281  014116  50E3               	movf	plusw1,w,c
 27282  014118  A4D8               	btfss	status,2,c
 27283  01411A  D020               	goto	l7783
 27284                           
 27285                           ;stkvar	_b @ sp[(-4)+-4]
 27286  01411C  50E1               	movf	fsr1l,w,c
 27287  01411E  0FF8               	addlw	-8
 27288  014120  6ED9               	movwf	fsr2l,c
 27289  014122  50E2               	movf	fsr1h,w,c
 27290  014124  6EDA               	movwf	fsr2h,c
 27291  014126  0EFF               	movlw	255
 27292  014128  22DA               	addwfc	fsr2h,f,c
 27293  01412A  2ADE               	incf	postinc2,f,c
 27294  01412C  0E00               	movlw	0
 27295  01412E  22DE               	addwfc	postinc2,f,c
 27296  014130  22DE               	addwfc	postinc2,f,c
 27297  014132  22DE               	addwfc	postinc2,f,c
 27298  014134  D013               	goto	l7783
 27299  014136                     l7781:
 27300                           
 27301                           ;stkvar	_a @ sp[(-4)+-8]
 27302                           ;stkvar	_b @ sp[(-4)+-4]
 27303  014136  50E1               	movf	fsr1l,w,c
 27304  014138  0FF8               	addlw	-8
 27305  01413A  6ED9               	movwf	fsr2l,c
 27306  01413C  50E2               	movf	fsr1h,w,c
 27307  01413E  6EDA               	movwf	fsr2h,c
 27308  014140  0EFF               	movlw	255
 27309  014142  22DA               	addwfc	fsr2h,f,c
 27310  014144  0EF4               	movlw	-12
 27311  014146  50E3               	movf	plusw1,w,c
 27312  014148  5EDE               	subwf	postinc2,f,c
 27313  01414A  0EF5               	movlw	-11
 27314  01414C  50E3               	movf	plusw1,w,c
 27315  01414E  5ADE               	subwfb	postinc2,f,c
 27316  014150  0EF6               	movlw	-10
 27317  014152  50E3               	movf	plusw1,w,c
 27318  014154  5ADE               	subwfb	postinc2,f,c
 27319  014156  0EF7               	movlw	-9
 27320  014158  50E3               	movf	plusw1,w,c
 27321  01415A  5ADE               	subwfb	postinc2,f,c
 27322  01415C                     l7783:
 27323                           
 27324                           ;stkvar	_b @ sp[(-4)+-4]
 27325  01415C  0EF8               	movlw	-8
 27326  01415E  50E3               	movf	plusw1,w,c
 27327  014160  E145               	bnz	l7805
 27328  014162  0EF9               	movlw	-7
 27329  014164  50E3               	movf	plusw1,w,c
 27330  014166  E142               	bnz	l7805
 27331  014168  0EFA               	movlw	-6
 27332  01416A  50E3               	movf	plusw1,w,c
 27333  01416C  E13F               	bnz	l7805
 27334  01416E  0EFB               	movlw	-5
 27335  014170  50E3               	movf	plusw1,w,c
 27336  014172  A4D8               	btfss	status,2,c
 27337  014174  D03B               	goto	l7805
 27338                           
 27339                           ;stkvar	_grs @ sp[(-4)+0]
 27340  014176  0EFC               	movlw	-4
 27341  014178  50E3               	movf	plusw1,w,c
 27342  01417A  A4D8               	btfss	status,2,c
 27343  01417C  D037               	goto	l7805
 27344  01417E                     u5680:
 27345  01417E  0E00               	movlw	0
 27346  014180  6E01               	movwf	btemp^0,c
 27347  014182  0E00               	movlw	0
 27348  014184  6E02               	movwf	(btemp+1)^0,c
 27349  014186  0E00               	movlw	0
 27350  014188  6E03               	movwf	(btemp+2)^0,c
 27351  01418A  0E00               	movlw	0
 27352  01418C  6E04               	movwf	(btemp+3)^0,c
 27353  01418E  D0C6               	goto	l2937
 27354  014190                     l7791:
 27355                           
 27356                           ;stkvar	_b @ sp[(-4)+-4]
 27357  014190  90D8               	bcf	status,0,c
 27358  014192  0EF8               	movlw	-8
 27359  014194  36E3               	rlcf	plusw1,f,c
 27360  014196  0EF9               	movlw	-7
 27361  014198  36E3               	rlcf	plusw1,f,c
 27362  01419A  0EFA               	movlw	-6
 27363  01419C  36E3               	rlcf	plusw1,f,c
 27364  01419E  0EFB               	movlw	-5
 27365  0141A0  36E3               	rlcf	plusw1,f,c
 27366                           
 27367                           ;stkvar	_grs @ sp[(-4)+0]
 27368  0141A2  0EFC               	movlw	-4
 27369  0141A4  AEE3               	btfss	plusw1,7,c
 27370  0141A6  D002               	goto	l2949
 27371                           
 27372                           ;stkvar	_b @ sp[(-4)+-4]
 27373  0141A8  0EF8               	movlw	-8
 27374  0141AA  80E3               	bsf	plusw1,0,c
 27375  0141AC                     l2949:
 27376                           
 27377                           ;stkvar	_grs @ sp[(-4)+0]
 27378  0141AC  0EFC               	movlw	-4
 27379  0141AE  A0E3               	btfss	plusw1,0,c
 27380  0141B0  D00E               	goto	l7799
 27381                           
 27382                           ;stkvar	_grs @ sp[(-4)+0]
 27383  0141B2  0EFC               	movlw	-4
 27384  0141B4  006F FF8C  F00C    	movff	plusw1,btemp+11
 27385  0141BA  90D8               	bcf	status,0,c
 27386  0141BC  340C               	rlcf	(btemp+11)^0,w,c
 27387  0141BE  6E0B               	movwf	(btemp+10)^0,c
 27388  0141C0  0E01               	movlw	1
 27389  0141C2  120B               	iorwf	(btemp+10)^0,f,c
 27390                           
 27391                           ;stkvar	_grs @ sp[(-4)+0]
 27392  0141C4  0EFC               	movlw	-4
 27393  0141C6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27394  0141CC  D009               	goto	l7801
 27395  0141CE                     l7799:
 27396                           
 27397                           ;stkvar	_grs @ sp[(-4)+0]
 27398  0141CE  50E1               	movf	fsr1l,w,c
 27399  0141D0  0FFC               	addlw	-4
 27400  0141D2  6ED9               	movwf	fsr2l,c
 27401  0141D4  50E2               	movf	fsr1h,w,c
 27402  0141D6  6EDA               	movwf	fsr2h,c
 27403  0141D8  0EFF               	movlw	255
 27404  0141DA  22DA               	addwfc	fsr2h,f,c
 27405  0141DC  90D8               	bcf	status,0,c
 27406  0141DE  36DF               	rlcf	indf2,f,c
 27407  0141E0                     l7801:
 27408                           
 27409                           ;stkvar	_bexp @ sp[(-4)+1]
 27410  0141E0  0EFD               	movlw	-3
 27411  0141E2  50E3               	movf	plusw1,w,c
 27412  0141E4  B4D8               	btfsc	status,2,c
 27413  0141E6  D002               	goto	l7805
 27414                           
 27415                           ;stkvar	_bexp @ sp[(-4)+1]
 27416  0141E8  0EFD               	movlw	-3
 27417  0141EA  06E3               	decf	plusw1,f,c
 27418  0141EC                     l7805:
 27419                           
 27420                           ;stkvar	_b @ sp[(-4)+-4]
 27421  0141EC  0EFA               	movlw	-6
 27422  0141EE  AEE3               	btfss	plusw1,7,c
 27423  0141F0  D7CF               	goto	l7791
 27424  0141F2                     u5720:
 27425                           
 27426                           ;stkvar	_aexp @ sp[(-4)+2]
 27427  0141F2  0EFE               	movlw	-2
 27428  0141F4  6AE3               	clrf	plusw1,c
 27429                           
 27430                           ;stkvar	_grs @ sp[(-4)+0]
 27431  0141F6  0EFC               	movlw	-4
 27432  0141F8  AEE3               	btfss	plusw1,7,c
 27433  0141FA  D00F               	goto	l7819
 27434                           
 27435                           ;stkvar	_grs @ sp[(-4)+0]
 27436  0141FC  0EFC               	movlw	-4
 27437  0141FE  006F FF8C  F00C    	movff	plusw1,btemp+11
 27438  014204  0E7F               	movlw	127
 27439  014206  160C               	andwf	(btemp+11)^0,f,c
 27440  014208  B4D8               	btfsc	status,2,c
 27441  01420A  D004               	goto	l7815
 27442  01420C                     u5740:
 27443                           
 27444                           ;stkvar	_aexp @ sp[(-4)+2]
 27445  01420C  0EFE               	movlw	-2
 27446  01420E  6AE3               	clrf	plusw1,c
 27447  014210  2AE3               	incf	plusw1,f,c
 27448  014212  D003               	goto	l7819
 27449  014214                     l7815:
 27450                           
 27451                           ;stkvar	_b @ sp[(-4)+-4]
 27452  014214  0EF8               	movlw	-8
 27453  014216  B0E3               	btfsc	plusw1,0,c
 27454  014218  D7F9               	goto	u5740
 27455  01421A                     l7819:
 27456                           
 27457                           ;stkvar	_aexp @ sp[(-4)+2]
 27458  01421A  0EFE               	movlw	-2
 27459  01421C  50E3               	movf	plusw1,w,c
 27460  01421E  B4D8               	btfsc	status,2,c
 27461  014220  D02B               	goto	l7831
 27462                           
 27463                           ;stkvar	_b @ sp[(-4)+-4]
 27464  014222  50E1               	movf	fsr1l,w,c
 27465  014224  0FF8               	addlw	-8
 27466  014226  6ED9               	movwf	fsr2l,c
 27467  014228  50E2               	movf	fsr1h,w,c
 27468  01422A  6EDA               	movwf	fsr2h,c
 27469  01422C  0EFF               	movlw	255
 27470  01422E  22DA               	addwfc	fsr2h,f,c
 27471  014230  2ADE               	incf	postinc2,f,c
 27472  014232  0E00               	movlw	0
 27473  014234  22DE               	addwfc	postinc2,f,c
 27474  014236  22DE               	addwfc	postinc2,f,c
 27475  014238  22DE               	addwfc	postinc2,f,c
 27476                           
 27477                           ;stkvar	_b @ sp[(-4)+-4]
 27478  01423A  0EFB               	movlw	-5
 27479  01423C  A0E3               	btfss	plusw1,0,c
 27480  01423E  D01C               	goto	l7831
 27481  014240  0E01               	movlw	1
 27482  014242  6E0C               	movwf	(btemp+11)^0,c
 27483                           
 27484                           ;stkvar	_b @ sp[(-4)+-4]
 27485  014244  50E1               	movf	fsr1l,w,c
 27486  014246  0FF8               	addlw	-8
 27487  014248  6ED9               	movwf	fsr2l,c
 27488  01424A  50E2               	movf	fsr1h,w,c
 27489  01424C  6EDA               	movwf	fsr2h,c
 27490  01424E  0EFF               	movlw	255
 27491  014250  22DA               	addwfc	fsr2h,f,c
 27492  014252  280C               	incf	(btemp+11)^0,w,c
 27493  014254  52DE               	movf	postinc2,f,c
 27494  014256  D008               	goto	u5780
 27495  014258                     u5785:
 27496  014258  52DE               	movf	postinc2,f,c
 27497  01425A  90D8               	bcf	status,0,c
 27498  01425C  BEDC               	btfsc	preinc2,7,c
 27499  01425E  80D8               	bsf	status,0,c
 27500  014260  32DD               	rrcf	postdec2,f,c
 27501  014262  32DD               	rrcf	postdec2,f,c
 27502  014264  32DD               	rrcf	postdec2,f,c
 27503  014266  32DE               	rrcf	postinc2,f,c
 27504  014268                     u5780:
 27505  014268  2EE8               	decfsz	wreg,f,c
 27506  01426A  D7F6               	goto	u5785
 27507                           
 27508                           ;stkvar	_bexp @ sp[(-4)+1]
 27509  01426C  0EFD               	movlw	-3
 27510  01426E  28E3               	incf	plusw1,w,c
 27511  014270  B4D8               	btfsc	status,2,c
 27512  014272  D002               	goto	l7831
 27513                           
 27514                           ;stkvar	_bexp @ sp[(-4)+1]
 27515  014274  0EFD               	movlw	-3
 27516  014276  2AE3               	incf	plusw1,f,c
 27517  014278                     l7831:
 27518                           
 27519                           ;stkvar	_bexp @ sp[(-4)+1]
 27520  014278  0EFD               	movlw	-3
 27521  01427A  28E3               	incf	plusw1,w,c
 27522  01427C  B4D8               	btfsc	status,2,c
 27523  01427E  D004               	goto	u5810
 27524                           
 27525                           ;stkvar	_bexp @ sp[(-4)+1]
 27526  014280  0EFD               	movlw	-3
 27527  014282  50E3               	movf	plusw1,w,c
 27528  014284  A4D8               	btfss	status,2,c
 27529  014286  D00E               	goto	l7841
 27530  014288                     u5810:
 27531                           
 27532                           ;stkvar	_b @ sp[(-4)+-4]
 27533  014288  0EF8               	movlw	-8
 27534  01428A  6AE3               	clrf	plusw1,c
 27535  01428C  0EF9               	movlw	-7
 27536  01428E  6AE3               	clrf	plusw1,c
 27537  014290  0EFA               	movlw	-6
 27538  014292  6AE3               	clrf	plusw1,c
 27539  014294  0EFB               	movlw	-5
 27540  014296  6AE3               	clrf	plusw1,c
 27541                           
 27542                           ;stkvar	_bexp @ sp[(-4)+1]
 27543  014298  0EFD               	movlw	-3
 27544  01429A  50E3               	movf	plusw1,w,c
 27545  01429C  A4D8               	btfss	status,2,c
 27546  01429E  D002               	goto	l7841
 27547                           
 27548                           ;stkvar	_signs @ sp[(-4)+3]
 27549  0142A0  0EFF               	movlw	-1
 27550  0142A2  6AE3               	clrf	plusw1,c
 27551  0142A4                     l7841:
 27552                           
 27553                           ;stkvar	_bexp @ sp[(-4)+1]
 27554  0142A4  0EFD               	movlw	-3
 27555  0142A6  A0E3               	btfss	plusw1,0,c
 27556  0142A8  D009               	goto	l7845
 27557                           
 27558                           ;stkvar	_b @ sp[(-4)+-4]
 27559  0142AA  0EFA               	movlw	250
 27560  0142AC  24E1               	addwf	fsr1l,w,c
 27561  0142AE  6ED9               	movwf	fsr2l,c
 27562  0142B0  0EFF               	movlw	255
 27563  0142B2  20E2               	addwfc	fsr1h,w,c
 27564  0142B4  6EDA               	movwf	fsr2h,c
 27565  0142B6  0E00               	movlw	0
 27566  0142B8  8EDB               	bsf	plusw2,7,c
 27567  0142BA  D008               	goto	l7847
 27568  0142BC                     l7845:
 27569                           
 27570                           ;stkvar	_b @ sp[(-4)+-4]
 27571  0142BC  0EFA               	movlw	250
 27572  0142BE  24E1               	addwf	fsr1l,w,c
 27573  0142C0  6ED9               	movwf	fsr2l,c
 27574  0142C2  0EFF               	movlw	255
 27575  0142C4  20E2               	addwfc	fsr1h,w,c
 27576  0142C6  6EDA               	movwf	fsr2h,c
 27577  0142C8  0E7F               	movlw	127
 27578  0142CA  16DF               	andwf	indf2,f,c
 27579  0142CC                     l7847:
 27580                           
 27581                           ;stkvar	_b @ sp[(-4)+-4]
 27582  0142CC  0EFB               	movlw	251
 27583  0142CE  24E1               	addwf	fsr1l,w,c
 27584  0142D0  6ED9               	movwf	fsr2l,c
 27585  0142D2  0EFF               	movlw	255
 27586  0142D4  20E2               	addwfc	fsr1h,w,c
 27587  0142D6  6EDA               	movwf	fsr2h,c
 27588                           
 27589                           ;stkvar	_bexp @ sp[(-4)+1]
 27590  0142D8  0EFD               	movlw	-3
 27591  0142DA  006F FF8C  F00C    	movff	plusw1,btemp+11
 27592  0142E0  90D8               	bcf	status,0,c
 27593  0142E2  300C               	rrcf	(btemp+11)^0,w,c
 27594  0142E4  6EDF               	movwf	indf2,c
 27595                           
 27596                           ;stkvar	_signs @ sp[(-4)+3]
 27597  0142E6  0EFF               	movlw	-1
 27598  0142E8  AEE3               	btfss	plusw1,7,c
 27599  0142EA  D008               	goto	l7853
 27600                           
 27601                           ;stkvar	_b @ sp[(-4)+-4]
 27602  0142EC  0EFB               	movlw	251
 27603  0142EE  24E1               	addwf	fsr1l,w,c
 27604  0142F0  6ED9               	movwf	fsr2l,c
 27605  0142F2  0EFF               	movlw	255
 27606  0142F4  20E2               	addwfc	fsr1h,w,c
 27607  0142F6  6EDA               	movwf	fsr2h,c
 27608  0142F8  0E00               	movlw	0
 27609  0142FA  8EDB               	bsf	plusw2,7,c
 27610  0142FC                     l7853:
 27611                           
 27612                           ;stkvar	_b @ sp[(-4)+-4]
 27613  0142FC  0EF8               	movlw	-8
 27614  0142FE  006F FF8C  F001    	movff	plusw1,btemp
 27615  014304  0EF9               	movlw	-7
 27616  014306  006F FF8C  F002    	movff	plusw1,btemp+1
 27617  01430C  0EFA               	movlw	-6
 27618  01430E  006F FF8C  F003    	movff	plusw1,btemp+2
 27619  014314  0EFB               	movlw	-5
 27620  014316  006F FF8C  F004    	movff	plusw1,btemp+3
 27621  01431C                     l2937:
 27622                           
 27623                           ; ___fladd: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 27624  01431C  0EF4               	movlw	244
 27625  01431E  26E1               	addwf	fsr1l,f,c
 27626  014320  0EFF               	movlw	255
 27627  014322  22E2               	addwfc	fsr1h,f,c
 27628  014324  0012               	return		;funcret
 27629  014326                     __end_of___fladd:
 27630                           	opt callstack 0
 27631                           
 27632 ;; *************** function ___flmul *****************
 27633 ;; Defined at:
 27634 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcmul.c"
 27635 ;; Parameters:    Size  Location     Type
 27636 ;;  b               4  [STACK] unsigned char 
 27637 ;;  a               4  [STACK] unsigned char 
 27638 ;; Auto vars:     Size  Location     Type
 27639 ;;  prod            4  [STACK] struct .
 27640 ;;  grs             4  [STACK] unsigned long 
 27641 ;;  temp            2  [STACK] struct .
 27642 ;;  bexp            1  [STACK] unsigned char 
 27643 ;;  aexp            1  [STACK] unsigned char 
 27644 ;;  sign            1  [STACK] unsigned char 
 27645 ;; Return value:  Size  Location     Type
 27646 ;;                  4  [STACK] unsigned char 
 27647 ;; Registers used:
 27648 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 27649 ;; Tracked objects:
 27650 ;;		On entry : 0/1
 27651 ;;		On exit  : 0/0
 27652 ;;		Unchanged: 0/0
 27653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27654 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27655 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27656 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27657 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27658 ;;Total ram usage:        0 bytes
 27659 ;; Hardware stack levels used:    1
 27660 ;; Hardware stack levels required when called:   15
 27661 ;; This function calls:
 27662 ;;		Nothing
 27663 ;; This function is called by:
 27664 ;;		_conv_raw_result
 27665 ;;		_lp_filter
 27666 ;;		_calc_model_data
 27667 ;;		_calc_bsoc
 27668 ;;		_init_bsoc
 27669 ;;		_efgtoa
 27670 ;; This function uses a reentrant model
 27671 ;;
 27672                           
 27673                           	psect	text106
 27674  013340                     __ptext106:
 27675                           	opt callstack 0
 27676  013340                     ___flmul:
 27677                           	opt callstack 0
 27678                           
 27679                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 27680  013340  0E0D               	movlw	13
 27681  013342  26E1               	addwf	fsr1l,f,c
 27682  013344  0E00               	movlw	0
 27683  013346  22E2               	addwfc	fsr1h,f,c
 27684                           
 27685                           ;stkvar	_b @ sp[(-13)+-4]
 27686                           
 27687                           ;incstack = 0
 27688 ;; hardware stack exceeded
 27689  013348  0EF2               	movlw	242
 27690  01334A  24E1               	addwf	fsr1l,w,c
 27691  01334C  6ED9               	movwf	fsr2l,c
 27692  01334E  0EFF               	movlw	255
 27693  013350  20E2               	addwfc	fsr1h,w,c
 27694  013352  6EDA               	movwf	fsr2h,c
 27695  013354  50DF               	movf	indf2,w,c
 27696  013356  6E0C               	movwf	(btemp+11)^0,c
 27697  013358  0E80               	movlw	128
 27698  01335A  160C               	andwf	(btemp+11)^0,f,c
 27699                           
 27700                           ;stkvar	_sign @ sp[(-13)+12]
 27701  01335C  0EFF               	movlw	-1
 27702  01335E  0060  F033  FFE3   	movff	btemp+11,plusw1
 27703                           
 27704                           ;stkvar	_b @ sp[(-13)+-4]
 27705  013364  0EF2               	movlw	242
 27706  013366  24E1               	addwf	fsr1l,w,c
 27707  013368  6ED9               	movwf	fsr2l,c
 27708  01336A  0EFF               	movlw	255
 27709  01336C  20E2               	addwfc	fsr1h,w,c
 27710  01336E  6EDA               	movwf	fsr2h,c
 27711  013370  50DF               	movf	indf2,w,c
 27712  013372  6E0C               	movwf	(btemp+11)^0,c
 27713  013374  90D8               	bcf	status,0,c
 27714  013376  340C               	rlcf	(btemp+11)^0,w,c
 27715  013378  6E0B               	movwf	(btemp+10)^0,c
 27716                           
 27717                           ;stkvar	_bexp @ sp[(-13)+10]
 27718  01337A  0EFD               	movlw	-3
 27719  01337C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27720                           
 27721                           ;stkvar	_b @ sp[(-13)+-4]
 27722  013382  0EF1               	movlw	241
 27723  013384  24E1               	addwf	fsr1l,w,c
 27724  013386  6ED9               	movwf	fsr2l,c
 27725  013388  0EFF               	movlw	255
 27726  01338A  20E2               	addwfc	fsr1h,w,c
 27727  01338C  6EDA               	movwf	fsr2h,c
 27728  01338E  AEDF               	btfss	indf2,7,c
 27729  013390  D002               	goto	l8237
 27730                           
 27731                           ;stkvar	_bexp @ sp[(-13)+10]
 27732  013392  0EFD               	movlw	-3
 27733  013394  80E3               	bsf	plusw1,0,c
 27734  013396                     l8237:
 27735                           
 27736                           ;stkvar	_bexp @ sp[(-13)+10]
 27737  013396  0EFD               	movlw	-3
 27738  013398  50E3               	movf	plusw1,w,c
 27739  01339A  B4D8               	btfsc	status,2,c
 27740  01339C  D01F               	goto	l8245
 27741                           
 27742                           ;stkvar	_bexp @ sp[(-13)+10]
 27743  01339E  0EFD               	movlw	-3
 27744  0133A0  28E3               	incf	plusw1,w,c
 27745  0133A2  A4D8               	btfss	status,2,c
 27746  0133A4  D018               	goto	l8243
 27747  0133A6  0E00               	movlw	0
 27748  0133A8  6E09               	movwf	(btemp+8)^0,c
 27749  0133AA  0E00               	movlw	0
 27750  0133AC  6E0A               	movwf	(btemp+9)^0,c
 27751  0133AE  0E00               	movlw	0
 27752  0133B0  6E0B               	movwf	(btemp+10)^0,c
 27753  0133B2  0E00               	movlw	0
 27754  0133B4  6E0C               	movwf	(btemp+11)^0,c
 27755                           
 27756                           ;stkvar	_b @ sp[(-13)+-4]
 27757  0133B6  0EEF               	movlw	-17
 27758  0133B8  0060  F027  FFE3   	movff	btemp+8,plusw1
 27759  0133BE  0EF0               	movlw	-16
 27760  0133C0  0060  F02B  FFE3   	movff	btemp+9,plusw1
 27761  0133C6  0EF1               	movlw	-15
 27762  0133C8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27763  0133CE  0EF2               	movlw	-14
 27764  0133D0  0060  F033  FFE3   	movff	btemp+11,plusw1
 27765  0133D6                     l8243:
 27766                           
 27767                           ;stkvar	_b @ sp[(-13)+-4]
 27768  0133D6  0EF1               	movlw	-15
 27769  0133D8  8EE3               	bsf	plusw1,7,c
 27770  0133DA  D018               	goto	l8247
 27771  0133DC                     l8245:
 27772  0133DC  0E00               	movlw	0
 27773  0133DE  6E09               	movwf	(btemp+8)^0,c
 27774  0133E0  0E00               	movlw	0
 27775  0133E2  6E0A               	movwf	(btemp+9)^0,c
 27776  0133E4  0E00               	movlw	0
 27777  0133E6  6E0B               	movwf	(btemp+10)^0,c
 27778  0133E8  0E00               	movlw	0
 27779  0133EA  6E0C               	movwf	(btemp+11)^0,c
 27780                           
 27781                           ;stkvar	_b @ sp[(-13)+-4]
 27782  0133EC  0EEF               	movlw	-17
 27783  0133EE  0060  F027  FFE3   	movff	btemp+8,plusw1
 27784  0133F4  0EF0               	movlw	-16
 27785  0133F6  0060  F02B  FFE3   	movff	btemp+9,plusw1
 27786  0133FC  0EF1               	movlw	-15
 27787  0133FE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27788  013404  0EF2               	movlw	-14
 27789  013406  0060  F033  FFE3   	movff	btemp+11,plusw1
 27790  01340C                     l8247:
 27791                           
 27792                           ;stkvar	_a @ sp[(-13)+-8]
 27793  01340C  0EEE               	movlw	238
 27794  01340E  24E1               	addwf	fsr1l,w,c
 27795  013410  6ED9               	movwf	fsr2l,c
 27796  013412  0EFF               	movlw	255
 27797  013414  20E2               	addwfc	fsr1h,w,c
 27798  013416  6EDA               	movwf	fsr2h,c
 27799  013418  50DF               	movf	indf2,w,c
 27800  01341A  6E0C               	movwf	(btemp+11)^0,c
 27801  01341C  0E80               	movlw	128
 27802  01341E  160C               	andwf	(btemp+11)^0,f,c
 27803                           
 27804                           ;stkvar	_sign @ sp[(-13)+12]
 27805  013420  50E1               	movf	fsr1l,w,c
 27806  013422  0FFF               	addlw	-1
 27807  013424  6ED9               	movwf	fsr2l,c
 27808  013426  50E2               	movf	fsr1h,w,c
 27809  013428  6EDA               	movwf	fsr2h,c
 27810  01342A  0EFF               	movlw	255
 27811  01342C  22DA               	addwfc	fsr2h,f,c
 27812  01342E  500C               	movf	(btemp+11)^0,w,c
 27813  013430  1ADF               	xorwf	indf2,f,c
 27814                           
 27815                           ;stkvar	_a @ sp[(-13)+-8]
 27816  013432  0EEE               	movlw	238
 27817  013434  24E1               	addwf	fsr1l,w,c
 27818  013436  6ED9               	movwf	fsr2l,c
 27819  013438  0EFF               	movlw	255
 27820  01343A  20E2               	addwfc	fsr1h,w,c
 27821  01343C  6EDA               	movwf	fsr2h,c
 27822  01343E  50DF               	movf	indf2,w,c
 27823  013440  6E0C               	movwf	(btemp+11)^0,c
 27824  013442  90D8               	bcf	status,0,c
 27825  013444  340C               	rlcf	(btemp+11)^0,w,c
 27826  013446  6E0B               	movwf	(btemp+10)^0,c
 27827                           
 27828                           ;stkvar	_aexp @ sp[(-13)+11]
 27829  013448  0EFE               	movlw	-2
 27830  01344A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27831                           
 27832                           ;stkvar	_a @ sp[(-13)+-8]
 27833  013450  0EED               	movlw	237
 27834  013452  24E1               	addwf	fsr1l,w,c
 27835  013454  6ED9               	movwf	fsr2l,c
 27836  013456  0EFF               	movlw	255
 27837  013458  20E2               	addwfc	fsr1h,w,c
 27838  01345A  6EDA               	movwf	fsr2h,c
 27839  01345C  AEDF               	btfss	indf2,7,c
 27840  01345E  D002               	goto	l8255
 27841                           
 27842                           ;stkvar	_aexp @ sp[(-13)+11]
 27843  013460  0EFE               	movlw	-2
 27844  013462  80E3               	bsf	plusw1,0,c
 27845  013464                     l8255:
 27846                           
 27847                           ;stkvar	_aexp @ sp[(-13)+11]
 27848  013464  0EFE               	movlw	-2
 27849  013466  50E3               	movf	plusw1,w,c
 27850  013468  B4D8               	btfsc	status,2,c
 27851  01346A  D01F               	goto	l8263
 27852                           
 27853                           ;stkvar	_aexp @ sp[(-13)+11]
 27854  01346C  0EFE               	movlw	-2
 27855  01346E  28E3               	incf	plusw1,w,c
 27856  013470  A4D8               	btfss	status,2,c
 27857  013472  D018               	goto	l8261
 27858  013474  0E00               	movlw	0
 27859  013476  6E09               	movwf	(btemp+8)^0,c
 27860  013478  0E00               	movlw	0
 27861  01347A  6E0A               	movwf	(btemp+9)^0,c
 27862  01347C  0E00               	movlw	0
 27863  01347E  6E0B               	movwf	(btemp+10)^0,c
 27864  013480  0E00               	movlw	0
 27865  013482  6E0C               	movwf	(btemp+11)^0,c
 27866                           
 27867                           ;stkvar	_a @ sp[(-13)+-8]
 27868  013484  0EEB               	movlw	-21
 27869  013486  0060  F027  FFE3   	movff	btemp+8,plusw1
 27870  01348C  0EEC               	movlw	-20
 27871  01348E  0060  F02B  FFE3   	movff	btemp+9,plusw1
 27872  013494  0EED               	movlw	-19
 27873  013496  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27874  01349C  0EEE               	movlw	-18
 27875  01349E  0060  F033  FFE3   	movff	btemp+11,plusw1
 27876  0134A4                     l8261:
 27877                           
 27878                           ;stkvar	_a @ sp[(-13)+-8]
 27879  0134A4  0EED               	movlw	-19
 27880  0134A6  8EE3               	bsf	plusw1,7,c
 27881  0134A8  D018               	goto	l8265
 27882  0134AA                     l8263:
 27883  0134AA  0E00               	movlw	0
 27884  0134AC  6E09               	movwf	(btemp+8)^0,c
 27885  0134AE  0E00               	movlw	0
 27886  0134B0  6E0A               	movwf	(btemp+9)^0,c
 27887  0134B2  0E00               	movlw	0
 27888  0134B4  6E0B               	movwf	(btemp+10)^0,c
 27889  0134B6  0E00               	movlw	0
 27890  0134B8  6E0C               	movwf	(btemp+11)^0,c
 27891                           
 27892                           ;stkvar	_a @ sp[(-13)+-8]
 27893  0134BA  0EEB               	movlw	-21
 27894  0134BC  0060  F027  FFE3   	movff	btemp+8,plusw1
 27895  0134C2  0EEC               	movlw	-20
 27896  0134C4  0060  F02B  FFE3   	movff	btemp+9,plusw1
 27897  0134CA  0EED               	movlw	-19
 27898  0134CC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27899  0134D2  0EEE               	movlw	-18
 27900  0134D4  0060  F033  FFE3   	movff	btemp+11,plusw1
 27901  0134DA                     l8265:
 27902                           
 27903                           ;stkvar	_aexp @ sp[(-13)+11]
 27904  0134DA  0EFE               	movlw	-2
 27905  0134DC  50E3               	movf	plusw1,w,c
 27906  0134DE  B4D8               	btfsc	status,2,c
 27907  0134E0  D004               	goto	u6750
 27908                           
 27909                           ;stkvar	_bexp @ sp[(-13)+10]
 27910  0134E2  0EFD               	movlw	-3
 27911  0134E4  50E3               	movf	plusw1,w,c
 27912  0134E6  A4D8               	btfss	status,2,c
 27913  0134E8  D009               	goto	l8273
 27914  0134EA                     u6750:
 27915  0134EA  0E00               	movlw	0
 27916  0134EC  6E01               	movwf	btemp^0,c
 27917  0134EE  0E00               	movlw	0
 27918  0134F0  6E02               	movwf	(btemp+1)^0,c
 27919  0134F2  0E00               	movlw	0
 27920  0134F4  6E03               	movwf	(btemp+2)^0,c
 27921  0134F6  0E00               	movlw	0
 27922  0134F8  6E04               	movwf	(btemp+3)^0,c
 27923  0134FA  D332               	goto	l3018
 27924  0134FC                     l8273:
 27925                           
 27926                           ;stkvar	_b @ sp[(-13)+-4]
 27927  0134FC  0EEF               	movlw	-17
 27928  0134FE  006F FF8C  F00C    	movff	plusw1,btemp+11
 27929                           
 27930                           ;stkvar	_a @ sp[(-13)+-8]
 27931  013504  0EED               	movlw	237
 27932  013506  24E1               	addwf	fsr1l,w,c
 27933  013508  6ED9               	movwf	fsr2l,c
 27934  01350A  0EFF               	movlw	255
 27935  01350C  20E2               	addwfc	fsr1h,w,c
 27936  01350E  6EDA               	movwf	fsr2h,c
 27937  013510  50DF               	movf	indf2,w,c
 27938  013512  020C               	mulwf	(btemp+11)^0,c
 27939                           
 27940                           ;stkvar	_temp @ sp[(-13)+8]
 27941  013514  0EFB               	movlw	-5
 27942  013516  006F FFCF FFE3     	movff	prodl,plusw1
 27943  01351C  0EFC               	movlw	-4
 27944  01351E  006F FFD3 FFE3     	movff	prodh,plusw1
 27945                           
 27946                           ;stkvar	_temp @ sp[(-13)+8]
 27947  013524  0EFB               	movlw	-5
 27948  013526  006F FF8C  F00C    	movff	plusw1,btemp+11
 27949  01352C  0060  F030  F005   	movff	btemp+11,btemp+4
 27950  013532  6A06               	clrf	(btemp+5)^0,c
 27951  013534  6A07               	clrf	(btemp+6)^0,c
 27952  013536  6A08               	clrf	(btemp+7)^0,c
 27953                           
 27954                           ;stkvar	_grs @ sp[(-13)+4]
 27955  013538  0EF7               	movlw	-9
 27956  01353A  0060  F017  FFE3   	movff	btemp+4,plusw1
 27957  013540  0EF8               	movlw	-8
 27958  013542  0060  F01B  FFE3   	movff	btemp+5,plusw1
 27959  013548  0EF9               	movlw	-7
 27960  01354A  0060  F01F  FFE3   	movff	btemp+6,plusw1
 27961  013550  0EFA               	movlw	-6
 27962  013552  0060  F023  FFE3   	movff	btemp+7,plusw1
 27963                           
 27964                           ;stkvar	_temp @ sp[(-13)+8]
 27965  013558  0EFC               	movlw	252
 27966  01355A  24E1               	addwf	fsr1l,w,c
 27967  01355C  6ED9               	movwf	fsr2l,c
 27968  01355E  0EFF               	movlw	255
 27969  013560  20E2               	addwfc	fsr1h,w,c
 27970  013562  6EDA               	movwf	fsr2h,c
 27971  013564  50DF               	movf	indf2,w,c
 27972  013566  6E0C               	movwf	(btemp+11)^0,c
 27973  013568  0060  F030  F005   	movff	btemp+11,btemp+4
 27974  01356E  6A06               	clrf	(btemp+5)^0,c
 27975  013570  6A07               	clrf	(btemp+6)^0,c
 27976  013572  6A08               	clrf	(btemp+7)^0,c
 27977                           
 27978                           ;stkvar	_prod @ sp[(-13)+0]
 27979  013574  0EF3               	movlw	-13
 27980  013576  0060  F017  FFE3   	movff	btemp+4,plusw1
 27981  01357C  0EF4               	movlw	-12
 27982  01357E  0060  F01B  FFE3   	movff	btemp+5,plusw1
 27983  013584  0EF5               	movlw	-11
 27984  013586  0060  F01F  FFE3   	movff	btemp+6,plusw1
 27985  01358C  0EF6               	movlw	-10
 27986  01358E  0060  F023  FFE3   	movff	btemp+7,plusw1
 27987                           
 27988                           ;stkvar	_b @ sp[(-13)+-4]
 27989  013594  0EF0               	movlw	240
 27990  013596  24E1               	addwf	fsr1l,w,c
 27991  013598  6ED9               	movwf	fsr2l,c
 27992  01359A  0EFF               	movlw	255
 27993  01359C  20E2               	addwfc	fsr1h,w,c
 27994  01359E  6EDA               	movwf	fsr2h,c
 27995  0135A0  50DF               	movf	indf2,w,c
 27996  0135A2  6E0C               	movwf	(btemp+11)^0,c
 27997                           
 27998                           ;stkvar	_a @ sp[(-13)+-8]
 27999  0135A4  0EEC               	movlw	236
 28000  0135A6  24E1               	addwf	fsr1l,w,c
 28001  0135A8  6ED9               	movwf	fsr2l,c
 28002  0135AA  0EFF               	movlw	255
 28003  0135AC  20E2               	addwfc	fsr1h,w,c
 28004  0135AE  6EDA               	movwf	fsr2h,c
 28005  0135B0  50DF               	movf	indf2,w,c
 28006  0135B2  020C               	mulwf	(btemp+11)^0,c
 28007                           
 28008                           ;stkvar	_temp @ sp[(-13)+8]
 28009  0135B4  0EFB               	movlw	-5
 28010  0135B6  006F FFCF FFE3     	movff	prodl,plusw1
 28011  0135BC  0EFC               	movlw	-4
 28012  0135BE  006F FFD3 FFE3     	movff	prodh,plusw1
 28013                           
 28014                           ;stkvar	_grs @ sp[(-13)+4]
 28015  0135C4  50E1               	movf	fsr1l,w,c
 28016  0135C6  0FF7               	addlw	-9
 28017  0135C8  6ED9               	movwf	fsr2l,c
 28018  0135CA  50E2               	movf	fsr1h,w,c
 28019  0135CC  6EDA               	movwf	fsr2h,c
 28020  0135CE  0EFF               	movlw	255
 28021  0135D0  22DA               	addwfc	fsr2h,f,c
 28022                           
 28023                           ;stkvar	_temp @ sp[(-13)+8]
 28024  0135D2  0EFB               	movlw	-5
 28025  0135D4  50E3               	movf	plusw1,w,c
 28026  0135D6  26DE               	addwf	postinc2,f,c
 28027  0135D8  0E00               	movlw	0
 28028  0135DA  22DE               	addwfc	postinc2,f,c
 28029  0135DC  22DE               	addwfc	postinc2,f,c
 28030  0135DE  22DE               	addwfc	postinc2,f,c
 28031                           
 28032                           ;stkvar	_prod @ sp[(-13)+0]
 28033  0135E0  50E1               	movf	fsr1l,w,c
 28034  0135E2  0FF3               	addlw	-13
 28035  0135E4  6ED9               	movwf	fsr2l,c
 28036  0135E6  50E2               	movf	fsr1h,w,c
 28037  0135E8  6EDA               	movwf	fsr2h,c
 28038  0135EA  0EFF               	movlw	255
 28039  0135EC  22DA               	addwfc	fsr2h,f,c
 28040                           
 28041                           ;stkvar	_temp @ sp[(-13)+8]
 28042  0135EE  0EFC               	movlw	252
 28043  0135F0  24E1               	addwf	fsr1l,w,c
 28044  0135F2  6EE9               	movwf	fsr0l,c
 28045  0135F4  0EFF               	movlw	255
 28046  0135F6  20E2               	addwfc	fsr1h,w,c
 28047  0135F8  6EEA               	movwf	fsr0h,c
 28048  0135FA  50EF               	movf	indf0,w,c
 28049  0135FC  26DE               	addwf	postinc2,f,c
 28050  0135FE  0E00               	movlw	0
 28051  013600  22DE               	addwfc	postinc2,f,c
 28052  013602  22DE               	addwfc	postinc2,f,c
 28053  013604  22DE               	addwfc	postinc2,f,c
 28054                           
 28055                           ;stkvar	_b @ sp[(-13)+-4]
 28056  013606  0EF1               	movlw	241
 28057  013608  24E1               	addwf	fsr1l,w,c
 28058  01360A  6ED9               	movwf	fsr2l,c
 28059  01360C  0EFF               	movlw	255
 28060  01360E  20E2               	addwfc	fsr1h,w,c
 28061  013610  6EDA               	movwf	fsr2h,c
 28062  013612  50DF               	movf	indf2,w,c
 28063  013614  6E0C               	movwf	(btemp+11)^0,c
 28064                           
 28065                           ;stkvar	_a @ sp[(-13)+-8]
 28066  013616  0EEB               	movlw	-21
 28067  013618  50E3               	movf	plusw1,w,c
 28068  01361A  020C               	mulwf	(btemp+11)^0,c
 28069                           
 28070                           ;stkvar	_temp @ sp[(-13)+8]
 28071  01361C  0EFB               	movlw	-5
 28072  01361E  006F FFCF FFE3     	movff	prodl,plusw1
 28073  013624  0EFC               	movlw	-4
 28074  013626  006F FFD3 FFE3     	movff	prodh,plusw1
 28075                           
 28076                           ;stkvar	_grs @ sp[(-13)+4]
 28077  01362C  50E1               	movf	fsr1l,w,c
 28078  01362E  0FF7               	addlw	-9
 28079  013630  6ED9               	movwf	fsr2l,c
 28080  013632  50E2               	movf	fsr1h,w,c
 28081  013634  6EDA               	movwf	fsr2h,c
 28082  013636  0EFF               	movlw	255
 28083  013638  22DA               	addwfc	fsr2h,f,c
 28084                           
 28085                           ;stkvar	_temp @ sp[(-13)+8]
 28086  01363A  0EFB               	movlw	-5
 28087  01363C  50E3               	movf	plusw1,w,c
 28088  01363E  26DE               	addwf	postinc2,f,c
 28089  013640  0E00               	movlw	0
 28090  013642  22DE               	addwfc	postinc2,f,c
 28091  013644  22DE               	addwfc	postinc2,f,c
 28092  013646  22DE               	addwfc	postinc2,f,c
 28093                           
 28094                           ;stkvar	_prod @ sp[(-13)+0]
 28095  013648  50E1               	movf	fsr1l,w,c
 28096  01364A  0FF3               	addlw	-13
 28097  01364C  6ED9               	movwf	fsr2l,c
 28098  01364E  50E2               	movf	fsr1h,w,c
 28099  013650  6EDA               	movwf	fsr2h,c
 28100  013652  0EFF               	movlw	255
 28101  013654  22DA               	addwfc	fsr2h,f,c
 28102                           
 28103                           ;stkvar	_temp @ sp[(-13)+8]
 28104  013656  0EFC               	movlw	252
 28105  013658  24E1               	addwf	fsr1l,w,c
 28106  01365A  6EE9               	movwf	fsr0l,c
 28107  01365C  0EFF               	movlw	255
 28108  01365E  20E2               	addwfc	fsr1h,w,c
 28109  013660  6EEA               	movwf	fsr0h,c
 28110  013662  50EF               	movf	indf0,w,c
 28111  013664  26DE               	addwf	postinc2,f,c
 28112  013666  0E00               	movlw	0
 28113  013668  22DE               	addwfc	postinc2,f,c
 28114  01366A  22DE               	addwfc	postinc2,f,c
 28115  01366C  22DE               	addwfc	postinc2,f,c
 28116                           
 28117                           ;stkvar	_grs @ sp[(-13)+4]
 28118  01366E  50E1               	movf	fsr1l,w,c
 28119  013670  0FF7               	addlw	-9
 28120  013672  6ED9               	movwf	fsr2l,c
 28121  013674  50E2               	movf	fsr1h,w,c
 28122  013676  6EDA               	movwf	fsr2h,c
 28123  013678  0EFF               	movlw	255
 28124  01367A  22DA               	addwfc	fsr2h,f,c
 28125  01367C  0E08               	movlw	8
 28126  01367E                     u6765:
 28127  01367E  90D8               	bcf	status,0,c
 28128  013680  36DE               	rlcf	postinc2,f,c
 28129  013682  36DE               	rlcf	postinc2,f,c
 28130  013684  36DE               	rlcf	postinc2,f,c
 28131  013686  36DD               	rlcf	postdec2,f,c
 28132  013688  52DD               	movf	postdec2,f,c
 28133  01368A  52DD               	movf	postdec2,f,c
 28134  01368C  2EE8               	decfsz	wreg,f,c
 28135  01368E  D7F7               	goto	u6765
 28136                           
 28137                           ;stkvar	_b @ sp[(-13)+-4]
 28138  013690  0EF0               	movlw	240
 28139  013692  24E1               	addwf	fsr1l,w,c
 28140  013694  6ED9               	movwf	fsr2l,c
 28141  013696  0EFF               	movlw	255
 28142  013698  20E2               	addwfc	fsr1h,w,c
 28143  01369A  6EDA               	movwf	fsr2h,c
 28144  01369C  50DF               	movf	indf2,w,c
 28145  01369E  6E0C               	movwf	(btemp+11)^0,c
 28146                           
 28147                           ;stkvar	_a @ sp[(-13)+-8]
 28148  0136A0  0EEB               	movlw	-21
 28149  0136A2  50E3               	movf	plusw1,w,c
 28150  0136A4  020C               	mulwf	(btemp+11)^0,c
 28151                           
 28152                           ;stkvar	_temp @ sp[(-13)+8]
 28153  0136A6  0EFB               	movlw	-5
 28154  0136A8  006F FFCF FFE3     	movff	prodl,plusw1
 28155  0136AE  0EFC               	movlw	-4
 28156  0136B0  006F FFD3 FFE3     	movff	prodh,plusw1
 28157                           
 28158                           ;stkvar	_temp @ sp[(-13)+8]
 28159  0136B6  0EFB               	movlw	-5
 28160  0136B8  006F FF8C  F00B    	movff	plusw1,btemp+10
 28161  0136BE  0EFC               	movlw	-4
 28162  0136C0  006F FF8C  F00C    	movff	plusw1,btemp+11
 28163                           
 28164                           ;stkvar	_grs @ sp[(-13)+4]
 28165  0136C6  50E1               	movf	fsr1l,w,c
 28166  0136C8  0FF7               	addlw	-9
 28167  0136CA  6ED9               	movwf	fsr2l,c
 28168  0136CC  50E2               	movf	fsr1h,w,c
 28169  0136CE  6EDA               	movwf	fsr2h,c
 28170  0136D0  0EFF               	movlw	255
 28171  0136D2  22DA               	addwfc	fsr2h,f,c
 28172  0136D4  500B               	movf	(btemp+10)^0,w,c
 28173  0136D6  26DE               	addwf	postinc2,f,c
 28174  0136D8  500C               	movf	(btemp+11)^0,w,c
 28175  0136DA  22DE               	addwfc	postinc2,f,c
 28176  0136DC  0E00               	movlw	0
 28177  0136DE  22DE               	addwfc	postinc2,f,c
 28178  0136E0  22DE               	addwfc	postinc2,f,c
 28179                           
 28180                           ;stkvar	_b @ sp[(-13)+-4]
 28181  0136E2  0EEF               	movlw	-17
 28182  0136E4  006F FF8C  F00C    	movff	plusw1,btemp+11
 28183                           
 28184                           ;stkvar	_a @ sp[(-13)+-8]
 28185  0136EA  0EEC               	movlw	236
 28186  0136EC  24E1               	addwf	fsr1l,w,c
 28187  0136EE  6ED9               	movwf	fsr2l,c
 28188  0136F0  0EFF               	movlw	255
 28189  0136F2  20E2               	addwfc	fsr1h,w,c
 28190  0136F4  6EDA               	movwf	fsr2h,c
 28191  0136F6  50DF               	movf	indf2,w,c
 28192  0136F8  020C               	mulwf	(btemp+11)^0,c
 28193                           
 28194                           ;stkvar	_temp @ sp[(-13)+8]
 28195  0136FA  0EFB               	movlw	-5
 28196  0136FC  006F FFCF FFE3     	movff	prodl,plusw1
 28197  013702  0EFC               	movlw	-4
 28198  013704  006F FFD3 FFE3     	movff	prodh,plusw1
 28199                           
 28200                           ;stkvar	_temp @ sp[(-13)+8]
 28201  01370A  0EFB               	movlw	-5
 28202  01370C  006F FF8C  F00B    	movff	plusw1,btemp+10
 28203  013712  0EFC               	movlw	-4
 28204  013714  006F FF8C  F00C    	movff	plusw1,btemp+11
 28205                           
 28206                           ;stkvar	_grs @ sp[(-13)+4]
 28207  01371A  50E1               	movf	fsr1l,w,c
 28208  01371C  0FF7               	addlw	-9
 28209  01371E  6ED9               	movwf	fsr2l,c
 28210  013720  50E2               	movf	fsr1h,w,c
 28211  013722  6EDA               	movwf	fsr2h,c
 28212  013724  0EFF               	movlw	255
 28213  013726  22DA               	addwfc	fsr2h,f,c
 28214  013728  500B               	movf	(btemp+10)^0,w,c
 28215  01372A  26DE               	addwf	postinc2,f,c
 28216  01372C  500C               	movf	(btemp+11)^0,w,c
 28217  01372E  22DE               	addwfc	postinc2,f,c
 28218  013730  0E00               	movlw	0
 28219  013732  22DE               	addwfc	postinc2,f,c
 28220  013734  22DE               	addwfc	postinc2,f,c
 28221                           
 28222                           ;stkvar	_grs @ sp[(-13)+4]
 28223  013736  50E1               	movf	fsr1l,w,c
 28224  013738  0FF7               	addlw	-9
 28225  01373A  6ED9               	movwf	fsr2l,c
 28226  01373C  50E2               	movf	fsr1h,w,c
 28227  01373E  6EDA               	movwf	fsr2h,c
 28228  013740  0EFF               	movlw	255
 28229  013742  22DA               	addwfc	fsr2h,f,c
 28230  013744  0E08               	movlw	8
 28231  013746                     u6775:
 28232  013746  90D8               	bcf	status,0,c
 28233  013748  36DE               	rlcf	postinc2,f,c
 28234  01374A  36DE               	rlcf	postinc2,f,c
 28235  01374C  36DE               	rlcf	postinc2,f,c
 28236  01374E  36DD               	rlcf	postdec2,f,c
 28237  013750  52DD               	movf	postdec2,f,c
 28238  013752  52DD               	movf	postdec2,f,c
 28239  013754  2EE8               	decfsz	wreg,f,c
 28240  013756  D7F7               	goto	u6775
 28241                           
 28242                           ;stkvar	_b @ sp[(-13)+-4]
 28243  013758  0EEF               	movlw	-17
 28244  01375A  006F FF8C  F00C    	movff	plusw1,btemp+11
 28245                           
 28246                           ;stkvar	_a @ sp[(-13)+-8]
 28247  013760  0EEB               	movlw	-21
 28248  013762  50E3               	movf	plusw1,w,c
 28249  013764  020C               	mulwf	(btemp+11)^0,c
 28250                           
 28251                           ;stkvar	_temp @ sp[(-13)+8]
 28252  013766  0EFB               	movlw	-5
 28253  013768  006F FFCF FFE3     	movff	prodl,plusw1
 28254  01376E  0EFC               	movlw	-4
 28255  013770  006F FFD3 FFE3     	movff	prodh,plusw1
 28256                           
 28257                           ;stkvar	_temp @ sp[(-13)+8]
 28258  013776  0EFB               	movlw	-5
 28259  013778  006F FF8C  F00B    	movff	plusw1,btemp+10
 28260  01377E  0EFC               	movlw	-4
 28261  013780  006F FF8C  F00C    	movff	plusw1,btemp+11
 28262                           
 28263                           ;stkvar	_grs @ sp[(-13)+4]
 28264  013786  50E1               	movf	fsr1l,w,c
 28265  013788  0FF7               	addlw	-9
 28266  01378A  6ED9               	movwf	fsr2l,c
 28267  01378C  50E2               	movf	fsr1h,w,c
 28268  01378E  6EDA               	movwf	fsr2h,c
 28269  013790  0EFF               	movlw	255
 28270  013792  22DA               	addwfc	fsr2h,f,c
 28271  013794  500B               	movf	(btemp+10)^0,w,c
 28272  013796  26DE               	addwf	postinc2,f,c
 28273  013798  500C               	movf	(btemp+11)^0,w,c
 28274  01379A  22DE               	addwfc	postinc2,f,c
 28275  01379C  0E00               	movlw	0
 28276  01379E  22DE               	addwfc	postinc2,f,c
 28277  0137A0  22DE               	addwfc	postinc2,f,c
 28278                           
 28279                           ;stkvar	_b @ sp[(-13)+-4]
 28280  0137A2  0EF0               	movlw	240
 28281  0137A4  24E1               	addwf	fsr1l,w,c
 28282  0137A6  6ED9               	movwf	fsr2l,c
 28283  0137A8  0EFF               	movlw	255
 28284  0137AA  20E2               	addwfc	fsr1h,w,c
 28285  0137AC  6EDA               	movwf	fsr2h,c
 28286  0137AE  50DF               	movf	indf2,w,c
 28287  0137B0  6E0C               	movwf	(btemp+11)^0,c
 28288                           
 28289                           ;stkvar	_a @ sp[(-13)+-8]
 28290  0137B2  0EED               	movlw	237
 28291  0137B4  24E1               	addwf	fsr1l,w,c
 28292  0137B6  6ED9               	movwf	fsr2l,c
 28293  0137B8  0EFF               	movlw	255
 28294  0137BA  20E2               	addwfc	fsr1h,w,c
 28295  0137BC  6EDA               	movwf	fsr2h,c
 28296  0137BE  50DF               	movf	indf2,w,c
 28297  0137C0  020C               	mulwf	(btemp+11)^0,c
 28298                           
 28299                           ;stkvar	_temp @ sp[(-13)+8]
 28300  0137C2  0EFB               	movlw	-5
 28301  0137C4  006F FFCF FFE3     	movff	prodl,plusw1
 28302  0137CA  0EFC               	movlw	-4
 28303  0137CC  006F FFD3 FFE3     	movff	prodh,plusw1
 28304                           
 28305                           ;stkvar	_temp @ sp[(-13)+8]
 28306  0137D2  0EFB               	movlw	-5
 28307  0137D4  006F FF8C  F00B    	movff	plusw1,btemp+10
 28308  0137DA  0EFC               	movlw	-4
 28309  0137DC  006F FF8C  F00C    	movff	plusw1,btemp+11
 28310                           
 28311                           ;stkvar	_prod @ sp[(-13)+0]
 28312  0137E2  50E1               	movf	fsr1l,w,c
 28313  0137E4  0FF3               	addlw	-13
 28314  0137E6  6ED9               	movwf	fsr2l,c
 28315  0137E8  50E2               	movf	fsr1h,w,c
 28316  0137EA  6EDA               	movwf	fsr2h,c
 28317  0137EC  0EFF               	movlw	255
 28318  0137EE  22DA               	addwfc	fsr2h,f,c
 28319  0137F0  500B               	movf	(btemp+10)^0,w,c
 28320  0137F2  26DE               	addwf	postinc2,f,c
 28321  0137F4  500C               	movf	(btemp+11)^0,w,c
 28322  0137F6  22DE               	addwfc	postinc2,f,c
 28323  0137F8  0E00               	movlw	0
 28324  0137FA  22DE               	addwfc	postinc2,f,c
 28325  0137FC  22DE               	addwfc	postinc2,f,c
 28326                           
 28327                           ;stkvar	_b @ sp[(-13)+-4]
 28328  0137FE  0EF1               	movlw	241
 28329  013800  24E1               	addwf	fsr1l,w,c
 28330  013802  6ED9               	movwf	fsr2l,c
 28331  013804  0EFF               	movlw	255
 28332  013806  20E2               	addwfc	fsr1h,w,c
 28333  013808  6EDA               	movwf	fsr2h,c
 28334  01380A  50DF               	movf	indf2,w,c
 28335  01380C  6E0C               	movwf	(btemp+11)^0,c
 28336                           
 28337                           ;stkvar	_a @ sp[(-13)+-8]
 28338  01380E  0EEC               	movlw	236
 28339  013810  24E1               	addwf	fsr1l,w,c
 28340  013812  6ED9               	movwf	fsr2l,c
 28341  013814  0EFF               	movlw	255
 28342  013816  20E2               	addwfc	fsr1h,w,c
 28343  013818  6EDA               	movwf	fsr2h,c
 28344  01381A  50DF               	movf	indf2,w,c
 28345  01381C  020C               	mulwf	(btemp+11)^0,c
 28346                           
 28347                           ;stkvar	_temp @ sp[(-13)+8]
 28348  01381E  0EFB               	movlw	-5
 28349  013820  006F FFCF FFE3     	movff	prodl,plusw1
 28350  013826  0EFC               	movlw	-4
 28351  013828  006F FFD3 FFE3     	movff	prodh,plusw1
 28352                           
 28353                           ;stkvar	_temp @ sp[(-13)+8]
 28354  01382E  0EFB               	movlw	-5
 28355  013830  006F FF8C  F00B    	movff	plusw1,btemp+10
 28356  013836  0EFC               	movlw	-4
 28357  013838  006F FF8C  F00C    	movff	plusw1,btemp+11
 28358                           
 28359                           ;stkvar	_prod @ sp[(-13)+0]
 28360  01383E  50E1               	movf	fsr1l,w,c
 28361  013840  0FF3               	addlw	-13
 28362  013842  6ED9               	movwf	fsr2l,c
 28363  013844  50E2               	movf	fsr1h,w,c
 28364  013846  6EDA               	movwf	fsr2h,c
 28365  013848  0EFF               	movlw	255
 28366  01384A  22DA               	addwfc	fsr2h,f,c
 28367  01384C  500B               	movf	(btemp+10)^0,w,c
 28368  01384E  26DE               	addwf	postinc2,f,c
 28369  013850  500C               	movf	(btemp+11)^0,w,c
 28370  013852  22DE               	addwfc	postinc2,f,c
 28371  013854  0E00               	movlw	0
 28372  013856  22DE               	addwfc	postinc2,f,c
 28373  013858  22DE               	addwfc	postinc2,f,c
 28374                           
 28375                           ;stkvar	_b @ sp[(-13)+-4]
 28376  01385A  0EF1               	movlw	241
 28377  01385C  24E1               	addwf	fsr1l,w,c
 28378  01385E  6ED9               	movwf	fsr2l,c
 28379  013860  0EFF               	movlw	255
 28380  013862  20E2               	addwfc	fsr1h,w,c
 28381  013864  6EDA               	movwf	fsr2h,c
 28382  013866  50DF               	movf	indf2,w,c
 28383  013868  6E0C               	movwf	(btemp+11)^0,c
 28384                           
 28385                           ;stkvar	_a @ sp[(-13)+-8]
 28386  01386A  0EED               	movlw	237
 28387  01386C  24E1               	addwf	fsr1l,w,c
 28388  01386E  6ED9               	movwf	fsr2l,c
 28389  013870  0EFF               	movlw	255
 28390  013872  20E2               	addwfc	fsr1h,w,c
 28391  013874  6EDA               	movwf	fsr2h,c
 28392  013876  50DF               	movf	indf2,w,c
 28393  013878  020C               	mulwf	(btemp+11)^0,c
 28394                           
 28395                           ;stkvar	_temp @ sp[(-13)+8]
 28396  01387A  0EFB               	movlw	-5
 28397  01387C  006F FFCF FFE3     	movff	prodl,plusw1
 28398  013882  0EFC               	movlw	-4
 28399  013884  006F FFD3 FFE3     	movff	prodh,plusw1
 28400                           
 28401                           ;stkvar	_temp @ sp[(-13)+8]
 28402  01388A  0EFB               	movlw	-5
 28403  01388C  006F FF8C  F00B    	movff	plusw1,btemp+10
 28404  013892  0EFC               	movlw	-4
 28405  013894  006F FF8C  F00C    	movff	plusw1,btemp+11
 28406  01389A  500B               	movf	(btemp+10)^0,w,c
 28407  01389C  6E05               	movwf	(btemp+4)^0,c
 28408  01389E  500C               	movf	(btemp+11)^0,w,c
 28409  0138A0  6E06               	movwf	(btemp+5)^0,c
 28410  0138A2  6A07               	clrf	(btemp+6)^0,c
 28411  0138A4  6A08               	clrf	(btemp+7)^0,c
 28412  0138A6  0060  F01C  F008   	movff	btemp+6,btemp+7
 28413  0138AC  0060  F018  F007   	movff	btemp+5,btemp+6
 28414  0138B2  0060  F014  F006   	movff	btemp+4,btemp+5
 28415  0138B8  6A05               	clrf	(btemp+4)^0,c
 28416                           
 28417                           ;stkvar	_prod @ sp[(-13)+0]
 28418  0138BA  50E1               	movf	fsr1l,w,c
 28419  0138BC  0FF3               	addlw	-13
 28420  0138BE  6ED9               	movwf	fsr2l,c
 28421  0138C0  50E2               	movf	fsr1h,w,c
 28422  0138C2  6EDA               	movwf	fsr2h,c
 28423  0138C4  0EFF               	movlw	255
 28424  0138C6  22DA               	addwfc	fsr2h,f,c
 28425  0138C8  5005               	movf	(btemp+4)^0,w,c
 28426  0138CA  26DE               	addwf	postinc2,f,c
 28427  0138CC  5006               	movf	(btemp+5)^0,w,c
 28428  0138CE  22DE               	addwfc	postinc2,f,c
 28429  0138D0  5007               	movf	(btemp+6)^0,w,c
 28430  0138D2  22DE               	addwfc	postinc2,f,c
 28431  0138D4  5008               	movf	(btemp+7)^0,w,c
 28432  0138D6  22DE               	addwfc	postinc2,f,c
 28433                           
 28434                           ;stkvar	_prod @ sp[(-13)+0]
 28435  0138D8  50E1               	movf	fsr1l,w,c
 28436  0138DA  0FF3               	addlw	-13
 28437  0138DC  6ED9               	movwf	fsr2l,c
 28438  0138DE  50E2               	movf	fsr1h,w,c
 28439  0138E0  6EDA               	movwf	fsr2h,c
 28440  0138E2  0EFF               	movlw	255
 28441  0138E4  22DA               	addwfc	fsr2h,f,c
 28442                           
 28443                           ;stkvar	_grs @ sp[(-13)+4]
 28444  0138E6  0EFA               	movlw	250
 28445  0138E8  24E1               	addwf	fsr1l,w,c
 28446  0138EA  6EE9               	movwf	fsr0l,c
 28447  0138EC  0EFF               	movlw	255
 28448  0138EE  20E2               	addwfc	fsr1h,w,c
 28449  0138F0  6EEA               	movwf	fsr0h,c
 28450  0138F2  50EF               	movf	indf0,w,c
 28451  0138F4  26DE               	addwf	postinc2,f,c
 28452  0138F6  0E00               	movlw	0
 28453  0138F8  22DE               	addwfc	postinc2,f,c
 28454  0138FA  22DE               	addwfc	postinc2,f,c
 28455  0138FC  22DE               	addwfc	postinc2,f,c
 28456                           
 28457                           ;stkvar	_grs @ sp[(-13)+4]
 28458  0138FE  50E1               	movf	fsr1l,w,c
 28459  013900  0FF7               	addlw	-9
 28460  013902  6ED9               	movwf	fsr2l,c
 28461  013904  50E2               	movf	fsr1h,w,c
 28462  013906  6EDA               	movwf	fsr2h,c
 28463  013908  0EFF               	movlw	255
 28464  01390A  22DA               	addwfc	fsr2h,f,c
 28465  01390C  0E08               	movlw	8
 28466  01390E                     u6785:
 28467  01390E  90D8               	bcf	status,0,c
 28468  013910  36DE               	rlcf	postinc2,f,c
 28469  013912  36DE               	rlcf	postinc2,f,c
 28470  013914  36DE               	rlcf	postinc2,f,c
 28471  013916  36DD               	rlcf	postdec2,f,c
 28472  013918  52DD               	movf	postdec2,f,c
 28473  01391A  52DD               	movf	postdec2,f,c
 28474  01391C  2EE8               	decfsz	wreg,f,c
 28475  01391E  D7F7               	goto	u6785
 28476  013920  0E82               	movlw	130
 28477  013922  6E0B               	movwf	(btemp+10)^0,c
 28478  013924  0EFF               	movlw	255
 28479  013926  6E0C               	movwf	(btemp+11)^0,c
 28480                           
 28481                           ;stkvar	_bexp @ sp[(-13)+10]
 28482  013928  0EFD               	movlw	-3
 28483  01392A  50E3               	movf	plusw1,w,c
 28484  01392C  6E09               	movwf	(btemp+8)^0,c
 28485  01392E  6A0A               	clrf	(btemp+9)^0,c
 28486                           
 28487                           ;stkvar	_aexp @ sp[(-13)+11]
 28488  013930  0EFE               	movlw	-2
 28489  013932  50E3               	movf	plusw1,w,c
 28490  013934  2609               	addwf	(btemp+8)^0,f,c
 28491  013936  0E00               	movlw	0
 28492  013938  220A               	addwfc	(btemp+9)^0,f,c
 28493  01393A  500B               	movf	(btemp+10)^0,w,c
 28494  01393C  2609               	addwf	(btemp+8)^0,f,c
 28495  01393E  500C               	movf	(btemp+11)^0,w,c
 28496  013940  220A               	addwfc	(btemp+9)^0,f,c
 28497                           
 28498                           ;stkvar	_temp @ sp[(-13)+8]
 28499  013942  0EFB               	movlw	-5
 28500  013944  0060  F027  FFE3   	movff	btemp+8,plusw1
 28501  01394A  0EFC               	movlw	-4
 28502  01394C  0060  F02B  FFE3   	movff	btemp+9,plusw1
 28503  013952  D021               	goto	l8335
 28504  013954                     l8325:
 28505                           
 28506                           ;stkvar	_prod @ sp[(-13)+0]
 28507  013954  90D8               	bcf	status,0,c
 28508  013956  0EF3               	movlw	-13
 28509  013958  36E3               	rlcf	plusw1,f,c
 28510  01395A  0EF4               	movlw	-12
 28511  01395C  36E3               	rlcf	plusw1,f,c
 28512  01395E  0EF5               	movlw	-11
 28513  013960  36E3               	rlcf	plusw1,f,c
 28514  013962  0EF6               	movlw	-10
 28515  013964  36E3               	rlcf	plusw1,f,c
 28516                           
 28517                           ;stkvar	_grs @ sp[(-13)+4]
 28518  013966  0EFA               	movlw	-6
 28519  013968  AEE3               	btfss	plusw1,7,c
 28520  01396A  D002               	goto	l8331
 28521                           
 28522                           ;stkvar	_prod @ sp[(-13)+0]
 28523  01396C  0EF3               	movlw	-13
 28524  01396E  80E3               	bsf	plusw1,0,c
 28525  013970                     l8331:
 28526                           
 28527                           ;stkvar	_grs @ sp[(-13)+4]
 28528  013970  90D8               	bcf	status,0,c
 28529  013972  0EF7               	movlw	-9
 28530  013974  36E3               	rlcf	plusw1,f,c
 28531  013976  0EF8               	movlw	-8
 28532  013978  36E3               	rlcf	plusw1,f,c
 28533  01397A  0EF9               	movlw	-7
 28534  01397C  36E3               	rlcf	plusw1,f,c
 28535  01397E  0EFA               	movlw	-6
 28536  013980  36E3               	rlcf	plusw1,f,c
 28537                           
 28538                           ;stkvar	_temp @ sp[(-13)+8]
 28539  013982  50E1               	movf	fsr1l,w,c
 28540  013984  0FFB               	addlw	-5
 28541  013986  6ED9               	movwf	fsr2l,c
 28542  013988  50E2               	movf	fsr1h,w,c
 28543  01398A  6EDA               	movwf	fsr2h,c
 28544  01398C  0EFF               	movlw	255
 28545  01398E  22DA               	addwfc	fsr2h,f,c
 28546  013990  06DE               	decf	postinc2,f,c
 28547  013992  0E00               	movlw	0
 28548  013994  5ADD               	subwfb	postdec2,f,c
 28549  013996                     l8335:
 28550                           
 28551                           ;stkvar	_prod @ sp[(-13)+0]
 28552  013996  0EF5               	movlw	-11
 28553  013998  AEE3               	btfss	plusw1,7,c
 28554  01399A  D7DC               	goto	l8325
 28555                           
 28556                           ;stkvar	_aexp @ sp[(-13)+11]
 28557  01399C  0EFE               	movlw	-2
 28558  01399E  6AE3               	clrf	plusw1,c
 28559                           
 28560                           ;stkvar	_grs @ sp[(-13)+4]
 28561  0139A0  0EFA               	movlw	-6
 28562  0139A2  AEE3               	btfss	plusw1,7,c
 28563  0139A4  D020               	goto	l8349
 28564                           
 28565                           ;stkvar	_grs @ sp[(-13)+4]
 28566  0139A6  50E1               	movf	fsr1l,w,c
 28567  0139A8  0FF7               	addlw	-9
 28568  0139AA  6ED9               	movwf	fsr2l,c
 28569  0139AC  50E2               	movf	fsr1h,w,c
 28570  0139AE  6EDA               	movwf	fsr2h,c
 28571  0139B0  0EFF               	movlw	255
 28572  0139B2  22DA               	addwfc	fsr2h,f,c
 28573  0139B4  0EFF               	movlw	255
 28574  0139B6  14DE               	andwf	postinc2,w,c
 28575  0139B8  6E09               	movwf	(btemp+8)^0,c
 28576  0139BA  0EFF               	movlw	255
 28577  0139BC  14DE               	andwf	postinc2,w,c
 28578  0139BE  6E0A               	movwf	(btemp+9)^0,c
 28579  0139C0  0EFF               	movlw	255
 28580  0139C2  14DE               	andwf	postinc2,w,c
 28581  0139C4  6E0B               	movwf	(btemp+10)^0,c
 28582  0139C6  0E7F               	movlw	127
 28583  0139C8  14DE               	andwf	postinc2,w,c
 28584  0139CA  6E0C               	movwf	(btemp+11)^0,c
 28585  0139CC  5009               	movf	(btemp+8)^0,w,c
 28586  0139CE  100A               	iorwf	(btemp+9)^0,w,c
 28587  0139D0  100B               	iorwf	(btemp+10)^0,w,c
 28588  0139D2  100C               	iorwf	(btemp+11)^0,w,c
 28589  0139D4  B4D8               	btfsc	status,2,c
 28590  0139D6  D004               	goto	l8345
 28591  0139D8                     u6820:
 28592                           
 28593                           ;stkvar	_aexp @ sp[(-13)+11]
 28594  0139D8  0EFE               	movlw	-2
 28595  0139DA  6AE3               	clrf	plusw1,c
 28596  0139DC  2AE3               	incf	plusw1,f,c
 28597  0139DE  D003               	goto	l8349
 28598  0139E0                     l8345:
 28599                           
 28600                           ;stkvar	_prod @ sp[(-13)+0]
 28601  0139E0  0EF3               	movlw	-13
 28602  0139E2  B0E3               	btfsc	plusw1,0,c
 28603  0139E4  D7F9               	goto	u6820
 28604  0139E6                     l8349:
 28605                           
 28606                           ;stkvar	_aexp @ sp[(-13)+11]
 28607  0139E6  0EFE               	movlw	-2
 28608  0139E8  50E3               	movf	plusw1,w,c
 28609  0139EA  B4D8               	btfsc	status,2,c
 28610  0139EC  D036               	goto	l8359
 28611                           
 28612                           ;stkvar	_prod @ sp[(-13)+0]
 28613  0139EE  50E1               	movf	fsr1l,w,c
 28614  0139F0  0FF3               	addlw	-13
 28615  0139F2  6ED9               	movwf	fsr2l,c
 28616  0139F4  50E2               	movf	fsr1h,w,c
 28617  0139F6  6EDA               	movwf	fsr2h,c
 28618  0139F8  0EFF               	movlw	255
 28619  0139FA  22DA               	addwfc	fsr2h,f,c
 28620  0139FC  2ADE               	incf	postinc2,f,c
 28621  0139FE  0E00               	movlw	0
 28622  013A00  22DE               	addwfc	postinc2,f,c
 28623  013A02  22DE               	addwfc	postinc2,f,c
 28624  013A04  22DE               	addwfc	postinc2,f,c
 28625                           
 28626                           ;stkvar	_prod @ sp[(-13)+0]
 28627  013A06  0EF6               	movlw	-10
 28628  013A08  A0E3               	btfss	plusw1,0,c
 28629  013A0A  D027               	goto	l8359
 28630  013A0C  0E01               	movlw	1
 28631  013A0E  6E0C               	movwf	(btemp+11)^0,c
 28632                           
 28633                           ;stkvar	_prod @ sp[(-13)+0]
 28634  013A10  50E1               	movf	fsr1l,w,c
 28635  013A12  0FF3               	addlw	-13
 28636  013A14  6ED9               	movwf	fsr2l,c
 28637  013A16  50E2               	movf	fsr1h,w,c
 28638  013A18  6EDA               	movwf	fsr2h,c
 28639  013A1A  0EFF               	movlw	255
 28640  013A1C  22DA               	addwfc	fsr2h,f,c
 28641  013A1E  280C               	incf	(btemp+11)^0,w,c
 28642  013A20  52DE               	movf	postinc2,f,c
 28643  013A22  D008               	goto	u6860
 28644  013A24                     u6865:
 28645  013A24  52DE               	movf	postinc2,f,c
 28646  013A26  90D8               	bcf	status,0,c
 28647  013A28  BEDC               	btfsc	preinc2,7,c
 28648  013A2A  80D8               	bsf	status,0,c
 28649  013A2C  32DD               	rrcf	postdec2,f,c
 28650  013A2E  32DD               	rrcf	postdec2,f,c
 28651  013A30  32DD               	rrcf	postdec2,f,c
 28652  013A32  32DE               	rrcf	postinc2,f,c
 28653  013A34                     u6860:
 28654  013A34  2EE8               	decfsz	wreg,f,c
 28655  013A36  D7F6               	goto	u6865
 28656                           
 28657                           ;stkvar	_temp @ sp[(-13)+8]
 28658  013A38  0EFB               	movlw	-5
 28659  013A3A  50E3               	movf	plusw1,w,c
 28660  013A3C  0F01               	addlw	1
 28661  013A3E  6E01               	movwf	btemp^0,c
 28662  013A40  0EFB               	movlw	-5
 28663  013A42  0060  F007  FFE3   	movff	btemp,plusw1
 28664  013A48  6A01               	clrf	btemp^0,c
 28665  013A4A  0EFC               	movlw	-4
 28666  013A4C  50E3               	movf	plusw1,w,c
 28667  013A4E  2001               	addwfc	btemp^0,w,c
 28668  013A50  6E01               	movwf	btemp^0,c
 28669  013A52  0EFC               	movlw	-4
 28670  013A54  0060  F007  FFE3   	movff	btemp,plusw1
 28671  013A5A                     l8359:
 28672                           
 28673                           ;stkvar	_temp @ sp[(-13)+8]
 28674  013A5A  0EFC               	movlw	-4
 28675  013A5C  BEE3               	btfsc	plusw1,7,c
 28676  013A5E  D020               	goto	l8363
 28677  013A60  0EFC               	movlw	-4
 28678  013A62  50E3               	movf	plusw1,w,c
 28679  013A64  E104               	bnz	u6870
 28680  013A66  0EFB               	movlw	-5
 28681  013A68  28E3               	incf	plusw1,w,c
 28682  013A6A  A0D8               	btfss	status,0,c
 28683  013A6C  D019               	goto	l8363
 28684  013A6E                     u6870:
 28685  013A6E  0E00               	movlw	0
 28686  013A70  6E09               	movwf	(btemp+8)^0,c
 28687  013A72  0E00               	movlw	0
 28688  013A74  6E0A               	movwf	(btemp+9)^0,c
 28689  013A76  0E80               	movlw	128
 28690  013A78  6E0B               	movwf	(btemp+10)^0,c
 28691  013A7A  0E7F               	movlw	127
 28692  013A7C  6E0C               	movwf	(btemp+11)^0,c
 28693                           
 28694                           ;stkvar	_prod @ sp[(-13)+0]
 28695  013A7E  0EF3               	movlw	-13
 28696  013A80  0060  F027  FFE3   	movff	btemp+8,plusw1
 28697  013A86  0EF4               	movlw	-12
 28698  013A88  0060  F02B  FFE3   	movff	btemp+9,plusw1
 28699  013A8E  0EF5               	movlw	-11
 28700  013A90  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28701  013A96  0EF6               	movlw	-10
 28702  013A98  0060  F033  FFE3   	movff	btemp+11,plusw1
 28703  013A9E  D044               	goto	l8379
 28704  013AA0                     l8363:
 28705                           
 28706                           ;stkvar	_temp @ sp[(-13)+8]
 28707  013AA0  0EFC               	movlw	-4
 28708  013AA2  BEE3               	btfsc	plusw1,7,c
 28709  013AA4  D007               	goto	u6880
 28710  013AA6  0EFC               	movlw	-4
 28711  013AA8  50E3               	movf	plusw1,w,c
 28712  013AAA  E10F               	bnz	l8369
 28713  013AAC  0EFB               	movlw	-5
 28714  013AAE  04E3               	decf	plusw1,w,c
 28715  013AB0  B0D8               	btfsc	status,0,c
 28716  013AB2  D00B               	goto	l8369
 28717  013AB4                     u6880:
 28718                           
 28719                           ;stkvar	_prod @ sp[(-13)+0]
 28720  013AB4  0EF3               	movlw	-13
 28721  013AB6  6AE3               	clrf	plusw1,c
 28722  013AB8  0EF4               	movlw	-12
 28723  013ABA  6AE3               	clrf	plusw1,c
 28724  013ABC  0EF5               	movlw	-11
 28725  013ABE  6AE3               	clrf	plusw1,c
 28726  013AC0  0EF6               	movlw	-10
 28727  013AC2  6AE3               	clrf	plusw1,c
 28728                           
 28729                           ;stkvar	_sign @ sp[(-13)+12]
 28730  013AC4  0EFF               	movlw	-1
 28731  013AC6  6AE3               	clrf	plusw1,c
 28732  013AC8  D02F               	goto	l8379
 28733  013ACA                     l8369:
 28734                           
 28735                           ;stkvar	_temp @ sp[(-13)+8]
 28736                           ;stkvar	_bexp @ sp[(-13)+10]
 28737  013ACA  0EFB               	movlw	-5
 28738  013ACC  006F FF8C  F001    	movff	plusw1,btemp
 28739  013AD2  0EFD               	movlw	-3
 28740  013AD4  0060  F007  FFE3   	movff	btemp,plusw1
 28741                           
 28742                           ;stkvar	_prod @ sp[(-13)+0]
 28743  013ADA  50E1               	movf	fsr1l,w,c
 28744  013ADC  0FF3               	addlw	-13
 28745  013ADE  6ED9               	movwf	fsr2l,c
 28746  013AE0  50E2               	movf	fsr1h,w,c
 28747  013AE2  6EDA               	movwf	fsr2h,c
 28748  013AE4  0EFF               	movlw	255
 28749  013AE6  22DA               	addwfc	fsr2h,f,c
 28750  013AE8  0EFF               	movlw	255
 28751  013AEA  16DE               	andwf	postinc2,f,c
 28752  013AEC  0EFF               	movlw	255
 28753  013AEE  16DE               	andwf	postinc2,f,c
 28754  013AF0  0E7F               	movlw	127
 28755  013AF2  16DE               	andwf	postinc2,f,c
 28756  013AF4  0E00               	movlw	0
 28757  013AF6  16DE               	andwf	postinc2,f,c
 28758                           
 28759                           ;stkvar	_bexp @ sp[(-13)+10]
 28760  013AF8  0EFD               	movlw	-3
 28761  013AFA  A0E3               	btfss	plusw1,0,c
 28762  013AFC  D008               	goto	l8377
 28763                           
 28764                           ;stkvar	_prod @ sp[(-13)+0]
 28765  013AFE  0EF5               	movlw	245
 28766  013B00  24E1               	addwf	fsr1l,w,c
 28767  013B02  6ED9               	movwf	fsr2l,c
 28768  013B04  0EFF               	movlw	255
 28769  013B06  20E2               	addwfc	fsr1h,w,c
 28770  013B08  6EDA               	movwf	fsr2h,c
 28771  013B0A  0E00               	movlw	0
 28772  013B0C  8EDB               	bsf	plusw2,7,c
 28773  013B0E                     l8377:
 28774                           
 28775                           ;stkvar	_prod @ sp[(-13)+0]
 28776  013B0E  0EF6               	movlw	246
 28777  013B10  24E1               	addwf	fsr1l,w,c
 28778  013B12  6ED9               	movwf	fsr2l,c
 28779  013B14  0EFF               	movlw	255
 28780  013B16  20E2               	addwfc	fsr1h,w,c
 28781  013B18  6EDA               	movwf	fsr2h,c
 28782                           
 28783                           ;stkvar	_bexp @ sp[(-13)+10]
 28784  013B1A  0EFD               	movlw	-3
 28785  013B1C  006F FF8C  F00C    	movff	plusw1,btemp+11
 28786  013B22  90D8               	bcf	status,0,c
 28787  013B24  300C               	rrcf	(btemp+11)^0,w,c
 28788  013B26  6EDF               	movwf	indf2,c
 28789  013B28                     l8379:
 28790                           
 28791                           ;stkvar	_sign @ sp[(-13)+12]
 28792  013B28  0EFF               	movlw	-1
 28793  013B2A  006F FF8C  F00C    	movff	plusw1,btemp+11
 28794                           
 28795                           ;stkvar	_prod @ sp[(-13)+0]
 28796  013B30  0EF6               	movlw	246
 28797  013B32  24E1               	addwf	fsr1l,w,c
 28798  013B34  6ED9               	movwf	fsr2l,c
 28799  013B36  0EFF               	movlw	255
 28800  013B38  20E2               	addwfc	fsr1h,w,c
 28801  013B3A  6EDA               	movwf	fsr2h,c
 28802  013B3C  500C               	movf	(btemp+11)^0,w,c
 28803  013B3E  12DF               	iorwf	indf2,f,c
 28804                           
 28805                           ;stkvar	_prod @ sp[(-13)+0]
 28806  013B40  0EF3               	movlw	-13
 28807  013B42  006F FF8C  F001    	movff	plusw1,btemp
 28808  013B48  0EF4               	movlw	-12
 28809  013B4A  006F FF8C  F002    	movff	plusw1,btemp+1
 28810  013B50  0EF5               	movlw	-11
 28811  013B52  006F FF8C  F003    	movff	plusw1,btemp+2
 28812  013B58  0EF6               	movlw	-10
 28813  013B5A  006F FF8C  F004    	movff	plusw1,btemp+3
 28814  013B60                     l3018:
 28815                           
 28816                           ; ___flmul: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 28817  013B60  0EEB               	movlw	235
 28818  013B62  26E1               	addwf	fsr1l,f,c
 28819  013B64  0EFF               	movlw	255
 28820  013B66  22E2               	addwfc	fsr1h,f,c
 28821  013B68  0012               	return		;funcret
 28822  013B6A                     __end_of___flmul:
 28823                           	opt callstack 0
 28824                           
 28825 ;; *************** function _SYSTEM_Initialize *****************
 28826 ;; Defined at:
 28827 ;;		line 50 in file "mcc_generated_files/mcc.c"
 28828 ;; Parameters:    Size  Location     Type
 28829 ;;		None
 28830 ;; Auto vars:     Size  Location     Type
 28831 ;;		None
 28832 ;; Return value:  Size  Location     Type
 28833 ;;                  1  [STACK] void 
 28834 ;; Registers used:
 28835 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11
 28836 ;; Tracked objects:
 28837 ;;		On entry : 0/0
 28838 ;;		On exit  : 3F/3C
 28839 ;;		Unchanged: 0/0
 28840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28841 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28842 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28843 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28844 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28845 ;;Total ram usage:        0 bytes
 28846 ;; Hardware stack levels used:    1
 28847 ;; Hardware stack levels required when called:   17
 28848 ;; This function calls:
 28849 ;;		_ADCC_Initialize
 28850 ;;		_CLKREF_Initialize
 28851 ;;		_DMA1_Initialize
 28852 ;;		_DMA2_Initialize
 28853 ;;		_EXT_INT_Initialize
 28854 ;;		_FVR_Initialize
 28855 ;;		_INTERRUPT_Initialize
 28856 ;;		_OSCILLATOR_Initialize
 28857 ;;		_PIN_MANAGER_Initialize
 28858 ;;		_PMD_Initialize
 28859 ;;		_PWM8_Initialize
 28860 ;;		_SPI1_Initialize
 28861 ;;		_TMR2_Initialize
 28862 ;;		_TMR3_Initialize
 28863 ;;		_TMR5_Initialize
 28864 ;;		_TMR6_Initialize
 28865 ;;		_UART1_Initialize
 28866 ;;		_UART2_Initialize
 28867 ;; This function is called by:
 28868 ;;		_main
 28869 ;; This function uses a reentrant model
 28870 ;;
 28871                           
 28872                           	psect	text107
 28873  01B060                     __ptext107:
 28874                           	opt callstack 0
 28875  01B060                     _SYSTEM_Initialize:
 28876                           	opt callstack 13
 28877                           
 28878                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 28879                           
 28880                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28881                           ;incstack = 0
 28882  01B060  EC3D  F0D6         	call	_INTERRUPT_Initialize	;wreg free
 28883                           
 28884                           ; BSR set to: 57
 28885                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 28886  01B064  EC5C  F0DE         	call	_PMD_Initialize	;wreg free
 28887                           
 28888                           ; BSR set to: 57
 28889                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 28890  01B068  EC7D  F0D3         	call	_PIN_MANAGER_Initialize	;wreg free
 28891                           
 28892                           ; BSR set to: 58
 28893                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 28894  01B06C  EC51  F0DE         	call	_OSCILLATOR_Initialize	;wreg free
 28895                           
 28896                           ; BSR set to: 57
 28897                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
 28898  01B070  ECE7  F0DE         	call	_FVR_Initialize	;wreg free
 28899                           
 28900                           ; BSR set to: 62
 28901                           ;mcc_generated_files/mcc.c: 57:     ADCC_Initialize();
 28902  01B074  ECD2  F0D5         	call	_ADCC_Initialize	;wreg free
 28903                           
 28904                           ;mcc_generated_files/mcc.c: 58:     TMR2_Initialize();
 28905  01B078  EC2F  F0DE         	call	_TMR2_Initialize	;wreg free
 28906                           
 28907                           ; BSR set to: 57
 28908                           ;mcc_generated_files/mcc.c: 59:     PWM8_Initialize();
 28909  01B07C  EC46  F0DE         	call	_PWM8_Initialize	;wreg free
 28910                           
 28911                           ; BSR set to: 63
 28912                           ;mcc_generated_files/mcc.c: 60:     EXT_INT_Initialize();
 28913  01B080  ECD2  F0DA         	call	_EXT_INT_Initialize	;wreg free
 28914                           
 28915                           ; BSR set to: 57
 28916                           ;mcc_generated_files/mcc.c: 61:     TMR6_Initialize();
 28917  01B084  ECA6  F0DB         	call	_TMR6_Initialize	;wreg free
 28918                           
 28919                           ;mcc_generated_files/mcc.c: 62:     TMR3_Initialize();
 28920  01B088  ECC1  F0D8         	call	_TMR3_Initialize	;wreg free
 28921                           
 28922                           ;mcc_generated_files/mcc.c: 63:     TMR5_Initialize();
 28923  01B08C  EC9D  F0D8         	call	_TMR5_Initialize	;wreg free
 28924                           
 28925                           ;mcc_generated_files/mcc.c: 64:     UART1_Initialize();
 28926  01B090  EC79  F0D8         	call	_UART1_Initialize	;wreg free
 28927                           
 28928                           ; BSR set to: 57
 28929                           ;mcc_generated_files/mcc.c: 65:     UART2_Initialize();
 28930  01B094  EC04  F0D7         	call	_UART2_Initialize	;wreg free
 28931                           
 28932                           ; BSR set to: 57
 28933                           ;mcc_generated_files/mcc.c: 66:     SPI1_Initialize();
 28934  01B098  EC3B  F0DE         	call	_SPI1_Initialize	;wreg free
 28935                           
 28936                           ; BSR set to: 61
 28937                           ;mcc_generated_files/mcc.c: 67:     DMA2_Initialize();
 28938  01B09C  EC61  F0D7         	call	_DMA2_Initialize	;wreg free
 28939                           
 28940                           ; BSR set to: 59
 28941                           ;mcc_generated_files/mcc.c: 68:     DMA1_Initialize();
 28942  01B0A0  EC9D  F0D5         	call	_DMA1_Initialize	;wreg free
 28943                           
 28944                           ; BSR set to: 59
 28945                           ;mcc_generated_files/mcc.c: 69:     CLKREF_Initialize();
 28946  01B0A4  ECBB  F0DE         	call	_CLKREF_Initialize	;wreg free
 28947                           
 28948                           ; BSR set to: 60
 28949                           ; _SYSTEM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 28950  01B0A8  0012               	return		;funcret
 28951  01B0AA                     __end_of_SYSTEM_Initialize:
 28952                           	opt callstack 0
 28953                           
 28954 ;; *************** function _UART2_Initialize *****************
 28955 ;; Defined at:
 28956 ;;		line 78 in file "mcc_generated_files/uart2.c"
 28957 ;; Parameters:    Size  Location     Type
 28958 ;;		None
 28959 ;; Auto vars:     Size  Location     Type
 28960 ;;		None
 28961 ;; Return value:  Size  Location     Type
 28962 ;;                  1  [STACK] void 
 28963 ;; Registers used:
 28964 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 28965 ;; Tracked objects:
 28966 ;;		On entry : 3F/39
 28967 ;;		On exit  : 3F/39
 28968 ;;		Unchanged: 0/0
 28969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28970 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28971 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28972 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28973 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28974 ;;Total ram usage:        0 bytes
 28975 ;; Hardware stack levels used:    1
 28976 ;; Hardware stack levels required when called:   16
 28977 ;; This function calls:
 28978 ;;		_UART2_SetRxInterruptHandler
 28979 ;;		_UART2_SetTxInterruptHandler
 28980 ;; This function is called by:
 28981 ;;		_SYSTEM_Initialize
 28982 ;; This function uses a reentrant model
 28983 ;;
 28984                           
 28985                           	psect	text108
 28986  01AE08                     __ptext108:
 28987                           	opt callstack 0
 28988  01AE08                     _UART2_Initialize:
 28989                           	opt callstack 13
 28990                           
 28991                           ;mcc_generated_files/uart2.c: 81:     PIE6bits.U2RXIE = 0;
 28992                           
 28993                           ; BSR set to: 60
 28994                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28995                           ;incstack = 0
 28996  01AE08  0139               	movlb	57	; () banked
 28997  01AE0A  9596               	bcf	150,2,b	;volatile
 28998                           
 28999                           ; BSR set to: 57
 29000                           ;mcc_generated_files/uart2.c: 82:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
 29001  01AE0C  0E5C               	movlw	low _UART2_Receive_ISR
 29002  01AE0E  6EE6               	movwf	postinc1,c
 29003  01AE10  0EBB               	movlw	high _UART2_Receive_ISR
 29004  01AE12  6EE6               	movwf	postinc1,c
 29005  01AE14  0E01               	movlw	low (_UART2_Receive_ISR shr (0+16))
 29006  01AE16  6EE6               	movwf	postinc1,c
 29007  01AE18  EC1F  F0DC         	call	_UART2_SetRxInterruptHandler	;wreg free
 29008                           
 29009                           ;mcc_generated_files/uart2.c: 83:     PIE6bits.U2TXIE = 0;
 29010  01AE1C  0139               	movlb	57	; () banked
 29011  01AE1E  9796               	bcf	150,3,b	;volatile
 29012                           
 29013                           ;mcc_generated_files/uart2.c: 84:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
 29014  01AE20  0E20               	movlw	low _UART2_Transmit_ISR
 29015  01AE22  6EE6               	movwf	postinc1,c
 29016  01AE24  0EB7               	movlw	high _UART2_Transmit_ISR
 29017  01AE26  6EE6               	movwf	postinc1,c
 29018  01AE28  0E01               	movlw	low (_UART2_Transmit_ISR shr (0+16))
 29019  01AE2A  6EE6               	movwf	postinc1,c
 29020  01AE2C  EC0B  F0DC         	call	_UART2_SetTxInterruptHandler	;wreg free
 29021                           
 29022                           ;mcc_generated_files/uart2.c: 89:     U2P1L = 0x00;
 29023  01AE30  013D               	movlb	61	; () banked
 29024  01AE32  6BD4               	clrf	212,b	;volatile
 29025                           
 29026                           ; BSR set to: 61
 29027                           ;mcc_generated_files/uart2.c: 92:     U2P2L = 0x00;
 29028  01AE34  6BD6               	clrf	214,b	;volatile
 29029                           
 29030                           ; BSR set to: 61
 29031                           ;mcc_generated_files/uart2.c: 95:     U2P3L = 0x00;
 29032  01AE36  6BD8               	clrf	216,b	;volatile
 29033                           
 29034                           ; BSR set to: 61
 29035                           ;mcc_generated_files/uart2.c: 98:     U2CON0 = 0xB0;
 29036  01AE38  0EB0               	movlw	176
 29037  01AE3A  6FDA               	movwf	218,b	;volatile
 29038                           
 29039                           ; BSR set to: 61
 29040                           ;mcc_generated_files/uart2.c: 101:     U2CON1 = 0x80;
 29041  01AE3C  0E80               	movlw	128
 29042  01AE3E  6FDB               	movwf	219,b	;volatile
 29043                           
 29044                           ; BSR set to: 61
 29045                           ;mcc_generated_files/uart2.c: 104:     U2CON2 = 0x00;
 29046  01AE40  6BDC               	clrf	220,b	;volatile
 29047                           
 29048                           ; BSR set to: 61
 29049                           ;mcc_generated_files/uart2.c: 107:     U2BRGL = 0x82;
 29050  01AE42  0E82               	movlw	130
 29051  01AE44  6FDD               	movwf	221,b	;volatile
 29052                           
 29053                           ; BSR set to: 61
 29054                           ;mcc_generated_files/uart2.c: 110:     U2BRGH = 0x06;
 29055  01AE46  0E06               	movlw	6
 29056  01AE48  6FDE               	movwf	222,b	;volatile
 29057                           
 29058                           ; BSR set to: 61
 29059                           ;mcc_generated_files/uart2.c: 113:     U2FIFO = 0x00;
 29060  01AE4A  6BDF               	clrf	223,b	;volatile
 29061                           
 29062                           ; BSR set to: 61
 29063                           ;mcc_generated_files/uart2.c: 116:     U2UIR = 0x00;
 29064  01AE4C  6BE0               	clrf	224,b	;volatile
 29065                           
 29066                           ; BSR set to: 61
 29067                           ;mcc_generated_files/uart2.c: 119:     U2ERRIR = 0x00;
 29068  01AE4E  6BE1               	clrf	225,b	;volatile
 29069                           
 29070                           ; BSR set to: 61
 29071                           ;mcc_generated_files/uart2.c: 122:     U2ERRIE = 0x00;
 29072  01AE50  6BE2               	clrf	226,b	;volatile
 29073                           
 29074                           ; BSR set to: 61
 29075                           ;mcc_generated_files/uart2.c: 126:     uart2TxHead = 0;
 29076  01AE52  0100               	movlb	0	; () banked
 29077  01AE54  6BCD               	clrf	_uart2TxHead& (0+255),b	;volatile
 29078                           
 29079                           ; BSR set to: 0
 29080                           ;mcc_generated_files/uart2.c: 127:     uart2TxTail = 0;
 29081  01AE56  6A45               	clrf	_uart2TxTail^0,c	;volatile
 29082                           
 29083                           ; BSR set to: 0
 29084                           ;mcc_generated_files/uart2.c: 128:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
 29085  01AE58  0E40               	movlw	64
 29086  01AE5A  6E44               	movwf	_uart2TxBufferRemaining^0,c	;volatile
 29087                           
 29088                           ; BSR set to: 0
 29089                           ;mcc_generated_files/uart2.c: 129:     uart2RxHead = 0;
 29090  01AE5C  6A43               	clrf	_uart2RxHead^0,c	;volatile
 29091                           
 29092                           ; BSR set to: 0
 29093                           ;mcc_generated_files/uart2.c: 130:     uart2RxTail = 0;
 29094  01AE5E  6BCC               	clrf	_uart2RxTail& (0+255),b	;volatile
 29095                           
 29096                           ; BSR set to: 0
 29097                           ;mcc_generated_files/uart2.c: 131:     uart2RxCount = 0;
 29098  01AE60  6BCB               	clrf	_uart2RxCount& (0+255),b	;volatile
 29099                           
 29100                           ; BSR set to: 0
 29101                           ;mcc_generated_files/uart2.c: 134:     PIE6bits.U2RXIE = 1;
 29102  01AE62  0139               	movlb	57	; () banked
 29103  01AE64  8596               	bsf	150,2,b	;volatile
 29104                           
 29105                           ; BSR set to: 57
 29106                           ; _UART2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 29107  01AE66  0012               	return		;funcret
 29108  01AE68                     __end_of_UART2_Initialize:
 29109                           	opt callstack 0
 29110                           
 29111 ;; *************** function _UART2_SetTxInterruptHandler *****************
 29112 ;; Defined at:
 29113 ;;		line 252 in file "mcc_generated_files/uart2.c"
 29114 ;; Parameters:    Size  Location     Type
 29115 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 29116 ;;		 -> UART2_Transmit_ISR(1), 
 29117 ;; Auto vars:     Size  Location     Type
 29118 ;;		None
 29119 ;; Return value:  Size  Location     Type
 29120 ;;                  1  [STACK] void 
 29121 ;; Registers used:
 29122 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 29123 ;; Tracked objects:
 29124 ;;		On entry : 3F/39
 29125 ;;		On exit  : 0/0
 29126 ;;		Unchanged: 0/0
 29127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29128 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29129 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29130 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29131 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29132 ;;Total ram usage:        0 bytes
 29133 ;; Hardware stack levels used:    1
 29134 ;; Hardware stack levels required when called:   15
 29135 ;; This function calls:
 29136 ;;		Nothing
 29137 ;; This function is called by:
 29138 ;;		_UART2_Initialize
 29139 ;; This function uses a reentrant model
 29140 ;;
 29141                           
 29142                           	psect	text109
 29143  01B816                     __ptext109:
 29144                           	opt callstack 0
 29145  01B816                     _UART2_SetTxInterruptHandler:
 29146                           	opt callstack 13
 29147                           
 29148                           ;mcc_generated_files/uart2.c: 253:     UART2_TxInterruptHandler = InterruptHandler;
 29149                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 29150                           
 29151                           ; BSR set to: 57
 29152                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29153                           ;incstack = 0
 29154  01B816  50E1               	movf	fsr1l,w,c
 29155  01B818  0FFD               	addlw	-3
 29156  01B81A  6ED9               	movwf	fsr2l,c
 29157  01B81C  50E2               	movf	fsr1h,w,c
 29158  01B81E  6EDA               	movwf	fsr2h,c
 29159  01B820  0EFF               	movlw	255
 29160  01B822  22DA               	addwfc	fsr2h,f,c
 29161  01B824  006F FF78  F0B4    	movff	postinc2,_UART2_TxInterruptHandler
 29162  01B82A  006F FF78  F0B5    	movff	postinc2,_UART2_TxInterruptHandler+1
 29163  01B830  006F FF74  F0B6    	movff	postdec2,_UART2_TxInterruptHandler+2
 29164                           
 29165                           ; _UART2_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 29166  01B836  52E5               	movf	postdec1,f,c
 29167  01B838  52E5               	movf	postdec1,f,c
 29168  01B83A  52E5               	movf	postdec1,f,c
 29169  01B83C  0012               	return		;funcret
 29170  01B83E                     __end_of_UART2_SetTxInterruptHandler:
 29171                           	opt callstack 0
 29172                           
 29173 ;; *************** function _UART2_SetRxInterruptHandler *****************
 29174 ;; Defined at:
 29175 ;;		line 248 in file "mcc_generated_files/uart2.c"
 29176 ;; Parameters:    Size  Location     Type
 29177 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 29178 ;;		 -> UART2_Receive_ISR(1), 
 29179 ;; Auto vars:     Size  Location     Type
 29180 ;;		None
 29181 ;; Return value:  Size  Location     Type
 29182 ;;                  1  [STACK] void 
 29183 ;; Registers used:
 29184 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 29185 ;; Tracked objects:
 29186 ;;		On entry : 3F/39
 29187 ;;		On exit  : 0/0
 29188 ;;		Unchanged: 0/0
 29189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29190 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29191 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29193 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29194 ;;Total ram usage:        0 bytes
 29195 ;; Hardware stack levels used:    1
 29196 ;; Hardware stack levels required when called:   15
 29197 ;; This function calls:
 29198 ;;		Nothing
 29199 ;; This function is called by:
 29200 ;;		_UART2_Initialize
 29201 ;; This function uses a reentrant model
 29202 ;;
 29203                           
 29204                           	psect	text110
 29205  01B83E                     __ptext110:
 29206                           	opt callstack 0
 29207  01B83E                     _UART2_SetRxInterruptHandler:
 29208                           	opt callstack 13
 29209                           
 29210                           ;mcc_generated_files/uart2.c: 249:     UART2_RxInterruptHandler = InterruptHandler;
 29211                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 29212                           
 29213                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29214                           ;incstack = 0
 29215  01B83E  50E1               	movf	fsr1l,w,c
 29216  01B840  0FFD               	addlw	-3
 29217  01B842  6ED9               	movwf	fsr2l,c
 29218  01B844  50E2               	movf	fsr1h,w,c
 29219  01B846  6EDA               	movwf	fsr2h,c
 29220  01B848  0EFF               	movlw	255
 29221  01B84A  22DA               	addwfc	fsr2h,f,c
 29222  01B84C  006F FF78  F0B7    	movff	postinc2,_UART2_RxInterruptHandler
 29223  01B852  006F FF78  F0B8    	movff	postinc2,_UART2_RxInterruptHandler+1
 29224  01B858  006F FF74  F0B9    	movff	postdec2,_UART2_RxInterruptHandler+2
 29225                           
 29226                           ; _UART2_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 29227  01B85E  52E5               	movf	postdec1,f,c
 29228  01B860  52E5               	movf	postdec1,f,c
 29229  01B862  52E5               	movf	postdec1,f,c
 29230  01B864  0012               	return		;funcret
 29231  01B866                     __end_of_UART2_SetRxInterruptHandler:
 29232                           	opt callstack 0
 29233                           
 29234 ;; *************** function _UART1_Initialize *****************
 29235 ;; Defined at:
 29236 ;;		line 75 in file "mcc_generated_files/uart1.c"
 29237 ;; Parameters:    Size  Location     Type
 29238 ;;		None
 29239 ;; Auto vars:     Size  Location     Type
 29240 ;;		None
 29241 ;; Return value:  Size  Location     Type
 29242 ;;                  1  [STACK] void 
 29243 ;; Registers used:
 29244 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 29245 ;; Tracked objects:
 29246 ;;		On entry : 0/39
 29247 ;;		On exit  : 3F/39
 29248 ;;		Unchanged: 0/0
 29249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29250 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29251 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29252 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29253 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29254 ;;Total ram usage:        0 bytes
 29255 ;; Hardware stack levels used:    1
 29256 ;; Hardware stack levels required when called:   16
 29257 ;; This function calls:
 29258 ;;		_UART1_SetRxInterruptHandler
 29259 ;; This function is called by:
 29260 ;;		_SYSTEM_Initialize
 29261 ;; This function uses a reentrant model
 29262 ;;
 29263                           
 29264                           	psect	text111
 29265  01B0F2                     __ptext111:
 29266                           	opt callstack 0
 29267  01B0F2                     _UART1_Initialize:
 29268                           	opt callstack 13
 29269                           
 29270                           ;mcc_generated_files/uart1.c: 78:  PIE3bits.U1RXIE = 0;
 29271                           
 29272                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29273                           ;incstack = 0
 29274  01B0F2  0139               	movlb	57	; () banked
 29275  01B0F4  9793               	bcf	147,3,b	;volatile
 29276                           
 29277                           ; BSR set to: 57
 29278                           ;mcc_generated_files/uart1.c: 79:  UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 29279  01B0F6  0ED6               	movlw	low _UART1_Receive_ISR
 29280  01B0F8  6EE6               	movwf	postinc1,c
 29281  01B0FA  0EBB               	movlw	high _UART1_Receive_ISR
 29282  01B0FC  6EE6               	movwf	postinc1,c
 29283  01B0FE  0E01               	movlw	low (_UART1_Receive_ISR shr (0+16))
 29284  01B100  6EE6               	movwf	postinc1,c
 29285  01B102  EC33  F0DC         	call	_UART1_SetRxInterruptHandler	;wreg free
 29286                           
 29287                           ;mcc_generated_files/uart1.c: 84:  U1P1L = 0x00;
 29288  01B106  013D               	movlb	61	; () banked
 29289  01B108  6BEC               	clrf	236,b	;volatile
 29290                           
 29291                           ; BSR set to: 61
 29292                           ;mcc_generated_files/uart1.c: 87:  U1P1H = 0x00;
 29293  01B10A  6BED               	clrf	237,b	;volatile
 29294                           
 29295                           ; BSR set to: 61
 29296                           ;mcc_generated_files/uart1.c: 90:  U1P2L = 0x00;
 29297  01B10C  6BEE               	clrf	238,b	;volatile
 29298                           
 29299                           ; BSR set to: 61
 29300                           ;mcc_generated_files/uart1.c: 93:  U1P2H = 0x00;
 29301  01B10E  6BEF               	clrf	239,b	;volatile
 29302                           
 29303                           ; BSR set to: 61
 29304                           ;mcc_generated_files/uart1.c: 96:  U1P3L = 0x00;
 29305  01B110  6BF0               	clrf	240,b	;volatile
 29306                           
 29307                           ; BSR set to: 61
 29308                           ;mcc_generated_files/uart1.c: 99:  U1P3H = 0x00;
 29309  01B112  6BF1               	clrf	241,b	;volatile
 29310                           
 29311                           ; BSR set to: 61
 29312                           ;mcc_generated_files/uart1.c: 102:  U1CON0 = 0xB0;
 29313  01B114  0EB0               	movlw	176
 29314  01B116  6FF2               	movwf	242,b	;volatile
 29315                           
 29316                           ; BSR set to: 61
 29317                           ;mcc_generated_files/uart1.c: 105:  U1CON1 = 0x80;
 29318  01B118  0E80               	movlw	128
 29319  01B11A  6FF3               	movwf	243,b	;volatile
 29320                           
 29321                           ; BSR set to: 61
 29322                           ;mcc_generated_files/uart1.c: 108:  U1CON2 = 0x00;
 29323  01B11C  6BF4               	clrf	244,b	;volatile
 29324                           
 29325                           ; BSR set to: 61
 29326                           ;mcc_generated_files/uart1.c: 111:     U1BRGL = 0x8A;
 29327  01B11E  0E8A               	movlw	138
 29328  01B120  6FF5               	movwf	245,b	;volatile
 29329                           
 29330                           ; BSR set to: 61
 29331                           ;mcc_generated_files/uart1.c: 114:     U1BRGH = 0x00;
 29332  01B122  6BF6               	clrf	246,b	;volatile
 29333                           
 29334                           ; BSR set to: 61
 29335                           ;mcc_generated_files/uart1.c: 117:  U1FIFO = 0x00;
 29336  01B124  6BF7               	clrf	247,b	;volatile
 29337                           
 29338                           ; BSR set to: 61
 29339                           ;mcc_generated_files/uart1.c: 120:  U1UIR = 0x00;
 29340  01B126  6BF8               	clrf	248,b	;volatile
 29341                           
 29342                           ; BSR set to: 61
 29343                           ;mcc_generated_files/uart1.c: 123:  U1ERRIR = 0x00;
 29344  01B128  6BF9               	clrf	249,b	;volatile
 29345                           
 29346                           ; BSR set to: 61
 29347                           ;mcc_generated_files/uart1.c: 126:  U1ERRIE = 0x00;
 29348  01B12A  6BFA               	clrf	250,b	;volatile
 29349                           
 29350                           ; BSR set to: 61
 29351                           ;mcc_generated_files/uart1.c: 129:  uart1RxHead = 0;
 29352  01B12C  6A47               	clrf	_uart1RxHead^0,c	;volatile
 29353                           
 29354                           ; BSR set to: 61
 29355                           ;mcc_generated_files/uart1.c: 130:  uart1RxTail = 0;
 29356  01B12E  6A46               	clrf	_uart1RxTail^0,c	;volatile
 29357                           
 29358                           ; BSR set to: 61
 29359                           ;mcc_generated_files/uart1.c: 131:  uart1RxCount = 0;
 29360  01B130  0100               	movlb	0	; () banked
 29361  01B132  6BCE               	clrf	_uart1RxCount& (0+255),b	;volatile
 29362                           
 29363                           ; BSR set to: 0
 29364                           ;mcc_generated_files/uart1.c: 134:  PIE3bits.U1RXIE = 1;
 29365  01B134  0139               	movlb	57	; () banked
 29366  01B136  8793               	bsf	147,3,b	;volatile
 29367                           
 29368                           ; BSR set to: 57
 29369                           ; _UART1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 29370  01B138  0012               	return		;funcret
 29371  01B13A                     __end_of_UART1_Initialize:
 29372                           	opt callstack 0
 29373                           
 29374 ;; *************** function _UART1_SetRxInterruptHandler *****************
 29375 ;; Defined at:
 29376 ;;		line 207 in file "mcc_generated_files/uart1.c"
 29377 ;; Parameters:    Size  Location     Type
 29378 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 29379 ;;		 -> UART1_Receive_ISR(1), 
 29380 ;; Auto vars:     Size  Location     Type
 29381 ;;		None
 29382 ;; Return value:  Size  Location     Type
 29383 ;;                  1  [STACK] void 
 29384 ;; Registers used:
 29385 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 29386 ;; Tracked objects:
 29387 ;;		On entry : 3F/39
 29388 ;;		On exit  : 0/0
 29389 ;;		Unchanged: 0/0
 29390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29391 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29392 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29393 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29394 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29395 ;;Total ram usage:        0 bytes
 29396 ;; Hardware stack levels used:    1
 29397 ;; Hardware stack levels required when called:   15
 29398 ;; This function calls:
 29399 ;;		Nothing
 29400 ;; This function is called by:
 29401 ;;		_UART1_Initialize
 29402 ;; This function uses a reentrant model
 29403 ;;
 29404                           
 29405                           	psect	text112
 29406  01B866                     __ptext112:
 29407                           	opt callstack 0
 29408  01B866                     _UART1_SetRxInterruptHandler:
 29409                           	opt callstack 13
 29410                           
 29411                           ;mcc_generated_files/uart1.c: 208:  UART1_RxInterruptHandler = InterruptHandler;
 29412                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 29413                           
 29414                           ; BSR set to: 57
 29415                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29416                           ;incstack = 0
 29417  01B866  50E1               	movf	fsr1l,w,c
 29418  01B868  0FFD               	addlw	-3
 29419  01B86A  6ED9               	movwf	fsr2l,c
 29420  01B86C  50E2               	movf	fsr1h,w,c
 29421  01B86E  6EDA               	movwf	fsr2h,c
 29422  01B870  0EFF               	movlw	255
 29423  01B872  22DA               	addwfc	fsr2h,f,c
 29424  01B874  006F FF78  F0B1    	movff	postinc2,_UART1_RxInterruptHandler
 29425  01B87A  006F FF78  F0B2    	movff	postinc2,_UART1_RxInterruptHandler+1
 29426  01B880  006F FF74  F0B3    	movff	postdec2,_UART1_RxInterruptHandler+2
 29427                           
 29428                           ; _UART1_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 29429  01B886  52E5               	movf	postdec1,f,c
 29430  01B888  52E5               	movf	postdec1,f,c
 29431  01B88A  52E5               	movf	postdec1,f,c
 29432  01B88C  0012               	return		;funcret
 29433  01B88E                     __end_of_UART1_SetRxInterruptHandler:
 29434                           	opt callstack 0
 29435                           
 29436 ;; *************** function _TMR6_Initialize *****************
 29437 ;; Defined at:
 29438 ;;		line 70 in file "mcc_generated_files/tmr6.c"
 29439 ;; Parameters:    Size  Location     Type
 29440 ;;		None
 29441 ;; Auto vars:     Size  Location     Type
 29442 ;;		None
 29443 ;; Return value:  Size  Location     Type
 29444 ;;                  1  [STACK] void 
 29445 ;; Registers used:
 29446 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 29447 ;; Tracked objects:
 29448 ;;		On entry : 3F/39
 29449 ;;		On exit  : 0/0
 29450 ;;		Unchanged: 0/0
 29451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29452 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29453 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29455 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29456 ;;Total ram usage:        0 bytes
 29457 ;; Hardware stack levels used:    1
 29458 ;; Hardware stack levels required when called:   16
 29459 ;; This function calls:
 29460 ;;		_TMR6_SetInterruptHandler
 29461 ;; This function is called by:
 29462 ;;		_SYSTEM_Initialize
 29463 ;; This function uses a reentrant model
 29464 ;;
 29465                           
 29466                           	psect	text113
 29467  01B74C                     __ptext113:
 29468                           	opt callstack 0
 29469  01B74C                     _TMR6_Initialize:
 29470                           	opt callstack 13
 29471                           
 29472                           ;mcc_generated_files/tmr6.c: 75:     T6CLKCON = 0x01;
 29473                           
 29474                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29475                           ;incstack = 0
 29476  01B74C  0E01               	movlw	1
 29477  01B74E  6E96               	movwf	150,c	;volatile
 29478                           
 29479                           ;mcc_generated_files/tmr6.c: 78:     T6HLT = 0x00;
 29480  01B750  6A95               	clrf	149,c	;volatile
 29481                           
 29482                           ;mcc_generated_files/tmr6.c: 81:     T6RST = 0x00;
 29483  01B752  6A97               	clrf	151,c	;volatile
 29484                           
 29485                           ;mcc_generated_files/tmr6.c: 84:     T6PR = 0x7C;
 29486  01B754  0E7C               	movlw	124
 29487  01B756  6E93               	movwf	147,c	;volatile
 29488                           
 29489                           ;mcc_generated_files/tmr6.c: 87:     T6TMR = 0x00;
 29490  01B758  6A92               	clrf	146,c	;volatile
 29491                           
 29492                           ;mcc_generated_files/tmr6.c: 90:     PIR9bits.TMR6IF = 0;
 29493  01B75A  0139               	movlb	57	; () banked
 29494  01B75C  91A9               	bcf	169,0,b	;volatile
 29495                           
 29496                           ; BSR set to: 57
 29497                           ;mcc_generated_files/tmr6.c: 93:     PIE9bits.TMR6IE = 1;
 29498  01B75E  8199               	bsf	153,0,b	;volatile
 29499                           
 29500                           ; BSR set to: 57
 29501                           ;mcc_generated_files/tmr6.c: 96:     TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandl
      +                          er);
 29502  01B760  0E12               	movlw	low _TMR6_DefaultInterruptHandler
 29503  01B762  6EE6               	movwf	postinc1,c
 29504  01B764  0EB0               	movlw	high _TMR6_DefaultInterruptHandler
 29505  01B766  6EE6               	movwf	postinc1,c
 29506  01B768  0E01               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 29507  01B76A  6EE6               	movwf	postinc1,c
 29508  01B76C  EC47  F0DC         	call	_TMR6_SetInterruptHandler	;wreg free
 29509                           
 29510                           ;mcc_generated_files/tmr6.c: 99:     T6CON = 0xE0;
 29511  01B770  0EE0               	movlw	224
 29512  01B772  6E94               	movwf	148,c	;volatile
 29513                           
 29514                           ; _TMR6_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 29515  01B774  0012               	return		;funcret
 29516  01B776                     __end_of_TMR6_Initialize:
 29517                           	opt callstack 0
 29518                           
 29519 ;; *************** function _TMR6_SetInterruptHandler *****************
 29520 ;; Defined at:
 29521 ;;		line 192 in file "mcc_generated_files/tmr6.c"
 29522 ;; Parameters:    Size  Location     Type
 29523 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 29524 ;;		 -> TMR6_DefaultInterruptHandler(1), 
 29525 ;; Auto vars:     Size  Location     Type
 29526 ;;		None
 29527 ;; Return value:  Size  Location     Type
 29528 ;;                  1  [STACK] void 
 29529 ;; Registers used:
 29530 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 29531 ;; Tracked objects:
 29532 ;;		On entry : 3F/39
 29533 ;;		On exit  : 0/0
 29534 ;;		Unchanged: 0/0
 29535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29536 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29537 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29538 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29539 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29540 ;;Total ram usage:        0 bytes
 29541 ;; Hardware stack levels used:    1
 29542 ;; Hardware stack levels required when called:   15
 29543 ;; This function calls:
 29544 ;;		Nothing
 29545 ;; This function is called by:
 29546 ;;		_TMR6_Initialize
 29547 ;; This function uses a reentrant model
 29548 ;;
 29549                           
 29550                           	psect	text114
 29551  01B88E                     __ptext114:
 29552                           	opt callstack 0
 29553  01B88E                     _TMR6_SetInterruptHandler:
 29554                           	opt callstack 13
 29555                           
 29556                           ;mcc_generated_files/tmr6.c: 193:     TMR6_InterruptHandler = InterruptHandler;
 29557                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 29558                           
 29559                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29560                           ;incstack = 0
 29561  01B88E  50E1               	movf	fsr1l,w,c
 29562  01B890  0FFD               	addlw	-3
 29563  01B892  6ED9               	movwf	fsr2l,c
 29564  01B894  50E2               	movf	fsr1h,w,c
 29565  01B896  6EDA               	movwf	fsr2h,c
 29566  01B898  0EFF               	movlw	255
 29567  01B89A  22DA               	addwfc	fsr2h,f,c
 29568  01B89C  006F FF78  F0A8    	movff	postinc2,_TMR6_InterruptHandler
 29569  01B8A2  006F FF78  F0A9    	movff	postinc2,_TMR6_InterruptHandler+1
 29570  01B8A8  006F FF74  F0AA    	movff	postdec2,_TMR6_InterruptHandler+2
 29571                           
 29572                           ; _TMR6_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 29573  01B8AE  52E5               	movf	postdec1,f,c
 29574  01B8B0  52E5               	movf	postdec1,f,c
 29575  01B8B2  52E5               	movf	postdec1,f,c
 29576  01B8B4  0012               	return		;funcret
 29577  01B8B6                     __end_of_TMR6_SetInterruptHandler:
 29578                           	opt callstack 0
 29579                           
 29580 ;; *************** function _TMR5_Initialize *****************
 29581 ;; Defined at:
 29582 ;;		line 69 in file "mcc_generated_files/tmr5.c"
 29583 ;; Parameters:    Size  Location     Type
 29584 ;;		None
 29585 ;; Auto vars:     Size  Location     Type
 29586 ;;		None
 29587 ;; Return value:  Size  Location     Type
 29588 ;;                  1  [STACK] void 
 29589 ;; Registers used:
 29590 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 29591 ;; Tracked objects:
 29592 ;;		On entry : 0/39
 29593 ;;		On exit  : 0/0
 29594 ;;		Unchanged: 0/0
 29595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29596 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29597 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29598 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29599 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29600 ;;Total ram usage:        0 bytes
 29601 ;; Hardware stack levels used:    1
 29602 ;; Hardware stack levels required when called:   16
 29603 ;; This function calls:
 29604 ;;		_TMR5_SetInterruptHandler
 29605 ;; This function is called by:
 29606 ;;		_SYSTEM_Initialize
 29607 ;; This function uses a reentrant model
 29608 ;;
 29609                           
 29610                           	psect	text115
 29611  01B13A                     __ptext115:
 29612                           	opt callstack 0
 29613  01B13A                     _TMR5_Initialize:
 29614                           	opt callstack 13
 29615                           
 29616                           ;mcc_generated_files/tmr5.c: 74:  T5GCON = 0x00;
 29617                           
 29618                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29619                           ;incstack = 0
 29620  01B13A  6A9B               	clrf	155,c	;volatile
 29621                           
 29622                           ;mcc_generated_files/tmr5.c: 77:  T5GATE = 0x00;
 29623  01B13C  6A9C               	clrf	156,c	;volatile
 29624                           
 29625                           ;mcc_generated_files/tmr5.c: 80:  T5CLK = 0x01;
 29626  01B13E  0E01               	movlw	1
 29627  01B140  6E9D               	movwf	157,c	;volatile
 29628                           
 29629                           ;mcc_generated_files/tmr5.c: 83:  TMR5H = 0x63;
 29630  01B142  0E63               	movlw	99
 29631  01B144  6E99               	movwf	153,c	;volatile
 29632                           
 29633                           ;mcc_generated_files/tmr5.c: 86:  TMR5L = 0xC0;
 29634  01B146  0EC0               	movlw	192
 29635  01B148  6E98               	movwf	152,c	;volatile
 29636                           
 29637                           ;mcc_generated_files/tmr5.c: 89:  timer5ReloadVal = (uint16_t) ((TMR5H << 8) | TMR5L);
 29638  01B14A  5098               	movf	152,w,c	;volatile
 29639  01B14C  006F FE64  F001    	movff	16281,btemp	;volatile
 29640  01B152  6A02               	clrf	(btemp+1)^0,c
 29641  01B154  0060  F004  F002   	movff	btemp,btemp+1
 29642  01B15A  6A01               	clrf	btemp^0,c
 29643  01B15C  1001               	iorwf	btemp^0,w,c
 29644  01B15E  0100               	movlb	0	; () banked
 29645  01B160  6FC8               	movwf	_timer5ReloadVal& (0+255),b	;volatile
 29646  01B162  5002               	movf	(btemp+1)^0,w,c
 29647  01B164  6FC9               	movwf	(_timer5ReloadVal+1)& (0+255),b	;volatile
 29648                           
 29649                           ; BSR set to: 0
 29650                           ;mcc_generated_files/tmr5.c: 92:  PIR8bits.TMR5IF = 0;
 29651  01B166  0139               	movlb	57	; () banked
 29652  01B168  9DA8               	bcf	168,6,b	;volatile
 29653                           
 29654                           ; BSR set to: 57
 29655                           ;mcc_generated_files/tmr5.c: 95:  PIE8bits.TMR5IE = 1;
 29656  01B16A  8D98               	bsf	152,6,b	;volatile
 29657                           
 29658                           ; BSR set to: 57
 29659                           ;mcc_generated_files/tmr5.c: 98:  TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler)
      +                          ;
 29660  01B16C  0ECC               	movlw	low _TMR5_DefaultInterruptHandler
 29661  01B16E  6EE6               	movwf	postinc1,c
 29662  01B170  0EB4               	movlw	high _TMR5_DefaultInterruptHandler
 29663  01B172  6EE6               	movwf	postinc1,c
 29664  01B174  0E01               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 29665  01B176  6EE6               	movwf	postinc1,c
 29666  01B178  EC5B  F0DC         	call	_TMR5_SetInterruptHandler	;wreg free
 29667                           
 29668                           ;mcc_generated_files/tmr5.c: 101:  T5CON = 0x31;
 29669  01B17C  0E31               	movlw	49
 29670  01B17E  6E9A               	movwf	154,c	;volatile
 29671                           
 29672                           ; _TMR5_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 29673  01B180  0012               	return		;funcret
 29674  01B182                     __end_of_TMR5_Initialize:
 29675                           	opt callstack 0
 29676                           
 29677 ;; *************** function _TMR5_SetInterruptHandler *****************
 29678 ;; Defined at:
 29679 ;;		line 192 in file "mcc_generated_files/tmr5.c"
 29680 ;; Parameters:    Size  Location     Type
 29681 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 29682 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 29683 ;; Auto vars:     Size  Location     Type
 29684 ;;		None
 29685 ;; Return value:  Size  Location     Type
 29686 ;;                  1  [STACK] void 
 29687 ;; Registers used:
 29688 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 29689 ;; Tracked objects:
 29690 ;;		On entry : 3F/39
 29691 ;;		On exit  : 0/0
 29692 ;;		Unchanged: 0/0
 29693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29694 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29695 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29697 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29698 ;;Total ram usage:        0 bytes
 29699 ;; Hardware stack levels used:    1
 29700 ;; Hardware stack levels required when called:   15
 29701 ;; This function calls:
 29702 ;;		Nothing
 29703 ;; This function is called by:
 29704 ;;		_TMR5_Initialize
 29705 ;; This function uses a reentrant model
 29706 ;;
 29707                           
 29708                           	psect	text116
 29709  01B8B6                     __ptext116:
 29710                           	opt callstack 0
 29711  01B8B6                     _TMR5_SetInterruptHandler:
 29712                           	opt callstack 13
 29713                           
 29714                           ;mcc_generated_files/tmr5.c: 192: void TMR5_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr5.c: 193: {;mcc_generated_files/tmr5.c: 194:  TMR5_Inter
      +                          ruptHandler = InterruptHandler;
 29715                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 29716                           
 29717                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29718                           ;incstack = 0
 29719  01B8B6  50E1               	movf	fsr1l,w,c
 29720  01B8B8  0FFD               	addlw	-3
 29721  01B8BA  6ED9               	movwf	fsr2l,c
 29722  01B8BC  50E2               	movf	fsr1h,w,c
 29723  01B8BE  6EDA               	movwf	fsr2h,c
 29724  01B8C0  0EFF               	movlw	255
 29725  01B8C2  22DA               	addwfc	fsr2h,f,c
 29726  01B8C4  006F FF78  F0A5    	movff	postinc2,_TMR5_InterruptHandler
 29727  01B8CA  006F FF78  F0A6    	movff	postinc2,_TMR5_InterruptHandler+1
 29728  01B8D0  006F FF74  F0A7    	movff	postdec2,_TMR5_InterruptHandler+2
 29729                           
 29730                           ; _TMR5_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 29731  01B8D6  52E5               	movf	postdec1,f,c
 29732  01B8D8  52E5               	movf	postdec1,f,c
 29733  01B8DA  52E5               	movf	postdec1,f,c
 29734  01B8DC  0012               	return		;funcret
 29735  01B8DE                     __end_of_TMR5_SetInterruptHandler:
 29736                           	opt callstack 0
 29737                           
 29738 ;; *************** function _TMR3_Initialize *****************
 29739 ;; Defined at:
 29740 ;;		line 65 in file "mcc_generated_files/tmr3.c"
 29741 ;; Parameters:    Size  Location     Type
 29742 ;;		None
 29743 ;; Auto vars:     Size  Location     Type
 29744 ;;		None
 29745 ;; Return value:  Size  Location     Type
 29746 ;;                  1  [STACK] void 
 29747 ;; Registers used:
 29748 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 29749 ;; Tracked objects:
 29750 ;;		On entry : 0/39
 29751 ;;		On exit  : 0/0
 29752 ;;		Unchanged: 0/0
 29753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29754 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29755 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29756 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29757 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29758 ;;Total ram usage:        0 bytes
 29759 ;; Hardware stack levels used:    1
 29760 ;; Hardware stack levels required when called:   16
 29761 ;; This function calls:
 29762 ;;		_TMR3_SetInterruptHandler
 29763 ;; This function is called by:
 29764 ;;		_SYSTEM_Initialize
 29765 ;; This function uses a reentrant model
 29766 ;;
 29767                           
 29768                           	psect	text117
 29769  01B182                     __ptext117:
 29770                           	opt callstack 0
 29771  01B182                     _TMR3_Initialize:
 29772                           	opt callstack 13
 29773                           
 29774                           ;mcc_generated_files/tmr3.c: 70:     T3GCON = 0x00;
 29775                           
 29776                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29777                           ;incstack = 0
 29778  01B182  6AA7               	clrf	167,c	;volatile
 29779                           
 29780                           ;mcc_generated_files/tmr3.c: 73:     T3GATE = 0x00;
 29781  01B184  6AA8               	clrf	168,c	;volatile
 29782                           
 29783                           ;mcc_generated_files/tmr3.c: 76:     T3CLK = 0x01;
 29784  01B186  0E01               	movlw	1
 29785  01B188  6EA9               	movwf	169,c	;volatile
 29786                           
 29787                           ;mcc_generated_files/tmr3.c: 79:     TMR3H = 0x3C;
 29788  01B18A  0E3C               	movlw	60
 29789  01B18C  6EA5               	movwf	165,c	;volatile
 29790                           
 29791                           ;mcc_generated_files/tmr3.c: 82:     TMR3L = 0xB0;
 29792  01B18E  0EB0               	movlw	176
 29793  01B190  6EA4               	movwf	164,c	;volatile
 29794                           
 29795                           ;mcc_generated_files/tmr3.c: 85:     timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
 29796  01B192  50A4               	movf	164,w,c	;volatile
 29797  01B194  006F FE94  F001    	movff	16293,btemp	;volatile
 29798  01B19A  6A02               	clrf	(btemp+1)^0,c
 29799  01B19C  0060  F004  F002   	movff	btemp,btemp+1
 29800  01B1A2  6A01               	clrf	btemp^0,c
 29801  01B1A4  1001               	iorwf	btemp^0,w,c
 29802  01B1A6  0100               	movlb	0	; () banked
 29803  01B1A8  6FC4               	movwf	_timer3ReloadVal& (0+255),b	;volatile
 29804  01B1AA  5002               	movf	(btemp+1)^0,w,c
 29805  01B1AC  6FC5               	movwf	(_timer3ReloadVal+1)& (0+255),b	;volatile
 29806                           
 29807                           ; BSR set to: 0
 29808                           ;mcc_generated_files/tmr3.c: 88:     PIR6bits.TMR3IF = 0;
 29809  01B1AE  0139               	movlb	57	; () banked
 29810  01B1B0  9DA6               	bcf	166,6,b	;volatile
 29811                           
 29812                           ; BSR set to: 57
 29813                           ;mcc_generated_files/tmr3.c: 91:     PIE6bits.TMR3IE = 1;
 29814  01B1B2  8D96               	bsf	150,6,b	;volatile
 29815                           
 29816                           ; BSR set to: 57
 29817                           ;mcc_generated_files/tmr3.c: 94:     TMR3_SetInterruptHandler(TMR3_DefaultInterruptHandl
      +                          er);
 29818  01B1B4  0EF8               	movlw	low _TMR3_DefaultInterruptHandler
 29819  01B1B6  6EE6               	movwf	postinc1,c
 29820  01B1B8  0EBD               	movlw	high _TMR3_DefaultInterruptHandler
 29821  01B1BA  6EE6               	movwf	postinc1,c
 29822  01B1BC  0E01               	movlw	low (_TMR3_DefaultInterruptHandler shr (0+16))
 29823  01B1BE  6EE6               	movwf	postinc1,c
 29824  01B1C0  EC6F  F0DC         	call	_TMR3_SetInterruptHandler	;wreg free
 29825                           
 29826                           ;mcc_generated_files/tmr3.c: 97:     T3CON = 0x31;
 29827  01B1C4  0E31               	movlw	49
 29828  01B1C6  6EA6               	movwf	166,c	;volatile
 29829                           
 29830                           ; _TMR3_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 29831  01B1C8  0012               	return		;funcret
 29832  01B1CA                     __end_of_TMR3_Initialize:
 29833                           	opt callstack 0
 29834                           
 29835 ;; *************** function _TMR3_SetInterruptHandler *****************
 29836 ;; Defined at:
 29837 ;;		line 193 in file "mcc_generated_files/tmr3.c"
 29838 ;; Parameters:    Size  Location     Type
 29839 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 29840 ;;		 -> calc_bsoc(1), TMR3_DefaultInterruptHandler(1), 
 29841 ;; Auto vars:     Size  Location     Type
 29842 ;;		None
 29843 ;; Return value:  Size  Location     Type
 29844 ;;                  1  [STACK] void 
 29845 ;; Registers used:
 29846 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 29847 ;; Tracked objects:
 29848 ;;		On entry : 0/1
 29849 ;;		On exit  : 0/0
 29850 ;;		Unchanged: 0/0
 29851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29852 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29853 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29854 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29855 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29856 ;;Total ram usage:        0 bytes
 29857 ;; Hardware stack levels used:    1
 29858 ;; Hardware stack levels required when called:   15
 29859 ;; This function calls:
 29860 ;;		Nothing
 29861 ;; This function is called by:
 29862 ;;		_TMR3_Initialize
 29863 ;;		_init_bsoc
 29864 ;; This function uses a reentrant model
 29865 ;;
 29866                           
 29867                           	psect	text118
 29868  01B8DE                     __ptext118:
 29869                           	opt callstack 0
 29870  01B8DE                     _TMR3_SetInterruptHandler:
 29871                           	opt callstack 14
 29872                           
 29873                           ;mcc_generated_files/tmr3.c: 194:     TMR3_InterruptHandler = InterruptHandler;
 29874                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 29875                           
 29876                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29877                           ;incstack = 0
 29878  01B8DE  50E1               	movf	fsr1l,w,c
 29879  01B8E0  0FFD               	addlw	-3
 29880  01B8E2  6ED9               	movwf	fsr2l,c
 29881  01B8E4  50E2               	movf	fsr1h,w,c
 29882  01B8E6  6EDA               	movwf	fsr2h,c
 29883  01B8E8  0EFF               	movlw	255
 29884  01B8EA  22DA               	addwfc	fsr2h,f,c
 29885  01B8EC  006F FF78  F0A2    	movff	postinc2,_TMR3_InterruptHandler
 29886  01B8F2  006F FF78  F0A3    	movff	postinc2,_TMR3_InterruptHandler+1
 29887  01B8F8  006F FF74  F0A4    	movff	postdec2,_TMR3_InterruptHandler+2
 29888                           
 29889                           ; _TMR3_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 29890  01B8FE  52E5               	movf	postdec1,f,c
 29891  01B900  52E5               	movf	postdec1,f,c
 29892  01B902  52E5               	movf	postdec1,f,c
 29893  01B904  0012               	return		;funcret
 29894  01B906                     __end_of_TMR3_SetInterruptHandler:
 29895                           	opt callstack 0
 29896                           
 29897 ;; *************** function _TMR2_Initialize *****************
 29898 ;; Defined at:
 29899 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 29900 ;; Parameters:    Size  Location     Type
 29901 ;;		None
 29902 ;; Auto vars:     Size  Location     Type
 29903 ;;		None
 29904 ;; Return value:  Size  Location     Type
 29905 ;;                  1  [STACK] void 
 29906 ;; Registers used:
 29907 ;;		wreg, status,2
 29908 ;; Tracked objects:
 29909 ;;		On entry : 0/3E
 29910 ;;		On exit  : 3F/39
 29911 ;;		Unchanged: 0/0
 29912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29913 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29914 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29915 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29916 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29917 ;;Total ram usage:        0 bytes
 29918 ;; Hardware stack levels used:    1
 29919 ;; Hardware stack levels required when called:   15
 29920 ;; This function calls:
 29921 ;;		Nothing
 29922 ;; This function is called by:
 29923 ;;		_SYSTEM_Initialize
 29924 ;; This function uses a reentrant model
 29925 ;;
 29926                           
 29927                           	psect	text119
 29928  01BC5E                     __ptext119:
 29929                           	opt callstack 0
 29930  01BC5E                     _TMR2_Initialize:
 29931                           	opt callstack 14
 29932                           
 29933                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
 29934                           
 29935                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29936                           ;incstack = 0
 29937  01BC5E  0E01               	movlw	1
 29938  01BC60  6EAE               	movwf	174,c	;volatile
 29939                           
 29940                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 29941  01BC62  6AAD               	clrf	173,c	;volatile
 29942                           
 29943                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 29944  01BC64  6AAF               	clrf	175,c	;volatile
 29945                           
 29946                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0x63;
 29947  01BC66  0E63               	movlw	99
 29948  01BC68  6EAB               	movwf	171,c	;volatile
 29949                           
 29950                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 29951  01BC6A  6AAA               	clrf	170,c	;volatile
 29952                           
 29953                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 29954  01BC6C  0139               	movlb	57	; () banked
 29955  01BC6E  95A4               	bcf	164,2,b	;volatile
 29956                           
 29957                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xC0;
 29958  01BC70  0EC0               	movlw	192
 29959  01BC72  6EAC               	movwf	172,c	;volatile
 29960                           
 29961                           ; BSR set to: 57
 29962                           ; _TMR2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 29963  01BC74  0012               	return		;funcret
 29964  01BC76                     __end_of_TMR2_Initialize:
 29965                           	opt callstack 0
 29966                           
 29967 ;; *************** function _SPI1_Initialize *****************
 29968 ;; Defined at:
 29969 ;;		line 64 in file "mcc_generated_files/spi1.c"
 29970 ;; Parameters:    Size  Location     Type
 29971 ;;		None
 29972 ;; Auto vars:     Size  Location     Type
 29973 ;;		None
 29974 ;; Return value:  Size  Location     Type
 29975 ;;                  1  [STACK] void 
 29976 ;; Registers used:
 29977 ;;		wreg, status,2
 29978 ;; Tracked objects:
 29979 ;;		On entry : 3F/39
 29980 ;;		On exit  : 3F/3D
 29981 ;;		Unchanged: 0/0
 29982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29983 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29984 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29985 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29986 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29987 ;;Total ram usage:        0 bytes
 29988 ;; Hardware stack levels used:    1
 29989 ;; Hardware stack levels required when called:   15
 29990 ;; This function calls:
 29991 ;;		Nothing
 29992 ;; This function is called by:
 29993 ;;		_SYSTEM_Initialize
 29994 ;; This function uses a reentrant model
 29995 ;;
 29996                           
 29997                           	psect	text120
 29998  01BC76                     __ptext120:
 29999                           	opt callstack 0
 30000  01BC76                     _SPI1_Initialize:
 30001                           	opt callstack 14
 30002                           
 30003                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
 30004                           
 30005                           ; BSR set to: 57
 30006                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30007                           ;incstack = 0
 30008  01BC76  0E40               	movlw	64
 30009  01BC78  013D               	movlb	61	; () banked
 30010  01BC7A  6F15               	movwf	21,b	;volatile
 30011                           
 30012                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
 30013  01BC7C  0E03               	movlw	3
 30014  01BC7E  6F16               	movwf	22,b	;volatile
 30015                           
 30016                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x4F;
 30017  01BC80  0E4F               	movlw	79
 30018  01BC82  6F19               	movwf	25,b	;volatile
 30019                           
 30020                           ; BSR set to: 61
 30021                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
 30022  01BC84  6B1C               	clrf	28,b	;volatile
 30023                           
 30024                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x83;
 30025  01BC86  0E83               	movlw	131
 30026  01BC88  6F14               	movwf	20,b	;volatile
 30027                           
 30028                           ; BSR set to: 61
 30029                           ; _SPI1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 30030  01BC8A  0012               	return		;funcret
 30031  01BC8C                     __end_of_SPI1_Initialize:
 30032                           	opt callstack 0
 30033                           
 30034 ;; *************** function _PWM8_Initialize *****************
 30035 ;; Defined at:
 30036 ;;		line 58 in file "mcc_generated_files/pwm8.c"
 30037 ;; Parameters:    Size  Location     Type
 30038 ;;		None
 30039 ;; Auto vars:     Size  Location     Type
 30040 ;;		None
 30041 ;; Return value:  Size  Location     Type
 30042 ;;                  1  [STACK] void 
 30043 ;; Registers used:
 30044 ;;		wreg, status,2
 30045 ;; Tracked objects:
 30046 ;;		On entry : 3F/39
 30047 ;;		On exit  : 3F/3F
 30048 ;;		Unchanged: 0/0
 30049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30050 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30051 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30052 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30053 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30054 ;;Total ram usage:        0 bytes
 30055 ;; Hardware stack levels used:    1
 30056 ;; Hardware stack levels required when called:   15
 30057 ;; This function calls:
 30058 ;;		Nothing
 30059 ;; This function is called by:
 30060 ;;		_SYSTEM_Initialize
 30061 ;; This function uses a reentrant model
 30062 ;;
 30063                           
 30064                           	psect	text121
 30065  01BC8C                     __ptext121:
 30066                           	opt callstack 0
 30067  01BC8C                     _PWM8_Initialize:
 30068                           	opt callstack 14
 30069                           
 30070                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
 30071                           
 30072                           ; BSR set to: 61
 30073                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30074                           ;incstack = 0
 30075  01BC8C  0E80               	movlw	128
 30076  01BC8E  6E62               	movwf	98,c	;volatile
 30077                           
 30078                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x00;
 30079  01BC90  6A61               	clrf	97,c	;volatile
 30080                           
 30081                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0x40;
 30082  01BC92  0E40               	movlw	64
 30083  01BC94  6E60               	movwf	96,c	;volatile
 30084                           
 30085                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 1;
 30086  01BC96  013F               	movlb	63	; () banked
 30087  01BC98  515F               	movf	95,w,b	;volatile
 30088  01BC9A  0B3F               	andlw	-193
 30089  01BC9C  0940               	iorlw	64
 30090  01BC9E  6F5F               	movwf	95,b	;volatile
 30091                           
 30092                           ; BSR set to: 63
 30093                           ; _PWM8_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 30094  01BCA0  0012               	return		;funcret
 30095  01BCA2                     __end_of_PWM8_Initialize:
 30096                           	opt callstack 0
 30097                           
 30098 ;; *************** function _PMD_Initialize *****************
 30099 ;; Defined at:
 30100 ;;		line 90 in file "mcc_generated_files/mcc.c"
 30101 ;; Parameters:    Size  Location     Type
 30102 ;;		None
 30103 ;; Auto vars:     Size  Location     Type
 30104 ;;		None
 30105 ;; Return value:  Size  Location     Type
 30106 ;;                  1  [STACK] void 
 30107 ;; Registers used:
 30108 ;;		None
 30109 ;; Tracked objects:
 30110 ;;		On entry : 3F/39
 30111 ;;		On exit  : 3F/39
 30112 ;;		Unchanged: 0/0
 30113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30114 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30115 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30116 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30117 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30118 ;;Total ram usage:        0 bytes
 30119 ;; Hardware stack levels used:    1
 30120 ;; Hardware stack levels required when called:   15
 30121 ;; This function calls:
 30122 ;;		Nothing
 30123 ;; This function is called by:
 30124 ;;		_SYSTEM_Initialize
 30125 ;; This function uses a reentrant model
 30126 ;;
 30127                           
 30128                           	psect	text122
 30129  01BCB8                     __ptext122:
 30130                           	opt callstack 0
 30131  01BCB8                     _PMD_Initialize:
 30132                           	opt callstack 14
 30133                           
 30134                           ;mcc_generated_files/mcc.c: 93:     PMD0 = 0x00;
 30135                           
 30136                           ; BSR set to: 63
 30137                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30138                           ;incstack = 0
 30139  01BCB8  0139               	movlb	57	; () banked
 30140  01BCBA  6BC0               	clrf	192,b	;volatile
 30141                           
 30142                           ;mcc_generated_files/mcc.c: 95:     PMD1 = 0x00;
 30143  01BCBC  6BC1               	clrf	193,b	;volatile
 30144                           
 30145                           ;mcc_generated_files/mcc.c: 97:     PMD2 = 0x00;
 30146  01BCBE  6BC2               	clrf	194,b	;volatile
 30147                           
 30148                           ;mcc_generated_files/mcc.c: 99:     PMD3 = 0x00;
 30149  01BCC0  6BC3               	clrf	195,b	;volatile
 30150                           
 30151                           ;mcc_generated_files/mcc.c: 101:     PMD4 = 0x00;
 30152  01BCC2  6BC4               	clrf	196,b	;volatile
 30153                           
 30154                           ;mcc_generated_files/mcc.c: 103:     PMD5 = 0x00;
 30155  01BCC4  6BC5               	clrf	197,b	;volatile
 30156                           
 30157                           ;mcc_generated_files/mcc.c: 105:     PMD6 = 0x00;
 30158  01BCC6  6BC6               	clrf	198,b	;volatile
 30159                           
 30160                           ;mcc_generated_files/mcc.c: 107:     PMD7 = 0x00;
 30161  01BCC8  6BC7               	clrf	199,b	;volatile
 30162                           
 30163                           ; BSR set to: 57
 30164                           ; _PMD_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 30165  01BCCA  0012               	return		;funcret
 30166  01BCCC                     __end_of_PMD_Initialize:
 30167                           	opt callstack 0
 30168                           
 30169 ;; *************** function _PIN_MANAGER_Initialize *****************
 30170 ;; Defined at:
 30171 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 30172 ;; Parameters:    Size  Location     Type
 30173 ;;		None
 30174 ;; Auto vars:     Size  Location     Type
 30175 ;;		None
 30176 ;; Return value:  Size  Location     Type
 30177 ;;                  1  [STACK] void 
 30178 ;; Registers used:
 30179 ;;		wreg, status,2
 30180 ;; Tracked objects:
 30181 ;;		On entry : 3F/39
 30182 ;;		On exit  : 3F/3A
 30183 ;;		Unchanged: 0/0
 30184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30185 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30186 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30187 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30188 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30189 ;;Total ram usage:        0 bytes
 30190 ;; Hardware stack levels used:    1
 30191 ;; Hardware stack levels required when called:   15
 30192 ;; This function calls:
 30193 ;;		Nothing
 30194 ;; This function is called by:
 30195 ;;		_SYSTEM_Initialize
 30196 ;; This function uses a reentrant model
 30197 ;;
 30198                           
 30199                           	psect	text123
 30200  01A6FA                     __ptext123:
 30201                           	opt callstack 0
 30202  01A6FA                     _PIN_MANAGER_Initialize:
 30203                           	opt callstack 14
 30204                           
 30205                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x07;
 30206                           
 30207                           ; BSR set to: 57
 30208                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30209                           ;incstack = 0
 30210  01A6FA  0E07               	movlw	7
 30211  01A6FC  6EBE               	movwf	190,c	;volatile
 30212                           
 30213                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x80;
 30214  01A6FE  0E80               	movlw	128
 30215  01A700  6EBD               	movwf	189,c	;volatile
 30216                           
 30217                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 30218  01A702  6ABA               	clrf	186,c	;volatile
 30219                           
 30220                           ;mcc_generated_files/pin_manager.c: 65:     LATF = 0x20;
 30221  01A704  0E20               	movlw	32
 30222  01A706  6EBF               	movwf	191,c	;volatile
 30223                           
 30224                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
 30225  01A708  6ABB               	clrf	187,c	;volatile
 30226                           
 30227                           ;mcc_generated_files/pin_manager.c: 67:     LATC = 0x07;
 30228  01A70A  0E07               	movlw	7
 30229  01A70C  6EBC               	movwf	188,c	;volatile
 30230                           
 30231                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0x00;
 30232  01A70E  6AC6               	clrf	198,c	;volatile
 30233                           
 30234                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0x0F;
 30235  01A710  0E0F               	movlw	15
 30236  01A712  6EC7               	movwf	199,c	;volatile
 30237                           
 30238                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0xFF;
 30239  01A714  68C2               	setf	194,c	;volatile
 30240                           
 30241                           ;mcc_generated_files/pin_manager.c: 75:     TRISB = 0xBF;
 30242  01A716  0EBF               	movlw	191
 30243  01A718  6EC3               	movwf	195,c	;volatile
 30244                           
 30245                           ;mcc_generated_files/pin_manager.c: 76:     TRISC = 0x90;
 30246  01A71A  0E90               	movlw	144
 30247  01A71C  6EC4               	movwf	196,c	;volatile
 30248                           
 30249                           ;mcc_generated_files/pin_manager.c: 77:     TRISD = 0x0C;
 30250  01A71E  0E0C               	movlw	12
 30251  01A720  6EC5               	movwf	197,c	;volatile
 30252                           
 30253                           ;mcc_generated_files/pin_manager.c: 82:     ANSELD = 0x00;
 30254  01A722  013A               	movlb	58	; () banked
 30255  01A724  6B70               	clrf	112,b	;volatile
 30256                           
 30257                           ; BSR set to: 58
 30258                           ;mcc_generated_files/pin_manager.c: 83:     ANSELC = 0x00;
 30259  01A726  6B60               	clrf	96,b	;volatile
 30260                           
 30261                           ;mcc_generated_files/pin_manager.c: 84:     ANSELB = 0x3C;
 30262  01A728  0E3C               	movlw	60
 30263  01A72A  6F50               	movwf	80,b	;volatile
 30264                           
 30265                           ; BSR set to: 58
 30266                           ;mcc_generated_files/pin_manager.c: 85:     ANSELE = 0x00;
 30267  01A72C  6B80               	clrf	128,b	;volatile
 30268                           
 30269                           ; BSR set to: 58
 30270                           ;mcc_generated_files/pin_manager.c: 86:     ANSELF = 0x00;
 30271  01A72E  6B90               	clrf	144,b	;volatile
 30272                           
 30273                           ; BSR set to: 58
 30274                           ;mcc_generated_files/pin_manager.c: 87:     ANSELA = 0xFF;
 30275  01A730  6940               	setf	64,b	;volatile
 30276                           
 30277                           ;mcc_generated_files/pin_manager.c: 92:     WPUD = 0x0C;
 30278  01A732  0E0C               	movlw	12
 30279  01A734  6F71               	movwf	113,b	;volatile
 30280                           
 30281                           ;mcc_generated_files/pin_manager.c: 93:     WPUF = 0x0F;
 30282  01A736  0E0F               	movlw	15
 30283  01A738  6F91               	movwf	145,b	;volatile
 30284                           
 30285                           ; BSR set to: 58
 30286                           ;mcc_generated_files/pin_manager.c: 94:     WPUE = 0x00;
 30287  01A73A  6B81               	clrf	129,b	;volatile
 30288                           
 30289                           ;mcc_generated_files/pin_manager.c: 95:     WPUB = 0x83;
 30290  01A73C  0E83               	movlw	131
 30291  01A73E  6F51               	movwf	81,b	;volatile
 30292                           
 30293                           ; BSR set to: 58
 30294                           ;mcc_generated_files/pin_manager.c: 96:     WPUA = 0x00;
 30295  01A740  6B41               	clrf	65,b	;volatile
 30296                           
 30297                           ;mcc_generated_files/pin_manager.c: 97:     WPUC = 0x97;
 30298  01A742  0E97               	movlw	151
 30299  01A744  6F61               	movwf	97,b	;volatile
 30300                           
 30301                           ; BSR set to: 58
 30302                           ;mcc_generated_files/pin_manager.c: 102:     ODCONE = 0x00;
 30303  01A746  6B82               	clrf	130,b	;volatile
 30304                           
 30305                           ; BSR set to: 58
 30306                           ;mcc_generated_files/pin_manager.c: 103:     ODCONF = 0x00;
 30307  01A748  6B92               	clrf	146,b	;volatile
 30308                           
 30309                           ; BSR set to: 58
 30310                           ;mcc_generated_files/pin_manager.c: 104:     ODCONA = 0x00;
 30311  01A74A  6B42               	clrf	66,b	;volatile
 30312                           
 30313                           ; BSR set to: 58
 30314                           ;mcc_generated_files/pin_manager.c: 105:     ODCONB = 0x00;
 30315  01A74C  6B52               	clrf	82,b	;volatile
 30316                           
 30317                           ; BSR set to: 58
 30318                           ;mcc_generated_files/pin_manager.c: 106:     ODCONC = 0x00;
 30319  01A74E  6B62               	clrf	98,b	;volatile
 30320                           
 30321                           ; BSR set to: 58
 30322                           ;mcc_generated_files/pin_manager.c: 107:     ODCOND = 0x00;
 30323  01A750  6B72               	clrf	114,b	;volatile
 30324                           
 30325                           ; BSR set to: 58
 30326                           ;mcc_generated_files/pin_manager.c: 112:     SLRCONA = 0xFF;
 30327  01A752  6943               	setf	67,b	;volatile
 30328                           
 30329                           ; BSR set to: 58
 30330                           ;mcc_generated_files/pin_manager.c: 113:     SLRCONB = 0xFF;
 30331  01A754  6953               	setf	83,b	;volatile
 30332                           
 30333                           ; BSR set to: 58
 30334                           ;mcc_generated_files/pin_manager.c: 114:     SLRCONC = 0xFF;
 30335  01A756  6963               	setf	99,b	;volatile
 30336                           
 30337                           ; BSR set to: 58
 30338                           ;mcc_generated_files/pin_manager.c: 115:     SLRCOND = 0xFF;
 30339  01A758  6973               	setf	115,b	;volatile
 30340                           
 30341                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONE = 0x07;
 30342  01A75A  0E07               	movlw	7
 30343  01A75C  6F83               	movwf	131,b	;volatile
 30344                           
 30345                           ; BSR set to: 58
 30346                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONF = 0xFF;
 30347  01A75E  6993               	setf	147,b	;volatile
 30348                           
 30349                           ;mcc_generated_files/pin_manager.c: 126:     U2RXPPS = 0x0F;
 30350  01A760  0E0F               	movlw	15
 30351  01A762  6FE8               	movwf	232,b	;volatile
 30352                           
 30353                           ;mcc_generated_files/pin_manager.c: 127:     SPI1SCKPPS = 0x13;
 30354  01A764  0E13               	movlw	19
 30355  01A766  6FDE               	movwf	222,b	;volatile
 30356                           
 30357                           ;mcc_generated_files/pin_manager.c: 128:     RB6PPS = 0x16;
 30358  01A768  0E16               	movlw	22
 30359  01A76A  6F0E               	movwf	14,b	;volatile
 30360                           
 30361                           ;mcc_generated_files/pin_manager.c: 129:     RC3PPS = 0x1E;
 30362  01A76C  0E1E               	movlw	30
 30363  01A76E  6F13               	movwf	19,b	;volatile
 30364                           
 30365                           ;mcc_generated_files/pin_manager.c: 130:     INT0PPS = 0x08;
 30366  01A770  0E08               	movlw	8
 30367  01A772  6FC0               	movwf	192,b	;volatile
 30368                           
 30369                           ;mcc_generated_files/pin_manager.c: 131:     RD1PPS = 0x10;
 30370  01A774  0E10               	movlw	16
 30371  01A776  6F19               	movwf	25,b	;volatile
 30372                           
 30373                           ;mcc_generated_files/pin_manager.c: 132:     INT1PPS = 0x09;
 30374  01A778  0E09               	movlw	9
 30375  01A77A  6FC1               	movwf	193,b	;volatile
 30376                           
 30377                           ;mcc_generated_files/pin_manager.c: 133:     RC5PPS = 0x1F;
 30378  01A77C  0E1F               	movlw	31
 30379  01A77E  6F15               	movwf	21,b	;volatile
 30380                           
 30381                           ;mcc_generated_files/pin_manager.c: 134:     RC6PPS = 0x13;
 30382  01A780  0E13               	movlw	19
 30383  01A782  6F16               	movwf	22,b	;volatile
 30384                           
 30385                           ;mcc_generated_files/pin_manager.c: 135:     U1RXPPS = 0x17;
 30386  01A784  0E17               	movlw	23
 30387  01A786  6FE5               	movwf	229,b	;volatile
 30388                           
 30389                           ;mcc_generated_files/pin_manager.c: 136:     SPI1SDIPPS = 0x14;
 30390  01A788  0E14               	movlw	20
 30391  01A78A  6FDF               	movwf	223,b	;volatile
 30392                           
 30393                           ; BSR set to: 58
 30394                           ; _PIN_MANAGER_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
 30395  01A78C  0012               	return		;funcret
 30396  01A78E                     __end_of_PIN_MANAGER_Initialize:
 30397                           	opt callstack 0
 30398                           
 30399 ;; *************** function _OSCILLATOR_Initialize *****************
 30400 ;; Defined at:
 30401 ;;		line 72 in file "mcc_generated_files/mcc.c"
 30402 ;; Parameters:    Size  Location     Type
 30403 ;;		None
 30404 ;; Auto vars:     Size  Location     Type
 30405 ;;		None
 30406 ;; Return value:  Size  Location     Type
 30407 ;;                  1  [STACK] void 
 30408 ;; Registers used:
 30409 ;;		wreg, status,2
 30410 ;; Tracked objects:
 30411 ;;		On entry : 3F/3A
 30412 ;;		On exit  : 3F/39
 30413 ;;		Unchanged: 0/0
 30414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30415 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30416 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30418 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30419 ;;Total ram usage:        0 bytes
 30420 ;; Hardware stack levels used:    1
 30421 ;; Hardware stack levels required when called:   15
 30422 ;; This function calls:
 30423 ;;		Nothing
 30424 ;; This function is called by:
 30425 ;;		_SYSTEM_Initialize
 30426 ;; This function uses a reentrant model
 30427 ;;
 30428                           
 30429                           	psect	text124
 30430  01BCA2                     __ptext124:
 30431                           	opt callstack 0
 30432  01BCA2                     _OSCILLATOR_Initialize:
 30433                           	opt callstack 14
 30434                           
 30435                           ;mcc_generated_files/mcc.c: 75:     OSCCON1 = 0x20;
 30436                           
 30437                           ; BSR set to: 58
 30438                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30439                           ;incstack = 0
 30440  01BCA2  0E20               	movlw	32
 30441  01BCA4  0139               	movlb	57	; () banked
 30442  01BCA6  6FD9               	movwf	217,b	;volatile
 30443                           
 30444                           ; BSR set to: 57
 30445                           ;mcc_generated_files/mcc.c: 77:     OSCCON3 = 0x00;
 30446  01BCA8  6BDB               	clrf	219,b	;volatile
 30447                           
 30448                           ; BSR set to: 57
 30449                           ;mcc_generated_files/mcc.c: 79:     OSCEN = 0x00;
 30450  01BCAA  6BDD               	clrf	221,b	;volatile
 30451                           
 30452                           ;mcc_generated_files/mcc.c: 81:     OSCFRQ = 0x02;
 30453  01BCAC  0E02               	movlw	2
 30454  01BCAE  6FDF               	movwf	223,b	;volatile
 30455                           
 30456                           ; BSR set to: 57
 30457                           ;mcc_generated_files/mcc.c: 83:     OSCTUNE = 0x00;
 30458  01BCB0  6BDE               	clrf	222,b	;volatile
 30459  01BCB2                     l169:
 30460                           
 30461                           ; BSR set to: 57
 30462                           ;mcc_generated_files/mcc.c: 85:     while(PLLR == 0)
 30463  01BCB2  B1DC               	btfsc	220,0,b	;volatile
 30464  01BCB4  0012               	return	
 30465  01BCB6  D7FD               	goto	l169
 30466  01BCB8                     __end_of_OSCILLATOR_Initialize:
 30467                           	opt callstack 0
 30468                           
 30469 ;; *************** function _INTERRUPT_Initialize *****************
 30470 ;; Defined at:
 30471 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 30472 ;; Parameters:    Size  Location     Type
 30473 ;;		None
 30474 ;; Auto vars:     Size  Location     Type
 30475 ;;  state           1  [STACK] _Bool 
 30476 ;; Return value:  Size  Location     Type
 30477 ;;                  1  [STACK] void 
 30478 ;; Registers used:
 30479 ;;		wreg, fsr1l, fsr1h, status,2, btemp+11
 30480 ;; Tracked objects:
 30481 ;;		On entry : 0/0
 30482 ;;		On exit  : 3F/39
 30483 ;;		Unchanged: 0/0
 30484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30485 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30486 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30488 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30489 ;;Total ram usage:        0 bytes
 30490 ;; Hardware stack levels used:    1
 30491 ;; Hardware stack levels required when called:   15
 30492 ;; This function calls:
 30493 ;;		Nothing
 30494 ;; This function is called by:
 30495 ;;		_SYSTEM_Initialize
 30496 ;; This function uses a reentrant model
 30497 ;;
 30498                           
 30499                           	psect	text125
 30500  01AC7A                     __ptext125:
 30501                           	opt callstack 0
 30502  01AC7A                     _INTERRUPT_Initialize:
 30503                           	opt callstack 0
 30504                           
 30505                           ; BSR set to: 57
 30506                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30507  01AC7A  52E6               	movf	postinc1,f,c
 30508                           
 30509                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 30510                           
 30511                           ;incstack = 0
 30512  01AC7C  8AD2               	bsf	210,5,c	;volatile
 30513                           
 30514                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 30515  01AC7E  AED2               	btfss	16338,7,c	;volatile
 30516  01AC80  D003               	goto	u9390
 30517  01AC82  6A0C               	clrf	(btemp+11)^0,c
 30518  01AC84  2A0C               	incf	(btemp+11)^0,f,c
 30519  01AC86  D001               	goto	u9408
 30520  01AC88                     u9390:
 30521  01AC88  6A0C               	clrf	(btemp+11)^0,c
 30522  01AC8A                     u9408:
 30523                           
 30524                           ;stkvar	_state @ sp[(-1)+0]
 30525  01AC8A  0EFF               	movlw	-1
 30526  01AC8C  0060  F033  FFE3   	movff	btemp+11,plusw1
 30527                           
 30528                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 30529  01AC92  9ED2               	bcf	16338,7,c	;volatile
 30530                           
 30531                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 30532  01AC94  0E55               	movlw	85
 30533  01AC96  6ED4               	movwf	212,c	;volatile
 30534                           
 30535                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 30536  01AC98  0EAA               	movlw	170
 30537  01AC9A  6ED4               	movwf	212,c	;volatile
 30538                           
 30539                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 30540  01AC9C  90D4               	bcf	212,0,c	;volatile
 30541                           
 30542                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
 30543  01AC9E  0138               	movlb	56	; () banked
 30544  01ACA0  6B9F               	clrf	159,b	;volatile
 30545                           
 30546                           ; BSR set to: 56
 30547                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
 30548  01ACA2  6B9E               	clrf	158,b	;volatile
 30549                           
 30550                           ; BSR set to: 56
 30551                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
 30552  01ACA4  0E08               	movlw	8
 30553  01ACA6  6F9D               	movwf	157,b	;volatile
 30554                           
 30555                           ; BSR set to: 56
 30556                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 30557  01ACA8  0E55               	movlw	85
 30558  01ACAA  6ED4               	movwf	212,c	;volatile
 30559                           
 30560                           ; BSR set to: 56
 30561                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 30562  01ACAC  0EAA               	movlw	170
 30563  01ACAE  6ED4               	movwf	212,c	;volatile
 30564                           
 30565                           ; BSR set to: 56
 30566                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 30567  01ACB0  80D4               	bsf	212,0,c	;volatile
 30568                           
 30569                           ; BSR set to: 56
 30570                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 30571                           ;stkvar	_state @ sp[(-1)+0]
 30572  01ACB2  0EFF               	movlw	-1
 30573  01ACB4  B0E3               	btfsc	plusw1,0,c
 30574  01ACB6  D002               	bra	u9415
 30575  01ACB8  9ED2               	bcf	16338,7,c	;volatile
 30576  01ACBA  D001               	bra	u9416
 30577  01ACBC                     u9415:
 30578  01ACBC  8ED2               	bsf	16338,7,c	;volatile
 30579  01ACBE                     u9416:
 30580                           
 30581                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR2bits.DMA1AIP = 1;
 30582  01ACBE  0139               	movlb	57	; () banked
 30583  01ACC0  8782               	bsf	130,3,b	;volatile
 30584                           
 30585                           ; BSR set to: 57
 30586                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR2bits.DMA1DCNTIP = 1;
 30587  01ACC2  8382               	bsf	130,1,b	;volatile
 30588                           
 30589                           ; BSR set to: 57
 30590                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR2bits.DMA1SCNTIP = 1;
 30591  01ACC4  8182               	bsf	130,0,b	;volatile
 30592                           
 30593                           ; BSR set to: 57
 30594                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR2bits.DMA1ORIP = 1;
 30595  01ACC6  8582               	bsf	130,2,b	;volatile
 30596                           
 30597                           ; BSR set to: 57
 30598                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR6bits.U2TXIP = 1;
 30599  01ACC8  8786               	bsf	134,3,b	;volatile
 30600                           
 30601                           ; BSR set to: 57
 30602                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR6bits.U2RXIP = 1;
 30603  01ACCA  8586               	bsf	134,2,b	;volatile
 30604                           
 30605                           ; BSR set to: 57
 30606                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR3bits.U1RXIP = 1;
 30607  01ACCC  8783               	bsf	131,3,b	;volatile
 30608                           
 30609                           ; BSR set to: 57
 30610                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR1bits.INT0IP = 1;
 30611  01ACCE  8181               	bsf	129,0,b	;volatile
 30612                           
 30613                           ; BSR set to: 57
 30614                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR5bits.INT1IP = 0;
 30615  01ACD0  9185               	bcf	133,0,b	;volatile
 30616                           
 30617                           ; BSR set to: 57
 30618                           ;mcc_generated_files/interrupt_manager.c: 81:     IPR9bits.TMR6IP = 1;
 30619  01ACD2  8189               	bsf	137,0,b	;volatile
 30620                           
 30621                           ; BSR set to: 57
 30622                           ;mcc_generated_files/interrupt_manager.c: 82:     IPR8bits.TMR5IP = 0;
 30623  01ACD4  9D88               	bcf	136,6,b	;volatile
 30624                           
 30625                           ; BSR set to: 57
 30626                           ;mcc_generated_files/interrupt_manager.c: 83:     IPR1bits.ADIP = 1;
 30627  01ACD6  8581               	bsf	129,2,b	;volatile
 30628                           
 30629                           ; BSR set to: 57
 30630                           ;mcc_generated_files/interrupt_manager.c: 84:     IPR1bits.ADTIP = 1;
 30631  01ACD8  8781               	bsf	129,3,b	;volatile
 30632                           
 30633                           ; BSR set to: 57
 30634                           ;mcc_generated_files/interrupt_manager.c: 85:     IPR6bits.TMR3IP = 0;
 30635  01ACDA  9D86               	bcf	134,6,b	;volatile
 30636                           
 30637                           ; BSR set to: 57
 30638                           ; _INTERRUPT_Initialize: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 30639  01ACDC  52E5               	movf	postdec1,f,c
 30640  01ACDE  0012               	return		;funcret
 30641  01ACE0                     __end_of_INTERRUPT_Initialize:
 30642                           	opt callstack 0
 30643                           
 30644 ;; *************** function _FVR_Initialize *****************
 30645 ;; Defined at:
 30646 ;;		line 58 in file "mcc_generated_files/fvr.c"
 30647 ;; Parameters:    Size  Location     Type
 30648 ;;		None
 30649 ;; Auto vars:     Size  Location     Type
 30650 ;;		None
 30651 ;; Return value:  Size  Location     Type
 30652 ;;                  1  [STACK] void 
 30653 ;; Registers used:
 30654 ;;		wreg, status,2
 30655 ;; Tracked objects:
 30656 ;;		On entry : 3F/39
 30657 ;;		On exit  : 3F/3E
 30658 ;;		Unchanged: 0/0
 30659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30660 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30661 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30663 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30664 ;;Total ram usage:        0 bytes
 30665 ;; Hardware stack levels used:    1
 30666 ;; Hardware stack levels required when called:   15
 30667 ;; This function calls:
 30668 ;;		Nothing
 30669 ;; This function is called by:
 30670 ;;		_SYSTEM_Initialize
 30671 ;; This function uses a reentrant model
 30672 ;;
 30673                           
 30674                           	psect	text126
 30675  01BDCE                     __ptext126:
 30676                           	opt callstack 0
 30677  01BDCE                     _FVR_Initialize:
 30678                           	opt callstack 14
 30679                           
 30680                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0xAF;
 30681                           
 30682                           ; BSR set to: 57
 30683                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30684                           ;incstack = 0
 30685  01BDCE  0EAF               	movlw	175
 30686  01BDD0  013E               	movlb	62	; () banked
 30687  01BDD2  6FC1               	movwf	193,b	;volatile
 30688                           
 30689                           ; BSR set to: 62
 30690                           ; _FVR_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 30691  01BDD4  0012               	return		;funcret
 30692  01BDD6                     __end_of_FVR_Initialize:
 30693                           	opt callstack 0
 30694                           
 30695 ;; *************** function _EXT_INT_Initialize *****************
 30696 ;; Defined at:
 30697 ;;		line 89 in file "mcc_generated_files/ext_int.c"
 30698 ;; Parameters:    Size  Location     Type
 30699 ;;		None
 30700 ;; Auto vars:     Size  Location     Type
 30701 ;;		None
 30702 ;; Return value:  Size  Location     Type
 30703 ;;                  1  [STACK] void 
 30704 ;; Registers used:
 30705 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 30706 ;; Tracked objects:
 30707 ;;		On entry : 3F/3F
 30708 ;;		On exit  : 3F/39
 30709 ;;		Unchanged: 0/0
 30710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30711 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30712 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30714 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30715 ;;Total ram usage:        0 bytes
 30716 ;; Hardware stack levels used:    1
 30717 ;; Hardware stack levels required when called:   16
 30718 ;; This function calls:
 30719 ;;		_INT0_SetInterruptHandler
 30720 ;;		_INT1_SetInterruptHandler
 30721 ;; This function is called by:
 30722 ;;		_SYSTEM_Initialize
 30723 ;; This function uses a reentrant model
 30724 ;;
 30725                           
 30726                           	psect	text127
 30727  01B5A4                     __ptext127:
 30728                           	opt callstack 0
 30729  01B5A4                     _EXT_INT_Initialize:
 30730                           	opt callstack 13
 30731                           
 30732                           ;mcc_generated_files/ext_int.c: 94:  (PIR1bits.INT0IF = 0);
 30733                           
 30734                           ; BSR set to: 62
 30735                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30736                           ;incstack = 0
 30737  01B5A4  0139               	movlb	57	; () banked
 30738  01B5A6  91A1               	bcf	161,0,b	;volatile
 30739                           
 30740                           ;mcc_generated_files/ext_int.c: 95:  (INTCON0bits.INT0EDG = 0);
 30741  01B5A8  90D2               	bcf	210,0,c	;volatile
 30742                           
 30743                           ; BSR set to: 57
 30744                           ;mcc_generated_files/ext_int.c: 97:  INT0_SetInterruptHandler(INT0_DefaultInterruptHandl
      +                          er);
 30745  01B5AA  0EFA               	movlw	low _INT0_DefaultInterruptHandler
 30746  01B5AC  6EE6               	movwf	postinc1,c
 30747  01B5AE  0EBD               	movlw	high _INT0_DefaultInterruptHandler
 30748  01B5B0  6EE6               	movwf	postinc1,c
 30749  01B5B2  0E01               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 30750  01B5B4  6EE6               	movwf	postinc1,c
 30751  01B5B6  EC97  F0DC         	call	_INT0_SetInterruptHandler	;wreg free
 30752                           
 30753                           ;mcc_generated_files/ext_int.c: 98:  (PIE1bits.INT0IE = 1);
 30754  01B5BA  0139               	movlb	57	; () banked
 30755  01B5BC  8191               	bsf	145,0,b	;volatile
 30756                           
 30757                           ; BSR set to: 57
 30758                           ;mcc_generated_files/ext_int.c: 103:  (PIR5bits.INT1IF = 0);
 30759  01B5BE  91A5               	bcf	165,0,b	;volatile
 30760                           
 30761                           ; BSR set to: 57
 30762                           ;mcc_generated_files/ext_int.c: 104:  (INTCON0bits.INT1EDG = 0);
 30763  01B5C0  92D2               	bcf	210,1,c	;volatile
 30764                           
 30765                           ;mcc_generated_files/ext_int.c: 106:  INT1_SetInterruptHandler(INT1_DefaultInterruptHand
      +                          ler);
 30766  01B5C2  0EF6               	movlw	low _INT1_DefaultInterruptHandler
 30767  01B5C4  6EE6               	movwf	postinc1,c
 30768  01B5C6  0EBD               	movlw	high _INT1_DefaultInterruptHandler
 30769  01B5C8  6EE6               	movwf	postinc1,c
 30770  01B5CA  0E01               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 30771  01B5CC  6EE6               	movwf	postinc1,c
 30772  01B5CE  EC83  F0DC         	call	_INT1_SetInterruptHandler	;wreg free
 30773                           
 30774                           ;mcc_generated_files/ext_int.c: 107:  (PIE5bits.INT1IE = 1);
 30775  01B5D2  0139               	movlb	57	; () banked
 30776  01B5D4  8195               	bsf	149,0,b	;volatile
 30777                           
 30778                           ; BSR set to: 57
 30779                           ; _EXT_INT_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 30780  01B5D6  0012               	return		;funcret
 30781  01B5D8                     __end_of_EXT_INT_Initialize:
 30782                           	opt callstack 0
 30783                           
 30784 ;; *************** function _INT1_SetInterruptHandler *****************
 30785 ;; Defined at:
 30786 ;;		line 78 in file "mcc_generated_files/ext_int.c"
 30787 ;; Parameters:    Size  Location     Type
 30788 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 30789 ;;		 -> switch_handler(1), INT1_DefaultInterruptHandler(1), 
 30790 ;; Auto vars:     Size  Location     Type
 30791 ;;		None
 30792 ;; Return value:  Size  Location     Type
 30793 ;;                  1  [STACK] void 
 30794 ;; Registers used:
 30795 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 30796 ;; Tracked objects:
 30797 ;;		On entry : 3F/39
 30798 ;;		On exit  : 0/0
 30799 ;;		Unchanged: 0/0
 30800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30801 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30802 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30804 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30805 ;;Total ram usage:        0 bytes
 30806 ;; Hardware stack levels used:    1
 30807 ;; Hardware stack levels required when called:   15
 30808 ;; This function calls:
 30809 ;;		Nothing
 30810 ;; This function is called by:
 30811 ;;		_EXT_INT_Initialize
 30812 ;;		_start_switch_handler
 30813 ;; This function uses a reentrant model
 30814 ;;
 30815                           
 30816                           	psect	text128
 30817  01B906                     __ptext128:
 30818                           	opt callstack 0
 30819  01B906                     _INT1_SetInterruptHandler:
 30820                           	opt callstack 14
 30821                           
 30822                           ;mcc_generated_files/ext_int.c: 78: void INT1_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 79: {;mcc_generated_files/ext_int.c: 80:  INT1
      +                          _InterruptHandler = InterruptHandler;
 30823                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 30824                           
 30825                           ; BSR set to: 57
 30826                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30827                           ;incstack = 0
 30828  01B906  50E1               	movf	fsr1l,w,c
 30829  01B908  0FFD               	addlw	-3
 30830  01B90A  6ED9               	movwf	fsr2l,c
 30831  01B90C  50E2               	movf	fsr1h,w,c
 30832  01B90E  6EDA               	movwf	fsr2h,c
 30833  01B910  0EFF               	movlw	255
 30834  01B912  22DA               	addwfc	fsr2h,f,c
 30835  01B914  006F FF78  F0BA    	movff	postinc2,_INT1_InterruptHandler
 30836  01B91A  006F FF78  F0BB    	movff	postinc2,_INT1_InterruptHandler+1
 30837  01B920  006F FF74  F0BC    	movff	postdec2,_INT1_InterruptHandler+2
 30838                           
 30839                           ; _INT1_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 30840  01B926  52E5               	movf	postdec1,f,c
 30841  01B928  52E5               	movf	postdec1,f,c
 30842  01B92A  52E5               	movf	postdec1,f,c
 30843  01B92C  0012               	return		;funcret
 30844  01B92E                     __end_of_INT1_SetInterruptHandler:
 30845                           	opt callstack 0
 30846                           
 30847 ;; *************** function _INT0_SetInterruptHandler *****************
 30848 ;; Defined at:
 30849 ;;		line 52 in file "mcc_generated_files/ext_int.c"
 30850 ;; Parameters:    Size  Location     Type
 30851 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 30852 ;;		 -> INT0_DefaultInterruptHandler(1), 
 30853 ;; Auto vars:     Size  Location     Type
 30854 ;;		None
 30855 ;; Return value:  Size  Location     Type
 30856 ;;                  1  [STACK] void 
 30857 ;; Registers used:
 30858 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 30859 ;; Tracked objects:
 30860 ;;		On entry : 3F/39
 30861 ;;		On exit  : 0/0
 30862 ;;		Unchanged: 0/0
 30863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30864 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30865 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30866 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30867 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30868 ;;Total ram usage:        0 bytes
 30869 ;; Hardware stack levels used:    1
 30870 ;; Hardware stack levels required when called:   15
 30871 ;; This function calls:
 30872 ;;		Nothing
 30873 ;; This function is called by:
 30874 ;;		_EXT_INT_Initialize
 30875 ;; This function uses a reentrant model
 30876 ;;
 30877                           
 30878                           	psect	text129
 30879  01B92E                     __ptext129:
 30880                           	opt callstack 0
 30881  01B92E                     _INT0_SetInterruptHandler:
 30882                           	opt callstack 13
 30883                           
 30884                           ;mcc_generated_files/ext_int.c: 52: void INT0_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 53: {;mcc_generated_files/ext_int.c: 54:  INT0
      +                          _InterruptHandler = InterruptHandler;
 30885                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 30886                           
 30887                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30888                           ;incstack = 0
 30889  01B92E  50E1               	movf	fsr1l,w,c
 30890  01B930  0FFD               	addlw	-3
 30891  01B932  6ED9               	movwf	fsr2l,c
 30892  01B934  50E2               	movf	fsr1h,w,c
 30893  01B936  6EDA               	movwf	fsr2h,c
 30894  01B938  0EFF               	movlw	255
 30895  01B93A  22DA               	addwfc	fsr2h,f,c
 30896  01B93C  006F FF78  F0BD    	movff	postinc2,_INT0_InterruptHandler
 30897  01B942  006F FF78  F0BE    	movff	postinc2,_INT0_InterruptHandler+1
 30898  01B948  006F FF74  F0BF    	movff	postdec2,_INT0_InterruptHandler+2
 30899                           
 30900                           ; _INT0_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 30901  01B94E  52E5               	movf	postdec1,f,c
 30902  01B950  52E5               	movf	postdec1,f,c
 30903  01B952  52E5               	movf	postdec1,f,c
 30904  01B954  0012               	return		;funcret
 30905  01B956                     __end_of_INT0_SetInterruptHandler:
 30906                           	opt callstack 0
 30907                           
 30908 ;; *************** function _DMA2_Initialize *****************
 30909 ;; Defined at:
 30910 ;;		line 61 in file "mcc_generated_files/dma2.c"
 30911 ;; Parameters:    Size  Location     Type
 30912 ;;		None
 30913 ;; Auto vars:     Size  Location     Type
 30914 ;;		None
 30915 ;; Return value:  Size  Location     Type
 30916 ;;                  1  [STACK] void 
 30917 ;; Registers used:
 30918 ;;		wreg, status,2
 30919 ;; Tracked objects:
 30920 ;;		On entry : 3F/3D
 30921 ;;		On exit  : 3F/3B
 30922 ;;		Unchanged: 0/0
 30923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30924 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30925 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30926 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30927 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30928 ;;Total ram usage:        0 bytes
 30929 ;; Hardware stack levels used:    1
 30930 ;; Hardware stack levels required when called:   15
 30931 ;; This function calls:
 30932 ;;		Nothing
 30933 ;; This function is called by:
 30934 ;;		_SYSTEM_Initialize
 30935 ;; This function uses a reentrant model
 30936 ;;
 30937                           
 30938                           	psect	text130
 30939  01AEC2                     __ptext130:
 30940                           	opt callstack 0
 30941  01AEC2                     _DMA2_Initialize:
 30942                           	opt callstack 14
 30943                           
 30944                           ;mcc_generated_files/dma2.c: 63:     DMA2SSA = 0x001000;
 30945                           
 30946                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30947                           ;incstack = 0
 30948  01AEC2  0E00               	movlw	0
 30949  01AEC4  013B               	movlb	59	; () banked
 30950  01AEC6  6FD9               	movwf	217,b	;volatile
 30951  01AEC8  0E10               	movlw	16
 30952  01AECA  6FDA               	movwf	218,b	;volatile
 30953  01AECC  0E00               	movlw	0
 30954  01AECE  6FDB               	movwf	219,b	;volatile
 30955                           
 30956                           ;mcc_generated_files/dma2.c: 64:     DMA2DSA = 0x3FBB;
 30957  01AED0  0E3F               	movlw	63
 30958  01AED2  6FD1               	movwf	209,b	;volatile
 30959  01AED4  0EBB               	movlw	187
 30960  01AED6  6FD0               	movwf	208,b	;volatile
 30961                           
 30962                           ;mcc_generated_files/dma2.c: 65:     DMA2CON1 = 0x03;
 30963  01AED8  0E03               	movlw	3
 30964  01AEDA  6FDD               	movwf	221,b	;volatile
 30965                           
 30966                           ;mcc_generated_files/dma2.c: 66:     DMA2SSZ = 0x0001;
 30967  01AEDC  0E00               	movlw	0
 30968  01AEDE  6FD8               	movwf	216,b	;volatile
 30969  01AEE0  0E01               	movlw	1
 30970  01AEE2  6FD7               	movwf	215,b	;volatile
 30971                           
 30972                           ;mcc_generated_files/dma2.c: 67:     DMA2DSZ = 0x0001;
 30973  01AEE4  0E00               	movlw	0
 30974  01AEE6  6FCF               	movwf	207,b	;volatile
 30975  01AEE8  0E01               	movlw	1
 30976  01AEEA  6FCE               	movwf	206,b	;volatile
 30977                           
 30978                           ;mcc_generated_files/dma2.c: 68:     DMA2SIRQ = 0x1C;
 30979  01AEEC  0E1C               	movlw	28
 30980  01AEEE  6FDF               	movwf	223,b	;volatile
 30981                           
 30982                           ;mcc_generated_files/dma2.c: 69:     DMA2AIRQ = 0x3D;
 30983  01AEF0  0E3D               	movlw	61
 30984  01AEF2  6FDE               	movwf	222,b	;volatile
 30985                           
 30986                           ; BSR set to: 59
 30987                           ;mcc_generated_files/dma2.c: 71:     PIR5bits.DMA2DCNTIF =0;
 30988  01AEF4  0139               	movlb	57	; () banked
 30989  01AEF6  97A5               	bcf	165,3,b	;volatile
 30990                           
 30991                           ; BSR set to: 57
 30992                           ;mcc_generated_files/dma2.c: 72:     PIR5bits.DMA2SCNTIF =0;
 30993  01AEF8  95A5               	bcf	165,2,b	;volatile
 30994                           
 30995                           ; BSR set to: 57
 30996                           ;mcc_generated_files/dma2.c: 73:     PIR5bits.DMA2AIF =0;
 30997  01AEFA  9BA5               	bcf	165,5,b	;volatile
 30998                           
 30999                           ; BSR set to: 57
 31000                           ;mcc_generated_files/dma2.c: 74:  PIR5bits.DMA2ORIF =0;
 31001  01AEFC  99A5               	bcf	165,4,b	;volatile
 31002                           
 31003                           ; BSR set to: 57
 31004                           ;mcc_generated_files/dma2.c: 76:     PIE5bits.DMA2DCNTIE =0;
 31005  01AEFE  9795               	bcf	149,3,b	;volatile
 31006                           
 31007                           ; BSR set to: 57
 31008                           ;mcc_generated_files/dma2.c: 77:     PIE5bits.DMA2SCNTIE =0;
 31009  01AF00  9595               	bcf	149,2,b	;volatile
 31010                           
 31011                           ; BSR set to: 57
 31012                           ;mcc_generated_files/dma2.c: 78:     PIE5bits.DMA2AIE =0;
 31013  01AF02  9B95               	bcf	149,5,b	;volatile
 31014                           
 31015                           ; BSR set to: 57
 31016                           ;mcc_generated_files/dma2.c: 79:     PIE5bits.DMA2ORIE =0;
 31017  01AF04  9995               	bcf	149,4,b	;volatile
 31018  01AF06  9ED2               	bcf	16338,7,c	;# 
 31019  01AF08  0139               	banksel	14831	;# 
 31020  01AF0A  0E55               	movlw	85	;# 
 31021  01AF0C  6FEF               	movwf	14831,b	;# 
 31022  01AF0E  0EAA               	movlw	170	;# 
 31023  01AF10  6FEF               	movwf	14831,b	;# 
 31024  01AF12  81EF               	bsf	14831,0,b	;# 
 31025  01AF14  8ED2               	bsf	16338,7,c	;# 
 31026                           
 31027                           ;mcc_generated_files/dma2.c: 92:     DMA2CON0 = 0x00;
 31028  01AF16  013B               	movlb	59	; () banked
 31029  01AF18  6BDC               	clrf	220,b	;volatile
 31030                           
 31031                           ; BSR set to: 59
 31032                           ; _DMA2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 31033  01AF1A  0012               	return		;funcret
 31034  01AF1C                     __end_of_DMA2_Initialize:
 31035                           	opt callstack 0
 31036                           
 31037 ;; *************** function _DMA1_Initialize *****************
 31038 ;; Defined at:
 31039 ;;		line 86 in file "mcc_generated_files/dma1.c"
 31040 ;; Parameters:    Size  Location     Type
 31041 ;;		None
 31042 ;; Auto vars:     Size  Location     Type
 31043 ;;		None
 31044 ;; Return value:  Size  Location     Type
 31045 ;;                  1  [STACK] void 
 31046 ;; Registers used:
 31047 ;;		wreg, status,2
 31048 ;; Tracked objects:
 31049 ;;		On entry : 3F/3B
 31050 ;;		On exit  : 3F/3B
 31051 ;;		Unchanged: 0/0
 31052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31053 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31054 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31056 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31057 ;;Total ram usage:        0 bytes
 31058 ;; Hardware stack levels used:    1
 31059 ;; Hardware stack levels required when called:   15
 31060 ;; This function calls:
 31061 ;;		Nothing
 31062 ;; This function is called by:
 31063 ;;		_SYSTEM_Initialize
 31064 ;; This function uses a reentrant model
 31065 ;;
 31066                           
 31067                           	psect	text131
 31068  01AB3A                     __ptext131:
 31069                           	opt callstack 0
 31070  01AB3A                     _DMA1_Initialize:
 31071                           	opt callstack 14
 31072                           
 31073                           ;mcc_generated_files/dma1.c: 88:  DMA1SSA = 0x001000;
 31074                           
 31075                           ; BSR set to: 59
 31076                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31077                           ;incstack = 0
 31078  01AB3A  0E00               	movlw	0
 31079  01AB3C  013B               	movlb	59	; () banked
 31080  01AB3E  6FF9               	movwf	249,b	;volatile
 31081  01AB40  0E10               	movlw	16
 31082  01AB42  6FFA               	movwf	250,b	;volatile
 31083  01AB44  0E00               	movlw	0
 31084  01AB46  6FFB               	movwf	251,b	;volatile
 31085                           
 31086                           ;mcc_generated_files/dma1.c: 89:  DMA1DSA = 0x3D11;
 31087  01AB48  0E3D               	movlw	61
 31088  01AB4A  6FF1               	movwf	241,b	;volatile
 31089  01AB4C  0E11               	movlw	17
 31090  01AB4E  6FF0               	movwf	240,b	;volatile
 31091                           
 31092                           ;mcc_generated_files/dma1.c: 90:  DMA1CON1 = 0x03;
 31093  01AB50  0E03               	movlw	3
 31094  01AB52  6FFD               	movwf	253,b	;volatile
 31095                           
 31096                           ;mcc_generated_files/dma1.c: 91:  DMA1SSZ = 0x0001;
 31097  01AB54  0E00               	movlw	0
 31098  01AB56  6FF8               	movwf	248,b	;volatile
 31099  01AB58  0E01               	movlw	1
 31100  01AB5A  6FF7               	movwf	247,b	;volatile
 31101                           
 31102                           ;mcc_generated_files/dma1.c: 92:  DMA1DSZ = 0x0001;
 31103  01AB5C  0E00               	movlw	0
 31104  01AB5E  6FEF               	movwf	239,b	;volatile
 31105  01AB60  0E01               	movlw	1
 31106  01AB62  6FEE               	movwf	238,b	;volatile
 31107                           
 31108                           ;mcc_generated_files/dma1.c: 93:  DMA1SIRQ = 0x15;
 31109  01AB64  0E15               	movlw	21
 31110  01AB66  6FFF               	movwf	255,b	;volatile
 31111                           
 31112                           ; BSR set to: 59
 31113                           ;mcc_generated_files/dma1.c: 94:  DMA1AIRQ = 0x0;
 31114  01AB68  6BFE               	clrf	254,b	;volatile
 31115                           
 31116                           ; BSR set to: 59
 31117                           ;mcc_generated_files/dma1.c: 96:  PIR2bits.DMA1DCNTIF = 0;
 31118  01AB6A  0139               	movlb	57	; () banked
 31119  01AB6C  93A2               	bcf	162,1,b	;volatile
 31120                           
 31121                           ; BSR set to: 57
 31122                           ;mcc_generated_files/dma1.c: 97:  PIR2bits.DMA1SCNTIF = 0;
 31123  01AB6E  91A2               	bcf	162,0,b	;volatile
 31124                           
 31125                           ; BSR set to: 57
 31126                           ;mcc_generated_files/dma1.c: 98:  PIR2bits.DMA1AIF = 0;
 31127  01AB70  97A2               	bcf	162,3,b	;volatile
 31128                           
 31129                           ; BSR set to: 57
 31130                           ;mcc_generated_files/dma1.c: 99:  PIR2bits.DMA1ORIF = 0;
 31131  01AB72  95A2               	bcf	162,2,b	;volatile
 31132                           
 31133                           ; BSR set to: 57
 31134                           ;mcc_generated_files/dma1.c: 101:  PIE2bits.DMA1DCNTIE = 1;
 31135  01AB74  8392               	bsf	146,1,b	;volatile
 31136                           
 31137                           ; BSR set to: 57
 31138                           ;mcc_generated_files/dma1.c: 102:  PIE2bits.DMA1SCNTIE = 1;
 31139  01AB76  8192               	bsf	146,0,b	;volatile
 31140                           
 31141                           ; BSR set to: 57
 31142                           ;mcc_generated_files/dma1.c: 103:  PIE2bits.DMA1AIE = 1;
 31143  01AB78  8792               	bsf	146,3,b	;volatile
 31144                           
 31145                           ; BSR set to: 57
 31146                           ;mcc_generated_files/dma1.c: 104:  PIE2bits.DMA1ORIE = 1;
 31147  01AB7A  8592               	bsf	146,2,b	;volatile
 31148                           
 31149                           ; BSR set to: 57
 31150                           ;mcc_generated_files/dma1.c: 106:  ISRPR = 0;
 31151  01AB7C  6BF1               	clrf	241,b	;volatile
 31152                           
 31153                           ;mcc_generated_files/dma1.c: 107:  MAINPR = 1;
 31154  01AB7E  0E01               	movlw	1
 31155  01AB80  6FF2               	movwf	242,b	;volatile
 31156                           
 31157                           ;mcc_generated_files/dma1.c: 108:  DMA1PR = 4;
 31158  01AB82  0E04               	movlw	4
 31159  01AB84  6FF3               	movwf	243,b	;volatile
 31160                           
 31161                           ;mcc_generated_files/dma1.c: 109:  DMA2PR = 2;
 31162  01AB86  0E02               	movlw	2
 31163  01AB88  6FF4               	movwf	244,b	;volatile
 31164                           
 31165                           ;mcc_generated_files/dma1.c: 110:  SCANPR = 3;
 31166  01AB8A  0E03               	movlw	3
 31167  01AB8C  6FF7               	movwf	247,b	;volatile
 31168  01AB8E  9ED2               	bcf	16338,7,c	;# 
 31169  01AB90  0139               	banksel	14831	;# 
 31170  01AB92  0E55               	movlw	85	;# 
 31171  01AB94  6FEF               	movwf	14831,b	;# 
 31172  01AB96  0EAA               	movlw	170	;# 
 31173  01AB98  6FEF               	movwf	14831,b	;# 
 31174  01AB9A  81EF               	bsf	14831,0,b	;# 
 31175  01AB9C  8ED2               	bsf	16338,7,c	;# 
 31176                           
 31177                           ;mcc_generated_files/dma1.c: 123:  DMA1CON0 = 0x00;
 31178  01AB9E  013B               	movlb	59	; () banked
 31179  01ABA0  6BFC               	clrf	252,b	;volatile
 31180                           
 31181                           ; BSR set to: 59
 31182                           ; _DMA1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 31183  01ABA2  0012               	return		;funcret
 31184  01ABA4                     __end_of_DMA1_Initialize:
 31185                           	opt callstack 0
 31186                           
 31187 ;; *************** function _CLKREF_Initialize *****************
 31188 ;; Defined at:
 31189 ;;		line 58 in file "mcc_generated_files/clkref.c"
 31190 ;; Parameters:    Size  Location     Type
 31191 ;;		None
 31192 ;; Auto vars:     Size  Location     Type
 31193 ;;		None
 31194 ;; Return value:  Size  Location     Type
 31195 ;;                  1  [STACK] void 
 31196 ;; Registers used:
 31197 ;;		wreg, status,2
 31198 ;; Tracked objects:
 31199 ;;		On entry : 3F/3B
 31200 ;;		On exit  : 3F/3C
 31201 ;;		Unchanged: 0/0
 31202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31203 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31204 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31205 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31206 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31207 ;;Total ram usage:        0 bytes
 31208 ;; Hardware stack levels used:    1
 31209 ;; Hardware stack levels required when called:   15
 31210 ;; This function calls:
 31211 ;;		Nothing
 31212 ;; This function is called by:
 31213 ;;		_SYSTEM_Initialize
 31214 ;; This function uses a reentrant model
 31215 ;;
 31216                           
 31217                           	psect	text132
 31218  01BD76                     __ptext132:
 31219                           	opt callstack 0
 31220  01BD76                     _CLKREF_Initialize:
 31221                           	opt callstack 14
 31222                           
 31223                           ;mcc_generated_files/clkref.c: 61:     CLKRCLK = 0x00;
 31224                           
 31225                           ; BSR set to: 59
 31226                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31227                           ;incstack = 0
 31228  01BD76  013C               	movlb	60	; () banked
 31229  01BD78  6BE6               	clrf	230,b	;volatile
 31230                           
 31231                           ; BSR set to: 60
 31232                           ;mcc_generated_files/clkref.c: 63:     CLKRCON = 0x94;
 31233  01BD7A  0E94               	movlw	148
 31234  01BD7C  6FE5               	movwf	229,b	;volatile
 31235                           
 31236                           ; BSR set to: 60
 31237                           ; _CLKREF_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 31238  01BD7E  0012               	return		;funcret
 31239  01BD80                     __end_of_CLKREF_Initialize:
 31240                           	opt callstack 0
 31241                           
 31242 ;; *************** function _ADCC_Initialize *****************
 31243 ;; Defined at:
 31244 ;;		line 65 in file "mcc_generated_files/adcc.c"
 31245 ;; Parameters:    Size  Location     Type
 31246 ;;		None
 31247 ;; Auto vars:     Size  Location     Type
 31248 ;;		None
 31249 ;; Return value:  Size  Location     Type
 31250 ;;                  1  [STACK] void 
 31251 ;; Registers used:
 31252 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 31253 ;; Tracked objects:
 31254 ;;		On entry : 3F/3E
 31255 ;;		On exit  : 0/0
 31256 ;;		Unchanged: 0/0
 31257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31258 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31259 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31261 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31262 ;;Total ram usage:        0 bytes
 31263 ;; Hardware stack levels used:    1
 31264 ;; Hardware stack levels required when called:   16
 31265 ;; This function calls:
 31266 ;;		_ADCC_SetADIInterruptHandler
 31267 ;;		_ADCC_SetADTIInterruptHandler
 31268 ;; This function is called by:
 31269 ;;		_SYSTEM_Initialize
 31270 ;; This function uses a reentrant model
 31271 ;;
 31272                           
 31273                           	psect	text133
 31274  01ABA4                     __ptext133:
 31275                           	opt callstack 0
 31276  01ABA4                     _ADCC_Initialize:
 31277                           	opt callstack 13
 31278                           
 31279                           ;mcc_generated_files/adcc.c: 69:     ADLTHL = 0x00;
 31280                           
 31281                           ; BSR set to: 60
 31282                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31283                           ;incstack = 0
 31284  01ABA4  013E               	movlb	62	; () banked
 31285  01ABA6  6BDE               	clrf	222,b	;volatile
 31286                           
 31287                           ;mcc_generated_files/adcc.c: 71:     ADLTHH = 0x00;
 31288  01ABA8  6BDF               	clrf	223,b	;volatile
 31289                           
 31290                           ;mcc_generated_files/adcc.c: 73:     ADUTHL = 0x00;
 31291  01ABAA  6BE0               	clrf	224,b	;volatile
 31292                           
 31293                           ;mcc_generated_files/adcc.c: 75:     ADUTHH = 0x00;
 31294  01ABAC  6BE1               	clrf	225,b	;volatile
 31295                           
 31296                           ;mcc_generated_files/adcc.c: 77:     ADSTPTL = 0x00;
 31297  01ABAE  6BE4               	clrf	228,b	;volatile
 31298                           
 31299                           ;mcc_generated_files/adcc.c: 79:     ADSTPTH = 0x00;
 31300  01ABB0  6BE5               	clrf	229,b	;volatile
 31301                           
 31302                           ;mcc_generated_files/adcc.c: 81:     ADACCU = 0x00;
 31303  01ABB2  6BEA               	clrf	234,b	;volatile
 31304                           
 31305                           ; BSR set to: 62
 31306                           ;mcc_generated_files/adcc.c: 83:     ADRPT = 0x40;
 31307  01ABB4  0E40               	movlw	64
 31308  01ABB6  6FEC               	movwf	236,b	;volatile
 31309                           
 31310                           ; BSR set to: 62
 31311                           ;mcc_generated_files/adcc.c: 85:     ADPCH = 0x00;
 31312  01ABB8  6BF1               	clrf	241,b	;volatile
 31313                           
 31314                           ;mcc_generated_files/adcc.c: 87:     ADACQL = 0x20;
 31315  01ABBA  0E20               	movlw	32
 31316  01ABBC  6FF3               	movwf	243,b	;volatile
 31317                           
 31318                           ; BSR set to: 62
 31319                           ;mcc_generated_files/adcc.c: 89:     ADACQH = 0x00;
 31320  01ABBE  6BF4               	clrf	244,b	;volatile
 31321                           
 31322                           ; BSR set to: 62
 31323                           ;mcc_generated_files/adcc.c: 91:     ADCAP = 0x00;
 31324  01ABC0  6BF5               	clrf	245,b	;volatile
 31325                           
 31326                           ; BSR set to: 62
 31327                           ;mcc_generated_files/adcc.c: 93:     ADPREL = 0x00;
 31328  01ABC2  6BF6               	clrf	246,b	;volatile
 31329                           
 31330                           ; BSR set to: 62
 31331                           ;mcc_generated_files/adcc.c: 95:     ADPREH = 0x00;
 31332  01ABC4  6BF7               	clrf	247,b	;volatile
 31333                           
 31334                           ; BSR set to: 62
 31335                           ;mcc_generated_files/adcc.c: 97:     ADCON1 = 0x00;
 31336  01ABC6  6BF9               	clrf	249,b	;volatile
 31337                           
 31338                           ;mcc_generated_files/adcc.c: 99:     ADCON2 = 0x5B;
 31339  01ABC8  0E5B               	movlw	91
 31340  01ABCA  6FFA               	movwf	250,b	;volatile
 31341                           
 31342                           ;mcc_generated_files/adcc.c: 101:     ADCON3 = 0x27;
 31343  01ABCC  0E27               	movlw	39
 31344  01ABCE  6FFB               	movwf	251,b	;volatile
 31345                           
 31346                           ; BSR set to: 62
 31347                           ;mcc_generated_files/adcc.c: 103:     ADSTAT = 0x00;
 31348  01ABD0  6BFC               	clrf	252,b	;volatile
 31349                           
 31350                           ;mcc_generated_files/adcc.c: 105:     ADREF = 0x02;
 31351  01ABD2  0E02               	movlw	2
 31352  01ABD4  6FFD               	movwf	253,b	;volatile
 31353                           
 31354                           ; BSR set to: 62
 31355                           ;mcc_generated_files/adcc.c: 107:     ADACT = 0x00;
 31356  01ABD6  6BFE               	clrf	254,b	;volatile
 31357                           
 31358                           ;mcc_generated_files/adcc.c: 109:     ADCLK = 0x07;
 31359  01ABD8  0E07               	movlw	7
 31360  01ABDA  6FFF               	movwf	255,b	;volatile
 31361                           
 31362                           ;mcc_generated_files/adcc.c: 111:     ADCON0 = 0x84;
 31363  01ABDC  0E84               	movlw	132
 31364  01ABDE  6FF8               	movwf	248,b	;volatile
 31365                           
 31366                           ; BSR set to: 62
 31367                           ;mcc_generated_files/adcc.c: 114:     PIR1bits.ADIF = 0;
 31368  01ABE0  0139               	movlb	57	; () banked
 31369  01ABE2  95A1               	bcf	161,2,b	;volatile
 31370                           
 31371                           ; BSR set to: 57
 31372                           ;mcc_generated_files/adcc.c: 116:     PIE1bits.ADIE = 1;
 31373  01ABE4  8591               	bsf	145,2,b	;volatile
 31374                           
 31375                           ; BSR set to: 57
 31376                           ;mcc_generated_files/adcc.c: 118:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 31377  01ABE6  0EFC               	movlw	low _ADCC_DefaultInterruptHandler
 31378  01ABE8  6EE6               	movwf	postinc1,c
 31379  01ABEA  0EBD               	movlw	high _ADCC_DefaultInterruptHandler
 31380  01ABEC  6EE6               	movwf	postinc1,c
 31381  01ABEE  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 31382  01ABF0  6EE6               	movwf	postinc1,c
 31383  01ABF2  ECBF  F0DC         	call	_ADCC_SetADIInterruptHandler	;wreg free
 31384                           
 31385                           ;mcc_generated_files/adcc.c: 121:     PIR1bits.ADTIF = 0;
 31386  01ABF6  0139               	movlb	57	; () banked
 31387  01ABF8  97A1               	bcf	161,3,b	;volatile
 31388                           
 31389                           ; BSR set to: 57
 31390                           ;mcc_generated_files/adcc.c: 123:     PIE1bits.ADTIE = 1;
 31391  01ABFA  8791               	bsf	145,3,b	;volatile
 31392                           
 31393                           ; BSR set to: 57
 31394                           ;mcc_generated_files/adcc.c: 125:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
 31395  01ABFC  0EFC               	movlw	low _ADCC_DefaultInterruptHandler
 31396  01ABFE  6EE6               	movwf	postinc1,c
 31397  01AC00  0EBD               	movlw	high _ADCC_DefaultInterruptHandler
 31398  01AC02  6EE6               	movwf	postinc1,c
 31399  01AC04  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 31400  01AC06  6EE6               	movwf	postinc1,c
 31401  01AC08  ECAB  F0DC         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 31402                           
 31403                           ; _ADCC_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 31404  01AC0C  0012               	return		;funcret
 31405  01AC0E                     __end_of_ADCC_Initialize:
 31406                           	opt callstack 0
 31407                           
 31408 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 31409 ;; Defined at:
 31410 ;;		line 336 in file "mcc_generated_files/adcc.c"
 31411 ;; Parameters:    Size  Location     Type
 31412 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 31413 ;;		 -> adc_int_t_handler(1), ADCC_DefaultInterruptHandler(1), 
 31414 ;; Auto vars:     Size  Location     Type
 31415 ;;		None
 31416 ;; Return value:  Size  Location     Type
 31417 ;;                  1  [STACK] void 
 31418 ;; Registers used:
 31419 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 31420 ;; Tracked objects:
 31421 ;;		On entry : 0/1
 31422 ;;		On exit  : 0/0
 31423 ;;		Unchanged: 0/0
 31424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31425 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31426 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31428 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31429 ;;Total ram usage:        0 bytes
 31430 ;; Hardware stack levels used:    1
 31431 ;; Hardware stack levels required when called:   15
 31432 ;; This function calls:
 31433 ;;		Nothing
 31434 ;; This function is called by:
 31435 ;;		_ADCC_Initialize
 31436 ;;		_start_adc_scan
 31437 ;; This function uses a reentrant model
 31438 ;;
 31439                           
 31440                           	psect	text134
 31441  01B956                     __ptext134:
 31442                           	opt callstack 0
 31443  01B956                     _ADCC_SetADTIInterruptHandler:
 31444                           	opt callstack 14
 31445                           
 31446                           ;mcc_generated_files/adcc.c: 337:     ADCC_ADTI_InterruptHandler = InterruptHandler;
 31447                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 31448                           
 31449                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31450                           ;incstack = 0
 31451  01B956  50E1               	movf	fsr1l,w,c
 31452  01B958  0FFD               	addlw	-3
 31453  01B95A  6ED9               	movwf	fsr2l,c
 31454  01B95C  50E2               	movf	fsr1h,w,c
 31455  01B95E  6EDA               	movwf	fsr2h,c
 31456  01B960  0EFF               	movlw	255
 31457  01B962  22DA               	addwfc	fsr2h,f,c
 31458  01B964  006F FF78  F0AB    	movff	postinc2,_ADCC_ADTI_InterruptHandler
 31459  01B96A  006F FF78  F0AC    	movff	postinc2,_ADCC_ADTI_InterruptHandler+1
 31460  01B970  006F FF74  F0AD    	movff	postdec2,_ADCC_ADTI_InterruptHandler+2
 31461                           
 31462                           ; _ADCC_SetADTIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 3, argsize = 3, vargsize = 0
 31463  01B976  52E5               	movf	postdec1,f,c
 31464  01B978  52E5               	movf	postdec1,f,c
 31465  01B97A  52E5               	movf	postdec1,f,c
 31466  01B97C  0012               	return		;funcret
 31467  01B97E                     __end_of_ADCC_SetADTIInterruptHandler:
 31468                           	opt callstack 0
 31469                           
 31470 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 31471 ;; Defined at:
 31472 ;;		line 323 in file "mcc_generated_files/adcc.c"
 31473 ;; Parameters:    Size  Location     Type
 31474 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 31475 ;;		 -> adc_int_handler(1), ADCC_DefaultInterruptHandler(1), 
 31476 ;; Auto vars:     Size  Location     Type
 31477 ;;		None
 31478 ;; Return value:  Size  Location     Type
 31479 ;;                  1  [STACK] void 
 31480 ;; Registers used:
 31481 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 31482 ;; Tracked objects:
 31483 ;;		On entry : 7/1
 31484 ;;		On exit  : 0/0
 31485 ;;		Unchanged: 0/0
 31486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31487 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31488 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31489 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31490 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31491 ;;Total ram usage:        0 bytes
 31492 ;; Hardware stack levels used:    1
 31493 ;; Hardware stack levels required when called:   15
 31494 ;; This function calls:
 31495 ;;		Nothing
 31496 ;; This function is called by:
 31497 ;;		_ADCC_Initialize
 31498 ;;		_start_adc_scan
 31499 ;; This function uses a reentrant model
 31500 ;;
 31501                           
 31502                           	psect	text135
 31503  01B97E                     __ptext135:
 31504                           	opt callstack 0
 31505  01B97E                     _ADCC_SetADIInterruptHandler:
 31506                           	opt callstack 14
 31507                           
 31508                           ;mcc_generated_files/adcc.c: 324:     ADCC_ADI_InterruptHandler = InterruptHandler;
 31509                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 31510                           
 31511                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31512                           ;incstack = 0
 31513  01B97E  50E1               	movf	fsr1l,w,c
 31514  01B980  0FFD               	addlw	-3
 31515  01B982  6ED9               	movwf	fsr2l,c
 31516  01B984  50E2               	movf	fsr1h,w,c
 31517  01B986  6EDA               	movwf	fsr2h,c
 31518  01B988  0EFF               	movlw	255
 31519  01B98A  22DA               	addwfc	fsr2h,f,c
 31520  01B98C  006F FF78  F0AE    	movff	postinc2,_ADCC_ADI_InterruptHandler
 31521  01B992  006F FF78  F0AF    	movff	postinc2,_ADCC_ADI_InterruptHandler+1
 31522  01B998  006F FF74  F0B0    	movff	postdec2,_ADCC_ADI_InterruptHandler+2
 31523                           
 31524                           ; _ADCC_SetADIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 31525  01B99E  52E5               	movf	postdec1,f,c
 31526  01B9A0  52E5               	movf	postdec1,f,c
 31527  01B9A2  52E5               	movf	postdec1,f,c
 31528  01B9A4  0012               	return		;funcret
 31529  01B9A6                     __end_of_ADCC_SetADIInterruptHandler:
 31530                           	opt callstack 0
 31531                           
 31532 ;; *************** function _INT1_ISR *****************
 31533 ;; Defined at:
 31534 ;;		line 62 in file "mcc_generated_files/ext_int.c"
 31535 ;; Parameters:    Size  Location     Type
 31536 ;;		None
 31537 ;; Auto vars:     Size  Location     Type
 31538 ;;		None
 31539 ;; Return value:  Size  Location     Type
 31540 ;;                  1    wreg      void 
 31541 ;; Registers used:
 31542 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 31543 ;; Tracked objects:
 31544 ;;		On entry : 0/0
 31545 ;;		On exit  : 0/0
 31546 ;;		Unchanged: 0/0
 31547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31548 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31549 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31550 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31551 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31552 ;;Total ram usage:        4 bytes
 31553 ;; Hardware stack levels used:    1
 31554 ;; Hardware stack levels required when called:    5
 31555 ;; This function calls:
 31556 ;;		_INT1_CallBack
 31557 ;; This function is called by:
 31558 ;;		Interrupt level 1
 31559 ;; This function uses a non-reentrant model
 31560 ;;
 31561                           
 31562                           	psect	text136
 31563  01B41C                     __ptext136:
 31564                           	opt callstack 0
 31565  01B41C                     _INT1_ISR:
 31566                           	opt callstack 12
 31567                           
 31568                           ;incstack = 0
 31569  01B41C  006F FF60  F027    	movff	status,??_INT1_ISR
 31570  01B422  0060  F004  F028   	movff	btemp,??_INT1_ISR+1
 31571  01B428  0060  F02C  F029   	movff	btemp+10,??_INT1_ISR+2
 31572  01B42E  0060  F030  F02A   	movff	btemp+11,??_INT1_ISR+3
 31573  01B434  EE16  F0AE         	lfsr	1,___intlo_sp
 31574                           
 31575                           ;mcc_generated_files/ext_int.c: 64:  (PIR5bits.INT1IF = 0);
 31576  01B438  0139               	movlb	57	; () banked
 31577  01B43A  91A5               	bcf	165,0,b	;volatile
 31578                           
 31579                           ; BSR set to: 57
 31580                           ;mcc_generated_files/ext_int.c: 67:  INT1_CallBack();
 31581  01B43C  EC22  F0DD         	call	_INT1_CallBack	;wreg free
 31582  01B440  0060  F0A8  F00C   	movff	??_INT1_ISR+3,btemp+11
 31583  01B446  0060  F0A4  F00B   	movff	??_INT1_ISR+2,btemp+10
 31584  01B44C  0060  F0A0  F001   	movff	??_INT1_ISR+1,btemp
 31585  01B452  0060  F09F  FFD8   	movff	??_INT1_ISR,status
 31586  01B458  0011               	retfie		f
 31587  01B45A                     __end_of_INT1_ISR:
 31588                           	opt callstack 0
 31589                           
 31590 ;; *************** function _INT1_CallBack *****************
 31591 ;; Defined at:
 31592 ;;		line 70 in file "mcc_generated_files/ext_int.c"
 31593 ;; Parameters:    Size  Location     Type
 31594 ;;		None
 31595 ;; Auto vars:     Size  Location     Type
 31596 ;;		None
 31597 ;; Return value:  Size  Location     Type
 31598 ;;                  1  [STACK] void 
 31599 ;; Registers used:
 31600 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 31601 ;; Tracked objects:
 31602 ;;		On entry : 3F/39
 31603 ;;		On exit  : 0/0
 31604 ;;		Unchanged: 0/0
 31605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31606 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31607 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31608 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31609 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31610 ;;Total ram usage:        0 bytes
 31611 ;; Hardware stack levels used:    1
 31612 ;; Hardware stack levels required when called:    4
 31613 ;; This function calls:
 31614 ;;		Absolute function
 31615 ;;		_INT1_DefaultInterruptHandler
 31616 ;;		_switch_handler
 31617 ;; This function is called by:
 31618 ;;		_INT1_ISR
 31619 ;; This function uses a reentrant model
 31620 ;;
 31621                           
 31622                           	psect	text137
 31623  01BA44                     __ptext137:
 31624                           	opt callstack 0
 31625  01BA44                     _INT1_CallBack:
 31626                           	opt callstack 12
 31627                           
 31628                           ;mcc_generated_files/ext_int.c: 73:  if (INT1_InterruptHandler) {
 31629                           
 31630                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31631                           ;incstack = 0
 31632  01BA44  0100               	movlb	0	; () banked
 31633  01BA46  51BA               	movf	_INT1_InterruptHandler& (0+255),w,b
 31634  01BA48  11BB               	iorwf	(_INT1_InterruptHandler+1)& (0+255),w,b
 31635  01BA4A  11BC               	iorwf	(_INT1_InterruptHandler+2)& (0+255),w,b
 31636  01BA4C  B4D8               	btfsc	status,2,c
 31637  01BA4E  0012               	return	
 31638                           
 31639                           ; BSR set to: 0
 31640                           ;mcc_generated_files/ext_int.c: 74:   INT1_InterruptHandler();
 31641  01BA50  D801               	call	u991_28
 31642  01BA52  0012               	return	
 31643  01BA54                     u991_28:
 31644  01BA54  0005               	push	
 31645  01BA56  6EFA               	movwf	pclath,c
 31646  01BA58  51BA               	movf	_INT1_InterruptHandler& (0+255),w,b
 31647  01BA5A  6EFD               	movwf	tosl,c
 31648  01BA5C  51BB               	movf	(_INT1_InterruptHandler+1)& (0+255),w,b
 31649  01BA5E  6EFE               	movwf	tosh,c
 31650  01BA60  51BC               	movf	(_INT1_InterruptHandler+2)& (0+255),w,b
 31651  01BA62  6EFF               	movwf	tosu,c
 31652  01BA64  50FA               	movf	pclath,w,c
 31653  01BA66  0012               	return		;indir
 31654  01BA68                     __end_of_INT1_CallBack:
 31655                           	opt callstack 0
 31656                           
 31657 ;; *************** function _INT1_DefaultInterruptHandler *****************
 31658 ;; Defined at:
 31659 ;;		line 83 in file "mcc_generated_files/ext_int.c"
 31660 ;; Parameters:    Size  Location     Type
 31661 ;;		None
 31662 ;; Auto vars:     Size  Location     Type
 31663 ;;		None
 31664 ;; Return value:  Size  Location     Type
 31665 ;;                  1  [STACK] void 
 31666 ;; Registers used:
 31667 ;;		None
 31668 ;; Tracked objects:
 31669 ;;		On entry : 3F/0
 31670 ;;		On exit  : 0/0
 31671 ;;		Unchanged: 0/0
 31672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31673 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31674 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31676 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31677 ;;Total ram usage:        0 bytes
 31678 ;; Hardware stack levels used:    1
 31679 ;; Hardware stack levels required when called:    3
 31680 ;; This function calls:
 31681 ;;		Nothing
 31682 ;; This function is called by:
 31683 ;;		_EXT_INT_Initialize
 31684 ;;		_INT1_CallBack
 31685 ;; This function uses a reentrant model
 31686 ;;
 31687                           
 31688                           	psect	text138
 31689  01BDF6                     __ptext138:
 31690                           	opt callstack 0
 31691  01BDF6                     _INT1_DefaultInterruptHandler:
 31692                           	opt callstack 12
 31693                           
 31694                           ; _INT1_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 31695                           
 31696                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31697                           ;incstack = 0
 31698  01BDF6  0012               	return		;funcret
 31699  01BDF8                     __end_of_INT1_DefaultInterruptHandler:
 31700                           	opt callstack 0
 31701                           
 31702 ;; *************** function _switch_handler *****************
 31703 ;; Defined at:
 31704 ;;		line 58 in file "dio.c"
 31705 ;; Parameters:    Size  Location     Type
 31706 ;;		None
 31707 ;; Auto vars:     Size  Location     Type
 31708 ;;  i               1  [STACK] unsigned char 
 31709 ;;  sw_value        1  [STACK] unsigned char 
 31710 ;; Return value:  Size  Location     Type
 31711 ;;                  1  [STACK] void 
 31712 ;; Registers used:
 31713 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
 31714 ;; Tracked objects:
 31715 ;;		On entry : 3F/0
 31716 ;;		On exit  : 0/0
 31717 ;;		Unchanged: 0/0
 31718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31719 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31720 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31721 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31722 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31723 ;;Total ram usage:        0 bytes
 31724 ;; Hardware stack levels used:    1
 31725 ;; Hardware stack levels required when called:    3
 31726 ;; This function calls:
 31727 ;;		Nothing
 31728 ;; This function is called by:
 31729 ;;		_start_switch_handler
 31730 ;;		_INT1_CallBack
 31731 ;; This function uses a reentrant model
 31732 ;;
 31733                           
 31734                           	psect	text139
 31735  019114                     __ptext139:
 31736                           	opt callstack 0
 31737  019114                     _switch_handler:
 31738                           	opt callstack 0
 31739                           
 31740                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31741  019114  52E6               	movf	postinc1,f,c
 31742  019116  52E6               	movf	postinc1,f,c
 31743                           
 31744                           ;dio.c: 60:  uint8_t i = 0, sw_value;
 31745                           ;stkvar	_i @ sp[(-2)+0]
 31746                           
 31747                           ;incstack = 0
 31748  019118  0EFE               	movlw	-2
 31749  01911A  6AE3               	clrf	plusw1,c
 31750  01911C  9EBD               	bcf	189,7,c	;volatile
 31751  01911E  9ABF               	bcf	191,5,c	;volatile
 31752                           
 31753                           ;dio.c: 73:  __nop();
 31754  019120  F000               	nop	
 31755                           
 31756                           ;dio.c: 74:  __nop();
 31757  019122  F000               	nop	
 31758                           
 31759                           ;dio.c: 75:  __nop();
 31760  019124  F000               	nop	
 31761                           
 31762                           ;dio.c: 76:  __nop();
 31763  019126  F000               	nop	
 31764                           
 31765                           ;dio.c: 77:  __nop();
 31766  019128  F000               	nop	
 31767                           
 31768                           ;dio.c: 78:  __nop();
 31769  01912A  F000               	nop	
 31770  01912C  D019               	goto	l10443
 31771  01912E                     l10431:
 31772                           
 31773                           ;dio.c: 83:    sw_value = PORTFbits.RF3;
 31774  01912E  A6CF               	btfss	207,3,c	;volatile
 31775  019130  D011               	goto	u964_20
 31776  019132  D00D               	goto	u964_21
 31777  019134                     u961_28:
 31778                           
 31779                           ;stkvar	_sw_value @ sp[(-2)+1]
 31780  019134  0EFF               	movlw	-1
 31781  019136  0060  F033  FFE3   	movff	btemp+11,plusw1
 31782                           
 31783                           ;dio.c: 84:    break;
 31784  01913C  D027               	goto	l10445
 31785  01913E                     l10433:
 31786                           
 31787                           ;dio.c: 86:    sw_value = PORTFbits.RF2;
 31788  01913E  A4CF               	btfss	207,2,c	;volatile
 31789  019140  D009               	goto	u964_20
 31790  019142  D005               	goto	u964_21
 31791  019144                     l10435:
 31792                           
 31793                           ;dio.c: 89:    sw_value = PORTFbits.RF1;
 31794  019144  A2CF               	btfss	207,1,c	;volatile
 31795  019146  D006               	goto	u964_20
 31796  019148  D002               	goto	u964_21
 31797  01914A                     l10437:
 31798                           
 31799                           ;dio.c: 92:    sw_value = PORTFbits.RF0;
 31800  01914A  A0CF               	btfss	207,0,c	;volatile
 31801  01914C  D003               	goto	u964_20
 31802  01914E                     u964_21:
 31803  01914E  6A0C               	clrf	(btemp+11)^0,c
 31804  019150  2A0C               	incf	(btemp+11)^0,f,c
 31805  019152  D7F0               	goto	u961_28
 31806  019154                     u964_20:
 31807  019154  6A0C               	clrf	(btemp+11)^0,c
 31808  019156  D7EE               	goto	u961_28
 31809  019158                     l10439:
 31810                           
 31811                           ;dio.c: 95:    sw_value = 1;
 31812                           ;stkvar	_sw_value @ sp[(-2)+1]
 31813  019158  0EFF               	movlw	-1
 31814  01915A  6AE3               	clrf	plusw1,c
 31815  01915C  2AE3               	incf	plusw1,f,c
 31816                           
 31817                           ;dio.c: 96:    break;
 31818  01915E  D016               	goto	l10445
 31819  019160                     l10443:
 31820                           
 31821                           ;stkvar	_i @ sp[(-2)+0]
 31822  019160  0EFE               	movlw	-2
 31823  019162  50E3               	movf	plusw1,w,c
 31824  019164  6E0B               	movwf	(btemp+10)^0,c
 31825  019166  6A0C               	clrf	(btemp+11)^0,c
 31826                           
 31827                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 31828                           ; Switch size 1, requested type "simple"
 31829                           ; Number of cases is 1, Range of values is 0 to 0
 31830                           ; switch strategies available:
 31831                           ; Name         Instructions Cycles
 31832                           ; simple_byte            4     3 (average)
 31833                           ;	Chosen strategy is simple_byte
 31834  019168  500C               	movf	(btemp+11)^0,w,c
 31835  01916A  0A00               	xorlw	0	; case 0
 31836  01916C  A4D8               	btfss	status,2,c
 31837  01916E  D7F4               	goto	l10439
 31838                           
 31839                           ; Switch size 1, requested type "simple"
 31840                           ; Number of cases is 4, Range of values is 0 to 3
 31841                           ; switch strategies available:
 31842                           ; Name         Instructions Cycles
 31843                           ; simple_byte           13     7 (average)
 31844                           ;	Chosen strategy is simple_byte
 31845  019170  500B               	movf	(btemp+10)^0,w,c
 31846  019172  0A00               	xorlw	0	; case 0
 31847  019174  B4D8               	btfsc	status,2,c
 31848  019176  D7E9               	goto	l10437
 31849  019178  0A01               	xorlw	1	; case 1
 31850  01917A  B4D8               	btfsc	status,2,c
 31851  01917C  D7E3               	goto	l10435
 31852  01917E  0A03               	xorlw	3	; case 2
 31853  019180  B4D8               	btfsc	status,2,c
 31854  019182  D7DD               	goto	l10433
 31855  019184  0A01               	xorlw	1	; case 3
 31856  019186  B4D8               	btfsc	status,2,c
 31857  019188  D7D2               	goto	l10431
 31858  01918A  D7E6               	goto	l10439
 31859  01918C                     l10445:
 31860                           
 31861                           ;dio.c: 100:   if (sw_value) {
 31862                           ;stkvar	_sw_value @ sp[(-2)+1]
 31863  01918C  0EFF               	movlw	-1
 31864  01918E  50E3               	movf	plusw1,w,c
 31865  019190  B4D8               	btfsc	status,2,c
 31866  019192  D018               	goto	l10451
 31867                           
 31868                           ;dio.c: 101:    if (S.button[i].sw == SW_ON) {
 31869                           ;stkvar	_i @ sp[(-2)+0]
 31870  019194  0EFE               	movlw	-2
 31871  019196  50E3               	movf	plusw1,w,c
 31872  019198  0D05               	mullw	5
 31873  01919A  0E54               	movlw	low _S
 31874  01919C  24F3               	addwf	243,w,c
 31875  01919E  6ED9               	movwf	fsr2l,c
 31876  0191A0  0E02               	movlw	high _S
 31877  0191A2  20F4               	addwfc	prodh,w,c
 31878  0191A4  6EDA               	movwf	fsr2h,c
 31879  0191A6  04DE               	decf	postinc2,w,c
 31880  0191A8  A4D8               	btfss	status,2,c
 31881  0191AA  D049               	goto	l10459
 31882                           
 31883                           ;dio.c: 102:     S.button[i].sw = SW_OFF;
 31884                           ;stkvar	_i @ sp[(-2)+0]
 31885  0191AC  0EFE               	movlw	-2
 31886  0191AE  50E3               	movf	plusw1,w,c
 31887  0191B0  0D05               	mullw	5
 31888  0191B2  0E54               	movlw	low _S
 31889  0191B4  24F3               	addwf	243,w,c
 31890  0191B6  6ED9               	movwf	fsr2l,c
 31891  0191B8  0E02               	movlw	high _S
 31892  0191BA  20F4               	addwfc	prodh,w,c
 31893  0191BC  6EDA               	movwf	fsr2h,c
 31894  0191BE  0E00               	movlw	0
 31895  0191C0  6EDF               	movwf	indf2,c
 31896  0191C2  D03D               	goto	l10459
 31897  0191C4                     l10451:
 31898                           
 31899                           ;dio.c: 105:    if (S.button[i].sw == SW_OFF) {
 31900                           ;stkvar	_i @ sp[(-2)+0]
 31901  0191C4  0EFE               	movlw	-2
 31902  0191C6  50E3               	movf	plusw1,w,c
 31903  0191C8  0D05               	mullw	5
 31904  0191CA  0E54               	movlw	low _S
 31905  0191CC  24F3               	addwf	243,w,c
 31906  0191CE  6ED9               	movwf	fsr2l,c
 31907  0191D0  0E02               	movlw	high _S
 31908  0191D2  20F4               	addwfc	prodh,w,c
 31909  0191D4  6EDA               	movwf	fsr2h,c
 31910  0191D6  50DF               	movf	indf2,w,c
 31911  0191D8  A4D8               	btfss	status,2,c
 31912  0191DA  D031               	goto	l10459
 31913                           
 31914                           ;dio.c: 106:     S.button[i].sw = SW_ON;
 31915                           ;stkvar	_i @ sp[(-2)+0]
 31916  0191DC  0EFE               	movlw	-2
 31917  0191DE  50E3               	movf	plusw1,w,c
 31918  0191E0  0D05               	mullw	5
 31919  0191E2  0E54               	movlw	low _S
 31920  0191E4  24F3               	addwf	243,w,c
 31921  0191E6  6ED9               	movwf	fsr2l,c
 31922  0191E8  0E02               	movlw	high _S
 31923  0191EA  20F4               	addwfc	prodh,w,c
 31924  0191EC  6EDA               	movwf	fsr2h,c
 31925  0191EE  0E01               	movlw	1
 31926  0191F0  6EDF               	movwf	indf2,c
 31927                           
 31928                           ;dio.c: 107:     S.button[i].count = V.timerint_count;
 31929  0191F2  EE20  F1EB         	lfsr	2,_V+187	;volatile
 31930                           
 31931                           ;stkvar	_i @ sp[(-2)+0]
 31932  0191F6  0EFE               	movlw	-2
 31933  0191F8  50E3               	movf	plusw1,w,c
 31934  0191FA  0D05               	mullw	5
 31935  0191FC  0E55               	movlw	low (_S+1)
 31936  0191FE  24F3               	addwf	243,w,c
 31937  019200  6EE9               	movwf	fsr0l,c
 31938  019202  0E02               	movlw	high (_S+1)
 31939  019204  20F4               	addwfc	prodh,w,c
 31940  019206  6EEA               	movwf	fsr0h,c
 31941  019208  006F FF7B FFEE     	movff	postinc2,postinc0
 31942  01920E  006F FF7B FFEE     	movff	postinc2,postinc0
 31943  019214  006F FF7B FFEE     	movff	postinc2,postinc0
 31944  01921A  006F FF7B FFEE     	movff	postinc2,postinc0
 31945                           
 31946                           ;dio.c: 108:     S.sw_bitmap |= 1 << i;
 31947                           ;stkvar	_i @ sp[(-2)+0]
 31948  019220  0EFE               	movlw	-2
 31949  019222  006F FF8C  F00C    	movff	plusw1,btemp+11
 31950  019228  0E01               	movlw	1
 31951  01922A  6E0B               	movwf	(btemp+10)^0,c
 31952  01922C  2A0C               	incf	(btemp+11)^0,f,c
 31953  01922E  D002               	goto	u968_24
 31954  019230                     u968_25:
 31955  019230  90D8               	bcf	status,0,c
 31956  019232  360B               	rlcf	(btemp+10)^0,f,c
 31957  019234                     u968_24:
 31958  019234  2E0C               	decfsz	(btemp+11)^0,f,c
 31959  019236  D7FC               	goto	u968_25
 31960  019238  500B               	movf	(btemp+10)^0,w,c
 31961  01923A  0102               	movlb	2	; () banked
 31962  01923C  137C               	iorwf	(_S+40)& (0+255),f,b	;volatile
 31963  01923E                     l10459:
 31964                           
 31965                           ;dio.c: 111:  } while (++i < 4);
 31966                           ;stkvar	_i @ sp[(-2)+0]
 31967  01923E  0EFE               	movlw	-2
 31968  019240  2AE3               	incf	plusw1,f,c
 31969  019242  0EFE               	movlw	-2
 31970  019244  006F FF8C  F001    	movff	plusw1,btemp
 31971  01924A  0E03               	movlw	3
 31972  01924C  6401               	cpfsgt	btemp^0,c
 31973  01924E  D788               	goto	l10443
 31974                           
 31975                           ;dio.c: 120:  do { LATDbits.LATD7 = 1; } while(0);
 31976  019250  8EBD               	bsf	189,7,c	;volatile
 31977                           
 31978                           ;dio.c: 121:  do { LATFbits.LATF5 = 1; } while(0);
 31979  019252  8ABF               	bsf	191,5,c	;volatile
 31980                           
 31981                           ; _switch_handler: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 31982  019254  52E5               	movf	postdec1,f,c
 31983  019256  52E5               	movf	postdec1,f,c
 31984  019258  0012               	return		;funcret
 31985  01925A                     __end_of_switch_handler:
 31986                           	opt callstack 0
 31987                           
 31988 ;; *************** function _TMR5_ISR *****************
 31989 ;; Defined at:
 31990 ;;		line 166 in file "mcc_generated_files/tmr5.c"
 31991 ;; Parameters:    Size  Location     Type
 31992 ;;		None
 31993 ;; Auto vars:     Size  Location     Type
 31994 ;;		None
 31995 ;; Return value:  Size  Location     Type
 31996 ;;                  1    wreg      void 
 31997 ;; Registers used:
 31998 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, prodl, prodh
 31999 ;; Tracked objects:
 32000 ;;		On entry : 0/0
 32001 ;;		On exit  : 3F/0
 32002 ;;		Unchanged: 0/0
 32003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32004 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32005 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32006 ;;      Temps:         15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32007 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32008 ;;Total ram usage:       15 bytes
 32009 ;; Hardware stack levels used:    1
 32010 ;; Hardware stack levels required when called:    9
 32011 ;; This function calls:
 32012 ;;		_TMR5_CallBack
 32013 ;;		_TMR5_WriteTimer
 32014 ;; This function is called by:
 32015 ;;		Interrupt level 1
 32016 ;; This function uses a non-reentrant model
 32017 ;;
 32018                           
 32019                           	psect	text140
 32020  019F10                     __ptext140:
 32021                           	opt callstack 0
 32022  019F10                     _TMR5_ISR:
 32023                           	opt callstack 8
 32024                           
 32025                           ;incstack = 0
 32026  019F10  006F FF60  F02D    	movff	status,??_TMR5_ISR+2
 32027  019F16  0060  F004  F02E   	movff	btemp,??_TMR5_ISR+3
 32028  019F1C  0060  F008  F02F   	movff	btemp+1,??_TMR5_ISR+4
 32029  019F22  0060  F00C  F030   	movff	btemp+2,??_TMR5_ISR+5
 32030  019F28  0060  F010  F031   	movff	btemp+3,??_TMR5_ISR+6
 32031  019F2E  0060  F014  F032   	movff	btemp+4,??_TMR5_ISR+7
 32032  019F34  0060  F018  F033   	movff	btemp+5,??_TMR5_ISR+8
 32033  019F3A  0060  F01C  F034   	movff	btemp+6,??_TMR5_ISR+9
 32034  019F40  0060  F020  F035   	movff	btemp+7,??_TMR5_ISR+10
 32035  019F46  0060  F024  F036   	movff	btemp+8,??_TMR5_ISR+11
 32036  019F4C  0060  F028  F037   	movff	btemp+9,??_TMR5_ISR+12
 32037  019F52  0060  F02C  F038   	movff	btemp+10,??_TMR5_ISR+13
 32038  019F58  0060  F030  F039   	movff	btemp+11,??_TMR5_ISR+14
 32039  019F5E  EE16  F0AE         	lfsr	1,___intlo_sp
 32040                           
 32041                           ;mcc_generated_files/tmr5.c: 168:  static volatile unsigned int CountCallBack = 0;;mcc_g
      +                          enerated_files/tmr5.c: 171:  PIR8bits.TMR5IF = 0;
 32042  019F62  0139               	movlb	57	; () banked
 32043  019F64  9DA8               	bcf	168,6,b	;volatile
 32044                           
 32045                           ; BSR set to: 57
 32046                           ;mcc_generated_files/tmr5.c: 172:  TMR5_WriteTimer(timer5ReloadVal);
 32047  019F66  0060  F323  FFE6   	movff	_timer5ReloadVal,postinc1
 32048  019F6C  0060  F327  FFE6   	movff	_timer5ReloadVal+1,postinc1
 32049  019F72  ECAE  F0D9         	call	_TMR5_WriteTimer	;wreg free
 32050                           
 32051                           ;mcc_generated_files/tmr5.c: 175:  if (++CountCallBack >= (5 +V.ticker)) {
 32052  019F76  0101               	movlb	1	; () banked
 32053  019F78  51DA               	movf	(_V+170)& (0+255),w,b	;volatile
 32054  019F7A  6E2B               	movwf	??_TMR5_ISR^0,c
 32055  019F7C  6A2C               	clrf	(??_TMR5_ISR+1)^0,c
 32056  019F7E  0E05               	movlw	5
 32057  019F80  262B               	addwf	??_TMR5_ISR^0,f,c
 32058  019F82  0E00               	movlw	0
 32059  019F84  222C               	addwfc	(??_TMR5_ISR+1)^0,f,c
 32060  019F86  0100               	movlb	0	; () banked
 32061  019F88  4BC6               	infsnz	TMR5_ISR@CountCallBack& (0+255),f,b	;volatile
 32062  019F8A  2BC7               	incf	(TMR5_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 32063  019F8C  502B               	movf	??_TMR5_ISR^0,w,c
 32064  019F8E  5DC6               	subwf	TMR5_ISR@CountCallBack& (0+255),w,b	;volatile
 32065  019F90  502C               	movf	(??_TMR5_ISR+1)^0,w,c
 32066  019F92  59C7               	subwfb	(TMR5_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 32067  019F94  A0D8               	btfss	status,0,c
 32068  019F96  D005               	goto	i1l1019
 32069                           
 32070                           ; BSR set to: 0
 32071                           ;mcc_generated_files/tmr5.c: 177:   TMR5_CallBack();
 32072  019F98  EC34  F0DD         	call	_TMR5_CallBack	;wreg free
 32073                           
 32074                           ;mcc_generated_files/tmr5.c: 180:   CountCallBack = 0;
 32075  019F9C  0100               	movlb	0	; () banked
 32076  019F9E  6BC6               	clrf	TMR5_ISR@CountCallBack& (0+255),b	;volatile
 32077  019FA0  6BC7               	clrf	(TMR5_ISR@CountCallBack+1)& (0+255),b	;volatile
 32078  019FA2                     i1l1019:
 32079                           
 32080                           ; BSR set to: 0
 32081  019FA2  0060  F0E4  F00C   	movff	??_TMR5_ISR+14,btemp+11
 32082  019FA8  0060  F0E0  F00B   	movff	??_TMR5_ISR+13,btemp+10
 32083  019FAE  0060  F0DC  F00A   	movff	??_TMR5_ISR+12,btemp+9
 32084  019FB4  0060  F0D8  F009   	movff	??_TMR5_ISR+11,btemp+8
 32085  019FBA  0060  F0D4  F008   	movff	??_TMR5_ISR+10,btemp+7
 32086  019FC0  0060  F0D0  F007   	movff	??_TMR5_ISR+9,btemp+6
 32087  019FC6  0060  F0CC  F006   	movff	??_TMR5_ISR+8,btemp+5
 32088  019FCC  0060  F0C8  F005   	movff	??_TMR5_ISR+7,btemp+4
 32089  019FD2  0060  F0C4  F004   	movff	??_TMR5_ISR+6,btemp+3
 32090  019FD8  0060  F0C0  F003   	movff	??_TMR5_ISR+5,btemp+2
 32091  019FDE  0060  F0BC  F002   	movff	??_TMR5_ISR+4,btemp+1
 32092  019FE4  0060  F0B8  F001   	movff	??_TMR5_ISR+3,btemp
 32093  019FEA  0060  F0B7  FFD8   	movff	??_TMR5_ISR+2,status
 32094  019FF0  0011               	retfie		f
 32095  019FF2                     __end_of_TMR5_ISR:
 32096                           	opt callstack 0
 32097                           
 32098 ;; *************** function _TMR5_WriteTimer *****************
 32099 ;; Defined at:
 32100 ;;		line 132 in file "mcc_generated_files/tmr5.c"
 32101 ;; Parameters:    Size  Location     Type
 32102 ;;  timerVal        2  [STACK] unsigned short 
 32103 ;; Auto vars:     Size  Location     Type
 32104 ;;		None
 32105 ;; Return value:  Size  Location     Type
 32106 ;;                  1  [STACK] void 
 32107 ;; Registers used:
 32108 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 32109 ;; Tracked objects:
 32110 ;;		On entry : 3F/39
 32111 ;;		On exit  : 0/0
 32112 ;;		Unchanged: 0/0
 32113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32114 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32115 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32116 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32117 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32118 ;;Total ram usage:        0 bytes
 32119 ;; Hardware stack levels used:    1
 32120 ;; Hardware stack levels required when called:    3
 32121 ;; This function calls:
 32122 ;;		Nothing
 32123 ;; This function is called by:
 32124 ;;		_TMR5_ISR
 32125 ;; This function uses a reentrant model
 32126 ;;
 32127                           
 32128                           	psect	text141
 32129  01B35C                     __ptext141:
 32130                           	opt callstack 0
 32131  01B35C                     _TMR5_WriteTimer:
 32132                           	opt callstack 13
 32133                           
 32134                           ;mcc_generated_files/tmr5.c: 132: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 133: {;mcc_generated_files/tmr5.c: 134:  if (T5CONbits.NOT_SYNC == 1) {
 32135                           
 32136                           ; BSR set to: 0
 32137                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32138                           ;incstack = 0
 32139  01B35C  A49A               	btfss	154,2,c	;volatile
 32140  01B35E  D00F               	goto	l10639
 32141                           
 32142                           ;mcc_generated_files/tmr5.c: 136:   T5CONbits.TMR5ON = 0;
 32143  01B360  909A               	bcf	154,0,c	;volatile
 32144                           
 32145                           ;mcc_generated_files/tmr5.c: 139:   TMR5H = (timerVal >> 8);
 32146                           ;stkvar	_timerVal @ sp[(0)+-2]
 32147  01B362  0EFF               	movlw	255
 32148  01B364  24E1               	addwf	fsr1l,w,c
 32149  01B366  6ED9               	movwf	fsr2l,c
 32150  01B368  0EFF               	movlw	255
 32151  01B36A  20E2               	addwfc	fsr1h,w,c
 32152  01B36C  6EDA               	movwf	fsr2h,c
 32153  01B36E  50DF               	movf	indf2,w,c
 32154  01B370  6E99               	movwf	153,c	;volatile
 32155                           
 32156                           ;mcc_generated_files/tmr5.c: 140:   TMR5L = timerVal;
 32157                           ;stkvar	_timerVal @ sp[(0)+-2]
 32158  01B372  0EFE               	movlw	-2
 32159  01B374  006F FF8F FF98     	movff	plusw1,16280	;volatile
 32160                           
 32161                           ;mcc_generated_files/tmr5.c: 143:   T5CONbits.TMR5ON = 1;
 32162  01B37A  809A               	bsf	154,0,c	;volatile
 32163                           
 32164                           ;mcc_generated_files/tmr5.c: 144:  } else {
 32165  01B37C  D00C               	goto	l1002
 32166  01B37E                     l10639:
 32167                           
 32168                           ;mcc_generated_files/tmr5.c: 146:   TMR5H = (timerVal >> 8);
 32169                           ;stkvar	_timerVal @ sp[(0)+-2]
 32170  01B37E  0EFF               	movlw	255
 32171  01B380  24E1               	addwf	fsr1l,w,c
 32172  01B382  6ED9               	movwf	fsr2l,c
 32173  01B384  0EFF               	movlw	255
 32174  01B386  20E2               	addwfc	fsr1h,w,c
 32175  01B388  6EDA               	movwf	fsr2h,c
 32176  01B38A  50DF               	movf	indf2,w,c
 32177  01B38C  6E99               	movwf	153,c	;volatile
 32178                           
 32179                           ;mcc_generated_files/tmr5.c: 147:   TMR5L = timerVal;
 32180                           ;stkvar	_timerVal @ sp[(0)+-2]
 32181  01B38E  0EFE               	movlw	-2
 32182  01B390  006F FF8F FF98     	movff	plusw1,16280	;volatile
 32183  01B396                     l1002:
 32184                           
 32185                           ; _TMR5_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 32186  01B396  52E5               	movf	postdec1,f,c
 32187  01B398  52E5               	movf	postdec1,f,c
 32188  01B39A  0012               	return		;funcret
 32189  01B39C                     __end_of_TMR5_WriteTimer:
 32190                           	opt callstack 0
 32191                           
 32192 ;; *************** function _TMR5_CallBack *****************
 32193 ;; Defined at:
 32194 ;;		line 184 in file "mcc_generated_files/tmr5.c"
 32195 ;; Parameters:    Size  Location     Type
 32196 ;;		None
 32197 ;; Auto vars:     Size  Location     Type
 32198 ;;		None
 32199 ;; Return value:  Size  Location     Type
 32200 ;;                  1  [STACK] void 
 32201 ;; Registers used:
 32202 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, prodl, prodh
 32203 ;; Tracked objects:
 32204 ;;		On entry : 3F/0
 32205 ;;		On exit  : 0/0
 32206 ;;		Unchanged: 0/0
 32207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32208 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32209 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32210 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32211 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32212 ;;Total ram usage:        0 bytes
 32213 ;; Hardware stack levels used:    1
 32214 ;; Hardware stack levels required when called:    8
 32215 ;; This function calls:
 32216 ;;		Absolute function
 32217 ;;		_TMR5_DefaultInterruptHandler
 32218 ;; This function is called by:
 32219 ;;		_TMR5_ISR
 32220 ;; This function uses a reentrant model
 32221 ;;
 32222                           
 32223                           	psect	text142
 32224  01BA68                     __ptext142:
 32225                           	opt callstack 0
 32226  01BA68                     _TMR5_CallBack:
 32227                           	opt callstack 8
 32228                           
 32229                           ;mcc_generated_files/tmr5.c: 187:  if (TMR5_InterruptHandler) {
 32230                           
 32231                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32232                           ;incstack = 0
 32233  01BA68  0100               	movlb	0	; () banked
 32234  01BA6A  51A5               	movf	_TMR5_InterruptHandler& (0+255),w,b
 32235  01BA6C  11A6               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 32236  01BA6E  11A7               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 32237  01BA70  B4D8               	btfsc	status,2,c
 32238  01BA72  0012               	return	
 32239                           
 32240                           ; BSR set to: 0
 32241                           ;mcc_generated_files/tmr5.c: 188:   TMR5_InterruptHandler();
 32242  01BA74  D801               	call	u1000_28
 32243  01BA76  0012               	return	
 32244  01BA78                     u1000_28:
 32245  01BA78  0005               	push	
 32246  01BA7A  6EFA               	movwf	pclath,c
 32247  01BA7C  51A5               	movf	_TMR5_InterruptHandler& (0+255),w,b
 32248  01BA7E  6EFD               	movwf	tosl,c
 32249  01BA80  51A6               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 32250  01BA82  6EFE               	movwf	tosh,c
 32251  01BA84  51A7               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 32252  01BA86  6EFF               	movwf	tosu,c
 32253  01BA88  50FA               	movf	pclath,w,c
 32254  01BA8A  0012               	return		;indir
 32255  01BA8C                     __end_of_TMR5_CallBack:
 32256                           	opt callstack 0
 32257                           
 32258 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 32259 ;; Defined at:
 32260 ;;		line 197 in file "mcc_generated_files/tmr5.c"
 32261 ;; Parameters:    Size  Location     Type
 32262 ;;		None
 32263 ;; Auto vars:     Size  Location     Type
 32264 ;;		None
 32265 ;; Return value:  Size  Location     Type
 32266 ;;                  1  [STACK] void 
 32267 ;; Registers used:
 32268 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 32269 ;; Tracked objects:
 32270 ;;		On entry : 3F/0
 32271 ;;		On exit  : 0/0
 32272 ;;		Unchanged: 0/0
 32273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32274 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32275 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32276 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32277 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32278 ;;Total ram usage:        0 bytes
 32279 ;; Hardware stack levels used:    1
 32280 ;; Hardware stack levels required when called:    7
 32281 ;; This function calls:
 32282 ;;		_check_day_time
 32283 ;; This function is called by:
 32284 ;;		_TMR5_Initialize
 32285 ;;		_TMR5_CallBack
 32286 ;; This function uses a reentrant model
 32287 ;;
 32288                           
 32289                           	psect	text143
 32290  01B4CC                     __ptext143:
 32291                           	opt callstack 0
 32292  01B4CC                     _TMR5_DefaultInterruptHandler:
 32293                           	opt callstack 8
 32294                           
 32295                           ;mcc_generated_files/tmr5.c: 201:  LATEbits.LATE0 = (uint8_t) ~LATEbits.LATE0;
 32296                           
 32297                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32298                           ;incstack = 0
 32299  01B4CC  A0BE               	btfss	190,0,c	;volatile
 32300  01B4CE  D002               	goto	u945_20
 32301  01B4D0  0E01               	movlw	1
 32302  01B4D2  D001               	goto	u945_26
 32303  01B4D4                     u945_20:
 32304  01B4D4  0E00               	movlw	0
 32305  01B4D6                     u945_26:
 32306  01B4D6  0AFF               	xorlw	255
 32307  01B4D8  6E0C               	movwf	(btemp+11)^0,c
 32308  01B4DA  50BE               	movf	190,w,c	;volatile
 32309  01B4DC  180C               	xorwf	(btemp+11)^0,w,c
 32310  01B4DE  0BFE               	andlw	-2
 32311  01B4E0  180C               	xorwf	(btemp+11)^0,w,c
 32312  01B4E2  6EBE               	movwf	190,c	;volatile
 32313                           
 32314                           ;mcc_generated_files/tmr5.c: 202:  V.timerint_count++;
 32315  01B4E4  0E01               	movlw	1
 32316  01B4E6  0101               	movlb	1	; () banked
 32317  01B4E8  27EB               	addwf	(_V+187)& (0+255),f,b	;volatile
 32318  01B4EA  0E00               	movlw	0
 32319  01B4EC  23EC               	addwfc	(_V+188)& (0+255),f,b	;volatile
 32320  01B4EE  23ED               	addwfc	(_V+189)& (0+255),f,b	;volatile
 32321  01B4F0  23EE               	addwfc	(_V+190)& (0+255),f,b	;volatile
 32322                           
 32323                           ; BSR set to: 1
 32324                           ;mcc_generated_files/tmr5.c: 203:  V.ticks++;
 32325  01B4F2  0E01               	movlw	1
 32326  01B4F4  27B1               	addwf	(_V+129)& (0+255),f,b	;volatile
 32327  01B4F6  0E00               	movlw	0
 32328  01B4F8  23B2               	addwfc	(_V+130)& (0+255),f,b	;volatile
 32329  01B4FA  23B3               	addwfc	(_V+131)& (0+255),f,b	;volatile
 32330  01B4FC  23B4               	addwfc	(_V+132)& (0+255),f,b	;volatile
 32331                           
 32332                           ; BSR set to: 1
 32333                           ;mcc_generated_files/tmr5.c: 204:  check_day_time();
 32334  01B4FE  ECAA  F0C2         	call	_check_day_time	;wreg free
 32335                           
 32336                           ; _TMR5_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 32337  01B502  0012               	return		;funcret
 32338  01B504                     __end_of_TMR5_DefaultInterruptHandler:
 32339                           	opt callstack 0
 32340                           
 32341 ;; *************** function _check_day_time *****************
 32342 ;; Defined at:
 32343 ;;		line 164 in file "mbmc.c"
 32344 ;; Parameters:    Size  Location     Type
 32345 ;;		None
 32346 ;; Auto vars:     Size  Location     Type
 32347 ;;  light           4  [STACK] float 
 32348 ;; Return value:  Size  Location     Type
 32349 ;;                  1  [STACK] _Bool 
 32350 ;; Registers used:
 32351 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 32352 ;; Tracked objects:
 32353 ;;		On entry : 3F/1
 32354 ;;		On exit  : 0/0
 32355 ;;		Unchanged: 0/0
 32356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32357 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32358 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32359 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32360 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32361 ;;Total ram usage:        0 bytes
 32362 ;; Hardware stack levels used:    1
 32363 ;; Hardware stack levels required when called:    6
 32364 ;; This function calls:
 32365 ;;		___flge
 32366 ;;		_conv_raw_result
 32367 ;;		_get_ac_charger_relay
 32368 ;;		_set_ac_charger_relay
 32369 ;; This function is called by:
 32370 ;;		_TMR5_DefaultInterruptHandler
 32371 ;; This function uses a reentrant model
 32372 ;;
 32373                           
 32374                           	psect	text144
 32375  018554                     __ptext144:
 32376                           	opt callstack 0
 32377  018554                     _check_day_time:
 32378                           	opt callstack 0
 32379                           
 32380                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32381  018554  52E6               	movf	postinc1,f,c
 32382  018556  52E6               	movf	postinc1,f,c
 32383  018558  52E6               	movf	postinc1,f,c
 32384  01855A  52E6               	movf	postinc1,f,c
 32385                           
 32386                           ;mbmc.c: 166:  static uint8_t day_delay = 0;;mbmc.c: 167:  float light;;mbmc.c: 169:  li
      +                          ght = conv_raw_result(V_LIGHT_SENSOR, CONV);
 32387                           
 32388                           ;incstack = 0
 32389  01855C  0E00               	movlw	0
 32390  01855E  6EE6               	movwf	postinc1,c
 32391  018560  0E0D               	movlw	13
 32392  018562  6EE6               	movwf	postinc1,c
 32393  018564  EC0E  F0A8         	call	_conv_raw_result	;wreg free
 32394                           
 32395                           ;stkvar	_light @ sp[(-4)+0]
 32396  018568  0EFC               	movlw	-4
 32397  01856A  0060  F007  FFE3   	movff	btemp,plusw1
 32398  018570  0EFD               	movlw	-3
 32399  018572  0060  F00B  FFE3   	movff	btemp+1,plusw1
 32400  018578  0EFE               	movlw	-2
 32401  01857A  0060  F00F  FFE3   	movff	btemp+2,plusw1
 32402  018580  0EFF               	movlw	-1
 32403  018582  0060  F013  FFE3   	movff	btemp+3,plusw1
 32404                           
 32405                           ;mbmc.c: 171:  if (!day_delay++ && V.system_stable) {
 32406  018588  2A42               	incf	check_day_time@day_delay^0,f,c
 32407  01858A  0442               	decf	check_day_time@day_delay^0,w,c
 32408  01858C  A4D8               	btfss	status,2,c
 32409  01858E  D0A9               	goto	l1899
 32410  018590  0101               	movlb	1	; () banked
 32411  018592  51DE               	movf	(_V+174)& (0+255),w,b	;volatile
 32412  018594  B4D8               	btfsc	status,2,c
 32413  018596  D0A5               	goto	l1899
 32414                           
 32415                           ; BSR set to: 1
 32416                           ;mbmc.c: 172:   if (C.soc > 15) {
 32417  018598  EE21  F3B1         	lfsr	2,_C+178	;volatile
 32418  01859C  0E01               	movlw	1
 32419  01859E  50DB               	movf	plusw2,w,c
 32420  0185A0  E104               	bnz	u924_20
 32421  0185A2  0E10               	movlw	16
 32422  0185A4  5CDE               	subwf	postinc2,w,c
 32423  0185A6  A0D8               	btfss	status,0,c
 32424  0185A8  D073               	goto	l9775
 32425  0185AA                     u924_20:
 32426                           
 32427                           ; BSR set to: 1
 32428                           ;mbmc.c: 173:    if (!C.day) {
 32429  0185AA  EE22  F01D         	lfsr	2,_C+286	;volatile
 32430  0185AE  50DF               	movf	indf2,w,c
 32431  0185B0  A4D8               	btfss	status,2,c
 32432  0185B2  D035               	goto	l9763
 32433                           
 32434                           ; BSR set to: 1
 32435                           ;mbmc.c: 174:     if (light > 22.0) {
 32436                           ;stkvar	_light @ sp[(-4)+0]
 32437  0185B4  0EFC               	movlw	-4
 32438  0185B6  006F FF8F FFE6     	movff	plusw1,postinc1
 32439  0185BC  006F FF8F FFE6     	movff	plusw1,postinc1
 32440  0185C2  006F FF8F FFE6     	movff	plusw1,postinc1
 32441  0185C8  006F FF8F FFE6     	movff	plusw1,postinc1
 32442  0185CE  0E00               	movlw	0
 32443  0185D0  6EE6               	movwf	postinc1,c
 32444  0185D2  0E00               	movlw	0
 32445  0185D4  6EE6               	movwf	postinc1,c
 32446  0185D6  0EB0               	movlw	176
 32447  0185D8  6EE6               	movwf	postinc1,c
 32448  0185DA  0E41               	movlw	65
 32449  0185DC  6EE6               	movwf	postinc1,c
 32450  0185DE  EC81  F0C6         	call	___flge	;wreg free
 32451  0185E2  B001               	btfsc	btemp& (0+255),0,c
 32452  0185E4  D07E               	goto	l1899
 32453                           
 32454                           ;mbmc.c: 175:      C.day = 1;
 32455  0185E6  0E01               	movlw	1
 32456  0185E8  006F FFA0  F81D    	movff	wreg,_C+286	;volatile
 32457                           
 32458                           ;mbmc.c: 176:      C.day_start = V.ticks;
 32459  0185EE  EE20  F1B1         	lfsr	2,_V+129	;volatile
 32460  0185F2  006F FF78  F81E    	movff	postinc2,_C+287	;volatile
 32461  0185F8  006F FF78  F81F    	movff	postinc2,_C+288	;volatile
 32462  0185FE  006F FF78  F820    	movff	postinc2,_C+289	;volatile
 32463  018604  006F FF74  F821    	movff	postdec2,_C+290	;volatile
 32464                           
 32465                           ;mbmc.c: 177:      if (get_ac_charger_relay()) {
 32466  01860A  ECA4  F0DE         	call	_get_ac_charger_relay	;wreg free
 32467  01860E  5001               	movf	btemp^0,w,c
 32468  018610  B4D8               	btfsc	status,2,c
 32469  018612  D06B               	goto	l1895
 32470                           
 32471                           ;mbmc.c: 178:       set_ac_charger_relay(0);
 32472  018614  0E00               	movlw	0
 32473  018616  6EE6               	movwf	postinc1,c
 32474  018618  EC87  F0DE         	call	_set_ac_charger_relay	;wreg free
 32475  01861C  D066               	goto	l1895
 32476  01861E                     l9763:
 32477                           
 32478                           ; BSR set to: 1
 32479                           ;mbmc.c: 183:     if (light < 12.0) {
 32480  01861E  0E00               	movlw	0
 32481  018620  6EE6               	movwf	postinc1,c
 32482  018622  0E00               	movlw	0
 32483  018624  6EE6               	movwf	postinc1,c
 32484  018626  0E40               	movlw	64
 32485  018628  6EE6               	movwf	postinc1,c
 32486  01862A  0E41               	movlw	65
 32487  01862C  6EE6               	movwf	postinc1,c
 32488                           
 32489                           ;stkvar	_light @ sp[(-8)+0]
 32490  01862E  0EF8               	movlw	-8
 32491  018630  006F FF8F FFE6     	movff	plusw1,postinc1
 32492  018636  006F FF8F FFE6     	movff	plusw1,postinc1
 32493  01863C  006F FF8F FFE6     	movff	plusw1,postinc1
 32494  018642  006F FF8F FFE6     	movff	plusw1,postinc1
 32495  018648  EC81  F0C6         	call	___flge	;wreg free
 32496  01864C  B001               	btfsc	btemp& (0+255),0,c
 32497  01864E  D049               	goto	l1899
 32498                           
 32499                           ;mbmc.c: 184:      C.day = 0;
 32500  018650  0E00               	movlw	0
 32501  018652  006F FFA0  F81D    	movff	wreg,_C+286	;volatile
 32502                           
 32503                           ;mbmc.c: 185:      C.day_end = V.ticks;
 32504  018658  EE20  F1B1         	lfsr	2,_V+129	;volatile
 32505  01865C  006F FF78  F822    	movff	postinc2,_C+291	;volatile
 32506  018662  006F FF78  F823    	movff	postinc2,_C+292	;volatile
 32507  018668  006F FF78  F824    	movff	postinc2,_C+293	;volatile
 32508  01866E  006F FF74  F825    	movff	postdec2,_C+294	;volatile
 32509                           
 32510                           ;mbmc.c: 189:      if ((C.soc < 40)) {
 32511  018674  EE21  F3B1         	lfsr	2,_C+178	;volatile
 32512  018678  0E01               	movlw	1
 32513  01867A  50DB               	movf	plusw2,w,c
 32514  01867C  E136               	bnz	l1895
 32515  01867E  0E28               	movlw	40
 32516  018680  5CDE               	subwf	postinc2,w,c
 32517  018682  B0D8               	btfsc	status,0,c
 32518  018684  D032               	goto	l1895
 32519                           
 32520                           ;mbmc.c: 190:       set_ac_charger_relay(1);
 32521  018686  0E01               	movlw	1
 32522  018688  6EE6               	movwf	postinc1,c
 32523  01868A  EC87  F0DE         	call	_set_ac_charger_relay	;wreg free
 32524  01868E  D02D               	goto	l1895
 32525  018690                     l9775:
 32526                           
 32527                           ; BSR set to: 1
 32528                           ;mbmc.c: 196:    if (C.p_pv < C.p_inverter) {
 32529  018690  EE21  F377         	lfsr	2,_C+120	;volatile
 32530  018694  006F FF7B FFE6     	movff	postinc2,postinc1
 32531  01869A  006F FF7B FFE6     	movff	postinc2,postinc1
 32532  0186A0  006F FF7B FFE6     	movff	postinc2,postinc1
 32533  0186A6  006F FF7B FFE6     	movff	postinc2,postinc1
 32534  0186AC  EE21  F37B         	lfsr	2,_C+124	;volatile
 32535  0186B0  006F FF7B FFE6     	movff	postinc2,postinc1
 32536  0186B6  006F FF7B FFE6     	movff	postinc2,postinc1
 32537  0186BC  006F FF7B FFE6     	movff	postinc2,postinc1
 32538  0186C2  006F FF7B FFE6     	movff	postinc2,postinc1
 32539  0186C8  EC81  F0C6         	call	___flge	;wreg free
 32540  0186CC  B001               	btfsc	btemp& (0+255),0,c
 32541  0186CE  D009               	goto	l1899
 32542                           
 32543                           ;mbmc.c: 197:     if (!get_ac_charger_relay()) {
 32544  0186D0  ECA4  F0DE         	call	_get_ac_charger_relay	;wreg free
 32545  0186D4  5001               	movf	btemp^0,w,c
 32546  0186D6  A4D8               	btfss	status,2,c
 32547  0186D8  D004               	goto	l1899
 32548                           
 32549                           ;mbmc.c: 198:      set_ac_charger_relay(1);
 32550  0186DA  0E01               	movlw	1
 32551  0186DC  6EE6               	movwf	postinc1,c
 32552  0186DE  EC87  F0DE         	call	_set_ac_charger_relay	;wreg free
 32553  0186E2                     l1899:
 32554                           
 32555                           ;mbmc.c: 203:  if (day_delay >= 240)
 32556  0186E2  0EEF               	movlw	239
 32557  0186E4  6442               	cpfsgt	check_day_time@day_delay^0,c
 32558  0186E6  D001               	goto	l1895
 32559                           
 32560                           ;mbmc.c: 204:   day_delay = 0;
 32561  0186E8  6A42               	clrf	check_day_time@day_delay^0,c
 32562  0186EA                     l1895:
 32563                           
 32564                           ; _check_day_time: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 32565  0186EA  52E5               	movf	postdec1,f,c
 32566  0186EC  52E5               	movf	postdec1,f,c
 32567  0186EE  52E5               	movf	postdec1,f,c
 32568  0186F0  52E5               	movf	postdec1,f,c
 32569  0186F2  0012               	return		;funcret
 32570  0186F4                     __end_of_check_day_time:
 32571                           	opt callstack 0
 32572                           
 32573 ;; *************** function _set_ac_charger_relay *****************
 32574 ;; Defined at:
 32575 ;;		line 134 in file "mbmc.c"
 32576 ;; Parameters:    Size  Location     Type
 32577 ;;  mode            1  [STACK] _Bool 
 32578 ;; Auto vars:     Size  Location     Type
 32579 ;;		None
 32580 ;; Return value:  Size  Location     Type
 32581 ;;                  1  [STACK] void 
 32582 ;; Registers used:
 32583 ;;		wreg, fsr1l, fsr1h
 32584 ;; Tracked objects:
 32585 ;;		On entry : 0/1
 32586 ;;		On exit  : 0/0
 32587 ;;		Unchanged: 0/0
 32588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32589 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32590 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32591 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32592 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32593 ;;Total ram usage:        0 bytes
 32594 ;; Hardware stack levels used:    1
 32595 ;; Hardware stack levels required when called:    3
 32596 ;; This function calls:
 32597 ;;		Nothing
 32598 ;; This function is called by:
 32599 ;;		_check_day_time
 32600 ;; This function uses a reentrant model
 32601 ;;
 32602                           
 32603                           	psect	text145
 32604  01BD0E                     __ptext145:
 32605                           	opt callstack 0
 32606  01BD0E                     _set_ac_charger_relay:
 32607                           	opt callstack 10
 32608                           
 32609                           ;mbmc.c: 134: void set_ac_charger_relay(_Bool mode);mbmc.c: 135: {;mbmc.c: 136:  LATDbit
      +                          s.LATD6 = mode;
 32610                           ;stkvar	_mode @ sp[(0)+-1]
 32611                           
 32612                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32613                           ;incstack = 0
 32614  01BD0E  0EFF               	movlw	-1
 32615  01BD10  B0E3               	btfsc	plusw1,0,c
 32616  01BD12  D002               	bra	u919_25
 32617  01BD14  9CBD               	bcf	189,6,c	;volatile
 32618  01BD16  D001               	bra	u919_26
 32619  01BD18                     u919_25:
 32620  01BD18  8CBD               	bsf	189,6,c	;volatile
 32621  01BD1A                     u919_26:
 32622                           
 32623                           ; _set_ac_charger_relay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
 32624  01BD1A  52E5               	movf	postdec1,f,c
 32625  01BD1C  0012               	return		;funcret
 32626  01BD1E                     __end_of_set_ac_charger_relay:
 32627                           	opt callstack 0
 32628                           
 32629 ;; *************** function _get_ac_charger_relay *****************
 32630 ;; Defined at:
 32631 ;;		line 139 in file "mbmc.c"
 32632 ;; Parameters:    Size  Location     Type
 32633 ;;		None
 32634 ;; Auto vars:     Size  Location     Type
 32635 ;;		None
 32636 ;; Return value:  Size  Location     Type
 32637 ;;                  1  [STACK] _Bool 
 32638 ;; Registers used:
 32639 ;;		btemp
 32640 ;; Tracked objects:
 32641 ;;		On entry : 0/1
 32642 ;;		On exit  : 0/0
 32643 ;;		Unchanged: 0/0
 32644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32645 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32646 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32648 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32649 ;;Total ram usage:        0 bytes
 32650 ;; Hardware stack levels used:    1
 32651 ;; Hardware stack levels required when called:    3
 32652 ;; This function calls:
 32653 ;;		Nothing
 32654 ;; This function is called by:
 32655 ;;		_check_day_time
 32656 ;;		_calc_bsoc
 32657 ;; This function uses a reentrant model
 32658 ;;
 32659                           
 32660                           	psect	text146
 32661  01BD48                     __ptext146:
 32662                           	opt callstack 0
 32663  01BD48                     _get_ac_charger_relay:
 32664                           	opt callstack 11
 32665                           
 32666                           ;mbmc.c: 141:  return LATDbits.LATD6;
 32667                           
 32668                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32669                           ;incstack = 0
 32670  01BD48  ACBD               	btfss	189,6,c	;volatile
 32671  01BD4A  D003               	goto	u938_20
 32672  01BD4C  6A01               	clrf	btemp^0,c
 32673  01BD4E  2A01               	incf	btemp^0,f,c
 32674  01BD50  0012               	return	
 32675  01BD52                     u938_20:
 32676  01BD52  6A01               	clrf	btemp^0,c
 32677                           
 32678                           ; _get_ac_charger_relay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 32679  01BD54  0012               	return		;funcret
 32680  01BD56                     __end_of_get_ac_charger_relay:
 32681                           	opt callstack 0
 32682                           
 32683 ;; *************** function _TMR3_ISR *****************
 32684 ;; Defined at:
 32685 ;;		line 165 in file "mcc_generated_files/tmr3.c"
 32686 ;; Parameters:    Size  Location     Type
 32687 ;;		None
 32688 ;; Auto vars:     Size  Location     Type
 32689 ;;		None
 32690 ;; Return value:  Size  Location     Type
 32691 ;;                  1    wreg      void 
 32692 ;; Registers used:
 32693 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, tosl, tblptrl, tblptrh, tblptru, prodl, prodh
 32694 ;; Tracked objects:
 32695 ;;		On entry : 0/0
 32696 ;;		On exit  : 3F/0
 32697 ;;		Unchanged: 0/0
 32698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32699 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32700 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32701 ;;      Temps:          0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32702 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32703 ;;Total ram usage:       25 bytes
 32704 ;; Hardware stack levels used:    1
 32705 ;; Hardware stack levels required when called:   14
 32706 ;; This function calls:
 32707 ;;		_TMR3_CallBack
 32708 ;;		_TMR3_WriteTimer
 32709 ;; This function is called by:
 32710 ;;		Interrupt level 1
 32711 ;; This function uses a non-reentrant model
 32712 ;;
 32713                           
 32714                           	psect	text147
 32715  018E64                     __ptext147:
 32716                           	opt callstack 0
 32717  018E64                     _TMR3_ISR:
 32718                           	opt callstack 3
 32719                           
 32720                           ;incstack = 0
 32721  018E64  006F FF60  F0D7    	movff	status,??_TMR3_ISR
 32722  018E6A  006F FFD8  F0D8    	movff	tblptrl,??_TMR3_ISR+1
 32723  018E70  006F FFDC  F0D9    	movff	tblptrh,??_TMR3_ISR+2
 32724  018E76  006F FFE0  F0DA    	movff	tblptru,??_TMR3_ISR+3
 32725  018E7C  006F FFD4  F0DB    	movff	tablat,??_TMR3_ISR+4
 32726  018E82  0060  F004  F0DC   	movff	btemp,??_TMR3_ISR+5
 32727  018E88  0060  F008  F0DD   	movff	btemp+1,??_TMR3_ISR+6
 32728  018E8E  0060  F00C  F0DE   	movff	btemp+2,??_TMR3_ISR+7
 32729  018E94  0060  F010  F0DF   	movff	btemp+3,??_TMR3_ISR+8
 32730  018E9A  0060  F014  F0E0   	movff	btemp+4,??_TMR3_ISR+9
 32731  018EA0  0060  F018  F0E1   	movff	btemp+5,??_TMR3_ISR+10
 32732  018EA6  0060  F01C  F0E2   	movff	btemp+6,??_TMR3_ISR+11
 32733  018EAC  0060  F020  F0E3   	movff	btemp+7,??_TMR3_ISR+12
 32734  018EB2  0060  F024  F0E4   	movff	btemp+8,??_TMR3_ISR+13
 32735  018EB8  0060  F028  F0E5   	movff	btemp+9,??_TMR3_ISR+14
 32736  018EBE  0060  F02C  F0E6   	movff	btemp+10,??_TMR3_ISR+15
 32737  018EC4  0060  F030  F0E7   	movff	btemp+11,??_TMR3_ISR+16
 32738  018ECA  0060  F044  F0E8   	movff	btemp+16,??_TMR3_ISR+17
 32739  018ED0  0060  F048  F0E9   	movff	btemp+17,??_TMR3_ISR+18
 32740  018ED6  0060  F04C  F0EA   	movff	btemp+18,??_TMR3_ISR+19
 32741  018EDC  0060  F050  F0EB   	movff	btemp+19,??_TMR3_ISR+20
 32742  018EE2  0060  F054  F0EC   	movff	btemp+20,??_TMR3_ISR+21
 32743  018EE8  0060  F058  F0ED   	movff	btemp+21,??_TMR3_ISR+22
 32744  018EEE  0060  F05C  F0EE   	movff	btemp+22,??_TMR3_ISR+23
 32745  018EF4  0060  F060  F0EF   	movff	btemp+23,??_TMR3_ISR+24
 32746  018EFA  EE16  F0AE         	lfsr	1,___intlo_sp
 32747                           
 32748                           ;mcc_generated_files/tmr3.c: 167:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr3.c: 170:     PIR6bits.TMR3IF = 0;
 32749  018EFE  0139               	movlb	57	; () banked
 32750  018F00  9DA6               	bcf	166,6,b	;volatile
 32751                           
 32752                           ; BSR set to: 57
 32753                           ;mcc_generated_files/tmr3.c: 171:     TMR3_WriteTimer(timer3ReloadVal);
 32754  018F02  0060  F313  FFE6   	movff	_timer3ReloadVal,postinc1
 32755  018F08  0060  F317  FFE6   	movff	_timer3ReloadVal+1,postinc1
 32756  018F0E  ECCE  F0D9         	call	_TMR3_WriteTimer	;wreg free
 32757                           
 32758                           ;mcc_generated_files/tmr3.c: 174:     if (++CountCallBack >= 40)
 32759  018F12  0100               	movlb	0	; () banked
 32760  018F14  4BC2               	infsnz	TMR3_ISR@CountCallBack& (0+255),f,b	;volatile
 32761  018F16  2BC3               	incf	(TMR3_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 32762  018F18  51C3               	movf	(TMR3_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 32763  018F1A  E104               	bnz	i1u1244_20
 32764  018F1C  0E28               	movlw	40
 32765  018F1E  5DC2               	subwf	TMR3_ISR@CountCallBack& (0+255),w,b	;volatile
 32766  018F20  A0D8               	btfss	status,0,c
 32767  018F22  D005               	goto	i1l1207
 32768  018F24                     i1u1244_20:
 32769                           
 32770                           ; BSR set to: 0
 32771                           ;mcc_generated_files/tmr3.c: 175:     {;mcc_generated_files/tmr3.c: 177:         TMR3_Ca
      +                          llBack();
 32772  018F24  EC46  F0DD         	call	_TMR3_CallBack	;wreg free
 32773                           
 32774                           ;mcc_generated_files/tmr3.c: 180:         CountCallBack = 0;
 32775  018F28  0100               	movlb	0	; () banked
 32776  018F2A  6BC2               	clrf	TMR3_ISR@CountCallBack& (0+255),b	;volatile
 32777  018F2C  6BC3               	clrf	(TMR3_ISR@CountCallBack+1)& (0+255),b	;volatile
 32778  018F2E                     i1l1207:
 32779                           
 32780                           ; BSR set to: 0
 32781  018F2E  0060  F3BC  F018   	movff	??_TMR3_ISR+24,btemp+23
 32782  018F34  0060  F3B8  F017   	movff	??_TMR3_ISR+23,btemp+22
 32783  018F3A  0060  F3B4  F016   	movff	??_TMR3_ISR+22,btemp+21
 32784  018F40  0060  F3B0  F015   	movff	??_TMR3_ISR+21,btemp+20
 32785  018F46  0060  F3AC  F014   	movff	??_TMR3_ISR+20,btemp+19
 32786  018F4C  0060  F3A8  F013   	movff	??_TMR3_ISR+19,btemp+18
 32787  018F52  0060  F3A4  F012   	movff	??_TMR3_ISR+18,btemp+17
 32788  018F58  0060  F3A0  F011   	movff	??_TMR3_ISR+17,btemp+16
 32789  018F5E  0060  F39C  F00C   	movff	??_TMR3_ISR+16,btemp+11
 32790  018F64  0060  F398  F00B   	movff	??_TMR3_ISR+15,btemp+10
 32791  018F6A  0060  F394  F00A   	movff	??_TMR3_ISR+14,btemp+9
 32792  018F70  0060  F390  F009   	movff	??_TMR3_ISR+13,btemp+8
 32793  018F76  0060  F38C  F008   	movff	??_TMR3_ISR+12,btemp+7
 32794  018F7C  0060  F388  F007   	movff	??_TMR3_ISR+11,btemp+6
 32795  018F82  0060  F384  F006   	movff	??_TMR3_ISR+10,btemp+5
 32796  018F88  0060  F380  F005   	movff	??_TMR3_ISR+9,btemp+4
 32797  018F8E  0060  F37C  F004   	movff	??_TMR3_ISR+8,btemp+3
 32798  018F94  0060  F378  F003   	movff	??_TMR3_ISR+7,btemp+2
 32799  018F9A  0060  F374  F002   	movff	??_TMR3_ISR+6,btemp+1
 32800  018FA0  0060  F370  F001   	movff	??_TMR3_ISR+5,btemp
 32801  018FA6  0060  F36F  FFF5   	movff	??_TMR3_ISR+4,tablat
 32802  018FAC  0060  F36B  FFF8   	movff	??_TMR3_ISR+3,tblptru
 32803  018FB2  0060  F367  FFF7   	movff	??_TMR3_ISR+2,tblptrh
 32804  018FB8  0060  F363  FFF6   	movff	??_TMR3_ISR+1,tblptrl
 32805  018FBE  0060  F35F  FFD8   	movff	??_TMR3_ISR,status
 32806  018FC4  0011               	retfie		f
 32807  018FC6                     __end_of_TMR3_ISR:
 32808                           	opt callstack 0
 32809                           
 32810 ;; *************** function _TMR3_WriteTimer *****************
 32811 ;; Defined at:
 32812 ;;		line 128 in file "mcc_generated_files/tmr3.c"
 32813 ;; Parameters:    Size  Location     Type
 32814 ;;  timerVal        2  [STACK] unsigned short 
 32815 ;; Auto vars:     Size  Location     Type
 32816 ;;		None
 32817 ;; Return value:  Size  Location     Type
 32818 ;;                  1  [STACK] void 
 32819 ;; Registers used:
 32820 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 32821 ;; Tracked objects:
 32822 ;;		On entry : 3F/39
 32823 ;;		On exit  : 0/0
 32824 ;;		Unchanged: 0/0
 32825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32826 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32827 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32829 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32830 ;;Total ram usage:        0 bytes
 32831 ;; Hardware stack levels used:    1
 32832 ;; Hardware stack levels required when called:    3
 32833 ;; This function calls:
 32834 ;;		Nothing
 32835 ;; This function is called by:
 32836 ;;		_TMR3_ISR
 32837 ;; This function uses a reentrant model
 32838 ;;
 32839                           
 32840                           	psect	text148
 32841  01B39C                     __ptext148:
 32842                           	opt callstack 0
 32843  01B39C                     _TMR3_WriteTimer:
 32844                           	opt callstack 13
 32845                           
 32846                           ;mcc_generated_files/tmr3.c: 128: void TMR3_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr3.c: 129: {;mcc_generated_files/tmr3.c: 130:     if (T3CONbits.NOT_SYNC == 1)
 32847                           
 32848                           ; BSR set to: 0
 32849                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32850                           ;incstack = 0
 32851  01B39C  A4A6               	btfss	166,2,c	;volatile
 32852  01B39E  D00F               	goto	l10657
 32853                           
 32854                           ;mcc_generated_files/tmr3.c: 131:     {;mcc_generated_files/tmr3.c: 133:         T3CONbi
      +                          ts.TMR3ON = 0;
 32855  01B3A0  90A6               	bcf	166,0,c	;volatile
 32856                           
 32857                           ;mcc_generated_files/tmr3.c: 136:         TMR3H = (timerVal >> 8);
 32858                           ;stkvar	_timerVal @ sp[(0)+-2]
 32859  01B3A2  0EFF               	movlw	255
 32860  01B3A4  24E1               	addwf	fsr1l,w,c
 32861  01B3A6  6ED9               	movwf	fsr2l,c
 32862  01B3A8  0EFF               	movlw	255
 32863  01B3AA  20E2               	addwfc	fsr1h,w,c
 32864  01B3AC  6EDA               	movwf	fsr2h,c
 32865  01B3AE  50DF               	movf	indf2,w,c
 32866  01B3B0  6EA5               	movwf	165,c	;volatile
 32867                           
 32868                           ;mcc_generated_files/tmr3.c: 137:         TMR3L = timerVal;
 32869                           ;stkvar	_timerVal @ sp[(0)+-2]
 32870  01B3B2  0EFE               	movlw	-2
 32871  01B3B4  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 32872                           
 32873                           ;mcc_generated_files/tmr3.c: 140:         T3CONbits.TMR3ON =1;
 32874  01B3BA  80A6               	bsf	166,0,c	;volatile
 32875                           
 32876                           ;mcc_generated_files/tmr3.c: 141:     }
 32877  01B3BC  D00C               	goto	l1190
 32878  01B3BE                     l10657:
 32879                           
 32880                           ;mcc_generated_files/tmr3.c: 143:     {;mcc_generated_files/tmr3.c: 145:         TMR3H =
      +                           (timerVal >> 8);
 32881                           ;stkvar	_timerVal @ sp[(0)+-2]
 32882  01B3BE  0EFF               	movlw	255
 32883  01B3C0  24E1               	addwf	fsr1l,w,c
 32884  01B3C2  6ED9               	movwf	fsr2l,c
 32885  01B3C4  0EFF               	movlw	255
 32886  01B3C6  20E2               	addwfc	fsr1h,w,c
 32887  01B3C8  6EDA               	movwf	fsr2h,c
 32888  01B3CA  50DF               	movf	indf2,w,c
 32889  01B3CC  6EA5               	movwf	165,c	;volatile
 32890                           
 32891                           ;mcc_generated_files/tmr3.c: 146:         TMR3L = timerVal;
 32892                           ;stkvar	_timerVal @ sp[(0)+-2]
 32893  01B3CE  0EFE               	movlw	-2
 32894  01B3D0  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 32895  01B3D6                     l1190:
 32896                           
 32897                           ; _TMR3_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 32898  01B3D6  52E5               	movf	postdec1,f,c
 32899  01B3D8  52E5               	movf	postdec1,f,c
 32900  01B3DA  0012               	return		;funcret
 32901  01B3DC                     __end_of_TMR3_WriteTimer:
 32902                           	opt callstack 0
 32903                           
 32904 ;; *************** function _TMR3_CallBack *****************
 32905 ;; Defined at:
 32906 ;;		line 184 in file "mcc_generated_files/tmr3.c"
 32907 ;; Parameters:    Size  Location     Type
 32908 ;;		None
 32909 ;; Auto vars:     Size  Location     Type
 32910 ;;		None
 32911 ;; Return value:  Size  Location     Type
 32912 ;;                  1  [STACK] void 
 32913 ;; Registers used:
 32914 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, tosl, tblptrl, tblptrh, tblptru, prodl, prodh
 32915 ;; Tracked objects:
 32916 ;;		On entry : 3F/0
 32917 ;;		On exit  : 0/0
 32918 ;;		Unchanged: 0/0
 32919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32920 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32921 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32923 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32924 ;;Total ram usage:        0 bytes
 32925 ;; Hardware stack levels used:    1
 32926 ;; Hardware stack levels required when called:   13
 32927 ;; This function calls:
 32928 ;;		Absolute function
 32929 ;;		_TMR3_DefaultInterruptHandler
 32930 ;;		_calc_bsoc
 32931 ;; This function is called by:
 32932 ;;		_TMR3_ISR
 32933 ;; This function uses a reentrant model
 32934 ;;
 32935                           
 32936                           	psect	text149
 32937  01BA8C                     __ptext149:
 32938                           	opt callstack 0
 32939  01BA8C                     _TMR3_CallBack:
 32940                           	opt callstack 3
 32941                           
 32942                           ;mcc_generated_files/tmr3.c: 187:     if(TMR3_InterruptHandler)
 32943                           
 32944                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32945                           ;incstack = 0
 32946  01BA8C  0100               	movlb	0	; () banked
 32947  01BA8E  51A2               	movf	_TMR3_InterruptHandler& (0+255),w,b
 32948  01BA90  11A3               	iorwf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 32949  01BA92  11A4               	iorwf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 32950  01BA94  B4D8               	btfsc	status,2,c
 32951  01BA96  0012               	return	
 32952                           
 32953                           ; BSR set to: 0
 32954                           ;mcc_generated_files/tmr3.c: 188:     {;mcc_generated_files/tmr3.c: 189:         TMR3_In
      +                          terruptHandler();
 32955  01BA98  D801               	call	u1235_28
 32956  01BA9A  0012               	return	
 32957  01BA9C                     u1235_28:
 32958  01BA9C  0005               	push	
 32959  01BA9E  6EFA               	movwf	pclath,c
 32960  01BAA0  51A2               	movf	_TMR3_InterruptHandler& (0+255),w,b
 32961  01BAA2  6EFD               	movwf	tosl,c
 32962  01BAA4  51A3               	movf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 32963  01BAA6  6EFE               	movwf	tosh,c
 32964  01BAA8  51A4               	movf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 32965  01BAAA  6EFF               	movwf	tosu,c
 32966  01BAAC  50FA               	movf	pclath,w,c
 32967  01BAAE  0012               	return		;indir
 32968  01BAB0                     __end_of_TMR3_CallBack:
 32969                           	opt callstack 0
 32970                           
 32971 ;; *************** function _TMR3_DefaultInterruptHandler *****************
 32972 ;; Defined at:
 32973 ;;		line 197 in file "mcc_generated_files/tmr3.c"
 32974 ;; Parameters:    Size  Location     Type
 32975 ;;		None
 32976 ;; Auto vars:     Size  Location     Type
 32977 ;;		None
 32978 ;; Return value:  Size  Location     Type
 32979 ;;                  1  [STACK] void 
 32980 ;; Registers used:
 32981 ;;		None
 32982 ;; Tracked objects:
 32983 ;;		On entry : 3F/0
 32984 ;;		On exit  : 0/0
 32985 ;;		Unchanged: 0/0
 32986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32987 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32988 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32989 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32990 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32991 ;;Total ram usage:        0 bytes
 32992 ;; Hardware stack levels used:    1
 32993 ;; Hardware stack levels required when called:    3
 32994 ;; This function calls:
 32995 ;;		Nothing
 32996 ;; This function is called by:
 32997 ;;		_TMR3_Initialize
 32998 ;;		_TMR3_CallBack
 32999 ;; This function uses a reentrant model
 33000 ;;
 33001                           
 33002                           	psect	text150
 33003  01BDF8                     __ptext150:
 33004                           	opt callstack 0
 33005  01BDF8                     _TMR3_DefaultInterruptHandler:
 33006                           	opt callstack 12
 33007                           
 33008                           ; _TMR3_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 33009                           
 33010                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33011                           ;incstack = 0
 33012  01BDF8  0012               	return		;funcret
 33013  01BDFA                     __end_of_TMR3_DefaultInterruptHandler:
 33014                           	opt callstack 0
 33015                           
 33016 ;; *************** function _calc_bsoc *****************
 33017 ;; Defined at:
 33018 ;;		line 39 in file "bsoc.c"
 33019 ;; Parameters:    Size  Location     Type
 33020 ;;		None
 33021 ;; Auto vars:     Size  Location     Type
 33022 ;;  log_ptr         2  [STACK] PTR unsigned char 
 33023 ;;		 -> port_data(512), 
 33024 ;; Return value:  Size  Location     Type
 33025 ;;                  1  [STACK] void 
 33026 ;; Registers used:
 33027 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 33028 ;; Tracked objects:
 33029 ;;		On entry : 3F/0
 33030 ;;		On exit  : 5/1
 33031 ;;		Unchanged: 0/0
 33032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33033 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33034 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33035 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33036 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33037 ;;Total ram usage:        0 bytes
 33038 ;; Hardware stack levels used:    1
 33039 ;; Hardware stack levels required when called:   12
 33040 ;; This function calls:
 33041 ;;		_StartTimer
 33042 ;;		___asfladd
 33043 ;;		___fldiv
 33044 ;;		___flge
 33045 ;;		___flmul
 33046 ;;		___flneg
 33047 ;;		___fltol
 33048 ;;		_fabsf
 33049 ;;		_get_ac_charger_relay
 33050 ;;		_port_data_dma_ptr
 33051 ;;		_send_port_data_dma
 33052 ;;		_sprintf
 33053 ;;		_strlen
 33054 ;; This function is called by:
 33055 ;;		_init_bsoc
 33056 ;;		_TMR3_CallBack
 33057 ;; This function uses a reentrant model
 33058 ;;
 33059                           
 33060                           	psect	text151
 33061  014326                     __ptext151:
 33062                           	opt callstack 0
 33063  014326                     _calc_bsoc:
 33064                           	opt callstack 0
 33065                           
 33066                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33067  014326  52E6               	movf	postinc1,f,c
 33068  014328  52E6               	movf	postinc1,f,c
 33069                           
 33070                           ;incstack = 0
 33071                           ;bsoc.c: 41:  uint8_t * log_ptr;;bsoc.c: 42:  static uint8_t log_update_wait = 0;;bsoc.c
      +                          : 44:  do { LATEbits.LATE1 = 1; } while(0);
 33072  01432A  82BE               	bsf	190,1,c	;volatile
 33073                           
 33074                           ;bsoc.c: 46:  C.dynamic_ah += (C.c_bat / 3600.0);
 33075  01432C  0E00               	movlw	0
 33076  01432E  6EE6               	movwf	postinc1,c
 33077  014330  0E00               	movlw	0
 33078  014332  6EE6               	movwf	postinc1,c
 33079  014334  0E61               	movlw	97
 33080  014336  6EE6               	movwf	postinc1,c
 33081  014338  0E45               	movlw	69
 33082  01433A  6EE6               	movwf	postinc1,c
 33083  01433C  EE21  F343         	lfsr	2,_C+68	;volatile
 33084  014340  006F FF7B FFE6     	movff	postinc2,postinc1
 33085  014346  006F FF7B FFE6     	movff	postinc2,postinc1
 33086  01434C  006F FF7B FFE6     	movff	postinc2,postinc1
 33087  014352  006F FF7B FFE6     	movff	postinc2,postinc1
 33088  014358  EC51  F0A5         	call	___fldiv	;wreg free
 33089  01435C  0060  F007  FFE6   	movff	btemp,postinc1
 33090  014362  0060  F00B  FFE6   	movff	btemp+1,postinc1
 33091  014368  0060  F00F  FFE6   	movff	btemp+2,postinc1
 33092  01436E  0060  F013  FFE6   	movff	btemp+3,postinc1
 33093  014374  0E8F               	movlw	low (_C+144)
 33094  014376  6EE6               	movwf	postinc1,c
 33095  014378  0E07               	movlw	high (_C+144)
 33096  01437A  6EE6               	movwf	postinc1,c
 33097  01437C  EC61  F0D5         	call	___asfladd	;wreg free
 33098                           
 33099                           ;bsoc.c: 47:  if (C.dynamic_ah > (C.bank_ah))
 33100  014380  EE21  F38F         	lfsr	2,_C+144	;volatile
 33101  014384  006F FF7B FFE6     	movff	postinc2,postinc1
 33102  01438A  006F FF7B FFE6     	movff	postinc2,postinc1
 33103  014390  006F FF7B FFE6     	movff	postinc2,postinc1
 33104  014396  006F FF7B FFE6     	movff	postinc2,postinc1
 33105  01439C  EE21  F38B         	lfsr	2,_C+140	;volatile
 33106  0143A0  006F FF7B FFE6     	movff	postinc2,postinc1
 33107  0143A6  006F FF7B FFE6     	movff	postinc2,postinc1
 33108  0143AC  006F FF7B FFE6     	movff	postinc2,postinc1
 33109  0143B2  006F FF7B FFE6     	movff	postinc2,postinc1
 33110  0143B8  EC81  F0C6         	call	___flge	;wreg free
 33111  0143BC  B001               	btfsc	btemp& (0+255),0,c
 33112  0143BE  D00E               	goto	l12617
 33113                           
 33114                           ;bsoc.c: 48:   C.dynamic_ah = C.bank_ah;
 33115  0143C0  EE21  F38B         	lfsr	2,_C+140	;volatile
 33116  0143C4  006F FF78  F78F    	movff	postinc2,_C+144	;volatile
 33117  0143CA  006F FF78  F790    	movff	postinc2,_C+145	;volatile
 33118  0143D0  006F FF78  F791    	movff	postinc2,_C+146	;volatile
 33119  0143D6  006F FF74  F792    	movff	postdec2,_C+147	;volatile
 33120  0143DC                     l12617:
 33121                           
 33122                           ;bsoc.c: 49:  if (C.dynamic_ah < 0.1)
 33123  0143DC  0ECD               	movlw	205
 33124  0143DE  6EE6               	movwf	postinc1,c
 33125  0143E0  0ECC               	movlw	204
 33126  0143E2  6EE6               	movwf	postinc1,c
 33127  0143E4  0ECC               	movlw	204
 33128  0143E6  6EE6               	movwf	postinc1,c
 33129  0143E8  0E3D               	movlw	61
 33130  0143EA  6EE6               	movwf	postinc1,c
 33131  0143EC  EE21  F38F         	lfsr	2,_C+144	;volatile
 33132  0143F0  006F FF7B FFE6     	movff	postinc2,postinc1
 33133  0143F6  006F FF7B FFE6     	movff	postinc2,postinc1
 33134  0143FC  006F FF7B FFE6     	movff	postinc2,postinc1
 33135  014402  006F FF7B FFE6     	movff	postinc2,postinc1
 33136  014408  EC81  F0C6         	call	___flge	;wreg free
 33137  01440C  B001               	btfsc	btemp& (0+255),0,c
 33138  01440E  D010               	goto	l12621
 33139                           
 33140                           ;bsoc.c: 50:   C.dynamic_ah = 0.1;
 33141  014410  0ECD               	movlw	205
 33142  014412  006F FFA0  F78F    	movff	wreg,_C+144	;volatile
 33143  014418  0ECC               	movlw	204
 33144  01441A  006F FFA0  F790    	movff	wreg,_C+145	;volatile
 33145  014420  0ECC               	movlw	204
 33146  014422  006F FFA0  F791    	movff	wreg,_C+146	;volatile
 33147  014428  0E3D               	movlw	61
 33148  01442A  006F FFA0  F792    	movff	wreg,_C+147	;volatile
 33149  014430                     l12621:
 33150                           
 33151                           ;bsoc.c: 52:  C.pv_ah += (C.c_pv / 3600.0);
 33152  014430  0E00               	movlw	0
 33153  014432  6EE6               	movwf	postinc1,c
 33154  014434  0E00               	movlw	0
 33155  014436  6EE6               	movwf	postinc1,c
 33156  014438  0E61               	movlw	97
 33157  01443A  6EE6               	movwf	postinc1,c
 33158  01443C  0E45               	movlw	69
 33159  01443E  6EE6               	movwf	postinc1,c
 33160  014440  EE21  F347         	lfsr	2,_C+72	;volatile
 33161  014444  006F FF7B FFE6     	movff	postinc2,postinc1
 33162  01444A  006F FF7B FFE6     	movff	postinc2,postinc1
 33163  014450  006F FF7B FFE6     	movff	postinc2,postinc1
 33164  014456  006F FF7B FFE6     	movff	postinc2,postinc1
 33165  01445C  EC51  F0A5         	call	___fldiv	;wreg free
 33166  014460  0060  F007  FFE6   	movff	btemp,postinc1
 33167  014466  0060  F00B  FFE6   	movff	btemp+1,postinc1
 33168  01446C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 33169  014472  0060  F013  FFE6   	movff	btemp+3,postinc1
 33170  014478  0E93               	movlw	low (_C+148)
 33171  01447A  6EE6               	movwf	postinc1,c
 33172  01447C  0E07               	movlw	high (_C+148)
 33173  01447E  6EE6               	movwf	postinc1,c
 33174  014480  EC61  F0D5         	call	___asfladd	;wreg free
 33175                           
 33176                           ;bsoc.c: 53:  C.pvkw += (C.p_pv / 3600.0);
 33177  014484  0E00               	movlw	0
 33178  014486  6EE6               	movwf	postinc1,c
 33179  014488  0E00               	movlw	0
 33180  01448A  6EE6               	movwf	postinc1,c
 33181  01448C  0E61               	movlw	97
 33182  01448E  6EE6               	movwf	postinc1,c
 33183  014490  0E45               	movlw	69
 33184  014492  6EE6               	movwf	postinc1,c
 33185  014494  EE21  F37B         	lfsr	2,_C+124	;volatile
 33186  014498  006F FF7B FFE6     	movff	postinc2,postinc1
 33187  01449E  006F FF7B FFE6     	movff	postinc2,postinc1
 33188  0144A4  006F FF7B FFE6     	movff	postinc2,postinc1
 33189  0144AA  006F FF7B FFE6     	movff	postinc2,postinc1
 33190  0144B0  EC51  F0A5         	call	___fldiv	;wreg free
 33191  0144B4  0060  F007  FFE6   	movff	btemp,postinc1
 33192  0144BA  0060  F00B  FFE6   	movff	btemp+1,postinc1
 33193  0144C0  0060  F00F  FFE6   	movff	btemp+2,postinc1
 33194  0144C6  0060  F013  FFE6   	movff	btemp+3,postinc1
 33195  0144CC  0EA3               	movlw	low (_C+164)
 33196  0144CE  6EE6               	movwf	postinc1,c
 33197  0144D0  0E07               	movlw	high (_C+164)
 33198  0144D2  6EE6               	movwf	postinc1,c
 33199  0144D4  EC61  F0D5         	call	___asfladd	;wreg free
 33200                           
 33201                           ;bsoc.c: 54:  C.invkw += (C.p_inverter / 3600.0);
 33202  0144D8  0E00               	movlw	0
 33203  0144DA  6EE6               	movwf	postinc1,c
 33204  0144DC  0E00               	movlw	0
 33205  0144DE  6EE6               	movwf	postinc1,c
 33206  0144E0  0E61               	movlw	97
 33207  0144E2  6EE6               	movwf	postinc1,c
 33208  0144E4  0E45               	movlw	69
 33209  0144E6  6EE6               	movwf	postinc1,c
 33210  0144E8  EE21  F377         	lfsr	2,_C+120	;volatile
 33211  0144EC  006F FF7B FFE6     	movff	postinc2,postinc1
 33212  0144F2  006F FF7B FFE6     	movff	postinc2,postinc1
 33213  0144F8  006F FF7B FFE6     	movff	postinc2,postinc1
 33214  0144FE  006F FF7B FFE6     	movff	postinc2,postinc1
 33215  014504  EC51  F0A5         	call	___fldiv	;wreg free
 33216  014508  0060  F007  FFE6   	movff	btemp,postinc1
 33217  01450E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 33218  014514  0060  F00F  FFE6   	movff	btemp+2,postinc1
 33219  01451A  0060  F013  FFE6   	movff	btemp+3,postinc1
 33220  014520  0EA7               	movlw	low (_C+168)
 33221  014522  6EE6               	movwf	postinc1,c
 33222  014524  0E07               	movlw	high (_C+168)
 33223  014526  6EE6               	movwf	postinc1,c
 33224  014528  EC61  F0D5         	call	___asfladd	;wreg free
 33225                           
 33226                           ;bsoc.c: 55:  C.loadkw += (C.p_load / 3600.0);
 33227  01452C  0E00               	movlw	0
 33228  01452E  6EE6               	movwf	postinc1,c
 33229  014530  0E00               	movlw	0
 33230  014532  6EE6               	movwf	postinc1,c
 33231  014534  0E61               	movlw	97
 33232  014536  6EE6               	movwf	postinc1,c
 33233  014538  0E45               	movlw	69
 33234  01453A  6EE6               	movwf	postinc1,c
 33235  01453C  EE21  F373         	lfsr	2,_C+116	;volatile
 33236  014540  006F FF7B FFE6     	movff	postinc2,postinc1
 33237  014546  006F FF7B FFE6     	movff	postinc2,postinc1
 33238  01454C  006F FF7B FFE6     	movff	postinc2,postinc1
 33239  014552  006F FF7B FFE6     	movff	postinc2,postinc1
 33240  014558  EC51  F0A5         	call	___fldiv	;wreg free
 33241  01455C  0060  F007  FFE6   	movff	btemp,postinc1
 33242  014562  0060  F00B  FFE6   	movff	btemp+1,postinc1
 33243  014568  0060  F00F  FFE6   	movff	btemp+2,postinc1
 33244  01456E  0060  F013  FFE6   	movff	btemp+3,postinc1
 33245  014574  0EAB               	movlw	low (_C+172)
 33246  014576  6EE6               	movwf	postinc1,c
 33247  014578  0E07               	movlw	high (_C+172)
 33248  01457A  6EE6               	movwf	postinc1,c
 33249  01457C  EC61  F0D5         	call	___asfladd	;wreg free
 33250                           
 33251                           ;bsoc.c: 56:  if (C.p_bat > 0.0)
 33252  014580  EE21  F37F         	lfsr	2,_C+128	;volatile
 33253  014584  006F FF7B FFE6     	movff	postinc2,postinc1
 33254  01458A  006F FF7B FFE6     	movff	postinc2,postinc1
 33255  014590  006F FF7B FFE6     	movff	postinc2,postinc1
 33256  014596  006F FF7B FFE6     	movff	postinc2,postinc1
 33257  01459C  0E00               	movlw	0
 33258  01459E  6EE6               	movwf	postinc1,c
 33259  0145A0  0E00               	movlw	0
 33260  0145A2  6EE6               	movwf	postinc1,c
 33261  0145A4  0E00               	movlw	0
 33262  0145A6  6EE6               	movwf	postinc1,c
 33263  0145A8  0E00               	movlw	0
 33264  0145AA  6EE6               	movwf	postinc1,c
 33265  0145AC  EC81  F0C6         	call	___flge	;wreg free
 33266  0145B0  B001               	btfsc	btemp& (0+255),0,c
 33267  0145B2  D02A               	goto	l12627
 33268                           
 33269                           ;bsoc.c: 57:   C.bkwi += (C.p_bat / 3600.0);
 33270  0145B4  0E00               	movlw	0
 33271  0145B6  6EE6               	movwf	postinc1,c
 33272  0145B8  0E00               	movlw	0
 33273  0145BA  6EE6               	movwf	postinc1,c
 33274  0145BC  0E61               	movlw	97
 33275  0145BE  6EE6               	movwf	postinc1,c
 33276  0145C0  0E45               	movlw	69
 33277  0145C2  6EE6               	movwf	postinc1,c
 33278  0145C4  EE21  F37F         	lfsr	2,_C+128	;volatile
 33279  0145C8  006F FF7B FFE6     	movff	postinc2,postinc1
 33280  0145CE  006F FF7B FFE6     	movff	postinc2,postinc1
 33281  0145D4  006F FF7B FFE6     	movff	postinc2,postinc1
 33282  0145DA  006F FF7B FFE6     	movff	postinc2,postinc1
 33283  0145E0  EC51  F0A5         	call	___fldiv	;wreg free
 33284  0145E4  0060  F007  FFE6   	movff	btemp,postinc1
 33285  0145EA  0060  F00B  FFE6   	movff	btemp+1,postinc1
 33286  0145F0  0060  F00F  FFE6   	movff	btemp+2,postinc1
 33287  0145F6  0060  F013  FFE6   	movff	btemp+3,postinc1
 33288  0145FC  0E9B               	movlw	low (_C+156)
 33289  0145FE  6EE6               	movwf	postinc1,c
 33290  014600  0E07               	movlw	high (_C+156)
 33291  014602  6EE6               	movwf	postinc1,c
 33292  014604  EC61  F0D5         	call	___asfladd	;wreg free
 33293  014608                     l12627:
 33294                           
 33295                           ;bsoc.c: 58:  if (C.p_bat < 0.0)
 33296  014608  EE21  F37F         	lfsr	2,_C+128	;volatile
 33297  01460C  0E03               	movlw	3
 33298  01460E  AEDB               	btfss	plusw2,7,c
 33299  014610  D038               	goto	l12631
 33300                           
 33301                           ;bsoc.c: 59:   C.bkwo += fabsf(C.p_bat / 3600.0);
 33302  014612  0E00               	movlw	0
 33303  014614  6EE6               	movwf	postinc1,c
 33304  014616  0E00               	movlw	0
 33305  014618  6EE6               	movwf	postinc1,c
 33306  01461A  0E61               	movlw	97
 33307  01461C  6EE6               	movwf	postinc1,c
 33308  01461E  0E45               	movlw	69
 33309  014620  6EE6               	movwf	postinc1,c
 33310  014622  EE21  F37F         	lfsr	2,_C+128	;volatile
 33311  014626  006F FF7B FFE6     	movff	postinc2,postinc1
 33312  01462C  006F FF7B FFE6     	movff	postinc2,postinc1
 33313  014632  006F FF7B FFE6     	movff	postinc2,postinc1
 33314  014638  006F FF7B FFE6     	movff	postinc2,postinc1
 33315  01463E  EC51  F0A5         	call	___fldiv	;wreg free
 33316  014642  0060  F007  FFE6   	movff	btemp,postinc1
 33317  014648  0060  F00B  FFE6   	movff	btemp+1,postinc1
 33318  01464E  0060  F00F  FFE6   	movff	btemp+2,postinc1
 33319  014654  0060  F013  FFE6   	movff	btemp+3,postinc1
 33320  01465A  EC8B  F0D1         	call	_fabsf	;wreg free
 33321  01465E  0060  F007  FFE6   	movff	btemp,postinc1
 33322  014664  0060  F00B  FFE6   	movff	btemp+1,postinc1
 33323  01466A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 33324  014670  0060  F013  FFE6   	movff	btemp+3,postinc1
 33325  014676  0E9F               	movlw	low (_C+160)
 33326  014678  6EE6               	movwf	postinc1,c
 33327  01467A  0E07               	movlw	high (_C+160)
 33328  01467C  6EE6               	movwf	postinc1,c
 33329  01467E  EC61  F0D5         	call	___asfladd	;wreg free
 33330  014682                     l12631:
 33331                           
 33332                           ;bsoc.c: 61:  C.soc = ((uint16_t) ((C.dynamic_ah / C.bank_ah)*100.0) + 1);
 33333  014682  0E00               	movlw	0
 33334  014684  6EE6               	movwf	postinc1,c
 33335  014686  0E00               	movlw	0
 33336  014688  6EE6               	movwf	postinc1,c
 33337  01468A  0EC8               	movlw	200
 33338  01468C  6EE6               	movwf	postinc1,c
 33339  01468E  0E42               	movlw	66
 33340  014690  6EE6               	movwf	postinc1,c
 33341  014692  EE21  F38B         	lfsr	2,_C+140	;volatile
 33342  014696  006F FF7B FFE6     	movff	postinc2,postinc1
 33343  01469C  006F FF7B FFE6     	movff	postinc2,postinc1
 33344  0146A2  006F FF7B FFE6     	movff	postinc2,postinc1
 33345  0146A8  006F FF7B FFE6     	movff	postinc2,postinc1
 33346  0146AE  EE21  F38F         	lfsr	2,_C+144	;volatile
 33347  0146B2  006F FF7B FFE6     	movff	postinc2,postinc1
 33348  0146B8  006F FF7B FFE6     	movff	postinc2,postinc1
 33349  0146BE  006F FF7B FFE6     	movff	postinc2,postinc1
 33350  0146C4  006F FF7B FFE6     	movff	postinc2,postinc1
 33351  0146CA  EC51  F0A5         	call	___fldiv	;wreg free
 33352  0146CE  0060  F007  FFE6   	movff	btemp,postinc1
 33353  0146D4  0060  F00B  FFE6   	movff	btemp+1,postinc1
 33354  0146DA  0060  F00F  FFE6   	movff	btemp+2,postinc1
 33355  0146E0  0060  F013  FFE6   	movff	btemp+3,postinc1
 33356  0146E6  ECA0  F099         	call	___flmul	;wreg free
 33357  0146EA  0060  F007  FFE6   	movff	btemp,postinc1
 33358  0146F0  0060  F00B  FFE6   	movff	btemp+1,postinc1
 33359  0146F6  0060  F00F  FFE6   	movff	btemp+2,postinc1
 33360  0146FC  0060  F013  FFE6   	movff	btemp+3,postinc1
 33361  014702  ECC8  F0C5         	call	___fltol	;wreg free
 33362  014706  0060  F004  F00B   	movff	btemp,btemp+10
 33363  01470C  0060  F008  F00C   	movff	btemp+1,btemp+11
 33364  014712  0E01               	movlw	1
 33365  014714  260B               	addwf	(btemp+10)^0,f,c
 33366  014716  0E00               	movlw	0
 33367  014718  220C               	addwfc	(btemp+11)^0,f,c
 33368  01471A  0060  F02C  F7B1   	movff	btemp+10,_C+178	;volatile
 33369  014720  0060  F030  F7B2   	movff	btemp+11,_C+179	;volatile
 33370                           
 33371                           ;bsoc.c: 62:  if (C.soc > 100)
 33372  014726  EE21  F3B1         	lfsr	2,_C+178	;volatile
 33373  01472A  0E01               	movlw	1
 33374  01472C  50DB               	movf	plusw2,w,c
 33375  01472E  E104               	bnz	u1228_20
 33376  014730  0E65               	movlw	101
 33377  014732  5CDE               	subwf	postinc2,w,c
 33378  014734  A0D8               	btfss	status,0,c
 33379  014736  D008               	goto	l12637
 33380  014738                     u1228_20:
 33381                           
 33382                           ;bsoc.c: 63:   C.soc = 100;
 33383  014738  0E64               	movlw	100
 33384  01473A  006F FFA0  F7B1    	movff	wreg,_C+178	;volatile
 33385  014740  0E00               	movlw	0
 33386  014742  006F FFA0  F7B2    	movff	wreg,_C+179	;volatile
 33387  014748                     l12637:
 33388                           
 33389                           ;bsoc.c: 65:  if (C.c_bat < 0.0) {
 33390  014748  EE21  F343         	lfsr	2,_C+68	;volatile
 33391  01474C  0E03               	movlw	3
 33392  01474E  AEDB               	btfss	plusw2,7,c
 33393  014750  D047               	goto	l2038
 33394                           
 33395                           ;bsoc.c: 66:   C.runtime = (uint16_t) (-(C.dynamic_ah / C.c_bat));
 33396  014752  EE21  F343         	lfsr	2,_C+68	;volatile
 33397  014756  006F FF7B FFE6     	movff	postinc2,postinc1
 33398  01475C  006F FF7B FFE6     	movff	postinc2,postinc1
 33399  014762  006F FF7B FFE6     	movff	postinc2,postinc1
 33400  014768  006F FF7B FFE6     	movff	postinc2,postinc1
 33401  01476E  EE21  F38F         	lfsr	2,_C+144	;volatile
 33402  014772  006F FF7B FFE6     	movff	postinc2,postinc1
 33403  014778  006F FF7B FFE6     	movff	postinc2,postinc1
 33404  01477E  006F FF7B FFE6     	movff	postinc2,postinc1
 33405  014784  006F FF7B FFE6     	movff	postinc2,postinc1
 33406  01478A  EC51  F0A5         	call	___fldiv	;wreg free
 33407  01478E  0060  F007  FFE6   	movff	btemp,postinc1
 33408  014794  0060  F00B  FFE6   	movff	btemp+1,postinc1
 33409  01479A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 33410  0147A0  0060  F013  FFE6   	movff	btemp+3,postinc1
 33411  0147A6  EC55  F0D8         	call	___flneg	;wreg free
 33412  0147AA  0060  F007  FFE6   	movff	btemp,postinc1
 33413  0147B0  0060  F00B  FFE6   	movff	btemp+1,postinc1
 33414  0147B6  0060  F00F  FFE6   	movff	btemp+2,postinc1
 33415  0147BC  0060  F013  FFE6   	movff	btemp+3,postinc1
 33416  0147C2  ECC8  F0C5         	call	___fltol	;wreg free
 33417  0147C6  0060  F004  F00B   	movff	btemp,btemp+10
 33418  0147CC  0060  F008  F00C   	movff	btemp+1,btemp+11
 33419  0147D2  0060  F02C  F7AF   	movff	btemp+10,_C+176	;volatile
 33420  0147D8  0060  F030  F7B0   	movff	btemp+11,_C+177	;volatile
 33421                           
 33422                           ;bsoc.c: 67:  } else {
 33423  0147DE  D008               	goto	l12641
 33424  0147E0                     l2038:
 33425                           
 33426                           ;bsoc.c: 68:   C.runtime = 120;
 33427  0147E0  0E78               	movlw	120
 33428  0147E2  006F FFA0  F7AF    	movff	wreg,_C+176	;volatile
 33429  0147E8  0E00               	movlw	0
 33430  0147EA  006F FFA0  F7B0    	movff	wreg,_C+177	;volatile
 33431  0147F0                     l12641:
 33432                           
 33433                           ;bsoc.c: 70:  if (C.runtime > 120)
 33434  0147F0  EE21  F3AF         	lfsr	2,_C+176	;volatile
 33435  0147F4  0E01               	movlw	1
 33436  0147F6  50DB               	movf	plusw2,w,c
 33437  0147F8  E104               	bnz	u1230_20
 33438  0147FA  0E79               	movlw	121
 33439  0147FC  5CDE               	subwf	postinc2,w,c
 33440  0147FE  A0D8               	btfss	status,0,c
 33441  014800  D008               	goto	l12645
 33442  014802                     u1230_20:
 33443                           
 33444                           ;bsoc.c: 71:   C.runtime = 120;
 33445  014802  0E78               	movlw	120
 33446  014804  006F FFA0  F7AF    	movff	wreg,_C+176	;volatile
 33447  01480A  0E00               	movlw	0
 33448  01480C  006F FFA0  F7B0    	movff	wreg,_C+177	;volatile
 33449  014812                     l12645:
 33450                           
 33451                           ;bsoc.c: 73:  V.lowint_count++;
 33452  014812  0E01               	movlw	1
 33453  014814  0101               	movlb	1	; () banked
 33454  014816  27E3               	addwf	(_V+179)& (0+255),f,b	;volatile
 33455  014818  0E00               	movlw	0
 33456  01481A  23E4               	addwfc	(_V+180)& (0+255),f,b	;volatile
 33457  01481C  23E5               	addwfc	(_V+181)& (0+255),f,b	;volatile
 33458  01481E  23E6               	addwfc	(_V+182)& (0+255),f,b	;volatile
 33459                           
 33460                           ;bsoc.c: 75:  if (!log_update_wait++ && V.system_stable) {
 33461  014820  2A41               	incf	calc_bsoc@log_update_wait^0,f,c
 33462  014822  0441               	decf	calc_bsoc@log_update_wait^0,w,c
 33463  014824  A4D8               	btfss	status,2,c
 33464  014826  D131               	goto	l12657
 33465                           
 33466                           ; BSR set to: 1
 33467  014828  51DE               	movf	(_V+174)& (0+255),w,b	;volatile
 33468  01482A  B4D8               	btfsc	status,2,c
 33469  01482C  D12E               	goto	l12657
 33470                           
 33471                           ; BSR set to: 1
 33472                           ;bsoc.c: 76:   log_ptr = port_data_dma_ptr();
 33473  01482E  ECC0  F0DE         	call	_port_data_dma_ptr	;wreg free
 33474                           
 33475                           ;stkvar	_log_ptr @ sp[(-2)+0]
 33476  014832  0EFF               	movlw	-1
 33477  014834  0060  F00B  FFE3   	movff	btemp+1,plusw1
 33478  01483A  0EFE               	movlw	-2
 33479  01483C  0060  F007  FFE3   	movff	btemp,plusw1
 33480                           
 33481                           ;bsoc.c: 77:   sprintf((char*) log_ptr, " %c ,%lu,%4.4f,%4.4f,%4.4f,%4.4f,%4.3f,%4.3f,%4
      +                          .3f,%4.3f,%4.3f,%4.3f,%d,%d,%2.6f,%4.3f,%d,%d,%lu,%lu\r\n",
 33482  014842  EE22  F022         	lfsr	2,_C+291	;volatile
 33483  014846  006F FF7B FFE6     	movff	postinc2,postinc1
 33484  01484C  006F FF7B FFE6     	movff	postinc2,postinc1
 33485  014852  006F FF7B FFE6     	movff	postinc2,postinc1
 33486  014858  006F FF7B FFE6     	movff	postinc2,postinc1
 33487  01485E  EE22  F01E         	lfsr	2,_C+287	;volatile
 33488  014862  006F FF7B FFE6     	movff	postinc2,postinc1
 33489  014868  006F FF7B FFE6     	movff	postinc2,postinc1
 33490  01486E  006F FF7B FFE6     	movff	postinc2,postinc1
 33491  014874  006F FF7B FFE6     	movff	postinc2,postinc1
 33492  01487A  EE22  F01D         	lfsr	2,_C+286	;volatile
 33493  01487E  50DF               	movf	indf2,w,c
 33494  014880  6EE6               	movwf	postinc1,c
 33495  014882  0E00               	movlw	0
 33496  014884  6EE6               	movwf	postinc1,c
 33497  014886  ECA4  F0DE         	call	_get_ac_charger_relay	;wreg free
 33498  01488A  5001               	movf	btemp^0,w,c
 33499  01488C  6EE6               	movwf	postinc1,c
 33500  01488E  0E00               	movlw	0
 33501  014890  6EE6               	movwf	postinc1,c
 33502  014892  EE21  F367         	lfsr	2,_C+104	;volatile
 33503  014896  006F FF7B FFE6     	movff	postinc2,postinc1
 33504  01489C  006F FF7B FFE6     	movff	postinc2,postinc1
 33505  0148A2  006F FF7B FFE6     	movff	postinc2,postinc1
 33506  0148A8  006F FF7B FFE6     	movff	postinc2,postinc1
 33507  0148AE  EE21  F387         	lfsr	2,_C+136	;volatile
 33508  0148B2  006F FF7B FFE6     	movff	postinc2,postinc1
 33509  0148B8  006F FF7B FFE6     	movff	postinc2,postinc1
 33510  0148BE  006F FF7B FFE6     	movff	postinc2,postinc1
 33511  0148C4  006F FF7B FFE6     	movff	postinc2,postinc1
 33512  0148CA  EE21  F3AF         	lfsr	2,_C+176	;volatile
 33513  0148CE  006F FF78  F00B    	movff	postinc2,btemp+10
 33514  0148D4  006F FF74  F00C    	movff	postdec2,btemp+11
 33515  0148DA  0060  F02F  FFE6   	movff	btemp+10,postinc1
 33516  0148E0  0060  F033  FFE6   	movff	btemp+11,postinc1
 33517  0148E6  EE21  F3B1         	lfsr	2,_C+178	;volatile
 33518  0148EA  006F FF78  F00B    	movff	postinc2,btemp+10
 33519  0148F0  006F FF74  F00C    	movff	postdec2,btemp+11
 33520  0148F6  0060  F02F  FFE6   	movff	btemp+10,postinc1
 33521  0148FC  0060  F033  FFE6   	movff	btemp+11,postinc1
 33522  014902  EE21  F393         	lfsr	2,_C+148	;volatile
 33523  014906  006F FF7B FFE6     	movff	postinc2,postinc1
 33524  01490C  006F FF7B FFE6     	movff	postinc2,postinc1
 33525  014912  006F FF7B FFE6     	movff	postinc2,postinc1
 33526  014918  006F FF7B FFE6     	movff	postinc2,postinc1
 33527  01491E  EE21  F38F         	lfsr	2,_C+144	;volatile
 33528  014922  006F FF7B FFE6     	movff	postinc2,postinc1
 33529  014928  006F FF7B FFE6     	movff	postinc2,postinc1
 33530  01492E  006F FF7B FFE6     	movff	postinc2,postinc1
 33531  014934  006F FF7B FFE6     	movff	postinc2,postinc1
 33532  01493A  EE21  F377         	lfsr	2,_C+120	;volatile
 33533  01493E  006F FF7B FFE6     	movff	postinc2,postinc1
 33534  014944  006F FF7B FFE6     	movff	postinc2,postinc1
 33535  01494A  006F FF7B FFE6     	movff	postinc2,postinc1
 33536  014950  006F FF7B FFE6     	movff	postinc2,postinc1
 33537  014956  EE21  F373         	lfsr	2,_C+116	;volatile
 33538  01495A  006F FF7B FFE6     	movff	postinc2,postinc1
 33539  014960  006F FF7B FFE6     	movff	postinc2,postinc1
 33540  014966  006F FF7B FFE6     	movff	postinc2,postinc1
 33541  01496C  006F FF7B FFE6     	movff	postinc2,postinc1
 33542  014972  EE21  F37B         	lfsr	2,_C+124	;volatile
 33543  014976  006F FF7B FFE6     	movff	postinc2,postinc1
 33544  01497C  006F FF7B FFE6     	movff	postinc2,postinc1
 33545  014982  006F FF7B FFE6     	movff	postinc2,postinc1
 33546  014988  006F FF7B FFE6     	movff	postinc2,postinc1
 33547  01498E  EE21  F37F         	lfsr	2,_C+128	;volatile
 33548  014992  006F FF7B FFE6     	movff	postinc2,postinc1
 33549  014998  006F FF7B FFE6     	movff	postinc2,postinc1
 33550  01499E  006F FF7B FFE6     	movff	postinc2,postinc1
 33551  0149A4  006F FF7B FFE6     	movff	postinc2,postinc1
 33552  0149AA  EE21  F363         	lfsr	2,_C+100	;volatile
 33553  0149AE  006F FF7B FFE6     	movff	postinc2,postinc1
 33554  0149B4  006F FF7B FFE6     	movff	postinc2,postinc1
 33555  0149BA  006F FF7B FFE6     	movff	postinc2,postinc1
 33556  0149C0  006F FF7B FFE6     	movff	postinc2,postinc1
 33557  0149C6  EE21  F34B         	lfsr	2,_C+76	;volatile
 33558  0149CA  006F FF7B FFE6     	movff	postinc2,postinc1
 33559  0149D0  006F FF7B FFE6     	movff	postinc2,postinc1
 33560  0149D6  006F FF7B FFE6     	movff	postinc2,postinc1
 33561  0149DC  006F FF7B FFE6     	movff	postinc2,postinc1
 33562  0149E2  EE21  F34F         	lfsr	2,_C+80	;volatile
 33563  0149E6  006F FF7B FFE6     	movff	postinc2,postinc1
 33564  0149EC  006F FF7B FFE6     	movff	postinc2,postinc1
 33565  0149F2  006F FF7B FFE6     	movff	postinc2,postinc1
 33566  0149F8  006F FF7B FFE6     	movff	postinc2,postinc1
 33567  0149FE  EE21  F353         	lfsr	2,_C+84	;volatile
 33568  014A02  006F FF7B FFE6     	movff	postinc2,postinc1
 33569  014A08  006F FF7B FFE6     	movff	postinc2,postinc1
 33570  014A0E  006F FF7B FFE6     	movff	postinc2,postinc1
 33571  014A14  006F FF7B FFE6     	movff	postinc2,postinc1
 33572  014A1A  0060  F6C7  FFE6   	movff	_V+129,postinc1
 33573  014A20  0060  F6CB  FFE6   	movff	_V+130,postinc1
 33574  014A26  0060  F6CF  FFE6   	movff	_V+131,postinc1
 33575  014A2C  0060  F6D3  FFE6   	movff	_V+132,postinc1
 33576  014A32  0E31               	movlw	49
 33577  014A34  6EE6               	movwf	postinc1,c
 33578  014A36  0E00               	movlw	0
 33579  014A38  6EE6               	movwf	postinc1,c
 33580  014A3A  0E53               	movlw	low STR_65
 33581  014A3C  6EE6               	movwf	postinc1,c
 33582  014A3E  0EFC               	movlw	high STR_65
 33583  014A40  6EE6               	movwf	postinc1,c
 33584                           
 33585                           ;stkvar	_log_ptr @ sp[(-74)+0]
 33586  014A42  0EB6               	movlw	-74
 33587  014A44  006F FF8F FFE6     	movff	plusw1,postinc1
 33588  014A4A  006F FF8F FFE6     	movff	plusw1,postinc1
 33589  014A50  0E4A               	movlw	74
 33590  014A52  6EE6               	movwf	postinc1,c
 33591  014A54  EC21  F0CD         	call	_sprintf	;wreg free
 33592                           
 33593                           ; BSR set to: 0
 33594                           ;bsoc.c: 83:   StartTimer(TMR_DISPLAY, 125);
 33595  014A58  0E7D               	movlw	125
 33596  014A5A  6EE6               	movwf	postinc1,c
 33597  014A5C  0E00               	movlw	0
 33598  014A5E  6EE6               	movwf	postinc1,c
 33599  014A60  0E0A               	movlw	10
 33600  014A62  6EE6               	movwf	postinc1,c
 33601  014A64  EC6E  F0D9         	call	_StartTimer	;wreg free
 33602                           
 33603                           ;bsoc.c: 84:   send_port_data_dma(strlen((char*) log_ptr));
 33604                           ;stkvar	_log_ptr @ sp[(-2)+0]
 33605  014A68  0EFE               	movlw	-2
 33606  014A6A  006F FF8F FFE6     	movff	plusw1,postinc1
 33607  014A70  006F FF8F FFE6     	movff	plusw1,postinc1
 33608  014A76  ECE0  F0D2         	call	_strlen	;wreg free
 33609  014A7A  0060  F007  FFE6   	movff	btemp,postinc1
 33610  014A80  0060  F00B  FFE6   	movff	btemp+1,postinc1
 33611  014A86  ECE0  F0D7         	call	_send_port_data_dma	;wreg free
 33612  014A8A                     l12657:
 33613                           
 33614                           ;bsoc.c: 86:  if (log_update_wait >= 10)
 33615  014A8A  0E09               	movlw	9
 33616  014A8C  6441               	cpfsgt	calc_bsoc@log_update_wait^0,c
 33617  014A8E  D001               	goto	l2042
 33618                           
 33619                           ;bsoc.c: 87:   log_update_wait = 0;
 33620  014A90  6A41               	clrf	calc_bsoc@log_update_wait^0,c
 33621  014A92                     l2042:
 33622                           
 33623                           ;bsoc.c: 89:  C.update = 0;
 33624  014A92  0E00               	movlw	0
 33625  014A94  006F FFA0  F7B3    	movff	wreg,_C+180	;volatile
 33626                           
 33627                           ;bsoc.c: 91:  do { LATEbits.LATE1 = 0; } while(0);
 33628  014A9A  92BE               	bcf	190,1,c	;volatile
 33629                           
 33630                           ; _calc_bsoc: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 33631  014A9C  52E5               	movf	postdec1,f,c
 33632  014A9E  52E5               	movf	postdec1,f,c
 33633  014AA0  0012               	return		;funcret
 33634  014AA2                     __end_of_calc_bsoc:
 33635                           	opt callstack 0
 33636                           
 33637 ;; *************** function _send_port_data_dma *****************
 33638 ;; Defined at:
 33639 ;;		line 258 in file "eadog.c"
 33640 ;; Parameters:    Size  Location     Type
 33641 ;;  dsize           2  [STACK] unsigned short 
 33642 ;; Auto vars:     Size  Location     Type
 33643 ;;		None
 33644 ;; Return value:  Size  Location     Type
 33645 ;;                  1  [STACK] void 
 33646 ;; Registers used:
 33647 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 33648 ;; Tracked objects:
 33649 ;;		On entry : 0/0
 33650 ;;		On exit  : 3F/3B
 33651 ;;		Unchanged: 0/0
 33652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33653 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33654 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33655 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33656 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33657 ;;Total ram usage:        0 bytes
 33658 ;; Hardware stack levels used:    1
 33659 ;; Hardware stack levels required when called:    3
 33660 ;; This function calls:
 33661 ;;		Nothing
 33662 ;; This function is called by:
 33663 ;;		_calc_bsoc
 33664 ;; This function uses a reentrant model
 33665 ;;
 33666                           
 33667                           	psect	text152
 33668  01AFC0                     __ptext152:
 33669                           	opt callstack 0
 33670  01AFC0                     _send_port_data_dma:
 33671                           	opt callstack 11
 33672                           
 33673                           ;eadog.c: 258: void send_port_data_dma(uint16_t dsize);eadog.c: 259: {;eadog.c: 260:  if
      +                           (dsize > 512)
 33674                           ;stkvar	_dsize @ sp[(0)+-2]
 33675                           
 33676                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33677                           ;incstack = 0
 33678  01AFC0  0EFE               	movlw	-2
 33679  01AFC2  04E3               	decf	plusw1,w,c
 33680  01AFC4  0EFF               	movlw	-1
 33681  01AFC6  006F FF8C  F001    	movff	plusw1,btemp
 33682  01AFCC  0E02               	movlw	2
 33683  01AFCE  5A01               	subwfb	btemp^0,f,c
 33684  01AFD0  A0D8               	btfss	status,0,c
 33685  01AFD2  D00C               	goto	l9859
 33686                           
 33687                           ;eadog.c: 261:   dsize = 512;
 33688  01AFD4  0E00               	movlw	0
 33689  01AFD6  6E0B               	movwf	(btemp+10)^0,c
 33690  01AFD8  0E02               	movlw	2
 33691  01AFDA  6E0C               	movwf	(btemp+11)^0,c
 33692                           
 33693                           ;stkvar	_dsize @ sp[(0)+-2]
 33694  01AFDC  0EFE               	movlw	-2
 33695  01AFDE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 33696  01AFE4  0EFF               	movlw	-1
 33697  01AFE6  0060  F033  FFE3   	movff	btemp+11,plusw1
 33698  01AFEC                     l9859:
 33699                           
 33700                           ;eadog.c: 263:  DMA2CON0bits.EN = 0;
 33701  01AFEC  013B               	movlb	59	; () banked
 33702  01AFEE  9FDC               	bcf	220,7,b	;volatile
 33703                           
 33704                           ; BSR set to: 59
 33705                           ;eadog.c: 264:  DMA2SSZ = dsize;
 33706                           ;stkvar	_dsize @ sp[(0)+-2]
 33707  01AFF0  0EFE               	movlw	-2
 33708  01AFF2  006F FF8F FBD7     	movff	plusw1,15319	;volatile
 33709  01AFF8  0EFF               	movlw	-1
 33710  01AFFA  006F FF8F FBD8     	movff	plusw1,15320	;volatile
 33711                           
 33712                           ; BSR set to: 59
 33713                           ;eadog.c: 265:  DMA2DSZ = 1;
 33714  01B000  0E00               	movlw	0
 33715  01B002  6FCF               	movwf	207,b	;volatile
 33716  01B004  0E01               	movlw	1
 33717  01B006  6FCE               	movwf	206,b	;volatile
 33718                           
 33719                           ; BSR set to: 59
 33720                           ;eadog.c: 266:  DMA2CON0bits.EN = 1;
 33721  01B008  8FDC               	bsf	220,7,b	;volatile
 33722                           
 33723                           ; BSR set to: 59
 33724                           ;eadog.c: 267:  DMA2CON0bits.DMA2SIRQEN = 1;
 33725  01B00A  8DDC               	bsf	220,6,b	;volatile
 33726                           
 33727                           ; BSR set to: 59
 33728                           ; _send_port_data_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 33729  01B00C  52E5               	movf	postdec1,f,c
 33730  01B00E  52E5               	movf	postdec1,f,c
 33731  01B010  0012               	return		;funcret
 33732  01B012                     __end_of_send_port_data_dma:
 33733                           	opt callstack 0
 33734                           
 33735 ;; *************** function _port_data_dma_ptr *****************
 33736 ;; Defined at:
 33737 ;;		line 273 in file "eadog.c"
 33738 ;; Parameters:    Size  Location     Type
 33739 ;;		None
 33740 ;; Auto vars:     Size  Location     Type
 33741 ;;		None
 33742 ;; Return value:  Size  Location     Type
 33743 ;;                  2  [STACK] PTR unsigned char 
 33744 ;; Registers used:
 33745 ;;		wreg, status,2, status,0, btemp, btemp+1
 33746 ;; Tracked objects:
 33747 ;;		On entry : 3F/1
 33748 ;;		On exit  : 0/0
 33749 ;;		Unchanged: 0/0
 33750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33751 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33752 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33753 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33754 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33755 ;;Total ram usage:        0 bytes
 33756 ;; Hardware stack levels used:    1
 33757 ;; Hardware stack levels required when called:    3
 33758 ;; This function calls:
 33759 ;;		Nothing
 33760 ;; This function is called by:
 33761 ;;		_calc_bsoc
 33762 ;; This function uses a reentrant model
 33763 ;;
 33764                           
 33765                           	psect	text153
 33766  01BD80                     __ptext153:
 33767                           	opt callstack 0
 33768  01BD80                     _port_data_dma_ptr:
 33769                           	opt callstack 11
 33770                           
 33771                           ;eadog.c: 275:  return port_data;
 33772                           
 33773                           ; BSR set to: 59
 33774                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33775                           ;incstack = 0
 33776  01BD80  0EFF               	movlw	low _port_data
 33777  01BD82  6E01               	movwf	btemp^0,c
 33778  01BD84  0E04               	movlw	high _port_data
 33779  01BD86  6E02               	movwf	(btemp+1)^0,c
 33780                           
 33781                           ; _port_data_dma_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 33782  01BD88  0012               	return		;funcret
 33783  01BD8A                     __end_of_port_data_dma_ptr:
 33784                           	opt callstack 0
 33785                           
 33786 ;; *************** function ___asfladd *****************
 33787 ;; Defined at:
 33788 ;;		line 6 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/pic18/asfladd.c"
 33789 ;; Parameters:    Size  Location     Type
 33790 ;;  f1p             2  [STACK] PTR 
 33791 ;;		 -> C(295), 
 33792 ;;  f2              4  [STACK] PTR 
 33793 ;; Auto vars:     Size  Location     Type
 33794 ;;		None
 33795 ;; Return value:  Size  Location     Type
 33796 ;;                  4  [STACK] PTR 
 33797 ;; Registers used:
 33798 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 33799 ;; Tracked objects:
 33800 ;;		On entry : 0/0
 33801 ;;		On exit  : 0/0
 33802 ;;		Unchanged: 0/0
 33803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33804 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33805 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33807 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33808 ;;Total ram usage:        0 bytes
 33809 ;; Hardware stack levels used:    1
 33810 ;; Hardware stack levels required when called:    4
 33811 ;; This function calls:
 33812 ;;		___fladd
 33813 ;; This function is called by:
 33814 ;;		_calc_bsoc
 33815 ;; This function uses a reentrant model
 33816 ;;
 33817                           
 33818                           	psect	text154
 33819  01AAC2                     __ptext154:
 33820                           	opt callstack 0
 33821  01AAC2                     ___asfladd:
 33822                           	opt callstack 10
 33823                           
 33824                           ;	Return value of ___asfladd is never used
 33825                           ;stkvar	_f2 @ sp[(0)+-6]
 33826                           
 33827                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33828                           ;incstack = 0
 33829  01AAC2  0EFA               	movlw	-6
 33830  01AAC4  006F FF8F FFE6     	movff	plusw1,postinc1
 33831  01AACA  006F FF8F FFE6     	movff	plusw1,postinc1
 33832  01AAD0  006F FF8F FFE6     	movff	plusw1,postinc1
 33833  01AAD6  006F FF8F FFE6     	movff	plusw1,postinc1
 33834                           
 33835                           ;stkvar	_f1p @ sp[(-4)+-2]
 33836  01AADC  0EFA               	movlw	-6
 33837  01AADE  006F FF8F FFD9     	movff	plusw1,fsr2l
 33838  01AAE4  0EFB               	movlw	-5
 33839  01AAE6  006F FF8F FFDA     	movff	plusw1,fsr2h
 33840  01AAEC  006F FF7B FFE6     	movff	postinc2,postinc1
 33841  01AAF2  006F FF7B FFE6     	movff	postinc2,postinc1
 33842  01AAF8  006F FF7B FFE6     	movff	postinc2,postinc1
 33843  01AAFE  006F FF7B FFE6     	movff	postinc2,postinc1
 33844  01AB04  ECB5  F09D         	call	___fladd	;wreg free
 33845                           
 33846                           ;stkvar	_f1p @ sp[(0)+-2]
 33847  01AB08  0EFE               	movlw	-2
 33848  01AB0A  006F FF8F FFD9     	movff	plusw1,fsr2l
 33849  01AB10  0EFF               	movlw	-1
 33850  01AB12  006F FF8F FFDA     	movff	plusw1,fsr2h
 33851  01AB18  0060  F007  FFDE   	movff	btemp,postinc2
 33852  01AB1E  0060  F00B  FFDE   	movff	btemp+1,postinc2
 33853  01AB24  0060  F00F  FFDE   	movff	btemp+2,postinc2
 33854  01AB2A  0060  F013  FFDE   	movff	btemp+3,postinc2
 33855                           
 33856                           ; ___asfladd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
 33857  01AB30  0EFA               	movlw	250
 33858  01AB32  26E1               	addwf	fsr1l,f,c
 33859  01AB34  0EFF               	movlw	255
 33860  01AB36  22E2               	addwfc	fsr1h,f,c
 33861  01AB38  0012               	return		;funcret
 33862  01AB3A                     __end_of___asfladd:
 33863                           	opt callstack 0
 33864                           
 33865 ;; *************** function _INT0_ISR *****************
 33866 ;; Defined at:
 33867 ;;		line 36 in file "mcc_generated_files/ext_int.c"
 33868 ;; Parameters:    Size  Location     Type
 33869 ;;		None
 33870 ;; Auto vars:     Size  Location     Type
 33871 ;;		None
 33872 ;; Return value:  Size  Location     Type
 33873 ;;                  1    wreg      void 
 33874 ;; Registers used:
 33875 ;;		wreg, status,2, status,0, pclath, tosl
 33876 ;; Tracked objects:
 33877 ;;		On entry : 0/0
 33878 ;;		On exit  : 0/0
 33879 ;;		Unchanged: 0/0
 33880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33881 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33882 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33883 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33884 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33885 ;;Total ram usage:        0 bytes
 33886 ;; Hardware stack levels used:    1
 33887 ;; Hardware stack levels required when called:    2
 33888 ;; This function calls:
 33889 ;;		_INT0_CallBack
 33890 ;; This function is called by:
 33891 ;;		Interrupt level 2
 33892 ;; This function uses a non-reentrant model
 33893 ;;
 33894                           
 33895                           	psect	text155
 33896  01BD58                     __ptext155:
 33897                           	opt callstack 0
 33898  01BD58                     _INT0_ISR:
 33899                           	opt callstack 3
 33900                           
 33901                           ;incstack = 0
 33902  01BD58  EE14  F15C         	lfsr	1,___inthi_sp
 33903                           
 33904                           ;mcc_generated_files/ext_int.c: 38:  (PIR1bits.INT0IF = 0);
 33905  01BD5C  0139               	movlb	57	; () banked
 33906  01BD5E  91A1               	bcf	161,0,b	;volatile
 33907                           
 33908                           ; BSR set to: 57
 33909                           ;mcc_generated_files/ext_int.c: 41:  INT0_CallBack();
 33910  01BD60  EC58  F0DD         	call	_INT0_CallBack	;wreg free
 33911  01BD64  0011               	retfie		f
 33912  01BD66                     __end_of_INT0_ISR:
 33913                           	opt callstack 0
 33914                           
 33915 ;; *************** function _INT0_CallBack *****************
 33916 ;; Defined at:
 33917 ;;		line 44 in file "mcc_generated_files/ext_int.c"
 33918 ;; Parameters:    Size  Location     Type
 33919 ;;		None
 33920 ;; Auto vars:     Size  Location     Type
 33921 ;;		None
 33922 ;; Return value:  Size  Location     Type
 33923 ;;                  1  [STACK] void 
 33924 ;; Registers used:
 33925 ;;		wreg, status,2, status,0, pclath, tosl
 33926 ;; Tracked objects:
 33927 ;;		On entry : 3F/39
 33928 ;;		On exit  : 0/0
 33929 ;;		Unchanged: 0/0
 33930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33931 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33932 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33933 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33934 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33935 ;;Total ram usage:        0 bytes
 33936 ;; Hardware stack levels used:    1
 33937 ;; Hardware stack levels required when called:    1
 33938 ;; This function calls:
 33939 ;;		Absolute function
 33940 ;;		_INT0_DefaultInterruptHandler
 33941 ;; This function is called by:
 33942 ;;		_INT0_ISR
 33943 ;; This function uses a reentrant model
 33944 ;;
 33945                           
 33946                           	psect	text156
 33947  01BAB0                     __ptext156:
 33948                           	opt callstack 0
 33949  01BAB0                     _INT0_CallBack:
 33950                           	opt callstack 3
 33951                           
 33952                           ;mcc_generated_files/ext_int.c: 47:  if (INT0_InterruptHandler) {
 33953                           
 33954                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33955                           ;incstack = 0
 33956  01BAB0  0100               	movlb	0	; () banked
 33957  01BAB2  51BD               	movf	_INT0_InterruptHandler& (0+255),w,b
 33958  01BAB4  11BE               	iorwf	(_INT0_InterruptHandler+1)& (0+255),w,b
 33959  01BAB6  11BF               	iorwf	(_INT0_InterruptHandler+2)& (0+255),w,b
 33960  01BAB8  B4D8               	btfsc	status,2,c
 33961  01BABA  0012               	return	
 33962                           
 33963                           ; BSR set to: 0
 33964                           ;mcc_generated_files/ext_int.c: 48:   INT0_InterruptHandler();
 33965  01BABC  D801               	call	u989_48
 33966  01BABE  0012               	return	
 33967  01BAC0                     u989_48:
 33968  01BAC0  0005               	push	
 33969  01BAC2  6EFA               	movwf	pclath,c
 33970  01BAC4  51BD               	movf	_INT0_InterruptHandler& (0+255),w,b
 33971  01BAC6  6EFD               	movwf	tosl,c
 33972  01BAC8  51BE               	movf	(_INT0_InterruptHandler+1)& (0+255),w,b
 33973  01BACA  6EFE               	movwf	tosh,c
 33974  01BACC  51BF               	movf	(_INT0_InterruptHandler+2)& (0+255),w,b
 33975  01BACE  6EFF               	movwf	tosu,c
 33976  01BAD0  50FA               	movf	pclath,w,c
 33977  01BAD2  0012               	return		;indir
 33978  01BAD4                     __end_of_INT0_CallBack:
 33979                           	opt callstack 0
 33980                           
 33981 ;; *************** function _INT0_DefaultInterruptHandler *****************
 33982 ;; Defined at:
 33983 ;;		line 57 in file "mcc_generated_files/ext_int.c"
 33984 ;; Parameters:    Size  Location     Type
 33985 ;;		None
 33986 ;; Auto vars:     Size  Location     Type
 33987 ;;		None
 33988 ;; Return value:  Size  Location     Type
 33989 ;;                  1  [STACK] void 
 33990 ;; Registers used:
 33991 ;;		None
 33992 ;; Tracked objects:
 33993 ;;		On entry : 3F/0
 33994 ;;		On exit  : 0/0
 33995 ;;		Unchanged: 0/0
 33996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33997 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33998 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34000 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34001 ;;Total ram usage:        0 bytes
 34002 ;; Hardware stack levels used:    1
 34003 ;; This function calls:
 34004 ;;		Nothing
 34005 ;; This function is called by:
 34006 ;;		_EXT_INT_Initialize
 34007 ;;		_INT0_CallBack
 34008 ;; This function uses a reentrant model
 34009 ;;
 34010                           
 34011                           	psect	text157
 34012  01BDFA                     __ptext157:
 34013                           	opt callstack 0
 34014  01BDFA                     _INT0_DefaultInterruptHandler:
 34015                           	opt callstack 3
 34016                           
 34017                           ; _INT0_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 34018                           
 34019                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34020                           ;incstack = 0
 34021  01BDFA  0012               	return		;funcret
 34022  01BDFC                     __end_of_INT0_DefaultInterruptHandler:
 34023                           	opt callstack 0
 34024                           
 34025 ;; *************** function _Default_ISR *****************
 34026 ;; Defined at:
 34027 ;;		line 88 in file "mcc_generated_files/interrupt_manager.c"
 34028 ;; Parameters:    Size  Location     Type
 34029 ;;		None
 34030 ;; Auto vars:     Size  Location     Type
 34031 ;;		None
 34032 ;; Return value:  Size  Location     Type
 34033 ;;                  1    wreg      void 
 34034 ;; Registers used:
 34035 ;;		None
 34036 ;; Tracked objects:
 34037 ;;		On entry : 0/0
 34038 ;;		On exit  : 0/0
 34039 ;;		Unchanged: 0/0
 34040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34041 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34042 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34043 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34044 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34045 ;;Total ram usage:        0 bytes
 34046 ;; Hardware stack levels used:    1
 34047 ;; This function calls:
 34048 ;;		Nothing
 34049 ;; This function is called by:
 34050 ;;		Interrupt level 2
 34051 ;; This function uses a non-reentrant model
 34052 ;;
 34053                           
 34054                           	psect	text158
 34055  01BDF0                     __ptext158:
 34056                           	opt callstack 0
 34057  01BDF0                     _Default_ISR:
 34058                           	opt callstack 5
 34059                           
 34060                           ;incstack = 0
 34061  01BDF0  EE14  F15C         	lfsr	1,___inthi_sp
 34062  01BDF4  0011               	retfie		f
 34063  01BDF6                     __end_of_Default_ISR:
 34064                           	opt callstack 0
 34065                           
 34066 ;; *************** function _ADCC_ISR *****************
 34067 ;; Defined at:
 34068 ;;		line 314 in file "mcc_generated_files/adcc.c"
 34069 ;; Parameters:    Size  Location     Type
 34070 ;;		None
 34071 ;; Auto vars:     Size  Location     Type
 34072 ;;		None
 34073 ;; Return value:  Size  Location     Type
 34074 ;;                  1    wreg      void 
 34075 ;; Registers used:
 34076 ;;		wreg, status,2, status,0, pclath, tosl
 34077 ;; Tracked objects:
 34078 ;;		On entry : 0/0
 34079 ;;		On exit  : 0/0
 34080 ;;		Unchanged: 0/0
 34081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34082 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34083 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34085 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34086 ;;Total ram usage:        0 bytes
 34087 ;; Hardware stack levels used:    1
 34088 ;; Hardware stack levels required when called:    1
 34089 ;; This function calls:
 34090 ;;		Absolute function
 34091 ;;		_ADCC_DefaultInterruptHandler
 34092 ;;		_adc_int_handler
 34093 ;; This function is called by:
 34094 ;;		Interrupt level 2
 34095 ;; This function uses a non-reentrant model
 34096 ;;
 34097                           
 34098                           	psect	text159
 34099  01B6F4                     __ptext159:
 34100                           	opt callstack 0
 34101  01B6F4                     _ADCC_ISR:
 34102                           	opt callstack 4
 34103                           
 34104                           ;incstack = 0
 34105  01B6F4  EE14  F15C         	lfsr	1,___inthi_sp
 34106                           
 34107                           ;mcc_generated_files/adcc.c: 317:     PIR1bits.ADIF = 0;
 34108  01B6F8  0139               	movlb	57	; () banked
 34109  01B6FA  95A1               	bcf	161,2,b	;volatile
 34110                           
 34111                           ; BSR set to: 57
 34112                           ;mcc_generated_files/adcc.c: 319:     if (ADCC_ADI_InterruptHandler)
 34113  01B6FC  0100               	movlb	0	; () banked
 34114  01B6FE  51AE               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 34115  01B700  11AF               	iorwf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 34116  01B702  11B0               	iorwf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 34117  01B704  B4D8               	btfsc	status,2,c
 34118  01B706  0011               	retfie		f
 34119                           
 34120                           ; BSR set to: 0
 34121                           ;mcc_generated_files/adcc.c: 320:             ADCC_ADI_InterruptHandler();
 34122  01B708  D801               	call	i2u1032_48
 34123  01B70A  0011               	retfie		f
 34124  01B70C                     i2u1032_48:
 34125  01B70C  0005               	push	
 34126  01B70E  6EFA               	movwf	pclath,c
 34127  01B710  51AE               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 34128  01B712  6EFD               	movwf	tosl,c
 34129  01B714  51AF               	movf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 34130  01B716  6EFE               	movwf	tosh,c
 34131  01B718  51B0               	movf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 34132  01B71A  6EFF               	movwf	tosu,c
 34133  01B71C  50FA               	movf	pclath,w,c
 34134  01B71E  0012               	return		;indir
 34135  01B720                     __end_of_ADCC_ISR:
 34136                           	opt callstack 0
 34137                           
 34138 ;; *************** function _adc_int_t_handler *****************
 34139 ;; Defined at:
 34140 ;;		line 146 in file "daq.c"
 34141 ;; Parameters:    Size  Location     Type
 34142 ;;		None
 34143 ;; Auto vars:     Size  Location     Type
 34144 ;;		None
 34145 ;; Return value:  Size  Location     Type
 34146 ;;                  1  [STACK] void 
 34147 ;; Registers used:
 34148 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+11, prodl, prodh
 34149 ;; Tracked objects:
 34150 ;;		On entry : 3F/0
 34151 ;;		On exit  : 0/0
 34152 ;;		Unchanged: 0/0
 34153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34154 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34155 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34156 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34157 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34158 ;;Total ram usage:        0 bytes
 34159 ;; Hardware stack levels used:    1
 34160 ;; Hardware stack levels required when called:    1
 34161 ;; This function calls:
 34162 ;;		_ADCC_DischargeSampleCapacitor
 34163 ;;		_ADCC_StartConversion
 34164 ;; This function is called by:
 34165 ;;		_start_adc_scan
 34166 ;;		_ADCC_ThresholdISR
 34167 ;; This function uses a reentrant model
 34168 ;;
 34169                           
 34170                           	psect	text160
 34171  01AA40                     __ptext160:
 34172                           	opt callstack 0
 34173  01AA40                     _adc_int_t_handler:
 34174                           	opt callstack 3
 34175                           
 34176                           ;daq.c: 151:  R.raw_adc[R.scan_index] = ((adc_result_t) ((ADFLTRH << 8) + ADFLTRL));
 34177                           
 34178                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34179                           ;incstack = 0
 34180  01AA40  013E               	movlb	62	; () banked
 34181  01AA42  51E6               	movf	230,w,b	;volatile
 34182  01AA44  006F FB9C  F001    	movff	16103,btemp	;volatile
 34183  01AA4A  6A02               	clrf	(btemp+1)^0,c
 34184  01AA4C  0060  F004  F002   	movff	btemp,btemp+1
 34185  01AA52  6A01               	clrf	btemp^0,c
 34186  01AA54  2601               	addwf	btemp^0,f,c
 34187  01AA56  0E00               	movlw	0
 34188  01AA58  2202               	addwfc	(btemp+1)^0,f,c
 34189  01AA5A  0101               	movlb	1	; () banked
 34190  01AA5C  512C               	movf	(_R+44)& (0+255),w,b	;volatile
 34191  01AA5E  0D02               	mullw	2
 34192  01AA60  0E00               	movlw	low _R
 34193  01AA62  24F3               	addwf	243,w,c
 34194  01AA64  6ED9               	movwf	fsr2l,c
 34195  01AA66  0E01               	movlw	high _R
 34196  01AA68  20F4               	addwfc	prodh,w,c
 34197  01AA6A  6EDA               	movwf	fsr2h,c
 34198  01AA6C  0060  F007  FFDE   	movff	btemp,postinc2
 34199  01AA72  0060  F00B  FFDD   	movff	btemp+1,postdec2
 34200  01AA78                     l11021:
 34201                           
 34202                           ;daq.c: 153:   if (++R.scan_index > 0XD) {
 34203  01AA78  0101               	movlb	1	; () banked
 34204  01AA7A  2B2C               	incf	(_R+44)& (0+255),f,b	;volatile
 34205  01AA7C  0E0D               	movlw	13
 34206  01AA7E  652C               	cpfsgt	(_R+44)& (0+255),b	;volatile
 34207  01AA80  D003               	goto	l11027
 34208                           
 34209                           ; BSR set to: 1
 34210                           ;daq.c: 154:    R.done = 1;
 34211  01AA82  0E01               	movlw	1
 34212  01AA84  6F2F               	movwf	(_R+47)& (0+255),b	;volatile
 34213  01AA86  0012               	return	
 34214  01AA88                     l11027:
 34215                           
 34216                           ; BSR set to: 1
 34217                           ;daq.c: 160:  } while (!((R.scan_select >> R.scan_index) &0x1));
 34218  01AA88  0060  F4B0  F00C   	movff	_R+44,btemp+11	;volatile
 34219  01AA8E  EE20  F12D         	lfsr	2,_R+45	;volatile
 34220  01AA92  006F FF78  F009    	movff	postinc2,btemp+8
 34221  01AA98  006F FF74  F00A    	movff	postdec2,btemp+9
 34222  01AA9E  2A0C               	incf	(btemp+11)^0,f,c
 34223  01AAA0  D003               	goto	u1029_44
 34224  01AAA2                     u1029_45:
 34225  01AAA2  90D8               	bcf	status,0,c
 34226  01AAA4  320A               	rrcf	(btemp+9)^0,f,c
 34227  01AAA6  3209               	rrcf	(btemp+8)^0,f,c
 34228  01AAA8                     u1029_44:
 34229  01AAA8  2E0C               	decfsz	(btemp+11)^0,f,c
 34230  01AAAA  D7FB               	goto	u1029_45
 34231  01AAAC  A009               	btfss	(btemp+8)^0,0,c
 34232  01AAAE  D7E4               	goto	l11021
 34233                           
 34234                           ;daq.c: 161:  ADCC_DischargeSampleCapacitor();
 34235  01AAB0  ECD7  F0DE         	call	_ADCC_DischargeSampleCapacitor	;wreg free
 34236                           
 34237                           ; BSR set to: 62
 34238                           ;daq.c: 162:  ADCC_StartConversion(R.scan_index & 0xf);
 34239  01AAB4  0101               	movlb	1	; () banked
 34240  01AAB6  512C               	movf	(_R+44)& (0+255),w,b	;volatile
 34241  01AAB8  0B0F               	andlw	15
 34242  01AABA  6EE6               	movwf	postinc1,c
 34243  01AABC  EC66  F0DE         	call	_ADCC_StartConversion	;wreg free
 34244                           
 34245                           ; _adc_int_t_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 34246  01AAC0  0012               	return		;funcret
 34247  01AAC2                     __end_of_adc_int_t_handler:
 34248                           	opt callstack 0
 34249                           
 34250 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 34251 ;; Defined at:
 34252 ;;		line 339 in file "mcc_generated_files/adcc.c"
 34253 ;; Parameters:    Size  Location     Type
 34254 ;;		None
 34255 ;; Auto vars:     Size  Location     Type
 34256 ;;		None
 34257 ;; Return value:  Size  Location     Type
 34258 ;;                  1  [STACK] void 
 34259 ;; Registers used:
 34260 ;;		None
 34261 ;; Tracked objects:
 34262 ;;		On entry : 3F/0
 34263 ;;		On exit  : 0/0
 34264 ;;		Unchanged: 0/0
 34265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34266 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34267 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34269 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34270 ;;Total ram usage:        0 bytes
 34271 ;; Hardware stack levels used:    1
 34272 ;; This function calls:
 34273 ;;		Nothing
 34274 ;; This function is called by:
 34275 ;;		_ADCC_Initialize
 34276 ;;		_ADCC_ISR
 34277 ;;		_ADCC_ThresholdISR
 34278 ;; This function uses a reentrant model
 34279 ;;
 34280                           
 34281                           	psect	text161
 34282  01BDFC                     __ptext161:
 34283                           	opt callstack 0
 34284  01BDFC                     _ADCC_DefaultInterruptHandler:
 34285                           	opt callstack 4
 34286                           
 34287                           ; _ADCC_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 34288                           
 34289                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34290                           ;incstack = 0
 34291  01BDFC  0012               	return		;funcret
 34292  01BDFE                     __end_of_ADCC_DefaultInterruptHandler:
 34293                           	opt callstack 0
 34294                           
 34295 ;; *************** function _adc_int_handler *****************
 34296 ;; Defined at:
 34297 ;;		line 136 in file "daq.c"
 34298 ;; Parameters:    Size  Location     Type
 34299 ;;		None
 34300 ;; Auto vars:     Size  Location     Type
 34301 ;;		None
 34302 ;; Return value:  Size  Location     Type
 34303 ;;                  1  [STACK] void 
 34304 ;; Registers used:
 34305 ;;		None
 34306 ;; Tracked objects:
 34307 ;;		On entry : 3F/0
 34308 ;;		On exit  : 0/0
 34309 ;;		Unchanged: 0/0
 34310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34311 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34312 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34313 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34314 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34315 ;;Total ram usage:        0 bytes
 34316 ;; Hardware stack levels used:    1
 34317 ;; This function calls:
 34318 ;;		Nothing
 34319 ;; This function is called by:
 34320 ;;		_start_adc_scan
 34321 ;;		_ADCC_ISR
 34322 ;; This function uses a reentrant model
 34323 ;;
 34324                           
 34325                           	psect	text162
 34326  01BDFE                     __ptext162:
 34327                           	opt callstack 0
 34328  01BDFE                     _adc_int_handler:
 34329                           	opt callstack 4
 34330                           
 34331                           ; _adc_int_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 34332                           
 34333                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34334                           ;incstack = 0
 34335  01BDFE  0012               	return		;funcret
 34336  01BE00                     __end_of_adc_int_handler:
 34337                           	opt callstack 0
 34338                           
 34339 ;; *************** function _ADCC_ThresholdISR *****************
 34340 ;; Defined at:
 34341 ;;		line 327 in file "mcc_generated_files/adcc.c"
 34342 ;; Parameters:    Size  Location     Type
 34343 ;;		None
 34344 ;; Auto vars:     Size  Location     Type
 34345 ;;		None
 34346 ;; Return value:  Size  Location     Type
 34347 ;;                  1    wreg      void 
 34348 ;; Registers used:
 34349 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+8, btemp+9, btemp+11, tosl, prod
      +l, prodh
 34350 ;; Tracked objects:
 34351 ;;		On entry : 0/0
 34352 ;;		On exit  : 0/0
 34353 ;;		Unchanged: 0/0
 34354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34355 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34356 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34357 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34358 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34359 ;;Total ram usage:        5 bytes
 34360 ;; Hardware stack levels used:    1
 34361 ;; Hardware stack levels required when called:    2
 34362 ;; This function calls:
 34363 ;;		Absolute function
 34364 ;;		_ADCC_DefaultInterruptHandler
 34365 ;;		_adc_int_t_handler
 34366 ;; This function is called by:
 34367 ;;		Interrupt level 2
 34368 ;; This function uses a non-reentrant model
 34369 ;;
 34370                           
 34371                           	psect	text163
 34372  01AC10                     __ptext163:
 34373                           	opt callstack 0
 34374  01AC10                     _ADCC_ThresholdISR:
 34375                           	opt callstack 3
 34376                           
 34377                           ;incstack = 0
 34378  01AC10  0060  F004  F021   	movff	btemp,??_ADCC_ThresholdISR
 34379  01AC16  0060  F008  F022   	movff	btemp+1,??_ADCC_ThresholdISR+1
 34380  01AC1C  0060  F024  F023   	movff	btemp+8,??_ADCC_ThresholdISR+2
 34381  01AC22  0060  F028  F024   	movff	btemp+9,??_ADCC_ThresholdISR+3
 34382  01AC28  0060  F030  F025   	movff	btemp+11,??_ADCC_ThresholdISR+4
 34383  01AC2E  EE14  F15C         	lfsr	1,___inthi_sp
 34384                           
 34385                           ;mcc_generated_files/adcc.c: 330:     PIR1bits.ADTIF = 0;
 34386  01AC32  0139               	movlb	57	; () banked
 34387  01AC34  97A1               	bcf	161,3,b	;volatile
 34388                           
 34389                           ; BSR set to: 57
 34390                           ;mcc_generated_files/adcc.c: 332:     if (ADCC_ADTI_InterruptHandler)
 34391  01AC36  0100               	movlb	0	; () banked
 34392  01AC38  51AB               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 34393  01AC3A  11AC               	iorwf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 34394  01AC3C  11AD               	iorwf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 34395  01AC3E  B4D8               	btfsc	status,2,c
 34396  01AC40  D00C               	goto	i2u1034_49
 34397                           
 34398                           ; BSR set to: 0
 34399                           ;mcc_generated_files/adcc.c: 333:         ADCC_ADTI_InterruptHandler();
 34400  01AC42  D801               	call	i2u1034_48
 34401  01AC44  D00A               	goto	i2u1034_49
 34402  01AC46                     i2u1034_48:
 34403  01AC46  0005               	push	
 34404  01AC48  6EFA               	movwf	pclath,c
 34405  01AC4A  51AB               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 34406  01AC4C  6EFD               	movwf	tosl,c
 34407  01AC4E  51AC               	movf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 34408  01AC50  6EFE               	movwf	tosh,c
 34409  01AC52  51AD               	movf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 34410  01AC54  6EFF               	movwf	tosu,c
 34411  01AC56  50FA               	movf	pclath,w,c
 34412  01AC58  0012               	return		;indir
 34413  01AC5A                     i2u1034_49:
 34414  01AC5A  0060  F094  F00C   	movff	??_ADCC_ThresholdISR+4,btemp+11
 34415  01AC60  0060  F090  F00A   	movff	??_ADCC_ThresholdISR+3,btemp+9
 34416  01AC66  0060  F08C  F009   	movff	??_ADCC_ThresholdISR+2,btemp+8
 34417  01AC6C  0060  F088  F002   	movff	??_ADCC_ThresholdISR+1,btemp+1
 34418  01AC72  0060  F084  F001   	movff	??_ADCC_ThresholdISR,btemp
 34419  01AC78  0011               	retfie		f
 34420  01AC7A                     __end_of_ADCC_ThresholdISR:
 34421                           	opt callstack 0
 34422                           
 34423 ;; *************** function _UART1_rx_vect_isr *****************
 34424 ;; Defined at:
 34425 ;;		line 181 in file "mcc_generated_files/uart1.c"
 34426 ;; Parameters:    Size  Location     Type
 34427 ;;		None
 34428 ;; Auto vars:     Size  Location     Type
 34429 ;;		None
 34430 ;; Return value:  Size  Location     Type
 34431 ;;                  1    wreg      void 
 34432 ;; Registers used:
 34433 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 34434 ;; Tracked objects:
 34435 ;;		On entry : 0/0
 34436 ;;		On exit  : 0/0
 34437 ;;		Unchanged: 0/0
 34438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34439 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34440 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34441 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34442 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34443 ;;Total ram usage:        0 bytes
 34444 ;; Hardware stack levels used:    1
 34445 ;; Hardware stack levels required when called:    1
 34446 ;; This function calls:
 34447 ;;		Absolute function
 34448 ;;		_UART1_Receive_ISR
 34449 ;; This function is called by:
 34450 ;;		Interrupt level 2
 34451 ;; This function uses a non-reentrant model
 34452 ;;
 34453                           
 34454                           	psect	text164
 34455  01B9A8                     __ptext164:
 34456                           	opt callstack 0
 34457  01B9A8                     _UART1_rx_vect_isr:
 34458                           	opt callstack 4
 34459                           
 34460                           ;incstack = 0
 34461  01B9A8  EE14  F15C         	lfsr	1,___inthi_sp
 34462                           
 34463                           ;mcc_generated_files/uart1.c: 183:     if(UART1_RxInterruptHandler)
 34464  01B9AC  0100               	movlb	0	; () banked
 34465  01B9AE  51B1               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 34466  01B9B0  11B2               	iorwf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 34467  01B9B2  11B3               	iorwf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 34468  01B9B4  B4D8               	btfsc	status,2,c
 34469  01B9B6  0011               	retfie		f
 34470                           
 34471                           ; BSR set to: 0
 34472                           ;mcc_generated_files/uart1.c: 184: {;mcc_generated_files/uart1.c: 185:   UART1_RxInterru
      +                          ptHandler();
 34473  01B9B8  D801               	call	i2u1036_48
 34474  01B9BA  0011               	retfie		f
 34475  01B9BC                     i2u1036_48:
 34476  01B9BC  0005               	push	
 34477  01B9BE  6EFA               	movwf	pclath,c
 34478  01B9C0  51B1               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 34479  01B9C2  6EFD               	movwf	tosl,c
 34480  01B9C4  51B2               	movf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 34481  01B9C6  6EFE               	movwf	tosh,c
 34482  01B9C8  51B3               	movf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 34483  01B9CA  6EFF               	movwf	tosu,c
 34484  01B9CC  50FA               	movf	pclath,w,c
 34485  01B9CE  0012               	return		;indir
 34486  01B9D0                     __end_of_UART1_rx_vect_isr:
 34487                           	opt callstack 0
 34488                           
 34489 ;; *************** function _UART1_Receive_ISR *****************
 34490 ;; Defined at:
 34491 ;;		line 192 in file "mcc_generated_files/uart1.c"
 34492 ;; Parameters:    Size  Location     Type
 34493 ;;		None
 34494 ;; Auto vars:     Size  Location     Type
 34495 ;;		None
 34496 ;; Return value:  Size  Location     Type
 34497 ;;                  1  [STACK] void 
 34498 ;; Registers used:
 34499 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 34500 ;; Tracked objects:
 34501 ;;		On entry : 3F/0
 34502 ;;		On exit  : 3F/0
 34503 ;;		Unchanged: 0/0
 34504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34505 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34506 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34507 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34508 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34509 ;;Total ram usage:        0 bytes
 34510 ;; Hardware stack levels used:    1
 34511 ;; This function calls:
 34512 ;;		Nothing
 34513 ;; This function is called by:
 34514 ;;		_UART1_Initialize
 34515 ;;		_UART1_rx_vect_isr
 34516 ;; This function uses a reentrant model
 34517 ;;
 34518                           
 34519                           	psect	text165
 34520  01BBD6                     __ptext165:
 34521                           	opt callstack 0
 34522  01BBD6                     _UART1_Receive_ISR:
 34523                           	opt callstack 4
 34524                           
 34525                           ;mcc_generated_files/uart1.c: 195:  uart1RxBuffer[uart1RxHead++] = U1RXB;
 34526                           
 34527                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34528                           ;incstack = 0
 34529  01BBD6  5047               	movf	_uart1RxHead^0,w,c
 34530  01BBD8  0F6C               	addlw	low _uart1RxBuffer
 34531  01BBDA  6ED9               	movwf	fsr2l,c
 34532  01BBDC  6ADA               	clrf	fsr2h,c
 34533  01BBDE  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 34534  01BBE4  2A47               	incf	_uart1RxHead^0,f,c	;volatile
 34535                           
 34536                           ;mcc_generated_files/uart1.c: 196:     if(sizeof(uart1RxBuffer) <= uart1RxHead)
 34537  01BBE6  0E07               	movlw	7
 34538  01BBE8  6447               	cpfsgt	_uart1RxHead^0,c
 34539  01BBEA  D001               	goto	l10601
 34540                           
 34541                           ;mcc_generated_files/uart1.c: 197:     {;mcc_generated_files/uart1.c: 198:   uart1RxHead
      +                           = 0;
 34542  01BBEC  6A47               	clrf	_uart1RxHead^0,c	;volatile
 34543  01BBEE                     l10601:
 34544                           
 34545                           ;mcc_generated_files/uart1.c: 200:  uart1RxCount++;
 34546  01BBEE  0100               	movlb	0	; () banked
 34547  01BBF0  2BCE               	incf	_uart1RxCount& (0+255),f,b	;volatile
 34548                           
 34549                           ; BSR set to: 0
 34550                           ; _UART1_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 34551  01BBF2  0012               	return		;funcret
 34552  01BBF4                     __end_of_UART1_Receive_ISR:
 34553                           	opt callstack 0
 34554                           
 34555 ;; *************** function _UART2_tx_vect_isr *****************
 34556 ;; Defined at:
 34557 ;;		line 195 in file "mcc_generated_files/uart2.c"
 34558 ;; Parameters:    Size  Location     Type
 34559 ;;		None
 34560 ;; Auto vars:     Size  Location     Type
 34561 ;;		None
 34562 ;; Return value:  Size  Location     Type
 34563 ;;                  1    wreg      void 
 34564 ;; Registers used:
 34565 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 34566 ;; Tracked objects:
 34567 ;;		On entry : 0/0
 34568 ;;		On exit  : 0/0
 34569 ;;		Unchanged: 0/0
 34570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34571 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34572 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34573 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34574 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34575 ;;Total ram usage:        0 bytes
 34576 ;; Hardware stack levels used:    1
 34577 ;; Hardware stack levels required when called:    1
 34578 ;; This function calls:
 34579 ;;		Absolute function
 34580 ;;		_UART2_Transmit_ISR
 34581 ;; This function is called by:
 34582 ;;		Interrupt level 2
 34583 ;; This function uses a non-reentrant model
 34584 ;;
 34585                           
 34586                           	psect	text166
 34587  01B9D0                     __ptext166:
 34588                           	opt callstack 0
 34589  01B9D0                     _UART2_tx_vect_isr:
 34590                           	opt callstack 4
 34591                           
 34592                           ; BSR set to: 0
 34593                           ;incstack = 0
 34594  01B9D0  EE14  F15C         	lfsr	1,___inthi_sp
 34595                           
 34596                           ;mcc_generated_files/uart2.c: 197:     if(UART2_TxInterruptHandler)
 34597  01B9D4  0100               	movlb	0	; () banked
 34598  01B9D6  51B4               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 34599  01B9D8  11B5               	iorwf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 34600  01B9DA  11B6               	iorwf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 34601  01B9DC  B4D8               	btfsc	status,2,c
 34602  01B9DE  0011               	retfie		f
 34603                           
 34604                           ; BSR set to: 0
 34605                           ;mcc_generated_files/uart2.c: 198:     {;mcc_generated_files/uart2.c: 199:         UART2
      +                          _TxInterruptHandler();
 34606  01B9E0  D801               	call	i2u1038_48
 34607  01B9E2  0011               	retfie		f
 34608  01B9E4                     i2u1038_48:
 34609  01B9E4  0005               	push	
 34610  01B9E6  6EFA               	movwf	pclath,c
 34611  01B9E8  51B4               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 34612  01B9EA  6EFD               	movwf	tosl,c
 34613  01B9EC  51B5               	movf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 34614  01B9EE  6EFE               	movwf	tosh,c
 34615  01B9F0  51B6               	movf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 34616  01B9F2  6EFF               	movwf	tosu,c
 34617  01B9F4  50FA               	movf	pclath,w,c
 34618  01B9F6  0012               	return		;indir
 34619  01B9F8                     __end_of_UART2_tx_vect_isr:
 34620                           	opt callstack 0
 34621                           
 34622 ;; *************** function _UART2_Transmit_ISR *****************
 34623 ;; Defined at:
 34624 ;;		line 213 in file "mcc_generated_files/uart2.c"
 34625 ;; Parameters:    Size  Location     Type
 34626 ;;		None
 34627 ;; Auto vars:     Size  Location     Type
 34628 ;;		None
 34629 ;; Return value:  Size  Location     Type
 34630 ;;                  1  [STACK] void 
 34631 ;; Registers used:
 34632 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 34633 ;; Tracked objects:
 34634 ;;		On entry : 3F/0
 34635 ;;		On exit  : 3B/39
 34636 ;;		Unchanged: 0/0
 34637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34638 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34639 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34640 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34641 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34642 ;;Total ram usage:        0 bytes
 34643 ;; Hardware stack levels used:    1
 34644 ;; This function calls:
 34645 ;;		Nothing
 34646 ;; This function is called by:
 34647 ;;		_UART2_Initialize
 34648 ;;		_UART2_tx_vect_isr
 34649 ;; This function uses a reentrant model
 34650 ;;
 34651                           
 34652                           	psect	text167
 34653  01B720                     __ptext167:
 34654                           	opt callstack 0
 34655  01B720                     _UART2_Transmit_ISR:
 34656                           	opt callstack 4
 34657                           
 34658                           ;mcc_generated_files/uart2.c: 216:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
 34659                           
 34660                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34661                           ;incstack = 0
 34662  01B720  0E40               	movlw	64
 34663  01B722  6044               	cpfslt	_uart2TxBufferRemaining^0,c
 34664  01B724  D010               	goto	l673
 34665                           
 34666                           ;mcc_generated_files/uart2.c: 217:     {;mcc_generated_files/uart2.c: 218:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
 34667  01B726  0E00               	movlw	low _uart2TxBuffer
 34668  01B728  2445               	addwf	_uart2TxTail^0,w,c	;volatile
 34669  01B72A  6ED9               	movwf	fsr2l,c
 34670  01B72C  6ADA               	clrf	fsr2h,c
 34671  01B72E  0E03               	movlw	high _uart2TxBuffer
 34672  01B730  22DA               	addwfc	fsr2h,f,c
 34673  01B732  50DF               	movf	indf2,w,c
 34674  01B734  013D               	movlb	61	; () banked
 34675  01B736  6FD2               	movwf	210,b	;volatile
 34676                           
 34677                           ; BSR set to: 61
 34678  01B738  2A45               	incf	_uart2TxTail^0,f,c	;volatile
 34679                           
 34680                           ; BSR set to: 61
 34681                           ;mcc_generated_files/uart2.c: 219:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
 34682  01B73A  0E3F               	movlw	63
 34683  01B73C  6445               	cpfsgt	_uart2TxTail^0,c
 34684  01B73E  D001               	goto	l10613
 34685                           
 34686                           ; BSR set to: 61
 34687                           ;mcc_generated_files/uart2.c: 220:         {;mcc_generated_files/uart2.c: 221:          
      +                             uart2TxTail = 0;
 34688  01B740  6A45               	clrf	_uart2TxTail^0,c	;volatile
 34689  01B742                     l10613:
 34690                           
 34691                           ; BSR set to: 61
 34692                           ;mcc_generated_files/uart2.c: 223:         uart2TxBufferRemaining++;
 34693  01B742  2A44               	incf	_uart2TxBufferRemaining^0,f,c	;volatile
 34694                           
 34695                           ;mcc_generated_files/uart2.c: 224:     }
 34696  01B744  0012               	return	
 34697  01B746                     l673:
 34698                           
 34699                           ;mcc_generated_files/uart2.c: 226:     {;mcc_generated_files/uart2.c: 227:         PIE6b
      +                          its.U2TXIE = 0;
 34700  01B746  0139               	movlb	57	; () banked
 34701  01B748  9796               	bcf	150,3,b	;volatile
 34702                           
 34703                           ; _UART2_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 34704  01B74A  0012               	return		;funcret
 34705  01B74C                     __end_of_UART2_Transmit_ISR:
 34706                           	opt callstack 0
 34707                           
 34708 ;; *************** function _UART2_rx_vect_isr *****************
 34709 ;; Defined at:
 34710 ;;		line 203 in file "mcc_generated_files/uart2.c"
 34711 ;; Parameters:    Size  Location     Type
 34712 ;;		None
 34713 ;; Auto vars:     Size  Location     Type
 34714 ;;		None
 34715 ;; Return value:  Size  Location     Type
 34716 ;;                  1    wreg      void 
 34717 ;; Registers used:
 34718 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 34719 ;; Tracked objects:
 34720 ;;		On entry : 0/0
 34721 ;;		On exit  : 0/0
 34722 ;;		Unchanged: 0/0
 34723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34724 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34725 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34726 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34727 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34728 ;;Total ram usage:        0 bytes
 34729 ;; Hardware stack levels used:    1
 34730 ;; Hardware stack levels required when called:    1
 34731 ;; This function calls:
 34732 ;;		Absolute function
 34733 ;;		_UART2_Receive_ISR
 34734 ;; This function is called by:
 34735 ;;		Interrupt level 2
 34736 ;; This function uses a non-reentrant model
 34737 ;;
 34738                           
 34739                           	psect	text168
 34740  01B9F8                     __ptext168:
 34741                           	opt callstack 0
 34742  01B9F8                     _UART2_rx_vect_isr:
 34743                           	opt callstack 4
 34744                           
 34745                           ;incstack = 0
 34746  01B9F8  EE14  F15C         	lfsr	1,___inthi_sp
 34747                           
 34748                           ;mcc_generated_files/uart2.c: 205:     if(UART2_RxInterruptHandler)
 34749  01B9FC  0100               	movlb	0	; () banked
 34750  01B9FE  51B7               	movf	_UART2_RxInterruptHandler& (0+255),w,b
 34751  01BA00  11B8               	iorwf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
 34752  01BA02  11B9               	iorwf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
 34753  01BA04  B4D8               	btfsc	status,2,c
 34754  01BA06  0011               	retfie		f
 34755                           
 34756                           ; BSR set to: 0
 34757                           ;mcc_generated_files/uart2.c: 206:     {;mcc_generated_files/uart2.c: 207:         UART2
      +                          _RxInterruptHandler();
 34758  01BA08  D801               	call	i2u1040_48
 34759  01BA0A  0011               	retfie		f
 34760  01BA0C                     i2u1040_48:
 34761  01BA0C  0005               	push	
 34762  01BA0E  6EFA               	movwf	pclath,c
 34763  01BA10  51B7               	movf	_UART2_RxInterruptHandler& (0+255),w,b
 34764  01BA12  6EFD               	movwf	tosl,c
 34765  01BA14  51B8               	movf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
 34766  01BA16  6EFE               	movwf	tosh,c
 34767  01BA18  51B9               	movf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
 34768  01BA1A  6EFF               	movwf	tosu,c
 34769  01BA1C  50FA               	movf	pclath,w,c
 34770  01BA1E  0012               	return		;indir
 34771  01BA20                     __end_of_UART2_rx_vect_isr:
 34772                           	opt callstack 0
 34773                           
 34774 ;; *************** function _UART2_Receive_ISR *****************
 34775 ;; Defined at:
 34776 ;;		line 233 in file "mcc_generated_files/uart2.c"
 34777 ;; Parameters:    Size  Location     Type
 34778 ;;		None
 34779 ;; Auto vars:     Size  Location     Type
 34780 ;;		None
 34781 ;; Return value:  Size  Location     Type
 34782 ;;                  1  [STACK] void 
 34783 ;; Registers used:
 34784 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 34785 ;; Tracked objects:
 34786 ;;		On entry : 3F/0
 34787 ;;		On exit  : 3F/0
 34788 ;;		Unchanged: 0/0
 34789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34790 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34791 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34793 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34794 ;;Total ram usage:        0 bytes
 34795 ;; Hardware stack levels used:    1
 34796 ;; This function calls:
 34797 ;;		Nothing
 34798 ;; This function is called by:
 34799 ;;		_UART2_Initialize
 34800 ;;		_UART2_rx_vect_isr
 34801 ;; This function uses a reentrant model
 34802 ;;
 34803                           
 34804                           	psect	text169
 34805  01BB5C                     __ptext169:
 34806                           	opt callstack 0
 34807  01BB5C                     _UART2_Receive_ISR:
 34808                           	opt callstack 4
 34809                           
 34810                           ;mcc_generated_files/uart2.c: 236:     uart2RxBuffer[uart2RxHead++] = U2RXB;
 34811                           
 34812                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34813                           ;incstack = 0
 34814  01BB5C  0E00               	movlw	low _uart2RxBuffer
 34815  01BB5E  2443               	addwf	_uart2RxHead^0,w,c	;volatile
 34816  01BB60  6ED9               	movwf	fsr2l,c
 34817  01BB62  6ADA               	clrf	fsr2h,c
 34818  01BB64  0E04               	movlw	high _uart2RxBuffer
 34819  01BB66  22DA               	addwfc	fsr2h,f,c
 34820  01BB68  006F F743 FFDF     	movff	15824,indf2	;volatile
 34821  01BB6E  2A43               	incf	_uart2RxHead^0,f,c	;volatile
 34822                           
 34823                           ;mcc_generated_files/uart2.c: 237:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
 34824  01BB70  2843               	incf	_uart2RxHead^0,w,c
 34825  01BB72  B4D8               	btfsc	status,2,c
 34826                           
 34827                           ;mcc_generated_files/uart2.c: 238:     {;mcc_generated_files/uart2.c: 239:         uart2
      +                          RxHead = 0;
 34828  01BB74  6A43               	clrf	_uart2RxHead^0,c	;volatile
 34829                           
 34830                           ;mcc_generated_files/uart2.c: 241:     uart2RxCount++;
 34831  01BB76  0100               	movlb	0	; () banked
 34832  01BB78  2BCB               	incf	_uart2RxCount& (0+255),f,b	;volatile
 34833                           
 34834                           ; BSR set to: 0
 34835                           ; _UART2_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 34836  01BB7A  0012               	return		;funcret
 34837  01BB7C                     __end_of_UART2_Receive_ISR:
 34838                           	opt callstack 0
 34839                           
 34840 ;; *************** function _TMR6_ISR *****************
 34841 ;; Defined at:
 34842 ;;		line 171 in file "mcc_generated_files/tmr6.c"
 34843 ;; Parameters:    Size  Location     Type
 34844 ;;		None
 34845 ;; Auto vars:     Size  Location     Type
 34846 ;;		None
 34847 ;; Return value:  Size  Location     Type
 34848 ;;                  1    wreg      void 
 34849 ;; Registers used:
 34850 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 34851 ;; Tracked objects:
 34852 ;;		On entry : 0/0
 34853 ;;		On exit  : 0/0
 34854 ;;		Unchanged: 0/0
 34855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34856 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34857 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34858 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34859 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34860 ;;Total ram usage:        1 bytes
 34861 ;; Hardware stack levels used:    1
 34862 ;; Hardware stack levels required when called:    2
 34863 ;; This function calls:
 34864 ;;		_TMR6_CallBack
 34865 ;; This function is called by:
 34866 ;;		Interrupt level 2
 34867 ;; This function uses a non-reentrant model
 34868 ;;
 34869                           
 34870                           	psect	text170
 34871  01BC2C                     __ptext170:
 34872                           	opt callstack 0
 34873  01BC2C                     _TMR6_ISR:
 34874                           	opt callstack 3
 34875                           
 34876                           ; BSR set to: 0
 34877                           ;incstack = 0
 34878  01BC2C  0060  F004  F026   	movff	btemp,??_TMR6_ISR
 34879  01BC32  EE14  F15C         	lfsr	1,___inthi_sp
 34880                           
 34881                           ;mcc_generated_files/tmr6.c: 175:     PIR9bits.TMR6IF = 0;
 34882  01BC36  0139               	movlb	57	; () banked
 34883  01BC38  91A9               	bcf	169,0,b	;volatile
 34884                           
 34885                           ; BSR set to: 57
 34886                           ;mcc_generated_files/tmr6.c: 179:     TMR6_CallBack();
 34887  01BC3A  EC6A  F0DD         	call	_TMR6_CallBack	;wreg free
 34888  01BC3E  0060  F098  F001   	movff	??_TMR6_ISR,btemp
 34889  01BC44  0011               	retfie		f
 34890  01BC46                     __end_of_TMR6_ISR:
 34891                           	opt callstack 0
 34892                           
 34893 ;; *************** function _TMR6_CallBack *****************
 34894 ;; Defined at:
 34895 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 34896 ;; Parameters:    Size  Location     Type
 34897 ;;		None
 34898 ;; Auto vars:     Size  Location     Type
 34899 ;;		None
 34900 ;; Return value:  Size  Location     Type
 34901 ;;                  1  [STACK] void 
 34902 ;; Registers used:
 34903 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 34904 ;; Tracked objects:
 34905 ;;		On entry : 3F/39
 34906 ;;		On exit  : 0/0
 34907 ;;		Unchanged: 0/0
 34908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34909 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34910 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34911 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34912 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34913 ;;Total ram usage:        0 bytes
 34914 ;; Hardware stack levels used:    1
 34915 ;; Hardware stack levels required when called:    1
 34916 ;; This function calls:
 34917 ;;		Absolute function
 34918 ;;		_TMR6_DefaultInterruptHandler
 34919 ;; This function is called by:
 34920 ;;		_TMR6_ISR
 34921 ;; This function uses a reentrant model
 34922 ;;
 34923                           
 34924                           	psect	text171
 34925  01BAD4                     __ptext171:
 34926                           	opt callstack 0
 34927  01BAD4                     _TMR6_CallBack:
 34928                           	opt callstack 3
 34929                           
 34930                           ;mcc_generated_files/tmr6.c: 186:     if(TMR6_InterruptHandler)
 34931                           
 34932                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34933                           ;incstack = 0
 34934  01BAD4  0100               	movlb	0	; () banked
 34935  01BAD6  51A8               	movf	_TMR6_InterruptHandler& (0+255),w,b
 34936  01BAD8  11A9               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 34937  01BADA  11AA               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 34938  01BADC  B4D8               	btfsc	status,2,c
 34939  01BADE  0012               	return	
 34940                           
 34941                           ; BSR set to: 0
 34942                           ;mcc_generated_files/tmr6.c: 187:     {;mcc_generated_files/tmr6.c: 188:         TMR6_In
      +                          terruptHandler();
 34943  01BAE0  D801               	call	u997_48
 34944  01BAE2  0012               	return	
 34945  01BAE4                     u997_48:
 34946  01BAE4  0005               	push	
 34947  01BAE6  6EFA               	movwf	pclath,c
 34948  01BAE8  51A8               	movf	_TMR6_InterruptHandler& (0+255),w,b
 34949  01BAEA  6EFD               	movwf	tosl,c
 34950  01BAEC  51A9               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 34951  01BAEE  6EFE               	movwf	tosh,c
 34952  01BAF0  51AA               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 34953  01BAF2  6EFF               	movwf	tosu,c
 34954  01BAF4  50FA               	movf	pclath,w,c
 34955  01BAF6  0012               	return		;indir
 34956  01BAF8                     __end_of_TMR6_CallBack:
 34957                           	opt callstack 0
 34958                           
 34959 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 34960 ;; Defined at:
 34961 ;;		line 196 in file "mcc_generated_files/tmr6.c"
 34962 ;; Parameters:    Size  Location     Type
 34963 ;;		None
 34964 ;; Auto vars:     Size  Location     Type
 34965 ;;  i               1  [STACK] unsigned char 
 34966 ;; Return value:  Size  Location     Type
 34967 ;;                  1  [STACK] void 
 34968 ;; Registers used:
 34969 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 34970 ;; Tracked objects:
 34971 ;;		On entry : 3F/0
 34972 ;;		On exit  : 0/0
 34973 ;;		Unchanged: 0/0
 34974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34975 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34976 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34978 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34979 ;;Total ram usage:        0 bytes
 34980 ;; Hardware stack levels used:    1
 34981 ;; This function calls:
 34982 ;;		Nothing
 34983 ;; This function is called by:
 34984 ;;		_TMR6_Initialize
 34985 ;;		_TMR6_CallBack
 34986 ;; This function uses a reentrant model
 34987 ;;
 34988                           
 34989                           	psect	text172
 34990  01B012                     __ptext172:
 34991                           	opt callstack 0
 34992  01B012                     _TMR6_DefaultInterruptHandler:
 34993                           	opt callstack 0
 34994                           
 34995                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34996  01B012  52E6               	movf	postinc1,f,c
 34997                           
 34998                           ;mcc_generated_files/tmr6.c: 198:  uint8_t i;;mcc_generated_files/tmr6.c: 203:  for (i =
      +                           0; i < TMR_COUNT; i++) {
 34999                           ;stkvar	_i @ sp[(-1)+0]
 35000                           
 35001                           ;incstack = 0
 35002  01B014  0EFF               	movlw	-1
 35003  01B016  6AE3               	clrf	plusw1,c
 35004  01B018                     l10249:
 35005                           
 35006                           ;mcc_generated_files/tmr6.c: 204:   if (tickCount[i] != 0) {
 35007                           ;stkvar	_i @ sp[(-1)+0]
 35008  01B018  0EFF               	movlw	-1
 35009  01B01A  50E3               	movf	plusw1,w,c
 35010  01B01C  0D02               	mullw	2
 35011  01B01E  0E7D               	movlw	low _tickCount
 35012  01B020  24F3               	addwf	243,w,c
 35013  01B022  6ED9               	movwf	fsr2l,c
 35014  01B024  0E02               	movlw	high _tickCount
 35015  01B026  20F4               	addwfc	prodh,w,c
 35016  01B028  6EDA               	movwf	fsr2h,c
 35017  01B02A  50DE               	movf	postinc2,w,c
 35018  01B02C  10DE               	iorwf	postinc2,w,c
 35019  01B02E  B4D8               	btfsc	status,2,c
 35020  01B030  D00C               	goto	l10253
 35021                           
 35022                           ;mcc_generated_files/tmr6.c: 205:    tickCount[i]--;
 35023                           ;stkvar	_i @ sp[(-1)+0]
 35024  01B032  0EFF               	movlw	-1
 35025  01B034  50E3               	movf	plusw1,w,c
 35026  01B036  0D02               	mullw	2
 35027  01B038  0E7D               	movlw	low _tickCount
 35028  01B03A  24F3               	addwf	243,w,c
 35029  01B03C  6ED9               	movwf	fsr2l,c
 35030  01B03E  0E02               	movlw	high _tickCount
 35031  01B040  20F4               	addwfc	prodh,w,c
 35032  01B042  6EDA               	movwf	fsr2h,c
 35033  01B044  06DE               	decf	postinc2,f,c
 35034  01B046  0E00               	movlw	0
 35035  01B048  5ADD               	subwfb	postdec2,f,c
 35036  01B04A                     l10253:
 35037                           
 35038                           ;mcc_generated_files/tmr6.c: 207:  }
 35039                           ;stkvar	_i @ sp[(-1)+0]
 35040  01B04A  0EFF               	movlw	-1
 35041  01B04C  2AE3               	incf	plusw1,f,c
 35042                           
 35043                           ;stkvar	_i @ sp[(-1)+0]
 35044  01B04E  0EFF               	movlw	-1
 35045  01B050  006F FF8C  F001    	movff	plusw1,btemp
 35046  01B056  0E0C               	movlw	12
 35047  01B058  6401               	cpfsgt	btemp^0,c
 35048  01B05A  D7DE               	goto	l10249
 35049                           
 35050                           ; _TMR6_DefaultInterruptHandler: autosize = 1, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 35051  01B05C  52E5               	movf	postdec1,f,c
 35052  01B05E  0012               	return		;funcret
 35053  01B060                     __end_of_TMR6_DefaultInterruptHandler:
 35054                           	opt callstack 0
 35055                           
 35056 ;; *************** function _DMA1_DMASCNT_ISR *****************
 35057 ;; Defined at:
 35058 ;;		line 126 in file "mcc_generated_files/dma1.c"
 35059 ;; Parameters:    Size  Location     Type
 35060 ;;		None
 35061 ;; Auto vars:     Size  Location     Type
 35062 ;;		None
 35063 ;; Return value:  Size  Location     Type
 35064 ;;                  1    wreg      void 
 35065 ;; Registers used:
 35066 ;;		None
 35067 ;; Tracked objects:
 35068 ;;		On entry : 0/0
 35069 ;;		On exit  : 3F/0
 35070 ;;		Unchanged: 0/0
 35071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35072 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35073 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35074 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35075 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35076 ;;Total ram usage:        0 bytes
 35077 ;; Hardware stack levels used:    1
 35078 ;; This function calls:
 35079 ;;		Nothing
 35080 ;; This function is called by:
 35081 ;;		Interrupt level 2
 35082 ;; This function uses a non-reentrant model
 35083 ;;
 35084                           
 35085                           	psect	text173
 35086  01BD68                     __ptext173:
 35087                           	opt callstack 0
 35088  01BD68                     _DMA1_DMASCNT_ISR:
 35089                           	opt callstack 5
 35090                           
 35091                           ;incstack = 0
 35092  01BD68  EE14  F15C         	lfsr	1,___inthi_sp
 35093                           
 35094                           ;mcc_generated_files/dma1.c: 128:  PIR2bits.DMA1SCNTIF = 0;
 35095  01BD6C  0139               	movlb	57	; () banked
 35096  01BD6E  91A2               	bcf	162,0,b	;volatile
 35097                           
 35098                           ;mcc_generated_files/dma1.c: 130:  spi_link.LCD_DATA = 0;
 35099  01BD70  0100               	movlb	0	; () banked
 35100  01BD72  9760               	bcf	_spi_link& (0+255),3,b	;volatile
 35101                           
 35102                           ; BSR set to: 0
 35103  01BD74  0011               	retfie		f
 35104  01BD76                     __end_of_DMA1_DMASCNT_ISR:
 35105                           	opt callstack 0
 35106                           
 35107 ;; *************** function _DMA1_DMADCNT_ISR *****************
 35108 ;; Defined at:
 35109 ;;		line 134 in file "mcc_generated_files/dma1.c"
 35110 ;; Parameters:    Size  Location     Type
 35111 ;;		None
 35112 ;; Auto vars:     Size  Location     Type
 35113 ;;		None
 35114 ;; Return value:  Size  Location     Type
 35115 ;;                  1    wreg      void 
 35116 ;; Registers used:
 35117 ;;		None
 35118 ;; Tracked objects:
 35119 ;;		On entry : 0/0
 35120 ;;		On exit  : 3F/39
 35121 ;;		Unchanged: 0/0
 35122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35123 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35124 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35125 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35126 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35127 ;;Total ram usage:        0 bytes
 35128 ;; Hardware stack levels used:    1
 35129 ;; This function calls:
 35130 ;;		Nothing
 35131 ;; This function is called by:
 35132 ;;		Interrupt level 2
 35133 ;; This function uses a non-reentrant model
 35134 ;;
 35135                           
 35136                           	psect	text174
 35137  01BD8C                     __ptext174:
 35138                           	opt callstack 0
 35139  01BD8C                     _DMA1_DMADCNT_ISR:
 35140                           	opt callstack 5
 35141                           
 35142                           ; BSR set to: 0
 35143                           ;incstack = 0
 35144  01BD8C  EE14  F15C         	lfsr	1,___inthi_sp
 35145                           
 35146                           ;mcc_generated_files/dma1.c: 136:  PIR2bits.DMA1DCNTIF = 0;
 35147  01BD90  0139               	movlb	57	; () banked
 35148  01BD92  93A2               	bcf	162,1,b	;volatile
 35149                           
 35150                           ; BSR set to: 57
 35151  01BD94  0011               	retfie		f
 35152  01BD96                     __end_of_DMA1_DMADCNT_ISR:
 35153                           	opt callstack 0
 35154                           
 35155 ;; *************** function _DMA1_DMAA_ISR *****************
 35156 ;; Defined at:
 35157 ;;		line 144 in file "mcc_generated_files/dma1.c"
 35158 ;; Parameters:    Size  Location     Type
 35159 ;;		None
 35160 ;; Auto vars:     Size  Location     Type
 35161 ;;		None
 35162 ;; Return value:  Size  Location     Type
 35163 ;;                  1    wreg      void 
 35164 ;; Registers used:
 35165 ;;		None
 35166 ;; Tracked objects:
 35167 ;;		On entry : 0/0
 35168 ;;		On exit  : 3F/39
 35169 ;;		Unchanged: 0/0
 35170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35171 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35172 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35173 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35174 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35175 ;;Total ram usage:        0 bytes
 35176 ;; Hardware stack levels used:    1
 35177 ;; This function calls:
 35178 ;;		Nothing
 35179 ;; This function is called by:
 35180 ;;		Interrupt level 2
 35181 ;; This function uses a non-reentrant model
 35182 ;;
 35183                           
 35184                           	psect	text175
 35185  01BD98                     __ptext175:
 35186                           	opt callstack 0
 35187  01BD98                     _DMA1_DMAA_ISR:
 35188                           	opt callstack 5
 35189                           
 35190                           ; BSR set to: 57
 35191                           ;incstack = 0
 35192  01BD98  EE14  F15C         	lfsr	1,___inthi_sp
 35193                           
 35194                           ;mcc_generated_files/dma1.c: 147:  PIR2bits.DMA1AIF = 0;
 35195  01BD9C  0139               	movlb	57	; () banked
 35196  01BD9E  97A2               	bcf	162,3,b	;volatile
 35197                           
 35198                           ; BSR set to: 57
 35199  01BDA0  0011               	retfie		f
 35200  01BDA2                     __end_of_DMA1_DMAA_ISR:
 35201                           	opt callstack 0
 35202                           
 35203 ;; *************** function _DMA1_DMAOR_ISR *****************
 35204 ;; Defined at:
 35205 ;;		line 155 in file "mcc_generated_files/dma1.c"
 35206 ;; Parameters:    Size  Location     Type
 35207 ;;		None
 35208 ;; Auto vars:     Size  Location     Type
 35209 ;;		None
 35210 ;; Return value:  Size  Location     Type
 35211 ;;                  1    wreg      void 
 35212 ;; Registers used:
 35213 ;;		None
 35214 ;; Tracked objects:
 35215 ;;		On entry : 0/0
 35216 ;;		On exit  : 3F/39
 35217 ;;		Unchanged: 0/0
 35218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35219 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35220 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35221 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35222 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35223 ;;Total ram usage:        0 bytes
 35224 ;; Hardware stack levels used:    1
 35225 ;; This function calls:
 35226 ;;		Nothing
 35227 ;; This function is called by:
 35228 ;;		Interrupt level 2
 35229 ;; This function uses a non-reentrant model
 35230 ;;
 35231                           
 35232                           	psect	text176
 35233  01BDA4                     __ptext176:
 35234                           	opt callstack 0
 35235  01BDA4                     _DMA1_DMAOR_ISR:
 35236                           	opt callstack 5
 35237                           
 35238                           ; BSR set to: 57
 35239                           ;incstack = 0
 35240  01BDA4  EE14  F15C         	lfsr	1,___inthi_sp
 35241                           
 35242                           ;mcc_generated_files/dma1.c: 158:  PIR2bits.DMA1ORIF = 0;
 35243  01BDA8  0139               	movlb	57	; () banked
 35244  01BDAA  95A2               	bcf	162,2,b	;volatile
 35245                           
 35246                           ; BSR set to: 57
 35247  01BDAC  0011               	retfie		f
 35248  01BDAE                     __end_of_DMA1_DMAOR_ISR:
 35249                           	opt callstack 0
 35250                           
 35251                           ;
 35252                           ; Interrupt Vector Table @ 0x8
 35253                           ;
 35254                           
 35255                           	psect	ivt0x8
 35256  000008                     __pivt0x8:
 35257                           	opt callstack 0
 35258  000008                     ivt0x8_base:
 35259                           	opt callstack 0
 35260                           
 35261                           ; Vector 0 : SWINT
 35262  000008  6F7C               	dw	_Default_ISR shr (0+2)
 35263                           
 35264                           ; Vector 1 : HLVD
 35265  00000A  6F7C               	dw	_Default_ISR shr (0+2)
 35266                           
 35267                           ; Vector 2 : OSF
 35268  00000C  6F7C               	dw	_Default_ISR shr (0+2)
 35269                           
 35270                           ; Vector 3 : CSW
 35271  00000E  6F7C               	dw	_Default_ISR shr (0+2)
 35272                           
 35273                           ; Vector 4 : NVM
 35274  000010  6F7C               	dw	_Default_ISR shr (0+2)
 35275                           
 35276                           ; Vector 5 : SCAN
 35277  000012  6F7C               	dw	_Default_ISR shr (0+2)
 35278                           
 35279                           ; Vector 6 : CRC
 35280  000014  6F7C               	dw	_Default_ISR shr (0+2)
 35281                           
 35282                           ; Vector 7 : IOC
 35283  000016  6F7C               	dw	_Default_ISR shr (0+2)
 35284                           
 35285                           ; Vector 8 : INT0
 35286  000018  6F56               	dw	_INT0_ISR shr (0+2)
 35287                           
 35288                           ; Vector 9 : ZCD
 35289  00001A  6F7C               	dw	_Default_ISR shr (0+2)
 35290                           
 35291                           ; Vector 10 : AD
 35292  00001C  6DBD               	dw	_ADCC_ISR shr (0+2)
 35293                           
 35294                           ; Vector 11 : ADT
 35295  00001E  6B04               	dw	_ADCC_ThresholdISR shr (0+2)
 35296                           
 35297                           ; Vector 12 : CMP1
 35298  000020  6F7C               	dw	_Default_ISR shr (0+2)
 35299                           
 35300                           ; Vector 13 : SMT1
 35301  000022  6F7C               	dw	_Default_ISR shr (0+2)
 35302                           
 35303                           ; Vector 14 : SMT1PRA
 35304  000024  6F7C               	dw	_Default_ISR shr (0+2)
 35305                           
 35306                           ; Vector 15 : SMT1PRW
 35307  000026  6F7C               	dw	_Default_ISR shr (0+2)
 35308                           
 35309                           ; Vector 16 : DMA1SCNT
 35310  000028  6F5A               	dw	_DMA1_DMASCNT_ISR shr (0+2)
 35311                           
 35312                           ; Vector 17 : DMA1DCNT
 35313  00002A  6F63               	dw	_DMA1_DMADCNT_ISR shr (0+2)
 35314                           
 35315                           ; Vector 18 : DMA1OR
 35316  00002C  6F69               	dw	_DMA1_DMAOR_ISR shr (0+2)
 35317                           
 35318                           ; Vector 19 : DMA1A
 35319  00002E  6F66               	dw	_DMA1_DMAA_ISR shr (0+2)
 35320                           
 35321                           ; Vector 20 : SPI1RX
 35322  000030  6F7C               	dw	_Default_ISR shr (0+2)
 35323                           
 35324                           ; Vector 21 : SPI1TX
 35325  000032  6F7C               	dw	_Default_ISR shr (0+2)
 35326                           
 35327                           ; Vector 22 : SPI1
 35328  000034  6F7C               	dw	_Default_ISR shr (0+2)
 35329                           
 35330                           ; Vector 23 : I2C1RX
 35331  000036  6F7C               	dw	_Default_ISR shr (0+2)
 35332                           
 35333                           ; Vector 24 : I2C1TX
 35334  000038  6F7C               	dw	_Default_ISR shr (0+2)
 35335                           
 35336                           ; Vector 25 : I2C1
 35337  00003A  6F7C               	dw	_Default_ISR shr (0+2)
 35338                           
 35339                           ; Vector 26 : I2C1E
 35340  00003C  6F7C               	dw	_Default_ISR shr (0+2)
 35341                           
 35342                           ; Vector 27 : U1RX
 35343  00003E  6E6A               	dw	_UART1_rx_vect_isr shr (0+2)
 35344                           
 35345                           ; Vector 28 : U1TX
 35346  000040  6F7C               	dw	_Default_ISR shr (0+2)
 35347                           
 35348                           ; Vector 29 : U1E
 35349  000042  6F7C               	dw	_Default_ISR shr (0+2)
 35350                           
 35351                           ; Vector 30 : U1
 35352  000044  6F7C               	dw	_Default_ISR shr (0+2)
 35353                           
 35354                           ; Vector 31 : TMR0
 35355  000046  6F7C               	dw	_Default_ISR shr (0+2)
 35356                           
 35357                           ; Vector 32 : TMR1
 35358  000048  6F7C               	dw	_Default_ISR shr (0+2)
 35359                           
 35360                           ; Vector 33 : TMR1G
 35361  00004A  6F7C               	dw	_Default_ISR shr (0+2)
 35362                           
 35363                           ; Vector 34 : TMR2
 35364  00004C  6F7C               	dw	_Default_ISR shr (0+2)
 35365                           
 35366                           ; Vector 35 : CCP1
 35367  00004E  6F7C               	dw	_Default_ISR shr (0+2)
 35368                           
 35369                           ; Vector 36 : Undefined
 35370  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 35371                           
 35372                           ; Vector 37 : NCO1
 35373  000052  6F7C               	dw	_Default_ISR shr (0+2)
 35374                           
 35375                           ; Vector 38 : CWG1
 35376  000054  6F7C               	dw	_Default_ISR shr (0+2)
 35377                           
 35378                           ; Vector 39 : CLC1
 35379  000056  6F7C               	dw	_Default_ISR shr (0+2)
 35380                           
 35381                           ; Vector 40 : INT1
 35382  000058  6D07               	dw	_INT1_ISR shr (0+2)
 35383                           
 35384                           ; Vector 41 : CMP2
 35385  00005A  6F7C               	dw	_Default_ISR shr (0+2)
 35386                           
 35387                           ; Vector 42 : DMA2SCNT
 35388  00005C  6F7C               	dw	_Default_ISR shr (0+2)
 35389                           
 35390                           ; Vector 43 : DMA2DCNT
 35391  00005E  6F7C               	dw	_Default_ISR shr (0+2)
 35392                           
 35393                           ; Vector 44 : DMA2OR
 35394  000060  6F7C               	dw	_Default_ISR shr (0+2)
 35395                           
 35396                           ; Vector 45 : DMA2A
 35397  000062  6F7C               	dw	_Default_ISR shr (0+2)
 35398                           
 35399                           ; Vector 46 : I2C2RX
 35400  000064  6F7C               	dw	_Default_ISR shr (0+2)
 35401                           
 35402                           ; Vector 47 : I2C2TX
 35403  000066  6F7C               	dw	_Default_ISR shr (0+2)
 35404                           
 35405                           ; Vector 48 : I2C2
 35406  000068  6F7C               	dw	_Default_ISR shr (0+2)
 35407                           
 35408                           ; Vector 49 : I2C2E
 35409  00006A  6F7C               	dw	_Default_ISR shr (0+2)
 35410                           
 35411                           ; Vector 50 : U2RX
 35412  00006C  6E7E               	dw	_UART2_rx_vect_isr shr (0+2)
 35413                           
 35414                           ; Vector 51 : U2TX
 35415  00006E  6E74               	dw	_UART2_tx_vect_isr shr (0+2)
 35416                           
 35417                           ; Vector 52 : U2E
 35418  000070  6F7C               	dw	_Default_ISR shr (0+2)
 35419                           
 35420                           ; Vector 53 : U2
 35421  000072  6F7C               	dw	_Default_ISR shr (0+2)
 35422                           
 35423                           ; Vector 54 : TMR3
 35424  000074  6399               	dw	_TMR3_ISR shr (0+2)
 35425                           
 35426                           ; Vector 55 : TMR3G
 35427  000076  6F7C               	dw	_Default_ISR shr (0+2)
 35428                           
 35429                           ; Vector 56 : TMR4
 35430  000078  6F7C               	dw	_Default_ISR shr (0+2)
 35431                           
 35432                           ; Vector 57 : CCP2
 35433  00007A  6F7C               	dw	_Default_ISR shr (0+2)
 35434                           
 35435                           ; Vector 58 : Undefined
 35436  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 35437                           
 35438                           ; Vector 59 : CWG2
 35439  00007E  6F7C               	dw	_Default_ISR shr (0+2)
 35440                           
 35441                           ; Vector 60 : CLC2
 35442  000080  6F7C               	dw	_Default_ISR shr (0+2)
 35443                           
 35444                           ; Vector 61 : INT2
 35445  000082  6F7C               	dw	_Default_ISR shr (0+2)
 35446                           
 35447                           ; Vector 62 : Undefined
 35448  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 35449                           
 35450                           ; Vector 63 : Undefined
 35451  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 35452                           
 35453                           ; Vector 64 : Undefined
 35454  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 35455                           
 35456                           ; Vector 65 : Undefined
 35457  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 35458                           
 35459                           ; Vector 66 : Undefined
 35460  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 35461                           
 35462                           ; Vector 67 : Undefined
 35463  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 35464                           
 35465                           ; Vector 68 : Undefined
 35466  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 35467                           
 35468                           ; Vector 69 : Undefined
 35469  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 35470                           
 35471                           ; Vector 70 : TMR5
 35472  000094  67C4               	dw	_TMR5_ISR shr (0+2)
 35473                           
 35474                           ; Vector 71 : TMR5G
 35475  000096  6F7C               	dw	_Default_ISR shr (0+2)
 35476                           
 35477                           ; Vector 72 : TMR6
 35478  000098  6F0B               	dw	_TMR6_ISR shr (0+2)
 35479                           
 35480                           ; Vector 73 : CCP3
 35481  00009A  6F7C               	dw	_Default_ISR shr (0+2)
 35482                           
 35483                           ; Vector 74 : CWG3
 35484  00009C  6F7C               	dw	_Default_ISR shr (0+2)
 35485                           
 35486                           ; Vector 75 : CLC3
 35487  00009E  6F7C               	dw	_Default_ISR shr (0+2)
 35488                           
 35489                           ; Vector 76 : Undefined
 35490  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 35491                           
 35492                           ; Vector 77 : Undefined
 35493  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 35494                           
 35495                           ; Vector 78 : Undefined
 35496  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 35497                           
 35498                           ; Vector 79 : Undefined
 35499  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 35500                           
 35501                           ; Vector 80 : CCP4
 35502  0000A8  6F7C               	dw	_Default_ISR shr (0+2)
 35503                           
 35504                           ; Vector 81 : CLC4
 35505  0000AA  6F7C               	dw	_Default_ISR shr (0+2)
 35506  0000AC                     ivt0x8_undefint:
 35507                           	opt callstack 0
 35508  0000AC  00FF               	reset	
 35509                           
 35510                           	psect	text177
 35511  000000                     __ptext177:
 35512                           	opt callstack 0
 35513                           
 35514                           	psect	rparam
 35515  0000                     
 35516                           	psect	temp
 35517  000001                     btemp:
 35518                           	opt callstack 0
 35519  000001                     	ds	32
 35520  0000                     wtemp0	set	btemp
 35521  0000                     wtemp1	set	btemp+2
 35522  0000                     wtemp2	set	btemp+4
 35523  0000                     wtemp3	set	btemp+6
 35524  0000                     wtemp4	set	btemp+8
 35525  0000                     wtemp5	set	btemp+10
 35526  0000                     wtemp8	set	btemp+1
 35527  0000                     ttemp0	set	btemp
 35528  0000                     ttemp1	set	btemp+3
 35529  0000                     ttemp2	set	btemp+6
 35530  0000                     ttemp3	set	btemp+9
 35531  0000                     ttemp5	set	btemp+1
 35532  0000                     ttemp6	set	btemp+4
 35533  0000                     ttemp7	set	btemp+8
 35534  0000                     ltemp0	set	btemp
 35535  0000                     ltemp1	set	btemp+4
 35536  0000                     ltemp2	set	btemp+8
 35537  0000                     lltemp0	set	btemp
 35538  0000                     lltemp1	set	btemp+8
 35539  0000                     lltemp2	set	btemp+16
 35540  0000                     lltemp3	set	btemp+24
 35541                           tosu	equ	0x3FFF
 35542                           tosh	equ	0x3FFE
 35543                           tosl	equ	0x3FFD
 35544                           stkptr	equ	0x3FFC
 35545                           pclatu	equ	0x3FFB
 35546                           pclath	equ	0x3FFA
 35547                           pcl	equ	0x3FF9
 35548                           tblptru	equ	0x3FF8
 35549                           tblptrh	equ	0x3FF7
 35550                           tblptrl	equ	0x3FF6
 35551                           tablat	equ	0x3FF5
 35552                           prodh	equ	0x3FF4
 35553                           prodl	equ	0x3FF3
 35554                           indf0	equ	0x3FEF
 35555                           postinc0	equ	0x3FEE
 35556                           postdec0	equ	0x3FED
 35557                           preinc0	equ	0x3FEC
 35558                           plusw0	equ	0x3FEB
 35559                           fsr0h	equ	0x3FEA
 35560                           fsr0l	equ	0x3FE9
 35561                           wreg	equ	0x3FE8
 35562                           indf1	equ	0x3FE7
 35563                           postinc1	equ	0x3FE6
 35564                           postdec1	equ	0x3FE5
 35565                           preinc1	equ	0x3FE4
 35566                           plusw1	equ	0x3FE3
 35567                           fsr1h	equ	0x3FE2
 35568                           fsr1l	equ	0x3FE1
 35569                           bsr	equ	0x3FE0
 35570                           indf2	equ	0x3FDF
 35571                           postinc2	equ	0x3FDE
 35572                           postdec2	equ	0x3FDD
 35573                           preinc2	equ	0x3FDC
 35574                           plusw2	equ	0x3FDB
 35575                           fsr2h	equ	0x3FDA
 35576                           fsr2l	equ	0x3FD9
 35577                           status	equ	0x3FD8


Data Sizes:
    Strings     940
    Constant    492
    Data        1060
    BSS         1299
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63     25      39
    BANK0           160     25     158
    BANK1           256      0     239
    BANK2           256      0     231
    BANK3           256      0     198
    BANK4           256      0     255
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    s	PTR const unsigned char  size(2) Largest target is 1
		 -> STR_102(CODE[1]), STR_64(CODE[1]), 

    _r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_99(CODE[3]), STR_95(CODE[3]), STR_90(CODE[3]), STR_85(CODE[3]), 
		 -> STR_80(CODE[3]), STR_76(CODE[3]), 

    r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_99(CODE[3]), STR_95(CODE[3]), STR_90(CODE[3]), STR_85(CODE[3]), 
		 -> STR_80(CODE[3]), STR_76(CODE[3]), 

    _l	PTR const unsigned char  size(2) Largest target is 103
		 -> ct(STACK[3]), STR_65(CODE[103]), STR_63(CODE[3]), STR_62(CODE[3]), 
		 -> STR_61(CODE[19]), STR_60(CODE[19]), STR_59(CODE[19]), STR_58(CODE[19]), 
		 -> STR_57(CODE[19]), STR_56(CODE[19]), STR_55(CODE[24]), STR_54(CODE[15]), 
		 -> STR_53(CODE[15]), STR_52(CODE[15]), STR_51(CODE[10]), STR_50(CODE[10]), 
		 -> STR_49(CODE[19]), STR_48(CODE[19]), STR_45(CODE[3]), STR_44(CODE[3]), 
		 -> STR_43(CODE[3]), STR_42(CODE[17]), STR_41(CODE[16]), STR_40(CODE[16]), 
		 -> STR_39(CODE[20]), STR_38(CODE[20]), STR_37(CODE[20]), STR_36(CODE[20]), 
		 -> STR_35(CODE[20]), STR_34(CODE[20]), STR_33(CODE[19]), STR_32(CODE[19]), 
		 -> STR_31(CODE[19]), STR_30(CODE[19]), STR_29(CODE[19]), STR_28(CODE[19]), 
		 -> STR_27(CODE[19]), STR_26(CODE[19]), STR_25(CODE[20]), STR_24(CODE[19]), 
		 -> STR_23(CODE[19]), STR_22(CODE[20]), STR_21(CODE[17]), STR_20(CODE[16]), 
		 -> STR_19(CODE[16]), STR_18(CODE[26]), STR_17(CODE[26]), STR_16(CODE[22]), 
		 -> STR_15(CODE[21]), STR_14(CODE[17]), STR_13(CODE[17]), STR_12(CODE[17]), 
		 -> STR_11(CODE[22]), STR_10(CODE[22]), STR_9(CODE[23]), STR_8(CODE[18]), 
		 -> STR_7(CODE[17]), STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[17]), 
		 -> STR_2(CODE[15]), STR_1(CODE[17]), 

    l	PTR const unsigned char  size(2) Largest target is 103
		 -> ct(STACK[3]), STR_65(CODE[103]), STR_63(CODE[3]), STR_62(CODE[3]), 
		 -> STR_61(CODE[19]), STR_60(CODE[19]), STR_59(CODE[19]), STR_58(CODE[19]), 
		 -> STR_57(CODE[19]), STR_56(CODE[19]), STR_55(CODE[24]), STR_54(CODE[15]), 
		 -> STR_53(CODE[15]), STR_52(CODE[15]), STR_51(CODE[10]), STR_50(CODE[10]), 
		 -> STR_49(CODE[19]), STR_48(CODE[19]), STR_45(CODE[3]), STR_44(CODE[3]), 
		 -> STR_43(CODE[3]), STR_42(CODE[17]), STR_41(CODE[16]), STR_40(CODE[16]), 
		 -> STR_39(CODE[20]), STR_38(CODE[20]), STR_37(CODE[20]), STR_36(CODE[20]), 
		 -> STR_35(CODE[20]), STR_34(CODE[20]), STR_33(CODE[19]), STR_32(CODE[19]), 
		 -> STR_31(CODE[19]), STR_30(CODE[19]), STR_29(CODE[19]), STR_28(CODE[19]), 
		 -> STR_27(CODE[19]), STR_26(CODE[19]), STR_25(CODE[20]), STR_24(CODE[19]), 
		 -> STR_23(CODE[19]), STR_22(CODE[20]), STR_21(CODE[17]), STR_20(CODE[16]), 
		 -> STR_19(CODE[16]), STR_18(CODE[26]), STR_17(CODE[26]), STR_16(CODE[22]), 
		 -> STR_15(CODE[21]), STR_14(CODE[17]), STR_13(CODE[17]), STR_12(CODE[17]), 
		 -> STR_11(CODE[22]), STR_10(CODE[22]), STR_9(CODE[23]), STR_8(CODE[18]), 
		 -> STR_7(CODE[17]), STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[17]), 
		 -> STR_2(CODE[15]), STR_1(CODE[17]), 

    s	PTR const unsigned char  size(2) Largest target is 512
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK2[80]), 
		 -> spin(CODE[120]), STR_47(CODE[9]), STR_46(CODE[12]), D.lcd(BIGRAM[480]), 
		 -> D(BIGRAM[482]), T(CODE[144]), port_data(BIGRAM[512]), STR_3(CODE[7]), 
		 -> V(BANK1[191]), 

    a	PTR const unsigned char  size(2) Largest target is 512
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK2[80]), 
		 -> spin(CODE[120]), STR_47(CODE[9]), STR_46(CODE[12]), D.lcd(BIGRAM[480]), 
		 -> D(BIGRAM[482]), T(CODE[144]), port_data(BIGRAM[512]), STR_3(CODE[7]), 
		 -> V(BANK1[191]), 

    dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_71(CODE[4]), STR_70(CODE[4]), STR_67(CODE[4]), STR_66(CODE[4]), 
		 -> dbuf(BANK2[80]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_71(CODE[4]), STR_70(CODE[4]), STR_67(CODE[4]), STR_66(CODE[4]), 
		 -> dbuf(BANK2[80]), 

    fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_45(CODE[3]), STR_44(CODE[3]), STR_43(CODE[3]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    fmt	PTR const unsigned char  size(2) Largest target is 103
		 -> STR_65(CODE[103]), STR_63(CODE[3]), STR_62(CODE[3]), STR_61(CODE[19]), 
		 -> STR_60(CODE[19]), STR_59(CODE[19]), STR_58(CODE[19]), STR_57(CODE[19]), 
		 -> STR_56(CODE[19]), STR_55(CODE[24]), STR_54(CODE[15]), STR_53(CODE[15]), 
		 -> STR_52(CODE[15]), STR_51(CODE[10]), STR_50(CODE[10]), STR_49(CODE[19]), 
		 -> STR_48(CODE[19]), STR_42(CODE[17]), STR_41(CODE[16]), STR_40(CODE[16]), 
		 -> STR_39(CODE[20]), STR_38(CODE[20]), STR_37(CODE[20]), STR_36(CODE[20]), 
		 -> STR_35(CODE[20]), STR_34(CODE[20]), STR_33(CODE[19]), STR_32(CODE[19]), 
		 -> STR_31(CODE[19]), STR_30(CODE[19]), STR_29(CODE[19]), STR_28(CODE[19]), 
		 -> STR_27(CODE[19]), STR_26(CODE[19]), STR_25(CODE[20]), STR_24(CODE[19]), 
		 -> STR_23(CODE[19]), STR_22(CODE[20]), STR_21(CODE[17]), STR_20(CODE[16]), 
		 -> STR_19(CODE[16]), STR_18(CODE[26]), STR_17(CODE[26]), STR_16(CODE[22]), 
		 -> STR_15(CODE[21]), STR_14(CODE[17]), STR_13(CODE[17]), STR_12(CODE[17]), 
		 -> STR_11(CODE[22]), STR_10(CODE[22]), STR_9(CODE[23]), STR_8(CODE[18]), 
		 -> STR_7(CODE[17]), STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[17]), 
		 -> STR_2(CODE[15]), STR_1(CODE[17]), 

    s	PTR unsigned char  size(2) Largest target is 512
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK1[191]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK1[191]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    S6132_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK1[191]), 

    fp.buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK1[191]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    dest	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    s	PTR unsigned char  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    s	PTR const unsigned char  size(2) Largest target is 103
		 -> STR_65(CODE[103]), STR_63(CODE[3]), STR_62(CODE[3]), STR_61(CODE[19]), 
		 -> STR_60(CODE[19]), STR_59(CODE[19]), STR_58(CODE[19]), STR_57(CODE[19]), 
		 -> STR_56(CODE[19]), STR_55(CODE[24]), STR_54(CODE[15]), STR_53(CODE[15]), 
		 -> STR_52(CODE[15]), STR_51(CODE[10]), STR_50(CODE[10]), STR_49(CODE[19]), 
		 -> STR_48(CODE[19]), STR_45(CODE[3]), STR_44(CODE[3]), STR_43(CODE[3]), 
		 -> STR_42(CODE[17]), STR_41(CODE[16]), STR_40(CODE[16]), STR_39(CODE[20]), 
		 -> STR_38(CODE[20]), STR_37(CODE[20]), STR_36(CODE[20]), STR_35(CODE[20]), 
		 -> STR_34(CODE[20]), STR_33(CODE[19]), STR_32(CODE[19]), STR_31(CODE[19]), 
		 -> STR_30(CODE[19]), STR_29(CODE[19]), STR_28(CODE[19]), STR_27(CODE[19]), 
		 -> STR_26(CODE[19]), STR_25(CODE[20]), STR_24(CODE[19]), STR_23(CODE[19]), 
		 -> STR_22(CODE[20]), STR_21(CODE[17]), STR_20(CODE[16]), STR_19(CODE[16]), 
		 -> STR_18(CODE[26]), STR_17(CODE[26]), STR_16(CODE[22]), STR_15(CODE[21]), 
		 -> STR_14(CODE[17]), STR_13(CODE[17]), STR_12(CODE[17]), STR_11(CODE[22]), 
		 -> STR_10(CODE[22]), STR_9(CODE[23]), STR_8(CODE[18]), STR_7(CODE[17]), 
		 -> STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), 
		 -> STR_1(CODE[17]), 

    f1p	PTR  size(2) Largest target is 295
		 -> C(BIGRAM[295]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fmt	PTR const unsigned char  size(2) Largest target is 103
		 -> STR_65(CODE[103]), STR_63(CODE[3]), STR_62(CODE[3]), STR_61(CODE[19]), 
		 -> STR_60(CODE[19]), STR_59(CODE[19]), STR_58(CODE[19]), STR_57(CODE[19]), 
		 -> STR_56(CODE[19]), STR_55(CODE[24]), STR_54(CODE[15]), STR_53(CODE[15]), 
		 -> STR_52(CODE[15]), STR_51(CODE[10]), STR_50(CODE[10]), STR_49(CODE[19]), 
		 -> STR_48(CODE[19]), STR_45(CODE[3]), STR_44(CODE[3]), STR_43(CODE[3]), 
		 -> STR_42(CODE[17]), STR_41(CODE[16]), STR_40(CODE[16]), STR_39(CODE[20]), 
		 -> STR_38(CODE[20]), STR_37(CODE[20]), STR_36(CODE[20]), STR_35(CODE[20]), 
		 -> STR_34(CODE[20]), STR_33(CODE[19]), STR_32(CODE[19]), STR_31(CODE[19]), 
		 -> STR_30(CODE[19]), STR_29(CODE[19]), STR_28(CODE[19]), STR_27(CODE[19]), 
		 -> STR_26(CODE[19]), STR_25(CODE[20]), STR_24(CODE[19]), STR_23(CODE[19]), 
		 -> STR_22(CODE[20]), STR_21(CODE[17]), STR_20(CODE[16]), STR_19(CODE[16]), 
		 -> STR_18(CODE[26]), STR_17(CODE[26]), STR_16(CODE[22]), STR_15(CODE[21]), 
		 -> STR_14(CODE[17]), STR_13(CODE[17]), STR_12(CODE[17]), STR_11(CODE[22]), 
		 -> STR_10(CODE[22]), STR_9(CODE[23]), STR_8(CODE[18]), STR_7(CODE[17]), 
		 -> STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), 
		 -> STR_1(CODE[17]), 

    cfmt	PTR unsigned char  size(2) Largest target is 103
		 -> STR_65(CODE[103]), STR_63(CODE[3]), STR_62(CODE[3]), STR_61(CODE[19]), 
		 -> STR_60(CODE[19]), STR_59(CODE[19]), STR_58(CODE[19]), STR_57(CODE[19]), 
		 -> STR_56(CODE[19]), STR_55(CODE[24]), STR_54(CODE[15]), STR_53(CODE[15]), 
		 -> STR_52(CODE[15]), STR_51(CODE[10]), STR_50(CODE[10]), STR_49(CODE[19]), 
		 -> STR_48(CODE[19]), STR_45(CODE[3]), STR_44(CODE[3]), STR_43(CODE[3]), 
		 -> STR_42(CODE[17]), STR_41(CODE[16]), STR_40(CODE[16]), STR_39(CODE[20]), 
		 -> STR_38(CODE[20]), STR_37(CODE[20]), STR_36(CODE[20]), STR_35(CODE[20]), 
		 -> STR_34(CODE[20]), STR_33(CODE[19]), STR_32(CODE[19]), STR_31(CODE[19]), 
		 -> STR_30(CODE[19]), STR_29(CODE[19]), STR_28(CODE[19]), STR_27(CODE[19]), 
		 -> STR_26(CODE[19]), STR_25(CODE[20]), STR_24(CODE[19]), STR_23(CODE[19]), 
		 -> STR_22(CODE[20]), STR_21(CODE[17]), STR_20(CODE[16]), STR_19(CODE[16]), 
		 -> STR_18(CODE[26]), STR_17(CODE[26]), STR_16(CODE[22]), STR_15(CODE[21]), 
		 -> STR_14(CODE[17]), STR_13(CODE[17]), STR_12(CODE[17]), STR_11(CODE[22]), 
		 -> STR_10(CODE[22]), STR_9(CODE[23]), STR_8(CODE[18]), STR_7(CODE[17]), 
		 -> STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), 
		 -> STR_1(CODE[17]), 

    cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_47(CODE[9]), STR_46(CODE[12]), 
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), T(CODE[144]), STR_3(CODE[7]), 
		 -> V(BANK1[191]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> cfmt(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_47(CODE[9]), STR_46(CODE[12]), 
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), T(CODE[144]), STR_3(CODE[7]), 
		 -> V(BANK1[191]), 

    cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), STR_47(CODE[9]), 
		 -> STR_46(CODE[12]), D.lcd(BIGRAM[480]), D(BIGRAM[482]), T(CODE[144]), 
		 -> STR_3(CODE[7]), V(BANK1[191]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    log_ptr	PTR unsigned char  size(2) Largest target is 512
		 -> port_data(BIGRAM[512]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    sp__hid_input	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    S4550tm$__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    build_time	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_47(CODE[9]), 

    build_date	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_46(CODE[12]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    sp__memset	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    _this	PTR volatile struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    strPtr	PTR unsigned char  size(2) Largest target is 482
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), V(BANK1[191]), 

    sp__port_data_dma_ptr	PTR unsigned char  size(2) Largest target is 512
		 -> port_data(BIGRAM[512]), 

    strPtr	PTR unsigned char  size(2) Largest target is 482
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), V(BANK1[191]), 

    sp__hid_display	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    sp__get_vterm_ptr	PTR unsigned char  size(2) Largest target is 482
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), 

    TMR3_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    S1995spi_link_type$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    spi_link.tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    S1995spi_link_type$tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), 

    spi_link.tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), Absolute function(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    None.

Critical Paths under _TMR3_ISR in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _ADCC_ISR in COMRAM

    None.

Critical Paths under _ADCC_ThresholdISR in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMASCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMADCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAA_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAOR_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _TMR3_ISR in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _ADCC_ThresholdISR in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _TMR3_ISR in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _ADCC_ThresholdISR in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _TMR3_ISR in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _ADCC_ThresholdISR in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _TMR3_ISR in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _ADCC_ThresholdISR in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _TMR3_ISR in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _ADCC_ThresholdISR in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _TMR3_ISR in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _ADCC_ThresholdISR in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _TMR3_ISR in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _ADCC_ThresholdISR in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _TMR3_ISR in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _ADCC_ThresholdISR in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _TMR3_ISR in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _ADCC_ThresholdISR in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _TMR3_ISR in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _ADCC_ThresholdISR in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _TMR3_ISR in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _ADCC_ThresholdISR in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _TMR3_ISR in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _ADCC_ThresholdISR in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _TMR3_ISR in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _ADCC_ThresholdISR in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _TMR3_ISR in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _ADCC_ThresholdISR in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _TMR3_ISR in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _ADCC_ThresholdISR in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _TMR3_ISR in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _ADCC_ThresholdISR in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _TMR3_ISR in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _ADCC_ThresholdISR in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _TMR3_ISR in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _ADCC_ThresholdISR in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _TMR3_ISR in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _ADCC_ThresholdISR in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _TMR3_ISR in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _ADCC_ThresholdISR in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _TMR3_ISR in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _ADCC_ThresholdISR in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _TMR3_ISR in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _ADCC_ThresholdISR in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _TMR3_ISR in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _ADCC_ThresholdISR in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _TMR3_ISR in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _ADCC_ThresholdISR in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _TMR3_ISR in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _ADCC_ThresholdISR in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _TMR3_ISR in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _ADCC_ThresholdISR in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _TMR3_ISR in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _ADCC_ThresholdISR in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _TMR3_ISR in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _ADCC_ThresholdISR in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _TMR3_ISR in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _ADCC_ThresholdISR in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _TMR3_ISR in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _ADCC_ThresholdISR in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _TMR3_ISR in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _ADCC_ThresholdISR in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Critical Paths under _TMR3_ISR in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _ADCC_ThresholdISR in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                17    17      0  384403
                  _SYSTEM_Initialize
                         _StartTimer
                          _TimerDone
                             _WaitMs
                            ___fladd
                             ___flge
                            ___fltol
                    _calc_model_data
                      _calc_ror_data
                     _check_adc_scan
                 _check_enter_button
                         _check_help
                     _clear_adc_scan
                   _clear_hid_pflags
                    _conv_raw_result
                   _convert_adc_data
                _eaDogM_WriteCommand
                          _esr_check
                              _fabsf
                     _get_raw_result
                         _get_switch
                      _get_vterm_ptr
                        _hid_display
                          _init_bsoc
                       _init_display
                      _init_port_dma
                          _lp_filter
                      _mode_lamp_dim
                   _set_display_info
                 _set_load_relay_one
                 _set_load_relay_two
                          _set_vterm
                           _spinners
                            _sprintf
                              _srand
                     _start_adc_scan
               _start_switch_handler
                         _static_soc
                         _update_lcd
 ---------------------------------------------------------------------------------
 (1) _static_soc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _start_switch_handler                                 0     0      0      22
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _spinners                                             3     1      2     290
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _init_port_dma                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    1268
                      _ringBufS_init
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd                                         1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _SPI1_Exchange8bit                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _ringBufS_init                                        2     0      2    1048
                             _memset
 ---------------------------------------------------------------------------------
 (1) _init_bsoc                                            0     0      0   10948
           _TMR3_SetInterruptHandler
                       _Volts_to_SOC
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                    _conv_raw_result
 ---------------------------------------------------------------------------------
 (2) _Volts_to_SOC                                         9     5      4     687
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _hid_display                                          1     0      1     474
                          _hid_input
 ---------------------------------------------------------------------------------
 (2) _hid_input                                            1     0      1     138
                         _get_switch
 ---------------------------------------------------------------------------------
 (3) _get_switch                                           1     0      1      44
 ---------------------------------------------------------------------------------
 (1) _esr_check                                            1     0      1   10561
                         _StartTimer
                          _TimerDone
                            ___fldiv
                            ___flsub
                    _conv_raw_result
                              _fabsf
                 _set_load_relay_one
                 _set_load_relay_two
                  _update_adc_result
 ---------------------------------------------------------------------------------
 (2) _update_adc_result                                    0     0      0     132
                         _StartTimer
                          _TimerDone
                     _check_adc_scan
                     _clear_adc_scan
                     _start_adc_scan
 ---------------------------------------------------------------------------------
 (1) _start_adc_scan                                       0     0      0      66
      _ADCC_DischargeSampleCapacitor
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (28) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (28) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _clear_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _check_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _set_load_relay_two                                   1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_load_relay_one                                   1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     0      1   31190
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (1) _convert_adc_data                                     1     1      0   12957
                    _conv_raw_result
                          _lp_filter
 ---------------------------------------------------------------------------------
 (1) _clear_hid_pflags                                     1     0      1      44
 ---------------------------------------------------------------------------------
 (1) _check_help                                           2     1      1  186232
                         _StartTimer
                          _TimerDone
                       _display_help
                       _display_info
                      _get_vterm_ptr
                        _help_button
                   _mode_lamp_bright
                      _mode_lamp_dim
                   _set_display_info
              _set_temp_display_help
                          _set_vterm
                            _sprintf
                         _update_lcd
                         _vterm_dump
 ---------------------------------------------------------------------------------
 (2) _vterm_dump                                           0     0      0   92863
                             _WaitMs
            _eaDogM_WriteStringAtPos
                      _get_vterm_ptr
                            _sprintf
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (17) _sprintf                                            84    10     74   30137
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _get_vterm_ptr                                        2     0      2      44
 ---------------------------------------------------------------------------------
 (3) _WaitMs                                               2     0      2      88
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _update_lcd                                           1     0      1   62814
            _eaDogM_WriteStringAtPos
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteStringAtPos                              4     0      4   62550
                 _eaDogM_WriteString
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (3) _send_lcd_cmd_dma                                     1     0      1   31159
                             _printf
                     _ringBufS_flush
                          _start_lcd
                      _wait_lcd_done
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (2) _wait_lcd_done                                        0     0      0      44
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _wdtdelay                                             4     0      4      44
 ---------------------------------------------------------------------------------
 (3) _eaDogM_WriteString                                   2     0      2   31298
                             _printf
                     _ringBufS_flush
                          _start_lcd
                             _strlen
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (4) _wait_lcd_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _start_lcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ringBufS_flush                                       3     0      3    1172
                             _memset
 ---------------------------------------------------------------------------------
 (5) _memset                                              10     4      6    1017
 ---------------------------------------------------------------------------------
 (4) _printf                                               8     4      4   29912
                           _vfprintf
 ---------------------------------------------------------------------------------
 (18) _vfprintf                                            8     2      6   29759
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (19) _vfpfcnvrt                                          45    39      6   29367
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (20) _xtoa                                               31    20     11    2664
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (21) _toupper                                             4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (22) _islower                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _isalpha                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (20) _utoa                                               24    14     10    2371
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (21) ___lomod                                            17     1     16     159
 ---------------------------------------------------------------------------------
 (21) ___lodiv                                            25     9     16     162
 ---------------------------------------------------------------------------------
 (20) _strncmp                                            10     4      6     225
 ---------------------------------------------------------------------------------
 (20) _stoa                                               21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (20) _efgtoa                                             63    56      7   13777
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (20) _tolower                                             4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (21) _isupper                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _strcpy                                              8     4      4     137
 ---------------------------------------------------------------------------------
 (21) _floorf                                             14    10      4     338
 ---------------------------------------------------------------------------------
 (21) ___fpclassifyf                                      10     6      4     135
 ---------------------------------------------------------------------------------
 (21) ___fltol                                             6     2      4     229
 ---------------------------------------------------------------------------------
 (21) ___flneg                                             4     0      4      45
 ---------------------------------------------------------------------------------
 (21) ___fleq                                              8     0      8      90
 ---------------------------------------------------------------------------------
 (21) ___awmod                                             6     2      4     296
 ---------------------------------------------------------------------------------
 (21) ___awdiv                                             8     4      4     300
 ---------------------------------------------------------------------------------
 (20) _dtoa                                               28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (21) _abs                                                 2     0      2      66
 ---------------------------------------------------------------------------------
 (21) ___aomod                                            18     2     16     296
 ---------------------------------------------------------------------------------
 (21) ___aodiv                                            26    10     16     300
 ---------------------------------------------------------------------------------
 (20) _ctoa                                                7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (21) _pad                                                10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (17) _strlen                                              4     2      2      90
 ---------------------------------------------------------------------------------
 (22) _fputs                                               7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (23) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (24) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (25) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (20) _atoi                                               11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (21) _isspace                                             3     1      2      68
 ---------------------------------------------------------------------------------
 (20) _isdigit                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _set_vterm                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _set_temp_display_help                                1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_display_info                                     1     0      1      44
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _mode_lamp_dim                                        2     0      2      66
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _mode_lamp_bright                                     0     0      0      44
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _PWM8_LoadDutyValue                                   2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _help_button                                          0     0      0      66
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (2) _TimerDone                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (17) _StartTimer                                          3     0      3      44
 ---------------------------------------------------------------------------------
 (2) _display_info                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_help                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_enter_button                                   1     0      1      66
 ---------------------------------------------------------------------------------
 (1) _calc_ror_data                                        0     0      0    9380
                             ___flge
                            ___flsub
                    _conv_raw_result
                              _fabsf
 ---------------------------------------------------------------------------------
 (17) _fabsf                                               8     4      4      47
 ---------------------------------------------------------------------------------
 (18) _conv_raw_result                                     2     0      2    7144
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (19) _nanf                                                6     4      2      23
 ---------------------------------------------------------------------------------
 (19) _get_raw_result                                      1     0      1      22
 ---------------------------------------------------------------------------------
 (19) ___xxtofl                                           10     5      5     322
 ---------------------------------------------------------------------------------
 (21) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (21) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (1) _calc_model_data                                      0     0      0   11072
                            ___fladd
                            ___flmul
                            ___flsub
                          _lp_filter
                         _start_bsoc
                          _stop_bsoc
 ---------------------------------------------------------------------------------
 (2) _stop_bsoc                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _start_bsoc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lp_filter                                           10     4      6    5658
                            ___fladd
                            ___flmul
                            ___flsub
 ---------------------------------------------------------------------------------
 (21) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (22) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (21) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     243
                    _ADCC_Initialize
                  _CLKREF_Initialize
                    _DMA1_Initialize
                    _DMA2_Initialize
                 _EXT_INT_Initialize
                     _FVR_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM8_Initialize
                    _SPI1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0      44
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0      22
        _UART1_SetRxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      22
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0      22
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      0     0      0      22
           _TMR3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR3_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      23
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      44
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _INT1_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _DMA2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DMA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLKREF_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0      44
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADTIInterruptHandler                         3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADIInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _INT1_ISR                                            4     4      0     204
                                              6 COMRAM     4     4      0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (15) _INT1_CallBack                                       0     0      0     204
                   Absolute function *
       _INT1_DefaultInterruptHandler *
                     _switch_handler *
 ---------------------------------------------------------------------------------
 (16) _switch_handler                                      2     2      0     204
 ---------------------------------------------------------------------------------
 (16) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR5_ISR                                           15    15      0    7483
                                             10 COMRAM    15    15      0
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR5_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (15) _TMR5_CallBack                                       0     0      0    7393
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _TMR5_DefaultInterruptHandler                        0     0      0    7393
                     _check_day_time
 ---------------------------------------------------------------------------------
 (17) _check_day_time                                      4     4      0    7393
                             ___flge
                    _conv_raw_result
               _get_ac_charger_relay
               _set_ac_charger_relay
 ---------------------------------------------------------------------------------
 (18) _set_ac_charger_relay                                1     0      1      22
 ---------------------------------------------------------------------------------
 (17) _get_ac_charger_relay                                0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _conv_raw_result                                     2     0      2    7144
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (19) _nanf                                                6     4      2      23
 ---------------------------------------------------------------------------------
 (19) _get_raw_result                                      1     0      1      22
 ---------------------------------------------------------------------------------
 (19) ___xxtofl                                           10     5      5     322
 ---------------------------------------------------------------------------------
 (21) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (22) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (21) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (21) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (21) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR3_ISR                                           25    25      0   35546
                                              0 BANK0     25    25      0
                      _TMR3_CallBack
                    _TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR3_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (15) _TMR3_CallBack                                       0     0      0   35456
                   Absolute function *
       _TMR3_DefaultInterruptHandler *
                          _calc_bsoc *
 ---------------------------------------------------------------------------------
 (16) _calc_bsoc                                           2     2      0   35456
                         _StartTimer
                          ___asfladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                            ___fltol
                              _fabsf
               _get_ac_charger_relay
                  _port_data_dma_ptr
                 _send_port_data_dma
                            _sprintf
                             _strlen
 ---------------------------------------------------------------------------------
 (17) _sprintf                                            84    10     74   30137
                           _vfprintf
 ---------------------------------------------------------------------------------
 (18) _vfprintf                                            8     2      6   29759
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (19) _vfpfcnvrt                                          45    39      6   29367
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (20) _xtoa                                               31    20     11    2664
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (21) _toupper                                             4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (22) _islower                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _isalpha                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (20) _utoa                                               24    14     10    2371
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (21) ___lomod                                            17     1     16     159
 ---------------------------------------------------------------------------------
 (21) ___lodiv                                            25     9     16     162
 ---------------------------------------------------------------------------------
 (20) _strncmp                                            10     4      6     225
 ---------------------------------------------------------------------------------
 (20) _stoa                                               21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (20) _efgtoa                                             63    56      7   13777
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (20) _tolower                                             4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (21) _isupper                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _strcpy                                              8     4      4     137
 ---------------------------------------------------------------------------------
 (21) _floorf                                             14    10      4     338
 ---------------------------------------------------------------------------------
 (21) ___fpclassifyf                                      10     6      4     135
 ---------------------------------------------------------------------------------
 (21) ___fltol                                             6     2      4     229
 ---------------------------------------------------------------------------------
 (21) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (21) ___flneg                                             4     0      4      45
 ---------------------------------------------------------------------------------
 (21) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (21) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (21) ___fleq                                              8     0      8      90
 ---------------------------------------------------------------------------------
 (21) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (21) ___awmod                                             6     2      4     296
 ---------------------------------------------------------------------------------
 (21) ___awdiv                                             8     4      4     300
 ---------------------------------------------------------------------------------
 (20) _dtoa                                               28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (21) _abs                                                 2     0      2      66
 ---------------------------------------------------------------------------------
 (21) ___aomod                                            18     2     16     296
 ---------------------------------------------------------------------------------
 (21) ___aodiv                                            26    10     16     300
 ---------------------------------------------------------------------------------
 (20) _ctoa                                                7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (21) _pad                                                10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (17) _strlen                                              4     2      2      90
 ---------------------------------------------------------------------------------
 (22) _fputs                                               7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (23) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (24) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (25) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (20) _atoi                                               11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (21) _isspace                                             3     1      2      68
 ---------------------------------------------------------------------------------
 (20) _isdigit                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (17) _send_port_data_dma                                  2     0      2      45
 ---------------------------------------------------------------------------------
 (17) _port_data_dma_ptr                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _get_ac_charger_relay                                0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _fabsf                                               8     4      4      47
 ---------------------------------------------------------------------------------
 (17) ___asfladd                                           6     0      6    2028
                            ___fladd
 ---------------------------------------------------------------------------------
 (22) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (17) _StartTimer                                          3     0      3      44
 ---------------------------------------------------------------------------------
 (16) _TMR3_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (27) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (28) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _ADCC_ISR                                            0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                    _adc_int_handler *
 ---------------------------------------------------------------------------------
 (27) _adc_int_handler                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (27) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _ADCC_ThresholdISR                                   5     5      0      22
                                              0 COMRAM     5     5      0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                  _adc_int_t_handler *
 ---------------------------------------------------------------------------------
 (27) _adc_int_t_handler                                   0     0      0      22
      _ADCC_DischargeSampleCapacitor
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (28) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (28) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (27) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (27) _UART1_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _UART2_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (27) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _UART2_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (27) _UART2_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _TMR6_ISR                                            1     1      0      90
                                              5 COMRAM     1     1      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (27) _TMR6_CallBack                                       0     0      0      90
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (28) _TMR6_DefaultInterruptHandler                        1     1      0      90
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMASCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMADCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMAA_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMAOR_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 26
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
     _CLKREF_Initialize
     _DMA1_Initialize
     _DMA2_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
     _FVR_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM8_Initialize
     _SPI1_Initialize
     _TMR2_Initialize
     _TMR3_Initialize
       _TMR3_SetInterruptHandler
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetRxInterruptHandler
     _UART2_Initialize
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _StartTimer
   _TimerDone
   _WaitMs
     _StartTimer
     _TimerDone
   ___fladd
   ___flge
   ___fltol
   _calc_model_data
     ___fladd
     ___flmul
     ___flsub
       ___fladd
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
     _start_bsoc
     _stop_bsoc
   _calc_ror_data
     ___flge
     ___flsub
       ___fladd
     _conv_raw_result
       ___fladd
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _fabsf
   _check_adc_scan
   _check_enter_button
   _check_help
     _StartTimer
     _TimerDone
     _display_help
     _display_info
     _get_vterm_ptr
     _help_button
       _StartTimer
       _TimerDone
     _mode_lamp_bright
       _PWM8_LoadDutyValue
     _mode_lamp_dim
       _PWM8_LoadDutyValue
     _set_display_info
       _TimerDone
     _set_temp_display_help
     _set_vterm
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_done
             _wdtdelay
           _wait_lcd_set
       _wait_lcd_done
         _wdtdelay
     _vterm_dump
       _WaitMs
         _StartTimer
         _TimerDone
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_done
             _wdtdelay
           _wait_lcd_set
       _get_vterm_ptr
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _wait_lcd_done
         _wdtdelay
   _clear_adc_scan
   _clear_hid_pflags
   _conv_raw_result
     ___fladd
     ___fldiv
     ___flmul
     ___flsub
       ___fladd
     ___xxtofl
     _get_raw_result
     _nanf
   _convert_adc_data
     _conv_raw_result
       ___fladd
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
   _eaDogM_WriteCommand
     _send_lcd_cmd_dma
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _ringBufS_flush
         _memset
       _start_lcd
       _wait_lcd_done
         _wdtdelay
       _wait_lcd_set
   _esr_check
     _StartTimer
     _TimerDone
     ___fldiv
     ___flsub
       ___fladd
     _conv_raw_result
       ___fladd
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _fabsf
     _set_load_relay_one
     _set_load_relay_two
     _update_adc_result
       _StartTimer
       _TimerDone
       _check_adc_scan
       _clear_adc_scan
       _start_adc_scan
         _ADCC_DischargeSampleCapacitor
         _ADCC_SetADIInterruptHandler
         _ADCC_SetADTIInterruptHandler
         _ADCC_StartConversion
   _fabsf
   _get_raw_result
   _get_switch
   _get_vterm_ptr
   _hid_display
     _hid_input
       _get_switch
   _init_bsoc
     _TMR3_SetInterruptHandler
     _Volts_to_SOC
       ___fltol
       ___xxtofl
     ___fldiv
     ___flmul
     ___fltol
     ___xxtofl
     _conv_raw_result
       ___fladd
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
   _init_display
     _ringBufS_init
       _memset
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _init_port_dma
   _lp_filter
     ___fladd
     ___flmul
     ___flsub
       ___fladd
   _mode_lamp_dim
     _PWM8_LoadDutyValue
   _set_display_info
     _TimerDone
   _set_load_relay_one
   _set_load_relay_two
   _set_vterm
   _spinners
     _strlen
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
             ___fladd
           ___fltol
           ___fpclassifyf
           _floorf
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
             _ringBufS_put_dma
         _isdigit
         _isupper
         _stoa
           _fputc
             _putch
               _ringBufS_put_dma
           _strlen
         _strncmp
         _tolower
           _isupper
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _toupper
             _islower
   _srand
   _start_adc_scan
     _ADCC_DischargeSampleCapacitor
     _ADCC_SetADIInterruptHandler
     _ADCC_SetADTIInterruptHandler
     _ADCC_StartConversion
   _start_switch_handler
     _INT1_SetInterruptHandler
   _static_soc
   _update_lcd
     _eaDogM_WriteStringAtPos
       _eaDogM_WriteString
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _strlen
         _wait_lcd_set
       _send_lcd_cmd_dma
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _wait_lcd_done
           _wdtdelay
         _wait_lcd_set
     _wait_lcd_done
       _wdtdelay

 _INT1_ISR (ROOT)
   _INT1_CallBack
     Absolute function(Fake) *
     _INT1_DefaultInterruptHandler *
     _switch_handler *

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
       _check_day_time
         ___flge
         _conv_raw_result
           ___fladd
           ___fldiv
           ___flmul
           ___flsub
             ___fladd
           ___xxtofl
           _get_raw_result
           _nanf
         _get_ac_charger_relay
         _set_ac_charger_relay
   _TMR5_WriteTimer

 _TMR3_ISR (ROOT)
   _TMR3_CallBack
     Absolute function(Fake) *
     _TMR3_DefaultInterruptHandler *
     _calc_bsoc *
       _StartTimer
       ___asfladd
         ___fladd
       ___fldiv
       ___flge
       ___flmul
       ___flneg
       ___fltol
       _fabsf
       _get_ac_charger_relay
       _port_data_dma_ptr
       _send_port_data_dma
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _strlen
   _TMR3_WriteTimer

 _INT0_ISR (ROOT)
   _INT0_CallBack
     Absolute function(Fake) *
     _INT0_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_handler *

 _ADCC_ThresholdISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_t_handler *
     _ADCC_DischargeSampleCapacitor
     _ADCC_StartConversion

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *

 _UART2_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Receive_ISR *

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 _DMA1_DMASCNT_ISR (ROOT)

 _DMA1_DMADCNT_ISR (ROOT)

 _DMA1_DMAA_ISR (ROOT)

 _DMA1_DMAOR_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0     509      69       15.7%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      FF      13       99.6%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      C6      11       77.3%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      E7       9       90.2%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      EF       7       93.4%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     19      9E       5       98.8%
BITCOMRAM           3F      0       0       0        0.0%
COMRAM              3F     19      27       1       61.9%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     460      58        0.0%
DATA                 0      0     969       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Dec 27 20:22:20 2019

                     _SPI1_Exchange8bit BB7C                __end_of_set_display_info BBD6  
                                     _C 06FF                                       _D 0826  
                                     _H 00F7                                       _P 009E  
                                     _R 0100                                       _S 0254  
                                     _T FB37                                       _V 0130  
      __end_of_TMR5_SetInterruptHandler B8DE            __end_of_start_switch_handler BB5C  
                           __CFG_CP$OFF 000000                 __size_of_ringBufS_flush 0092  
                                    _bp FC3F                  __end_of_FVR_Initialize BDD6  
                        _check_day_time 8554                             __CFG_LVP$ON 000000  
                                   l169 BCB2                                     l807 BB8A  
                                   l673 B746                                     _GIE 01FE97  
                                   _abs B1CA                                     _pad 981E  
               __size_of_PMD_Initialize 0014                         _TMR2_Initialize BC5E  
                                   prod 003FF3                                     tosl 003FFD  
                                   wreg 003FE8                           _INT0_CallBack BAB0  
                     _update_adc_result B45A                           __CFG_BBEN$OFF 000000  
                 __size_of_Volts_to_SOC 011A                           _INT1_CallBack BA44  
                          __CFG_ZCD$OFF 000000                                    l1002 B396  
                                  l2042 4A92                                    l1340 190A  
                                  l1324 12A2                                    l2038 47E0  
                                  l1190 B3D6                                    l2302 6566  
                                  l1350 19AC                                    l1342 1910  
                                  l2143 987A                                    l3120 78EE  
                                  l1360 1BB2                                    l1361 1DDC  
                                  l3018 3B60                                    l2163 560E  
                                  l2243 0B1A                         _timer3ReloadVal 00C4  
                                  l2228 066A                                    l2084 7142  
                                  l2317 5E40                                    l1606 B51C  
                                  l1366 2354                                    l1447 AE72  
                                  l3081 8880                                    l2281 7230  
                                  l3058 838E                                    l1722 BBD2  
                                  l2199 123A                                    l2367 3336  
                                  l1591 A818                                    l1665 B4B0  
                                  l3089 B20A                                    l1682 9A3E  
                                  l1674 8034                                    l1835 854A  
                                  l1587 A512                                    l1675 8190  
                                  l3189 95E2                                    l2670 8E5A  
                  _ADCC_StartConversion BCCC                                    l2663 8D86  
                                  l3471 AA36                                    l1784 552A  
                                  l3456 7F78                                    l1882 9E3C  
                                  l2659 A254                                    l3484 A9B2  
                                  l1895 86EA                                    l1967 A8AC  
                                  l1976 9C4A                                    l2937 431C  
                                  l8001 7466                                    l2697 8CF8  
                                  l1899 86E2                                    l2949 41AC  
                                  l8101 4BD6                                    l8013 7500  
                                  l2982 5012                                    l8111 4C2C  
                                  l8007 74BA                                    l8201 4F52  
                                  l8113 4C5C                                    l8025 75D2  
                                  l8107 4C16                                    l8221 4FF6  
                                  l8213 4FBE                                    l8133 4CEE  
                                  l8125 4CD4                                    l8061 7A8A  
                                  l8053 79DE                                    l8045 7956  
                                  l8207 4F8E                                    l8151 4DB4  
                                  l8143 4D7E                                    l8119 4C9A  
                                  l8153 4DC6                                    l8161 4E1E  
                                  l8081 4AF8                                    l8331 3970  
                                  l8243 33D6                                    l8219 4FE6  
                                  l8091 4B4E                                    l8411 9020  
                                  l8325 3954                                    l8261 34A4  
                                  l8245 33DC                                    l8237 3396  
                                  l8501 8DD4                                    l8173 4E68  
                                  l8093 4B7E                                    l8405 9000  
                                  l8335 3996                                    l8263 34AA  
                                  l8255 3464                                    l8247 340C  
                                  l8191 4EDE                                    l8167 4E4C  
                                  l8159 4E1A                                    l8087 4B38  
                                  l8345 39E0                                    l8273 34FC  
                                  l8265 34DA                                    l7801 41E0  
                                  l8513 8E58                                    l8505 8E22  
                                  l8177 4E8E                                    l9241 7760  
                                  l9225 769E                                    l7617 A5E6  
                                  l8433 90FA                                    l8425 90C6  
                                  l8521 B0C8                                    l8363 3AA0  
                                  l7731 3F28                                    l7651 3C00  
                                  l8187 4ED8                                    l9251 7842  
                                  l9243 7778                                    l9235 7734  
                                  l9227 76C0                                    l7619 A608  
                                  l8531 8BE2                                    l8603 9340  
                                  l8349 39E6                                    l7805 41EC  
                                  l7733 3F3A                                    l7741 3F74  
                                  l7717 3E96                                    l7645 3BC0  
                                  l9261 78DE                                    l9245 779C  
                                  l8453 9750                                    l8445 9726  
                                  l7901 881E                                    l8359 3A5A  
                                  l7831 4278                                    l7815 4214  
                                  l7727 3F08                                    l7663 3C7E  
                                  l7655 3C16                                    l9247 77DA  
                                  l8471 9804                                    l8463 97D0  
                                  l7911 8878                                    l8377 3B0E  
                                  l8369 3ACA                                    l7841 42A4  
                                  l7761 4022                                    l7737 3F44  
                                  l7681 3D36                                    l7657 3C46  
                                  l8449 9738                                    l7905 8822  
                                  l8379 3B28                                    l7819 421A  
                                  l7675 3CF0                                    l9603 51A0  
                                  l8619 AFB0                                    l8483 A21E  
                                  l8555 8C90                                    l8547 8C64  
                                  l8571 8A5E                                    l7853 42FC  
                                  l7845 42BC                                    l7781 4136  
                                  l7765 402C                                    l7669 3CB0  
                                  l8557 8CA6                                    l8549 8C80  
                                  l9277 7DEA                                    l7847 42CC  
                                  l7791 4190                                    l7783 415C  
                                  l7759 4010                                    l7687 3D58  
                                  l7679 3D06                                    l8495 8D44  
                                  l9543 824A                                    l9535 81DE  
                                  l9615 52E0                                    l9607 52AE  
                                  l8399 8FEA                                    l8487 A252  
                                  l8479 A1DC                                    l7943 62D4  
                                  l9279 7E56                                    l8583 8B30  
                                  l7769 405E                                    l9545 8258  
                                  l9633 54F8                                    l9641 550A  
                                  l7929 AA26                                    l9555 82BA  
                                  l9547 826E                                    l9627 545C  
                                  l9619 537C                                    l7963 648A  
                                  l8595 9294                                    l9557 82D8  
                                  l9549 828C                                    l7957 63F2  
                                  l7799 41CE                                    l9567 830C  
                                  l9559 82EE                                    l7887 B1FA  
                                  l7967 64F8                                    l7959 6442  
                                  l9577 836E                                    l9593 504E  
                                  l7985 A9A2                                    l9763 861E  
                                  l9587 501E                                    l9659 B80E  
                                  l9851 B6D8                                    l9775 8690  
                                  STR_1 FF50                                    STR_2 FFA2  
                                  l9793 B526                                    STR_3 FFD0  
                                  STR_4 FF1D                                    l9859 AFEC  
                                  STR_5 FE16                                    STR_6 FE16  
                                  STR_7 FE16                                    STR_8 FF0B  
                                  STR_9 FD06                                    _LATA 003FBA  
                                  _LATB 003FBB                                    _LATC 003FBC  
                                  _LATD 003FBD                                    _LATE 003FBE  
                                  _LATF 003FBF                                    _T2PR 003FAB  
                                  u6010 A9E4                                    u6020 A9E6  
                                  u6110 6470                                    u6200 B68E  
                                  u7000 977C                                    u6040 626C  
                                  u6050 62B8                                    u5410 B65C  
                                  _T6PR 003F93                                    u6115 6466  
                                  u6220 7460                                    u7020 97F0  
                                  u5420 B65E                                    u6140 B28E  
                                  _PMD0 0039C0                                    u6045 6262  
                                  _PMD1 0039C1                                    u6310 765C  
                                  u6150 B290                                    _PMD2 0039C2  
                                  _PMD3 0039C3                                    u5520 3EBC  
                                  u6240 74B6                                    u6400 7AC2  
                                  u7120 B0C4                                    u7200 8CAE  
                                  u6160 A960                                    _PMD4 0039C4  
                                  _PMD5 0039C5                                    u5530 3EDC  
                                  u7130 8BC2                                    u6090 6398  
                                  u6170 A962                                    _PMD6 0039C6  
                                  u5531 3ED6                                    u6251 74C0  
                                  u6075 62F2                                    _PMD7 0039C7  
                                  u5380 A636                                    u6260 74FA  
                                  u6420 7B14                                    u6340 7950  
                                  u7060 A24E                                    u7220 8CD8  
                                  u7140 8BD6                                    u6076 62F8  
                                  u7300 92C0                                    u6077 6306  
                                  u6190 B68C                                    u6270 752C  
                                  u7150 8C10                                    u7135 8BB8  
                                  u6095 638E                                    u7231 8A1E  
                                  u5720 41F2                                    u5640 4054  
                                  u6600 4ED0                                    u6360 79A6  
                                  u7240 8A58                                    u7320 9378  
                                  u5810 4288                                    u5570 3F6C  
                                  u9010 8302                                    u6290 760A  
                                  u6370 79D8                                    u7250 8A8A  
                                  u5387 A628                                    u7155 8C06  
                                  u5740 420C                                    u5580 3F8C  
                                  u5548 3EDE                                    u7340 AF8C  
                                  u6380 7A0A                                    u5645 4044  
                                  u7350 AFAC                                    u5910 B1DE  
                                  u7270 8B68                                    u5575 3F5C  
                                  u5680 417E                                    u6640 4F2C  
                                  u6560 4E46                                    u5920 87A2  
                                  u6650 4F66                                    u9114 52C8  
                                  u7290 928E                                    u5850 B62C  
                                  u9115 52C2                                    u6820 39D8  
                                  u5780 4268                                    u6660 4FA2  
                                  u5860 B62E                                    u6645 4F1C  
                                  u5925 8798                                    u6750 34EA  
                                  u9134 5396                                    u9054 5038  
                                  u8510 7888                                    u9135 5390  
                                  u9055 5032                                    u9160 53C0  
                                  u8520 788A                                    u8600 7F1E  
                                  u5785 4258                                    u9154 53B8  
                                  u9074 5068                                    u6930 904C  
                                  u5970 8870                                    u8610 7F4C  
                                  u9155 53B2                                    u9075 5062  
                                  u6860 3A34                                    u5980 8872  
                                  u6765 367E                                    u5965 8852  
                                  u8605 7F18                                    u6870 3A6E  
                                  u9510 83AE                                    u9094 508A  
                                  u6950 90E6                                    u9415 ACBC  
                                  u6775 3746                                    u9095 5084  
                                  u9335 B2CA                                    u8607 7F0A  
                                  u9416 ACBE                                    u9408 AC8A  
                                  u6880 3AB4                                    u9600 BB26  
                                  u8560 7E84                                    u6865 3A24  
                                  u6785 390E                                    u8617 7F3E  
                                  u8490 7730                                    u9390 AC88  
                                  u9606 BB28                                    u9710 A852  
                                  u8567 7E76                                    u9465 BCF8  
                                  u9466 BCFA                                    _PLLR 01CEE0  
                                  u9475 BCE8                                    u9476 BCEA  
                                  u9740 A898                                    u9728 A854  
                                  u9758 A89A                                    _WPUA 003A41  
                                  _WPUB 003A51                                    _WPUC 003A61  
                                  _WPUD 003A71                                    _WPUE 003A81  
                                  _WPUF 003A91                        __end_of_ADCC_ISR B720  
                         __CFG_FCMEN$ON 000000                                    _dbuf 0297  
                                  _cp_h FC4F                                    _cp_l FC4B  
                                  _atoi 7684                                    _ctoa A8B0  
                                  _main 1244                                    _dtoa 5530  
                                  _nanf ADA6                                    _seed 00CF  
                                  _prec 003C                                    _nout 00C0  
                                  _spin FBC7                                    fsr0h 003FEA  
                                  fsr1h 003FE2                                    indf0 003FEF  
                                  fsr2h 003FDA                                    fsr0l 003FE9  
                                  indf1 003FE7                                    indf2 003FDF  
                                  fsr1l 003FE1                                    fsr2l 003FD9  
                                  _stoa 7146                                    btemp 0001  
                                  _utoa 6522                                    _xtoa 5DFC  
                __end_of_check_adc_scan BDBE                           ___fpclassifyf 86F4  
                                  prodh 003FF4                                    prodl 003FF3  
                                  start 00AE                         _timer5ReloadVal 00C8  
             __end_of_SPI1_Exchange8bit BB9A               __size_of_clear_hid_pflags 0024  
                       _TMR3_Initialize B182             __size_of_set_load_relay_one 0010  
           __size_of_set_load_relay_two 0010                           __CFG_CSWEN$ON 000000  
                     _UART1_rx_vect_isr B9A8                            ___param_bank 000000  
                __end_of_check_day_time 86F4                      ?_UART1_rx_vect_isr 0021  
                      __end_of_INT0_ISR BD66                        __end_of_INT1_ISR B45A  
        __size_of_OSCILLATOR_Initialize 0016                __end_of_ringBufS_put_dma A51A  
         __end_of_OSCILLATOR_Initialize BCB8                                   l11021 AA78  
                                 l10321 83FC                                   l10313 83D0  
                                 l10401 B47A                                   l11027 AA88  
                                 l12003 0C32                                   l10253 B04A  
                                 l10325 8410                                   l10431 912E  
                                 l12103 119A                                   l12015 0CBA  
                                 l12023 0D24                                   l12031 0D90  
                                 l10249 B018                                   l10601 BBEE  
                                 l10433 913E                                   l10451 91C4  
                                 l10435 9144                                   l10443 9160  
                                 l12051 0F3A                                   l12123 71B2  
                                 l13003 2060                                   l10613 B742  
                                 l10437 914A                                   l10445 918C  
                                 l12221 5E6A                                   l10541 96CC  
                                 l13013 21DC                                   l10439 9158  
                                 l10359 B4C6                                   l12039 0EA2  
                                 l12143 72A2                                   l12215 5E30  
                                 l12311 24B0                                   l10471 A866  
                                 l13015 2208                                   l12065 0FD6  
                                 l12161 73C4                                   l12153 735C  
                                 l12313 24C6                                   l10801 6EE0  
                                 l10537 9628                                   l13033 227E  
                                 l10459 923E                                   l12067 0FF0  
                                 l12147 72D2                                   l12139 7266  
                                 l12251 5FFC                                   l12235 5F06  
                                 l12227 5EA6                                   l12331 25F8  
                                 l13051 22E6                                   l13043 22BC  
                                 l12077 1092                                   l12157 7388  
                                 l12333 2632                                   l12309 2476  
                                 l10813 6F32                                   l13061 232A  
                                 l13029 225A                                   l10639 B37E  
                                 l12087 10E2                                   l12183 65B2  
                                 l12175 6556                                   l12351 27AC  
                                 l12335 2648                                   l11703 6C22  
                                 l10807 6F0A                                   l13071 2380  
                                 l10657 B3BE                                   l10753 89EA  
                                 l12193 67A8                                   l12417 2D2A  
                                 l12361 2844                                   l10833 6FB2  
                                 l10825 6F8C                                   l10817 6F3E  
                                 l10921 9B58                                   l10761 9E58  
                                 l13057 2304                                   l13049 22CE  
                                 l10915 5DEE                                   l11803 592A  
                                 l12275 616C                                   l12259 6082  
                                 l12427 2DD8                                   l11723 6DF8  
                                 l11715 6D4A                                   l12531 A572  
                                 l12621 4430                                   l11645 94F8  
                                 l11661 A6B0                                   l11821 00AC  
                                 l12461 312C                                   l12437 2EFA  
                                 l12373 2984                                   l11709 6CE0  
                                 l10933 9BB4                                   PRLOCK 0039EF  
                                 l12631 4682                                   l11671 9872  
                                 l11735 A8CE                                   l11807 5966  
                                 l11911 057C                                   l12447 2FB0  
                                 l10871 A2A2                                   l10791 6EA4  
                                 l10855 710A                                   l10943 9C24  
                                 l10767 9EFE                                   l12641 47F0  
                                 l12617 43DC                                   l10961 B354  
                                 l11657 A672                                   l11681 990A  
                                 l11673 9884                                   l11737 A8FA  
                                 l11761 55FE                                   l11913 058E  
                                 l11833 00F0                                   l11841 0146  
                                 l12481 32BE                                   l12393 2B96  
                                 l12385 2ADE                                   l12369 2930  
                                 l12545 A3F0                                   l10857 7132  
                                 l12627 4608                                   l11667 984A  
                                 l11907 0554                                   l11851 01EA  
                                 l12475 3264                                   l12491 32E2  
                                 l12547 A432                                   l10867 A264  
                                 l10787 6E90                                   l12645 4812  
                                 l12637 4748                                   l11677 98C0  
                                 l11773 5666                                   l11853 0216  
                                 l12485 32C2                                   l12397 2BCA  
                                 l10797 6ED4                                   l10789 6EA0  
                                 l12821 12AA                                   l11783 5878  
                                 l11687 A10E                                   l11927 05F6  
                                 l11919 0594                                   l11855 022C  
                                 l12823 12BC                                   l12815 1284  
                                 l12657 4A8A                                   l11769 5648  
                                 l11945 06B8                                   l11929 0602  
                                 l12577 9956                                   l12753 8004  
                                 l12921 16E2                                   l12817 128C  
                                 l11955 077A                                   l11891 0470  
                                 l11859 0258                                   l11965 0926  
                                 l11949 06F0                                   l11885 0396  
                                 l11869 02FC                                   l11877 032A  
                                 l12933 17BC                                   l11895 04D2  
                                 l12767 812C                                   l12943 1914  
                                 l11889 0406                                   l12945 1942  
                                 l12873 146E                                   l11987 0B12  
                                 l11979 0A48                                   l11989 0B34  
                                 l12965 199C                                   l12957 1976  
                                 l12975 19BE                                   l12987 1ABE  
                                 l12999 1FFE                         __end_of___aodiv 7684  
                          _Volts_to_SOC 95EC                                   _ADCAP 003EF5  
                                 _ADACT 003EFE                         __end_of___fladd 4326  
                                 _ADCLK 003EFF                         __end_of___aomod 7B38  
                                 _ADPCH 003EF1                         __end_of___fldiv 501C  
                                 _ADREF 003EFD                         __end_of___awdiv 9114  
                       __end_of___flneg B0F2                                   STR_10 FD33  
                                 STR_11 FD49                                   STR_12 FF2E  
                                 STR_21 FF61                                   STR_13 FF3F  
                                 STR_14 FF72                                   STR_30 FEE5  
                                 STR_22 FDEC                                   STR_23 FEBF  
                                 STR_31 FE4D                                   STR_15 FD5F  
                                 STR_40 FF83                                   STR_24 FEAC  
                                 STR_32 FE60                                   STR_16 FD1D  
                                 STR_41 FF83                                   STR_33 FE73  
                                 STR_25 FD9C                                   STR_17 FCBA  
                         __CFG_WDTE$OFF 000000                                   STR_42 FF61  
                                 STR_50 FFBD                                   STR_26 FE99  
                                 STR_34 FDB0                                   STR_18 FCD4  
                                 STR_51 FFBD                                   STR_43 FFFC  
                                 STR_19 FF83                                   STR_27 FE86  
                                 STR_35 FE00                                   STR_44 FFF9  
                                 STR_52 FF93                                   STR_28 FEF8  
                                 STR_36 FD88                         __end_of___awmod 981E  
                                 STR_53 FF93                                   STR_29 FED2  
                                 STR_37 FD74                                   STR_54 FF93  
                                 STR_70 FFDB                                   STR_46 FFB1  
                                 STR_38 FDC4                                   STR_71 FFE3  
                                 STR_47 FFC7                                   STR_39 FDD8  
                                 STR_55 FCEE                                   STR_64 FCB9  
                                 STR_80 FFF0                                   STR_48 FE27  
                                 _ADRPT 003EEC                                   STR_49 FE27  
                                 STR_57 FE3A                                   STR_65 FC53  
                                 STR_90 FFF3                                   STR_74 FFEA  
                                 STR_66 FFD7                                   STR_58 FE14  
                                 STR_83 FFED                                   STR_67 FFDF  
                                 STR_76 FFEA                                   STR_85 FFED  
                                 STR_93 FFF6                                   STR_78 FFF0  
                                 STR_95 FFF6                                   STR_88 FFF3  
                       __end_of___flmul 3B6A                                   STR_97 FFE7  
                                 STR_99 FFE7                         __end_of___flsub B256  
                       __end_of___fltol 8D02                                   u11100 02A8  
                                 u11020 00DA                                   u11200 05C6  
                                 u11050 0194                                   u11140 050E  
                                 u11060 0196                                   u12100 2C86  
                                 u11310 0A18                                   u11240 0648  
                                 u12040 2898                                   u12200 A552  
                                 u11410 0EE4                                   u11170 0562  
                                 u11090 02A6                         __end_of___lodiv 8B90  
                                 u11500 1170                                   u12060 2A0C  
                                 u12160 3004                                   u11610 73EA  
                                 u12090 2C84                                   u10810 6E6C  
                                 _U1P1H 003DED                                   u12180 31B4  
                                 u12420 817C                                   u12500 17EA  
                                 _U1P2H 003DEF                                   u10670 94EC  
                                 u10910 5634                                   u10750 A188  
                                 u11470 10B8                                   u11630 653C  
                                 u11710 5E16                                   u12430 817E  
                                 _U1P1L 003DEC                                   _U1P3H 003DF1  
                                 _T3CLK 003FA9                                   u10920 588C  
                                 u10840 5560                                   u12600 224A  
                                 _T2CON 003FAC                                   _U1P2L 003DEE  
                                 u10690 9568                                   u10850 5562  
                                 u11490 116E                                   u11570 72C8  
                                 u11810 607E                                   u12610 2264  
                                 _U1P3L 003DF0                                   u10931 58BC  
                                 u10940 58D2                                   u11580 730E  
                                 u11820 609E                                   u11740 5EFE  
                                 u12620 2276                                   u10941 58D0  
                                 u10757 A17A                                   u11661 67EA  
                                 u10950 58E6                                   u10870 55D2  
                                 u11670 6800                                   u11750 5F52  
                                 u12606 224C                                   _U2P1L 003DD4  
                                 u11671 67FE                                   u11831 60CE  
                                 u11815 6060                                   u10960 58EA  
                                 u11680 6814                                   u11840 60E4  
                                 u11760 5F54                                   u11920 250E  
                                 u12616 2266                                   u12480 1594  
                                 _T3CON 003FA6                                   _U2P2L 003DD6  
                                 u11841 60E2                                   u10890 55E4  
                                 u11690 6818                                   u11850 60F8  
                                 u11930 2510                                   u12626 2278  
                                 _U2P3L 003DD8                                   u11587 7300  
                                 u10980 5900                                   u11860 60FC  
                                 u11780 5FB2                                   u11940 2536  
                                 u11790 5FB4                                   _T5CLK 003F9D  
                       __end_of___lomod 939A                                   u11970 2690  
                                 u11980 2692                                   _T2HLT 003FAD  
                                 u11990 26B8                                   _T5CON 003F9A  
                                 _T6CON 003F94                          __CFG_DEBUG$OFF 000000  
                                 _T6HLT 003F95              _ADCC_ADTI_InterruptHandler 00AB  
                                 _T2TMR 003FAA                                   _U1UIR 003DF8  
                                 _T2RST 003FAF                                   _U1RXB 003DE8  
                                 _U2UIR 003DE0                                   _U2RXB 003DD0  
                                 _U2TXB 003DD2                                   _T6TMR 003F92  
                                 _T6RST 003F97                     ??_UART1_rx_vect_isr 0026  
                                 _ISRPR 0039F1                                   _OSCEN 0039DD  
                                 _TMR3H 003FA5                                   _TMR5H 003F99  
                                 _TMR3L 003FA4                                   _TMR5L 003F98  
             __end_of_update_adc_result B494                                   _TRISA 003FC2  
                                 _TRISB 003FC3                                   _TRISC 003FC4  
                                 _TRISD 003FC5                                   _TRISE 003FC6  
                                 _TRISF 003FC7                             _Default_ISR BDF0  
               __size_of_clear_adc_scan 0006       __size_of_TMR3_SetInterruptHandler 0028  
     __size_of_TMR6_SetInterruptHandler 0028                           __CFG_WRTB$OFF 000000  
                      __end_of_TMR3_ISR 8FC6                           __CFG_WRTC$OFF 000000  
                         __CFG_WRTD$OFF 000000                        __end_of_TMR5_ISR 9FF2  
                          _DMA1CON0bits 003BFC                        __end_of_TMR6_ISR BC46  
                          _DMA1CON1bits 003BFD                                   _fabsf A316  
                                 _flags 003E                __size_of_calc_model_data 044C  
                          _DMA2CON0bits 003BDC                            _DMA2CON1bits 003BDD  
          __end_of_get_ac_charger_relay BD56                                   _fputc 94C8  
            __size_of_send_lcd_cmd_long 0028                         __end_of_isalpha B29A  
                                 _fputs A662                         __end_of_isdigit B698  
                       __end_of_ivln2_h FC4B                      __CFG_MCLRE$EXTMCLR 000000  
                                 _srand B570                                   _width 003A  
                                 _putch BC10            __end_of_set_ac_charger_relay BD1E  
                       __end_of_islower B638                         __end_of_isspace AFC0  
              _INT1_SetInterruptHandler B906                         __end_of_isupper B668  
                                 pclath 003FFA                                   tablat 003FF5  
                                 ltemp0 0001                                   ltemp1 0005  
                                 ltemp2 0009                __size_of_DMA1_Initialize 006A  
                                 plusw1 003FE3                                   plusw2 003FDB  
                                 ttemp0 0001                                   ttemp1 0004  
                                 ttemp2 0007                                   ttemp3 000A  
                                 ttemp5 0002                                   ttemp6 0005  
                                 ttemp7 0009                                   status 003FD8  
   __end_of_UART1_SetRxInterruptHandler B88E             _UART1_SetRxInterruptHandler B866  
                                 wtemp0 0001                                   wtemp1 0003  
                                 wtemp2 0005                                   wtemp3 0007  
                                 wtemp4 0009                                   wtemp5 000B  
                                 wtemp8 0002                         __end_of_sprintf 9B4C  
                       __end_of_tolower AA40                         __end_of_strncmp 7F82  
                       __end_of_toupper A9BC               __size_of_DMA1_DMADCNT_ISR 000A  
             __end_of_UART1_rx_vect_isr B9D0                __size_of_SPI1_Initialize 0016  
                       _TMR5_Initialize B13A                   __end_of_ringBufS_init B7EE  
                       __initialization 9FF2                       _UART2_rx_vect_isr B9F8  
                          __end_of_cp_h FC53                            __end_of_cp_l FC4F  
                          __end_of_atoi 78F8                            __end_of_ctoa A938  
                          __end_of_main 2394                            __end_of_dtoa 59B0  
                          __end_of_nanf AE08                            __end_of_spin FC3F  
                          __end_of_stoa 7404                            __end_of_utoa 6862  
                          __end_of_xtoa 61B6                          __CFG_SAFEN$OFF 000000  
                    ?_UART2_rx_vect_isr 0021                 __end_of_TMR2_Initialize BC76  
              __size_of_DMA2_Initialize 005A              __end_of_check_enter_button B35C  
              _TMR5_SetInterruptHandler B8B6                           __activetblptr 000003  
             __size_of_DMA1_DMASCNT_ISR 000E                   _TMR3_InterruptHandler 00A2  
                     _port_data_dma_ptr BD80                      esr_check@esr_state 0040  
                   ??_UART2_rx_vect_isr 0026                                  INTCON0 003FD2  
  __size_of_UART2_SetRxInterruptHandler 0028                          __CFG_MVECEN$ON 000000  
                       _TMR6_Initialize B74C                         _PWM8_Initialize BC8C  
                      _UART1_Initialize B0F2                       _UART2_tx_vect_isr B9D0  
                    _UART2_Transmit_ISR B720                                  _ADACCU 003EEA  
                                _ADACQH 003EF4                                  _ADACQL 003EF3  
                                _ADCON0 003EF8                                  _ADCON1 003EF9  
                                _ADCON2 003EFA                                  _ADCON3 003EFB  
                        _start_adc_scan ACE0                                  _ADLTHH 003EDF  
                                _ADLTHL 003EDE                                  _ADPREH 003EF7  
                                _ADPREL 003EF6                                  _DMA1PR 0039F3  
                                _DMA2PR 0039F4                                  _ADSTAT 003EFC  
                                _ADUTHH 003EE1                                  _ADUTHL 003EE0  
                    _PWM8_LoadDutyValue B29A                                  _ANSELA 003A40  
                                _ANSELB 003A50                                  _ANSELC 003A60  
                                _ANSELD 003A70                                  _ANSELE 003A80  
                                _ANSELF 003A90                      ?_UART2_tx_vect_isr 0021  
                                _U1CON0 003DF2                                  _U1CON1 003DF3  
                                _U1CON2 003DF4                                  _T3GATE 003FA8  
                                _U1BRGH 003DF6                                  _U1FIFO 003DF7  
                                _T3GCON 003FA7                                  _U2CON0 003DDA  
                                _U2CON1 003DDB                                  _U1BRGL 003DF5  
                                _U2CON2 003DDC                                  _U2BRGH 003DDE  
                                _U2FIFO 003DDF                                  _U2BRGL 003DDD  
                                _T5GATE 003F9C                                  _T5GCON 003F9B  
                                _MAINPR 0039F2                                  _RC3PPS 003A13  
                                _RD1PPS 003A19                                  i1l1019 9FA2  
                                _RB6PPS 003A0E                                  i1l1207 8F2E  
                  _start_switch_handler BB3C                                  _RC5PPS 003A15  
                                _ODCONA 003A42                                  _ODCONB 003A52  
                                _ODCONC 003A62                                  _RC6PPS 003A16  
                                _ODCOND 003A72                                  _ODCONE 003A82  
                                _ODCONF 003A92                 __end_of_TMR3_Initialize B1CA  
                        __CFG_WDTCCS$SC 000000                                  _FVRCON 003EC1  
                      _mode_lamp_bright BD3A                                  _SCANPR 0039F7  
                                _IVTADH 00389E                                  _IVTADL 00389D  
                                _IVTADU 00389F            __size_of_eaDogM_WriteCommand 000E  
                                _OSCFRQ 0039DF                                  u924_20 85AA  
                                u919_25 BD18                                  u919_26 BD1A  
                                u945_20 B4D4                                  u945_26 B4D6  
                                u938_20 BD52                                  u961_28 9134  
                                u964_20 9154                                  u964_21 914E  
                  __size_of_hid_display 0102                                  u991_28 BA54  
                                u968_24 9234                                  u968_25 9230  
                                u997_48 BAE4                                  u989_48 BAC0  
                      __end_of___xxtofl 8398   __end_of_ADCC_DischargeSampleCapacitor BDB6  
__size_of_ADCC_DischargeSampleCapacitor 0008           _ADCC_DischargeSampleCapacitor BDAE  
              __end_of_send_lcd_cmd_dma AF6E                         _TMR3_WriteTimer B39C  
                   ??_UART2_tx_vect_isr 0026               __end_of_UART2_rx_vect_isr BA20  
            __size_of_SPI1_Exchange8bit 001E                  __size_of_DMA1_DMAA_ISR 000A  
                        __CFG_XINST$OFF 000000                       _CLKREF_Initialize BD76  
                      _UART2_Initialize AE08                                  _WaitMs B504  
                       _conv_raw_result 501C                            _CCPTMRS1bits 003F5F  
  __size_of_ADCC_SetADIInterruptHandler 0028                                  ___flge 8D02  
                                ___fleq A19A                       _ADCC_ThresholdISR AC10  
                        __CFG_STVREN$ON 000000                          _ringBufS_flush A78E  
                                _efgtoa 0000                                  _floorf 61B6  
                    ?_ADCC_ThresholdISR 0021                                  _memset 6B8A  
                  __size_of_help_button 0038                                  clear_0 A064  
                                clear_1 A078                                  clear_2 A08A  
                                clear_3 A096                                  clear_4 A0A2  
                                clear_5 A0AE               __end_of_port_data_dma_ptr BD8A  
                                _printf AD44                      _eaDogM_WriteString A51A  
                                _strcpy A0C6                               ?_ADCC_ISR 0021  
                                _strlen A5C0                      __size_of_TimerDone 0028  
                          __pdataBIGRAM 04FF                         _ADCC_Initialize ABA4  
                        _PMD_Initialize BCB8              __size_of_update_adc_result 003A  
             __end_of_UART2_tx_vect_isr B9F8                                  lltemp0 0001  
                                lltemp1 0009                                  lltemp2 0011  
                                lltemp3 0019                     ??_ADCC_ThresholdISR 0021  
                __end_of_start_adc_scan AD44                            __mediumconst FA66  
                                preinc2 003FDC                  __size_of_init_port_dma 0030  
                                tblptrh 003FF7                                  tblptrl 003FF6  
                                tblptru 003FF8                        __end_of_wdtdelay AEC2  
                      __end_of_spinners 9F0E                        __end_of_vfprintf A470  
                            _StartTimer B2DC                      __size_of___asfladd 0078  
         __size_of_INTERRUPT_Initialize 0066                 __end_of_TMR5_Initialize B182  
                     _SYSTEM_Initialize B060                              __accesstop 0060  
               __end_of__initialization A0C0                               ?_INT0_ISR 0021  
                             ?_INT1_ISR 0021                    __end_of_display_help BDCE  
                  __end_of_display_info BDC6               __end_of_CLKREF_Initialize BD80  
                         ___rparam_used 000001              __size_of_UART1_rx_vect_isr 0028  
                       _TMR5_WriteTimer B35C                   _set_temp_display_help BCFE  
                      _clear_hid_pflags BA20                   __end_of_TMR3_CallBack BAB0  
             __end_of_ADCC_ThresholdISR AC7A                      __size_of_calc_bsoc 077C  
                __end_of_ringBufS_flush A820                          __pcstackCOMRAM 0021  
                            ___inthi_sp 115C                              ___intlo_sp 18AE  
                          __pidataBANK0 BD1E                            __pidataBANK1 9C4E  
           __size_of_send_port_data_dma 0052                           __end_of_fabsf A3C4  
                             ?_TMR3_ISR 0021                               ?_TMR5_ISR 0021  
                             ?_TMR6_ISR 0021                          ivt0x8_undefint 00AC  
                         __end_of_fputc 95EC                           __end_of_fputs A6FA  
                  _get_ac_charger_relay BD48                           __end_of_srand B5A4  
                 __end_of_TMR5_CallBack BA8C                           __end_of_putch BC2A  
                  _set_ac_charger_relay BD0E                 __end_of_PWM8_Initialize BCA2  
               __end_of_TMR6_Initialize B776                       _adc_int_t_handler AA40  
                __end_of_PMD_Initialize BCCC                              __end_of_bp FC47  
                            ??_ADCC_ISR 0021                   __end_of_TMR6_CallBack BAF8  
           __size_of_EXT_INT_Initialize 0034                calc_bsoc@log_update_wait 0041  
                __size_of_calc_ror_data 0186                           _DMA1_DMAA_ISR BD98  
                 TMR3_ISR@CountCallBack 00C2                          _clear_adc_scan BDD6  
                    __size_of_hid_input 0090                  __size_of_mode_lamp_dim 0018  
              _UART2_RxInterruptHandler 00B7               __end_of_SYSTEM_Initialize B0AA  
                       __CFG_PR1WAY$OFF 000000                         __CFG_IVT1WAY$ON 000000  
               __end_of_TMR3_WriteTimer B3DC                              __pbssBANK0 0060  
                            __pbssBANK2 0200                              __pbssBANK3 0300  
                            __pbssBANK4 0400                              _check_help 7F82  
               __end_of_conv_raw_result 5530                      __size_of_esr_check 02D0  
                 _INT0_InterruptHandler 00BD                              ??_INT0_ISR 0021  
                            ??_INT1_ISR 0027                       __end_of_TimerDone B816  
                      _DMA1_DMADCNT_ISR BD8C                      __size_of_init_bsoc 022A  
            __size_of_UART2_rx_vect_isr 0028                                 IVTBASEH 003FD6  
                               IVTBASEL 003FD5                                 IVTBASEU 003FD7  
                    __size_of_lp_filter 01BC                           _init_port_dma B5D8  
                 __end_of_wait_lcd_done BC10        __end_of_TMR3_SetInterruptHandler B906  
                       __CFG_PPS1WAY$ON 000000        __end_of_TMR6_SetInterruptHandler B8B6  
                            ??_TMR3_ISR 00D7                 __end_of_ADCC_Initialize AC0E  
                            ??_TMR5_ISR 002B               __end_of_adc_int_t_handler AAC2  
                            ??_TMR6_ISR 0026                       __end_of___asfladd AB3A  
                               _ADFLTRH 003EE7                                 _ADFLTRL 003EE6  
                               _DMA1DSA 003BF0                                 _DMA2DSA 003BD0  
                               _DMA1DSZ 003BEE                                 _DMA2DSZ 003BCE  
                               _DMA1SSA 003BF9                                 _DMA2SSA 003BD9  
  __end_of_ADCC_SetADTIInterruptHandler B97E   __size_of_ADCC_SetADTIInterruptHandler 0028  
          _ADCC_SetADTIInterruptHandler B956                                 _DMA1SSZ 003BF7  
                               _DMA2SSZ 003BD7              __size_of_port_data_dma_ptr 000A  
                               _ADSTPTH 003EE5                                 _ADSTPTL 003EE4  
                     _UART1_Receive_ISR BBD6                                 _CLKRCLK 003CE6  
                               _CLKRCON 003CE5                  __end_of_clear_adc_scan BDDC  
                               u1000_28 BA78                                 u1029_44 AAA8  
                               u1230_20 4802                                 u1029_45 AAA2  
                        ?_DMA1_DMAA_ISR 0021                        _DMA1_DMASCNT_ISR BD68  
                               _U1ERRIE 003DFA                      __size_of_set_vterm 001E  
                               _U1ERRIR 003DF9                                 u1228_20 4738  
                               u1235_28 BA9C                                 _U2ERRIE 003DE2  
                               _U2ERRIR 003DE1                                 _INT0PPS 003AC0  
                   __CFG_PWRTS$PWRT_OFF 000000                                 _INT1PPS 003AC1  
                          ?_Default_ISR 0021              __size_of_UART2_tx_vect_isr 0028  
                               _U1RXPPS 003AE5                                 _U2RXPPS 003AE8  
                               _OSCCON1 0039D9                                 _OSCCON3 0039DB  
                               _IVTLOCK 003FD4                      __size_of_vfpfcnvrt 0FAC  
                               _SPI1CLK 003D1C                                 _SPI1RXB 003D10  
                     __end_of_calc_bsoc 4AA2                                 _SPI1TXB 003D11  
                               _OSCTUNE 0039DE                                 _PWM8DCH 003F61  
                               _PWM8DCL 003F60                                 _PWM8CON 003F62  
                               _SLRCONA 003A43                                 _SLRCONB 003A53  
                               _SLRCONC 003A63                                 _SLRCOND 003A73  
                               _SLRCONE 003A83                                 _SLRCONF 003A93  
                            _get_switch B6C6                      __size_of_start_lcd 0006  
               __end_of_TMR5_WriteTimer B39C                 __size_of_switch_handler 0146  
                    __size_of_stop_bsoc 0006              __end_of_set_load_relay_one BCFE  
            __end_of_set_load_relay_two BCEE       __size_of_INT0_SetInterruptHandler 0028  
            __size_of_CLKREF_Initialize 000A                           _calc_ror_data 888A  
               __size_of_DMA1_DMAOR_ISR 000A                                 __Hparam 0000  
            __size_of_ADCC_ThresholdISR 006A                           _mode_lamp_dim BC46  
                               __Lparam 0000                __end_of_UART1_Initialize B13A  
                     __end_of_hid_input A8B0                         __size_of_WaitMs 0036  
                       __size_of___flge 0162                         __size_of___fleq 00C4  
                               ___aodiv 7404                                 ___fladd 3B6A  
                               ___aomod 78F8                                 ___fldiv 4AA2  
                               ___awdiv 8FC6                                 ___flneg B0AA  
                               ___awmod 9706                                 ___flmul 3340  
                               ___flsub B210                                 ___fltol 8B90  
                               ___lodiv 8A10                                 ___lomod 925A  
             __end_of_UART1_Receive_ISR BBF4                         __size_of_efgtoa 1244  
                       __size_of_floorf 036C                    __end_of_init_display 9E28  
                               __pcinit 9FF2                __end_of_mode_lamp_bright BD48  
                       __size_of_memset 02EC                __size_of_adc_int_handler 0002  
                   _eaDogM_WriteCommand BD2C                                 __ramtop 2000  
                               __ptext0 1244                                 __ptext1 B3DC  
                               __ptext2 BB3C                                 __ptext3 B570  
                               __ptext4 9E28                                 __ptext5 B5D8  
                               __ptext6 9D3E                                 __ptext7 B776  
                               __ptext8 B79E                                 __ptext9 BB7C  
                     __end_of_esr_check 7146                       _UART2_Receive_ISR BB5C  
                       __size_of_printf 0062                         __CFG_WRTAPP$OFF 000000  
                       __size_of_strcpy 00D4                         __size_of_strlen 00A2  
                 _OSCILLATOR_Initialize BCA2                            __size_of_abs 0046  
                               us632999 766E                                 us643999 7B26  
                          __size_of_pad 0114                                 us733999 938A  
                     __end_of_init_bsoc 7D62                                 _isalpha B256  
                               _isdigit B668                                 us728999 8B7A  
                               _ivln2_h FC47                               _T3CONbits 003FA6  
                               _mode_sw 00CA                       __end_of_lp_filter 8554  
                               _islower B608                                 _isspace AF6E  
                       __CFG_WRTSAF$OFF 000000                               _T5CONbits 003F9A  
              __end_of_UART2_Initialize AE68                                 _isupper B638  
            __size_of_SYSTEM_Initialize 004A                                 _sprintf 9A42  
                               _tolower A9BC                   __size_of_display_help 0008  
                               _utctime 0096                   __size_of_display_info 0008  
                               _strncmp 7D62                                 _toupper A938  
                  end_of_initialization A0C0               __size_of_convert_adc_data 00B8  
                    _check_enter_button B31C                               i1u1244_20 8F24  
   __end_of_UART2_SetRxInterruptHandler B866             _UART2_SetRxInterruptHandler B83E  
                             i2u1040_48 BA0C                               i2u1032_48 B70C  
                             i2u1034_48 AC46                               i2u1034_49 AC5A  
                             i2u1036_48 B9BC                               i2u1038_48 B9E4  
               check_day_time@day_delay 0042                       __end_of_set_vterm BBB8  
                     __end_of_vfpfcnvrt 3340                               _SPI1TCNTL 003D12  
                               postdec0 003FED                                 postdec1 003FE5  
                               postdec2 003FDD                                 postinc0 003FEE  
                               postinc1 003FE6                                 postinc2 003FDE  
            __size_of_adc_int_t_handler 0082                     __size_of_StartTimer 0040  
                     __end_of_start_lcd BDE8               __end_of_UART2_Receive_ISR BB7C  
                        wdtdelay@dcount 009A                   __CFG_WDTCPS$WDTCPS_31 000000  
                       ??_DMA1_DMAA_ISR 0027                   _INT1_InterruptHandler 00BA  
                             _PORTBbits 003FCB                       __end_of_stop_bsoc BDEE  
              _TMR3_SetInterruptHandler B8DE                               _PORTFbits 003FCF  
              _TMR6_SetInterruptHandler B88E                            _display_help BDC6  
                 _TMR5_InterruptHandler 00A5                            _display_info BDBE  
  __size_of_UART2_SetTxInterruptHandler 0028                __end_of_clear_hid_pflags BA44  
                     __size_of_ADCC_ISR 002C     __end_of_ADCC_SetADIInterruptHandler B9A6  
           _ADCC_SetADIInterruptHandler B97E                              _update_lcd 9932  
                       _calc_model_data 59B0                  __size_of_ringBufS_init 0028  
                      __CFG_FEXTOSC$ECH 000000                              _static_soc B3DC  
                       _DMA1_Initialize AB3A                              _start_bsoc BB1A  
                       _SPI1_Initialize BC76                   __end_of_get_vterm_ptr B6C6  
                     __size_of_INT0_ISR 000E                       __size_of_INT1_ISR 003E  
                        __end_of_WaitMs B53A            __end_of_INTERRUPT_Initialize ACE0  
                            _vterm_dump 939A                          __end_of___flge 8E64  
                        __end_of___fleq A25E    __end_of_INT0_DefaultInterruptHandler BDFC  
 __size_of_INT0_DefaultInterruptHandler 0002            _INT0_DefaultInterruptHandler BDFA  
            __size_of_UART1_Receive_ISR 001E                         _DMA2_Initialize AEC2  
                         __pidataBIGRAM 6862                          __end_of_efgtoa 1244  
                     __size_of_TMR3_ISR 0162                       __size_of_TMR5_ISR 00E2  
                     __size_of_TMR6_ISR 001A                     __size_of_check_help 0212  
                        __end_of_floorf 6522             __size_of_UART2_Transmit_ISR 002C  
                            floorf@F524 007A                          __end_of_memset 6E76  
                        __end_of_printf ADA6                __end_of_DMA1_DMADCNT_ISR BD96  
           __size_of_PWM8_LoadDutyValue 0042                   __end_of_INT0_CallBack BAD4  
                        __end_of_strcpy A19A                          __end_of_strlen A662  
                   start_initialization 9FF2    __end_of_TMR5_DefaultInterruptHandler B504  
 __size_of_TMR5_DefaultInterruptHandler 0038            _TMR5_DefaultInterruptHandler B4CC  
       __size_of_PIN_MANAGER_Initialize 0094                             __end_of_abs B210  
                 __end_of_INT1_CallBack BA68               __size_of_set_display_info 001E  
                           __end_of_pad 9932                    __size_of_Default_ISR 0006  
                  __end_of_send_lcd_cmd B7C6                          _switch_handler 9114  
         __size_of_ADCC_StartConversion 0012                              ivt0x8_base 0008  
                         _uart1RxBuffer 006C                   __end_of___fpclassifyf 888A  
                         _uart2RxBuffer 0400                __end_of_DMA1_DMASCNT_ISR BD76  
                         _uart2TxBuffer 0300                          _DMA1_DMAOR_ISR BDA4  
                   __end_of_hid_display 9C4E              __end_of_send_port_data_dma B012  
                      __CFG_LPBOREN$OFF 000000                   __size_of_init_display 00EA  
           __size_of_eaDogM_WriteString 00A6                               _TimerDone B7EE  
                         _ringBufS_init B7C6                             __pdataBANK0 00F0  
                           __pdataBANK1 0100              __size_of_UART2_Receive_ISR 0020  
                   __size_of_get_switch 002C              __end_of_EXT_INT_Initialize B5D8  
               __end_of_calc_model_data 5DFC                     __end_of_help_button B4CC  
       __end_of_eaDogM_WriteStringAtPos B570                     __end_of_BVSOC_TABLE FB37  
                             ___asfladd AAC2                    calc_model_data@bcror 008E  
                           __pbssBIGRAM 0826                 __end_of_DMA1_Initialize ABA4  
                  calc_model_data@bvror 0092                             __pbssCOMRAM 003A  
      __end_of_INT0_SetInterruptHandler B956                           __pcstackBANK0 00D7  
              __size_of_TMR2_Initialize 0018                  __size_of_TMR3_CallBack 0024  
                __end_of_switch_handler 925A                       __size_of___xxtofl 0204  
               __end_of_SPI1_Initialize BC8C                _UART1_RxInterruptHandler 00B1  
              _UART2_TxInterruptHandler 00B4                               __end_of_T FBC7  
                      _convert_adc_data A25E                               _calc_bsoc 4326  
             __size_of_ringBufS_put_dma 00AA                            _init_display 9D3E  
                __end_of_DMA1_DMAOR_ISR BDAE                  __size_of_TMR5_CallBack 0024  
                 _TMR6_InterruptHandler 00A8                      calc_ror_data@bcror 0086  
                __size_of_TMR6_CallBack 0024                 __end_of_DMA2_Initialize AF1C  
                    calc_ror_data@bvror 008A                  _PIN_MANAGER_Initialize A6FA  
              __size_of_TMR3_Initialize 0048                    __end_of_wait_lcd_set BDE2  
                         __pmediumconst FA66                               __ptext100 59B0  
                             __ptext101 BDE8                               __ptext110 B83E  
                             __ptext102 BB1A                               __ptext111 B0F2  
                             __ptext103 8398                               __ptext120 BC76  
                             __ptext112 B866                               __ptext104 B210  
                             __ptext121 BC8C                               __ptext113 B74C  
                             __ptext105 3B6A                               __ptext130 AEC2  
                             __ptext122 BCB8                               __ptext114 B88E  
                             __ptext106 3340                               __ptext131 AB3A  
                             __ptext123 A6FA                               __ptext115 B13A  
                             __ptext107 B060                               __ptext140 9F10  
                             __ptext132 BD76                               __ptext124 BCA2  
                             __ptext116 B8B6                               __ptext108 AE08  
                             __ptext141 B35C                               __ptext133 ABA4  
                             __ptext125 AC7A                               __ptext117 B182  
                             __ptext109 B816                               __ptext150 BDF8  
                             __ptext142 BA68                               __ptext134 B956  
                             __ptext126 BDCE                               __ptext118 B8DE  
                             __ptext151 4326                               __ptext143 B4CC  
                             __ptext135 B97E                               __ptext127 B5A4  
                             __ptext119 BC5E                               __ptext160 AA40  
                             __ptext152 AFC0                               __ptext144 8554  
                             __ptext136 B41C                               __ptext128 B906  
                             __ptext161 BDFC                               __ptext153 BD80  
                             __ptext145 BD0E                               __ptext137 BA44  
                             __ptext129 B92E                               __ptext170 BC2C  
                             __ptext162 BDFE                               __ptext154 AAC2  
                             __ptext146 BD48                               __ptext138 BDF6  
                             __ptext171 BAD4                               __ptext163 AC10  
                             __ptext155 BD58                               __ptext147 8E64  
                             __ptext139 9114                               __ptext172 B012  
                             __ptext164 B9A8                               __ptext156 BAB0  
                             __ptext148 B39C                               __ptext173 BD68  
                             __ptext165 BBD6                               __ptext157 BDFA  
                             __ptext149 BA8C                               __ptext174 BD8C  
                             __ptext166 B9D0                               __ptext158 BDF0  
                             __ptext175 BD98                               __ptext167 B720  
                             __ptext159 B6F4                               __ptext176 BDA4  
                             __ptext168 B9F8                               __ptext177 0000  
                             __ptext169 BB5C                               _hid_input A820  
                    __end_of_StartTimer B31C                      _set_load_relay_one BCEE  
                    _set_load_relay_two BCDE                       __size_of_wdtdelay 005A  
                     __size_of_spinners 00E6                       __size_of_vfprintf 00AC  
                              _ADCC_ISR B6F4                  __CFG_BBSIZE$BBSIZE_512 000000  
                             fabsf@F463 007E                                _DMA1CON0 003BFC  
                              _DMA1CON1 003BFD                                _DMA1AIRQ 003BFE  
                              _DMA2CON0 003BDC                                _DMA2CON1 003BDD  
                              _DMA2AIRQ 003BDE                                _DMA1SIRQ 003BFF  
                              _DMA2SIRQ 003BDF                               _esr_check 6E76  
               __size_of_get_raw_result 0022                          __size_of_fabsf 00AE  
                             _init_bsoc 7B38                  __size_of_wait_lcd_done 001C  
                        __size_of_fputc 0124                                _T2CLKCON 003FAE  
                        __size_of_fputs 0098                               _lp_filter 8398  
                           _hid_display 9B4C                          __size_of_srand 0034  
                        __size_of_putch 001A                    _INTERRUPT_Initialize AC7A  
                              _T6CLKCON 003F96           __size_of_start_switch_handler 0020  
                       ?_DMA1_DMAOR_ISR 0021                                _INT0_ISR BD58  
                              _INT1_ISR B41C                                _LATCbits 003FBC  
                              _LATDbits 003FBD                                _LATEbits 003FBE  
                              _LATFbits 003FBF       __size_of_INT1_SetInterruptHandler 0028  
                              _IPR1bits 003981                                _IPR2bits 003982  
                              _PIE1bits 003991                                _IPR3bits 003983  
                              _PIE2bits 003992                                _IPR5bits 003985  
                              _PIE3bits 003993                               _tickCount 027D  
                              _IPR6bits 003986                                _PIE5bits 003995  
                              _IPR8bits 003988                                _PIE6bits 003996  
                              _IPR9bits 003989                                _PIE8bits 003998  
                   __CFG_BORV$VBOR_2P45 000000                                _PIE9bits 003999  
                             _ring_buf1 0383                               _ring_buf2 0340  
                              _PIR1bits 0039A1                                _PIR2bits 0039A2  
                              _SPI1BAUD 003D19                                _PIR4bits 0039A4  
                              _SPI1CON0 003D14                                _SPI1CON1 003D15  
                              _SPI1CON2 003D16                           _TMR3_CallBack BA8C  
                              _PIR5bits 0039A5                                _PIR6bits 0039A6  
                              _PIR8bits 0039A8                                _PIR9bits 0039A9  
              __size_of_TMR5_Initialize 0048                               _set_vterm BB9A  
                   __size_of_update_lcd 0110                             _help_button B494  
                              _TMR3_ISR 8E64                             _BVSOC_TABLE FA67  
                              _TMR5_ISR 9F10                                _TMR6_ISR BC2C  
                             _port_data 04FF                     __size_of_static_soc 003E  
                             _vfpfcnvrt 2394                            _SPI1INTFbits 003D1A  
                   __size_of_start_bsoc 0022                           _TMR5_CallBack BA68  
                            _ADCON0bits 003EF8                      __end_of_check_help 8194  
                             _start_lcd BDE2                 __size_of_FVR_Initialize 0008  
             __size_of_send_lcd_cmd_dma 0052                           _TMR6_CallBack BAD4  
                 __size_of_send_lcd_cmd 0028       __size_of_TMR5_SetInterruptHandler 0028  
                             _stop_bsoc BDE8                        _set_display_info BBB8  
              __size_of_PWM8_Initialize 0016                __size_of_TMR6_Initialize 002A  
                           _INTCON0bits 003FD2                               copy_data0 A006  
                             copy_data1 A02C                               copy_data2 A04E  
              _INT0_SetInterruptHandler B92E                     __size_of_vterm_dump 012E  
   __end_of_UART2_SetTxInterruptHandler B83E             _UART2_SetTxInterruptHandler B816  
                          _uart1RxCount 00CE                            _uart2RxCount 00CB  
                              __Hrparam 0000        __size_of_eaDogM_WriteStringAtPos 0036  
               __CFG_RSTOSC$EXTOSC_4PLL 000000                __size_of_TMR3_WriteTimer 0040  
                              __Lrparam 0000                 __size_of_check_adc_scan 0008  
                    __CFG_BOREN$SBORDIS 000000                __size_of_conv_raw_result 0514  
                         _wait_lcd_done BBF4                            _send_lcd_cmd B79E  
                      __size_of___aodiv 0280                        __size_of___fladd 07BC  
         __size_of_get_ac_charger_relay 000E                        __size_of___aomod 0240  
                       _adc_int_handler BDFE                        __size_of___fldiv 057A  
                      __size_of___awdiv 014E                        __size_of___flneg 0048  
                      __size_of___awmod 0118                        __size_of___flmul 082A  
                      __size_of___flsub 0046                        __size_of___fltol 0172  
                      __size_of___lodiv 0180                        __size_of___lomod 0140  
         __size_of_set_ac_charger_relay 0010                      __end_of_get_switch B6F2  
               __size_of_check_day_time 01A0                   __end_of_DMA1_DMAA_ISR BDA2  
                    ___fpclassifyf@F463 0082    __size_of_UART1_SetRxInterruptHandler 0028  
                       lp_filter@smooth 0200                                ___xxtofl 8194  
                     ?_DMA1_DMADCNT_ISR 0021             __size_of_check_enter_button 0040  
              __size_of_ADCC_Initialize 006A             __end_of_eaDogM_WriteCommand BD3A  
                      __size_of_isalpha 0044                        __size_of_isdigit 0030  
                              __pivt0x8 0008                        __size_of_islower 0030  
                      __size_of_isspace 0052                      ??_DMA1_DMADCNT_ISR 0027  
                              __ptext10 B7C6                                __ptext11 7B38  
                              __ptext20 BDAE                                __ptext12 95EC  
                              __ptext21 BDD6                                __ptext13 9B4C  
                              __ptext30 9A42                                __ptext22 BDB6  
                              __ptext14 A820                                __ptext31 B698  
                              __ptext23 BCDE                                __ptext15 B6C6  
                              __ptext40 BDE2                                __ptext32 B504  
                              __ptext24 BCEE                                __ptext16 6E76  
                              __ptext41 A78E                                __ptext33 9932  
                              __ptext25 BD2C                                __ptext17 B45A  
                              __ptext50 6522                                __ptext42 6B8A  
                              __ptext34 B53A                                __ptext26 A25E  
                              __ptext18 ACE0                                __ptext51 925A  
                              __ptext43 AD44                                __ptext35 AF1C  
                              __ptext27 BA20                                __ptext19 BCCC  
                              __ptext60 86F4                                __ptext52 8A10  
                              __ptext44 A3C4                                __ptext36 BBF4  
                              __ptext28 7F82                                __ptext61 8B90  
                              __ptext53 7D62                                __ptext45 2394  
                              __ptext37 AE68                                __ptext29 939A  
                              __ptext70 A8B0                                __ptext62 B0AA  
                              __ptext54 7146                                __ptext46 5DFC  
                              __ptext38 A51A                                __ptext71 981E  
                              __ptext63 A19A                                __ptext55 0000  
                              __ptext47 A938                                __ptext39 BDDC  
                              __ptext80 BB9A                                __ptext72 A5C0  
                              __ptext64 9706                                __ptext56 A9BC  
                              __ptext48 B608                                __ptext81 BCFE  
                              __ptext73 A662                                __ptext65 8FC6  
                              __ptext57 B638                                __ptext49 B256  
                              __ptext90 BDC6                                __ptext82 BBB8  
                              __ptext74 94C8                                __ptext66 5530  
                              __ptext58 A0C6                                __ptext91 B31C  
                              __ptext83 BC46                                __ptext75 BC10  
                              __ptext67 B1CA                                __ptext59 61B6  
                              __ptext92 888A                                __ptext84 BD3A  
                              __ptext76 A470                                __ptext68 78F8  
                              __ptext93 A316                                __ptext85 B29A  
                              __ptext77 7684                                __ptext69 7404  
                              __ptext94 501C                                __ptext86 B494  
                              __ptext78 AF6E                                __ptext95 ADA6  
                              __ptext87 B7EE                                __ptext79 B668  
                              __ptext96 BAF8                                __ptext88 B2DC  
                              __ptext97 8194                                __ptext89 BDBE  
                              __ptext98 4AA2                                __ptext99 8D02  
                      __size_of_isupper 0030                                us1152999 7158  
                      __size_of_sprintf 010A                        __size_of_tolower 0084  
                              us1083999 554A                                us1164999 6588  
                              us1173999 5E7C                        __size_of_strncmp 0220  
                      __size_of_toupper 0084                        _ringBufS_put_dma A470  
                  __end_of_Volts_to_SOC 9706                           __size_of_atoi 0274  
                         __size_of_ctoa 0088                           __size_of_main 1150  
                         __size_of_dtoa 0480                           __size_of_nanf 0062  
                 __size_of_wait_lcd_set 0006                           __size_of_stoa 02BE  
                         __size_of_utoa 0340                           __size_of_xtoa 03BA  
                  __CFG_WDTCWS$WDTCWS_7 000000                       ?_DMA1_DMASCNT_ISR 0021  
                 __end_of_init_port_dma B608                             _IVTLOCKbits 003FD4  
              __size_of_TMR5_WriteTimer 0040               _ADCC_ADI_InterruptHandler 00AE  
                             stoa@F1166 00F0                      ??_DMA1_DMASCNT_ISR 0027  
          __end_of_ADCC_StartConversion BCDE                                _spi_link 0060  
                              _wdtdelay AE68              __end_of_UART2_Transmit_ISR B74C  
                              _spinners 9E28                                _vfprintf A3C4  
              __end_of_convert_adc_data A316              __end_of_PWM8_LoadDutyValue B2DC  
  __end_of_TMR3_DefaultInterruptHandler BDFA   __size_of_TMR3_DefaultInterruptHandler 0002  
          _TMR3_DefaultInterruptHandler BDF8    __end_of_INT1_DefaultInterruptHandler BDF8  
 __size_of_INT1_DefaultInterruptHandler 0002            _INT1_DefaultInterruptHandler BDF6  
                    _send_port_data_dma AFC0                           ??_Default_ISR 0021  
                           _uart1RxHead 0047                  __size_of_get_vterm_ptr 002E  
                           _uart2RxHead 0043                             _uart1RxTail 0046  
                        _get_raw_result BAF8                             _uart2TxHead 00CD  
                           _uart2RxTail 00CC                               spinners@s 0074  
                           _uart2TxTail 0045                            _wait_lcd_set BDDC  
                    _EXT_INT_Initialize B5A4    __end_of_TMR6_DefaultInterruptHandler B060  
 __size_of_TMR6_DefaultInterruptHandler 004E            _TMR6_DefaultInterruptHandler B012  
  __end_of_ADCC_DefaultInterruptHandler BDFE   __size_of_ADCC_DefaultInterruptHandler 0002  
          _ADCC_DefaultInterruptHandler BDFC                                intlevel1 0000  
                              intlevel2 0000                       _send_lcd_cmd_long B776  
        __size_of_set_temp_display_help 0010           __end_of_set_temp_display_help BD0E  
                 __end_of_calc_ror_data 8A10                       __CFG_CLKOUTEN$OFF 000000  
            __end_of_eaDogM_WriteString A5C0                   __end_of_mode_lamp_dim BC5E  
               __end_of_adc_int_handler BE00                  __size_of_INT0_CallBack 0024  
                            _SPI1SCKPPS 003ADE                              _SPI1SDIPPS 003ADF  
                __size_of_INT1_CallBack 0024                      __end_of_update_lcd 9A42  
                _uart2TxBufferRemaining 0044                      __end_of_static_soc B41A  
                    __end_of_start_bsoc BB3C                          _FVR_Initialize BDCE  
                __end_of_get_raw_result BB1A                        _send_lcd_cmd_dma AF1C  
                __size_of___fpclassifyf 0196                   TMR5_ISR@CountCallBack 00C6  
      __end_of_INT1_SetInterruptHandler B92E               __size_of_UART1_Initialize 0048  
                      ??_DMA1_DMAOR_ISR 0027               __end_of_send_lcd_cmd_long B79E  
               __size_of_start_adc_scan 0064                     __end_of_Default_ISR BDF6  
        __end_of_PIN_MANAGER_Initialize A78E               __size_of_mode_lamp_bright 000E  
                    __end_of_vterm_dump 94C8                 _eaDogM_WriteStringAtPos B53A  
                         _get_vterm_ptr B698                          _check_adc_scan BDB6  
             __size_of_UART2_Initialize 0060  
